; ModuleID = '../bcout/drivers/base/power/runtime.llvm.bc'
source_filename = "drivers/base/power/runtime.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.lock_class_key = type {}
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.32, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.35 }
%union.anon.32 = type { %struct.anon.33 }
%struct.anon.33 = type { i64, i64 }
%union.anon.35 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.17, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon, [0 x i64] }
%struct.anon = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.36, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.36 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type opaque
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.user_namespace = type opaque
%struct.file = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.atomic_t = type { i32 }
%struct.uprobes_state = type {}
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.0 }
%union.anon.0 = type { %struct.anon.1 }
%struct.anon.1 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.cred = type opaque
%struct.key = type opaque
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type opaque
%struct.sighand_struct = type opaque
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.backing_dev_info = type opaque
%struct.io_context = type opaque
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.5 }
%struct.anon.5 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.9 }
%struct.anon.9 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.16, i32, [12 x i8] }
%union.anon.16 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.17 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.page = type { i64, %union.anon.18, %union.anon.31, %struct.atomic_t, [8 x i8] }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%struct.address_space = type opaque
%union.anon.31 = type { %struct.atomic_t }
%struct.vm_struct = type opaque
%struct.refcount_struct = type { %struct.atomic_t }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.pte_t = type { i64 }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.workqueue_struct = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.37, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.37 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.seq_file = type opaque
%struct.poll_table_struct = type opaque
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type { %struct.klist, %struct.klist_node, %struct.klist_node, %struct.klist_node, %struct.klist_node, %struct.list_head, %struct.device_driver*, i8*, %struct.device*, i8 }
%struct.klist = type { %struct.spinlock, %struct.list_head, void (%struct.klist_node*)*, void (%struct.klist_node*)* }
%struct.klist_node = type { i8*, %struct.list_head, %struct.kref }
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type { %struct.kset, %struct.kset*, %struct.list_head, %struct.mutex, %struct.kset*, %struct.klist, %struct.klist, %struct.blocking_notifier_head, i8, %struct.bus_type*, %struct.kset, %struct.class* }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.module = type opaque
%struct.of_device_id = type opaque
%struct.acpi_device_id = type opaque
%struct.driver_private = type { %struct.kobject, %struct.klist, %struct.klist_node, %struct.module_kobject*, %struct.device_driver* }
%struct.module_kobject = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type { %struct.device*, i32, i32, i8* }
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type { %struct.pm_qos_constraints, %struct.pm_qos_constraints, %struct.freq_constraints, %struct.pm_qos_flags, %struct.dev_pm_qos_request*, %struct.dev_pm_qos_request*, %struct.dev_pm_qos_request* }
%struct.pm_qos_constraints = type { %struct.plist_head, i32, i32, i32, i32, %struct.blocking_notifier_head* }
%struct.plist_head = type { %struct.list_head }
%struct.freq_constraints = type { %struct.pm_qos_constraints, %struct.blocking_notifier_head, %struct.pm_qos_constraints, %struct.blocking_notifier_head }
%struct.pm_qos_flags = type { %struct.list_head, i32 }
%struct.dev_pm_qos_request = type { i32, %union.anon.38, %struct.device* }
%union.anon.38 = type { %struct.freq_qos_request }
%struct.freq_qos_request = type { i32, %struct.plist_node, %struct.freq_constraints* }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type opaque
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.device_link = type { %struct.device*, %struct.list_head, %struct.device*, %struct.list_head, %struct.device, i32, i32, %struct.refcount_struct, %struct.kref, %struct.callback_head, i8 }

@pm_runtime_set_memalloc_noio.dev_hotplug_mutex = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @pm_runtime_set_memalloc_noio.dev_hotplug_mutex to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @pm_runtime_set_memalloc_noio.dev_hotplug_mutex to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !0
@.str = private unnamed_addr constant [77 x i8] c"runtime PM trying to activate child device %s but parent (%s) is not active\0A\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"Unbalanced %s!\0A\00", align 1
@__func__.pm_runtime_enable = private unnamed_addr constant [18 x i8] c"pm_runtime_enable\00", align 1
@.str.2 = private unnamed_addr constant [67 x i8] c"Enabling runtime PM for inactive device (%s) with active children\0A\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"drivers/base/power/runtime.c\00", align 1
@pm_runtime_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !2129
@.str.4 = private unnamed_addr constant [23 x i8] c"&dev->power.wait_queue\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@pm_wq = external dso_local global %struct.workqueue_struct*, align 8
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @pm_runtime_active_time(%struct.device* %dev) #0 !dbg !2138 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !2141, metadata !DIExpression()), !dbg !2142
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2143
  %call = call i64 @rpm_get_accounted_time(%struct.device* %0, i1 zeroext false) #7, !dbg !2144
  ret i64 %call, !dbg !2145
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @rpm_get_accounted_time(%struct.device* %dev, i1 zeroext %suspended) #0 !dbg !2146 {
entry:
  %lock.addr.i24 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i24, metadata !2149, metadata !DIExpression()), !dbg !2155
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !2157, metadata !DIExpression()), !dbg !2158
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2159, metadata !DIExpression()), !dbg !2164
  %dev.addr = alloca %struct.device*, align 8
  %suspended.addr = alloca i8, align 1
  %time = alloca i64, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !2171, metadata !DIExpression()), !dbg !2172
  %frombool = zext i1 %suspended to i8
  store i8 %frombool, i8* %suspended.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %suspended.addr, metadata !2173, metadata !DIExpression()), !dbg !2174
  call void @llvm.dbg.declare(metadata i64* %time, metadata !2175, metadata !DIExpression()), !dbg !2176
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !2177, metadata !DIExpression()), !dbg !2178
  br label %do.body, !dbg !2179

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !2180

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !2181, metadata !DIExpression()), !dbg !2183
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !2184, metadata !DIExpression()), !dbg !2183
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !2183
  %conv = zext i1 %cmp to i32, !dbg !2183
  store i32 1, i32* %tmp, align 4, !dbg !2183
  %0 = load i32, i32* %tmp, align 4, !dbg !2183
  br label %do.body2, !dbg !2185

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !2186

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !2187

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !2189, metadata !DIExpression()), !dbg !2192
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !2193, metadata !DIExpression()), !dbg !2192
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !2192
  %conv8 = zext i1 %cmp7 to i32, !dbg !2192
  store i32 1, i32* %tmp9, align 4, !dbg !2192
  %1 = load i32, i32* %tmp9, align 4, !dbg !2192
  %call = call i64 @arch_local_irq_save() #7, !dbg !2194
  store i64 %call, i64* %flags, align 8, !dbg !2194
  br label %do.end, !dbg !2194

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !2187

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !2186

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2195, !srcloc !2196
  br label %do.body12, !dbg !2195

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2197
  %power = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 11, !dbg !2197
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 3, !dbg !2197
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !2198
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !2199
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !2199
  br label %do.end14, !dbg !2197

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !2195

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !2186

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !2185

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !2180

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2200
  call void @update_pm_runtime_accounting(%struct.device* %5) #7, !dbg !2201
  %6 = load i8, i8* %suspended.addr, align 1, !dbg !2202
  %tobool = trunc i8 %6 to i1, !dbg !2202
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2202

cond.true:                                        ; preds = %do.end18
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2203
  %power20 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 11, !dbg !2204
  %suspended_time = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power20, i32 0, i32 23, !dbg !2205
  %8 = load i64, i64* %suspended_time, align 8, !dbg !2205
  br label %cond.end, !dbg !2202

cond.false:                                       ; preds = %do.end18
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2206
  %power21 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 11, !dbg !2207
  %active_time = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power21, i32 0, i32 22, !dbg !2208
  %10 = load i64, i64* %active_time, align 8, !dbg !2208
  br label %cond.end, !dbg !2202

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %8, %cond.true ], [ %10, %cond.false ], !dbg !2202
  store i64 %cond, i64* %time, align 8, !dbg !2209
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2210
  %power22 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 11, !dbg !2211
  %lock23 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power22, i32 0, i32 3, !dbg !2212
  %12 = load i64, i64* %flags, align 8, !dbg !2213
  store %struct.spinlock* %lock23, %struct.spinlock** %lock.addr.i24, align 8
  store i64 %12, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !47, metadata !2214, metadata !DIExpression()) #6, !dbg !2217
  call void @llvm.dbg.declare(metadata !47, metadata !2218, metadata !DIExpression()) #6, !dbg !2217
  store i32 1, i32* %tmp.i, align 4, !dbg !2217
  %13 = load i32, i32* %tmp.i, align 4, !dbg !2217
  call void @llvm.dbg.declare(metadata !47, metadata !2219, metadata !DIExpression()) #6, !dbg !2224
  call void @llvm.dbg.declare(metadata !47, metadata !2225, metadata !DIExpression()) #6, !dbg !2224
  store i32 1, i32* %tmp8.i, align 4, !dbg !2224
  %14 = load i32, i32* %tmp8.i, align 4, !dbg !2224
  %15 = load i64, i64* %flags.addr.i, align 8, !dbg !2226
  call void @arch_local_irq_restore(i64 %15) #8, !dbg !2226
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2227, !srcloc !2229
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i24, align 8, !dbg !2230
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !2230
  %rlock.i25 = bitcast %union.anon* %17 to %struct.raw_spinlock*, !dbg !2230
  %18 = load i64, i64* %time, align 8, !dbg !2232
  ret i64 %18, !dbg !2233
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @pm_runtime_suspended_time(%struct.device* %dev) #0 !dbg !2234 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !2235, metadata !DIExpression()), !dbg !2236
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2237
  %call = call i64 @rpm_get_accounted_time(%struct.device* %0, i1 zeroext true) #7, !dbg !2238
  ret i64 %call, !dbg !2239
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @pm_runtime_autosuspend_expiration(%struct.device* %dev) #0 !dbg !2240 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %autosuspend_delay = alloca i32, align 4
  %expires = alloca i64, align 8
  %tmp = alloca i32, align 4
  %tmp7 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !2241, metadata !DIExpression()), !dbg !2242
  call void @llvm.dbg.declare(metadata i32* %autosuspend_delay, metadata !2243, metadata !DIExpression()), !dbg !2244
  call void @llvm.dbg.declare(metadata i64* %expires, metadata !2245, metadata !DIExpression()), !dbg !2246
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2247
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !2249
  %use_autosuspend = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 15, !dbg !2250
  %bf.load = load i16, i16* %use_autosuspend, align 8, !dbg !2250
  %bf.lshr = lshr i16 %bf.load, 10, !dbg !2250
  %bf.clear = and i16 %bf.lshr, 1, !dbg !2250
  %bf.cast = zext i16 %bf.clear to i32, !dbg !2250
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !2247
  br i1 %tobool, label %if.end, label %if.then, !dbg !2251

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !2252
  br label %return, !dbg !2252

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !2253

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !2255

do.end:                                           ; preds = %do.body
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2253
  %power1 = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !2253
  %autosuspend_delay2 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 20, !dbg !2253
  %2 = load volatile i32, i32* %autosuspend_delay2, align 4, !dbg !2253
  store i32 %2, i32* %tmp, align 4, !dbg !2255
  %3 = load i32, i32* %tmp, align 4, !dbg !2253
  store i32 %3, i32* %autosuspend_delay, align 4, !dbg !2257
  %4 = load i32, i32* %autosuspend_delay, align 4, !dbg !2258
  %cmp = icmp slt i32 %4, 0, !dbg !2260
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !2261

if.then3:                                         ; preds = %do.end
  store i64 0, i64* %retval, align 8, !dbg !2262
  br label %return, !dbg !2262

if.end4:                                          ; preds = %do.end
  br label %do.body5, !dbg !2263

do.body5:                                         ; preds = %if.end4
  br label %do.end6, !dbg !2265

do.end6:                                          ; preds = %do.body5
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2263
  %power8 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 11, !dbg !2263
  %last_busy = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power8, i32 0, i32 21, !dbg !2263
  %6 = load volatile i64, i64* %last_busy, align 8, !dbg !2263
  store i64 %6, i64* %tmp7, align 8, !dbg !2265
  %7 = load i64, i64* %tmp7, align 8, !dbg !2263
  store i64 %7, i64* %expires, align 8, !dbg !2267
  %8 = load i32, i32* %autosuspend_delay, align 4, !dbg !2268
  %conv = sext i32 %8 to i64, !dbg !2269
  %mul = mul i64 %conv, 1000000, !dbg !2270
  %9 = load i64, i64* %expires, align 8, !dbg !2271
  %add = add i64 %9, %mul, !dbg !2271
  store i64 %add, i64* %expires, align 8, !dbg !2271
  %10 = load i64, i64* %expires, align 8, !dbg !2272
  %call = call i64 @ktime_get_mono_fast_ns() #7, !dbg !2274
  %cmp9 = icmp ugt i64 %10, %call, !dbg !2275
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !2276

if.then11:                                        ; preds = %do.end6
  %11 = load i64, i64* %expires, align 8, !dbg !2277
  store i64 %11, i64* %retval, align 8, !dbg !2278
  br label %return, !dbg !2278

if.end12:                                         ; preds = %do.end6
  store i64 0, i64* %retval, align 8, !dbg !2279
  br label %return, !dbg !2279

return:                                           ; preds = %if.end12, %if.then11, %if.then3, %if.then
  %12 = load i64, i64* %retval, align 8, !dbg !2280
  ret i64 %12, !dbg !2280
}

; Function Attrs: noredzone
declare dso_local i64 @ktime_get_mono_fast_ns() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pm_runtime_set_memalloc_noio(%struct.device* %dev, i1 zeroext %enable) #0 !dbg !2 {
entry:
  %lock.addr.i20 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i20, metadata !2281, metadata !DIExpression()), !dbg !2285
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2290, metadata !DIExpression()), !dbg !2292
  %dev.addr = alloca %struct.device*, align 8
  %enable.addr = alloca i8, align 1
  %enabled = alloca i8, align 1
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !2294, metadata !DIExpression()), !dbg !2295
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !2296, metadata !DIExpression()), !dbg !2297
  call void @mutex_lock(%struct.mutex* @pm_runtime_set_memalloc_noio.dev_hotplug_mutex) #7, !dbg !2298
  br label %for.cond, !dbg !2299

for.cond:                                         ; preds = %if.end19, %entry
  call void @llvm.dbg.declare(metadata i8* %enabled, metadata !2300, metadata !DIExpression()), !dbg !2301
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2302
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !2303
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 3, !dbg !2304
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #8, !dbg !2305
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2308, !srcloc !2310
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !2311
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !2311
  %rlock.i = bitcast %union.anon* %2 to %struct.raw_spinlock*, !dbg !2311
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2313
  %power1 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 11, !dbg !2314
  %memalloc_noio = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 15, !dbg !2315
  %bf.load = load i16, i16* %memalloc_noio, align 8, !dbg !2315
  %bf.lshr = lshr i16 %bf.load, 12, !dbg !2315
  %bf.clear = and i16 %bf.lshr, 1, !dbg !2315
  %bf.cast = zext i16 %bf.clear to i32, !dbg !2315
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !2313
  %frombool2 = zext i1 %tobool to i8, !dbg !2316
  store i8 %frombool2, i8* %enabled, align 1, !dbg !2316
  %4 = load i8, i8* %enable.addr, align 1, !dbg !2317
  %tobool3 = trunc i8 %4 to i1, !dbg !2317
  %conv = zext i1 %tobool3 to i32, !dbg !2317
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2318
  %power4 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 11, !dbg !2319
  %memalloc_noio5 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power4, i32 0, i32 15, !dbg !2320
  %6 = trunc i32 %conv to i16, !dbg !2321
  %bf.load6 = load i16, i16* %memalloc_noio5, align 8, !dbg !2321
  %bf.value = and i16 %6, 1, !dbg !2321
  %bf.shl = shl i16 %bf.value, 12, !dbg !2321
  %bf.clear7 = and i16 %bf.load6, -4097, !dbg !2321
  %bf.set = or i16 %bf.clear7, %bf.shl, !dbg !2321
  store i16 %bf.set, i16* %memalloc_noio5, align 8, !dbg !2321
  %bf.result.cast = zext i16 %bf.value to i32, !dbg !2321
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2322
  %power8 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 11, !dbg !2323
  %lock9 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power8, i32 0, i32 3, !dbg !2324
  store %struct.spinlock* %lock9, %struct.spinlock** %lock.addr.i20, align 8
  call void @arch_local_irq_enable() #8, !dbg !2325
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2328, !srcloc !2330
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i20, align 8, !dbg !2331
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !2331
  %rlock.i21 = bitcast %union.anon* %9 to %struct.raw_spinlock*, !dbg !2331
  %10 = load i8, i8* %enabled, align 1, !dbg !2333
  %tobool10 = trunc i8 %10 to i1, !dbg !2333
  br i1 %tobool10, label %land.lhs.true, label %if.end, !dbg !2335

land.lhs.true:                                    ; preds = %for.cond
  %11 = load i8, i8* %enable.addr, align 1, !dbg !2336
  %tobool12 = trunc i8 %11 to i1, !dbg !2336
  br i1 %tobool12, label %if.then, label %if.end, !dbg !2337

if.then:                                          ; preds = %land.lhs.true
  br label %for.end, !dbg !2338

if.end:                                           ; preds = %land.lhs.true, %for.cond
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2339
  %parent = getelementptr inbounds %struct.device, %struct.device* %12, i32 0, i32 1, !dbg !2340
  %13 = load %struct.device*, %struct.device** %parent, align 8, !dbg !2340
  store %struct.device* %13, %struct.device** %dev.addr, align 8, !dbg !2341
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2342
  %tobool14 = icmp ne %struct.device* %14, null, !dbg !2342
  br i1 %tobool14, label %lor.lhs.false, label %if.then18, !dbg !2344

lor.lhs.false:                                    ; preds = %if.end
  %15 = load i8, i8* %enable.addr, align 1, !dbg !2345
  %tobool15 = trunc i8 %15 to i1, !dbg !2345
  br i1 %tobool15, label %if.end19, label %land.lhs.true16, !dbg !2346

land.lhs.true16:                                  ; preds = %lor.lhs.false
  %16 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2347
  %call = call i32 @device_for_each_child(%struct.device* %16, i8* null, i32 (%struct.device*, i8*)* @dev_memalloc_noio) #7, !dbg !2348
  %tobool17 = icmp ne i32 %call, 0, !dbg !2348
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !2349

if.then18:                                        ; preds = %land.lhs.true16, %if.end
  br label %for.end, !dbg !2350

if.end19:                                         ; preds = %land.lhs.true16, %lor.lhs.false
  br label %for.cond, !dbg !2351, !llvm.loop !2352

for.end:                                          ; preds = %if.then18, %if.then
  call void @mutex_unlock(%struct.mutex* @pm_runtime_set_memalloc_noio.dev_hotplug_mutex) #7, !dbg !2355
  ret void, !dbg !2356
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noredzone
declare dso_local i32 @device_for_each_child(%struct.device*, i8*, i32 (%struct.device*, i8*)*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dev_memalloc_noio(%struct.device* %dev, i8* %data) #0 !dbg !2357 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !2360, metadata !DIExpression()), !dbg !2361
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2362, metadata !DIExpression()), !dbg !2363
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2364
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !2365
  %memalloc_noio = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 15, !dbg !2366
  %bf.load = load i16, i16* %memalloc_noio, align 8, !dbg !2366
  %bf.lshr = lshr i16 %bf.load, 12, !dbg !2366
  %bf.clear = and i16 %bf.lshr, 1, !dbg !2366
  %bf.cast = zext i16 %bf.clear to i32, !dbg !2366
  ret i32 %bf.cast, !dbg !2367
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pm_schedule_suspend(%struct.device* %dev, i32 %delay) #0 !dbg !2368 {
entry:
  %lock.addr.i32 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i32, metadata !2149, metadata !DIExpression()), !dbg !2371
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !2157, metadata !DIExpression()), !dbg !2373
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2159, metadata !DIExpression()), !dbg !2374
  %dev.addr = alloca %struct.device*, align 8
  %delay.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %expires = alloca i64, align 8
  %retval1 = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !2381, metadata !DIExpression()), !dbg !2382
  store i32 %delay, i32* %delay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %delay.addr, metadata !2383, metadata !DIExpression()), !dbg !2384
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !2385, metadata !DIExpression()), !dbg !2386
  call void @llvm.dbg.declare(metadata i64* %expires, metadata !2387, metadata !DIExpression()), !dbg !2388
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !2389, metadata !DIExpression()), !dbg !2390
  br label %do.body, !dbg !2391

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !2392

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !2393, metadata !DIExpression()), !dbg !2395
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !2396, metadata !DIExpression()), !dbg !2395
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !2395
  %conv = zext i1 %cmp to i32, !dbg !2395
  store i32 1, i32* %tmp, align 4, !dbg !2395
  %0 = load i32, i32* %tmp, align 4, !dbg !2395
  br label %do.body3, !dbg !2397

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !2398

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !2399

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !2401, metadata !DIExpression()), !dbg !2404
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !2405, metadata !DIExpression()), !dbg !2404
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !2404
  %conv9 = zext i1 %cmp8 to i32, !dbg !2404
  store i32 1, i32* %tmp10, align 4, !dbg !2404
  %1 = load i32, i32* %tmp10, align 4, !dbg !2404
  %call = call i64 @arch_local_irq_save() #7, !dbg !2406
  store i64 %call, i64* %flags, align 8, !dbg !2406
  br label %do.end, !dbg !2406

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !2399

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !2398

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2407, !srcloc !2408
  br label %do.body13, !dbg !2407

do.body13:                                        ; preds = %do.body12
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2409
  %power = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 11, !dbg !2409
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 3, !dbg !2409
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !2410
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !2411
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !2411
  br label %do.end15, !dbg !2409

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !2407

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !2398

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !2397

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !2392

do.end19:                                         ; preds = %do.end18
  %5 = load i32, i32* %delay.addr, align 4, !dbg !2412
  %tobool = icmp ne i32 %5, 0, !dbg !2412
  br i1 %tobool, label %if.end, label %if.then, !dbg !2414

if.then:                                          ; preds = %do.end19
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2415
  %call20 = call i32 @rpm_suspend(%struct.device* %6, i32 1) #7, !dbg !2417
  store i32 %call20, i32* %retval1, align 4, !dbg !2418
  br label %out, !dbg !2419

if.end:                                           ; preds = %do.end19
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2420
  %call21 = call i32 @rpm_check_suspend_allowed(%struct.device* %7) #7, !dbg !2421
  store i32 %call21, i32* %retval1, align 4, !dbg !2422
  %8 = load i32, i32* %retval1, align 4, !dbg !2423
  %tobool22 = icmp ne i32 %8, 0, !dbg !2423
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !2425

if.then23:                                        ; preds = %if.end
  br label %out, !dbg !2426

if.end24:                                         ; preds = %if.end
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2427
  call void @pm_runtime_cancel_pending(%struct.device* %9) #7, !dbg !2428
  %call25 = call i64 @ktime_get_mono_fast_ns() #7, !dbg !2429
  %10 = load i32, i32* %delay.addr, align 4, !dbg !2430
  %conv26 = zext i32 %10 to i64, !dbg !2431
  %mul = mul i64 %conv26, 1000000, !dbg !2432
  %add = add i64 %call25, %mul, !dbg !2433
  store i64 %add, i64* %expires, align 8, !dbg !2434
  %11 = load i64, i64* %expires, align 8, !dbg !2435
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2436
  %power27 = getelementptr inbounds %struct.device, %struct.device* %12, i32 0, i32 11, !dbg !2437
  %timer_expires = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power27, i32 0, i32 9, !dbg !2438
  store i64 %11, i64* %timer_expires, align 8, !dbg !2439
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2440
  %power28 = getelementptr inbounds %struct.device, %struct.device* %13, i32 0, i32 11, !dbg !2441
  %timer_autosuspends = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power28, i32 0, i32 15, !dbg !2442
  %bf.load = load i16, i16* %timer_autosuspends, align 8, !dbg !2443
  %bf.clear = and i16 %bf.load, -2049, !dbg !2443
  store i16 %bf.clear, i16* %timer_autosuspends, align 8, !dbg !2443
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2444
  %power29 = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 11, !dbg !2445
  %suspend_timer = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power29, i32 0, i32 8, !dbg !2446
  %15 = load i64, i64* %expires, align 8, !dbg !2447
  call void @hrtimer_start(%struct.hrtimer* %suspend_timer, i64 %15, i32 0) #7, !dbg !2448
  br label %out, !dbg !2448

out:                                              ; preds = %if.end24, %if.then23, %if.then
  call void @llvm.dbg.label(metadata !2449), !dbg !2450
  %16 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2451
  %power30 = getelementptr inbounds %struct.device, %struct.device* %16, i32 0, i32 11, !dbg !2452
  %lock31 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power30, i32 0, i32 3, !dbg !2453
  %17 = load i64, i64* %flags, align 8, !dbg !2454
  store %struct.spinlock* %lock31, %struct.spinlock** %lock.addr.i32, align 8
  store i64 %17, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !47, metadata !2214, metadata !DIExpression()) #6, !dbg !2455
  call void @llvm.dbg.declare(metadata !47, metadata !2218, metadata !DIExpression()) #6, !dbg !2455
  store i32 1, i32* %tmp.i, align 4, !dbg !2455
  %18 = load i32, i32* %tmp.i, align 4, !dbg !2455
  call void @llvm.dbg.declare(metadata !47, metadata !2219, metadata !DIExpression()) #6, !dbg !2456
  call void @llvm.dbg.declare(metadata !47, metadata !2225, metadata !DIExpression()) #6, !dbg !2456
  store i32 1, i32* %tmp8.i, align 4, !dbg !2456
  %19 = load i32, i32* %tmp8.i, align 4, !dbg !2456
  %20 = load i64, i64* %flags.addr.i, align 8, !dbg !2457
  call void @arch_local_irq_restore(i64 %20) #8, !dbg !2457
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2458, !srcloc !2229
  %21 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i32, align 8, !dbg !2459
  %22 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %21, i32 0, i32 0, !dbg !2459
  %rlock.i33 = bitcast %union.anon* %22 to %struct.raw_spinlock*, !dbg !2459
  %23 = load i32, i32* %retval1, align 4, !dbg !2460
  ret i32 %23, !dbg !2461
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !2462 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !2466, metadata !DIExpression()), !dbg !2467
  %call = call i64 @arch_local_save_flags() #7, !dbg !2468
  store i64 %call, i64* %f, align 8, !dbg !2469
  call void @arch_local_irq_disable() #7, !dbg !2470
  %0 = load i64, i64* %f, align 8, !dbg !2471
  ret i64 %0, !dbg !2472
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rpm_suspend(%struct.device* %dev, i32 %rpmflags) #0 !dbg !2473 {
entry:
  %lock.addr.i189 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i189, metadata !2476, metadata !DIExpression()), !dbg !2478
  %lock.addr.i187 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i187, metadata !2484, metadata !DIExpression()), !dbg !2486
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !2488, metadata !DIExpression()), !dbg !2494
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !2496, metadata !DIExpression()), !dbg !2498
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !2499, metadata !DIExpression()), !dbg !2501
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %lock.addr.i185 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i185, metadata !2281, metadata !DIExpression()), !dbg !2502
  %lock.addr.i183 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i183, metadata !2290, metadata !DIExpression()), !dbg !2507
  %v.addr.i5.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i5.i.i.i, metadata !2509, metadata !DIExpression()), !dbg !2515
  %old.addr.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %old.addr.i.i.i.i, metadata !2531, metadata !DIExpression()), !dbg !2532
  %new.addr.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i.i.i.i, metadata !2533, metadata !DIExpression()), !dbg !2534
  %success.i.i.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %success.i.i.i.i, metadata !2535, metadata !DIExpression()), !dbg !2537
  %_old.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %_old.i.i.i.i, metadata !2538, metadata !DIExpression()), !dbg !2537
  %__old.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__old.i.i.i.i, metadata !2539, metadata !DIExpression()), !dbg !2537
  %__new.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__new.i.i.i.i, metadata !2540, metadata !DIExpression()), !dbg !2537
  %__ptr.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %__ptr.i.i.i.i, metadata !2541, metadata !DIExpression()), !dbg !2537
  %tmp.i.i.i.i = alloca i64, align 8
  %v.addr.i.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i.i, metadata !2542, metadata !DIExpression()), !dbg !2548
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !2550, metadata !DIExpression()), !dbg !2551
  %a.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i.i, metadata !2552, metadata !DIExpression()), !dbg !2553
  %u.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i.i.i, metadata !2554, metadata !DIExpression()), !dbg !2555
  %c.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i.i.i, metadata !2556, metadata !DIExpression()), !dbg !2557
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !2558, metadata !DIExpression()), !dbg !2559
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !2560, metadata !DIExpression()), !dbg !2561
  %u.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i.i, metadata !2562, metadata !DIExpression()), !dbg !2563
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !2564, metadata !DIExpression()), !dbg !2572
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !2574, metadata !DIExpression()), !dbg !2575
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !2576, metadata !DIExpression()), !dbg !2577
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2578, metadata !DIExpression()), !dbg !2579
  %u.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i, metadata !2580, metadata !DIExpression()), !dbg !2581
  %lock.addr.i181 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i181, metadata !2484, metadata !DIExpression()), !dbg !2582
  %lock.addr.i179 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i179, metadata !2476, metadata !DIExpression()), !dbg !2586
  %lock.addr.i177 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i177, metadata !2484, metadata !DIExpression()), !dbg !2588
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2476, metadata !DIExpression()), !dbg !2590
  %dev.addr = alloca %struct.device*, align 8
  %rpmflags.addr = alloca i32, align 4
  %callback = alloca i32 (%struct.device*)*, align 8
  %parent = alloca %struct.device*, align 8
  %retval1 = alloca i32, align 4
  %expires = alloca i64, align 8
  %slack = alloca i64, align 8
  %tmp = alloca i32, align 4
  %wait = alloca %struct.wait_queue_entry, align 8
  %tmp155 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !2592, metadata !DIExpression()), !dbg !2593
  store i32 %rpmflags, i32* %rpmflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rpmflags.addr, metadata !2594, metadata !DIExpression()), !dbg !2595
  call void @llvm.dbg.declare(metadata i32 (%struct.device*)** %callback, metadata !2596, metadata !DIExpression()), !dbg !2597
  call void @llvm.dbg.declare(metadata %struct.device** %parent, metadata !2598, metadata !DIExpression()), !dbg !2599
  store %struct.device* null, %struct.device** %parent, align 8, !dbg !2599
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !2600, metadata !DIExpression()), !dbg !2601
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2602
  %1 = load i32, i32* %rpmflags.addr, align 4, !dbg !2603
  call void @trace_rpm_suspend_rcuidle(%struct.device* %0, i32 %1) #7, !dbg !2604
  br label %repeat, !dbg !2604

repeat:                                           ; preds = %if.then174, %for.end, %if.then52, %entry
  call void @llvm.dbg.label(metadata !2605), !dbg !2606
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2607
  %call = call i32 @rpm_check_suspend_allowed(%struct.device* %2) #7, !dbg !2608
  store i32 %call, i32* %retval1, align 4, !dbg !2609
  %3 = load i32, i32* %retval1, align 4, !dbg !2610
  %cmp = icmp slt i32 %3, 0, !dbg !2612
  br i1 %cmp, label %if.then, label %if.end, !dbg !2613

if.then:                                          ; preds = %repeat
  br label %out, !dbg !2614

if.end:                                           ; preds = %repeat
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2615
  %power = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 11, !dbg !2617
  %runtime_status = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 18, !dbg !2618
  %5 = load i32, i32* %runtime_status, align 4, !dbg !2618
  %cmp2 = icmp eq i32 %5, 1, !dbg !2619
  br i1 %cmp2, label %land.lhs.true, label %if.end4, !dbg !2620

land.lhs.true:                                    ; preds = %if.end
  %6 = load i32, i32* %rpmflags.addr, align 4, !dbg !2621
  %and = and i32 %6, 1, !dbg !2622
  %tobool = icmp ne i32 %and, 0, !dbg !2622
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !2623

if.then3:                                         ; preds = %land.lhs.true
  store i32 -11, i32* %retval1, align 4, !dbg !2624
  br label %if.end4, !dbg !2625

if.end4:                                          ; preds = %if.then3, %land.lhs.true, %if.end
  %7 = load i32, i32* %retval1, align 4, !dbg !2626
  %tobool5 = icmp ne i32 %7, 0, !dbg !2626
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !2628

if.then6:                                         ; preds = %if.end4
  br label %out, !dbg !2629

if.end7:                                          ; preds = %if.end4
  %8 = load i32, i32* %rpmflags.addr, align 4, !dbg !2630
  %and8 = and i32 %8, 8, !dbg !2632
  %tobool9 = icmp ne i32 %and8, 0, !dbg !2632
  br i1 %tobool9, label %land.lhs.true10, label %if.end34, !dbg !2633

land.lhs.true10:                                  ; preds = %if.end7
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2634
  %power11 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 11, !dbg !2635
  %runtime_status12 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power11, i32 0, i32 18, !dbg !2636
  %10 = load i32, i32* %runtime_status12, align 4, !dbg !2636
  %cmp13 = icmp ne i32 %10, 3, !dbg !2637
  br i1 %cmp13, label %if.then14, label %if.end34, !dbg !2638

if.then14:                                        ; preds = %land.lhs.true10
  call void @llvm.dbg.declare(metadata i64* %expires, metadata !2639, metadata !DIExpression()), !dbg !2641
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2642
  %call15 = call i64 @pm_runtime_autosuspend_expiration(%struct.device* %11) #7, !dbg !2643
  store i64 %call15, i64* %expires, align 8, !dbg !2641
  %12 = load i64, i64* %expires, align 8, !dbg !2644
  %cmp16 = icmp ne i64 %12, 0, !dbg !2646
  br i1 %cmp16, label %if.then17, label %if.end33, !dbg !2647

if.then17:                                        ; preds = %if.then14
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2648
  %power18 = getelementptr inbounds %struct.device, %struct.device* %13, i32 0, i32 11, !dbg !2650
  %request = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power18, i32 0, i32 17, !dbg !2651
  store i32 0, i32* %request, align 8, !dbg !2652
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2653
  %power19 = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 11, !dbg !2655
  %timer_expires = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power19, i32 0, i32 9, !dbg !2656
  %15 = load i64, i64* %timer_expires, align 8, !dbg !2656
  %tobool20 = icmp ne i64 %15, 0, !dbg !2653
  br i1 %tobool20, label %land.lhs.true21, label %if.then25, !dbg !2657

land.lhs.true21:                                  ; preds = %if.then17
  %16 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2658
  %power22 = getelementptr inbounds %struct.device, %struct.device* %16, i32 0, i32 11, !dbg !2659
  %timer_expires23 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power22, i32 0, i32 9, !dbg !2660
  %17 = load i64, i64* %timer_expires23, align 8, !dbg !2660
  %18 = load i64, i64* %expires, align 8, !dbg !2661
  %cmp24 = icmp ule i64 %17, %18, !dbg !2662
  br i1 %cmp24, label %if.end31, label %if.then25, !dbg !2663

if.then25:                                        ; preds = %land.lhs.true21, %if.then17
  call void @llvm.dbg.declare(metadata i64* %slack, metadata !2664, metadata !DIExpression()), !dbg !2666
  br label %do.body, !dbg !2667

do.body:                                          ; preds = %if.then25
  br label %do.end, !dbg !2669

do.end:                                           ; preds = %do.body
  %19 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2667
  %power26 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 11, !dbg !2667
  %autosuspend_delay = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power26, i32 0, i32 20, !dbg !2667
  %20 = load volatile i32, i32* %autosuspend_delay, align 4, !dbg !2667
  store i32 %20, i32* %tmp, align 4, !dbg !2669
  %21 = load i32, i32* %tmp, align 4, !dbg !2667
  %conv = sext i32 %21 to i64, !dbg !2671
  %mul = mul i64 %conv, 250000, !dbg !2672
  store i64 %mul, i64* %slack, align 8, !dbg !2666
  %22 = load i64, i64* %expires, align 8, !dbg !2673
  %23 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2674
  %power27 = getelementptr inbounds %struct.device, %struct.device* %23, i32 0, i32 11, !dbg !2675
  %timer_expires28 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power27, i32 0, i32 9, !dbg !2676
  store i64 %22, i64* %timer_expires28, align 8, !dbg !2677
  %24 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2678
  %power29 = getelementptr inbounds %struct.device, %struct.device* %24, i32 0, i32 11, !dbg !2679
  %suspend_timer = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power29, i32 0, i32 8, !dbg !2680
  %25 = load i64, i64* %expires, align 8, !dbg !2681
  %call30 = call i64 @ns_to_ktime(i64 %25) #7, !dbg !2682
  %26 = load i64, i64* %slack, align 8, !dbg !2683
  call void @hrtimer_start_range_ns(%struct.hrtimer* %suspend_timer, i64 %call30, i64 %26, i32 0) #7, !dbg !2684
  br label %if.end31, !dbg !2685

if.end31:                                         ; preds = %do.end, %land.lhs.true21
  %27 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2686
  %power32 = getelementptr inbounds %struct.device, %struct.device* %27, i32 0, i32 11, !dbg !2687
  %timer_autosuspends = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power32, i32 0, i32 15, !dbg !2688
  %bf.load = load i16, i16* %timer_autosuspends, align 8, !dbg !2689
  %bf.clear = and i16 %bf.load, -2049, !dbg !2689
  %bf.set = or i16 %bf.clear, 2048, !dbg !2689
  store i16 %bf.set, i16* %timer_autosuspends, align 8, !dbg !2689
  br label %out, !dbg !2690

if.end33:                                         ; preds = %if.then14
  br label %if.end34, !dbg !2691

if.end34:                                         ; preds = %if.end33, %land.lhs.true10, %if.end7
  %28 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2692
  call void @pm_runtime_cancel_pending(%struct.device* %28) #7, !dbg !2693
  %29 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2694
  %power35 = getelementptr inbounds %struct.device, %struct.device* %29, i32 0, i32 11, !dbg !2695
  %runtime_status36 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power35, i32 0, i32 18, !dbg !2696
  %30 = load i32, i32* %runtime_status36, align 4, !dbg !2696
  %cmp37 = icmp eq i32 %30, 3, !dbg !2697
  br i1 %cmp37, label %if.then39, label %if.end70, !dbg !2698

if.then39:                                        ; preds = %if.end34
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %wait, metadata !2699, metadata !DIExpression()), !dbg !2711
  %flags = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 0, !dbg !2711
  store i32 0, i32* %flags, align 8, !dbg !2711
  %private = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 1, !dbg !2711
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !2498
  %31 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !2498
  %32 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #9, !dbg !2501, !srcloc !2712
  store i64 %32, i64* %pfo_val__.i, align 8, !dbg !2501
  %33 = load i64, i64* %pfo_val__.i, align 8, !dbg !2501
  %34 = inttoptr i64 %33 to %struct.task_struct*, !dbg !2501
  store %struct.task_struct* %34, %struct.task_struct** %tmp.i, align 8, !dbg !2501
  %35 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !2501
  store %struct.task_struct* %35, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !2494
  %36 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !2494
  store %struct.task_struct* %36, %struct.task_struct** %tmp1.i, align 8, !dbg !2494
  %37 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !2494
  %38 = bitcast %struct.task_struct* %37 to i8*, !dbg !2711
  store i8* %38, i8** %private, align 8, !dbg !2711
  %func = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 2, !dbg !2711
  store i32 (%struct.wait_queue_entry*, i32, i32, i8*)* @autoremove_wake_function, i32 (%struct.wait_queue_entry*, i32, i32, i8*)** %func, align 8, !dbg !2711
  %entry41 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 3, !dbg !2711
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry41, i32 0, i32 0, !dbg !2711
  %entry42 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 3, !dbg !2711
  store %struct.list_head* %entry42, %struct.list_head** %next, align 8, !dbg !2711
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %entry41, i32 0, i32 1, !dbg !2711
  %entry43 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 3, !dbg !2711
  store %struct.list_head* %entry43, %struct.list_head** %prev, align 8, !dbg !2711
  %39 = load i32, i32* %rpmflags.addr, align 4, !dbg !2713
  %and44 = and i32 %39, 3, !dbg !2715
  %tobool45 = icmp ne i32 %and44, 0, !dbg !2715
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !2716

if.then46:                                        ; preds = %if.then39
  store i32 -115, i32* %retval1, align 4, !dbg !2717
  br label %out, !dbg !2719

if.end47:                                         ; preds = %if.then39
  %40 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2720
  %power48 = getelementptr inbounds %struct.device, %struct.device* %40, i32 0, i32 11, !dbg !2721
  %irq_safe = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power48, i32 0, i32 15, !dbg !2722
  %bf.load49 = load i16, i16* %irq_safe, align 8, !dbg !2722
  %bf.lshr = lshr i16 %bf.load49, 9, !dbg !2722
  %bf.clear50 = and i16 %bf.lshr, 1, !dbg !2722
  %bf.cast = zext i16 %bf.clear50 to i32, !dbg !2722
  %tobool51 = icmp ne i32 %bf.cast, 0, !dbg !2720
  br i1 %tobool51, label %if.then52, label %if.end56, !dbg !2723

if.then52:                                        ; preds = %if.end47
  %41 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2724
  %power53 = getelementptr inbounds %struct.device, %struct.device* %41, i32 0, i32 11, !dbg !2725
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power53, i32 0, i32 3, !dbg !2726
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i187, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2727, !srcloc !2729
  %42 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i187, align 8, !dbg !2730
  %43 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %42, i32 0, i32 0, !dbg !2730
  %rlock.i188 = bitcast %union.anon* %43 to %struct.raw_spinlock*, !dbg !2730
  call void asm sideeffect "rep; nop", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2732, !srcloc !2740
  %44 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2741
  %power54 = getelementptr inbounds %struct.device, %struct.device* %44, i32 0, i32 11, !dbg !2742
  %lock55 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power54, i32 0, i32 3, !dbg !2743
  store %struct.spinlock* %lock55, %struct.spinlock** %lock.addr.i189, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2744, !srcloc !2746
  %45 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i189, align 8, !dbg !2747
  %46 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %45, i32 0, i32 0, !dbg !2747
  %rlock.i190 = bitcast %union.anon* %46 to %struct.raw_spinlock*, !dbg !2747
  br label %repeat, !dbg !2749

if.end56:                                         ; preds = %if.end47
  br label %for.cond, !dbg !2750

for.cond:                                         ; preds = %if.end63, %if.end56
  %47 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2751
  %power57 = getelementptr inbounds %struct.device, %struct.device* %47, i32 0, i32 11, !dbg !2752
  %wait_queue = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power57, i32 0, i32 11, !dbg !2753
  call void @prepare_to_wait(%struct.wait_queue_head* %wait_queue, %struct.wait_queue_entry* %wait, i32 2) #7, !dbg !2754
  %48 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2755
  %power58 = getelementptr inbounds %struct.device, %struct.device* %48, i32 0, i32 11, !dbg !2757
  %runtime_status59 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power58, i32 0, i32 18, !dbg !2758
  %49 = load i32, i32* %runtime_status59, align 4, !dbg !2758
  %cmp60 = icmp ne i32 %49, 3, !dbg !2759
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !2760

if.then62:                                        ; preds = %for.cond
  br label %for.end, !dbg !2761

if.end63:                                         ; preds = %for.cond
  %50 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2762
  %power64 = getelementptr inbounds %struct.device, %struct.device* %50, i32 0, i32 11, !dbg !2763
  %lock65 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power64, i32 0, i32 3, !dbg !2764
  store %struct.spinlock* %lock65, %struct.spinlock** %lock.addr.i185, align 8
  call void @arch_local_irq_enable() #8, !dbg !2765
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2766, !srcloc !2330
  %51 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i185, align 8, !dbg !2767
  %52 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %51, i32 0, i32 0, !dbg !2767
  %rlock.i186 = bitcast %union.anon* %52 to %struct.raw_spinlock*, !dbg !2767
  call void @schedule() #7, !dbg !2768
  %53 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2769
  %power66 = getelementptr inbounds %struct.device, %struct.device* %53, i32 0, i32 11, !dbg !2770
  %lock67 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power66, i32 0, i32 3, !dbg !2771
  store %struct.spinlock* %lock67, %struct.spinlock** %lock.addr.i183, align 8
  call void @arch_local_irq_disable() #8, !dbg !2772
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2773, !srcloc !2310
  %54 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i183, align 8, !dbg !2774
  %55 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %54, i32 0, i32 0, !dbg !2774
  %rlock.i184 = bitcast %union.anon* %55 to %struct.raw_spinlock*, !dbg !2774
  br label %for.cond, !dbg !2775, !llvm.loop !2776

for.end:                                          ; preds = %if.then62
  %56 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2779
  %power68 = getelementptr inbounds %struct.device, %struct.device* %56, i32 0, i32 11, !dbg !2780
  %wait_queue69 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power68, i32 0, i32 11, !dbg !2781
  call void @finish_wait(%struct.wait_queue_head* %wait_queue69, %struct.wait_queue_entry* %wait) #7, !dbg !2782
  br label %repeat, !dbg !2783

if.end70:                                         ; preds = %if.end34
  %57 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2784
  %power71 = getelementptr inbounds %struct.device, %struct.device* %57, i32 0, i32 11, !dbg !2786
  %no_callbacks = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power71, i32 0, i32 15, !dbg !2787
  %bf.load72 = load i16, i16* %no_callbacks, align 8, !dbg !2787
  %bf.lshr73 = lshr i16 %bf.load72, 8, !dbg !2787
  %bf.clear74 = and i16 %bf.lshr73, 1, !dbg !2787
  %bf.cast75 = zext i16 %bf.clear74 to i32, !dbg !2787
  %tobool76 = icmp ne i32 %bf.cast75, 0, !dbg !2784
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !2788

if.then77:                                        ; preds = %if.end70
  br label %no_callback, !dbg !2789

if.end78:                                         ; preds = %if.end70
  %58 = load i32, i32* %rpmflags.addr, align 4, !dbg !2790
  %and79 = and i32 %58, 1, !dbg !2792
  %tobool80 = icmp ne i32 %and79, 0, !dbg !2792
  br i1 %tobool80, label %if.then81, label %if.end101, !dbg !2793

if.then81:                                        ; preds = %if.end78
  %59 = load i32, i32* %rpmflags.addr, align 4, !dbg !2794
  %and82 = and i32 %59, 8, !dbg !2796
  %tobool83 = icmp ne i32 %and82, 0, !dbg !2797
  %60 = zext i1 %tobool83 to i64, !dbg !2797
  %cond = select i1 %tobool83, i32 3, i32 2, !dbg !2797
  %61 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2798
  %power84 = getelementptr inbounds %struct.device, %struct.device* %61, i32 0, i32 11, !dbg !2799
  %request85 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power84, i32 0, i32 17, !dbg !2800
  store i32 %cond, i32* %request85, align 8, !dbg !2801
  %62 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2802
  %power86 = getelementptr inbounds %struct.device, %struct.device* %62, i32 0, i32 11, !dbg !2804
  %request_pending = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power86, i32 0, i32 15, !dbg !2805
  %bf.load87 = load i16, i16* %request_pending, align 8, !dbg !2805
  %bf.lshr88 = lshr i16 %bf.load87, 4, !dbg !2805
  %bf.clear89 = and i16 %bf.lshr88, 1, !dbg !2805
  %bf.cast90 = zext i16 %bf.clear89 to i32, !dbg !2805
  %tobool91 = icmp ne i32 %bf.cast90, 0, !dbg !2802
  br i1 %tobool91, label %if.end100, label %if.then92, !dbg !2806

if.then92:                                        ; preds = %if.then81
  %63 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2807
  %power93 = getelementptr inbounds %struct.device, %struct.device* %63, i32 0, i32 11, !dbg !2809
  %request_pending94 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power93, i32 0, i32 15, !dbg !2810
  %bf.load95 = load i16, i16* %request_pending94, align 8, !dbg !2811
  %bf.clear96 = and i16 %bf.load95, -17, !dbg !2811
  %bf.set97 = or i16 %bf.clear96, 16, !dbg !2811
  store i16 %bf.set97, i16* %request_pending94, align 8, !dbg !2811
  %64 = load %struct.workqueue_struct*, %struct.workqueue_struct** @pm_wq, align 8, !dbg !2812
  %65 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2813
  %power98 = getelementptr inbounds %struct.device, %struct.device* %65, i32 0, i32 11, !dbg !2814
  %work = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power98, i32 0, i32 10, !dbg !2815
  %call99 = call zeroext i1 @queue_work(%struct.workqueue_struct* %64, %struct.work_struct* %work) #7, !dbg !2816
  br label %if.end100, !dbg !2817

if.end100:                                        ; preds = %if.then92, %if.then81
  br label %out, !dbg !2818

if.end101:                                        ; preds = %if.end78
  %66 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2819
  call void @__update_runtime_status(%struct.device* %66, i32 3) #7, !dbg !2820
  %67 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2821
  %call102 = call i32 (%struct.device*)* @__rpm_get_callback(%struct.device* %67, i64 160) #7, !dbg !2821
  store i32 (%struct.device*)* %call102, i32 (%struct.device*)** %callback, align 8, !dbg !2822
  %68 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2823
  call void @dev_pm_enable_wake_irq_check(%struct.device* %68, i1 zeroext true) #7, !dbg !2824
  %69 = load i32 (%struct.device*)*, i32 (%struct.device*)** %callback, align 8, !dbg !2825
  %70 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2826
  %call103 = call i32 @rpm_callback(i32 (%struct.device*)* %69, %struct.device* %70) #7, !dbg !2827
  store i32 %call103, i32* %retval1, align 4, !dbg !2828
  %71 = load i32, i32* %retval1, align 4, !dbg !2829
  %tobool104 = icmp ne i32 %71, 0, !dbg !2829
  br i1 %tobool104, label %if.then105, label %if.end106, !dbg !2831

if.then105:                                       ; preds = %if.end101
  br label %fail, !dbg !2832

if.end106:                                        ; preds = %if.end101
  br label %no_callback, !dbg !2829

no_callback:                                      ; preds = %if.end106, %if.then77
  call void @llvm.dbg.label(metadata !2833), !dbg !2834
  %72 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2835
  call void @__update_runtime_status(%struct.device* %72, i32 2) #7, !dbg !2836
  %73 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2837
  call void @pm_runtime_deactivate_timer(%struct.device* %73) #7, !dbg !2838
  %74 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2839
  %parent107 = getelementptr inbounds %struct.device, %struct.device* %74, i32 0, i32 1, !dbg !2840
  %75 = load %struct.device*, %struct.device** %parent107, align 8, !dbg !2840
  %tobool108 = icmp ne %struct.device* %75, null, !dbg !2839
  br i1 %tobool108, label %if.then109, label %if.end113, !dbg !2841

if.then109:                                       ; preds = %no_callback
  %76 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2842
  %parent110 = getelementptr inbounds %struct.device, %struct.device* %76, i32 0, i32 1, !dbg !2843
  %77 = load %struct.device*, %struct.device** %parent110, align 8, !dbg !2843
  store %struct.device* %77, %struct.device** %parent, align 8, !dbg !2844
  %78 = load %struct.device*, %struct.device** %parent, align 8, !dbg !2845
  %power111 = getelementptr inbounds %struct.device, %struct.device* %78, i32 0, i32 11, !dbg !2846
  %child_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power111, i32 0, i32 14, !dbg !2847
  store %struct.atomic_t* %child_count, %struct.atomic_t** %v.addr.i, align 8
  store i32 -1, i32* %a.addr.i, align 4
  store i32 0, i32* %u.addr.i, align 4
  %79 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !2848
  %80 = bitcast %struct.atomic_t* %79 to i8*, !dbg !2848
  store i8* %80, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %81 = load i8*, i8** %v.addr.i.i, align 8, !dbg !2849
  %82 = load i64, i64* %size.addr.i.i, align 8, !dbg !2850
  %conv.i.i = trunc i64 %82 to i32, !dbg !2850
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %81, i32 %conv.i.i) #8, !dbg !2851
  %83 = load i8*, i8** %v.addr.i.i, align 8, !dbg !2852
  %84 = load i64, i64* %size.addr.i.i, align 8, !dbg !2852
  call void @kcsan_check_access(i8* %83, i64 %84, i32 7) #8, !dbg !2852
  %85 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !2853
  %86 = load i32, i32* %a.addr.i, align 4, !dbg !2854
  %87 = load i32, i32* %u.addr.i, align 4, !dbg !2855
  store %struct.atomic_t* %85, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %86, i32* %a.addr.i.i, align 4
  store i32 %87, i32* %u.addr.i.i, align 4
  %88 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !2856
  %89 = load i32, i32* %a.addr.i.i, align 4, !dbg !2857
  %90 = load i32, i32* %u.addr.i.i, align 4, !dbg !2858
  store %struct.atomic_t* %88, %struct.atomic_t** %v.addr.i.i.i, align 8
  store i32 %89, i32* %a.addr.i.i.i, align 4
  store i32 %90, i32* %u.addr.i.i.i, align 4
  %91 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !2859
  store %struct.atomic_t* %91, %struct.atomic_t** %v.addr.i.i.i.i, align 8
  %92 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i.i, align 8, !dbg !2860
  %counter.i.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %92, i32 0, i32 0, !dbg !2860
  %93 = load volatile i32, i32* %counter.i.i.i.i, align 4, !dbg !2860
  store i32 %93, i32* %c.i.i.i, align 4, !dbg !2557
  br label %do.body.i.i.i, !dbg !2861

do.body.i.i.i:                                    ; preds = %arch_atomic_try_cmpxchg.exit.i.i.i, %if.then109
  %94 = load i32, i32* %c.i.i.i, align 4, !dbg !2862
  %95 = load i32, i32* %u.addr.i.i.i, align 4, !dbg !2862
  %cmp.i.i.i = icmp eq i32 %94, %95, !dbg !2862
  %lnot.i.i.i = xor i1 %cmp.i.i.i, true, !dbg !2862
  %lnot.ext.i.i.i = zext i1 %cmp.i.i.i to i32, !dbg !2862
  %conv.i.i.i = sext i32 %lnot.ext.i.i.i to i64, !dbg !2862
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.end.i.i.i, !dbg !2865

if.then.i.i.i:                                    ; preds = %do.body.i.i.i
  br label %atomic_add_unless.exit, !dbg !2866

if.end.i.i.i:                                     ; preds = %do.body.i.i.i
  %96 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !2867
  %97 = load i32, i32* %c.i.i.i, align 4, !dbg !2868
  %98 = load i32, i32* %a.addr.i.i.i, align 4, !dbg !2869
  %add.i.i.i = add i32 %97, %98, !dbg !2870
  store %struct.atomic_t* %96, %struct.atomic_t** %v.addr.i5.i.i.i, align 8
  store i32* %c.i.i.i, i32** %old.addr.i.i.i.i, align 8
  store i32 %add.i.i.i, i32* %new.addr.i.i.i.i, align 4
  %99 = load i32*, i32** %old.addr.i.i.i.i, align 8, !dbg !2537
  store i32* %99, i32** %_old.i.i.i.i, align 8, !dbg !2537
  %100 = load i32*, i32** %_old.i.i.i.i, align 8, !dbg !2537
  %101 = load i32, i32* %100, align 4, !dbg !2537
  store i32 %101, i32* %__old.i.i.i.i, align 4, !dbg !2537
  %102 = load i32, i32* %new.addr.i.i.i.i, align 4, !dbg !2537
  store i32 %102, i32* %__new.i.i.i.i, align 4, !dbg !2537
  %103 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i5.i.i.i, align 8, !dbg !2537
  %counter.i6.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %103, i32 0, i32 0, !dbg !2537
  store i32* %counter.i6.i.i.i, i32** %__ptr.i.i.i.i, align 8, !dbg !2537
  %104 = load i32*, i32** %__ptr.i.i.i.i, align 8, !dbg !2537
  %105 = load i32, i32* %__old.i.i.i.i, align 4, !dbg !2537
  %106 = load i32, i32* %__new.i.i.i.i, align 4, !dbg !2537
  %107 = call { i8, i32 } asm sideeffect "cmpxchgl $3, $1\0A\09/* output condition code z*/\0A", "={@ccz},=*m,={ax},r,*m,2,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %104, i32 %106, i32* %104, i32 %105) #6, !dbg !2537, !srcloc !2871
  %asmresult.i.i.i.i = extractvalue { i8, i32 } %107, 0, !dbg !2537
  %asmresult1.i.i.i.i = extractvalue { i8, i32 } %107, 1, !dbg !2537
  store i8 %asmresult.i.i.i.i, i8* %success.i.i.i.i, align 1, !dbg !2537
  store i32 %asmresult1.i.i.i.i, i32* %__old.i.i.i.i, align 4, !dbg !2537
  %108 = load i8, i8* %success.i.i.i.i, align 1, !dbg !2872
  %tobool.i.i.i.i = trunc i8 %108 to i1, !dbg !2872
  %lnot.i.i.i.i = xor i1 %tobool.i.i.i.i, true, !dbg !2872
  %lnot3.i.i.i.i = xor i1 %tobool.i.i.i.i, true, !dbg !2872
  %lnot.ext.i.i.i.i = zext i1 %lnot3.i.i.i.i to i32, !dbg !2872
  %conv.i.i.i.i = sext i32 %lnot.ext.i.i.i.i to i64, !dbg !2872
  br i1 %lnot3.i.i.i.i, label %if.then.i.i.i.i, label %arch_atomic_try_cmpxchg.exit.i.i.i, !dbg !2537

if.then.i.i.i.i:                                  ; preds = %if.end.i.i.i
  %109 = load i32, i32* %__old.i.i.i.i, align 4, !dbg !2872
  %110 = load i32*, i32** %_old.i.i.i.i, align 8, !dbg !2872
  store i32 %109, i32* %110, align 4, !dbg !2872
  br label %arch_atomic_try_cmpxchg.exit.i.i.i, !dbg !2872

arch_atomic_try_cmpxchg.exit.i.i.i:               ; preds = %if.then.i.i.i.i, %if.end.i.i.i
  %111 = load i8, i8* %success.i.i.i.i, align 1, !dbg !2537
  %tobool5.i.i.i.i = trunc i8 %111 to i1, !dbg !2537
  %lnot6.i.i.i.i = xor i1 %tobool5.i.i.i.i, true, !dbg !2537
  %lnot.ext9.i.i.i.i = zext i1 %tobool5.i.i.i.i to i32, !dbg !2537
  %conv10.i.i.i.i = sext i32 %lnot.ext9.i.i.i.i to i64, !dbg !2537
  store i64 %conv10.i.i.i.i, i64* %tmp.i.i.i.i, align 8, !dbg !2872
  %112 = load i64, i64* %tmp.i.i.i.i, align 8, !dbg !2537
  %tobool11.i.i.i.i = icmp ne i64 %112, 0, !dbg !2874
  %lnot3.i.i.i = xor i1 %tobool11.i.i.i.i, true, !dbg !2875
  br i1 %lnot3.i.i.i, label %do.body.i.i.i, label %atomic_add_unless.exit, !dbg !2876, !llvm.loop !2877

atomic_add_unless.exit:                           ; preds = %if.then.i.i.i, %arch_atomic_try_cmpxchg.exit.i.i.i
  %113 = load i32, i32* %c.i.i.i, align 4, !dbg !2879
  %114 = load i32, i32* %u.addr.i.i, align 4, !dbg !2880
  %cmp.i.i = icmp ne i32 %113, %114, !dbg !2881
  br label %if.end113, !dbg !2882

if.end113:                                        ; preds = %atomic_add_unless.exit, %no_callback
  %115 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2883
  %power114 = getelementptr inbounds %struct.device, %struct.device* %115, i32 0, i32 11, !dbg !2883
  %wait_queue115 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power114, i32 0, i32 11, !dbg !2883
  call void @__wake_up(%struct.wait_queue_head* %wait_queue115, i32 3, i32 0, i8* null) #7, !dbg !2883
  %116 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2884
  %power116 = getelementptr inbounds %struct.device, %struct.device* %116, i32 0, i32 11, !dbg !2886
  %deferred_resume = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power116, i32 0, i32 15, !dbg !2887
  %bf.load117 = load i16, i16* %deferred_resume, align 8, !dbg !2887
  %bf.lshr118 = lshr i16 %bf.load117, 5, !dbg !2887
  %bf.clear119 = and i16 %bf.lshr118, 1, !dbg !2887
  %bf.cast120 = zext i16 %bf.clear119 to i32, !dbg !2887
  %tobool121 = icmp ne i32 %bf.cast120, 0, !dbg !2884
  br i1 %tobool121, label %if.then122, label %if.end128, !dbg !2888

if.then122:                                       ; preds = %if.end113
  %117 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2889
  %power123 = getelementptr inbounds %struct.device, %struct.device* %117, i32 0, i32 11, !dbg !2891
  %deferred_resume124 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power123, i32 0, i32 15, !dbg !2892
  %bf.load125 = load i16, i16* %deferred_resume124, align 8, !dbg !2893
  %bf.clear126 = and i16 %bf.load125, -33, !dbg !2893
  store i16 %bf.clear126, i16* %deferred_resume124, align 8, !dbg !2893
  %118 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2894
  %call127 = call i32 @rpm_resume(%struct.device* %118, i32 0) #7, !dbg !2895
  store i32 -11, i32* %retval1, align 4, !dbg !2896
  br label %out, !dbg !2897

if.end128:                                        ; preds = %if.end113
  %119 = load %struct.device*, %struct.device** %parent, align 8, !dbg !2898
  %tobool129 = icmp ne %struct.device* %119, null, !dbg !2898
  br i1 %tobool129, label %land.lhs.true130, label %if.end154, !dbg !2899

land.lhs.true130:                                 ; preds = %if.end128
  %120 = load %struct.device*, %struct.device** %parent, align 8, !dbg !2900
  %power131 = getelementptr inbounds %struct.device, %struct.device* %120, i32 0, i32 11, !dbg !2901
  %ignore_children = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power131, i32 0, i32 15, !dbg !2902
  %bf.load132 = load i16, i16* %ignore_children, align 8, !dbg !2902
  %bf.lshr133 = lshr i16 %bf.load132, 7, !dbg !2902
  %bf.clear134 = and i16 %bf.lshr133, 1, !dbg !2902
  %bf.cast135 = trunc i16 %bf.clear134 to i1, !dbg !2902
  br i1 %bf.cast135, label %if.end154, label %land.lhs.true136, !dbg !2903

land.lhs.true136:                                 ; preds = %land.lhs.true130
  %121 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2904
  %power137 = getelementptr inbounds %struct.device, %struct.device* %121, i32 0, i32 11, !dbg !2905
  %irq_safe138 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power137, i32 0, i32 15, !dbg !2906
  %bf.load139 = load i16, i16* %irq_safe138, align 8, !dbg !2906
  %bf.lshr140 = lshr i16 %bf.load139, 9, !dbg !2906
  %bf.clear141 = and i16 %bf.lshr140, 1, !dbg !2906
  %bf.cast142 = zext i16 %bf.clear141 to i32, !dbg !2906
  %tobool143 = icmp ne i32 %bf.cast142, 0, !dbg !2904
  br i1 %tobool143, label %if.end154, label %if.then144, !dbg !2907

if.then144:                                       ; preds = %land.lhs.true136
  %122 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2908
  %power145 = getelementptr inbounds %struct.device, %struct.device* %122, i32 0, i32 11, !dbg !2909
  %lock146 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power145, i32 0, i32 3, !dbg !2910
  store %struct.spinlock* %lock146, %struct.spinlock** %lock.addr.i181, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2911, !srcloc !2729
  %123 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i181, align 8, !dbg !2912
  %124 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %123, i32 0, i32 0, !dbg !2912
  %rlock.i182 = bitcast %union.anon* %124 to %struct.raw_spinlock*, !dbg !2912
  %125 = load %struct.device*, %struct.device** %parent, align 8, !dbg !2913
  %power147 = getelementptr inbounds %struct.device, %struct.device* %125, i32 0, i32 11, !dbg !2914
  %lock148 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power147, i32 0, i32 3, !dbg !2915
  store %struct.spinlock* %lock148, %struct.spinlock** %lock.addr.i179, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2916, !srcloc !2746
  %126 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i179, align 8, !dbg !2917
  %127 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %126, i32 0, i32 0, !dbg !2917
  %rlock.i180 = bitcast %union.anon* %127 to %struct.raw_spinlock*, !dbg !2917
  %128 = load %struct.device*, %struct.device** %parent, align 8, !dbg !2918
  %call149 = call i32 @rpm_idle(%struct.device* %128, i32 1) #7, !dbg !2919
  %129 = load %struct.device*, %struct.device** %parent, align 8, !dbg !2920
  %power150 = getelementptr inbounds %struct.device, %struct.device* %129, i32 0, i32 11, !dbg !2921
  %lock151 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power150, i32 0, i32 3, !dbg !2922
  store %struct.spinlock* %lock151, %struct.spinlock** %lock.addr.i177, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2923, !srcloc !2729
  %130 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i177, align 8, !dbg !2924
  %131 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %130, i32 0, i32 0, !dbg !2924
  %rlock.i178 = bitcast %union.anon* %131 to %struct.raw_spinlock*, !dbg !2924
  %132 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2925
  %power152 = getelementptr inbounds %struct.device, %struct.device* %132, i32 0, i32 11, !dbg !2926
  %lock153 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power152, i32 0, i32 3, !dbg !2927
  store %struct.spinlock* %lock153, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2928, !srcloc !2746
  %133 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !2929
  %134 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %133, i32 0, i32 0, !dbg !2929
  %rlock.i = bitcast %union.anon* %134 to %struct.raw_spinlock*, !dbg !2929
  br label %if.end154, !dbg !2930

if.end154:                                        ; preds = %if.then144, %land.lhs.true136, %land.lhs.true130, %if.end128
  br label %out, !dbg !2906

out:                                              ; preds = %if.end176, %if.end154, %if.then122, %if.end100, %if.then46, %if.end31, %if.then6, %if.then
  call void @llvm.dbg.label(metadata !2931), !dbg !2932
  %135 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2933
  br label %__here, !dbg !2934

__here:                                           ; preds = %indirectgoto, %out
  call void @llvm.dbg.label(metadata !2936), !dbg !2934
  store i64 ptrtoint (i8* blockaddress(@rpm_suspend, %__here) to i64), i64* %tmp155, align 8, !dbg !2934
  %136 = load i64, i64* %tmp155, align 8, !dbg !2934
  %137 = load i32, i32* %retval1, align 4, !dbg !2937
  call void @trace_rpm_return_int_rcuidle(%struct.device* %135, i64 %136, i32 %137) #7, !dbg !2938
  %138 = load i32, i32* %retval1, align 4, !dbg !2939
  ret i32 %138, !dbg !2940

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]

fail:                                             ; preds = %if.then105
  call void @llvm.dbg.label(metadata !2941), !dbg !2942
  %139 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2943
  call void @dev_pm_disable_wake_irq_check(%struct.device* %139) #7, !dbg !2944
  %140 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2945
  call void @__update_runtime_status(%struct.device* %140, i32 0) #7, !dbg !2946
  %141 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2947
  %power156 = getelementptr inbounds %struct.device, %struct.device* %141, i32 0, i32 11, !dbg !2948
  %deferred_resume157 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power156, i32 0, i32 15, !dbg !2949
  %bf.load158 = load i16, i16* %deferred_resume157, align 8, !dbg !2950
  %bf.clear159 = and i16 %bf.load158, -33, !dbg !2950
  store i16 %bf.clear159, i16* %deferred_resume157, align 8, !dbg !2950
  %142 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2951
  %power160 = getelementptr inbounds %struct.device, %struct.device* %142, i32 0, i32 11, !dbg !2951
  %wait_queue161 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power160, i32 0, i32 11, !dbg !2951
  call void @__wake_up(%struct.wait_queue_head* %wait_queue161, i32 3, i32 0, i8* null) #7, !dbg !2951
  %143 = load i32, i32* %retval1, align 4, !dbg !2952
  %cmp162 = icmp eq i32 %143, -11, !dbg !2954
  br i1 %cmp162, label %if.then166, label %lor.lhs.false, !dbg !2955

lor.lhs.false:                                    ; preds = %fail
  %144 = load i32, i32* %retval1, align 4, !dbg !2956
  %cmp164 = icmp eq i32 %144, -16, !dbg !2957
  br i1 %cmp164, label %if.then166, label %if.else, !dbg !2958

if.then166:                                       ; preds = %lor.lhs.false, %fail
  %145 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2959
  %power167 = getelementptr inbounds %struct.device, %struct.device* %145, i32 0, i32 11, !dbg !2961
  %runtime_error = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power167, i32 0, i32 19, !dbg !2962
  store i32 0, i32* %runtime_error, align 8, !dbg !2963
  %146 = load i32, i32* %rpmflags.addr, align 4, !dbg !2964
  %and168 = and i32 %146, 8, !dbg !2966
  %tobool169 = icmp ne i32 %and168, 0, !dbg !2966
  br i1 %tobool169, label %land.lhs.true170, label %if.end175, !dbg !2967

land.lhs.true170:                                 ; preds = %if.then166
  %147 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2968
  %call171 = call i64 @pm_runtime_autosuspend_expiration(%struct.device* %147) #7, !dbg !2969
  %cmp172 = icmp ne i64 %call171, 0, !dbg !2970
  br i1 %cmp172, label %if.then174, label %if.end175, !dbg !2971

if.then174:                                       ; preds = %land.lhs.true170
  br label %repeat, !dbg !2972

if.end175:                                        ; preds = %land.lhs.true170, %if.then166
  br label %if.end176, !dbg !2973

if.else:                                          ; preds = %lor.lhs.false
  %148 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2974
  call void @pm_runtime_cancel_pending(%struct.device* %148) #7, !dbg !2976
  br label %if.end176

if.end176:                                        ; preds = %if.else, %if.end175
  br label %out, !dbg !2977
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rpm_check_suspend_allowed(%struct.device* %dev) #0 !dbg !2978 {
entry:
  %v.addr.i1.i52 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i52, metadata !2542, metadata !DIExpression()), !dbg !2979
  %v.addr.i.i53 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i53, metadata !2987, metadata !DIExpression()), !dbg !2989
  %size.addr.i.i54 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i54, metadata !2991, metadata !DIExpression()), !dbg !2992
  %v.addr.i55 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i55, metadata !2993, metadata !DIExpression()), !dbg !2994
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !2542, metadata !DIExpression()), !dbg !2995
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !2987, metadata !DIExpression()), !dbg !2998
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !2991, metadata !DIExpression()), !dbg !3000
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !2993, metadata !DIExpression()), !dbg !3001
  %dev.addr = alloca %struct.device*, align 8
  %retval1 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !3002, metadata !DIExpression()), !dbg !3003
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !3004, metadata !DIExpression()), !dbg !3005
  store i32 0, i32* %retval1, align 4, !dbg !3005
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3006
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !3007
  %runtime_error = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 19, !dbg !3008
  %1 = load i32, i32* %runtime_error, align 8, !dbg !3008
  %tobool = icmp ne i32 %1, 0, !dbg !3006
  br i1 %tobool, label %if.then, label %if.else, !dbg !3009

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval1, align 4, !dbg !3010
  br label %if.end51, !dbg !3011

if.else:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3012
  %power2 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 11, !dbg !3013
  %disable_depth = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power2, i32 0, i32 15, !dbg !3014
  %bf.load = load i16, i16* %disable_depth, align 8, !dbg !3014
  %bf.clear = and i16 %bf.load, 7, !dbg !3014
  %bf.cast = zext i16 %bf.clear to i32, !dbg !3014
  %cmp = icmp sgt i32 %bf.cast, 0, !dbg !3015
  br i1 %cmp, label %if.then3, label %if.else4, !dbg !3016

if.then3:                                         ; preds = %if.else
  store i32 -13, i32* %retval1, align 4, !dbg !3017
  br label %if.end50, !dbg !3018

if.else4:                                         ; preds = %if.else
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3019
  %power5 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 11, !dbg !3020
  %usage_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power5, i32 0, i32 13, !dbg !3021
  store %struct.atomic_t* %usage_count, %struct.atomic_t** %v.addr.i, align 8
  %4 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !3022
  %5 = bitcast %struct.atomic_t* %4 to i8*, !dbg !3022
  store i8* %5, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !3023
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !3024
  %conv.i.i = trunc i64 %7 to i32, !dbg !3024
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %6, i32 %conv.i.i) #8, !dbg !3025
  %8 = load i8*, i8** %v.addr.i.i, align 8, !dbg !3026
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !3026
  call void @kcsan_check_access(i8* %8, i64 %9, i32 4) #8, !dbg !3026
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !3027
  store %struct.atomic_t* %10, %struct.atomic_t** %v.addr.i1.i, align 8
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !3028
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %11, i32 0, i32 0, !dbg !3028
  %12 = load volatile i32, i32* %counter.i.i, align 4, !dbg !3028
  %cmp6 = icmp sgt i32 %12, 0, !dbg !3029
  br i1 %cmp6, label %if.then7, label %if.else8, !dbg !3030

if.then7:                                         ; preds = %if.else4
  store i32 -11, i32* %retval1, align 4, !dbg !3031
  br label %if.end49, !dbg !3032

if.else8:                                         ; preds = %if.else4
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3033
  %power9 = getelementptr inbounds %struct.device, %struct.device* %13, i32 0, i32 11, !dbg !3034
  %ignore_children = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power9, i32 0, i32 15, !dbg !3035
  %bf.load10 = load i16, i16* %ignore_children, align 8, !dbg !3035
  %bf.lshr = lshr i16 %bf.load10, 7, !dbg !3035
  %bf.clear11 = and i16 %bf.lshr, 1, !dbg !3035
  %bf.cast12 = trunc i16 %bf.clear11 to i1, !dbg !3035
  br i1 %bf.cast12, label %if.else17, label %land.lhs.true, !dbg !3036

land.lhs.true:                                    ; preds = %if.else8
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3037
  %power13 = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 11, !dbg !3038
  %child_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power13, i32 0, i32 14, !dbg !3039
  store %struct.atomic_t* %child_count, %struct.atomic_t** %v.addr.i55, align 8
  %15 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i55, align 8, !dbg !3040
  %16 = bitcast %struct.atomic_t* %15 to i8*, !dbg !3040
  store i8* %16, i8** %v.addr.i.i53, align 8
  store i64 4, i64* %size.addr.i.i54, align 8
  %17 = load i8*, i8** %v.addr.i.i53, align 8, !dbg !3041
  %18 = load i64, i64* %size.addr.i.i54, align 8, !dbg !3042
  %conv.i.i56 = trunc i64 %18 to i32, !dbg !3042
  %call.i.i57 = call zeroext i1 @kasan_check_read(i8* %17, i32 %conv.i.i56) #8, !dbg !3043
  %19 = load i8*, i8** %v.addr.i.i53, align 8, !dbg !3044
  %20 = load i64, i64* %size.addr.i.i54, align 8, !dbg !3044
  call void @kcsan_check_access(i8* %19, i64 %20, i32 4) #8, !dbg !3044
  %21 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i55, align 8, !dbg !3045
  store %struct.atomic_t* %21, %struct.atomic_t** %v.addr.i1.i52, align 8
  %22 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i52, align 8, !dbg !3046
  %counter.i.i58 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %22, i32 0, i32 0, !dbg !3046
  %23 = load volatile i32, i32* %counter.i.i58, align 4, !dbg !3046
  %tobool15 = icmp ne i32 %23, 0, !dbg !3047
  br i1 %tobool15, label %if.then16, label %if.else17, !dbg !3048

if.then16:                                        ; preds = %land.lhs.true
  store i32 -16, i32* %retval1, align 4, !dbg !3049
  br label %if.end48, !dbg !3050

if.else17:                                        ; preds = %land.lhs.true, %if.else8
  %24 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3051
  %power18 = getelementptr inbounds %struct.device, %struct.device* %24, i32 0, i32 11, !dbg !3053
  %deferred_resume = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power18, i32 0, i32 15, !dbg !3054
  %bf.load19 = load i16, i16* %deferred_resume, align 8, !dbg !3054
  %bf.lshr20 = lshr i16 %bf.load19, 5, !dbg !3054
  %bf.clear21 = and i16 %bf.lshr20, 1, !dbg !3054
  %bf.cast22 = zext i16 %bf.clear21 to i32, !dbg !3054
  %tobool23 = icmp ne i32 %bf.cast22, 0, !dbg !3051
  br i1 %tobool23, label %land.lhs.true24, label %lor.lhs.false, !dbg !3055

land.lhs.true24:                                  ; preds = %if.else17
  %25 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3056
  %power25 = getelementptr inbounds %struct.device, %struct.device* %25, i32 0, i32 11, !dbg !3057
  %runtime_status = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power25, i32 0, i32 18, !dbg !3058
  %26 = load i32, i32* %runtime_status, align 4, !dbg !3058
  %cmp26 = icmp eq i32 %26, 3, !dbg !3059
  br i1 %cmp26, label %if.then36, label %lor.lhs.false, !dbg !3060

lor.lhs.false:                                    ; preds = %land.lhs.true24, %if.else17
  %27 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3061
  %power27 = getelementptr inbounds %struct.device, %struct.device* %27, i32 0, i32 11, !dbg !3062
  %request_pending = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power27, i32 0, i32 15, !dbg !3063
  %bf.load28 = load i16, i16* %request_pending, align 8, !dbg !3063
  %bf.lshr29 = lshr i16 %bf.load28, 4, !dbg !3063
  %bf.clear30 = and i16 %bf.lshr29, 1, !dbg !3063
  %bf.cast31 = zext i16 %bf.clear30 to i32, !dbg !3063
  %tobool32 = icmp ne i32 %bf.cast31, 0, !dbg !3061
  br i1 %tobool32, label %land.lhs.true33, label %if.else37, !dbg !3064

land.lhs.true33:                                  ; preds = %lor.lhs.false
  %28 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3065
  %power34 = getelementptr inbounds %struct.device, %struct.device* %28, i32 0, i32 11, !dbg !3066
  %request = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power34, i32 0, i32 17, !dbg !3067
  %29 = load i32, i32* %request, align 8, !dbg !3067
  %cmp35 = icmp eq i32 %29, 4, !dbg !3068
  br i1 %cmp35, label %if.then36, label %if.else37, !dbg !3069

if.then36:                                        ; preds = %land.lhs.true33, %land.lhs.true24
  store i32 -11, i32* %retval1, align 4, !dbg !3070
  br label %if.end47, !dbg !3071

if.else37:                                        ; preds = %land.lhs.true33, %lor.lhs.false
  %30 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3072
  %call38 = call i32 @__dev_pm_qos_resume_latency(%struct.device* %30) #7, !dbg !3074
  %cmp39 = icmp eq i32 %call38, 0, !dbg !3075
  br i1 %cmp39, label %if.then40, label %if.else41, !dbg !3076

if.then40:                                        ; preds = %if.else37
  store i32 -1, i32* %retval1, align 4, !dbg !3077
  br label %if.end46, !dbg !3078

if.else41:                                        ; preds = %if.else37
  %31 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3079
  %power42 = getelementptr inbounds %struct.device, %struct.device* %31, i32 0, i32 11, !dbg !3081
  %runtime_status43 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power42, i32 0, i32 18, !dbg !3082
  %32 = load i32, i32* %runtime_status43, align 4, !dbg !3082
  %cmp44 = icmp eq i32 %32, 2, !dbg !3083
  br i1 %cmp44, label %if.then45, label %if.end, !dbg !3084

if.then45:                                        ; preds = %if.else41
  store i32 1, i32* %retval1, align 4, !dbg !3085
  br label %if.end, !dbg !3086

if.end:                                           ; preds = %if.then45, %if.else41
  br label %if.end46

if.end46:                                         ; preds = %if.end, %if.then40
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then36
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then16
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then7
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then3
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then
  %33 = load i32, i32* %retval1, align 4, !dbg !3087
  ret i32 %33, !dbg !3088
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_cancel_pending(%struct.device* %dev) #0 !dbg !3089 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !3090, metadata !DIExpression()), !dbg !3091
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3092
  call void @pm_runtime_deactivate_timer(%struct.device* %0) #7, !dbg !3093
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3094
  %power = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !3095
  %request = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 17, !dbg !3096
  store i32 0, i32* %request, align 8, !dbg !3097
  ret void, !dbg !3098
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hrtimer_start(%struct.hrtimer* %timer, i64 %tim, i32 %mode) #0 !dbg !3099 {
entry:
  %timer.addr = alloca %struct.hrtimer*, align 8
  %tim.addr = alloca i64, align 8
  %mode.addr = alloca i32, align 4
  store %struct.hrtimer* %timer, %struct.hrtimer** %timer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hrtimer** %timer.addr, metadata !3103, metadata !DIExpression()), !dbg !3104
  store i64 %tim, i64* %tim.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %tim.addr, metadata !3105, metadata !DIExpression()), !dbg !3106
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3107, metadata !DIExpression()), !dbg !3108
  %0 = load %struct.hrtimer*, %struct.hrtimer** %timer.addr, align 8, !dbg !3109
  %1 = load i64, i64* %tim.addr, align 8, !dbg !3110
  %2 = load i32, i32* %mode.addr, align 4, !dbg !3111
  call void @hrtimer_start_range_ns(%struct.hrtimer* %0, i64 %1, i64 0, i32 %2) #7, !dbg !3112
  ret void, !dbg !3113
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__pm_runtime_idle(%struct.device* %dev, i32 %rpmflags) #0 !dbg !3114 {
entry:
  %lock.addr.i39 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i39, metadata !2149, metadata !DIExpression()), !dbg !3115
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !2157, metadata !DIExpression()), !dbg !3117
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2159, metadata !DIExpression()), !dbg !3118
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !3125, metadata !DIExpression()), !dbg !3129
  %c.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i.i, metadata !3136, metadata !DIExpression()), !dbg !3138
  %tmp.i.i = alloca i8, align 1
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !2564, metadata !DIExpression()), !dbg !3139
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !2574, metadata !DIExpression()), !dbg !3141
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !3142, metadata !DIExpression()), !dbg !3143
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %rpmflags.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %retval1 = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy19 = alloca i64, align 8
  %__dummy220 = alloca i64, align 8
  %tmp23 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !3144, metadata !DIExpression()), !dbg !3145
  store i32 %rpmflags, i32* %rpmflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rpmflags.addr, metadata !3146, metadata !DIExpression()), !dbg !3147
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !3148, metadata !DIExpression()), !dbg !3149
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !3150, metadata !DIExpression()), !dbg !3151
  %0 = load i32, i32* %rpmflags.addr, align 4, !dbg !3152
  %and = and i32 %0, 4, !dbg !3153
  %tobool = icmp ne i32 %and, 0, !dbg !3153
  br i1 %tobool, label %if.then, label %if.end3, !dbg !3154

if.then:                                          ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3155
  %power = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !3156
  %usage_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 13, !dbg !3157
  store %struct.atomic_t* %usage_count, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !3158
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !3158
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !3159
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !3160
  %conv.i.i = trunc i64 %5 to i32, !dbg !3160
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #8, !dbg !3161
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !3162
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !3162
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #8, !dbg !3162
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !3163
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i1.i, align 8
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !3138
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %9, i32 0, i32 0, !dbg !3138
  %10 = call i8 asm sideeffect "decl $0\0A\09/* output condition code e*/\0A", "=*m,={@cce},*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #6, !dbg !3138, !srcloc !3164
  store i8 %10, i8* %c.i.i, align 1, !dbg !3138
  %11 = load i8, i8* %c.i.i, align 1, !dbg !3138
  %tobool.i.i = trunc i8 %11 to i1, !dbg !3138
  %frombool.i.i = zext i1 %tobool.i.i to i8, !dbg !3138
  store i8 %frombool.i.i, i8* %tmp.i.i, align 1, !dbg !3138
  %12 = load i8, i8* %tmp.i.i, align 1, !dbg !3138
  %tobool1.i.i = trunc i8 %12 to i1, !dbg !3138
  br i1 %tobool1.i.i, label %if.end, label %if.then2, !dbg !3165

if.then2:                                         ; preds = %if.then
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3166
  %14 = load i32, i32* %rpmflags.addr, align 4, !dbg !3168
  call void @trace_rpm_usage_rcuidle(%struct.device* %13, i32 %14) #7, !dbg !3169
  store i32 0, i32* %retval, align 4, !dbg !3170
  br label %return, !dbg !3170

if.end:                                           ; preds = %if.then
  br label %if.end3, !dbg !3171

if.end3:                                          ; preds = %if.end, %entry
  br label %do.body, !dbg !3172

do.body:                                          ; preds = %if.end3
  %15 = load i32, i32* %rpmflags.addr, align 4, !dbg !3173
  %and4 = and i32 %15, 1, !dbg !3173
  %tobool5 = icmp ne i32 %and4, 0, !dbg !3173
  br i1 %tobool5, label %if.end12, label %land.lhs.true, !dbg !3173

land.lhs.true:                                    ; preds = %do.body
  %16 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3173
  %power6 = getelementptr inbounds %struct.device, %struct.device* %16, i32 0, i32 11, !dbg !3173
  %irq_safe = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power6, i32 0, i32 15, !dbg !3173
  %bf.load = load i16, i16* %irq_safe, align 8, !dbg !3173
  %bf.lshr = lshr i16 %bf.load, 9, !dbg !3173
  %bf.clear = and i16 %bf.lshr, 1, !dbg !3173
  %bf.cast = zext i16 %bf.clear to i32, !dbg !3173
  %tobool7 = icmp ne i32 %bf.cast, 0, !dbg !3173
  br i1 %tobool7, label %if.end12, label %if.then8, !dbg !3176

if.then8:                                         ; preds = %land.lhs.true
  br label %do.body9, !dbg !3173

do.body9:                                         ; preds = %if.then8
  br label %do.body10, !dbg !3177

do.body10:                                        ; preds = %do.body9
  br label %do.end, !dbg !3179

do.end:                                           ; preds = %do.body10
  br label %do.end11, !dbg !3177

do.end11:                                         ; preds = %do.end
  br label %if.end12, !dbg !3177

if.end12:                                         ; preds = %do.end11, %land.lhs.true, %do.body
  br label %do.end13, !dbg !3176

do.end13:                                         ; preds = %if.end12
  br label %do.body14, !dbg !3181

do.body14:                                        ; preds = %do.end13
  br label %do.body15, !dbg !3182

do.body15:                                        ; preds = %do.body14
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !3183, metadata !DIExpression()), !dbg !3185
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !3186, metadata !DIExpression()), !dbg !3185
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !3185
  %conv = zext i1 %cmp to i32, !dbg !3185
  store i32 1, i32* %tmp, align 4, !dbg !3185
  %17 = load i32, i32* %tmp, align 4, !dbg !3185
  br label %do.body16, !dbg !3187

do.body16:                                        ; preds = %do.body15
  br label %do.body17, !dbg !3188

do.body17:                                        ; preds = %do.body16
  br label %do.body18, !dbg !3189

do.body18:                                        ; preds = %do.body17
  call void @llvm.dbg.declare(metadata i64* %__dummy19, metadata !3191, metadata !DIExpression()), !dbg !3194
  call void @llvm.dbg.declare(metadata i64* %__dummy220, metadata !3195, metadata !DIExpression()), !dbg !3194
  %cmp21 = icmp eq i64* %__dummy19, %__dummy220, !dbg !3194
  %conv22 = zext i1 %cmp21 to i32, !dbg !3194
  store i32 1, i32* %tmp23, align 4, !dbg !3194
  %18 = load i32, i32* %tmp23, align 4, !dbg !3194
  %call24 = call i64 @arch_local_irq_save() #7, !dbg !3196
  store i64 %call24, i64* %flags, align 8, !dbg !3196
  br label %do.end25, !dbg !3196

do.end25:                                         ; preds = %do.body18
  br label %do.end26, !dbg !3189

do.end26:                                         ; preds = %do.end25
  br label %do.body27, !dbg !3188

do.body27:                                        ; preds = %do.end26
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3197, !srcloc !3198
  br label %do.body28, !dbg !3197

do.body28:                                        ; preds = %do.body27
  %19 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3199
  %power29 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 11, !dbg !3199
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power29, i32 0, i32 3, !dbg !3199
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !3200
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !3201
  %rlock.i = bitcast %union.anon* %21 to %struct.raw_spinlock*, !dbg !3201
  br label %do.end31, !dbg !3199

do.end31:                                         ; preds = %do.body28
  br label %do.end32, !dbg !3197

do.end32:                                         ; preds = %do.end31
  br label %do.end33, !dbg !3188

do.end33:                                         ; preds = %do.end32
  br label %do.end34, !dbg !3187

do.end34:                                         ; preds = %do.end33
  br label %do.end35, !dbg !3182

do.end35:                                         ; preds = %do.end34
  %22 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3202
  %23 = load i32, i32* %rpmflags.addr, align 4, !dbg !3203
  %call36 = call i32 @rpm_idle(%struct.device* %22, i32 %23) #7, !dbg !3204
  store i32 %call36, i32* %retval1, align 4, !dbg !3205
  %24 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3206
  %power37 = getelementptr inbounds %struct.device, %struct.device* %24, i32 0, i32 11, !dbg !3207
  %lock38 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power37, i32 0, i32 3, !dbg !3208
  %25 = load i64, i64* %flags, align 8, !dbg !3209
  store %struct.spinlock* %lock38, %struct.spinlock** %lock.addr.i39, align 8
  store i64 %25, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !47, metadata !2214, metadata !DIExpression()) #6, !dbg !3210
  call void @llvm.dbg.declare(metadata !47, metadata !2218, metadata !DIExpression()) #6, !dbg !3210
  store i32 1, i32* %tmp.i, align 4, !dbg !3210
  %26 = load i32, i32* %tmp.i, align 4, !dbg !3210
  call void @llvm.dbg.declare(metadata !47, metadata !2219, metadata !DIExpression()) #6, !dbg !3211
  call void @llvm.dbg.declare(metadata !47, metadata !2225, metadata !DIExpression()) #6, !dbg !3211
  store i32 1, i32* %tmp8.i, align 4, !dbg !3211
  %27 = load i32, i32* %tmp8.i, align 4, !dbg !3211
  %28 = load i64, i64* %flags.addr.i, align 8, !dbg !3212
  call void @arch_local_irq_restore(i64 %28) #8, !dbg !3212
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3213, !srcloc !2229
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i39, align 8, !dbg !3214
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !3214
  %rlock.i40 = bitcast %union.anon* %30 to %struct.raw_spinlock*, !dbg !3214
  %31 = load i32, i32* %retval1, align 4, !dbg !3215
  store i32 %31, i32* %retval, align 4, !dbg !3216
  br label %return, !dbg !3216

return:                                           ; preds = %do.end35, %if.then2
  %32 = load i32, i32* %retval, align 4, !dbg !3217
  ret i32 %32, !dbg !3217
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_rpm_usage_rcuidle(%struct.device* %dev, i32 %flags) #0 !dbg !3218 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %flags.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !3222, metadata !DIExpression()), !dbg !3223
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !3224, metadata !DIExpression()), !dbg !3223
  ret void, !dbg !3223
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rpm_idle(%struct.device* %dev, i32 %rpmflags) #0 !dbg !3225 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %rpmflags.addr = alloca i32, align 4
  %callback = alloca i32 (%struct.device*)*, align 8
  %retval1 = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp69 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !3226, metadata !DIExpression()), !dbg !3227
  store i32 %rpmflags, i32* %rpmflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rpmflags.addr, metadata !3228, metadata !DIExpression()), !dbg !3229
  call void @llvm.dbg.declare(metadata i32 (%struct.device*)** %callback, metadata !3230, metadata !DIExpression()), !dbg !3231
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !3232, metadata !DIExpression()), !dbg !3233
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3234
  %1 = load i32, i32* %rpmflags.addr, align 4, !dbg !3235
  call void @trace_rpm_idle_rcuidle(%struct.device* %0, i32 %1) #7, !dbg !3236
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3237
  %call = call i32 @rpm_check_suspend_allowed(%struct.device* %2) #7, !dbg !3238
  store i32 %call, i32* %retval1, align 4, !dbg !3239
  %3 = load i32, i32* %retval1, align 4, !dbg !3240
  %cmp = icmp slt i32 %3, 0, !dbg !3242
  br i1 %cmp, label %if.then, label %if.else, !dbg !3243

if.then:                                          ; preds = %entry
  br label %if.end19, !dbg !3243

if.else:                                          ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3244
  %power = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 11, !dbg !3246
  %runtime_status = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 18, !dbg !3247
  %5 = load i32, i32* %runtime_status, align 4, !dbg !3247
  %cmp2 = icmp ne i32 %5, 0, !dbg !3248
  br i1 %cmp2, label %if.then3, label %if.else4, !dbg !3249

if.then3:                                         ; preds = %if.else
  store i32 -11, i32* %retval1, align 4, !dbg !3250
  br label %if.end18, !dbg !3251

if.else4:                                         ; preds = %if.else
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3252
  %power5 = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 11, !dbg !3254
  %request_pending = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power5, i32 0, i32 15, !dbg !3255
  %bf.load = load i16, i16* %request_pending, align 8, !dbg !3255
  %bf.lshr = lshr i16 %bf.load, 4, !dbg !3255
  %bf.clear = and i16 %bf.lshr, 1, !dbg !3255
  %bf.cast = zext i16 %bf.clear to i32, !dbg !3255
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !3252
  br i1 %tobool, label %land.lhs.true, label %if.else9, !dbg !3256

land.lhs.true:                                    ; preds = %if.else4
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3257
  %power6 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 11, !dbg !3258
  %request = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power6, i32 0, i32 17, !dbg !3259
  %8 = load i32, i32* %request, align 8, !dbg !3259
  %cmp7 = icmp ugt i32 %8, 1, !dbg !3260
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !3261

if.then8:                                         ; preds = %land.lhs.true
  store i32 -11, i32* %retval1, align 4, !dbg !3262
  br label %if.end17, !dbg !3263

if.else9:                                         ; preds = %land.lhs.true, %if.else4
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3264
  %power10 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 11, !dbg !3266
  %idle_notification = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power10, i32 0, i32 15, !dbg !3267
  %bf.load11 = load i16, i16* %idle_notification, align 8, !dbg !3267
  %bf.lshr12 = lshr i16 %bf.load11, 3, !dbg !3267
  %bf.clear13 = and i16 %bf.lshr12, 1, !dbg !3267
  %bf.cast14 = zext i16 %bf.clear13 to i32, !dbg !3267
  %tobool15 = icmp ne i32 %bf.cast14, 0, !dbg !3264
  br i1 %tobool15, label %if.then16, label %if.end, !dbg !3268

if.then16:                                        ; preds = %if.else9
  store i32 -115, i32* %retval1, align 4, !dbg !3269
  br label %if.end, !dbg !3270

if.end:                                           ; preds = %if.then16, %if.else9
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then8
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then3
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then
  %10 = load i32, i32* %retval1, align 4, !dbg !3271
  %tobool20 = icmp ne i32 %10, 0, !dbg !3271
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !3273

if.then21:                                        ; preds = %if.end19
  br label %out, !dbg !3274

if.end22:                                         ; preds = %if.end19
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3275
  %power23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 11, !dbg !3276
  %request24 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power23, i32 0, i32 17, !dbg !3277
  store i32 0, i32* %request24, align 8, !dbg !3278
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3279
  %power25 = getelementptr inbounds %struct.device, %struct.device* %12, i32 0, i32 11, !dbg !3281
  %no_callbacks = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power25, i32 0, i32 15, !dbg !3282
  %bf.load26 = load i16, i16* %no_callbacks, align 8, !dbg !3282
  %bf.lshr27 = lshr i16 %bf.load26, 8, !dbg !3282
  %bf.clear28 = and i16 %bf.lshr27, 1, !dbg !3282
  %bf.cast29 = zext i16 %bf.clear28 to i32, !dbg !3282
  %tobool30 = icmp ne i32 %bf.cast29, 0, !dbg !3279
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !3283

if.then31:                                        ; preds = %if.end22
  br label %out, !dbg !3284

if.end32:                                         ; preds = %if.end22
  %13 = load i32, i32* %rpmflags.addr, align 4, !dbg !3285
  %and = and i32 %13, 1, !dbg !3287
  %tobool33 = icmp ne i32 %and, 0, !dbg !3287
  br i1 %tobool33, label %if.then34, label %if.end52, !dbg !3288

if.then34:                                        ; preds = %if.end32
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3289
  %power35 = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 11, !dbg !3291
  %request36 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power35, i32 0, i32 17, !dbg !3292
  store i32 1, i32* %request36, align 8, !dbg !3293
  %15 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3294
  %power37 = getelementptr inbounds %struct.device, %struct.device* %15, i32 0, i32 11, !dbg !3296
  %request_pending38 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power37, i32 0, i32 15, !dbg !3297
  %bf.load39 = load i16, i16* %request_pending38, align 8, !dbg !3297
  %bf.lshr40 = lshr i16 %bf.load39, 4, !dbg !3297
  %bf.clear41 = and i16 %bf.lshr40, 1, !dbg !3297
  %bf.cast42 = zext i16 %bf.clear41 to i32, !dbg !3297
  %tobool43 = icmp ne i32 %bf.cast42, 0, !dbg !3294
  br i1 %tobool43, label %if.end51, label %if.then44, !dbg !3298

if.then44:                                        ; preds = %if.then34
  %16 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3299
  %power45 = getelementptr inbounds %struct.device, %struct.device* %16, i32 0, i32 11, !dbg !3301
  %request_pending46 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power45, i32 0, i32 15, !dbg !3302
  %bf.load47 = load i16, i16* %request_pending46, align 8, !dbg !3303
  %bf.clear48 = and i16 %bf.load47, -17, !dbg !3303
  %bf.set = or i16 %bf.clear48, 16, !dbg !3303
  store i16 %bf.set, i16* %request_pending46, align 8, !dbg !3303
  %17 = load %struct.workqueue_struct*, %struct.workqueue_struct** @pm_wq, align 8, !dbg !3304
  %18 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3305
  %power49 = getelementptr inbounds %struct.device, %struct.device* %18, i32 0, i32 11, !dbg !3306
  %work = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power49, i32 0, i32 10, !dbg !3307
  %call50 = call zeroext i1 @queue_work(%struct.workqueue_struct* %17, %struct.work_struct* %work) #7, !dbg !3308
  br label %if.end51, !dbg !3309

if.end51:                                         ; preds = %if.then44, %if.then34
  %19 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3310
  br label %__here, !dbg !3311

__here:                                           ; preds = %indirectgoto, %if.end51
  call void @llvm.dbg.label(metadata !3313), !dbg !3311
  store i64 ptrtoint (i8* blockaddress(@rpm_idle, %__here) to i64), i64* %tmp, align 8, !dbg !3311
  %20 = load i64, i64* %tmp, align 8, !dbg !3311
  call void @trace_rpm_return_int_rcuidle(%struct.device* %19, i64 %20, i32 0) #7, !dbg !3314
  store i32 0, i32* %retval, align 4, !dbg !3315
  br label %return, !dbg !3315

if.end52:                                         ; preds = %if.end32
  %21 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3316
  %power53 = getelementptr inbounds %struct.device, %struct.device* %21, i32 0, i32 11, !dbg !3317
  %idle_notification54 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power53, i32 0, i32 15, !dbg !3318
  %bf.load55 = load i16, i16* %idle_notification54, align 8, !dbg !3319
  %bf.clear56 = and i16 %bf.load55, -9, !dbg !3319
  %bf.set57 = or i16 %bf.clear56, 8, !dbg !3319
  store i16 %bf.set57, i16* %idle_notification54, align 8, !dbg !3319
  %22 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3320
  %call58 = call i32 (%struct.device*)* @__rpm_get_callback(%struct.device* %22, i64 176) #7, !dbg !3320
  store i32 (%struct.device*)* %call58, i32 (%struct.device*)** %callback, align 8, !dbg !3321
  %23 = load i32 (%struct.device*)*, i32 (%struct.device*)** %callback, align 8, !dbg !3322
  %tobool59 = icmp ne i32 (%struct.device*)* %23, null, !dbg !3322
  br i1 %tobool59, label %if.then60, label %if.end62, !dbg !3324

if.then60:                                        ; preds = %if.end52
  %24 = load i32 (%struct.device*)*, i32 (%struct.device*)** %callback, align 8, !dbg !3325
  %25 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3326
  %call61 = call i32 @__rpm_callback(i32 (%struct.device*)* %24, %struct.device* %25) #7, !dbg !3327
  store i32 %call61, i32* %retval1, align 4, !dbg !3328
  br label %if.end62, !dbg !3329

if.end62:                                         ; preds = %if.then60, %if.end52
  %26 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3330
  %power63 = getelementptr inbounds %struct.device, %struct.device* %26, i32 0, i32 11, !dbg !3331
  %idle_notification64 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power63, i32 0, i32 15, !dbg !3332
  %bf.load65 = load i16, i16* %idle_notification64, align 8, !dbg !3333
  %bf.clear66 = and i16 %bf.load65, -9, !dbg !3333
  store i16 %bf.clear66, i16* %idle_notification64, align 8, !dbg !3333
  %27 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3334
  %power67 = getelementptr inbounds %struct.device, %struct.device* %27, i32 0, i32 11, !dbg !3334
  %wait_queue = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power67, i32 0, i32 11, !dbg !3334
  call void @__wake_up(%struct.wait_queue_head* %wait_queue, i32 3, i32 0, i8* null) #7, !dbg !3334
  br label %out, !dbg !3334

out:                                              ; preds = %if.end62, %if.then31, %if.then21
  call void @llvm.dbg.label(metadata !3335), !dbg !3336
  %28 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3337
  br label %__here68, !dbg !3338

__here68:                                         ; preds = %indirectgoto, %out
  call void @llvm.dbg.label(metadata !3340), !dbg !3338
  store i64 ptrtoint (i8* blockaddress(@rpm_idle, %__here68) to i64), i64* %tmp69, align 8, !dbg !3338
  %29 = load i64, i64* %tmp69, align 8, !dbg !3338
  %30 = load i32, i32* %retval1, align 4, !dbg !3341
  call void @trace_rpm_return_int_rcuidle(%struct.device* %28, i64 %29, i32 %30) #7, !dbg !3342
  %31 = load i32, i32* %retval1, align 4, !dbg !3343
  %tobool70 = icmp ne i32 %31, 0, !dbg !3343
  br i1 %tobool70, label %cond.true, label %cond.false, !dbg !3343

cond.true:                                        ; preds = %__here68
  %32 = load i32, i32* %retval1, align 4, !dbg !3344
  br label %cond.end, !dbg !3343

cond.false:                                       ; preds = %__here68
  %33 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3345
  %34 = load i32, i32* %rpmflags.addr, align 4, !dbg !3346
  %or = or i32 %34, 8, !dbg !3347
  %call71 = call i32 @rpm_suspend(%struct.device* %33, i32 %or) #7, !dbg !3348
  br label %cond.end, !dbg !3343

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %32, %cond.true ], [ %call71, %cond.false ], !dbg !3343
  store i32 %cond, i32* %retval, align 4, !dbg !3349
  br label %return, !dbg !3349

return:                                           ; preds = %cond.end, %__here
  %35 = load i32, i32* %retval, align 4, !dbg !3350
  ret i32 %35, !dbg !3350

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here, label %__here68]
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__pm_runtime_suspend(%struct.device* %dev, i32 %rpmflags) #0 !dbg !3351 {
entry:
  %lock.addr.i39 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i39, metadata !2149, metadata !DIExpression()), !dbg !3352
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !2157, metadata !DIExpression()), !dbg !3354
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2159, metadata !DIExpression()), !dbg !3355
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !3125, metadata !DIExpression()), !dbg !3362
  %c.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i.i, metadata !3136, metadata !DIExpression()), !dbg !3368
  %tmp.i.i = alloca i8, align 1
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !2564, metadata !DIExpression()), !dbg !3369
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !2574, metadata !DIExpression()), !dbg !3371
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !3142, metadata !DIExpression()), !dbg !3372
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %rpmflags.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %retval1 = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy19 = alloca i64, align 8
  %__dummy220 = alloca i64, align 8
  %tmp23 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !3373, metadata !DIExpression()), !dbg !3374
  store i32 %rpmflags, i32* %rpmflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rpmflags.addr, metadata !3375, metadata !DIExpression()), !dbg !3376
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !3377, metadata !DIExpression()), !dbg !3378
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !3379, metadata !DIExpression()), !dbg !3380
  %0 = load i32, i32* %rpmflags.addr, align 4, !dbg !3381
  %and = and i32 %0, 4, !dbg !3382
  %tobool = icmp ne i32 %and, 0, !dbg !3382
  br i1 %tobool, label %if.then, label %if.end3, !dbg !3383

if.then:                                          ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3384
  %power = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !3385
  %usage_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 13, !dbg !3386
  store %struct.atomic_t* %usage_count, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !3387
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !3387
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !3388
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !3389
  %conv.i.i = trunc i64 %5 to i32, !dbg !3389
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #8, !dbg !3390
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !3391
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !3391
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #8, !dbg !3391
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !3392
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i1.i, align 8
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !3368
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %9, i32 0, i32 0, !dbg !3368
  %10 = call i8 asm sideeffect "decl $0\0A\09/* output condition code e*/\0A", "=*m,={@cce},*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #6, !dbg !3368, !srcloc !3164
  store i8 %10, i8* %c.i.i, align 1, !dbg !3368
  %11 = load i8, i8* %c.i.i, align 1, !dbg !3368
  %tobool.i.i = trunc i8 %11 to i1, !dbg !3368
  %frombool.i.i = zext i1 %tobool.i.i to i8, !dbg !3368
  store i8 %frombool.i.i, i8* %tmp.i.i, align 1, !dbg !3368
  %12 = load i8, i8* %tmp.i.i, align 1, !dbg !3368
  %tobool1.i.i = trunc i8 %12 to i1, !dbg !3368
  br i1 %tobool1.i.i, label %if.end, label %if.then2, !dbg !3393

if.then2:                                         ; preds = %if.then
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3394
  %14 = load i32, i32* %rpmflags.addr, align 4, !dbg !3396
  call void @trace_rpm_usage_rcuidle(%struct.device* %13, i32 %14) #7, !dbg !3397
  store i32 0, i32* %retval, align 4, !dbg !3398
  br label %return, !dbg !3398

if.end:                                           ; preds = %if.then
  br label %if.end3, !dbg !3399

if.end3:                                          ; preds = %if.end, %entry
  br label %do.body, !dbg !3400

do.body:                                          ; preds = %if.end3
  %15 = load i32, i32* %rpmflags.addr, align 4, !dbg !3401
  %and4 = and i32 %15, 1, !dbg !3401
  %tobool5 = icmp ne i32 %and4, 0, !dbg !3401
  br i1 %tobool5, label %if.end12, label %land.lhs.true, !dbg !3401

land.lhs.true:                                    ; preds = %do.body
  %16 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3401
  %power6 = getelementptr inbounds %struct.device, %struct.device* %16, i32 0, i32 11, !dbg !3401
  %irq_safe = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power6, i32 0, i32 15, !dbg !3401
  %bf.load = load i16, i16* %irq_safe, align 8, !dbg !3401
  %bf.lshr = lshr i16 %bf.load, 9, !dbg !3401
  %bf.clear = and i16 %bf.lshr, 1, !dbg !3401
  %bf.cast = zext i16 %bf.clear to i32, !dbg !3401
  %tobool7 = icmp ne i32 %bf.cast, 0, !dbg !3401
  br i1 %tobool7, label %if.end12, label %if.then8, !dbg !3404

if.then8:                                         ; preds = %land.lhs.true
  br label %do.body9, !dbg !3401

do.body9:                                         ; preds = %if.then8
  br label %do.body10, !dbg !3405

do.body10:                                        ; preds = %do.body9
  br label %do.end, !dbg !3407

do.end:                                           ; preds = %do.body10
  br label %do.end11, !dbg !3405

do.end11:                                         ; preds = %do.end
  br label %if.end12, !dbg !3405

if.end12:                                         ; preds = %do.end11, %land.lhs.true, %do.body
  br label %do.end13, !dbg !3404

do.end13:                                         ; preds = %if.end12
  br label %do.body14, !dbg !3409

do.body14:                                        ; preds = %do.end13
  br label %do.body15, !dbg !3410

do.body15:                                        ; preds = %do.body14
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !3411, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !3414, metadata !DIExpression()), !dbg !3413
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !3413
  %conv = zext i1 %cmp to i32, !dbg !3413
  store i32 1, i32* %tmp, align 4, !dbg !3413
  %17 = load i32, i32* %tmp, align 4, !dbg !3413
  br label %do.body16, !dbg !3415

do.body16:                                        ; preds = %do.body15
  br label %do.body17, !dbg !3416

do.body17:                                        ; preds = %do.body16
  br label %do.body18, !dbg !3417

do.body18:                                        ; preds = %do.body17
  call void @llvm.dbg.declare(metadata i64* %__dummy19, metadata !3419, metadata !DIExpression()), !dbg !3422
  call void @llvm.dbg.declare(metadata i64* %__dummy220, metadata !3423, metadata !DIExpression()), !dbg !3422
  %cmp21 = icmp eq i64* %__dummy19, %__dummy220, !dbg !3422
  %conv22 = zext i1 %cmp21 to i32, !dbg !3422
  store i32 1, i32* %tmp23, align 4, !dbg !3422
  %18 = load i32, i32* %tmp23, align 4, !dbg !3422
  %call24 = call i64 @arch_local_irq_save() #7, !dbg !3424
  store i64 %call24, i64* %flags, align 8, !dbg !3424
  br label %do.end25, !dbg !3424

do.end25:                                         ; preds = %do.body18
  br label %do.end26, !dbg !3417

do.end26:                                         ; preds = %do.end25
  br label %do.body27, !dbg !3416

do.body27:                                        ; preds = %do.end26
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3425, !srcloc !3426
  br label %do.body28, !dbg !3425

do.body28:                                        ; preds = %do.body27
  %19 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3427
  %power29 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 11, !dbg !3427
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power29, i32 0, i32 3, !dbg !3427
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !3428
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !3429
  %rlock.i = bitcast %union.anon* %21 to %struct.raw_spinlock*, !dbg !3429
  br label %do.end31, !dbg !3427

do.end31:                                         ; preds = %do.body28
  br label %do.end32, !dbg !3425

do.end32:                                         ; preds = %do.end31
  br label %do.end33, !dbg !3416

do.end33:                                         ; preds = %do.end32
  br label %do.end34, !dbg !3415

do.end34:                                         ; preds = %do.end33
  br label %do.end35, !dbg !3410

do.end35:                                         ; preds = %do.end34
  %22 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3430
  %23 = load i32, i32* %rpmflags.addr, align 4, !dbg !3431
  %call36 = call i32 @rpm_suspend(%struct.device* %22, i32 %23) #7, !dbg !3432
  store i32 %call36, i32* %retval1, align 4, !dbg !3433
  %24 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3434
  %power37 = getelementptr inbounds %struct.device, %struct.device* %24, i32 0, i32 11, !dbg !3435
  %lock38 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power37, i32 0, i32 3, !dbg !3436
  %25 = load i64, i64* %flags, align 8, !dbg !3437
  store %struct.spinlock* %lock38, %struct.spinlock** %lock.addr.i39, align 8
  store i64 %25, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !47, metadata !2214, metadata !DIExpression()) #6, !dbg !3438
  call void @llvm.dbg.declare(metadata !47, metadata !2218, metadata !DIExpression()) #6, !dbg !3438
  store i32 1, i32* %tmp.i, align 4, !dbg !3438
  %26 = load i32, i32* %tmp.i, align 4, !dbg !3438
  call void @llvm.dbg.declare(metadata !47, metadata !2219, metadata !DIExpression()) #6, !dbg !3439
  call void @llvm.dbg.declare(metadata !47, metadata !2225, metadata !DIExpression()) #6, !dbg !3439
  store i32 1, i32* %tmp8.i, align 4, !dbg !3439
  %27 = load i32, i32* %tmp8.i, align 4, !dbg !3439
  %28 = load i64, i64* %flags.addr.i, align 8, !dbg !3440
  call void @arch_local_irq_restore(i64 %28) #8, !dbg !3440
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3441, !srcloc !2229
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i39, align 8, !dbg !3442
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !3442
  %rlock.i40 = bitcast %union.anon* %30 to %struct.raw_spinlock*, !dbg !3442
  %31 = load i32, i32* %retval1, align 4, !dbg !3443
  store i32 %31, i32* %retval, align 4, !dbg !3444
  br label %return, !dbg !3444

return:                                           ; preds = %do.end35, %if.then2
  %32 = load i32, i32* %retval, align 4, !dbg !3445
  ret i32 %32, !dbg !3445
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__pm_runtime_resume(%struct.device* %dev, i32 %rpmflags) #0 !dbg !3446 {
entry:
  %lock.addr.i39 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i39, metadata !2149, metadata !DIExpression()), !dbg !3447
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !2157, metadata !DIExpression()), !dbg !3449
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2159, metadata !DIExpression()), !dbg !3450
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !3457, metadata !DIExpression()), !dbg !3461
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !2564, metadata !DIExpression()), !dbg !3466
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !2574, metadata !DIExpression()), !dbg !3468
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !3469, metadata !DIExpression()), !dbg !3470
  %dev.addr = alloca %struct.device*, align 8
  %rpmflags.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %retval1 = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy20 = alloca i64, align 8
  %__dummy221 = alloca i64, align 8
  %tmp24 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !3471, metadata !DIExpression()), !dbg !3472
  store i32 %rpmflags, i32* %rpmflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rpmflags.addr, metadata !3473, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !3475, metadata !DIExpression()), !dbg !3476
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !3477, metadata !DIExpression()), !dbg !3478
  br label %do.body, !dbg !3479

do.body:                                          ; preds = %entry
  %0 = load i32, i32* %rpmflags.addr, align 4, !dbg !3480
  %and = and i32 %0, 1, !dbg !3480
  %tobool = icmp ne i32 %and, 0, !dbg !3480
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !3480

land.lhs.true:                                    ; preds = %do.body
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3480
  %power = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !3480
  %irq_safe = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 15, !dbg !3480
  %bf.load = load i16, i16* %irq_safe, align 8, !dbg !3480
  %bf.lshr = lshr i16 %bf.load, 9, !dbg !3480
  %bf.clear = and i16 %bf.lshr, 1, !dbg !3480
  %bf.cast = zext i16 %bf.clear to i32, !dbg !3480
  %tobool2 = icmp ne i32 %bf.cast, 0, !dbg !3480
  br i1 %tobool2, label %if.end, label %land.lhs.true3, !dbg !3480

land.lhs.true3:                                   ; preds = %land.lhs.true
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3480
  %power4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 11, !dbg !3480
  %runtime_status = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power4, i32 0, i32 18, !dbg !3480
  %3 = load i32, i32* %runtime_status, align 4, !dbg !3480
  %cmp = icmp ne i32 %3, 0, !dbg !3480
  br i1 %cmp, label %if.then, label %if.end, !dbg !3483

if.then:                                          ; preds = %land.lhs.true3
  br label %do.body5, !dbg !3480

do.body5:                                         ; preds = %if.then
  br label %do.body6, !dbg !3484

do.body6:                                         ; preds = %do.body5
  br label %do.end, !dbg !3486

do.end:                                           ; preds = %do.body6
  br label %do.end7, !dbg !3484

do.end7:                                          ; preds = %do.end
  br label %if.end, !dbg !3484

if.end:                                           ; preds = %do.end7, %land.lhs.true3, %land.lhs.true, %do.body
  br label %do.end8, !dbg !3483

do.end8:                                          ; preds = %if.end
  %4 = load i32, i32* %rpmflags.addr, align 4, !dbg !3488
  %and9 = and i32 %4, 4, !dbg !3489
  %tobool10 = icmp ne i32 %and9, 0, !dbg !3489
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !3490

if.then11:                                        ; preds = %do.end8
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3491
  %power12 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 11, !dbg !3492
  %usage_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power12, i32 0, i32 13, !dbg !3493
  store %struct.atomic_t* %usage_count, %struct.atomic_t** %v.addr.i, align 8
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !3494
  %7 = bitcast %struct.atomic_t* %6 to i8*, !dbg !3494
  store i8* %7, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %8 = load i8*, i8** %v.addr.i.i, align 8, !dbg !3495
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !3496
  %conv.i.i = trunc i64 %9 to i32, !dbg !3496
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %8, i32 %conv.i.i) #8, !dbg !3497
  %10 = load i8*, i8** %v.addr.i.i, align 8, !dbg !3498
  %11 = load i64, i64* %size.addr.i.i, align 8, !dbg !3498
  call void @kcsan_check_access(i8* %10, i64 %11, i32 7) #8, !dbg !3498
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !3499
  store %struct.atomic_t* %12, %struct.atomic_t** %v.addr.i1.i, align 8
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !3500
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %13, i32 0, i32 0, !dbg !3501
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #6, !dbg !3502, !srcloc !3503
  br label %if.end13, !dbg !3504

if.end13:                                         ; preds = %if.then11, %do.end8
  br label %do.body14, !dbg !3505

do.body14:                                        ; preds = %if.end13
  br label %do.body15, !dbg !3506

do.body15:                                        ; preds = %do.body14
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !3507, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !3510, metadata !DIExpression()), !dbg !3509
  %cmp16 = icmp eq i64* %__dummy, %__dummy2, !dbg !3509
  %conv = zext i1 %cmp16 to i32, !dbg !3509
  store i32 1, i32* %tmp, align 4, !dbg !3509
  %14 = load i32, i32* %tmp, align 4, !dbg !3509
  br label %do.body17, !dbg !3511

do.body17:                                        ; preds = %do.body15
  br label %do.body18, !dbg !3512

do.body18:                                        ; preds = %do.body17
  br label %do.body19, !dbg !3513

do.body19:                                        ; preds = %do.body18
  call void @llvm.dbg.declare(metadata i64* %__dummy20, metadata !3515, metadata !DIExpression()), !dbg !3518
  call void @llvm.dbg.declare(metadata i64* %__dummy221, metadata !3519, metadata !DIExpression()), !dbg !3518
  %cmp22 = icmp eq i64* %__dummy20, %__dummy221, !dbg !3518
  %conv23 = zext i1 %cmp22 to i32, !dbg !3518
  store i32 1, i32* %tmp24, align 4, !dbg !3518
  %15 = load i32, i32* %tmp24, align 4, !dbg !3518
  %call = call i64 @arch_local_irq_save() #7, !dbg !3520
  store i64 %call, i64* %flags, align 8, !dbg !3520
  br label %do.end25, !dbg !3520

do.end25:                                         ; preds = %do.body19
  br label %do.end26, !dbg !3513

do.end26:                                         ; preds = %do.end25
  br label %do.body27, !dbg !3512

do.body27:                                        ; preds = %do.end26
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3521, !srcloc !3522
  br label %do.body28, !dbg !3521

do.body28:                                        ; preds = %do.body27
  %16 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3523
  %power29 = getelementptr inbounds %struct.device, %struct.device* %16, i32 0, i32 11, !dbg !3523
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power29, i32 0, i32 3, !dbg !3523
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !3524
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !3525
  %rlock.i = bitcast %union.anon* %18 to %struct.raw_spinlock*, !dbg !3525
  br label %do.end31, !dbg !3523

do.end31:                                         ; preds = %do.body28
  br label %do.end32, !dbg !3521

do.end32:                                         ; preds = %do.end31
  br label %do.end33, !dbg !3512

do.end33:                                         ; preds = %do.end32
  br label %do.end34, !dbg !3511

do.end34:                                         ; preds = %do.end33
  br label %do.end35, !dbg !3506

do.end35:                                         ; preds = %do.end34
  %19 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3526
  %20 = load i32, i32* %rpmflags.addr, align 4, !dbg !3527
  %call36 = call i32 @rpm_resume(%struct.device* %19, i32 %20) #7, !dbg !3528
  store i32 %call36, i32* %retval1, align 4, !dbg !3529
  %21 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3530
  %power37 = getelementptr inbounds %struct.device, %struct.device* %21, i32 0, i32 11, !dbg !3531
  %lock38 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power37, i32 0, i32 3, !dbg !3532
  %22 = load i64, i64* %flags, align 8, !dbg !3533
  store %struct.spinlock* %lock38, %struct.spinlock** %lock.addr.i39, align 8
  store i64 %22, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !47, metadata !2214, metadata !DIExpression()) #6, !dbg !3534
  call void @llvm.dbg.declare(metadata !47, metadata !2218, metadata !DIExpression()) #6, !dbg !3534
  store i32 1, i32* %tmp.i, align 4, !dbg !3534
  %23 = load i32, i32* %tmp.i, align 4, !dbg !3534
  call void @llvm.dbg.declare(metadata !47, metadata !2219, metadata !DIExpression()) #6, !dbg !3535
  call void @llvm.dbg.declare(metadata !47, metadata !2225, metadata !DIExpression()) #6, !dbg !3535
  store i32 1, i32* %tmp8.i, align 4, !dbg !3535
  %24 = load i32, i32* %tmp8.i, align 4, !dbg !3535
  %25 = load i64, i64* %flags.addr.i, align 8, !dbg !3536
  call void @arch_local_irq_restore(i64 %25) #8, !dbg !3536
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3537, !srcloc !2229
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i39, align 8, !dbg !3538
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !3538
  %rlock.i40 = bitcast %union.anon* %27 to %struct.raw_spinlock*, !dbg !3538
  %28 = load i32, i32* %retval1, align 4, !dbg !3539
  ret i32 %28, !dbg !3540
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rpm_resume(%struct.device* %dev, i32 %rpmflags) #0 !dbg !3541 {
entry:
  %lock.addr.i278 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i278, metadata !2290, metadata !DIExpression()), !dbg !3542
  %lock.addr.i276 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i276, metadata !2281, metadata !DIExpression()), !dbg !3546
  %v.addr.i1.i269 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i269, metadata !3457, metadata !DIExpression()), !dbg !3548
  %v.addr.i.i270 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i270, metadata !2564, metadata !DIExpression()), !dbg !3554
  %size.addr.i.i271 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i271, metadata !2574, metadata !DIExpression()), !dbg !3556
  %v.addr.i272 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i272, metadata !3469, metadata !DIExpression()), !dbg !3557
  %lock.addr.i267 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i267, metadata !2476, metadata !DIExpression()), !dbg !3558
  %lock.addr.i265 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i265, metadata !2484, metadata !DIExpression()), !dbg !3562
  %lock.addr.i263 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i263, metadata !2476, metadata !DIExpression()), !dbg !3564
  %lock.addr.i261 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i261, metadata !2484, metadata !DIExpression()), !dbg !3566
  %lock.addr.i259 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i259, metadata !2484, metadata !DIExpression()), !dbg !3568
  %lock.addr.i257 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i257, metadata !2484, metadata !DIExpression()), !dbg !3572
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !3457, metadata !DIExpression()), !dbg !3576
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !2564, metadata !DIExpression()), !dbg !3579
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !2574, metadata !DIExpression()), !dbg !3581
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !3469, metadata !DIExpression()), !dbg !3582
  %lock.addr.i255 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i255, metadata !2159, metadata !DIExpression()), !dbg !3583
  %lock.addr.i253 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i253, metadata !2290, metadata !DIExpression()), !dbg !3588
  %lock.addr.i251 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i251, metadata !2281, metadata !DIExpression()), !dbg !3595
  %lock.addr.i249 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i249, metadata !2476, metadata !DIExpression()), !dbg !3597
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2484, metadata !DIExpression()), !dbg !3601
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !2488, metadata !DIExpression()), !dbg !3603
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !2496, metadata !DIExpression()), !dbg !3605
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !2499, metadata !DIExpression()), !dbg !3606
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %rpmflags.addr = alloca i32, align 4
  %callback = alloca i32 (%struct.device*)*, align 8
  %parent = alloca %struct.device*, align 8
  %retval1 = alloca i32, align 4
  %wait = alloca %struct.wait_queue_entry, align 8
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !3607, metadata !DIExpression()), !dbg !3608
  store i32 %rpmflags, i32* %rpmflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rpmflags.addr, metadata !3609, metadata !DIExpression()), !dbg !3610
  call void @llvm.dbg.declare(metadata i32 (%struct.device*)** %callback, metadata !3611, metadata !DIExpression()), !dbg !3612
  call void @llvm.dbg.declare(metadata %struct.device** %parent, metadata !3613, metadata !DIExpression()), !dbg !3614
  store %struct.device* null, %struct.device** %parent, align 8, !dbg !3614
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !3615, metadata !DIExpression()), !dbg !3616
  store i32 0, i32* %retval1, align 4, !dbg !3616
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3617
  %1 = load i32, i32* %rpmflags.addr, align 4, !dbg !3618
  call void @trace_rpm_resume_rcuidle(%struct.device* %0, i32 %1) #7, !dbg !3619
  br label %repeat, !dbg !3619

repeat:                                           ; preds = %if.end205, %for.end, %if.then66, %entry
  call void @llvm.dbg.label(metadata !3620), !dbg !3621
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3622
  %power = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 11, !dbg !3624
  %runtime_error = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 19, !dbg !3625
  %3 = load i32, i32* %runtime_error, align 8, !dbg !3625
  %tobool = icmp ne i32 %3, 0, !dbg !3622
  br i1 %tobool, label %if.then, label %if.else, !dbg !3626

if.then:                                          ; preds = %repeat
  store i32 -22, i32* %retval1, align 4, !dbg !3627
  br label %if.end20, !dbg !3628

if.else:                                          ; preds = %repeat
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3629
  %power2 = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 11, !dbg !3631
  %disable_depth = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power2, i32 0, i32 15, !dbg !3632
  %bf.load = load i16, i16* %disable_depth, align 8, !dbg !3632
  %bf.clear = and i16 %bf.load, 7, !dbg !3632
  %bf.cast = zext i16 %bf.clear to i32, !dbg !3632
  %cmp = icmp eq i32 %bf.cast, 1, !dbg !3633
  br i1 %cmp, label %land.lhs.true, label %if.else11, !dbg !3634

land.lhs.true:                                    ; preds = %if.else
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3635
  %power3 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 11, !dbg !3636
  %is_suspended = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power3, i32 0, i32 1, !dbg !3637
  %bf.load4 = load i16, i16* %is_suspended, align 4, !dbg !3637
  %bf.lshr = lshr i16 %bf.load4, 4, !dbg !3637
  %bf.clear5 = and i16 %bf.lshr, 1, !dbg !3637
  %bf.cast6 = trunc i16 %bf.clear5 to i1, !dbg !3637
  br i1 %bf.cast6, label %land.lhs.true7, label %if.else11, !dbg !3638

land.lhs.true7:                                   ; preds = %land.lhs.true
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3639
  %power8 = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 11, !dbg !3640
  %runtime_status = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power8, i32 0, i32 18, !dbg !3641
  %7 = load i32, i32* %runtime_status, align 4, !dbg !3641
  %cmp9 = icmp eq i32 %7, 0, !dbg !3642
  br i1 %cmp9, label %if.then10, label %if.else11, !dbg !3643

if.then10:                                        ; preds = %land.lhs.true7
  store i32 1, i32* %retval1, align 4, !dbg !3644
  br label %if.end19, !dbg !3645

if.else11:                                        ; preds = %land.lhs.true7, %land.lhs.true, %if.else
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3646
  %power12 = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 11, !dbg !3648
  %disable_depth13 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power12, i32 0, i32 15, !dbg !3649
  %bf.load14 = load i16, i16* %disable_depth13, align 8, !dbg !3649
  %bf.clear15 = and i16 %bf.load14, 7, !dbg !3649
  %bf.cast16 = zext i16 %bf.clear15 to i32, !dbg !3649
  %cmp17 = icmp sgt i32 %bf.cast16, 0, !dbg !3650
  br i1 %cmp17, label %if.then18, label %if.end, !dbg !3651

if.then18:                                        ; preds = %if.else11
  store i32 -13, i32* %retval1, align 4, !dbg !3652
  br label %if.end, !dbg !3653

if.end:                                           ; preds = %if.then18, %if.else11
  br label %if.end19

if.end19:                                         ; preds = %if.end, %if.then10
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then
  %9 = load i32, i32* %retval1, align 4, !dbg !3654
  %tobool21 = icmp ne i32 %9, 0, !dbg !3654
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !3656

if.then22:                                        ; preds = %if.end20
  br label %out, !dbg !3657

if.end23:                                         ; preds = %if.end20
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3658
  %power24 = getelementptr inbounds %struct.device, %struct.device* %10, i32 0, i32 11, !dbg !3659
  %request = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power24, i32 0, i32 17, !dbg !3660
  store i32 0, i32* %request, align 8, !dbg !3661
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3662
  %power25 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 11, !dbg !3664
  %timer_autosuspends = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power25, i32 0, i32 15, !dbg !3665
  %bf.load26 = load i16, i16* %timer_autosuspends, align 8, !dbg !3665
  %bf.lshr27 = lshr i16 %bf.load26, 11, !dbg !3665
  %bf.clear28 = and i16 %bf.lshr27, 1, !dbg !3665
  %bf.cast29 = zext i16 %bf.clear28 to i32, !dbg !3665
  %tobool30 = icmp ne i32 %bf.cast29, 0, !dbg !3662
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !3666

if.then31:                                        ; preds = %if.end23
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3667
  call void @pm_runtime_deactivate_timer(%struct.device* %12) #7, !dbg !3668
  br label %if.end32, !dbg !3668

if.end32:                                         ; preds = %if.then31, %if.end23
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3669
  %power33 = getelementptr inbounds %struct.device, %struct.device* %13, i32 0, i32 11, !dbg !3671
  %runtime_status34 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power33, i32 0, i32 18, !dbg !3672
  %14 = load i32, i32* %runtime_status34, align 4, !dbg !3672
  %cmp35 = icmp eq i32 %14, 0, !dbg !3673
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !3674

if.then36:                                        ; preds = %if.end32
  store i32 1, i32* %retval1, align 4, !dbg !3675
  br label %out, !dbg !3677

if.end37:                                         ; preds = %if.end32
  %15 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3678
  %power38 = getelementptr inbounds %struct.device, %struct.device* %15, i32 0, i32 11, !dbg !3679
  %runtime_status39 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power38, i32 0, i32 18, !dbg !3680
  %16 = load i32, i32* %runtime_status39, align 4, !dbg !3680
  %cmp40 = icmp eq i32 %16, 1, !dbg !3681
  br i1 %cmp40, label %if.then44, label %lor.lhs.false, !dbg !3682

lor.lhs.false:                                    ; preds = %if.end37
  %17 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3683
  %power41 = getelementptr inbounds %struct.device, %struct.device* %17, i32 0, i32 11, !dbg !3684
  %runtime_status42 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power41, i32 0, i32 18, !dbg !3685
  %18 = load i32, i32* %runtime_status42, align 4, !dbg !3685
  %cmp43 = icmp eq i32 %18, 3, !dbg !3686
  br i1 %cmp43, label %if.then44, label %if.end87, !dbg !3687

if.then44:                                        ; preds = %lor.lhs.false, %if.end37
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %wait, metadata !3688, metadata !DIExpression()), !dbg !3689
  %flags = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 0, !dbg !3689
  store i32 0, i32* %flags, align 8, !dbg !3689
  %private = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 1, !dbg !3689
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !3605
  %19 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !3605
  %20 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #9, !dbg !3606, !srcloc !2712
  store i64 %20, i64* %pfo_val__.i, align 8, !dbg !3606
  %21 = load i64, i64* %pfo_val__.i, align 8, !dbg !3606
  %22 = inttoptr i64 %21 to %struct.task_struct*, !dbg !3606
  store %struct.task_struct* %22, %struct.task_struct** %tmp.i, align 8, !dbg !3606
  %23 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !3606
  store %struct.task_struct* %23, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !3603
  %24 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !3603
  store %struct.task_struct* %24, %struct.task_struct** %tmp1.i, align 8, !dbg !3603
  %25 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !3603
  %26 = bitcast %struct.task_struct* %25 to i8*, !dbg !3689
  store i8* %26, i8** %private, align 8, !dbg !3689
  %func = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 2, !dbg !3689
  store i32 (%struct.wait_queue_entry*, i32, i32, i8*)* @autoremove_wake_function, i32 (%struct.wait_queue_entry*, i32, i32, i8*)** %func, align 8, !dbg !3689
  %entry45 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 3, !dbg !3689
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry45, i32 0, i32 0, !dbg !3689
  %entry46 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 3, !dbg !3689
  store %struct.list_head* %entry46, %struct.list_head** %next, align 8, !dbg !3689
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %entry45, i32 0, i32 1, !dbg !3689
  %entry47 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 3, !dbg !3689
  store %struct.list_head* %entry47, %struct.list_head** %prev, align 8, !dbg !3689
  %27 = load i32, i32* %rpmflags.addr, align 4, !dbg !3690
  %and = and i32 %27, 3, !dbg !3692
  %tobool48 = icmp ne i32 %and, 0, !dbg !3692
  br i1 %tobool48, label %if.then49, label %if.end59, !dbg !3693

if.then49:                                        ; preds = %if.then44
  %28 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3694
  %power50 = getelementptr inbounds %struct.device, %struct.device* %28, i32 0, i32 11, !dbg !3697
  %runtime_status51 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power50, i32 0, i32 18, !dbg !3698
  %29 = load i32, i32* %runtime_status51, align 4, !dbg !3698
  %cmp52 = icmp eq i32 %29, 3, !dbg !3699
  br i1 %cmp52, label %if.then53, label %if.else57, !dbg !3700

if.then53:                                        ; preds = %if.then49
  %30 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3701
  %power54 = getelementptr inbounds %struct.device, %struct.device* %30, i32 0, i32 11, !dbg !3702
  %deferred_resume = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power54, i32 0, i32 15, !dbg !3703
  %bf.load55 = load i16, i16* %deferred_resume, align 8, !dbg !3704
  %bf.clear56 = and i16 %bf.load55, -33, !dbg !3704
  %bf.set = or i16 %bf.clear56, 32, !dbg !3704
  store i16 %bf.set, i16* %deferred_resume, align 8, !dbg !3704
  br label %if.end58, !dbg !3701

if.else57:                                        ; preds = %if.then49
  store i32 -115, i32* %retval1, align 4, !dbg !3705
  br label %if.end58

if.end58:                                         ; preds = %if.else57, %if.then53
  br label %out, !dbg !3706

if.end59:                                         ; preds = %if.then44
  %31 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3707
  %power60 = getelementptr inbounds %struct.device, %struct.device* %31, i32 0, i32 11, !dbg !3708
  %irq_safe = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power60, i32 0, i32 15, !dbg !3709
  %bf.load61 = load i16, i16* %irq_safe, align 8, !dbg !3709
  %bf.lshr62 = lshr i16 %bf.load61, 9, !dbg !3709
  %bf.clear63 = and i16 %bf.lshr62, 1, !dbg !3709
  %bf.cast64 = zext i16 %bf.clear63 to i32, !dbg !3709
  %tobool65 = icmp ne i32 %bf.cast64, 0, !dbg !3707
  br i1 %tobool65, label %if.then66, label %if.end70, !dbg !3710

if.then66:                                        ; preds = %if.end59
  %32 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3711
  %power67 = getelementptr inbounds %struct.device, %struct.device* %32, i32 0, i32 11, !dbg !3712
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power67, i32 0, i32 3, !dbg !3713
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3714, !srcloc !2729
  %33 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !3715
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0, !dbg !3715
  %rlock.i = bitcast %union.anon* %34 to %struct.raw_spinlock*, !dbg !3715
  call void asm sideeffect "rep; nop", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3716, !srcloc !2740
  %35 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3719
  %power68 = getelementptr inbounds %struct.device, %struct.device* %35, i32 0, i32 11, !dbg !3720
  %lock69 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power68, i32 0, i32 3, !dbg !3721
  store %struct.spinlock* %lock69, %struct.spinlock** %lock.addr.i249, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3722, !srcloc !2746
  %36 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i249, align 8, !dbg !3723
  %37 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %36, i32 0, i32 0, !dbg !3723
  %rlock.i250 = bitcast %union.anon* %37 to %struct.raw_spinlock*, !dbg !3723
  br label %repeat, !dbg !3724

if.end70:                                         ; preds = %if.end59
  br label %for.cond, !dbg !3725

for.cond:                                         ; preds = %if.end80, %if.end70
  %38 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3726
  %power71 = getelementptr inbounds %struct.device, %struct.device* %38, i32 0, i32 11, !dbg !3727
  %wait_queue = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power71, i32 0, i32 11, !dbg !3728
  call void @prepare_to_wait(%struct.wait_queue_head* %wait_queue, %struct.wait_queue_entry* %wait, i32 2) #7, !dbg !3729
  %39 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3730
  %power72 = getelementptr inbounds %struct.device, %struct.device* %39, i32 0, i32 11, !dbg !3732
  %runtime_status73 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power72, i32 0, i32 18, !dbg !3733
  %40 = load i32, i32* %runtime_status73, align 4, !dbg !3733
  %cmp74 = icmp ne i32 %40, 1, !dbg !3734
  br i1 %cmp74, label %land.lhs.true75, label %if.end80, !dbg !3735

land.lhs.true75:                                  ; preds = %for.cond
  %41 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3736
  %power76 = getelementptr inbounds %struct.device, %struct.device* %41, i32 0, i32 11, !dbg !3737
  %runtime_status77 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power76, i32 0, i32 18, !dbg !3738
  %42 = load i32, i32* %runtime_status77, align 4, !dbg !3738
  %cmp78 = icmp ne i32 %42, 3, !dbg !3739
  br i1 %cmp78, label %if.then79, label %if.end80, !dbg !3740

if.then79:                                        ; preds = %land.lhs.true75
  br label %for.end, !dbg !3741

if.end80:                                         ; preds = %land.lhs.true75, %for.cond
  %43 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3742
  %power81 = getelementptr inbounds %struct.device, %struct.device* %43, i32 0, i32 11, !dbg !3743
  %lock82 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power81, i32 0, i32 3, !dbg !3744
  store %struct.spinlock* %lock82, %struct.spinlock** %lock.addr.i251, align 8
  call void @arch_local_irq_enable() #8, !dbg !3745
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3746, !srcloc !2330
  %44 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i251, align 8, !dbg !3747
  %45 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %44, i32 0, i32 0, !dbg !3747
  %rlock.i252 = bitcast %union.anon* %45 to %struct.raw_spinlock*, !dbg !3747
  call void @schedule() #7, !dbg !3748
  %46 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3749
  %power83 = getelementptr inbounds %struct.device, %struct.device* %46, i32 0, i32 11, !dbg !3750
  %lock84 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power83, i32 0, i32 3, !dbg !3751
  store %struct.spinlock* %lock84, %struct.spinlock** %lock.addr.i253, align 8
  call void @arch_local_irq_disable() #8, !dbg !3752
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3753, !srcloc !2310
  %47 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i253, align 8, !dbg !3754
  %48 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %47, i32 0, i32 0, !dbg !3754
  %rlock.i254 = bitcast %union.anon* %48 to %struct.raw_spinlock*, !dbg !3754
  br label %for.cond, !dbg !3755, !llvm.loop !3756

for.end:                                          ; preds = %if.then79
  %49 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3759
  %power85 = getelementptr inbounds %struct.device, %struct.device* %49, i32 0, i32 11, !dbg !3760
  %wait_queue86 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power85, i32 0, i32 11, !dbg !3761
  call void @finish_wait(%struct.wait_queue_head* %wait_queue86, %struct.wait_queue_entry* %wait) #7, !dbg !3762
  br label %repeat, !dbg !3763

if.end87:                                         ; preds = %lor.lhs.false
  %50 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3764
  %power88 = getelementptr inbounds %struct.device, %struct.device* %50, i32 0, i32 11, !dbg !3765
  %no_callbacks = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power88, i32 0, i32 15, !dbg !3766
  %bf.load89 = load i16, i16* %no_callbacks, align 8, !dbg !3766
  %bf.lshr90 = lshr i16 %bf.load89, 8, !dbg !3766
  %bf.clear91 = and i16 %bf.lshr90, 1, !dbg !3766
  %bf.cast92 = zext i16 %bf.clear91 to i32, !dbg !3766
  %tobool93 = icmp ne i32 %bf.cast92, 0, !dbg !3764
  br i1 %tobool93, label %land.lhs.true94, label %if.end137, !dbg !3767

land.lhs.true94:                                  ; preds = %if.end87
  %51 = load %struct.device*, %struct.device** %parent, align 8, !dbg !3768
  %tobool95 = icmp ne %struct.device* %51, null, !dbg !3768
  br i1 %tobool95, label %if.end137, label %land.lhs.true96, !dbg !3769

land.lhs.true96:                                  ; preds = %land.lhs.true94
  %52 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3770
  %parent97 = getelementptr inbounds %struct.device, %struct.device* %52, i32 0, i32 1, !dbg !3771
  %53 = load %struct.device*, %struct.device** %parent97, align 8, !dbg !3771
  %tobool98 = icmp ne %struct.device* %53, null, !dbg !3770
  br i1 %tobool98, label %if.then99, label %if.end137, !dbg !3772

if.then99:                                        ; preds = %land.lhs.true96
  br label %do.body, !dbg !3773

do.body:                                          ; preds = %if.then99
  br label %do.body100, !dbg !3774

do.body100:                                       ; preds = %do.body
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3775, !srcloc !3776
  br label %do.body101, !dbg !3775

do.body101:                                       ; preds = %do.body100
  %54 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3777
  %parent102 = getelementptr inbounds %struct.device, %struct.device* %54, i32 0, i32 1, !dbg !3777
  %55 = load %struct.device*, %struct.device** %parent102, align 8, !dbg !3777
  %power103 = getelementptr inbounds %struct.device, %struct.device* %55, i32 0, i32 11, !dbg !3777
  %lock104 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power103, i32 0, i32 3, !dbg !3777
  store %struct.spinlock* %lock104, %struct.spinlock** %lock.addr.i255, align 8
  %56 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i255, align 8, !dbg !3778
  %57 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %56, i32 0, i32 0, !dbg !3779
  %rlock.i256 = bitcast %union.anon* %57 to %struct.raw_spinlock*, !dbg !3779
  br label %do.end, !dbg !3777

do.end:                                           ; preds = %do.body101
  br label %do.end106, !dbg !3775

do.end106:                                        ; preds = %do.end
  br label %do.end107, !dbg !3774

do.end107:                                        ; preds = %do.end106
  %58 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3780
  %parent108 = getelementptr inbounds %struct.device, %struct.device* %58, i32 0, i32 1, !dbg !3781
  %59 = load %struct.device*, %struct.device** %parent108, align 8, !dbg !3781
  %power109 = getelementptr inbounds %struct.device, %struct.device* %59, i32 0, i32 11, !dbg !3782
  %disable_depth110 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power109, i32 0, i32 15, !dbg !3783
  %bf.load111 = load i16, i16* %disable_depth110, align 8, !dbg !3783
  %bf.clear112 = and i16 %bf.load111, 7, !dbg !3783
  %bf.cast113 = zext i16 %bf.clear112 to i32, !dbg !3783
  %cmp114 = icmp sgt i32 %bf.cast113, 0, !dbg !3784
  br i1 %cmp114, label %if.then127, label %lor.lhs.false115, !dbg !3785

lor.lhs.false115:                                 ; preds = %do.end107
  %60 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3786
  %parent116 = getelementptr inbounds %struct.device, %struct.device* %60, i32 0, i32 1, !dbg !3787
  %61 = load %struct.device*, %struct.device** %parent116, align 8, !dbg !3787
  %power117 = getelementptr inbounds %struct.device, %struct.device* %61, i32 0, i32 11, !dbg !3788
  %ignore_children = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power117, i32 0, i32 15, !dbg !3789
  %bf.load118 = load i16, i16* %ignore_children, align 8, !dbg !3789
  %bf.lshr119 = lshr i16 %bf.load118, 7, !dbg !3789
  %bf.clear120 = and i16 %bf.lshr119, 1, !dbg !3789
  %bf.cast121 = trunc i16 %bf.clear120 to i1, !dbg !3789
  br i1 %bf.cast121, label %if.then127, label %lor.lhs.false122, !dbg !3790

lor.lhs.false122:                                 ; preds = %lor.lhs.false115
  %62 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3791
  %parent123 = getelementptr inbounds %struct.device, %struct.device* %62, i32 0, i32 1, !dbg !3792
  %63 = load %struct.device*, %struct.device** %parent123, align 8, !dbg !3792
  %power124 = getelementptr inbounds %struct.device, %struct.device* %63, i32 0, i32 11, !dbg !3793
  %runtime_status125 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power124, i32 0, i32 18, !dbg !3794
  %64 = load i32, i32* %runtime_status125, align 4, !dbg !3794
  %cmp126 = icmp eq i32 %64, 0, !dbg !3795
  br i1 %cmp126, label %if.then127, label %if.end133, !dbg !3796

if.then127:                                       ; preds = %lor.lhs.false122, %lor.lhs.false115, %do.end107
  %65 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3797
  %parent128 = getelementptr inbounds %struct.device, %struct.device* %65, i32 0, i32 1, !dbg !3798
  %66 = load %struct.device*, %struct.device** %parent128, align 8, !dbg !3798
  %power129 = getelementptr inbounds %struct.device, %struct.device* %66, i32 0, i32 11, !dbg !3799
  %child_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power129, i32 0, i32 14, !dbg !3800
  store %struct.atomic_t* %child_count, %struct.atomic_t** %v.addr.i, align 8
  %67 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !3801
  %68 = bitcast %struct.atomic_t* %67 to i8*, !dbg !3801
  store i8* %68, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %69 = load i8*, i8** %v.addr.i.i, align 8, !dbg !3802
  %70 = load i64, i64* %size.addr.i.i, align 8, !dbg !3803
  %conv.i.i = trunc i64 %70 to i32, !dbg !3803
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %69, i32 %conv.i.i) #8, !dbg !3804
  %71 = load i8*, i8** %v.addr.i.i, align 8, !dbg !3805
  %72 = load i64, i64* %size.addr.i.i, align 8, !dbg !3805
  call void @kcsan_check_access(i8* %71, i64 %72, i32 7) #8, !dbg !3805
  %73 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !3806
  store %struct.atomic_t* %73, %struct.atomic_t** %v.addr.i1.i, align 8
  %74 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !3807
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %74, i32 0, i32 0, !dbg !3808
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #6, !dbg !3809, !srcloc !3503
  %75 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3810
  %parent130 = getelementptr inbounds %struct.device, %struct.device* %75, i32 0, i32 1, !dbg !3811
  %76 = load %struct.device*, %struct.device** %parent130, align 8, !dbg !3811
  %power131 = getelementptr inbounds %struct.device, %struct.device* %76, i32 0, i32 11, !dbg !3812
  %lock132 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power131, i32 0, i32 3, !dbg !3813
  store %struct.spinlock* %lock132, %struct.spinlock** %lock.addr.i257, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3814, !srcloc !2729
  %77 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i257, align 8, !dbg !3815
  %78 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %77, i32 0, i32 0, !dbg !3815
  %rlock.i258 = bitcast %union.anon* %78 to %struct.raw_spinlock*, !dbg !3815
  store i32 1, i32* %retval1, align 4, !dbg !3816
  br label %no_callback, !dbg !3817

if.end133:                                        ; preds = %lor.lhs.false122
  %79 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3818
  %parent134 = getelementptr inbounds %struct.device, %struct.device* %79, i32 0, i32 1, !dbg !3819
  %80 = load %struct.device*, %struct.device** %parent134, align 8, !dbg !3819
  %power135 = getelementptr inbounds %struct.device, %struct.device* %80, i32 0, i32 11, !dbg !3820
  %lock136 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power135, i32 0, i32 3, !dbg !3821
  store %struct.spinlock* %lock136, %struct.spinlock** %lock.addr.i259, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3822, !srcloc !2729
  %81 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i259, align 8, !dbg !3823
  %82 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %81, i32 0, i32 0, !dbg !3823
  %rlock.i260 = bitcast %union.anon* %82 to %struct.raw_spinlock*, !dbg !3823
  br label %if.end137, !dbg !3824

if.end137:                                        ; preds = %if.end133, %land.lhs.true96, %land.lhs.true94, %if.end87
  %83 = load i32, i32* %rpmflags.addr, align 4, !dbg !3825
  %and138 = and i32 %83, 1, !dbg !3827
  %tobool139 = icmp ne i32 %and138, 0, !dbg !3827
  br i1 %tobool139, label %if.then140, label %if.end158, !dbg !3828

if.then140:                                       ; preds = %if.end137
  %84 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3829
  %power141 = getelementptr inbounds %struct.device, %struct.device* %84, i32 0, i32 11, !dbg !3831
  %request142 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power141, i32 0, i32 17, !dbg !3832
  store i32 4, i32* %request142, align 8, !dbg !3833
  %85 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3834
  %power143 = getelementptr inbounds %struct.device, %struct.device* %85, i32 0, i32 11, !dbg !3836
  %request_pending = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power143, i32 0, i32 15, !dbg !3837
  %bf.load144 = load i16, i16* %request_pending, align 8, !dbg !3837
  %bf.lshr145 = lshr i16 %bf.load144, 4, !dbg !3837
  %bf.clear146 = and i16 %bf.lshr145, 1, !dbg !3837
  %bf.cast147 = zext i16 %bf.clear146 to i32, !dbg !3837
  %tobool148 = icmp ne i32 %bf.cast147, 0, !dbg !3834
  br i1 %tobool148, label %if.end157, label %if.then149, !dbg !3838

if.then149:                                       ; preds = %if.then140
  %86 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3839
  %power150 = getelementptr inbounds %struct.device, %struct.device* %86, i32 0, i32 11, !dbg !3841
  %request_pending151 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power150, i32 0, i32 15, !dbg !3842
  %bf.load152 = load i16, i16* %request_pending151, align 8, !dbg !3843
  %bf.clear153 = and i16 %bf.load152, -17, !dbg !3843
  %bf.set154 = or i16 %bf.clear153, 16, !dbg !3843
  store i16 %bf.set154, i16* %request_pending151, align 8, !dbg !3843
  %87 = load %struct.workqueue_struct*, %struct.workqueue_struct** @pm_wq, align 8, !dbg !3844
  %88 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3845
  %power155 = getelementptr inbounds %struct.device, %struct.device* %88, i32 0, i32 11, !dbg !3846
  %work = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power155, i32 0, i32 10, !dbg !3847
  %call156 = call zeroext i1 @queue_work(%struct.workqueue_struct* %87, %struct.work_struct* %work) #7, !dbg !3848
  br label %if.end157, !dbg !3849

if.end157:                                        ; preds = %if.then149, %if.then140
  store i32 0, i32* %retval1, align 4, !dbg !3850
  br label %out, !dbg !3851

if.end158:                                        ; preds = %if.end137
  %89 = load %struct.device*, %struct.device** %parent, align 8, !dbg !3852
  %tobool159 = icmp ne %struct.device* %89, null, !dbg !3852
  br i1 %tobool159, label %if.end206, label %land.lhs.true160, !dbg !3853

land.lhs.true160:                                 ; preds = %if.end158
  %90 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3854
  %parent161 = getelementptr inbounds %struct.device, %struct.device* %90, i32 0, i32 1, !dbg !3855
  %91 = load %struct.device*, %struct.device** %parent161, align 8, !dbg !3855
  %tobool162 = icmp ne %struct.device* %91, null, !dbg !3854
  br i1 %tobool162, label %if.then163, label %if.end206, !dbg !3856

if.then163:                                       ; preds = %land.lhs.true160
  %92 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3857
  %parent164 = getelementptr inbounds %struct.device, %struct.device* %92, i32 0, i32 1, !dbg !3858
  %93 = load %struct.device*, %struct.device** %parent164, align 8, !dbg !3858
  store %struct.device* %93, %struct.device** %parent, align 8, !dbg !3859
  %94 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3860
  %power165 = getelementptr inbounds %struct.device, %struct.device* %94, i32 0, i32 11, !dbg !3862
  %irq_safe166 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power165, i32 0, i32 15, !dbg !3863
  %bf.load167 = load i16, i16* %irq_safe166, align 8, !dbg !3863
  %bf.lshr168 = lshr i16 %bf.load167, 9, !dbg !3863
  %bf.clear169 = and i16 %bf.lshr168, 1, !dbg !3863
  %bf.cast170 = zext i16 %bf.clear169 to i32, !dbg !3863
  %tobool171 = icmp ne i32 %bf.cast170, 0, !dbg !3860
  br i1 %tobool171, label %if.then172, label %if.end173, !dbg !3864

if.then172:                                       ; preds = %if.then163
  br label %skip_parent, !dbg !3865

if.end173:                                        ; preds = %if.then163
  %95 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3866
  %power174 = getelementptr inbounds %struct.device, %struct.device* %95, i32 0, i32 11, !dbg !3867
  %lock175 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power174, i32 0, i32 3, !dbg !3868
  store %struct.spinlock* %lock175, %struct.spinlock** %lock.addr.i261, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3869, !srcloc !2729
  %96 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i261, align 8, !dbg !3870
  %97 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %96, i32 0, i32 0, !dbg !3870
  %rlock.i262 = bitcast %union.anon* %97 to %struct.raw_spinlock*, !dbg !3870
  %98 = load %struct.device*, %struct.device** %parent, align 8, !dbg !3871
  call void @pm_runtime_get_noresume(%struct.device* %98) #7, !dbg !3872
  %99 = load %struct.device*, %struct.device** %parent, align 8, !dbg !3873
  %power176 = getelementptr inbounds %struct.device, %struct.device* %99, i32 0, i32 11, !dbg !3874
  %lock177 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power176, i32 0, i32 3, !dbg !3875
  store %struct.spinlock* %lock177, %struct.spinlock** %lock.addr.i263, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3876, !srcloc !2746
  %100 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i263, align 8, !dbg !3877
  %101 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %100, i32 0, i32 0, !dbg !3877
  %rlock.i264 = bitcast %union.anon* %101 to %struct.raw_spinlock*, !dbg !3877
  %102 = load %struct.device*, %struct.device** %parent, align 8, !dbg !3878
  %power178 = getelementptr inbounds %struct.device, %struct.device* %102, i32 0, i32 11, !dbg !3880
  %disable_depth179 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power178, i32 0, i32 15, !dbg !3881
  %bf.load180 = load i16, i16* %disable_depth179, align 8, !dbg !3881
  %bf.clear181 = and i16 %bf.load180, 7, !dbg !3881
  %bf.cast182 = zext i16 %bf.clear181 to i32, !dbg !3881
  %tobool183 = icmp ne i32 %bf.cast182, 0, !dbg !3878
  br i1 %tobool183, label %if.end198, label %land.lhs.true184, !dbg !3882

land.lhs.true184:                                 ; preds = %if.end173
  %103 = load %struct.device*, %struct.device** %parent, align 8, !dbg !3883
  %power185 = getelementptr inbounds %struct.device, %struct.device* %103, i32 0, i32 11, !dbg !3884
  %ignore_children186 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power185, i32 0, i32 15, !dbg !3885
  %bf.load187 = load i16, i16* %ignore_children186, align 8, !dbg !3885
  %bf.lshr188 = lshr i16 %bf.load187, 7, !dbg !3885
  %bf.clear189 = and i16 %bf.lshr188, 1, !dbg !3885
  %bf.cast190 = trunc i16 %bf.clear189 to i1, !dbg !3885
  br i1 %bf.cast190, label %if.end198, label %if.then191, !dbg !3886

if.then191:                                       ; preds = %land.lhs.true184
  %104 = load %struct.device*, %struct.device** %parent, align 8, !dbg !3887
  %call192 = call i32 @rpm_resume(%struct.device* %104, i32 0) #7, !dbg !3889
  %105 = load %struct.device*, %struct.device** %parent, align 8, !dbg !3890
  %power193 = getelementptr inbounds %struct.device, %struct.device* %105, i32 0, i32 11, !dbg !3892
  %runtime_status194 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power193, i32 0, i32 18, !dbg !3893
  %106 = load i32, i32* %runtime_status194, align 4, !dbg !3893
  %cmp195 = icmp ne i32 %106, 0, !dbg !3894
  br i1 %cmp195, label %if.then196, label %if.end197, !dbg !3895

if.then196:                                       ; preds = %if.then191
  store i32 -16, i32* %retval1, align 4, !dbg !3896
  br label %if.end197, !dbg !3897

if.end197:                                        ; preds = %if.then196, %if.then191
  br label %if.end198, !dbg !3898

if.end198:                                        ; preds = %if.end197, %land.lhs.true184, %if.end173
  %107 = load %struct.device*, %struct.device** %parent, align 8, !dbg !3899
  %power199 = getelementptr inbounds %struct.device, %struct.device* %107, i32 0, i32 11, !dbg !3900
  %lock200 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power199, i32 0, i32 3, !dbg !3901
  store %struct.spinlock* %lock200, %struct.spinlock** %lock.addr.i265, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3902, !srcloc !2729
  %108 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i265, align 8, !dbg !3903
  %109 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %108, i32 0, i32 0, !dbg !3903
  %rlock.i266 = bitcast %union.anon* %109 to %struct.raw_spinlock*, !dbg !3903
  %110 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3904
  %power201 = getelementptr inbounds %struct.device, %struct.device* %110, i32 0, i32 11, !dbg !3905
  %lock202 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power201, i32 0, i32 3, !dbg !3906
  store %struct.spinlock* %lock202, %struct.spinlock** %lock.addr.i267, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3907, !srcloc !2746
  %111 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i267, align 8, !dbg !3908
  %112 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %111, i32 0, i32 0, !dbg !3908
  %rlock.i268 = bitcast %union.anon* %112 to %struct.raw_spinlock*, !dbg !3908
  %113 = load i32, i32* %retval1, align 4, !dbg !3909
  %tobool203 = icmp ne i32 %113, 0, !dbg !3909
  br i1 %tobool203, label %if.then204, label %if.end205, !dbg !3911

if.then204:                                       ; preds = %if.end198
  br label %out, !dbg !3912

if.end205:                                        ; preds = %if.end198
  br label %repeat, !dbg !3913

if.end206:                                        ; preds = %land.lhs.true160, %if.end158
  br label %skip_parent, !dbg !3855

skip_parent:                                      ; preds = %if.end206, %if.then172
  call void @llvm.dbg.label(metadata !3914), !dbg !3915
  %114 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3916
  %power207 = getelementptr inbounds %struct.device, %struct.device* %114, i32 0, i32 11, !dbg !3918
  %no_callbacks208 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power207, i32 0, i32 15, !dbg !3919
  %bf.load209 = load i16, i16* %no_callbacks208, align 8, !dbg !3919
  %bf.lshr210 = lshr i16 %bf.load209, 8, !dbg !3919
  %bf.clear211 = and i16 %bf.lshr210, 1, !dbg !3919
  %bf.cast212 = zext i16 %bf.clear211 to i32, !dbg !3919
  %tobool213 = icmp ne i32 %bf.cast212, 0, !dbg !3916
  br i1 %tobool213, label %if.then214, label %if.end215, !dbg !3920

if.then214:                                       ; preds = %skip_parent
  br label %no_callback, !dbg !3921

if.end215:                                        ; preds = %skip_parent
  %115 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3922
  call void @__update_runtime_status(%struct.device* %115, i32 1) #7, !dbg !3923
  %116 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3924
  %call216 = call i32 (%struct.device*)* @__rpm_get_callback(%struct.device* %116, i64 168) #7, !dbg !3924
  store i32 (%struct.device*)* %call216, i32 (%struct.device*)** %callback, align 8, !dbg !3925
  %117 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3926
  call void @dev_pm_disable_wake_irq_check(%struct.device* %117) #7, !dbg !3927
  %118 = load i32 (%struct.device*)*, i32 (%struct.device*)** %callback, align 8, !dbg !3928
  %119 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3929
  %call217 = call i32 @rpm_callback(i32 (%struct.device*)* %118, %struct.device* %119) #7, !dbg !3930
  store i32 %call217, i32* %retval1, align 4, !dbg !3931
  %120 = load i32, i32* %retval1, align 4, !dbg !3932
  %tobool218 = icmp ne i32 %120, 0, !dbg !3932
  br i1 %tobool218, label %if.then219, label %if.else220, !dbg !3933

if.then219:                                       ; preds = %if.end215
  %121 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3934
  call void @__update_runtime_status(%struct.device* %121, i32 2) #7, !dbg !3936
  %122 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3937
  call void @pm_runtime_cancel_pending(%struct.device* %122) #7, !dbg !3938
  %123 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3939
  call void @dev_pm_enable_wake_irq_check(%struct.device* %123, i1 zeroext false) #7, !dbg !3940
  br label %if.end226, !dbg !3941

if.else220:                                       ; preds = %if.end215
  br label %no_callback, !dbg !3942

no_callback:                                      ; preds = %if.else220, %if.then214, %if.then127
  call void @llvm.dbg.label(metadata !3943), !dbg !3944
  %124 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3945
  call void @__update_runtime_status(%struct.device* %124, i32 0) #7, !dbg !3946
  %125 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3947
  call void @pm_runtime_mark_last_busy(%struct.device* %125) #7, !dbg !3948
  %126 = load %struct.device*, %struct.device** %parent, align 8, !dbg !3949
  %tobool221 = icmp ne %struct.device* %126, null, !dbg !3949
  br i1 %tobool221, label %if.then222, label %if.end225, !dbg !3950

if.then222:                                       ; preds = %no_callback
  %127 = load %struct.device*, %struct.device** %parent, align 8, !dbg !3951
  %power223 = getelementptr inbounds %struct.device, %struct.device* %127, i32 0, i32 11, !dbg !3952
  %child_count224 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power223, i32 0, i32 14, !dbg !3953
  store %struct.atomic_t* %child_count224, %struct.atomic_t** %v.addr.i272, align 8
  %128 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i272, align 8, !dbg !3954
  %129 = bitcast %struct.atomic_t* %128 to i8*, !dbg !3954
  store i8* %129, i8** %v.addr.i.i270, align 8
  store i64 4, i64* %size.addr.i.i271, align 8
  %130 = load i8*, i8** %v.addr.i.i270, align 8, !dbg !3955
  %131 = load i64, i64* %size.addr.i.i271, align 8, !dbg !3956
  %conv.i.i273 = trunc i64 %131 to i32, !dbg !3956
  %call.i.i274 = call zeroext i1 @kasan_check_write(i8* %130, i32 %conv.i.i273) #8, !dbg !3957
  %132 = load i8*, i8** %v.addr.i.i270, align 8, !dbg !3958
  %133 = load i64, i64* %size.addr.i.i271, align 8, !dbg !3958
  call void @kcsan_check_access(i8* %132, i64 %133, i32 7) #8, !dbg !3958
  %134 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i272, align 8, !dbg !3959
  store %struct.atomic_t* %134, %struct.atomic_t** %v.addr.i1.i269, align 8
  %135 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i269, align 8, !dbg !3960
  %counter.i.i275 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %135, i32 0, i32 0, !dbg !3961
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i275, i32* %counter.i.i275) #6, !dbg !3962, !srcloc !3503
  br label %if.end225, !dbg !3963

if.end225:                                        ; preds = %if.then222, %no_callback
  br label %if.end226

if.end226:                                        ; preds = %if.end225, %if.then219
  %136 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3964
  %power227 = getelementptr inbounds %struct.device, %struct.device* %136, i32 0, i32 11, !dbg !3964
  %wait_queue228 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power227, i32 0, i32 11, !dbg !3964
  call void @__wake_up(%struct.wait_queue_head* %wait_queue228, i32 3, i32 0, i8* null) #7, !dbg !3964
  %137 = load i32, i32* %retval1, align 4, !dbg !3965
  %cmp229 = icmp sge i32 %137, 0, !dbg !3967
  br i1 %cmp229, label %if.then230, label %if.end232, !dbg !3968

if.then230:                                       ; preds = %if.end226
  %138 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3969
  %call231 = call i32 @rpm_idle(%struct.device* %138, i32 1) #7, !dbg !3970
  br label %if.end232, !dbg !3970

if.end232:                                        ; preds = %if.then230, %if.end226
  br label %out, !dbg !3971

out:                                              ; preds = %if.end232, %if.then204, %if.end157, %if.end58, %if.then36, %if.then22
  call void @llvm.dbg.label(metadata !3972), !dbg !3973
  %139 = load %struct.device*, %struct.device** %parent, align 8, !dbg !3974
  %tobool233 = icmp ne %struct.device* %139, null, !dbg !3974
  br i1 %tobool233, label %land.lhs.true234, label %if.end248, !dbg !3975

land.lhs.true234:                                 ; preds = %out
  %140 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3976
  %power235 = getelementptr inbounds %struct.device, %struct.device* %140, i32 0, i32 11, !dbg !3977
  %irq_safe236 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power235, i32 0, i32 15, !dbg !3978
  %bf.load237 = load i16, i16* %irq_safe236, align 8, !dbg !3978
  %bf.lshr238 = lshr i16 %bf.load237, 9, !dbg !3978
  %bf.clear239 = and i16 %bf.lshr238, 1, !dbg !3978
  %bf.cast240 = zext i16 %bf.clear239 to i32, !dbg !3978
  %tobool241 = icmp ne i32 %bf.cast240, 0, !dbg !3976
  br i1 %tobool241, label %if.end248, label %if.then242, !dbg !3979

if.then242:                                       ; preds = %land.lhs.true234
  %141 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3980
  %power243 = getelementptr inbounds %struct.device, %struct.device* %141, i32 0, i32 11, !dbg !3981
  %lock244 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power243, i32 0, i32 3, !dbg !3982
  store %struct.spinlock* %lock244, %struct.spinlock** %lock.addr.i276, align 8
  call void @arch_local_irq_enable() #8, !dbg !3983
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3984, !srcloc !2330
  %142 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i276, align 8, !dbg !3985
  %143 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %142, i32 0, i32 0, !dbg !3985
  %rlock.i277 = bitcast %union.anon* %143 to %struct.raw_spinlock*, !dbg !3985
  %144 = load %struct.device*, %struct.device** %parent, align 8, !dbg !3986
  %call245 = call i32 @pm_runtime_put(%struct.device* %144) #7, !dbg !3987
  %145 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3988
  %power246 = getelementptr inbounds %struct.device, %struct.device* %145, i32 0, i32 11, !dbg !3989
  %lock247 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power246, i32 0, i32 3, !dbg !3990
  store %struct.spinlock* %lock247, %struct.spinlock** %lock.addr.i278, align 8
  call void @arch_local_irq_disable() #8, !dbg !3991
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3992, !srcloc !2310
  %146 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i278, align 8, !dbg !3993
  %147 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %146, i32 0, i32 0, !dbg !3993
  %rlock.i279 = bitcast %union.anon* %147 to %struct.raw_spinlock*, !dbg !3993
  br label %if.end248, !dbg !3994

if.end248:                                        ; preds = %if.then242, %land.lhs.true234, %out
  %148 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3995
  br label %__here, !dbg !3996

__here:                                           ; preds = %indirectgoto, %if.end248
  call void @llvm.dbg.label(metadata !3998), !dbg !3996
  store i64 ptrtoint (i8* blockaddress(@rpm_resume, %__here) to i64), i64* %tmp, align 8, !dbg !3996
  %149 = load i64, i64* %tmp, align 8, !dbg !3996
  %150 = load i32, i32* %retval1, align 4, !dbg !3999
  call void @trace_rpm_return_int_rcuidle(%struct.device* %148, i64 %149, i32 %150) #7, !dbg !4000
  %151 = load i32, i32* %retval1, align 4, !dbg !4001
  ret i32 %151, !dbg !4002

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pm_runtime_get_if_active(%struct.device* %dev, i1 zeroext %ign_usage_count) #0 !dbg !4003 {
entry:
  %v.addr.i5.i.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i5.i.i.i.i, metadata !2509, metadata !DIExpression()), !dbg !4006
  %old.addr.i.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %old.addr.i.i.i.i.i, metadata !2531, metadata !DIExpression()), !dbg !4018
  %new.addr.i.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i.i.i.i.i, metadata !2533, metadata !DIExpression()), !dbg !4019
  %success.i.i.i.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %success.i.i.i.i.i, metadata !2535, metadata !DIExpression()), !dbg !4020
  %_old.i.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %_old.i.i.i.i.i, metadata !2538, metadata !DIExpression()), !dbg !4020
  %__old.i.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__old.i.i.i.i.i, metadata !2539, metadata !DIExpression()), !dbg !4020
  %__new.i.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__new.i.i.i.i.i, metadata !2540, metadata !DIExpression()), !dbg !4020
  %__ptr.i.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %__ptr.i.i.i.i.i, metadata !2541, metadata !DIExpression()), !dbg !4020
  %tmp.i.i.i.i.i = alloca i64, align 8
  %v.addr.i.i.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i.i.i, metadata !2542, metadata !DIExpression()), !dbg !4021
  %v.addr.i.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i.i, metadata !2550, metadata !DIExpression()), !dbg !4023
  %a.addr.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i.i.i, metadata !2552, metadata !DIExpression()), !dbg !4024
  %u.addr.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i.i.i.i, metadata !2554, metadata !DIExpression()), !dbg !4025
  %c.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i.i.i.i, metadata !2556, metadata !DIExpression()), !dbg !4026
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !2558, metadata !DIExpression()), !dbg !4027
  %a.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i.i, metadata !2560, metadata !DIExpression()), !dbg !4028
  %u.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i.i.i, metadata !2562, metadata !DIExpression()), !dbg !4029
  %v.addr.i1.i41 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i41, metadata !4030, metadata !DIExpression()), !dbg !4031
  %v.addr.i.i42 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i42, metadata !2564, metadata !DIExpression()), !dbg !4032
  %size.addr.i.i43 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i43, metadata !2574, metadata !DIExpression()), !dbg !4034
  %v.addr.i44 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i44, metadata !4035, metadata !DIExpression()), !dbg !4036
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !3457, metadata !DIExpression()), !dbg !4037
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !2564, metadata !DIExpression()), !dbg !4041
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !2574, metadata !DIExpression()), !dbg !4043
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !3469, metadata !DIExpression()), !dbg !4044
  %lock.addr.i39 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i39, metadata !2149, metadata !DIExpression()), !dbg !4045
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !2157, metadata !DIExpression()), !dbg !4047
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2159, metadata !DIExpression()), !dbg !4048
  %dev.addr = alloca %struct.device*, align 8
  %ign_usage_count.addr = alloca i8, align 1
  %flags = alloca i64, align 8
  %retval1 = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4055, metadata !DIExpression()), !dbg !4056
  %frombool = zext i1 %ign_usage_count to i8
  store i8 %frombool, i8* %ign_usage_count.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ign_usage_count.addr, metadata !4057, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4059, metadata !DIExpression()), !dbg !4060
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !4061, metadata !DIExpression()), !dbg !4062
  br label %do.body, !dbg !4063

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !4064

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4065, metadata !DIExpression()), !dbg !4067
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4068, metadata !DIExpression()), !dbg !4067
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !4067
  %conv = zext i1 %cmp to i32, !dbg !4067
  store i32 1, i32* %tmp, align 4, !dbg !4067
  %0 = load i32, i32* %tmp, align 4, !dbg !4067
  br label %do.body3, !dbg !4069

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !4070

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !4071

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !4073, metadata !DIExpression()), !dbg !4076
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !4077, metadata !DIExpression()), !dbg !4076
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !4076
  %conv9 = zext i1 %cmp8 to i32, !dbg !4076
  store i32 1, i32* %tmp10, align 4, !dbg !4076
  %1 = load i32, i32* %tmp10, align 4, !dbg !4076
  %call = call i64 @arch_local_irq_save() #7, !dbg !4078
  store i64 %call, i64* %flags, align 8, !dbg !4078
  br label %do.end, !dbg !4078

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !4071

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !4070

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4079, !srcloc !4080
  br label %do.body13, !dbg !4079

do.body13:                                        ; preds = %do.body12
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4081
  %power = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 11, !dbg !4081
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 3, !dbg !4081
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4082
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !4083
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !4083
  br label %do.end15, !dbg !4081

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !4079

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !4070

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !4069

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !4064

do.end19:                                         ; preds = %do.end18
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4084
  %power20 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 11, !dbg !4085
  %disable_depth = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power20, i32 0, i32 15, !dbg !4086
  %bf.load = load i16, i16* %disable_depth, align 8, !dbg !4086
  %bf.clear = and i16 %bf.load, 7, !dbg !4086
  %bf.cast = zext i16 %bf.clear to i32, !dbg !4086
  %cmp21 = icmp sgt i32 %bf.cast, 0, !dbg !4087
  br i1 %cmp21, label %if.then, label %if.else, !dbg !4088

if.then:                                          ; preds = %do.end19
  store i32 -22, i32* %retval1, align 4, !dbg !4089
  br label %if.end36, !dbg !4091

if.else:                                          ; preds = %do.end19
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4092
  %power23 = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 11, !dbg !4093
  %runtime_status = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power23, i32 0, i32 18, !dbg !4094
  %7 = load i32, i32* %runtime_status, align 4, !dbg !4094
  %cmp24 = icmp ne i32 %7, 0, !dbg !4095
  br i1 %cmp24, label %if.then26, label %if.else27, !dbg !4096

if.then26:                                        ; preds = %if.else
  store i32 0, i32* %retval1, align 4, !dbg !4097
  br label %if.end35, !dbg !4099

if.else27:                                        ; preds = %if.else
  %8 = load i8, i8* %ign_usage_count.addr, align 1, !dbg !4100
  %tobool = trunc i8 %8 to i1, !dbg !4100
  br i1 %tobool, label %if.then28, label %if.else30, !dbg !4101

if.then28:                                        ; preds = %if.else27
  store i32 1, i32* %retval1, align 4, !dbg !4102
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4103
  %power29 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 11, !dbg !4104
  %usage_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power29, i32 0, i32 13, !dbg !4105
  store %struct.atomic_t* %usage_count, %struct.atomic_t** %v.addr.i, align 8
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !4106
  %11 = bitcast %struct.atomic_t* %10 to i8*, !dbg !4106
  store i8* %11, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %12 = load i8*, i8** %v.addr.i.i, align 8, !dbg !4107
  %13 = load i64, i64* %size.addr.i.i, align 8, !dbg !4108
  %conv.i.i = trunc i64 %13 to i32, !dbg !4108
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %12, i32 %conv.i.i) #8, !dbg !4109
  %14 = load i8*, i8** %v.addr.i.i, align 8, !dbg !4110
  %15 = load i64, i64* %size.addr.i.i, align 8, !dbg !4110
  call void @kcsan_check_access(i8* %14, i64 %15, i32 7) #8, !dbg !4110
  %16 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !4111
  store %struct.atomic_t* %16, %struct.atomic_t** %v.addr.i1.i, align 8
  %17 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !4112
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %17, i32 0, i32 0, !dbg !4113
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #6, !dbg !4114, !srcloc !3503
  br label %if.end, !dbg !4115

if.else30:                                        ; preds = %if.else27
  %18 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4116
  %power31 = getelementptr inbounds %struct.device, %struct.device* %18, i32 0, i32 11, !dbg !4117
  %usage_count32 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power31, i32 0, i32 13, !dbg !4118
  store %struct.atomic_t* %usage_count32, %struct.atomic_t** %v.addr.i44, align 8
  %19 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i44, align 8, !dbg !4119
  %20 = bitcast %struct.atomic_t* %19 to i8*, !dbg !4119
  store i8* %20, i8** %v.addr.i.i42, align 8
  store i64 4, i64* %size.addr.i.i43, align 8
  %21 = load i8*, i8** %v.addr.i.i42, align 8, !dbg !4120
  %22 = load i64, i64* %size.addr.i.i43, align 8, !dbg !4121
  %conv.i.i45 = trunc i64 %22 to i32, !dbg !4121
  %call.i.i46 = call zeroext i1 @kasan_check_write(i8* %21, i32 %conv.i.i45) #8, !dbg !4122
  %23 = load i8*, i8** %v.addr.i.i42, align 8, !dbg !4123
  %24 = load i64, i64* %size.addr.i.i43, align 8, !dbg !4123
  call void @kcsan_check_access(i8* %23, i64 %24, i32 7) #8, !dbg !4123
  %25 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i44, align 8, !dbg !4124
  store %struct.atomic_t* %25, %struct.atomic_t** %v.addr.i1.i41, align 8
  %26 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i41, align 8, !dbg !4125
  store %struct.atomic_t* %26, %struct.atomic_t** %v.addr.i.i.i, align 8
  store i32 1, i32* %a.addr.i.i.i, align 4
  store i32 0, i32* %u.addr.i.i.i, align 4
  %27 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !4126
  %28 = load i32, i32* %a.addr.i.i.i, align 4, !dbg !4127
  %29 = load i32, i32* %u.addr.i.i.i, align 4, !dbg !4128
  store %struct.atomic_t* %27, %struct.atomic_t** %v.addr.i.i.i.i, align 8
  store i32 %28, i32* %a.addr.i.i.i.i, align 4
  store i32 %29, i32* %u.addr.i.i.i.i, align 4
  %30 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i.i, align 8, !dbg !4129
  store %struct.atomic_t* %30, %struct.atomic_t** %v.addr.i.i.i.i.i, align 8
  %31 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i.i.i, align 8, !dbg !4130
  %counter.i.i.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %31, i32 0, i32 0, !dbg !4130
  %32 = load volatile i32, i32* %counter.i.i.i.i.i, align 4, !dbg !4130
  store i32 %32, i32* %c.i.i.i.i, align 4, !dbg !4026
  br label %do.body.i.i.i.i, !dbg !4131

do.body.i.i.i.i:                                  ; preds = %arch_atomic_try_cmpxchg.exit.i.i.i.i, %if.else30
  %33 = load i32, i32* %c.i.i.i.i, align 4, !dbg !4132
  %34 = load i32, i32* %u.addr.i.i.i.i, align 4, !dbg !4132
  %cmp.i.i.i.i = icmp eq i32 %33, %34, !dbg !4132
  %lnot.i.i.i.i = xor i1 %cmp.i.i.i.i, true, !dbg !4132
  %lnot.ext.i.i.i.i = zext i1 %cmp.i.i.i.i to i32, !dbg !4132
  %conv.i.i.i.i = sext i32 %lnot.ext.i.i.i.i to i64, !dbg !4132
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %if.end.i.i.i.i, !dbg !4133

if.then.i.i.i.i:                                  ; preds = %do.body.i.i.i.i
  br label %atomic_inc_not_zero.exit, !dbg !4134

if.end.i.i.i.i:                                   ; preds = %do.body.i.i.i.i
  %35 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i.i, align 8, !dbg !4135
  %36 = load i32, i32* %c.i.i.i.i, align 4, !dbg !4136
  %37 = load i32, i32* %a.addr.i.i.i.i, align 4, !dbg !4137
  %add.i.i.i.i = add i32 %36, %37, !dbg !4138
  store %struct.atomic_t* %35, %struct.atomic_t** %v.addr.i5.i.i.i.i, align 8
  store i32* %c.i.i.i.i, i32** %old.addr.i.i.i.i.i, align 8
  store i32 %add.i.i.i.i, i32* %new.addr.i.i.i.i.i, align 4
  %38 = load i32*, i32** %old.addr.i.i.i.i.i, align 8, !dbg !4020
  store i32* %38, i32** %_old.i.i.i.i.i, align 8, !dbg !4020
  %39 = load i32*, i32** %_old.i.i.i.i.i, align 8, !dbg !4020
  %40 = load i32, i32* %39, align 4, !dbg !4020
  store i32 %40, i32* %__old.i.i.i.i.i, align 4, !dbg !4020
  %41 = load i32, i32* %new.addr.i.i.i.i.i, align 4, !dbg !4020
  store i32 %41, i32* %__new.i.i.i.i.i, align 4, !dbg !4020
  %42 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i5.i.i.i.i, align 8, !dbg !4020
  %counter.i6.i.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %42, i32 0, i32 0, !dbg !4020
  store i32* %counter.i6.i.i.i.i, i32** %__ptr.i.i.i.i.i, align 8, !dbg !4020
  %43 = load i32*, i32** %__ptr.i.i.i.i.i, align 8, !dbg !4020
  %44 = load i32, i32* %__old.i.i.i.i.i, align 4, !dbg !4020
  %45 = load i32, i32* %__new.i.i.i.i.i, align 4, !dbg !4020
  %46 = call { i8, i32 } asm sideeffect "cmpxchgl $3, $1\0A\09/* output condition code z*/\0A", "={@ccz},=*m,={ax},r,*m,2,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %43, i32 %45, i32* %43, i32 %44) #6, !dbg !4020, !srcloc !2871
  %asmresult.i.i.i.i.i = extractvalue { i8, i32 } %46, 0, !dbg !4020
  %asmresult1.i.i.i.i.i = extractvalue { i8, i32 } %46, 1, !dbg !4020
  store i8 %asmresult.i.i.i.i.i, i8* %success.i.i.i.i.i, align 1, !dbg !4020
  store i32 %asmresult1.i.i.i.i.i, i32* %__old.i.i.i.i.i, align 4, !dbg !4020
  %47 = load i8, i8* %success.i.i.i.i.i, align 1, !dbg !4139
  %tobool.i.i.i.i.i = trunc i8 %47 to i1, !dbg !4139
  %lnot.i.i.i.i.i = xor i1 %tobool.i.i.i.i.i, true, !dbg !4139
  %lnot3.i.i.i.i.i = xor i1 %tobool.i.i.i.i.i, true, !dbg !4139
  %lnot.ext.i.i.i.i.i = zext i1 %lnot3.i.i.i.i.i to i32, !dbg !4139
  %conv.i.i.i.i.i = sext i32 %lnot.ext.i.i.i.i.i to i64, !dbg !4139
  br i1 %lnot3.i.i.i.i.i, label %if.then.i.i.i.i.i, label %arch_atomic_try_cmpxchg.exit.i.i.i.i, !dbg !4020

if.then.i.i.i.i.i:                                ; preds = %if.end.i.i.i.i
  %48 = load i32, i32* %__old.i.i.i.i.i, align 4, !dbg !4139
  %49 = load i32*, i32** %_old.i.i.i.i.i, align 8, !dbg !4139
  store i32 %48, i32* %49, align 4, !dbg !4139
  br label %arch_atomic_try_cmpxchg.exit.i.i.i.i, !dbg !4139

arch_atomic_try_cmpxchg.exit.i.i.i.i:             ; preds = %if.then.i.i.i.i.i, %if.end.i.i.i.i
  %50 = load i8, i8* %success.i.i.i.i.i, align 1, !dbg !4020
  %tobool5.i.i.i.i.i = trunc i8 %50 to i1, !dbg !4020
  %lnot6.i.i.i.i.i = xor i1 %tobool5.i.i.i.i.i, true, !dbg !4020
  %lnot.ext9.i.i.i.i.i = zext i1 %tobool5.i.i.i.i.i to i32, !dbg !4020
  %conv10.i.i.i.i.i = sext i32 %lnot.ext9.i.i.i.i.i to i64, !dbg !4020
  store i64 %conv10.i.i.i.i.i, i64* %tmp.i.i.i.i.i, align 8, !dbg !4139
  %51 = load i64, i64* %tmp.i.i.i.i.i, align 8, !dbg !4020
  %tobool11.i.i.i.i.i = icmp ne i64 %51, 0, !dbg !4140
  %lnot3.i.i.i.i = xor i1 %tobool11.i.i.i.i.i, true, !dbg !4141
  br i1 %lnot3.i.i.i.i, label %do.body.i.i.i.i, label %atomic_inc_not_zero.exit, !dbg !4142, !llvm.loop !4143

atomic_inc_not_zero.exit:                         ; preds = %if.then.i.i.i.i, %arch_atomic_try_cmpxchg.exit.i.i.i.i
  %52 = load i32, i32* %c.i.i.i.i, align 4, !dbg !4145
  %53 = load i32, i32* %u.addr.i.i.i, align 4, !dbg !4146
  %cmp.i.i.i = icmp ne i32 %52, %53, !dbg !4147
  %conv34 = zext i1 %cmp.i.i.i to i32, !dbg !4148
  store i32 %conv34, i32* %retval1, align 4, !dbg !4149
  br label %if.end

if.end:                                           ; preds = %atomic_inc_not_zero.exit, %if.then28
  br label %if.end35

if.end35:                                         ; preds = %if.end, %if.then26
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then
  %54 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4150
  call void @trace_rpm_usage_rcuidle(%struct.device* %54, i32 0) #7, !dbg !4151
  %55 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4152
  %power37 = getelementptr inbounds %struct.device, %struct.device* %55, i32 0, i32 11, !dbg !4153
  %lock38 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power37, i32 0, i32 3, !dbg !4154
  %56 = load i64, i64* %flags, align 8, !dbg !4155
  store %struct.spinlock* %lock38, %struct.spinlock** %lock.addr.i39, align 8
  store i64 %56, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !47, metadata !2214, metadata !DIExpression()) #6, !dbg !4156
  call void @llvm.dbg.declare(metadata !47, metadata !2218, metadata !DIExpression()) #6, !dbg !4156
  store i32 1, i32* %tmp.i, align 4, !dbg !4156
  %57 = load i32, i32* %tmp.i, align 4, !dbg !4156
  call void @llvm.dbg.declare(metadata !47, metadata !2219, metadata !DIExpression()) #6, !dbg !4157
  call void @llvm.dbg.declare(metadata !47, metadata !2225, metadata !DIExpression()) #6, !dbg !4157
  store i32 1, i32* %tmp8.i, align 4, !dbg !4157
  %58 = load i32, i32* %tmp8.i, align 4, !dbg !4157
  %59 = load i64, i64* %flags.addr.i, align 8, !dbg !4158
  call void @arch_local_irq_restore(i64 %59) #8, !dbg !4158
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4159, !srcloc !2229
  %60 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i39, align 8, !dbg !4160
  %61 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %60, i32 0, i32 0, !dbg !4160
  %rlock.i40 = bitcast %union.anon* %61 to %struct.raw_spinlock*, !dbg !4160
  %62 = load i32, i32* %retval1, align 4, !dbg !4161
  ret i32 %62, !dbg !4162
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__pm_runtime_set_status(%struct.device* %dev, i32 %status) #0 !dbg !4163 {
entry:
  %lock.addr.i116 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i116, metadata !2281, metadata !DIExpression()), !dbg !4164
  %lock.addr.i114 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i114, metadata !2484, metadata !DIExpression()), !dbg !4166
  %v.addr.i1.i108 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i108, metadata !3457, metadata !DIExpression()), !dbg !4170
  %v.addr.i.i109 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i109, metadata !2564, metadata !DIExpression()), !dbg !4176
  %size.addr.i.i110 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i110, metadata !2574, metadata !DIExpression()), !dbg !4178
  %v.addr.i111 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i111, metadata !3469, metadata !DIExpression()), !dbg !4179
  %lock.addr.i106 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i106, metadata !2159, metadata !DIExpression()), !dbg !4180
  %v.addr.i5.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i5.i.i.i, metadata !2509, metadata !DIExpression()), !dbg !4185
  %old.addr.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %old.addr.i.i.i.i, metadata !2531, metadata !DIExpression()), !dbg !4191
  %new.addr.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i.i.i.i, metadata !2533, metadata !DIExpression()), !dbg !4192
  %success.i.i.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %success.i.i.i.i, metadata !2535, metadata !DIExpression()), !dbg !4193
  %_old.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %_old.i.i.i.i, metadata !2538, metadata !DIExpression()), !dbg !4193
  %__old.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__old.i.i.i.i, metadata !2539, metadata !DIExpression()), !dbg !4193
  %__new.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__new.i.i.i.i, metadata !2540, metadata !DIExpression()), !dbg !4193
  %__ptr.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %__ptr.i.i.i.i, metadata !2541, metadata !DIExpression()), !dbg !4193
  %tmp.i.i.i.i = alloca i64, align 8
  %v.addr.i.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i.i, metadata !2542, metadata !DIExpression()), !dbg !4194
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !2550, metadata !DIExpression()), !dbg !4196
  %a.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i.i, metadata !2552, metadata !DIExpression()), !dbg !4197
  %u.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i.i.i, metadata !2554, metadata !DIExpression()), !dbg !4198
  %c.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i.i.i, metadata !2556, metadata !DIExpression()), !dbg !4199
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !2558, metadata !DIExpression()), !dbg !4200
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !2560, metadata !DIExpression()), !dbg !4201
  %u.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i.i, metadata !2562, metadata !DIExpression()), !dbg !4202
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !2564, metadata !DIExpression()), !dbg !4203
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !2574, metadata !DIExpression()), !dbg !4205
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !2576, metadata !DIExpression()), !dbg !4206
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2578, metadata !DIExpression()), !dbg !4207
  %u.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i, metadata !2580, metadata !DIExpression()), !dbg !4208
  %lock.addr.i104 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i104, metadata !2290, metadata !DIExpression()), !dbg !4209
  %lock.addr.i102 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i102, metadata !2281, metadata !DIExpression()), !dbg !4211
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2290, metadata !DIExpression()), !dbg !4213
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %status.addr = alloca i32, align 4
  %parent = alloca %struct.device*, align 8
  %notify_parent = alloca i8, align 1
  %error = alloca i32, align 4
  %idx = alloca i32, align 4
  %idx99 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4215, metadata !DIExpression()), !dbg !4216
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !4217, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.declare(metadata %struct.device** %parent, metadata !4219, metadata !DIExpression()), !dbg !4220
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4221
  %parent1 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !4222
  %1 = load %struct.device*, %struct.device** %parent1, align 8, !dbg !4222
  store %struct.device* %1, %struct.device** %parent, align 8, !dbg !4220
  call void @llvm.dbg.declare(metadata i8* %notify_parent, metadata !4223, metadata !DIExpression()), !dbg !4224
  store i8 0, i8* %notify_parent, align 1, !dbg !4224
  call void @llvm.dbg.declare(metadata i32* %error, metadata !4225, metadata !DIExpression()), !dbg !4226
  store i32 0, i32* %error, align 4, !dbg !4226
  %2 = load i32, i32* %status.addr, align 4, !dbg !4227
  %cmp = icmp ne i32 %2, 0, !dbg !4229
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4230

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %status.addr, align 4, !dbg !4231
  %cmp2 = icmp ne i32 %3, 2, !dbg !4232
  br i1 %cmp2, label %if.then, label %if.end, !dbg !4233

if.then:                                          ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !4234
  br label %return, !dbg !4234

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4235
  %power = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 11, !dbg !4236
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 3, !dbg !4237
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #8, !dbg !4238
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4239, !srcloc !2310
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4240
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !4240
  %rlock.i = bitcast %union.anon* %6 to %struct.raw_spinlock*, !dbg !4240
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4241
  %power3 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 11, !dbg !4243
  %runtime_error = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power3, i32 0, i32 19, !dbg !4244
  %8 = load i32, i32* %runtime_error, align 8, !dbg !4244
  %tobool = icmp ne i32 %8, 0, !dbg !4241
  br i1 %tobool, label %if.then6, label %lor.lhs.false, !dbg !4245

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4246
  %power4 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 11, !dbg !4247
  %disable_depth = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power4, i32 0, i32 15, !dbg !4248
  %bf.load = load i16, i16* %disable_depth, align 8, !dbg !4248
  %bf.clear = and i16 %bf.load, 7, !dbg !4248
  %bf.cast = zext i16 %bf.clear to i32, !dbg !4248
  %tobool5 = icmp ne i32 %bf.cast, 0, !dbg !4246
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !4249

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4250
  %power7 = getelementptr inbounds %struct.device, %struct.device* %10, i32 0, i32 11, !dbg !4251
  %disable_depth8 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power7, i32 0, i32 15, !dbg !4252
  %bf.load9 = load i16, i16* %disable_depth8, align 8, !dbg !4253
  %bf.clear10 = and i16 %bf.load9, 7, !dbg !4253
  %bf.cast11 = zext i16 %bf.clear10 to i32, !dbg !4253
  %inc = add i32 %bf.cast11, 1, !dbg !4253
  %11 = trunc i32 %inc to i16, !dbg !4253
  %bf.load12 = load i16, i16* %disable_depth8, align 8, !dbg !4253
  %bf.value = and i16 %11, 7, !dbg !4253
  %bf.clear13 = and i16 %bf.load12, -8, !dbg !4253
  %bf.set = or i16 %bf.clear13, %bf.value, !dbg !4253
  store i16 %bf.set, i16* %disable_depth8, align 8, !dbg !4253
  %bf.result.cast = zext i16 %bf.value to i32, !dbg !4253
  br label %if.end14, !dbg !4250

if.else:                                          ; preds = %lor.lhs.false
  store i32 -11, i32* %error, align 4, !dbg !4254
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then6
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4255
  %power15 = getelementptr inbounds %struct.device, %struct.device* %12, i32 0, i32 11, !dbg !4256
  %lock16 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power15, i32 0, i32 3, !dbg !4257
  store %struct.spinlock* %lock16, %struct.spinlock** %lock.addr.i102, align 8
  call void @arch_local_irq_enable() #8, !dbg !4258
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4259, !srcloc !2330
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i102, align 8, !dbg !4260
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !4260
  %rlock.i103 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !4260
  %15 = load i32, i32* %error, align 4, !dbg !4261
  %tobool17 = icmp ne i32 %15, 0, !dbg !4261
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !4263

if.then18:                                        ; preds = %if.end14
  %16 = load i32, i32* %error, align 4, !dbg !4264
  store i32 %16, i32* %retval, align 4, !dbg !4265
  br label %return, !dbg !4265

if.end19:                                         ; preds = %if.end14
  %17 = load i32, i32* %status.addr, align 4, !dbg !4266
  %cmp20 = icmp eq i32 %17, 0, !dbg !4268
  br i1 %cmp20, label %if.then21, label %if.end26, !dbg !4269

if.then21:                                        ; preds = %if.end19
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !4270, metadata !DIExpression()), !dbg !4272
  %call = call i32 @device_links_read_lock() #7, !dbg !4273
  store i32 %call, i32* %idx, align 4, !dbg !4272
  %18 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4274
  %call22 = call i32 @rpm_get_suppliers(%struct.device* %18) #7, !dbg !4275
  store i32 %call22, i32* %error, align 4, !dbg !4276
  %19 = load i32, i32* %error, align 4, !dbg !4277
  %tobool23 = icmp ne i32 %19, 0, !dbg !4277
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !4279

if.then24:                                        ; preds = %if.then21
  store i32 2, i32* %status.addr, align 4, !dbg !4280
  br label %if.end25, !dbg !4281

if.end25:                                         ; preds = %if.then24, %if.then21
  %20 = load i32, i32* %idx, align 4, !dbg !4282
  call void @device_links_read_unlock(i32 %20) #7, !dbg !4283
  br label %if.end26, !dbg !4284

if.end26:                                         ; preds = %if.end25, %if.end19
  %21 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4285
  %power27 = getelementptr inbounds %struct.device, %struct.device* %21, i32 0, i32 11, !dbg !4286
  %lock28 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power27, i32 0, i32 3, !dbg !4287
  store %struct.spinlock* %lock28, %struct.spinlock** %lock.addr.i104, align 8
  call void @arch_local_irq_disable() #8, !dbg !4288
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4289, !srcloc !2310
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i104, align 8, !dbg !4290
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !4290
  %rlock.i105 = bitcast %union.anon* %23 to %struct.raw_spinlock*, !dbg !4290
  %24 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4291
  %power29 = getelementptr inbounds %struct.device, %struct.device* %24, i32 0, i32 11, !dbg !4293
  %runtime_status = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power29, i32 0, i32 18, !dbg !4294
  %25 = load i32, i32* %runtime_status, align 4, !dbg !4294
  %26 = load i32, i32* %status.addr, align 4, !dbg !4295
  %cmp30 = icmp eq i32 %25, %26, !dbg !4296
  br i1 %cmp30, label %if.then33, label %lor.lhs.false31, !dbg !4297

lor.lhs.false31:                                  ; preds = %if.end26
  %27 = load %struct.device*, %struct.device** %parent, align 8, !dbg !4298
  %tobool32 = icmp ne %struct.device* %27, null, !dbg !4298
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !4299

if.then33:                                        ; preds = %lor.lhs.false31, %if.end26
  br label %out_set, !dbg !4300

if.end34:                                         ; preds = %lor.lhs.false31
  %28 = load i32, i32* %status.addr, align 4, !dbg !4301
  %cmp35 = icmp eq i32 %28, 2, !dbg !4302
  br i1 %cmp35, label %if.then36, label %if.else43, !dbg !4303

if.then36:                                        ; preds = %if.end34
  %29 = load %struct.device*, %struct.device** %parent, align 8, !dbg !4304
  %power37 = getelementptr inbounds %struct.device, %struct.device* %29, i32 0, i32 11, !dbg !4305
  %child_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power37, i32 0, i32 14, !dbg !4306
  store %struct.atomic_t* %child_count, %struct.atomic_t** %v.addr.i, align 8
  store i32 -1, i32* %a.addr.i, align 4
  store i32 0, i32* %u.addr.i, align 4
  %30 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !4307
  %31 = bitcast %struct.atomic_t* %30 to i8*, !dbg !4307
  store i8* %31, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %32 = load i8*, i8** %v.addr.i.i, align 8, !dbg !4308
  %33 = load i64, i64* %size.addr.i.i, align 8, !dbg !4309
  %conv.i.i = trunc i64 %33 to i32, !dbg !4309
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %32, i32 %conv.i.i) #8, !dbg !4310
  %34 = load i8*, i8** %v.addr.i.i, align 8, !dbg !4311
  %35 = load i64, i64* %size.addr.i.i, align 8, !dbg !4311
  call void @kcsan_check_access(i8* %34, i64 %35, i32 7) #8, !dbg !4311
  %36 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !4312
  %37 = load i32, i32* %a.addr.i, align 4, !dbg !4313
  %38 = load i32, i32* %u.addr.i, align 4, !dbg !4314
  store %struct.atomic_t* %36, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %37, i32* %a.addr.i.i, align 4
  store i32 %38, i32* %u.addr.i.i, align 4
  %39 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !4315
  %40 = load i32, i32* %a.addr.i.i, align 4, !dbg !4316
  %41 = load i32, i32* %u.addr.i.i, align 4, !dbg !4317
  store %struct.atomic_t* %39, %struct.atomic_t** %v.addr.i.i.i, align 8
  store i32 %40, i32* %a.addr.i.i.i, align 4
  store i32 %41, i32* %u.addr.i.i.i, align 4
  %42 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !4318
  store %struct.atomic_t* %42, %struct.atomic_t** %v.addr.i.i.i.i, align 8
  %43 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i.i, align 8, !dbg !4319
  %counter.i.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %43, i32 0, i32 0, !dbg !4319
  %44 = load volatile i32, i32* %counter.i.i.i.i, align 4, !dbg !4319
  store i32 %44, i32* %c.i.i.i, align 4, !dbg !4199
  br label %do.body.i.i.i, !dbg !4320

do.body.i.i.i:                                    ; preds = %arch_atomic_try_cmpxchg.exit.i.i.i, %if.then36
  %45 = load i32, i32* %c.i.i.i, align 4, !dbg !4321
  %46 = load i32, i32* %u.addr.i.i.i, align 4, !dbg !4321
  %cmp.i.i.i = icmp eq i32 %45, %46, !dbg !4321
  %lnot.i.i.i = xor i1 %cmp.i.i.i, true, !dbg !4321
  %lnot.ext.i.i.i = zext i1 %cmp.i.i.i to i32, !dbg !4321
  %conv.i.i.i = sext i32 %lnot.ext.i.i.i to i64, !dbg !4321
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.end.i.i.i, !dbg !4322

if.then.i.i.i:                                    ; preds = %do.body.i.i.i
  br label %atomic_add_unless.exit, !dbg !4323

if.end.i.i.i:                                     ; preds = %do.body.i.i.i
  %47 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !4324
  %48 = load i32, i32* %c.i.i.i, align 4, !dbg !4325
  %49 = load i32, i32* %a.addr.i.i.i, align 4, !dbg !4326
  %add.i.i.i = add i32 %48, %49, !dbg !4327
  store %struct.atomic_t* %47, %struct.atomic_t** %v.addr.i5.i.i.i, align 8
  store i32* %c.i.i.i, i32** %old.addr.i.i.i.i, align 8
  store i32 %add.i.i.i, i32* %new.addr.i.i.i.i, align 4
  %50 = load i32*, i32** %old.addr.i.i.i.i, align 8, !dbg !4193
  store i32* %50, i32** %_old.i.i.i.i, align 8, !dbg !4193
  %51 = load i32*, i32** %_old.i.i.i.i, align 8, !dbg !4193
  %52 = load i32, i32* %51, align 4, !dbg !4193
  store i32 %52, i32* %__old.i.i.i.i, align 4, !dbg !4193
  %53 = load i32, i32* %new.addr.i.i.i.i, align 4, !dbg !4193
  store i32 %53, i32* %__new.i.i.i.i, align 4, !dbg !4193
  %54 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i5.i.i.i, align 8, !dbg !4193
  %counter.i6.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %54, i32 0, i32 0, !dbg !4193
  store i32* %counter.i6.i.i.i, i32** %__ptr.i.i.i.i, align 8, !dbg !4193
  %55 = load i32*, i32** %__ptr.i.i.i.i, align 8, !dbg !4193
  %56 = load i32, i32* %__old.i.i.i.i, align 4, !dbg !4193
  %57 = load i32, i32* %__new.i.i.i.i, align 4, !dbg !4193
  %58 = call { i8, i32 } asm sideeffect "cmpxchgl $3, $1\0A\09/* output condition code z*/\0A", "={@ccz},=*m,={ax},r,*m,2,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %55, i32 %57, i32* %55, i32 %56) #6, !dbg !4193, !srcloc !2871
  %asmresult.i.i.i.i = extractvalue { i8, i32 } %58, 0, !dbg !4193
  %asmresult1.i.i.i.i = extractvalue { i8, i32 } %58, 1, !dbg !4193
  store i8 %asmresult.i.i.i.i, i8* %success.i.i.i.i, align 1, !dbg !4193
  store i32 %asmresult1.i.i.i.i, i32* %__old.i.i.i.i, align 4, !dbg !4193
  %59 = load i8, i8* %success.i.i.i.i, align 1, !dbg !4328
  %tobool.i.i.i.i = trunc i8 %59 to i1, !dbg !4328
  %lnot.i.i.i.i = xor i1 %tobool.i.i.i.i, true, !dbg !4328
  %lnot3.i.i.i.i = xor i1 %tobool.i.i.i.i, true, !dbg !4328
  %lnot.ext.i.i.i.i = zext i1 %lnot3.i.i.i.i to i32, !dbg !4328
  %conv.i.i.i.i = sext i32 %lnot.ext.i.i.i.i to i64, !dbg !4328
  br i1 %lnot3.i.i.i.i, label %if.then.i.i.i.i, label %arch_atomic_try_cmpxchg.exit.i.i.i, !dbg !4193

if.then.i.i.i.i:                                  ; preds = %if.end.i.i.i
  %60 = load i32, i32* %__old.i.i.i.i, align 4, !dbg !4328
  %61 = load i32*, i32** %_old.i.i.i.i, align 8, !dbg !4328
  store i32 %60, i32* %61, align 4, !dbg !4328
  br label %arch_atomic_try_cmpxchg.exit.i.i.i, !dbg !4328

arch_atomic_try_cmpxchg.exit.i.i.i:               ; preds = %if.then.i.i.i.i, %if.end.i.i.i
  %62 = load i8, i8* %success.i.i.i.i, align 1, !dbg !4193
  %tobool5.i.i.i.i = trunc i8 %62 to i1, !dbg !4193
  %lnot6.i.i.i.i = xor i1 %tobool5.i.i.i.i, true, !dbg !4193
  %lnot.ext9.i.i.i.i = zext i1 %tobool5.i.i.i.i to i32, !dbg !4193
  %conv10.i.i.i.i = sext i32 %lnot.ext9.i.i.i.i to i64, !dbg !4193
  store i64 %conv10.i.i.i.i, i64* %tmp.i.i.i.i, align 8, !dbg !4328
  %63 = load i64, i64* %tmp.i.i.i.i, align 8, !dbg !4193
  %tobool11.i.i.i.i = icmp ne i64 %63, 0, !dbg !4329
  %lnot3.i.i.i = xor i1 %tobool11.i.i.i.i, true, !dbg !4330
  br i1 %lnot3.i.i.i, label %do.body.i.i.i, label %atomic_add_unless.exit, !dbg !4331, !llvm.loop !4332

atomic_add_unless.exit:                           ; preds = %if.then.i.i.i, %arch_atomic_try_cmpxchg.exit.i.i.i
  %64 = load i32, i32* %c.i.i.i, align 4, !dbg !4334
  %65 = load i32, i32* %u.addr.i.i, align 4, !dbg !4335
  %cmp.i.i = icmp ne i32 %64, %65, !dbg !4336
  %66 = load %struct.device*, %struct.device** %parent, align 8, !dbg !4337
  %power39 = getelementptr inbounds %struct.device, %struct.device* %66, i32 0, i32 11, !dbg !4338
  %ignore_children = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power39, i32 0, i32 15, !dbg !4339
  %bf.load40 = load i16, i16* %ignore_children, align 8, !dbg !4339
  %bf.lshr = lshr i16 %bf.load40, 7, !dbg !4339
  %bf.clear41 = and i16 %bf.lshr, 1, !dbg !4339
  %bf.cast42 = trunc i16 %bf.clear41 to i1, !dbg !4339
  %lnot = xor i1 %bf.cast42, true, !dbg !4340
  %frombool = zext i1 %lnot to i8, !dbg !4341
  store i8 %frombool, i8* %notify_parent, align 1, !dbg !4341
  br label %if.end85, !dbg !4342

if.else43:                                        ; preds = %if.end34
  br label %do.body, !dbg !4343

do.body:                                          ; preds = %if.else43
  br label %do.body44, !dbg !4344

do.body44:                                        ; preds = %do.body
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4345, !srcloc !4346
  br label %do.body45, !dbg !4345

do.body45:                                        ; preds = %do.body44
  %67 = load %struct.device*, %struct.device** %parent, align 8, !dbg !4347
  %power46 = getelementptr inbounds %struct.device, %struct.device* %67, i32 0, i32 11, !dbg !4347
  %lock47 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power46, i32 0, i32 3, !dbg !4347
  store %struct.spinlock* %lock47, %struct.spinlock** %lock.addr.i106, align 8
  %68 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i106, align 8, !dbg !4348
  %69 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %68, i32 0, i32 0, !dbg !4349
  %rlock.i107 = bitcast %union.anon* %69 to %struct.raw_spinlock*, !dbg !4349
  br label %do.end, !dbg !4347

do.end:                                           ; preds = %do.body45
  br label %do.end49, !dbg !4345

do.end49:                                         ; preds = %do.end
  br label %do.end50, !dbg !4344

do.end50:                                         ; preds = %do.end49
  %70 = load %struct.device*, %struct.device** %parent, align 8, !dbg !4350
  %power51 = getelementptr inbounds %struct.device, %struct.device* %70, i32 0, i32 11, !dbg !4351
  %disable_depth52 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power51, i32 0, i32 15, !dbg !4352
  %bf.load53 = load i16, i16* %disable_depth52, align 8, !dbg !4352
  %bf.clear54 = and i16 %bf.load53, 7, !dbg !4352
  %bf.cast55 = zext i16 %bf.clear54 to i32, !dbg !4352
  %tobool56 = icmp ne i32 %bf.cast55, 0, !dbg !4350
  br i1 %tobool56, label %if.else71, label %land.lhs.true57, !dbg !4353

land.lhs.true57:                                  ; preds = %do.end50
  %71 = load %struct.device*, %struct.device** %parent, align 8, !dbg !4354
  %power58 = getelementptr inbounds %struct.device, %struct.device* %71, i32 0, i32 11, !dbg !4355
  %ignore_children59 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power58, i32 0, i32 15, !dbg !4356
  %bf.load60 = load i16, i16* %ignore_children59, align 8, !dbg !4356
  %bf.lshr61 = lshr i16 %bf.load60, 7, !dbg !4356
  %bf.clear62 = and i16 %bf.lshr61, 1, !dbg !4356
  %bf.cast63 = trunc i16 %bf.clear62 to i1, !dbg !4356
  br i1 %bf.cast63, label %if.else71, label %land.lhs.true64, !dbg !4357

land.lhs.true64:                                  ; preds = %land.lhs.true57
  %72 = load %struct.device*, %struct.device** %parent, align 8, !dbg !4358
  %power65 = getelementptr inbounds %struct.device, %struct.device* %72, i32 0, i32 11, !dbg !4359
  %runtime_status66 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power65, i32 0, i32 18, !dbg !4360
  %73 = load i32, i32* %runtime_status66, align 4, !dbg !4360
  %cmp67 = icmp ne i32 %73, 0, !dbg !4361
  br i1 %cmp67, label %if.then68, label %if.else71, !dbg !4362

if.then68:                                        ; preds = %land.lhs.true64
  %74 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4363
  %75 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4363
  %call69 = call i8* @dev_name(%struct.device* %75) #7, !dbg !4363
  %76 = load %struct.device*, %struct.device** %parent, align 8, !dbg !4363
  %call70 = call i8* @dev_name(%struct.device* %76) #7, !dbg !4363
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %74, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str, i64 0, i64 0), i8* %call69, i8* %call70) #10, !dbg !4363
  store i32 -16, i32* %error, align 4, !dbg !4365
  br label %if.end79, !dbg !4366

if.else71:                                        ; preds = %land.lhs.true64, %land.lhs.true57, %do.end50
  %77 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4367
  %power72 = getelementptr inbounds %struct.device, %struct.device* %77, i32 0, i32 11, !dbg !4368
  %runtime_status73 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power72, i32 0, i32 18, !dbg !4369
  %78 = load i32, i32* %runtime_status73, align 4, !dbg !4369
  %cmp74 = icmp eq i32 %78, 2, !dbg !4370
  br i1 %cmp74, label %if.then75, label %if.end78, !dbg !4371

if.then75:                                        ; preds = %if.else71
  %79 = load %struct.device*, %struct.device** %parent, align 8, !dbg !4372
  %power76 = getelementptr inbounds %struct.device, %struct.device* %79, i32 0, i32 11, !dbg !4373
  %child_count77 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power76, i32 0, i32 14, !dbg !4374
  store %struct.atomic_t* %child_count77, %struct.atomic_t** %v.addr.i111, align 8
  %80 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i111, align 8, !dbg !4375
  %81 = bitcast %struct.atomic_t* %80 to i8*, !dbg !4375
  store i8* %81, i8** %v.addr.i.i109, align 8
  store i64 4, i64* %size.addr.i.i110, align 8
  %82 = load i8*, i8** %v.addr.i.i109, align 8, !dbg !4376
  %83 = load i64, i64* %size.addr.i.i110, align 8, !dbg !4377
  %conv.i.i112 = trunc i64 %83 to i32, !dbg !4377
  %call.i.i113 = call zeroext i1 @kasan_check_write(i8* %82, i32 %conv.i.i112) #8, !dbg !4378
  %84 = load i8*, i8** %v.addr.i.i109, align 8, !dbg !4379
  %85 = load i64, i64* %size.addr.i.i110, align 8, !dbg !4379
  call void @kcsan_check_access(i8* %84, i64 %85, i32 7) #8, !dbg !4379
  %86 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i111, align 8, !dbg !4380
  store %struct.atomic_t* %86, %struct.atomic_t** %v.addr.i1.i108, align 8
  %87 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i108, align 8, !dbg !4381
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %87, i32 0, i32 0, !dbg !4382
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #6, !dbg !4383, !srcloc !3503
  br label %if.end78, !dbg !4384

if.end78:                                         ; preds = %if.then75, %if.else71
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %if.then68
  %88 = load %struct.device*, %struct.device** %parent, align 8, !dbg !4385
  %power80 = getelementptr inbounds %struct.device, %struct.device* %88, i32 0, i32 11, !dbg !4386
  %lock81 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power80, i32 0, i32 3, !dbg !4387
  store %struct.spinlock* %lock81, %struct.spinlock** %lock.addr.i114, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4388, !srcloc !2729
  %89 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i114, align 8, !dbg !4389
  %90 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %89, i32 0, i32 0, !dbg !4389
  %rlock.i115 = bitcast %union.anon* %90 to %struct.raw_spinlock*, !dbg !4389
  %91 = load i32, i32* %error, align 4, !dbg !4390
  %tobool82 = icmp ne i32 %91, 0, !dbg !4390
  br i1 %tobool82, label %if.then83, label %if.end84, !dbg !4392

if.then83:                                        ; preds = %if.end79
  store i32 2, i32* %status.addr, align 4, !dbg !4393
  br label %out, !dbg !4395

if.end84:                                         ; preds = %if.end79
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %atomic_add_unless.exit
  br label %out_set, !dbg !4396

out_set:                                          ; preds = %if.end85, %if.then33
  call void @llvm.dbg.label(metadata !4397), !dbg !4398
  %92 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4399
  %93 = load i32, i32* %status.addr, align 4, !dbg !4400
  call void @__update_runtime_status(%struct.device* %92, i32 %93) #7, !dbg !4401
  %94 = load i32, i32* %error, align 4, !dbg !4402
  %tobool86 = icmp ne i32 %94, 0, !dbg !4402
  br i1 %tobool86, label %if.end90, label %if.then87, !dbg !4404

if.then87:                                        ; preds = %out_set
  %95 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4405
  %power88 = getelementptr inbounds %struct.device, %struct.device* %95, i32 0, i32 11, !dbg !4406
  %runtime_error89 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power88, i32 0, i32 19, !dbg !4407
  store i32 0, i32* %runtime_error89, align 8, !dbg !4408
  br label %if.end90, !dbg !4405

if.end90:                                         ; preds = %if.then87, %out_set
  br label %out, !dbg !4402

out:                                              ; preds = %if.end90, %if.then83
  call void @llvm.dbg.label(metadata !4409), !dbg !4410
  %96 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4411
  %power91 = getelementptr inbounds %struct.device, %struct.device* %96, i32 0, i32 11, !dbg !4412
  %lock92 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power91, i32 0, i32 3, !dbg !4413
  store %struct.spinlock* %lock92, %struct.spinlock** %lock.addr.i116, align 8
  call void @arch_local_irq_enable() #8, !dbg !4414
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4415, !srcloc !2330
  %97 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i116, align 8, !dbg !4416
  %98 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %97, i32 0, i32 0, !dbg !4416
  %rlock.i117 = bitcast %union.anon* %98 to %struct.raw_spinlock*, !dbg !4416
  %99 = load i8, i8* %notify_parent, align 1, !dbg !4417
  %tobool93 = trunc i8 %99 to i1, !dbg !4417
  br i1 %tobool93, label %if.then94, label %if.end96, !dbg !4419

if.then94:                                        ; preds = %out
  %100 = load %struct.device*, %struct.device** %parent, align 8, !dbg !4420
  %call95 = call i32 @pm_request_idle(%struct.device* %100) #7, !dbg !4421
  br label %if.end96, !dbg !4421

if.end96:                                         ; preds = %if.then94, %out
  %101 = load i32, i32* %status.addr, align 4, !dbg !4422
  %cmp97 = icmp eq i32 %101, 2, !dbg !4424
  br i1 %cmp97, label %if.then98, label %if.end101, !dbg !4425

if.then98:                                        ; preds = %if.end96
  call void @llvm.dbg.declare(metadata i32* %idx99, metadata !4426, metadata !DIExpression()), !dbg !4428
  %call100 = call i32 @device_links_read_lock() #7, !dbg !4429
  store i32 %call100, i32* %idx99, align 4, !dbg !4428
  %102 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4430
  call void @rpm_put_suppliers(%struct.device* %102) #7, !dbg !4431
  %103 = load i32, i32* %idx99, align 4, !dbg !4432
  call void @device_links_read_unlock(i32 %103) #7, !dbg !4433
  br label %if.end101, !dbg !4434

if.end101:                                        ; preds = %if.then98, %if.end96
  %104 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4435
  call void @pm_runtime_enable(%struct.device* %104) #7, !dbg !4436
  %105 = load i32, i32* %error, align 4, !dbg !4437
  store i32 %105, i32* %retval, align 4, !dbg !4438
  br label %return, !dbg !4438

return:                                           ; preds = %if.end101, %if.then18, %if.then
  %106 = load i32, i32* %retval, align 4, !dbg !4439
  ret i32 %106, !dbg !4439
}

; Function Attrs: noredzone
declare dso_local i32 @device_links_read_lock() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rpm_get_suppliers(%struct.device* %dev) #0 !dbg !4440 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %link = alloca %struct.device_link*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.list_head*, align 8
  %tmp3 = alloca %struct.device_link*, align 8
  %retval6 = alloca i32, align 4
  %__mptr14 = alloca i8*, align 8
  %tmp17 = alloca %struct.list_head*, align 8
  %tmp22 = alloca %struct.device_link*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4441, metadata !DIExpression()), !dbg !4442
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !4443, metadata !DIExpression()), !dbg !4444
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !4445, metadata !DIExpression()), !dbg !4448
  br label %do.body, !dbg !4449

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4451

do.end:                                           ; preds = %do.body
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4449
  %links = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 10, !dbg !4449
  %suppliers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 0, !dbg !4449
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %suppliers, i32 0, i32 0, !dbg !4449
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !4449
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !4451
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !4449
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !4448
  store i8* %3, i8** %__mptr, align 8, !dbg !4448
  br label %do.body1, !dbg !4448

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !4453

do.end2:                                          ; preds = %do.body1
  %4 = load i8*, i8** %__mptr, align 8, !dbg !4448
  %add.ptr = getelementptr i8, i8* %4, i64 -32, !dbg !4448
  %5 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !4448
  store %struct.device_link* %5, %struct.device_link** %tmp3, align 8, !dbg !4453
  %6 = load %struct.device_link*, %struct.device_link** %tmp3, align 8, !dbg !4448
  store %struct.device_link* %6, %struct.device_link** %link, align 8, !dbg !4455
  br label %for.cond, !dbg !4455

for.cond:                                         ; preds = %do.end21, %do.end2
  %7 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !4456
  %c_node = getelementptr inbounds %struct.device_link, %struct.device_link* %7, i32 0, i32 3, !dbg !4456
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4456
  %links4 = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 10, !dbg !4456
  %suppliers5 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links4, i32 0, i32 0, !dbg !4456
  %cmp = icmp ne %struct.list_head* %c_node, %suppliers5, !dbg !4456
  br i1 %cmp, label %for.body, label %for.end, !dbg !4455

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %retval6, metadata !4458, metadata !DIExpression()), !dbg !4460
  %9 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !4461
  %flags = getelementptr inbounds %struct.device_link, %struct.device_link* %9, i32 0, i32 6, !dbg !4463
  %10 = load i32, i32* %flags, align 4, !dbg !4463
  %conv = zext i32 %10 to i64, !dbg !4461
  %and = and i64 %conv, 4, !dbg !4464
  %tobool = icmp ne i64 %and, 0, !dbg !4464
  br i1 %tobool, label %if.end, label %if.then, !dbg !4465

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !4466

if.end:                                           ; preds = %for.body
  %11 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !4467
  %supplier = getelementptr inbounds %struct.device_link, %struct.device_link* %11, i32 0, i32 0, !dbg !4468
  %12 = load %struct.device*, %struct.device** %supplier, align 8, !dbg !4468
  %call = call i32 @pm_runtime_get_sync(%struct.device* %12) #7, !dbg !4469
  store i32 %call, i32* %retval6, align 4, !dbg !4470
  %13 = load i32, i32* %retval6, align 4, !dbg !4471
  %cmp7 = icmp slt i32 %13, 0, !dbg !4473
  br i1 %cmp7, label %land.lhs.true, label %if.end13, !dbg !4474

land.lhs.true:                                    ; preds = %if.end
  %14 = load i32, i32* %retval6, align 4, !dbg !4475
  %cmp9 = icmp ne i32 %14, -13, !dbg !4476
  br i1 %cmp9, label %if.then11, label %if.end13, !dbg !4477

if.then11:                                        ; preds = %land.lhs.true
  %15 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !4478
  %supplier12 = getelementptr inbounds %struct.device_link, %struct.device_link* %15, i32 0, i32 0, !dbg !4480
  %16 = load %struct.device*, %struct.device** %supplier12, align 8, !dbg !4480
  call void @pm_runtime_put_noidle(%struct.device* %16) #7, !dbg !4481
  %17 = load i32, i32* %retval6, align 4, !dbg !4482
  store i32 %17, i32* %retval, align 4, !dbg !4483
  br label %return, !dbg !4483

if.end13:                                         ; preds = %land.lhs.true, %if.end
  %18 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !4484
  %rpm_active = getelementptr inbounds %struct.device_link, %struct.device_link* %18, i32 0, i32 7, !dbg !4485
  call void @refcount_inc(%struct.refcount_struct* %rpm_active) #7, !dbg !4486
  br label %for.inc, !dbg !4487

for.inc:                                          ; preds = %if.end13, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr14, metadata !4488, metadata !DIExpression()), !dbg !4490
  br label %do.body15, !dbg !4491

do.body15:                                        ; preds = %for.inc
  br label %do.end16, !dbg !4493

do.end16:                                         ; preds = %do.body15
  %19 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !4491
  %c_node18 = getelementptr inbounds %struct.device_link, %struct.device_link* %19, i32 0, i32 3, !dbg !4491
  %next19 = getelementptr inbounds %struct.list_head, %struct.list_head* %c_node18, i32 0, i32 0, !dbg !4491
  %20 = load volatile %struct.list_head*, %struct.list_head** %next19, align 8, !dbg !4491
  store %struct.list_head* %20, %struct.list_head** %tmp17, align 8, !dbg !4493
  %21 = load %struct.list_head*, %struct.list_head** %tmp17, align 8, !dbg !4491
  %22 = bitcast %struct.list_head* %21 to i8*, !dbg !4490
  store i8* %22, i8** %__mptr14, align 8, !dbg !4490
  br label %do.body20, !dbg !4490

do.body20:                                        ; preds = %do.end16
  br label %do.end21, !dbg !4495

do.end21:                                         ; preds = %do.body20
  %23 = load i8*, i8** %__mptr14, align 8, !dbg !4490
  %add.ptr23 = getelementptr i8, i8* %23, i64 -32, !dbg !4490
  %24 = bitcast i8* %add.ptr23 to %struct.device_link*, !dbg !4490
  store %struct.device_link* %24, %struct.device_link** %tmp22, align 8, !dbg !4495
  %25 = load %struct.device_link*, %struct.device_link** %tmp22, align 8, !dbg !4490
  store %struct.device_link* %25, %struct.device_link** %link, align 8, !dbg !4456
  br label %for.cond, !dbg !4456, !llvm.loop !4497

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !4499
  br label %return, !dbg !4499

return:                                           ; preds = %for.end, %if.then11
  %26 = load i32, i32* %retval, align 4, !dbg !4500
  ret i32 %26, !dbg !4500
}

; Function Attrs: noredzone
declare dso_local void @device_links_read_unlock(i32) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !4501 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4506, metadata !DIExpression()), !dbg !4507
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4508
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !4510
  %1 = load i8*, i8** %init_name, align 8, !dbg !4510
  %tobool = icmp ne i8* %1, null, !dbg !4508
  br i1 %tobool, label %if.then, label %if.end, !dbg !4511

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4512
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !4513
  %3 = load i8*, i8** %init_name1, align 8, !dbg !4513
  store i8* %3, i8** %retval, align 8, !dbg !4514
  br label %return, !dbg !4514

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4515
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !4516
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #7, !dbg !4517
  store i8* %call, i8** %retval, align 8, !dbg !4518
  br label %return, !dbg !4518

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !4519
  ret i8* %5, !dbg !4519
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__update_runtime_status(%struct.device* %dev, i32 %status) #0 !dbg !4520 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %status.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4523, metadata !DIExpression()), !dbg !4524
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !4525, metadata !DIExpression()), !dbg !4526
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4527
  call void @update_pm_runtime_accounting(%struct.device* %0) #7, !dbg !4528
  %1 = load i32, i32* %status.addr, align 4, !dbg !4529
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4530
  %power = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 11, !dbg !4531
  %runtime_status = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 18, !dbg !4532
  store i32 %1, i32* %runtime_status, align 4, !dbg !4533
  ret void, !dbg !4534
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_request_idle(%struct.device* %dev) #0 !dbg !4535 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4537, metadata !DIExpression()), !dbg !4538
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4539
  %call = call i32 @__pm_runtime_idle(%struct.device* %0, i32 1) #7, !dbg !4540
  ret i32 %call, !dbg !4541
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rpm_put_suppliers(%struct.device* %dev) #0 !dbg !4542 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %link = alloca %struct.device_link*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.list_head*, align 8
  %tmp3 = alloca %struct.device_link*, align 8
  %__mptr7 = alloca i8*, align 8
  %tmp10 = alloca %struct.list_head*, align 8
  %tmp15 = alloca %struct.device_link*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4543, metadata !DIExpression()), !dbg !4544
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !4545, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !4547, metadata !DIExpression()), !dbg !4550
  br label %do.body, !dbg !4551

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4553

do.end:                                           ; preds = %do.body
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4551
  %links = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 10, !dbg !4551
  %suppliers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 0, !dbg !4551
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %suppliers, i32 0, i32 0, !dbg !4551
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !4551
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !4553
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !4551
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !4550
  store i8* %3, i8** %__mptr, align 8, !dbg !4550
  br label %do.body1, !dbg !4550

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !4555

do.end2:                                          ; preds = %do.body1
  %4 = load i8*, i8** %__mptr, align 8, !dbg !4550
  %add.ptr = getelementptr i8, i8* %4, i64 -32, !dbg !4550
  %5 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !4550
  store %struct.device_link* %5, %struct.device_link** %tmp3, align 8, !dbg !4555
  %6 = load %struct.device_link*, %struct.device_link** %tmp3, align 8, !dbg !4550
  store %struct.device_link* %6, %struct.device_link** %link, align 8, !dbg !4557
  br label %for.cond, !dbg !4557

for.cond:                                         ; preds = %do.end14, %do.end2
  %7 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !4558
  %c_node = getelementptr inbounds %struct.device_link, %struct.device_link* %7, i32 0, i32 3, !dbg !4558
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4558
  %links4 = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 10, !dbg !4558
  %suppliers5 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links4, i32 0, i32 0, !dbg !4558
  %cmp = icmp ne %struct.list_head* %c_node, %suppliers5, !dbg !4558
  br i1 %cmp, label %for.body, label %for.end, !dbg !4557

for.body:                                         ; preds = %for.cond
  br label %while.cond, !dbg !4560

while.cond:                                       ; preds = %while.body, %for.body
  %9 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !4562
  %rpm_active = getelementptr inbounds %struct.device_link, %struct.device_link* %9, i32 0, i32 7, !dbg !4563
  %call = call zeroext i1 @refcount_dec_not_one(%struct.refcount_struct* %rpm_active) #7, !dbg !4564
  br i1 %call, label %while.body, label %while.end, !dbg !4560

while.body:                                       ; preds = %while.cond
  %10 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !4565
  %supplier = getelementptr inbounds %struct.device_link, %struct.device_link* %10, i32 0, i32 0, !dbg !4566
  %11 = load %struct.device*, %struct.device** %supplier, align 8, !dbg !4566
  %call6 = call i32 @pm_runtime_put(%struct.device* %11) #7, !dbg !4567
  br label %while.cond, !dbg !4560, !llvm.loop !4568

while.end:                                        ; preds = %while.cond
  br label %for.inc, !dbg !4570

for.inc:                                          ; preds = %while.end
  call void @llvm.dbg.declare(metadata i8** %__mptr7, metadata !4571, metadata !DIExpression()), !dbg !4573
  br label %do.body8, !dbg !4574

do.body8:                                         ; preds = %for.inc
  br label %do.end9, !dbg !4576

do.end9:                                          ; preds = %do.body8
  %12 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !4574
  %c_node11 = getelementptr inbounds %struct.device_link, %struct.device_link* %12, i32 0, i32 3, !dbg !4574
  %next12 = getelementptr inbounds %struct.list_head, %struct.list_head* %c_node11, i32 0, i32 0, !dbg !4574
  %13 = load volatile %struct.list_head*, %struct.list_head** %next12, align 8, !dbg !4574
  store %struct.list_head* %13, %struct.list_head** %tmp10, align 8, !dbg !4576
  %14 = load %struct.list_head*, %struct.list_head** %tmp10, align 8, !dbg !4574
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !4573
  store i8* %15, i8** %__mptr7, align 8, !dbg !4573
  br label %do.body13, !dbg !4573

do.body13:                                        ; preds = %do.end9
  br label %do.end14, !dbg !4578

do.end14:                                         ; preds = %do.body13
  %16 = load i8*, i8** %__mptr7, align 8, !dbg !4573
  %add.ptr16 = getelementptr i8, i8* %16, i64 -32, !dbg !4573
  %17 = bitcast i8* %add.ptr16 to %struct.device_link*, !dbg !4573
  store %struct.device_link* %17, %struct.device_link** %tmp15, align 8, !dbg !4578
  %18 = load %struct.device_link*, %struct.device_link** %tmp15, align 8, !dbg !4573
  store %struct.device_link* %18, %struct.device_link** %link, align 8, !dbg !4558
  br label %for.cond, !dbg !4558, !llvm.loop !4580

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4582
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pm_runtime_enable(%struct.device* %dev) #0 !dbg !4583 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !2542, metadata !DIExpression()), !dbg !4584
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !2987, metadata !DIExpression()), !dbg !4588
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !2991, metadata !DIExpression()), !dbg !4590
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !2993, metadata !DIExpression()), !dbg !4591
  %lock.addr.i90 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i90, metadata !2149, metadata !DIExpression()), !dbg !4592
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !2157, metadata !DIExpression()), !dbg !4594
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2159, metadata !DIExpression()), !dbg !4595
  %dev.addr = alloca %struct.device*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp81 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4602, metadata !DIExpression()), !dbg !4603
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4604, metadata !DIExpression()), !dbg !4605
  br label %do.body, !dbg !4606

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !4607

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4608, metadata !DIExpression()), !dbg !4610
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4611, metadata !DIExpression()), !dbg !4610
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !4610
  %conv = zext i1 %cmp to i32, !dbg !4610
  store i32 1, i32* %tmp, align 4, !dbg !4610
  %0 = load i32, i32* %tmp, align 4, !dbg !4610
  br label %do.body2, !dbg !4612

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !4613

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !4614

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !4616, metadata !DIExpression()), !dbg !4619
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !4620, metadata !DIExpression()), !dbg !4619
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !4619
  %conv8 = zext i1 %cmp7 to i32, !dbg !4619
  store i32 1, i32* %tmp9, align 4, !dbg !4619
  %1 = load i32, i32* %tmp9, align 4, !dbg !4619
  %call = call i64 @arch_local_irq_save() #7, !dbg !4621
  store i64 %call, i64* %flags, align 8, !dbg !4621
  br label %do.end, !dbg !4621

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !4614

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !4613

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4622, !srcloc !4623
  br label %do.body12, !dbg !4622

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4624
  %power = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 11, !dbg !4624
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 3, !dbg !4624
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4625
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !4626
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !4626
  br label %do.end14, !dbg !4624

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !4622

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !4613

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !4612

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !4607

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4627
  %power19 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 11, !dbg !4629
  %disable_depth = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power19, i32 0, i32 15, !dbg !4630
  %bf.load = load i16, i16* %disable_depth, align 8, !dbg !4630
  %bf.clear = and i16 %bf.load, 7, !dbg !4630
  %bf.cast = zext i16 %bf.clear to i32, !dbg !4630
  %cmp20 = icmp sgt i32 %bf.cast, 0, !dbg !4631
  br i1 %cmp20, label %if.then, label %if.else, !dbg !4632

if.then:                                          ; preds = %do.end18
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4633
  %power22 = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 11, !dbg !4635
  %disable_depth23 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power22, i32 0, i32 15, !dbg !4636
  %bf.load24 = load i16, i16* %disable_depth23, align 8, !dbg !4637
  %bf.clear25 = and i16 %bf.load24, 7, !dbg !4637
  %bf.cast26 = zext i16 %bf.clear25 to i32, !dbg !4637
  %dec = add i32 %bf.cast26, -1, !dbg !4637
  %7 = trunc i32 %dec to i16, !dbg !4637
  %bf.load27 = load i16, i16* %disable_depth23, align 8, !dbg !4637
  %bf.value = and i16 %7, 7, !dbg !4637
  %bf.clear28 = and i16 %bf.load27, -8, !dbg !4637
  %bf.set = or i16 %bf.clear28, %bf.value, !dbg !4637
  store i16 %bf.set, i16* %disable_depth23, align 8, !dbg !4637
  %bf.result.cast = zext i16 %bf.value to i32, !dbg !4637
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4638
  %power29 = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 11, !dbg !4640
  %disable_depth30 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power29, i32 0, i32 15, !dbg !4641
  %bf.load31 = load i16, i16* %disable_depth30, align 8, !dbg !4641
  %bf.clear32 = and i16 %bf.load31, 7, !dbg !4641
  %bf.cast33 = zext i16 %bf.clear32 to i32, !dbg !4641
  %tobool = icmp ne i32 %bf.cast33, 0, !dbg !4638
  br i1 %tobool, label %if.end, label %if.then34, !dbg !4642

if.then34:                                        ; preds = %if.then
  %call35 = call i64 @ktime_get_mono_fast_ns() #7, !dbg !4643
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4644
  %power36 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 11, !dbg !4645
  %accounting_timestamp = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power36, i32 0, i32 24, !dbg !4646
  store i64 %call35, i64* %accounting_timestamp, align 8, !dbg !4647
  br label %if.end, !dbg !4644

if.end:                                           ; preds = %if.then34, %if.then
  br label %if.end37, !dbg !4648

if.else:                                          ; preds = %do.end18
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4649
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.pm_runtime_enable, i64 0, i64 0)) #10, !dbg !4649
  br label %if.end37

if.end37:                                         ; preds = %if.else, %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !4651, metadata !DIExpression()), !dbg !4652
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4652
  %power38 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 11, !dbg !4652
  %disable_depth39 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power38, i32 0, i32 15, !dbg !4652
  %bf.load40 = load i16, i16* %disable_depth39, align 8, !dbg !4652
  %bf.clear41 = and i16 %bf.load40, 7, !dbg !4652
  %bf.cast42 = zext i16 %bf.clear41 to i32, !dbg !4652
  %tobool43 = icmp ne i32 %bf.cast42, 0, !dbg !4652
  br i1 %tobool43, label %land.end, label %land.lhs.true, !dbg !4652

land.lhs.true:                                    ; preds = %if.end37
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4652
  %power44 = getelementptr inbounds %struct.device, %struct.device* %12, i32 0, i32 11, !dbg !4652
  %runtime_status = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power44, i32 0, i32 18, !dbg !4652
  %13 = load i32, i32* %runtime_status, align 4, !dbg !4652
  %cmp45 = icmp eq i32 %13, 2, !dbg !4652
  br i1 %cmp45, label %land.lhs.true47, label %land.end, !dbg !4652

land.lhs.true47:                                  ; preds = %land.lhs.true
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4652
  %power48 = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 11, !dbg !4652
  %ignore_children = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power48, i32 0, i32 15, !dbg !4652
  %bf.load49 = load i16, i16* %ignore_children, align 8, !dbg !4652
  %bf.lshr = lshr i16 %bf.load49, 7, !dbg !4652
  %bf.clear50 = and i16 %bf.lshr, 1, !dbg !4652
  %bf.cast51 = trunc i16 %bf.clear50 to i1, !dbg !4652
  br i1 %bf.cast51, label %land.end, label %land.rhs, !dbg !4652

land.rhs:                                         ; preds = %land.lhs.true47
  %15 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4652
  %power52 = getelementptr inbounds %struct.device, %struct.device* %15, i32 0, i32 11, !dbg !4652
  %child_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power52, i32 0, i32 14, !dbg !4652
  store %struct.atomic_t* %child_count, %struct.atomic_t** %v.addr.i, align 8
  %16 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !4653
  %17 = bitcast %struct.atomic_t* %16 to i8*, !dbg !4653
  store i8* %17, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %18 = load i8*, i8** %v.addr.i.i, align 8, !dbg !4654
  %19 = load i64, i64* %size.addr.i.i, align 8, !dbg !4655
  %conv.i.i = trunc i64 %19 to i32, !dbg !4655
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %18, i32 %conv.i.i) #8, !dbg !4656
  %20 = load i8*, i8** %v.addr.i.i, align 8, !dbg !4657
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !4657
  call void @kcsan_check_access(i8* %20, i64 %21, i32 4) #8, !dbg !4657
  %22 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !4658
  store %struct.atomic_t* %22, %struct.atomic_t** %v.addr.i1.i, align 8
  %23 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !4659
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %23, i32 0, i32 0, !dbg !4659
  %24 = load volatile i32, i32* %counter.i.i, align 4, !dbg !4659
  %cmp54 = icmp sgt i32 %24, 0, !dbg !4652
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true47, %land.lhs.true, %if.end37
  %25 = phi i1 [ false, %land.lhs.true47 ], [ false, %land.lhs.true ], [ false, %if.end37 ], [ %cmp54, %land.rhs ], !dbg !4660
  %lnot = xor i1 %25, true, !dbg !4652
  %lnot56 = xor i1 %lnot, true, !dbg !4652
  %lnot.ext = zext i1 %lnot56 to i32, !dbg !4652
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !4652
  %26 = load i32, i32* %__ret_warn_on, align 4, !dbg !4661
  %tobool57 = icmp ne i32 %26, 0, !dbg !4661
  %lnot58 = xor i1 %tobool57, true, !dbg !4661
  %lnot60 = xor i1 %lnot58, true, !dbg !4661
  %lnot.ext61 = zext i1 %lnot60 to i32, !dbg !4661
  %conv62 = sext i32 %lnot.ext61 to i64, !dbg !4661
  %tobool63 = icmp ne i64 %conv62, 0, !dbg !4661
  br i1 %tobool63, label %if.then64, label %if.end80, !dbg !4652

if.then64:                                        ; preds = %land.end
  br label %do.body65, !dbg !4661

do.body65:                                        ; preds = %if.then64
  br label %do.body66, !dbg !4663

do.body66:                                        ; preds = %do.body65
  br label %do.end67, !dbg !4665

do.end67:                                         ; preds = %do.body66
  %27 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4663
  %call68 = call i8* @dev_name(%struct.device* %27) #7, !dbg !4663
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.2, i64 0, i64 0), i8* %call68) #7, !dbg !4663
  br label %do.body69, !dbg !4663

do.body69:                                        ; preds = %do.end67
  br label %do.body70, !dbg !4667

do.body70:                                        ; preds = %do.body69
  br label %do.end71, !dbg !4669

do.end71:                                         ; preds = %do.body70
  br label %do.body72, !dbg !4667

do.body72:                                        ; preds = %do.end71
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 1413, i32 2313, i64 12) #6, !dbg !4671, !srcloc !4673
  br label %do.end73, !dbg !4671

do.end73:                                         ; preds = %do.body72
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 172) #6, !dbg !4674, !srcloc !4676
  br label %do.body74, !dbg !4667

do.body74:                                        ; preds = %do.end73
  br label %do.end75, !dbg !4677

do.end75:                                         ; preds = %do.body74
  br label %do.end76, !dbg !4667

do.end76:                                         ; preds = %do.end75
  br label %do.body77, !dbg !4663

do.body77:                                        ; preds = %do.end76
  br label %do.end78, !dbg !4679

do.end78:                                         ; preds = %do.body77
  br label %do.end79, !dbg !4663

do.end79:                                         ; preds = %do.end78
  br label %if.end80, !dbg !4663

if.end80:                                         ; preds = %do.end79, %land.end
  %28 = load i32, i32* %__ret_warn_on, align 4, !dbg !4652
  %tobool82 = icmp ne i32 %28, 0, !dbg !4652
  %lnot83 = xor i1 %tobool82, true, !dbg !4652
  %lnot85 = xor i1 %lnot83, true, !dbg !4652
  %lnot.ext86 = zext i1 %lnot85 to i32, !dbg !4652
  %conv87 = sext i32 %lnot.ext86 to i64, !dbg !4652
  store i64 %conv87, i64* %tmp81, align 8, !dbg !4661
  %29 = load i64, i64* %tmp81, align 8, !dbg !4652
  %30 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4681
  %power88 = getelementptr inbounds %struct.device, %struct.device* %30, i32 0, i32 11, !dbg !4682
  %lock89 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power88, i32 0, i32 3, !dbg !4683
  %31 = load i64, i64* %flags, align 8, !dbg !4684
  store %struct.spinlock* %lock89, %struct.spinlock** %lock.addr.i90, align 8
  store i64 %31, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !47, metadata !2214, metadata !DIExpression()) #6, !dbg !4685
  call void @llvm.dbg.declare(metadata !47, metadata !2218, metadata !DIExpression()) #6, !dbg !4685
  store i32 1, i32* %tmp.i, align 4, !dbg !4685
  %32 = load i32, i32* %tmp.i, align 4, !dbg !4685
  call void @llvm.dbg.declare(metadata !47, metadata !2219, metadata !DIExpression()) #6, !dbg !4686
  call void @llvm.dbg.declare(metadata !47, metadata !2225, metadata !DIExpression()) #6, !dbg !4686
  store i32 1, i32* %tmp8.i, align 4, !dbg !4686
  %33 = load i32, i32* %tmp8.i, align 4, !dbg !4686
  %34 = load i64, i64* %flags.addr.i, align 8, !dbg !4687
  call void @arch_local_irq_restore(i64 %34) #8, !dbg !4687
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4688, !srcloc !2229
  %35 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i90, align 8, !dbg !4689
  %36 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %35, i32 0, i32 0, !dbg !4689
  %rlock.i91 = bitcast %union.anon* %36 to %struct.raw_spinlock*, !dbg !4689
  ret void, !dbg !4690
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pm_runtime_barrier(%struct.device* %dev) #0 !dbg !4691 {
entry:
  %lock.addr.i6 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i6, metadata !2281, metadata !DIExpression()), !dbg !4692
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2290, metadata !DIExpression()), !dbg !4694
  %dev.addr = alloca %struct.device*, align 8
  %retval1 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4696, metadata !DIExpression()), !dbg !4697
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !4698, metadata !DIExpression()), !dbg !4699
  store i32 0, i32* %retval1, align 4, !dbg !4699
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4700
  call void @pm_runtime_get_noresume(%struct.device* %0) #7, !dbg !4701
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4702
  %power = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !4703
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 3, !dbg !4704
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #8, !dbg !4705
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4706, !srcloc !2310
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4707
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !4707
  %rlock.i = bitcast %union.anon* %3 to %struct.raw_spinlock*, !dbg !4707
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4708
  %power2 = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 11, !dbg !4710
  %request_pending = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power2, i32 0, i32 15, !dbg !4711
  %bf.load = load i16, i16* %request_pending, align 8, !dbg !4711
  %bf.lshr = lshr i16 %bf.load, 4, !dbg !4711
  %bf.clear = and i16 %bf.lshr, 1, !dbg !4711
  %bf.cast = zext i16 %bf.clear to i32, !dbg !4711
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !4708
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4712

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4713
  %power3 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 11, !dbg !4714
  %request = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power3, i32 0, i32 17, !dbg !4715
  %6 = load i32, i32* %request, align 8, !dbg !4715
  %cmp = icmp eq i32 %6, 4, !dbg !4716
  br i1 %cmp, label %if.then, label %if.end, !dbg !4717

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4718
  %call = call i32 @rpm_resume(%struct.device* %7, i32 0) #7, !dbg !4720
  store i32 1, i32* %retval1, align 4, !dbg !4721
  br label %if.end, !dbg !4722

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4723
  call void @__pm_runtime_barrier(%struct.device* %8) #7, !dbg !4724
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4725
  %power4 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 11, !dbg !4726
  %lock5 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power4, i32 0, i32 3, !dbg !4727
  store %struct.spinlock* %lock5, %struct.spinlock** %lock.addr.i6, align 8
  call void @arch_local_irq_enable() #8, !dbg !4728
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4729, !srcloc !2330
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i6, align 8, !dbg !4730
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !4730
  %rlock.i7 = bitcast %union.anon* %11 to %struct.raw_spinlock*, !dbg !4730
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4731
  call void @pm_runtime_put_noidle(%struct.device* %12) #7, !dbg !4732
  %13 = load i32, i32* %retval1, align 4, !dbg !4733
  ret i32 %13, !dbg !4734
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_get_noresume(%struct.device* %dev) #0 !dbg !4735 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !3457, metadata !DIExpression()), !dbg !4736
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !2564, metadata !DIExpression()), !dbg !4739
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !2574, metadata !DIExpression()), !dbg !4741
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !3469, metadata !DIExpression()), !dbg !4742
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4743, metadata !DIExpression()), !dbg !4744
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4745
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !4746
  %usage_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 13, !dbg !4747
  store %struct.atomic_t* %usage_count, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !4748
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !4748
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !4749
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !4750
  %conv.i.i = trunc i64 %4 to i32, !dbg !4750
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #8, !dbg !4751
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !4752
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !4752
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #8, !dbg !4752
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !4753
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !4754
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !4755
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #6, !dbg !4756, !srcloc !3503
  ret void, !dbg !4757
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__pm_runtime_barrier(%struct.device* %dev) #0 !dbg !4758 {
entry:
  %lock.addr.i54 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i54, metadata !2290, metadata !DIExpression()), !dbg !4759
  %lock.addr.i52 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i52, metadata !2281, metadata !DIExpression()), !dbg !4766
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !2488, metadata !DIExpression()), !dbg !4768
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !2496, metadata !DIExpression()), !dbg !4770
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !2499, metadata !DIExpression()), !dbg !4771
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %lock.addr.i50 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i50, metadata !2290, metadata !DIExpression()), !dbg !4772
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2281, metadata !DIExpression()), !dbg !4776
  %dev.addr = alloca %struct.device*, align 8
  %wait = alloca %struct.wait_queue_entry, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4778, metadata !DIExpression()), !dbg !4779
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4780
  call void @pm_runtime_deactivate_timer(%struct.device* %0) #7, !dbg !4781
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4782
  %power = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !4783
  %request_pending = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 15, !dbg !4784
  %bf.load = load i16, i16* %request_pending, align 8, !dbg !4784
  %bf.lshr = lshr i16 %bf.load, 4, !dbg !4784
  %bf.clear = and i16 %bf.lshr, 1, !dbg !4784
  %bf.cast = zext i16 %bf.clear to i32, !dbg !4784
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !4782
  br i1 %tobool, label %if.then, label %if.end, !dbg !4785

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4786
  %power1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 11, !dbg !4787
  %request = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 17, !dbg !4788
  store i32 0, i32* %request, align 8, !dbg !4789
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4790
  %power2 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 11, !dbg !4791
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power2, i32 0, i32 3, !dbg !4792
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_enable() #8, !dbg !4793
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4794, !srcloc !2330
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4795
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !4795
  %rlock.i = bitcast %union.anon* %5 to %struct.raw_spinlock*, !dbg !4795
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4796
  %power3 = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 11, !dbg !4797
  %work = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power3, i32 0, i32 10, !dbg !4798
  %call = call zeroext i1 @cancel_work_sync(%struct.work_struct* %work) #7, !dbg !4799
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4800
  %power4 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 11, !dbg !4801
  %lock5 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power4, i32 0, i32 3, !dbg !4802
  store %struct.spinlock* %lock5, %struct.spinlock** %lock.addr.i50, align 8
  call void @arch_local_irq_disable() #8, !dbg !4803
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4804, !srcloc !2310
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i50, align 8, !dbg !4805
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !4805
  %rlock.i51 = bitcast %union.anon* %9 to %struct.raw_spinlock*, !dbg !4805
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4806
  %power6 = getelementptr inbounds %struct.device, %struct.device* %10, i32 0, i32 11, !dbg !4807
  %request_pending7 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power6, i32 0, i32 15, !dbg !4808
  %bf.load8 = load i16, i16* %request_pending7, align 8, !dbg !4809
  %bf.clear9 = and i16 %bf.load8, -17, !dbg !4809
  store i16 %bf.clear9, i16* %request_pending7, align 8, !dbg !4809
  br label %if.end, !dbg !4810

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4811
  %power10 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 11, !dbg !4812
  %runtime_status = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power10, i32 0, i32 18, !dbg !4813
  %12 = load i32, i32* %runtime_status, align 4, !dbg !4813
  %cmp = icmp eq i32 %12, 3, !dbg !4814
  br i1 %cmp, label %if.then21, label %lor.lhs.false, !dbg !4815

lor.lhs.false:                                    ; preds = %if.end
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4816
  %power11 = getelementptr inbounds %struct.device, %struct.device* %13, i32 0, i32 11, !dbg !4817
  %runtime_status12 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power11, i32 0, i32 18, !dbg !4818
  %14 = load i32, i32* %runtime_status12, align 4, !dbg !4818
  %cmp13 = icmp eq i32 %14, 1, !dbg !4819
  br i1 %cmp13, label %if.then21, label %lor.lhs.false14, !dbg !4820

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %15 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4821
  %power15 = getelementptr inbounds %struct.device, %struct.device* %15, i32 0, i32 11, !dbg !4822
  %idle_notification = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power15, i32 0, i32 15, !dbg !4823
  %bf.load16 = load i16, i16* %idle_notification, align 8, !dbg !4823
  %bf.lshr17 = lshr i16 %bf.load16, 3, !dbg !4823
  %bf.clear18 = and i16 %bf.lshr17, 1, !dbg !4823
  %bf.cast19 = zext i16 %bf.clear18 to i32, !dbg !4823
  %tobool20 = icmp ne i32 %bf.cast19, 0, !dbg !4821
  br i1 %tobool20, label %if.then21, label %if.end49, !dbg !4824

if.then21:                                        ; preds = %lor.lhs.false14, %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %wait, metadata !4825, metadata !DIExpression()), !dbg !4826
  %flags = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 0, !dbg !4826
  store i32 0, i32* %flags, align 8, !dbg !4826
  %private = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 1, !dbg !4826
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !4770
  %16 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !4770
  %17 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #9, !dbg !4771, !srcloc !2712
  store i64 %17, i64* %pfo_val__.i, align 8, !dbg !4771
  %18 = load i64, i64* %pfo_val__.i, align 8, !dbg !4771
  %19 = inttoptr i64 %18 to %struct.task_struct*, !dbg !4771
  store %struct.task_struct* %19, %struct.task_struct** %tmp.i, align 8, !dbg !4771
  %20 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !4771
  store %struct.task_struct* %20, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !4768
  %21 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !4768
  store %struct.task_struct* %21, %struct.task_struct** %tmp1.i, align 8, !dbg !4768
  %22 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !4768
  %23 = bitcast %struct.task_struct* %22 to i8*, !dbg !4826
  store i8* %23, i8** %private, align 8, !dbg !4826
  %func = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 2, !dbg !4826
  store i32 (%struct.wait_queue_entry*, i32, i32, i8*)* @autoremove_wake_function, i32 (%struct.wait_queue_entry*, i32, i32, i8*)** %func, align 8, !dbg !4826
  %entry23 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 3, !dbg !4826
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry23, i32 0, i32 0, !dbg !4826
  %entry24 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 3, !dbg !4826
  store %struct.list_head* %entry24, %struct.list_head** %next, align 8, !dbg !4826
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %entry23, i32 0, i32 1, !dbg !4826
  %entry25 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 3, !dbg !4826
  store %struct.list_head* %entry25, %struct.list_head** %prev, align 8, !dbg !4826
  br label %for.cond, !dbg !4827

for.cond:                                         ; preds = %if.end42, %if.then21
  %24 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4828
  %power26 = getelementptr inbounds %struct.device, %struct.device* %24, i32 0, i32 11, !dbg !4829
  %wait_queue = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power26, i32 0, i32 11, !dbg !4830
  call void @prepare_to_wait(%struct.wait_queue_head* %wait_queue, %struct.wait_queue_entry* %wait, i32 2) #7, !dbg !4831
  %25 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4832
  %power27 = getelementptr inbounds %struct.device, %struct.device* %25, i32 0, i32 11, !dbg !4834
  %runtime_status28 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power27, i32 0, i32 18, !dbg !4835
  %26 = load i32, i32* %runtime_status28, align 4, !dbg !4835
  %cmp29 = icmp ne i32 %26, 3, !dbg !4836
  br i1 %cmp29, label %land.lhs.true, label %if.end42, !dbg !4837

land.lhs.true:                                    ; preds = %for.cond
  %27 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4838
  %power30 = getelementptr inbounds %struct.device, %struct.device* %27, i32 0, i32 11, !dbg !4839
  %runtime_status31 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power30, i32 0, i32 18, !dbg !4840
  %28 = load i32, i32* %runtime_status31, align 4, !dbg !4840
  %cmp32 = icmp ne i32 %28, 1, !dbg !4841
  br i1 %cmp32, label %land.lhs.true33, label %if.end42, !dbg !4842

land.lhs.true33:                                  ; preds = %land.lhs.true
  %29 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4843
  %power34 = getelementptr inbounds %struct.device, %struct.device* %29, i32 0, i32 11, !dbg !4844
  %idle_notification35 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power34, i32 0, i32 15, !dbg !4845
  %bf.load36 = load i16, i16* %idle_notification35, align 8, !dbg !4845
  %bf.lshr37 = lshr i16 %bf.load36, 3, !dbg !4845
  %bf.clear38 = and i16 %bf.lshr37, 1, !dbg !4845
  %bf.cast39 = zext i16 %bf.clear38 to i32, !dbg !4845
  %tobool40 = icmp ne i32 %bf.cast39, 0, !dbg !4843
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !4846

if.then41:                                        ; preds = %land.lhs.true33
  br label %for.end, !dbg !4847

if.end42:                                         ; preds = %land.lhs.true33, %land.lhs.true, %for.cond
  %30 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4848
  %power43 = getelementptr inbounds %struct.device, %struct.device* %30, i32 0, i32 11, !dbg !4849
  %lock44 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power43, i32 0, i32 3, !dbg !4850
  store %struct.spinlock* %lock44, %struct.spinlock** %lock.addr.i52, align 8
  call void @arch_local_irq_enable() #8, !dbg !4851
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4852, !srcloc !2330
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i52, align 8, !dbg !4853
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !4853
  %rlock.i53 = bitcast %union.anon* %32 to %struct.raw_spinlock*, !dbg !4853
  call void @schedule() #7, !dbg !4854
  %33 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4855
  %power45 = getelementptr inbounds %struct.device, %struct.device* %33, i32 0, i32 11, !dbg !4856
  %lock46 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power45, i32 0, i32 3, !dbg !4857
  store %struct.spinlock* %lock46, %struct.spinlock** %lock.addr.i54, align 8
  call void @arch_local_irq_disable() #8, !dbg !4858
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4859, !srcloc !2310
  %34 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i54, align 8, !dbg !4860
  %35 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %34, i32 0, i32 0, !dbg !4860
  %rlock.i55 = bitcast %union.anon* %35 to %struct.raw_spinlock*, !dbg !4860
  br label %for.cond, !dbg !4861, !llvm.loop !4862

for.end:                                          ; preds = %if.then41
  %36 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4865
  %power47 = getelementptr inbounds %struct.device, %struct.device* %36, i32 0, i32 11, !dbg !4866
  %wait_queue48 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power47, i32 0, i32 11, !dbg !4867
  call void @finish_wait(%struct.wait_queue_head* %wait_queue48, %struct.wait_queue_entry* %wait) #7, !dbg !4868
  br label %if.end49, !dbg !4869

if.end49:                                         ; preds = %for.end, %lor.lhs.false14
  ret void, !dbg !4870
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_put_noidle(%struct.device* %dev) #0 !dbg !4871 {
entry:
  %v.addr.i5.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i5.i.i.i, metadata !2509, metadata !DIExpression()), !dbg !4872
  %old.addr.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %old.addr.i.i.i.i, metadata !2531, metadata !DIExpression()), !dbg !4877
  %new.addr.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i.i.i.i, metadata !2533, metadata !DIExpression()), !dbg !4878
  %success.i.i.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %success.i.i.i.i, metadata !2535, metadata !DIExpression()), !dbg !4879
  %_old.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %_old.i.i.i.i, metadata !2538, metadata !DIExpression()), !dbg !4879
  %__old.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__old.i.i.i.i, metadata !2539, metadata !DIExpression()), !dbg !4879
  %__new.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__new.i.i.i.i, metadata !2540, metadata !DIExpression()), !dbg !4879
  %__ptr.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %__ptr.i.i.i.i, metadata !2541, metadata !DIExpression()), !dbg !4879
  %tmp.i.i.i.i = alloca i64, align 8
  %v.addr.i.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i.i, metadata !2542, metadata !DIExpression()), !dbg !4880
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !2550, metadata !DIExpression()), !dbg !4882
  %a.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i.i, metadata !2552, metadata !DIExpression()), !dbg !4883
  %u.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i.i.i, metadata !2554, metadata !DIExpression()), !dbg !4884
  %c.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i.i.i, metadata !2556, metadata !DIExpression()), !dbg !4885
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !2558, metadata !DIExpression()), !dbg !4886
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !2560, metadata !DIExpression()), !dbg !4887
  %u.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i.i, metadata !2562, metadata !DIExpression()), !dbg !4888
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !2564, metadata !DIExpression()), !dbg !4889
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !2574, metadata !DIExpression()), !dbg !4891
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !2576, metadata !DIExpression()), !dbg !4892
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2578, metadata !DIExpression()), !dbg !4893
  %u.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i, metadata !2580, metadata !DIExpression()), !dbg !4894
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4895, metadata !DIExpression()), !dbg !4896
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4897
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !4898
  %usage_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 13, !dbg !4899
  store %struct.atomic_t* %usage_count, %struct.atomic_t** %v.addr.i, align 8
  store i32 -1, i32* %a.addr.i, align 4
  store i32 0, i32* %u.addr.i, align 4
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !4900
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !4900
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !4901
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !4902
  %conv.i.i = trunc i64 %4 to i32, !dbg !4902
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #8, !dbg !4903
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !4904
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !4904
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #8, !dbg !4904
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !4905
  %8 = load i32, i32* %a.addr.i, align 4, !dbg !4906
  %9 = load i32, i32* %u.addr.i, align 4, !dbg !4907
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %8, i32* %a.addr.i.i, align 4
  store i32 %9, i32* %u.addr.i.i, align 4
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !4908
  %11 = load i32, i32* %a.addr.i.i, align 4, !dbg !4909
  %12 = load i32, i32* %u.addr.i.i, align 4, !dbg !4910
  store %struct.atomic_t* %10, %struct.atomic_t** %v.addr.i.i.i, align 8
  store i32 %11, i32* %a.addr.i.i.i, align 4
  store i32 %12, i32* %u.addr.i.i.i, align 4
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !4911
  store %struct.atomic_t* %13, %struct.atomic_t** %v.addr.i.i.i.i, align 8
  %14 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i.i, align 8, !dbg !4912
  %counter.i.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %14, i32 0, i32 0, !dbg !4912
  %15 = load volatile i32, i32* %counter.i.i.i.i, align 4, !dbg !4912
  store i32 %15, i32* %c.i.i.i, align 4, !dbg !4885
  br label %do.body.i.i.i, !dbg !4913

do.body.i.i.i:                                    ; preds = %arch_atomic_try_cmpxchg.exit.i.i.i, %entry
  %16 = load i32, i32* %c.i.i.i, align 4, !dbg !4914
  %17 = load i32, i32* %u.addr.i.i.i, align 4, !dbg !4914
  %cmp.i.i.i = icmp eq i32 %16, %17, !dbg !4914
  %lnot.i.i.i = xor i1 %cmp.i.i.i, true, !dbg !4914
  %lnot.ext.i.i.i = zext i1 %cmp.i.i.i to i32, !dbg !4914
  %conv.i.i.i = sext i32 %lnot.ext.i.i.i to i64, !dbg !4914
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.end.i.i.i, !dbg !4915

if.then.i.i.i:                                    ; preds = %do.body.i.i.i
  br label %atomic_add_unless.exit, !dbg !4916

if.end.i.i.i:                                     ; preds = %do.body.i.i.i
  %18 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !4917
  %19 = load i32, i32* %c.i.i.i, align 4, !dbg !4918
  %20 = load i32, i32* %a.addr.i.i.i, align 4, !dbg !4919
  %add.i.i.i = add i32 %19, %20, !dbg !4920
  store %struct.atomic_t* %18, %struct.atomic_t** %v.addr.i5.i.i.i, align 8
  store i32* %c.i.i.i, i32** %old.addr.i.i.i.i, align 8
  store i32 %add.i.i.i, i32* %new.addr.i.i.i.i, align 4
  %21 = load i32*, i32** %old.addr.i.i.i.i, align 8, !dbg !4879
  store i32* %21, i32** %_old.i.i.i.i, align 8, !dbg !4879
  %22 = load i32*, i32** %_old.i.i.i.i, align 8, !dbg !4879
  %23 = load i32, i32* %22, align 4, !dbg !4879
  store i32 %23, i32* %__old.i.i.i.i, align 4, !dbg !4879
  %24 = load i32, i32* %new.addr.i.i.i.i, align 4, !dbg !4879
  store i32 %24, i32* %__new.i.i.i.i, align 4, !dbg !4879
  %25 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i5.i.i.i, align 8, !dbg !4879
  %counter.i6.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %25, i32 0, i32 0, !dbg !4879
  store i32* %counter.i6.i.i.i, i32** %__ptr.i.i.i.i, align 8, !dbg !4879
  %26 = load i32*, i32** %__ptr.i.i.i.i, align 8, !dbg !4879
  %27 = load i32, i32* %__old.i.i.i.i, align 4, !dbg !4879
  %28 = load i32, i32* %__new.i.i.i.i, align 4, !dbg !4879
  %29 = call { i8, i32 } asm sideeffect "cmpxchgl $3, $1\0A\09/* output condition code z*/\0A", "={@ccz},=*m,={ax},r,*m,2,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %26, i32 %28, i32* %26, i32 %27) #6, !dbg !4879, !srcloc !2871
  %asmresult.i.i.i.i = extractvalue { i8, i32 } %29, 0, !dbg !4879
  %asmresult1.i.i.i.i = extractvalue { i8, i32 } %29, 1, !dbg !4879
  store i8 %asmresult.i.i.i.i, i8* %success.i.i.i.i, align 1, !dbg !4879
  store i32 %asmresult1.i.i.i.i, i32* %__old.i.i.i.i, align 4, !dbg !4879
  %30 = load i8, i8* %success.i.i.i.i, align 1, !dbg !4921
  %tobool.i.i.i.i = trunc i8 %30 to i1, !dbg !4921
  %lnot.i.i.i.i = xor i1 %tobool.i.i.i.i, true, !dbg !4921
  %lnot3.i.i.i.i = xor i1 %tobool.i.i.i.i, true, !dbg !4921
  %lnot.ext.i.i.i.i = zext i1 %lnot3.i.i.i.i to i32, !dbg !4921
  %conv.i.i.i.i = sext i32 %lnot.ext.i.i.i.i to i64, !dbg !4921
  br i1 %lnot3.i.i.i.i, label %if.then.i.i.i.i, label %arch_atomic_try_cmpxchg.exit.i.i.i, !dbg !4879

if.then.i.i.i.i:                                  ; preds = %if.end.i.i.i
  %31 = load i32, i32* %__old.i.i.i.i, align 4, !dbg !4921
  %32 = load i32*, i32** %_old.i.i.i.i, align 8, !dbg !4921
  store i32 %31, i32* %32, align 4, !dbg !4921
  br label %arch_atomic_try_cmpxchg.exit.i.i.i, !dbg !4921

arch_atomic_try_cmpxchg.exit.i.i.i:               ; preds = %if.then.i.i.i.i, %if.end.i.i.i
  %33 = load i8, i8* %success.i.i.i.i, align 1, !dbg !4879
  %tobool5.i.i.i.i = trunc i8 %33 to i1, !dbg !4879
  %lnot6.i.i.i.i = xor i1 %tobool5.i.i.i.i, true, !dbg !4879
  %lnot.ext9.i.i.i.i = zext i1 %tobool5.i.i.i.i to i32, !dbg !4879
  %conv10.i.i.i.i = sext i32 %lnot.ext9.i.i.i.i to i64, !dbg !4879
  store i64 %conv10.i.i.i.i, i64* %tmp.i.i.i.i, align 8, !dbg !4921
  %34 = load i64, i64* %tmp.i.i.i.i, align 8, !dbg !4879
  %tobool11.i.i.i.i = icmp ne i64 %34, 0, !dbg !4922
  %lnot3.i.i.i = xor i1 %tobool11.i.i.i.i, true, !dbg !4923
  br i1 %lnot3.i.i.i, label %do.body.i.i.i, label %atomic_add_unless.exit, !dbg !4924, !llvm.loop !4925

atomic_add_unless.exit:                           ; preds = %if.then.i.i.i, %arch_atomic_try_cmpxchg.exit.i.i.i
  %35 = load i32, i32* %c.i.i.i, align 4, !dbg !4927
  %36 = load i32, i32* %u.addr.i.i, align 4, !dbg !4928
  %cmp.i.i = icmp ne i32 %35, %36, !dbg !4929
  ret void, !dbg !4930
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @__pm_runtime_disable(%struct.device* %dev, i1 zeroext %check_resume) #0 !dbg !4931 {
entry:
  %lock.addr.i35 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i35, metadata !2281, metadata !DIExpression()), !dbg !4932
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2290, metadata !DIExpression()), !dbg !4934
  %dev.addr = alloca %struct.device*, align 8
  %check_resume.addr = alloca i8, align 1
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4936, metadata !DIExpression()), !dbg !4937
  %frombool = zext i1 %check_resume to i8
  store i8 %frombool, i8* %check_resume.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %check_resume.addr, metadata !4938, metadata !DIExpression()), !dbg !4939
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4940
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !4941
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 3, !dbg !4942
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #8, !dbg !4943
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4944, !srcloc !2310
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4945
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !4945
  %rlock.i = bitcast %union.anon* %2 to %struct.raw_spinlock*, !dbg !4945
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4946
  %power1 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 11, !dbg !4948
  %disable_depth = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 15, !dbg !4949
  %bf.load = load i16, i16* %disable_depth, align 8, !dbg !4949
  %bf.clear = and i16 %bf.load, 7, !dbg !4949
  %bf.cast = zext i16 %bf.clear to i32, !dbg !4949
  %cmp = icmp sgt i32 %bf.cast, 0, !dbg !4950
  br i1 %cmp, label %if.then, label %if.end, !dbg !4951

if.then:                                          ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4952
  %power2 = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 11, !dbg !4954
  %disable_depth3 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power2, i32 0, i32 15, !dbg !4955
  %bf.load4 = load i16, i16* %disable_depth3, align 8, !dbg !4956
  %bf.clear5 = and i16 %bf.load4, 7, !dbg !4956
  %bf.cast6 = zext i16 %bf.clear5 to i32, !dbg !4956
  %inc = add i32 %bf.cast6, 1, !dbg !4956
  %5 = trunc i32 %inc to i16, !dbg !4956
  %bf.load7 = load i16, i16* %disable_depth3, align 8, !dbg !4956
  %bf.value = and i16 %5, 7, !dbg !4956
  %bf.clear8 = and i16 %bf.load7, -8, !dbg !4956
  %bf.set = or i16 %bf.clear8, %bf.value, !dbg !4956
  store i16 %bf.set, i16* %disable_depth3, align 8, !dbg !4956
  %bf.result.cast = zext i16 %bf.value to i32, !dbg !4956
  br label %out, !dbg !4957

if.end:                                           ; preds = %entry
  %6 = load i8, i8* %check_resume.addr, align 1, !dbg !4958
  %tobool = trunc i8 %6 to i1, !dbg !4958
  br i1 %tobool, label %land.lhs.true, label %if.end18, !dbg !4960

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4961
  %power9 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 11, !dbg !4962
  %request_pending = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power9, i32 0, i32 15, !dbg !4963
  %bf.load10 = load i16, i16* %request_pending, align 8, !dbg !4963
  %bf.lshr = lshr i16 %bf.load10, 4, !dbg !4963
  %bf.clear11 = and i16 %bf.lshr, 1, !dbg !4963
  %bf.cast12 = zext i16 %bf.clear11 to i32, !dbg !4963
  %tobool13 = icmp ne i32 %bf.cast12, 0, !dbg !4961
  br i1 %tobool13, label %land.lhs.true14, label %if.end18, !dbg !4964

land.lhs.true14:                                  ; preds = %land.lhs.true
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4965
  %power15 = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 11, !dbg !4966
  %request = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power15, i32 0, i32 17, !dbg !4967
  %9 = load i32, i32* %request, align 8, !dbg !4967
  %cmp16 = icmp eq i32 %9, 4, !dbg !4968
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !4969

if.then17:                                        ; preds = %land.lhs.true14
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4970
  call void @pm_runtime_get_noresume(%struct.device* %10) #7, !dbg !4972
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4973
  %call = call i32 @rpm_resume(%struct.device* %11, i32 0) #7, !dbg !4974
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4975
  call void @pm_runtime_put_noidle(%struct.device* %12) #7, !dbg !4976
  br label %if.end18, !dbg !4977

if.end18:                                         ; preds = %if.then17, %land.lhs.true14, %land.lhs.true, %if.end
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4978
  call void @update_pm_runtime_accounting(%struct.device* %13) #7, !dbg !4979
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4980
  %power19 = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 11, !dbg !4982
  %disable_depth20 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power19, i32 0, i32 15, !dbg !4983
  %bf.load21 = load i16, i16* %disable_depth20, align 8, !dbg !4984
  %bf.clear22 = and i16 %bf.load21, 7, !dbg !4984
  %bf.cast23 = zext i16 %bf.clear22 to i32, !dbg !4984
  %inc24 = add i32 %bf.cast23, 1, !dbg !4984
  %15 = trunc i32 %inc24 to i16, !dbg !4984
  %bf.load25 = load i16, i16* %disable_depth20, align 8, !dbg !4984
  %bf.value26 = and i16 %15, 7, !dbg !4984
  %bf.clear27 = and i16 %bf.load25, -8, !dbg !4984
  %bf.set28 = or i16 %bf.clear27, %bf.value26, !dbg !4984
  store i16 %bf.set28, i16* %disable_depth20, align 8, !dbg !4984
  %bf.result.cast29 = zext i16 %bf.value26 to i32, !dbg !4984
  %tobool30 = icmp ne i32 %bf.cast23, 0, !dbg !4984
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !4985

if.then31:                                        ; preds = %if.end18
  %16 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4986
  call void @__pm_runtime_barrier(%struct.device* %16) #7, !dbg !4987
  br label %if.end32, !dbg !4987

if.end32:                                         ; preds = %if.then31, %if.end18
  br label %out, !dbg !4984

out:                                              ; preds = %if.end32, %if.then
  call void @llvm.dbg.label(metadata !4988), !dbg !4989
  %17 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4990
  %power33 = getelementptr inbounds %struct.device, %struct.device* %17, i32 0, i32 11, !dbg !4991
  %lock34 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power33, i32 0, i32 3, !dbg !4992
  store %struct.spinlock* %lock34, %struct.spinlock** %lock.addr.i35, align 8
  call void @arch_local_irq_enable() #8, !dbg !4993
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4994, !srcloc !2330
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i35, align 8, !dbg !4995
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !4995
  %rlock.i36 = bitcast %union.anon* %19 to %struct.raw_spinlock*, !dbg !4995
  ret void, !dbg !4996
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @update_pm_runtime_accounting(%struct.device* %dev) #0 !dbg !4997 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %now = alloca i64, align 8
  %last = alloca i64, align 8
  %delta = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4998, metadata !DIExpression()), !dbg !4999
  call void @llvm.dbg.declare(metadata i64* %now, metadata !5000, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.declare(metadata i64* %last, metadata !5002, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.declare(metadata i64* %delta, metadata !5004, metadata !DIExpression()), !dbg !5005
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5006
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !5008
  %disable_depth = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 15, !dbg !5009
  %bf.load = load i16, i16* %disable_depth, align 8, !dbg !5009
  %bf.clear = and i16 %bf.load, 7, !dbg !5009
  %bf.cast = zext i16 %bf.clear to i32, !dbg !5009
  %cmp = icmp sgt i32 %bf.cast, 0, !dbg !5010
  br i1 %cmp, label %if.then, label %if.end, !dbg !5011

if.then:                                          ; preds = %entry
  br label %if.end13, !dbg !5012

if.end:                                           ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5013
  %power1 = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !5014
  %accounting_timestamp = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 24, !dbg !5015
  %2 = load i64, i64* %accounting_timestamp, align 8, !dbg !5015
  store i64 %2, i64* %last, align 8, !dbg !5016
  %call = call i64 @ktime_get_mono_fast_ns() #7, !dbg !5017
  store i64 %call, i64* %now, align 8, !dbg !5018
  %3 = load i64, i64* %now, align 8, !dbg !5019
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5020
  %power2 = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 11, !dbg !5021
  %accounting_timestamp3 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power2, i32 0, i32 24, !dbg !5022
  store i64 %3, i64* %accounting_timestamp3, align 8, !dbg !5023
  %5 = load i64, i64* %now, align 8, !dbg !5024
  %6 = load i64, i64* %last, align 8, !dbg !5026
  %cmp4 = icmp ult i64 %5, %6, !dbg !5027
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !5028

if.then5:                                         ; preds = %if.end
  br label %if.end13, !dbg !5029

if.end6:                                          ; preds = %if.end
  %7 = load i64, i64* %now, align 8, !dbg !5030
  %8 = load i64, i64* %last, align 8, !dbg !5031
  %sub = sub i64 %7, %8, !dbg !5032
  store i64 %sub, i64* %delta, align 8, !dbg !5033
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5034
  %power7 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 11, !dbg !5036
  %runtime_status = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power7, i32 0, i32 18, !dbg !5037
  %10 = load i32, i32* %runtime_status, align 4, !dbg !5037
  %cmp8 = icmp eq i32 %10, 2, !dbg !5038
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !5039

if.then9:                                         ; preds = %if.end6
  %11 = load i64, i64* %delta, align 8, !dbg !5040
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5041
  %power10 = getelementptr inbounds %struct.device, %struct.device* %12, i32 0, i32 11, !dbg !5042
  %suspended_time = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power10, i32 0, i32 23, !dbg !5043
  %13 = load i64, i64* %suspended_time, align 8, !dbg !5044
  %add = add i64 %13, %11, !dbg !5044
  store i64 %add, i64* %suspended_time, align 8, !dbg !5044
  br label %if.end13, !dbg !5041

if.else:                                          ; preds = %if.end6
  %14 = load i64, i64* %delta, align 8, !dbg !5045
  %15 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5046
  %power11 = getelementptr inbounds %struct.device, %struct.device* %15, i32 0, i32 11, !dbg !5047
  %active_time = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power11, i32 0, i32 22, !dbg !5048
  %16 = load i64, i64* %active_time, align 8, !dbg !5049
  %add12 = add i64 %16, %14, !dbg !5049
  store i64 %add12, i64* %active_time, align 8, !dbg !5049
  br label %if.end13

if.end13:                                         ; preds = %if.then, %if.then5, %if.else, %if.then9
  ret void, !dbg !5050
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pm_runtime_forbid(%struct.device* %dev) #0 !dbg !5051 {
entry:
  %lock.addr.i9 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i9, metadata !2281, metadata !DIExpression()), !dbg !5052
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !3457, metadata !DIExpression()), !dbg !5054
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !2564, metadata !DIExpression()), !dbg !5057
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !2574, metadata !DIExpression()), !dbg !5059
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !3469, metadata !DIExpression()), !dbg !5060
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2290, metadata !DIExpression()), !dbg !5061
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5063, metadata !DIExpression()), !dbg !5064
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5065
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !5066
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 3, !dbg !5067
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #8, !dbg !5068
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5069, !srcloc !2310
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5070
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !5070
  %rlock.i = bitcast %union.anon* %2 to %struct.raw_spinlock*, !dbg !5070
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5071
  %power1 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 11, !dbg !5073
  %runtime_auto = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 15, !dbg !5074
  %bf.load = load i16, i16* %runtime_auto, align 8, !dbg !5074
  %bf.lshr = lshr i16 %bf.load, 6, !dbg !5074
  %bf.clear = and i16 %bf.lshr, 1, !dbg !5074
  %bf.cast = zext i16 %bf.clear to i32, !dbg !5074
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5071
  br i1 %tobool, label %if.end, label %if.then, !dbg !5075

if.then:                                          ; preds = %entry
  br label %out, !dbg !5076

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5077
  %power2 = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 11, !dbg !5078
  %runtime_auto3 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power2, i32 0, i32 15, !dbg !5079
  %bf.load4 = load i16, i16* %runtime_auto3, align 8, !dbg !5080
  %bf.clear5 = and i16 %bf.load4, -65, !dbg !5080
  store i16 %bf.clear5, i16* %runtime_auto3, align 8, !dbg !5080
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5081
  %power6 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 11, !dbg !5082
  %usage_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power6, i32 0, i32 13, !dbg !5083
  store %struct.atomic_t* %usage_count, %struct.atomic_t** %v.addr.i, align 8
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5084
  %7 = bitcast %struct.atomic_t* %6 to i8*, !dbg !5084
  store i8* %7, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %8 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5085
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !5086
  %conv.i.i = trunc i64 %9 to i32, !dbg !5086
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %8, i32 %conv.i.i) #8, !dbg !5087
  %10 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5088
  %11 = load i64, i64* %size.addr.i.i, align 8, !dbg !5088
  call void @kcsan_check_access(i8* %10, i64 %11, i32 7) #8, !dbg !5088
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5089
  store %struct.atomic_t* %12, %struct.atomic_t** %v.addr.i1.i, align 8
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !5090
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %13, i32 0, i32 0, !dbg !5091
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #6, !dbg !5092, !srcloc !3503
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5093
  %call = call i32 @rpm_resume(%struct.device* %14, i32 0) #7, !dbg !5094
  br label %out, !dbg !5094

out:                                              ; preds = %if.end, %if.then
  call void @llvm.dbg.label(metadata !5095), !dbg !5096
  %15 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5097
  %power7 = getelementptr inbounds %struct.device, %struct.device* %15, i32 0, i32 11, !dbg !5098
  %lock8 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power7, i32 0, i32 3, !dbg !5099
  store %struct.spinlock* %lock8, %struct.spinlock** %lock.addr.i9, align 8
  call void @arch_local_irq_enable() #8, !dbg !5100
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5101, !srcloc !2330
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i9, align 8, !dbg !5102
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !5102
  %rlock.i10 = bitcast %union.anon* %17 to %struct.raw_spinlock*, !dbg !5102
  ret void, !dbg !5103
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pm_runtime_allow(%struct.device* %dev) #0 !dbg !5104 {
entry:
  %lock.addr.i12 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i12, metadata !2281, metadata !DIExpression()), !dbg !5105
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !3125, metadata !DIExpression()), !dbg !5107
  %c.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i.i, metadata !3136, metadata !DIExpression()), !dbg !5111
  %tmp.i.i = alloca i8, align 1
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !2564, metadata !DIExpression()), !dbg !5112
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !2574, metadata !DIExpression()), !dbg !5114
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !3142, metadata !DIExpression()), !dbg !5115
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2290, metadata !DIExpression()), !dbg !5116
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5118, metadata !DIExpression()), !dbg !5119
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5120
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !5121
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 3, !dbg !5122
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #8, !dbg !5123
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5124, !srcloc !2310
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5125
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !5125
  %rlock.i = bitcast %union.anon* %2 to %struct.raw_spinlock*, !dbg !5125
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5126
  %power1 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 11, !dbg !5128
  %runtime_auto = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 15, !dbg !5129
  %bf.load = load i16, i16* %runtime_auto, align 8, !dbg !5129
  %bf.lshr = lshr i16 %bf.load, 6, !dbg !5129
  %bf.clear = and i16 %bf.lshr, 1, !dbg !5129
  %bf.cast = zext i16 %bf.clear to i32, !dbg !5129
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5126
  br i1 %tobool, label %if.then, label %if.end, !dbg !5130

if.then:                                          ; preds = %entry
  br label %out, !dbg !5131

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5132
  %power2 = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 11, !dbg !5133
  %runtime_auto3 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power2, i32 0, i32 15, !dbg !5134
  %bf.load4 = load i16, i16* %runtime_auto3, align 8, !dbg !5135
  %bf.clear5 = and i16 %bf.load4, -65, !dbg !5135
  %bf.set = or i16 %bf.clear5, 64, !dbg !5135
  store i16 %bf.set, i16* %runtime_auto3, align 8, !dbg !5135
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5136
  %power6 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 11, !dbg !5137
  %usage_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power6, i32 0, i32 13, !dbg !5138
  store %struct.atomic_t* %usage_count, %struct.atomic_t** %v.addr.i, align 8
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5139
  %7 = bitcast %struct.atomic_t* %6 to i8*, !dbg !5139
  store i8* %7, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %8 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5140
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !5141
  %conv.i.i = trunc i64 %9 to i32, !dbg !5141
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %8, i32 %conv.i.i) #8, !dbg !5142
  %10 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5143
  %11 = load i64, i64* %size.addr.i.i, align 8, !dbg !5143
  call void @kcsan_check_access(i8* %10, i64 %11, i32 7) #8, !dbg !5143
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5144
  store %struct.atomic_t* %12, %struct.atomic_t** %v.addr.i1.i, align 8
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !5111
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %13, i32 0, i32 0, !dbg !5111
  %14 = call i8 asm sideeffect "decl $0\0A\09/* output condition code e*/\0A", "=*m,={@cce},*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #6, !dbg !5111, !srcloc !3164
  store i8 %14, i8* %c.i.i, align 1, !dbg !5111
  %15 = load i8, i8* %c.i.i, align 1, !dbg !5111
  %tobool.i.i = trunc i8 %15 to i1, !dbg !5111
  %frombool.i.i = zext i1 %tobool.i.i to i8, !dbg !5111
  store i8 %frombool.i.i, i8* %tmp.i.i, align 1, !dbg !5111
  %16 = load i8, i8* %tmp.i.i, align 1, !dbg !5111
  %tobool1.i.i = trunc i8 %16 to i1, !dbg !5111
  br i1 %tobool1.i.i, label %if.then7, label %if.else, !dbg !5145

if.then7:                                         ; preds = %if.end
  %17 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5146
  %call8 = call i32 @rpm_idle(%struct.device* %17, i32 9) #7, !dbg !5147
  br label %if.end9, !dbg !5147

if.else:                                          ; preds = %if.end
  %18 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5148
  call void @trace_rpm_usage_rcuidle(%struct.device* %18, i32 9) #7, !dbg !5149
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then7
  br label %out, !dbg !5150

out:                                              ; preds = %if.end9, %if.then
  call void @llvm.dbg.label(metadata !5151), !dbg !5152
  %19 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5153
  %power10 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 11, !dbg !5154
  %lock11 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power10, i32 0, i32 3, !dbg !5155
  store %struct.spinlock* %lock11, %struct.spinlock** %lock.addr.i12, align 8
  call void @arch_local_irq_enable() #8, !dbg !5156
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5157, !srcloc !2330
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i12, align 8, !dbg !5158
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !5158
  %rlock.i13 = bitcast %union.anon* %21 to %struct.raw_spinlock*, !dbg !5158
  ret void, !dbg !5159
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pm_runtime_no_callbacks(%struct.device* %dev) #0 !dbg !5160 {
entry:
  %lock.addr.i4 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i4, metadata !2281, metadata !DIExpression()), !dbg !5161
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2290, metadata !DIExpression()), !dbg !5163
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5165, metadata !DIExpression()), !dbg !5166
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5167
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !5168
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 3, !dbg !5169
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #8, !dbg !5170
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5171, !srcloc !2310
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5172
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !5172
  %rlock.i = bitcast %union.anon* %2 to %struct.raw_spinlock*, !dbg !5172
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5173
  %power1 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 11, !dbg !5174
  %no_callbacks = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 15, !dbg !5175
  %bf.load = load i16, i16* %no_callbacks, align 8, !dbg !5176
  %bf.clear = and i16 %bf.load, -257, !dbg !5176
  %bf.set = or i16 %bf.clear, 256, !dbg !5176
  store i16 %bf.set, i16* %no_callbacks, align 8, !dbg !5176
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5177
  %power2 = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 11, !dbg !5178
  %lock3 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power2, i32 0, i32 3, !dbg !5179
  store %struct.spinlock* %lock3, %struct.spinlock** %lock.addr.i4, align 8
  call void @arch_local_irq_enable() #8, !dbg !5180
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5181, !srcloc !2330
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i4, align 8, !dbg !5182
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !5182
  %rlock.i5 = bitcast %union.anon* %6 to %struct.raw_spinlock*, !dbg !5182
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5183
  %call = call i32 @device_is_registered(%struct.device* %7) #7, !dbg !5185
  %tobool = icmp ne i32 %call, 0, !dbg !5185
  br i1 %tobool, label %if.then, label %if.end, !dbg !5186

if.then:                                          ; preds = %entry
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5187
  call void @rpm_sysfs_remove(%struct.device* %8) #7, !dbg !5188
  br label %if.end, !dbg !5188

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5189
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @device_is_registered(%struct.device* %dev) #0 !dbg !5190 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5191, metadata !DIExpression()), !dbg !5192
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5193
  %kobj = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !5194
  %state_in_sysfs = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj, i32 0, i32 7, !dbg !5195
  %bf.load = load i8, i8* %state_in_sysfs, align 4, !dbg !5195
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !5195
  %bf.clear = and i8 %bf.lshr, 1, !dbg !5195
  %bf.cast = zext i8 %bf.clear to i32, !dbg !5195
  ret i32 %bf.cast, !dbg !5196
}

; Function Attrs: noredzone
declare dso_local void @rpm_sysfs_remove(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pm_runtime_irq_safe(%struct.device* %dev) #0 !dbg !5197 {
entry:
  %lock.addr.i5 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i5, metadata !2281, metadata !DIExpression()), !dbg !5198
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2290, metadata !DIExpression()), !dbg !5200
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5202, metadata !DIExpression()), !dbg !5203
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5204
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !5206
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !5206
  %tobool = icmp ne %struct.device* %1, null, !dbg !5204
  br i1 %tobool, label %if.then, label %if.end, !dbg !5207

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5208
  %parent1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 1, !dbg !5209
  %3 = load %struct.device*, %struct.device** %parent1, align 8, !dbg !5209
  %call = call i32 @pm_runtime_get_sync(%struct.device* %3) #7, !dbg !5210
  br label %if.end, !dbg !5210

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5211
  %power = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 11, !dbg !5212
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 3, !dbg !5213
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #8, !dbg !5214
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5215, !srcloc !2310
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5216
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !5216
  %rlock.i = bitcast %union.anon* %6 to %struct.raw_spinlock*, !dbg !5216
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5217
  %power2 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 11, !dbg !5218
  %irq_safe = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power2, i32 0, i32 15, !dbg !5219
  %bf.load = load i16, i16* %irq_safe, align 8, !dbg !5220
  %bf.clear = and i16 %bf.load, -513, !dbg !5220
  %bf.set = or i16 %bf.clear, 512, !dbg !5220
  store i16 %bf.set, i16* %irq_safe, align 8, !dbg !5220
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5221
  %power3 = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 11, !dbg !5222
  %lock4 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power3, i32 0, i32 3, !dbg !5223
  store %struct.spinlock* %lock4, %struct.spinlock** %lock.addr.i5, align 8
  call void @arch_local_irq_enable() #8, !dbg !5224
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5225, !srcloc !2330
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i5, align 8, !dbg !5226
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !5226
  %rlock.i6 = bitcast %union.anon* %10 to %struct.raw_spinlock*, !dbg !5226
  ret void, !dbg !5227
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_get_sync(%struct.device* %dev) #0 !dbg !5228 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5229, metadata !DIExpression()), !dbg !5230
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5231
  %call = call i32 @__pm_runtime_resume(%struct.device* %0, i32 4) #7, !dbg !5232
  ret i32 %call, !dbg !5233
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pm_runtime_set_autosuspend_delay(%struct.device* %dev, i32 %delay) #0 !dbg !5234 {
entry:
  %lock.addr.i7 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i7, metadata !2281, metadata !DIExpression()), !dbg !5235
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2290, metadata !DIExpression()), !dbg !5237
  %dev.addr = alloca %struct.device*, align 8
  %delay.addr = alloca i32, align 4
  %old_delay = alloca i32, align 4
  %old_use = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5239, metadata !DIExpression()), !dbg !5240
  store i32 %delay, i32* %delay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %delay.addr, metadata !5241, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.declare(metadata i32* %old_delay, metadata !5243, metadata !DIExpression()), !dbg !5244
  call void @llvm.dbg.declare(metadata i32* %old_use, metadata !5245, metadata !DIExpression()), !dbg !5246
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5247
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !5248
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 3, !dbg !5249
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #8, !dbg !5250
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5251, !srcloc !2310
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5252
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !5252
  %rlock.i = bitcast %union.anon* %2 to %struct.raw_spinlock*, !dbg !5252
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5253
  %power1 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 11, !dbg !5254
  %autosuspend_delay = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 20, !dbg !5255
  %4 = load i32, i32* %autosuspend_delay, align 4, !dbg !5255
  store i32 %4, i32* %old_delay, align 4, !dbg !5256
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5257
  %power2 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 11, !dbg !5258
  %use_autosuspend = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power2, i32 0, i32 15, !dbg !5259
  %bf.load = load i16, i16* %use_autosuspend, align 8, !dbg !5259
  %bf.lshr = lshr i16 %bf.load, 10, !dbg !5259
  %bf.clear = and i16 %bf.lshr, 1, !dbg !5259
  %bf.cast = zext i16 %bf.clear to i32, !dbg !5259
  store i32 %bf.cast, i32* %old_use, align 4, !dbg !5260
  %6 = load i32, i32* %delay.addr, align 4, !dbg !5261
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5262
  %power3 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 11, !dbg !5263
  %autosuspend_delay4 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power3, i32 0, i32 20, !dbg !5264
  store i32 %6, i32* %autosuspend_delay4, align 4, !dbg !5265
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5266
  %9 = load i32, i32* %old_delay, align 4, !dbg !5267
  %10 = load i32, i32* %old_use, align 4, !dbg !5268
  call void @update_autosuspend(%struct.device* %8, i32 %9, i32 %10) #7, !dbg !5269
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5270
  %power5 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 11, !dbg !5271
  %lock6 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power5, i32 0, i32 3, !dbg !5272
  store %struct.spinlock* %lock6, %struct.spinlock** %lock.addr.i7, align 8
  call void @arch_local_irq_enable() #8, !dbg !5273
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5274, !srcloc !2330
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i7, align 8, !dbg !5275
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !5275
  %rlock.i8 = bitcast %union.anon* %13 to %struct.raw_spinlock*, !dbg !5275
  ret void, !dbg !5276
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @update_autosuspend(%struct.device* %dev, i32 %old_delay, i32 %old_use) #0 !dbg !5277 {
entry:
  %v.addr.i1.i16 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i16, metadata !5280, metadata !DIExpression()), !dbg !5282
  %v.addr.i.i17 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i17, metadata !2564, metadata !DIExpression()), !dbg !5289
  %size.addr.i.i18 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i18, metadata !2574, metadata !DIExpression()), !dbg !5291
  %v.addr.i19 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i19, metadata !5292, metadata !DIExpression()), !dbg !5293
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !3457, metadata !DIExpression()), !dbg !5294
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !2564, metadata !DIExpression()), !dbg !5300
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !2574, metadata !DIExpression()), !dbg !5302
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !3469, metadata !DIExpression()), !dbg !5303
  %dev.addr = alloca %struct.device*, align 8
  %old_delay.addr = alloca i32, align 4
  %old_use.addr = alloca i32, align 4
  %delay = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5304, metadata !DIExpression()), !dbg !5305
  store i32 %old_delay, i32* %old_delay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %old_delay.addr, metadata !5306, metadata !DIExpression()), !dbg !5307
  store i32 %old_use, i32* %old_use.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %old_use.addr, metadata !5308, metadata !DIExpression()), !dbg !5309
  call void @llvm.dbg.declare(metadata i32* %delay, metadata !5310, metadata !DIExpression()), !dbg !5311
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5312
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !5313
  %autosuspend_delay = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 20, !dbg !5314
  %1 = load i32, i32* %autosuspend_delay, align 4, !dbg !5314
  store i32 %1, i32* %delay, align 4, !dbg !5311
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5315
  %power1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 11, !dbg !5316
  %use_autosuspend = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 15, !dbg !5317
  %bf.load = load i16, i16* %use_autosuspend, align 8, !dbg !5317
  %bf.lshr = lshr i16 %bf.load, 10, !dbg !5317
  %bf.clear = and i16 %bf.lshr, 1, !dbg !5317
  %bf.cast = zext i16 %bf.clear to i32, !dbg !5317
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5315
  br i1 %tobool, label %land.lhs.true, label %if.else6, !dbg !5318

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %delay, align 4, !dbg !5319
  %cmp = icmp slt i32 %3, 0, !dbg !5320
  br i1 %cmp, label %if.then, label %if.else6, !dbg !5321

if.then:                                          ; preds = %land.lhs.true
  %4 = load i32, i32* %old_use.addr, align 4, !dbg !5322
  %tobool2 = icmp ne i32 %4, 0, !dbg !5322
  br i1 %tobool2, label %lor.lhs.false, label %if.then4, !dbg !5323

lor.lhs.false:                                    ; preds = %if.then
  %5 = load i32, i32* %old_delay.addr, align 4, !dbg !5324
  %cmp3 = icmp sge i32 %5, 0, !dbg !5325
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !5326

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5327
  %power5 = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 11, !dbg !5328
  %usage_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power5, i32 0, i32 13, !dbg !5329
  store %struct.atomic_t* %usage_count, %struct.atomic_t** %v.addr.i, align 8
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5330
  %8 = bitcast %struct.atomic_t* %7 to i8*, !dbg !5330
  store i8* %8, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %9 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5331
  %10 = load i64, i64* %size.addr.i.i, align 8, !dbg !5332
  %conv.i.i = trunc i64 %10 to i32, !dbg !5332
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %9, i32 %conv.i.i) #8, !dbg !5333
  %11 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5334
  %12 = load i64, i64* %size.addr.i.i, align 8, !dbg !5334
  call void @kcsan_check_access(i8* %11, i64 %12, i32 7) #8, !dbg !5334
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5335
  store %struct.atomic_t* %13, %struct.atomic_t** %v.addr.i1.i, align 8
  %14 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !5336
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %14, i32 0, i32 0, !dbg !5337
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #6, !dbg !5338, !srcloc !3503
  %15 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5339
  %call = call i32 @rpm_resume(%struct.device* %15, i32 0) #7, !dbg !5340
  br label %if.end, !dbg !5341

if.else:                                          ; preds = %lor.lhs.false
  %16 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5342
  call void @trace_rpm_usage_rcuidle(%struct.device* %16, i32 0) #7, !dbg !5344
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end15, !dbg !5345

if.else6:                                         ; preds = %land.lhs.true, %entry
  %17 = load i32, i32* %old_use.addr, align 4, !dbg !5346
  %tobool7 = icmp ne i32 %17, 0, !dbg !5346
  br i1 %tobool7, label %land.lhs.true8, label %if.end13, !dbg !5347

land.lhs.true8:                                   ; preds = %if.else6
  %18 = load i32, i32* %old_delay.addr, align 4, !dbg !5348
  %cmp9 = icmp slt i32 %18, 0, !dbg !5349
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !5350

if.then10:                                        ; preds = %land.lhs.true8
  %19 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5351
  %power11 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 11, !dbg !5352
  %usage_count12 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power11, i32 0, i32 13, !dbg !5353
  store %struct.atomic_t* %usage_count12, %struct.atomic_t** %v.addr.i19, align 8
  %20 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i19, align 8, !dbg !5354
  %21 = bitcast %struct.atomic_t* %20 to i8*, !dbg !5354
  store i8* %21, i8** %v.addr.i.i17, align 8
  store i64 4, i64* %size.addr.i.i18, align 8
  %22 = load i8*, i8** %v.addr.i.i17, align 8, !dbg !5355
  %23 = load i64, i64* %size.addr.i.i18, align 8, !dbg !5356
  %conv.i.i20 = trunc i64 %23 to i32, !dbg !5356
  %call.i.i21 = call zeroext i1 @kasan_check_write(i8* %22, i32 %conv.i.i20) #8, !dbg !5357
  %24 = load i8*, i8** %v.addr.i.i17, align 8, !dbg !5358
  %25 = load i64, i64* %size.addr.i.i18, align 8, !dbg !5358
  call void @kcsan_check_access(i8* %24, i64 %25, i32 7) #8, !dbg !5358
  %26 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i19, align 8, !dbg !5359
  store %struct.atomic_t* %26, %struct.atomic_t** %v.addr.i1.i16, align 8
  %27 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i16, align 8, !dbg !5360
  %counter.i.i22 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %27, i32 0, i32 0, !dbg !5361
  call void asm sideeffect "decl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i22, i32* %counter.i.i22) #6, !dbg !5362, !srcloc !5363
  br label %if.end13, !dbg !5364

if.end13:                                         ; preds = %if.then10, %land.lhs.true8, %if.else6
  %28 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5365
  %call14 = call i32 @rpm_idle(%struct.device* %28, i32 8) #7, !dbg !5366
  br label %if.end15

if.end15:                                         ; preds = %if.end13, %if.end
  ret void, !dbg !5367
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @__pm_runtime_use_autosuspend(%struct.device* %dev, i1 zeroext %use) #0 !dbg !5368 {
entry:
  %lock.addr.i9 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i9, metadata !2281, metadata !DIExpression()), !dbg !5369
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2290, metadata !DIExpression()), !dbg !5371
  %dev.addr = alloca %struct.device*, align 8
  %use.addr = alloca i8, align 1
  %old_delay = alloca i32, align 4
  %old_use = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5373, metadata !DIExpression()), !dbg !5374
  %frombool = zext i1 %use to i8
  store i8 %frombool, i8* %use.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use.addr, metadata !5375, metadata !DIExpression()), !dbg !5376
  call void @llvm.dbg.declare(metadata i32* %old_delay, metadata !5377, metadata !DIExpression()), !dbg !5378
  call void @llvm.dbg.declare(metadata i32* %old_use, metadata !5379, metadata !DIExpression()), !dbg !5380
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5381
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !5382
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 3, !dbg !5383
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #8, !dbg !5384
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5385, !srcloc !2310
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5386
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !5386
  %rlock.i = bitcast %union.anon* %2 to %struct.raw_spinlock*, !dbg !5386
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5387
  %power1 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 11, !dbg !5388
  %autosuspend_delay = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 20, !dbg !5389
  %4 = load i32, i32* %autosuspend_delay, align 4, !dbg !5389
  store i32 %4, i32* %old_delay, align 4, !dbg !5390
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5391
  %power2 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 11, !dbg !5392
  %use_autosuspend = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power2, i32 0, i32 15, !dbg !5393
  %bf.load = load i16, i16* %use_autosuspend, align 8, !dbg !5393
  %bf.lshr = lshr i16 %bf.load, 10, !dbg !5393
  %bf.clear = and i16 %bf.lshr, 1, !dbg !5393
  %bf.cast = zext i16 %bf.clear to i32, !dbg !5393
  store i32 %bf.cast, i32* %old_use, align 4, !dbg !5394
  %6 = load i8, i8* %use.addr, align 1, !dbg !5395
  %tobool = trunc i8 %6 to i1, !dbg !5395
  %conv = zext i1 %tobool to i32, !dbg !5395
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5396
  %power3 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 11, !dbg !5397
  %use_autosuspend4 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power3, i32 0, i32 15, !dbg !5398
  %8 = trunc i32 %conv to i16, !dbg !5399
  %bf.load5 = load i16, i16* %use_autosuspend4, align 8, !dbg !5399
  %bf.value = and i16 %8, 1, !dbg !5399
  %bf.shl = shl i16 %bf.value, 10, !dbg !5399
  %bf.clear6 = and i16 %bf.load5, -1025, !dbg !5399
  %bf.set = or i16 %bf.clear6, %bf.shl, !dbg !5399
  store i16 %bf.set, i16* %use_autosuspend4, align 8, !dbg !5399
  %bf.result.cast = zext i16 %bf.value to i32, !dbg !5399
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5400
  %10 = load i32, i32* %old_delay, align 4, !dbg !5401
  %11 = load i32, i32* %old_use, align 4, !dbg !5402
  call void @update_autosuspend(%struct.device* %9, i32 %10, i32 %11) #7, !dbg !5403
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5404
  %power7 = getelementptr inbounds %struct.device, %struct.device* %12, i32 0, i32 11, !dbg !5405
  %lock8 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power7, i32 0, i32 3, !dbg !5406
  store %struct.spinlock* %lock8, %struct.spinlock** %lock.addr.i9, align 8
  call void @arch_local_irq_enable() #8, !dbg !5407
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5408, !srcloc !2330
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i9, align 8, !dbg !5409
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !5409
  %rlock.i10 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !5409
  ret void, !dbg !5410
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pm_runtime_init(%struct.device* %dev) #0 !dbg !2131 {
entry:
  %v.addr.i1.i34 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i34, metadata !5411, metadata !DIExpression()), !dbg !5415
  %i.addr.i.i35 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i35, metadata !5419, metadata !DIExpression()), !dbg !5420
  %v.addr.i.i36 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i36, metadata !5421, metadata !DIExpression()), !dbg !5423
  %size.addr.i.i37 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i37, metadata !5425, metadata !DIExpression()), !dbg !5426
  %v.addr.i38 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i38, metadata !5427, metadata !DIExpression()), !dbg !5428
  %i.addr.i39 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i39, metadata !5429, metadata !DIExpression()), !dbg !5430
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5411, metadata !DIExpression()), !dbg !5431
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !5419, metadata !DIExpression()), !dbg !5434
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5421, metadata !DIExpression()), !dbg !5435
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5425, metadata !DIExpression()), !dbg !5437
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5427, metadata !DIExpression()), !dbg !5438
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !5429, metadata !DIExpression()), !dbg !5439
  %dev.addr = alloca %struct.device*, align 8
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5440, metadata !DIExpression()), !dbg !5441
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5442
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !5443
  %runtime_status = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 18, !dbg !5444
  store i32 2, i32* %runtime_status, align 4, !dbg !5445
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5446
  %power1 = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !5447
  %idle_notification = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 15, !dbg !5448
  %bf.load = load i16, i16* %idle_notification, align 8, !dbg !5449
  %bf.clear = and i16 %bf.load, -9, !dbg !5449
  store i16 %bf.clear, i16* %idle_notification, align 8, !dbg !5449
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5450
  %power2 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 11, !dbg !5451
  %disable_depth = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power2, i32 0, i32 15, !dbg !5452
  %bf.load3 = load i16, i16* %disable_depth, align 8, !dbg !5453
  %bf.clear4 = and i16 %bf.load3, -8, !dbg !5453
  %bf.set = or i16 %bf.clear4, 1, !dbg !5453
  store i16 %bf.set, i16* %disable_depth, align 8, !dbg !5453
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5454
  %power5 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 11, !dbg !5455
  %usage_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power5, i32 0, i32 13, !dbg !5456
  store %struct.atomic_t* %usage_count, %struct.atomic_t** %v.addr.i, align 8
  store i32 0, i32* %i.addr.i, align 4
  %4 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5457
  %5 = bitcast %struct.atomic_t* %4 to i8*, !dbg !5457
  store i8* %5, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5458
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5459
  %conv.i.i = trunc i64 %7 to i32, !dbg !5459
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %6, i32 %conv.i.i) #8, !dbg !5460
  %8 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5461
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !5461
  call void @kcsan_check_access(i8* %8, i64 %9, i32 5) #8, !dbg !5461
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5462
  %11 = load i32, i32* %i.addr.i, align 4, !dbg !5463
  store %struct.atomic_t* %10, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %11, i32* %i.addr.i.i, align 4
  %12 = load i32, i32* %i.addr.i.i, align 4, !dbg !5464
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !5464
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %13, i32 0, i32 0, !dbg !5464
  store volatile i32 %12, i32* %counter.i.i, align 4, !dbg !5464
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5466
  %power6 = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 11, !dbg !5467
  %runtime_error = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power6, i32 0, i32 19, !dbg !5468
  store i32 0, i32* %runtime_error, align 8, !dbg !5469
  %15 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5470
  %power7 = getelementptr inbounds %struct.device, %struct.device* %15, i32 0, i32 11, !dbg !5471
  %child_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power7, i32 0, i32 14, !dbg !5472
  store %struct.atomic_t* %child_count, %struct.atomic_t** %v.addr.i38, align 8
  store i32 0, i32* %i.addr.i39, align 4
  %16 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i38, align 8, !dbg !5473
  %17 = bitcast %struct.atomic_t* %16 to i8*, !dbg !5473
  store i8* %17, i8** %v.addr.i.i36, align 8
  store i64 4, i64* %size.addr.i.i37, align 8
  %18 = load i8*, i8** %v.addr.i.i36, align 8, !dbg !5474
  %19 = load i64, i64* %size.addr.i.i37, align 8, !dbg !5475
  %conv.i.i40 = trunc i64 %19 to i32, !dbg !5475
  %call.i.i41 = call zeroext i1 @kasan_check_write(i8* %18, i32 %conv.i.i40) #8, !dbg !5476
  %20 = load i8*, i8** %v.addr.i.i36, align 8, !dbg !5477
  %21 = load i64, i64* %size.addr.i.i37, align 8, !dbg !5477
  call void @kcsan_check_access(i8* %20, i64 %21, i32 5) #8, !dbg !5477
  %22 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i38, align 8, !dbg !5478
  %23 = load i32, i32* %i.addr.i39, align 4, !dbg !5479
  store %struct.atomic_t* %22, %struct.atomic_t** %v.addr.i1.i34, align 8
  store i32 %23, i32* %i.addr.i.i35, align 4
  %24 = load i32, i32* %i.addr.i.i35, align 4, !dbg !5480
  %25 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i34, align 8, !dbg !5480
  %counter.i.i42 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %25, i32 0, i32 0, !dbg !5480
  store volatile i32 %24, i32* %counter.i.i42, align 4, !dbg !5480
  %26 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5481
  call void @pm_suspend_ignore_children(%struct.device* %26, i1 zeroext false) #7, !dbg !5482
  %27 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5483
  %power8 = getelementptr inbounds %struct.device, %struct.device* %27, i32 0, i32 11, !dbg !5484
  %runtime_auto = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power8, i32 0, i32 15, !dbg !5485
  %bf.load9 = load i16, i16* %runtime_auto, align 8, !dbg !5486
  %bf.clear10 = and i16 %bf.load9, -65, !dbg !5486
  %bf.set11 = or i16 %bf.clear10, 64, !dbg !5486
  store i16 %bf.set11, i16* %runtime_auto, align 8, !dbg !5486
  %28 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5487
  %power12 = getelementptr inbounds %struct.device, %struct.device* %28, i32 0, i32 11, !dbg !5488
  %request_pending = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power12, i32 0, i32 15, !dbg !5489
  %bf.load13 = load i16, i16* %request_pending, align 8, !dbg !5490
  %bf.clear14 = and i16 %bf.load13, -17, !dbg !5490
  store i16 %bf.clear14, i16* %request_pending, align 8, !dbg !5490
  %29 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5491
  %power15 = getelementptr inbounds %struct.device, %struct.device* %29, i32 0, i32 11, !dbg !5492
  %request = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power15, i32 0, i32 17, !dbg !5493
  store i32 0, i32* %request, align 8, !dbg !5494
  %30 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5495
  %power16 = getelementptr inbounds %struct.device, %struct.device* %30, i32 0, i32 11, !dbg !5496
  %deferred_resume = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power16, i32 0, i32 15, !dbg !5497
  %bf.load17 = load i16, i16* %deferred_resume, align 8, !dbg !5498
  %bf.clear18 = and i16 %bf.load17, -33, !dbg !5498
  store i16 %bf.clear18, i16* %deferred_resume, align 8, !dbg !5498
  br label %do.body, !dbg !5499

do.body:                                          ; preds = %entry
  %31 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5500
  %power19 = getelementptr inbounds %struct.device, %struct.device* %31, i32 0, i32 11, !dbg !5500
  %work = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power19, i32 0, i32 10, !dbg !5500
  call void @__init_work(%struct.work_struct* %work, i32 0) #7, !dbg !5500
  %32 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5500
  %power20 = getelementptr inbounds %struct.device, %struct.device* %32, i32 0, i32 11, !dbg !5500
  %work21 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power20, i32 0, i32 10, !dbg !5500
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work21, i32 0, i32 0, !dbg !5500
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !5500
  store i64 68719476704, i64* %counter, align 8, !dbg !5500
  %33 = bitcast %struct.atomic64_t* %data to i8*, !dbg !5500
  %34 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !5500
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 8, i1 false), !dbg !5500
  %35 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5500
  %power22 = getelementptr inbounds %struct.device, %struct.device* %35, i32 0, i32 11, !dbg !5500
  %work23 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power22, i32 0, i32 10, !dbg !5500
  %entry24 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work23, i32 0, i32 1, !dbg !5500
  call void @INIT_LIST_HEAD(%struct.list_head* %entry24) #7, !dbg !5500
  %36 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5500
  %power25 = getelementptr inbounds %struct.device, %struct.device* %36, i32 0, i32 11, !dbg !5500
  %work26 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power25, i32 0, i32 10, !dbg !5500
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work26, i32 0, i32 2, !dbg !5500
  store void (%struct.work_struct*)* @pm_runtime_work, void (%struct.work_struct*)** %func, align 8, !dbg !5500
  br label %do.end, !dbg !5500

do.end:                                           ; preds = %do.body
  %37 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5502
  %power27 = getelementptr inbounds %struct.device, %struct.device* %37, i32 0, i32 11, !dbg !5503
  %timer_expires = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power27, i32 0, i32 9, !dbg !5504
  store i64 0, i64* %timer_expires, align 8, !dbg !5505
  %38 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5506
  %power28 = getelementptr inbounds %struct.device, %struct.device* %38, i32 0, i32 11, !dbg !5507
  %suspend_timer = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power28, i32 0, i32 8, !dbg !5508
  call void @hrtimer_init(%struct.hrtimer* %suspend_timer, i32 1, i32 0) #7, !dbg !5509
  %39 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5510
  %power29 = getelementptr inbounds %struct.device, %struct.device* %39, i32 0, i32 11, !dbg !5511
  %suspend_timer30 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power29, i32 0, i32 8, !dbg !5512
  %function = getelementptr inbounds %struct.hrtimer, %struct.hrtimer* %suspend_timer30, i32 0, i32 2, !dbg !5513
  store i32 (%struct.hrtimer*)* @pm_suspend_timer_fn, i32 (%struct.hrtimer*)** %function, align 8, !dbg !5514
  br label %do.body31, !dbg !5515

do.body31:                                        ; preds = %do.end
  %40 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5516
  %power32 = getelementptr inbounds %struct.device, %struct.device* %40, i32 0, i32 11, !dbg !5516
  %wait_queue = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power32, i32 0, i32 11, !dbg !5516
  call void @__init_waitqueue_head(%struct.wait_queue_head* %wait_queue, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), %struct.lock_class_key* @pm_runtime_init.__key) #7, !dbg !5516
  br label %do.end33, !dbg !5516

do.end33:                                         ; preds = %do.body31
  ret void, !dbg !5518
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_suspend_ignore_children(%struct.device* %dev, i1 zeroext %enable) #0 !dbg !5519 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %enable.addr = alloca i8, align 1
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5520, metadata !DIExpression()), !dbg !5521
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !5522, metadata !DIExpression()), !dbg !5523
  %0 = load i8, i8* %enable.addr, align 1, !dbg !5524
  %tobool = trunc i8 %0 to i1, !dbg !5524
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5525
  %power = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !5526
  %ignore_children = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 15, !dbg !5527
  %2 = zext i1 %tobool to i16, !dbg !5528
  %bf.load = load i16, i16* %ignore_children, align 8, !dbg !5528
  %bf.shl = shl i16 %2, 7, !dbg !5528
  %bf.clear = and i16 %bf.load, -129, !dbg !5528
  %bf.set = or i16 %bf.clear, %bf.shl, !dbg !5528
  store i16 %bf.set, i16* %ignore_children, align 8, !dbg !5528
  %bf.result.cast = trunc i16 %2 to i8, !dbg !5528
  %tobool1 = trunc i8 %bf.result.cast to i1, !dbg !5528
  ret void, !dbg !5529
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #0 !dbg !5530 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !5533, metadata !DIExpression()), !dbg !5534
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !5535, metadata !DIExpression()), !dbg !5536
  ret void, !dbg !5537
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !5538 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !5542, metadata !DIExpression()), !dbg !5543
  br label %do.body, !dbg !5544

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5545

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !5547

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !5545

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5549
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5549
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !5549
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !5549
  br label %do.end3, !dbg !5549

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !5545

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5551
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5552
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !5553
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !5554
  ret void, !dbg !5555
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_work(%struct.work_struct* %work) #0 !dbg !5556 {
entry:
  %lock.addr.i18 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i18, metadata !2281, metadata !DIExpression()), !dbg !5557
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2290, metadata !DIExpression()), !dbg !5559
  %work.addr = alloca %struct.work_struct*, align 8
  %dev = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device*, align 8
  %req = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !5561, metadata !DIExpression()), !dbg !5562
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !5563, metadata !DIExpression()), !dbg !5564
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5565, metadata !DIExpression()), !dbg !5567
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !5567
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !5567
  store i8* %1, i8** %__mptr, align 8, !dbg !5567
  br label %do.body, !dbg !5567

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5568

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5567
  %add.ptr = getelementptr i8, i8* %2, i64 -368, !dbg !5567
  %3 = bitcast i8* %add.ptr to %struct.device*, !dbg !5567
  store %struct.device* %3, %struct.device** %tmp, align 8, !dbg !5568
  %4 = load %struct.device*, %struct.device** %tmp, align 8, !dbg !5567
  store %struct.device* %4, %struct.device** %dev, align 8, !dbg !5564
  call void @llvm.dbg.declare(metadata i32* %req, metadata !5570, metadata !DIExpression()), !dbg !5571
  %5 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5572
  %power = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 11, !dbg !5573
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 3, !dbg !5574
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #8, !dbg !5575
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5576, !srcloc !2310
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5577
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !5577
  %rlock.i = bitcast %union.anon* %7 to %struct.raw_spinlock*, !dbg !5577
  %8 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5578
  %power1 = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 11, !dbg !5580
  %request_pending = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 15, !dbg !5581
  %bf.load = load i16, i16* %request_pending, align 8, !dbg !5581
  %bf.lshr = lshr i16 %bf.load, 4, !dbg !5581
  %bf.clear = and i16 %bf.lshr, 1, !dbg !5581
  %bf.cast = zext i16 %bf.clear to i32, !dbg !5581
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5578
  br i1 %tobool, label %if.end, label %if.then, !dbg !5582

if.then:                                          ; preds = %do.end
  br label %out, !dbg !5583

if.end:                                           ; preds = %do.end
  %9 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5584
  %power2 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 11, !dbg !5585
  %request = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power2, i32 0, i32 17, !dbg !5586
  %10 = load i32, i32* %request, align 8, !dbg !5586
  store i32 %10, i32* %req, align 4, !dbg !5587
  %11 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5588
  %power3 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 11, !dbg !5589
  %request4 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power3, i32 0, i32 17, !dbg !5590
  store i32 0, i32* %request4, align 8, !dbg !5591
  %12 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5592
  %power5 = getelementptr inbounds %struct.device, %struct.device* %12, i32 0, i32 11, !dbg !5593
  %request_pending6 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power5, i32 0, i32 15, !dbg !5594
  %bf.load7 = load i16, i16* %request_pending6, align 8, !dbg !5595
  %bf.clear8 = and i16 %bf.load7, -17, !dbg !5595
  store i16 %bf.clear8, i16* %request_pending6, align 8, !dbg !5595
  %13 = load i32, i32* %req, align 4, !dbg !5596
  switch i32 %13, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb9
    i32 2, label %sw.bb10
    i32 3, label %sw.bb12
    i32 4, label %sw.bb14
  ], !dbg !5597

sw.bb:                                            ; preds = %if.end
  br label %sw.epilog, !dbg !5598

sw.bb9:                                           ; preds = %if.end
  %14 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5600
  %call = call i32 @rpm_idle(%struct.device* %14, i32 2) #7, !dbg !5601
  br label %sw.epilog, !dbg !5602

sw.bb10:                                          ; preds = %if.end
  %15 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5603
  %call11 = call i32 @rpm_suspend(%struct.device* %15, i32 2) #7, !dbg !5604
  br label %sw.epilog, !dbg !5605

sw.bb12:                                          ; preds = %if.end
  %16 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5606
  %call13 = call i32 @rpm_suspend(%struct.device* %16, i32 10) #7, !dbg !5607
  br label %sw.epilog, !dbg !5608

sw.bb14:                                          ; preds = %if.end
  %17 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5609
  %call15 = call i32 @rpm_resume(%struct.device* %17, i32 2) #7, !dbg !5610
  br label %sw.epilog, !dbg !5611

sw.epilog:                                        ; preds = %if.end, %sw.bb14, %sw.bb12, %sw.bb10, %sw.bb9, %sw.bb
  br label %out, !dbg !5612

out:                                              ; preds = %sw.epilog, %if.then
  call void @llvm.dbg.label(metadata !5613), !dbg !5614
  %18 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5615
  %power16 = getelementptr inbounds %struct.device, %struct.device* %18, i32 0, i32 11, !dbg !5616
  %lock17 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power16, i32 0, i32 3, !dbg !5617
  store %struct.spinlock* %lock17, %struct.spinlock** %lock.addr.i18, align 8
  call void @arch_local_irq_enable() #8, !dbg !5618
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5619, !srcloc !2330
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i18, align 8, !dbg !5620
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !5620
  %rlock.i19 = bitcast %union.anon* %20 to %struct.raw_spinlock*, !dbg !5620
  ret void, !dbg !5621
}

; Function Attrs: noredzone
declare dso_local void @hrtimer_init(%struct.hrtimer*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_suspend_timer_fn(%struct.hrtimer* %timer) #0 !dbg !5622 {
entry:
  %lock.addr.i34 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i34, metadata !2149, metadata !DIExpression()), !dbg !5623
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !2157, metadata !DIExpression()), !dbg !5625
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2159, metadata !DIExpression()), !dbg !5626
  %timer.addr = alloca %struct.hrtimer*, align 8
  %dev = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device*, align 8
  %flags = alloca i64, align 8
  %expires = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.hrtimer* %timer, %struct.hrtimer** %timer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hrtimer** %timer.addr, metadata !5633, metadata !DIExpression()), !dbg !5634
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !5635, metadata !DIExpression()), !dbg !5636
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5637, metadata !DIExpression()), !dbg !5639
  %0 = load %struct.hrtimer*, %struct.hrtimer** %timer.addr, align 8, !dbg !5639
  %1 = bitcast %struct.hrtimer* %0 to i8*, !dbg !5639
  store i8* %1, i8** %__mptr, align 8, !dbg !5639
  br label %do.body, !dbg !5639

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5640

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5639
  %add.ptr = getelementptr i8, i8* %2, i64 -296, !dbg !5639
  %3 = bitcast i8* %add.ptr to %struct.device*, !dbg !5639
  store %struct.device* %3, %struct.device** %tmp, align 8, !dbg !5640
  %4 = load %struct.device*, %struct.device** %tmp, align 8, !dbg !5639
  store %struct.device* %4, %struct.device** %dev, align 8, !dbg !5636
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5642, metadata !DIExpression()), !dbg !5643
  call void @llvm.dbg.declare(metadata i64* %expires, metadata !5644, metadata !DIExpression()), !dbg !5645
  br label %do.body1, !dbg !5646

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !5647

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5648, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5651, metadata !DIExpression()), !dbg !5650
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5650
  %conv = zext i1 %cmp to i32, !dbg !5650
  store i32 1, i32* %tmp3, align 4, !dbg !5650
  %5 = load i32, i32* %tmp3, align 4, !dbg !5650
  br label %do.body4, !dbg !5652

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !5653

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !5654

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !5656, metadata !DIExpression()), !dbg !5659
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !5660, metadata !DIExpression()), !dbg !5659
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !5659
  %conv10 = zext i1 %cmp9 to i32, !dbg !5659
  store i32 1, i32* %tmp11, align 4, !dbg !5659
  %6 = load i32, i32* %tmp11, align 4, !dbg !5659
  %call = call i64 @arch_local_irq_save() #7, !dbg !5661
  store i64 %call, i64* %flags, align 8, !dbg !5661
  br label %do.end12, !dbg !5661

do.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !5654

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !5653

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5662, !srcloc !5663
  br label %do.body15, !dbg !5662

do.body15:                                        ; preds = %do.body14
  %7 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5664
  %power = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 11, !dbg !5664
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 3, !dbg !5664
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5665
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !5666
  %rlock.i = bitcast %union.anon* %9 to %struct.raw_spinlock*, !dbg !5666
  br label %do.end17, !dbg !5664

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !5662

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !5653

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !5652

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !5647

do.end21:                                         ; preds = %do.end20
  %10 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5667
  %power22 = getelementptr inbounds %struct.device, %struct.device* %10, i32 0, i32 11, !dbg !5668
  %timer_expires = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power22, i32 0, i32 9, !dbg !5669
  %11 = load i64, i64* %timer_expires, align 8, !dbg !5669
  store i64 %11, i64* %expires, align 8, !dbg !5670
  %12 = load i64, i64* %expires, align 8, !dbg !5671
  %cmp23 = icmp ugt i64 %12, 0, !dbg !5673
  br i1 %cmp23, label %land.lhs.true, label %if.end, !dbg !5674

land.lhs.true:                                    ; preds = %do.end21
  %13 = load i64, i64* %expires, align 8, !dbg !5675
  %call25 = call i64 @ktime_get_mono_fast_ns() #7, !dbg !5676
  %cmp26 = icmp ult i64 %13, %call25, !dbg !5677
  br i1 %cmp26, label %if.then, label %if.end, !dbg !5678

if.then:                                          ; preds = %land.lhs.true
  %14 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5679
  %power28 = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 11, !dbg !5681
  %timer_expires29 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power28, i32 0, i32 9, !dbg !5682
  store i64 0, i64* %timer_expires29, align 8, !dbg !5683
  %15 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5684
  %16 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5685
  %power30 = getelementptr inbounds %struct.device, %struct.device* %16, i32 0, i32 11, !dbg !5686
  %timer_autosuspends = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power30, i32 0, i32 15, !dbg !5687
  %bf.load = load i16, i16* %timer_autosuspends, align 8, !dbg !5687
  %bf.lshr = lshr i16 %bf.load, 11, !dbg !5687
  %bf.clear = and i16 %bf.lshr, 1, !dbg !5687
  %bf.cast = zext i16 %bf.clear to i32, !dbg !5687
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5685
  %17 = zext i1 %tobool to i64, !dbg !5685
  %cond = select i1 %tobool, i32 9, i32 1, !dbg !5685
  %call31 = call i32 @rpm_suspend(%struct.device* %15, i32 %cond) #7, !dbg !5688
  br label %if.end, !dbg !5689

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.end21
  %18 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5690
  %power32 = getelementptr inbounds %struct.device, %struct.device* %18, i32 0, i32 11, !dbg !5691
  %lock33 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power32, i32 0, i32 3, !dbg !5692
  %19 = load i64, i64* %flags, align 8, !dbg !5693
  store %struct.spinlock* %lock33, %struct.spinlock** %lock.addr.i34, align 8
  store i64 %19, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !47, metadata !2214, metadata !DIExpression()) #6, !dbg !5694
  call void @llvm.dbg.declare(metadata !47, metadata !2218, metadata !DIExpression()) #6, !dbg !5694
  store i32 1, i32* %tmp.i, align 4, !dbg !5694
  %20 = load i32, i32* %tmp.i, align 4, !dbg !5694
  call void @llvm.dbg.declare(metadata !47, metadata !2219, metadata !DIExpression()) #6, !dbg !5695
  call void @llvm.dbg.declare(metadata !47, metadata !2225, metadata !DIExpression()) #6, !dbg !5695
  store i32 1, i32* %tmp8.i, align 4, !dbg !5695
  %21 = load i32, i32* %tmp8.i, align 4, !dbg !5695
  %22 = load i64, i64* %flags.addr.i, align 8, !dbg !5696
  call void @arch_local_irq_restore(i64 %22) #8, !dbg !5696
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5697, !srcloc !2229
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i34, align 8, !dbg !5698
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !5698
  %rlock.i35 = bitcast %union.anon* %24 to %struct.raw_spinlock*, !dbg !5698
  ret i32 0, !dbg !5699
}

; Function Attrs: noredzone
declare dso_local void @__init_waitqueue_head(%struct.wait_queue_head*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pm_runtime_reinit(%struct.device* %dev) #0 !dbg !5700 {
entry:
  %lock.addr.i19 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i19, metadata !2281, metadata !DIExpression()), !dbg !5701
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2290, metadata !DIExpression()), !dbg !5707
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5709, metadata !DIExpression()), !dbg !5710
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5711
  %call = call zeroext i1 @pm_runtime_enabled(%struct.device* %0) #7, !dbg !5712
  br i1 %call, label %if.end18, label %if.then, !dbg !5713

if.then:                                          ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5714
  %power = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !5716
  %runtime_status = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 18, !dbg !5717
  %2 = load i32, i32* %runtime_status, align 4, !dbg !5717
  %cmp = icmp eq i32 %2, 0, !dbg !5718
  br i1 %cmp, label %if.then1, label %if.end, !dbg !5719

if.then1:                                         ; preds = %if.then
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5720
  %call2 = call i32 @pm_runtime_set_suspended(%struct.device* %3) #7, !dbg !5721
  br label %if.end, !dbg !5721

if.end:                                           ; preds = %if.then1, %if.then
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5722
  %power3 = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 11, !dbg !5723
  %irq_safe = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power3, i32 0, i32 15, !dbg !5724
  %bf.load = load i16, i16* %irq_safe, align 8, !dbg !5724
  %bf.lshr = lshr i16 %bf.load, 9, !dbg !5724
  %bf.clear = and i16 %bf.lshr, 1, !dbg !5724
  %bf.cast = zext i16 %bf.clear to i32, !dbg !5724
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5722
  br i1 %tobool, label %if.then4, label %if.end17, !dbg !5725

if.then4:                                         ; preds = %if.end
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5726
  %power5 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 11, !dbg !5727
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power5, i32 0, i32 3, !dbg !5728
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #8, !dbg !5729
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5730, !srcloc !2310
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5731
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !5731
  %rlock.i = bitcast %union.anon* %7 to %struct.raw_spinlock*, !dbg !5731
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5732
  %power6 = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 11, !dbg !5733
  %irq_safe7 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power6, i32 0, i32 15, !dbg !5734
  %bf.load8 = load i16, i16* %irq_safe7, align 8, !dbg !5735
  %bf.clear9 = and i16 %bf.load8, -513, !dbg !5735
  store i16 %bf.clear9, i16* %irq_safe7, align 8, !dbg !5735
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5736
  %power10 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 11, !dbg !5737
  %lock11 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power10, i32 0, i32 3, !dbg !5738
  store %struct.spinlock* %lock11, %struct.spinlock** %lock.addr.i19, align 8
  call void @arch_local_irq_enable() #8, !dbg !5739
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5740, !srcloc !2330
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i19, align 8, !dbg !5741
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !5741
  %rlock.i20 = bitcast %union.anon* %11 to %struct.raw_spinlock*, !dbg !5741
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5742
  %parent = getelementptr inbounds %struct.device, %struct.device* %12, i32 0, i32 1, !dbg !5744
  %13 = load %struct.device*, %struct.device** %parent, align 8, !dbg !5744
  %tobool12 = icmp ne %struct.device* %13, null, !dbg !5742
  br i1 %tobool12, label %if.then13, label %if.end16, !dbg !5745

if.then13:                                        ; preds = %if.then4
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5746
  %parent14 = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 1, !dbg !5747
  %15 = load %struct.device*, %struct.device** %parent14, align 8, !dbg !5747
  %call15 = call i32 @pm_runtime_put(%struct.device* %15) #7, !dbg !5748
  br label %if.end16, !dbg !5748

if.end16:                                         ; preds = %if.then13, %if.then4
  br label %if.end17, !dbg !5749

if.end17:                                         ; preds = %if.end16, %if.end
  br label %if.end18, !dbg !5750

if.end18:                                         ; preds = %if.end17, %entry
  ret void, !dbg !5751
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pm_runtime_enabled(%struct.device* %dev) #0 !dbg !5752 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5755, metadata !DIExpression()), !dbg !5756
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5757
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !5758
  %disable_depth = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 15, !dbg !5759
  %bf.load = load i16, i16* %disable_depth, align 8, !dbg !5759
  %bf.clear = and i16 %bf.load, 7, !dbg !5759
  %bf.cast = zext i16 %bf.clear to i32, !dbg !5759
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5760
  %lnot = xor i1 %tobool, true, !dbg !5760
  ret i1 %lnot, !dbg !5761
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_set_suspended(%struct.device* %dev) #0 !dbg !5762 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5763, metadata !DIExpression()), !dbg !5764
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5765
  %call = call i32 @__pm_runtime_set_status(%struct.device* %0, i32 2) #7, !dbg !5766
  ret i32 %call, !dbg !5767
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_put(%struct.device* %dev) #0 !dbg !5768 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5769, metadata !DIExpression()), !dbg !5770
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5771
  %call = call i32 @__pm_runtime_idle(%struct.device* %0, i32 5) #7, !dbg !5772
  ret i32 %call, !dbg !5773
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pm_runtime_remove(%struct.device* %dev) #0 !dbg !5774 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5775, metadata !DIExpression()), !dbg !5776
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5777
  call void @__pm_runtime_disable(%struct.device* %0, i1 zeroext false) #7, !dbg !5778
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5779
  call void @pm_runtime_reinit(%struct.device* %1) #7, !dbg !5780
  ret void, !dbg !5781
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pm_runtime_get_suppliers(%struct.device* %dev) #0 !dbg !5782 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %link = alloca %struct.device_link*, align 8
  %idx = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.list_head*, align 8
  %tmp3 = alloca %struct.device_link*, align 8
  %__mptr7 = alloca i8*, align 8
  %tmp10 = alloca %struct.list_head*, align 8
  %tmp15 = alloca %struct.device_link*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5783, metadata !DIExpression()), !dbg !5784
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !5785, metadata !DIExpression()), !dbg !5786
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !5787, metadata !DIExpression()), !dbg !5788
  %call = call i32 @device_links_read_lock() #7, !dbg !5789
  store i32 %call, i32* %idx, align 4, !dbg !5790
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5791, metadata !DIExpression()), !dbg !5794
  br label %do.body, !dbg !5795

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5797

do.end:                                           ; preds = %do.body
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5795
  %links = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 10, !dbg !5795
  %suppliers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 0, !dbg !5795
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %suppliers, i32 0, i32 0, !dbg !5795
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5795
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !5797
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !5795
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !5794
  store i8* %3, i8** %__mptr, align 8, !dbg !5794
  br label %do.body1, !dbg !5794

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !5799

do.end2:                                          ; preds = %do.body1
  %4 = load i8*, i8** %__mptr, align 8, !dbg !5794
  %add.ptr = getelementptr i8, i8* %4, i64 -32, !dbg !5794
  %5 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !5794
  store %struct.device_link* %5, %struct.device_link** %tmp3, align 8, !dbg !5799
  %6 = load %struct.device_link*, %struct.device_link** %tmp3, align 8, !dbg !5794
  store %struct.device_link* %6, %struct.device_link** %link, align 8, !dbg !5801
  br label %for.cond, !dbg !5801

for.cond:                                         ; preds = %do.end14, %do.end2
  %7 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !5802
  %c_node = getelementptr inbounds %struct.device_link, %struct.device_link* %7, i32 0, i32 3, !dbg !5802
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5802
  %links4 = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 10, !dbg !5802
  %suppliers5 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links4, i32 0, i32 0, !dbg !5802
  %cmp = icmp ne %struct.list_head* %c_node, %suppliers5, !dbg !5802
  br i1 %cmp, label %for.body, label %for.end, !dbg !5801

for.body:                                         ; preds = %for.cond
  %9 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !5804
  %flags = getelementptr inbounds %struct.device_link, %struct.device_link* %9, i32 0, i32 6, !dbg !5806
  %10 = load i32, i32* %flags, align 4, !dbg !5806
  %conv = zext i32 %10 to i64, !dbg !5804
  %and = and i64 %conv, 4, !dbg !5807
  %tobool = icmp ne i64 %and, 0, !dbg !5807
  br i1 %tobool, label %if.then, label %if.end, !dbg !5808

if.then:                                          ; preds = %for.body
  %11 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !5809
  %supplier_preactivated = getelementptr inbounds %struct.device_link, %struct.device_link* %11, i32 0, i32 10, !dbg !5811
  store i8 1, i8* %supplier_preactivated, align 8, !dbg !5812
  %12 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !5813
  %rpm_active = getelementptr inbounds %struct.device_link, %struct.device_link* %12, i32 0, i32 7, !dbg !5814
  call void @refcount_inc(%struct.refcount_struct* %rpm_active) #7, !dbg !5815
  %13 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !5816
  %supplier = getelementptr inbounds %struct.device_link, %struct.device_link* %13, i32 0, i32 0, !dbg !5817
  %14 = load %struct.device*, %struct.device** %supplier, align 8, !dbg !5817
  %call6 = call i32 @pm_runtime_get_sync(%struct.device* %14) #7, !dbg !5818
  br label %if.end, !dbg !5819

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !5820

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr7, metadata !5821, metadata !DIExpression()), !dbg !5823
  br label %do.body8, !dbg !5824

do.body8:                                         ; preds = %for.inc
  br label %do.end9, !dbg !5826

do.end9:                                          ; preds = %do.body8
  %15 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !5824
  %c_node11 = getelementptr inbounds %struct.device_link, %struct.device_link* %15, i32 0, i32 3, !dbg !5824
  %next12 = getelementptr inbounds %struct.list_head, %struct.list_head* %c_node11, i32 0, i32 0, !dbg !5824
  %16 = load volatile %struct.list_head*, %struct.list_head** %next12, align 8, !dbg !5824
  store %struct.list_head* %16, %struct.list_head** %tmp10, align 8, !dbg !5826
  %17 = load %struct.list_head*, %struct.list_head** %tmp10, align 8, !dbg !5824
  %18 = bitcast %struct.list_head* %17 to i8*, !dbg !5823
  store i8* %18, i8** %__mptr7, align 8, !dbg !5823
  br label %do.body13, !dbg !5823

do.body13:                                        ; preds = %do.end9
  br label %do.end14, !dbg !5828

do.end14:                                         ; preds = %do.body13
  %19 = load i8*, i8** %__mptr7, align 8, !dbg !5823
  %add.ptr16 = getelementptr i8, i8* %19, i64 -32, !dbg !5823
  %20 = bitcast i8* %add.ptr16 to %struct.device_link*, !dbg !5823
  store %struct.device_link* %20, %struct.device_link** %tmp15, align 8, !dbg !5828
  %21 = load %struct.device_link*, %struct.device_link** %tmp15, align 8, !dbg !5823
  store %struct.device_link* %21, %struct.device_link** %link, align 8, !dbg !5802
  br label %for.cond, !dbg !5802, !llvm.loop !5830

for.end:                                          ; preds = %for.cond
  %22 = load i32, i32* %idx, align 4, !dbg !5832
  call void @device_links_read_unlock(i32 %22) #7, !dbg !5833
  ret void, !dbg !5834
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_inc(%struct.refcount_struct* %r) #0 !dbg !5835 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !5839, metadata !DIExpression()), !dbg !5840
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !5841
  call void @__refcount_inc(%struct.refcount_struct* %0, i32* null) #7, !dbg !5842
  ret void, !dbg !5843
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pm_runtime_put_suppliers(%struct.device* %dev) #0 !dbg !5844 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %link = alloca %struct.device_link*, align 8
  %idx = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.list_head*, align 8
  %tmp3 = alloca %struct.device_link*, align 8
  %__mptr11 = alloca i8*, align 8
  %tmp14 = alloca %struct.list_head*, align 8
  %tmp19 = alloca %struct.device_link*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5845, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !5847, metadata !DIExpression()), !dbg !5848
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !5849, metadata !DIExpression()), !dbg !5850
  %call = call i32 @device_links_read_lock() #7, !dbg !5851
  store i32 %call, i32* %idx, align 4, !dbg !5852
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5853, metadata !DIExpression()), !dbg !5856
  br label %do.body, !dbg !5857

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5859

do.end:                                           ; preds = %do.body
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5857
  %links = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 10, !dbg !5857
  %suppliers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 0, !dbg !5857
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %suppliers, i32 0, i32 0, !dbg !5857
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5857
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !5859
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !5857
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !5856
  store i8* %3, i8** %__mptr, align 8, !dbg !5856
  br label %do.body1, !dbg !5856

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !5861

do.end2:                                          ; preds = %do.body1
  %4 = load i8*, i8** %__mptr, align 8, !dbg !5856
  %add.ptr = getelementptr i8, i8* %4, i64 -32, !dbg !5856
  %5 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !5856
  store %struct.device_link* %5, %struct.device_link** %tmp3, align 8, !dbg !5861
  %6 = load %struct.device_link*, %struct.device_link** %tmp3, align 8, !dbg !5856
  store %struct.device_link* %6, %struct.device_link** %link, align 8, !dbg !5863
  br label %for.cond, !dbg !5863

for.cond:                                         ; preds = %do.end18, %do.end2
  %7 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !5864
  %c_node = getelementptr inbounds %struct.device_link, %struct.device_link* %7, i32 0, i32 3, !dbg !5864
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5864
  %links4 = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 10, !dbg !5864
  %suppliers5 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links4, i32 0, i32 0, !dbg !5864
  %cmp = icmp ne %struct.list_head* %c_node, %suppliers5, !dbg !5864
  br i1 %cmp, label %for.body, label %for.end, !dbg !5863

for.body:                                         ; preds = %for.cond
  %9 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !5866
  %supplier_preactivated = getelementptr inbounds %struct.device_link, %struct.device_link* %9, i32 0, i32 10, !dbg !5868
  %10 = load i8, i8* %supplier_preactivated, align 8, !dbg !5868
  %tobool = trunc i8 %10 to i1, !dbg !5868
  br i1 %tobool, label %if.then, label %if.end10, !dbg !5869

if.then:                                          ; preds = %for.body
  %11 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !5870
  %supplier_preactivated6 = getelementptr inbounds %struct.device_link, %struct.device_link* %11, i32 0, i32 10, !dbg !5872
  store i8 0, i8* %supplier_preactivated6, align 8, !dbg !5873
  %12 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !5874
  %rpm_active = getelementptr inbounds %struct.device_link, %struct.device_link* %12, i32 0, i32 7, !dbg !5876
  %call7 = call zeroext i1 @refcount_dec_not_one(%struct.refcount_struct* %rpm_active) #7, !dbg !5877
  br i1 %call7, label %if.then8, label %if.end, !dbg !5878

if.then8:                                         ; preds = %if.then
  %13 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !5879
  %supplier = getelementptr inbounds %struct.device_link, %struct.device_link* %13, i32 0, i32 0, !dbg !5880
  %14 = load %struct.device*, %struct.device** %supplier, align 8, !dbg !5880
  %call9 = call i32 @pm_runtime_put(%struct.device* %14) #7, !dbg !5881
  br label %if.end, !dbg !5881

if.end:                                           ; preds = %if.then8, %if.then
  br label %if.end10, !dbg !5882

if.end10:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !5868

for.inc:                                          ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i8** %__mptr11, metadata !5883, metadata !DIExpression()), !dbg !5885
  br label %do.body12, !dbg !5886

do.body12:                                        ; preds = %for.inc
  br label %do.end13, !dbg !5888

do.end13:                                         ; preds = %do.body12
  %15 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !5886
  %c_node15 = getelementptr inbounds %struct.device_link, %struct.device_link* %15, i32 0, i32 3, !dbg !5886
  %next16 = getelementptr inbounds %struct.list_head, %struct.list_head* %c_node15, i32 0, i32 0, !dbg !5886
  %16 = load volatile %struct.list_head*, %struct.list_head** %next16, align 8, !dbg !5886
  store %struct.list_head* %16, %struct.list_head** %tmp14, align 8, !dbg !5888
  %17 = load %struct.list_head*, %struct.list_head** %tmp14, align 8, !dbg !5886
  %18 = bitcast %struct.list_head* %17 to i8*, !dbg !5885
  store i8* %18, i8** %__mptr11, align 8, !dbg !5885
  br label %do.body17, !dbg !5885

do.body17:                                        ; preds = %do.end13
  br label %do.end18, !dbg !5890

do.end18:                                         ; preds = %do.body17
  %19 = load i8*, i8** %__mptr11, align 8, !dbg !5885
  %add.ptr20 = getelementptr i8, i8* %19, i64 -32, !dbg !5885
  %20 = bitcast i8* %add.ptr20 to %struct.device_link*, !dbg !5885
  store %struct.device_link* %20, %struct.device_link** %tmp19, align 8, !dbg !5890
  %21 = load %struct.device_link*, %struct.device_link** %tmp19, align 8, !dbg !5885
  store %struct.device_link* %21, %struct.device_link** %link, align 8, !dbg !5864
  br label %for.cond, !dbg !5864, !llvm.loop !5892

for.end:                                          ; preds = %for.cond
  %22 = load i32, i32* %idx, align 4, !dbg !5894
  call void @device_links_read_unlock(i32 %22) #7, !dbg !5895
  ret void, !dbg !5896
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @refcount_dec_not_one(%struct.refcount_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pm_runtime_new_link(%struct.device* %dev) #0 !dbg !5897 {
entry:
  %lock.addr.i4 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i4, metadata !2281, metadata !DIExpression()), !dbg !5898
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2290, metadata !DIExpression()), !dbg !5900
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5902, metadata !DIExpression()), !dbg !5903
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5904
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !5905
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 3, !dbg !5906
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #8, !dbg !5907
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5908, !srcloc !2310
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5909
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !5909
  %rlock.i = bitcast %union.anon* %2 to %struct.raw_spinlock*, !dbg !5909
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5910
  %power1 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 11, !dbg !5911
  %links_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 16, !dbg !5912
  %4 = load i32, i32* %links_count, align 4, !dbg !5913
  %inc = add i32 %4, 1, !dbg !5913
  store i32 %inc, i32* %links_count, align 4, !dbg !5913
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5914
  %power2 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 11, !dbg !5915
  %lock3 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power2, i32 0, i32 3, !dbg !5916
  store %struct.spinlock* %lock3, %struct.spinlock** %lock.addr.i4, align 8
  call void @arch_local_irq_enable() #8, !dbg !5917
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5918, !srcloc !2330
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i4, align 8, !dbg !5919
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !5919
  %rlock.i5 = bitcast %union.anon* %7 to %struct.raw_spinlock*, !dbg !5919
  ret void, !dbg !5920
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pm_runtime_drop_link(%struct.device_link* %link) #0 !dbg !5921 {
entry:
  %link.addr = alloca %struct.device_link*, align 8
  store %struct.device_link* %link, %struct.device_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_link** %link.addr, metadata !5924, metadata !DIExpression()), !dbg !5925
  %0 = load %struct.device_link*, %struct.device_link** %link.addr, align 8, !dbg !5926
  %flags = getelementptr inbounds %struct.device_link, %struct.device_link* %0, i32 0, i32 6, !dbg !5928
  %1 = load i32, i32* %flags, align 4, !dbg !5928
  %conv = zext i32 %1 to i64, !dbg !5926
  %and = and i64 %conv, 4, !dbg !5929
  %tobool = icmp ne i64 %and, 0, !dbg !5929
  br i1 %tobool, label %if.end, label %if.then, !dbg !5930

if.then:                                          ; preds = %entry
  br label %while.end, !dbg !5931

if.end:                                           ; preds = %entry
  %2 = load %struct.device_link*, %struct.device_link** %link.addr, align 8, !dbg !5932
  %consumer = getelementptr inbounds %struct.device_link, %struct.device_link* %2, i32 0, i32 2, !dbg !5933
  %3 = load %struct.device*, %struct.device** %consumer, align 8, !dbg !5933
  call void @pm_runtime_drop_link_count(%struct.device* %3) #7, !dbg !5934
  br label %while.cond, !dbg !5935

while.cond:                                       ; preds = %while.body, %if.end
  %4 = load %struct.device_link*, %struct.device_link** %link.addr, align 8, !dbg !5936
  %rpm_active = getelementptr inbounds %struct.device_link, %struct.device_link* %4, i32 0, i32 7, !dbg !5937
  %call = call zeroext i1 @refcount_dec_not_one(%struct.refcount_struct* %rpm_active) #7, !dbg !5938
  br i1 %call, label %while.body, label %while.end, !dbg !5935

while.body:                                       ; preds = %while.cond
  %5 = load %struct.device_link*, %struct.device_link** %link.addr, align 8, !dbg !5939
  %supplier = getelementptr inbounds %struct.device_link, %struct.device_link* %5, i32 0, i32 0, !dbg !5940
  %6 = load %struct.device*, %struct.device** %supplier, align 8, !dbg !5940
  %call1 = call i32 @pm_runtime_put(%struct.device* %6) #7, !dbg !5941
  br label %while.cond, !dbg !5935, !llvm.loop !5942

while.end:                                        ; preds = %if.then, %while.cond
  ret void, !dbg !5944
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_drop_link_count(%struct.device* %dev) #0 !dbg !5945 {
entry:
  %lock.addr.i24 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i24, metadata !2281, metadata !DIExpression()), !dbg !5946
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2290, metadata !DIExpression()), !dbg !5948
  %dev.addr = alloca %struct.device*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5950, metadata !DIExpression()), !dbg !5951
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5952
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !5953
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 3, !dbg !5954
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #8, !dbg !5955
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5956, !srcloc !2310
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5957
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !5957
  %rlock.i = bitcast %union.anon* %2 to %struct.raw_spinlock*, !dbg !5957
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5958, metadata !DIExpression()), !dbg !5960
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5960
  %power1 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 11, !dbg !5960
  %links_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 16, !dbg !5960
  %4 = load i32, i32* %links_count, align 4, !dbg !5960
  %cmp = icmp eq i32 %4, 0, !dbg !5960
  %lnot = xor i1 %cmp, true, !dbg !5960
  %lnot2 = xor i1 %lnot, true, !dbg !5960
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5960
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5960
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !5961
  %tobool = icmp ne i32 %5, 0, !dbg !5961
  %lnot3 = xor i1 %tobool, true, !dbg !5961
  %lnot5 = xor i1 %lnot3, true, !dbg !5961
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !5961
  %conv = sext i32 %lnot.ext6 to i64, !dbg !5961
  %tobool7 = icmp ne i64 %conv, 0, !dbg !5961
  br i1 %tobool7, label %if.then, label %if.end, !dbg !5960

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5961

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !5963

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !5965

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !5963

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 1699, i32 2305, i64 12) #6, !dbg !5967, !srcloc !5969
  br label %do.end10, !dbg !5967

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 181) #6, !dbg !5970, !srcloc !5972
  br label %do.body11, !dbg !5963

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !5973

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !5963

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !5963

if.end:                                           ; preds = %do.end13, %entry
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !5960
  %tobool14 = icmp ne i32 %6, 0, !dbg !5960
  %lnot15 = xor i1 %tobool14, true, !dbg !5960
  %lnot17 = xor i1 %lnot15, true, !dbg !5960
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !5960
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !5960
  store i64 %conv19, i64* %tmp, align 8, !dbg !5961
  %7 = load i64, i64* %tmp, align 8, !dbg !5960
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5975
  %power20 = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 11, !dbg !5976
  %links_count21 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power20, i32 0, i32 16, !dbg !5977
  %9 = load i32, i32* %links_count21, align 4, !dbg !5978
  %dec = add i32 %9, -1, !dbg !5978
  store i32 %dec, i32* %links_count21, align 4, !dbg !5978
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5979
  %power22 = getelementptr inbounds %struct.device, %struct.device* %10, i32 0, i32 11, !dbg !5980
  %lock23 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power22, i32 0, i32 3, !dbg !5981
  store %struct.spinlock* %lock23, %struct.spinlock** %lock.addr.i24, align 8
  call void @arch_local_irq_enable() #8, !dbg !5982
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5983, !srcloc !2330
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i24, align 8, !dbg !5984
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !5984
  %rlock.i25 = bitcast %union.anon* %12 to %struct.raw_spinlock*, !dbg !5984
  ret void, !dbg !5985
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pm_runtime_force_suspend(%struct.device* %dev) #0 !dbg !5986 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %callback = alloca i32 (%struct.device*)*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5987, metadata !DIExpression()), !dbg !5988
  call void @llvm.dbg.declare(metadata i32 (%struct.device*)** %callback, metadata !5989, metadata !DIExpression()), !dbg !5990
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5991, metadata !DIExpression()), !dbg !5992
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5993
  call void @pm_runtime_disable(%struct.device* %0) #7, !dbg !5994
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5995
  %call = call zeroext i1 @pm_runtime_status_suspended(%struct.device* %1) #7, !dbg !5997
  br i1 %call, label %if.then, label %if.end, !dbg !5998

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5999
  br label %return, !dbg !5999

if.end:                                           ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6000
  %call1 = call i32 (%struct.device*)* @__rpm_get_callback(%struct.device* %2, i64 160) #7, !dbg !6000
  store i32 (%struct.device*)* %call1, i32 (%struct.device*)** %callback, align 8, !dbg !6001
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %callback, align 8, !dbg !6002
  %tobool = icmp ne i32 (%struct.device*)* %3, null, !dbg !6002
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6002

cond.true:                                        ; preds = %if.end
  %4 = load i32 (%struct.device*)*, i32 (%struct.device*)** %callback, align 8, !dbg !6003
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6004
  %call2 = call i32 %4(%struct.device* %5) #7, !dbg !6003
  br label %cond.end, !dbg !6002

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !6002

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call2, %cond.true ], [ 0, %cond.false ], !dbg !6002
  store i32 %cond, i32* %ret, align 4, !dbg !6005
  %6 = load i32, i32* %ret, align 4, !dbg !6006
  %tobool3 = icmp ne i32 %6, 0, !dbg !6006
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !6008

if.then4:                                         ; preds = %cond.end
  br label %err, !dbg !6009

if.end5:                                          ; preds = %cond.end
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6010
  %call6 = call zeroext i1 @pm_runtime_need_not_resume(%struct.device* %7) #7, !dbg !6012
  br i1 %call6, label %if.then7, label %if.else, !dbg !6013

if.then7:                                         ; preds = %if.end5
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6014
  %call8 = call i32 @pm_runtime_set_suspended(%struct.device* %8) #7, !dbg !6015
  br label %if.end9, !dbg !6015

if.else:                                          ; preds = %if.end5
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6016
  call void @__update_runtime_status(%struct.device* %9, i32 2) #7, !dbg !6017
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then7
  store i32 0, i32* %retval, align 4, !dbg !6018
  br label %return, !dbg !6018

err:                                              ; preds = %if.then4
  call void @llvm.dbg.label(metadata !6019), !dbg !6020
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6021
  call void @pm_runtime_enable(%struct.device* %10) #7, !dbg !6022
  %11 = load i32, i32* %ret, align 4, !dbg !6023
  store i32 %11, i32* %retval, align 4, !dbg !6024
  br label %return, !dbg !6024

return:                                           ; preds = %err, %if.end9, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !6025
  ret i32 %12, !dbg !6025
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_disable(%struct.device* %dev) #0 !dbg !6026 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6027, metadata !DIExpression()), !dbg !6028
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6029
  call void @__pm_runtime_disable(%struct.device* %0, i1 zeroext true) #7, !dbg !6030
  ret void, !dbg !6031
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pm_runtime_status_suspended(%struct.device* %dev) #0 !dbg !6032 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6033, metadata !DIExpression()), !dbg !6034
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6035
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !6036
  %runtime_status = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 18, !dbg !6037
  %1 = load i32, i32* %runtime_status, align 4, !dbg !6037
  %cmp = icmp eq i32 %1, 2, !dbg !6038
  ret i1 %cmp, !dbg !6039
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 (%struct.device*)* @__rpm_get_callback(%struct.device* %dev, i64 %cb_offset) #0 !dbg !6040 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %cb_offset.addr = alloca i64, align 8
  %cb = alloca i32 (%struct.device*)*, align 8
  %ops = alloca %struct.dev_pm_ops*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6043, metadata !DIExpression()), !dbg !6044
  store i64 %cb_offset, i64* %cb_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cb_offset.addr, metadata !6045, metadata !DIExpression()), !dbg !6046
  call void @llvm.dbg.declare(metadata i32 (%struct.device*)** %cb, metadata !6047, metadata !DIExpression()), !dbg !6048
  call void @llvm.dbg.declare(metadata %struct.dev_pm_ops** %ops, metadata !6049, metadata !DIExpression()), !dbg !6050
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6051
  %pm_domain = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 12, !dbg !6053
  %1 = load %struct.dev_pm_domain*, %struct.dev_pm_domain** %pm_domain, align 8, !dbg !6053
  %tobool = icmp ne %struct.dev_pm_domain* %1, null, !dbg !6051
  br i1 %tobool, label %if.then, label %if.else, !dbg !6054

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6055
  %pm_domain1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 12, !dbg !6056
  %3 = load %struct.dev_pm_domain*, %struct.dev_pm_domain** %pm_domain1, align 8, !dbg !6056
  %ops2 = getelementptr inbounds %struct.dev_pm_domain, %struct.dev_pm_domain* %3, i32 0, i32 0, !dbg !6057
  store %struct.dev_pm_ops* %ops2, %struct.dev_pm_ops** %ops, align 8, !dbg !6058
  br label %if.end30, !dbg !6059

if.else:                                          ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6060
  %type = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 4, !dbg !6062
  %5 = load %struct.device_type*, %struct.device_type** %type, align 8, !dbg !6062
  %tobool3 = icmp ne %struct.device_type* %5, null, !dbg !6060
  br i1 %tobool3, label %land.lhs.true, label %if.else9, !dbg !6063

land.lhs.true:                                    ; preds = %if.else
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6064
  %type4 = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 4, !dbg !6065
  %7 = load %struct.device_type*, %struct.device_type** %type4, align 8, !dbg !6065
  %pm = getelementptr inbounds %struct.device_type, %struct.device_type* %7, i32 0, i32 5, !dbg !6066
  %8 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %pm, align 8, !dbg !6066
  %tobool5 = icmp ne %struct.dev_pm_ops* %8, null, !dbg !6064
  br i1 %tobool5, label %if.then6, label %if.else9, !dbg !6067

if.then6:                                         ; preds = %land.lhs.true
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6068
  %type7 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 4, !dbg !6069
  %10 = load %struct.device_type*, %struct.device_type** %type7, align 8, !dbg !6069
  %pm8 = getelementptr inbounds %struct.device_type, %struct.device_type* %10, i32 0, i32 5, !dbg !6070
  %11 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %pm8, align 8, !dbg !6070
  store %struct.dev_pm_ops* %11, %struct.dev_pm_ops** %ops, align 8, !dbg !6071
  br label %if.end29, !dbg !6072

if.else9:                                         ; preds = %land.lhs.true, %if.else
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6073
  %class = getelementptr inbounds %struct.device, %struct.device* %12, i32 0, i32 29, !dbg !6075
  %13 = load %struct.class*, %struct.class** %class, align 8, !dbg !6075
  %tobool10 = icmp ne %struct.class* %13, null, !dbg !6073
  br i1 %tobool10, label %land.lhs.true11, label %if.else18, !dbg !6076

land.lhs.true11:                                  ; preds = %if.else9
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6077
  %class12 = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 29, !dbg !6078
  %15 = load %struct.class*, %struct.class** %class12, align 8, !dbg !6078
  %pm13 = getelementptr inbounds %struct.class, %struct.class* %15, i32 0, i32 13, !dbg !6079
  %16 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %pm13, align 8, !dbg !6079
  %tobool14 = icmp ne %struct.dev_pm_ops* %16, null, !dbg !6077
  br i1 %tobool14, label %if.then15, label %if.else18, !dbg !6080

if.then15:                                        ; preds = %land.lhs.true11
  %17 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6081
  %class16 = getelementptr inbounds %struct.device, %struct.device* %17, i32 0, i32 29, !dbg !6082
  %18 = load %struct.class*, %struct.class** %class16, align 8, !dbg !6082
  %pm17 = getelementptr inbounds %struct.class, %struct.class* %18, i32 0, i32 13, !dbg !6083
  %19 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %pm17, align 8, !dbg !6083
  store %struct.dev_pm_ops* %19, %struct.dev_pm_ops** %ops, align 8, !dbg !6084
  br label %if.end28, !dbg !6085

if.else18:                                        ; preds = %land.lhs.true11, %if.else9
  %20 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6086
  %bus = getelementptr inbounds %struct.device, %struct.device* %20, i32 0, i32 5, !dbg !6088
  %21 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !6088
  %tobool19 = icmp ne %struct.bus_type* %21, null, !dbg !6086
  br i1 %tobool19, label %land.lhs.true20, label %if.else27, !dbg !6089

land.lhs.true20:                                  ; preds = %if.else18
  %22 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6090
  %bus21 = getelementptr inbounds %struct.device, %struct.device* %22, i32 0, i32 5, !dbg !6091
  %23 = load %struct.bus_type*, %struct.bus_type** %bus21, align 8, !dbg !6091
  %pm22 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %23, i32 0, i32 18, !dbg !6092
  %24 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %pm22, align 8, !dbg !6092
  %tobool23 = icmp ne %struct.dev_pm_ops* %24, null, !dbg !6090
  br i1 %tobool23, label %if.then24, label %if.else27, !dbg !6093

if.then24:                                        ; preds = %land.lhs.true20
  %25 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6094
  %bus25 = getelementptr inbounds %struct.device, %struct.device* %25, i32 0, i32 5, !dbg !6095
  %26 = load %struct.bus_type*, %struct.bus_type** %bus25, align 8, !dbg !6095
  %pm26 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %26, i32 0, i32 18, !dbg !6096
  %27 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %pm26, align 8, !dbg !6096
  store %struct.dev_pm_ops* %27, %struct.dev_pm_ops** %ops, align 8, !dbg !6097
  br label %if.end, !dbg !6098

if.else27:                                        ; preds = %land.lhs.true20, %if.else18
  store %struct.dev_pm_ops* null, %struct.dev_pm_ops** %ops, align 8, !dbg !6099
  br label %if.end

if.end:                                           ; preds = %if.else27, %if.then24
  br label %if.end28

if.end28:                                         ; preds = %if.end, %if.then15
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then6
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then
  %28 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %ops, align 8, !dbg !6100
  %tobool31 = icmp ne %struct.dev_pm_ops* %28, null, !dbg !6100
  br i1 %tobool31, label %if.then32, label %if.else33, !dbg !6102

if.then32:                                        ; preds = %if.end30
  %29 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %ops, align 8, !dbg !6103
  %30 = bitcast %struct.dev_pm_ops* %29 to i8*, !dbg !6104
  %31 = load i64, i64* %cb_offset.addr, align 8, !dbg !6105
  %add.ptr = getelementptr i8, i8* %30, i64 %31, !dbg !6106
  %32 = bitcast i8* %add.ptr to i32 (%struct.device*)**, !dbg !6107
  %33 = load i32 (%struct.device*)*, i32 (%struct.device*)** %32, align 8, !dbg !6108
  store i32 (%struct.device*)* %33, i32 (%struct.device*)** %cb, align 8, !dbg !6109
  br label %if.end34, !dbg !6110

if.else33:                                        ; preds = %if.end30
  store i32 (%struct.device*)* null, i32 (%struct.device*)** %cb, align 8, !dbg !6111
  br label %if.end34

if.end34:                                         ; preds = %if.else33, %if.then32
  %34 = load i32 (%struct.device*)*, i32 (%struct.device*)** %cb, align 8, !dbg !6112
  %tobool35 = icmp ne i32 (%struct.device*)* %34, null, !dbg !6112
  br i1 %tobool35, label %if.end46, label %land.lhs.true36, !dbg !6114

land.lhs.true36:                                  ; preds = %if.end34
  %35 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6115
  %driver = getelementptr inbounds %struct.device, %struct.device* %35, i32 0, i32 6, !dbg !6116
  %36 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !6116
  %tobool37 = icmp ne %struct.device_driver* %36, null, !dbg !6115
  br i1 %tobool37, label %land.lhs.true38, label %if.end46, !dbg !6117

land.lhs.true38:                                  ; preds = %land.lhs.true36
  %37 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6118
  %driver39 = getelementptr inbounds %struct.device, %struct.device* %37, i32 0, i32 6, !dbg !6119
  %38 = load %struct.device_driver*, %struct.device_driver** %driver39, align 8, !dbg !6119
  %pm40 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %38, i32 0, i32 16, !dbg !6120
  %39 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %pm40, align 8, !dbg !6120
  %tobool41 = icmp ne %struct.dev_pm_ops* %39, null, !dbg !6118
  br i1 %tobool41, label %if.then42, label %if.end46, !dbg !6121

if.then42:                                        ; preds = %land.lhs.true38
  %40 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6122
  %driver43 = getelementptr inbounds %struct.device, %struct.device* %40, i32 0, i32 6, !dbg !6123
  %41 = load %struct.device_driver*, %struct.device_driver** %driver43, align 8, !dbg !6123
  %pm44 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %41, i32 0, i32 16, !dbg !6124
  %42 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %pm44, align 8, !dbg !6124
  %43 = bitcast %struct.dev_pm_ops* %42 to i8*, !dbg !6125
  %44 = load i64, i64* %cb_offset.addr, align 8, !dbg !6126
  %add.ptr45 = getelementptr i8, i8* %43, i64 %44, !dbg !6127
  %45 = bitcast i8* %add.ptr45 to i32 (%struct.device*)**, !dbg !6128
  %46 = load i32 (%struct.device*)*, i32 (%struct.device*)** %45, align 8, !dbg !6129
  store i32 (%struct.device*)* %46, i32 (%struct.device*)** %cb, align 8, !dbg !6130
  br label %if.end46, !dbg !6131

if.end46:                                         ; preds = %if.then42, %land.lhs.true38, %land.lhs.true36, %if.end34
  %47 = load i32 (%struct.device*)*, i32 (%struct.device*)** %cb, align 8, !dbg !6132
  ret i32 (%struct.device*)* %47, !dbg !6133
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pm_runtime_need_not_resume(%struct.device* %dev) #0 !dbg !6134 {
entry:
  %v.addr.i1.i5 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i5, metadata !2542, metadata !DIExpression()), !dbg !6135
  %v.addr.i.i6 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i6, metadata !2987, metadata !DIExpression()), !dbg !6138
  %size.addr.i.i7 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i7, metadata !2991, metadata !DIExpression()), !dbg !6140
  %v.addr.i8 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i8, metadata !2993, metadata !DIExpression()), !dbg !6141
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !2542, metadata !DIExpression()), !dbg !6142
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !2987, metadata !DIExpression()), !dbg !6145
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !2991, metadata !DIExpression()), !dbg !6147
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !2993, metadata !DIExpression()), !dbg !6148
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6149, metadata !DIExpression()), !dbg !6150
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6151
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !6152
  %usage_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 13, !dbg !6153
  store %struct.atomic_t* %usage_count, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6154
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !6154
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6155
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !6156
  %conv.i.i = trunc i64 %4 to i32, !dbg !6156
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i.i) #8, !dbg !6157
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6158
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !6158
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #8, !dbg !6158
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6159
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6160
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !6160
  %9 = load volatile i32, i32* %counter.i.i, align 4, !dbg !6160
  %cmp = icmp sle i32 %9, 1, !dbg !6161
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6162

land.rhs:                                         ; preds = %entry
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6163
  %power1 = getelementptr inbounds %struct.device, %struct.device* %10, i32 0, i32 11, !dbg !6164
  %child_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 14, !dbg !6165
  store %struct.atomic_t* %child_count, %struct.atomic_t** %v.addr.i8, align 8
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i8, align 8, !dbg !6166
  %12 = bitcast %struct.atomic_t* %11 to i8*, !dbg !6166
  store i8* %12, i8** %v.addr.i.i6, align 8
  store i64 4, i64* %size.addr.i.i7, align 8
  %13 = load i8*, i8** %v.addr.i.i6, align 8, !dbg !6167
  %14 = load i64, i64* %size.addr.i.i7, align 8, !dbg !6168
  %conv.i.i9 = trunc i64 %14 to i32, !dbg !6168
  %call.i.i10 = call zeroext i1 @kasan_check_read(i8* %13, i32 %conv.i.i9) #8, !dbg !6169
  %15 = load i8*, i8** %v.addr.i.i6, align 8, !dbg !6170
  %16 = load i64, i64* %size.addr.i.i7, align 8, !dbg !6170
  call void @kcsan_check_access(i8* %15, i64 %16, i32 4) #8, !dbg !6170
  %17 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i8, align 8, !dbg !6171
  store %struct.atomic_t* %17, %struct.atomic_t** %v.addr.i1.i5, align 8
  %18 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i5, align 8, !dbg !6172
  %counter.i.i11 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %18, i32 0, i32 0, !dbg !6172
  %19 = load volatile i32, i32* %counter.i.i11, align 4, !dbg !6172
  %cmp3 = icmp eq i32 %19, 0, !dbg !6173
  br i1 %cmp3, label %lor.end, label %lor.rhs, !dbg !6174

lor.rhs:                                          ; preds = %land.rhs
  %20 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6175
  %power4 = getelementptr inbounds %struct.device, %struct.device* %20, i32 0, i32 11, !dbg !6176
  %ignore_children = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power4, i32 0, i32 15, !dbg !6177
  %bf.load = load i16, i16* %ignore_children, align 8, !dbg !6177
  %bf.lshr = lshr i16 %bf.load, 7, !dbg !6177
  %bf.clear = and i16 %bf.lshr, 1, !dbg !6177
  %bf.cast = trunc i16 %bf.clear to i1, !dbg !6177
  br label %lor.end, !dbg !6174

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %21 = phi i1 [ true, %land.rhs ], [ %bf.cast, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %entry
  %22 = phi i1 [ false, %entry ], [ %21, %lor.end ], !dbg !6178
  ret i1 %22, !dbg !6179
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pm_runtime_force_resume(%struct.device* %dev) #0 !dbg !6180 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %callback = alloca i32 (%struct.device*)*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6181, metadata !DIExpression()), !dbg !6182
  call void @llvm.dbg.declare(metadata i32 (%struct.device*)** %callback, metadata !6183, metadata !DIExpression()), !dbg !6184
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6185, metadata !DIExpression()), !dbg !6186
  store i32 0, i32* %ret, align 4, !dbg !6186
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6187
  %call = call zeroext i1 @pm_runtime_status_suspended(%struct.device* %0) #7, !dbg !6189
  br i1 %call, label %lor.lhs.false, label %if.then, !dbg !6190

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6191
  %call1 = call zeroext i1 @pm_runtime_need_not_resume(%struct.device* %1) #7, !dbg !6192
  br i1 %call1, label %if.then, label %if.end, !dbg !6193

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %out, !dbg !6194

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6195
  call void @__update_runtime_status(%struct.device* %2, i32 0) #7, !dbg !6196
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6197
  %call2 = call i32 (%struct.device*)* @__rpm_get_callback(%struct.device* %3, i64 168) #7, !dbg !6197
  store i32 (%struct.device*)* %call2, i32 (%struct.device*)** %callback, align 8, !dbg !6198
  %4 = load i32 (%struct.device*)*, i32 (%struct.device*)** %callback, align 8, !dbg !6199
  %tobool = icmp ne i32 (%struct.device*)* %4, null, !dbg !6199
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6199

cond.true:                                        ; preds = %if.end
  %5 = load i32 (%struct.device*)*, i32 (%struct.device*)** %callback, align 8, !dbg !6200
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6201
  %call3 = call i32 %5(%struct.device* %6) #7, !dbg !6200
  br label %cond.end, !dbg !6199

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !6199

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call3, %cond.true ], [ 0, %cond.false ], !dbg !6199
  store i32 %cond, i32* %ret, align 4, !dbg !6202
  %7 = load i32, i32* %ret, align 4, !dbg !6203
  %tobool4 = icmp ne i32 %7, 0, !dbg !6203
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !6205

if.then5:                                         ; preds = %cond.end
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6206
  %call6 = call i32 @pm_runtime_set_suspended(%struct.device* %8) #7, !dbg !6208
  br label %out, !dbg !6209

if.end7:                                          ; preds = %cond.end
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6210
  call void @pm_runtime_mark_last_busy(%struct.device* %9) #7, !dbg !6211
  br label %out, !dbg !6211

out:                                              ; preds = %if.end7, %if.then5, %if.then
  call void @llvm.dbg.label(metadata !6212), !dbg !6213
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6214
  call void @pm_runtime_enable(%struct.device* %10) #7, !dbg !6215
  %11 = load i32, i32* %ret, align 4, !dbg !6216
  ret i32 %11, !dbg !6217
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_mark_last_busy(%struct.device* %dev) #0 !dbg !6218 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6219, metadata !DIExpression()), !dbg !6220
  br label %do.body, !dbg !6221

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6222

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !6224

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !6222

do.body2:                                         ; preds = %do.end
  %call = call i64 @ktime_get_mono_fast_ns() #7, !dbg !6226
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6226
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !6226
  %last_busy = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 21, !dbg !6226
  store volatile i64 %call, i64* %last_busy, align 8, !dbg !6226
  br label %do.end3, !dbg !6226

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !6222

do.end4:                                          ; preds = %do.end3
  ret void, !dbg !6228
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !6229 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6230, metadata !DIExpression()), !dbg !6232
  %0 = load i64, i64* %__edi, align 8, !dbg !6232
  store i64 %0, i64* %__edi, align 8, !dbg !6232
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6233, metadata !DIExpression()), !dbg !6232
  %1 = load i64, i64* %__esi, align 8, !dbg !6232
  store i64 %1, i64* %__esi, align 8, !dbg !6232
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6234, metadata !DIExpression()), !dbg !6232
  %2 = load i64, i64* %__edx, align 8, !dbg !6232
  store i64 %2, i64* %__edx, align 8, !dbg !6232
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6235, metadata !DIExpression()), !dbg !6232
  %3 = load i64, i64* %__ecx, align 8, !dbg !6232
  store i64 %3, i64* %__ecx, align 8, !dbg !6232
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6236, metadata !DIExpression()), !dbg !6232
  %4 = load i64, i64* %__eax, align 8, !dbg !6232
  store i64 %4, i64* %__eax, align 8, !dbg !6232
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !6232
  %6 = call i64 @llvm.read_register.i64(metadata !2132), !dbg !6232
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #6, !dbg !6232, !srcloc !6237
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !6232
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !6232
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6232
  call void @llvm.write_register.i64(metadata !2132, i64 %asmresult1), !dbg !6232
  ret void, !dbg !6238
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #5

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #0 !dbg !6239 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6240, metadata !DIExpression()), !dbg !6242
  %0 = load i64, i64* %__edi, align 8, !dbg !6242
  store i64 %0, i64* %__edi, align 8, !dbg !6242
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6243, metadata !DIExpression()), !dbg !6242
  %1 = load i64, i64* %__esi, align 8, !dbg !6242
  store i64 %1, i64* %__esi, align 8, !dbg !6242
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6244, metadata !DIExpression()), !dbg !6242
  %2 = load i64, i64* %__edx, align 8, !dbg !6242
  store i64 %2, i64* %__edx, align 8, !dbg !6242
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6245, metadata !DIExpression()), !dbg !6242
  %3 = load i64, i64* %__ecx, align 8, !dbg !6242
  store i64 %3, i64* %__ecx, align 8, !dbg !6242
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6246, metadata !DIExpression()), !dbg !6242
  %4 = load i64, i64* %__eax, align 8, !dbg !6242
  store i64 %4, i64* %__eax, align 8, !dbg !6242
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !6242
  %6 = call i64 @llvm.read_register.i64(metadata !2132), !dbg !6242
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #6, !dbg !6242, !srcloc !6247
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !6242
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !6242
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6242
  call void @llvm.write_register.i64(metadata !2132, i64 %asmresult1), !dbg !6242
  ret void, !dbg !6248
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !6249 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !6250, metadata !DIExpression()), !dbg !6252
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6253, metadata !DIExpression()), !dbg !6252
  %0 = load i64, i64* %__edi, align 8, !dbg !6252
  store i64 %0, i64* %__edi, align 8, !dbg !6252
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6254, metadata !DIExpression()), !dbg !6252
  %1 = load i64, i64* %__esi, align 8, !dbg !6252
  store i64 %1, i64* %__esi, align 8, !dbg !6252
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6255, metadata !DIExpression()), !dbg !6252
  %2 = load i64, i64* %__edx, align 8, !dbg !6252
  store i64 %2, i64* %__edx, align 8, !dbg !6252
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6256, metadata !DIExpression()), !dbg !6252
  %3 = load i64, i64* %__ecx, align 8, !dbg !6252
  store i64 %3, i64* %__ecx, align 8, !dbg !6252
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6257, metadata !DIExpression()), !dbg !6252
  %4 = load i64, i64* %__eax, align 8, !dbg !6252
  store i64 %4, i64* %__eax, align 8, !dbg !6252
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !6252
  %6 = call i64 @llvm.read_register.i64(metadata !2132), !dbg !6258
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #6, !dbg !6258, !srcloc !6261
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !6258
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !6258
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6258
  call void @llvm.write_register.i64(metadata !2132, i64 %asmresult1), !dbg !6258
  %8 = load i64, i64* %__eax, align 8, !dbg !6258
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !6262, metadata !DIExpression()), !dbg !6264
  store i64 -1, i64* %__mask, align 8, !dbg !6264
  %9 = load i64, i64* %__mask, align 8, !dbg !6264
  store i64 %9, i64* %tmp, align 8, !dbg !6264
  %10 = load i64, i64* %tmp, align 8, !dbg !6264
  %and = and i64 %8, %10, !dbg !6258
  store i64 %and, i64* %__ret, align 8, !dbg !6258
  %11 = load i64, i64* %__ret, align 8, !dbg !6252
  store i64 %11, i64* %tmp2, align 8, !dbg !6265
  %12 = load i64, i64* %tmp2, align 8, !dbg !6252
  ret i64 %12, !dbg !6266
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_rpm_suspend_rcuidle(%struct.device* %dev, i32 %flags) #0 !dbg !6267 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %flags.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6268, metadata !DIExpression()), !dbg !6269
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6270, metadata !DIExpression()), !dbg !6269
  ret void, !dbg !6269
}

; Function Attrs: noredzone
declare dso_local void @hrtimer_start_range_ns(%struct.hrtimer*, i64, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ns_to_ktime(i64 %ns) #0 !dbg !6271 {
entry:
  %ns.addr = alloca i64, align 8
  store i64 %ns, i64* %ns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ns.addr, metadata !6274, metadata !DIExpression()), !dbg !6275
  %0 = load i64, i64* %ns.addr, align 8, !dbg !6276
  ret i64 %0, !dbg !6277
}

; Function Attrs: noredzone
declare dso_local i32 @autoremove_wake_function(%struct.wait_queue_entry*, i32, i32, i8*) #2

; Function Attrs: noredzone
declare dso_local void @prepare_to_wait(%struct.wait_queue_head*, %struct.wait_queue_entry*, i32) #2

; Function Attrs: noredzone
declare dso_local void @schedule() #2

; Function Attrs: noredzone
declare dso_local void @finish_wait(%struct.wait_queue_head*, %struct.wait_queue_entry*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #0 !dbg !6278 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !6283, metadata !DIExpression()), !dbg !6284
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !6285, metadata !DIExpression()), !dbg !6286
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !6287
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !6288
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #7, !dbg !6289
  ret i1 %call, !dbg !6290
}

; Function Attrs: noredzone
declare dso_local void @dev_pm_enable_wake_irq_check(%struct.device*, i1 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rpm_callback(i32 (%struct.device*)* %cb, %struct.device* %dev) #0 !dbg !6291 {
entry:
  %retval = alloca i32, align 4
  %cb.addr = alloca i32 (%struct.device*)*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %retval1 = alloca i32, align 4
  %noio_flag = alloca i32, align 4
  store i32 (%struct.device*)* %cb, i32 (%struct.device*)** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.device*)** %cb.addr, metadata !6294, metadata !DIExpression()), !dbg !6295
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6296, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !6298, metadata !DIExpression()), !dbg !6299
  %0 = load i32 (%struct.device*)*, i32 (%struct.device*)** %cb.addr, align 8, !dbg !6300
  %tobool = icmp ne i32 (%struct.device*)* %0, null, !dbg !6300
  br i1 %tobool, label %if.end, label %if.then, !dbg !6302

if.then:                                          ; preds = %entry
  store i32 -38, i32* %retval, align 4, !dbg !6303
  br label %return, !dbg !6303

if.end:                                           ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6304
  %power = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !6306
  %memalloc_noio = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 15, !dbg !6307
  %bf.load = load i16, i16* %memalloc_noio, align 8, !dbg !6307
  %bf.lshr = lshr i16 %bf.load, 12, !dbg !6307
  %bf.clear = and i16 %bf.lshr, 1, !dbg !6307
  %bf.cast = zext i16 %bf.clear to i32, !dbg !6307
  %tobool2 = icmp ne i32 %bf.cast, 0, !dbg !6304
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !6308

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %noio_flag, metadata !6309, metadata !DIExpression()), !dbg !6311
  %call = call i32 @memalloc_noio_save() #7, !dbg !6312
  store i32 %call, i32* %noio_flag, align 4, !dbg !6313
  %2 = load i32 (%struct.device*)*, i32 (%struct.device*)** %cb.addr, align 8, !dbg !6314
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6315
  %call4 = call i32 @__rpm_callback(i32 (%struct.device*)* %2, %struct.device* %3) #7, !dbg !6316
  store i32 %call4, i32* %retval1, align 4, !dbg !6317
  %4 = load i32, i32* %noio_flag, align 4, !dbg !6318
  call void @memalloc_noio_restore(i32 %4) #7, !dbg !6319
  br label %if.end6, !dbg !6320

if.else:                                          ; preds = %if.end
  %5 = load i32 (%struct.device*)*, i32 (%struct.device*)** %cb.addr, align 8, !dbg !6321
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6323
  %call5 = call i32 @__rpm_callback(i32 (%struct.device*)* %5, %struct.device* %6) #7, !dbg !6324
  store i32 %call5, i32* %retval1, align 4, !dbg !6325
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then3
  %7 = load i32, i32* %retval1, align 4, !dbg !6326
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6327
  %power7 = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 11, !dbg !6328
  %runtime_error = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power7, i32 0, i32 19, !dbg !6329
  store i32 %7, i32* %runtime_error, align 8, !dbg !6330
  %9 = load i32, i32* %retval1, align 4, !dbg !6331
  %cmp = icmp ne i32 %9, -13, !dbg !6332
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6331

cond.true:                                        ; preds = %if.end6
  %10 = load i32, i32* %retval1, align 4, !dbg !6333
  br label %cond.end, !dbg !6331

cond.false:                                       ; preds = %if.end6
  br label %cond.end, !dbg !6331

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ -5, %cond.false ], !dbg !6331
  store i32 %cond, i32* %retval, align 4, !dbg !6334
  br label %return, !dbg !6334

return:                                           ; preds = %cond.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !6335
  ret i32 %11, !dbg !6335
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_deactivate_timer(%struct.device* %dev) #0 !dbg !6336 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6337, metadata !DIExpression()), !dbg !6338
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6339
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !6341
  %timer_expires = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 9, !dbg !6342
  %1 = load i64, i64* %timer_expires, align 8, !dbg !6342
  %cmp = icmp ugt i64 %1, 0, !dbg !6343
  br i1 %cmp, label %if.then, label %if.end, !dbg !6344

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6345
  %power1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 11, !dbg !6347
  %suspend_timer = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 8, !dbg !6348
  %call = call i32 @hrtimer_try_to_cancel(%struct.hrtimer* %suspend_timer) #7, !dbg !6349
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6350
  %power2 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 11, !dbg !6351
  %timer_expires3 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power2, i32 0, i32 9, !dbg !6352
  store i64 0, i64* %timer_expires3, align 8, !dbg !6353
  br label %if.end, !dbg !6354

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6355
}

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_rpm_return_int_rcuidle(%struct.device* %dev, i64 %ip, i32 %ret) #0 !dbg !6356 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %ip.addr = alloca i64, align 8
  %ret.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6359, metadata !DIExpression()), !dbg !6360
  store i64 %ip, i64* %ip.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ip.addr, metadata !6361, metadata !DIExpression()), !dbg !6360
  store i32 %ret, i32* %ret.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ret.addr, metadata !6362, metadata !DIExpression()), !dbg !6360
  ret void, !dbg !6360
}

; Function Attrs: noredzone
declare dso_local void @dev_pm_disable_wake_irq_check(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @memalloc_noio_save() #0 !dbg !6363 {
entry:
  %pscr_ret__.i4 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i4, metadata !2488, metadata !DIExpression()), !dbg !6367
  %__vpp_verify.i5 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i5, metadata !2496, metadata !DIExpression()), !dbg !6369
  %pfo_val__.i6 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i6, metadata !2499, metadata !DIExpression()), !dbg !6370
  %tmp.i7 = alloca %struct.task_struct*, align 8
  %tmp1.i8 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !2488, metadata !DIExpression()), !dbg !6371
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !2496, metadata !DIExpression()), !dbg !6373
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !2499, metadata !DIExpression()), !dbg !6374
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %flags = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !6375, metadata !DIExpression()), !dbg !6376
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !6373
  %0 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !6373
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #9, !dbg !6374, !srcloc !2712
  store i64 %1, i64* %pfo_val__.i, align 8, !dbg !6374
  %2 = load i64, i64* %pfo_val__.i, align 8, !dbg !6374
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !6374
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i, align 8, !dbg !6374
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !6374
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !6371
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !6371
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i, align 8, !dbg !6371
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !6371
  %flags1 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %6, i32 0, i32 4, !dbg !6377
  %7 = load i32, i32* %flags1, align 4, !dbg !6377
  %and = and i32 %7, 524288, !dbg !6378
  store i32 %and, i32* %flags, align 4, !dbg !6376
  store i8* null, i8** %__vpp_verify.i5, align 8, !dbg !6369
  %8 = load i8*, i8** %__vpp_verify.i5, align 8, !dbg !6369
  %9 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #9, !dbg !6370, !srcloc !2712
  store i64 %9, i64* %pfo_val__.i6, align 8, !dbg !6370
  %10 = load i64, i64* %pfo_val__.i6, align 8, !dbg !6370
  %11 = inttoptr i64 %10 to %struct.task_struct*, !dbg !6370
  store %struct.task_struct* %11, %struct.task_struct** %tmp.i7, align 8, !dbg !6370
  %12 = load %struct.task_struct*, %struct.task_struct** %tmp.i7, align 8, !dbg !6370
  store %struct.task_struct* %12, %struct.task_struct** %pscr_ret__.i4, align 8, !dbg !6367
  %13 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i4, align 8, !dbg !6367
  store %struct.task_struct* %13, %struct.task_struct** %tmp1.i8, align 8, !dbg !6367
  %14 = load %struct.task_struct*, %struct.task_struct** %tmp1.i8, align 8, !dbg !6367
  %flags3 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %14, i32 0, i32 4, !dbg !6379
  %15 = load i32, i32* %flags3, align 4, !dbg !6380
  %or = or i32 %15, 524288, !dbg !6380
  store i32 %or, i32* %flags3, align 4, !dbg !6380
  %16 = load i32, i32* %flags, align 4, !dbg !6381
  ret i32 %16, !dbg !6382
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__rpm_callback(i32 (%struct.device*)* %cb, %struct.device* %dev) #0 !dbg !6383 {
entry:
  %lock.addr.i49 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i49, metadata !2290, metadata !DIExpression()), !dbg !6384
  %lock.addr.i47 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i47, metadata !2476, metadata !DIExpression()), !dbg !6388
  %lock.addr.i45 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i45, metadata !2281, metadata !DIExpression()), !dbg !6391
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !2484, metadata !DIExpression()), !dbg !6395
  %cb.addr = alloca i32 (%struct.device*)*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %retval1 = alloca i32, align 4
  %idx = alloca i32, align 4
  %use_links = alloca i8, align 1
  store i32 (%struct.device*)* %cb, i32 (%struct.device*)** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.device*)** %cb.addr, metadata !6398, metadata !DIExpression()), !dbg !6399
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6400, metadata !DIExpression()), !dbg !6401
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !6402, metadata !DIExpression()), !dbg !6403
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !6404, metadata !DIExpression()), !dbg !6405
  call void @llvm.dbg.declare(metadata i8* %use_links, metadata !6406, metadata !DIExpression()), !dbg !6407
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6408
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !6409
  %links_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 16, !dbg !6410
  %1 = load i32, i32* %links_count, align 4, !dbg !6410
  %cmp = icmp ugt i32 %1, 0, !dbg !6411
  %frombool = zext i1 %cmp to i8, !dbg !6407
  store i8 %frombool, i8* %use_links, align 1, !dbg !6407
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6412
  %power2 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 11, !dbg !6413
  %irq_safe = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power2, i32 0, i32 15, !dbg !6414
  %bf.load = load i16, i16* %irq_safe, align 8, !dbg !6414
  %bf.lshr = lshr i16 %bf.load, 9, !dbg !6414
  %bf.clear = and i16 %bf.lshr, 1, !dbg !6414
  %bf.cast = zext i16 %bf.clear to i32, !dbg !6414
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6412
  br i1 %tobool, label %if.then, label %if.else, !dbg !6415

if.then:                                          ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6416
  %power3 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 11, !dbg !6417
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power3, i32 0, i32 3, !dbg !6418
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6419, !srcloc !2729
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6420
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !6420
  %rlock.i = bitcast %union.anon* %5 to %struct.raw_spinlock*, !dbg !6420
  br label %if.end14, !dbg !6421

if.else:                                          ; preds = %entry
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6422
  %power4 = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 11, !dbg !6423
  %lock5 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power4, i32 0, i32 3, !dbg !6424
  store %struct.spinlock* %lock5, %struct.spinlock** %lock.addr.i45, align 8
  call void @arch_local_irq_enable() #8, !dbg !6425
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6426, !srcloc !2330
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i45, align 8, !dbg !6427
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !6427
  %rlock.i46 = bitcast %union.anon* %8 to %struct.raw_spinlock*, !dbg !6427
  %9 = load i8, i8* %use_links, align 1, !dbg !6428
  %tobool6 = trunc i8 %9 to i1, !dbg !6428
  br i1 %tobool6, label %land.lhs.true, label %if.end13, !dbg !6430

land.lhs.true:                                    ; preds = %if.else
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6431
  %power7 = getelementptr inbounds %struct.device, %struct.device* %10, i32 0, i32 11, !dbg !6432
  %runtime_status = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power7, i32 0, i32 18, !dbg !6433
  %11 = load i32, i32* %runtime_status, align 4, !dbg !6433
  %cmp8 = icmp eq i32 %11, 1, !dbg !6434
  br i1 %cmp8, label %if.then9, label %if.end13, !dbg !6435

if.then9:                                         ; preds = %land.lhs.true
  %call = call i32 @device_links_read_lock() #7, !dbg !6436
  store i32 %call, i32* %idx, align 4, !dbg !6438
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6439
  %call10 = call i32 @rpm_get_suppliers(%struct.device* %12) #7, !dbg !6440
  store i32 %call10, i32* %retval1, align 4, !dbg !6441
  %13 = load i32, i32* %retval1, align 4, !dbg !6442
  %tobool11 = icmp ne i32 %13, 0, !dbg !6442
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !6444

if.then12:                                        ; preds = %if.then9
  br label %fail, !dbg !6445

if.end:                                           ; preds = %if.then9
  %14 = load i32, i32* %idx, align 4, !dbg !6446
  call void @device_links_read_unlock(i32 %14) #7, !dbg !6447
  br label %if.end13, !dbg !6448

if.end13:                                         ; preds = %if.end, %land.lhs.true, %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then
  %15 = load i32 (%struct.device*)*, i32 (%struct.device*)** %cb.addr, align 8, !dbg !6449
  %16 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6450
  %call15 = call i32 %15(%struct.device* %16) #7, !dbg !6449
  store i32 %call15, i32* %retval1, align 4, !dbg !6451
  %17 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6452
  %power16 = getelementptr inbounds %struct.device, %struct.device* %17, i32 0, i32 11, !dbg !6453
  %irq_safe17 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power16, i32 0, i32 15, !dbg !6454
  %bf.load18 = load i16, i16* %irq_safe17, align 8, !dbg !6454
  %bf.lshr19 = lshr i16 %bf.load18, 9, !dbg !6454
  %bf.clear20 = and i16 %bf.lshr19, 1, !dbg !6454
  %bf.cast21 = zext i16 %bf.clear20 to i32, !dbg !6454
  %tobool22 = icmp ne i32 %bf.cast21, 0, !dbg !6452
  br i1 %tobool22, label %if.then23, label %if.else26, !dbg !6455

if.then23:                                        ; preds = %if.end14
  %18 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6456
  %power24 = getelementptr inbounds %struct.device, %struct.device* %18, i32 0, i32 11, !dbg !6457
  %lock25 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power24, i32 0, i32 3, !dbg !6458
  store %struct.spinlock* %lock25, %struct.spinlock** %lock.addr.i47, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6459, !srcloc !2746
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i47, align 8, !dbg !6460
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !6460
  %rlock.i48 = bitcast %union.anon* %20 to %struct.raw_spinlock*, !dbg !6460
  br label %if.end44, !dbg !6461

if.else26:                                        ; preds = %if.end14
  %21 = load i8, i8* %use_links, align 1, !dbg !6462
  %tobool27 = trunc i8 %21 to i1, !dbg !6462
  br i1 %tobool27, label %land.lhs.true28, label %if.end41, !dbg !6464

land.lhs.true28:                                  ; preds = %if.else26
  %22 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6465
  %power29 = getelementptr inbounds %struct.device, %struct.device* %22, i32 0, i32 11, !dbg !6466
  %runtime_status30 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power29, i32 0, i32 18, !dbg !6467
  %23 = load i32, i32* %runtime_status30, align 4, !dbg !6467
  %cmp31 = icmp eq i32 %23, 3, !dbg !6468
  br i1 %cmp31, label %land.lhs.true32, label %lor.lhs.false, !dbg !6469

land.lhs.true32:                                  ; preds = %land.lhs.true28
  %24 = load i32, i32* %retval1, align 4, !dbg !6470
  %tobool33 = icmp ne i32 %24, 0, !dbg !6470
  br i1 %tobool33, label %lor.lhs.false, label %if.then39, !dbg !6471

lor.lhs.false:                                    ; preds = %land.lhs.true32, %land.lhs.true28
  %25 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6472
  %power34 = getelementptr inbounds %struct.device, %struct.device* %25, i32 0, i32 11, !dbg !6473
  %runtime_status35 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power34, i32 0, i32 18, !dbg !6474
  %26 = load i32, i32* %runtime_status35, align 4, !dbg !6474
  %cmp36 = icmp eq i32 %26, 1, !dbg !6475
  br i1 %cmp36, label %land.lhs.true37, label %if.end41, !dbg !6476

land.lhs.true37:                                  ; preds = %lor.lhs.false
  %27 = load i32, i32* %retval1, align 4, !dbg !6477
  %tobool38 = icmp ne i32 %27, 0, !dbg !6477
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !6478

if.then39:                                        ; preds = %land.lhs.true37, %land.lhs.true32
  %call40 = call i32 @device_links_read_lock() #7, !dbg !6479
  store i32 %call40, i32* %idx, align 4, !dbg !6481
  br label %fail, !dbg !6482

fail:                                             ; preds = %if.then39, %if.then12
  call void @llvm.dbg.label(metadata !6483), !dbg !6484
  %28 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6485
  call void @rpm_put_suppliers(%struct.device* %28) #7, !dbg !6486
  %29 = load i32, i32* %idx, align 4, !dbg !6487
  call void @device_links_read_unlock(i32 %29) #7, !dbg !6488
  br label %if.end41, !dbg !6489

if.end41:                                         ; preds = %fail, %land.lhs.true37, %lor.lhs.false, %if.else26
  %30 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6490
  %power42 = getelementptr inbounds %struct.device, %struct.device* %30, i32 0, i32 11, !dbg !6491
  %lock43 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power42, i32 0, i32 3, !dbg !6492
  store %struct.spinlock* %lock43, %struct.spinlock** %lock.addr.i49, align 8
  call void @arch_local_irq_disable() #8, !dbg !6493
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6494, !srcloc !2310
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i49, align 8, !dbg !6495
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !6495
  %rlock.i50 = bitcast %union.anon* %32 to %struct.raw_spinlock*, !dbg !6495
  br label %if.end44

if.end44:                                         ; preds = %if.end41, %if.then23
  %33 = load i32, i32* %retval1, align 4, !dbg !6496
  ret i32 %33, !dbg !6497
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @memalloc_noio_restore(i32 %flags) #0 !dbg !6498 {
entry:
  %pscr_ret__.i4 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i4, metadata !2488, metadata !DIExpression()), !dbg !6501
  %__vpp_verify.i5 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i5, metadata !2496, metadata !DIExpression()), !dbg !6503
  %pfo_val__.i6 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i6, metadata !2499, metadata !DIExpression()), !dbg !6504
  %tmp.i7 = alloca %struct.task_struct*, align 8
  %tmp1.i8 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !2488, metadata !DIExpression()), !dbg !6505
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !2496, metadata !DIExpression()), !dbg !6507
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !2499, metadata !DIExpression()), !dbg !6508
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %flags.addr = alloca i32, align 4
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6509, metadata !DIExpression()), !dbg !6510
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !6507
  %0 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !6507
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #9, !dbg !6508, !srcloc !2712
  store i64 %1, i64* %pfo_val__.i, align 8, !dbg !6508
  %2 = load i64, i64* %pfo_val__.i, align 8, !dbg !6508
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !6508
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i, align 8, !dbg !6508
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !6508
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !6505
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !6505
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i, align 8, !dbg !6505
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !6505
  %flags1 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %6, i32 0, i32 4, !dbg !6511
  %7 = load i32, i32* %flags1, align 4, !dbg !6511
  %and = and i32 %7, -524289, !dbg !6512
  %8 = load i32, i32* %flags.addr, align 4, !dbg !6513
  %or = or i32 %and, %8, !dbg !6514
  store i8* null, i8** %__vpp_verify.i5, align 8, !dbg !6503
  %9 = load i8*, i8** %__vpp_verify.i5, align 8, !dbg !6503
  %10 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #9, !dbg !6504, !srcloc !2712
  store i64 %10, i64* %pfo_val__.i6, align 8, !dbg !6504
  %11 = load i64, i64* %pfo_val__.i6, align 8, !dbg !6504
  %12 = inttoptr i64 %11 to %struct.task_struct*, !dbg !6504
  store %struct.task_struct* %12, %struct.task_struct** %tmp.i7, align 8, !dbg !6504
  %13 = load %struct.task_struct*, %struct.task_struct** %tmp.i7, align 8, !dbg !6504
  store %struct.task_struct* %13, %struct.task_struct** %pscr_ret__.i4, align 8, !dbg !6501
  %14 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i4, align 8, !dbg !6501
  store %struct.task_struct* %14, %struct.task_struct** %tmp1.i8, align 8, !dbg !6501
  %15 = load %struct.task_struct*, %struct.task_struct** %tmp1.i8, align 8, !dbg !6501
  %flags3 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %15, i32 0, i32 4, !dbg !6515
  store i32 %or, i32* %flags3, align 4, !dbg !6516
  ret void, !dbg !6517
}

; Function Attrs: noredzone
declare dso_local i32 @hrtimer_try_to_cancel(%struct.hrtimer*) #2

; Function Attrs: noredzone
declare dso_local i32 @__dev_pm_qos_resume_latency(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !6518 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !6521, metadata !DIExpression()), !dbg !6522
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6523, metadata !DIExpression()), !dbg !6525
  %0 = load i64, i64* %__edi, align 8, !dbg !6525
  store i64 %0, i64* %__edi, align 8, !dbg !6525
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6526, metadata !DIExpression()), !dbg !6525
  %1 = load i64, i64* %__esi, align 8, !dbg !6525
  store i64 %1, i64* %__esi, align 8, !dbg !6525
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6527, metadata !DIExpression()), !dbg !6525
  %2 = load i64, i64* %__edx, align 8, !dbg !6525
  store i64 %2, i64* %__edx, align 8, !dbg !6525
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6528, metadata !DIExpression()), !dbg !6525
  %3 = load i64, i64* %__ecx, align 8, !dbg !6525
  store i64 %3, i64* %__ecx, align 8, !dbg !6525
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6529, metadata !DIExpression()), !dbg !6525
  %4 = load i64, i64* %__eax, align 8, !dbg !6525
  store i64 %4, i64* %__eax, align 8, !dbg !6525
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !6525
  %6 = call i64 @llvm.read_register.i64(metadata !2132), !dbg !6525
  %7 = load i64, i64* %f.addr, align 8, !dbg !6525
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #6, !dbg !6525, !srcloc !6530
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !6525
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !6525
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6525
  call void @llvm.write_register.i64(metadata !2132, i64 %asmresult1), !dbg !6525
  ret void, !dbg !6531
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !6532 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !6536, metadata !DIExpression()), !dbg !6537
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !6538, metadata !DIExpression()), !dbg !6539
  ret i1 true, !dbg !6540
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !6541 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6545, metadata !DIExpression()), !dbg !6546
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6547, metadata !DIExpression()), !dbg !6548
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6549, metadata !DIExpression()), !dbg !6550
  ret void, !dbg !6551
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_rpm_idle_rcuidle(%struct.device* %dev, i32 %flags) #0 !dbg !6552 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %flags.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6553, metadata !DIExpression()), !dbg !6554
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6555, metadata !DIExpression()), !dbg !6554
  ret void, !dbg !6554
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_rpm_resume_rcuidle(%struct.device* %dev, i32 %flags) #0 !dbg !6556 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %flags.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6557, metadata !DIExpression()), !dbg !6558
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6559, metadata !DIExpression()), !dbg !6558
  ret void, !dbg !6558
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !6560 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !6565, metadata !DIExpression()), !dbg !6566
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !6567
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !6568
  %1 = load i8*, i8** %name, align 8, !dbg !6568
  ret i8* %1, !dbg !6569
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @cancel_work_sync(%struct.work_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !6570 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !6571, metadata !DIExpression()), !dbg !6572
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !6573, metadata !DIExpression()), !dbg !6574
  ret i1 true, !dbg !6575
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_inc(%struct.refcount_struct* %r, i32* %oldp) #0 !dbg !6576 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !6579, metadata !DIExpression()), !dbg !6580
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !6581, metadata !DIExpression()), !dbg !6582
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !6583
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !6584
  call void @__refcount_add(i32 1, %struct.refcount_struct* %0, i32* %1) #7, !dbg !6585
  ret void, !dbg !6586
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_add(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #0 !dbg !6587 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !6590, metadata !DIExpression()), !dbg !6594
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !6598, metadata !DIExpression()), !dbg !6599
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !6600, metadata !DIExpression()), !dbg !6602
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !2564, metadata !DIExpression()), !dbg !6603
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !2574, metadata !DIExpression()), !dbg !6605
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !6606, metadata !DIExpression()), !dbg !6607
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !6608, metadata !DIExpression()), !dbg !6609
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !6610, metadata !DIExpression()), !dbg !6611
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !6612, metadata !DIExpression()), !dbg !6613
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !6614, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.declare(metadata i32* %old, metadata !6616, metadata !DIExpression()), !dbg !6617
  %0 = load i32, i32* %i.addr, align 4, !dbg !6618
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !6619
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !6620
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6621
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !6621
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6622
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !6623
  %conv.i.i = trunc i64 %5 to i32, !dbg !6623
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #8, !dbg !6624
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6625
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !6625
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #8, !dbg !6625
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !6626
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6627
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !6602
  store i32 %10, i32* %__ret.i.i, align 4, !dbg !6602
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !6602
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6602
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !6602
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #6, !dbg !6602, !srcloc !6628
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !6602
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !6602
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !6602
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !6602
  store i32 %15, i32* %old, align 4, !dbg !6617
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !6629
  %tobool = icmp ne i32* %16, null, !dbg !6629
  br i1 %tobool, label %if.then, label %if.end, !dbg !6631

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !6632
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !6633
  store i32 %17, i32* %18, align 4, !dbg !6634
  br label %if.end, !dbg !6635

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !6636
  %tobool1 = icmp ne i32 %19, 0, !dbg !6636
  %lnot = xor i1 %tobool1, true, !dbg !6636
  %lnot2 = xor i1 %lnot, true, !dbg !6636
  %lnot3 = xor i1 %lnot2, true, !dbg !6636
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !6636
  %conv = sext i32 %lnot.ext to i64, !dbg !6636
  %tobool4 = icmp ne i64 %conv, 0, !dbg !6636
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !6638

if.then5:                                         ; preds = %if.end
  %20 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !6639
  call void @refcount_warn_saturate(%struct.refcount_struct* %20, i32 2) #7, !dbg !6640
  br label %if.end17, !dbg !6640

if.else:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !6641
  %cmp = icmp slt i32 %21, 0, !dbg !6641
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6641

lor.rhs:                                          ; preds = %if.else
  %22 = load i32, i32* %old, align 4, !dbg !6641
  %23 = load i32, i32* %i.addr, align 4, !dbg !6641
  %add = add i32 %22, %23, !dbg !6641
  %cmp7 = icmp slt i32 %add, 0, !dbg !6641
  br label %lor.end, !dbg !6641

lor.end:                                          ; preds = %lor.rhs, %if.else
  %24 = phi i1 [ true, %if.else ], [ %cmp7, %lor.rhs ]
  %lnot9 = xor i1 %24, true, !dbg !6641
  %lnot11 = xor i1 %lnot9, true, !dbg !6641
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !6641
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !6641
  %tobool14 = icmp ne i64 %conv13, 0, !dbg !6641
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !6643

if.then15:                                        ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !6644
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 1) #7, !dbg !6645
  br label %if.end16, !dbg !6645

if.end16:                                         ; preds = %if.then15, %lor.end
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then5
  ret void, !dbg !6646
}

; Function Attrs: noredzone
declare dso_local void @refcount_warn_saturate(%struct.refcount_struct*, i32) #2

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind readonly }
attributes #6 = { nounwind }
attributes #7 = { noredzone }
attributes #8 = { noredzone nounwind }
attributes #9 = { nounwind readnone }
attributes #10 = { cold noredzone }

!llvm.dbg.cu = !{!2025}
!llvm.named.register.rsp = !{!2132}
!llvm.module.flags = !{!2133, !2134, !2135, !2136}
!llvm.ident = !{!2137}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "dev_hotplug_mutex", scope: !2, file: !3, line: 219, type: !294, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "pm_runtime_set_memalloc_noio", scope: !3, file: !3, line: 217, type: !4, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!3 = !DIFile(filename: "drivers/base/power/runtime.c", directory: "/home/lizy2001/genbc/linux")
!4 = !DISubroutineType(types: !5)
!5 = !{null, !6, !915}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !8, line: 461, size: 5568, elements: !9)
!8 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!9 = !{!10, !1509, !1510, !1729, !1730, !1744, !1745, !1746, !1747, !1748, !1749, !1764, !1962, !1973, !1976, !1977, !1981, !1983, !1984, !1985, !1989, !1995, !1996, !1999, !2003, !2006, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2018, !2021, !2022, !2023, !2024}
!10 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7, file: !8, line: 462, baseType: !11, size: 512)
!11 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !12, line: 64, size: 512, elements: !13)
!12 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !18, !25, !27, !88, !1345, !1499, !1504, !1505, !1506, !1507, !1508}
!14 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11, file: !12, line: 65, baseType: !15, size: 64)
!15 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64)
!16 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17)
!17 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !11, file: !12, line: 66, baseType: !19, size: 128, offset: 64)
!19 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !20, line: 178, size: 128, elements: !21)
!20 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !24}
!22 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !19, file: !20, line: 179, baseType: !23, size: 64)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19, size: 64)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !19, file: !20, line: 179, baseType: !23, size: 64, offset: 64)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !11, file: !12, line: 67, baseType: !26, size: 64, offset: 192)
!26 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !11, file: !12, line: 68, baseType: !28, size: 64, offset: 256)
!28 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !29, size: 64)
!29 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !12, line: 192, size: 704, elements: !30)
!30 = !{!31, !32, !48, !49}
!31 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !29, file: !12, line: 193, baseType: !19, size: 128)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !29, file: !12, line: 194, baseType: !33, offset: 128)
!33 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !34, line: 83, baseType: !35)
!34 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!35 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !34, line: 71, elements: !36)
!36 = !{!37}
!37 = !DIDerivedType(tag: DW_TAG_member, scope: !35, file: !34, line: 72, baseType: !38)
!38 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !35, file: !34, line: 72, elements: !39)
!39 = !{!40}
!40 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !38, file: !34, line: 73, baseType: !41)
!41 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !34, line: 20, elements: !42)
!42 = !{!43}
!43 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !41, file: !34, line: 21, baseType: !44)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !45, line: 25, baseType: !46)
!45 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!46 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !45, line: 25, elements: !47)
!47 = !{}
!48 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !29, file: !12, line: 195, baseType: !11, size: 512, offset: 128)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !29, file: !12, line: 196, baseType: !50, size: 64, offset: 640)
!50 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !51, size: 64)
!51 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !52)
!52 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !12, line: 156, size: 192, elements: !53)
!53 = !{!54, !60, !65}
!54 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !52, file: !12, line: 157, baseType: !55, size: 64)
!55 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !56)
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !57, size: 64)
!57 = !DISubroutineType(types: !58)
!58 = !{!59, !28, !26}
!59 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !52, file: !12, line: 158, baseType: !61, size: 64, offset: 64)
!61 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !62)
!62 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !63, size: 64)
!63 = !DISubroutineType(types: !64)
!64 = !{!15, !28, !26}
!65 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !52, file: !12, line: 159, baseType: !66, size: 64, offset: 128)
!66 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !67)
!67 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !68, size: 64)
!68 = !DISubroutineType(types: !69)
!69 = !{!59, !28, !26, !70}
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64)
!71 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !12, line: 148, size: 20736, elements: !72)
!72 = !{!73, !78, !82, !83, !87}
!73 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !71, file: !12, line: 149, baseType: !74, size: 192)
!74 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 192, elements: !76)
!75 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64)
!76 = !{!77}
!77 = !DISubrange(count: 3)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !71, file: !12, line: 150, baseType: !79, size: 4096, offset: 192)
!79 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 4096, elements: !80)
!80 = !{!81}
!81 = !DISubrange(count: 64)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !71, file: !12, line: 151, baseType: !59, size: 32, offset: 4288)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !71, file: !12, line: 152, baseType: !84, size: 16384, offset: 4320)
!84 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 16384, elements: !85)
!85 = !{!86}
!86 = !DISubrange(count: 2048)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !71, file: !12, line: 153, baseType: !59, size: 32, offset: 20704)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !11, file: !12, line: 69, baseType: !89, size: 64, offset: 320)
!89 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !90, size: 64)
!90 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !12, line: 138, size: 448, elements: !91)
!91 = !{!92, !96, !126, !128, !1285, !1324, !1328}
!92 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !90, file: !12, line: 139, baseType: !93, size: 64)
!93 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !94, size: 64)
!94 = !DISubroutineType(types: !95)
!95 = !{null, !26}
!96 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !90, file: !12, line: 140, baseType: !97, size: 64, offset: 64)
!97 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 64)
!98 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !99)
!99 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !100, line: 230, size: 128, elements: !101)
!100 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!101 = !{!102, !118}
!102 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !99, file: !100, line: 231, baseType: !103, size: 64)
!103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 64)
!104 = !DISubroutineType(types: !105)
!105 = !{!106, !26, !111, !75}
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !20, line: 60, baseType: !107)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !108, line: 73, baseType: !109)
!108 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !108, line: 15, baseType: !110)
!110 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 64)
!112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !100, line: 30, size: 128, elements: !113)
!113 = !{!114, !115}
!114 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !112, file: !100, line: 31, baseType: !15, size: 64)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !112, file: !100, line: 32, baseType: !116, size: 16, offset: 64)
!116 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !20, line: 19, baseType: !117)
!117 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !99, file: !100, line: 232, baseType: !119, size: 64, offset: 64)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64)
!120 = !DISubroutineType(types: !121)
!121 = !{!106, !26, !111, !15, !122}
!122 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !20, line: 55, baseType: !123)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !108, line: 72, baseType: !124)
!124 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !108, line: 16, baseType: !125)
!125 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !90, file: !12, line: 141, baseType: !127, size: 64, offset: 128)
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 64)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !90, file: !12, line: 142, baseType: !129, size: 64, offset: 192)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 64)
!131 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !132)
!132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !100, line: 84, size: 320, elements: !133)
!133 = !{!134, !135, !139, !1282, !1283}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !132, file: !100, line: 85, baseType: !15, size: 64)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !132, file: !100, line: 86, baseType: !136, size: 64, offset: 64)
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 64)
!137 = !DISubroutineType(types: !138)
!138 = !{!116, !26, !111, !59}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !132, file: !100, line: 88, baseType: !140, size: 64, offset: 128)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!141 = !DISubroutineType(types: !142)
!142 = !{!116, !26, !143, !59}
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64)
!144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !100, line: 168, size: 448, elements: !145)
!145 = !{!146, !147, !148, !150, !160, !161}
!146 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !144, file: !100, line: 169, baseType: !112, size: 128)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !144, file: !100, line: 170, baseType: !122, size: 64, offset: 128)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !144, file: !100, line: 171, baseType: !149, size: 64, offset: 192)
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !144, file: !100, line: 172, baseType: !151, size: 64, offset: 256)
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!152 = !DISubroutineType(types: !153)
!153 = !{!106, !154, !26, !143, !75, !157, !122}
!154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 64)
!155 = !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !156, line: 526, flags: DIFlagFwdDecl)
!156 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!157 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !20, line: 46, baseType: !158)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !108, line: 88, baseType: !159)
!159 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !144, file: !100, line: 174, baseType: !151, size: 64, offset: 320)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !144, file: !100, line: 176, baseType: !162, size: 64, offset: 384)
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 64)
!163 = !DISubroutineType(types: !164)
!164 = !{!59, !154, !26, !143, !165}
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 64)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !167, line: 305, size: 1472, elements: !168)
!167 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!168 = !{!169, !170, !171, !172, !173, !181, !182, !1256, !1262, !1263, !1268, !1269, !1272, !1276, !1277, !1278, !1279, !1280}
!169 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !166, file: !167, line: 308, baseType: !125, size: 64)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !166, file: !167, line: 309, baseType: !125, size: 64, offset: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !166, file: !167, line: 313, baseType: !165, size: 64, offset: 128)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !166, file: !167, line: 313, baseType: !165, size: 64, offset: 192)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !166, file: !167, line: 315, baseType: !174, size: 192, align: 64, offset: 256)
!174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !175, line: 24, size: 192, align: 64, elements: !176)
!175 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!176 = !{!177, !178, !180}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !174, file: !175, line: 25, baseType: !125, size: 64)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !174, file: !175, line: 26, baseType: !179, size: 64, offset: 64)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !174, file: !175, line: 27, baseType: !179, size: 64, offset: 128)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !166, file: !167, line: 323, baseType: !125, size: 64, offset: 448)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !166, file: !167, line: 327, baseType: !183, size: 64, offset: 512)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64)
!184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !167, line: 388, size: 7296, elements: !185)
!185 = !{!186, !1252}
!186 = !DIDerivedType(tag: DW_TAG_member, scope: !184, file: !167, line: 389, baseType: !187, size: 7296)
!187 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !184, file: !167, line: 389, size: 7296, elements: !188)
!188 = !{!189, !190, !194, !200, !204, !205, !206, !207, !208, !216, !221, !222, !223, !224, !233, !234, !235, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !270, !278, !281, !313, !314, !1222, !1223, !1226, !1230, !1231, !1234, !1235, !1236, !1239, !1251}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !187, file: !167, line: 390, baseType: !165, size: 64)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !187, file: !167, line: 391, baseType: !191, size: 64, offset: 64)
!191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !175, line: 31, size: 64, elements: !192)
!192 = !{!193}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !191, file: !175, line: 32, baseType: !179, size: 64)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !187, file: !167, line: 392, baseType: !195, size: 64, offset: 128)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !196, line: 23, baseType: !197)
!196 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !198, line: 31, baseType: !199)
!198 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!199 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !187, file: !167, line: 394, baseType: !201, size: 64, offset: 192)
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64)
!202 = !DISubroutineType(types: !203)
!203 = !{!125, !154, !125, !125, !125, !125}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !187, file: !167, line: 398, baseType: !125, size: 64, offset: 256)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !187, file: !167, line: 399, baseType: !125, size: 64, offset: 320)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !187, file: !167, line: 405, baseType: !125, size: 64, offset: 384)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !187, file: !167, line: 406, baseType: !125, size: 64, offset: 448)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !187, file: !167, line: 407, baseType: !209, size: 64, offset: 512)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64)
!210 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !156, line: 286, baseType: !211)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !156, line: 286, size: 64, elements: !212)
!212 = !{!213}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !211, file: !156, line: 286, baseType: !214, size: 64)
!214 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !215, line: 18, baseType: !125)
!215 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!216 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !187, file: !167, line: 416, baseType: !217, size: 32, offset: 576)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !20, line: 168, baseType: !218)
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !20, line: 166, size: 32, elements: !219)
!219 = !{!220}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !218, file: !20, line: 167, baseType: !59, size: 32)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !187, file: !167, line: 428, baseType: !217, size: 32, offset: 608)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !187, file: !167, line: 437, baseType: !217, size: 32, offset: 640)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !187, file: !167, line: 447, baseType: !217, size: 32, offset: 672)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !187, file: !167, line: 450, baseType: !225, size: 64, offset: 704)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !226, line: 13, baseType: !227)
!226 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !20, line: 175, baseType: !228)
!228 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !20, line: 173, size: 64, elements: !229)
!229 = !{!230}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !228, file: !20, line: 174, baseType: !231, size: 64)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !196, line: 22, baseType: !232)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !198, line: 30, baseType: !159)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !187, file: !167, line: 452, baseType: !59, size: 32, offset: 768)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !187, file: !167, line: 454, baseType: !33, offset: 800)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !187, file: !167, line: 457, baseType: !236, size: 256, offset: 832)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !237, line: 35, size: 256, elements: !238)
!237 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!238 = !{!239, !240, !241, !243}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !236, file: !237, line: 36, baseType: !225, size: 64)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !236, file: !237, line: 42, baseType: !225, size: 64, offset: 64)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !236, file: !237, line: 46, baseType: !242, offset: 128)
!242 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !34, line: 29, baseType: !41)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !236, file: !237, line: 47, baseType: !19, size: 128, offset: 128)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !187, file: !167, line: 459, baseType: !19, size: 128, offset: 1088)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !187, file: !167, line: 466, baseType: !125, size: 64, offset: 1216)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !187, file: !167, line: 467, baseType: !125, size: 64, offset: 1280)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !187, file: !167, line: 469, baseType: !125, size: 64, offset: 1344)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !187, file: !167, line: 470, baseType: !125, size: 64, offset: 1408)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !187, file: !167, line: 471, baseType: !227, size: 64, offset: 1472)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !187, file: !167, line: 472, baseType: !125, size: 64, offset: 1536)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !187, file: !167, line: 473, baseType: !125, size: 64, offset: 1600)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !187, file: !167, line: 474, baseType: !125, size: 64, offset: 1664)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !187, file: !167, line: 475, baseType: !125, size: 64, offset: 1728)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !187, file: !167, line: 477, baseType: !33, offset: 1792)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !187, file: !167, line: 478, baseType: !125, size: 64, offset: 1792)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !187, file: !167, line: 478, baseType: !125, size: 64, offset: 1856)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !187, file: !167, line: 478, baseType: !125, size: 64, offset: 1920)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !187, file: !167, line: 478, baseType: !125, size: 64, offset: 1984)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !187, file: !167, line: 479, baseType: !125, size: 64, offset: 2048)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !187, file: !167, line: 479, baseType: !125, size: 64, offset: 2112)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !187, file: !167, line: 479, baseType: !125, size: 64, offset: 2176)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !187, file: !167, line: 480, baseType: !125, size: 64, offset: 2240)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !187, file: !167, line: 480, baseType: !125, size: 64, offset: 2304)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !187, file: !167, line: 480, baseType: !125, size: 64, offset: 2368)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !187, file: !167, line: 480, baseType: !125, size: 64, offset: 2432)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !187, file: !167, line: 482, baseType: !267, size: 2816, offset: 2496)
!267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 2816, elements: !268)
!268 = !{!269}
!269 = !DISubrange(count: 44)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !187, file: !167, line: 488, baseType: !271, size: 256, offset: 5312)
!271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !272, line: 60, size: 256, elements: !273)
!272 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!273 = !{!274}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !271, file: !272, line: 61, baseType: !275, size: 256)
!275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !225, size: 256, elements: !276)
!276 = !{!277}
!277 = !DISubrange(count: 4)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !187, file: !167, line: 490, baseType: !279, size: 64, offset: 5568)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!280 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !167, line: 490, flags: DIFlagFwdDecl)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !187, file: !167, line: 493, baseType: !282, size: 896, offset: 5632)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !283, line: 53, baseType: !284)
!283 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !283, line: 13, size: 896, elements: !285)
!285 = !{!286, !287, !288, !289, !292, !293, !300, !301, !305, !306, !309}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !284, file: !283, line: 18, baseType: !195, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !284, file: !283, line: 28, baseType: !227, size: 64, offset: 64)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !284, file: !283, line: 31, baseType: !236, size: 256, offset: 128)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !284, file: !283, line: 32, baseType: !290, size: 64, offset: 384)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64)
!291 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !283, line: 32, flags: DIFlagFwdDecl)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !284, file: !283, line: 37, baseType: !117, size: 16, offset: 448)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !284, file: !283, line: 40, baseType: !294, size: 192, offset: 512)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !295, line: 53, size: 192, elements: !296)
!295 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!296 = !{!297, !298, !299}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !294, file: !295, line: 54, baseType: !225, size: 64)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !294, file: !295, line: 55, baseType: !33, offset: 64)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !294, file: !295, line: 59, baseType: !19, size: 128, offset: 64)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !284, file: !283, line: 41, baseType: !149, size: 64, offset: 704)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !284, file: !283, line: 42, baseType: !302, size: 64, offset: 768)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !304)
!304 = !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !283, line: 42, flags: DIFlagFwdDecl)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !284, file: !283, line: 44, baseType: !217, size: 32, offset: 832)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !284, file: !283, line: 50, baseType: !307, size: 16, offset: 864)
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !196, line: 19, baseType: !308)
!308 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !198, line: 24, baseType: !117)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !284, file: !283, line: 51, baseType: !310, size: 16, offset: 880)
!310 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !196, line: 18, baseType: !311)
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !198, line: 23, baseType: !312)
!312 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !187, file: !167, line: 495, baseType: !125, size: 64, offset: 6528)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !187, file: !167, line: 497, baseType: !315, size: 64, offset: 6592)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !167, line: 381, size: 384, elements: !317)
!317 = !{!318, !319, !1221}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !316, file: !167, line: 382, baseType: !217, size: 32)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !316, file: !167, line: 383, baseType: !320, size: 128, offset: 64)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !167, line: 376, size: 128, elements: !321)
!321 = !{!322, !1219}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !320, file: !167, line: 377, baseType: !323, size: 64)
!323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !325, line: 640, size: 48640, elements: !326)
!325 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!326 = !{!327, !336, !338, !339, !345, !346, !347, !348, !349, !350, !351, !352, !356, !374, !385, !485, !486, !487, !498, !499, !501, !502, !503, !504, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !589, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !645, !647, !648, !649, !661, !663, !664, !665, !666, !667, !673, !674, !675, !676, !677, !678, !679, !691, !696, !700, !701, !702, !705, !709, !712, !715, !718, !721, !724, !727, !730, !736, !737, !738, !744, !745, !746, !747, !748, !757, !758, !759, !760, !761, !766, !767, !768, !771, !772, !775, !778, !781, !784, !787, !790, !791, !871, !874, !877, !878, !881, !882, !883, !889, !890, !891, !904, !905, !906, !918, !923, !926, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !324, file: !325, line: 646, baseType: !328, size: 128)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !329, line: 56, size: 128, elements: !330)
!329 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!330 = !{!331, !332}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !328, file: !329, line: 57, baseType: !125, size: 64)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !328, file: !329, line: 58, baseType: !333, size: 32, offset: 64)
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !196, line: 21, baseType: !334)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !198, line: 27, baseType: !335)
!335 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !324, file: !325, line: 649, baseType: !337, size: 64, offset: 128)
!337 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !110)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !324, file: !325, line: 657, baseType: !149, size: 64, offset: 192)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !324, file: !325, line: 658, baseType: !340, size: 32, offset: 256)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !341, line: 113, baseType: !342)
!341 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !341, line: 111, size: 32, elements: !343)
!343 = !{!344}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !342, file: !341, line: 112, baseType: !217, size: 32)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !324, file: !325, line: 660, baseType: !335, size: 32, offset: 288)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !324, file: !325, line: 661, baseType: !335, size: 32, offset: 320)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !324, file: !325, line: 684, baseType: !59, size: 32, offset: 352)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !324, file: !325, line: 686, baseType: !59, size: 32, offset: 384)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !324, file: !325, line: 687, baseType: !59, size: 32, offset: 416)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !324, file: !325, line: 688, baseType: !59, size: 32, offset: 448)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !324, file: !325, line: 689, baseType: !335, size: 32, offset: 480)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !324, file: !325, line: 691, baseType: !353, size: 64, offset: 512)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !355)
!355 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !325, line: 691, flags: DIFlagFwdDecl)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !324, file: !325, line: 692, baseType: !357, size: 832, offset: 576)
!357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !325, line: 451, size: 832, elements: !358)
!358 = !{!359, !364, !365, !366, !367, !368, !369, !370, !371, !372}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !357, file: !325, line: 453, baseType: !360, size: 128)
!360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !325, line: 325, size: 128, elements: !361)
!361 = !{!362, !363}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !360, file: !325, line: 326, baseType: !125, size: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !360, file: !325, line: 327, baseType: !333, size: 32, offset: 64)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !357, file: !325, line: 454, baseType: !174, size: 192, align: 64, offset: 128)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !357, file: !325, line: 455, baseType: !19, size: 128, offset: 320)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !357, file: !325, line: 456, baseType: !335, size: 32, offset: 448)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !357, file: !325, line: 458, baseType: !195, size: 64, offset: 512)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !357, file: !325, line: 459, baseType: !195, size: 64, offset: 576)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !357, file: !325, line: 460, baseType: !195, size: 64, offset: 640)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !357, file: !325, line: 461, baseType: !195, size: 64, offset: 704)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !357, file: !325, line: 463, baseType: !195, size: 64, offset: 768)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !357, file: !325, line: 465, baseType: !373, offset: 832)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !325, line: 415, elements: !47)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !324, file: !325, line: 693, baseType: !375, size: 384, offset: 1408)
!375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !325, line: 489, size: 384, elements: !376)
!376 = !{!377, !378, !379, !380, !381, !382, !383}
!377 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !375, file: !325, line: 490, baseType: !19, size: 128)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !375, file: !325, line: 491, baseType: !125, size: 64, offset: 128)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !375, file: !325, line: 492, baseType: !125, size: 64, offset: 192)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !375, file: !325, line: 493, baseType: !335, size: 32, offset: 256)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !375, file: !325, line: 494, baseType: !117, size: 16, offset: 288)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !375, file: !325, line: 495, baseType: !117, size: 16, offset: 304)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !375, file: !325, line: 497, baseType: !384, size: 64, offset: 320)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !324, file: !325, line: 697, baseType: !386, size: 1792, offset: 1792)
!386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !325, line: 507, size: 1792, elements: !387)
!387 = !{!388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !482, !483}
!388 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !386, file: !325, line: 508, baseType: !174, size: 192, align: 64)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !386, file: !325, line: 515, baseType: !195, size: 64, offset: 192)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !386, file: !325, line: 516, baseType: !195, size: 64, offset: 256)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !386, file: !325, line: 517, baseType: !195, size: 64, offset: 320)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !386, file: !325, line: 518, baseType: !195, size: 64, offset: 384)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !386, file: !325, line: 519, baseType: !195, size: 64, offset: 448)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !386, file: !325, line: 526, baseType: !231, size: 64, offset: 512)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !386, file: !325, line: 527, baseType: !195, size: 64, offset: 576)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !386, file: !325, line: 528, baseType: !335, size: 32, offset: 640)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !386, file: !325, line: 554, baseType: !335, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !386, file: !325, line: 555, baseType: !335, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !386, file: !325, line: 556, baseType: !335, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !386, file: !325, line: 557, baseType: !335, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !386, file: !325, line: 563, baseType: !402, size: 512, offset: 704)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !403, line: 118, size: 512, elements: !404)
!403 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!404 = !{!405, !413, !414, !423, !475, !479, !480, !481}
!405 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !402, file: !403, line: 119, baseType: !406, size: 256)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !407, line: 9, size: 256, elements: !408)
!407 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!408 = !{!409, !410}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !406, file: !407, line: 10, baseType: !174, size: 192, align: 64)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !406, file: !407, line: 11, baseType: !411, size: 64, offset: 192)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !412, line: 29, baseType: !231)
!412 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!413 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !402, file: !403, line: 120, baseType: !411, size: 64, offset: 256)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !402, file: !403, line: 121, baseType: !415, size: 64, offset: 320)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = !DISubroutineType(types: !417)
!417 = !{!418, !422}
!418 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !403, line: 65, baseType: !335, size: 32, elements: !419)
!419 = !{!420, !421}
!420 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!421 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !402, file: !403, line: 122, baseType: !424, size: 64, offset: 384)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64)
!425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !403, line: 159, size: 512, align: 512, elements: !426)
!426 = !{!427, !447, !448, !451, !461, !462, !470, !474}
!427 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !425, file: !403, line: 160, baseType: !428, size: 64)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64)
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !403, line: 214, size: 4608, align: 512, elements: !430)
!430 = !{!431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !429, file: !403, line: 215, baseType: !242)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !429, file: !403, line: 216, baseType: !335, size: 32)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !429, file: !403, line: 217, baseType: !335, size: 32, offset: 32)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !429, file: !403, line: 218, baseType: !335, size: 32, offset: 64)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !429, file: !403, line: 219, baseType: !335, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !429, file: !403, line: 220, baseType: !335, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !429, file: !403, line: 221, baseType: !335, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !429, file: !403, line: 222, baseType: !335, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !429, file: !403, line: 233, baseType: !411, size: 64, offset: 128)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !429, file: !403, line: 234, baseType: !422, size: 64, offset: 192)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !429, file: !403, line: 235, baseType: !411, size: 64, offset: 256)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !429, file: !403, line: 236, baseType: !422, size: 64, offset: 320)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !429, file: !403, line: 237, baseType: !444, size: 4096, offset: 512)
!444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !425, size: 4096, elements: !445)
!445 = !{!446}
!446 = !DISubrange(count: 8)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !425, file: !403, line: 161, baseType: !335, size: 32, offset: 64)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !425, file: !403, line: 162, baseType: !449, size: 32, offset: 96)
!449 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !20, line: 27, baseType: !450)
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !108, line: 96, baseType: !59)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !425, file: !403, line: 163, baseType: !452, size: 32, offset: 128)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !453, line: 276, baseType: !454)
!453 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !453, line: 276, size: 32, elements: !455)
!455 = !{!456}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !454, file: !453, line: 276, baseType: !457, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !453, line: 70, baseType: !458)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !453, line: 65, size: 32, elements: !459)
!459 = !{!460}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !458, file: !453, line: 66, baseType: !335, size: 32)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !425, file: !403, line: 164, baseType: !422, size: 64, offset: 192)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !425, file: !403, line: 165, baseType: !463, size: 128, offset: 256)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !407, line: 14, size: 128, elements: !464)
!464 = !{!465}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !463, file: !407, line: 15, baseType: !466, size: 128)
!466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !175, line: 125, size: 128, elements: !467)
!467 = !{!468, !469}
!468 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !466, file: !175, line: 126, baseType: !191, size: 64)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !466, file: !175, line: 127, baseType: !179, size: 64, offset: 64)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !425, file: !403, line: 166, baseType: !471, size: 64, offset: 384)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = !DISubroutineType(types: !473)
!473 = !{!411}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !425, file: !403, line: 167, baseType: !411, size: 64, offset: 448)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !402, file: !403, line: 123, baseType: !476, size: 8, offset: 448)
!476 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !196, line: 17, baseType: !477)
!477 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !198, line: 21, baseType: !478)
!478 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !402, file: !403, line: 124, baseType: !476, size: 8, offset: 456)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !402, file: !403, line: 125, baseType: !476, size: 8, offset: 464)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !402, file: !403, line: 126, baseType: !476, size: 8, offset: 472)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !386, file: !325, line: 572, baseType: !402, size: 512, offset: 1216)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !386, file: !325, line: 580, baseType: !484, size: 64, offset: 1728)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !324, file: !325, line: 721, baseType: !335, size: 32, offset: 3584)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !324, file: !325, line: 722, baseType: !59, size: 32, offset: 3616)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !324, file: !325, line: 723, baseType: !488, size: 64, offset: 3648)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !490)
!490 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !491, line: 17, baseType: !492)
!491 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !491, line: 17, size: 64, elements: !493)
!493 = !{!494}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !492, file: !491, line: 17, baseType: !495, size: 64)
!495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 64, elements: !496)
!496 = !{!497}
!497 = !DISubrange(count: 1)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !324, file: !325, line: 724, baseType: !490, size: 64, offset: 3712)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !324, file: !325, line: 749, baseType: !500, offset: 3776)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !325, line: 290, elements: !47)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !324, file: !325, line: 751, baseType: !19, size: 128, offset: 3776)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !324, file: !325, line: 757, baseType: !183, size: 64, offset: 3904)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !324, file: !325, line: 758, baseType: !183, size: 64, offset: 3968)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !324, file: !325, line: 761, baseType: !505, size: 320, offset: 4032)
!505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !272, line: 34, size: 320, elements: !506)
!506 = !{!507, !508}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !505, file: !272, line: 35, baseType: !195, size: 64)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !505, file: !272, line: 36, baseType: !509, size: 256, offset: 64)
!509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 256, elements: !276)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !324, file: !325, line: 766, baseType: !59, size: 32, offset: 4352)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !324, file: !325, line: 767, baseType: !59, size: 32, offset: 4384)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !324, file: !325, line: 768, baseType: !59, size: 32, offset: 4416)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !324, file: !325, line: 770, baseType: !59, size: 32, offset: 4448)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !324, file: !325, line: 772, baseType: !125, size: 64, offset: 4480)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !324, file: !325, line: 775, baseType: !335, size: 32, offset: 4544)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !324, file: !325, line: 778, baseType: !335, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !324, file: !325, line: 779, baseType: !335, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !324, file: !325, line: 780, baseType: !335, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !324, file: !325, line: 803, baseType: !335, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !324, file: !325, line: 806, baseType: !335, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !324, file: !325, line: 807, baseType: !335, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !324, file: !325, line: 809, baseType: !335, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !324, file: !325, line: 815, baseType: !335, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !324, file: !325, line: 831, baseType: !125, size: 64, offset: 4672)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !324, file: !325, line: 833, baseType: !526, size: 384, offset: 4736)
!526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !527, line: 25, size: 384, elements: !528)
!527 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!528 = !{!529, !534}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !526, file: !527, line: 26, baseType: !530, size: 64)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!531 = !DISubroutineType(types: !532)
!532 = !{!110, !533}
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!534 = !DIDerivedType(tag: DW_TAG_member, scope: !526, file: !527, line: 27, baseType: !535, size: 320, offset: 64)
!535 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !526, file: !527, line: 27, size: 320, elements: !536)
!536 = !{!537, !547, !579}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !535, file: !527, line: 36, baseType: !538, size: 320)
!538 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !535, file: !527, line: 29, size: 320, elements: !539)
!539 = !{!540, !542, !543, !544, !545, !546}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !538, file: !527, line: 30, baseType: !541, size: 64)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !538, file: !527, line: 31, baseType: !333, size: 32, offset: 64)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !538, file: !527, line: 32, baseType: !333, size: 32, offset: 96)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !538, file: !527, line: 33, baseType: !333, size: 32, offset: 128)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !538, file: !527, line: 34, baseType: !195, size: 64, offset: 192)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !538, file: !527, line: 35, baseType: !541, size: 64, offset: 256)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !535, file: !527, line: 46, baseType: !548, size: 192)
!548 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !535, file: !527, line: 38, size: 192, elements: !549)
!549 = !{!550, !551, !557, !578}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !548, file: !527, line: 39, baseType: !449, size: 32)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !548, file: !527, line: 40, baseType: !552, size: 32, offset: 32)
!552 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !527, line: 16, baseType: !335, size: 32, elements: !553)
!553 = !{!554, !555, !556}
!554 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!555 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!556 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!557 = !DIDerivedType(tag: DW_TAG_member, scope: !548, file: !527, line: 41, baseType: !558, size: 64, offset: 64)
!558 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !548, file: !527, line: 41, size: 64, elements: !559)
!559 = !{!560, !568}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !558, file: !527, line: 42, baseType: !561, size: 64)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !563, line: 7, size: 128, elements: !564)
!563 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!564 = !{!565, !567}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !562, file: !563, line: 8, baseType: !566, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !108, line: 93, baseType: !159)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !562, file: !563, line: 9, baseType: !159, size: 64, offset: 64)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !558, file: !527, line: 43, baseType: !569, size: 64)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !571, line: 7, size: 64, elements: !572)
!571 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!572 = !{!573, !577}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !570, file: !571, line: 8, baseType: !574, size: 32)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !571, line: 5, baseType: !575)
!575 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !196, line: 20, baseType: !576)
!576 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !198, line: 26, baseType: !59)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !570, file: !571, line: 9, baseType: !575, size: 32, offset: 32)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !548, file: !527, line: 45, baseType: !195, size: 64, offset: 128)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !535, file: !527, line: 54, baseType: !580, size: 256)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !535, file: !527, line: 48, size: 256, elements: !581)
!581 = !{!582, !585, !586, !587, !588}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !580, file: !527, line: 49, baseType: !583, size: 64)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !527, line: 14, flags: DIFlagFwdDecl)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !580, file: !527, line: 50, baseType: !59, size: 32, offset: 64)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !580, file: !527, line: 51, baseType: !59, size: 32, offset: 96)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !580, file: !527, line: 52, baseType: !125, size: 64, offset: 128)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !580, file: !527, line: 53, baseType: !125, size: 64, offset: 192)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !324, file: !325, line: 835, baseType: !590, size: 32, offset: 5120)
!590 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !20, line: 22, baseType: !591)
!591 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !108, line: 28, baseType: !59)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !324, file: !325, line: 836, baseType: !590, size: 32, offset: 5152)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !324, file: !325, line: 840, baseType: !125, size: 64, offset: 5184)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !324, file: !325, line: 849, baseType: !323, size: 64, offset: 5248)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !324, file: !325, line: 852, baseType: !323, size: 64, offset: 5312)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !324, file: !325, line: 857, baseType: !19, size: 128, offset: 5376)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !324, file: !325, line: 858, baseType: !19, size: 128, offset: 5504)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !324, file: !325, line: 859, baseType: !323, size: 64, offset: 5632)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !324, file: !325, line: 867, baseType: !19, size: 128, offset: 5696)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !324, file: !325, line: 868, baseType: !19, size: 128, offset: 5824)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !324, file: !325, line: 871, baseType: !602, size: 64, offset: 5952)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !604, line: 59, size: 768, elements: !605)
!604 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!605 = !{!606, !607, !608, !609, !620, !621, !628, !637}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !603, file: !604, line: 61, baseType: !340, size: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !603, file: !604, line: 62, baseType: !335, size: 32, offset: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !603, file: !604, line: 63, baseType: !33, offset: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !603, file: !604, line: 65, baseType: !610, size: 256, offset: 64)
!610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 256, elements: !276)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !20, line: 182, size: 64, elements: !612)
!612 = !{!613}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !611, file: !20, line: 183, baseType: !614, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !20, line: 186, size: 128, elements: !616)
!616 = !{!617, !618}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !615, file: !20, line: 187, baseType: !614, size: 64)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !615, file: !20, line: 187, baseType: !619, size: 64, offset: 64)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !603, file: !604, line: 66, baseType: !611, size: 64, offset: 320)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !603, file: !604, line: 68, baseType: !622, size: 128, offset: 384)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !623, line: 40, baseType: !624)
!623 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !623, line: 36, size: 128, elements: !625)
!625 = !{!626, !627}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !624, file: !623, line: 37, baseType: !33)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !624, file: !623, line: 38, baseType: !19, size: 128)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !603, file: !604, line: 69, baseType: !629, size: 128, align: 64, offset: 512)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !20, line: 216, size: 128, align: 64, elements: !630)
!630 = !{!631, !633}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !629, file: !20, line: 217, baseType: !632, size: 64)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !629, file: !20, line: 218, baseType: !634, size: 64, offset: 64)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!635 = !DISubroutineType(types: !636)
!636 = !{null, !632}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !603, file: !604, line: 70, baseType: !638, size: 128, offset: 640)
!638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !639, size: 128, elements: !496)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !604, line: 54, size: 128, elements: !640)
!640 = !{!641, !642}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !639, file: !604, line: 55, baseType: !59, size: 32)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !639, file: !604, line: 56, baseType: !643, size: 64, offset: 64)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !604, line: 56, flags: DIFlagFwdDecl)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !324, file: !325, line: 872, baseType: !646, size: 512, offset: 6016)
!646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !615, size: 512, elements: !276)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !324, file: !325, line: 873, baseType: !19, size: 128, offset: 6528)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !324, file: !325, line: 874, baseType: !19, size: 128, offset: 6656)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !324, file: !325, line: 876, baseType: !650, size: 64, offset: 6784)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !652, line: 26, size: 192, elements: !653)
!652 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!653 = !{!654, !655}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !651, file: !652, line: 27, baseType: !335, size: 32)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !651, file: !652, line: 28, baseType: !656, size: 128, offset: 64)
!656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !657, line: 43, size: 128, elements: !658)
!657 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!658 = !{!659, !660}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !656, file: !657, line: 44, baseType: !242)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !656, file: !657, line: 45, baseType: !19, size: 128)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !324, file: !325, line: 879, baseType: !662, size: 64, offset: 6848)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !324, file: !325, line: 882, baseType: !662, size: 64, offset: 6912)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !324, file: !325, line: 884, baseType: !195, size: 64, offset: 6976)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !324, file: !325, line: 885, baseType: !195, size: 64, offset: 7040)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !324, file: !325, line: 890, baseType: !195, size: 64, offset: 7104)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !324, file: !325, line: 891, baseType: !668, size: 128, offset: 7168)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !325, line: 242, size: 128, elements: !669)
!669 = !{!670, !671, !672}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !668, file: !325, line: 244, baseType: !195, size: 64)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !668, file: !325, line: 245, baseType: !195, size: 64, offset: 64)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !668, file: !325, line: 246, baseType: !242, offset: 128)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !324, file: !325, line: 900, baseType: !125, size: 64, offset: 7296)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !324, file: !325, line: 901, baseType: !125, size: 64, offset: 7360)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !324, file: !325, line: 904, baseType: !195, size: 64, offset: 7424)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !324, file: !325, line: 907, baseType: !195, size: 64, offset: 7488)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !324, file: !325, line: 910, baseType: !125, size: 64, offset: 7552)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !324, file: !325, line: 911, baseType: !125, size: 64, offset: 7616)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !324, file: !325, line: 914, baseType: !680, size: 640, offset: 7680)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !681, line: 123, size: 640, elements: !682)
!681 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!682 = !{!683, !689, !690}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !680, file: !681, line: 124, baseType: !684, size: 576)
!684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !685, size: 576, elements: !76)
!685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !681, line: 108, size: 192, elements: !686)
!686 = !{!687, !688}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !685, file: !681, line: 109, baseType: !195, size: 64)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !685, file: !681, line: 110, baseType: !463, size: 128, offset: 64)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !680, file: !681, line: 125, baseType: !335, size: 32, offset: 576)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !680, file: !681, line: 126, baseType: !335, size: 32, offset: 608)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !324, file: !325, line: 917, baseType: !692, size: 192, offset: 8320)
!692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !681, line: 134, size: 192, elements: !693)
!693 = !{!694, !695}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !692, file: !681, line: 135, baseType: !629, size: 128, align: 64)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !692, file: !681, line: 136, baseType: !335, size: 32, offset: 128)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !324, file: !325, line: 923, baseType: !697, size: 64, offset: 8512)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !699)
!699 = !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !325, line: 923, flags: DIFlagFwdDecl)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !324, file: !325, line: 926, baseType: !697, size: 64, offset: 8576)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !324, file: !325, line: 929, baseType: !697, size: 64, offset: 8640)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !324, file: !325, line: 933, baseType: !703, size: 64, offset: 8704)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !325, line: 933, flags: DIFlagFwdDecl)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !324, file: !325, line: 943, baseType: !706, size: 128, offset: 8768)
!706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 128, elements: !707)
!707 = !{!708}
!708 = !DISubrange(count: 16)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !324, file: !325, line: 945, baseType: !710, size: 64, offset: 8896)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !325, line: 49, flags: DIFlagFwdDecl)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !324, file: !325, line: 956, baseType: !713, size: 64, offset: 8960)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !325, line: 45, flags: DIFlagFwdDecl)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !324, file: !325, line: 959, baseType: !716, size: 64, offset: 9024)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!717 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !325, line: 959, flags: DIFlagFwdDecl)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !324, file: !325, line: 962, baseType: !719, size: 64, offset: 9088)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!720 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !325, line: 66, flags: DIFlagFwdDecl)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !324, file: !325, line: 966, baseType: !722, size: 64, offset: 9152)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !325, line: 50, flags: DIFlagFwdDecl)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !324, file: !325, line: 969, baseType: !725, size: 64, offset: 9216)
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 64)
!726 = !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !681, line: 223, flags: DIFlagFwdDecl)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !324, file: !325, line: 970, baseType: !728, size: 64, offset: 9280)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!729 = !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !325, line: 62, flags: DIFlagFwdDecl)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !324, file: !325, line: 971, baseType: !731, size: 64, offset: 9344)
!731 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !732, line: 25, baseType: !733)
!732 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!733 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !732, line: 23, size: 64, elements: !734)
!734 = !{!735}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !733, file: !732, line: 24, baseType: !495, size: 64)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !324, file: !325, line: 972, baseType: !731, size: 64, offset: 9408)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !324, file: !325, line: 974, baseType: !731, size: 64, offset: 9472)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !324, file: !325, line: 975, baseType: !739, size: 192, offset: 9536)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !740, line: 30, size: 192, elements: !741)
!740 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!741 = !{!742, !743}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !739, file: !740, line: 31, baseType: !19, size: 128)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !739, file: !740, line: 32, baseType: !731, size: 64, offset: 128)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !324, file: !325, line: 976, baseType: !125, size: 64, offset: 9728)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !324, file: !325, line: 977, baseType: !122, size: 64, offset: 9792)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !324, file: !325, line: 978, baseType: !335, size: 32, offset: 9856)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !324, file: !325, line: 980, baseType: !632, size: 64, offset: 9920)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !324, file: !325, line: 989, baseType: !749, size: 128, offset: 9984)
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !750, line: 35, size: 128, elements: !751)
!750 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!751 = !{!752, !753, !754}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !749, file: !750, line: 36, baseType: !59, size: 32)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !749, file: !750, line: 37, baseType: !217, size: 32, offset: 32)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !749, file: !750, line: 38, baseType: !755, size: 64, offset: 64)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !750, line: 23, flags: DIFlagFwdDecl)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !324, file: !325, line: 992, baseType: !195, size: 64, offset: 10112)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !324, file: !325, line: 993, baseType: !195, size: 64, offset: 10176)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !324, file: !325, line: 996, baseType: !33, offset: 10240)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !324, file: !325, line: 999, baseType: !242, offset: 10240)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !324, file: !325, line: 1001, baseType: !762, size: 64, offset: 10240)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !325, line: 636, size: 64, elements: !763)
!763 = !{!764}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !762, file: !325, line: 637, baseType: !765, size: 64)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !324, file: !325, line: 1005, baseType: !466, size: 128, offset: 10304)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !324, file: !325, line: 1007, baseType: !323, size: 64, offset: 10432)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !324, file: !325, line: 1009, baseType: !769, size: 64, offset: 10496)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!770 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !325, line: 1009, flags: DIFlagFwdDecl)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !324, file: !325, line: 1043, baseType: !149, size: 64, offset: 10560)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !324, file: !325, line: 1046, baseType: !773, size: 64, offset: 10624)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !325, line: 41, flags: DIFlagFwdDecl)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !324, file: !325, line: 1050, baseType: !776, size: 64, offset: 10688)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !325, line: 42, flags: DIFlagFwdDecl)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !324, file: !325, line: 1054, baseType: !779, size: 64, offset: 10752)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !325, line: 55, flags: DIFlagFwdDecl)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !324, file: !325, line: 1056, baseType: !782, size: 64, offset: 10816)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !325, line: 40, flags: DIFlagFwdDecl)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !324, file: !325, line: 1058, baseType: !785, size: 64, offset: 10880)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !325, line: 47, flags: DIFlagFwdDecl)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !324, file: !325, line: 1061, baseType: !788, size: 64, offset: 10944)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !325, line: 43, flags: DIFlagFwdDecl)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !324, file: !325, line: 1064, baseType: !125, size: 64, offset: 11008)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !324, file: !325, line: 1065, baseType: !792, size: 64, offset: 11072)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!793 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !740, line: 14, baseType: !794)
!794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !740, line: 12, size: 384, elements: !795)
!795 = !{!796}
!796 = !DIDerivedType(tag: DW_TAG_member, scope: !794, file: !740, line: 13, baseType: !797, size: 384)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !794, file: !740, line: 13, size: 384, elements: !798)
!798 = !{!799, !800, !801, !802}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !797, file: !740, line: 13, baseType: !59, size: 32)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !797, file: !740, line: 13, baseType: !59, size: 32, offset: 32)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !797, file: !740, line: 13, baseType: !59, size: 32, offset: 64)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !797, file: !740, line: 13, baseType: !803, size: 256, offset: 128)
!803 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !804, line: 32, size: 256, elements: !805)
!804 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!805 = !{!806, !812, !825, !831, !840, !860, !865}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !803, file: !804, line: 37, baseType: !807, size: 64)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !803, file: !804, line: 34, size: 64, elements: !808)
!808 = !{!809, !810}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !807, file: !804, line: 35, baseType: !591, size: 32)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !807, file: !804, line: 36, baseType: !811, size: 32, offset: 32)
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !108, line: 49, baseType: !335)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !803, file: !804, line: 45, baseType: !813, size: 192)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !803, file: !804, line: 40, size: 192, elements: !814)
!814 = !{!815, !817, !818, !824}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !813, file: !804, line: 41, baseType: !816, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !108, line: 95, baseType: !59)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !813, file: !804, line: 42, baseType: !59, size: 32, offset: 32)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !813, file: !804, line: 43, baseType: !819, size: 64, offset: 64)
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !804, line: 11, baseType: !820)
!820 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !804, line: 8, size: 64, elements: !821)
!821 = !{!822, !823}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !820, file: !804, line: 9, baseType: !59, size: 32)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !820, file: !804, line: 10, baseType: !149, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !813, file: !804, line: 44, baseType: !59, size: 32, offset: 128)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !803, file: !804, line: 52, baseType: !826, size: 128)
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !803, file: !804, line: 48, size: 128, elements: !827)
!827 = !{!828, !829, !830}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !826, file: !804, line: 49, baseType: !591, size: 32)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !826, file: !804, line: 50, baseType: !811, size: 32, offset: 32)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !826, file: !804, line: 51, baseType: !819, size: 64, offset: 64)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !803, file: !804, line: 61, baseType: !832, size: 256)
!832 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !803, file: !804, line: 55, size: 256, elements: !833)
!833 = !{!834, !835, !836, !837, !839}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !832, file: !804, line: 56, baseType: !591, size: 32)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !832, file: !804, line: 57, baseType: !811, size: 32, offset: 32)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !832, file: !804, line: 58, baseType: !59, size: 32, offset: 64)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !832, file: !804, line: 59, baseType: !838, size: 64, offset: 128)
!838 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !108, line: 94, baseType: !109)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !832, file: !804, line: 60, baseType: !838, size: 64, offset: 192)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !803, file: !804, line: 95, baseType: !841, size: 256)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !803, file: !804, line: 64, size: 256, elements: !842)
!842 = !{!843, !844}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !841, file: !804, line: 65, baseType: !149, size: 64)
!844 = !DIDerivedType(tag: DW_TAG_member, scope: !841, file: !804, line: 77, baseType: !845, size: 192, offset: 64)
!845 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !841, file: !804, line: 77, size: 192, elements: !846)
!846 = !{!847, !848, !855}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !845, file: !804, line: 82, baseType: !312, size: 16)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !845, file: !804, line: 88, baseType: !849, size: 192)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !845, file: !804, line: 84, size: 192, elements: !850)
!850 = !{!851, !853, !854}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !849, file: !804, line: 85, baseType: !852, size: 64)
!852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 64, elements: !445)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !849, file: !804, line: 86, baseType: !149, size: 64, offset: 64)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !849, file: !804, line: 87, baseType: !149, size: 64, offset: 128)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !845, file: !804, line: 93, baseType: !856, size: 96)
!856 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !845, file: !804, line: 90, size: 96, elements: !857)
!857 = !{!858, !859}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !856, file: !804, line: 91, baseType: !852, size: 64)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !856, file: !804, line: 92, baseType: !334, size: 32, offset: 64)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !803, file: !804, line: 101, baseType: !861, size: 128)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !803, file: !804, line: 98, size: 128, elements: !862)
!862 = !{!863, !864}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !861, file: !804, line: 99, baseType: !110, size: 64)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !861, file: !804, line: 100, baseType: !59, size: 32, offset: 64)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !803, file: !804, line: 108, baseType: !866, size: 128)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !803, file: !804, line: 104, size: 128, elements: !867)
!867 = !{!868, !869, !870}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !866, file: !804, line: 105, baseType: !149, size: 64)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !866, file: !804, line: 106, baseType: !59, size: 32, offset: 64)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !866, file: !804, line: 107, baseType: !335, size: 32, offset: 96)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !324, file: !325, line: 1067, baseType: !872, offset: 11136)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !873, line: 12, elements: !47)
!873 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!874 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !324, file: !325, line: 1099, baseType: !875, size: 64, offset: 11136)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64)
!876 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !325, line: 56, flags: DIFlagFwdDecl)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !324, file: !325, line: 1103, baseType: !19, size: 128, offset: 11200)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !324, file: !325, line: 1104, baseType: !879, size: 64, offset: 11328)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !325, line: 46, flags: DIFlagFwdDecl)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !324, file: !325, line: 1105, baseType: !294, size: 192, offset: 11392)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !324, file: !325, line: 1106, baseType: !335, size: 32, offset: 11584)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !324, file: !325, line: 1109, baseType: !884, size: 128, offset: 11648)
!884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !885, size: 128, elements: !887)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !325, line: 51, flags: DIFlagFwdDecl)
!887 = !{!888}
!888 = !DISubrange(count: 2)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !324, file: !325, line: 1110, baseType: !294, size: 192, offset: 11776)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !324, file: !325, line: 1111, baseType: !19, size: 128, offset: 11968)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !324, file: !325, line: 1173, baseType: !892, size: 64, offset: 12096)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !894, line: 62, size: 256, align: 256, elements: !895)
!894 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!895 = !{!896, !897, !898, !903}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !893, file: !894, line: 75, baseType: !334, size: 32)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !893, file: !894, line: 90, baseType: !334, size: 32, offset: 32)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !893, file: !894, line: 124, baseType: !899, size: 64, offset: 64)
!899 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !893, file: !894, line: 109, size: 64, elements: !900)
!900 = !{!901, !902}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !899, file: !894, line: 110, baseType: !197, size: 64)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !899, file: !894, line: 112, baseType: !197, size: 64)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !893, file: !894, line: 144, baseType: !334, size: 32, offset: 128)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !324, file: !325, line: 1174, baseType: !333, size: 32, offset: 12160)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !324, file: !325, line: 1179, baseType: !125, size: 64, offset: 12224)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !324, file: !325, line: 1182, baseType: !907, size: 128, offset: 12288)
!907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !272, line: 76, size: 128, elements: !908)
!908 = !{!909, !914, !917}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !907, file: !272, line: 85, baseType: !910, size: 64)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !911, line: 7, size: 64, elements: !912)
!911 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!912 = !{!913}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !910, file: !911, line: 12, baseType: !492, size: 64)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !907, file: !272, line: 88, baseType: !915, size: 8, offset: 64)
!915 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !20, line: 30, baseType: !916)
!916 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !907, file: !272, line: 95, baseType: !915, size: 8, offset: 72)
!918 = !DIDerivedType(tag: DW_TAG_member, scope: !324, file: !325, line: 1184, baseType: !919, size: 128, offset: 12416)
!919 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !324, file: !325, line: 1184, size: 128, elements: !920)
!920 = !{!921, !922}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !919, file: !325, line: 1185, baseType: !340, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !919, file: !325, line: 1186, baseType: !629, size: 128, align: 64)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !324, file: !325, line: 1190, baseType: !924, size: 64, offset: 12544)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !325, line: 53, flags: DIFlagFwdDecl)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !324, file: !325, line: 1192, baseType: !927, size: 128, offset: 12608)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !272, line: 64, size: 128, elements: !928)
!928 = !{!929, !1022, !1023}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !927, file: !272, line: 65, baseType: !930, size: 64)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !167, line: 68, size: 512, align: 128, elements: !932)
!932 = !{!933, !934, !1014, !1021}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !931, file: !167, line: 69, baseType: !125, size: 64)
!934 = !DIDerivedType(tag: DW_TAG_member, scope: !931, file: !167, line: 77, baseType: !935, size: 320, offset: 64)
!935 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !931, file: !167, line: 77, size: 320, elements: !936)
!936 = !{!937, !946, !951, !979, !987, !993, !1006, !1013}
!937 = !DIDerivedType(tag: DW_TAG_member, scope: !935, file: !167, line: 78, baseType: !938, size: 320)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !935, file: !167, line: 78, size: 320, elements: !939)
!939 = !{!940, !941, !944, !945}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !938, file: !167, line: 84, baseType: !19, size: 128)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !938, file: !167, line: 86, baseType: !942, size: 64, offset: 128)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64)
!943 = !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !167, line: 26, flags: DIFlagFwdDecl)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !938, file: !167, line: 87, baseType: !125, size: 64, offset: 192)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !938, file: !167, line: 94, baseType: !125, size: 64, offset: 256)
!946 = !DIDerivedType(tag: DW_TAG_member, scope: !935, file: !167, line: 96, baseType: !947, size: 64)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !935, file: !167, line: 96, size: 64, elements: !948)
!948 = !{!949}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !947, file: !167, line: 101, baseType: !950, size: 64)
!950 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !20, line: 143, baseType: !195)
!951 = !DIDerivedType(tag: DW_TAG_member, scope: !935, file: !167, line: 103, baseType: !952, size: 320)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !935, file: !167, line: 103, size: 320, elements: !953)
!953 = !{!954, !964, !967, !968}
!954 = !DIDerivedType(tag: DW_TAG_member, scope: !952, file: !167, line: 104, baseType: !955, size: 128)
!955 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !952, file: !167, line: 104, size: 128, elements: !956)
!956 = !{!957, !958}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !955, file: !167, line: 105, baseType: !19, size: 128)
!958 = !DIDerivedType(tag: DW_TAG_member, scope: !955, file: !167, line: 106, baseType: !959, size: 128)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !955, file: !167, line: 106, size: 128, elements: !960)
!960 = !{!961, !962, !963}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !959, file: !167, line: 107, baseType: !930, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !959, file: !167, line: 109, baseType: !59, size: 32, offset: 64)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !959, file: !167, line: 110, baseType: !59, size: 32, offset: 96)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !952, file: !167, line: 117, baseType: !965, size: 64, offset: 128)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !167, line: 117, flags: DIFlagFwdDecl)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !952, file: !167, line: 119, baseType: !149, size: 64, offset: 192)
!968 = !DIDerivedType(tag: DW_TAG_member, scope: !952, file: !167, line: 120, baseType: !969, size: 64, offset: 256)
!969 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !952, file: !167, line: 120, size: 64, elements: !970)
!970 = !{!971, !972, !973}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !969, file: !167, line: 121, baseType: !149, size: 64)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !969, file: !167, line: 122, baseType: !125, size: 64)
!973 = !DIDerivedType(tag: DW_TAG_member, scope: !969, file: !167, line: 123, baseType: !974, size: 32)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !969, file: !167, line: 123, size: 32, elements: !975)
!975 = !{!976, !977, !978}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !974, file: !167, line: 124, baseType: !335, size: 16, flags: DIFlagBitField, extraData: i64 0)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !974, file: !167, line: 125, baseType: !335, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !974, file: !167, line: 126, baseType: !335, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!979 = !DIDerivedType(tag: DW_TAG_member, scope: !935, file: !167, line: 130, baseType: !980, size: 192)
!980 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !935, file: !167, line: 130, size: 192, elements: !981)
!981 = !{!982, !983, !984, !985, !986}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !980, file: !167, line: 131, baseType: !125, size: 64)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !980, file: !167, line: 134, baseType: !478, size: 8, offset: 64)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !980, file: !167, line: 135, baseType: !478, size: 8, offset: 72)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !980, file: !167, line: 136, baseType: !217, size: 32, offset: 96)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !980, file: !167, line: 137, baseType: !335, size: 32, offset: 128)
!987 = !DIDerivedType(tag: DW_TAG_member, scope: !935, file: !167, line: 139, baseType: !988, size: 256)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !935, file: !167, line: 139, size: 256, elements: !989)
!989 = !{!990, !991, !992}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !988, file: !167, line: 140, baseType: !125, size: 64)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !988, file: !167, line: 141, baseType: !217, size: 32, offset: 64)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !988, file: !167, line: 143, baseType: !19, size: 128, offset: 128)
!993 = !DIDerivedType(tag: DW_TAG_member, scope: !935, file: !167, line: 145, baseType: !994, size: 256)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !935, file: !167, line: 145, size: 256, elements: !995)
!995 = !{!996, !997, !999, !1000, !1005}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !994, file: !167, line: 146, baseType: !125, size: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !994, file: !167, line: 147, baseType: !998, size: 64, offset: 64)
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !156, line: 509, baseType: !930)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !994, file: !167, line: 148, baseType: !125, size: 64, offset: 128)
!1000 = !DIDerivedType(tag: DW_TAG_member, scope: !994, file: !167, line: 149, baseType: !1001, size: 64, offset: 192)
!1001 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !994, file: !167, line: 149, size: 64, elements: !1002)
!1002 = !{!1003, !1004}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1001, file: !167, line: 150, baseType: !183, size: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1001, file: !167, line: 151, baseType: !217, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !994, file: !167, line: 156, baseType: !33, offset: 256)
!1006 = !DIDerivedType(tag: DW_TAG_member, scope: !935, file: !167, line: 159, baseType: !1007, size: 128)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !935, file: !167, line: 159, size: 128, elements: !1008)
!1008 = !{!1009, !1012}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !1007, file: !167, line: 161, baseType: !1010, size: 64)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!1011 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !167, line: 161, flags: DIFlagFwdDecl)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !1007, file: !167, line: 162, baseType: !149, size: 64, offset: 64)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !935, file: !167, line: 176, baseType: !629, size: 128, align: 64)
!1014 = !DIDerivedType(tag: DW_TAG_member, scope: !931, file: !167, line: 179, baseType: !1015, size: 32, offset: 384)
!1015 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !931, file: !167, line: 179, size: 32, elements: !1016)
!1016 = !{!1017, !1018, !1019, !1020}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !1015, file: !167, line: 184, baseType: !217, size: 32)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !1015, file: !167, line: 192, baseType: !335, size: 32)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1015, file: !167, line: 194, baseType: !335, size: 32)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1015, file: !167, line: 195, baseType: !59, size: 32)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !931, file: !167, line: 199, baseType: !217, size: 32, offset: 416)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !927, file: !272, line: 67, baseType: !334, size: 32, offset: 64)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !927, file: !272, line: 68, baseType: !334, size: 32, offset: 96)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !324, file: !325, line: 1206, baseType: !59, size: 32, offset: 12736)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !324, file: !325, line: 1207, baseType: !59, size: 32, offset: 12768)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !324, file: !325, line: 1209, baseType: !125, size: 64, offset: 12800)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !324, file: !325, line: 1219, baseType: !195, size: 64, offset: 12864)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !324, file: !325, line: 1220, baseType: !195, size: 64, offset: 12928)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !324, file: !325, line: 1317, baseType: !59, size: 32, offset: 12992)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !324, file: !325, line: 1319, baseType: !323, size: 64, offset: 13056)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !324, file: !325, line: 1322, baseType: !1032, size: 64, offset: 13120)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !325, line: 1322, flags: DIFlagFwdDecl)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !324, file: !325, line: 1326, baseType: !340, size: 32, offset: 13184)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !324, file: !325, line: 1342, baseType: !149, size: 64, offset: 13248)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !324, file: !325, line: 1343, baseType: !197, size: 64, offset: 13312)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !324, file: !325, line: 1344, baseType: !195, size: 64, offset: 13376)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !324, file: !325, line: 1345, baseType: !197, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !324, file: !325, line: 1346, baseType: !197, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !324, file: !325, line: 1347, baseType: !197, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !324, file: !325, line: 1348, baseType: !629, size: 128, align: 64, offset: 13504)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !324, file: !325, line: 1358, baseType: !1043, size: 34816, offset: 13824)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !1044, line: 485, size: 34816, elements: !1045)
!1044 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!1045 = !{!1046, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1075, !1076, !1077, !1078, !1079, !1080, !1083, !1084, !1085}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !1043, file: !1044, line: 487, baseType: !1047, size: 192)
!1047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1048, size: 192, elements: !76)
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !1049, line: 16, size: 64, elements: !1050)
!1049 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!1050 = !{!1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !1048, file: !1049, line: 17, baseType: !307, size: 16)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !1048, file: !1049, line: 18, baseType: !307, size: 16, offset: 16)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !1048, file: !1049, line: 19, baseType: !307, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1048, file: !1049, line: 19, baseType: !307, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !1048, file: !1049, line: 19, baseType: !307, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !1048, file: !1049, line: 19, baseType: !307, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1048, file: !1049, line: 19, baseType: !307, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !1048, file: !1049, line: 20, baseType: !307, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !1048, file: !1049, line: 20, baseType: !307, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1048, file: !1049, line: 20, baseType: !307, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !1048, file: !1049, line: 20, baseType: !307, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1048, file: !1049, line: 20, baseType: !307, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !1048, file: !1049, line: 20, baseType: !307, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !1043, file: !1044, line: 491, baseType: !125, size: 64, offset: 192)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1043, file: !1044, line: 495, baseType: !117, size: 16, offset: 256)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1043, file: !1044, line: 496, baseType: !117, size: 16, offset: 272)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !1043, file: !1044, line: 497, baseType: !117, size: 16, offset: 288)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !1043, file: !1044, line: 498, baseType: !117, size: 16, offset: 304)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !1043, file: !1044, line: 502, baseType: !125, size: 64, offset: 320)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1043, file: !1044, line: 503, baseType: !125, size: 64, offset: 384)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !1043, file: !1044, line: 514, baseType: !1072, size: 256, offset: 448)
!1072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1073, size: 256, elements: !276)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !1044, line: 483, flags: DIFlagFwdDecl)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !1043, file: !1044, line: 516, baseType: !125, size: 64, offset: 704)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !1043, file: !1044, line: 518, baseType: !125, size: 64, offset: 768)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !1043, file: !1044, line: 520, baseType: !125, size: 64, offset: 832)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !1043, file: !1044, line: 521, baseType: !125, size: 64, offset: 896)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !1043, file: !1044, line: 522, baseType: !125, size: 64, offset: 960)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !1043, file: !1044, line: 528, baseType: !1081, size: 64, offset: 1024)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1082 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !1044, line: 10, flags: DIFlagFwdDecl)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !1043, file: !1044, line: 535, baseType: !125, size: 64, offset: 1088)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !1043, file: !1044, line: 537, baseType: !335, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !1043, file: !1044, line: 540, baseType: !1086, size: 33280, offset: 1536)
!1086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !1087, line: 317, size: 33280, elements: !1088)
!1087 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!1088 = !{!1089, !1090, !1091}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !1086, file: !1087, line: 330, baseType: !335, size: 32)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !1086, file: !1087, line: 337, baseType: !125, size: 64, offset: 64)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1086, file: !1087, line: 348, baseType: !1092, size: 32768, offset: 512)
!1092 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !1087, line: 304, size: 32768, elements: !1093)
!1093 = !{!1094, !1109, !1148, !1198, !1215}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !1092, file: !1087, line: 305, baseType: !1095, size: 896)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !1087, line: 12, size: 896, elements: !1096)
!1096 = !{!1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1108}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1095, file: !1087, line: 13, baseType: !333, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1095, file: !1087, line: 14, baseType: !333, size: 32, offset: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !1095, file: !1087, line: 15, baseType: !333, size: 32, offset: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !1095, file: !1087, line: 16, baseType: !333, size: 32, offset: 96)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !1095, file: !1087, line: 17, baseType: !333, size: 32, offset: 128)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !1095, file: !1087, line: 18, baseType: !333, size: 32, offset: 160)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !1095, file: !1087, line: 19, baseType: !333, size: 32, offset: 192)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !1095, file: !1087, line: 22, baseType: !1105, size: 640, offset: 224)
!1105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, size: 640, elements: !1106)
!1106 = !{!1107}
!1107 = !DISubrange(count: 20)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1095, file: !1087, line: 25, baseType: !333, size: 32, offset: 864)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !1092, file: !1087, line: 306, baseType: !1110, size: 4096, align: 128)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !1087, line: 34, size: 4096, align: 128, elements: !1111)
!1111 = !{!1112, !1113, !1114, !1115, !1116, !1131, !1132, !1133, !1137, !1139, !1143}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1110, file: !1087, line: 35, baseType: !307, size: 16)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1110, file: !1087, line: 36, baseType: !307, size: 16, offset: 16)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !1110, file: !1087, line: 37, baseType: !307, size: 16, offset: 32)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1110, file: !1087, line: 38, baseType: !307, size: 16, offset: 48)
!1116 = !DIDerivedType(tag: DW_TAG_member, scope: !1110, file: !1087, line: 39, baseType: !1117, size: 128, offset: 64)
!1117 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1110, file: !1087, line: 39, size: 128, elements: !1118)
!1118 = !{!1119, !1124}
!1119 = !DIDerivedType(tag: DW_TAG_member, scope: !1117, file: !1087, line: 40, baseType: !1120, size: 128)
!1120 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1117, file: !1087, line: 40, size: 128, elements: !1121)
!1121 = !{!1122, !1123}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !1120, file: !1087, line: 41, baseType: !195, size: 64)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !1120, file: !1087, line: 42, baseType: !195, size: 64, offset: 64)
!1124 = !DIDerivedType(tag: DW_TAG_member, scope: !1117, file: !1087, line: 44, baseType: !1125, size: 128)
!1125 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1117, file: !1087, line: 44, size: 128, elements: !1126)
!1126 = !{!1127, !1128, !1129, !1130}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !1125, file: !1087, line: 45, baseType: !333, size: 32)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !1125, file: !1087, line: 46, baseType: !333, size: 32, offset: 32)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !1125, file: !1087, line: 47, baseType: !333, size: 32, offset: 64)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !1125, file: !1087, line: 48, baseType: !333, size: 32, offset: 96)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !1110, file: !1087, line: 51, baseType: !333, size: 32, offset: 192)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !1110, file: !1087, line: 52, baseType: !333, size: 32, offset: 224)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !1110, file: !1087, line: 55, baseType: !1134, size: 1024, offset: 256)
!1134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, size: 1024, elements: !1135)
!1135 = !{!1136}
!1136 = !DISubrange(count: 32)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !1110, file: !1087, line: 58, baseType: !1138, size: 2048, offset: 1280)
!1138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, size: 2048, elements: !80)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !1110, file: !1087, line: 60, baseType: !1140, size: 384, offset: 3328)
!1140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, size: 384, elements: !1141)
!1141 = !{!1142}
!1142 = !DISubrange(count: 12)
!1143 = !DIDerivedType(tag: DW_TAG_member, scope: !1110, file: !1087, line: 62, baseType: !1144, size: 384, offset: 3712)
!1144 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1110, file: !1087, line: 62, size: 384, elements: !1145)
!1145 = !{!1146, !1147}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !1144, file: !1087, line: 63, baseType: !1140, size: 384)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !1144, file: !1087, line: 64, baseType: !1140, size: 384)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !1092, file: !1087, line: 307, baseType: !1149, size: 1088)
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !1087, line: 79, size: 1088, elements: !1150)
!1150 = !{!1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1197}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1149, file: !1087, line: 80, baseType: !333, size: 32)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1149, file: !1087, line: 81, baseType: !333, size: 32, offset: 32)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !1149, file: !1087, line: 82, baseType: !333, size: 32, offset: 64)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !1149, file: !1087, line: 83, baseType: !333, size: 32, offset: 96)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !1149, file: !1087, line: 84, baseType: !333, size: 32, offset: 128)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !1149, file: !1087, line: 85, baseType: !333, size: 32, offset: 160)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !1149, file: !1087, line: 86, baseType: !333, size: 32, offset: 192)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !1149, file: !1087, line: 88, baseType: !1105, size: 640, offset: 224)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !1149, file: !1087, line: 89, baseType: !476, size: 8, offset: 864)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1149, file: !1087, line: 90, baseType: !476, size: 8, offset: 872)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !1149, file: !1087, line: 91, baseType: !476, size: 8, offset: 880)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !1149, file: !1087, line: 92, baseType: !476, size: 8, offset: 888)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !1149, file: !1087, line: 93, baseType: !476, size: 8, offset: 896)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !1149, file: !1087, line: 94, baseType: !476, size: 8, offset: 904)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1149, file: !1087, line: 95, baseType: !1166, size: 64, offset: 960)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !1168, line: 11, size: 128, elements: !1169)
!1168 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!1169 = !{!1170, !1171}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !1167, file: !1168, line: 12, baseType: !110, size: 64)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !1167, file: !1168, line: 13, baseType: !1172, size: 64, offset: 64)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !1174, line: 56, size: 1344, elements: !1175)
!1174 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!1175 = !{!1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !1173, file: !1174, line: 61, baseType: !125, size: 64)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !1173, file: !1174, line: 62, baseType: !125, size: 64, offset: 64)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !1173, file: !1174, line: 63, baseType: !125, size: 64, offset: 128)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !1173, file: !1174, line: 64, baseType: !125, size: 64, offset: 192)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !1173, file: !1174, line: 65, baseType: !125, size: 64, offset: 256)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !1173, file: !1174, line: 66, baseType: !125, size: 64, offset: 320)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !1173, file: !1174, line: 68, baseType: !125, size: 64, offset: 384)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !1173, file: !1174, line: 69, baseType: !125, size: 64, offset: 448)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !1173, file: !1174, line: 70, baseType: !125, size: 64, offset: 512)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !1173, file: !1174, line: 71, baseType: !125, size: 64, offset: 576)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !1173, file: !1174, line: 72, baseType: !125, size: 64, offset: 640)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !1173, file: !1174, line: 73, baseType: !125, size: 64, offset: 704)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !1173, file: !1174, line: 74, baseType: !125, size: 64, offset: 768)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !1173, file: !1174, line: 75, baseType: !125, size: 64, offset: 832)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !1173, file: !1174, line: 76, baseType: !125, size: 64, offset: 896)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !1173, file: !1174, line: 81, baseType: !125, size: 64, offset: 960)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1173, file: !1174, line: 83, baseType: !125, size: 64, offset: 1024)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1173, file: !1174, line: 84, baseType: !125, size: 64, offset: 1088)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1173, file: !1174, line: 85, baseType: !125, size: 64, offset: 1152)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !1173, file: !1174, line: 86, baseType: !125, size: 64, offset: 1216)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !1173, file: !1174, line: 87, baseType: !125, size: 64, offset: 1280)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !1149, file: !1087, line: 96, baseType: !333, size: 32, offset: 1024)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !1092, file: !1087, line: 308, baseType: !1199, size: 4608, align: 512)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !1087, line: 289, size: 4608, align: 512, elements: !1200)
!1200 = !{!1201, !1202, !1211}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !1199, file: !1087, line: 290, baseType: !1110, size: 4096, align: 128)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1199, file: !1087, line: 291, baseType: !1203, size: 512, offset: 4096)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !1087, line: 268, size: 512, elements: !1204)
!1204 = !{!1205, !1206, !1207}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !1203, file: !1087, line: 269, baseType: !195, size: 64)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !1203, file: !1087, line: 270, baseType: !195, size: 64, offset: 64)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !1203, file: !1087, line: 271, baseType: !1208, size: 384, offset: 128)
!1208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 384, elements: !1209)
!1209 = !{!1210}
!1210 = !DISubrange(count: 6)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !1199, file: !1087, line: 292, baseType: !1212, offset: 4608)
!1212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !476, elements: !1213)
!1213 = !{!1214}
!1214 = !DISubrange(count: 0)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !1092, file: !1087, line: 309, baseType: !1216, size: 32768)
!1216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !476, size: 32768, elements: !1217)
!1217 = !{!1218}
!1218 = !DISubrange(count: 4096)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !320, file: !167, line: 378, baseType: !1220, size: 64, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !316, file: !167, line: 384, baseType: !651, size: 192, offset: 192)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !187, file: !167, line: 500, baseType: !33, offset: 6656)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !187, file: !167, line: 501, baseType: !1224, size: 64, offset: 6656)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 64)
!1225 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !167, line: 387, flags: DIFlagFwdDecl)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !187, file: !167, line: 516, baseType: !1227, size: 64, offset: 6720)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !1229, line: 18, flags: DIFlagFwdDecl)
!1229 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !187, file: !167, line: 519, baseType: !154, size: 64, offset: 6784)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !187, file: !167, line: 521, baseType: !1232, size: 64, offset: 6848)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!1233 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !167, line: 521, flags: DIFlagFwdDecl)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !187, file: !167, line: 545, baseType: !217, size: 32, offset: 6912)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !187, file: !167, line: 548, baseType: !915, size: 8, offset: 6944)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !187, file: !167, line: 550, baseType: !1237, offset: 6952)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !1238, line: 142, elements: !47)
!1238 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !187, file: !167, line: 554, baseType: !1240, size: 256, offset: 6976)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1241, line: 102, size: 256, elements: !1242)
!1241 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1242 = !{!1243, !1244, !1245}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1240, file: !1241, line: 103, baseType: !225, size: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1240, file: !1241, line: 104, baseType: !19, size: 128, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1240, file: !1241, line: 105, baseType: !1246, size: 64, offset: 192)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1241, line: 21, baseType: !1247)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64)
!1248 = !DISubroutineType(types: !1249)
!1249 = !{null, !1250}
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 64)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !187, file: !167, line: 557, baseType: !333, size: 32, offset: 7232)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !184, file: !167, line: 565, baseType: !1253, offset: 7296)
!1253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, elements: !1254)
!1254 = !{!1255}
!1255 = !DISubrange(count: -1)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !166, file: !167, line: 333, baseType: !1257, size: 64, offset: 576)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !156, line: 284, baseType: !1258)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !156, line: 284, size: 64, elements: !1259)
!1259 = !{!1260}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1258, file: !156, line: 284, baseType: !1261, size: 64)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !215, line: 19, baseType: !125)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !166, file: !167, line: 334, baseType: !125, size: 64, offset: 640)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !166, file: !167, line: 343, baseType: !1264, size: 256, offset: 704)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !166, file: !167, line: 340, size: 256, elements: !1265)
!1265 = !{!1266, !1267}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1264, file: !167, line: 341, baseType: !174, size: 192, align: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1264, file: !167, line: 342, baseType: !125, size: 64, offset: 192)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !166, file: !167, line: 351, baseType: !19, size: 128, offset: 960)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !166, file: !167, line: 353, baseType: !1270, size: 64, offset: 1088)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !167, line: 353, flags: DIFlagFwdDecl)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !166, file: !167, line: 356, baseType: !1273, size: 64, offset: 1152)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64)
!1274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1275)
!1275 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !167, line: 356, flags: DIFlagFwdDecl)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !166, file: !167, line: 359, baseType: !125, size: 64, offset: 1216)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !166, file: !167, line: 361, baseType: !154, size: 64, offset: 1280)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !166, file: !167, line: 362, baseType: !149, size: 64, offset: 1344)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !166, file: !167, line: 365, baseType: !225, size: 64, offset: 1408)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !166, file: !167, line: 373, baseType: !1281, offset: 1472)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !167, line: 296, elements: !47)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !132, file: !100, line: 90, baseType: !127, size: 64, offset: 192)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !132, file: !100, line: 91, baseType: !1284, size: 64, offset: 256)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !90, file: !12, line: 143, baseType: !1286, size: 64, offset: 256)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64)
!1287 = !DISubroutineType(types: !1288)
!1288 = !{!1289, !26}
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1291)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !1292, line: 39, size: 384, elements: !1293)
!1292 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!1293 = !{!1294, !1300, !1304, !1308, !1316, !1320}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1291, file: !1292, line: 40, baseType: !1295, size: 32)
!1295 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !1292, line: 26, baseType: !335, size: 32, elements: !1296)
!1296 = !{!1297, !1298, !1299}
!1297 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!1298 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!1299 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !1291, file: !1292, line: 41, baseType: !1301, size: 64, offset: 64)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64)
!1302 = !DISubroutineType(types: !1303)
!1303 = !{!915}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !1291, file: !1292, line: 42, baseType: !1305, size: 64, offset: 128)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{!149}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !1291, file: !1292, line: 43, baseType: !1309, size: 64, offset: 192)
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64)
!1310 = !DISubroutineType(types: !1311)
!1311 = !{!1312, !1314}
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 64)
!1315 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !1292, line: 19, flags: DIFlagFwdDecl)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !1291, file: !1292, line: 44, baseType: !1317, size: 64, offset: 256)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 64)
!1318 = !DISubroutineType(types: !1319)
!1319 = !{!1312}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !1291, file: !1292, line: 45, baseType: !1321, size: 64, offset: 320)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{null, !149}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !90, file: !12, line: 144, baseType: !1325, size: 64, offset: 320)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 64)
!1326 = !DISubroutineType(types: !1327)
!1327 = !{!1312, !26}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !90, file: !12, line: 145, baseType: !1329, size: 64, offset: 384)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{null, !26, !1332, !1338}
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1229, line: 23, baseType: !1334)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1229, line: 21, size: 32, elements: !1335)
!1335 = !{!1336}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1334, file: !1229, line: 22, baseType: !1337, size: 32)
!1337 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !20, line: 32, baseType: !811)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1339 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1229, line: 28, baseType: !1340)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1229, line: 26, size: 32, elements: !1341)
!1341 = !{!1342}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1340, file: !1229, line: 27, baseType: !1343, size: 32)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !20, line: 33, baseType: !1344)
!1344 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !108, line: 50, baseType: !335)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !11, file: !12, line: 70, baseType: !1346, size: 64, offset: 384)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1348, line: 123, size: 1024, elements: !1349)
!1348 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1349 = !{!1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1492, !1493, !1494, !1495, !1496}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1347, file: !1348, line: 124, baseType: !217, size: 32)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1347, file: !1348, line: 125, baseType: !217, size: 32, offset: 32)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1347, file: !1348, line: 135, baseType: !1346, size: 64, offset: 64)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1347, file: !1348, line: 136, baseType: !15, size: 64, offset: 128)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1347, file: !1348, line: 138, baseType: !174, size: 192, align: 64, offset: 192)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1347, file: !1348, line: 140, baseType: !1312, size: 64, offset: 384)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1347, file: !1348, line: 141, baseType: !335, size: 32, offset: 448)
!1357 = !DIDerivedType(tag: DW_TAG_member, scope: !1347, file: !1348, line: 142, baseType: !1358, size: 256, offset: 512)
!1358 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1347, file: !1348, line: 142, size: 256, elements: !1359)
!1359 = !{!1360, !1415, !1419}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1358, file: !1348, line: 143, baseType: !1361, size: 192)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1348, line: 91, size: 192, elements: !1362)
!1362 = !{!1363, !1364, !1365}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !1361, file: !1348, line: 92, baseType: !125, size: 64)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1361, file: !1348, line: 94, baseType: !191, size: 64, offset: 64)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1361, file: !1348, line: 100, baseType: !1366, size: 64, offset: 128)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1348, line: 180, size: 704, elements: !1368)
!1368 = !{!1369, !1370, !1371, !1385, !1386, !1387, !1413, !1414}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !1367, file: !1348, line: 182, baseType: !1346, size: 64)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1367, file: !1348, line: 183, baseType: !335, size: 32, offset: 64)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !1367, file: !1348, line: 186, baseType: !1372, size: 192, offset: 128)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1373, line: 19, size: 192, elements: !1374)
!1373 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1374 = !{!1375, !1383, !1384}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1372, file: !1373, line: 20, baseType: !1376, size: 128)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1377, line: 292, size: 128, elements: !1378)
!1377 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1378 = !{!1379, !1380, !1382}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1376, file: !1377, line: 293, baseType: !33)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1376, file: !1377, line: 295, baseType: !1381, size: 32)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !20, line: 148, baseType: !335)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1376, file: !1377, line: 296, baseType: !149, size: 64, offset: 64)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1372, file: !1373, line: 21, baseType: !335, size: 32, offset: 128)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1372, file: !1373, line: 22, baseType: !335, size: 32, offset: 160)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !1367, file: !1348, line: 187, baseType: !333, size: 32, offset: 320)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !1367, file: !1348, line: 188, baseType: !333, size: 32, offset: 352)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !1367, file: !1348, line: 189, baseType: !1388, size: 64, offset: 384)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1348, line: 168, size: 320, elements: !1390)
!1390 = !{!1391, !1397, !1401, !1405, !1409}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1389, file: !1348, line: 169, baseType: !1392, size: 64)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1393 = !DISubroutineType(types: !1394)
!1394 = !{!59, !1395, !1366}
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64)
!1396 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !156, line: 539, flags: DIFlagFwdDecl)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1389, file: !1348, line: 171, baseType: !1398, size: 64, offset: 64)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1399 = !DISubroutineType(types: !1400)
!1400 = !{!59, !1346, !15, !116}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1389, file: !1348, line: 173, baseType: !1402, size: 64, offset: 128)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64)
!1403 = !DISubroutineType(types: !1404)
!1404 = !{!59, !1346}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1389, file: !1348, line: 174, baseType: !1406, size: 64, offset: 192)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 64)
!1407 = !DISubroutineType(types: !1408)
!1408 = !{!59, !1346, !1346, !15}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1389, file: !1348, line: 176, baseType: !1410, size: 64, offset: 256)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1411 = !DISubroutineType(types: !1412)
!1412 = !{!59, !1395, !1346, !1366}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !1367, file: !1348, line: 192, baseType: !19, size: 128, offset: 448)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !1367, file: !1348, line: 194, baseType: !622, size: 128, offset: 576)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1358, file: !1348, line: 144, baseType: !1416, size: 64)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1348, line: 103, size: 64, elements: !1417)
!1417 = !{!1418}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !1416, file: !1348, line: 104, baseType: !1346, size: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1358, file: !1348, line: 145, baseType: !1420, size: 256)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1348, line: 107, size: 256, elements: !1421)
!1421 = !{!1422, !1487, !1490, !1491}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1420, file: !1348, line: 108, baseType: !1423, size: 64)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64)
!1424 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1425)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1348, line: 217, size: 768, elements: !1426)
!1426 = !{!1427, !1447, !1451, !1455, !1460, !1464, !1468, !1472, !1473, !1474, !1475, !1483}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1425, file: !1348, line: 222, baseType: !1428, size: 64)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 64)
!1429 = !DISubroutineType(types: !1430)
!1430 = !{!59, !1431}
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 64)
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1348, line: 197, size: 1088, elements: !1433)
!1433 = !{!1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !1432, file: !1348, line: 199, baseType: !1346, size: 64)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1432, file: !1348, line: 200, baseType: !154, size: 64, offset: 64)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !1432, file: !1348, line: 201, baseType: !1395, size: 64, offset: 128)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1432, file: !1348, line: 202, baseType: !149, size: 64, offset: 192)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1432, file: !1348, line: 205, baseType: !294, size: 192, offset: 256)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !1432, file: !1348, line: 206, baseType: !294, size: 192, offset: 448)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1432, file: !1348, line: 207, baseType: !59, size: 32, offset: 640)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1432, file: !1348, line: 208, baseType: !19, size: 128, offset: 704)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !1432, file: !1348, line: 209, baseType: !75, size: 64, offset: 832)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !1432, file: !1348, line: 211, baseType: !122, size: 64, offset: 896)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !1432, file: !1348, line: 212, baseType: !915, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !1432, file: !1348, line: 213, baseType: !915, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1432, file: !1348, line: 214, baseType: !1273, size: 64, offset: 1024)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1425, file: !1348, line: 223, baseType: !1448, size: 64, offset: 64)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{null, !1431}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !1425, file: !1348, line: 236, baseType: !1452, size: 64, offset: 128)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64)
!1453 = !DISubroutineType(types: !1454)
!1454 = !{!59, !1395, !149}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !1425, file: !1348, line: 238, baseType: !1456, size: 64, offset: 192)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{!149, !1395, !1459}
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 64)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !1425, file: !1348, line: 239, baseType: !1461, size: 64, offset: 256)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!149, !1395, !149, !1459}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !1425, file: !1348, line: 240, baseType: !1465, size: 64, offset: 320)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{null, !1395, !149}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1425, file: !1348, line: 242, baseType: !1469, size: 64, offset: 384)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 64)
!1470 = !DISubroutineType(types: !1471)
!1471 = !{!106, !1431, !75, !122, !157}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !1425, file: !1348, line: 252, baseType: !122, size: 64, offset: 448)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !1425, file: !1348, line: 259, baseType: !915, size: 8, offset: 512)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1425, file: !1348, line: 260, baseType: !1469, size: 64, offset: 576)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1425, file: !1348, line: 263, baseType: !1476, size: 64, offset: 640)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 64)
!1477 = !DISubroutineType(types: !1478)
!1478 = !{!1479, !1431, !1481}
!1479 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !1480, line: 52, baseType: !335)
!1480 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 64)
!1482 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1348, line: 27, flags: DIFlagFwdDecl)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1425, file: !1348, line: 266, baseType: !1484, size: 64, offset: 704)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!59, !1431, !165}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1420, file: !1348, line: 109, baseType: !1488, size: 64, offset: 64)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64)
!1489 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1348, line: 31, flags: DIFlagFwdDecl)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1420, file: !1348, line: 110, baseType: !157, size: 64, offset: 128)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !1420, file: !1348, line: 111, baseType: !1346, size: 64, offset: 192)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1347, file: !1348, line: 148, baseType: !149, size: 64, offset: 768)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1347, file: !1348, line: 154, baseType: !195, size: 64, offset: 832)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1347, file: !1348, line: 156, baseType: !117, size: 16, offset: 896)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1347, file: !1348, line: 157, baseType: !116, size: 16, offset: 912)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !1347, file: !1348, line: 158, baseType: !1497, size: 64, offset: 960)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 64)
!1498 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1348, line: 32, flags: DIFlagFwdDecl)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !11, file: !12, line: 71, baseType: !1500, size: 32, offset: 448)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !1501, line: 19, size: 32, elements: !1502)
!1501 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!1502 = !{!1503}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1500, file: !1501, line: 20, baseType: !340, size: 32)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !11, file: !12, line: 75, baseType: !335, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !11, file: !12, line: 76, baseType: !335, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !11, file: !12, line: 77, baseType: !335, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !11, file: !12, line: 78, baseType: !335, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !11, file: !12, line: 79, baseType: !335, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !7, file: !8, line: 463, baseType: !6, size: 64, offset: 512)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !7, file: !8, line: 465, baseType: !1511, size: 64, offset: 576)
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 64)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !1513, line: 88, size: 1664, elements: !1514)
!1513 = !DIFile(filename: "drivers/base/power/../base.h", directory: "/home/lizy2001/genbc/linux")
!1514 = !{!1515, !1532, !1533, !1534, !1535, !1536, !1537, !1726, !1727, !1728}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "klist_children", scope: !1512, file: !1513, line: 89, baseType: !1516, size: 256, align: 64)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "klist", file: !1517, line: 18, size: 256, align: 64, elements: !1518)
!1517 = !DIFile(filename: "./include/linux/klist.h", directory: "/home/lizy2001/genbc/linux")
!1518 = !{!1519, !1520, !1521, !1531}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "k_lock", scope: !1516, file: !1517, line: 19, baseType: !33)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "k_list", scope: !1516, file: !1517, line: 20, baseType: !19, size: 128)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !1516, file: !1517, line: 21, baseType: !1522, size: 64, offset: 128)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!1523 = !DISubroutineType(types: !1524)
!1524 = !{null, !1525}
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "klist_node", file: !1517, line: 37, size: 256, elements: !1527)
!1527 = !{!1528, !1529, !1530}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "n_klist", scope: !1526, file: !1517, line: 38, baseType: !149, size: 64)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "n_node", scope: !1526, file: !1517, line: 39, baseType: !19, size: 128, offset: 64)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "n_ref", scope: !1526, file: !1517, line: 40, baseType: !1500, size: 32, offset: 192)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !1516, file: !1517, line: 22, baseType: !1522, size: 64, offset: 192)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "knode_parent", scope: !1512, file: !1513, line: 90, baseType: !1526, size: 256, offset: 256)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "knode_driver", scope: !1512, file: !1513, line: 91, baseType: !1526, size: 256, offset: 512)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "knode_bus", scope: !1512, file: !1513, line: 92, baseType: !1526, size: 256, offset: 768)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "knode_class", scope: !1512, file: !1513, line: 93, baseType: !1526, size: 256, offset: 1024)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_probe", scope: !1512, file: !1513, line: 94, baseType: !19, size: 128, offset: 1280)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "async_driver", scope: !1512, file: !1513, line: 95, baseType: !1538, size: 64, offset: 1408)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !1540, line: 95, size: 1152, elements: !1541)
!1540 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!1541 = !{!1542, !1543, !1688, !1689, !1690, !1691, !1697, !1701, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1539, file: !1540, line: 96, baseType: !15, size: 64)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1539, file: !1540, line: 97, baseType: !1544, size: 64, offset: 64)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !1546, line: 82, size: 1408, elements: !1547)
!1546 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!1547 = !{!1548, !1549, !1550, !1551, !1552, !1553, !1554, !1558, !1562, !1566, !1570, !1571, !1572, !1573, !1574, !1583, !1584, !1585, !1586, !1614, !1618, !1684, !1687}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1545, file: !1546, line: 83, baseType: !15, size: 64)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !1545, file: !1546, line: 84, baseType: !15, size: 64, offset: 64)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !1545, file: !1546, line: 85, baseType: !6, size: 64, offset: 128)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !1545, file: !1546, line: 86, baseType: !129, size: 64, offset: 192)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !1545, file: !1546, line: 87, baseType: !129, size: 64, offset: 256)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !1545, file: !1546, line: 88, baseType: !129, size: 64, offset: 320)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !1545, file: !1546, line: 90, baseType: !1555, size: 64, offset: 384)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 64)
!1556 = !DISubroutineType(types: !1557)
!1557 = !{!59, !6, !1538}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !1545, file: !1546, line: 91, baseType: !1559, size: 64, offset: 448)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64)
!1560 = !DISubroutineType(types: !1561)
!1561 = !{!59, !6, !70}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !1545, file: !1546, line: 92, baseType: !1563, size: 64, offset: 512)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64)
!1564 = !DISubroutineType(types: !1565)
!1565 = !{!59, !6}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !1545, file: !1546, line: 93, baseType: !1567, size: 64, offset: 576)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64)
!1568 = !DISubroutineType(types: !1569)
!1569 = !{null, !6}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !1545, file: !1546, line: 94, baseType: !1563, size: 64, offset: 640)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !1545, file: !1546, line: 95, baseType: !1567, size: 64, offset: 704)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !1545, file: !1546, line: 97, baseType: !1563, size: 64, offset: 768)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !1545, file: !1546, line: 98, baseType: !1563, size: 64, offset: 832)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !1545, file: !1546, line: 100, baseType: !1575, size: 64, offset: 896)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64)
!1576 = !DISubroutineType(types: !1577)
!1577 = !{!59, !6, !1578}
!1578 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !1579, line: 52, baseType: !1580)
!1579 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !1579, line: 50, size: 32, elements: !1581)
!1581 = !{!1582}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1580, file: !1579, line: 51, baseType: !59, size: 32)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !1545, file: !1546, line: 101, baseType: !1563, size: 64, offset: 960)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !1545, file: !1546, line: 103, baseType: !1563, size: 64, offset: 1024)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !1545, file: !1546, line: 105, baseType: !1563, size: 64, offset: 1088)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1545, file: !1546, line: 107, baseType: !1587, size: 64, offset: 1152)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64)
!1588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1589)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !1579, line: 278, size: 1472, elements: !1590)
!1590 = !{!1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !1589, file: !1579, line: 279, baseType: !1563, size: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !1589, file: !1579, line: 280, baseType: !1567, size: 64, offset: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !1589, file: !1579, line: 281, baseType: !1563, size: 64, offset: 128)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !1589, file: !1579, line: 282, baseType: !1563, size: 64, offset: 192)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !1589, file: !1579, line: 283, baseType: !1563, size: 64, offset: 256)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !1589, file: !1579, line: 284, baseType: !1563, size: 64, offset: 320)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !1589, file: !1579, line: 285, baseType: !1563, size: 64, offset: 384)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !1589, file: !1579, line: 286, baseType: !1563, size: 64, offset: 448)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !1589, file: !1579, line: 287, baseType: !1563, size: 64, offset: 512)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !1589, file: !1579, line: 288, baseType: !1563, size: 64, offset: 576)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !1589, file: !1579, line: 289, baseType: !1563, size: 64, offset: 640)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !1589, file: !1579, line: 290, baseType: !1563, size: 64, offset: 704)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !1589, file: !1579, line: 291, baseType: !1563, size: 64, offset: 768)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !1589, file: !1579, line: 292, baseType: !1563, size: 64, offset: 832)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !1589, file: !1579, line: 293, baseType: !1563, size: 64, offset: 896)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !1589, file: !1579, line: 294, baseType: !1563, size: 64, offset: 960)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !1589, file: !1579, line: 295, baseType: !1563, size: 64, offset: 1024)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !1589, file: !1579, line: 296, baseType: !1563, size: 64, offset: 1088)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !1589, file: !1579, line: 297, baseType: !1563, size: 64, offset: 1152)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !1589, file: !1579, line: 298, baseType: !1563, size: 64, offset: 1216)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !1589, file: !1579, line: 299, baseType: !1563, size: 64, offset: 1280)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !1589, file: !1579, line: 300, baseType: !1563, size: 64, offset: 1344)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !1589, file: !1579, line: 301, baseType: !1563, size: 64, offset: 1408)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !1545, file: !1546, line: 109, baseType: !1615, size: 64, offset: 1216)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64)
!1616 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1617)
!1617 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !1546, line: 109, flags: DIFlagFwdDecl)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1545, file: !1546, line: 111, baseType: !1619, size: 64, offset: 1280)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !1513, line: 40, size: 2880, elements: !1621)
!1621 = !{!1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1645, !1646, !1647, !1648}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "subsys", scope: !1620, file: !1513, line: 41, baseType: !29, size: 704)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "devices_kset", scope: !1620, file: !1513, line: 42, baseType: !28, size: 64, offset: 704)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "interfaces", scope: !1620, file: !1513, line: 43, baseType: !19, size: 128, offset: 768)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1620, file: !1513, line: 44, baseType: !294, size: 192, offset: 896)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "drivers_kset", scope: !1620, file: !1513, line: 46, baseType: !28, size: 64, offset: 1088)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "klist_devices", scope: !1620, file: !1513, line: 47, baseType: !1516, size: 256, align: 64, offset: 1152)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "klist_drivers", scope: !1620, file: !1513, line: 48, baseType: !1516, size: 256, align: 64, offset: 1408)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "bus_notifier", scope: !1620, file: !1513, line: 49, baseType: !1630, size: 320, offset: 1664)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !1631, line: 65, size: 320, elements: !1632)
!1631 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!1632 = !{!1633, !1634}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !1630, file: !1631, line: 66, baseType: !236, size: 256)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1630, file: !1631, line: 67, baseType: !1635, size: 64, offset: 256)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !1631, line: 54, size: 192, elements: !1637)
!1637 = !{!1638, !1643, !1644}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !1636, file: !1631, line: 55, baseType: !1639, size: 64)
!1639 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !1631, line: 51, baseType: !1640)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 64)
!1641 = !DISubroutineType(types: !1642)
!1642 = !{!59, !1635, !125, !149}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1636, file: !1631, line: 56, baseType: !1635, size: 64, offset: 64)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !1636, file: !1631, line: 57, baseType: !59, size: 32, offset: 128)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "drivers_autoprobe", scope: !1620, file: !1513, line: 50, baseType: !335, size: 1, offset: 1984, flags: DIFlagBitField, extraData: i64 1984)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1620, file: !1513, line: 51, baseType: !1544, size: 64, offset: 2048)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "glue_dirs", scope: !1620, file: !1513, line: 53, baseType: !29, size: 704, offset: 2112)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1620, file: !1513, line: 54, baseType: !1649, size: 64, offset: 2816)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 64)
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !1651, line: 54, size: 960, elements: !1652)
!1651 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!1652 = !{!1653, !1654, !1658, !1659, !1660, !1661, !1662, !1667, !1671, !1672, !1673, !1674, !1678, !1682, !1683}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1650, file: !1651, line: 55, baseType: !15, size: 64)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1650, file: !1651, line: 56, baseType: !1655, size: 64, offset: 64)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64)
!1656 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !1657, line: 76, flags: DIFlagFwdDecl)
!1657 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !1650, file: !1651, line: 58, baseType: !129, size: 64, offset: 128)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !1650, file: !1651, line: 59, baseType: !129, size: 64, offset: 192)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !1650, file: !1651, line: 60, baseType: !26, size: 64, offset: 256)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !1650, file: !1651, line: 62, baseType: !1559, size: 64, offset: 320)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !1650, file: !1651, line: 63, baseType: !1663, size: 64, offset: 384)
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 64)
!1664 = !DISubroutineType(types: !1665)
!1665 = !{!75, !6, !1666}
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !1650, file: !1651, line: 65, baseType: !1668, size: 64, offset: 448)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 64)
!1669 = !DISubroutineType(types: !1670)
!1670 = !{null, !1649}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !1650, file: !1651, line: 66, baseType: !1567, size: 64, offset: 512)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !1650, file: !1651, line: 68, baseType: !1563, size: 64, offset: 576)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !1650, file: !1651, line: 70, baseType: !1289, size: 64, offset: 640)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !1650, file: !1651, line: 71, baseType: !1675, size: 64, offset: 704)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 64)
!1676 = !DISubroutineType(types: !1677)
!1677 = !{!1312, !6}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !1650, file: !1651, line: 73, baseType: !1679, size: 64, offset: 768)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 64)
!1680 = !DISubroutineType(types: !1681)
!1681 = !{null, !6, !1332, !1338}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1650, file: !1651, line: 75, baseType: !1587, size: 64, offset: 832)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1650, file: !1651, line: 77, baseType: !1619, size: 64, offset: 896)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !1545, file: !1546, line: 112, baseType: !1685, offset: 1344)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1686, line: 187, elements: !47)
!1686 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !1545, file: !1546, line: 114, baseType: !915, size: 8, offset: 1344)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1539, file: !1540, line: 99, baseType: !1655, size: 64, offset: 128)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !1539, file: !1540, line: 100, baseType: !15, size: 64, offset: 192)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !1539, file: !1540, line: 102, baseType: !915, size: 8, offset: 256)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !1539, file: !1540, line: 103, baseType: !1692, size: 32, offset: 288)
!1692 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !1540, line: 44, baseType: !335, size: 32, elements: !1693)
!1693 = !{!1694, !1695, !1696}
!1694 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!1695 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!1696 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !1539, file: !1540, line: 105, baseType: !1698, size: 64, offset: 320)
!1698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1699, size: 64)
!1699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1700)
!1700 = !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !1540, line: 105, flags: DIFlagFwdDecl)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !1539, file: !1540, line: 106, baseType: !1702, size: 64, offset: 384)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64)
!1703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1704)
!1704 = !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !1540, line: 106, flags: DIFlagFwdDecl)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !1539, file: !1540, line: 108, baseType: !1563, size: 64, offset: 448)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !1539, file: !1540, line: 109, baseType: !1567, size: 64, offset: 512)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !1539, file: !1540, line: 110, baseType: !1563, size: 64, offset: 576)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !1539, file: !1540, line: 111, baseType: !1567, size: 64, offset: 640)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !1539, file: !1540, line: 112, baseType: !1575, size: 64, offset: 704)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !1539, file: !1540, line: 113, baseType: !1563, size: 64, offset: 768)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1539, file: !1540, line: 114, baseType: !129, size: 64, offset: 832)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !1539, file: !1540, line: 115, baseType: !129, size: 64, offset: 896)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1539, file: !1540, line: 117, baseType: !1587, size: 64, offset: 960)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !1539, file: !1540, line: 118, baseType: !1567, size: 64, offset: 1024)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1539, file: !1540, line: 120, baseType: !1716, size: 64, offset: 1088)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !1513, line: 58, size: 1152, elements: !1718)
!1718 = !{!1719, !1720, !1721, !1722, !1725}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1717, file: !1513, line: 59, baseType: !11, size: 512)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "klist_devices", scope: !1717, file: !1513, line: 60, baseType: !1516, size: 256, align: 64, offset: 512)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "knode_bus", scope: !1717, file: !1513, line: 61, baseType: !1526, size: 256, offset: 768)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "mkobj", scope: !1717, file: !1513, line: 62, baseType: !1723, size: 64, offset: 1024)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64)
!1724 = !DICompositeType(tag: DW_TAG_structure_type, name: "module_kobject", file: !1513, line: 62, flags: DIFlagFwdDecl)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !1717, file: !1513, line: 63, baseType: !1538, size: 64, offset: 1088)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_probe_reason", scope: !1512, file: !1513, line: 96, baseType: !75, size: 64, offset: 1472)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !1512, file: !1513, line: 97, baseType: !6, size: 64, offset: 1536)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !1512, file: !1513, line: 98, baseType: !476, size: 1, offset: 1600, flags: DIFlagBitField, extraData: i64 1600)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !7, file: !8, line: 467, baseType: !15, size: 64, offset: 640)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7, file: !8, line: 468, baseType: !1731, size: 64, offset: 704)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64)
!1732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1733)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !8, line: 87, size: 384, elements: !1734)
!1734 = !{!1735, !1736, !1737, !1738, !1742, !1743}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1733, file: !8, line: 88, baseType: !15, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1733, file: !8, line: 89, baseType: !129, size: 64, offset: 64)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !1733, file: !8, line: 90, baseType: !1559, size: 64, offset: 128)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !1733, file: !8, line: 91, baseType: !1739, size: 64, offset: 192)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64)
!1740 = !DISubroutineType(types: !1741)
!1741 = !{!75, !6, !1666, !1332, !1338}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1733, file: !8, line: 93, baseType: !1567, size: 64, offset: 256)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1733, file: !8, line: 95, baseType: !1587, size: 64, offset: 320)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !7, file: !8, line: 470, baseType: !1544, size: 64, offset: 768)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !7, file: !8, line: 471, baseType: !1538, size: 64, offset: 832)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !7, file: !8, line: 473, baseType: !149, size: 64, offset: 896)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !7, file: !8, line: 475, baseType: !149, size: 64, offset: 960)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !7, file: !8, line: 480, baseType: !294, size: 192, offset: 1024)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !7, file: !8, line: 484, baseType: !1750, size: 576, offset: 1216)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !8, line: 361, size: 576, elements: !1751)
!1751 = !{!1752, !1753, !1754, !1755, !1756, !1757}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !1750, file: !8, line: 362, baseType: !19, size: 128)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !1750, file: !8, line: 363, baseType: !19, size: 128, offset: 128)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !1750, file: !8, line: 364, baseType: !19, size: 128, offset: 256)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !1750, file: !8, line: 365, baseType: !19, size: 128, offset: 384)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !1750, file: !8, line: 366, baseType: !915, size: 8, offset: 512)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1750, file: !8, line: 367, baseType: !1758, size: 32, offset: 544)
!1758 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !8, line: 343, baseType: !335, size: 32, elements: !1759)
!1759 = !{!1760, !1761, !1762, !1763}
!1760 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!1761 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!1762 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!1763 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !7, file: !8, line: 485, baseType: !1765, size: 2304, offset: 1792)
!1765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !1579, line: 565, size: 2304, elements: !1766)
!1766 = !{!1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1858, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1881, !1885}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !1765, file: !1579, line: 566, baseType: !1578, size: 32)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !1765, file: !1579, line: 567, baseType: !335, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !1765, file: !1579, line: 568, baseType: !335, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !1765, file: !1579, line: 569, baseType: !915, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !1765, file: !1579, line: 570, baseType: !915, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !1765, file: !1579, line: 571, baseType: !915, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !1765, file: !1579, line: 572, baseType: !915, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !1765, file: !1579, line: 573, baseType: !915, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !1765, file: !1579, line: 574, baseType: !915, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !1765, file: !1579, line: 575, baseType: !915, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !1765, file: !1579, line: 576, baseType: !915, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !1765, file: !1579, line: 577, baseType: !333, size: 32, offset: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1765, file: !1579, line: 578, baseType: !33, offset: 96)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1765, file: !1579, line: 580, baseType: !19, size: 128, offset: 128)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !1765, file: !1579, line: 581, baseType: !651, size: 192, offset: 256)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !1765, file: !1579, line: 582, baseType: !1783, size: 64, offset: 448)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !1785, line: 43, size: 1472, elements: !1786)
!1785 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!1786 = !{!1787, !1788, !1789, !1790, !1791, !1800, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1784, file: !1785, line: 44, baseType: !15, size: 64)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1784, file: !1785, line: 45, baseType: !59, size: 32, offset: 64)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1784, file: !1785, line: 46, baseType: !19, size: 128, offset: 128)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1784, file: !1785, line: 47, baseType: !33, offset: 256)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !1784, file: !1785, line: 48, baseType: !1792, size: 64, offset: 256)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !1794, line: 31, size: 192, elements: !1795)
!1794 = !DIFile(filename: "drivers/base/power/power.h", directory: "/home/lizy2001/genbc/linux")
!1795 = !{!1796, !1797, !1798, !1799}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1793, file: !1794, line: 32, baseType: !6, size: 64)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1793, file: !1794, line: 33, baseType: !335, size: 32, offset: 64)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1793, file: !1794, line: 34, baseType: !59, size: 32, offset: 96)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1793, file: !1794, line: 35, baseType: !15, size: 64, offset: 128)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !1784, file: !1785, line: 49, baseType: !1801, size: 320, offset: 320)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !1802, line: 11, size: 320, elements: !1803)
!1802 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!1803 = !{!1804, !1805, !1806, !1811}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1801, file: !1802, line: 16, baseType: !615, size: 128)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1801, file: !1802, line: 17, baseType: !125, size: 64, offset: 128)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1801, file: !1802, line: 18, baseType: !1807, size: 64, offset: 192)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 64)
!1808 = !DISubroutineType(types: !1809)
!1809 = !{null, !1810}
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1801, file: !1802, line: 19, baseType: !333, size: 32, offset: 256)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !1784, file: !1785, line: 50, baseType: !125, size: 64, offset: 640)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !1784, file: !1785, line: 51, baseType: !411, size: 64, offset: 704)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !1784, file: !1785, line: 52, baseType: !411, size: 64, offset: 768)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !1784, file: !1785, line: 53, baseType: !411, size: 64, offset: 832)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !1784, file: !1785, line: 54, baseType: !411, size: 64, offset: 896)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !1784, file: !1785, line: 55, baseType: !411, size: 64, offset: 960)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !1784, file: !1785, line: 56, baseType: !125, size: 64, offset: 1024)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !1784, file: !1785, line: 57, baseType: !125, size: 64, offset: 1088)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !1784, file: !1785, line: 58, baseType: !125, size: 64, offset: 1152)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !1784, file: !1785, line: 59, baseType: !125, size: 64, offset: 1216)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !1784, file: !1785, line: 60, baseType: !125, size: 64, offset: 1280)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1784, file: !1785, line: 61, baseType: !6, size: 64, offset: 1344)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1784, file: !1785, line: 62, baseType: !915, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !1784, file: !1785, line: 63, baseType: !915, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !1765, file: !1579, line: 583, baseType: !915, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !1765, file: !1579, line: 584, baseType: !915, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !1765, file: !1579, line: 585, baseType: !915, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !1765, file: !1579, line: 586, baseType: !335, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !1765, file: !1579, line: 587, baseType: !335, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !1765, file: !1579, line: 592, baseType: !402, size: 512, offset: 576)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !1765, file: !1579, line: 593, baseType: !195, size: 64, offset: 1088)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1765, file: !1579, line: 594, baseType: !1240, size: 256, offset: 1152)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !1765, file: !1579, line: 595, baseType: !622, size: 128, offset: 1408)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !1765, file: !1579, line: 596, baseType: !1792, size: 64, offset: 1536)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !1765, file: !1579, line: 597, baseType: !217, size: 32, offset: 1600)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !1765, file: !1579, line: 598, baseType: !217, size: 32, offset: 1632)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !1765, file: !1579, line: 599, baseType: !335, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !1765, file: !1579, line: 600, baseType: !335, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !1765, file: !1579, line: 601, baseType: !335, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !1765, file: !1579, line: 602, baseType: !335, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !1765, file: !1579, line: 603, baseType: !335, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !1765, file: !1579, line: 604, baseType: !915, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !1765, file: !1579, line: 605, baseType: !335, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !1765, file: !1579, line: 606, baseType: !335, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !1765, file: !1579, line: 607, baseType: !335, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !1765, file: !1579, line: 608, baseType: !335, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !1765, file: !1579, line: 609, baseType: !335, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !1765, file: !1579, line: 610, baseType: !335, size: 32, offset: 1696)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !1765, file: !1579, line: 611, baseType: !1851, size: 32, offset: 1728)
!1851 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !1579, line: 524, baseType: !335, size: 32, elements: !1852)
!1852 = !{!1853, !1854, !1855, !1856, !1857}
!1853 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!1854 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!1855 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!1856 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!1857 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !1765, file: !1579, line: 612, baseType: !1859, size: 32, offset: 1760)
!1859 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !1579, line: 502, baseType: !335, size: 32, elements: !1860)
!1860 = !{!1861, !1862, !1863, !1864}
!1861 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!1862 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!1863 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!1864 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !1765, file: !1579, line: 613, baseType: !59, size: 32, offset: 1792)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !1765, file: !1579, line: 614, baseType: !59, size: 32, offset: 1824)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !1765, file: !1579, line: 615, baseType: !195, size: 64, offset: 1856)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !1765, file: !1579, line: 616, baseType: !195, size: 64, offset: 1920)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !1765, file: !1579, line: 617, baseType: !195, size: 64, offset: 1984)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !1765, file: !1579, line: 618, baseType: !195, size: 64, offset: 2048)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !1765, file: !1579, line: 620, baseType: !1872, size: 64, offset: 2112)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 64)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !1579, line: 536, size: 256, elements: !1874)
!1874 = !{!1875, !1876, !1877, !1878}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1873, file: !1579, line: 537, baseType: !33)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1873, file: !1579, line: 538, baseType: !335, size: 32)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !1873, file: !1579, line: 540, baseType: !19, size: 128, offset: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !1873, file: !1579, line: 543, baseType: !1879, size: 64, offset: 192)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 64)
!1880 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !1579, line: 534, flags: DIFlagFwdDecl)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !1765, file: !1579, line: 621, baseType: !1882, size: 64, offset: 2176)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = !DISubroutineType(types: !1884)
!1884 = !{null, !6, !575}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !1765, file: !1579, line: 622, baseType: !1886, size: 64, offset: 2240)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !1888, line: 117, size: 2304, elements: !1889)
!1888 = !DIFile(filename: "./include/linux/pm_qos.h", directory: "/home/lizy2001/genbc/linux")
!1889 = !{!1890, !1909, !1910, !1917, !1922, !1960, !1961}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "resume_latency", scope: !1887, file: !1888, line: 118, baseType: !1891, size: 320)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_qos_constraints", file: !1888, line: 52, size: 320, elements: !1892)
!1892 = !{!1893, !1898, !1899, !1900, !1901, !1907}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1891, file: !1888, line: 53, baseType: !1894, size: 128)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plist_head", file: !1895, line: 79, size: 128, elements: !1896)
!1895 = !DIFile(filename: "./include/linux/plist.h", directory: "/home/lizy2001/genbc/linux")
!1896 = !{!1897}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "node_list", scope: !1894, file: !1895, line: 80, baseType: !19, size: 128)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "target_value", scope: !1891, file: !1888, line: 54, baseType: !575, size: 32, offset: 128)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "default_value", scope: !1891, file: !1888, line: 55, baseType: !575, size: 32, offset: 160)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "no_constraint_value", scope: !1891, file: !1888, line: 56, baseType: !575, size: 32, offset: 192)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1891, file: !1888, line: 57, baseType: !1902, size: 32, offset: 224)
!1902 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pm_qos_type", file: !1888, line: 41, baseType: !335, size: 32, elements: !1903)
!1903 = !{!1904, !1905, !1906}
!1904 = !DIEnumerator(name: "PM_QOS_UNITIALIZED", value: 0, isUnsigned: true)
!1905 = !DIEnumerator(name: "PM_QOS_MAX", value: 1, isUnsigned: true)
!1906 = !DIEnumerator(name: "PM_QOS_MIN", value: 2, isUnsigned: true)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "notifiers", scope: !1891, file: !1888, line: 58, baseType: !1908, size: 64, offset: 256)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 64)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "latency_tolerance", scope: !1887, file: !1888, line: 119, baseType: !1891, size: 320, offset: 320)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !1887, file: !1888, line: 120, baseType: !1911, size: 1280, offset: 640)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "freq_constraints", file: !1888, line: 85, size: 1280, elements: !1912)
!1912 = !{!1913, !1914, !1915, !1916}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "min_freq", scope: !1911, file: !1888, line: 86, baseType: !1891, size: 320)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "min_freq_notifiers", scope: !1911, file: !1888, line: 87, baseType: !1630, size: 320, offset: 320)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "max_freq", scope: !1911, file: !1888, line: 88, baseType: !1891, size: 320, offset: 640)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "max_freq_notifiers", scope: !1911, file: !1888, line: 89, baseType: !1630, size: 320, offset: 960)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1887, file: !1888, line: 121, baseType: !1918, size: 192, offset: 1920)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_qos_flags", file: !1888, line: 71, size: 192, elements: !1919)
!1919 = !{!1920, !1921}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1918, file: !1888, line: 72, baseType: !19, size: 128)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "effective_flags", scope: !1918, file: !1888, line: 73, baseType: !575, size: 32, offset: 128)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "resume_latency_req", scope: !1887, file: !1888, line: 122, baseType: !1923, size: 64, offset: 2112)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos_request", file: !1888, line: 107, size: 576, elements: !1925)
!1925 = !{!1926, !1934, !1959}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1924, file: !1888, line: 108, baseType: !1927, size: 32)
!1927 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dev_pm_qos_req_type", file: !1888, line: 99, baseType: !335, size: 32, elements: !1928)
!1928 = !{!1929, !1930, !1931, !1932, !1933}
!1929 = !DIEnumerator(name: "DEV_PM_QOS_RESUME_LATENCY", value: 1, isUnsigned: true)
!1930 = !DIEnumerator(name: "DEV_PM_QOS_LATENCY_TOLERANCE", value: 2, isUnsigned: true)
!1931 = !DIEnumerator(name: "DEV_PM_QOS_MIN_FREQUENCY", value: 3, isUnsigned: true)
!1932 = !DIEnumerator(name: "DEV_PM_QOS_MAX_FREQUENCY", value: 4, isUnsigned: true)
!1933 = !DIEnumerator(name: "DEV_PM_QOS_FLAGS", value: 5, isUnsigned: true)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1924, file: !1888, line: 113, baseType: !1935, size: 448, offset: 64)
!1935 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1924, file: !1888, line: 109, size: 448, elements: !1936)
!1936 = !{!1937, !1943, !1948}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "pnode", scope: !1935, file: !1888, line: 110, baseType: !1938, size: 320)
!1938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plist_node", file: !1895, line: 83, size: 320, elements: !1939)
!1939 = !{!1940, !1941, !1942}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1938, file: !1895, line: 84, baseType: !59, size: 32)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "prio_list", scope: !1938, file: !1895, line: 85, baseType: !19, size: 128, offset: 64)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "node_list", scope: !1938, file: !1895, line: 86, baseType: !19, size: 128, offset: 192)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "flr", scope: !1935, file: !1888, line: 111, baseType: !1944, size: 192)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_qos_flags_request", file: !1888, line: 66, size: 192, elements: !1945)
!1945 = !{!1946, !1947}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1944, file: !1888, line: 67, baseType: !19, size: 128)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1944, file: !1888, line: 68, baseType: !575, size: 32, offset: 128)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !1935, file: !1888, line: 112, baseType: !1949, size: 448)
!1949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "freq_qos_request", file: !1888, line: 92, size: 448, elements: !1950)
!1950 = !{!1951, !1956, !1957}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1949, file: !1888, line: 93, baseType: !1952, size: 32)
!1952 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "freq_qos_req_type", file: !1888, line: 80, baseType: !335, size: 32, elements: !1953)
!1953 = !{!1954, !1955}
!1954 = !DIEnumerator(name: "FREQ_QOS_MIN", value: 1, isUnsigned: true)
!1955 = !DIEnumerator(name: "FREQ_QOS_MAX", value: 2, isUnsigned: true)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "pnode", scope: !1949, file: !1888, line: 94, baseType: !1938, size: 320, offset: 64)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !1949, file: !1888, line: 95, baseType: !1958, size: 64, offset: 384)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1924, file: !1888, line: 114, baseType: !6, size: 64, offset: 512)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "latency_tolerance_req", scope: !1887, file: !1888, line: 123, baseType: !1923, size: 64, offset: 2176)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "flags_req", scope: !1887, file: !1888, line: 124, baseType: !1923, size: 64, offset: 2240)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !7, file: !8, line: 486, baseType: !1963, size: 64, offset: 4096)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !1579, line: 642, size: 1792, elements: !1965)
!1965 = !{!1966, !1967, !1968, !1970, !1971, !1972}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1964, file: !1579, line: 643, baseType: !1589, size: 1472)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1964, file: !1579, line: 644, baseType: !1563, size: 64, offset: 1472)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !1964, file: !1579, line: 645, baseType: !1969, size: 64, offset: 1536)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !1964, file: !1579, line: 646, baseType: !1563, size: 64, offset: 1600)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !1964, file: !1579, line: 647, baseType: !1567, size: 64, offset: 1664)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !1964, file: !1579, line: 648, baseType: !1567, size: 64, offset: 1728)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !7, file: !8, line: 493, baseType: !1974, size: 64, offset: 4160)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 64)
!1975 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !8, line: 493, flags: DIFlagFwdDecl)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !7, file: !8, line: 499, baseType: !19, size: 128, offset: 4224)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !7, file: !8, line: 502, baseType: !1978, size: 64, offset: 4352)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1980)
!1980 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !8, line: 502, flags: DIFlagFwdDecl)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !7, file: !8, line: 504, baseType: !1982, size: 64, offset: 4416)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !7, file: !8, line: 505, baseType: !195, size: 64, offset: 4480)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !7, file: !8, line: 510, baseType: !195, size: 64, offset: 4544)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !7, file: !8, line: 511, baseType: !1986, size: 64, offset: 4608)
!1986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 64)
!1987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1988)
!1988 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !8, line: 511, flags: DIFlagFwdDecl)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !7, file: !8, line: 513, baseType: !1990, size: 64, offset: 4672)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 64)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !8, line: 288, size: 128, elements: !1992)
!1992 = !{!1993, !1994}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !1991, file: !8, line: 293, baseType: !335, size: 32)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !1991, file: !8, line: 294, baseType: !125, size: 64, offset: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !7, file: !8, line: 515, baseType: !19, size: 128, offset: 4736)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !7, file: !8, line: 526, baseType: !1997, offset: 4864)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !1998, line: 5, elements: !47)
!1998 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !7, file: !8, line: 528, baseType: !2000, size: 64, offset: 4864)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !2002, line: 14, flags: DIFlagFwdDecl)
!2002 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !7, file: !8, line: 529, baseType: !2004, size: 64, offset: 4928)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !1546, line: 22, flags: DIFlagFwdDecl)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !7, file: !8, line: 534, baseType: !2007, size: 32, offset: 4992)
!2007 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !20, line: 16, baseType: !2008)
!2008 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !20, line: 13, baseType: !333)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7, file: !8, line: 535, baseType: !333, size: 32, offset: 5024)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !7, file: !8, line: 537, baseType: !33, offset: 5056)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !7, file: !8, line: 538, baseType: !19, size: 128, offset: 5056)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !7, file: !8, line: 540, baseType: !1649, size: 64, offset: 5184)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !7, file: !8, line: 541, baseType: !129, size: 64, offset: 5248)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !7, file: !8, line: 543, baseType: !1567, size: 64, offset: 5312)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !7, file: !8, line: 544, baseType: !2016, size: 64, offset: 5376)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64)
!2017 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !8, line: 45, flags: DIFlagFwdDecl)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !7, file: !8, line: 545, baseType: !2019, size: 64, offset: 5440)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 64)
!2020 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !8, line: 47, flags: DIFlagFwdDecl)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !7, file: !8, line: 547, baseType: !915, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !7, file: !8, line: 548, baseType: !915, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !7, file: !8, line: 549, baseType: !915, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !7, file: !8, line: 550, baseType: !915, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!2025 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2026, retainedTypes: !2095, globals: !2128, splitDebugInlining: false, nameTableKind: None)
!2026 = !{!418, !552, !1295, !1692, !1758, !1851, !1859, !1902, !1927, !1952, !2027, !2032, !2049, !2080, !2088}
!2027 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2028, line: 10, baseType: !335, size: 32, elements: !2029)
!2028 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!2029 = !{!2030, !2031}
!2030 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!2031 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!2032 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_mode", file: !403, line: 39, baseType: !335, size: 32, elements: !2033)
!2033 = !{!2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048}
!2034 = !DIEnumerator(name: "HRTIMER_MODE_ABS", value: 0, isUnsigned: true)
!2035 = !DIEnumerator(name: "HRTIMER_MODE_REL", value: 1, isUnsigned: true)
!2036 = !DIEnumerator(name: "HRTIMER_MODE_PINNED", value: 2, isUnsigned: true)
!2037 = !DIEnumerator(name: "HRTIMER_MODE_SOFT", value: 4, isUnsigned: true)
!2038 = !DIEnumerator(name: "HRTIMER_MODE_HARD", value: 8, isUnsigned: true)
!2039 = !DIEnumerator(name: "HRTIMER_MODE_ABS_PINNED", value: 2, isUnsigned: true)
!2040 = !DIEnumerator(name: "HRTIMER_MODE_REL_PINNED", value: 3, isUnsigned: true)
!2041 = !DIEnumerator(name: "HRTIMER_MODE_ABS_SOFT", value: 4, isUnsigned: true)
!2042 = !DIEnumerator(name: "HRTIMER_MODE_REL_SOFT", value: 5, isUnsigned: true)
!2043 = !DIEnumerator(name: "HRTIMER_MODE_ABS_PINNED_SOFT", value: 6, isUnsigned: true)
!2044 = !DIEnumerator(name: "HRTIMER_MODE_REL_PINNED_SOFT", value: 7, isUnsigned: true)
!2045 = !DIEnumerator(name: "HRTIMER_MODE_ABS_HARD", value: 8, isUnsigned: true)
!2046 = !DIEnumerator(name: "HRTIMER_MODE_REL_HARD", value: 9, isUnsigned: true)
!2047 = !DIEnumerator(name: "HRTIMER_MODE_ABS_PINNED_HARD", value: 10, isUnsigned: true)
!2048 = !DIEnumerator(name: "HRTIMER_MODE_REL_PINNED_HARD", value: 11, isUnsigned: true)
!2049 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1241, line: 30, baseType: !110, size: 64, elements: !2050)
!2050 = !{!2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079}
!2051 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!2052 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!2053 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!2054 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!2055 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!2056 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!2057 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!2058 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!2059 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!2060 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!2061 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!2062 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!2063 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!2064 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!2065 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!2066 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!2067 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!2068 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!2069 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!2070 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!2071 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!2072 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!2073 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!2074 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!2075 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!2076 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!2077 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!2078 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!2079 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!2080 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "device_link_state", file: !8, line: 306, baseType: !59, size: 32, elements: !2081)
!2081 = !{!2082, !2083, !2084, !2085, !2086, !2087}
!2082 = !DIEnumerator(name: "DL_STATE_NONE", value: -1)
!2083 = !DIEnumerator(name: "DL_STATE_DORMANT", value: 0)
!2084 = !DIEnumerator(name: "DL_STATE_AVAILABLE", value: 1)
!2085 = !DIEnumerator(name: "DL_STATE_CONSUMER_PROBE", value: 2)
!2086 = !DIEnumerator(name: "DL_STATE_ACTIVE", value: 3)
!2087 = !DIEnumerator(name: "DL_STATE_SUPPLIER_UNBIND", value: 4)
!2088 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "refcount_saturation_type", file: !341, line: 119, baseType: !335, size: 32, elements: !2089)
!2089 = !{!2090, !2091, !2092, !2093, !2094}
!2090 = !DIEnumerator(name: "REFCOUNT_ADD_NOT_ZERO_OVF", value: 0, isUnsigned: true)
!2091 = !DIEnumerator(name: "REFCOUNT_ADD_OVF", value: 1, isUnsigned: true)
!2092 = !DIEnumerator(name: "REFCOUNT_ADD_UAF", value: 2, isUnsigned: true)
!2093 = !DIEnumerator(name: "REFCOUNT_SUB_UAF", value: 3, isUnsigned: true)
!2094 = !DIEnumerator(name: "REFCOUNT_DEC_LEAK", value: 4, isUnsigned: true)
!2095 = !{!2096, !2099, !195, !149, !125, !2102, !2105, !2119, !323, !662, !2120, !2122, !2123, !6, !2124, !2126}
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64)
!2097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2098)
!2098 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !59)
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 64)
!2100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2101)
!2101 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !199)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!2103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2104)
!2104 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !23)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_link", file: !8, line: 575, size: 6272, elements: !2107)
!2107 = !{!2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "supplier", scope: !2106, file: !8, line: 576, baseType: !6, size: 64)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "s_node", scope: !2106, file: !8, line: 577, baseType: !19, size: 128, offset: 64)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "consumer", scope: !2106, file: !8, line: 578, baseType: !6, size: 64, offset: 192)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "c_node", scope: !2106, file: !8, line: 579, baseType: !19, size: 128, offset: 256)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "link_dev", scope: !2106, file: !8, line: 580, baseType: !7, size: 5568, offset: 384)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2106, file: !8, line: 581, baseType: !2080, size: 32, offset: 5952)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2106, file: !8, line: 582, baseType: !333, size: 32, offset: 5984)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_active", scope: !2106, file: !8, line: 583, baseType: !340, size: 32, offset: 6016)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !2106, file: !8, line: 584, baseType: !1500, size: 32, offset: 6048)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2106, file: !8, line: 586, baseType: !629, size: 128, align: 64, offset: 6080)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "supplier_preactivated", scope: !2106, file: !8, line: 588, baseType: !915, size: 8, offset: 6208)
!2119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 64)
!2121 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !333)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64)
!2125 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_callback_t", file: !3, line: 19, baseType: !1563)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !195)
!2128 = !{!0, !2129}
!2129 = !DIGlobalVariableExpression(var: !2130, expr: !DIExpression())
!2130 = distinct !DIGlobalVariable(name: "__key", scope: !2131, file: !3, line: 1613, type: !1685, isLocal: true, isDefinition: true)
!2131 = distinct !DISubprogram(name: "pm_runtime_init", scope: !3, file: !3, line: 1590, type: !1568, scopeLine: 1591, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2132 = !{!"rsp"}
!2133 = !{i32 7, !"Dwarf Version", i32 4}
!2134 = !{i32 2, !"Debug Info Version", i32 3}
!2135 = !{i32 1, !"wchar_size", i32 2}
!2136 = !{i32 1, !"Code Model", i32 2}
!2137 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!2138 = distinct !DISubprogram(name: "pm_runtime_active_time", scope: !3, file: !3, line: 114, type: !2139, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2139 = !DISubroutineType(types: !2140)
!2140 = !{!195, !6}
!2141 = !DILocalVariable(name: "dev", arg: 1, scope: !2138, file: !3, line: 114, type: !6)
!2142 = !DILocation(line: 114, column: 43, scope: !2138)
!2143 = !DILocation(line: 116, column: 32, scope: !2138)
!2144 = !DILocation(line: 116, column: 9, scope: !2138)
!2145 = !DILocation(line: 116, column: 2, scope: !2138)
!2146 = distinct !DISubprogram(name: "rpm_get_accounted_time", scope: !3, file: !3, line: 99, type: !2147, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2147 = !DISubroutineType(types: !2148)
!2148 = !{!195, !6, !915}
!2149 = !DILocalVariable(name: "lock", arg: 1, scope: !2150, file: !2151, line: 407, type: !2154)
!2150 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !2151, file: !2151, line: 407, type: !2152, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2151 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!2152 = !DISubroutineType(types: !2153)
!2153 = !{null, !2154, !125}
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !33, size: 64)
!2155 = !DILocation(line: 407, column: 64, scope: !2150, inlinedAt: !2156)
!2156 = distinct !DILocation(line: 109, column: 2, scope: !2146)
!2157 = !DILocalVariable(name: "flags", arg: 2, scope: !2150, file: !2151, line: 407, type: !125)
!2158 = !DILocation(line: 407, column: 84, scope: !2150, inlinedAt: !2156)
!2159 = !DILocalVariable(name: "lock", arg: 1, scope: !2160, file: !2151, line: 327, type: !2154)
!2160 = distinct !DISubprogram(name: "spinlock_check", scope: !2151, file: !2151, line: 327, type: !2161, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2161 = !DISubroutineType(types: !2162)
!2162 = !{!2163, !2154}
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 64)
!2164 = !DILocation(line: 327, column: 67, scope: !2160, inlinedAt: !2165)
!2165 = distinct !DILocation(line: 104, column: 2, scope: !2166)
!2166 = distinct !DILexicalBlock(scope: !2167, file: !3, line: 104, column: 2)
!2167 = distinct !DILexicalBlock(scope: !2168, file: !3, line: 104, column: 2)
!2168 = distinct !DILexicalBlock(scope: !2169, file: !3, line: 104, column: 2)
!2169 = distinct !DILexicalBlock(scope: !2170, file: !3, line: 104, column: 2)
!2170 = distinct !DILexicalBlock(scope: !2146, file: !3, line: 104, column: 2)
!2171 = !DILocalVariable(name: "dev", arg: 1, scope: !2146, file: !3, line: 99, type: !6)
!2172 = !DILocation(line: 99, column: 50, scope: !2146)
!2173 = !DILocalVariable(name: "suspended", arg: 2, scope: !2146, file: !3, line: 99, type: !915)
!2174 = !DILocation(line: 99, column: 60, scope: !2146)
!2175 = !DILocalVariable(name: "time", scope: !2146, file: !3, line: 101, type: !195)
!2176 = !DILocation(line: 101, column: 6, scope: !2146)
!2177 = !DILocalVariable(name: "flags", scope: !2146, file: !3, line: 102, type: !125)
!2178 = !DILocation(line: 102, column: 16, scope: !2146)
!2179 = !DILocation(line: 104, column: 2, scope: !2146)
!2180 = !DILocation(line: 104, column: 2, scope: !2170)
!2181 = !DILocalVariable(name: "__dummy", scope: !2182, file: !3, line: 104, type: !125)
!2182 = distinct !DILexicalBlock(scope: !2169, file: !3, line: 104, column: 2)
!2183 = !DILocation(line: 104, column: 2, scope: !2182)
!2184 = !DILocalVariable(name: "__dummy2", scope: !2182, file: !3, line: 104, type: !125)
!2185 = !DILocation(line: 104, column: 2, scope: !2169)
!2186 = !DILocation(line: 104, column: 2, scope: !2168)
!2187 = !DILocation(line: 104, column: 2, scope: !2188)
!2188 = distinct !DILexicalBlock(scope: !2168, file: !3, line: 104, column: 2)
!2189 = !DILocalVariable(name: "__dummy", scope: !2190, file: !3, line: 104, type: !125)
!2190 = distinct !DILexicalBlock(scope: !2191, file: !3, line: 104, column: 2)
!2191 = distinct !DILexicalBlock(scope: !2188, file: !3, line: 104, column: 2)
!2192 = !DILocation(line: 104, column: 2, scope: !2190)
!2193 = !DILocalVariable(name: "__dummy2", scope: !2190, file: !3, line: 104, type: !125)
!2194 = !DILocation(line: 104, column: 2, scope: !2191)
!2195 = !DILocation(line: 104, column: 2, scope: !2167)
!2196 = !{i32 -2143582458}
!2197 = !DILocation(line: 104, column: 2, scope: !2166)
!2198 = !DILocation(line: 329, column: 10, scope: !2160, inlinedAt: !2165)
!2199 = !DILocation(line: 329, column: 16, scope: !2160, inlinedAt: !2165)
!2200 = !DILocation(line: 106, column: 31, scope: !2146)
!2201 = !DILocation(line: 106, column: 2, scope: !2146)
!2202 = !DILocation(line: 107, column: 9, scope: !2146)
!2203 = !DILocation(line: 107, column: 21, scope: !2146)
!2204 = !DILocation(line: 107, column: 26, scope: !2146)
!2205 = !DILocation(line: 107, column: 32, scope: !2146)
!2206 = !DILocation(line: 107, column: 49, scope: !2146)
!2207 = !DILocation(line: 107, column: 54, scope: !2146)
!2208 = !DILocation(line: 107, column: 60, scope: !2146)
!2209 = !DILocation(line: 107, column: 7, scope: !2146)
!2210 = !DILocation(line: 109, column: 26, scope: !2146)
!2211 = !DILocation(line: 109, column: 31, scope: !2146)
!2212 = !DILocation(line: 109, column: 37, scope: !2146)
!2213 = !DILocation(line: 109, column: 43, scope: !2146)
!2214 = !DILocalVariable(name: "__dummy", scope: !2215, file: !2151, line: 409, type: !125)
!2215 = distinct !DILexicalBlock(scope: !2216, file: !2151, line: 409, column: 2)
!2216 = distinct !DILexicalBlock(scope: !2150, file: !2151, line: 409, column: 2)
!2217 = !DILocation(line: 409, column: 2, scope: !2215, inlinedAt: !2156)
!2218 = !DILocalVariable(name: "__dummy2", scope: !2215, file: !2151, line: 409, type: !125)
!2219 = !DILocalVariable(name: "__dummy", scope: !2220, file: !2151, line: 409, type: !125)
!2220 = distinct !DILexicalBlock(scope: !2221, file: !2151, line: 409, column: 2)
!2221 = distinct !DILexicalBlock(scope: !2222, file: !2151, line: 409, column: 2)
!2222 = distinct !DILexicalBlock(scope: !2223, file: !2151, line: 409, column: 2)
!2223 = distinct !DILexicalBlock(scope: !2216, file: !2151, line: 409, column: 2)
!2224 = !DILocation(line: 409, column: 2, scope: !2220, inlinedAt: !2156)
!2225 = !DILocalVariable(name: "__dummy2", scope: !2220, file: !2151, line: 409, type: !125)
!2226 = !DILocation(line: 409, column: 2, scope: !2221, inlinedAt: !2156)
!2227 = !DILocation(line: 409, column: 2, scope: !2228, inlinedAt: !2156)
!2228 = distinct !DILexicalBlock(scope: !2223, file: !2151, line: 409, column: 2)
!2229 = !{i32 -2145278147}
!2230 = !DILocation(line: 409, column: 2, scope: !2231, inlinedAt: !2156)
!2231 = distinct !DILexicalBlock(scope: !2228, file: !2151, line: 409, column: 2)
!2232 = !DILocation(line: 111, column: 9, scope: !2146)
!2233 = !DILocation(line: 111, column: 2, scope: !2146)
!2234 = distinct !DISubprogram(name: "pm_runtime_suspended_time", scope: !3, file: !3, line: 119, type: !2139, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2235 = !DILocalVariable(name: "dev", arg: 1, scope: !2234, file: !3, line: 119, type: !6)
!2236 = !DILocation(line: 119, column: 46, scope: !2234)
!2237 = !DILocation(line: 121, column: 32, scope: !2234)
!2238 = !DILocation(line: 121, column: 9, scope: !2234)
!2239 = !DILocation(line: 121, column: 2, scope: !2234)
!2240 = distinct !DISubprogram(name: "pm_runtime_autosuspend_expiration", scope: !3, file: !3, line: 163, type: !2139, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2241 = !DILocalVariable(name: "dev", arg: 1, scope: !2240, file: !3, line: 163, type: !6)
!2242 = !DILocation(line: 163, column: 54, scope: !2240)
!2243 = !DILocalVariable(name: "autosuspend_delay", scope: !2240, file: !3, line: 165, type: !59)
!2244 = !DILocation(line: 165, column: 6, scope: !2240)
!2245 = !DILocalVariable(name: "expires", scope: !2240, file: !3, line: 166, type: !195)
!2246 = !DILocation(line: 166, column: 6, scope: !2240)
!2247 = !DILocation(line: 168, column: 7, scope: !2248)
!2248 = distinct !DILexicalBlock(scope: !2240, file: !3, line: 168, column: 6)
!2249 = !DILocation(line: 168, column: 12, scope: !2248)
!2250 = !DILocation(line: 168, column: 18, scope: !2248)
!2251 = !DILocation(line: 168, column: 6, scope: !2240)
!2252 = !DILocation(line: 169, column: 3, scope: !2248)
!2253 = !DILocation(line: 171, column: 22, scope: !2254)
!2254 = distinct !DILexicalBlock(scope: !2240, file: !3, line: 171, column: 22)
!2255 = !DILocation(line: 171, column: 22, scope: !2256)
!2256 = distinct !DILexicalBlock(scope: !2254, file: !3, line: 171, column: 22)
!2257 = !DILocation(line: 171, column: 20, scope: !2240)
!2258 = !DILocation(line: 172, column: 6, scope: !2259)
!2259 = distinct !DILexicalBlock(scope: !2240, file: !3, line: 172, column: 6)
!2260 = !DILocation(line: 172, column: 24, scope: !2259)
!2261 = !DILocation(line: 172, column: 6, scope: !2240)
!2262 = !DILocation(line: 173, column: 3, scope: !2259)
!2263 = !DILocation(line: 175, column: 13, scope: !2264)
!2264 = distinct !DILexicalBlock(scope: !2240, file: !3, line: 175, column: 13)
!2265 = !DILocation(line: 175, column: 13, scope: !2266)
!2266 = distinct !DILexicalBlock(scope: !2264, file: !3, line: 175, column: 13)
!2267 = !DILocation(line: 175, column: 11, scope: !2240)
!2268 = !DILocation(line: 176, column: 18, scope: !2240)
!2269 = !DILocation(line: 176, column: 13, scope: !2240)
!2270 = !DILocation(line: 176, column: 36, scope: !2240)
!2271 = !DILocation(line: 176, column: 10, scope: !2240)
!2272 = !DILocation(line: 177, column: 6, scope: !2273)
!2273 = distinct !DILexicalBlock(scope: !2240, file: !3, line: 177, column: 6)
!2274 = !DILocation(line: 177, column: 16, scope: !2273)
!2275 = !DILocation(line: 177, column: 14, scope: !2273)
!2276 = !DILocation(line: 177, column: 6, scope: !2240)
!2277 = !DILocation(line: 178, column: 10, scope: !2273)
!2278 = !DILocation(line: 178, column: 3, scope: !2273)
!2279 = !DILocation(line: 180, column: 2, scope: !2240)
!2280 = !DILocation(line: 181, column: 1, scope: !2240)
!2281 = !DILocalVariable(name: "lock", arg: 1, scope: !2282, file: !2151, line: 402, type: !2154)
!2282 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !2151, file: !2151, line: 402, type: !2283, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2283 = !DISubroutineType(types: !2284)
!2284 = !{null, !2154}
!2285 = !DILocation(line: 402, column: 57, scope: !2282, inlinedAt: !2286)
!2286 = distinct !DILocation(line: 229, column: 3, scope: !2287)
!2287 = distinct !DILexicalBlock(scope: !2288, file: !3, line: 222, column: 11)
!2288 = distinct !DILexicalBlock(scope: !2289, file: !3, line: 222, column: 2)
!2289 = distinct !DILexicalBlock(scope: !2, file: !3, line: 222, column: 2)
!2290 = !DILocalVariable(name: "lock", arg: 1, scope: !2291, file: !2151, line: 377, type: !2154)
!2291 = distinct !DISubprogram(name: "spin_lock_irq", scope: !2151, file: !2151, line: 377, type: !2283, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2292 = !DILocation(line: 377, column: 55, scope: !2291, inlinedAt: !2293)
!2293 = distinct !DILocation(line: 226, column: 3, scope: !2287)
!2294 = !DILocalVariable(name: "dev", arg: 1, scope: !2, file: !3, line: 217, type: !6)
!2295 = !DILocation(line: 217, column: 50, scope: !2)
!2296 = !DILocalVariable(name: "enable", arg: 2, scope: !2, file: !3, line: 217, type: !915)
!2297 = !DILocation(line: 217, column: 60, scope: !2)
!2298 = !DILocation(line: 221, column: 2, scope: !2)
!2299 = !DILocation(line: 222, column: 2, scope: !2)
!2300 = !DILocalVariable(name: "enabled", scope: !2287, file: !3, line: 223, type: !915)
!2301 = !DILocation(line: 223, column: 8, scope: !2287)
!2302 = !DILocation(line: 226, column: 18, scope: !2287)
!2303 = !DILocation(line: 226, column: 23, scope: !2287)
!2304 = !DILocation(line: 226, column: 29, scope: !2287)
!2305 = !DILocation(line: 379, column: 2, scope: !2306, inlinedAt: !2293)
!2306 = distinct !DILexicalBlock(scope: !2307, file: !2151, line: 379, column: 2)
!2307 = distinct !DILexicalBlock(scope: !2291, file: !2151, line: 379, column: 2)
!2308 = !DILocation(line: 379, column: 2, scope: !2309, inlinedAt: !2293)
!2309 = distinct !DILexicalBlock(scope: !2307, file: !2151, line: 379, column: 2)
!2310 = !{i32 -2145280939}
!2311 = !DILocation(line: 379, column: 2, scope: !2312, inlinedAt: !2293)
!2312 = distinct !DILexicalBlock(scope: !2309, file: !2151, line: 379, column: 2)
!2313 = !DILocation(line: 227, column: 13, scope: !2287)
!2314 = !DILocation(line: 227, column: 18, scope: !2287)
!2315 = !DILocation(line: 227, column: 24, scope: !2287)
!2316 = !DILocation(line: 227, column: 11, scope: !2287)
!2317 = !DILocation(line: 228, column: 30, scope: !2287)
!2318 = !DILocation(line: 228, column: 3, scope: !2287)
!2319 = !DILocation(line: 228, column: 8, scope: !2287)
!2320 = !DILocation(line: 228, column: 14, scope: !2287)
!2321 = !DILocation(line: 228, column: 28, scope: !2287)
!2322 = !DILocation(line: 229, column: 20, scope: !2287)
!2323 = !DILocation(line: 229, column: 25, scope: !2287)
!2324 = !DILocation(line: 229, column: 31, scope: !2287)
!2325 = !DILocation(line: 404, column: 2, scope: !2326, inlinedAt: !2286)
!2326 = distinct !DILexicalBlock(scope: !2327, file: !2151, line: 404, column: 2)
!2327 = distinct !DILexicalBlock(scope: !2282, file: !2151, line: 404, column: 2)
!2328 = !DILocation(line: 404, column: 2, scope: !2329, inlinedAt: !2286)
!2329 = distinct !DILexicalBlock(scope: !2327, file: !2151, line: 404, column: 2)
!2330 = !{i32 -2145279191}
!2331 = !DILocation(line: 404, column: 2, scope: !2332, inlinedAt: !2286)
!2332 = distinct !DILexicalBlock(scope: !2329, file: !2151, line: 404, column: 2)
!2333 = !DILocation(line: 235, column: 7, scope: !2334)
!2334 = distinct !DILexicalBlock(scope: !2287, file: !3, line: 235, column: 7)
!2335 = !DILocation(line: 235, column: 15, scope: !2334)
!2336 = !DILocation(line: 235, column: 18, scope: !2334)
!2337 = !DILocation(line: 235, column: 7, scope: !2287)
!2338 = !DILocation(line: 236, column: 4, scope: !2334)
!2339 = !DILocation(line: 238, column: 9, scope: !2287)
!2340 = !DILocation(line: 238, column: 14, scope: !2287)
!2341 = !DILocation(line: 238, column: 7, scope: !2287)
!2342 = !DILocation(line: 245, column: 8, scope: !2343)
!2343 = distinct !DILexicalBlock(scope: !2287, file: !3, line: 245, column: 7)
!2344 = !DILocation(line: 245, column: 12, scope: !2343)
!2345 = !DILocation(line: 245, column: 17, scope: !2343)
!2346 = !DILocation(line: 245, column: 24, scope: !2343)
!2347 = !DILocation(line: 246, column: 31, scope: !2343)
!2348 = !DILocation(line: 246, column: 9, scope: !2343)
!2349 = !DILocation(line: 245, column: 7, scope: !2287)
!2350 = !DILocation(line: 248, column: 4, scope: !2343)
!2351 = !DILocation(line: 222, column: 2, scope: !2288)
!2352 = distinct !{!2352, !2353, !2354}
!2353 = !DILocation(line: 222, column: 2, scope: !2289)
!2354 = !DILocation(line: 249, column: 2, scope: !2289)
!2355 = !DILocation(line: 250, column: 2, scope: !2)
!2356 = !DILocation(line: 251, column: 1, scope: !2)
!2357 = distinct !DISubprogram(name: "dev_memalloc_noio", scope: !3, file: !3, line: 184, type: !2358, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2358 = !DISubroutineType(types: !2359)
!2359 = !{!59, !6, !149}
!2360 = !DILocalVariable(name: "dev", arg: 1, scope: !2357, file: !3, line: 184, type: !6)
!2361 = !DILocation(line: 184, column: 45, scope: !2357)
!2362 = !DILocalVariable(name: "data", arg: 2, scope: !2357, file: !3, line: 184, type: !149)
!2363 = !DILocation(line: 184, column: 56, scope: !2357)
!2364 = !DILocation(line: 186, column: 9, scope: !2357)
!2365 = !DILocation(line: 186, column: 14, scope: !2357)
!2366 = !DILocation(line: 186, column: 20, scope: !2357)
!2367 = !DILocation(line: 186, column: 2, scope: !2357)
!2368 = distinct !DISubprogram(name: "pm_schedule_suspend", scope: !3, file: !3, line: 954, type: !2369, scopeLine: 955, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2369 = !DISubroutineType(types: !2370)
!2370 = !{!59, !6, !335}
!2371 = !DILocation(line: 407, column: 64, scope: !2150, inlinedAt: !2372)
!2372 = distinct !DILocation(line: 980, column: 2, scope: !2368)
!2373 = !DILocation(line: 407, column: 84, scope: !2150, inlinedAt: !2372)
!2374 = !DILocation(line: 327, column: 67, scope: !2160, inlinedAt: !2375)
!2375 = distinct !DILocation(line: 960, column: 2, scope: !2376)
!2376 = distinct !DILexicalBlock(scope: !2377, file: !3, line: 960, column: 2)
!2377 = distinct !DILexicalBlock(scope: !2378, file: !3, line: 960, column: 2)
!2378 = distinct !DILexicalBlock(scope: !2379, file: !3, line: 960, column: 2)
!2379 = distinct !DILexicalBlock(scope: !2380, file: !3, line: 960, column: 2)
!2380 = distinct !DILexicalBlock(scope: !2368, file: !3, line: 960, column: 2)
!2381 = !DILocalVariable(name: "dev", arg: 1, scope: !2368, file: !3, line: 954, type: !6)
!2382 = !DILocation(line: 954, column: 40, scope: !2368)
!2383 = !DILocalVariable(name: "delay", arg: 2, scope: !2368, file: !3, line: 954, type: !335)
!2384 = !DILocation(line: 954, column: 58, scope: !2368)
!2385 = !DILocalVariable(name: "flags", scope: !2368, file: !3, line: 956, type: !125)
!2386 = !DILocation(line: 956, column: 16, scope: !2368)
!2387 = !DILocalVariable(name: "expires", scope: !2368, file: !3, line: 957, type: !195)
!2388 = !DILocation(line: 957, column: 6, scope: !2368)
!2389 = !DILocalVariable(name: "retval", scope: !2368, file: !3, line: 958, type: !59)
!2390 = !DILocation(line: 958, column: 6, scope: !2368)
!2391 = !DILocation(line: 960, column: 2, scope: !2368)
!2392 = !DILocation(line: 960, column: 2, scope: !2380)
!2393 = !DILocalVariable(name: "__dummy", scope: !2394, file: !3, line: 960, type: !125)
!2394 = distinct !DILexicalBlock(scope: !2379, file: !3, line: 960, column: 2)
!2395 = !DILocation(line: 960, column: 2, scope: !2394)
!2396 = !DILocalVariable(name: "__dummy2", scope: !2394, file: !3, line: 960, type: !125)
!2397 = !DILocation(line: 960, column: 2, scope: !2379)
!2398 = !DILocation(line: 960, column: 2, scope: !2378)
!2399 = !DILocation(line: 960, column: 2, scope: !2400)
!2400 = distinct !DILexicalBlock(scope: !2378, file: !3, line: 960, column: 2)
!2401 = !DILocalVariable(name: "__dummy", scope: !2402, file: !3, line: 960, type: !125)
!2402 = distinct !DILexicalBlock(scope: !2403, file: !3, line: 960, column: 2)
!2403 = distinct !DILexicalBlock(scope: !2400, file: !3, line: 960, column: 2)
!2404 = !DILocation(line: 960, column: 2, scope: !2402)
!2405 = !DILocalVariable(name: "__dummy2", scope: !2402, file: !3, line: 960, type: !125)
!2406 = !DILocation(line: 960, column: 2, scope: !2403)
!2407 = !DILocation(line: 960, column: 2, scope: !2377)
!2408 = !{i32 -2143523896}
!2409 = !DILocation(line: 960, column: 2, scope: !2376)
!2410 = !DILocation(line: 329, column: 10, scope: !2160, inlinedAt: !2375)
!2411 = !DILocation(line: 329, column: 16, scope: !2160, inlinedAt: !2375)
!2412 = !DILocation(line: 962, column: 7, scope: !2413)
!2413 = distinct !DILexicalBlock(scope: !2368, file: !3, line: 962, column: 6)
!2414 = !DILocation(line: 962, column: 6, scope: !2368)
!2415 = !DILocation(line: 963, column: 24, scope: !2416)
!2416 = distinct !DILexicalBlock(scope: !2413, file: !3, line: 962, column: 14)
!2417 = !DILocation(line: 963, column: 12, scope: !2416)
!2418 = !DILocation(line: 963, column: 10, scope: !2416)
!2419 = !DILocation(line: 964, column: 3, scope: !2416)
!2420 = !DILocation(line: 967, column: 37, scope: !2368)
!2421 = !DILocation(line: 967, column: 11, scope: !2368)
!2422 = !DILocation(line: 967, column: 9, scope: !2368)
!2423 = !DILocation(line: 968, column: 6, scope: !2424)
!2424 = distinct !DILexicalBlock(scope: !2368, file: !3, line: 968, column: 6)
!2425 = !DILocation(line: 968, column: 6, scope: !2368)
!2426 = !DILocation(line: 969, column: 3, scope: !2424)
!2427 = !DILocation(line: 972, column: 28, scope: !2368)
!2428 = !DILocation(line: 972, column: 2, scope: !2368)
!2429 = !DILocation(line: 974, column: 12, scope: !2368)
!2430 = !DILocation(line: 974, column: 44, scope: !2368)
!2431 = !DILocation(line: 974, column: 39, scope: !2368)
!2432 = !DILocation(line: 974, column: 50, scope: !2368)
!2433 = !DILocation(line: 974, column: 37, scope: !2368)
!2434 = !DILocation(line: 974, column: 10, scope: !2368)
!2435 = !DILocation(line: 975, column: 29, scope: !2368)
!2436 = !DILocation(line: 975, column: 2, scope: !2368)
!2437 = !DILocation(line: 975, column: 7, scope: !2368)
!2438 = !DILocation(line: 975, column: 13, scope: !2368)
!2439 = !DILocation(line: 975, column: 27, scope: !2368)
!2440 = !DILocation(line: 976, column: 2, scope: !2368)
!2441 = !DILocation(line: 976, column: 7, scope: !2368)
!2442 = !DILocation(line: 976, column: 13, scope: !2368)
!2443 = !DILocation(line: 976, column: 32, scope: !2368)
!2444 = !DILocation(line: 977, column: 17, scope: !2368)
!2445 = !DILocation(line: 977, column: 22, scope: !2368)
!2446 = !DILocation(line: 977, column: 28, scope: !2368)
!2447 = !DILocation(line: 977, column: 43, scope: !2368)
!2448 = !DILocation(line: 977, column: 2, scope: !2368)
!2449 = !DILabel(scope: !2368, name: "out", file: !3, line: 979)
!2450 = !DILocation(line: 979, column: 2, scope: !2368)
!2451 = !DILocation(line: 980, column: 26, scope: !2368)
!2452 = !DILocation(line: 980, column: 31, scope: !2368)
!2453 = !DILocation(line: 980, column: 37, scope: !2368)
!2454 = !DILocation(line: 980, column: 43, scope: !2368)
!2455 = !DILocation(line: 409, column: 2, scope: !2215, inlinedAt: !2372)
!2456 = !DILocation(line: 409, column: 2, scope: !2220, inlinedAt: !2372)
!2457 = !DILocation(line: 409, column: 2, scope: !2221, inlinedAt: !2372)
!2458 = !DILocation(line: 409, column: 2, scope: !2228, inlinedAt: !2372)
!2459 = !DILocation(line: 409, column: 2, scope: !2231, inlinedAt: !2372)
!2460 = !DILocation(line: 982, column: 9, scope: !2368)
!2461 = !DILocation(line: 982, column: 2, scope: !2368)
!2462 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !2463, file: !2463, line: 666, type: !2464, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2463 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!2464 = !DISubroutineType(types: !2465)
!2465 = !{!125}
!2466 = !DILocalVariable(name: "f", scope: !2462, file: !2463, line: 668, type: !125)
!2467 = !DILocation(line: 668, column: 16, scope: !2462)
!2468 = !DILocation(line: 670, column: 6, scope: !2462)
!2469 = !DILocation(line: 670, column: 4, scope: !2462)
!2470 = !DILocation(line: 671, column: 2, scope: !2462)
!2471 = !DILocation(line: 672, column: 9, scope: !2462)
!2472 = !DILocation(line: 672, column: 2, scope: !2462)
!2473 = distinct !DISubprogram(name: "rpm_suspend", scope: !3, file: !3, line: 512, type: !2474, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2474 = !DISubroutineType(types: !2475)
!2475 = !{!59, !6, !59}
!2476 = !DILocalVariable(name: "lock", arg: 1, scope: !2477, file: !2151, line: 352, type: !2154)
!2477 = distinct !DISubprogram(name: "spin_lock", scope: !2151, file: !2151, line: 352, type: !2283, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2478 = !DILocation(line: 352, column: 51, scope: !2477, inlinedAt: !2479)
!2479 = distinct !DILocation(line: 584, column: 4, scope: !2480)
!2480 = distinct !DILexicalBlock(scope: !2481, file: !3, line: 579, column: 28)
!2481 = distinct !DILexicalBlock(scope: !2482, file: !3, line: 579, column: 7)
!2482 = distinct !DILexicalBlock(scope: !2483, file: !3, line: 571, column: 51)
!2483 = distinct !DILexicalBlock(scope: !2473, file: !3, line: 571, column: 6)
!2484 = !DILocalVariable(name: "lock", arg: 1, scope: !2485, file: !2151, line: 392, type: !2154)
!2485 = distinct !DISubprogram(name: "spin_unlock", scope: !2151, file: !2151, line: 392, type: !2283, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2486 = !DILocation(line: 392, column: 53, scope: !2485, inlinedAt: !2487)
!2487 = distinct !DILocation(line: 580, column: 4, scope: !2480)
!2488 = !DILocalVariable(name: "pscr_ret__", scope: !2489, file: !2490, line: 15, type: !323)
!2489 = distinct !DILexicalBlock(scope: !2491, file: !2490, line: 15, column: 9)
!2490 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!2491 = distinct !DISubprogram(name: "get_current", scope: !2490, file: !2490, line: 13, type: !2492, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2492 = !DISubroutineType(types: !2493)
!2493 = !{!323}
!2494 = !DILocation(line: 15, column: 9, scope: !2489, inlinedAt: !2495)
!2495 = distinct !DILocation(line: 572, column: 3, scope: !2482)
!2496 = !DILocalVariable(name: "__vpp_verify", scope: !2497, file: !2490, line: 15, type: !1312)
!2497 = distinct !DILexicalBlock(scope: !2489, file: !2490, line: 15, column: 9)
!2498 = !DILocation(line: 15, column: 9, scope: !2497, inlinedAt: !2495)
!2499 = !DILocalVariable(name: "pfo_val__", scope: !2500, file: !2490, line: 15, type: !195)
!2500 = distinct !DILexicalBlock(scope: !2489, file: !2490, line: 15, column: 9)
!2501 = !DILocation(line: 15, column: 9, scope: !2500, inlinedAt: !2495)
!2502 = !DILocation(line: 402, column: 57, scope: !2282, inlinedAt: !2503)
!2503 = distinct !DILocation(line: 595, column: 4, scope: !2504)
!2504 = distinct !DILexicalBlock(scope: !2505, file: !3, line: 589, column: 12)
!2505 = distinct !DILexicalBlock(scope: !2506, file: !3, line: 589, column: 3)
!2506 = distinct !DILexicalBlock(scope: !2482, file: !3, line: 589, column: 3)
!2507 = !DILocation(line: 377, column: 55, scope: !2291, inlinedAt: !2508)
!2508 = distinct !DILocation(line: 599, column: 4, scope: !2504)
!2509 = !DILocalVariable(name: "v", arg: 1, scope: !2510, file: !2511, line: 200, type: !2514)
!2510 = distinct !DISubprogram(name: "arch_atomic_try_cmpxchg", scope: !2511, file: !2511, line: 200, type: !2512, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2511 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!2512 = !DISubroutineType(types: !2513)
!2513 = !{!915, !2514, !662, !59}
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 64)
!2515 = !DILocation(line: 200, column: 63, scope: !2510, inlinedAt: !2516)
!2516 = distinct !DILocation(line: 1093, column: 12, scope: !2517, inlinedAt: !2521)
!2517 = distinct !DISubprogram(name: "arch_atomic_fetch_add_unless", scope: !2518, file: !2518, line: 1086, type: !2519, scopeLine: 1087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2518 = !DIFile(filename: "./include/linux/atomic-arch-fallback.h", directory: "/home/lizy2001/genbc/linux")
!2519 = !DISubroutineType(types: !2520)
!2520 = !{!59, !2514, !59, !59}
!2521 = distinct !DILocation(line: 1113, column: 9, scope: !2522, inlinedAt: !2525)
!2522 = distinct !DISubprogram(name: "arch_atomic_add_unless", scope: !2518, file: !2518, line: 1111, type: !2523, scopeLine: 1112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2523 = !DISubroutineType(types: !2524)
!2524 = !{!915, !2514, !59, !59}
!2525 = distinct !DILocation(line: 789, column: 9, scope: !2526, inlinedAt: !2528)
!2526 = distinct !DISubprogram(name: "atomic_add_unless", scope: !2527, file: !2527, line: 786, type: !2523, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2527 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!2528 = distinct !DILocation(line: 634, column: 3, scope: !2529)
!2529 = distinct !DILexicalBlock(scope: !2530, file: !3, line: 632, column: 19)
!2530 = distinct !DILexicalBlock(scope: !2473, file: !3, line: 632, column: 6)
!2531 = !DILocalVariable(name: "old", arg: 2, scope: !2510, file: !2511, line: 200, type: !662)
!2532 = !DILocation(line: 200, column: 71, scope: !2510, inlinedAt: !2516)
!2533 = !DILocalVariable(name: "new", arg: 3, scope: !2510, file: !2511, line: 200, type: !59)
!2534 = !DILocation(line: 200, column: 80, scope: !2510, inlinedAt: !2516)
!2535 = !DILocalVariable(name: "success", scope: !2536, file: !2511, line: 202, type: !915)
!2536 = distinct !DILexicalBlock(scope: !2510, file: !2511, line: 202, column: 9)
!2537 = !DILocation(line: 202, column: 9, scope: !2536, inlinedAt: !2516)
!2538 = !DILocalVariable(name: "_old", scope: !2536, file: !2511, line: 202, type: !662)
!2539 = !DILocalVariable(name: "__old", scope: !2536, file: !2511, line: 202, type: !59)
!2540 = !DILocalVariable(name: "__new", scope: !2536, file: !2511, line: 202, type: !59)
!2541 = !DILocalVariable(name: "__ptr", scope: !2536, file: !2511, line: 202, type: !2120)
!2542 = !DILocalVariable(name: "v", arg: 1, scope: !2543, file: !2511, line: 23, type: !2546)
!2543 = distinct !DISubprogram(name: "arch_atomic_read", scope: !2511, file: !2511, line: 23, type: !2544, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2544 = !DISubroutineType(types: !2545)
!2545 = !{!59, !2546}
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 64)
!2547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !217)
!2548 = !DILocation(line: 23, column: 61, scope: !2543, inlinedAt: !2549)
!2549 = distinct !DILocation(line: 1088, column: 10, scope: !2517, inlinedAt: !2521)
!2550 = !DILocalVariable(name: "v", arg: 1, scope: !2517, file: !2518, line: 1086, type: !2514)
!2551 = !DILocation(line: 1086, column: 40, scope: !2517, inlinedAt: !2521)
!2552 = !DILocalVariable(name: "a", arg: 2, scope: !2517, file: !2518, line: 1086, type: !59)
!2553 = !DILocation(line: 1086, column: 47, scope: !2517, inlinedAt: !2521)
!2554 = !DILocalVariable(name: "u", arg: 3, scope: !2517, file: !2518, line: 1086, type: !59)
!2555 = !DILocation(line: 1086, column: 54, scope: !2517, inlinedAt: !2521)
!2556 = !DILocalVariable(name: "c", scope: !2517, file: !2518, line: 1088, type: !59)
!2557 = !DILocation(line: 1088, column: 6, scope: !2517, inlinedAt: !2521)
!2558 = !DILocalVariable(name: "v", arg: 1, scope: !2522, file: !2518, line: 1111, type: !2514)
!2559 = !DILocation(line: 1111, column: 34, scope: !2522, inlinedAt: !2525)
!2560 = !DILocalVariable(name: "a", arg: 2, scope: !2522, file: !2518, line: 1111, type: !59)
!2561 = !DILocation(line: 1111, column: 41, scope: !2522, inlinedAt: !2525)
!2562 = !DILocalVariable(name: "u", arg: 3, scope: !2522, file: !2518, line: 1111, type: !59)
!2563 = !DILocation(line: 1111, column: 48, scope: !2522, inlinedAt: !2525)
!2564 = !DILocalVariable(name: "v", arg: 1, scope: !2565, file: !2566, line: 99, type: !2569)
!2565 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !2566, file: !2566, line: 99, type: !2567, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2566 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!2567 = !DISubroutineType(types: !2568)
!2568 = !{null, !2569, !122}
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2570, size: 64)
!2570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2571)
!2571 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!2572 = !DILocation(line: 99, column: 79, scope: !2565, inlinedAt: !2573)
!2573 = distinct !DILocation(line: 788, column: 2, scope: !2526, inlinedAt: !2528)
!2574 = !DILocalVariable(name: "size", arg: 2, scope: !2565, file: !2566, line: 99, type: !122)
!2575 = !DILocation(line: 99, column: 89, scope: !2565, inlinedAt: !2573)
!2576 = !DILocalVariable(name: "v", arg: 1, scope: !2526, file: !2527, line: 786, type: !2514)
!2577 = !DILocation(line: 786, column: 29, scope: !2526, inlinedAt: !2528)
!2578 = !DILocalVariable(name: "a", arg: 2, scope: !2526, file: !2527, line: 786, type: !59)
!2579 = !DILocation(line: 786, column: 36, scope: !2526, inlinedAt: !2528)
!2580 = !DILocalVariable(name: "u", arg: 3, scope: !2526, file: !2527, line: 786, type: !59)
!2581 = !DILocation(line: 786, column: 43, scope: !2526, inlinedAt: !2528)
!2582 = !DILocation(line: 392, column: 53, scope: !2485, inlinedAt: !2583)
!2583 = distinct !DILocation(line: 647, column: 3, scope: !2584)
!2584 = distinct !DILexicalBlock(scope: !2585, file: !3, line: 646, column: 72)
!2585 = distinct !DILexicalBlock(scope: !2473, file: !3, line: 646, column: 6)
!2586 = !DILocation(line: 352, column: 51, scope: !2477, inlinedAt: !2587)
!2587 = distinct !DILocation(line: 649, column: 3, scope: !2584)
!2588 = !DILocation(line: 392, column: 53, scope: !2485, inlinedAt: !2589)
!2589 = distinct !DILocation(line: 651, column: 3, scope: !2584)
!2590 = !DILocation(line: 352, column: 51, scope: !2477, inlinedAt: !2591)
!2591 = distinct !DILocation(line: 653, column: 3, scope: !2584)
!2592 = !DILocalVariable(name: "dev", arg: 1, scope: !2473, file: !3, line: 512, type: !6)
!2593 = !DILocation(line: 512, column: 39, scope: !2473)
!2594 = !DILocalVariable(name: "rpmflags", arg: 2, scope: !2473, file: !3, line: 512, type: !59)
!2595 = !DILocation(line: 512, column: 48, scope: !2473)
!2596 = !DILocalVariable(name: "callback", scope: !2473, file: !3, line: 515, type: !1563)
!2597 = !DILocation(line: 515, column: 8, scope: !2473)
!2598 = !DILocalVariable(name: "parent", scope: !2473, file: !3, line: 516, type: !6)
!2599 = !DILocation(line: 516, column: 17, scope: !2473)
!2600 = !DILocalVariable(name: "retval", scope: !2473, file: !3, line: 517, type: !59)
!2601 = !DILocation(line: 517, column: 6, scope: !2473)
!2602 = !DILocation(line: 519, column: 28, scope: !2473)
!2603 = !DILocation(line: 519, column: 33, scope: !2473)
!2604 = !DILocation(line: 519, column: 2, scope: !2473)
!2605 = !DILabel(scope: !2473, name: "repeat", file: !3, line: 521)
!2606 = !DILocation(line: 521, column: 2, scope: !2473)
!2607 = !DILocation(line: 522, column: 37, scope: !2473)
!2608 = !DILocation(line: 522, column: 11, scope: !2473)
!2609 = !DILocation(line: 522, column: 9, scope: !2473)
!2610 = !DILocation(line: 523, column: 6, scope: !2611)
!2611 = distinct !DILexicalBlock(scope: !2473, file: !3, line: 523, column: 6)
!2612 = !DILocation(line: 523, column: 13, scope: !2611)
!2613 = !DILocation(line: 523, column: 6, scope: !2473)
!2614 = !DILocation(line: 524, column: 3, scope: !2611)
!2615 = !DILocation(line: 527, column: 6, scope: !2616)
!2616 = distinct !DILexicalBlock(scope: !2473, file: !3, line: 527, column: 6)
!2617 = !DILocation(line: 527, column: 11, scope: !2616)
!2618 = !DILocation(line: 527, column: 17, scope: !2616)
!2619 = !DILocation(line: 527, column: 32, scope: !2616)
!2620 = !DILocation(line: 527, column: 48, scope: !2616)
!2621 = !DILocation(line: 527, column: 53, scope: !2616)
!2622 = !DILocation(line: 527, column: 62, scope: !2616)
!2623 = !DILocation(line: 527, column: 6, scope: !2473)
!2624 = !DILocation(line: 528, column: 10, scope: !2616)
!2625 = !DILocation(line: 528, column: 3, scope: !2616)
!2626 = !DILocation(line: 529, column: 6, scope: !2627)
!2627 = distinct !DILexicalBlock(scope: !2473, file: !3, line: 529, column: 6)
!2628 = !DILocation(line: 529, column: 6, scope: !2473)
!2629 = !DILocation(line: 530, column: 3, scope: !2627)
!2630 = !DILocation(line: 533, column: 7, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2473, file: !3, line: 533, column: 6)
!2632 = !DILocation(line: 533, column: 16, scope: !2631)
!2633 = !DILocation(line: 534, column: 6, scope: !2631)
!2634 = !DILocation(line: 534, column: 9, scope: !2631)
!2635 = !DILocation(line: 534, column: 14, scope: !2631)
!2636 = !DILocation(line: 534, column: 20, scope: !2631)
!2637 = !DILocation(line: 534, column: 35, scope: !2631)
!2638 = !DILocation(line: 533, column: 6, scope: !2473)
!2639 = !DILocalVariable(name: "expires", scope: !2640, file: !3, line: 535, type: !195)
!2640 = distinct !DILexicalBlock(scope: !2631, file: !3, line: 534, column: 54)
!2641 = !DILocation(line: 535, column: 7, scope: !2640)
!2642 = !DILocation(line: 535, column: 51, scope: !2640)
!2643 = !DILocation(line: 535, column: 17, scope: !2640)
!2644 = !DILocation(line: 537, column: 7, scope: !2645)
!2645 = distinct !DILexicalBlock(scope: !2640, file: !3, line: 537, column: 7)
!2646 = !DILocation(line: 537, column: 15, scope: !2645)
!2647 = !DILocation(line: 537, column: 7, scope: !2640)
!2648 = !DILocation(line: 539, column: 4, scope: !2649)
!2649 = distinct !DILexicalBlock(scope: !2645, file: !3, line: 537, column: 21)
!2650 = !DILocation(line: 539, column: 9, scope: !2649)
!2651 = !DILocation(line: 539, column: 15, scope: !2649)
!2652 = !DILocation(line: 539, column: 23, scope: !2649)
!2653 = !DILocation(line: 548, column: 10, scope: !2654)
!2654 = distinct !DILexicalBlock(scope: !2649, file: !3, line: 548, column: 8)
!2655 = !DILocation(line: 548, column: 15, scope: !2654)
!2656 = !DILocation(line: 548, column: 21, scope: !2654)
!2657 = !DILocation(line: 548, column: 35, scope: !2654)
!2658 = !DILocation(line: 549, column: 6, scope: !2654)
!2659 = !DILocation(line: 549, column: 11, scope: !2654)
!2660 = !DILocation(line: 549, column: 17, scope: !2654)
!2661 = !DILocation(line: 549, column: 34, scope: !2654)
!2662 = !DILocation(line: 549, column: 31, scope: !2654)
!2663 = !DILocation(line: 548, column: 8, scope: !2649)
!2664 = !DILocalVariable(name: "slack", scope: !2665, file: !3, line: 554, type: !195)
!2665 = distinct !DILexicalBlock(scope: !2654, file: !3, line: 549, column: 44)
!2666 = !DILocation(line: 554, column: 9, scope: !2665)
!2667 = !DILocation(line: 554, column: 22, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2665, file: !3, line: 554, column: 22)
!2669 = !DILocation(line: 554, column: 22, scope: !2670)
!2670 = distinct !DILexicalBlock(scope: !2668, file: !3, line: 554, column: 22)
!2671 = !DILocation(line: 554, column: 17, scope: !2665)
!2672 = !DILocation(line: 554, column: 62, scope: !2665)
!2673 = !DILocation(line: 557, column: 32, scope: !2665)
!2674 = !DILocation(line: 557, column: 5, scope: !2665)
!2675 = !DILocation(line: 557, column: 10, scope: !2665)
!2676 = !DILocation(line: 557, column: 16, scope: !2665)
!2677 = !DILocation(line: 557, column: 30, scope: !2665)
!2678 = !DILocation(line: 558, column: 29, scope: !2665)
!2679 = !DILocation(line: 558, column: 34, scope: !2665)
!2680 = !DILocation(line: 558, column: 40, scope: !2665)
!2681 = !DILocation(line: 559, column: 19, scope: !2665)
!2682 = !DILocation(line: 559, column: 7, scope: !2665)
!2683 = !DILocation(line: 560, column: 7, scope: !2665)
!2684 = !DILocation(line: 558, column: 5, scope: !2665)
!2685 = !DILocation(line: 562, column: 4, scope: !2665)
!2686 = !DILocation(line: 563, column: 4, scope: !2649)
!2687 = !DILocation(line: 563, column: 9, scope: !2649)
!2688 = !DILocation(line: 563, column: 15, scope: !2649)
!2689 = !DILocation(line: 563, column: 34, scope: !2649)
!2690 = !DILocation(line: 564, column: 4, scope: !2649)
!2691 = !DILocation(line: 566, column: 2, scope: !2640)
!2692 = !DILocation(line: 569, column: 28, scope: !2473)
!2693 = !DILocation(line: 569, column: 2, scope: !2473)
!2694 = !DILocation(line: 571, column: 6, scope: !2483)
!2695 = !DILocation(line: 571, column: 11, scope: !2483)
!2696 = !DILocation(line: 571, column: 17, scope: !2483)
!2697 = !DILocation(line: 571, column: 32, scope: !2483)
!2698 = !DILocation(line: 571, column: 6, scope: !2473)
!2699 = !DILocalVariable(name: "wait", scope: !2482, file: !3, line: 572, type: !2700)
!2700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !623, line: 29, size: 320, elements: !2701)
!2701 = !{!2702, !2703, !2704, !2710}
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2700, file: !623, line: 30, baseType: !335, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !2700, file: !623, line: 31, baseType: !149, size: 64, offset: 64)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2700, file: !623, line: 32, baseType: !2705, size: 64, offset: 128)
!2705 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !623, line: 16, baseType: !2706)
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 64)
!2707 = !DISubroutineType(types: !2708)
!2708 = !{!59, !2709, !335, !59, !149}
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2700, size: 64)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2700, file: !623, line: 33, baseType: !19, size: 128, offset: 192)
!2711 = !DILocation(line: 572, column: 3, scope: !2482)
!2712 = !{i32 -2146532925}
!2713 = !DILocation(line: 574, column: 7, scope: !2714)
!2714 = distinct !DILexicalBlock(scope: !2482, file: !3, line: 574, column: 7)
!2715 = !DILocation(line: 574, column: 16, scope: !2714)
!2716 = !DILocation(line: 574, column: 7, scope: !2482)
!2717 = !DILocation(line: 575, column: 11, scope: !2718)
!2718 = distinct !DILexicalBlock(scope: !2714, file: !3, line: 574, column: 44)
!2719 = !DILocation(line: 576, column: 4, scope: !2718)
!2720 = !DILocation(line: 579, column: 7, scope: !2481)
!2721 = !DILocation(line: 579, column: 12, scope: !2481)
!2722 = !DILocation(line: 579, column: 18, scope: !2481)
!2723 = !DILocation(line: 579, column: 7, scope: !2482)
!2724 = !DILocation(line: 580, column: 17, scope: !2480)
!2725 = !DILocation(line: 580, column: 22, scope: !2480)
!2726 = !DILocation(line: 580, column: 28, scope: !2480)
!2727 = !DILocation(line: 394, column: 2, scope: !2728, inlinedAt: !2487)
!2728 = distinct !DILexicalBlock(scope: !2485, file: !2151, line: 394, column: 2)
!2729 = !{i32 -2145280473}
!2730 = !DILocation(line: 394, column: 2, scope: !2731, inlinedAt: !2487)
!2731 = distinct !DILexicalBlock(scope: !2728, file: !2151, line: 394, column: 2)
!2732 = !DILocation(line: 13, column: 2, scope: !2733, inlinedAt: !2737)
!2733 = distinct !DISubprogram(name: "rep_nop", scope: !2734, file: !2734, line: 11, type: !2735, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2734 = !DIFile(filename: "./arch/x86/include/asm/vdso/processor.h", directory: "/home/lizy2001/genbc/linux")
!2735 = !DISubroutineType(types: !2736)
!2736 = !{null}
!2737 = distinct !DILocation(line: 18, column: 2, scope: !2738, inlinedAt: !2739)
!2738 = distinct !DISubprogram(name: "cpu_relax", scope: !2734, file: !2734, line: 16, type: !2735, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2739 = distinct !DILocation(line: 582, column: 4, scope: !2480)
!2740 = !{i32 1926631}
!2741 = !DILocation(line: 584, column: 15, scope: !2480)
!2742 = !DILocation(line: 584, column: 20, scope: !2480)
!2743 = !DILocation(line: 584, column: 26, scope: !2480)
!2744 = !DILocation(line: 354, column: 2, scope: !2745, inlinedAt: !2479)
!2745 = distinct !DILexicalBlock(scope: !2477, file: !2151, line: 354, column: 2)
!2746 = !{i32 -2145282834}
!2747 = !DILocation(line: 354, column: 2, scope: !2748, inlinedAt: !2479)
!2748 = distinct !DILexicalBlock(scope: !2745, file: !2151, line: 354, column: 2)
!2749 = !DILocation(line: 585, column: 4, scope: !2480)
!2750 = !DILocation(line: 589, column: 3, scope: !2482)
!2751 = !DILocation(line: 590, column: 21, scope: !2504)
!2752 = !DILocation(line: 590, column: 26, scope: !2504)
!2753 = !DILocation(line: 590, column: 32, scope: !2504)
!2754 = !DILocation(line: 590, column: 4, scope: !2504)
!2755 = !DILocation(line: 592, column: 8, scope: !2756)
!2756 = distinct !DILexicalBlock(scope: !2504, file: !3, line: 592, column: 8)
!2757 = !DILocation(line: 592, column: 13, scope: !2756)
!2758 = !DILocation(line: 592, column: 19, scope: !2756)
!2759 = !DILocation(line: 592, column: 34, scope: !2756)
!2760 = !DILocation(line: 592, column: 8, scope: !2504)
!2761 = !DILocation(line: 593, column: 5, scope: !2756)
!2762 = !DILocation(line: 595, column: 21, scope: !2504)
!2763 = !DILocation(line: 595, column: 26, scope: !2504)
!2764 = !DILocation(line: 595, column: 32, scope: !2504)
!2765 = !DILocation(line: 404, column: 2, scope: !2326, inlinedAt: !2503)
!2766 = !DILocation(line: 404, column: 2, scope: !2329, inlinedAt: !2503)
!2767 = !DILocation(line: 404, column: 2, scope: !2332, inlinedAt: !2503)
!2768 = !DILocation(line: 597, column: 4, scope: !2504)
!2769 = !DILocation(line: 599, column: 19, scope: !2504)
!2770 = !DILocation(line: 599, column: 24, scope: !2504)
!2771 = !DILocation(line: 599, column: 30, scope: !2504)
!2772 = !DILocation(line: 379, column: 2, scope: !2306, inlinedAt: !2508)
!2773 = !DILocation(line: 379, column: 2, scope: !2309, inlinedAt: !2508)
!2774 = !DILocation(line: 379, column: 2, scope: !2312, inlinedAt: !2508)
!2775 = !DILocation(line: 589, column: 3, scope: !2505)
!2776 = distinct !{!2776, !2777, !2778}
!2777 = !DILocation(line: 589, column: 3, scope: !2506)
!2778 = !DILocation(line: 600, column: 3, scope: !2506)
!2779 = !DILocation(line: 601, column: 16, scope: !2482)
!2780 = !DILocation(line: 601, column: 21, scope: !2482)
!2781 = !DILocation(line: 601, column: 27, scope: !2482)
!2782 = !DILocation(line: 601, column: 3, scope: !2482)
!2783 = !DILocation(line: 602, column: 3, scope: !2482)
!2784 = !DILocation(line: 605, column: 6, scope: !2785)
!2785 = distinct !DILexicalBlock(scope: !2473, file: !3, line: 605, column: 6)
!2786 = !DILocation(line: 605, column: 11, scope: !2785)
!2787 = !DILocation(line: 605, column: 17, scope: !2785)
!2788 = !DILocation(line: 605, column: 6, scope: !2473)
!2789 = !DILocation(line: 606, column: 3, scope: !2785)
!2790 = !DILocation(line: 609, column: 6, scope: !2791)
!2791 = distinct !DILexicalBlock(scope: !2473, file: !3, line: 609, column: 6)
!2792 = !DILocation(line: 609, column: 15, scope: !2791)
!2793 = !DILocation(line: 609, column: 6, scope: !2473)
!2794 = !DILocation(line: 610, column: 25, scope: !2795)
!2795 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 609, column: 28)
!2796 = !DILocation(line: 610, column: 34, scope: !2795)
!2797 = !DILocation(line: 610, column: 24, scope: !2795)
!2798 = !DILocation(line: 610, column: 3, scope: !2795)
!2799 = !DILocation(line: 610, column: 8, scope: !2795)
!2800 = !DILocation(line: 610, column: 14, scope: !2795)
!2801 = !DILocation(line: 610, column: 22, scope: !2795)
!2802 = !DILocation(line: 612, column: 8, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2795, file: !3, line: 612, column: 7)
!2804 = !DILocation(line: 612, column: 13, scope: !2803)
!2805 = !DILocation(line: 612, column: 19, scope: !2803)
!2806 = !DILocation(line: 612, column: 7, scope: !2795)
!2807 = !DILocation(line: 613, column: 4, scope: !2808)
!2808 = distinct !DILexicalBlock(scope: !2803, file: !3, line: 612, column: 36)
!2809 = !DILocation(line: 613, column: 9, scope: !2808)
!2810 = !DILocation(line: 613, column: 15, scope: !2808)
!2811 = !DILocation(line: 613, column: 31, scope: !2808)
!2812 = !DILocation(line: 614, column: 15, scope: !2808)
!2813 = !DILocation(line: 614, column: 23, scope: !2808)
!2814 = !DILocation(line: 614, column: 28, scope: !2808)
!2815 = !DILocation(line: 614, column: 34, scope: !2808)
!2816 = !DILocation(line: 614, column: 4, scope: !2808)
!2817 = !DILocation(line: 615, column: 3, scope: !2808)
!2818 = !DILocation(line: 616, column: 3, scope: !2795)
!2819 = !DILocation(line: 619, column: 26, scope: !2473)
!2820 = !DILocation(line: 619, column: 2, scope: !2473)
!2821 = !DILocation(line: 621, column: 13, scope: !2473)
!2822 = !DILocation(line: 621, column: 11, scope: !2473)
!2823 = !DILocation(line: 623, column: 31, scope: !2473)
!2824 = !DILocation(line: 623, column: 2, scope: !2473)
!2825 = !DILocation(line: 624, column: 24, scope: !2473)
!2826 = !DILocation(line: 624, column: 34, scope: !2473)
!2827 = !DILocation(line: 624, column: 11, scope: !2473)
!2828 = !DILocation(line: 624, column: 9, scope: !2473)
!2829 = !DILocation(line: 625, column: 6, scope: !2830)
!2830 = distinct !DILexicalBlock(scope: !2473, file: !3, line: 625, column: 6)
!2831 = !DILocation(line: 625, column: 6, scope: !2473)
!2832 = !DILocation(line: 626, column: 3, scope: !2830)
!2833 = !DILabel(scope: !2473, name: "no_callback", file: !3, line: 628)
!2834 = !DILocation(line: 628, column: 2, scope: !2473)
!2835 = !DILocation(line: 629, column: 26, scope: !2473)
!2836 = !DILocation(line: 629, column: 2, scope: !2473)
!2837 = !DILocation(line: 630, column: 30, scope: !2473)
!2838 = !DILocation(line: 630, column: 2, scope: !2473)
!2839 = !DILocation(line: 632, column: 6, scope: !2530)
!2840 = !DILocation(line: 632, column: 11, scope: !2530)
!2841 = !DILocation(line: 632, column: 6, scope: !2473)
!2842 = !DILocation(line: 633, column: 12, scope: !2529)
!2843 = !DILocation(line: 633, column: 17, scope: !2529)
!2844 = !DILocation(line: 633, column: 10, scope: !2529)
!2845 = !DILocation(line: 634, column: 22, scope: !2529)
!2846 = !DILocation(line: 634, column: 30, scope: !2529)
!2847 = !DILocation(line: 634, column: 36, scope: !2529)
!2848 = !DILocation(line: 788, column: 31, scope: !2526, inlinedAt: !2528)
!2849 = !DILocation(line: 101, column: 20, scope: !2565, inlinedAt: !2573)
!2850 = !DILocation(line: 101, column: 23, scope: !2565, inlinedAt: !2573)
!2851 = !DILocation(line: 101, column: 2, scope: !2565, inlinedAt: !2573)
!2852 = !DILocation(line: 102, column: 2, scope: !2565, inlinedAt: !2573)
!2853 = !DILocation(line: 789, column: 32, scope: !2526, inlinedAt: !2528)
!2854 = !DILocation(line: 789, column: 35, scope: !2526, inlinedAt: !2528)
!2855 = !DILocation(line: 789, column: 38, scope: !2526, inlinedAt: !2528)
!2856 = !DILocation(line: 1113, column: 38, scope: !2522, inlinedAt: !2525)
!2857 = !DILocation(line: 1113, column: 41, scope: !2522, inlinedAt: !2525)
!2858 = !DILocation(line: 1113, column: 44, scope: !2522, inlinedAt: !2525)
!2859 = !DILocation(line: 1088, column: 27, scope: !2517, inlinedAt: !2521)
!2860 = !DILocation(line: 29, column: 9, scope: !2543, inlinedAt: !2549)
!2861 = !DILocation(line: 1090, column: 2, scope: !2517, inlinedAt: !2521)
!2862 = !DILocation(line: 1091, column: 7, scope: !2863, inlinedAt: !2521)
!2863 = distinct !DILexicalBlock(scope: !2864, file: !2518, line: 1091, column: 7)
!2864 = distinct !DILexicalBlock(scope: !2517, file: !2518, line: 1090, column: 5)
!2865 = !DILocation(line: 1091, column: 7, scope: !2864, inlinedAt: !2521)
!2866 = !DILocation(line: 1092, column: 4, scope: !2863, inlinedAt: !2521)
!2867 = !DILocation(line: 1093, column: 36, scope: !2517, inlinedAt: !2521)
!2868 = !DILocation(line: 1093, column: 43, scope: !2517, inlinedAt: !2521)
!2869 = !DILocation(line: 1093, column: 47, scope: !2517, inlinedAt: !2521)
!2870 = !DILocation(line: 1093, column: 45, scope: !2517, inlinedAt: !2521)
!2871 = !{i32 -2146894897, i32 -2146894742}
!2872 = !DILocation(line: 202, column: 9, scope: !2873, inlinedAt: !2516)
!2873 = distinct !DILexicalBlock(scope: !2536, file: !2511, line: 202, column: 9)
!2874 = !DILocation(line: 202, column: 9, scope: !2510, inlinedAt: !2516)
!2875 = !DILocation(line: 1093, column: 11, scope: !2517, inlinedAt: !2521)
!2876 = !DILocation(line: 1093, column: 2, scope: !2864, inlinedAt: !2521)
!2877 = distinct !{!2877, !2861, !2878}
!2878 = !DILocation(line: 1093, column: 49, scope: !2517, inlinedAt: !2521)
!2879 = !DILocation(line: 1095, column: 9, scope: !2517, inlinedAt: !2521)
!2880 = !DILocation(line: 1113, column: 50, scope: !2522, inlinedAt: !2525)
!2881 = !DILocation(line: 1113, column: 47, scope: !2522, inlinedAt: !2525)
!2882 = !DILocation(line: 635, column: 2, scope: !2529)
!2883 = !DILocation(line: 636, column: 2, scope: !2473)
!2884 = !DILocation(line: 638, column: 6, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !2473, file: !3, line: 638, column: 6)
!2886 = !DILocation(line: 638, column: 11, scope: !2885)
!2887 = !DILocation(line: 638, column: 17, scope: !2885)
!2888 = !DILocation(line: 638, column: 6, scope: !2473)
!2889 = !DILocation(line: 639, column: 3, scope: !2890)
!2890 = distinct !DILexicalBlock(scope: !2885, file: !3, line: 638, column: 34)
!2891 = !DILocation(line: 639, column: 8, scope: !2890)
!2892 = !DILocation(line: 639, column: 14, scope: !2890)
!2893 = !DILocation(line: 639, column: 30, scope: !2890)
!2894 = !DILocation(line: 640, column: 14, scope: !2890)
!2895 = !DILocation(line: 640, column: 3, scope: !2890)
!2896 = !DILocation(line: 641, column: 10, scope: !2890)
!2897 = !DILocation(line: 642, column: 3, scope: !2890)
!2898 = !DILocation(line: 646, column: 6, scope: !2585)
!2899 = !DILocation(line: 646, column: 13, scope: !2585)
!2900 = !DILocation(line: 646, column: 17, scope: !2585)
!2901 = !DILocation(line: 646, column: 25, scope: !2585)
!2902 = !DILocation(line: 646, column: 31, scope: !2585)
!2903 = !DILocation(line: 646, column: 47, scope: !2585)
!2904 = !DILocation(line: 646, column: 51, scope: !2585)
!2905 = !DILocation(line: 646, column: 56, scope: !2585)
!2906 = !DILocation(line: 646, column: 62, scope: !2585)
!2907 = !DILocation(line: 646, column: 6, scope: !2473)
!2908 = !DILocation(line: 647, column: 16, scope: !2584)
!2909 = !DILocation(line: 647, column: 21, scope: !2584)
!2910 = !DILocation(line: 647, column: 27, scope: !2584)
!2911 = !DILocation(line: 394, column: 2, scope: !2728, inlinedAt: !2583)
!2912 = !DILocation(line: 394, column: 2, scope: !2731, inlinedAt: !2583)
!2913 = !DILocation(line: 649, column: 14, scope: !2584)
!2914 = !DILocation(line: 649, column: 22, scope: !2584)
!2915 = !DILocation(line: 649, column: 28, scope: !2584)
!2916 = !DILocation(line: 354, column: 2, scope: !2745, inlinedAt: !2587)
!2917 = !DILocation(line: 354, column: 2, scope: !2748, inlinedAt: !2587)
!2918 = !DILocation(line: 650, column: 12, scope: !2584)
!2919 = !DILocation(line: 650, column: 3, scope: !2584)
!2920 = !DILocation(line: 651, column: 16, scope: !2584)
!2921 = !DILocation(line: 651, column: 24, scope: !2584)
!2922 = !DILocation(line: 651, column: 30, scope: !2584)
!2923 = !DILocation(line: 394, column: 2, scope: !2728, inlinedAt: !2589)
!2924 = !DILocation(line: 394, column: 2, scope: !2731, inlinedAt: !2589)
!2925 = !DILocation(line: 653, column: 14, scope: !2584)
!2926 = !DILocation(line: 653, column: 19, scope: !2584)
!2927 = !DILocation(line: 653, column: 25, scope: !2584)
!2928 = !DILocation(line: 354, column: 2, scope: !2745, inlinedAt: !2591)
!2929 = !DILocation(line: 354, column: 2, scope: !2748, inlinedAt: !2591)
!2930 = !DILocation(line: 654, column: 2, scope: !2584)
!2931 = !DILabel(scope: !2473, name: "out", file: !3, line: 656)
!2932 = !DILocation(line: 656, column: 2, scope: !2473)
!2933 = !DILocation(line: 657, column: 31, scope: !2473)
!2934 = !DILocation(line: 657, column: 36, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2473, file: !3, line: 657, column: 36)
!2936 = !DILabel(scope: !2935, name: "__here", file: !3, line: 657)
!2937 = !DILocation(line: 657, column: 47, scope: !2473)
!2938 = !DILocation(line: 657, column: 2, scope: !2473)
!2939 = !DILocation(line: 659, column: 9, scope: !2473)
!2940 = !DILocation(line: 659, column: 2, scope: !2473)
!2941 = !DILabel(scope: !2473, name: "fail", file: !3, line: 661)
!2942 = !DILocation(line: 661, column: 2, scope: !2473)
!2943 = !DILocation(line: 662, column: 32, scope: !2473)
!2944 = !DILocation(line: 662, column: 2, scope: !2473)
!2945 = !DILocation(line: 663, column: 26, scope: !2473)
!2946 = !DILocation(line: 663, column: 2, scope: !2473)
!2947 = !DILocation(line: 664, column: 2, scope: !2473)
!2948 = !DILocation(line: 664, column: 7, scope: !2473)
!2949 = !DILocation(line: 664, column: 13, scope: !2473)
!2950 = !DILocation(line: 664, column: 29, scope: !2473)
!2951 = !DILocation(line: 665, column: 2, scope: !2473)
!2952 = !DILocation(line: 667, column: 6, scope: !2953)
!2953 = distinct !DILexicalBlock(scope: !2473, file: !3, line: 667, column: 6)
!2954 = !DILocation(line: 667, column: 13, scope: !2953)
!2955 = !DILocation(line: 667, column: 24, scope: !2953)
!2956 = !DILocation(line: 667, column: 27, scope: !2953)
!2957 = !DILocation(line: 667, column: 34, scope: !2953)
!2958 = !DILocation(line: 667, column: 6, scope: !2473)
!2959 = !DILocation(line: 668, column: 3, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2953, file: !3, line: 667, column: 45)
!2961 = !DILocation(line: 668, column: 8, scope: !2960)
!2962 = !DILocation(line: 668, column: 14, scope: !2960)
!2963 = !DILocation(line: 668, column: 28, scope: !2960)
!2964 = !DILocation(line: 676, column: 8, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2960, file: !3, line: 676, column: 7)
!2966 = !DILocation(line: 676, column: 17, scope: !2965)
!2967 = !DILocation(line: 676, column: 29, scope: !2965)
!2968 = !DILocation(line: 677, column: 41, scope: !2965)
!2969 = !DILocation(line: 677, column: 7, scope: !2965)
!2970 = !DILocation(line: 677, column: 46, scope: !2965)
!2971 = !DILocation(line: 676, column: 7, scope: !2960)
!2972 = !DILocation(line: 678, column: 4, scope: !2965)
!2973 = !DILocation(line: 679, column: 2, scope: !2960)
!2974 = !DILocation(line: 680, column: 29, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2953, file: !3, line: 679, column: 9)
!2976 = !DILocation(line: 680, column: 3, scope: !2975)
!2977 = !DILocation(line: 682, column: 2, scope: !2473)
!2978 = distinct !DISubprogram(name: "rpm_check_suspend_allowed", scope: !3, file: !3, line: 258, type: !1564, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2979 = !DILocation(line: 23, column: 61, scope: !2543, inlinedAt: !2980)
!2980 = distinct !DILocation(line: 28, column: 9, scope: !2981, inlinedAt: !2982)
!2981 = distinct !DISubprogram(name: "atomic_read", scope: !2527, file: !2527, line: 25, type: !2544, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2982 = distinct !DILocation(line: 269, column: 4, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2984, file: !3, line: 268, column: 11)
!2984 = distinct !DILexicalBlock(scope: !2985, file: !3, line: 266, column: 11)
!2985 = distinct !DILexicalBlock(scope: !2986, file: !3, line: 264, column: 11)
!2986 = distinct !DILexicalBlock(scope: !2978, file: !3, line: 262, column: 6)
!2987 = !DILocalVariable(name: "v", arg: 1, scope: !2988, file: !2566, line: 69, type: !2569)
!2988 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !2566, file: !2566, line: 69, type: !2567, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!2989 = !DILocation(line: 69, column: 73, scope: !2988, inlinedAt: !2990)
!2990 = distinct !DILocation(line: 27, column: 2, scope: !2981, inlinedAt: !2982)
!2991 = !DILocalVariable(name: "size", arg: 2, scope: !2988, file: !2566, line: 69, type: !122)
!2992 = !DILocation(line: 69, column: 83, scope: !2988, inlinedAt: !2990)
!2993 = !DILocalVariable(name: "v", arg: 1, scope: !2981, file: !2527, line: 25, type: !2546)
!2994 = !DILocation(line: 25, column: 29, scope: !2981, inlinedAt: !2982)
!2995 = !DILocation(line: 23, column: 61, scope: !2543, inlinedAt: !2996)
!2996 = distinct !DILocation(line: 28, column: 9, scope: !2981, inlinedAt: !2997)
!2997 = distinct !DILocation(line: 266, column: 11, scope: !2984)
!2998 = !DILocation(line: 69, column: 73, scope: !2988, inlinedAt: !2999)
!2999 = distinct !DILocation(line: 27, column: 2, scope: !2981, inlinedAt: !2997)
!3000 = !DILocation(line: 69, column: 83, scope: !2988, inlinedAt: !2999)
!3001 = !DILocation(line: 25, column: 29, scope: !2981, inlinedAt: !2997)
!3002 = !DILocalVariable(name: "dev", arg: 1, scope: !2978, file: !3, line: 258, type: !6)
!3003 = !DILocation(line: 258, column: 53, scope: !2978)
!3004 = !DILocalVariable(name: "retval", scope: !2978, file: !3, line: 260, type: !59)
!3005 = !DILocation(line: 260, column: 6, scope: !2978)
!3006 = !DILocation(line: 262, column: 6, scope: !2986)
!3007 = !DILocation(line: 262, column: 11, scope: !2986)
!3008 = !DILocation(line: 262, column: 17, scope: !2986)
!3009 = !DILocation(line: 262, column: 6, scope: !2978)
!3010 = !DILocation(line: 263, column: 10, scope: !2986)
!3011 = !DILocation(line: 263, column: 3, scope: !2986)
!3012 = !DILocation(line: 264, column: 11, scope: !2985)
!3013 = !DILocation(line: 264, column: 16, scope: !2985)
!3014 = !DILocation(line: 264, column: 22, scope: !2985)
!3015 = !DILocation(line: 264, column: 36, scope: !2985)
!3016 = !DILocation(line: 264, column: 11, scope: !2986)
!3017 = !DILocation(line: 265, column: 10, scope: !2985)
!3018 = !DILocation(line: 265, column: 3, scope: !2985)
!3019 = !DILocation(line: 266, column: 24, scope: !2984)
!3020 = !DILocation(line: 266, column: 29, scope: !2984)
!3021 = !DILocation(line: 266, column: 35, scope: !2984)
!3022 = !DILocation(line: 27, column: 25, scope: !2981, inlinedAt: !2997)
!3023 = !DILocation(line: 71, column: 19, scope: !2988, inlinedAt: !2999)
!3024 = !DILocation(line: 71, column: 22, scope: !2988, inlinedAt: !2999)
!3025 = !DILocation(line: 71, column: 2, scope: !2988, inlinedAt: !2999)
!3026 = !DILocation(line: 72, column: 2, scope: !2988, inlinedAt: !2999)
!3027 = !DILocation(line: 28, column: 26, scope: !2981, inlinedAt: !2997)
!3028 = !DILocation(line: 29, column: 9, scope: !2543, inlinedAt: !2996)
!3029 = !DILocation(line: 266, column: 48, scope: !2984)
!3030 = !DILocation(line: 266, column: 11, scope: !2985)
!3031 = !DILocation(line: 267, column: 10, scope: !2984)
!3032 = !DILocation(line: 267, column: 3, scope: !2984)
!3033 = !DILocation(line: 268, column: 12, scope: !2983)
!3034 = !DILocation(line: 268, column: 17, scope: !2983)
!3035 = !DILocation(line: 268, column: 23, scope: !2983)
!3036 = !DILocation(line: 268, column: 39, scope: !2983)
!3037 = !DILocation(line: 269, column: 17, scope: !2983)
!3038 = !DILocation(line: 269, column: 22, scope: !2983)
!3039 = !DILocation(line: 269, column: 28, scope: !2983)
!3040 = !DILocation(line: 27, column: 25, scope: !2981, inlinedAt: !2982)
!3041 = !DILocation(line: 71, column: 19, scope: !2988, inlinedAt: !2990)
!3042 = !DILocation(line: 71, column: 22, scope: !2988, inlinedAt: !2990)
!3043 = !DILocation(line: 71, column: 2, scope: !2988, inlinedAt: !2990)
!3044 = !DILocation(line: 72, column: 2, scope: !2988, inlinedAt: !2990)
!3045 = !DILocation(line: 28, column: 26, scope: !2981, inlinedAt: !2982)
!3046 = !DILocation(line: 29, column: 9, scope: !2543, inlinedAt: !2980)
!3047 = !DILocation(line: 269, column: 4, scope: !2983)
!3048 = !DILocation(line: 268, column: 11, scope: !2984)
!3049 = !DILocation(line: 270, column: 10, scope: !2983)
!3050 = !DILocation(line: 270, column: 3, scope: !2983)
!3051 = !DILocation(line: 273, column: 12, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !2983, file: !3, line: 273, column: 11)
!3053 = !DILocation(line: 273, column: 17, scope: !3052)
!3054 = !DILocation(line: 273, column: 23, scope: !3052)
!3055 = !DILocation(line: 274, column: 4, scope: !3052)
!3056 = !DILocation(line: 274, column: 7, scope: !3052)
!3057 = !DILocation(line: 274, column: 12, scope: !3052)
!3058 = !DILocation(line: 274, column: 18, scope: !3052)
!3059 = !DILocation(line: 274, column: 33, scope: !3052)
!3060 = !DILocation(line: 275, column: 6, scope: !3052)
!3061 = !DILocation(line: 275, column: 10, scope: !3052)
!3062 = !DILocation(line: 275, column: 15, scope: !3052)
!3063 = !DILocation(line: 275, column: 21, scope: !3052)
!3064 = !DILocation(line: 276, column: 4, scope: !3052)
!3065 = !DILocation(line: 276, column: 7, scope: !3052)
!3066 = !DILocation(line: 276, column: 12, scope: !3052)
!3067 = !DILocation(line: 276, column: 18, scope: !3052)
!3068 = !DILocation(line: 276, column: 26, scope: !3052)
!3069 = !DILocation(line: 273, column: 11, scope: !2983)
!3070 = !DILocation(line: 277, column: 10, scope: !3052)
!3071 = !DILocation(line: 277, column: 3, scope: !3052)
!3072 = !DILocation(line: 278, column: 39, scope: !3073)
!3073 = distinct !DILexicalBlock(scope: !3052, file: !3, line: 278, column: 11)
!3074 = !DILocation(line: 278, column: 11, scope: !3073)
!3075 = !DILocation(line: 278, column: 44, scope: !3073)
!3076 = !DILocation(line: 278, column: 11, scope: !3052)
!3077 = !DILocation(line: 279, column: 10, scope: !3073)
!3078 = !DILocation(line: 279, column: 3, scope: !3073)
!3079 = !DILocation(line: 280, column: 11, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3073, file: !3, line: 280, column: 11)
!3081 = !DILocation(line: 280, column: 16, scope: !3080)
!3082 = !DILocation(line: 280, column: 22, scope: !3080)
!3083 = !DILocation(line: 280, column: 37, scope: !3080)
!3084 = !DILocation(line: 280, column: 11, scope: !3073)
!3085 = !DILocation(line: 281, column: 10, scope: !3080)
!3086 = !DILocation(line: 281, column: 3, scope: !3080)
!3087 = !DILocation(line: 283, column: 9, scope: !2978)
!3088 = !DILocation(line: 283, column: 2, scope: !2978)
!3089 = distinct !DISubprogram(name: "pm_runtime_cancel_pending", scope: !3, file: !3, line: 141, type: !1568, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!3090 = !DILocalVariable(name: "dev", arg: 1, scope: !3089, file: !3, line: 141, type: !6)
!3091 = !DILocation(line: 141, column: 54, scope: !3089)
!3092 = !DILocation(line: 143, column: 30, scope: !3089)
!3093 = !DILocation(line: 143, column: 2, scope: !3089)
!3094 = !DILocation(line: 148, column: 2, scope: !3089)
!3095 = !DILocation(line: 148, column: 7, scope: !3089)
!3096 = !DILocation(line: 148, column: 13, scope: !3089)
!3097 = !DILocation(line: 148, column: 21, scope: !3089)
!3098 = !DILocation(line: 149, column: 1, scope: !3089)
!3099 = distinct !DISubprogram(name: "hrtimer_start", scope: !403, file: !403, line: 419, type: !3100, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!3100 = !DISubroutineType(types: !3101)
!3101 = !{null, !422, !411, !3102}
!3102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2032)
!3103 = !DILocalVariable(name: "timer", arg: 1, scope: !3099, file: !403, line: 419, type: !422)
!3104 = !DILocation(line: 419, column: 50, scope: !3099)
!3105 = !DILocalVariable(name: "tim", arg: 2, scope: !3099, file: !403, line: 419, type: !411)
!3106 = !DILocation(line: 419, column: 65, scope: !3099)
!3107 = !DILocalVariable(name: "mode", arg: 3, scope: !3099, file: !403, line: 420, type: !3102)
!3108 = !DILocation(line: 420, column: 30, scope: !3099)
!3109 = !DILocation(line: 422, column: 25, scope: !3099)
!3110 = !DILocation(line: 422, column: 32, scope: !3099)
!3111 = !DILocation(line: 422, column: 40, scope: !3099)
!3112 = !DILocation(line: 422, column: 2, scope: !3099)
!3113 = !DILocation(line: 423, column: 1, scope: !3099)
!3114 = distinct !DISubprogram(name: "__pm_runtime_idle", scope: !3, file: !3, line: 998, type: !2474, scopeLine: 999, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!3115 = !DILocation(line: 407, column: 64, scope: !2150, inlinedAt: !3116)
!3116 = distinct !DILocation(line: 1014, column: 2, scope: !3114)
!3117 = !DILocation(line: 407, column: 84, scope: !2150, inlinedAt: !3116)
!3118 = !DILocation(line: 327, column: 67, scope: !2160, inlinedAt: !3119)
!3119 = distinct !DILocation(line: 1012, column: 2, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !3121, file: !3, line: 1012, column: 2)
!3121 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 1012, column: 2)
!3122 = distinct !DILexicalBlock(scope: !3123, file: !3, line: 1012, column: 2)
!3123 = distinct !DILexicalBlock(scope: !3124, file: !3, line: 1012, column: 2)
!3124 = distinct !DILexicalBlock(scope: !3114, file: !3, line: 1012, column: 2)
!3125 = !DILocalVariable(name: "v", arg: 1, scope: !3126, file: !2511, line: 121, type: !2514)
!3126 = distinct !DISubprogram(name: "arch_atomic_dec_and_test", scope: !2511, file: !2511, line: 121, type: !3127, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!3127 = !DISubroutineType(types: !3128)
!3128 = !{!915, !2514}
!3129 = !DILocation(line: 121, column: 64, scope: !3126, inlinedAt: !3130)
!3130 = distinct !DILocation(line: 749, column: 9, scope: !3131, inlinedAt: !3132)
!3131 = distinct !DISubprogram(name: "atomic_dec_and_test", scope: !2527, file: !2527, line: 746, type: !3127, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!3132 = distinct !DILocation(line: 1004, column: 8, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3134, file: !3, line: 1004, column: 7)
!3134 = distinct !DILexicalBlock(scope: !3135, file: !3, line: 1003, column: 30)
!3135 = distinct !DILexicalBlock(scope: !3114, file: !3, line: 1003, column: 6)
!3136 = !DILocalVariable(name: "c", scope: !3137, file: !2511, line: 123, type: !915)
!3137 = distinct !DILexicalBlock(scope: !3126, file: !2511, line: 123, column: 9)
!3138 = !DILocation(line: 123, column: 9, scope: !3137, inlinedAt: !3130)
!3139 = !DILocation(line: 99, column: 79, scope: !2565, inlinedAt: !3140)
!3140 = distinct !DILocation(line: 748, column: 2, scope: !3131, inlinedAt: !3132)
!3141 = !DILocation(line: 99, column: 89, scope: !2565, inlinedAt: !3140)
!3142 = !DILocalVariable(name: "v", arg: 1, scope: !3131, file: !2527, line: 746, type: !2514)
!3143 = !DILocation(line: 746, column: 31, scope: !3131, inlinedAt: !3132)
!3144 = !DILocalVariable(name: "dev", arg: 1, scope: !3114, file: !3, line: 998, type: !6)
!3145 = !DILocation(line: 998, column: 38, scope: !3114)
!3146 = !DILocalVariable(name: "rpmflags", arg: 2, scope: !3114, file: !3, line: 998, type: !59)
!3147 = !DILocation(line: 998, column: 47, scope: !3114)
!3148 = !DILocalVariable(name: "flags", scope: !3114, file: !3, line: 1000, type: !125)
!3149 = !DILocation(line: 1000, column: 16, scope: !3114)
!3150 = !DILocalVariable(name: "retval", scope: !3114, file: !3, line: 1001, type: !59)
!3151 = !DILocation(line: 1001, column: 6, scope: !3114)
!3152 = !DILocation(line: 1003, column: 6, scope: !3135)
!3153 = !DILocation(line: 1003, column: 15, scope: !3135)
!3154 = !DILocation(line: 1003, column: 6, scope: !3114)
!3155 = !DILocation(line: 1004, column: 29, scope: !3133)
!3156 = !DILocation(line: 1004, column: 34, scope: !3133)
!3157 = !DILocation(line: 1004, column: 40, scope: !3133)
!3158 = !DILocation(line: 748, column: 31, scope: !3131, inlinedAt: !3132)
!3159 = !DILocation(line: 101, column: 20, scope: !2565, inlinedAt: !3140)
!3160 = !DILocation(line: 101, column: 23, scope: !2565, inlinedAt: !3140)
!3161 = !DILocation(line: 101, column: 2, scope: !2565, inlinedAt: !3140)
!3162 = !DILocation(line: 102, column: 2, scope: !2565, inlinedAt: !3140)
!3163 = !DILocation(line: 749, column: 34, scope: !3131, inlinedAt: !3132)
!3164 = !{i32 -2146905484, i32 -2146905417}
!3165 = !DILocation(line: 1004, column: 7, scope: !3134)
!3166 = !DILocation(line: 1005, column: 28, scope: !3167)
!3167 = distinct !DILexicalBlock(scope: !3133, file: !3, line: 1004, column: 54)
!3168 = !DILocation(line: 1005, column: 33, scope: !3167)
!3169 = !DILocation(line: 1005, column: 4, scope: !3167)
!3170 = !DILocation(line: 1006, column: 4, scope: !3167)
!3171 = !DILocation(line: 1008, column: 2, scope: !3134)
!3172 = !DILocation(line: 1010, column: 2, scope: !3114)
!3173 = !DILocation(line: 1010, column: 2, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3175, file: !3, line: 1010, column: 2)
!3175 = distinct !DILexicalBlock(scope: !3114, file: !3, line: 1010, column: 2)
!3176 = !DILocation(line: 1010, column: 2, scope: !3175)
!3177 = !DILocation(line: 1010, column: 2, scope: !3178)
!3178 = distinct !DILexicalBlock(scope: !3174, file: !3, line: 1010, column: 2)
!3179 = !DILocation(line: 1010, column: 2, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !3178, file: !3, line: 1010, column: 2)
!3181 = !DILocation(line: 1012, column: 2, scope: !3114)
!3182 = !DILocation(line: 1012, column: 2, scope: !3124)
!3183 = !DILocalVariable(name: "__dummy", scope: !3184, file: !3, line: 1012, type: !125)
!3184 = distinct !DILexicalBlock(scope: !3123, file: !3, line: 1012, column: 2)
!3185 = !DILocation(line: 1012, column: 2, scope: !3184)
!3186 = !DILocalVariable(name: "__dummy2", scope: !3184, file: !3, line: 1012, type: !125)
!3187 = !DILocation(line: 1012, column: 2, scope: !3123)
!3188 = !DILocation(line: 1012, column: 2, scope: !3122)
!3189 = !DILocation(line: 1012, column: 2, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 1012, column: 2)
!3191 = !DILocalVariable(name: "__dummy", scope: !3192, file: !3, line: 1012, type: !125)
!3192 = distinct !DILexicalBlock(scope: !3193, file: !3, line: 1012, column: 2)
!3193 = distinct !DILexicalBlock(scope: !3190, file: !3, line: 1012, column: 2)
!3194 = !DILocation(line: 1012, column: 2, scope: !3192)
!3195 = !DILocalVariable(name: "__dummy2", scope: !3192, file: !3, line: 1012, type: !125)
!3196 = !DILocation(line: 1012, column: 2, scope: !3193)
!3197 = !DILocation(line: 1012, column: 2, scope: !3121)
!3198 = !{i32 -2143522556}
!3199 = !DILocation(line: 1012, column: 2, scope: !3120)
!3200 = !DILocation(line: 329, column: 10, scope: !2160, inlinedAt: !3119)
!3201 = !DILocation(line: 329, column: 16, scope: !2160, inlinedAt: !3119)
!3202 = !DILocation(line: 1013, column: 20, scope: !3114)
!3203 = !DILocation(line: 1013, column: 25, scope: !3114)
!3204 = !DILocation(line: 1013, column: 11, scope: !3114)
!3205 = !DILocation(line: 1013, column: 9, scope: !3114)
!3206 = !DILocation(line: 1014, column: 26, scope: !3114)
!3207 = !DILocation(line: 1014, column: 31, scope: !3114)
!3208 = !DILocation(line: 1014, column: 37, scope: !3114)
!3209 = !DILocation(line: 1014, column: 43, scope: !3114)
!3210 = !DILocation(line: 409, column: 2, scope: !2215, inlinedAt: !3116)
!3211 = !DILocation(line: 409, column: 2, scope: !2220, inlinedAt: !3116)
!3212 = !DILocation(line: 409, column: 2, scope: !2221, inlinedAt: !3116)
!3213 = !DILocation(line: 409, column: 2, scope: !2228, inlinedAt: !3116)
!3214 = !DILocation(line: 409, column: 2, scope: !2231, inlinedAt: !3116)
!3215 = !DILocation(line: 1016, column: 9, scope: !3114)
!3216 = !DILocation(line: 1016, column: 2, scope: !3114)
!3217 = !DILocation(line: 1017, column: 1, scope: !3114)
!3218 = distinct !DISubprogram(name: "trace_rpm_usage_rcuidle", scope: !3219, file: !3219, line: 77, type: !3220, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!3219 = !DIFile(filename: "./include/trace/events/rpm.h", directory: "/home/lizy2001/genbc/linux")
!3220 = !DISubroutineType(types: !3221)
!3221 = !{null, !6, !59}
!3222 = !DILocalVariable(name: "dev", arg: 1, scope: !3218, file: !3219, line: 77, type: !6)
!3223 = !DILocation(line: 77, column: 1, scope: !3218)
!3224 = !DILocalVariable(name: "flags", arg: 2, scope: !3218, file: !3219, line: 77, type: !59)
!3225 = distinct !DISubprogram(name: "rpm_idle", scope: !3, file: !3, line: 396, type: !2474, scopeLine: 397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!3226 = !DILocalVariable(name: "dev", arg: 1, scope: !3225, file: !3, line: 396, type: !6)
!3227 = !DILocation(line: 396, column: 36, scope: !3225)
!3228 = !DILocalVariable(name: "rpmflags", arg: 2, scope: !3225, file: !3, line: 396, type: !59)
!3229 = !DILocation(line: 396, column: 45, scope: !3225)
!3230 = !DILocalVariable(name: "callback", scope: !3225, file: !3, line: 398, type: !1563)
!3231 = !DILocation(line: 398, column: 8, scope: !3225)
!3232 = !DILocalVariable(name: "retval", scope: !3225, file: !3, line: 399, type: !59)
!3233 = !DILocation(line: 399, column: 6, scope: !3225)
!3234 = !DILocation(line: 401, column: 25, scope: !3225)
!3235 = !DILocation(line: 401, column: 30, scope: !3225)
!3236 = !DILocation(line: 401, column: 2, scope: !3225)
!3237 = !DILocation(line: 402, column: 37, scope: !3225)
!3238 = !DILocation(line: 402, column: 11, scope: !3225)
!3239 = !DILocation(line: 402, column: 9, scope: !3225)
!3240 = !DILocation(line: 403, column: 6, scope: !3241)
!3241 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 403, column: 6)
!3242 = !DILocation(line: 403, column: 13, scope: !3241)
!3243 = !DILocation(line: 403, column: 6, scope: !3225)
!3244 = !DILocation(line: 407, column: 11, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3241, file: !3, line: 407, column: 11)
!3246 = !DILocation(line: 407, column: 16, scope: !3245)
!3247 = !DILocation(line: 407, column: 22, scope: !3245)
!3248 = !DILocation(line: 407, column: 37, scope: !3245)
!3249 = !DILocation(line: 407, column: 11, scope: !3241)
!3250 = !DILocation(line: 408, column: 10, scope: !3245)
!3251 = !DILocation(line: 408, column: 3, scope: !3245)
!3252 = !DILocation(line: 414, column: 11, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3245, file: !3, line: 414, column: 11)
!3254 = !DILocation(line: 414, column: 16, scope: !3253)
!3255 = !DILocation(line: 414, column: 22, scope: !3253)
!3256 = !DILocation(line: 414, column: 38, scope: !3253)
!3257 = !DILocation(line: 415, column: 6, scope: !3253)
!3258 = !DILocation(line: 415, column: 11, scope: !3253)
!3259 = !DILocation(line: 415, column: 17, scope: !3253)
!3260 = !DILocation(line: 415, column: 25, scope: !3253)
!3261 = !DILocation(line: 414, column: 11, scope: !3245)
!3262 = !DILocation(line: 416, column: 10, scope: !3253)
!3263 = !DILocation(line: 416, column: 3, scope: !3253)
!3264 = !DILocation(line: 419, column: 11, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3253, file: !3, line: 419, column: 11)
!3266 = !DILocation(line: 419, column: 16, scope: !3265)
!3267 = !DILocation(line: 419, column: 22, scope: !3265)
!3268 = !DILocation(line: 419, column: 11, scope: !3253)
!3269 = !DILocation(line: 420, column: 10, scope: !3265)
!3270 = !DILocation(line: 420, column: 3, scope: !3265)
!3271 = !DILocation(line: 421, column: 6, scope: !3272)
!3272 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 421, column: 6)
!3273 = !DILocation(line: 421, column: 6, scope: !3225)
!3274 = !DILocation(line: 422, column: 3, scope: !3272)
!3275 = !DILocation(line: 425, column: 2, scope: !3225)
!3276 = !DILocation(line: 425, column: 7, scope: !3225)
!3277 = !DILocation(line: 425, column: 13, scope: !3225)
!3278 = !DILocation(line: 425, column: 21, scope: !3225)
!3279 = !DILocation(line: 427, column: 6, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 427, column: 6)
!3281 = !DILocation(line: 427, column: 11, scope: !3280)
!3282 = !DILocation(line: 427, column: 17, scope: !3280)
!3283 = !DILocation(line: 427, column: 6, scope: !3225)
!3284 = !DILocation(line: 428, column: 3, scope: !3280)
!3285 = !DILocation(line: 431, column: 6, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 431, column: 6)
!3287 = !DILocation(line: 431, column: 15, scope: !3286)
!3288 = !DILocation(line: 431, column: 6, scope: !3225)
!3289 = !DILocation(line: 432, column: 3, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3286, file: !3, line: 431, column: 28)
!3291 = !DILocation(line: 432, column: 8, scope: !3290)
!3292 = !DILocation(line: 432, column: 14, scope: !3290)
!3293 = !DILocation(line: 432, column: 22, scope: !3290)
!3294 = !DILocation(line: 433, column: 8, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3290, file: !3, line: 433, column: 7)
!3296 = !DILocation(line: 433, column: 13, scope: !3295)
!3297 = !DILocation(line: 433, column: 19, scope: !3295)
!3298 = !DILocation(line: 433, column: 7, scope: !3290)
!3299 = !DILocation(line: 434, column: 4, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3295, file: !3, line: 433, column: 36)
!3301 = !DILocation(line: 434, column: 9, scope: !3300)
!3302 = !DILocation(line: 434, column: 15, scope: !3300)
!3303 = !DILocation(line: 434, column: 31, scope: !3300)
!3304 = !DILocation(line: 435, column: 15, scope: !3300)
!3305 = !DILocation(line: 435, column: 23, scope: !3300)
!3306 = !DILocation(line: 435, column: 28, scope: !3300)
!3307 = !DILocation(line: 435, column: 34, scope: !3300)
!3308 = !DILocation(line: 435, column: 4, scope: !3300)
!3309 = !DILocation(line: 436, column: 3, scope: !3300)
!3310 = !DILocation(line: 437, column: 32, scope: !3290)
!3311 = !DILocation(line: 437, column: 37, scope: !3312)
!3312 = distinct !DILexicalBlock(scope: !3290, file: !3, line: 437, column: 37)
!3313 = !DILabel(scope: !3312, name: "__here", file: !3, line: 437)
!3314 = !DILocation(line: 437, column: 3, scope: !3290)
!3315 = !DILocation(line: 438, column: 3, scope: !3290)
!3316 = !DILocation(line: 441, column: 2, scope: !3225)
!3317 = !DILocation(line: 441, column: 7, scope: !3225)
!3318 = !DILocation(line: 441, column: 13, scope: !3225)
!3319 = !DILocation(line: 441, column: 31, scope: !3225)
!3320 = !DILocation(line: 443, column: 13, scope: !3225)
!3321 = !DILocation(line: 443, column: 11, scope: !3225)
!3322 = !DILocation(line: 445, column: 6, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 445, column: 6)
!3324 = !DILocation(line: 445, column: 6, scope: !3225)
!3325 = !DILocation(line: 446, column: 27, scope: !3323)
!3326 = !DILocation(line: 446, column: 37, scope: !3323)
!3327 = !DILocation(line: 446, column: 12, scope: !3323)
!3328 = !DILocation(line: 446, column: 10, scope: !3323)
!3329 = !DILocation(line: 446, column: 3, scope: !3323)
!3330 = !DILocation(line: 448, column: 2, scope: !3225)
!3331 = !DILocation(line: 448, column: 7, scope: !3225)
!3332 = !DILocation(line: 448, column: 13, scope: !3225)
!3333 = !DILocation(line: 448, column: 31, scope: !3225)
!3334 = !DILocation(line: 449, column: 2, scope: !3225)
!3335 = !DILabel(scope: !3225, name: "out", file: !3, line: 451)
!3336 = !DILocation(line: 451, column: 2, scope: !3225)
!3337 = !DILocation(line: 452, column: 31, scope: !3225)
!3338 = !DILocation(line: 452, column: 36, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 452, column: 36)
!3340 = !DILabel(scope: !3339, name: "__here", file: !3, line: 452)
!3341 = !DILocation(line: 452, column: 47, scope: !3225)
!3342 = !DILocation(line: 452, column: 2, scope: !3225)
!3343 = !DILocation(line: 453, column: 9, scope: !3225)
!3344 = !DILocation(line: 453, column: 18, scope: !3225)
!3345 = !DILocation(line: 453, column: 39, scope: !3225)
!3346 = !DILocation(line: 453, column: 44, scope: !3225)
!3347 = !DILocation(line: 453, column: 53, scope: !3225)
!3348 = !DILocation(line: 453, column: 27, scope: !3225)
!3349 = !DILocation(line: 453, column: 2, scope: !3225)
!3350 = !DILocation(line: 454, column: 1, scope: !3225)
!3351 = distinct !DISubprogram(name: "__pm_runtime_suspend", scope: !3, file: !3, line: 1032, type: !2474, scopeLine: 1033, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!3352 = !DILocation(line: 407, column: 64, scope: !2150, inlinedAt: !3353)
!3353 = distinct !DILocation(line: 1048, column: 2, scope: !3351)
!3354 = !DILocation(line: 407, column: 84, scope: !2150, inlinedAt: !3353)
!3355 = !DILocation(line: 327, column: 67, scope: !2160, inlinedAt: !3356)
!3356 = distinct !DILocation(line: 1046, column: 2, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3358, file: !3, line: 1046, column: 2)
!3358 = distinct !DILexicalBlock(scope: !3359, file: !3, line: 1046, column: 2)
!3359 = distinct !DILexicalBlock(scope: !3360, file: !3, line: 1046, column: 2)
!3360 = distinct !DILexicalBlock(scope: !3361, file: !3, line: 1046, column: 2)
!3361 = distinct !DILexicalBlock(scope: !3351, file: !3, line: 1046, column: 2)
!3362 = !DILocation(line: 121, column: 64, scope: !3126, inlinedAt: !3363)
!3363 = distinct !DILocation(line: 749, column: 9, scope: !3131, inlinedAt: !3364)
!3364 = distinct !DILocation(line: 1038, column: 8, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3366, file: !3, line: 1038, column: 7)
!3366 = distinct !DILexicalBlock(scope: !3367, file: !3, line: 1037, column: 30)
!3367 = distinct !DILexicalBlock(scope: !3351, file: !3, line: 1037, column: 6)
!3368 = !DILocation(line: 123, column: 9, scope: !3137, inlinedAt: !3363)
!3369 = !DILocation(line: 99, column: 79, scope: !2565, inlinedAt: !3370)
!3370 = distinct !DILocation(line: 748, column: 2, scope: !3131, inlinedAt: !3364)
!3371 = !DILocation(line: 99, column: 89, scope: !2565, inlinedAt: !3370)
!3372 = !DILocation(line: 746, column: 31, scope: !3131, inlinedAt: !3364)
!3373 = !DILocalVariable(name: "dev", arg: 1, scope: !3351, file: !3, line: 1032, type: !6)
!3374 = !DILocation(line: 1032, column: 41, scope: !3351)
!3375 = !DILocalVariable(name: "rpmflags", arg: 2, scope: !3351, file: !3, line: 1032, type: !59)
!3376 = !DILocation(line: 1032, column: 50, scope: !3351)
!3377 = !DILocalVariable(name: "flags", scope: !3351, file: !3, line: 1034, type: !125)
!3378 = !DILocation(line: 1034, column: 16, scope: !3351)
!3379 = !DILocalVariable(name: "retval", scope: !3351, file: !3, line: 1035, type: !59)
!3380 = !DILocation(line: 1035, column: 6, scope: !3351)
!3381 = !DILocation(line: 1037, column: 6, scope: !3367)
!3382 = !DILocation(line: 1037, column: 15, scope: !3367)
!3383 = !DILocation(line: 1037, column: 6, scope: !3351)
!3384 = !DILocation(line: 1038, column: 29, scope: !3365)
!3385 = !DILocation(line: 1038, column: 34, scope: !3365)
!3386 = !DILocation(line: 1038, column: 40, scope: !3365)
!3387 = !DILocation(line: 748, column: 31, scope: !3131, inlinedAt: !3364)
!3388 = !DILocation(line: 101, column: 20, scope: !2565, inlinedAt: !3370)
!3389 = !DILocation(line: 101, column: 23, scope: !2565, inlinedAt: !3370)
!3390 = !DILocation(line: 101, column: 2, scope: !2565, inlinedAt: !3370)
!3391 = !DILocation(line: 102, column: 2, scope: !2565, inlinedAt: !3370)
!3392 = !DILocation(line: 749, column: 34, scope: !3131, inlinedAt: !3364)
!3393 = !DILocation(line: 1038, column: 7, scope: !3366)
!3394 = !DILocation(line: 1039, column: 28, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3365, file: !3, line: 1038, column: 54)
!3396 = !DILocation(line: 1039, column: 33, scope: !3395)
!3397 = !DILocation(line: 1039, column: 4, scope: !3395)
!3398 = !DILocation(line: 1040, column: 4, scope: !3395)
!3399 = !DILocation(line: 1042, column: 2, scope: !3366)
!3400 = !DILocation(line: 1044, column: 2, scope: !3351)
!3401 = !DILocation(line: 1044, column: 2, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3403, file: !3, line: 1044, column: 2)
!3403 = distinct !DILexicalBlock(scope: !3351, file: !3, line: 1044, column: 2)
!3404 = !DILocation(line: 1044, column: 2, scope: !3403)
!3405 = !DILocation(line: 1044, column: 2, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3402, file: !3, line: 1044, column: 2)
!3407 = !DILocation(line: 1044, column: 2, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3406, file: !3, line: 1044, column: 2)
!3409 = !DILocation(line: 1046, column: 2, scope: !3351)
!3410 = !DILocation(line: 1046, column: 2, scope: !3361)
!3411 = !DILocalVariable(name: "__dummy", scope: !3412, file: !3, line: 1046, type: !125)
!3412 = distinct !DILexicalBlock(scope: !3360, file: !3, line: 1046, column: 2)
!3413 = !DILocation(line: 1046, column: 2, scope: !3412)
!3414 = !DILocalVariable(name: "__dummy2", scope: !3412, file: !3, line: 1046, type: !125)
!3415 = !DILocation(line: 1046, column: 2, scope: !3360)
!3416 = !DILocation(line: 1046, column: 2, scope: !3359)
!3417 = !DILocation(line: 1046, column: 2, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3359, file: !3, line: 1046, column: 2)
!3419 = !DILocalVariable(name: "__dummy", scope: !3420, file: !3, line: 1046, type: !125)
!3420 = distinct !DILexicalBlock(scope: !3421, file: !3, line: 1046, column: 2)
!3421 = distinct !DILexicalBlock(scope: !3418, file: !3, line: 1046, column: 2)
!3422 = !DILocation(line: 1046, column: 2, scope: !3420)
!3423 = !DILocalVariable(name: "__dummy2", scope: !3420, file: !3, line: 1046, type: !125)
!3424 = !DILocation(line: 1046, column: 2, scope: !3421)
!3425 = !DILocation(line: 1046, column: 2, scope: !3358)
!3426 = !{i32 -2143521234}
!3427 = !DILocation(line: 1046, column: 2, scope: !3357)
!3428 = !DILocation(line: 329, column: 10, scope: !2160, inlinedAt: !3356)
!3429 = !DILocation(line: 329, column: 16, scope: !2160, inlinedAt: !3356)
!3430 = !DILocation(line: 1047, column: 23, scope: !3351)
!3431 = !DILocation(line: 1047, column: 28, scope: !3351)
!3432 = !DILocation(line: 1047, column: 11, scope: !3351)
!3433 = !DILocation(line: 1047, column: 9, scope: !3351)
!3434 = !DILocation(line: 1048, column: 26, scope: !3351)
!3435 = !DILocation(line: 1048, column: 31, scope: !3351)
!3436 = !DILocation(line: 1048, column: 37, scope: !3351)
!3437 = !DILocation(line: 1048, column: 43, scope: !3351)
!3438 = !DILocation(line: 409, column: 2, scope: !2215, inlinedAt: !3353)
!3439 = !DILocation(line: 409, column: 2, scope: !2220, inlinedAt: !3353)
!3440 = !DILocation(line: 409, column: 2, scope: !2221, inlinedAt: !3353)
!3441 = !DILocation(line: 409, column: 2, scope: !2228, inlinedAt: !3353)
!3442 = !DILocation(line: 409, column: 2, scope: !2231, inlinedAt: !3353)
!3443 = !DILocation(line: 1050, column: 9, scope: !3351)
!3444 = !DILocation(line: 1050, column: 2, scope: !3351)
!3445 = !DILocation(line: 1051, column: 1, scope: !3351)
!3446 = distinct !DISubprogram(name: "__pm_runtime_resume", scope: !3, file: !3, line: 1065, type: !2474, scopeLine: 1066, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!3447 = !DILocation(line: 407, column: 64, scope: !2150, inlinedAt: !3448)
!3448 = distinct !DILocation(line: 1078, column: 2, scope: !3446)
!3449 = !DILocation(line: 407, column: 84, scope: !2150, inlinedAt: !3448)
!3450 = !DILocation(line: 327, column: 67, scope: !2160, inlinedAt: !3451)
!3451 = distinct !DILocation(line: 1076, column: 2, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3453, file: !3, line: 1076, column: 2)
!3453 = distinct !DILexicalBlock(scope: !3454, file: !3, line: 1076, column: 2)
!3454 = distinct !DILexicalBlock(scope: !3455, file: !3, line: 1076, column: 2)
!3455 = distinct !DILexicalBlock(scope: !3456, file: !3, line: 1076, column: 2)
!3456 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 1076, column: 2)
!3457 = !DILocalVariable(name: "v", arg: 1, scope: !3458, file: !2511, line: 93, type: !2514)
!3458 = distinct !DISubprogram(name: "arch_atomic_inc", scope: !2511, file: !2511, line: 93, type: !3459, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!3459 = !DISubroutineType(types: !3460)
!3460 = !{null, !2514}
!3461 = !DILocation(line: 93, column: 55, scope: !3458, inlinedAt: !3462)
!3462 = distinct !DILocation(line: 241, column: 2, scope: !3463, inlinedAt: !3464)
!3463 = distinct !DISubprogram(name: "atomic_inc", scope: !2527, file: !2527, line: 238, type: !3459, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!3464 = distinct !DILocation(line: 1074, column: 3, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 1073, column: 6)
!3466 = !DILocation(line: 99, column: 79, scope: !2565, inlinedAt: !3467)
!3467 = distinct !DILocation(line: 240, column: 2, scope: !3463, inlinedAt: !3464)
!3468 = !DILocation(line: 99, column: 89, scope: !2565, inlinedAt: !3467)
!3469 = !DILocalVariable(name: "v", arg: 1, scope: !3463, file: !2527, line: 238, type: !2514)
!3470 = !DILocation(line: 238, column: 22, scope: !3463, inlinedAt: !3464)
!3471 = !DILocalVariable(name: "dev", arg: 1, scope: !3446, file: !3, line: 1065, type: !6)
!3472 = !DILocation(line: 1065, column: 40, scope: !3446)
!3473 = !DILocalVariable(name: "rpmflags", arg: 2, scope: !3446, file: !3, line: 1065, type: !59)
!3474 = !DILocation(line: 1065, column: 49, scope: !3446)
!3475 = !DILocalVariable(name: "flags", scope: !3446, file: !3, line: 1067, type: !125)
!3476 = !DILocation(line: 1067, column: 16, scope: !3446)
!3477 = !DILocalVariable(name: "retval", scope: !3446, file: !3, line: 1068, type: !59)
!3478 = !DILocation(line: 1068, column: 6, scope: !3446)
!3479 = !DILocation(line: 1070, column: 2, scope: !3446)
!3480 = !DILocation(line: 1070, column: 2, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3482, file: !3, line: 1070, column: 2)
!3482 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 1070, column: 2)
!3483 = !DILocation(line: 1070, column: 2, scope: !3482)
!3484 = !DILocation(line: 1070, column: 2, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3481, file: !3, line: 1070, column: 2)
!3486 = !DILocation(line: 1070, column: 2, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3485, file: !3, line: 1070, column: 2)
!3488 = !DILocation(line: 1073, column: 6, scope: !3465)
!3489 = !DILocation(line: 1073, column: 15, scope: !3465)
!3490 = !DILocation(line: 1073, column: 6, scope: !3446)
!3491 = !DILocation(line: 1074, column: 15, scope: !3465)
!3492 = !DILocation(line: 1074, column: 20, scope: !3465)
!3493 = !DILocation(line: 1074, column: 26, scope: !3465)
!3494 = !DILocation(line: 240, column: 31, scope: !3463, inlinedAt: !3464)
!3495 = !DILocation(line: 101, column: 20, scope: !2565, inlinedAt: !3467)
!3496 = !DILocation(line: 101, column: 23, scope: !2565, inlinedAt: !3467)
!3497 = !DILocation(line: 101, column: 2, scope: !2565, inlinedAt: !3467)
!3498 = !DILocation(line: 102, column: 2, scope: !2565, inlinedAt: !3467)
!3499 = !DILocation(line: 241, column: 18, scope: !3463, inlinedAt: !3464)
!3500 = !DILocation(line: 96, column: 16, scope: !3458, inlinedAt: !3462)
!3501 = !DILocation(line: 96, column: 19, scope: !3458, inlinedAt: !3462)
!3502 = !DILocation(line: 95, column: 2, scope: !3458, inlinedAt: !3462)
!3503 = !{i32 -2146906494}
!3504 = !DILocation(line: 1074, column: 3, scope: !3465)
!3505 = !DILocation(line: 1076, column: 2, scope: !3446)
!3506 = !DILocation(line: 1076, column: 2, scope: !3456)
!3507 = !DILocalVariable(name: "__dummy", scope: !3508, file: !3, line: 1076, type: !125)
!3508 = distinct !DILexicalBlock(scope: !3455, file: !3, line: 1076, column: 2)
!3509 = !DILocation(line: 1076, column: 2, scope: !3508)
!3510 = !DILocalVariable(name: "__dummy2", scope: !3508, file: !3, line: 1076, type: !125)
!3511 = !DILocation(line: 1076, column: 2, scope: !3455)
!3512 = !DILocation(line: 1076, column: 2, scope: !3454)
!3513 = !DILocation(line: 1076, column: 2, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3454, file: !3, line: 1076, column: 2)
!3515 = !DILocalVariable(name: "__dummy", scope: !3516, file: !3, line: 1076, type: !125)
!3516 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 1076, column: 2)
!3517 = distinct !DILexicalBlock(scope: !3514, file: !3, line: 1076, column: 2)
!3518 = !DILocation(line: 1076, column: 2, scope: !3516)
!3519 = !DILocalVariable(name: "__dummy2", scope: !3516, file: !3, line: 1076, type: !125)
!3520 = !DILocation(line: 1076, column: 2, scope: !3517)
!3521 = !DILocation(line: 1076, column: 2, scope: !3453)
!3522 = !{i32 -2143519869}
!3523 = !DILocation(line: 1076, column: 2, scope: !3452)
!3524 = !DILocation(line: 329, column: 10, scope: !2160, inlinedAt: !3451)
!3525 = !DILocation(line: 329, column: 16, scope: !2160, inlinedAt: !3451)
!3526 = !DILocation(line: 1077, column: 22, scope: !3446)
!3527 = !DILocation(line: 1077, column: 27, scope: !3446)
!3528 = !DILocation(line: 1077, column: 11, scope: !3446)
!3529 = !DILocation(line: 1077, column: 9, scope: !3446)
!3530 = !DILocation(line: 1078, column: 26, scope: !3446)
!3531 = !DILocation(line: 1078, column: 31, scope: !3446)
!3532 = !DILocation(line: 1078, column: 37, scope: !3446)
!3533 = !DILocation(line: 1078, column: 43, scope: !3446)
!3534 = !DILocation(line: 409, column: 2, scope: !2215, inlinedAt: !3448)
!3535 = !DILocation(line: 409, column: 2, scope: !2220, inlinedAt: !3448)
!3536 = !DILocation(line: 409, column: 2, scope: !2221, inlinedAt: !3448)
!3537 = !DILocation(line: 409, column: 2, scope: !2228, inlinedAt: !3448)
!3538 = !DILocation(line: 409, column: 2, scope: !2231, inlinedAt: !3448)
!3539 = !DILocation(line: 1080, column: 9, scope: !3446)
!3540 = !DILocation(line: 1080, column: 2, scope: !3446)
!3541 = distinct !DISubprogram(name: "rpm_resume", scope: !3, file: !3, line: 702, type: !2474, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!3542 = !DILocation(line: 377, column: 55, scope: !2291, inlinedAt: !3543)
!3543 = distinct !DILocation(line: 869, column: 3, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3545, file: !3, line: 864, column: 38)
!3545 = distinct !DILexicalBlock(scope: !3541, file: !3, line: 864, column: 6)
!3546 = !DILocation(line: 402, column: 57, scope: !2282, inlinedAt: !3547)
!3547 = distinct !DILocation(line: 865, column: 3, scope: !3544)
!3548 = !DILocation(line: 93, column: 55, scope: !3458, inlinedAt: !3549)
!3549 = distinct !DILocation(line: 241, column: 2, scope: !3463, inlinedAt: !3550)
!3550 = distinct !DILocation(line: 856, column: 4, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3552, file: !3, line: 855, column: 7)
!3552 = distinct !DILexicalBlock(scope: !3553, file: !3, line: 851, column: 9)
!3553 = distinct !DILexicalBlock(scope: !3541, file: !3, line: 847, column: 6)
!3554 = !DILocation(line: 99, column: 79, scope: !2565, inlinedAt: !3555)
!3555 = distinct !DILocation(line: 240, column: 2, scope: !3463, inlinedAt: !3550)
!3556 = !DILocation(line: 99, column: 89, scope: !2565, inlinedAt: !3555)
!3557 = !DILocation(line: 238, column: 22, scope: !3463, inlinedAt: !3550)
!3558 = !DILocation(line: 352, column: 51, scope: !2477, inlinedAt: !3559)
!3559 = distinct !DILocation(line: 831, column: 3, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3561, file: !3, line: 805, column: 30)
!3561 = distinct !DILexicalBlock(scope: !3541, file: !3, line: 805, column: 6)
!3562 = !DILocation(line: 392, column: 53, scope: !2485, inlinedAt: !3563)
!3563 = distinct !DILocation(line: 829, column: 3, scope: !3560)
!3564 = !DILocation(line: 352, column: 51, scope: !2477, inlinedAt: !3565)
!3565 = distinct !DILocation(line: 818, column: 3, scope: !3560)
!3566 = !DILocation(line: 392, column: 53, scope: !2485, inlinedAt: !3567)
!3567 = distinct !DILocation(line: 814, column: 3, scope: !3560)
!3568 = !DILocation(line: 392, column: 53, scope: !2485, inlinedAt: !3569)
!3569 = distinct !DILocation(line: 791, column: 3, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3571, file: !3, line: 781, column: 57)
!3571 = distinct !DILexicalBlock(scope: !3541, file: !3, line: 781, column: 6)
!3572 = !DILocation(line: 392, column: 53, scope: !2485, inlinedAt: !3573)
!3573 = distinct !DILocation(line: 787, column: 4, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3575, file: !3, line: 785, column: 59)
!3575 = distinct !DILexicalBlock(scope: !3570, file: !3, line: 783, column: 7)
!3576 = !DILocation(line: 93, column: 55, scope: !3458, inlinedAt: !3577)
!3577 = distinct !DILocation(line: 241, column: 2, scope: !3463, inlinedAt: !3578)
!3578 = distinct !DILocation(line: 786, column: 4, scope: !3574)
!3579 = !DILocation(line: 99, column: 79, scope: !2565, inlinedAt: !3580)
!3580 = distinct !DILocation(line: 240, column: 2, scope: !3463, inlinedAt: !3578)
!3581 = !DILocation(line: 99, column: 89, scope: !2565, inlinedAt: !3580)
!3582 = !DILocation(line: 238, column: 22, scope: !3463, inlinedAt: !3578)
!3583 = !DILocation(line: 327, column: 67, scope: !2160, inlinedAt: !3584)
!3584 = distinct !DILocation(line: 782, column: 3, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3586, file: !3, line: 782, column: 3)
!3586 = distinct !DILexicalBlock(scope: !3587, file: !3, line: 782, column: 3)
!3587 = distinct !DILexicalBlock(scope: !3570, file: !3, line: 782, column: 3)
!3588 = !DILocation(line: 377, column: 55, scope: !2291, inlinedAt: !3589)
!3589 = distinct !DILocation(line: 770, column: 4, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3591, file: !3, line: 759, column: 12)
!3591 = distinct !DILexicalBlock(scope: !3592, file: !3, line: 759, column: 3)
!3592 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 759, column: 3)
!3593 = distinct !DILexicalBlock(scope: !3594, file: !3, line: 738, column: 54)
!3594 = distinct !DILexicalBlock(scope: !3541, file: !3, line: 737, column: 6)
!3595 = !DILocation(line: 402, column: 57, scope: !2282, inlinedAt: !3596)
!3596 = distinct !DILocation(line: 766, column: 4, scope: !3590)
!3597 = !DILocation(line: 352, column: 51, scope: !2477, inlinedAt: !3598)
!3598 = distinct !DILocation(line: 754, column: 4, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3600, file: !3, line: 749, column: 28)
!3600 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 749, column: 7)
!3601 = !DILocation(line: 392, column: 53, scope: !2485, inlinedAt: !3602)
!3602 = distinct !DILocation(line: 750, column: 4, scope: !3599)
!3603 = !DILocation(line: 15, column: 9, scope: !2489, inlinedAt: !3604)
!3604 = distinct !DILocation(line: 739, column: 3, scope: !3593)
!3605 = !DILocation(line: 15, column: 9, scope: !2497, inlinedAt: !3604)
!3606 = !DILocation(line: 15, column: 9, scope: !2500, inlinedAt: !3604)
!3607 = !DILocalVariable(name: "dev", arg: 1, scope: !3541, file: !3, line: 702, type: !6)
!3608 = !DILocation(line: 702, column: 38, scope: !3541)
!3609 = !DILocalVariable(name: "rpmflags", arg: 2, scope: !3541, file: !3, line: 702, type: !59)
!3610 = !DILocation(line: 702, column: 47, scope: !3541)
!3611 = !DILocalVariable(name: "callback", scope: !3541, file: !3, line: 705, type: !1563)
!3612 = !DILocation(line: 705, column: 8, scope: !3541)
!3613 = !DILocalVariable(name: "parent", scope: !3541, file: !3, line: 706, type: !6)
!3614 = !DILocation(line: 706, column: 17, scope: !3541)
!3615 = !DILocalVariable(name: "retval", scope: !3541, file: !3, line: 707, type: !59)
!3616 = !DILocation(line: 707, column: 6, scope: !3541)
!3617 = !DILocation(line: 709, column: 27, scope: !3541)
!3618 = !DILocation(line: 709, column: 32, scope: !3541)
!3619 = !DILocation(line: 709, column: 2, scope: !3541)
!3620 = !DILabel(scope: !3541, name: "repeat", file: !3, line: 711)
!3621 = !DILocation(line: 711, column: 2, scope: !3541)
!3622 = !DILocation(line: 712, column: 6, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3541, file: !3, line: 712, column: 6)
!3624 = !DILocation(line: 712, column: 11, scope: !3623)
!3625 = !DILocation(line: 712, column: 17, scope: !3623)
!3626 = !DILocation(line: 712, column: 6, scope: !3541)
!3627 = !DILocation(line: 713, column: 10, scope: !3623)
!3628 = !DILocation(line: 713, column: 3, scope: !3623)
!3629 = !DILocation(line: 714, column: 11, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 714, column: 11)
!3631 = !DILocation(line: 714, column: 16, scope: !3630)
!3632 = !DILocation(line: 714, column: 22, scope: !3630)
!3633 = !DILocation(line: 714, column: 36, scope: !3630)
!3634 = !DILocation(line: 714, column: 41, scope: !3630)
!3635 = !DILocation(line: 714, column: 44, scope: !3630)
!3636 = !DILocation(line: 714, column: 49, scope: !3630)
!3637 = !DILocation(line: 714, column: 55, scope: !3630)
!3638 = !DILocation(line: 715, column: 6, scope: !3630)
!3639 = !DILocation(line: 715, column: 9, scope: !3630)
!3640 = !DILocation(line: 715, column: 14, scope: !3630)
!3641 = !DILocation(line: 715, column: 20, scope: !3630)
!3642 = !DILocation(line: 715, column: 35, scope: !3630)
!3643 = !DILocation(line: 714, column: 11, scope: !3623)
!3644 = !DILocation(line: 716, column: 10, scope: !3630)
!3645 = !DILocation(line: 716, column: 3, scope: !3630)
!3646 = !DILocation(line: 717, column: 11, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3630, file: !3, line: 717, column: 11)
!3648 = !DILocation(line: 717, column: 16, scope: !3647)
!3649 = !DILocation(line: 717, column: 22, scope: !3647)
!3650 = !DILocation(line: 717, column: 36, scope: !3647)
!3651 = !DILocation(line: 717, column: 11, scope: !3630)
!3652 = !DILocation(line: 718, column: 10, scope: !3647)
!3653 = !DILocation(line: 718, column: 3, scope: !3647)
!3654 = !DILocation(line: 719, column: 6, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3541, file: !3, line: 719, column: 6)
!3656 = !DILocation(line: 719, column: 6, scope: !3541)
!3657 = !DILocation(line: 720, column: 3, scope: !3655)
!3658 = !DILocation(line: 728, column: 2, scope: !3541)
!3659 = !DILocation(line: 728, column: 7, scope: !3541)
!3660 = !DILocation(line: 728, column: 13, scope: !3541)
!3661 = !DILocation(line: 728, column: 21, scope: !3541)
!3662 = !DILocation(line: 729, column: 7, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3541, file: !3, line: 729, column: 6)
!3664 = !DILocation(line: 729, column: 12, scope: !3663)
!3665 = !DILocation(line: 729, column: 18, scope: !3663)
!3666 = !DILocation(line: 729, column: 6, scope: !3541)
!3667 = !DILocation(line: 730, column: 31, scope: !3663)
!3668 = !DILocation(line: 730, column: 3, scope: !3663)
!3669 = !DILocation(line: 732, column: 6, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3541, file: !3, line: 732, column: 6)
!3671 = !DILocation(line: 732, column: 11, scope: !3670)
!3672 = !DILocation(line: 732, column: 17, scope: !3670)
!3673 = !DILocation(line: 732, column: 32, scope: !3670)
!3674 = !DILocation(line: 732, column: 6, scope: !3541)
!3675 = !DILocation(line: 733, column: 10, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3670, file: !3, line: 732, column: 47)
!3677 = !DILocation(line: 734, column: 3, scope: !3676)
!3678 = !DILocation(line: 737, column: 6, scope: !3594)
!3679 = !DILocation(line: 737, column: 11, scope: !3594)
!3680 = !DILocation(line: 737, column: 17, scope: !3594)
!3681 = !DILocation(line: 737, column: 32, scope: !3594)
!3682 = !DILocation(line: 738, column: 6, scope: !3594)
!3683 = !DILocation(line: 738, column: 9, scope: !3594)
!3684 = !DILocation(line: 738, column: 14, scope: !3594)
!3685 = !DILocation(line: 738, column: 20, scope: !3594)
!3686 = !DILocation(line: 738, column: 35, scope: !3594)
!3687 = !DILocation(line: 737, column: 6, scope: !3541)
!3688 = !DILocalVariable(name: "wait", scope: !3593, file: !3, line: 739, type: !2700)
!3689 = !DILocation(line: 739, column: 3, scope: !3593)
!3690 = !DILocation(line: 741, column: 7, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 741, column: 7)
!3692 = !DILocation(line: 741, column: 16, scope: !3691)
!3693 = !DILocation(line: 741, column: 7, scope: !3593)
!3694 = !DILocation(line: 742, column: 8, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3696, file: !3, line: 742, column: 8)
!3696 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 741, column: 44)
!3697 = !DILocation(line: 742, column: 13, scope: !3695)
!3698 = !DILocation(line: 742, column: 19, scope: !3695)
!3699 = !DILocation(line: 742, column: 34, scope: !3695)
!3700 = !DILocation(line: 742, column: 8, scope: !3696)
!3701 = !DILocation(line: 743, column: 5, scope: !3695)
!3702 = !DILocation(line: 743, column: 10, scope: !3695)
!3703 = !DILocation(line: 743, column: 16, scope: !3695)
!3704 = !DILocation(line: 743, column: 32, scope: !3695)
!3705 = !DILocation(line: 745, column: 12, scope: !3695)
!3706 = !DILocation(line: 746, column: 4, scope: !3696)
!3707 = !DILocation(line: 749, column: 7, scope: !3600)
!3708 = !DILocation(line: 749, column: 12, scope: !3600)
!3709 = !DILocation(line: 749, column: 18, scope: !3600)
!3710 = !DILocation(line: 749, column: 7, scope: !3593)
!3711 = !DILocation(line: 750, column: 17, scope: !3599)
!3712 = !DILocation(line: 750, column: 22, scope: !3599)
!3713 = !DILocation(line: 750, column: 28, scope: !3599)
!3714 = !DILocation(line: 394, column: 2, scope: !2728, inlinedAt: !3602)
!3715 = !DILocation(line: 394, column: 2, scope: !2731, inlinedAt: !3602)
!3716 = !DILocation(line: 13, column: 2, scope: !2733, inlinedAt: !3717)
!3717 = distinct !DILocation(line: 18, column: 2, scope: !2738, inlinedAt: !3718)
!3718 = distinct !DILocation(line: 752, column: 4, scope: !3599)
!3719 = !DILocation(line: 754, column: 15, scope: !3599)
!3720 = !DILocation(line: 754, column: 20, scope: !3599)
!3721 = !DILocation(line: 754, column: 26, scope: !3599)
!3722 = !DILocation(line: 354, column: 2, scope: !2745, inlinedAt: !3598)
!3723 = !DILocation(line: 354, column: 2, scope: !2748, inlinedAt: !3598)
!3724 = !DILocation(line: 755, column: 4, scope: !3599)
!3725 = !DILocation(line: 759, column: 3, scope: !3593)
!3726 = !DILocation(line: 760, column: 21, scope: !3590)
!3727 = !DILocation(line: 760, column: 26, scope: !3590)
!3728 = !DILocation(line: 760, column: 32, scope: !3590)
!3729 = !DILocation(line: 760, column: 4, scope: !3590)
!3730 = !DILocation(line: 762, column: 8, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !3590, file: !3, line: 762, column: 8)
!3732 = !DILocation(line: 762, column: 13, scope: !3731)
!3733 = !DILocation(line: 762, column: 19, scope: !3731)
!3734 = !DILocation(line: 762, column: 34, scope: !3731)
!3735 = !DILocation(line: 763, column: 8, scope: !3731)
!3736 = !DILocation(line: 763, column: 11, scope: !3731)
!3737 = !DILocation(line: 763, column: 16, scope: !3731)
!3738 = !DILocation(line: 763, column: 22, scope: !3731)
!3739 = !DILocation(line: 763, column: 37, scope: !3731)
!3740 = !DILocation(line: 762, column: 8, scope: !3590)
!3741 = !DILocation(line: 764, column: 5, scope: !3731)
!3742 = !DILocation(line: 766, column: 21, scope: !3590)
!3743 = !DILocation(line: 766, column: 26, scope: !3590)
!3744 = !DILocation(line: 766, column: 32, scope: !3590)
!3745 = !DILocation(line: 404, column: 2, scope: !2326, inlinedAt: !3596)
!3746 = !DILocation(line: 404, column: 2, scope: !2329, inlinedAt: !3596)
!3747 = !DILocation(line: 404, column: 2, scope: !2332, inlinedAt: !3596)
!3748 = !DILocation(line: 768, column: 4, scope: !3590)
!3749 = !DILocation(line: 770, column: 19, scope: !3590)
!3750 = !DILocation(line: 770, column: 24, scope: !3590)
!3751 = !DILocation(line: 770, column: 30, scope: !3590)
!3752 = !DILocation(line: 379, column: 2, scope: !2306, inlinedAt: !3589)
!3753 = !DILocation(line: 379, column: 2, scope: !2309, inlinedAt: !3589)
!3754 = !DILocation(line: 379, column: 2, scope: !2312, inlinedAt: !3589)
!3755 = !DILocation(line: 759, column: 3, scope: !3591)
!3756 = distinct !{!3756, !3757, !3758}
!3757 = !DILocation(line: 759, column: 3, scope: !3592)
!3758 = !DILocation(line: 771, column: 3, scope: !3592)
!3759 = !DILocation(line: 772, column: 16, scope: !3593)
!3760 = !DILocation(line: 772, column: 21, scope: !3593)
!3761 = !DILocation(line: 772, column: 27, scope: !3593)
!3762 = !DILocation(line: 772, column: 3, scope: !3593)
!3763 = !DILocation(line: 773, column: 3, scope: !3593)
!3764 = !DILocation(line: 781, column: 6, scope: !3571)
!3765 = !DILocation(line: 781, column: 11, scope: !3571)
!3766 = !DILocation(line: 781, column: 17, scope: !3571)
!3767 = !DILocation(line: 781, column: 30, scope: !3571)
!3768 = !DILocation(line: 781, column: 34, scope: !3571)
!3769 = !DILocation(line: 781, column: 41, scope: !3571)
!3770 = !DILocation(line: 781, column: 44, scope: !3571)
!3771 = !DILocation(line: 781, column: 49, scope: !3571)
!3772 = !DILocation(line: 781, column: 6, scope: !3541)
!3773 = !DILocation(line: 782, column: 3, scope: !3570)
!3774 = !DILocation(line: 782, column: 3, scope: !3587)
!3775 = !DILocation(line: 782, column: 3, scope: !3586)
!3776 = !{i32 -2143529530}
!3777 = !DILocation(line: 782, column: 3, scope: !3585)
!3778 = !DILocation(line: 329, column: 10, scope: !2160, inlinedAt: !3584)
!3779 = !DILocation(line: 329, column: 16, scope: !2160, inlinedAt: !3584)
!3780 = !DILocation(line: 783, column: 7, scope: !3575)
!3781 = !DILocation(line: 783, column: 12, scope: !3575)
!3782 = !DILocation(line: 783, column: 20, scope: !3575)
!3783 = !DILocation(line: 783, column: 26, scope: !3575)
!3784 = !DILocation(line: 783, column: 40, scope: !3575)
!3785 = !DILocation(line: 784, column: 7, scope: !3575)
!3786 = !DILocation(line: 784, column: 10, scope: !3575)
!3787 = !DILocation(line: 784, column: 15, scope: !3575)
!3788 = !DILocation(line: 784, column: 23, scope: !3575)
!3789 = !DILocation(line: 784, column: 29, scope: !3575)
!3790 = !DILocation(line: 785, column: 7, scope: !3575)
!3791 = !DILocation(line: 785, column: 10, scope: !3575)
!3792 = !DILocation(line: 785, column: 15, scope: !3575)
!3793 = !DILocation(line: 785, column: 23, scope: !3575)
!3794 = !DILocation(line: 785, column: 29, scope: !3575)
!3795 = !DILocation(line: 785, column: 44, scope: !3575)
!3796 = !DILocation(line: 783, column: 7, scope: !3570)
!3797 = !DILocation(line: 786, column: 16, scope: !3574)
!3798 = !DILocation(line: 786, column: 21, scope: !3574)
!3799 = !DILocation(line: 786, column: 29, scope: !3574)
!3800 = !DILocation(line: 786, column: 35, scope: !3574)
!3801 = !DILocation(line: 240, column: 31, scope: !3463, inlinedAt: !3578)
!3802 = !DILocation(line: 101, column: 20, scope: !2565, inlinedAt: !3580)
!3803 = !DILocation(line: 101, column: 23, scope: !2565, inlinedAt: !3580)
!3804 = !DILocation(line: 101, column: 2, scope: !2565, inlinedAt: !3580)
!3805 = !DILocation(line: 102, column: 2, scope: !2565, inlinedAt: !3580)
!3806 = !DILocation(line: 241, column: 18, scope: !3463, inlinedAt: !3578)
!3807 = !DILocation(line: 96, column: 16, scope: !3458, inlinedAt: !3577)
!3808 = !DILocation(line: 96, column: 19, scope: !3458, inlinedAt: !3577)
!3809 = !DILocation(line: 95, column: 2, scope: !3458, inlinedAt: !3577)
!3810 = !DILocation(line: 787, column: 17, scope: !3574)
!3811 = !DILocation(line: 787, column: 22, scope: !3574)
!3812 = !DILocation(line: 787, column: 30, scope: !3574)
!3813 = !DILocation(line: 787, column: 36, scope: !3574)
!3814 = !DILocation(line: 394, column: 2, scope: !2728, inlinedAt: !3573)
!3815 = !DILocation(line: 394, column: 2, scope: !2731, inlinedAt: !3573)
!3816 = !DILocation(line: 788, column: 11, scope: !3574)
!3817 = !DILocation(line: 789, column: 4, scope: !3574)
!3818 = !DILocation(line: 791, column: 16, scope: !3570)
!3819 = !DILocation(line: 791, column: 21, scope: !3570)
!3820 = !DILocation(line: 791, column: 29, scope: !3570)
!3821 = !DILocation(line: 791, column: 35, scope: !3570)
!3822 = !DILocation(line: 394, column: 2, scope: !2728, inlinedAt: !3569)
!3823 = !DILocation(line: 394, column: 2, scope: !2731, inlinedAt: !3569)
!3824 = !DILocation(line: 792, column: 2, scope: !3570)
!3825 = !DILocation(line: 795, column: 6, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3541, file: !3, line: 795, column: 6)
!3827 = !DILocation(line: 795, column: 15, scope: !3826)
!3828 = !DILocation(line: 795, column: 6, scope: !3541)
!3829 = !DILocation(line: 796, column: 3, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3826, file: !3, line: 795, column: 28)
!3831 = !DILocation(line: 796, column: 8, scope: !3830)
!3832 = !DILocation(line: 796, column: 14, scope: !3830)
!3833 = !DILocation(line: 796, column: 22, scope: !3830)
!3834 = !DILocation(line: 797, column: 8, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3830, file: !3, line: 797, column: 7)
!3836 = !DILocation(line: 797, column: 13, scope: !3835)
!3837 = !DILocation(line: 797, column: 19, scope: !3835)
!3838 = !DILocation(line: 797, column: 7, scope: !3830)
!3839 = !DILocation(line: 798, column: 4, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3835, file: !3, line: 797, column: 36)
!3841 = !DILocation(line: 798, column: 9, scope: !3840)
!3842 = !DILocation(line: 798, column: 15, scope: !3840)
!3843 = !DILocation(line: 798, column: 31, scope: !3840)
!3844 = !DILocation(line: 799, column: 15, scope: !3840)
!3845 = !DILocation(line: 799, column: 23, scope: !3840)
!3846 = !DILocation(line: 799, column: 28, scope: !3840)
!3847 = !DILocation(line: 799, column: 34, scope: !3840)
!3848 = !DILocation(line: 799, column: 4, scope: !3840)
!3849 = !DILocation(line: 800, column: 3, scope: !3840)
!3850 = !DILocation(line: 801, column: 10, scope: !3830)
!3851 = !DILocation(line: 802, column: 3, scope: !3830)
!3852 = !DILocation(line: 805, column: 7, scope: !3561)
!3853 = !DILocation(line: 805, column: 14, scope: !3561)
!3854 = !DILocation(line: 805, column: 17, scope: !3561)
!3855 = !DILocation(line: 805, column: 22, scope: !3561)
!3856 = !DILocation(line: 805, column: 6, scope: !3541)
!3857 = !DILocation(line: 811, column: 12, scope: !3560)
!3858 = !DILocation(line: 811, column: 17, scope: !3560)
!3859 = !DILocation(line: 811, column: 10, scope: !3560)
!3860 = !DILocation(line: 812, column: 7, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3560, file: !3, line: 812, column: 7)
!3862 = !DILocation(line: 812, column: 12, scope: !3861)
!3863 = !DILocation(line: 812, column: 18, scope: !3861)
!3864 = !DILocation(line: 812, column: 7, scope: !3560)
!3865 = !DILocation(line: 813, column: 4, scope: !3861)
!3866 = !DILocation(line: 814, column: 16, scope: !3560)
!3867 = !DILocation(line: 814, column: 21, scope: !3560)
!3868 = !DILocation(line: 814, column: 27, scope: !3560)
!3869 = !DILocation(line: 394, column: 2, scope: !2728, inlinedAt: !3567)
!3870 = !DILocation(line: 394, column: 2, scope: !2731, inlinedAt: !3567)
!3871 = !DILocation(line: 816, column: 27, scope: !3560)
!3872 = !DILocation(line: 816, column: 3, scope: !3560)
!3873 = !DILocation(line: 818, column: 14, scope: !3560)
!3874 = !DILocation(line: 818, column: 22, scope: !3560)
!3875 = !DILocation(line: 818, column: 28, scope: !3560)
!3876 = !DILocation(line: 354, column: 2, scope: !2745, inlinedAt: !3565)
!3877 = !DILocation(line: 354, column: 2, scope: !2748, inlinedAt: !3565)
!3878 = !DILocation(line: 823, column: 8, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3560, file: !3, line: 823, column: 7)
!3880 = !DILocation(line: 823, column: 16, scope: !3879)
!3881 = !DILocation(line: 823, column: 22, scope: !3879)
!3882 = !DILocation(line: 824, column: 7, scope: !3879)
!3883 = !DILocation(line: 824, column: 11, scope: !3879)
!3884 = !DILocation(line: 824, column: 19, scope: !3879)
!3885 = !DILocation(line: 824, column: 25, scope: !3879)
!3886 = !DILocation(line: 823, column: 7, scope: !3560)
!3887 = !DILocation(line: 825, column: 15, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3879, file: !3, line: 824, column: 42)
!3889 = !DILocation(line: 825, column: 4, scope: !3888)
!3890 = !DILocation(line: 826, column: 8, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3888, file: !3, line: 826, column: 8)
!3892 = !DILocation(line: 826, column: 16, scope: !3891)
!3893 = !DILocation(line: 826, column: 22, scope: !3891)
!3894 = !DILocation(line: 826, column: 37, scope: !3891)
!3895 = !DILocation(line: 826, column: 8, scope: !3888)
!3896 = !DILocation(line: 827, column: 12, scope: !3891)
!3897 = !DILocation(line: 827, column: 5, scope: !3891)
!3898 = !DILocation(line: 828, column: 3, scope: !3888)
!3899 = !DILocation(line: 829, column: 16, scope: !3560)
!3900 = !DILocation(line: 829, column: 24, scope: !3560)
!3901 = !DILocation(line: 829, column: 30, scope: !3560)
!3902 = !DILocation(line: 394, column: 2, scope: !2728, inlinedAt: !3563)
!3903 = !DILocation(line: 394, column: 2, scope: !2731, inlinedAt: !3563)
!3904 = !DILocation(line: 831, column: 14, scope: !3560)
!3905 = !DILocation(line: 831, column: 19, scope: !3560)
!3906 = !DILocation(line: 831, column: 25, scope: !3560)
!3907 = !DILocation(line: 354, column: 2, scope: !2745, inlinedAt: !3559)
!3908 = !DILocation(line: 354, column: 2, scope: !2748, inlinedAt: !3559)
!3909 = !DILocation(line: 832, column: 7, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3560, file: !3, line: 832, column: 7)
!3911 = !DILocation(line: 832, column: 7, scope: !3560)
!3912 = !DILocation(line: 833, column: 4, scope: !3910)
!3913 = !DILocation(line: 834, column: 3, scope: !3560)
!3914 = !DILabel(scope: !3541, name: "skip_parent", file: !3, line: 836)
!3915 = !DILocation(line: 836, column: 2, scope: !3541)
!3916 = !DILocation(line: 838, column: 6, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3541, file: !3, line: 838, column: 6)
!3918 = !DILocation(line: 838, column: 11, scope: !3917)
!3919 = !DILocation(line: 838, column: 17, scope: !3917)
!3920 = !DILocation(line: 838, column: 6, scope: !3541)
!3921 = !DILocation(line: 839, column: 3, scope: !3917)
!3922 = !DILocation(line: 841, column: 26, scope: !3541)
!3923 = !DILocation(line: 841, column: 2, scope: !3541)
!3924 = !DILocation(line: 843, column: 13, scope: !3541)
!3925 = !DILocation(line: 843, column: 11, scope: !3541)
!3926 = !DILocation(line: 845, column: 32, scope: !3541)
!3927 = !DILocation(line: 845, column: 2, scope: !3541)
!3928 = !DILocation(line: 846, column: 24, scope: !3541)
!3929 = !DILocation(line: 846, column: 34, scope: !3541)
!3930 = !DILocation(line: 846, column: 11, scope: !3541)
!3931 = !DILocation(line: 846, column: 9, scope: !3541)
!3932 = !DILocation(line: 847, column: 6, scope: !3553)
!3933 = !DILocation(line: 847, column: 6, scope: !3541)
!3934 = !DILocation(line: 848, column: 27, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3553, file: !3, line: 847, column: 14)
!3936 = !DILocation(line: 848, column: 3, scope: !3935)
!3937 = !DILocation(line: 849, column: 29, scope: !3935)
!3938 = !DILocation(line: 849, column: 3, scope: !3935)
!3939 = !DILocation(line: 850, column: 32, scope: !3935)
!3940 = !DILocation(line: 850, column: 3, scope: !3935)
!3941 = !DILocation(line: 851, column: 2, scope: !3935)
!3942 = !DILocation(line: 851, column: 9, scope: !3553)
!3943 = !DILabel(scope: !3552, name: "no_callback", file: !3, line: 852)
!3944 = !DILocation(line: 852, column: 2, scope: !3552)
!3945 = !DILocation(line: 853, column: 27, scope: !3552)
!3946 = !DILocation(line: 853, column: 3, scope: !3552)
!3947 = !DILocation(line: 854, column: 29, scope: !3552)
!3948 = !DILocation(line: 854, column: 3, scope: !3552)
!3949 = !DILocation(line: 855, column: 7, scope: !3551)
!3950 = !DILocation(line: 855, column: 7, scope: !3552)
!3951 = !DILocation(line: 856, column: 16, scope: !3551)
!3952 = !DILocation(line: 856, column: 24, scope: !3551)
!3953 = !DILocation(line: 856, column: 30, scope: !3551)
!3954 = !DILocation(line: 240, column: 31, scope: !3463, inlinedAt: !3550)
!3955 = !DILocation(line: 101, column: 20, scope: !2565, inlinedAt: !3555)
!3956 = !DILocation(line: 101, column: 23, scope: !2565, inlinedAt: !3555)
!3957 = !DILocation(line: 101, column: 2, scope: !2565, inlinedAt: !3555)
!3958 = !DILocation(line: 102, column: 2, scope: !2565, inlinedAt: !3555)
!3959 = !DILocation(line: 241, column: 18, scope: !3463, inlinedAt: !3550)
!3960 = !DILocation(line: 96, column: 16, scope: !3458, inlinedAt: !3549)
!3961 = !DILocation(line: 96, column: 19, scope: !3458, inlinedAt: !3549)
!3962 = !DILocation(line: 95, column: 2, scope: !3458, inlinedAt: !3549)
!3963 = !DILocation(line: 856, column: 4, scope: !3551)
!3964 = !DILocation(line: 858, column: 2, scope: !3541)
!3965 = !DILocation(line: 860, column: 6, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3541, file: !3, line: 860, column: 6)
!3967 = !DILocation(line: 860, column: 13, scope: !3966)
!3968 = !DILocation(line: 860, column: 6, scope: !3541)
!3969 = !DILocation(line: 861, column: 12, scope: !3966)
!3970 = !DILocation(line: 861, column: 3, scope: !3966)
!3971 = !DILocation(line: 860, column: 16, scope: !3966)
!3972 = !DILabel(scope: !3541, name: "out", file: !3, line: 863)
!3973 = !DILocation(line: 863, column: 2, scope: !3541)
!3974 = !DILocation(line: 864, column: 6, scope: !3545)
!3975 = !DILocation(line: 864, column: 13, scope: !3545)
!3976 = !DILocation(line: 864, column: 17, scope: !3545)
!3977 = !DILocation(line: 864, column: 22, scope: !3545)
!3978 = !DILocation(line: 864, column: 28, scope: !3545)
!3979 = !DILocation(line: 864, column: 6, scope: !3541)
!3980 = !DILocation(line: 865, column: 20, scope: !3544)
!3981 = !DILocation(line: 865, column: 25, scope: !3544)
!3982 = !DILocation(line: 865, column: 31, scope: !3544)
!3983 = !DILocation(line: 404, column: 2, scope: !2326, inlinedAt: !3547)
!3984 = !DILocation(line: 404, column: 2, scope: !2329, inlinedAt: !3547)
!3985 = !DILocation(line: 404, column: 2, scope: !2332, inlinedAt: !3547)
!3986 = !DILocation(line: 867, column: 18, scope: !3544)
!3987 = !DILocation(line: 867, column: 3, scope: !3544)
!3988 = !DILocation(line: 869, column: 18, scope: !3544)
!3989 = !DILocation(line: 869, column: 23, scope: !3544)
!3990 = !DILocation(line: 869, column: 29, scope: !3544)
!3991 = !DILocation(line: 379, column: 2, scope: !2306, inlinedAt: !3543)
!3992 = !DILocation(line: 379, column: 2, scope: !2309, inlinedAt: !3543)
!3993 = !DILocation(line: 379, column: 2, scope: !2312, inlinedAt: !3543)
!3994 = !DILocation(line: 870, column: 2, scope: !3544)
!3995 = !DILocation(line: 872, column: 31, scope: !3541)
!3996 = !DILocation(line: 872, column: 36, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3541, file: !3, line: 872, column: 36)
!3998 = !DILabel(scope: !3997, name: "__here", file: !3, line: 872)
!3999 = !DILocation(line: 872, column: 47, scope: !3541)
!4000 = !DILocation(line: 872, column: 2, scope: !3541)
!4001 = !DILocation(line: 874, column: 9, scope: !3541)
!4002 = !DILocation(line: 874, column: 2, scope: !3541)
!4003 = distinct !DISubprogram(name: "pm_runtime_get_if_active", scope: !3, file: !3, line: 1106, type: !4004, scopeLine: 1107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!4004 = !DISubroutineType(types: !4005)
!4005 = !{!59, !6, !915}
!4006 = !DILocation(line: 200, column: 63, scope: !2510, inlinedAt: !4007)
!4007 = distinct !DILocation(line: 1093, column: 12, scope: !2517, inlinedAt: !4008)
!4008 = distinct !DILocation(line: 1113, column: 9, scope: !2522, inlinedAt: !4009)
!4009 = distinct !DILocation(line: 1129, column: 9, scope: !4010, inlinedAt: !4011)
!4010 = distinct !DISubprogram(name: "arch_atomic_inc_not_zero", scope: !2518, file: !2518, line: 1127, type: !3127, scopeLine: 1128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!4011 = distinct !DILocation(line: 799, column: 9, scope: !4012, inlinedAt: !4013)
!4012 = distinct !DISubprogram(name: "atomic_inc_not_zero", scope: !2527, file: !2527, line: 796, type: !3127, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!4013 = distinct !DILocation(line: 1120, column: 12, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !4015, file: !3, line: 1119, column: 9)
!4015 = distinct !DILexicalBlock(scope: !4016, file: !3, line: 1116, column: 13)
!4016 = distinct !DILexicalBlock(scope: !4017, file: !3, line: 1114, column: 13)
!4017 = distinct !DILexicalBlock(scope: !4003, file: !3, line: 1112, column: 6)
!4018 = !DILocation(line: 200, column: 71, scope: !2510, inlinedAt: !4007)
!4019 = !DILocation(line: 200, column: 80, scope: !2510, inlinedAt: !4007)
!4020 = !DILocation(line: 202, column: 9, scope: !2536, inlinedAt: !4007)
!4021 = !DILocation(line: 23, column: 61, scope: !2543, inlinedAt: !4022)
!4022 = distinct !DILocation(line: 1088, column: 10, scope: !2517, inlinedAt: !4008)
!4023 = !DILocation(line: 1086, column: 40, scope: !2517, inlinedAt: !4008)
!4024 = !DILocation(line: 1086, column: 47, scope: !2517, inlinedAt: !4008)
!4025 = !DILocation(line: 1086, column: 54, scope: !2517, inlinedAt: !4008)
!4026 = !DILocation(line: 1088, column: 6, scope: !2517, inlinedAt: !4008)
!4027 = !DILocation(line: 1111, column: 34, scope: !2522, inlinedAt: !4009)
!4028 = !DILocation(line: 1111, column: 41, scope: !2522, inlinedAt: !4009)
!4029 = !DILocation(line: 1111, column: 48, scope: !2522, inlinedAt: !4009)
!4030 = !DILocalVariable(name: "v", arg: 1, scope: !4010, file: !2518, line: 1127, type: !2514)
!4031 = !DILocation(line: 1127, column: 36, scope: !4010, inlinedAt: !4011)
!4032 = !DILocation(line: 99, column: 79, scope: !2565, inlinedAt: !4033)
!4033 = distinct !DILocation(line: 798, column: 2, scope: !4012, inlinedAt: !4013)
!4034 = !DILocation(line: 99, column: 89, scope: !2565, inlinedAt: !4033)
!4035 = !DILocalVariable(name: "v", arg: 1, scope: !4012, file: !2527, line: 796, type: !2514)
!4036 = !DILocation(line: 796, column: 31, scope: !4012, inlinedAt: !4013)
!4037 = !DILocation(line: 93, column: 55, scope: !3458, inlinedAt: !4038)
!4038 = distinct !DILocation(line: 241, column: 2, scope: !3463, inlinedAt: !4039)
!4039 = distinct !DILocation(line: 1118, column: 3, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !4015, file: !3, line: 1116, column: 30)
!4041 = !DILocation(line: 99, column: 79, scope: !2565, inlinedAt: !4042)
!4042 = distinct !DILocation(line: 240, column: 2, scope: !3463, inlinedAt: !4039)
!4043 = !DILocation(line: 99, column: 89, scope: !2565, inlinedAt: !4042)
!4044 = !DILocation(line: 238, column: 22, scope: !3463, inlinedAt: !4039)
!4045 = !DILocation(line: 407, column: 64, scope: !2150, inlinedAt: !4046)
!4046 = distinct !DILocation(line: 1123, column: 2, scope: !4003)
!4047 = !DILocation(line: 407, column: 84, scope: !2150, inlinedAt: !4046)
!4048 = !DILocation(line: 327, column: 67, scope: !2160, inlinedAt: !4049)
!4049 = distinct !DILocation(line: 1111, column: 2, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4051, file: !3, line: 1111, column: 2)
!4051 = distinct !DILexicalBlock(scope: !4052, file: !3, line: 1111, column: 2)
!4052 = distinct !DILexicalBlock(scope: !4053, file: !3, line: 1111, column: 2)
!4053 = distinct !DILexicalBlock(scope: !4054, file: !3, line: 1111, column: 2)
!4054 = distinct !DILexicalBlock(scope: !4003, file: !3, line: 1111, column: 2)
!4055 = !DILocalVariable(name: "dev", arg: 1, scope: !4003, file: !3, line: 1106, type: !6)
!4056 = !DILocation(line: 1106, column: 45, scope: !4003)
!4057 = !DILocalVariable(name: "ign_usage_count", arg: 2, scope: !4003, file: !3, line: 1106, type: !915)
!4058 = !DILocation(line: 1106, column: 55, scope: !4003)
!4059 = !DILocalVariable(name: "flags", scope: !4003, file: !3, line: 1108, type: !125)
!4060 = !DILocation(line: 1108, column: 16, scope: !4003)
!4061 = !DILocalVariable(name: "retval", scope: !4003, file: !3, line: 1109, type: !59)
!4062 = !DILocation(line: 1109, column: 6, scope: !4003)
!4063 = !DILocation(line: 1111, column: 2, scope: !4003)
!4064 = !DILocation(line: 1111, column: 2, scope: !4054)
!4065 = !DILocalVariable(name: "__dummy", scope: !4066, file: !3, line: 1111, type: !125)
!4066 = distinct !DILexicalBlock(scope: !4053, file: !3, line: 1111, column: 2)
!4067 = !DILocation(line: 1111, column: 2, scope: !4066)
!4068 = !DILocalVariable(name: "__dummy2", scope: !4066, file: !3, line: 1111, type: !125)
!4069 = !DILocation(line: 1111, column: 2, scope: !4053)
!4070 = !DILocation(line: 1111, column: 2, scope: !4052)
!4071 = !DILocation(line: 1111, column: 2, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4052, file: !3, line: 1111, column: 2)
!4073 = !DILocalVariable(name: "__dummy", scope: !4074, file: !3, line: 1111, type: !125)
!4074 = distinct !DILexicalBlock(scope: !4075, file: !3, line: 1111, column: 2)
!4075 = distinct !DILexicalBlock(scope: !4072, file: !3, line: 1111, column: 2)
!4076 = !DILocation(line: 1111, column: 2, scope: !4074)
!4077 = !DILocalVariable(name: "__dummy2", scope: !4074, file: !3, line: 1111, type: !125)
!4078 = !DILocation(line: 1111, column: 2, scope: !4075)
!4079 = !DILocation(line: 1111, column: 2, scope: !4051)
!4080 = !{i32 -2143518710}
!4081 = !DILocation(line: 1111, column: 2, scope: !4050)
!4082 = !DILocation(line: 329, column: 10, scope: !2160, inlinedAt: !4049)
!4083 = !DILocation(line: 329, column: 16, scope: !2160, inlinedAt: !4049)
!4084 = !DILocation(line: 1112, column: 6, scope: !4017)
!4085 = !DILocation(line: 1112, column: 11, scope: !4017)
!4086 = !DILocation(line: 1112, column: 17, scope: !4017)
!4087 = !DILocation(line: 1112, column: 31, scope: !4017)
!4088 = !DILocation(line: 1112, column: 6, scope: !4003)
!4089 = !DILocation(line: 1113, column: 10, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4017, file: !3, line: 1112, column: 36)
!4091 = !DILocation(line: 1114, column: 2, scope: !4090)
!4092 = !DILocation(line: 1114, column: 13, scope: !4016)
!4093 = !DILocation(line: 1114, column: 18, scope: !4016)
!4094 = !DILocation(line: 1114, column: 24, scope: !4016)
!4095 = !DILocation(line: 1114, column: 39, scope: !4016)
!4096 = !DILocation(line: 1114, column: 13, scope: !4017)
!4097 = !DILocation(line: 1115, column: 10, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4016, file: !3, line: 1114, column: 54)
!4099 = !DILocation(line: 1116, column: 2, scope: !4098)
!4100 = !DILocation(line: 1116, column: 13, scope: !4015)
!4101 = !DILocation(line: 1116, column: 13, scope: !4016)
!4102 = !DILocation(line: 1117, column: 10, scope: !4040)
!4103 = !DILocation(line: 1118, column: 15, scope: !4040)
!4104 = !DILocation(line: 1118, column: 20, scope: !4040)
!4105 = !DILocation(line: 1118, column: 26, scope: !4040)
!4106 = !DILocation(line: 240, column: 31, scope: !3463, inlinedAt: !4039)
!4107 = !DILocation(line: 101, column: 20, scope: !2565, inlinedAt: !4042)
!4108 = !DILocation(line: 101, column: 23, scope: !2565, inlinedAt: !4042)
!4109 = !DILocation(line: 101, column: 2, scope: !2565, inlinedAt: !4042)
!4110 = !DILocation(line: 102, column: 2, scope: !2565, inlinedAt: !4042)
!4111 = !DILocation(line: 241, column: 18, scope: !3463, inlinedAt: !4039)
!4112 = !DILocation(line: 96, column: 16, scope: !3458, inlinedAt: !4038)
!4113 = !DILocation(line: 96, column: 19, scope: !3458, inlinedAt: !4038)
!4114 = !DILocation(line: 95, column: 2, scope: !3458, inlinedAt: !4038)
!4115 = !DILocation(line: 1119, column: 2, scope: !4040)
!4116 = !DILocation(line: 1120, column: 33, scope: !4014)
!4117 = !DILocation(line: 1120, column: 38, scope: !4014)
!4118 = !DILocation(line: 1120, column: 44, scope: !4014)
!4119 = !DILocation(line: 798, column: 31, scope: !4012, inlinedAt: !4013)
!4120 = !DILocation(line: 101, column: 20, scope: !2565, inlinedAt: !4033)
!4121 = !DILocation(line: 101, column: 23, scope: !2565, inlinedAt: !4033)
!4122 = !DILocation(line: 101, column: 2, scope: !2565, inlinedAt: !4033)
!4123 = !DILocation(line: 102, column: 2, scope: !2565, inlinedAt: !4033)
!4124 = !DILocation(line: 799, column: 34, scope: !4012, inlinedAt: !4013)
!4125 = !DILocation(line: 1129, column: 32, scope: !4010, inlinedAt: !4011)
!4126 = !DILocation(line: 1113, column: 38, scope: !2522, inlinedAt: !4009)
!4127 = !DILocation(line: 1113, column: 41, scope: !2522, inlinedAt: !4009)
!4128 = !DILocation(line: 1113, column: 44, scope: !2522, inlinedAt: !4009)
!4129 = !DILocation(line: 1088, column: 27, scope: !2517, inlinedAt: !4008)
!4130 = !DILocation(line: 29, column: 9, scope: !2543, inlinedAt: !4022)
!4131 = !DILocation(line: 1090, column: 2, scope: !2517, inlinedAt: !4008)
!4132 = !DILocation(line: 1091, column: 7, scope: !2863, inlinedAt: !4008)
!4133 = !DILocation(line: 1091, column: 7, scope: !2864, inlinedAt: !4008)
!4134 = !DILocation(line: 1092, column: 4, scope: !2863, inlinedAt: !4008)
!4135 = !DILocation(line: 1093, column: 36, scope: !2517, inlinedAt: !4008)
!4136 = !DILocation(line: 1093, column: 43, scope: !2517, inlinedAt: !4008)
!4137 = !DILocation(line: 1093, column: 47, scope: !2517, inlinedAt: !4008)
!4138 = !DILocation(line: 1093, column: 45, scope: !2517, inlinedAt: !4008)
!4139 = !DILocation(line: 202, column: 9, scope: !2873, inlinedAt: !4007)
!4140 = !DILocation(line: 202, column: 9, scope: !2510, inlinedAt: !4007)
!4141 = !DILocation(line: 1093, column: 11, scope: !2517, inlinedAt: !4008)
!4142 = !DILocation(line: 1093, column: 2, scope: !2864, inlinedAt: !4008)
!4143 = distinct !{!4143, !4131, !4144}
!4144 = !DILocation(line: 1093, column: 49, scope: !2517, inlinedAt: !4008)
!4145 = !DILocation(line: 1095, column: 9, scope: !2517, inlinedAt: !4008)
!4146 = !DILocation(line: 1113, column: 50, scope: !2522, inlinedAt: !4009)
!4147 = !DILocation(line: 1113, column: 47, scope: !2522, inlinedAt: !4009)
!4148 = !DILocation(line: 1120, column: 12, scope: !4014)
!4149 = !DILocation(line: 1120, column: 10, scope: !4014)
!4150 = !DILocation(line: 1122, column: 26, scope: !4003)
!4151 = !DILocation(line: 1122, column: 2, scope: !4003)
!4152 = !DILocation(line: 1123, column: 26, scope: !4003)
!4153 = !DILocation(line: 1123, column: 31, scope: !4003)
!4154 = !DILocation(line: 1123, column: 37, scope: !4003)
!4155 = !DILocation(line: 1123, column: 43, scope: !4003)
!4156 = !DILocation(line: 409, column: 2, scope: !2215, inlinedAt: !4046)
!4157 = !DILocation(line: 409, column: 2, scope: !2220, inlinedAt: !4046)
!4158 = !DILocation(line: 409, column: 2, scope: !2221, inlinedAt: !4046)
!4159 = !DILocation(line: 409, column: 2, scope: !2228, inlinedAt: !4046)
!4160 = !DILocation(line: 409, column: 2, scope: !2231, inlinedAt: !4046)
!4161 = !DILocation(line: 1125, column: 9, scope: !4003)
!4162 = !DILocation(line: 1125, column: 2, scope: !4003)
!4163 = distinct !DISubprogram(name: "__pm_runtime_set_status", scope: !3, file: !3, line: 1153, type: !2369, scopeLine: 1154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!4164 = !DILocation(line: 402, column: 57, scope: !2282, inlinedAt: !4165)
!4165 = distinct !DILocation(line: 1235, column: 2, scope: !4163)
!4166 = !DILocation(line: 392, column: 53, scope: !2485, inlinedAt: !4167)
!4167 = distinct !DILocation(line: 1221, column: 3, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4169, file: !3, line: 1202, column: 9)
!4169 = distinct !DILexicalBlock(scope: !4163, file: !3, line: 1199, column: 6)
!4170 = !DILocation(line: 93, column: 55, scope: !3458, inlinedAt: !4171)
!4171 = distinct !DILocation(line: 241, column: 2, scope: !3463, inlinedAt: !4172)
!4172 = distinct !DILocation(line: 1218, column: 4, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4174, file: !3, line: 1217, column: 58)
!4174 = distinct !DILexicalBlock(scope: !4175, file: !3, line: 1217, column: 14)
!4175 = distinct !DILexicalBlock(scope: !4168, file: !3, line: 1210, column: 7)
!4176 = !DILocation(line: 99, column: 79, scope: !2565, inlinedAt: !4177)
!4177 = distinct !DILocation(line: 240, column: 2, scope: !3463, inlinedAt: !4172)
!4178 = !DILocation(line: 99, column: 89, scope: !2565, inlinedAt: !4177)
!4179 = !DILocation(line: 238, column: 22, scope: !3463, inlinedAt: !4172)
!4180 = !DILocation(line: 327, column: 67, scope: !2160, inlinedAt: !4181)
!4181 = distinct !DILocation(line: 1203, column: 3, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4183, file: !3, line: 1203, column: 3)
!4183 = distinct !DILexicalBlock(scope: !4184, file: !3, line: 1203, column: 3)
!4184 = distinct !DILexicalBlock(scope: !4168, file: !3, line: 1203, column: 3)
!4185 = !DILocation(line: 200, column: 63, scope: !2510, inlinedAt: !4186)
!4186 = distinct !DILocation(line: 1093, column: 12, scope: !2517, inlinedAt: !4187)
!4187 = distinct !DILocation(line: 1113, column: 9, scope: !2522, inlinedAt: !4188)
!4188 = distinct !DILocation(line: 789, column: 9, scope: !2526, inlinedAt: !4189)
!4189 = distinct !DILocation(line: 1200, column: 3, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !4169, file: !3, line: 1199, column: 31)
!4191 = !DILocation(line: 200, column: 71, scope: !2510, inlinedAt: !4186)
!4192 = !DILocation(line: 200, column: 80, scope: !2510, inlinedAt: !4186)
!4193 = !DILocation(line: 202, column: 9, scope: !2536, inlinedAt: !4186)
!4194 = !DILocation(line: 23, column: 61, scope: !2543, inlinedAt: !4195)
!4195 = distinct !DILocation(line: 1088, column: 10, scope: !2517, inlinedAt: !4187)
!4196 = !DILocation(line: 1086, column: 40, scope: !2517, inlinedAt: !4187)
!4197 = !DILocation(line: 1086, column: 47, scope: !2517, inlinedAt: !4187)
!4198 = !DILocation(line: 1086, column: 54, scope: !2517, inlinedAt: !4187)
!4199 = !DILocation(line: 1088, column: 6, scope: !2517, inlinedAt: !4187)
!4200 = !DILocation(line: 1111, column: 34, scope: !2522, inlinedAt: !4188)
!4201 = !DILocation(line: 1111, column: 41, scope: !2522, inlinedAt: !4188)
!4202 = !DILocation(line: 1111, column: 48, scope: !2522, inlinedAt: !4188)
!4203 = !DILocation(line: 99, column: 79, scope: !2565, inlinedAt: !4204)
!4204 = distinct !DILocation(line: 788, column: 2, scope: !2526, inlinedAt: !4189)
!4205 = !DILocation(line: 99, column: 89, scope: !2565, inlinedAt: !4204)
!4206 = !DILocation(line: 786, column: 29, scope: !2526, inlinedAt: !4189)
!4207 = !DILocation(line: 786, column: 36, scope: !2526, inlinedAt: !4189)
!4208 = !DILocation(line: 786, column: 43, scope: !2526, inlinedAt: !4189)
!4209 = !DILocation(line: 377, column: 55, scope: !2291, inlinedAt: !4210)
!4210 = distinct !DILocation(line: 1194, column: 2, scope: !4163)
!4211 = !DILocation(line: 402, column: 57, scope: !2282, inlinedAt: !4212)
!4212 = distinct !DILocation(line: 1173, column: 2, scope: !4163)
!4213 = !DILocation(line: 377, column: 55, scope: !2291, inlinedAt: !4214)
!4214 = distinct !DILocation(line: 1162, column: 2, scope: !4163)
!4215 = !DILocalVariable(name: "dev", arg: 1, scope: !4163, file: !3, line: 1153, type: !6)
!4216 = !DILocation(line: 1153, column: 44, scope: !4163)
!4217 = !DILocalVariable(name: "status", arg: 2, scope: !4163, file: !3, line: 1153, type: !335)
!4218 = !DILocation(line: 1153, column: 62, scope: !4163)
!4219 = !DILocalVariable(name: "parent", scope: !4163, file: !3, line: 1155, type: !6)
!4220 = !DILocation(line: 1155, column: 17, scope: !4163)
!4221 = !DILocation(line: 1155, column: 26, scope: !4163)
!4222 = !DILocation(line: 1155, column: 31, scope: !4163)
!4223 = !DILocalVariable(name: "notify_parent", scope: !4163, file: !3, line: 1156, type: !915)
!4224 = !DILocation(line: 1156, column: 7, scope: !4163)
!4225 = !DILocalVariable(name: "error", scope: !4163, file: !3, line: 1157, type: !59)
!4226 = !DILocation(line: 1157, column: 6, scope: !4163)
!4227 = !DILocation(line: 1159, column: 6, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4163, file: !3, line: 1159, column: 6)
!4229 = !DILocation(line: 1159, column: 13, scope: !4228)
!4230 = !DILocation(line: 1159, column: 27, scope: !4228)
!4231 = !DILocation(line: 1159, column: 30, scope: !4228)
!4232 = !DILocation(line: 1159, column: 37, scope: !4228)
!4233 = !DILocation(line: 1159, column: 6, scope: !4163)
!4234 = !DILocation(line: 1160, column: 3, scope: !4228)
!4235 = !DILocation(line: 1162, column: 17, scope: !4163)
!4236 = !DILocation(line: 1162, column: 22, scope: !4163)
!4237 = !DILocation(line: 1162, column: 28, scope: !4163)
!4238 = !DILocation(line: 379, column: 2, scope: !2306, inlinedAt: !4214)
!4239 = !DILocation(line: 379, column: 2, scope: !2309, inlinedAt: !4214)
!4240 = !DILocation(line: 379, column: 2, scope: !2312, inlinedAt: !4214)
!4241 = !DILocation(line: 1168, column: 6, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4163, file: !3, line: 1168, column: 6)
!4243 = !DILocation(line: 1168, column: 11, scope: !4242)
!4244 = !DILocation(line: 1168, column: 17, scope: !4242)
!4245 = !DILocation(line: 1168, column: 31, scope: !4242)
!4246 = !DILocation(line: 1168, column: 34, scope: !4242)
!4247 = !DILocation(line: 1168, column: 39, scope: !4242)
!4248 = !DILocation(line: 1168, column: 45, scope: !4242)
!4249 = !DILocation(line: 1168, column: 6, scope: !4163)
!4250 = !DILocation(line: 1169, column: 3, scope: !4242)
!4251 = !DILocation(line: 1169, column: 8, scope: !4242)
!4252 = !DILocation(line: 1169, column: 14, scope: !4242)
!4253 = !DILocation(line: 1169, column: 27, scope: !4242)
!4254 = !DILocation(line: 1171, column: 9, scope: !4242)
!4255 = !DILocation(line: 1173, column: 19, scope: !4163)
!4256 = !DILocation(line: 1173, column: 24, scope: !4163)
!4257 = !DILocation(line: 1173, column: 30, scope: !4163)
!4258 = !DILocation(line: 404, column: 2, scope: !2326, inlinedAt: !4212)
!4259 = !DILocation(line: 404, column: 2, scope: !2329, inlinedAt: !4212)
!4260 = !DILocation(line: 404, column: 2, scope: !2332, inlinedAt: !4212)
!4261 = !DILocation(line: 1175, column: 6, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4163, file: !3, line: 1175, column: 6)
!4263 = !DILocation(line: 1175, column: 6, scope: !4163)
!4264 = !DILocation(line: 1176, column: 10, scope: !4262)
!4265 = !DILocation(line: 1176, column: 3, scope: !4262)
!4266 = !DILocation(line: 1184, column: 6, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4163, file: !3, line: 1184, column: 6)
!4268 = !DILocation(line: 1184, column: 13, scope: !4267)
!4269 = !DILocation(line: 1184, column: 6, scope: !4163)
!4270 = !DILocalVariable(name: "idx", scope: !4271, file: !3, line: 1185, type: !59)
!4271 = distinct !DILexicalBlock(scope: !4267, file: !3, line: 1184, column: 28)
!4272 = !DILocation(line: 1185, column: 7, scope: !4271)
!4273 = !DILocation(line: 1185, column: 13, scope: !4271)
!4274 = !DILocation(line: 1187, column: 29, scope: !4271)
!4275 = !DILocation(line: 1187, column: 11, scope: !4271)
!4276 = !DILocation(line: 1187, column: 9, scope: !4271)
!4277 = !DILocation(line: 1188, column: 7, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4271, file: !3, line: 1188, column: 7)
!4279 = !DILocation(line: 1188, column: 7, scope: !4271)
!4280 = !DILocation(line: 1189, column: 11, scope: !4278)
!4281 = !DILocation(line: 1189, column: 4, scope: !4278)
!4282 = !DILocation(line: 1191, column: 28, scope: !4271)
!4283 = !DILocation(line: 1191, column: 3, scope: !4271)
!4284 = !DILocation(line: 1192, column: 2, scope: !4271)
!4285 = !DILocation(line: 1194, column: 17, scope: !4163)
!4286 = !DILocation(line: 1194, column: 22, scope: !4163)
!4287 = !DILocation(line: 1194, column: 28, scope: !4163)
!4288 = !DILocation(line: 379, column: 2, scope: !2306, inlinedAt: !4210)
!4289 = !DILocation(line: 379, column: 2, scope: !2309, inlinedAt: !4210)
!4290 = !DILocation(line: 379, column: 2, scope: !2312, inlinedAt: !4210)
!4291 = !DILocation(line: 1196, column: 6, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4163, file: !3, line: 1196, column: 6)
!4293 = !DILocation(line: 1196, column: 11, scope: !4292)
!4294 = !DILocation(line: 1196, column: 17, scope: !4292)
!4295 = !DILocation(line: 1196, column: 35, scope: !4292)
!4296 = !DILocation(line: 1196, column: 32, scope: !4292)
!4297 = !DILocation(line: 1196, column: 42, scope: !4292)
!4298 = !DILocation(line: 1196, column: 46, scope: !4292)
!4299 = !DILocation(line: 1196, column: 6, scope: !4163)
!4300 = !DILocation(line: 1197, column: 3, scope: !4292)
!4301 = !DILocation(line: 1199, column: 6, scope: !4169)
!4302 = !DILocation(line: 1199, column: 13, scope: !4169)
!4303 = !DILocation(line: 1199, column: 6, scope: !4163)
!4304 = !DILocation(line: 1200, column: 22, scope: !4190)
!4305 = !DILocation(line: 1200, column: 30, scope: !4190)
!4306 = !DILocation(line: 1200, column: 36, scope: !4190)
!4307 = !DILocation(line: 788, column: 31, scope: !2526, inlinedAt: !4189)
!4308 = !DILocation(line: 101, column: 20, scope: !2565, inlinedAt: !4204)
!4309 = !DILocation(line: 101, column: 23, scope: !2565, inlinedAt: !4204)
!4310 = !DILocation(line: 101, column: 2, scope: !2565, inlinedAt: !4204)
!4311 = !DILocation(line: 102, column: 2, scope: !2565, inlinedAt: !4204)
!4312 = !DILocation(line: 789, column: 32, scope: !2526, inlinedAt: !4189)
!4313 = !DILocation(line: 789, column: 35, scope: !2526, inlinedAt: !4189)
!4314 = !DILocation(line: 789, column: 38, scope: !2526, inlinedAt: !4189)
!4315 = !DILocation(line: 1113, column: 38, scope: !2522, inlinedAt: !4188)
!4316 = !DILocation(line: 1113, column: 41, scope: !2522, inlinedAt: !4188)
!4317 = !DILocation(line: 1113, column: 44, scope: !2522, inlinedAt: !4188)
!4318 = !DILocation(line: 1088, column: 27, scope: !2517, inlinedAt: !4187)
!4319 = !DILocation(line: 29, column: 9, scope: !2543, inlinedAt: !4195)
!4320 = !DILocation(line: 1090, column: 2, scope: !2517, inlinedAt: !4187)
!4321 = !DILocation(line: 1091, column: 7, scope: !2863, inlinedAt: !4187)
!4322 = !DILocation(line: 1091, column: 7, scope: !2864, inlinedAt: !4187)
!4323 = !DILocation(line: 1092, column: 4, scope: !2863, inlinedAt: !4187)
!4324 = !DILocation(line: 1093, column: 36, scope: !2517, inlinedAt: !4187)
!4325 = !DILocation(line: 1093, column: 43, scope: !2517, inlinedAt: !4187)
!4326 = !DILocation(line: 1093, column: 47, scope: !2517, inlinedAt: !4187)
!4327 = !DILocation(line: 1093, column: 45, scope: !2517, inlinedAt: !4187)
!4328 = !DILocation(line: 202, column: 9, scope: !2873, inlinedAt: !4186)
!4329 = !DILocation(line: 202, column: 9, scope: !2510, inlinedAt: !4186)
!4330 = !DILocation(line: 1093, column: 11, scope: !2517, inlinedAt: !4187)
!4331 = !DILocation(line: 1093, column: 2, scope: !2864, inlinedAt: !4187)
!4332 = distinct !{!4332, !4320, !4333}
!4333 = !DILocation(line: 1093, column: 49, scope: !2517, inlinedAt: !4187)
!4334 = !DILocation(line: 1095, column: 9, scope: !2517, inlinedAt: !4187)
!4335 = !DILocation(line: 1113, column: 50, scope: !2522, inlinedAt: !4188)
!4336 = !DILocation(line: 1113, column: 47, scope: !2522, inlinedAt: !4188)
!4337 = !DILocation(line: 1201, column: 20, scope: !4190)
!4338 = !DILocation(line: 1201, column: 28, scope: !4190)
!4339 = !DILocation(line: 1201, column: 34, scope: !4190)
!4340 = !DILocation(line: 1201, column: 19, scope: !4190)
!4341 = !DILocation(line: 1201, column: 17, scope: !4190)
!4342 = !DILocation(line: 1202, column: 2, scope: !4190)
!4343 = !DILocation(line: 1203, column: 3, scope: !4168)
!4344 = !DILocation(line: 1203, column: 3, scope: !4184)
!4345 = !DILocation(line: 1203, column: 3, scope: !4183)
!4346 = !{i32 -2143517993}
!4347 = !DILocation(line: 1203, column: 3, scope: !4182)
!4348 = !DILocation(line: 329, column: 10, scope: !2160, inlinedAt: !4181)
!4349 = !DILocation(line: 329, column: 16, scope: !2160, inlinedAt: !4181)
!4350 = !DILocation(line: 1210, column: 8, scope: !4175)
!4351 = !DILocation(line: 1210, column: 16, scope: !4175)
!4352 = !DILocation(line: 1210, column: 22, scope: !4175)
!4353 = !DILocation(line: 1211, column: 7, scope: !4175)
!4354 = !DILocation(line: 1211, column: 11, scope: !4175)
!4355 = !DILocation(line: 1211, column: 19, scope: !4175)
!4356 = !DILocation(line: 1211, column: 25, scope: !4175)
!4357 = !DILocation(line: 1212, column: 7, scope: !4175)
!4358 = !DILocation(line: 1212, column: 10, scope: !4175)
!4359 = !DILocation(line: 1212, column: 18, scope: !4175)
!4360 = !DILocation(line: 1212, column: 24, scope: !4175)
!4361 = !DILocation(line: 1212, column: 39, scope: !4175)
!4362 = !DILocation(line: 1210, column: 7, scope: !4168)
!4363 = !DILocation(line: 1213, column: 4, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4175, file: !3, line: 1212, column: 54)
!4365 = !DILocation(line: 1216, column: 10, scope: !4364)
!4366 = !DILocation(line: 1217, column: 3, scope: !4364)
!4367 = !DILocation(line: 1217, column: 14, scope: !4174)
!4368 = !DILocation(line: 1217, column: 19, scope: !4174)
!4369 = !DILocation(line: 1217, column: 25, scope: !4174)
!4370 = !DILocation(line: 1217, column: 40, scope: !4174)
!4371 = !DILocation(line: 1217, column: 14, scope: !4175)
!4372 = !DILocation(line: 1218, column: 16, scope: !4173)
!4373 = !DILocation(line: 1218, column: 24, scope: !4173)
!4374 = !DILocation(line: 1218, column: 30, scope: !4173)
!4375 = !DILocation(line: 240, column: 31, scope: !3463, inlinedAt: !4172)
!4376 = !DILocation(line: 101, column: 20, scope: !2565, inlinedAt: !4177)
!4377 = !DILocation(line: 101, column: 23, scope: !2565, inlinedAt: !4177)
!4378 = !DILocation(line: 101, column: 2, scope: !2565, inlinedAt: !4177)
!4379 = !DILocation(line: 102, column: 2, scope: !2565, inlinedAt: !4177)
!4380 = !DILocation(line: 241, column: 18, scope: !3463, inlinedAt: !4172)
!4381 = !DILocation(line: 96, column: 16, scope: !3458, inlinedAt: !4171)
!4382 = !DILocation(line: 96, column: 19, scope: !3458, inlinedAt: !4171)
!4383 = !DILocation(line: 95, column: 2, scope: !3458, inlinedAt: !4171)
!4384 = !DILocation(line: 1219, column: 3, scope: !4173)
!4385 = !DILocation(line: 1221, column: 16, scope: !4168)
!4386 = !DILocation(line: 1221, column: 24, scope: !4168)
!4387 = !DILocation(line: 1221, column: 30, scope: !4168)
!4388 = !DILocation(line: 394, column: 2, scope: !2728, inlinedAt: !4167)
!4389 = !DILocation(line: 394, column: 2, scope: !2731, inlinedAt: !4167)
!4390 = !DILocation(line: 1223, column: 7, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4168, file: !3, line: 1223, column: 7)
!4392 = !DILocation(line: 1223, column: 7, scope: !4168)
!4393 = !DILocation(line: 1224, column: 11, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4391, file: !3, line: 1223, column: 14)
!4395 = !DILocation(line: 1225, column: 4, scope: !4394)
!4396 = !DILocation(line: 1199, column: 16, scope: !4169)
!4397 = !DILabel(scope: !4163, name: "out_set", file: !3, line: 1229)
!4398 = !DILocation(line: 1229, column: 2, scope: !4163)
!4399 = !DILocation(line: 1230, column: 26, scope: !4163)
!4400 = !DILocation(line: 1230, column: 31, scope: !4163)
!4401 = !DILocation(line: 1230, column: 2, scope: !4163)
!4402 = !DILocation(line: 1231, column: 7, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4163, file: !3, line: 1231, column: 6)
!4404 = !DILocation(line: 1231, column: 6, scope: !4163)
!4405 = !DILocation(line: 1232, column: 3, scope: !4403)
!4406 = !DILocation(line: 1232, column: 8, scope: !4403)
!4407 = !DILocation(line: 1232, column: 14, scope: !4403)
!4408 = !DILocation(line: 1232, column: 28, scope: !4403)
!4409 = !DILabel(scope: !4163, name: "out", file: !3, line: 1234)
!4410 = !DILocation(line: 1234, column: 2, scope: !4163)
!4411 = !DILocation(line: 1235, column: 19, scope: !4163)
!4412 = !DILocation(line: 1235, column: 24, scope: !4163)
!4413 = !DILocation(line: 1235, column: 30, scope: !4163)
!4414 = !DILocation(line: 404, column: 2, scope: !2326, inlinedAt: !4165)
!4415 = !DILocation(line: 404, column: 2, scope: !2329, inlinedAt: !4165)
!4416 = !DILocation(line: 404, column: 2, scope: !2332, inlinedAt: !4165)
!4417 = !DILocation(line: 1237, column: 6, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4163, file: !3, line: 1237, column: 6)
!4419 = !DILocation(line: 1237, column: 6, scope: !4163)
!4420 = !DILocation(line: 1238, column: 19, scope: !4418)
!4421 = !DILocation(line: 1238, column: 3, scope: !4418)
!4422 = !DILocation(line: 1240, column: 6, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4163, file: !3, line: 1240, column: 6)
!4424 = !DILocation(line: 1240, column: 13, scope: !4423)
!4425 = !DILocation(line: 1240, column: 6, scope: !4163)
!4426 = !DILocalVariable(name: "idx", scope: !4427, file: !3, line: 1241, type: !59)
!4427 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 1240, column: 31)
!4428 = !DILocation(line: 1241, column: 7, scope: !4427)
!4429 = !DILocation(line: 1241, column: 13, scope: !4427)
!4430 = !DILocation(line: 1243, column: 21, scope: !4427)
!4431 = !DILocation(line: 1243, column: 3, scope: !4427)
!4432 = !DILocation(line: 1245, column: 28, scope: !4427)
!4433 = !DILocation(line: 1245, column: 3, scope: !4427)
!4434 = !DILocation(line: 1246, column: 2, scope: !4427)
!4435 = !DILocation(line: 1248, column: 20, scope: !4163)
!4436 = !DILocation(line: 1248, column: 2, scope: !4163)
!4437 = !DILocation(line: 1250, column: 9, scope: !4163)
!4438 = !DILocation(line: 1250, column: 2, scope: !4163)
!4439 = !DILocation(line: 1251, column: 1, scope: !4163)
!4440 = distinct !DISubprogram(name: "rpm_get_suppliers", scope: !3, file: !3, line: 286, type: !1564, scopeLine: 287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!4441 = !DILocalVariable(name: "dev", arg: 1, scope: !4440, file: !3, line: 286, type: !6)
!4442 = !DILocation(line: 286, column: 45, scope: !4440)
!4443 = !DILocalVariable(name: "link", scope: !4440, file: !3, line: 288, type: !2105)
!4444 = !DILocation(line: 288, column: 22, scope: !4440)
!4445 = !DILocalVariable(name: "__mptr", scope: !4446, file: !3, line: 290, type: !149)
!4446 = distinct !DILexicalBlock(scope: !4447, file: !3, line: 290, column: 2)
!4447 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 290, column: 2)
!4448 = !DILocation(line: 290, column: 2, scope: !4446)
!4449 = !DILocation(line: 290, column: 2, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4446, file: !3, line: 290, column: 2)
!4451 = !DILocation(line: 290, column: 2, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4450, file: !3, line: 290, column: 2)
!4453 = !DILocation(line: 290, column: 2, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4446, file: !3, line: 290, column: 2)
!4455 = !DILocation(line: 290, column: 2, scope: !4447)
!4456 = !DILocation(line: 290, column: 2, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4447, file: !3, line: 290, column: 2)
!4458 = !DILocalVariable(name: "retval", scope: !4459, file: !3, line: 292, type: !59)
!4459 = distinct !DILexicalBlock(scope: !4457, file: !3, line: 291, column: 36)
!4460 = !DILocation(line: 292, column: 7, scope: !4459)
!4461 = !DILocation(line: 294, column: 9, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4459, file: !3, line: 294, column: 7)
!4463 = !DILocation(line: 294, column: 15, scope: !4462)
!4464 = !DILocation(line: 294, column: 21, scope: !4462)
!4465 = !DILocation(line: 294, column: 7, scope: !4459)
!4466 = !DILocation(line: 295, column: 4, scope: !4462)
!4467 = !DILocation(line: 297, column: 32, scope: !4459)
!4468 = !DILocation(line: 297, column: 38, scope: !4459)
!4469 = !DILocation(line: 297, column: 12, scope: !4459)
!4470 = !DILocation(line: 297, column: 10, scope: !4459)
!4471 = !DILocation(line: 299, column: 7, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4459, file: !3, line: 299, column: 7)
!4473 = !DILocation(line: 299, column: 14, scope: !4472)
!4474 = !DILocation(line: 299, column: 18, scope: !4472)
!4475 = !DILocation(line: 299, column: 21, scope: !4472)
!4476 = !DILocation(line: 299, column: 28, scope: !4472)
!4477 = !DILocation(line: 299, column: 7, scope: !4459)
!4478 = !DILocation(line: 300, column: 26, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4472, file: !3, line: 299, column: 40)
!4480 = !DILocation(line: 300, column: 32, scope: !4479)
!4481 = !DILocation(line: 300, column: 4, scope: !4479)
!4482 = !DILocation(line: 301, column: 11, scope: !4479)
!4483 = !DILocation(line: 301, column: 4, scope: !4479)
!4484 = !DILocation(line: 303, column: 17, scope: !4459)
!4485 = !DILocation(line: 303, column: 23, scope: !4459)
!4486 = !DILocation(line: 303, column: 3, scope: !4459)
!4487 = !DILocation(line: 304, column: 2, scope: !4459)
!4488 = !DILocalVariable(name: "__mptr", scope: !4489, file: !3, line: 290, type: !149)
!4489 = distinct !DILexicalBlock(scope: !4457, file: !3, line: 290, column: 2)
!4490 = !DILocation(line: 290, column: 2, scope: !4489)
!4491 = !DILocation(line: 290, column: 2, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4489, file: !3, line: 290, column: 2)
!4493 = !DILocation(line: 290, column: 2, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4492, file: !3, line: 290, column: 2)
!4495 = !DILocation(line: 290, column: 2, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4489, file: !3, line: 290, column: 2)
!4497 = distinct !{!4497, !4455, !4498}
!4498 = !DILocation(line: 304, column: 2, scope: !4447)
!4499 = !DILocation(line: 305, column: 2, scope: !4440)
!4500 = !DILocation(line: 306, column: 1, scope: !4440)
!4501 = distinct !DISubprogram(name: "dev_name", scope: !8, file: !8, line: 609, type: !4502, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!4502 = !DISubroutineType(types: !4503)
!4503 = !{!15, !4504}
!4504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4505, size: 64)
!4505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!4506 = !DILocalVariable(name: "dev", arg: 1, scope: !4501, file: !8, line: 609, type: !4504)
!4507 = !DILocation(line: 609, column: 57, scope: !4501)
!4508 = !DILocation(line: 612, column: 6, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4501, file: !8, line: 612, column: 6)
!4510 = !DILocation(line: 612, column: 11, scope: !4509)
!4511 = !DILocation(line: 612, column: 6, scope: !4501)
!4512 = !DILocation(line: 613, column: 10, scope: !4509)
!4513 = !DILocation(line: 613, column: 15, scope: !4509)
!4514 = !DILocation(line: 613, column: 3, scope: !4509)
!4515 = !DILocation(line: 615, column: 23, scope: !4501)
!4516 = !DILocation(line: 615, column: 28, scope: !4501)
!4517 = !DILocation(line: 615, column: 9, scope: !4501)
!4518 = !DILocation(line: 615, column: 2, scope: !4501)
!4519 = !DILocation(line: 616, column: 1, scope: !4501)
!4520 = distinct !DISubprogram(name: "__update_runtime_status", scope: !3, file: !3, line: 93, type: !4521, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!4521 = !DISubroutineType(types: !4522)
!4522 = !{null, !6, !1859}
!4523 = !DILocalVariable(name: "dev", arg: 1, scope: !4520, file: !3, line: 93, type: !6)
!4524 = !DILocation(line: 93, column: 52, scope: !4520)
!4525 = !DILocalVariable(name: "status", arg: 2, scope: !4520, file: !3, line: 93, type: !1859)
!4526 = !DILocation(line: 93, column: 73, scope: !4520)
!4527 = !DILocation(line: 95, column: 31, scope: !4520)
!4528 = !DILocation(line: 95, column: 2, scope: !4520)
!4529 = !DILocation(line: 96, column: 30, scope: !4520)
!4530 = !DILocation(line: 96, column: 2, scope: !4520)
!4531 = !DILocation(line: 96, column: 7, scope: !4520)
!4532 = !DILocation(line: 96, column: 13, scope: !4520)
!4533 = !DILocation(line: 96, column: 28, scope: !4520)
!4534 = !DILocation(line: 97, column: 1, scope: !4520)
!4535 = distinct !DISubprogram(name: "pm_request_idle", scope: !4536, file: !4536, line: 335, type: !1564, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!4536 = !DIFile(filename: "./include/linux/pm_runtime.h", directory: "/home/lizy2001/genbc/linux")
!4537 = !DILocalVariable(name: "dev", arg: 1, scope: !4535, file: !4536, line: 335, type: !6)
!4538 = !DILocation(line: 335, column: 50, scope: !4535)
!4539 = !DILocation(line: 337, column: 27, scope: !4535)
!4540 = !DILocation(line: 337, column: 9, scope: !4535)
!4541 = !DILocation(line: 337, column: 2, scope: !4535)
!4542 = distinct !DISubprogram(name: "rpm_put_suppliers", scope: !3, file: !3, line: 308, type: !1568, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!4543 = !DILocalVariable(name: "dev", arg: 1, scope: !4542, file: !3, line: 308, type: !6)
!4544 = !DILocation(line: 308, column: 46, scope: !4542)
!4545 = !DILocalVariable(name: "link", scope: !4542, file: !3, line: 310, type: !2105)
!4546 = !DILocation(line: 310, column: 22, scope: !4542)
!4547 = !DILocalVariable(name: "__mptr", scope: !4548, file: !3, line: 312, type: !149)
!4548 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 312, column: 2)
!4549 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 312, column: 2)
!4550 = !DILocation(line: 312, column: 2, scope: !4548)
!4551 = !DILocation(line: 312, column: 2, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4548, file: !3, line: 312, column: 2)
!4553 = !DILocation(line: 312, column: 2, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4552, file: !3, line: 312, column: 2)
!4555 = !DILocation(line: 312, column: 2, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4548, file: !3, line: 312, column: 2)
!4557 = !DILocation(line: 312, column: 2, scope: !4549)
!4558 = !DILocation(line: 312, column: 2, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 312, column: 2)
!4560 = !DILocation(line: 315, column: 3, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 313, column: 36)
!4562 = !DILocation(line: 315, column: 32, scope: !4561)
!4563 = !DILocation(line: 315, column: 38, scope: !4561)
!4564 = !DILocation(line: 315, column: 10, scope: !4561)
!4565 = !DILocation(line: 316, column: 19, scope: !4561)
!4566 = !DILocation(line: 316, column: 25, scope: !4561)
!4567 = !DILocation(line: 316, column: 4, scope: !4561)
!4568 = distinct !{!4568, !4560, !4569}
!4569 = !DILocation(line: 316, column: 33, scope: !4561)
!4570 = !DILocation(line: 317, column: 2, scope: !4561)
!4571 = !DILocalVariable(name: "__mptr", scope: !4572, file: !3, line: 312, type: !149)
!4572 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 312, column: 2)
!4573 = !DILocation(line: 312, column: 2, scope: !4572)
!4574 = !DILocation(line: 312, column: 2, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4572, file: !3, line: 312, column: 2)
!4576 = !DILocation(line: 312, column: 2, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4575, file: !3, line: 312, column: 2)
!4578 = !DILocation(line: 312, column: 2, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4572, file: !3, line: 312, column: 2)
!4580 = distinct !{!4580, !4557, !4581}
!4581 = !DILocation(line: 317, column: 2, scope: !4549)
!4582 = !DILocation(line: 318, column: 1, scope: !4542)
!4583 = distinct !DISubprogram(name: "pm_runtime_enable", scope: !3, file: !3, line: 1392, type: !1568, scopeLine: 1393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!4584 = !DILocation(line: 23, column: 61, scope: !2543, inlinedAt: !4585)
!4585 = distinct !DILocation(line: 28, column: 9, scope: !2981, inlinedAt: !4586)
!4586 = distinct !DILocation(line: 1408, column: 2, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4583, file: !3, line: 1408, column: 2)
!4588 = !DILocation(line: 69, column: 73, scope: !2988, inlinedAt: !4589)
!4589 = distinct !DILocation(line: 27, column: 2, scope: !2981, inlinedAt: !4586)
!4590 = !DILocation(line: 69, column: 83, scope: !2988, inlinedAt: !4589)
!4591 = !DILocation(line: 25, column: 29, scope: !2981, inlinedAt: !4586)
!4592 = !DILocation(line: 407, column: 64, scope: !2150, inlinedAt: !4593)
!4593 = distinct !DILocation(line: 1415, column: 2, scope: !4583)
!4594 = !DILocation(line: 407, column: 84, scope: !2150, inlinedAt: !4593)
!4595 = !DILocation(line: 327, column: 67, scope: !2160, inlinedAt: !4596)
!4596 = distinct !DILocation(line: 1396, column: 2, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4598, file: !3, line: 1396, column: 2)
!4598 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 1396, column: 2)
!4599 = distinct !DILexicalBlock(scope: !4600, file: !3, line: 1396, column: 2)
!4600 = distinct !DILexicalBlock(scope: !4601, file: !3, line: 1396, column: 2)
!4601 = distinct !DILexicalBlock(scope: !4583, file: !3, line: 1396, column: 2)
!4602 = !DILocalVariable(name: "dev", arg: 1, scope: !4583, file: !3, line: 1392, type: !6)
!4603 = !DILocation(line: 1392, column: 39, scope: !4583)
!4604 = !DILocalVariable(name: "flags", scope: !4583, file: !3, line: 1394, type: !125)
!4605 = !DILocation(line: 1394, column: 16, scope: !4583)
!4606 = !DILocation(line: 1396, column: 2, scope: !4583)
!4607 = !DILocation(line: 1396, column: 2, scope: !4601)
!4608 = !DILocalVariable(name: "__dummy", scope: !4609, file: !3, line: 1396, type: !125)
!4609 = distinct !DILexicalBlock(scope: !4600, file: !3, line: 1396, column: 2)
!4610 = !DILocation(line: 1396, column: 2, scope: !4609)
!4611 = !DILocalVariable(name: "__dummy2", scope: !4609, file: !3, line: 1396, type: !125)
!4612 = !DILocation(line: 1396, column: 2, scope: !4600)
!4613 = !DILocation(line: 1396, column: 2, scope: !4599)
!4614 = !DILocation(line: 1396, column: 2, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 1396, column: 2)
!4616 = !DILocalVariable(name: "__dummy", scope: !4617, file: !3, line: 1396, type: !125)
!4617 = distinct !DILexicalBlock(scope: !4618, file: !3, line: 1396, column: 2)
!4618 = distinct !DILexicalBlock(scope: !4615, file: !3, line: 1396, column: 2)
!4619 = !DILocation(line: 1396, column: 2, scope: !4617)
!4620 = !DILocalVariable(name: "__dummy2", scope: !4617, file: !3, line: 1396, type: !125)
!4621 = !DILocation(line: 1396, column: 2, scope: !4618)
!4622 = !DILocation(line: 1396, column: 2, scope: !4598)
!4623 = !{i32 -2143516007}
!4624 = !DILocation(line: 1396, column: 2, scope: !4597)
!4625 = !DILocation(line: 329, column: 10, scope: !2160, inlinedAt: !4596)
!4626 = !DILocation(line: 329, column: 16, scope: !2160, inlinedAt: !4596)
!4627 = !DILocation(line: 1398, column: 6, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4583, file: !3, line: 1398, column: 6)
!4629 = !DILocation(line: 1398, column: 11, scope: !4628)
!4630 = !DILocation(line: 1398, column: 17, scope: !4628)
!4631 = !DILocation(line: 1398, column: 31, scope: !4628)
!4632 = !DILocation(line: 1398, column: 6, scope: !4583)
!4633 = !DILocation(line: 1399, column: 3, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4628, file: !3, line: 1398, column: 36)
!4635 = !DILocation(line: 1399, column: 8, scope: !4634)
!4636 = !DILocation(line: 1399, column: 14, scope: !4634)
!4637 = !DILocation(line: 1399, column: 27, scope: !4634)
!4638 = !DILocation(line: 1402, column: 8, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4634, file: !3, line: 1402, column: 7)
!4640 = !DILocation(line: 1402, column: 13, scope: !4639)
!4641 = !DILocation(line: 1402, column: 19, scope: !4639)
!4642 = !DILocation(line: 1402, column: 7, scope: !4634)
!4643 = !DILocation(line: 1403, column: 38, scope: !4639)
!4644 = !DILocation(line: 1403, column: 4, scope: !4639)
!4645 = !DILocation(line: 1403, column: 9, scope: !4639)
!4646 = !DILocation(line: 1403, column: 15, scope: !4639)
!4647 = !DILocation(line: 1403, column: 36, scope: !4639)
!4648 = !DILocation(line: 1404, column: 2, scope: !4634)
!4649 = !DILocation(line: 1405, column: 3, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4628, file: !3, line: 1404, column: 9)
!4651 = !DILocalVariable(name: "__ret_warn_on", scope: !4587, file: !3, line: 1408, type: !59)
!4652 = !DILocation(line: 1408, column: 2, scope: !4587)
!4653 = !DILocation(line: 27, column: 25, scope: !2981, inlinedAt: !4586)
!4654 = !DILocation(line: 71, column: 19, scope: !2988, inlinedAt: !4589)
!4655 = !DILocation(line: 71, column: 22, scope: !2988, inlinedAt: !4589)
!4656 = !DILocation(line: 71, column: 2, scope: !2988, inlinedAt: !4589)
!4657 = !DILocation(line: 72, column: 2, scope: !2988, inlinedAt: !4589)
!4658 = !DILocation(line: 28, column: 26, scope: !2981, inlinedAt: !4586)
!4659 = !DILocation(line: 29, column: 9, scope: !2543, inlinedAt: !4585)
!4660 = !DILocation(line: 0, scope: !4587)
!4661 = !DILocation(line: 1408, column: 2, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4587, file: !3, line: 1408, column: 2)
!4663 = !DILocation(line: 1408, column: 2, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4662, file: !3, line: 1408, column: 2)
!4665 = !DILocation(line: 1408, column: 2, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 1408, column: 2)
!4667 = !DILocation(line: 1408, column: 2, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 1408, column: 2)
!4669 = !DILocation(line: 1408, column: 2, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4668, file: !3, line: 1408, column: 2)
!4671 = !DILocation(line: 1408, column: 2, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4668, file: !3, line: 1408, column: 2)
!4673 = !{i32 -2143514739, i32 -2143514710, i32 -2143514664, i32 -2143514606, i32 -2143514552, i32 -2143514498, i32 -2143514443, i32 -2143514412}
!4674 = !DILocation(line: 1408, column: 2, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4668, file: !3, line: 1408, column: 2)
!4676 = !{i32 -2143513990, i32 -2143513983, i32 -2143513931, i32 -2143513900, i32 -2143513870}
!4677 = !DILocation(line: 1408, column: 2, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4668, file: !3, line: 1408, column: 2)
!4679 = !DILocation(line: 1408, column: 2, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 1408, column: 2)
!4681 = !DILocation(line: 1415, column: 26, scope: !4583)
!4682 = !DILocation(line: 1415, column: 31, scope: !4583)
!4683 = !DILocation(line: 1415, column: 37, scope: !4583)
!4684 = !DILocation(line: 1415, column: 43, scope: !4583)
!4685 = !DILocation(line: 409, column: 2, scope: !2215, inlinedAt: !4593)
!4686 = !DILocation(line: 409, column: 2, scope: !2220, inlinedAt: !4593)
!4687 = !DILocation(line: 409, column: 2, scope: !2221, inlinedAt: !4593)
!4688 = !DILocation(line: 409, column: 2, scope: !2228, inlinedAt: !4593)
!4689 = !DILocation(line: 409, column: 2, scope: !2231, inlinedAt: !4593)
!4690 = !DILocation(line: 1416, column: 1, scope: !4583)
!4691 = distinct !DISubprogram(name: "pm_runtime_barrier", scope: !3, file: !3, line: 1314, type: !1564, scopeLine: 1315, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!4692 = !DILocation(line: 402, column: 57, scope: !2282, inlinedAt: !4693)
!4693 = distinct !DILocation(line: 1329, column: 2, scope: !4691)
!4694 = !DILocation(line: 377, column: 55, scope: !2291, inlinedAt: !4695)
!4695 = distinct !DILocation(line: 1319, column: 2, scope: !4691)
!4696 = !DILocalVariable(name: "dev", arg: 1, scope: !4691, file: !3, line: 1314, type: !6)
!4697 = !DILocation(line: 1314, column: 39, scope: !4691)
!4698 = !DILocalVariable(name: "retval", scope: !4691, file: !3, line: 1316, type: !59)
!4699 = !DILocation(line: 1316, column: 6, scope: !4691)
!4700 = !DILocation(line: 1318, column: 26, scope: !4691)
!4701 = !DILocation(line: 1318, column: 2, scope: !4691)
!4702 = !DILocation(line: 1319, column: 17, scope: !4691)
!4703 = !DILocation(line: 1319, column: 22, scope: !4691)
!4704 = !DILocation(line: 1319, column: 28, scope: !4691)
!4705 = !DILocation(line: 379, column: 2, scope: !2306, inlinedAt: !4695)
!4706 = !DILocation(line: 379, column: 2, scope: !2309, inlinedAt: !4695)
!4707 = !DILocation(line: 379, column: 2, scope: !2312, inlinedAt: !4695)
!4708 = !DILocation(line: 1321, column: 6, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4691, file: !3, line: 1321, column: 6)
!4710 = !DILocation(line: 1321, column: 11, scope: !4709)
!4711 = !DILocation(line: 1321, column: 17, scope: !4709)
!4712 = !DILocation(line: 1322, column: 6, scope: !4709)
!4713 = !DILocation(line: 1322, column: 9, scope: !4709)
!4714 = !DILocation(line: 1322, column: 14, scope: !4709)
!4715 = !DILocation(line: 1322, column: 20, scope: !4709)
!4716 = !DILocation(line: 1322, column: 28, scope: !4709)
!4717 = !DILocation(line: 1321, column: 6, scope: !4691)
!4718 = !DILocation(line: 1323, column: 14, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4709, file: !3, line: 1322, column: 47)
!4720 = !DILocation(line: 1323, column: 3, scope: !4719)
!4721 = !DILocation(line: 1324, column: 10, scope: !4719)
!4722 = !DILocation(line: 1325, column: 2, scope: !4719)
!4723 = !DILocation(line: 1327, column: 23, scope: !4691)
!4724 = !DILocation(line: 1327, column: 2, scope: !4691)
!4725 = !DILocation(line: 1329, column: 19, scope: !4691)
!4726 = !DILocation(line: 1329, column: 24, scope: !4691)
!4727 = !DILocation(line: 1329, column: 30, scope: !4691)
!4728 = !DILocation(line: 404, column: 2, scope: !2326, inlinedAt: !4693)
!4729 = !DILocation(line: 404, column: 2, scope: !2329, inlinedAt: !4693)
!4730 = !DILocation(line: 404, column: 2, scope: !2332, inlinedAt: !4693)
!4731 = !DILocation(line: 1330, column: 24, scope: !4691)
!4732 = !DILocation(line: 1330, column: 2, scope: !4691)
!4733 = !DILocation(line: 1332, column: 9, scope: !4691)
!4734 = !DILocation(line: 1332, column: 2, scope: !4691)
!4735 = distinct !DISubprogram(name: "pm_runtime_get_noresume", scope: !4536, file: !4536, line: 92, type: !1568, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!4736 = !DILocation(line: 93, column: 55, scope: !3458, inlinedAt: !4737)
!4737 = distinct !DILocation(line: 241, column: 2, scope: !3463, inlinedAt: !4738)
!4738 = distinct !DILocation(line: 94, column: 2, scope: !4735)
!4739 = !DILocation(line: 99, column: 79, scope: !2565, inlinedAt: !4740)
!4740 = distinct !DILocation(line: 240, column: 2, scope: !3463, inlinedAt: !4738)
!4741 = !DILocation(line: 99, column: 89, scope: !2565, inlinedAt: !4740)
!4742 = !DILocation(line: 238, column: 22, scope: !3463, inlinedAt: !4738)
!4743 = !DILocalVariable(name: "dev", arg: 1, scope: !4735, file: !4536, line: 92, type: !6)
!4744 = !DILocation(line: 92, column: 59, scope: !4735)
!4745 = !DILocation(line: 94, column: 14, scope: !4735)
!4746 = !DILocation(line: 94, column: 19, scope: !4735)
!4747 = !DILocation(line: 94, column: 25, scope: !4735)
!4748 = !DILocation(line: 240, column: 31, scope: !3463, inlinedAt: !4738)
!4749 = !DILocation(line: 101, column: 20, scope: !2565, inlinedAt: !4740)
!4750 = !DILocation(line: 101, column: 23, scope: !2565, inlinedAt: !4740)
!4751 = !DILocation(line: 101, column: 2, scope: !2565, inlinedAt: !4740)
!4752 = !DILocation(line: 102, column: 2, scope: !2565, inlinedAt: !4740)
!4753 = !DILocation(line: 241, column: 18, scope: !3463, inlinedAt: !4738)
!4754 = !DILocation(line: 96, column: 16, scope: !3458, inlinedAt: !4737)
!4755 = !DILocation(line: 96, column: 19, scope: !3458, inlinedAt: !4737)
!4756 = !DILocation(line: 95, column: 2, scope: !3458, inlinedAt: !4737)
!4757 = !DILocation(line: 95, column: 1, scope: !4735)
!4758 = distinct !DISubprogram(name: "__pm_runtime_barrier", scope: !3, file: !3, line: 1263, type: !1568, scopeLine: 1264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!4759 = !DILocation(line: 377, column: 55, scope: !2291, inlinedAt: !4760)
!4760 = distinct !DILocation(line: 1294, column: 4, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4762, file: !3, line: 1283, column: 12)
!4762 = distinct !DILexicalBlock(scope: !4763, file: !3, line: 1283, column: 3)
!4763 = distinct !DILexicalBlock(scope: !4764, file: !3, line: 1283, column: 3)
!4764 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 1279, column: 39)
!4765 = distinct !DILexicalBlock(scope: !4758, file: !3, line: 1277, column: 6)
!4766 = !DILocation(line: 402, column: 57, scope: !2282, inlinedAt: !4767)
!4767 = distinct !DILocation(line: 1290, column: 4, scope: !4761)
!4768 = !DILocation(line: 15, column: 9, scope: !2489, inlinedAt: !4769)
!4769 = distinct !DILocation(line: 1280, column: 3, scope: !4764)
!4770 = !DILocation(line: 15, column: 9, scope: !2497, inlinedAt: !4769)
!4771 = !DILocation(line: 15, column: 9, scope: !2500, inlinedAt: !4769)
!4772 = !DILocation(line: 377, column: 55, scope: !2291, inlinedAt: !4773)
!4773 = distinct !DILocation(line: 1273, column: 3, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4775, file: !3, line: 1267, column: 34)
!4775 = distinct !DILexicalBlock(scope: !4758, file: !3, line: 1267, column: 6)
!4776 = !DILocation(line: 402, column: 57, scope: !2282, inlinedAt: !4777)
!4777 = distinct !DILocation(line: 1269, column: 3, scope: !4774)
!4778 = !DILocalVariable(name: "dev", arg: 1, scope: !4758, file: !3, line: 1263, type: !6)
!4779 = !DILocation(line: 1263, column: 49, scope: !4758)
!4780 = !DILocation(line: 1265, column: 30, scope: !4758)
!4781 = !DILocation(line: 1265, column: 2, scope: !4758)
!4782 = !DILocation(line: 1267, column: 6, scope: !4775)
!4783 = !DILocation(line: 1267, column: 11, scope: !4775)
!4784 = !DILocation(line: 1267, column: 17, scope: !4775)
!4785 = !DILocation(line: 1267, column: 6, scope: !4758)
!4786 = !DILocation(line: 1268, column: 3, scope: !4774)
!4787 = !DILocation(line: 1268, column: 8, scope: !4774)
!4788 = !DILocation(line: 1268, column: 14, scope: !4774)
!4789 = !DILocation(line: 1268, column: 22, scope: !4774)
!4790 = !DILocation(line: 1269, column: 20, scope: !4774)
!4791 = !DILocation(line: 1269, column: 25, scope: !4774)
!4792 = !DILocation(line: 1269, column: 31, scope: !4774)
!4793 = !DILocation(line: 404, column: 2, scope: !2326, inlinedAt: !4777)
!4794 = !DILocation(line: 404, column: 2, scope: !2329, inlinedAt: !4777)
!4795 = !DILocation(line: 404, column: 2, scope: !2332, inlinedAt: !4777)
!4796 = !DILocation(line: 1271, column: 21, scope: !4774)
!4797 = !DILocation(line: 1271, column: 26, scope: !4774)
!4798 = !DILocation(line: 1271, column: 32, scope: !4774)
!4799 = !DILocation(line: 1271, column: 3, scope: !4774)
!4800 = !DILocation(line: 1273, column: 18, scope: !4774)
!4801 = !DILocation(line: 1273, column: 23, scope: !4774)
!4802 = !DILocation(line: 1273, column: 29, scope: !4774)
!4803 = !DILocation(line: 379, column: 2, scope: !2306, inlinedAt: !4773)
!4804 = !DILocation(line: 379, column: 2, scope: !2309, inlinedAt: !4773)
!4805 = !DILocation(line: 379, column: 2, scope: !2312, inlinedAt: !4773)
!4806 = !DILocation(line: 1274, column: 3, scope: !4774)
!4807 = !DILocation(line: 1274, column: 8, scope: !4774)
!4808 = !DILocation(line: 1274, column: 14, scope: !4774)
!4809 = !DILocation(line: 1274, column: 30, scope: !4774)
!4810 = !DILocation(line: 1275, column: 2, scope: !4774)
!4811 = !DILocation(line: 1277, column: 6, scope: !4765)
!4812 = !DILocation(line: 1277, column: 11, scope: !4765)
!4813 = !DILocation(line: 1277, column: 17, scope: !4765)
!4814 = !DILocation(line: 1277, column: 32, scope: !4765)
!4815 = !DILocation(line: 1278, column: 6, scope: !4765)
!4816 = !DILocation(line: 1278, column: 9, scope: !4765)
!4817 = !DILocation(line: 1278, column: 14, scope: !4765)
!4818 = !DILocation(line: 1278, column: 20, scope: !4765)
!4819 = !DILocation(line: 1278, column: 35, scope: !4765)
!4820 = !DILocation(line: 1279, column: 6, scope: !4765)
!4821 = !DILocation(line: 1279, column: 9, scope: !4765)
!4822 = !DILocation(line: 1279, column: 14, scope: !4765)
!4823 = !DILocation(line: 1279, column: 20, scope: !4765)
!4824 = !DILocation(line: 1277, column: 6, scope: !4758)
!4825 = !DILocalVariable(name: "wait", scope: !4764, file: !3, line: 1280, type: !2700)
!4826 = !DILocation(line: 1280, column: 3, scope: !4764)
!4827 = !DILocation(line: 1283, column: 3, scope: !4764)
!4828 = !DILocation(line: 1284, column: 21, scope: !4761)
!4829 = !DILocation(line: 1284, column: 26, scope: !4761)
!4830 = !DILocation(line: 1284, column: 32, scope: !4761)
!4831 = !DILocation(line: 1284, column: 4, scope: !4761)
!4832 = !DILocation(line: 1286, column: 8, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4761, file: !3, line: 1286, column: 8)
!4834 = !DILocation(line: 1286, column: 13, scope: !4833)
!4835 = !DILocation(line: 1286, column: 19, scope: !4833)
!4836 = !DILocation(line: 1286, column: 34, scope: !4833)
!4837 = !DILocation(line: 1287, column: 8, scope: !4833)
!4838 = !DILocation(line: 1287, column: 11, scope: !4833)
!4839 = !DILocation(line: 1287, column: 16, scope: !4833)
!4840 = !DILocation(line: 1287, column: 22, scope: !4833)
!4841 = !DILocation(line: 1287, column: 37, scope: !4833)
!4842 = !DILocation(line: 1288, column: 8, scope: !4833)
!4843 = !DILocation(line: 1288, column: 12, scope: !4833)
!4844 = !DILocation(line: 1288, column: 17, scope: !4833)
!4845 = !DILocation(line: 1288, column: 23, scope: !4833)
!4846 = !DILocation(line: 1286, column: 8, scope: !4761)
!4847 = !DILocation(line: 1289, column: 5, scope: !4833)
!4848 = !DILocation(line: 1290, column: 21, scope: !4761)
!4849 = !DILocation(line: 1290, column: 26, scope: !4761)
!4850 = !DILocation(line: 1290, column: 32, scope: !4761)
!4851 = !DILocation(line: 404, column: 2, scope: !2326, inlinedAt: !4767)
!4852 = !DILocation(line: 404, column: 2, scope: !2329, inlinedAt: !4767)
!4853 = !DILocation(line: 404, column: 2, scope: !2332, inlinedAt: !4767)
!4854 = !DILocation(line: 1292, column: 4, scope: !4761)
!4855 = !DILocation(line: 1294, column: 19, scope: !4761)
!4856 = !DILocation(line: 1294, column: 24, scope: !4761)
!4857 = !DILocation(line: 1294, column: 30, scope: !4761)
!4858 = !DILocation(line: 379, column: 2, scope: !2306, inlinedAt: !4760)
!4859 = !DILocation(line: 379, column: 2, scope: !2309, inlinedAt: !4760)
!4860 = !DILocation(line: 379, column: 2, scope: !2312, inlinedAt: !4760)
!4861 = !DILocation(line: 1283, column: 3, scope: !4762)
!4862 = distinct !{!4862, !4863, !4864}
!4863 = !DILocation(line: 1283, column: 3, scope: !4763)
!4864 = !DILocation(line: 1295, column: 3, scope: !4763)
!4865 = !DILocation(line: 1296, column: 16, scope: !4764)
!4866 = !DILocation(line: 1296, column: 21, scope: !4764)
!4867 = !DILocation(line: 1296, column: 27, scope: !4764)
!4868 = !DILocation(line: 1296, column: 3, scope: !4764)
!4869 = !DILocation(line: 1297, column: 2, scope: !4764)
!4870 = !DILocation(line: 1298, column: 1, scope: !4758)
!4871 = distinct !DISubprogram(name: "pm_runtime_put_noidle", scope: !4536, file: !4536, line: 103, type: !1568, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!4872 = !DILocation(line: 200, column: 63, scope: !2510, inlinedAt: !4873)
!4873 = distinct !DILocation(line: 1093, column: 12, scope: !2517, inlinedAt: !4874)
!4874 = distinct !DILocation(line: 1113, column: 9, scope: !2522, inlinedAt: !4875)
!4875 = distinct !DILocation(line: 789, column: 9, scope: !2526, inlinedAt: !4876)
!4876 = distinct !DILocation(line: 105, column: 2, scope: !4871)
!4877 = !DILocation(line: 200, column: 71, scope: !2510, inlinedAt: !4873)
!4878 = !DILocation(line: 200, column: 80, scope: !2510, inlinedAt: !4873)
!4879 = !DILocation(line: 202, column: 9, scope: !2536, inlinedAt: !4873)
!4880 = !DILocation(line: 23, column: 61, scope: !2543, inlinedAt: !4881)
!4881 = distinct !DILocation(line: 1088, column: 10, scope: !2517, inlinedAt: !4874)
!4882 = !DILocation(line: 1086, column: 40, scope: !2517, inlinedAt: !4874)
!4883 = !DILocation(line: 1086, column: 47, scope: !2517, inlinedAt: !4874)
!4884 = !DILocation(line: 1086, column: 54, scope: !2517, inlinedAt: !4874)
!4885 = !DILocation(line: 1088, column: 6, scope: !2517, inlinedAt: !4874)
!4886 = !DILocation(line: 1111, column: 34, scope: !2522, inlinedAt: !4875)
!4887 = !DILocation(line: 1111, column: 41, scope: !2522, inlinedAt: !4875)
!4888 = !DILocation(line: 1111, column: 48, scope: !2522, inlinedAt: !4875)
!4889 = !DILocation(line: 99, column: 79, scope: !2565, inlinedAt: !4890)
!4890 = distinct !DILocation(line: 788, column: 2, scope: !2526, inlinedAt: !4876)
!4891 = !DILocation(line: 99, column: 89, scope: !2565, inlinedAt: !4890)
!4892 = !DILocation(line: 786, column: 29, scope: !2526, inlinedAt: !4876)
!4893 = !DILocation(line: 786, column: 36, scope: !2526, inlinedAt: !4876)
!4894 = !DILocation(line: 786, column: 43, scope: !2526, inlinedAt: !4876)
!4895 = !DILocalVariable(name: "dev", arg: 1, scope: !4871, file: !4536, line: 103, type: !6)
!4896 = !DILocation(line: 103, column: 57, scope: !4871)
!4897 = !DILocation(line: 105, column: 21, scope: !4871)
!4898 = !DILocation(line: 105, column: 26, scope: !4871)
!4899 = !DILocation(line: 105, column: 32, scope: !4871)
!4900 = !DILocation(line: 788, column: 31, scope: !2526, inlinedAt: !4876)
!4901 = !DILocation(line: 101, column: 20, scope: !2565, inlinedAt: !4890)
!4902 = !DILocation(line: 101, column: 23, scope: !2565, inlinedAt: !4890)
!4903 = !DILocation(line: 101, column: 2, scope: !2565, inlinedAt: !4890)
!4904 = !DILocation(line: 102, column: 2, scope: !2565, inlinedAt: !4890)
!4905 = !DILocation(line: 789, column: 32, scope: !2526, inlinedAt: !4876)
!4906 = !DILocation(line: 789, column: 35, scope: !2526, inlinedAt: !4876)
!4907 = !DILocation(line: 789, column: 38, scope: !2526, inlinedAt: !4876)
!4908 = !DILocation(line: 1113, column: 38, scope: !2522, inlinedAt: !4875)
!4909 = !DILocation(line: 1113, column: 41, scope: !2522, inlinedAt: !4875)
!4910 = !DILocation(line: 1113, column: 44, scope: !2522, inlinedAt: !4875)
!4911 = !DILocation(line: 1088, column: 27, scope: !2517, inlinedAt: !4874)
!4912 = !DILocation(line: 29, column: 9, scope: !2543, inlinedAt: !4881)
!4913 = !DILocation(line: 1090, column: 2, scope: !2517, inlinedAt: !4874)
!4914 = !DILocation(line: 1091, column: 7, scope: !2863, inlinedAt: !4874)
!4915 = !DILocation(line: 1091, column: 7, scope: !2864, inlinedAt: !4874)
!4916 = !DILocation(line: 1092, column: 4, scope: !2863, inlinedAt: !4874)
!4917 = !DILocation(line: 1093, column: 36, scope: !2517, inlinedAt: !4874)
!4918 = !DILocation(line: 1093, column: 43, scope: !2517, inlinedAt: !4874)
!4919 = !DILocation(line: 1093, column: 47, scope: !2517, inlinedAt: !4874)
!4920 = !DILocation(line: 1093, column: 45, scope: !2517, inlinedAt: !4874)
!4921 = !DILocation(line: 202, column: 9, scope: !2873, inlinedAt: !4873)
!4922 = !DILocation(line: 202, column: 9, scope: !2510, inlinedAt: !4873)
!4923 = !DILocation(line: 1093, column: 11, scope: !2517, inlinedAt: !4874)
!4924 = !DILocation(line: 1093, column: 2, scope: !2864, inlinedAt: !4874)
!4925 = distinct !{!4925, !4913, !4926}
!4926 = !DILocation(line: 1093, column: 49, scope: !2517, inlinedAt: !4874)
!4927 = !DILocation(line: 1095, column: 9, scope: !2517, inlinedAt: !4874)
!4928 = !DILocation(line: 1113, column: 50, scope: !2522, inlinedAt: !4875)
!4929 = !DILocation(line: 1113, column: 47, scope: !2522, inlinedAt: !4875)
!4930 = !DILocation(line: 106, column: 1, scope: !4871)
!4931 = distinct !DISubprogram(name: "__pm_runtime_disable", scope: !3, file: !3, line: 1350, type: !4, scopeLine: 1351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!4932 = !DILocation(line: 402, column: 57, scope: !2282, inlinedAt: !4933)
!4933 = distinct !DILocation(line: 1384, column: 2, scope: !4931)
!4934 = !DILocation(line: 377, column: 55, scope: !2291, inlinedAt: !4935)
!4935 = distinct !DILocation(line: 1352, column: 2, scope: !4931)
!4936 = !DILocalVariable(name: "dev", arg: 1, scope: !4931, file: !3, line: 1350, type: !6)
!4937 = !DILocation(line: 1350, column: 42, scope: !4931)
!4938 = !DILocalVariable(name: "check_resume", arg: 2, scope: !4931, file: !3, line: 1350, type: !915)
!4939 = !DILocation(line: 1350, column: 52, scope: !4931)
!4940 = !DILocation(line: 1352, column: 17, scope: !4931)
!4941 = !DILocation(line: 1352, column: 22, scope: !4931)
!4942 = !DILocation(line: 1352, column: 28, scope: !4931)
!4943 = !DILocation(line: 379, column: 2, scope: !2306, inlinedAt: !4935)
!4944 = !DILocation(line: 379, column: 2, scope: !2309, inlinedAt: !4935)
!4945 = !DILocation(line: 379, column: 2, scope: !2312, inlinedAt: !4935)
!4946 = !DILocation(line: 1354, column: 6, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4931, file: !3, line: 1354, column: 6)
!4948 = !DILocation(line: 1354, column: 11, scope: !4947)
!4949 = !DILocation(line: 1354, column: 17, scope: !4947)
!4950 = !DILocation(line: 1354, column: 31, scope: !4947)
!4951 = !DILocation(line: 1354, column: 6, scope: !4931)
!4952 = !DILocation(line: 1355, column: 3, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4947, file: !3, line: 1354, column: 36)
!4954 = !DILocation(line: 1355, column: 8, scope: !4953)
!4955 = !DILocation(line: 1355, column: 14, scope: !4953)
!4956 = !DILocation(line: 1355, column: 27, scope: !4953)
!4957 = !DILocation(line: 1356, column: 3, scope: !4953)
!4958 = !DILocation(line: 1364, column: 6, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4931, file: !3, line: 1364, column: 6)
!4960 = !DILocation(line: 1364, column: 19, scope: !4959)
!4961 = !DILocation(line: 1364, column: 22, scope: !4959)
!4962 = !DILocation(line: 1364, column: 27, scope: !4959)
!4963 = !DILocation(line: 1364, column: 33, scope: !4959)
!4964 = !DILocation(line: 1365, column: 6, scope: !4959)
!4965 = !DILocation(line: 1365, column: 9, scope: !4959)
!4966 = !DILocation(line: 1365, column: 14, scope: !4959)
!4967 = !DILocation(line: 1365, column: 20, scope: !4959)
!4968 = !DILocation(line: 1365, column: 28, scope: !4959)
!4969 = !DILocation(line: 1364, column: 6, scope: !4931)
!4970 = !DILocation(line: 1370, column: 27, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4959, file: !3, line: 1365, column: 47)
!4972 = !DILocation(line: 1370, column: 3, scope: !4971)
!4973 = !DILocation(line: 1372, column: 14, scope: !4971)
!4974 = !DILocation(line: 1372, column: 3, scope: !4971)
!4975 = !DILocation(line: 1374, column: 25, scope: !4971)
!4976 = !DILocation(line: 1374, column: 3, scope: !4971)
!4977 = !DILocation(line: 1375, column: 2, scope: !4971)
!4978 = !DILocation(line: 1378, column: 31, scope: !4931)
!4979 = !DILocation(line: 1378, column: 2, scope: !4931)
!4980 = !DILocation(line: 1380, column: 7, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4931, file: !3, line: 1380, column: 6)
!4982 = !DILocation(line: 1380, column: 12, scope: !4981)
!4983 = !DILocation(line: 1380, column: 18, scope: !4981)
!4984 = !DILocation(line: 1380, column: 31, scope: !4981)
!4985 = !DILocation(line: 1380, column: 6, scope: !4931)
!4986 = !DILocation(line: 1381, column: 24, scope: !4981)
!4987 = !DILocation(line: 1381, column: 3, scope: !4981)
!4988 = !DILabel(scope: !4931, name: "out", file: !3, line: 1383)
!4989 = !DILocation(line: 1383, column: 2, scope: !4931)
!4990 = !DILocation(line: 1384, column: 19, scope: !4931)
!4991 = !DILocation(line: 1384, column: 24, scope: !4931)
!4992 = !DILocation(line: 1384, column: 30, scope: !4931)
!4993 = !DILocation(line: 404, column: 2, scope: !2326, inlinedAt: !4933)
!4994 = !DILocation(line: 404, column: 2, scope: !2329, inlinedAt: !4933)
!4995 = !DILocation(line: 404, column: 2, scope: !2332, inlinedAt: !4933)
!4996 = !DILocation(line: 1385, column: 1, scope: !4931)
!4997 = distinct !DISubprogram(name: "update_pm_runtime_accounting", scope: !3, file: !3, line: 65, type: !1568, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!4998 = !DILocalVariable(name: "dev", arg: 1, scope: !4997, file: !3, line: 65, type: !6)
!4999 = !DILocation(line: 65, column: 57, scope: !4997)
!5000 = !DILocalVariable(name: "now", scope: !4997, file: !3, line: 67, type: !195)
!5001 = !DILocation(line: 67, column: 6, scope: !4997)
!5002 = !DILocalVariable(name: "last", scope: !4997, file: !3, line: 67, type: !195)
!5003 = !DILocation(line: 67, column: 11, scope: !4997)
!5004 = !DILocalVariable(name: "delta", scope: !4997, file: !3, line: 67, type: !195)
!5005 = !DILocation(line: 67, column: 17, scope: !4997)
!5006 = !DILocation(line: 69, column: 6, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 69, column: 6)
!5008 = !DILocation(line: 69, column: 11, scope: !5007)
!5009 = !DILocation(line: 69, column: 17, scope: !5007)
!5010 = !DILocation(line: 69, column: 31, scope: !5007)
!5011 = !DILocation(line: 69, column: 6, scope: !4997)
!5012 = !DILocation(line: 70, column: 3, scope: !5007)
!5013 = !DILocation(line: 72, column: 9, scope: !4997)
!5014 = !DILocation(line: 72, column: 14, scope: !4997)
!5015 = !DILocation(line: 72, column: 20, scope: !4997)
!5016 = !DILocation(line: 72, column: 7, scope: !4997)
!5017 = !DILocation(line: 74, column: 8, scope: !4997)
!5018 = !DILocation(line: 74, column: 6, scope: !4997)
!5019 = !DILocation(line: 75, column: 36, scope: !4997)
!5020 = !DILocation(line: 75, column: 2, scope: !4997)
!5021 = !DILocation(line: 75, column: 7, scope: !4997)
!5022 = !DILocation(line: 75, column: 13, scope: !4997)
!5023 = !DILocation(line: 75, column: 34, scope: !4997)
!5024 = !DILocation(line: 82, column: 6, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 82, column: 6)
!5026 = !DILocation(line: 82, column: 12, scope: !5025)
!5027 = !DILocation(line: 82, column: 10, scope: !5025)
!5028 = !DILocation(line: 82, column: 6, scope: !4997)
!5029 = !DILocation(line: 83, column: 3, scope: !5025)
!5030 = !DILocation(line: 85, column: 10, scope: !4997)
!5031 = !DILocation(line: 85, column: 16, scope: !4997)
!5032 = !DILocation(line: 85, column: 14, scope: !4997)
!5033 = !DILocation(line: 85, column: 8, scope: !4997)
!5034 = !DILocation(line: 87, column: 6, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 87, column: 6)
!5036 = !DILocation(line: 87, column: 11, scope: !5035)
!5037 = !DILocation(line: 87, column: 17, scope: !5035)
!5038 = !DILocation(line: 87, column: 32, scope: !5035)
!5039 = !DILocation(line: 87, column: 6, scope: !4997)
!5040 = !DILocation(line: 88, column: 32, scope: !5035)
!5041 = !DILocation(line: 88, column: 3, scope: !5035)
!5042 = !DILocation(line: 88, column: 8, scope: !5035)
!5043 = !DILocation(line: 88, column: 14, scope: !5035)
!5044 = !DILocation(line: 88, column: 29, scope: !5035)
!5045 = !DILocation(line: 90, column: 29, scope: !5035)
!5046 = !DILocation(line: 90, column: 3, scope: !5035)
!5047 = !DILocation(line: 90, column: 8, scope: !5035)
!5048 = !DILocation(line: 90, column: 14, scope: !5035)
!5049 = !DILocation(line: 90, column: 26, scope: !5035)
!5050 = !DILocation(line: 91, column: 1, scope: !4997)
!5051 = distinct !DISubprogram(name: "pm_runtime_forbid", scope: !3, file: !3, line: 1427, type: !1568, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5052 = !DILocation(line: 402, column: 57, scope: !2282, inlinedAt: !5053)
!5053 = distinct !DILocation(line: 1438, column: 2, scope: !5051)
!5054 = !DILocation(line: 93, column: 55, scope: !3458, inlinedAt: !5055)
!5055 = distinct !DILocation(line: 241, column: 2, scope: !3463, inlinedAt: !5056)
!5056 = distinct !DILocation(line: 1434, column: 2, scope: !5051)
!5057 = !DILocation(line: 99, column: 79, scope: !2565, inlinedAt: !5058)
!5058 = distinct !DILocation(line: 240, column: 2, scope: !3463, inlinedAt: !5056)
!5059 = !DILocation(line: 99, column: 89, scope: !2565, inlinedAt: !5058)
!5060 = !DILocation(line: 238, column: 22, scope: !3463, inlinedAt: !5056)
!5061 = !DILocation(line: 377, column: 55, scope: !2291, inlinedAt: !5062)
!5062 = distinct !DILocation(line: 1429, column: 2, scope: !5051)
!5063 = !DILocalVariable(name: "dev", arg: 1, scope: !5051, file: !3, line: 1427, type: !6)
!5064 = !DILocation(line: 1427, column: 39, scope: !5051)
!5065 = !DILocation(line: 1429, column: 17, scope: !5051)
!5066 = !DILocation(line: 1429, column: 22, scope: !5051)
!5067 = !DILocation(line: 1429, column: 28, scope: !5051)
!5068 = !DILocation(line: 379, column: 2, scope: !2306, inlinedAt: !5062)
!5069 = !DILocation(line: 379, column: 2, scope: !2309, inlinedAt: !5062)
!5070 = !DILocation(line: 379, column: 2, scope: !2312, inlinedAt: !5062)
!5071 = !DILocation(line: 1430, column: 7, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 1430, column: 6)
!5073 = !DILocation(line: 1430, column: 12, scope: !5072)
!5074 = !DILocation(line: 1430, column: 18, scope: !5072)
!5075 = !DILocation(line: 1430, column: 6, scope: !5051)
!5076 = !DILocation(line: 1431, column: 3, scope: !5072)
!5077 = !DILocation(line: 1433, column: 2, scope: !5051)
!5078 = !DILocation(line: 1433, column: 7, scope: !5051)
!5079 = !DILocation(line: 1433, column: 13, scope: !5051)
!5080 = !DILocation(line: 1433, column: 26, scope: !5051)
!5081 = !DILocation(line: 1434, column: 14, scope: !5051)
!5082 = !DILocation(line: 1434, column: 19, scope: !5051)
!5083 = !DILocation(line: 1434, column: 25, scope: !5051)
!5084 = !DILocation(line: 240, column: 31, scope: !3463, inlinedAt: !5056)
!5085 = !DILocation(line: 101, column: 20, scope: !2565, inlinedAt: !5058)
!5086 = !DILocation(line: 101, column: 23, scope: !2565, inlinedAt: !5058)
!5087 = !DILocation(line: 101, column: 2, scope: !2565, inlinedAt: !5058)
!5088 = !DILocation(line: 102, column: 2, scope: !2565, inlinedAt: !5058)
!5089 = !DILocation(line: 241, column: 18, scope: !3463, inlinedAt: !5056)
!5090 = !DILocation(line: 96, column: 16, scope: !3458, inlinedAt: !5055)
!5091 = !DILocation(line: 96, column: 19, scope: !3458, inlinedAt: !5055)
!5092 = !DILocation(line: 95, column: 2, scope: !3458, inlinedAt: !5055)
!5093 = !DILocation(line: 1435, column: 13, scope: !5051)
!5094 = !DILocation(line: 1435, column: 2, scope: !5051)
!5095 = !DILabel(scope: !5051, name: "out", file: !3, line: 1437)
!5096 = !DILocation(line: 1437, column: 2, scope: !5051)
!5097 = !DILocation(line: 1438, column: 19, scope: !5051)
!5098 = !DILocation(line: 1438, column: 24, scope: !5051)
!5099 = !DILocation(line: 1438, column: 30, scope: !5051)
!5100 = !DILocation(line: 404, column: 2, scope: !2326, inlinedAt: !5053)
!5101 = !DILocation(line: 404, column: 2, scope: !2329, inlinedAt: !5053)
!5102 = !DILocation(line: 404, column: 2, scope: !2332, inlinedAt: !5053)
!5103 = !DILocation(line: 1439, column: 1, scope: !5051)
!5104 = distinct !DISubprogram(name: "pm_runtime_allow", scope: !3, file: !3, line: 1448, type: !1568, scopeLine: 1449, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5105 = !DILocation(line: 402, column: 57, scope: !2282, inlinedAt: !5106)
!5106 = distinct !DILocation(line: 1461, column: 2, scope: !5104)
!5107 = !DILocation(line: 121, column: 64, scope: !3126, inlinedAt: !5108)
!5108 = distinct !DILocation(line: 749, column: 9, scope: !3131, inlinedAt: !5109)
!5109 = distinct !DILocation(line: 1455, column: 6, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 1455, column: 6)
!5111 = !DILocation(line: 123, column: 9, scope: !3137, inlinedAt: !5108)
!5112 = !DILocation(line: 99, column: 79, scope: !2565, inlinedAt: !5113)
!5113 = distinct !DILocation(line: 748, column: 2, scope: !3131, inlinedAt: !5109)
!5114 = !DILocation(line: 99, column: 89, scope: !2565, inlinedAt: !5113)
!5115 = !DILocation(line: 746, column: 31, scope: !3131, inlinedAt: !5109)
!5116 = !DILocation(line: 377, column: 55, scope: !2291, inlinedAt: !5117)
!5117 = distinct !DILocation(line: 1450, column: 2, scope: !5104)
!5118 = !DILocalVariable(name: "dev", arg: 1, scope: !5104, file: !3, line: 1448, type: !6)
!5119 = !DILocation(line: 1448, column: 38, scope: !5104)
!5120 = !DILocation(line: 1450, column: 17, scope: !5104)
!5121 = !DILocation(line: 1450, column: 22, scope: !5104)
!5122 = !DILocation(line: 1450, column: 28, scope: !5104)
!5123 = !DILocation(line: 379, column: 2, scope: !2306, inlinedAt: !5117)
!5124 = !DILocation(line: 379, column: 2, scope: !2309, inlinedAt: !5117)
!5125 = !DILocation(line: 379, column: 2, scope: !2312, inlinedAt: !5117)
!5126 = !DILocation(line: 1451, column: 6, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 1451, column: 6)
!5128 = !DILocation(line: 1451, column: 11, scope: !5127)
!5129 = !DILocation(line: 1451, column: 17, scope: !5127)
!5130 = !DILocation(line: 1451, column: 6, scope: !5104)
!5131 = !DILocation(line: 1452, column: 3, scope: !5127)
!5132 = !DILocation(line: 1454, column: 2, scope: !5104)
!5133 = !DILocation(line: 1454, column: 7, scope: !5104)
!5134 = !DILocation(line: 1454, column: 13, scope: !5104)
!5135 = !DILocation(line: 1454, column: 26, scope: !5104)
!5136 = !DILocation(line: 1455, column: 27, scope: !5110)
!5137 = !DILocation(line: 1455, column: 32, scope: !5110)
!5138 = !DILocation(line: 1455, column: 38, scope: !5110)
!5139 = !DILocation(line: 748, column: 31, scope: !3131, inlinedAt: !5109)
!5140 = !DILocation(line: 101, column: 20, scope: !2565, inlinedAt: !5113)
!5141 = !DILocation(line: 101, column: 23, scope: !2565, inlinedAt: !5113)
!5142 = !DILocation(line: 101, column: 2, scope: !2565, inlinedAt: !5113)
!5143 = !DILocation(line: 102, column: 2, scope: !2565, inlinedAt: !5113)
!5144 = !DILocation(line: 749, column: 34, scope: !3131, inlinedAt: !5109)
!5145 = !DILocation(line: 1455, column: 6, scope: !5104)
!5146 = !DILocation(line: 1456, column: 12, scope: !5110)
!5147 = !DILocation(line: 1456, column: 3, scope: !5110)
!5148 = !DILocation(line: 1458, column: 27, scope: !5110)
!5149 = !DILocation(line: 1458, column: 3, scope: !5110)
!5150 = !DILocation(line: 1455, column: 49, scope: !5110)
!5151 = !DILabel(scope: !5104, name: "out", file: !3, line: 1460)
!5152 = !DILocation(line: 1460, column: 2, scope: !5104)
!5153 = !DILocation(line: 1461, column: 19, scope: !5104)
!5154 = !DILocation(line: 1461, column: 24, scope: !5104)
!5155 = !DILocation(line: 1461, column: 30, scope: !5104)
!5156 = !DILocation(line: 404, column: 2, scope: !2326, inlinedAt: !5106)
!5157 = !DILocation(line: 404, column: 2, scope: !2329, inlinedAt: !5106)
!5158 = !DILocation(line: 404, column: 2, scope: !2332, inlinedAt: !5106)
!5159 = !DILocation(line: 1462, column: 1, scope: !5104)
!5160 = distinct !DISubprogram(name: "pm_runtime_no_callbacks", scope: !3, file: !3, line: 1473, type: !1568, scopeLine: 1474, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5161 = !DILocation(line: 402, column: 57, scope: !2282, inlinedAt: !5162)
!5162 = distinct !DILocation(line: 1477, column: 2, scope: !5160)
!5163 = !DILocation(line: 377, column: 55, scope: !2291, inlinedAt: !5164)
!5164 = distinct !DILocation(line: 1475, column: 2, scope: !5160)
!5165 = !DILocalVariable(name: "dev", arg: 1, scope: !5160, file: !3, line: 1473, type: !6)
!5166 = !DILocation(line: 1473, column: 45, scope: !5160)
!5167 = !DILocation(line: 1475, column: 17, scope: !5160)
!5168 = !DILocation(line: 1475, column: 22, scope: !5160)
!5169 = !DILocation(line: 1475, column: 28, scope: !5160)
!5170 = !DILocation(line: 379, column: 2, scope: !2306, inlinedAt: !5164)
!5171 = !DILocation(line: 379, column: 2, scope: !2309, inlinedAt: !5164)
!5172 = !DILocation(line: 379, column: 2, scope: !2312, inlinedAt: !5164)
!5173 = !DILocation(line: 1476, column: 2, scope: !5160)
!5174 = !DILocation(line: 1476, column: 7, scope: !5160)
!5175 = !DILocation(line: 1476, column: 13, scope: !5160)
!5176 = !DILocation(line: 1476, column: 26, scope: !5160)
!5177 = !DILocation(line: 1477, column: 19, scope: !5160)
!5178 = !DILocation(line: 1477, column: 24, scope: !5160)
!5179 = !DILocation(line: 1477, column: 30, scope: !5160)
!5180 = !DILocation(line: 404, column: 2, scope: !2326, inlinedAt: !5162)
!5181 = !DILocation(line: 404, column: 2, scope: !2329, inlinedAt: !5162)
!5182 = !DILocation(line: 404, column: 2, scope: !2332, inlinedAt: !5162)
!5183 = !DILocation(line: 1478, column: 27, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5160, file: !3, line: 1478, column: 6)
!5185 = !DILocation(line: 1478, column: 6, scope: !5184)
!5186 = !DILocation(line: 1478, column: 6, scope: !5160)
!5187 = !DILocation(line: 1479, column: 20, scope: !5184)
!5188 = !DILocation(line: 1479, column: 3, scope: !5184)
!5189 = !DILocation(line: 1480, column: 1, scope: !5160)
!5190 = distinct !DISubprogram(name: "device_is_registered", scope: !8, file: !8, line: 680, type: !1564, scopeLine: 681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5191 = !DILocalVariable(name: "dev", arg: 1, scope: !5190, file: !8, line: 680, type: !6)
!5192 = !DILocation(line: 680, column: 55, scope: !5190)
!5193 = !DILocation(line: 682, column: 9, scope: !5190)
!5194 = !DILocation(line: 682, column: 14, scope: !5190)
!5195 = !DILocation(line: 682, column: 19, scope: !5190)
!5196 = !DILocation(line: 682, column: 2, scope: !5190)
!5197 = distinct !DISubprogram(name: "pm_runtime_irq_safe", scope: !3, file: !3, line: 1494, type: !1568, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5198 = !DILocation(line: 402, column: 57, scope: !2282, inlinedAt: !5199)
!5199 = distinct !DILocation(line: 1500, column: 2, scope: !5197)
!5200 = !DILocation(line: 377, column: 55, scope: !2291, inlinedAt: !5201)
!5201 = distinct !DILocation(line: 1498, column: 2, scope: !5197)
!5202 = !DILocalVariable(name: "dev", arg: 1, scope: !5197, file: !3, line: 1494, type: !6)
!5203 = !DILocation(line: 1494, column: 41, scope: !5197)
!5204 = !DILocation(line: 1496, column: 6, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5197, file: !3, line: 1496, column: 6)
!5206 = !DILocation(line: 1496, column: 11, scope: !5205)
!5207 = !DILocation(line: 1496, column: 6, scope: !5197)
!5208 = !DILocation(line: 1497, column: 23, scope: !5205)
!5209 = !DILocation(line: 1497, column: 28, scope: !5205)
!5210 = !DILocation(line: 1497, column: 3, scope: !5205)
!5211 = !DILocation(line: 1498, column: 17, scope: !5197)
!5212 = !DILocation(line: 1498, column: 22, scope: !5197)
!5213 = !DILocation(line: 1498, column: 28, scope: !5197)
!5214 = !DILocation(line: 379, column: 2, scope: !2306, inlinedAt: !5201)
!5215 = !DILocation(line: 379, column: 2, scope: !2309, inlinedAt: !5201)
!5216 = !DILocation(line: 379, column: 2, scope: !2312, inlinedAt: !5201)
!5217 = !DILocation(line: 1499, column: 2, scope: !5197)
!5218 = !DILocation(line: 1499, column: 7, scope: !5197)
!5219 = !DILocation(line: 1499, column: 13, scope: !5197)
!5220 = !DILocation(line: 1499, column: 22, scope: !5197)
!5221 = !DILocation(line: 1500, column: 19, scope: !5197)
!5222 = !DILocation(line: 1500, column: 24, scope: !5197)
!5223 = !DILocation(line: 1500, column: 30, scope: !5197)
!5224 = !DILocation(line: 404, column: 2, scope: !2326, inlinedAt: !5199)
!5225 = !DILocation(line: 404, column: 2, scope: !2329, inlinedAt: !5199)
!5226 = !DILocation(line: 404, column: 2, scope: !2332, inlinedAt: !5199)
!5227 = !DILocation(line: 1501, column: 1, scope: !5197)
!5228 = distinct !DISubprogram(name: "pm_runtime_get_sync", scope: !4536, file: !4536, line: 384, type: !1564, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5229 = !DILocalVariable(name: "dev", arg: 1, scope: !5228, file: !4536, line: 384, type: !6)
!5230 = !DILocation(line: 384, column: 54, scope: !5228)
!5231 = !DILocation(line: 386, column: 29, scope: !5228)
!5232 = !DILocation(line: 386, column: 9, scope: !5228)
!5233 = !DILocation(line: 386, column: 2, scope: !5228)
!5234 = distinct !DISubprogram(name: "pm_runtime_set_autosuspend_delay", scope: !3, file: !3, line: 1552, type: !3220, scopeLine: 1553, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5235 = !DILocation(line: 402, column: 57, scope: !2282, inlinedAt: !5236)
!5236 = distinct !DILocation(line: 1561, column: 2, scope: !5234)
!5237 = !DILocation(line: 377, column: 55, scope: !2291, inlinedAt: !5238)
!5238 = distinct !DILocation(line: 1556, column: 2, scope: !5234)
!5239 = !DILocalVariable(name: "dev", arg: 1, scope: !5234, file: !3, line: 1552, type: !6)
!5240 = !DILocation(line: 1552, column: 54, scope: !5234)
!5241 = !DILocalVariable(name: "delay", arg: 2, scope: !5234, file: !3, line: 1552, type: !59)
!5242 = !DILocation(line: 1552, column: 63, scope: !5234)
!5243 = !DILocalVariable(name: "old_delay", scope: !5234, file: !3, line: 1554, type: !59)
!5244 = !DILocation(line: 1554, column: 6, scope: !5234)
!5245 = !DILocalVariable(name: "old_use", scope: !5234, file: !3, line: 1554, type: !59)
!5246 = !DILocation(line: 1554, column: 17, scope: !5234)
!5247 = !DILocation(line: 1556, column: 17, scope: !5234)
!5248 = !DILocation(line: 1556, column: 22, scope: !5234)
!5249 = !DILocation(line: 1556, column: 28, scope: !5234)
!5250 = !DILocation(line: 379, column: 2, scope: !2306, inlinedAt: !5238)
!5251 = !DILocation(line: 379, column: 2, scope: !2309, inlinedAt: !5238)
!5252 = !DILocation(line: 379, column: 2, scope: !2312, inlinedAt: !5238)
!5253 = !DILocation(line: 1557, column: 14, scope: !5234)
!5254 = !DILocation(line: 1557, column: 19, scope: !5234)
!5255 = !DILocation(line: 1557, column: 25, scope: !5234)
!5256 = !DILocation(line: 1557, column: 12, scope: !5234)
!5257 = !DILocation(line: 1558, column: 12, scope: !5234)
!5258 = !DILocation(line: 1558, column: 17, scope: !5234)
!5259 = !DILocation(line: 1558, column: 23, scope: !5234)
!5260 = !DILocation(line: 1558, column: 10, scope: !5234)
!5261 = !DILocation(line: 1559, column: 33, scope: !5234)
!5262 = !DILocation(line: 1559, column: 2, scope: !5234)
!5263 = !DILocation(line: 1559, column: 7, scope: !5234)
!5264 = !DILocation(line: 1559, column: 13, scope: !5234)
!5265 = !DILocation(line: 1559, column: 31, scope: !5234)
!5266 = !DILocation(line: 1560, column: 21, scope: !5234)
!5267 = !DILocation(line: 1560, column: 26, scope: !5234)
!5268 = !DILocation(line: 1560, column: 37, scope: !5234)
!5269 = !DILocation(line: 1560, column: 2, scope: !5234)
!5270 = !DILocation(line: 1561, column: 19, scope: !5234)
!5271 = !DILocation(line: 1561, column: 24, scope: !5234)
!5272 = !DILocation(line: 1561, column: 30, scope: !5234)
!5273 = !DILocation(line: 404, column: 2, scope: !2326, inlinedAt: !5236)
!5274 = !DILocation(line: 404, column: 2, scope: !2329, inlinedAt: !5236)
!5275 = !DILocation(line: 404, column: 2, scope: !2332, inlinedAt: !5236)
!5276 = !DILocation(line: 1562, column: 1, scope: !5234)
!5277 = distinct !DISubprogram(name: "update_autosuspend", scope: !3, file: !3, line: 1515, type: !5278, scopeLine: 1516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5278 = !DISubroutineType(types: !5279)
!5279 = !{null, !6, !59, !59}
!5280 = !DILocalVariable(name: "v", arg: 1, scope: !5281, file: !2511, line: 106, type: !2514)
!5281 = distinct !DISubprogram(name: "arch_atomic_dec", scope: !2511, file: !2511, line: 106, type: !3459, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5282 = !DILocation(line: 106, column: 55, scope: !5281, inlinedAt: !5283)
!5283 = distinct !DILocation(line: 331, column: 2, scope: !5284, inlinedAt: !5285)
!5284 = distinct !DISubprogram(name: "atomic_dec", scope: !2527, file: !2527, line: 328, type: !3459, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5285 = distinct !DILocation(line: 1536, column: 4, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5287, file: !3, line: 1535, column: 7)
!5287 = distinct !DILexicalBlock(scope: !5288, file: !3, line: 1532, column: 7)
!5288 = distinct !DILexicalBlock(scope: !5277, file: !3, line: 1520, column: 6)
!5289 = !DILocation(line: 99, column: 79, scope: !2565, inlinedAt: !5290)
!5290 = distinct !DILocation(line: 330, column: 2, scope: !5284, inlinedAt: !5285)
!5291 = !DILocation(line: 99, column: 89, scope: !2565, inlinedAt: !5290)
!5292 = !DILocalVariable(name: "v", arg: 1, scope: !5284, file: !2527, line: 328, type: !2514)
!5293 = !DILocation(line: 328, column: 22, scope: !5284, inlinedAt: !5285)
!5294 = !DILocation(line: 93, column: 55, scope: !3458, inlinedAt: !5295)
!5295 = distinct !DILocation(line: 241, column: 2, scope: !3463, inlinedAt: !5296)
!5296 = distinct !DILocation(line: 1524, column: 4, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5298, file: !3, line: 1523, column: 35)
!5298 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 1523, column: 7)
!5299 = distinct !DILexicalBlock(scope: !5288, file: !3, line: 1520, column: 47)
!5300 = !DILocation(line: 99, column: 79, scope: !2565, inlinedAt: !5301)
!5301 = distinct !DILocation(line: 240, column: 2, scope: !3463, inlinedAt: !5296)
!5302 = !DILocation(line: 99, column: 89, scope: !2565, inlinedAt: !5301)
!5303 = !DILocation(line: 238, column: 22, scope: !3463, inlinedAt: !5296)
!5304 = !DILocalVariable(name: "dev", arg: 1, scope: !5277, file: !3, line: 1515, type: !6)
!5305 = !DILocation(line: 1515, column: 47, scope: !5277)
!5306 = !DILocalVariable(name: "old_delay", arg: 2, scope: !5277, file: !3, line: 1515, type: !59)
!5307 = !DILocation(line: 1515, column: 56, scope: !5277)
!5308 = !DILocalVariable(name: "old_use", arg: 3, scope: !5277, file: !3, line: 1515, type: !59)
!5309 = !DILocation(line: 1515, column: 71, scope: !5277)
!5310 = !DILocalVariable(name: "delay", scope: !5277, file: !3, line: 1517, type: !59)
!5311 = !DILocation(line: 1517, column: 6, scope: !5277)
!5312 = !DILocation(line: 1517, column: 14, scope: !5277)
!5313 = !DILocation(line: 1517, column: 19, scope: !5277)
!5314 = !DILocation(line: 1517, column: 25, scope: !5277)
!5315 = !DILocation(line: 1520, column: 6, scope: !5288)
!5316 = !DILocation(line: 1520, column: 11, scope: !5288)
!5317 = !DILocation(line: 1520, column: 17, scope: !5288)
!5318 = !DILocation(line: 1520, column: 33, scope: !5288)
!5319 = !DILocation(line: 1520, column: 36, scope: !5288)
!5320 = !DILocation(line: 1520, column: 42, scope: !5288)
!5321 = !DILocation(line: 1520, column: 6, scope: !5277)
!5322 = !DILocation(line: 1523, column: 8, scope: !5298)
!5323 = !DILocation(line: 1523, column: 16, scope: !5298)
!5324 = !DILocation(line: 1523, column: 19, scope: !5298)
!5325 = !DILocation(line: 1523, column: 29, scope: !5298)
!5326 = !DILocation(line: 1523, column: 7, scope: !5299)
!5327 = !DILocation(line: 1524, column: 16, scope: !5297)
!5328 = !DILocation(line: 1524, column: 21, scope: !5297)
!5329 = !DILocation(line: 1524, column: 27, scope: !5297)
!5330 = !DILocation(line: 240, column: 31, scope: !3463, inlinedAt: !5296)
!5331 = !DILocation(line: 101, column: 20, scope: !2565, inlinedAt: !5301)
!5332 = !DILocation(line: 101, column: 23, scope: !2565, inlinedAt: !5301)
!5333 = !DILocation(line: 101, column: 2, scope: !2565, inlinedAt: !5301)
!5334 = !DILocation(line: 102, column: 2, scope: !2565, inlinedAt: !5301)
!5335 = !DILocation(line: 241, column: 18, scope: !3463, inlinedAt: !5296)
!5336 = !DILocation(line: 96, column: 16, scope: !3458, inlinedAt: !5295)
!5337 = !DILocation(line: 96, column: 19, scope: !3458, inlinedAt: !5295)
!5338 = !DILocation(line: 95, column: 2, scope: !3458, inlinedAt: !5295)
!5339 = !DILocation(line: 1525, column: 15, scope: !5297)
!5340 = !DILocation(line: 1525, column: 4, scope: !5297)
!5341 = !DILocation(line: 1526, column: 3, scope: !5297)
!5342 = !DILocation(line: 1527, column: 28, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5298, file: !3, line: 1526, column: 10)
!5344 = !DILocation(line: 1527, column: 4, scope: !5343)
!5345 = !DILocation(line: 1529, column: 2, scope: !5299)
!5346 = !DILocation(line: 1535, column: 7, scope: !5286)
!5347 = !DILocation(line: 1535, column: 15, scope: !5286)
!5348 = !DILocation(line: 1535, column: 18, scope: !5286)
!5349 = !DILocation(line: 1535, column: 28, scope: !5286)
!5350 = !DILocation(line: 1535, column: 7, scope: !5287)
!5351 = !DILocation(line: 1536, column: 16, scope: !5286)
!5352 = !DILocation(line: 1536, column: 21, scope: !5286)
!5353 = !DILocation(line: 1536, column: 27, scope: !5286)
!5354 = !DILocation(line: 330, column: 31, scope: !5284, inlinedAt: !5285)
!5355 = !DILocation(line: 101, column: 20, scope: !2565, inlinedAt: !5290)
!5356 = !DILocation(line: 101, column: 23, scope: !2565, inlinedAt: !5290)
!5357 = !DILocation(line: 101, column: 2, scope: !2565, inlinedAt: !5290)
!5358 = !DILocation(line: 102, column: 2, scope: !2565, inlinedAt: !5290)
!5359 = !DILocation(line: 331, column: 18, scope: !5284, inlinedAt: !5285)
!5360 = !DILocation(line: 109, column: 16, scope: !5281, inlinedAt: !5283)
!5361 = !DILocation(line: 109, column: 19, scope: !5281, inlinedAt: !5283)
!5362 = !DILocation(line: 108, column: 2, scope: !5281, inlinedAt: !5283)
!5363 = !{i32 -2146906284}
!5364 = !DILocation(line: 1536, column: 4, scope: !5286)
!5365 = !DILocation(line: 1539, column: 12, scope: !5287)
!5366 = !DILocation(line: 1539, column: 3, scope: !5287)
!5367 = !DILocation(line: 1541, column: 1, scope: !5277)
!5368 = distinct !DISubprogram(name: "__pm_runtime_use_autosuspend", scope: !3, file: !3, line: 1573, type: !4, scopeLine: 1574, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5369 = !DILocation(line: 402, column: 57, scope: !2282, inlinedAt: !5370)
!5370 = distinct !DILocation(line: 1582, column: 2, scope: !5368)
!5371 = !DILocation(line: 377, column: 55, scope: !2291, inlinedAt: !5372)
!5372 = distinct !DILocation(line: 1577, column: 2, scope: !5368)
!5373 = !DILocalVariable(name: "dev", arg: 1, scope: !5368, file: !3, line: 1573, type: !6)
!5374 = !DILocation(line: 1573, column: 50, scope: !5368)
!5375 = !DILocalVariable(name: "use", arg: 2, scope: !5368, file: !3, line: 1573, type: !915)
!5376 = !DILocation(line: 1573, column: 60, scope: !5368)
!5377 = !DILocalVariable(name: "old_delay", scope: !5368, file: !3, line: 1575, type: !59)
!5378 = !DILocation(line: 1575, column: 6, scope: !5368)
!5379 = !DILocalVariable(name: "old_use", scope: !5368, file: !3, line: 1575, type: !59)
!5380 = !DILocation(line: 1575, column: 17, scope: !5368)
!5381 = !DILocation(line: 1577, column: 17, scope: !5368)
!5382 = !DILocation(line: 1577, column: 22, scope: !5368)
!5383 = !DILocation(line: 1577, column: 28, scope: !5368)
!5384 = !DILocation(line: 379, column: 2, scope: !2306, inlinedAt: !5372)
!5385 = !DILocation(line: 379, column: 2, scope: !2309, inlinedAt: !5372)
!5386 = !DILocation(line: 379, column: 2, scope: !2312, inlinedAt: !5372)
!5387 = !DILocation(line: 1578, column: 14, scope: !5368)
!5388 = !DILocation(line: 1578, column: 19, scope: !5368)
!5389 = !DILocation(line: 1578, column: 25, scope: !5368)
!5390 = !DILocation(line: 1578, column: 12, scope: !5368)
!5391 = !DILocation(line: 1579, column: 12, scope: !5368)
!5392 = !DILocation(line: 1579, column: 17, scope: !5368)
!5393 = !DILocation(line: 1579, column: 23, scope: !5368)
!5394 = !DILocation(line: 1579, column: 10, scope: !5368)
!5395 = !DILocation(line: 1580, column: 31, scope: !5368)
!5396 = !DILocation(line: 1580, column: 2, scope: !5368)
!5397 = !DILocation(line: 1580, column: 7, scope: !5368)
!5398 = !DILocation(line: 1580, column: 13, scope: !5368)
!5399 = !DILocation(line: 1580, column: 29, scope: !5368)
!5400 = !DILocation(line: 1581, column: 21, scope: !5368)
!5401 = !DILocation(line: 1581, column: 26, scope: !5368)
!5402 = !DILocation(line: 1581, column: 37, scope: !5368)
!5403 = !DILocation(line: 1581, column: 2, scope: !5368)
!5404 = !DILocation(line: 1582, column: 19, scope: !5368)
!5405 = !DILocation(line: 1582, column: 24, scope: !5368)
!5406 = !DILocation(line: 1582, column: 30, scope: !5368)
!5407 = !DILocation(line: 404, column: 2, scope: !2326, inlinedAt: !5370)
!5408 = !DILocation(line: 404, column: 2, scope: !2329, inlinedAt: !5370)
!5409 = !DILocation(line: 404, column: 2, scope: !2332, inlinedAt: !5370)
!5410 = !DILocation(line: 1583, column: 1, scope: !5368)
!5411 = !DILocalVariable(name: "v", arg: 1, scope: !5412, file: !2511, line: 39, type: !2514)
!5412 = distinct !DISubprogram(name: "arch_atomic_set", scope: !2511, file: !2511, line: 39, type: !5413, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5413 = !DISubroutineType(types: !5414)
!5414 = !{null, !2514, !59}
!5415 = !DILocation(line: 39, column: 55, scope: !5412, inlinedAt: !5416)
!5416 = distinct !DILocation(line: 46, column: 2, scope: !5417, inlinedAt: !5418)
!5417 = distinct !DISubprogram(name: "atomic_set", scope: !2527, file: !2527, line: 43, type: !5413, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5418 = distinct !DILocation(line: 1600, column: 2, scope: !2131)
!5419 = !DILocalVariable(name: "i", arg: 2, scope: !5412, file: !2511, line: 39, type: !59)
!5420 = !DILocation(line: 39, column: 62, scope: !5412, inlinedAt: !5416)
!5421 = !DILocalVariable(name: "v", arg: 1, scope: !5422, file: !2566, line: 84, type: !2569)
!5422 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !2566, file: !2566, line: 84, type: !2567, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5423 = !DILocation(line: 84, column: 74, scope: !5422, inlinedAt: !5424)
!5424 = distinct !DILocation(line: 45, column: 2, scope: !5417, inlinedAt: !5418)
!5425 = !DILocalVariable(name: "size", arg: 2, scope: !5422, file: !2566, line: 84, type: !122)
!5426 = !DILocation(line: 84, column: 84, scope: !5422, inlinedAt: !5424)
!5427 = !DILocalVariable(name: "v", arg: 1, scope: !5417, file: !2527, line: 43, type: !2514)
!5428 = !DILocation(line: 43, column: 22, scope: !5417, inlinedAt: !5418)
!5429 = !DILocalVariable(name: "i", arg: 2, scope: !5417, file: !2527, line: 43, type: !59)
!5430 = !DILocation(line: 43, column: 29, scope: !5417, inlinedAt: !5418)
!5431 = !DILocation(line: 39, column: 55, scope: !5412, inlinedAt: !5432)
!5432 = distinct !DILocation(line: 46, column: 2, scope: !5417, inlinedAt: !5433)
!5433 = distinct !DILocation(line: 1596, column: 2, scope: !2131)
!5434 = !DILocation(line: 39, column: 62, scope: !5412, inlinedAt: !5432)
!5435 = !DILocation(line: 84, column: 74, scope: !5422, inlinedAt: !5436)
!5436 = distinct !DILocation(line: 45, column: 2, scope: !5417, inlinedAt: !5433)
!5437 = !DILocation(line: 84, column: 84, scope: !5422, inlinedAt: !5436)
!5438 = !DILocation(line: 43, column: 22, scope: !5417, inlinedAt: !5433)
!5439 = !DILocation(line: 43, column: 29, scope: !5417, inlinedAt: !5433)
!5440 = !DILocalVariable(name: "dev", arg: 1, scope: !2131, file: !3, line: 1590, type: !6)
!5441 = !DILocation(line: 1590, column: 37, scope: !2131)
!5442 = !DILocation(line: 1592, column: 2, scope: !2131)
!5443 = !DILocation(line: 1592, column: 7, scope: !2131)
!5444 = !DILocation(line: 1592, column: 13, scope: !2131)
!5445 = !DILocation(line: 1592, column: 28, scope: !2131)
!5446 = !DILocation(line: 1593, column: 2, scope: !2131)
!5447 = !DILocation(line: 1593, column: 7, scope: !2131)
!5448 = !DILocation(line: 1593, column: 13, scope: !2131)
!5449 = !DILocation(line: 1593, column: 31, scope: !2131)
!5450 = !DILocation(line: 1595, column: 2, scope: !2131)
!5451 = !DILocation(line: 1595, column: 7, scope: !2131)
!5452 = !DILocation(line: 1595, column: 13, scope: !2131)
!5453 = !DILocation(line: 1595, column: 27, scope: !2131)
!5454 = !DILocation(line: 1596, column: 14, scope: !2131)
!5455 = !DILocation(line: 1596, column: 19, scope: !2131)
!5456 = !DILocation(line: 1596, column: 25, scope: !2131)
!5457 = !DILocation(line: 45, column: 26, scope: !5417, inlinedAt: !5433)
!5458 = !DILocation(line: 86, column: 20, scope: !5422, inlinedAt: !5436)
!5459 = !DILocation(line: 86, column: 23, scope: !5422, inlinedAt: !5436)
!5460 = !DILocation(line: 86, column: 2, scope: !5422, inlinedAt: !5436)
!5461 = !DILocation(line: 87, column: 2, scope: !5422, inlinedAt: !5436)
!5462 = !DILocation(line: 46, column: 18, scope: !5417, inlinedAt: !5433)
!5463 = !DILocation(line: 46, column: 21, scope: !5417, inlinedAt: !5433)
!5464 = !DILocation(line: 41, column: 2, scope: !5465, inlinedAt: !5432)
!5465 = distinct !DILexicalBlock(scope: !5412, file: !2511, line: 41, column: 2)
!5466 = !DILocation(line: 1598, column: 2, scope: !2131)
!5467 = !DILocation(line: 1598, column: 7, scope: !2131)
!5468 = !DILocation(line: 1598, column: 13, scope: !2131)
!5469 = !DILocation(line: 1598, column: 27, scope: !2131)
!5470 = !DILocation(line: 1600, column: 14, scope: !2131)
!5471 = !DILocation(line: 1600, column: 19, scope: !2131)
!5472 = !DILocation(line: 1600, column: 25, scope: !2131)
!5473 = !DILocation(line: 45, column: 26, scope: !5417, inlinedAt: !5418)
!5474 = !DILocation(line: 86, column: 20, scope: !5422, inlinedAt: !5424)
!5475 = !DILocation(line: 86, column: 23, scope: !5422, inlinedAt: !5424)
!5476 = !DILocation(line: 86, column: 2, scope: !5422, inlinedAt: !5424)
!5477 = !DILocation(line: 87, column: 2, scope: !5422, inlinedAt: !5424)
!5478 = !DILocation(line: 46, column: 18, scope: !5417, inlinedAt: !5418)
!5479 = !DILocation(line: 46, column: 21, scope: !5417, inlinedAt: !5418)
!5480 = !DILocation(line: 41, column: 2, scope: !5465, inlinedAt: !5416)
!5481 = !DILocation(line: 1601, column: 29, scope: !2131)
!5482 = !DILocation(line: 1601, column: 2, scope: !2131)
!5483 = !DILocation(line: 1602, column: 2, scope: !2131)
!5484 = !DILocation(line: 1602, column: 7, scope: !2131)
!5485 = !DILocation(line: 1602, column: 13, scope: !2131)
!5486 = !DILocation(line: 1602, column: 26, scope: !2131)
!5487 = !DILocation(line: 1604, column: 2, scope: !2131)
!5488 = !DILocation(line: 1604, column: 7, scope: !2131)
!5489 = !DILocation(line: 1604, column: 13, scope: !2131)
!5490 = !DILocation(line: 1604, column: 29, scope: !2131)
!5491 = !DILocation(line: 1605, column: 2, scope: !2131)
!5492 = !DILocation(line: 1605, column: 7, scope: !2131)
!5493 = !DILocation(line: 1605, column: 13, scope: !2131)
!5494 = !DILocation(line: 1605, column: 21, scope: !2131)
!5495 = !DILocation(line: 1606, column: 2, scope: !2131)
!5496 = !DILocation(line: 1606, column: 7, scope: !2131)
!5497 = !DILocation(line: 1606, column: 13, scope: !2131)
!5498 = !DILocation(line: 1606, column: 29, scope: !2131)
!5499 = !DILocation(line: 1607, column: 2, scope: !2131)
!5500 = !DILocation(line: 1607, column: 2, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !2131, file: !3, line: 1607, column: 2)
!5502 = !DILocation(line: 1609, column: 2, scope: !2131)
!5503 = !DILocation(line: 1609, column: 7, scope: !2131)
!5504 = !DILocation(line: 1609, column: 13, scope: !2131)
!5505 = !DILocation(line: 1609, column: 27, scope: !2131)
!5506 = !DILocation(line: 1610, column: 16, scope: !2131)
!5507 = !DILocation(line: 1610, column: 21, scope: !2131)
!5508 = !DILocation(line: 1610, column: 27, scope: !2131)
!5509 = !DILocation(line: 1610, column: 2, scope: !2131)
!5510 = !DILocation(line: 1611, column: 2, scope: !2131)
!5511 = !DILocation(line: 1611, column: 7, scope: !2131)
!5512 = !DILocation(line: 1611, column: 13, scope: !2131)
!5513 = !DILocation(line: 1611, column: 27, scope: !2131)
!5514 = !DILocation(line: 1611, column: 36, scope: !2131)
!5515 = !DILocation(line: 1613, column: 2, scope: !2131)
!5516 = !DILocation(line: 1613, column: 2, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !2131, file: !3, line: 1613, column: 2)
!5518 = !DILocation(line: 1614, column: 1, scope: !2131)
!5519 = distinct !DISubprogram(name: "pm_suspend_ignore_children", scope: !4536, file: !4536, line: 83, type: !4, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5520 = !DILocalVariable(name: "dev", arg: 1, scope: !5519, file: !4536, line: 83, type: !6)
!5521 = !DILocation(line: 83, column: 62, scope: !5519)
!5522 = !DILocalVariable(name: "enable", arg: 2, scope: !5519, file: !4536, line: 83, type: !915)
!5523 = !DILocation(line: 83, column: 72, scope: !5519)
!5524 = !DILocation(line: 85, column: 31, scope: !5519)
!5525 = !DILocation(line: 85, column: 2, scope: !5519)
!5526 = !DILocation(line: 85, column: 7, scope: !5519)
!5527 = !DILocation(line: 85, column: 13, scope: !5519)
!5528 = !DILocation(line: 85, column: 29, scope: !5519)
!5529 = !DILocation(line: 86, column: 1, scope: !5519)
!5530 = distinct !DISubprogram(name: "__init_work", scope: !1241, file: !1241, line: 215, type: !5531, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5531 = !DISubroutineType(types: !5532)
!5532 = !{null, !1250, !59}
!5533 = !DILocalVariable(name: "work", arg: 1, scope: !5530, file: !1241, line: 215, type: !1250)
!5534 = !DILocation(line: 215, column: 52, scope: !5530)
!5535 = !DILocalVariable(name: "onstack", arg: 2, scope: !5530, file: !1241, line: 215, type: !59)
!5536 = !DILocation(line: 215, column: 62, scope: !5530)
!5537 = !DILocation(line: 215, column: 73, scope: !5530)
!5538 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !5539, file: !5539, line: 33, type: !5540, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5539 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!5540 = !DISubroutineType(types: !5541)
!5541 = !{null, !23}
!5542 = !DILocalVariable(name: "list", arg: 1, scope: !5538, file: !5539, line: 33, type: !23)
!5543 = !DILocation(line: 33, column: 53, scope: !5538)
!5544 = !DILocation(line: 35, column: 2, scope: !5538)
!5545 = !DILocation(line: 35, column: 2, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5538, file: !5539, line: 35, column: 2)
!5547 = !DILocation(line: 35, column: 2, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5546, file: !5539, line: 35, column: 2)
!5549 = !DILocation(line: 35, column: 2, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5546, file: !5539, line: 35, column: 2)
!5551 = !DILocation(line: 36, column: 15, scope: !5538)
!5552 = !DILocation(line: 36, column: 2, scope: !5538)
!5553 = !DILocation(line: 36, column: 8, scope: !5538)
!5554 = !DILocation(line: 36, column: 13, scope: !5538)
!5555 = !DILocation(line: 37, column: 1, scope: !5538)
!5556 = distinct !DISubprogram(name: "pm_runtime_work", scope: !3, file: !3, line: 884, type: !1248, scopeLine: 885, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5557 = !DILocation(line: 402, column: 57, scope: !2282, inlinedAt: !5558)
!5558 = distinct !DILocation(line: 916, column: 2, scope: !5556)
!5559 = !DILocation(line: 377, column: 55, scope: !2291, inlinedAt: !5560)
!5560 = distinct !DILocation(line: 889, column: 2, scope: !5556)
!5561 = !DILocalVariable(name: "work", arg: 1, scope: !5556, file: !3, line: 884, type: !1250)
!5562 = !DILocation(line: 884, column: 49, scope: !5556)
!5563 = !DILocalVariable(name: "dev", scope: !5556, file: !3, line: 886, type: !6)
!5564 = !DILocation(line: 886, column: 17, scope: !5556)
!5565 = !DILocalVariable(name: "__mptr", scope: !5566, file: !3, line: 886, type: !149)
!5566 = distinct !DILexicalBlock(scope: !5556, file: !3, line: 886, column: 23)
!5567 = !DILocation(line: 886, column: 23, scope: !5566)
!5568 = !DILocation(line: 886, column: 23, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5566, file: !3, line: 886, column: 23)
!5570 = !DILocalVariable(name: "req", scope: !5556, file: !3, line: 887, type: !1851)
!5571 = !DILocation(line: 887, column: 19, scope: !5556)
!5572 = !DILocation(line: 889, column: 17, scope: !5556)
!5573 = !DILocation(line: 889, column: 22, scope: !5556)
!5574 = !DILocation(line: 889, column: 28, scope: !5556)
!5575 = !DILocation(line: 379, column: 2, scope: !2306, inlinedAt: !5560)
!5576 = !DILocation(line: 379, column: 2, scope: !2309, inlinedAt: !5560)
!5577 = !DILocation(line: 379, column: 2, scope: !2312, inlinedAt: !5560)
!5578 = !DILocation(line: 891, column: 7, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5556, file: !3, line: 891, column: 6)
!5580 = !DILocation(line: 891, column: 12, scope: !5579)
!5581 = !DILocation(line: 891, column: 18, scope: !5579)
!5582 = !DILocation(line: 891, column: 6, scope: !5556)
!5583 = !DILocation(line: 892, column: 3, scope: !5579)
!5584 = !DILocation(line: 894, column: 8, scope: !5556)
!5585 = !DILocation(line: 894, column: 13, scope: !5556)
!5586 = !DILocation(line: 894, column: 19, scope: !5556)
!5587 = !DILocation(line: 894, column: 6, scope: !5556)
!5588 = !DILocation(line: 895, column: 2, scope: !5556)
!5589 = !DILocation(line: 895, column: 7, scope: !5556)
!5590 = !DILocation(line: 895, column: 13, scope: !5556)
!5591 = !DILocation(line: 895, column: 21, scope: !5556)
!5592 = !DILocation(line: 896, column: 2, scope: !5556)
!5593 = !DILocation(line: 896, column: 7, scope: !5556)
!5594 = !DILocation(line: 896, column: 13, scope: !5556)
!5595 = !DILocation(line: 896, column: 29, scope: !5556)
!5596 = !DILocation(line: 898, column: 10, scope: !5556)
!5597 = !DILocation(line: 898, column: 2, scope: !5556)
!5598 = !DILocation(line: 900, column: 3, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5556, file: !3, line: 898, column: 15)
!5600 = !DILocation(line: 902, column: 12, scope: !5599)
!5601 = !DILocation(line: 902, column: 3, scope: !5599)
!5602 = !DILocation(line: 903, column: 3, scope: !5599)
!5603 = !DILocation(line: 905, column: 15, scope: !5599)
!5604 = !DILocation(line: 905, column: 3, scope: !5599)
!5605 = !DILocation(line: 906, column: 3, scope: !5599)
!5606 = !DILocation(line: 908, column: 15, scope: !5599)
!5607 = !DILocation(line: 908, column: 3, scope: !5599)
!5608 = !DILocation(line: 909, column: 3, scope: !5599)
!5609 = !DILocation(line: 911, column: 14, scope: !5599)
!5610 = !DILocation(line: 911, column: 3, scope: !5599)
!5611 = !DILocation(line: 912, column: 3, scope: !5599)
!5612 = !DILocation(line: 913, column: 2, scope: !5599)
!5613 = !DILabel(scope: !5556, name: "out", file: !3, line: 915)
!5614 = !DILocation(line: 915, column: 2, scope: !5556)
!5615 = !DILocation(line: 916, column: 19, scope: !5556)
!5616 = !DILocation(line: 916, column: 24, scope: !5556)
!5617 = !DILocation(line: 916, column: 30, scope: !5556)
!5618 = !DILocation(line: 404, column: 2, scope: !2326, inlinedAt: !5558)
!5619 = !DILocation(line: 404, column: 2, scope: !2329, inlinedAt: !5558)
!5620 = !DILocation(line: 404, column: 2, scope: !2332, inlinedAt: !5558)
!5621 = !DILocation(line: 917, column: 1, scope: !5556)
!5622 = distinct !DISubprogram(name: "pm_suspend_timer_fn", scope: !3, file: !3, line: 925, type: !416, scopeLine: 926, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5623 = !DILocation(line: 407, column: 64, scope: !2150, inlinedAt: !5624)
!5624 = distinct !DILocation(line: 944, column: 2, scope: !5622)
!5625 = !DILocation(line: 407, column: 84, scope: !2150, inlinedAt: !5624)
!5626 = !DILocation(line: 327, column: 67, scope: !2160, inlinedAt: !5627)
!5627 = distinct !DILocation(line: 931, column: 2, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5629, file: !3, line: 931, column: 2)
!5629 = distinct !DILexicalBlock(scope: !5630, file: !3, line: 931, column: 2)
!5630 = distinct !DILexicalBlock(scope: !5631, file: !3, line: 931, column: 2)
!5631 = distinct !DILexicalBlock(scope: !5632, file: !3, line: 931, column: 2)
!5632 = distinct !DILexicalBlock(scope: !5622, file: !3, line: 931, column: 2)
!5633 = !DILocalVariable(name: "timer", arg: 1, scope: !5622, file: !3, line: 925, type: !422)
!5634 = !DILocation(line: 925, column: 66, scope: !5622)
!5635 = !DILocalVariable(name: "dev", scope: !5622, file: !3, line: 927, type: !6)
!5636 = !DILocation(line: 927, column: 17, scope: !5622)
!5637 = !DILocalVariable(name: "__mptr", scope: !5638, file: !3, line: 927, type: !149)
!5638 = distinct !DILexicalBlock(scope: !5622, file: !3, line: 927, column: 23)
!5639 = !DILocation(line: 927, column: 23, scope: !5638)
!5640 = !DILocation(line: 927, column: 23, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 927, column: 23)
!5642 = !DILocalVariable(name: "flags", scope: !5622, file: !3, line: 928, type: !125)
!5643 = !DILocation(line: 928, column: 16, scope: !5622)
!5644 = !DILocalVariable(name: "expires", scope: !5622, file: !3, line: 929, type: !195)
!5645 = !DILocation(line: 929, column: 6, scope: !5622)
!5646 = !DILocation(line: 931, column: 2, scope: !5622)
!5647 = !DILocation(line: 931, column: 2, scope: !5632)
!5648 = !DILocalVariable(name: "__dummy", scope: !5649, file: !3, line: 931, type: !125)
!5649 = distinct !DILexicalBlock(scope: !5631, file: !3, line: 931, column: 2)
!5650 = !DILocation(line: 931, column: 2, scope: !5649)
!5651 = !DILocalVariable(name: "__dummy2", scope: !5649, file: !3, line: 931, type: !125)
!5652 = !DILocation(line: 931, column: 2, scope: !5631)
!5653 = !DILocation(line: 931, column: 2, scope: !5630)
!5654 = !DILocation(line: 931, column: 2, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5630, file: !3, line: 931, column: 2)
!5656 = !DILocalVariable(name: "__dummy", scope: !5657, file: !3, line: 931, type: !125)
!5657 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 931, column: 2)
!5658 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 931, column: 2)
!5659 = !DILocation(line: 931, column: 2, scope: !5657)
!5660 = !DILocalVariable(name: "__dummy2", scope: !5657, file: !3, line: 931, type: !125)
!5661 = !DILocation(line: 931, column: 2, scope: !5658)
!5662 = !DILocation(line: 931, column: 2, scope: !5629)
!5663 = !{i32 -2143524965}
!5664 = !DILocation(line: 931, column: 2, scope: !5628)
!5665 = !DILocation(line: 329, column: 10, scope: !2160, inlinedAt: !5627)
!5666 = !DILocation(line: 329, column: 16, scope: !2160, inlinedAt: !5627)
!5667 = !DILocation(line: 933, column: 12, scope: !5622)
!5668 = !DILocation(line: 933, column: 17, scope: !5622)
!5669 = !DILocation(line: 933, column: 23, scope: !5622)
!5670 = !DILocation(line: 933, column: 10, scope: !5622)
!5671 = !DILocation(line: 938, column: 6, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5622, file: !3, line: 938, column: 6)
!5673 = !DILocation(line: 938, column: 14, scope: !5672)
!5674 = !DILocation(line: 938, column: 18, scope: !5672)
!5675 = !DILocation(line: 938, column: 21, scope: !5672)
!5676 = !DILocation(line: 938, column: 31, scope: !5672)
!5677 = !DILocation(line: 938, column: 29, scope: !5672)
!5678 = !DILocation(line: 938, column: 6, scope: !5622)
!5679 = !DILocation(line: 939, column: 3, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5672, file: !3, line: 938, column: 57)
!5681 = !DILocation(line: 939, column: 8, scope: !5680)
!5682 = !DILocation(line: 939, column: 14, scope: !5680)
!5683 = !DILocation(line: 939, column: 28, scope: !5680)
!5684 = !DILocation(line: 940, column: 15, scope: !5680)
!5685 = !DILocation(line: 940, column: 20, scope: !5680)
!5686 = !DILocation(line: 940, column: 25, scope: !5680)
!5687 = !DILocation(line: 940, column: 31, scope: !5680)
!5688 = !DILocation(line: 940, column: 3, scope: !5680)
!5689 = !DILocation(line: 942, column: 2, scope: !5680)
!5690 = !DILocation(line: 944, column: 26, scope: !5622)
!5691 = !DILocation(line: 944, column: 31, scope: !5622)
!5692 = !DILocation(line: 944, column: 37, scope: !5622)
!5693 = !DILocation(line: 944, column: 43, scope: !5622)
!5694 = !DILocation(line: 409, column: 2, scope: !2215, inlinedAt: !5624)
!5695 = !DILocation(line: 409, column: 2, scope: !2220, inlinedAt: !5624)
!5696 = !DILocation(line: 409, column: 2, scope: !2221, inlinedAt: !5624)
!5697 = !DILocation(line: 409, column: 2, scope: !2228, inlinedAt: !5624)
!5698 = !DILocation(line: 409, column: 2, scope: !2231, inlinedAt: !5624)
!5699 = !DILocation(line: 946, column: 2, scope: !5622)
!5700 = distinct !DISubprogram(name: "pm_runtime_reinit", scope: !3, file: !3, line: 1620, type: !1568, scopeLine: 1621, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5701 = !DILocation(line: 402, column: 57, scope: !2282, inlinedAt: !5702)
!5702 = distinct !DILocation(line: 1628, column: 4, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5704, file: !3, line: 1625, column: 28)
!5704 = distinct !DILexicalBlock(scope: !5705, file: !3, line: 1625, column: 7)
!5705 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 1622, column: 32)
!5706 = distinct !DILexicalBlock(scope: !5700, file: !3, line: 1622, column: 6)
!5707 = !DILocation(line: 377, column: 55, scope: !2291, inlinedAt: !5708)
!5708 = distinct !DILocation(line: 1626, column: 4, scope: !5703)
!5709 = !DILocalVariable(name: "dev", arg: 1, scope: !5700, file: !3, line: 1620, type: !6)
!5710 = !DILocation(line: 1620, column: 39, scope: !5700)
!5711 = !DILocation(line: 1622, column: 26, scope: !5706)
!5712 = !DILocation(line: 1622, column: 7, scope: !5706)
!5713 = !DILocation(line: 1622, column: 6, scope: !5700)
!5714 = !DILocation(line: 1623, column: 7, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5705, file: !3, line: 1623, column: 7)
!5716 = !DILocation(line: 1623, column: 12, scope: !5715)
!5717 = !DILocation(line: 1623, column: 18, scope: !5715)
!5718 = !DILocation(line: 1623, column: 33, scope: !5715)
!5719 = !DILocation(line: 1623, column: 7, scope: !5705)
!5720 = !DILocation(line: 1624, column: 29, scope: !5715)
!5721 = !DILocation(line: 1624, column: 4, scope: !5715)
!5722 = !DILocation(line: 1625, column: 7, scope: !5704)
!5723 = !DILocation(line: 1625, column: 12, scope: !5704)
!5724 = !DILocation(line: 1625, column: 18, scope: !5704)
!5725 = !DILocation(line: 1625, column: 7, scope: !5705)
!5726 = !DILocation(line: 1626, column: 19, scope: !5703)
!5727 = !DILocation(line: 1626, column: 24, scope: !5703)
!5728 = !DILocation(line: 1626, column: 30, scope: !5703)
!5729 = !DILocation(line: 379, column: 2, scope: !2306, inlinedAt: !5708)
!5730 = !DILocation(line: 379, column: 2, scope: !2309, inlinedAt: !5708)
!5731 = !DILocation(line: 379, column: 2, scope: !2312, inlinedAt: !5708)
!5732 = !DILocation(line: 1627, column: 4, scope: !5703)
!5733 = !DILocation(line: 1627, column: 9, scope: !5703)
!5734 = !DILocation(line: 1627, column: 15, scope: !5703)
!5735 = !DILocation(line: 1627, column: 24, scope: !5703)
!5736 = !DILocation(line: 1628, column: 21, scope: !5703)
!5737 = !DILocation(line: 1628, column: 26, scope: !5703)
!5738 = !DILocation(line: 1628, column: 32, scope: !5703)
!5739 = !DILocation(line: 404, column: 2, scope: !2326, inlinedAt: !5702)
!5740 = !DILocation(line: 404, column: 2, scope: !2329, inlinedAt: !5702)
!5741 = !DILocation(line: 404, column: 2, scope: !2332, inlinedAt: !5702)
!5742 = !DILocation(line: 1629, column: 8, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5703, file: !3, line: 1629, column: 8)
!5744 = !DILocation(line: 1629, column: 13, scope: !5743)
!5745 = !DILocation(line: 1629, column: 8, scope: !5703)
!5746 = !DILocation(line: 1630, column: 20, scope: !5743)
!5747 = !DILocation(line: 1630, column: 25, scope: !5743)
!5748 = !DILocation(line: 1630, column: 5, scope: !5743)
!5749 = !DILocation(line: 1631, column: 3, scope: !5703)
!5750 = !DILocation(line: 1632, column: 2, scope: !5705)
!5751 = !DILocation(line: 1633, column: 1, scope: !5700)
!5752 = distinct !DISubprogram(name: "pm_runtime_enabled", scope: !4536, file: !4536, line: 170, type: !5753, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5753 = !DISubroutineType(types: !5754)
!5754 = !{!915, !6}
!5755 = !DILocalVariable(name: "dev", arg: 1, scope: !5752, file: !4536, line: 170, type: !6)
!5756 = !DILocation(line: 170, column: 54, scope: !5752)
!5757 = !DILocation(line: 172, column: 10, scope: !5752)
!5758 = !DILocation(line: 172, column: 15, scope: !5752)
!5759 = !DILocation(line: 172, column: 21, scope: !5752)
!5760 = !DILocation(line: 172, column: 9, scope: !5752)
!5761 = !DILocation(line: 172, column: 2, scope: !5752)
!5762 = distinct !DISubprogram(name: "pm_runtime_set_suspended", scope: !4536, file: !4536, line: 509, type: !1564, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5763 = !DILocalVariable(name: "dev", arg: 1, scope: !5762, file: !4536, line: 509, type: !6)
!5764 = !DILocation(line: 509, column: 59, scope: !5762)
!5765 = !DILocation(line: 511, column: 33, scope: !5762)
!5766 = !DILocation(line: 511, column: 9, scope: !5762)
!5767 = !DILocation(line: 511, column: 2, scope: !5762)
!5768 = distinct !DISubprogram(name: "pm_runtime_put", scope: !4536, file: !4536, line: 417, type: !1564, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5769 = !DILocalVariable(name: "dev", arg: 1, scope: !5768, file: !4536, line: 417, type: !6)
!5770 = !DILocation(line: 417, column: 49, scope: !5768)
!5771 = !DILocation(line: 419, column: 27, scope: !5768)
!5772 = !DILocation(line: 419, column: 9, scope: !5768)
!5773 = !DILocation(line: 419, column: 2, scope: !5768)
!5774 = distinct !DISubprogram(name: "pm_runtime_remove", scope: !3, file: !3, line: 1639, type: !1568, scopeLine: 1640, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5775 = !DILocalVariable(name: "dev", arg: 1, scope: !5774, file: !3, line: 1639, type: !6)
!5776 = !DILocation(line: 1639, column: 39, scope: !5774)
!5777 = !DILocation(line: 1641, column: 23, scope: !5774)
!5778 = !DILocation(line: 1641, column: 2, scope: !5774)
!5779 = !DILocation(line: 1642, column: 20, scope: !5774)
!5780 = !DILocation(line: 1642, column: 2, scope: !5774)
!5781 = !DILocation(line: 1643, column: 1, scope: !5774)
!5782 = distinct !DISubprogram(name: "pm_runtime_get_suppliers", scope: !3, file: !3, line: 1649, type: !1568, scopeLine: 1650, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5783 = !DILocalVariable(name: "dev", arg: 1, scope: !5782, file: !3, line: 1649, type: !6)
!5784 = !DILocation(line: 1649, column: 46, scope: !5782)
!5785 = !DILocalVariable(name: "link", scope: !5782, file: !3, line: 1651, type: !2105)
!5786 = !DILocation(line: 1651, column: 22, scope: !5782)
!5787 = !DILocalVariable(name: "idx", scope: !5782, file: !3, line: 1652, type: !59)
!5788 = !DILocation(line: 1652, column: 6, scope: !5782)
!5789 = !DILocation(line: 1654, column: 8, scope: !5782)
!5790 = !DILocation(line: 1654, column: 6, scope: !5782)
!5791 = !DILocalVariable(name: "__mptr", scope: !5792, file: !3, line: 1656, type: !149)
!5792 = distinct !DILexicalBlock(scope: !5793, file: !3, line: 1656, column: 2)
!5793 = distinct !DILexicalBlock(scope: !5782, file: !3, line: 1656, column: 2)
!5794 = !DILocation(line: 1656, column: 2, scope: !5792)
!5795 = !DILocation(line: 1656, column: 2, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5792, file: !3, line: 1656, column: 2)
!5797 = !DILocation(line: 1656, column: 2, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5796, file: !3, line: 1656, column: 2)
!5799 = !DILocation(line: 1656, column: 2, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5792, file: !3, line: 1656, column: 2)
!5801 = !DILocation(line: 1656, column: 2, scope: !5793)
!5802 = !DILocation(line: 1656, column: 2, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5793, file: !3, line: 1656, column: 2)
!5804 = !DILocation(line: 1658, column: 7, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5803, file: !3, line: 1658, column: 7)
!5806 = !DILocation(line: 1658, column: 13, scope: !5805)
!5807 = !DILocation(line: 1658, column: 19, scope: !5805)
!5808 = !DILocation(line: 1658, column: 7, scope: !5803)
!5809 = !DILocation(line: 1659, column: 4, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 1658, column: 41)
!5811 = !DILocation(line: 1659, column: 10, scope: !5810)
!5812 = !DILocation(line: 1659, column: 32, scope: !5810)
!5813 = !DILocation(line: 1660, column: 18, scope: !5810)
!5814 = !DILocation(line: 1660, column: 24, scope: !5810)
!5815 = !DILocation(line: 1660, column: 4, scope: !5810)
!5816 = !DILocation(line: 1661, column: 24, scope: !5810)
!5817 = !DILocation(line: 1661, column: 30, scope: !5810)
!5818 = !DILocation(line: 1661, column: 4, scope: !5810)
!5819 = !DILocation(line: 1662, column: 3, scope: !5810)
!5820 = !DILocation(line: 1658, column: 21, scope: !5805)
!5821 = !DILocalVariable(name: "__mptr", scope: !5822, file: !3, line: 1656, type: !149)
!5822 = distinct !DILexicalBlock(scope: !5803, file: !3, line: 1656, column: 2)
!5823 = !DILocation(line: 1656, column: 2, scope: !5822)
!5824 = !DILocation(line: 1656, column: 2, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5822, file: !3, line: 1656, column: 2)
!5826 = !DILocation(line: 1656, column: 2, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5825, file: !3, line: 1656, column: 2)
!5828 = !DILocation(line: 1656, column: 2, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5822, file: !3, line: 1656, column: 2)
!5830 = distinct !{!5830, !5801, !5831}
!5831 = !DILocation(line: 1662, column: 3, scope: !5793)
!5832 = !DILocation(line: 1664, column: 27, scope: !5782)
!5833 = !DILocation(line: 1664, column: 2, scope: !5782)
!5834 = !DILocation(line: 1665, column: 1, scope: !5782)
!5835 = distinct !DISubprogram(name: "refcount_inc", scope: !341, file: !341, line: 265, type: !5836, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5836 = !DISubroutineType(types: !5837)
!5837 = !{null, !5838}
!5838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!5839 = !DILocalVariable(name: "r", arg: 1, scope: !5835, file: !341, line: 265, type: !5838)
!5840 = !DILocation(line: 265, column: 45, scope: !5835)
!5841 = !DILocation(line: 267, column: 17, scope: !5835)
!5842 = !DILocation(line: 267, column: 2, scope: !5835)
!5843 = !DILocation(line: 268, column: 1, scope: !5835)
!5844 = distinct !DISubprogram(name: "pm_runtime_put_suppliers", scope: !3, file: !3, line: 1671, type: !1568, scopeLine: 1672, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5845 = !DILocalVariable(name: "dev", arg: 1, scope: !5844, file: !3, line: 1671, type: !6)
!5846 = !DILocation(line: 1671, column: 46, scope: !5844)
!5847 = !DILocalVariable(name: "link", scope: !5844, file: !3, line: 1673, type: !2105)
!5848 = !DILocation(line: 1673, column: 22, scope: !5844)
!5849 = !DILocalVariable(name: "idx", scope: !5844, file: !3, line: 1674, type: !59)
!5850 = !DILocation(line: 1674, column: 6, scope: !5844)
!5851 = !DILocation(line: 1676, column: 8, scope: !5844)
!5852 = !DILocation(line: 1676, column: 6, scope: !5844)
!5853 = !DILocalVariable(name: "__mptr", scope: !5854, file: !3, line: 1678, type: !149)
!5854 = distinct !DILexicalBlock(scope: !5855, file: !3, line: 1678, column: 2)
!5855 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 1678, column: 2)
!5856 = !DILocation(line: 1678, column: 2, scope: !5854)
!5857 = !DILocation(line: 1678, column: 2, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5854, file: !3, line: 1678, column: 2)
!5859 = !DILocation(line: 1678, column: 2, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 1678, column: 2)
!5861 = !DILocation(line: 1678, column: 2, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5854, file: !3, line: 1678, column: 2)
!5863 = !DILocation(line: 1678, column: 2, scope: !5855)
!5864 = !DILocation(line: 1678, column: 2, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5855, file: !3, line: 1678, column: 2)
!5866 = !DILocation(line: 1680, column: 7, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 1680, column: 7)
!5868 = !DILocation(line: 1680, column: 13, scope: !5867)
!5869 = !DILocation(line: 1680, column: 7, scope: !5865)
!5870 = !DILocation(line: 1681, column: 4, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5867, file: !3, line: 1680, column: 36)
!5872 = !DILocation(line: 1681, column: 10, scope: !5871)
!5873 = !DILocation(line: 1681, column: 32, scope: !5871)
!5874 = !DILocation(line: 1682, column: 30, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 1682, column: 8)
!5876 = !DILocation(line: 1682, column: 36, scope: !5875)
!5877 = !DILocation(line: 1682, column: 8, scope: !5875)
!5878 = !DILocation(line: 1682, column: 8, scope: !5871)
!5879 = !DILocation(line: 1683, column: 20, scope: !5875)
!5880 = !DILocation(line: 1683, column: 26, scope: !5875)
!5881 = !DILocation(line: 1683, column: 5, scope: !5875)
!5882 = !DILocation(line: 1684, column: 3, scope: !5871)
!5883 = !DILocalVariable(name: "__mptr", scope: !5884, file: !3, line: 1678, type: !149)
!5884 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 1678, column: 2)
!5885 = !DILocation(line: 1678, column: 2, scope: !5884)
!5886 = !DILocation(line: 1678, column: 2, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 1678, column: 2)
!5888 = !DILocation(line: 1678, column: 2, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 1678, column: 2)
!5890 = !DILocation(line: 1678, column: 2, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 1678, column: 2)
!5892 = distinct !{!5892, !5863, !5893}
!5893 = !DILocation(line: 1684, column: 3, scope: !5855)
!5894 = !DILocation(line: 1686, column: 27, scope: !5844)
!5895 = !DILocation(line: 1686, column: 2, scope: !5844)
!5896 = !DILocation(line: 1687, column: 1, scope: !5844)
!5897 = distinct !DISubprogram(name: "pm_runtime_new_link", scope: !3, file: !3, line: 1689, type: !1568, scopeLine: 1690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5898 = !DILocation(line: 402, column: 57, scope: !2282, inlinedAt: !5899)
!5899 = distinct !DILocation(line: 1693, column: 2, scope: !5897)
!5900 = !DILocation(line: 377, column: 55, scope: !2291, inlinedAt: !5901)
!5901 = distinct !DILocation(line: 1691, column: 2, scope: !5897)
!5902 = !DILocalVariable(name: "dev", arg: 1, scope: !5897, file: !3, line: 1689, type: !6)
!5903 = !DILocation(line: 1689, column: 41, scope: !5897)
!5904 = !DILocation(line: 1691, column: 17, scope: !5897)
!5905 = !DILocation(line: 1691, column: 22, scope: !5897)
!5906 = !DILocation(line: 1691, column: 28, scope: !5897)
!5907 = !DILocation(line: 379, column: 2, scope: !2306, inlinedAt: !5901)
!5908 = !DILocation(line: 379, column: 2, scope: !2309, inlinedAt: !5901)
!5909 = !DILocation(line: 379, column: 2, scope: !2312, inlinedAt: !5901)
!5910 = !DILocation(line: 1692, column: 2, scope: !5897)
!5911 = !DILocation(line: 1692, column: 7, scope: !5897)
!5912 = !DILocation(line: 1692, column: 13, scope: !5897)
!5913 = !DILocation(line: 1692, column: 24, scope: !5897)
!5914 = !DILocation(line: 1693, column: 19, scope: !5897)
!5915 = !DILocation(line: 1693, column: 24, scope: !5897)
!5916 = !DILocation(line: 1693, column: 30, scope: !5897)
!5917 = !DILocation(line: 404, column: 2, scope: !2326, inlinedAt: !5899)
!5918 = !DILocation(line: 404, column: 2, scope: !2329, inlinedAt: !5899)
!5919 = !DILocation(line: 404, column: 2, scope: !2332, inlinedAt: !5899)
!5920 = !DILocation(line: 1694, column: 1, scope: !5897)
!5921 = distinct !DISubprogram(name: "pm_runtime_drop_link", scope: !3, file: !3, line: 1712, type: !5922, scopeLine: 1713, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5922 = !DISubroutineType(types: !5923)
!5923 = !{null, !2105}
!5924 = !DILocalVariable(name: "link", arg: 1, scope: !5921, file: !3, line: 1712, type: !2105)
!5925 = !DILocation(line: 1712, column: 47, scope: !5921)
!5926 = !DILocation(line: 1714, column: 8, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5921, file: !3, line: 1714, column: 6)
!5928 = !DILocation(line: 1714, column: 14, scope: !5927)
!5929 = !DILocation(line: 1714, column: 20, scope: !5927)
!5930 = !DILocation(line: 1714, column: 6, scope: !5921)
!5931 = !DILocation(line: 1715, column: 3, scope: !5927)
!5932 = !DILocation(line: 1717, column: 29, scope: !5921)
!5933 = !DILocation(line: 1717, column: 35, scope: !5921)
!5934 = !DILocation(line: 1717, column: 2, scope: !5921)
!5935 = !DILocation(line: 1719, column: 2, scope: !5921)
!5936 = !DILocation(line: 1719, column: 31, scope: !5921)
!5937 = !DILocation(line: 1719, column: 37, scope: !5921)
!5938 = !DILocation(line: 1719, column: 9, scope: !5921)
!5939 = !DILocation(line: 1720, column: 18, scope: !5921)
!5940 = !DILocation(line: 1720, column: 24, scope: !5921)
!5941 = !DILocation(line: 1720, column: 3, scope: !5921)
!5942 = distinct !{!5942, !5935, !5943}
!5943 = !DILocation(line: 1720, column: 32, scope: !5921)
!5944 = !DILocation(line: 1721, column: 1, scope: !5921)
!5945 = distinct !DISubprogram(name: "pm_runtime_drop_link_count", scope: !3, file: !3, line: 1696, type: !1568, scopeLine: 1697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5946 = !DILocation(line: 402, column: 57, scope: !2282, inlinedAt: !5947)
!5947 = distinct !DILocation(line: 1701, column: 2, scope: !5945)
!5948 = !DILocation(line: 377, column: 55, scope: !2291, inlinedAt: !5949)
!5949 = distinct !DILocation(line: 1698, column: 2, scope: !5945)
!5950 = !DILocalVariable(name: "dev", arg: 1, scope: !5945, file: !3, line: 1696, type: !6)
!5951 = !DILocation(line: 1696, column: 55, scope: !5945)
!5952 = !DILocation(line: 1698, column: 17, scope: !5945)
!5953 = !DILocation(line: 1698, column: 22, scope: !5945)
!5954 = !DILocation(line: 1698, column: 28, scope: !5945)
!5955 = !DILocation(line: 379, column: 2, scope: !2306, inlinedAt: !5949)
!5956 = !DILocation(line: 379, column: 2, scope: !2309, inlinedAt: !5949)
!5957 = !DILocation(line: 379, column: 2, scope: !2312, inlinedAt: !5949)
!5958 = !DILocalVariable(name: "__ret_warn_on", scope: !5959, file: !3, line: 1699, type: !59)
!5959 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 1699, column: 2)
!5960 = !DILocation(line: 1699, column: 2, scope: !5959)
!5961 = !DILocation(line: 1699, column: 2, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5959, file: !3, line: 1699, column: 2)
!5963 = !DILocation(line: 1699, column: 2, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5962, file: !3, line: 1699, column: 2)
!5965 = !DILocation(line: 1699, column: 2, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5964, file: !3, line: 1699, column: 2)
!5967 = !DILocation(line: 1699, column: 2, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5964, file: !3, line: 1699, column: 2)
!5969 = !{i32 -2143469183, i32 -2143469154, i32 -2143469108, i32 -2143469050, i32 -2143468996, i32 -2143468942, i32 -2143468887, i32 -2143468856}
!5970 = !DILocation(line: 1699, column: 2, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5964, file: !3, line: 1699, column: 2)
!5972 = !{i32 -2143468445, i32 -2143468438, i32 -2143468386, i32 -2143468355, i32 -2143468325}
!5973 = !DILocation(line: 1699, column: 2, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5964, file: !3, line: 1699, column: 2)
!5975 = !DILocation(line: 1700, column: 2, scope: !5945)
!5976 = !DILocation(line: 1700, column: 7, scope: !5945)
!5977 = !DILocation(line: 1700, column: 13, scope: !5945)
!5978 = !DILocation(line: 1700, column: 24, scope: !5945)
!5979 = !DILocation(line: 1701, column: 19, scope: !5945)
!5980 = !DILocation(line: 1701, column: 24, scope: !5945)
!5981 = !DILocation(line: 1701, column: 30, scope: !5945)
!5982 = !DILocation(line: 404, column: 2, scope: !2326, inlinedAt: !5947)
!5983 = !DILocation(line: 404, column: 2, scope: !2329, inlinedAt: !5947)
!5984 = !DILocation(line: 404, column: 2, scope: !2332, inlinedAt: !5947)
!5985 = !DILocation(line: 1702, column: 1, scope: !5945)
!5986 = distinct !DISubprogram(name: "pm_runtime_force_suspend", scope: !3, file: !3, line: 1747, type: !1564, scopeLine: 1748, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!5987 = !DILocalVariable(name: "dev", arg: 1, scope: !5986, file: !3, line: 1747, type: !6)
!5988 = !DILocation(line: 1747, column: 45, scope: !5986)
!5989 = !DILocalVariable(name: "callback", scope: !5986, file: !3, line: 1749, type: !1563)
!5990 = !DILocation(line: 1749, column: 8, scope: !5986)
!5991 = !DILocalVariable(name: "ret", scope: !5986, file: !3, line: 1750, type: !59)
!5992 = !DILocation(line: 1750, column: 6, scope: !5986)
!5993 = !DILocation(line: 1752, column: 21, scope: !5986)
!5994 = !DILocation(line: 1752, column: 2, scope: !5986)
!5995 = !DILocation(line: 1753, column: 34, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5986, file: !3, line: 1753, column: 6)
!5997 = !DILocation(line: 1753, column: 6, scope: !5996)
!5998 = !DILocation(line: 1753, column: 6, scope: !5986)
!5999 = !DILocation(line: 1754, column: 3, scope: !5996)
!6000 = !DILocation(line: 1756, column: 13, scope: !5986)
!6001 = !DILocation(line: 1756, column: 11, scope: !5986)
!6002 = !DILocation(line: 1758, column: 8, scope: !5986)
!6003 = !DILocation(line: 1758, column: 19, scope: !5986)
!6004 = !DILocation(line: 1758, column: 28, scope: !5986)
!6005 = !DILocation(line: 1758, column: 6, scope: !5986)
!6006 = !DILocation(line: 1759, column: 6, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !5986, file: !3, line: 1759, column: 6)
!6008 = !DILocation(line: 1759, column: 6, scope: !5986)
!6009 = !DILocation(line: 1760, column: 3, scope: !6007)
!6010 = !DILocation(line: 1768, column: 33, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !5986, file: !3, line: 1768, column: 6)
!6012 = !DILocation(line: 1768, column: 6, scope: !6011)
!6013 = !DILocation(line: 1768, column: 6, scope: !5986)
!6014 = !DILocation(line: 1769, column: 28, scope: !6011)
!6015 = !DILocation(line: 1769, column: 3, scope: !6011)
!6016 = !DILocation(line: 1771, column: 27, scope: !6011)
!6017 = !DILocation(line: 1771, column: 3, scope: !6011)
!6018 = !DILocation(line: 1773, column: 2, scope: !5986)
!6019 = !DILabel(scope: !5986, name: "err", file: !3, line: 1775)
!6020 = !DILocation(line: 1775, column: 1, scope: !5986)
!6021 = !DILocation(line: 1776, column: 20, scope: !5986)
!6022 = !DILocation(line: 1776, column: 2, scope: !5986)
!6023 = !DILocation(line: 1777, column: 9, scope: !5986)
!6024 = !DILocation(line: 1777, column: 2, scope: !5986)
!6025 = !DILocation(line: 1778, column: 1, scope: !5986)
!6026 = distinct !DISubprogram(name: "pm_runtime_disable", scope: !4536, file: !4536, line: 524, type: !1568, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6027 = !DILocalVariable(name: "dev", arg: 1, scope: !6026, file: !4536, line: 524, type: !6)
!6028 = !DILocation(line: 524, column: 54, scope: !6026)
!6029 = !DILocation(line: 526, column: 23, scope: !6026)
!6030 = !DILocation(line: 526, column: 2, scope: !6026)
!6031 = !DILocation(line: 527, column: 1, scope: !6026)
!6032 = distinct !DISubprogram(name: "pm_runtime_status_suspended", scope: !4536, file: !4536, line: 155, type: !5753, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6033 = !DILocalVariable(name: "dev", arg: 1, scope: !6032, file: !4536, line: 155, type: !6)
!6034 = !DILocation(line: 155, column: 63, scope: !6032)
!6035 = !DILocation(line: 157, column: 9, scope: !6032)
!6036 = !DILocation(line: 157, column: 14, scope: !6032)
!6037 = !DILocation(line: 157, column: 20, scope: !6032)
!6038 = !DILocation(line: 157, column: 35, scope: !6032)
!6039 = !DILocation(line: 157, column: 2, scope: !6032)
!6040 = distinct !DISubprogram(name: "__rpm_get_callback", scope: !3, file: !3, line: 21, type: !6041, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6041 = !DISubroutineType(types: !6042)
!6042 = !{!2125, !6, !122}
!6043 = !DILocalVariable(name: "dev", arg: 1, scope: !6040, file: !3, line: 21, type: !6)
!6044 = !DILocation(line: 21, column: 56, scope: !6040)
!6045 = !DILocalVariable(name: "cb_offset", arg: 2, scope: !6040, file: !3, line: 21, type: !122)
!6046 = !DILocation(line: 21, column: 68, scope: !6040)
!6047 = !DILocalVariable(name: "cb", scope: !6040, file: !3, line: 23, type: !2125)
!6048 = !DILocation(line: 23, column: 16, scope: !6040)
!6049 = !DILocalVariable(name: "ops", scope: !6040, file: !3, line: 24, type: !1587)
!6050 = !DILocation(line: 24, column: 27, scope: !6040)
!6051 = !DILocation(line: 26, column: 6, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6040, file: !3, line: 26, column: 6)
!6053 = !DILocation(line: 26, column: 11, scope: !6052)
!6054 = !DILocation(line: 26, column: 6, scope: !6040)
!6055 = !DILocation(line: 27, column: 10, scope: !6052)
!6056 = !DILocation(line: 27, column: 15, scope: !6052)
!6057 = !DILocation(line: 27, column: 26, scope: !6052)
!6058 = !DILocation(line: 27, column: 7, scope: !6052)
!6059 = !DILocation(line: 27, column: 3, scope: !6052)
!6060 = !DILocation(line: 28, column: 11, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 28, column: 11)
!6062 = !DILocation(line: 28, column: 16, scope: !6061)
!6063 = !DILocation(line: 28, column: 21, scope: !6061)
!6064 = !DILocation(line: 28, column: 24, scope: !6061)
!6065 = !DILocation(line: 28, column: 29, scope: !6061)
!6066 = !DILocation(line: 28, column: 35, scope: !6061)
!6067 = !DILocation(line: 28, column: 11, scope: !6052)
!6068 = !DILocation(line: 29, column: 9, scope: !6061)
!6069 = !DILocation(line: 29, column: 14, scope: !6061)
!6070 = !DILocation(line: 29, column: 20, scope: !6061)
!6071 = !DILocation(line: 29, column: 7, scope: !6061)
!6072 = !DILocation(line: 29, column: 3, scope: !6061)
!6073 = !DILocation(line: 30, column: 11, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !6061, file: !3, line: 30, column: 11)
!6075 = !DILocation(line: 30, column: 16, scope: !6074)
!6076 = !DILocation(line: 30, column: 22, scope: !6074)
!6077 = !DILocation(line: 30, column: 25, scope: !6074)
!6078 = !DILocation(line: 30, column: 30, scope: !6074)
!6079 = !DILocation(line: 30, column: 37, scope: !6074)
!6080 = !DILocation(line: 30, column: 11, scope: !6061)
!6081 = !DILocation(line: 31, column: 9, scope: !6074)
!6082 = !DILocation(line: 31, column: 14, scope: !6074)
!6083 = !DILocation(line: 31, column: 21, scope: !6074)
!6084 = !DILocation(line: 31, column: 7, scope: !6074)
!6085 = !DILocation(line: 31, column: 3, scope: !6074)
!6086 = !DILocation(line: 32, column: 11, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6074, file: !3, line: 32, column: 11)
!6088 = !DILocation(line: 32, column: 16, scope: !6087)
!6089 = !DILocation(line: 32, column: 20, scope: !6087)
!6090 = !DILocation(line: 32, column: 23, scope: !6087)
!6091 = !DILocation(line: 32, column: 28, scope: !6087)
!6092 = !DILocation(line: 32, column: 33, scope: !6087)
!6093 = !DILocation(line: 32, column: 11, scope: !6074)
!6094 = !DILocation(line: 33, column: 9, scope: !6087)
!6095 = !DILocation(line: 33, column: 14, scope: !6087)
!6096 = !DILocation(line: 33, column: 19, scope: !6087)
!6097 = !DILocation(line: 33, column: 7, scope: !6087)
!6098 = !DILocation(line: 33, column: 3, scope: !6087)
!6099 = !DILocation(line: 35, column: 7, scope: !6087)
!6100 = !DILocation(line: 37, column: 6, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6040, file: !3, line: 37, column: 6)
!6102 = !DILocation(line: 37, column: 6, scope: !6040)
!6103 = !DILocation(line: 38, column: 35, scope: !6101)
!6104 = !DILocation(line: 38, column: 27, scope: !6101)
!6105 = !DILocation(line: 38, column: 41, scope: !6101)
!6106 = !DILocation(line: 38, column: 39, scope: !6101)
!6107 = !DILocation(line: 38, column: 9, scope: !6101)
!6108 = !DILocation(line: 38, column: 8, scope: !6101)
!6109 = !DILocation(line: 38, column: 6, scope: !6101)
!6110 = !DILocation(line: 38, column: 3, scope: !6101)
!6111 = !DILocation(line: 40, column: 6, scope: !6101)
!6112 = !DILocation(line: 42, column: 7, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6040, file: !3, line: 42, column: 6)
!6114 = !DILocation(line: 42, column: 10, scope: !6113)
!6115 = !DILocation(line: 42, column: 13, scope: !6113)
!6116 = !DILocation(line: 42, column: 18, scope: !6113)
!6117 = !DILocation(line: 42, column: 25, scope: !6113)
!6118 = !DILocation(line: 42, column: 28, scope: !6113)
!6119 = !DILocation(line: 42, column: 33, scope: !6113)
!6120 = !DILocation(line: 42, column: 41, scope: !6113)
!6121 = !DILocation(line: 42, column: 6, scope: !6040)
!6122 = !DILocation(line: 43, column: 35, scope: !6113)
!6123 = !DILocation(line: 43, column: 40, scope: !6113)
!6124 = !DILocation(line: 43, column: 48, scope: !6113)
!6125 = !DILocation(line: 43, column: 27, scope: !6113)
!6126 = !DILocation(line: 43, column: 53, scope: !6113)
!6127 = !DILocation(line: 43, column: 51, scope: !6113)
!6128 = !DILocation(line: 43, column: 9, scope: !6113)
!6129 = !DILocation(line: 43, column: 8, scope: !6113)
!6130 = !DILocation(line: 43, column: 6, scope: !6113)
!6131 = !DILocation(line: 43, column: 3, scope: !6113)
!6132 = !DILocation(line: 45, column: 9, scope: !6040)
!6133 = !DILocation(line: 45, column: 2, scope: !6040)
!6134 = distinct !DISubprogram(name: "pm_runtime_need_not_resume", scope: !3, file: !3, line: 1723, type: !5753, scopeLine: 1724, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6135 = !DILocation(line: 23, column: 61, scope: !2543, inlinedAt: !6136)
!6136 = distinct !DILocation(line: 28, column: 9, scope: !2981, inlinedAt: !6137)
!6137 = distinct !DILocation(line: 1726, column: 4, scope: !6134)
!6138 = !DILocation(line: 69, column: 73, scope: !2988, inlinedAt: !6139)
!6139 = distinct !DILocation(line: 27, column: 2, scope: !2981, inlinedAt: !6137)
!6140 = !DILocation(line: 69, column: 83, scope: !2988, inlinedAt: !6139)
!6141 = !DILocation(line: 25, column: 29, scope: !2981, inlinedAt: !6137)
!6142 = !DILocation(line: 23, column: 61, scope: !2543, inlinedAt: !6143)
!6143 = distinct !DILocation(line: 28, column: 9, scope: !2981, inlinedAt: !6144)
!6144 = distinct !DILocation(line: 1725, column: 9, scope: !6134)
!6145 = !DILocation(line: 69, column: 73, scope: !2988, inlinedAt: !6146)
!6146 = distinct !DILocation(line: 27, column: 2, scope: !2981, inlinedAt: !6144)
!6147 = !DILocation(line: 69, column: 83, scope: !2988, inlinedAt: !6146)
!6148 = !DILocation(line: 25, column: 29, scope: !2981, inlinedAt: !6144)
!6149 = !DILocalVariable(name: "dev", arg: 1, scope: !6134, file: !3, line: 1723, type: !6)
!6150 = !DILocation(line: 1723, column: 55, scope: !6134)
!6151 = !DILocation(line: 1725, column: 22, scope: !6134)
!6152 = !DILocation(line: 1725, column: 27, scope: !6134)
!6153 = !DILocation(line: 1725, column: 33, scope: !6134)
!6154 = !DILocation(line: 27, column: 25, scope: !2981, inlinedAt: !6144)
!6155 = !DILocation(line: 71, column: 19, scope: !2988, inlinedAt: !6146)
!6156 = !DILocation(line: 71, column: 22, scope: !2988, inlinedAt: !6146)
!6157 = !DILocation(line: 71, column: 2, scope: !2988, inlinedAt: !6146)
!6158 = !DILocation(line: 72, column: 2, scope: !2988, inlinedAt: !6146)
!6159 = !DILocation(line: 28, column: 26, scope: !2981, inlinedAt: !6144)
!6160 = !DILocation(line: 29, column: 9, scope: !2543, inlinedAt: !6143)
!6161 = !DILocation(line: 1725, column: 46, scope: !6134)
!6162 = !DILocation(line: 1725, column: 51, scope: !6134)
!6163 = !DILocation(line: 1726, column: 17, scope: !6134)
!6164 = !DILocation(line: 1726, column: 22, scope: !6134)
!6165 = !DILocation(line: 1726, column: 28, scope: !6134)
!6166 = !DILocation(line: 27, column: 25, scope: !2981, inlinedAt: !6137)
!6167 = !DILocation(line: 71, column: 19, scope: !2988, inlinedAt: !6139)
!6168 = !DILocation(line: 71, column: 22, scope: !2988, inlinedAt: !6139)
!6169 = !DILocation(line: 71, column: 2, scope: !2988, inlinedAt: !6139)
!6170 = !DILocation(line: 72, column: 2, scope: !2988, inlinedAt: !6139)
!6171 = !DILocation(line: 28, column: 26, scope: !2981, inlinedAt: !6137)
!6172 = !DILocation(line: 29, column: 9, scope: !2543, inlinedAt: !6136)
!6173 = !DILocation(line: 1726, column: 41, scope: !6134)
!6174 = !DILocation(line: 1726, column: 46, scope: !6134)
!6175 = !DILocation(line: 1727, column: 4, scope: !6134)
!6176 = !DILocation(line: 1727, column: 9, scope: !6134)
!6177 = !DILocation(line: 1727, column: 15, scope: !6134)
!6178 = !DILocation(line: 0, scope: !6134)
!6179 = !DILocation(line: 1725, column: 2, scope: !6134)
!6180 = distinct !DISubprogram(name: "pm_runtime_force_resume", scope: !3, file: !3, line: 1793, type: !1564, scopeLine: 1794, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6181 = !DILocalVariable(name: "dev", arg: 1, scope: !6180, file: !3, line: 1793, type: !6)
!6182 = !DILocation(line: 1793, column: 44, scope: !6180)
!6183 = !DILocalVariable(name: "callback", scope: !6180, file: !3, line: 1795, type: !1563)
!6184 = !DILocation(line: 1795, column: 8, scope: !6180)
!6185 = !DILocalVariable(name: "ret", scope: !6180, file: !3, line: 1796, type: !59)
!6186 = !DILocation(line: 1796, column: 6, scope: !6180)
!6187 = !DILocation(line: 1798, column: 35, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6180, file: !3, line: 1798, column: 6)
!6189 = !DILocation(line: 1798, column: 7, scope: !6188)
!6190 = !DILocation(line: 1798, column: 40, scope: !6188)
!6191 = !DILocation(line: 1798, column: 70, scope: !6188)
!6192 = !DILocation(line: 1798, column: 43, scope: !6188)
!6193 = !DILocation(line: 1798, column: 6, scope: !6180)
!6194 = !DILocation(line: 1799, column: 3, scope: !6188)
!6195 = !DILocation(line: 1805, column: 26, scope: !6180)
!6196 = !DILocation(line: 1805, column: 2, scope: !6180)
!6197 = !DILocation(line: 1807, column: 13, scope: !6180)
!6198 = !DILocation(line: 1807, column: 11, scope: !6180)
!6199 = !DILocation(line: 1809, column: 8, scope: !6180)
!6200 = !DILocation(line: 1809, column: 19, scope: !6180)
!6201 = !DILocation(line: 1809, column: 28, scope: !6180)
!6202 = !DILocation(line: 1809, column: 6, scope: !6180)
!6203 = !DILocation(line: 1810, column: 6, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6180, file: !3, line: 1810, column: 6)
!6205 = !DILocation(line: 1810, column: 6, scope: !6180)
!6206 = !DILocation(line: 1811, column: 28, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 1810, column: 11)
!6208 = !DILocation(line: 1811, column: 3, scope: !6207)
!6209 = !DILocation(line: 1812, column: 3, scope: !6207)
!6210 = !DILocation(line: 1815, column: 28, scope: !6180)
!6211 = !DILocation(line: 1815, column: 2, scope: !6180)
!6212 = !DILabel(scope: !6180, name: "out", file: !3, line: 1816)
!6213 = !DILocation(line: 1816, column: 1, scope: !6180)
!6214 = !DILocation(line: 1817, column: 20, scope: !6180)
!6215 = !DILocation(line: 1817, column: 2, scope: !6180)
!6216 = !DILocation(line: 1818, column: 9, scope: !6180)
!6217 = !DILocation(line: 1818, column: 2, scope: !6180)
!6218 = distinct !DISubprogram(name: "pm_runtime_mark_last_busy", scope: !4536, file: !4536, line: 194, type: !1568, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6219 = !DILocalVariable(name: "dev", arg: 1, scope: !6218, file: !4536, line: 194, type: !6)
!6220 = !DILocation(line: 194, column: 61, scope: !6218)
!6221 = !DILocation(line: 196, column: 2, scope: !6218)
!6222 = !DILocation(line: 196, column: 2, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6218, file: !4536, line: 196, column: 2)
!6224 = !DILocation(line: 196, column: 2, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6223, file: !4536, line: 196, column: 2)
!6226 = !DILocation(line: 196, column: 2, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6223, file: !4536, line: 196, column: 2)
!6228 = !DILocation(line: 197, column: 1, scope: !6218)
!6229 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !2463, file: !2463, line: 656, type: !2735, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6230 = !DILocalVariable(name: "__edi", scope: !6231, file: !2463, line: 658, type: !125)
!6231 = distinct !DILexicalBlock(scope: !6229, file: !2463, line: 658, column: 2)
!6232 = !DILocation(line: 658, column: 2, scope: !6231)
!6233 = !DILocalVariable(name: "__esi", scope: !6231, file: !2463, line: 658, type: !125)
!6234 = !DILocalVariable(name: "__edx", scope: !6231, file: !2463, line: 658, type: !125)
!6235 = !DILocalVariable(name: "__ecx", scope: !6231, file: !2463, line: 658, type: !125)
!6236 = !DILocalVariable(name: "__eax", scope: !6231, file: !2463, line: 658, type: !125)
!6237 = !{i32 -2145747896, i32 -2145747164, i32 -2145746930, i32 -2145746879, i32 -2145746851, i32 -2145746826, i32 -2145747142, i32 -2145747129, i32 -2145746691, i32 -2145746572, i32 -2145747037, i32 -2145747010, i32 -2145746982, i32 -2145746952}
!6238 = !DILocation(line: 659, column: 1, scope: !6229)
!6239 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !2463, file: !2463, line: 661, type: !2735, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6240 = !DILocalVariable(name: "__edi", scope: !6241, file: !2463, line: 663, type: !125)
!6241 = distinct !DILexicalBlock(scope: !6239, file: !2463, line: 663, column: 2)
!6242 = !DILocation(line: 663, column: 2, scope: !6241)
!6243 = !DILocalVariable(name: "__esi", scope: !6241, file: !2463, line: 663, type: !125)
!6244 = !DILocalVariable(name: "__edx", scope: !6241, file: !2463, line: 663, type: !125)
!6245 = !DILocalVariable(name: "__ecx", scope: !6241, file: !2463, line: 663, type: !125)
!6246 = !DILocalVariable(name: "__eax", scope: !6241, file: !2463, line: 663, type: !125)
!6247 = !{i32 -2145745312, i32 -2145744582, i32 -2145744348, i32 -2145744297, i32 -2145744269, i32 -2145744244, i32 -2145744560, i32 -2145744547, i32 -2145744109, i32 -2145743990, i32 -2145744455, i32 -2145744428, i32 -2145744400, i32 -2145744370}
!6248 = !DILocation(line: 664, column: 1, scope: !6239)
!6249 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !2463, file: !2463, line: 646, type: !2464, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6250 = !DILocalVariable(name: "__ret", scope: !6251, file: !2463, line: 648, type: !125)
!6251 = distinct !DILexicalBlock(scope: !6249, file: !2463, line: 648, column: 9)
!6252 = !DILocation(line: 648, column: 9, scope: !6251)
!6253 = !DILocalVariable(name: "__edi", scope: !6251, file: !2463, line: 648, type: !125)
!6254 = !DILocalVariable(name: "__esi", scope: !6251, file: !2463, line: 648, type: !125)
!6255 = !DILocalVariable(name: "__edx", scope: !6251, file: !2463, line: 648, type: !125)
!6256 = !DILocalVariable(name: "__ecx", scope: !6251, file: !2463, line: 648, type: !125)
!6257 = !DILocalVariable(name: "__eax", scope: !6251, file: !2463, line: 648, type: !125)
!6258 = !DILocation(line: 648, column: 9, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6260, file: !2463, line: 648, column: 9)
!6260 = distinct !DILexicalBlock(scope: !6251, file: !2463, line: 648, column: 9)
!6261 = !{i32 -2145754990, i32 -2145752675, i32 -2145752441, i32 -2145752390, i32 -2145752362, i32 -2145752337, i32 -2145752653, i32 -2145752640, i32 -2145752202, i32 -2145752083, i32 -2145752548, i32 -2145752521, i32 -2145752493, i32 -2145752463}
!6262 = !DILocalVariable(name: "__mask", scope: !6263, file: !2463, line: 648, type: !125)
!6263 = distinct !DILexicalBlock(scope: !6259, file: !2463, line: 648, column: 9)
!6264 = !DILocation(line: 648, column: 9, scope: !6263)
!6265 = !DILocation(line: 648, column: 9, scope: !6260)
!6266 = !DILocation(line: 648, column: 2, scope: !6249)
!6267 = distinct !DISubprogram(name: "trace_rpm_suspend_rcuidle", scope: !3219, file: !3219, line: 59, type: !3220, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6268 = !DILocalVariable(name: "dev", arg: 1, scope: !6267, file: !3219, line: 59, type: !6)
!6269 = !DILocation(line: 59, column: 1, scope: !6267)
!6270 = !DILocalVariable(name: "flags", arg: 2, scope: !6267, file: !3219, line: 59, type: !59)
!6271 = distinct !DISubprogram(name: "ns_to_ktime", scope: !412, file: !412, line: 222, type: !6272, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6272 = !DISubroutineType(types: !6273)
!6273 = !{!411, !195}
!6274 = !DILocalVariable(name: "ns", arg: 1, scope: !6271, file: !412, line: 222, type: !195)
!6275 = !DILocation(line: 222, column: 39, scope: !6271)
!6276 = !DILocation(line: 224, column: 9, scope: !6271)
!6277 = !DILocation(line: 224, column: 2, scope: !6271)
!6278 = distinct !DISubprogram(name: "queue_work", scope: !1241, file: !1241, line: 504, type: !6279, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6279 = !DISubroutineType(types: !6280)
!6280 = !{!915, !6281, !1250}
!6281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6282, size: 64)
!6282 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1241, line: 18, flags: DIFlagFwdDecl)
!6283 = !DILocalVariable(name: "wq", arg: 1, scope: !6278, file: !1241, line: 504, type: !6281)
!6284 = !DILocation(line: 504, column: 56, scope: !6278)
!6285 = !DILocalVariable(name: "work", arg: 2, scope: !6278, file: !1241, line: 505, type: !1250)
!6286 = !DILocation(line: 505, column: 30, scope: !6278)
!6287 = !DILocation(line: 507, column: 41, scope: !6278)
!6288 = !DILocation(line: 507, column: 45, scope: !6278)
!6289 = !DILocation(line: 507, column: 9, scope: !6278)
!6290 = !DILocation(line: 507, column: 2, scope: !6278)
!6291 = distinct !DISubprogram(name: "rpm_callback", scope: !3, file: !3, line: 461, type: !6292, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6292 = !DISubroutineType(types: !6293)
!6293 = !{!59, !1563, !6}
!6294 = !DILocalVariable(name: "cb", arg: 1, scope: !6291, file: !3, line: 461, type: !1563)
!6295 = !DILocation(line: 461, column: 31, scope: !6291)
!6296 = !DILocalVariable(name: "dev", arg: 2, scope: !6291, file: !3, line: 461, type: !6)
!6297 = !DILocation(line: 461, column: 68, scope: !6291)
!6298 = !DILocalVariable(name: "retval", scope: !6291, file: !3, line: 463, type: !59)
!6299 = !DILocation(line: 463, column: 6, scope: !6291)
!6300 = !DILocation(line: 465, column: 7, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 465, column: 6)
!6302 = !DILocation(line: 465, column: 6, scope: !6291)
!6303 = !DILocation(line: 466, column: 3, scope: !6301)
!6304 = !DILocation(line: 468, column: 6, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 468, column: 6)
!6306 = !DILocation(line: 468, column: 11, scope: !6305)
!6307 = !DILocation(line: 468, column: 17, scope: !6305)
!6308 = !DILocation(line: 468, column: 6, scope: !6291)
!6309 = !DILocalVariable(name: "noio_flag", scope: !6310, file: !3, line: 469, type: !335)
!6310 = distinct !DILexicalBlock(scope: !6305, file: !3, line: 468, column: 32)
!6311 = !DILocation(line: 469, column: 16, scope: !6310)
!6312 = !DILocation(line: 480, column: 15, scope: !6310)
!6313 = !DILocation(line: 480, column: 13, scope: !6310)
!6314 = !DILocation(line: 481, column: 27, scope: !6310)
!6315 = !DILocation(line: 481, column: 31, scope: !6310)
!6316 = !DILocation(line: 481, column: 12, scope: !6310)
!6317 = !DILocation(line: 481, column: 10, scope: !6310)
!6318 = !DILocation(line: 482, column: 25, scope: !6310)
!6319 = !DILocation(line: 482, column: 3, scope: !6310)
!6320 = !DILocation(line: 483, column: 2, scope: !6310)
!6321 = !DILocation(line: 484, column: 27, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6305, file: !3, line: 483, column: 9)
!6323 = !DILocation(line: 484, column: 31, scope: !6322)
!6324 = !DILocation(line: 484, column: 12, scope: !6322)
!6325 = !DILocation(line: 484, column: 10, scope: !6322)
!6326 = !DILocation(line: 487, column: 29, scope: !6291)
!6327 = !DILocation(line: 487, column: 2, scope: !6291)
!6328 = !DILocation(line: 487, column: 7, scope: !6291)
!6329 = !DILocation(line: 487, column: 13, scope: !6291)
!6330 = !DILocation(line: 487, column: 27, scope: !6291)
!6331 = !DILocation(line: 488, column: 9, scope: !6291)
!6332 = !DILocation(line: 488, column: 16, scope: !6291)
!6333 = !DILocation(line: 488, column: 29, scope: !6291)
!6334 = !DILocation(line: 488, column: 2, scope: !6291)
!6335 = !DILocation(line: 489, column: 1, scope: !6291)
!6336 = distinct !DISubprogram(name: "pm_runtime_deactivate_timer", scope: !3, file: !3, line: 129, type: !1568, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6337 = !DILocalVariable(name: "dev", arg: 1, scope: !6336, file: !3, line: 129, type: !6)
!6338 = !DILocation(line: 129, column: 56, scope: !6336)
!6339 = !DILocation(line: 131, column: 6, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 131, column: 6)
!6341 = !DILocation(line: 131, column: 11, scope: !6340)
!6342 = !DILocation(line: 131, column: 17, scope: !6340)
!6343 = !DILocation(line: 131, column: 31, scope: !6340)
!6344 = !DILocation(line: 131, column: 6, scope: !6336)
!6345 = !DILocation(line: 132, column: 26, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 131, column: 36)
!6347 = !DILocation(line: 132, column: 31, scope: !6346)
!6348 = !DILocation(line: 132, column: 37, scope: !6346)
!6349 = !DILocation(line: 132, column: 3, scope: !6346)
!6350 = !DILocation(line: 133, column: 3, scope: !6346)
!6351 = !DILocation(line: 133, column: 8, scope: !6346)
!6352 = !DILocation(line: 133, column: 14, scope: !6346)
!6353 = !DILocation(line: 133, column: 28, scope: !6346)
!6354 = !DILocation(line: 134, column: 2, scope: !6346)
!6355 = !DILocation(line: 135, column: 1, scope: !6336)
!6356 = distinct !DISubprogram(name: "trace_rpm_return_int_rcuidle", scope: !3219, file: !3219, line: 84, type: !6357, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6357 = !DISubroutineType(types: !6358)
!6358 = !{null, !6, !125, !59}
!6359 = !DILocalVariable(name: "dev", arg: 1, scope: !6356, file: !3219, line: 84, type: !6)
!6360 = !DILocation(line: 84, column: 1, scope: !6356)
!6361 = !DILocalVariable(name: "ip", arg: 2, scope: !6356, file: !3219, line: 84, type: !125)
!6362 = !DILocalVariable(name: "ret", arg: 3, scope: !6356, file: !3219, line: 84, type: !59)
!6363 = distinct !DISubprogram(name: "memalloc_noio_save", scope: !6364, file: !6364, line: 194, type: !6365, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6364 = !DIFile(filename: "./include/linux/sched/mm.h", directory: "/home/lizy2001/genbc/linux")
!6365 = !DISubroutineType(types: !6366)
!6366 = !{!335}
!6367 = !DILocation(line: 15, column: 9, scope: !2489, inlinedAt: !6368)
!6368 = distinct !DILocation(line: 197, column: 2, scope: !6363)
!6369 = !DILocation(line: 15, column: 9, scope: !2497, inlinedAt: !6368)
!6370 = !DILocation(line: 15, column: 9, scope: !2500, inlinedAt: !6368)
!6371 = !DILocation(line: 15, column: 9, scope: !2489, inlinedAt: !6372)
!6372 = distinct !DILocation(line: 196, column: 23, scope: !6363)
!6373 = !DILocation(line: 15, column: 9, scope: !2497, inlinedAt: !6372)
!6374 = !DILocation(line: 15, column: 9, scope: !2500, inlinedAt: !6372)
!6375 = !DILocalVariable(name: "flags", scope: !6363, file: !6364, line: 196, type: !335)
!6376 = !DILocation(line: 196, column: 15, scope: !6363)
!6377 = !DILocation(line: 196, column: 32, scope: !6363)
!6378 = !DILocation(line: 196, column: 38, scope: !6363)
!6379 = !DILocation(line: 197, column: 11, scope: !6363)
!6380 = !DILocation(line: 197, column: 17, scope: !6363)
!6381 = !DILocation(line: 198, column: 9, scope: !6363)
!6382 = !DILocation(line: 198, column: 2, scope: !6363)
!6383 = distinct !DISubprogram(name: "__rpm_callback", scope: !3, file: !3, line: 325, type: !6292, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6384 = !DILocation(line: 377, column: 55, scope: !2291, inlinedAt: !6385)
!6385 = distinct !DILocation(line: 377, column: 3, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6387, file: !3, line: 358, column: 9)
!6387 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 356, column: 6)
!6388 = !DILocation(line: 352, column: 51, scope: !2477, inlinedAt: !6389)
!6389 = distinct !DILocation(line: 357, column: 3, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6387, file: !3, line: 356, column: 27)
!6391 = !DILocation(line: 402, column: 57, scope: !2282, inlinedAt: !6392)
!6392 = distinct !DILocation(line: 334, column: 3, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 333, column: 9)
!6394 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 331, column: 6)
!6395 = !DILocation(line: 392, column: 53, scope: !2485, inlinedAt: !6396)
!6396 = distinct !DILocation(line: 332, column: 3, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 331, column: 27)
!6398 = !DILocalVariable(name: "cb", arg: 1, scope: !6383, file: !3, line: 325, type: !1563)
!6399 = !DILocation(line: 325, column: 33, scope: !6383)
!6400 = !DILocalVariable(name: "dev", arg: 2, scope: !6383, file: !3, line: 325, type: !6)
!6401 = !DILocation(line: 325, column: 70, scope: !6383)
!6402 = !DILocalVariable(name: "retval", scope: !6383, file: !3, line: 328, type: !59)
!6403 = !DILocation(line: 328, column: 6, scope: !6383)
!6404 = !DILocalVariable(name: "idx", scope: !6383, file: !3, line: 328, type: !59)
!6405 = !DILocation(line: 328, column: 14, scope: !6383)
!6406 = !DILocalVariable(name: "use_links", scope: !6383, file: !3, line: 329, type: !915)
!6407 = !DILocation(line: 329, column: 7, scope: !6383)
!6408 = !DILocation(line: 329, column: 19, scope: !6383)
!6409 = !DILocation(line: 329, column: 24, scope: !6383)
!6410 = !DILocation(line: 329, column: 30, scope: !6383)
!6411 = !DILocation(line: 329, column: 42, scope: !6383)
!6412 = !DILocation(line: 331, column: 6, scope: !6394)
!6413 = !DILocation(line: 331, column: 11, scope: !6394)
!6414 = !DILocation(line: 331, column: 17, scope: !6394)
!6415 = !DILocation(line: 331, column: 6, scope: !6383)
!6416 = !DILocation(line: 332, column: 16, scope: !6397)
!6417 = !DILocation(line: 332, column: 21, scope: !6397)
!6418 = !DILocation(line: 332, column: 27, scope: !6397)
!6419 = !DILocation(line: 394, column: 2, scope: !2728, inlinedAt: !6396)
!6420 = !DILocation(line: 394, column: 2, scope: !2731, inlinedAt: !6396)
!6421 = !DILocation(line: 333, column: 2, scope: !6397)
!6422 = !DILocation(line: 334, column: 20, scope: !6393)
!6423 = !DILocation(line: 334, column: 25, scope: !6393)
!6424 = !DILocation(line: 334, column: 31, scope: !6393)
!6425 = !DILocation(line: 404, column: 2, scope: !2326, inlinedAt: !6392)
!6426 = !DILocation(line: 404, column: 2, scope: !2329, inlinedAt: !6392)
!6427 = !DILocation(line: 404, column: 2, scope: !2332, inlinedAt: !6392)
!6428 = !DILocation(line: 343, column: 7, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6393, file: !3, line: 343, column: 7)
!6430 = !DILocation(line: 343, column: 17, scope: !6429)
!6431 = !DILocation(line: 343, column: 20, scope: !6429)
!6432 = !DILocation(line: 343, column: 25, scope: !6429)
!6433 = !DILocation(line: 343, column: 31, scope: !6429)
!6434 = !DILocation(line: 343, column: 46, scope: !6429)
!6435 = !DILocation(line: 343, column: 7, scope: !6393)
!6436 = !DILocation(line: 344, column: 10, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6429, file: !3, line: 343, column: 63)
!6438 = !DILocation(line: 344, column: 8, scope: !6437)
!6439 = !DILocation(line: 346, column: 31, scope: !6437)
!6440 = !DILocation(line: 346, column: 13, scope: !6437)
!6441 = !DILocation(line: 346, column: 11, scope: !6437)
!6442 = !DILocation(line: 347, column: 8, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6437, file: !3, line: 347, column: 8)
!6444 = !DILocation(line: 347, column: 8, scope: !6437)
!6445 = !DILocation(line: 348, column: 5, scope: !6443)
!6446 = !DILocation(line: 350, column: 29, scope: !6437)
!6447 = !DILocation(line: 350, column: 4, scope: !6437)
!6448 = !DILocation(line: 351, column: 3, scope: !6437)
!6449 = !DILocation(line: 354, column: 11, scope: !6383)
!6450 = !DILocation(line: 354, column: 14, scope: !6383)
!6451 = !DILocation(line: 354, column: 9, scope: !6383)
!6452 = !DILocation(line: 356, column: 6, scope: !6387)
!6453 = !DILocation(line: 356, column: 11, scope: !6387)
!6454 = !DILocation(line: 356, column: 17, scope: !6387)
!6455 = !DILocation(line: 356, column: 6, scope: !6383)
!6456 = !DILocation(line: 357, column: 14, scope: !6390)
!6457 = !DILocation(line: 357, column: 19, scope: !6390)
!6458 = !DILocation(line: 357, column: 25, scope: !6390)
!6459 = !DILocation(line: 354, column: 2, scope: !2745, inlinedAt: !6389)
!6460 = !DILocation(line: 354, column: 2, scope: !2748, inlinedAt: !6389)
!6461 = !DILocation(line: 358, column: 2, scope: !6390)
!6462 = !DILocation(line: 366, column: 7, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 366, column: 7)
!6464 = !DILocation(line: 367, column: 7, scope: !6463)
!6465 = !DILocation(line: 367, column: 12, scope: !6463)
!6466 = !DILocation(line: 367, column: 17, scope: !6463)
!6467 = !DILocation(line: 367, column: 23, scope: !6463)
!6468 = !DILocation(line: 367, column: 38, scope: !6463)
!6469 = !DILocation(line: 367, column: 56, scope: !6463)
!6470 = !DILocation(line: 367, column: 60, scope: !6463)
!6471 = !DILocation(line: 368, column: 7, scope: !6463)
!6472 = !DILocation(line: 368, column: 11, scope: !6463)
!6473 = !DILocation(line: 368, column: 16, scope: !6463)
!6474 = !DILocation(line: 368, column: 22, scope: !6463)
!6475 = !DILocation(line: 368, column: 37, scope: !6463)
!6476 = !DILocation(line: 368, column: 53, scope: !6463)
!6477 = !DILocation(line: 368, column: 56, scope: !6463)
!6478 = !DILocation(line: 366, column: 7, scope: !6386)
!6479 = !DILocation(line: 369, column: 10, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 368, column: 66)
!6481 = !DILocation(line: 369, column: 8, scope: !6480)
!6482 = !DILocation(line: 369, column: 4, scope: !6480)
!6483 = !DILabel(scope: !6480, name: "fail", file: !3, line: 371)
!6484 = !DILocation(line: 371, column: 2, scope: !6480)
!6485 = !DILocation(line: 372, column: 22, scope: !6480)
!6486 = !DILocation(line: 372, column: 4, scope: !6480)
!6487 = !DILocation(line: 374, column: 29, scope: !6480)
!6488 = !DILocation(line: 374, column: 4, scope: !6480)
!6489 = !DILocation(line: 375, column: 3, scope: !6480)
!6490 = !DILocation(line: 377, column: 18, scope: !6386)
!6491 = !DILocation(line: 377, column: 23, scope: !6386)
!6492 = !DILocation(line: 377, column: 29, scope: !6386)
!6493 = !DILocation(line: 379, column: 2, scope: !2306, inlinedAt: !6385)
!6494 = !DILocation(line: 379, column: 2, scope: !2309, inlinedAt: !6385)
!6495 = !DILocation(line: 379, column: 2, scope: !2312, inlinedAt: !6385)
!6496 = !DILocation(line: 380, column: 9, scope: !6383)
!6497 = !DILocation(line: 380, column: 2, scope: !6383)
!6498 = distinct !DISubprogram(name: "memalloc_noio_restore", scope: !6364, file: !6364, line: 209, type: !6499, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6499 = !DISubroutineType(types: !6500)
!6500 = !{null, !335}
!6501 = !DILocation(line: 15, column: 9, scope: !2489, inlinedAt: !6502)
!6502 = distinct !DILocation(line: 211, column: 2, scope: !6498)
!6503 = !DILocation(line: 15, column: 9, scope: !2497, inlinedAt: !6502)
!6504 = !DILocation(line: 15, column: 9, scope: !2500, inlinedAt: !6502)
!6505 = !DILocation(line: 15, column: 9, scope: !2489, inlinedAt: !6506)
!6506 = distinct !DILocation(line: 211, column: 20, scope: !6498)
!6507 = !DILocation(line: 15, column: 9, scope: !2497, inlinedAt: !6506)
!6508 = !DILocation(line: 15, column: 9, scope: !2500, inlinedAt: !6506)
!6509 = !DILocalVariable(name: "flags", arg: 1, scope: !6498, file: !6364, line: 209, type: !335)
!6510 = !DILocation(line: 209, column: 55, scope: !6498)
!6511 = !DILocation(line: 211, column: 29, scope: !6498)
!6512 = !DILocation(line: 211, column: 35, scope: !6498)
!6513 = !DILocation(line: 211, column: 58, scope: !6498)
!6514 = !DILocation(line: 211, column: 56, scope: !6498)
!6515 = !DILocation(line: 211, column: 11, scope: !6498)
!6516 = !DILocation(line: 211, column: 17, scope: !6498)
!6517 = !DILocation(line: 212, column: 1, scope: !6498)
!6518 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !2463, file: !2463, line: 651, type: !6519, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6519 = !DISubroutineType(types: !6520)
!6520 = !{null, !125}
!6521 = !DILocalVariable(name: "f", arg: 1, scope: !6518, file: !2463, line: 651, type: !125)
!6522 = !DILocation(line: 651, column: 65, scope: !6518)
!6523 = !DILocalVariable(name: "__edi", scope: !6524, file: !2463, line: 653, type: !125)
!6524 = distinct !DILexicalBlock(scope: !6518, file: !2463, line: 653, column: 2)
!6525 = !DILocation(line: 653, column: 2, scope: !6524)
!6526 = !DILocalVariable(name: "__esi", scope: !6524, file: !2463, line: 653, type: !125)
!6527 = !DILocalVariable(name: "__edx", scope: !6524, file: !2463, line: 653, type: !125)
!6528 = !DILocalVariable(name: "__ecx", scope: !6524, file: !2463, line: 653, type: !125)
!6529 = !DILocalVariable(name: "__eax", scope: !6524, file: !2463, line: 653, type: !125)
!6530 = !{i32 -2145750523, i32 -2145749773, i32 -2145749539, i32 -2145749488, i32 -2145749460, i32 -2145749435, i32 -2145749751, i32 -2145749738, i32 -2145749300, i32 -2145749181, i32 -2145749646, i32 -2145749619, i32 -2145749591, i32 -2145749561}
!6531 = !DILocation(line: 654, column: 1, scope: !6518)
!6532 = distinct !DISubprogram(name: "kasan_check_write", scope: !6533, file: !6533, line: 38, type: !6534, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6533 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!6534 = !DISubroutineType(types: !6535)
!6535 = !{!915, !2569, !335}
!6536 = !DILocalVariable(name: "p", arg: 1, scope: !6532, file: !6533, line: 38, type: !2569)
!6537 = !DILocation(line: 38, column: 59, scope: !6532)
!6538 = !DILocalVariable(name: "size", arg: 2, scope: !6532, file: !6533, line: 38, type: !335)
!6539 = !DILocation(line: 38, column: 75, scope: !6532)
!6540 = !DILocation(line: 40, column: 2, scope: !6532)
!6541 = distinct !DISubprogram(name: "kcsan_check_access", scope: !6542, file: !6542, line: 178, type: !6543, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6542 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!6543 = !DISubroutineType(types: !6544)
!6544 = !{null, !2569, !122, !59}
!6545 = !DILocalVariable(name: "ptr", arg: 1, scope: !6541, file: !6542, line: 178, type: !2569)
!6546 = !DILocation(line: 178, column: 60, scope: !6541)
!6547 = !DILocalVariable(name: "size", arg: 2, scope: !6541, file: !6542, line: 178, type: !122)
!6548 = !DILocation(line: 178, column: 72, scope: !6541)
!6549 = !DILocalVariable(name: "type", arg: 3, scope: !6541, file: !6542, line: 179, type: !59)
!6550 = !DILocation(line: 179, column: 15, scope: !6541)
!6551 = !DILocation(line: 179, column: 23, scope: !6541)
!6552 = distinct !DISubprogram(name: "trace_rpm_idle_rcuidle", scope: !3219, file: !3219, line: 71, type: !3220, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6553 = !DILocalVariable(name: "dev", arg: 1, scope: !6552, file: !3219, line: 71, type: !6)
!6554 = !DILocation(line: 71, column: 1, scope: !6552)
!6555 = !DILocalVariable(name: "flags", arg: 2, scope: !6552, file: !3219, line: 71, type: !59)
!6556 = distinct !DISubprogram(name: "trace_rpm_resume_rcuidle", scope: !3219, file: !3219, line: 65, type: !3220, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6557 = !DILocalVariable(name: "dev", arg: 1, scope: !6556, file: !3219, line: 65, type: !6)
!6558 = !DILocation(line: 65, column: 1, scope: !6556)
!6559 = !DILocalVariable(name: "flags", arg: 2, scope: !6556, file: !3219, line: 65, type: !59)
!6560 = distinct !DISubprogram(name: "kobject_name", scope: !12, file: !12, line: 88, type: !6561, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6561 = !DISubroutineType(types: !6562)
!6562 = !{!15, !6563}
!6563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6564, size: 64)
!6564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11)
!6565 = !DILocalVariable(name: "kobj", arg: 1, scope: !6560, file: !12, line: 88, type: !6563)
!6566 = !DILocation(line: 88, column: 62, scope: !6560)
!6567 = !DILocation(line: 90, column: 9, scope: !6560)
!6568 = !DILocation(line: 90, column: 15, scope: !6560)
!6569 = !DILocation(line: 90, column: 2, scope: !6560)
!6570 = distinct !DISubprogram(name: "kasan_check_read", scope: !6533, file: !6533, line: 34, type: !6534, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6571 = !DILocalVariable(name: "p", arg: 1, scope: !6570, file: !6533, line: 34, type: !2569)
!6572 = !DILocation(line: 34, column: 58, scope: !6570)
!6573 = !DILocalVariable(name: "size", arg: 2, scope: !6570, file: !6533, line: 34, type: !335)
!6574 = !DILocation(line: 34, column: 74, scope: !6570)
!6575 = !DILocation(line: 36, column: 2, scope: !6570)
!6576 = distinct !DISubprogram(name: "__refcount_inc", scope: !341, file: !341, line: 248, type: !6577, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6577 = !DISubroutineType(types: !6578)
!6578 = !{null, !5838, !662}
!6579 = !DILocalVariable(name: "r", arg: 1, scope: !6576, file: !341, line: 248, type: !5838)
!6580 = !DILocation(line: 248, column: 47, scope: !6576)
!6581 = !DILocalVariable(name: "oldp", arg: 2, scope: !6576, file: !341, line: 248, type: !662)
!6582 = !DILocation(line: 248, column: 55, scope: !6576)
!6583 = !DILocation(line: 250, column: 20, scope: !6576)
!6584 = !DILocation(line: 250, column: 23, scope: !6576)
!6585 = !DILocation(line: 250, column: 2, scope: !6576)
!6586 = !DILocation(line: 251, column: 1, scope: !6576)
!6587 = distinct !DISubprogram(name: "__refcount_add", scope: !341, file: !341, line: 191, type: !6588, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6588 = !DISubroutineType(types: !6589)
!6589 = !{null, !59, !5838, !662}
!6590 = !DILocalVariable(name: "i", arg: 1, scope: !6591, file: !2511, line: 182, type: !59)
!6591 = distinct !DISubprogram(name: "arch_atomic_fetch_add", scope: !2511, file: !2511, line: 182, type: !6592, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6592 = !DISubroutineType(types: !6593)
!6593 = !{!59, !59, !2514}
!6594 = !DILocation(line: 182, column: 54, scope: !6591, inlinedAt: !6595)
!6595 = distinct !DILocation(line: 143, column: 9, scope: !6596, inlinedAt: !6597)
!6596 = distinct !DISubprogram(name: "atomic_fetch_add_relaxed", scope: !2527, file: !2527, line: 140, type: !6592, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2025, retainedNodes: !47)
!6597 = distinct !DILocation(line: 193, column: 12, scope: !6587)
!6598 = !DILocalVariable(name: "v", arg: 2, scope: !6591, file: !2511, line: 182, type: !2514)
!6599 = !DILocation(line: 182, column: 67, scope: !6591, inlinedAt: !6595)
!6600 = !DILocalVariable(name: "__ret", scope: !6601, file: !2511, line: 184, type: !59)
!6601 = distinct !DILexicalBlock(scope: !6591, file: !2511, line: 184, column: 9)
!6602 = !DILocation(line: 184, column: 9, scope: !6601, inlinedAt: !6595)
!6603 = !DILocation(line: 99, column: 79, scope: !2565, inlinedAt: !6604)
!6604 = distinct !DILocation(line: 142, column: 2, scope: !6596, inlinedAt: !6597)
!6605 = !DILocation(line: 99, column: 89, scope: !2565, inlinedAt: !6604)
!6606 = !DILocalVariable(name: "i", arg: 1, scope: !6596, file: !2527, line: 140, type: !59)
!6607 = !DILocation(line: 140, column: 30, scope: !6596, inlinedAt: !6597)
!6608 = !DILocalVariable(name: "v", arg: 2, scope: !6596, file: !2527, line: 140, type: !2514)
!6609 = !DILocation(line: 140, column: 43, scope: !6596, inlinedAt: !6597)
!6610 = !DILocalVariable(name: "i", arg: 1, scope: !6587, file: !341, line: 191, type: !59)
!6611 = !DILocation(line: 191, column: 39, scope: !6587)
!6612 = !DILocalVariable(name: "r", arg: 2, scope: !6587, file: !341, line: 191, type: !5838)
!6613 = !DILocation(line: 191, column: 54, scope: !6587)
!6614 = !DILocalVariable(name: "oldp", arg: 3, scope: !6587, file: !341, line: 191, type: !662)
!6615 = !DILocation(line: 191, column: 62, scope: !6587)
!6616 = !DILocalVariable(name: "old", scope: !6587, file: !341, line: 193, type: !59)
!6617 = !DILocation(line: 193, column: 6, scope: !6587)
!6618 = !DILocation(line: 193, column: 37, scope: !6587)
!6619 = !DILocation(line: 193, column: 41, scope: !6587)
!6620 = !DILocation(line: 193, column: 44, scope: !6587)
!6621 = !DILocation(line: 142, column: 31, scope: !6596, inlinedAt: !6597)
!6622 = !DILocation(line: 101, column: 20, scope: !2565, inlinedAt: !6604)
!6623 = !DILocation(line: 101, column: 23, scope: !2565, inlinedAt: !6604)
!6624 = !DILocation(line: 101, column: 2, scope: !2565, inlinedAt: !6604)
!6625 = !DILocation(line: 102, column: 2, scope: !2565, inlinedAt: !6604)
!6626 = !DILocation(line: 143, column: 39, scope: !6596, inlinedAt: !6597)
!6627 = !DILocation(line: 143, column: 42, scope: !6596, inlinedAt: !6597)
!6628 = !{i32 -2146900562}
!6629 = !DILocation(line: 195, column: 6, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6587, file: !341, line: 195, column: 6)
!6631 = !DILocation(line: 195, column: 6, scope: !6587)
!6632 = !DILocation(line: 196, column: 11, scope: !6630)
!6633 = !DILocation(line: 196, column: 4, scope: !6630)
!6634 = !DILocation(line: 196, column: 9, scope: !6630)
!6635 = !DILocation(line: 196, column: 3, scope: !6630)
!6636 = !DILocation(line: 198, column: 6, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6587, file: !341, line: 198, column: 6)
!6638 = !DILocation(line: 198, column: 6, scope: !6587)
!6639 = !DILocation(line: 199, column: 26, scope: !6637)
!6640 = !DILocation(line: 199, column: 3, scope: !6637)
!6641 = !DILocation(line: 200, column: 11, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6637, file: !341, line: 200, column: 11)
!6643 = !DILocation(line: 200, column: 11, scope: !6637)
!6644 = !DILocation(line: 201, column: 26, scope: !6642)
!6645 = !DILocation(line: 201, column: 3, scope: !6642)
!6646 = !DILocation(line: 202, column: 1, scope: !6587)
