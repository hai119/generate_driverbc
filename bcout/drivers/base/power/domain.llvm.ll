; ModuleID = '../bcout/drivers/base/power/domain.llvm.bc'
source_filename = "drivers/base/power/domain.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall7.init\22, \22a\22\09"
module asm "__initcall_genpd_power_off_unused7:\09\09\09"
module asm ".long\09genpd_power_off_unused - .\09\09\09"
module asm ".previous\09\09\09\09\09"
module asm ".section\09\22.initcall1.init\22, \22a\22\09"
module asm "__initcall_genpd_bus_init1:\09\09\09"
module asm ".long\09genpd_bus_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.obs_kernel_param = type { i8*, i32 (i8*)*, i32 }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.69, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.69 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.67, %struct.list_head, %struct.list_head, %union.anon.68 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.65 }
%union.anon.65 = type { %struct.anon.66 }
%struct.anon.66 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type { i64, i64, i64, i64, i32, i8 }
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.2, %union.anon.57, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.57 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.58, i32 }
%union.anon.58 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.35, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.35 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.71, %union.anon.72, %union.anon.73, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.76, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type opaque
%union.anon.71 = type { %struct.hlist_node }
%union.anon.72 = type { %struct.rb_node }
%union.anon.73 = type { %struct.anon.75 }
%struct.anon.75 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%struct.refcount_struct = type { %struct.atomic_t }
%union.anon.76 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.77, void (i8*)*, i8* }
%union.anon.77 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.78, i16, i16 }
%struct.llist_node = type { %struct.llist_node* }
%union.anon.78 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.36, %union.anon.37, i32 }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%union.anon.36 = type { %struct.list_head }
%union.anon.37 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type opaque
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type opaque
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.50, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.15, [0 x i64] }
%struct.anon.15 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.16, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.16 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.22, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.23, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.24, %union.anon.28, %struct.key_restriction* }
%union.anon.22 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.23 = type { i64 }
%union.anon.24 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.25, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.25 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.28 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type { i64 }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.38 }
%struct.anon.38 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.42 }
%struct.anon.42 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.49, i32, [12 x i8] }
%union.anon.49 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.50 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.51, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.54 }
%union.anon.51 = type { %struct.anon.52 }
%struct.anon.52 = type { i64, i64 }
%union.anon.54 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.30 }
%union.anon.30 = type { %struct.anon.31, [48 x i8] }
%struct.anon.31 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.32, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.32 = type { %struct.anon.33 }
%struct.anon.33 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.67 = type { %struct.list_head }
%union.anon.68 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.59, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.60, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.61, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.64, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.59 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.60 = type { %struct.callback_head }
%union.anon.61 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.iov_iter = type opaque
%struct.swap_info_struct = type { i64, i16, %struct.plist_node, i8, i32, i8*, %struct.swap_cluster_info*, %struct.swap_cluster_list, i32, i32, i32, i32, i32, i32, i32*, %struct.percpu_cluster*, %struct.rb_root, %struct.block_device*, %struct.file*, i32, %struct.spinlock, %struct.spinlock, %struct.work_struct, %struct.swap_cluster_list, [0 x %struct.plist_node] }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.swap_cluster_info = type { %struct.spinlock, i32 }
%struct.percpu_cluster = type { %struct.swap_cluster_info, i32 }
%struct.swap_cluster_list = type { %struct.swap_cluster_info, %struct.swap_cluster_info }
%union.anon.64 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.62 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.62 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.34 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.34 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type { %struct.device*, i32, i32, i8* }
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type { %struct.list_head, %struct.device* }
%struct.dev_pm_qos = type { %struct.pm_qos_constraints, %struct.pm_qos_constraints, %struct.freq_constraints, %struct.pm_qos_flags, %struct.dev_pm_qos_request*, %struct.dev_pm_qos_request*, %struct.dev_pm_qos_request* }
%struct.pm_qos_constraints = type { %struct.plist_head, i32, i32, i32, i32, %struct.blocking_notifier_head* }
%struct.plist_head = type { %struct.list_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.freq_constraints = type { %struct.pm_qos_constraints, %struct.blocking_notifier_head, %struct.pm_qos_constraints, %struct.blocking_notifier_head }
%struct.pm_qos_flags = type { %struct.list_head, i32 }
%struct.dev_pm_qos_request = type { i32, %union.anon.70, %struct.device* }
%union.anon.70 = type { %struct.freq_qos_request }
%struct.freq_qos_request = type { i32, %struct.plist_node, %struct.freq_constraints* }
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.lock_class_key = type {}
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.genpd_lock_ops = type { void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*, i32)*, i32 (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)* }
%struct.generic_pm_domain = type { %struct.device, %struct.dev_pm_domain, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.dev_power_governor*, %struct.work_struct, %struct.fwnode_handle*, i8, i8*, %struct.atomic_t, i32, i32, i32, i32, i32, [1 x %struct.cpumask], i32 (%struct.generic_pm_domain*)*, i32 (%struct.generic_pm_domain*)*, %struct.raw_notifier_head, %struct.opp_table*, i32 (%struct.generic_pm_domain*, %struct.dev_pm_opp*)*, i32 (%struct.generic_pm_domain*, i32)*, %struct.gpd_dev_ops, i64, i8, i8, i8, i32 (%struct.generic_pm_domain*, %struct.device*)*, void (%struct.generic_pm_domain*, %struct.device*)*, i32, %struct.genpd_power_state*, void (%struct.genpd_power_state*, i32)*, i32, i32, i64, i64, %struct.genpd_lock_ops*, %union.anon.80 }
%struct.dev_power_governor = type { i1 (%struct.dev_pm_domain*)*, i1 (%struct.device*)* }
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.opp_table = type opaque
%struct.dev_pm_opp = type opaque
%struct.gpd_dev_ops = type { i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.genpd_power_state = type { i64, i64, i64, i64, i64, %struct.fwnode_handle*, i64, i8* }
%union.anon.80 = type { %struct.mutex }
%struct.generic_pm_domain_data = type { %struct.pm_domain_data, %struct.gpd_timing_data, %struct.notifier_block, %struct.notifier_block*, i32, i32, i8* }
%struct.gpd_timing_data = type { i64, i64, i64, i8, i8 }
%struct.gpd_link = type { %struct.generic_pm_domain*, %struct.list_head, %struct.generic_pm_domain*, %struct.list_head, i32, i32 }
%struct.anon.81 = type { %struct.spinlock, i64 }
%struct.of_phandle_args = type { %struct.device_node*, i32, [16 x i32] }
%struct.of_genpd_provider = type { %struct.list_head, %struct.device_node*, %struct.generic_pm_domain* (%struct.of_phandle_args*, i8*)*, i8* }
%struct.genpd_onecell_data = type { %struct.generic_pm_domain**, i32, %struct.generic_pm_domain* (%struct.of_phandle_args*, i8*)* }
%struct.of_phandle_iterator = type { i8*, i32, %struct.device_node*, i32*, i32*, i32*, i32, i32, %struct.device_node* }

@.str = private unnamed_addr constant [28 x i8] c"drivers/base/power/domain.c\00", align 1
@__setup_str_pd_ignore_unused_setup = internal constant [17 x i8] c"pd_ignore_unused\00", section ".init.rodata", align 1, !dbg !0
@__setup_pd_ignore_unused_setup = internal global %struct.obs_kernel_param { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__setup_str_pd_ignore_unused_setup, i32 0, i32 0), i32 (i8*)* @pd_ignore_unused_setup, i32 0 }, section ".init.setup", align 8, !dbg !5154
@__UNIQUE_ID___addressable_genpd_power_off_unused313 = internal global i8* bitcast (i32 ()* @genpd_power_off_unused to i8*), section ".discard.addressable", align 8, !dbg !5165
@gpd_list_lock = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @gpd_list_lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @gpd_list_lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !5171
@.str.1 = private unnamed_addr constant [41 x i8] c"failed to add notifier for PM domain %s\0A\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"failed to remove notifier for PM domain %s\0A\00", align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"\014PM: %s: unable to remove subdomain %s\0A\00", align 1
@.str.4 = private unnamed_addr constant [34 x i8] c"\014PM: %s: no governor for states\0A\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@gpd_list = internal global %struct.list_head { %struct.list_head* @gpd_list, %struct.list_head* @gpd_list }, align 8, !dbg !5185
@.str.6 = private unnamed_addr constant [29 x i8] c"Failed to add OPP table: %d\0A\00", align 1
@.str.7 = private unnamed_addr constant [42 x i8] c"Failed to add OPP table for index %d: %d\0A\00", align 1
@of_genpd_mutex = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @of_genpd_mutex to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @of_genpd_mutex to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !5187
@of_genpd_providers = internal global %struct.list_head { %struct.list_head* @of_genpd_providers, %struct.list_head* @of_genpd_providers }, align 8, !dbg !5189
@.str.8 = private unnamed_addr constant [14 x i8] c"power-domains\00", align 1
@.str.9 = private unnamed_addr constant [20 x i8] c"#power-domain-cells\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"genpd:%u:%s\00", align 1
@genpd_bus_type = internal global %struct.bus_type { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i32 0, i32 0), i8* null, %struct.device* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.attribute_group** null, i32 (%struct.device*, %struct.device_driver*)* null, i32 (%struct.device*, %struct.kobj_uevent_env*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, %struct.dev_pm_ops* null, %struct.iommu_ops* null, %struct.subsys_private* null, %struct.lock_class_key zeroinitializer, i8 0 }, align 8, !dbg !5191
@.str.11 = private unnamed_addr constant [19 x i8] c"power-domain-names\00", align 1
@__UNIQUE_ID___addressable_genpd_bus_init346 = internal global i8* bitcast (i32 ()* @genpd_bus_init to i8*), section ".discard.addressable", align 8, !dbg !5167
@.str.12 = private unnamed_addr constant [55 x i8] c"\013PM: %s: Failed to roll back to %d performance state\0A\00", align 1
@pd_ignore_unused = internal global i8 0, align 1, !dbg !5169
@.str.13 = private unnamed_addr constant [49 x i8] c"\014PM: genpd: Not disabling unused power domains\0A\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 8
@.str.14 = private unnamed_addr constant [44 x i8] c"Parent %s of subdomain %s must be IRQ safe\0A\00", align 1
@genpd_spin_ops = internal constant %struct.genpd_lock_ops { void (%struct.generic_pm_domain*)* @genpd_lock_spin, void (%struct.generic_pm_domain*, i32)* @genpd_lock_nested_spin, i32 (%struct.generic_pm_domain*)* @genpd_lock_interruptible_spin, void (%struct.generic_pm_domain*)* @genpd_unlock_spin }, align 8, !dbg !5176
@genpd_lock_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !5173
@.str.15 = private unnamed_addr constant [14 x i8] c"&genpd->mlock\00", align 1
@genpd_mtx_ops = internal constant %struct.genpd_lock_ops { void (%struct.generic_pm_domain*)* @genpd_lock_mtx, void (%struct.generic_pm_domain*, i32)* @genpd_lock_nested_mtx, i32 (%struct.generic_pm_domain*)* @genpd_lock_interruptible_mtx, void (%struct.generic_pm_domain*)* @genpd_unlock_mtx }, align 8, !dbg !5178
@irq_safe_dev_in_no_sleep_domain.__print_once = internal global i8 0, section ".data..read_mostly", align 1, !dbg !5180
@.str.16 = private unnamed_addr constant [38 x i8] c"PM domain %s will not be powered off\0A\00", align 1
@.str.17 = private unnamed_addr constant [45 x i8] c"\013PM: Provider present, unable to remove %s\0A\00", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"\013PM: %s: unable to remove %s\0A\00", align 1
@__func__.genpd_remove = private unnamed_addr constant [13 x i8] c"genpd_remove\00", align 1
@.str.19 = private unnamed_addr constant [35 x i8] c"\013PM: %s: invalid domain index %u\0A\00", align 1
@__func__.genpd_xlate_onecell = private unnamed_addr constant [20 x i8] c"genpd_xlate_onecell\00", align 1
@.str.20 = private unnamed_addr constant [34 x i8] c"failed to add to PM domain %s: %d\00", align 1
@.str.21 = private unnamed_addr constant [39 x i8] c"failed to remove from PM domain %s: %d\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.22 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"genpd\00", align 1
@pm_wq = external dso_local global %struct.workqueue_struct*, align 8
@.str.24 = private unnamed_addr constant [19 x i8] c"domain-idle-states\00", align 1
@idle_state_match = internal constant [2 x %struct.of_device_id] [%struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"domain-idle-state\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* null }, %struct.of_device_id zeroinitializer], align 16, !dbg !5193
@.str.25 = private unnamed_addr constant [55 x i8] c"\013PM: Parsing idle state node %pOF failed with err %d\0A\00", align 1
@.str.26 = private unnamed_addr constant [17 x i8] c"entry-latency-us\00", align 1
@.str.27 = private unnamed_addr constant [16 x i8] c"exit-latency-us\00", align 1
@.str.28 = private unnamed_addr constant [17 x i8] c"min-residency-us\00", align 1
@llvm.used = appending global [3 x i8*] [i8* bitcast (%struct.obs_kernel_param* @__setup_pd_ignore_unused_setup to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_genpd_power_off_unused313 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_genpd_bus_init346 to i8*)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dev_pm_genpd_set_performance_state(%struct.device* %dev, i32 %state) #0 !dbg !5205 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %state.addr = alloca i32, align 4
  %genpd = alloca %struct.generic_pm_domain*, align 8
  %gpd_data = alloca %struct.generic_pm_domain_data*, align 8
  %prev = alloca i32, align 4
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5208, metadata !DIExpression()), !dbg !5209
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !5210, metadata !DIExpression()), !dbg !5211
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd, metadata !5212, metadata !DIExpression()), !dbg !5213
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain_data** %gpd_data, metadata !5214, metadata !DIExpression()), !dbg !5215
  call void @llvm.dbg.declare(metadata i32* %prev, metadata !5216, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5218, metadata !DIExpression()), !dbg !5219
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5220
  %call = call %struct.generic_pm_domain* @dev_to_genpd_safe(%struct.device* %0) #11, !dbg !5221
  store %struct.generic_pm_domain* %call, %struct.generic_pm_domain** %genpd, align 8, !dbg !5222
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5223
  %tobool = icmp ne %struct.generic_pm_domain* %1, null, !dbg !5223
  br i1 %tobool, label %if.end, label %if.then, !dbg !5225

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !5226
  br label %return, !dbg !5226

if.end:                                           ; preds = %entry
  %2 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5227
  %set_performance_state = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %2, i32 0, i32 23, !dbg !5227
  %3 = load i32 (%struct.generic_pm_domain*, i32)*, i32 (%struct.generic_pm_domain*, i32)** %set_performance_state, align 8, !dbg !5227
  %tobool1 = icmp ne i32 (%struct.generic_pm_domain*, i32)* %3, null, !dbg !5227
  %lnot = xor i1 %tobool1, true, !dbg !5227
  %lnot2 = xor i1 %lnot, true, !dbg !5227
  %lnot3 = xor i1 %lnot2, true, !dbg !5227
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !5227
  %conv = sext i32 %lnot.ext to i64, !dbg !5227
  %tobool4 = icmp ne i64 %conv, 0, !dbg !5227
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !5229

if.then5:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !5230
  br label %return, !dbg !5230

if.end6:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5231, metadata !DIExpression()), !dbg !5234
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5234
  %power = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 11, !dbg !5234
  %subsys_data = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 25, !dbg !5234
  %5 = load %struct.pm_subsys_data*, %struct.pm_subsys_data** %subsys_data, align 8, !dbg !5234
  %tobool7 = icmp ne %struct.pm_subsys_data* %5, null, !dbg !5234
  br i1 %tobool7, label %lor.rhs, label %lor.end, !dbg !5234

lor.rhs:                                          ; preds = %if.end6
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5234
  %power8 = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 11, !dbg !5234
  %subsys_data9 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power8, i32 0, i32 25, !dbg !5234
  %7 = load %struct.pm_subsys_data*, %struct.pm_subsys_data** %subsys_data9, align 8, !dbg !5234
  %domain_data = getelementptr inbounds %struct.pm_subsys_data, %struct.pm_subsys_data* %7, i32 0, i32 3, !dbg !5234
  %8 = load %struct.pm_domain_data*, %struct.pm_domain_data** %domain_data, align 8, !dbg !5234
  %tobool10 = icmp ne %struct.pm_domain_data* %8, null, !dbg !5234
  %lnot11 = xor i1 %tobool10, true, !dbg !5234
  br label %lor.end, !dbg !5234

lor.end:                                          ; preds = %lor.rhs, %if.end6
  %9 = phi i1 [ true, %if.end6 ], [ %lnot11, %lor.rhs ]
  %lnot13 = xor i1 %9, true, !dbg !5234
  %lnot15 = xor i1 %lnot13, true, !dbg !5234
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !5234
  store i32 %lnot.ext16, i32* %__ret_warn_on, align 4, !dbg !5234
  %10 = load i32, i32* %__ret_warn_on, align 4, !dbg !5235
  %tobool17 = icmp ne i32 %10, 0, !dbg !5235
  %lnot18 = xor i1 %tobool17, true, !dbg !5235
  %lnot20 = xor i1 %lnot18, true, !dbg !5235
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !5235
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !5235
  %tobool23 = icmp ne i64 %conv22, 0, !dbg !5235
  br i1 %tobool23, label %if.then24, label %if.end31, !dbg !5234

if.then24:                                        ; preds = %lor.end
  br label %do.body, !dbg !5235

do.body:                                          ; preds = %if.then24
  br label %do.body25, !dbg !5237

do.body25:                                        ; preds = %do.body
  br label %do.end, !dbg !5239

do.end:                                           ; preds = %do.body25
  br label %do.body26, !dbg !5237

do.body26:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 391, i32 2305, i64 12) #7, !dbg !5241, !srcloc !5243
  br label %do.end27, !dbg !5241

do.end27:                                         ; preds = %do.body26
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 300) #7, !dbg !5244, !srcloc !5246
  br label %do.body28, !dbg !5237

do.body28:                                        ; preds = %do.end27
  br label %do.end29, !dbg !5247

do.end29:                                         ; preds = %do.body28
  br label %do.end30, !dbg !5237

do.end30:                                         ; preds = %do.end29
  br label %if.end31, !dbg !5237

if.end31:                                         ; preds = %do.end30, %lor.end
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !5234
  %tobool32 = icmp ne i32 %11, 0, !dbg !5234
  %lnot33 = xor i1 %tobool32, true, !dbg !5234
  %lnot35 = xor i1 %lnot33, true, !dbg !5234
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !5234
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !5234
  store i64 %conv37, i64* %tmp, align 8, !dbg !5235
  %12 = load i64, i64* %tmp, align 8, !dbg !5234
  %tobool38 = icmp ne i64 %12, 0, !dbg !5249
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !5250

if.then39:                                        ; preds = %if.end31
  store i32 -22, i32* %retval, align 4, !dbg !5251
  br label %return, !dbg !5251

if.end40:                                         ; preds = %if.end31
  %13 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5252
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %13, i32 0, i32 38, !dbg !5252
  %14 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !5252
  %lock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %14, i32 0, i32 0, !dbg !5252
  %15 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %lock, align 8, !dbg !5252
  %16 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5252
  call void %15(%struct.generic_pm_domain* %16) #11, !dbg !5252
  %17 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5253
  %power41 = getelementptr inbounds %struct.device, %struct.device* %17, i32 0, i32 11, !dbg !5254
  %subsys_data42 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power41, i32 0, i32 25, !dbg !5255
  %18 = load %struct.pm_subsys_data*, %struct.pm_subsys_data** %subsys_data42, align 8, !dbg !5255
  %domain_data43 = getelementptr inbounds %struct.pm_subsys_data, %struct.pm_subsys_data* %18, i32 0, i32 3, !dbg !5256
  %19 = load %struct.pm_domain_data*, %struct.pm_domain_data** %domain_data43, align 8, !dbg !5256
  %call44 = call %struct.generic_pm_domain_data* @to_gpd_data(%struct.pm_domain_data* %19) #11, !dbg !5257
  store %struct.generic_pm_domain_data* %call44, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !5258
  %20 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !5259
  %performance_state = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %20, i32 0, i32 5, !dbg !5260
  %21 = load i32, i32* %performance_state, align 4, !dbg !5260
  store i32 %21, i32* %prev, align 4, !dbg !5261
  %22 = load i32, i32* %state.addr, align 4, !dbg !5262
  %23 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !5263
  %performance_state45 = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %23, i32 0, i32 5, !dbg !5264
  store i32 %22, i32* %performance_state45, align 4, !dbg !5265
  %24 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5266
  %25 = load i32, i32* %state.addr, align 4, !dbg !5267
  %call46 = call i32 @_genpd_reeval_performance_state(%struct.generic_pm_domain* %24, i32 %25) #11, !dbg !5268
  store i32 %call46, i32* %state.addr, align 4, !dbg !5269
  %26 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5270
  %27 = load i32, i32* %state.addr, align 4, !dbg !5271
  %call47 = call i32 @_genpd_set_performance_state(%struct.generic_pm_domain* %26, i32 %27, i32 0) #11, !dbg !5272
  store i32 %call47, i32* %ret, align 4, !dbg !5273
  %28 = load i32, i32* %ret, align 4, !dbg !5274
  %tobool48 = icmp ne i32 %28, 0, !dbg !5274
  br i1 %tobool48, label %if.then49, label %if.end51, !dbg !5276

if.then49:                                        ; preds = %if.end40
  %29 = load i32, i32* %prev, align 4, !dbg !5277
  %30 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !5278
  %performance_state50 = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %30, i32 0, i32 5, !dbg !5279
  store i32 %29, i32* %performance_state50, align 4, !dbg !5280
  br label %if.end51, !dbg !5278

if.end51:                                         ; preds = %if.then49, %if.end40
  %31 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5281
  %lock_ops52 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %31, i32 0, i32 38, !dbg !5281
  %32 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops52, align 8, !dbg !5281
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %32, i32 0, i32 3, !dbg !5281
  %33 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !5281
  %34 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5281
  call void %33(%struct.generic_pm_domain* %34) #11, !dbg !5281
  %35 = load i32, i32* %ret, align 4, !dbg !5282
  store i32 %35, i32* %retval, align 4, !dbg !5283
  br label %return, !dbg !5283

return:                                           ; preds = %if.end51, %if.then39, %if.then5, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !5284
  ret i32 %36, !dbg !5284
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.generic_pm_domain* @dev_to_genpd_safe(%struct.device* %dev) #0 !dbg !5285 {
entry:
  %retval = alloca %struct.generic_pm_domain*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5288, metadata !DIExpression()), !dbg !5289
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5290
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5290
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %1) #11, !dbg !5292
  br i1 %call, label %if.then, label %lor.lhs.false, !dbg !5293

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5294
  %pm_domain = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 12, !dbg !5295
  %3 = load %struct.dev_pm_domain*, %struct.dev_pm_domain** %pm_domain, align 8, !dbg !5295
  %4 = bitcast %struct.dev_pm_domain* %3 to i8*, !dbg !5294
  %call1 = call zeroext i1 @IS_ERR_OR_NULL(i8* %4) #11, !dbg !5296
  br i1 %call1, label %if.then, label %if.end, !dbg !5297

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.generic_pm_domain* null, %struct.generic_pm_domain** %retval, align 8, !dbg !5298
  br label %return, !dbg !5298

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5299
  %pm_domain2 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 12, !dbg !5301
  %6 = load %struct.dev_pm_domain*, %struct.dev_pm_domain** %pm_domain2, align 8, !dbg !5301
  %ops = getelementptr inbounds %struct.dev_pm_domain, %struct.dev_pm_domain* %6, i32 0, i32 0, !dbg !5302
  %runtime_suspend = getelementptr inbounds %struct.dev_pm_ops, %struct.dev_pm_ops* %ops, i32 0, i32 20, !dbg !5303
  %7 = load i32 (%struct.device*)*, i32 (%struct.device*)** %runtime_suspend, align 8, !dbg !5303
  %cmp = icmp eq i32 (%struct.device*)* %7, @genpd_runtime_suspend, !dbg !5304
  br i1 %cmp, label %if.then3, label %if.end6, !dbg !5305

if.then3:                                         ; preds = %if.end
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5306
  %pm_domain4 = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 12, !dbg !5307
  %9 = load %struct.dev_pm_domain*, %struct.dev_pm_domain** %pm_domain4, align 8, !dbg !5307
  %call5 = call %struct.generic_pm_domain* @pd_to_genpd(%struct.dev_pm_domain* %9) #11, !dbg !5308
  store %struct.generic_pm_domain* %call5, %struct.generic_pm_domain** %retval, align 8, !dbg !5309
  br label %return, !dbg !5309

if.end6:                                          ; preds = %if.end
  store %struct.generic_pm_domain* null, %struct.generic_pm_domain** %retval, align 8, !dbg !5310
  br label %return, !dbg !5310

return:                                           ; preds = %if.end6, %if.then3, %if.then
  %10 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %retval, align 8, !dbg !5311
  ret %struct.generic_pm_domain* %10, !dbg !5311
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.generic_pm_domain_data* @to_gpd_data(%struct.pm_domain_data* %pdd) #0 !dbg !5312 {
entry:
  %pdd.addr = alloca %struct.pm_domain_data*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.generic_pm_domain_data*, align 8
  store %struct.pm_domain_data* %pdd, %struct.pm_domain_data** %pdd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pm_domain_data** %pdd.addr, metadata !5315, metadata !DIExpression()), !dbg !5316
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5317, metadata !DIExpression()), !dbg !5319
  %0 = load %struct.pm_domain_data*, %struct.pm_domain_data** %pdd.addr, align 8, !dbg !5319
  %1 = bitcast %struct.pm_domain_data* %0 to i8*, !dbg !5319
  store i8* %1, i8** %__mptr, align 8, !dbg !5319
  br label %do.body, !dbg !5319

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5320

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5319
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !5319
  %3 = bitcast i8* %add.ptr to %struct.generic_pm_domain_data*, !dbg !5319
  store %struct.generic_pm_domain_data* %3, %struct.generic_pm_domain_data** %tmp, align 8, !dbg !5320
  %4 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %tmp, align 8, !dbg !5319
  ret %struct.generic_pm_domain_data* %4, !dbg !5322
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_genpd_reeval_performance_state(%struct.generic_pm_domain* %genpd, i32 %state) #0 !dbg !5323 {
entry:
  %retval = alloca i32, align 4
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %state.addr = alloca i32, align 4
  %pd_data = alloca %struct.generic_pm_domain_data*, align 8
  %pdd = alloca %struct.pm_domain_data*, align 8
  %link = alloca %struct.gpd_link*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pm_domain_data*, align 8
  %__mptr12 = alloca i8*, align 8
  %tmp17 = alloca %struct.pm_domain_data*, align 8
  %__mptr19 = alloca i8*, align 8
  %tmp23 = alloca %struct.gpd_link*, align 8
  %__mptr36 = alloca i8*, align 8
  %tmp41 = alloca %struct.gpd_link*, align 8
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !5324, metadata !DIExpression()), !dbg !5325
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !5326, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain_data** %pd_data, metadata !5328, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.declare(metadata %struct.pm_domain_data** %pdd, metadata !5330, metadata !DIExpression()), !dbg !5331
  call void @llvm.dbg.declare(metadata %struct.gpd_link** %link, metadata !5332, metadata !DIExpression()), !dbg !5333
  %0 = load i32, i32* %state.addr, align 4, !dbg !5334
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5336
  %performance_state = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %1, i32 0, i32 16, !dbg !5337
  %2 = load i32, i32* %performance_state, align 4, !dbg !5337
  %cmp = icmp eq i32 %0, %2, !dbg !5338
  br i1 %cmp, label %if.then, label %if.end, !dbg !5339

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %state.addr, align 4, !dbg !5340
  store i32 %3, i32* %retval, align 4, !dbg !5341
  br label %return, !dbg !5341

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %state.addr, align 4, !dbg !5342
  %5 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5344
  %performance_state1 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %5, i32 0, i32 16, !dbg !5345
  %6 = load i32, i32* %performance_state1, align 4, !dbg !5345
  %cmp2 = icmp ugt i32 %4, %6, !dbg !5346
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !5347

if.then3:                                         ; preds = %if.end
  %7 = load i32, i32* %state.addr, align 4, !dbg !5348
  store i32 %7, i32* %retval, align 4, !dbg !5349
  br label %return, !dbg !5349

if.end4:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5350, metadata !DIExpression()), !dbg !5353
  %8 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5353
  %dev_list = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %8, i32 0, i32 5, !dbg !5353
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %dev_list, i32 0, i32 0, !dbg !5353
  %9 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5353
  %10 = bitcast %struct.list_head* %9 to i8*, !dbg !5353
  store i8* %10, i8** %__mptr, align 8, !dbg !5353
  br label %do.body, !dbg !5353

do.body:                                          ; preds = %if.end4
  br label %do.end, !dbg !5354

do.end:                                           ; preds = %do.body
  %11 = load i8*, i8** %__mptr, align 8, !dbg !5353
  %add.ptr = getelementptr i8, i8* %11, i64 0, !dbg !5353
  %12 = bitcast i8* %add.ptr to %struct.pm_domain_data*, !dbg !5353
  store %struct.pm_domain_data* %12, %struct.pm_domain_data** %tmp, align 8, !dbg !5354
  %13 = load %struct.pm_domain_data*, %struct.pm_domain_data** %tmp, align 8, !dbg !5353
  store %struct.pm_domain_data* %13, %struct.pm_domain_data** %pdd, align 8, !dbg !5356
  br label %for.cond, !dbg !5356

for.cond:                                         ; preds = %do.end16, %do.end
  %14 = load %struct.pm_domain_data*, %struct.pm_domain_data** %pdd, align 8, !dbg !5357
  %list_node = getelementptr inbounds %struct.pm_domain_data, %struct.pm_domain_data* %14, i32 0, i32 0, !dbg !5357
  %15 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5357
  %dev_list5 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %15, i32 0, i32 5, !dbg !5357
  %cmp6 = icmp eq %struct.list_head* %list_node, %dev_list5, !dbg !5357
  %lnot = xor i1 %cmp6, true, !dbg !5357
  br i1 %lnot, label %for.body, label %for.end, !dbg !5356

for.body:                                         ; preds = %for.cond
  %16 = load %struct.pm_domain_data*, %struct.pm_domain_data** %pdd, align 8, !dbg !5359
  %call = call %struct.generic_pm_domain_data* @to_gpd_data(%struct.pm_domain_data* %16) #11, !dbg !5361
  store %struct.generic_pm_domain_data* %call, %struct.generic_pm_domain_data** %pd_data, align 8, !dbg !5362
  %17 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %pd_data, align 8, !dbg !5363
  %performance_state7 = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %17, i32 0, i32 5, !dbg !5365
  %18 = load i32, i32* %performance_state7, align 4, !dbg !5365
  %19 = load i32, i32* %state.addr, align 4, !dbg !5366
  %cmp8 = icmp ugt i32 %18, %19, !dbg !5367
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !5368

if.then9:                                         ; preds = %for.body
  %20 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %pd_data, align 8, !dbg !5369
  %performance_state10 = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %20, i32 0, i32 5, !dbg !5370
  %21 = load i32, i32* %performance_state10, align 4, !dbg !5370
  store i32 %21, i32* %state.addr, align 4, !dbg !5371
  br label %if.end11, !dbg !5372

if.end11:                                         ; preds = %if.then9, %for.body
  br label %for.inc, !dbg !5373

for.inc:                                          ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i8** %__mptr12, metadata !5374, metadata !DIExpression()), !dbg !5376
  %22 = load %struct.pm_domain_data*, %struct.pm_domain_data** %pdd, align 8, !dbg !5376
  %list_node13 = getelementptr inbounds %struct.pm_domain_data, %struct.pm_domain_data* %22, i32 0, i32 0, !dbg !5376
  %next14 = getelementptr inbounds %struct.list_head, %struct.list_head* %list_node13, i32 0, i32 0, !dbg !5376
  %23 = load %struct.list_head*, %struct.list_head** %next14, align 8, !dbg !5376
  %24 = bitcast %struct.list_head* %23 to i8*, !dbg !5376
  store i8* %24, i8** %__mptr12, align 8, !dbg !5376
  br label %do.body15, !dbg !5376

do.body15:                                        ; preds = %for.inc
  br label %do.end16, !dbg !5377

do.end16:                                         ; preds = %do.body15
  %25 = load i8*, i8** %__mptr12, align 8, !dbg !5376
  %add.ptr18 = getelementptr i8, i8* %25, i64 0, !dbg !5376
  %26 = bitcast i8* %add.ptr18 to %struct.pm_domain_data*, !dbg !5376
  store %struct.pm_domain_data* %26, %struct.pm_domain_data** %tmp17, align 8, !dbg !5377
  %27 = load %struct.pm_domain_data*, %struct.pm_domain_data** %tmp17, align 8, !dbg !5376
  store %struct.pm_domain_data* %27, %struct.pm_domain_data** %pdd, align 8, !dbg !5357
  br label %for.cond, !dbg !5357, !llvm.loop !5379

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr19, metadata !5381, metadata !DIExpression()), !dbg !5384
  %28 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5384
  %parent_links = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %28, i32 0, i32 3, !dbg !5384
  %next20 = getelementptr inbounds %struct.list_head, %struct.list_head* %parent_links, i32 0, i32 0, !dbg !5384
  %29 = load %struct.list_head*, %struct.list_head** %next20, align 8, !dbg !5384
  %30 = bitcast %struct.list_head* %29 to i8*, !dbg !5384
  store i8* %30, i8** %__mptr19, align 8, !dbg !5384
  br label %do.body21, !dbg !5384

do.body21:                                        ; preds = %for.end
  br label %do.end22, !dbg !5385

do.end22:                                         ; preds = %do.body21
  %31 = load i8*, i8** %__mptr19, align 8, !dbg !5384
  %add.ptr24 = getelementptr i8, i8* %31, i64 -8, !dbg !5384
  %32 = bitcast i8* %add.ptr24 to %struct.gpd_link*, !dbg !5384
  store %struct.gpd_link* %32, %struct.gpd_link** %tmp23, align 8, !dbg !5385
  %33 = load %struct.gpd_link*, %struct.gpd_link** %tmp23, align 8, !dbg !5384
  store %struct.gpd_link* %33, %struct.gpd_link** %link, align 8, !dbg !5387
  br label %for.cond25, !dbg !5387

for.cond25:                                       ; preds = %do.end40, %do.end22
  %34 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !5388
  %parent_node = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %34, i32 0, i32 1, !dbg !5388
  %35 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5388
  %parent_links26 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %35, i32 0, i32 3, !dbg !5388
  %cmp27 = icmp eq %struct.list_head* %parent_node, %parent_links26, !dbg !5388
  %lnot28 = xor i1 %cmp27, true, !dbg !5388
  br i1 %lnot28, label %for.body29, label %for.end43, !dbg !5387

for.body29:                                       ; preds = %for.cond25
  %36 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !5390
  %performance_state30 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %36, i32 0, i32 4, !dbg !5393
  %37 = load i32, i32* %performance_state30, align 8, !dbg !5393
  %38 = load i32, i32* %state.addr, align 4, !dbg !5394
  %cmp31 = icmp ugt i32 %37, %38, !dbg !5395
  br i1 %cmp31, label %if.then32, label %if.end34, !dbg !5396

if.then32:                                        ; preds = %for.body29
  %39 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !5397
  %performance_state33 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %39, i32 0, i32 4, !dbg !5398
  %40 = load i32, i32* %performance_state33, align 8, !dbg !5398
  store i32 %40, i32* %state.addr, align 4, !dbg !5399
  br label %if.end34, !dbg !5400

if.end34:                                         ; preds = %if.then32, %for.body29
  br label %for.inc35, !dbg !5401

for.inc35:                                        ; preds = %if.end34
  call void @llvm.dbg.declare(metadata i8** %__mptr36, metadata !5402, metadata !DIExpression()), !dbg !5404
  %41 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !5404
  %parent_node37 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %41, i32 0, i32 1, !dbg !5404
  %next38 = getelementptr inbounds %struct.list_head, %struct.list_head* %parent_node37, i32 0, i32 0, !dbg !5404
  %42 = load %struct.list_head*, %struct.list_head** %next38, align 8, !dbg !5404
  %43 = bitcast %struct.list_head* %42 to i8*, !dbg !5404
  store i8* %43, i8** %__mptr36, align 8, !dbg !5404
  br label %do.body39, !dbg !5404

do.body39:                                        ; preds = %for.inc35
  br label %do.end40, !dbg !5405

do.end40:                                         ; preds = %do.body39
  %44 = load i8*, i8** %__mptr36, align 8, !dbg !5404
  %add.ptr42 = getelementptr i8, i8* %44, i64 -8, !dbg !5404
  %45 = bitcast i8* %add.ptr42 to %struct.gpd_link*, !dbg !5404
  store %struct.gpd_link* %45, %struct.gpd_link** %tmp41, align 8, !dbg !5405
  %46 = load %struct.gpd_link*, %struct.gpd_link** %tmp41, align 8, !dbg !5404
  store %struct.gpd_link* %46, %struct.gpd_link** %link, align 8, !dbg !5388
  br label %for.cond25, !dbg !5388, !llvm.loop !5407

for.end43:                                        ; preds = %for.cond25
  %47 = load i32, i32* %state.addr, align 4, !dbg !5409
  store i32 %47, i32* %retval, align 4, !dbg !5410
  br label %return, !dbg !5410

return:                                           ; preds = %for.end43, %if.then3, %if.then
  %48 = load i32, i32* %retval, align 4, !dbg !5411
  ret i32 %48, !dbg !5411
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_genpd_set_performance_state(%struct.generic_pm_domain* %genpd, i32 %state, i32 %depth) #0 !dbg !5412 {
entry:
  %retval = alloca i32, align 4
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %state.addr = alloca i32, align 4
  %depth.addr = alloca i32, align 4
  %parent = alloca %struct.generic_pm_domain*, align 8
  %link = alloca %struct.gpd_link*, align 8
  %parent_state = alloca i32, align 4
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.gpd_link*, align 8
  %__mptr27 = alloca i8*, align 8
  %tmp32 = alloca %struct.gpd_link*, align 8
  %__mptr40 = alloca i8*, align 8
  %tmp44 = alloca %struct.gpd_link*, align 8
  %__mptr74 = alloca i8*, align 8
  %tmp79 = alloca %struct.gpd_link*, align 8
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !5415, metadata !DIExpression()), !dbg !5416
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !5417, metadata !DIExpression()), !dbg !5418
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !5419, metadata !DIExpression()), !dbg !5420
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %parent, metadata !5421, metadata !DIExpression()), !dbg !5422
  call void @llvm.dbg.declare(metadata %struct.gpd_link** %link, metadata !5423, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.declare(metadata i32* %parent_state, metadata !5425, metadata !DIExpression()), !dbg !5426
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5427, metadata !DIExpression()), !dbg !5428
  %0 = load i32, i32* %state.addr, align 4, !dbg !5429
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5431
  %performance_state = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %1, i32 0, i32 16, !dbg !5432
  %2 = load i32, i32* %performance_state, align 4, !dbg !5432
  %cmp = icmp eq i32 %0, %2, !dbg !5433
  br i1 %cmp, label %if.then, label %if.end, !dbg !5434

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5435
  br label %return, !dbg !5435

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5436, metadata !DIExpression()), !dbg !5439
  %3 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5439
  %child_links = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %3, i32 0, i32 4, !dbg !5439
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %child_links, i32 0, i32 0, !dbg !5439
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5439
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !5439
  store i8* %5, i8** %__mptr, align 8, !dbg !5439
  br label %do.body, !dbg !5439

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !5440

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !5439
  %add.ptr = getelementptr i8, i8* %6, i64 -32, !dbg !5439
  %7 = bitcast i8* %add.ptr to %struct.gpd_link*, !dbg !5439
  store %struct.gpd_link* %7, %struct.gpd_link** %tmp, align 8, !dbg !5440
  %8 = load %struct.gpd_link*, %struct.gpd_link** %tmp, align 8, !dbg !5439
  store %struct.gpd_link* %8, %struct.gpd_link** %link, align 8, !dbg !5442
  br label %for.cond, !dbg !5442

for.cond:                                         ; preds = %do.end31, %do.end
  %9 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !5443
  %child_node = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %9, i32 0, i32 3, !dbg !5443
  %10 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5443
  %child_links1 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %10, i32 0, i32 4, !dbg !5443
  %cmp2 = icmp eq %struct.list_head* %child_node, %child_links1, !dbg !5443
  %lnot = xor i1 %cmp2, true, !dbg !5443
  br i1 %lnot, label %for.body, label %for.end, !dbg !5442

for.body:                                         ; preds = %for.cond
  %11 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !5445
  %parent3 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %11, i32 0, i32 0, !dbg !5447
  %12 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent3, align 8, !dbg !5447
  store %struct.generic_pm_domain* %12, %struct.generic_pm_domain** %parent, align 8, !dbg !5448
  %13 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !5449
  %set_performance_state = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %13, i32 0, i32 23, !dbg !5451
  %14 = load i32 (%struct.generic_pm_domain*, i32)*, i32 (%struct.generic_pm_domain*, i32)** %set_performance_state, align 8, !dbg !5451
  %tobool = icmp ne i32 (%struct.generic_pm_domain*, i32)* %14, null, !dbg !5449
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !5452

if.then4:                                         ; preds = %for.body
  br label %for.inc, !dbg !5453

if.end5:                                          ; preds = %for.body
  %15 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5454
  %opp_table = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %15, i32 0, i32 21, !dbg !5455
  %16 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5455
  %17 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !5456
  %opp_table6 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %17, i32 0, i32 21, !dbg !5457
  %18 = load %struct.opp_table*, %struct.opp_table** %opp_table6, align 8, !dbg !5457
  %19 = load i32, i32* %state.addr, align 4, !dbg !5458
  %call = call i32 @dev_pm_opp_xlate_performance_state(%struct.opp_table* %16, %struct.opp_table* %18, i32 %19) #11, !dbg !5459
  store i32 %call, i32* %ret, align 4, !dbg !5460
  %20 = load i32, i32* %ret, align 4, !dbg !5461
  %cmp7 = icmp slt i32 %20, 0, !dbg !5461
  %lnot8 = xor i1 %cmp7, true, !dbg !5461
  %lnot9 = xor i1 %lnot8, true, !dbg !5461
  %lnot.ext = zext i1 %lnot9 to i32, !dbg !5461
  %conv = sext i32 %lnot.ext to i64, !dbg !5461
  %tobool10 = icmp ne i64 %conv, 0, !dbg !5461
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !5463

if.then11:                                        ; preds = %if.end5
  br label %err, !dbg !5464

if.end12:                                         ; preds = %if.end5
  %21 = load i32, i32* %ret, align 4, !dbg !5465
  store i32 %21, i32* %parent_state, align 4, !dbg !5466
  %22 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !5467
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %22, i32 0, i32 38, !dbg !5467
  %23 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !5467
  %lock_nested = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %23, i32 0, i32 1, !dbg !5467
  %24 = load void (%struct.generic_pm_domain*, i32)*, void (%struct.generic_pm_domain*, i32)** %lock_nested, align 8, !dbg !5467
  %25 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !5467
  %26 = load i32, i32* %depth.addr, align 4, !dbg !5467
  %add = add i32 %26, 1, !dbg !5467
  call void %24(%struct.generic_pm_domain* %25, i32 %add) #11, !dbg !5467
  %27 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !5468
  %performance_state13 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %27, i32 0, i32 4, !dbg !5469
  %28 = load i32, i32* %performance_state13, align 8, !dbg !5469
  %29 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !5470
  %prev_performance_state = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %29, i32 0, i32 5, !dbg !5471
  store i32 %28, i32* %prev_performance_state, align 4, !dbg !5472
  %30 = load i32, i32* %parent_state, align 4, !dbg !5473
  %31 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !5474
  %performance_state14 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %31, i32 0, i32 4, !dbg !5475
  store i32 %30, i32* %performance_state14, align 8, !dbg !5476
  %32 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !5477
  %33 = load i32, i32* %parent_state, align 4, !dbg !5478
  %call15 = call i32 @_genpd_reeval_performance_state(%struct.generic_pm_domain* %32, i32 %33) #11, !dbg !5479
  store i32 %call15, i32* %parent_state, align 4, !dbg !5480
  %34 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !5481
  %35 = load i32, i32* %parent_state, align 4, !dbg !5482
  %36 = load i32, i32* %depth.addr, align 4, !dbg !5483
  %add16 = add i32 %36, 1, !dbg !5484
  %call17 = call i32 @_genpd_set_performance_state(%struct.generic_pm_domain* %34, i32 %35, i32 %add16) #11, !dbg !5485
  store i32 %call17, i32* %ret, align 4, !dbg !5486
  %37 = load i32, i32* %ret, align 4, !dbg !5487
  %tobool18 = icmp ne i32 %37, 0, !dbg !5487
  br i1 %tobool18, label %if.then19, label %if.end22, !dbg !5489

if.then19:                                        ; preds = %if.end12
  %38 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !5490
  %prev_performance_state20 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %38, i32 0, i32 5, !dbg !5491
  %39 = load i32, i32* %prev_performance_state20, align 4, !dbg !5491
  %40 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !5492
  %performance_state21 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %40, i32 0, i32 4, !dbg !5493
  store i32 %39, i32* %performance_state21, align 8, !dbg !5494
  br label %if.end22, !dbg !5492

if.end22:                                         ; preds = %if.then19, %if.end12
  %41 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !5495
  %lock_ops23 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %41, i32 0, i32 38, !dbg !5495
  %42 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops23, align 8, !dbg !5495
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %42, i32 0, i32 3, !dbg !5495
  %43 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !5495
  %44 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !5495
  call void %43(%struct.generic_pm_domain* %44) #11, !dbg !5495
  %45 = load i32, i32* %ret, align 4, !dbg !5496
  %tobool24 = icmp ne i32 %45, 0, !dbg !5496
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !5498

if.then25:                                        ; preds = %if.end22
  br label %err, !dbg !5499

if.end26:                                         ; preds = %if.end22
  br label %for.inc, !dbg !5500

for.inc:                                          ; preds = %if.end26, %if.then4
  call void @llvm.dbg.declare(metadata i8** %__mptr27, metadata !5501, metadata !DIExpression()), !dbg !5503
  %46 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !5503
  %child_node28 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %46, i32 0, i32 3, !dbg !5503
  %next29 = getelementptr inbounds %struct.list_head, %struct.list_head* %child_node28, i32 0, i32 0, !dbg !5503
  %47 = load %struct.list_head*, %struct.list_head** %next29, align 8, !dbg !5503
  %48 = bitcast %struct.list_head* %47 to i8*, !dbg !5503
  store i8* %48, i8** %__mptr27, align 8, !dbg !5503
  br label %do.body30, !dbg !5503

do.body30:                                        ; preds = %for.inc
  br label %do.end31, !dbg !5504

do.end31:                                         ; preds = %do.body30
  %49 = load i8*, i8** %__mptr27, align 8, !dbg !5503
  %add.ptr33 = getelementptr i8, i8* %49, i64 -32, !dbg !5503
  %50 = bitcast i8* %add.ptr33 to %struct.gpd_link*, !dbg !5503
  store %struct.gpd_link* %50, %struct.gpd_link** %tmp32, align 8, !dbg !5504
  %51 = load %struct.gpd_link*, %struct.gpd_link** %tmp32, align 8, !dbg !5503
  store %struct.gpd_link* %51, %struct.gpd_link** %link, align 8, !dbg !5443
  br label %for.cond, !dbg !5443, !llvm.loop !5506

for.end:                                          ; preds = %for.cond
  %52 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5508
  %set_performance_state34 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %52, i32 0, i32 23, !dbg !5509
  %53 = load i32 (%struct.generic_pm_domain*, i32)*, i32 (%struct.generic_pm_domain*, i32)** %set_performance_state34, align 8, !dbg !5509
  %54 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5510
  %55 = load i32, i32* %state.addr, align 4, !dbg !5511
  %call35 = call i32 %53(%struct.generic_pm_domain* %54, i32 %55) #11, !dbg !5508
  store i32 %call35, i32* %ret, align 4, !dbg !5512
  %56 = load i32, i32* %ret, align 4, !dbg !5513
  %tobool36 = icmp ne i32 %56, 0, !dbg !5513
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !5515

if.then37:                                        ; preds = %for.end
  br label %err, !dbg !5516

if.end38:                                         ; preds = %for.end
  %57 = load i32, i32* %state.addr, align 4, !dbg !5517
  %58 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5518
  %performance_state39 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %58, i32 0, i32 16, !dbg !5519
  store i32 %57, i32* %performance_state39, align 4, !dbg !5520
  store i32 0, i32* %retval, align 4, !dbg !5521
  br label %return, !dbg !5521

err:                                              ; preds = %if.then37, %if.then25, %if.then11
  call void @llvm.dbg.label(metadata !5522), !dbg !5523
  call void @llvm.dbg.declare(metadata i8** %__mptr40, metadata !5524, metadata !DIExpression()), !dbg !5527
  %59 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !5527
  %child_node41 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %59, i32 0, i32 3, !dbg !5527
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %child_node41, i32 0, i32 1, !dbg !5527
  %60 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !5527
  %61 = bitcast %struct.list_head* %60 to i8*, !dbg !5527
  store i8* %61, i8** %__mptr40, align 8, !dbg !5527
  br label %do.body42, !dbg !5527

do.body42:                                        ; preds = %err
  br label %do.end43, !dbg !5528

do.end43:                                         ; preds = %do.body42
  %62 = load i8*, i8** %__mptr40, align 8, !dbg !5527
  %add.ptr45 = getelementptr i8, i8* %62, i64 -32, !dbg !5527
  %63 = bitcast i8* %add.ptr45 to %struct.gpd_link*, !dbg !5527
  store %struct.gpd_link* %63, %struct.gpd_link** %tmp44, align 8, !dbg !5528
  %64 = load %struct.gpd_link*, %struct.gpd_link** %tmp44, align 8, !dbg !5527
  store %struct.gpd_link* %64, %struct.gpd_link** %link, align 8, !dbg !5530
  br label %for.cond46, !dbg !5530

for.cond46:                                       ; preds = %do.end78, %do.end43
  %65 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !5531
  %child_node47 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %65, i32 0, i32 3, !dbg !5531
  %66 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5531
  %child_links48 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %66, i32 0, i32 4, !dbg !5531
  %cmp49 = icmp eq %struct.list_head* %child_node47, %child_links48, !dbg !5531
  %lnot51 = xor i1 %cmp49, true, !dbg !5531
  br i1 %lnot51, label %for.body53, label %for.end81, !dbg !5530

for.body53:                                       ; preds = %for.cond46
  %67 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !5533
  %parent54 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %67, i32 0, i32 0, !dbg !5535
  %68 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent54, align 8, !dbg !5535
  store %struct.generic_pm_domain* %68, %struct.generic_pm_domain** %parent, align 8, !dbg !5536
  %69 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !5537
  %set_performance_state55 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %69, i32 0, i32 23, !dbg !5539
  %70 = load i32 (%struct.generic_pm_domain*, i32)*, i32 (%struct.generic_pm_domain*, i32)** %set_performance_state55, align 8, !dbg !5539
  %tobool56 = icmp ne i32 (%struct.generic_pm_domain*, i32)* %70, null, !dbg !5537
  br i1 %tobool56, label %if.end58, label %if.then57, !dbg !5540

if.then57:                                        ; preds = %for.body53
  br label %for.inc73, !dbg !5541

if.end58:                                         ; preds = %for.body53
  %71 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !5542
  %lock_ops59 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %71, i32 0, i32 38, !dbg !5542
  %72 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops59, align 8, !dbg !5542
  %lock_nested60 = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %72, i32 0, i32 1, !dbg !5542
  %73 = load void (%struct.generic_pm_domain*, i32)*, void (%struct.generic_pm_domain*, i32)** %lock_nested60, align 8, !dbg !5542
  %74 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !5542
  %75 = load i32, i32* %depth.addr, align 4, !dbg !5542
  %add61 = add i32 %75, 1, !dbg !5542
  call void %73(%struct.generic_pm_domain* %74, i32 %add61) #11, !dbg !5542
  %76 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !5543
  %prev_performance_state62 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %76, i32 0, i32 5, !dbg !5544
  %77 = load i32, i32* %prev_performance_state62, align 4, !dbg !5544
  store i32 %77, i32* %parent_state, align 4, !dbg !5545
  %78 = load i32, i32* %parent_state, align 4, !dbg !5546
  %79 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !5547
  %performance_state63 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %79, i32 0, i32 4, !dbg !5548
  store i32 %78, i32* %performance_state63, align 8, !dbg !5549
  %80 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !5550
  %81 = load i32, i32* %parent_state, align 4, !dbg !5551
  %call64 = call i32 @_genpd_reeval_performance_state(%struct.generic_pm_domain* %80, i32 %81) #11, !dbg !5552
  store i32 %call64, i32* %parent_state, align 4, !dbg !5553
  %82 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !5554
  %83 = load i32, i32* %parent_state, align 4, !dbg !5556
  %84 = load i32, i32* %depth.addr, align 4, !dbg !5557
  %add65 = add i32 %84, 1, !dbg !5558
  %call66 = call i32 @_genpd_set_performance_state(%struct.generic_pm_domain* %82, i32 %83, i32 %add65) #11, !dbg !5559
  %tobool67 = icmp ne i32 %call66, 0, !dbg !5559
  br i1 %tobool67, label %if.then68, label %if.end70, !dbg !5560

if.then68:                                        ; preds = %if.end58
  %85 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !5561
  %name = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %85, i32 0, i32 10, !dbg !5561
  %86 = load i8*, i8** %name, align 8, !dbg !5561
  %87 = load i32, i32* %parent_state, align 4, !dbg !5561
  %call69 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i8* %86, i32 %87) #12, !dbg !5561
  br label %if.end70, !dbg !5563

if.end70:                                         ; preds = %if.then68, %if.end58
  %88 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !5564
  %lock_ops71 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %88, i32 0, i32 38, !dbg !5564
  %89 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops71, align 8, !dbg !5564
  %unlock72 = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %89, i32 0, i32 3, !dbg !5564
  %90 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock72, align 8, !dbg !5564
  %91 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !5564
  call void %90(%struct.generic_pm_domain* %91) #11, !dbg !5564
  br label %for.inc73, !dbg !5565

for.inc73:                                        ; preds = %if.end70, %if.then57
  call void @llvm.dbg.declare(metadata i8** %__mptr74, metadata !5566, metadata !DIExpression()), !dbg !5568
  %92 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !5568
  %child_node75 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %92, i32 0, i32 3, !dbg !5568
  %prev76 = getelementptr inbounds %struct.list_head, %struct.list_head* %child_node75, i32 0, i32 1, !dbg !5568
  %93 = load %struct.list_head*, %struct.list_head** %prev76, align 8, !dbg !5568
  %94 = bitcast %struct.list_head* %93 to i8*, !dbg !5568
  store i8* %94, i8** %__mptr74, align 8, !dbg !5568
  br label %do.body77, !dbg !5568

do.body77:                                        ; preds = %for.inc73
  br label %do.end78, !dbg !5569

do.end78:                                         ; preds = %do.body77
  %95 = load i8*, i8** %__mptr74, align 8, !dbg !5568
  %add.ptr80 = getelementptr i8, i8* %95, i64 -32, !dbg !5568
  %96 = bitcast i8* %add.ptr80 to %struct.gpd_link*, !dbg !5568
  store %struct.gpd_link* %96, %struct.gpd_link** %tmp79, align 8, !dbg !5569
  %97 = load %struct.gpd_link*, %struct.gpd_link** %tmp79, align 8, !dbg !5568
  store %struct.gpd_link* %97, %struct.gpd_link** %link, align 8, !dbg !5531
  br label %for.cond46, !dbg !5531, !llvm.loop !5571

for.end81:                                        ; preds = %for.cond46
  %98 = load i32, i32* %ret, align 4, !dbg !5573
  store i32 %98, i32* %retval, align 4, !dbg !5574
  br label %return, !dbg !5574

return:                                           ; preds = %for.end81, %if.end38, %if.then
  %99 = load i32, i32* %retval, align 4, !dbg !5575
  ret i32 %99, !dbg !5575
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @pd_ignore_unused_setup(i8* %__unused) #2 section ".init.text" !dbg !5576 {
entry:
  %__unused.addr = alloca i8*, align 8
  store i8* %__unused, i8** %__unused.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %__unused.addr, metadata !5577, metadata !DIExpression()), !dbg !5578
  store i8 1, i8* @pd_ignore_unused, align 1, !dbg !5579
  ret i32 1, !dbg !5580
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_power_off_unused() #2 section ".init.text" !dbg !5581 {
entry:
  %retval = alloca i32, align 4
  %genpd = alloca %struct.generic_pm_domain*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.generic_pm_domain*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp5 = alloca %struct.generic_pm_domain*, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd, metadata !5584, metadata !DIExpression()), !dbg !5585
  %0 = load i8, i8* @pd_ignore_unused, align 1, !dbg !5586
  %tobool = trunc i8 %0 to i1, !dbg !5586
  br i1 %tobool, label %if.then, label %if.end, !dbg !5588

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.13, i64 0, i64 0)) #12, !dbg !5589
  store i32 0, i32* %retval, align 4, !dbg !5591
  br label %return, !dbg !5591

if.end:                                           ; preds = %entry
  call void @mutex_lock(%struct.mutex* @gpd_list_lock) #11, !dbg !5592
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5593, metadata !DIExpression()), !dbg !5596
  %1 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @gpd_list, i32 0, i32 0), align 8, !dbg !5596
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !5596
  store i8* %2, i8** %__mptr, align 8, !dbg !5596
  br label %do.body, !dbg !5596

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !5597

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !5596
  %add.ptr = getelementptr i8, i8* %3, i64 -920, !dbg !5596
  %4 = bitcast i8* %add.ptr to %struct.generic_pm_domain*, !dbg !5596
  store %struct.generic_pm_domain* %4, %struct.generic_pm_domain** %tmp, align 8, !dbg !5597
  %5 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %tmp, align 8, !dbg !5596
  store %struct.generic_pm_domain* %5, %struct.generic_pm_domain** %genpd, align 8, !dbg !5599
  br label %for.cond, !dbg !5599

for.cond:                                         ; preds = %do.end4, %do.end
  %6 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5600
  %gpd_list_node = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %6, i32 0, i32 2, !dbg !5600
  %cmp = icmp eq %struct.list_head* %gpd_list_node, @gpd_list, !dbg !5600
  %lnot = xor i1 %cmp, true, !dbg !5600
  br i1 %lnot, label %for.body, label %for.end, !dbg !5599

for.body:                                         ; preds = %for.cond
  %7 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5602
  call void @genpd_queue_power_off_work(%struct.generic_pm_domain* %7) #11, !dbg !5603
  br label %for.inc, !dbg !5603

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !5604, metadata !DIExpression()), !dbg !5606
  %8 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5606
  %gpd_list_node2 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %8, i32 0, i32 2, !dbg !5606
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %gpd_list_node2, i32 0, i32 0, !dbg !5606
  %9 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5606
  %10 = bitcast %struct.list_head* %9 to i8*, !dbg !5606
  store i8* %10, i8** %__mptr1, align 8, !dbg !5606
  br label %do.body3, !dbg !5606

do.body3:                                         ; preds = %for.inc
  br label %do.end4, !dbg !5607

do.end4:                                          ; preds = %do.body3
  %11 = load i8*, i8** %__mptr1, align 8, !dbg !5606
  %add.ptr6 = getelementptr i8, i8* %11, i64 -920, !dbg !5606
  %12 = bitcast i8* %add.ptr6 to %struct.generic_pm_domain*, !dbg !5606
  store %struct.generic_pm_domain* %12, %struct.generic_pm_domain** %tmp5, align 8, !dbg !5607
  %13 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %tmp5, align 8, !dbg !5606
  store %struct.generic_pm_domain* %13, %struct.generic_pm_domain** %genpd, align 8, !dbg !5600
  br label %for.cond, !dbg !5600, !llvm.loop !5609

for.end:                                          ; preds = %for.cond
  call void @mutex_unlock(%struct.mutex* @gpd_list_lock) #11, !dbg !5611
  store i32 0, i32* %retval, align 4, !dbg !5612
  br label %return, !dbg !5612

return:                                           ; preds = %for.end, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !5613
  ret i32 %14, !dbg !5613
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pm_genpd_syscore_poweroff(%struct.device* %dev) #0 !dbg !5614 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5615, metadata !DIExpression()), !dbg !5616
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5617
  call void @genpd_syscore_switch(%struct.device* %0, i1 zeroext true) #11, !dbg !5618
  ret void, !dbg !5619
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genpd_syscore_switch(%struct.device* %dev, i1 zeroext %suspend) #0 !dbg !5620 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %suspend.addr = alloca i8, align 1
  %genpd = alloca %struct.generic_pm_domain*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5621, metadata !DIExpression()), !dbg !5622
  %frombool = zext i1 %suspend to i8
  store i8 %frombool, i8* %suspend.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %suspend.addr, metadata !5623, metadata !DIExpression()), !dbg !5624
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd, metadata !5625, metadata !DIExpression()), !dbg !5626
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5627
  %call = call %struct.generic_pm_domain* @dev_to_genpd_safe(%struct.device* %0) #11, !dbg !5628
  store %struct.generic_pm_domain* %call, %struct.generic_pm_domain** %genpd, align 8, !dbg !5629
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5630
  %tobool = icmp ne %struct.generic_pm_domain* %1, null, !dbg !5630
  br i1 %tobool, label %if.end, label %if.then, !dbg !5632

if.then:                                          ; preds = %entry
  br label %if.end4, !dbg !5633

if.end:                                           ; preds = %entry
  %2 = load i8, i8* %suspend.addr, align 1, !dbg !5634
  %tobool1 = trunc i8 %2 to i1, !dbg !5634
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !5636

if.then2:                                         ; preds = %if.end
  %3 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5637
  %suspended_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %3, i32 0, i32 14, !dbg !5639
  %4 = load i32, i32* %suspended_count, align 4, !dbg !5640
  %inc = add i32 %4, 1, !dbg !5640
  store i32 %inc, i32* %suspended_count, align 4, !dbg !5640
  %5 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5641
  call void @genpd_sync_power_off(%struct.generic_pm_domain* %5, i1 zeroext false, i32 0) #11, !dbg !5642
  br label %if.end4, !dbg !5643

if.else:                                          ; preds = %if.end
  %6 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5644
  call void @genpd_sync_power_on(%struct.generic_pm_domain* %6, i1 zeroext false, i32 0) #11, !dbg !5646
  %7 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5647
  %suspended_count3 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %7, i32 0, i32 14, !dbg !5648
  %8 = load i32, i32* %suspended_count3, align 4, !dbg !5649
  %dec = add i32 %8, -1, !dbg !5649
  store i32 %dec, i32* %suspended_count3, align 4, !dbg !5649
  br label %if.end4

if.end4:                                          ; preds = %if.then, %if.else, %if.then2
  ret void, !dbg !5650
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pm_genpd_syscore_poweron(%struct.device* %dev) #0 !dbg !5651 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5652, metadata !DIExpression()), !dbg !5653
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5654
  call void @genpd_syscore_switch(%struct.device* %0, i1 zeroext false) #11, !dbg !5655
  ret void, !dbg !5656
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pm_genpd_add_device(%struct.generic_pm_domain* %genpd, %struct.device* %dev) #0 !dbg !5657 {
entry:
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ret = alloca i32, align 4
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !5658, metadata !DIExpression()), !dbg !5659
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5660, metadata !DIExpression()), !dbg !5661
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5662, metadata !DIExpression()), !dbg !5663
  call void @mutex_lock(%struct.mutex* @gpd_list_lock) #11, !dbg !5664
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5665
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5666
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5667
  %call = call i32 @genpd_add_device(%struct.generic_pm_domain* %0, %struct.device* %1, %struct.device* %2) #11, !dbg !5668
  store i32 %call, i32* %ret, align 4, !dbg !5669
  call void @mutex_unlock(%struct.mutex* @gpd_list_lock) #11, !dbg !5670
  %3 = load i32, i32* %ret, align 4, !dbg !5671
  ret i32 %3, !dbg !5672
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_add_device(%struct.generic_pm_domain* %genpd, %struct.device* %dev, %struct.device* %base_dev) #0 !dbg !5673 {
entry:
  %retval = alloca i32, align 4
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %base_dev.addr = alloca %struct.device*, align 8
  %gpd_data = alloca %struct.generic_pm_domain_data*, align 8
  %ret = alloca i32, align 4
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !5676, metadata !DIExpression()), !dbg !5677
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5678, metadata !DIExpression()), !dbg !5679
  store %struct.device* %base_dev, %struct.device** %base_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %base_dev.addr, metadata !5680, metadata !DIExpression()), !dbg !5681
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain_data** %gpd_data, metadata !5682, metadata !DIExpression()), !dbg !5683
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5684, metadata !DIExpression()), !dbg !5685
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5686
  %1 = bitcast %struct.generic_pm_domain* %0 to i8*, !dbg !5686
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %1) #11, !dbg !5688
  br i1 %call, label %if.then, label %lor.lhs.false, !dbg !5689

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5690
  %3 = bitcast %struct.device* %2 to i8*, !dbg !5690
  %call1 = call zeroext i1 @IS_ERR_OR_NULL(i8* %3) #11, !dbg !5691
  br i1 %call1, label %if.then, label %if.end, !dbg !5692

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !5693
  br label %return, !dbg !5693

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5694
  %call2 = call %struct.generic_pm_domain_data* @genpd_alloc_dev_data(%struct.device* %4) #11, !dbg !5695
  store %struct.generic_pm_domain_data* %call2, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !5696
  %5 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !5697
  %6 = bitcast %struct.generic_pm_domain_data* %5 to i8*, !dbg !5697
  %call3 = call zeroext i1 @IS_ERR(i8* %6) #11, !dbg !5699
  br i1 %call3, label %if.then4, label %if.end6, !dbg !5700

if.then4:                                         ; preds = %if.end
  %7 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !5701
  %8 = bitcast %struct.generic_pm_domain_data* %7 to i8*, !dbg !5701
  %call5 = call i64 @PTR_ERR(i8* %8) #11, !dbg !5702
  %conv = trunc i64 %call5 to i32, !dbg !5702
  store i32 %conv, i32* %retval, align 4, !dbg !5703
  br label %return, !dbg !5703

if.end6:                                          ; preds = %if.end
  %9 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5704
  %10 = load %struct.device*, %struct.device** %base_dev.addr, align 8, !dbg !5705
  %call7 = call i32 @genpd_get_cpu(%struct.generic_pm_domain* %9, %struct.device* %10) #11, !dbg !5706
  %11 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !5707
  %cpu = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %11, i32 0, i32 4, !dbg !5708
  store i32 %call7, i32* %cpu, align 8, !dbg !5709
  %12 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5710
  %attach_dev = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %12, i32 0, i32 29, !dbg !5711
  %13 = load i32 (%struct.generic_pm_domain*, %struct.device*)*, i32 (%struct.generic_pm_domain*, %struct.device*)** %attach_dev, align 8, !dbg !5711
  %tobool = icmp ne i32 (%struct.generic_pm_domain*, %struct.device*)* %13, null, !dbg !5710
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5710

cond.true:                                        ; preds = %if.end6
  %14 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5712
  %attach_dev8 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %14, i32 0, i32 29, !dbg !5713
  %15 = load i32 (%struct.generic_pm_domain*, %struct.device*)*, i32 (%struct.generic_pm_domain*, %struct.device*)** %attach_dev8, align 8, !dbg !5713
  %16 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5714
  %17 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5715
  %call9 = call i32 %15(%struct.generic_pm_domain* %16, %struct.device* %17) #11, !dbg !5712
  br label %cond.end, !dbg !5710

cond.false:                                       ; preds = %if.end6
  br label %cond.end, !dbg !5710

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call9, %cond.true ], [ 0, %cond.false ], !dbg !5710
  store i32 %cond, i32* %ret, align 4, !dbg !5716
  %18 = load i32, i32* %ret, align 4, !dbg !5717
  %tobool10 = icmp ne i32 %18, 0, !dbg !5717
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !5719

if.then11:                                        ; preds = %cond.end
  br label %out, !dbg !5720

if.end12:                                         ; preds = %cond.end
  %19 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5721
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %19, i32 0, i32 38, !dbg !5721
  %20 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !5721
  %lock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %20, i32 0, i32 0, !dbg !5721
  %21 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %lock, align 8, !dbg !5721
  %22 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5721
  call void %21(%struct.generic_pm_domain* %22) #11, !dbg !5721
  %23 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5722
  %24 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !5723
  %cpu13 = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %24, i32 0, i32 4, !dbg !5724
  %25 = load i32, i32* %cpu13, align 8, !dbg !5724
  call void @genpd_set_cpumask(%struct.generic_pm_domain* %23, i32 %25) #11, !dbg !5725
  %26 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5726
  %27 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5727
  %domain = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %27, i32 0, i32 1, !dbg !5728
  call void @dev_pm_domain_set(%struct.device* %26, %struct.dev_pm_domain* %domain) #11, !dbg !5729
  %28 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5730
  %device_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %28, i32 0, i32 13, !dbg !5731
  %29 = load i32, i32* %device_count, align 8, !dbg !5732
  %inc = add i32 %29, 1, !dbg !5732
  store i32 %inc, i32* %device_count, align 8, !dbg !5732
  %30 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5733
  %max_off_time_changed = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %30, i32 0, i32 26, !dbg !5734
  store i8 1, i8* %max_off_time_changed, align 8, !dbg !5735
  %31 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !5736
  %base = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %31, i32 0, i32 0, !dbg !5737
  %list_node = getelementptr inbounds %struct.pm_domain_data, %struct.pm_domain_data* %base, i32 0, i32 0, !dbg !5738
  %32 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5739
  %dev_list = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %32, i32 0, i32 5, !dbg !5740
  call void @list_add_tail(%struct.list_head* %list_node, %struct.list_head* %dev_list) #11, !dbg !5741
  %33 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5742
  %lock_ops14 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %33, i32 0, i32 38, !dbg !5742
  %34 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops14, align 8, !dbg !5742
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %34, i32 0, i32 3, !dbg !5742
  %35 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !5742
  %36 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5742
  call void %35(%struct.generic_pm_domain* %36) #11, !dbg !5742
  br label %out, !dbg !5742

out:                                              ; preds = %if.end12, %if.then11
  call void @llvm.dbg.label(metadata !5743), !dbg !5744
  %37 = load i32, i32* %ret, align 4, !dbg !5745
  %tobool15 = icmp ne i32 %37, 0, !dbg !5745
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !5747

if.then16:                                        ; preds = %out
  %38 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5748
  %39 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !5749
  call void @genpd_free_dev_data(%struct.device* %38, %struct.generic_pm_domain_data* %39) #11, !dbg !5750
  br label %if.end18, !dbg !5750

if.else:                                          ; preds = %out
  %40 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5751
  %41 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !5752
  %nb = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %41, i32 0, i32 2, !dbg !5753
  %call17 = call i32 @dev_pm_qos_add_notifier(%struct.device* %40, %struct.notifier_block* %nb, i32 1) #11, !dbg !5754
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then16
  %42 = load i32, i32* %ret, align 4, !dbg !5755
  store i32 %42, i32* %retval, align 4, !dbg !5756
  br label %return, !dbg !5756

return:                                           ; preds = %if.end18, %if.then4, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !5757
  ret i32 %43, !dbg !5757
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pm_genpd_remove_device(%struct.device* %dev) #0 !dbg !5758 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %genpd = alloca %struct.generic_pm_domain*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5759, metadata !DIExpression()), !dbg !5760
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd, metadata !5761, metadata !DIExpression()), !dbg !5762
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5763
  %call = call %struct.generic_pm_domain* @dev_to_genpd_safe(%struct.device* %0) #11, !dbg !5764
  store %struct.generic_pm_domain* %call, %struct.generic_pm_domain** %genpd, align 8, !dbg !5762
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5765
  %tobool = icmp ne %struct.generic_pm_domain* %1, null, !dbg !5765
  br i1 %tobool, label %if.end, label %if.then, !dbg !5767

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !5768
  br label %return, !dbg !5768

if.end:                                           ; preds = %entry
  %2 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5769
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5770
  %call1 = call i32 @genpd_remove_device(%struct.generic_pm_domain* %2, %struct.device* %3) #11, !dbg !5771
  store i32 %call1, i32* %retval, align 4, !dbg !5772
  br label %return, !dbg !5772

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !5773
  ret i32 %4, !dbg !5773
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_remove_device(%struct.generic_pm_domain* %genpd, %struct.device* %dev) #0 !dbg !5774 {
entry:
  %retval = alloca i32, align 4
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %gpd_data = alloca %struct.generic_pm_domain_data*, align 8
  %pdd = alloca %struct.pm_domain_data*, align 8
  %ret = alloca i32, align 4
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !5775, metadata !DIExpression()), !dbg !5776
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5777, metadata !DIExpression()), !dbg !5778
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain_data** %gpd_data, metadata !5779, metadata !DIExpression()), !dbg !5780
  call void @llvm.dbg.declare(metadata %struct.pm_domain_data** %pdd, metadata !5781, metadata !DIExpression()), !dbg !5782
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5783, metadata !DIExpression()), !dbg !5784
  store i32 0, i32* %ret, align 4, !dbg !5784
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5785
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !5786
  %subsys_data = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 25, !dbg !5787
  %1 = load %struct.pm_subsys_data*, %struct.pm_subsys_data** %subsys_data, align 8, !dbg !5787
  %domain_data = getelementptr inbounds %struct.pm_subsys_data, %struct.pm_subsys_data* %1, i32 0, i32 3, !dbg !5788
  %2 = load %struct.pm_domain_data*, %struct.pm_domain_data** %domain_data, align 8, !dbg !5788
  store %struct.pm_domain_data* %2, %struct.pm_domain_data** %pdd, align 8, !dbg !5789
  %3 = load %struct.pm_domain_data*, %struct.pm_domain_data** %pdd, align 8, !dbg !5790
  %call = call %struct.generic_pm_domain_data* @to_gpd_data(%struct.pm_domain_data* %3) #11, !dbg !5791
  store %struct.generic_pm_domain_data* %call, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !5792
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5793
  %5 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !5794
  %nb = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %5, i32 0, i32 2, !dbg !5795
  %call1 = call i32 @dev_pm_qos_remove_notifier(%struct.device* %4, %struct.notifier_block* %nb, i32 1) #11, !dbg !5796
  %6 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5797
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %6, i32 0, i32 38, !dbg !5797
  %7 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !5797
  %lock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %7, i32 0, i32 0, !dbg !5797
  %8 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %lock, align 8, !dbg !5797
  %9 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5797
  call void %8(%struct.generic_pm_domain* %9) #11, !dbg !5797
  %10 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5798
  %prepared_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %10, i32 0, i32 15, !dbg !5800
  %11 = load i32, i32* %prepared_count, align 8, !dbg !5800
  %cmp = icmp ugt i32 %11, 0, !dbg !5801
  br i1 %cmp, label %if.then, label %if.end, !dbg !5802

if.then:                                          ; preds = %entry
  store i32 -11, i32* %ret, align 4, !dbg !5803
  br label %out, !dbg !5805

if.end:                                           ; preds = %entry
  %12 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5806
  %device_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %12, i32 0, i32 13, !dbg !5807
  %13 = load i32, i32* %device_count, align 8, !dbg !5808
  %dec = add i32 %13, -1, !dbg !5808
  store i32 %dec, i32* %device_count, align 8, !dbg !5808
  %14 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5809
  %max_off_time_changed = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %14, i32 0, i32 26, !dbg !5810
  store i8 1, i8* %max_off_time_changed, align 8, !dbg !5811
  %15 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5812
  %16 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !5813
  %cpu = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %16, i32 0, i32 4, !dbg !5814
  %17 = load i32, i32* %cpu, align 8, !dbg !5814
  call void @genpd_clear_cpumask(%struct.generic_pm_domain* %15, i32 %17) #11, !dbg !5815
  %18 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5816
  call void @dev_pm_domain_set(%struct.device* %18, %struct.dev_pm_domain* null) #11, !dbg !5817
  %19 = load %struct.pm_domain_data*, %struct.pm_domain_data** %pdd, align 8, !dbg !5818
  %list_node = getelementptr inbounds %struct.pm_domain_data, %struct.pm_domain_data* %19, i32 0, i32 0, !dbg !5819
  call void @list_del_init(%struct.list_head* %list_node) #11, !dbg !5820
  %20 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5821
  %lock_ops2 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %20, i32 0, i32 38, !dbg !5821
  %21 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops2, align 8, !dbg !5821
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %21, i32 0, i32 3, !dbg !5821
  %22 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !5821
  %23 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5821
  call void %22(%struct.generic_pm_domain* %23) #11, !dbg !5821
  %24 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5822
  %detach_dev = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %24, i32 0, i32 30, !dbg !5824
  %25 = load void (%struct.generic_pm_domain*, %struct.device*)*, void (%struct.generic_pm_domain*, %struct.device*)** %detach_dev, align 8, !dbg !5824
  %tobool = icmp ne void (%struct.generic_pm_domain*, %struct.device*)* %25, null, !dbg !5822
  br i1 %tobool, label %if.then3, label %if.end5, !dbg !5825

if.then3:                                         ; preds = %if.end
  %26 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5826
  %detach_dev4 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %26, i32 0, i32 30, !dbg !5827
  %27 = load void (%struct.generic_pm_domain*, %struct.device*)*, void (%struct.generic_pm_domain*, %struct.device*)** %detach_dev4, align 8, !dbg !5827
  %28 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5828
  %29 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5829
  call void %27(%struct.generic_pm_domain* %28, %struct.device* %29) #11, !dbg !5826
  br label %if.end5, !dbg !5826

if.end5:                                          ; preds = %if.then3, %if.end
  %30 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5830
  %31 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !5831
  call void @genpd_free_dev_data(%struct.device* %30, %struct.generic_pm_domain_data* %31) #11, !dbg !5832
  store i32 0, i32* %retval, align 4, !dbg !5833
  br label %return, !dbg !5833

out:                                              ; preds = %if.then
  call void @llvm.dbg.label(metadata !5834), !dbg !5835
  %32 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5836
  %lock_ops6 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %32, i32 0, i32 38, !dbg !5836
  %33 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops6, align 8, !dbg !5836
  %unlock7 = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %33, i32 0, i32 3, !dbg !5836
  %34 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock7, align 8, !dbg !5836
  %35 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5836
  call void %34(%struct.generic_pm_domain* %35) #11, !dbg !5836
  %36 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5837
  %37 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !5838
  %nb8 = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %37, i32 0, i32 2, !dbg !5839
  %call9 = call i32 @dev_pm_qos_add_notifier(%struct.device* %36, %struct.notifier_block* %nb8, i32 1) #11, !dbg !5840
  %38 = load i32, i32* %ret, align 4, !dbg !5841
  store i32 %38, i32* %retval, align 4, !dbg !5842
  br label %return, !dbg !5842

return:                                           ; preds = %out, %if.end5
  %39 = load i32, i32* %retval, align 4, !dbg !5843
  ret i32 %39, !dbg !5843
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dev_pm_genpd_add_notifier(%struct.device* %dev, %struct.notifier_block* %nb) #0 !dbg !5844 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %nb.addr = alloca %struct.notifier_block*, align 8
  %genpd = alloca %struct.generic_pm_domain*, align 8
  %gpd_data = alloca %struct.generic_pm_domain_data*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5847, metadata !DIExpression()), !dbg !5848
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !5849, metadata !DIExpression()), !dbg !5850
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd, metadata !5851, metadata !DIExpression()), !dbg !5852
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain_data** %gpd_data, metadata !5853, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5855, metadata !DIExpression()), !dbg !5856
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5857
  %call = call %struct.generic_pm_domain* @dev_to_genpd_safe(%struct.device* %0) #11, !dbg !5858
  store %struct.generic_pm_domain* %call, %struct.generic_pm_domain** %genpd, align 8, !dbg !5859
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5860
  %tobool = icmp ne %struct.generic_pm_domain* %1, null, !dbg !5860
  br i1 %tobool, label %if.end, label %if.then, !dbg !5862

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !5863
  br label %return, !dbg !5863

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5864, metadata !DIExpression()), !dbg !5867
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5867
  %power = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 11, !dbg !5867
  %subsys_data = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 25, !dbg !5867
  %3 = load %struct.pm_subsys_data*, %struct.pm_subsys_data** %subsys_data, align 8, !dbg !5867
  %tobool1 = icmp ne %struct.pm_subsys_data* %3, null, !dbg !5867
  br i1 %tobool1, label %lor.rhs, label %lor.end, !dbg !5867

lor.rhs:                                          ; preds = %if.end
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5867
  %power2 = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 11, !dbg !5867
  %subsys_data3 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power2, i32 0, i32 25, !dbg !5867
  %5 = load %struct.pm_subsys_data*, %struct.pm_subsys_data** %subsys_data3, align 8, !dbg !5867
  %domain_data = getelementptr inbounds %struct.pm_subsys_data, %struct.pm_subsys_data* %5, i32 0, i32 3, !dbg !5867
  %6 = load %struct.pm_domain_data*, %struct.pm_domain_data** %domain_data, align 8, !dbg !5867
  %tobool4 = icmp ne %struct.pm_domain_data* %6, null, !dbg !5867
  %lnot = xor i1 %tobool4, true, !dbg !5867
  br label %lor.end, !dbg !5867

lor.end:                                          ; preds = %lor.rhs, %if.end
  %7 = phi i1 [ true, %if.end ], [ %lnot, %lor.rhs ]
  %lnot5 = xor i1 %7, true, !dbg !5867
  %lnot6 = xor i1 %lnot5, true, !dbg !5867
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !5867
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5867
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !5868
  %tobool7 = icmp ne i32 %8, 0, !dbg !5868
  %lnot8 = xor i1 %tobool7, true, !dbg !5868
  %lnot10 = xor i1 %lnot8, true, !dbg !5868
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !5868
  %conv = sext i32 %lnot.ext11 to i64, !dbg !5868
  %tobool12 = icmp ne i64 %conv, 0, !dbg !5868
  br i1 %tobool12, label %if.then13, label %if.end20, !dbg !5867

if.then13:                                        ; preds = %lor.end
  br label %do.body, !dbg !5868

do.body:                                          ; preds = %if.then13
  br label %do.body14, !dbg !5870

do.body14:                                        ; preds = %do.body
  br label %do.end, !dbg !5872

do.end:                                           ; preds = %do.body14
  br label %do.body15, !dbg !5870

do.body15:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 1663, i32 2305, i64 12) #7, !dbg !5874, !srcloc !5876
  br label %do.end16, !dbg !5874

do.end16:                                         ; preds = %do.body15
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 320) #7, !dbg !5877, !srcloc !5879
  br label %do.body17, !dbg !5870

do.body17:                                        ; preds = %do.end16
  br label %do.end18, !dbg !5880

do.end18:                                         ; preds = %do.body17
  br label %do.end19, !dbg !5870

do.end19:                                         ; preds = %do.end18
  br label %if.end20, !dbg !5870

if.end20:                                         ; preds = %do.end19, %lor.end
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !5867
  %tobool21 = icmp ne i32 %9, 0, !dbg !5867
  %lnot22 = xor i1 %tobool21, true, !dbg !5867
  %lnot24 = xor i1 %lnot22, true, !dbg !5867
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !5867
  %conv26 = sext i32 %lnot.ext25 to i64, !dbg !5867
  store i64 %conv26, i64* %tmp, align 8, !dbg !5868
  %10 = load i64, i64* %tmp, align 8, !dbg !5867
  %tobool27 = icmp ne i64 %10, 0, !dbg !5882
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !5883

if.then28:                                        ; preds = %if.end20
  store i32 -22, i32* %retval, align 4, !dbg !5884
  br label %return, !dbg !5884

if.end29:                                         ; preds = %if.end20
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5885
  %power30 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 11, !dbg !5886
  %subsys_data31 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power30, i32 0, i32 25, !dbg !5887
  %12 = load %struct.pm_subsys_data*, %struct.pm_subsys_data** %subsys_data31, align 8, !dbg !5887
  %domain_data32 = getelementptr inbounds %struct.pm_subsys_data, %struct.pm_subsys_data* %12, i32 0, i32 3, !dbg !5888
  %13 = load %struct.pm_domain_data*, %struct.pm_domain_data** %domain_data32, align 8, !dbg !5888
  %call33 = call %struct.generic_pm_domain_data* @to_gpd_data(%struct.pm_domain_data* %13) #11, !dbg !5889
  store %struct.generic_pm_domain_data* %call33, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !5890
  %14 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !5891
  %power_nb = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %14, i32 0, i32 3, !dbg !5893
  %15 = load %struct.notifier_block*, %struct.notifier_block** %power_nb, align 8, !dbg !5893
  %tobool34 = icmp ne %struct.notifier_block* %15, null, !dbg !5891
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !5894

if.then35:                                        ; preds = %if.end29
  store i32 -17, i32* %retval, align 4, !dbg !5895
  br label %return, !dbg !5895

if.end36:                                         ; preds = %if.end29
  %16 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5896
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %16, i32 0, i32 38, !dbg !5896
  %17 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !5896
  %lock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %17, i32 0, i32 0, !dbg !5896
  %18 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %lock, align 8, !dbg !5896
  %19 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5896
  call void %18(%struct.generic_pm_domain* %19) #11, !dbg !5896
  %20 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5897
  %power_notifiers = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %20, i32 0, i32 20, !dbg !5898
  %21 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !5899
  %call37 = call i32 @raw_notifier_chain_register(%struct.raw_notifier_head* %power_notifiers, %struct.notifier_block* %21) #11, !dbg !5900
  store i32 %call37, i32* %ret, align 4, !dbg !5901
  %22 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5902
  %lock_ops38 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %22, i32 0, i32 38, !dbg !5902
  %23 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops38, align 8, !dbg !5902
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %23, i32 0, i32 3, !dbg !5902
  %24 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !5902
  %25 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5902
  call void %24(%struct.generic_pm_domain* %25) #11, !dbg !5902
  %26 = load i32, i32* %ret, align 4, !dbg !5903
  %tobool39 = icmp ne i32 %26, 0, !dbg !5903
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !5905

if.then40:                                        ; preds = %if.end36
  %27 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5906
  %28 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5906
  %name = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %28, i32 0, i32 10, !dbg !5906
  %29 = load i8*, i8** %name, align 8, !dbg !5906
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %27, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i8* %29) #12, !dbg !5906
  %30 = load i32, i32* %ret, align 4, !dbg !5908
  store i32 %30, i32* %retval, align 4, !dbg !5909
  br label %return, !dbg !5909

if.end41:                                         ; preds = %if.end36
  %31 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !5910
  %32 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !5911
  %power_nb42 = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %32, i32 0, i32 3, !dbg !5912
  store %struct.notifier_block* %31, %struct.notifier_block** %power_nb42, align 8, !dbg !5913
  store i32 0, i32* %retval, align 4, !dbg !5914
  br label %return, !dbg !5914

return:                                           ; preds = %if.end41, %if.then40, %if.then35, %if.then28, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !5915
  ret i32 %33, !dbg !5915
}

; Function Attrs: noredzone
declare dso_local i32 @raw_notifier_chain_register(%struct.raw_notifier_head*, %struct.notifier_block*) #3

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dev_pm_genpd_remove_notifier(%struct.device* %dev) #0 !dbg !5916 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %genpd = alloca %struct.generic_pm_domain*, align 8
  %gpd_data = alloca %struct.generic_pm_domain_data*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5917, metadata !DIExpression()), !dbg !5918
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd, metadata !5919, metadata !DIExpression()), !dbg !5920
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain_data** %gpd_data, metadata !5921, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5923, metadata !DIExpression()), !dbg !5924
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5925
  %call = call %struct.generic_pm_domain* @dev_to_genpd_safe(%struct.device* %0) #11, !dbg !5926
  store %struct.generic_pm_domain* %call, %struct.generic_pm_domain** %genpd, align 8, !dbg !5927
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5928
  %tobool = icmp ne %struct.generic_pm_domain* %1, null, !dbg !5928
  br i1 %tobool, label %if.end, label %if.then, !dbg !5930

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !5931
  br label %return, !dbg !5931

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5932, metadata !DIExpression()), !dbg !5935
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5935
  %power = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 11, !dbg !5935
  %subsys_data = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 25, !dbg !5935
  %3 = load %struct.pm_subsys_data*, %struct.pm_subsys_data** %subsys_data, align 8, !dbg !5935
  %tobool1 = icmp ne %struct.pm_subsys_data* %3, null, !dbg !5935
  br i1 %tobool1, label %lor.rhs, label %lor.end, !dbg !5935

lor.rhs:                                          ; preds = %if.end
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5935
  %power2 = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 11, !dbg !5935
  %subsys_data3 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power2, i32 0, i32 25, !dbg !5935
  %5 = load %struct.pm_subsys_data*, %struct.pm_subsys_data** %subsys_data3, align 8, !dbg !5935
  %domain_data = getelementptr inbounds %struct.pm_subsys_data, %struct.pm_subsys_data* %5, i32 0, i32 3, !dbg !5935
  %6 = load %struct.pm_domain_data*, %struct.pm_domain_data** %domain_data, align 8, !dbg !5935
  %tobool4 = icmp ne %struct.pm_domain_data* %6, null, !dbg !5935
  %lnot = xor i1 %tobool4, true, !dbg !5935
  br label %lor.end, !dbg !5935

lor.end:                                          ; preds = %lor.rhs, %if.end
  %7 = phi i1 [ true, %if.end ], [ %lnot, %lor.rhs ]
  %lnot5 = xor i1 %7, true, !dbg !5935
  %lnot6 = xor i1 %lnot5, true, !dbg !5935
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !5935
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5935
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !5936
  %tobool7 = icmp ne i32 %8, 0, !dbg !5936
  %lnot8 = xor i1 %tobool7, true, !dbg !5936
  %lnot10 = xor i1 %lnot8, true, !dbg !5936
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !5936
  %conv = sext i32 %lnot.ext11 to i64, !dbg !5936
  %tobool12 = icmp ne i64 %conv, 0, !dbg !5936
  br i1 %tobool12, label %if.then13, label %if.end20, !dbg !5935

if.then13:                                        ; preds = %lor.end
  br label %do.body, !dbg !5936

do.body:                                          ; preds = %if.then13
  br label %do.body14, !dbg !5938

do.body14:                                        ; preds = %do.body
  br label %do.end, !dbg !5940

do.end:                                           ; preds = %do.body14
  br label %do.body15, !dbg !5938

do.body15:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 1709, i32 2305, i64 12) #7, !dbg !5942, !srcloc !5944
  br label %do.end16, !dbg !5942

do.end16:                                         ; preds = %do.body15
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 321) #7, !dbg !5945, !srcloc !5947
  br label %do.body17, !dbg !5938

do.body17:                                        ; preds = %do.end16
  br label %do.end18, !dbg !5948

do.end18:                                         ; preds = %do.body17
  br label %do.end19, !dbg !5938

do.end19:                                         ; preds = %do.end18
  br label %if.end20, !dbg !5938

if.end20:                                         ; preds = %do.end19, %lor.end
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !5935
  %tobool21 = icmp ne i32 %9, 0, !dbg !5935
  %lnot22 = xor i1 %tobool21, true, !dbg !5935
  %lnot24 = xor i1 %lnot22, true, !dbg !5935
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !5935
  %conv26 = sext i32 %lnot.ext25 to i64, !dbg !5935
  store i64 %conv26, i64* %tmp, align 8, !dbg !5936
  %10 = load i64, i64* %tmp, align 8, !dbg !5935
  %tobool27 = icmp ne i64 %10, 0, !dbg !5950
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !5951

if.then28:                                        ; preds = %if.end20
  store i32 -22, i32* %retval, align 4, !dbg !5952
  br label %return, !dbg !5952

if.end29:                                         ; preds = %if.end20
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5953
  %power30 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 11, !dbg !5954
  %subsys_data31 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power30, i32 0, i32 25, !dbg !5955
  %12 = load %struct.pm_subsys_data*, %struct.pm_subsys_data** %subsys_data31, align 8, !dbg !5955
  %domain_data32 = getelementptr inbounds %struct.pm_subsys_data, %struct.pm_subsys_data* %12, i32 0, i32 3, !dbg !5956
  %13 = load %struct.pm_domain_data*, %struct.pm_domain_data** %domain_data32, align 8, !dbg !5956
  %call33 = call %struct.generic_pm_domain_data* @to_gpd_data(%struct.pm_domain_data* %13) #11, !dbg !5957
  store %struct.generic_pm_domain_data* %call33, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !5958
  %14 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !5959
  %power_nb = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %14, i32 0, i32 3, !dbg !5961
  %15 = load %struct.notifier_block*, %struct.notifier_block** %power_nb, align 8, !dbg !5961
  %tobool34 = icmp ne %struct.notifier_block* %15, null, !dbg !5959
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !5962

if.then35:                                        ; preds = %if.end29
  store i32 -19, i32* %retval, align 4, !dbg !5963
  br label %return, !dbg !5963

if.end36:                                         ; preds = %if.end29
  %16 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5964
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %16, i32 0, i32 38, !dbg !5964
  %17 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !5964
  %lock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %17, i32 0, i32 0, !dbg !5964
  %18 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %lock, align 8, !dbg !5964
  %19 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5964
  call void %18(%struct.generic_pm_domain* %19) #11, !dbg !5964
  %20 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5965
  %power_notifiers = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %20, i32 0, i32 20, !dbg !5966
  %21 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !5967
  %power_nb37 = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %21, i32 0, i32 3, !dbg !5968
  %22 = load %struct.notifier_block*, %struct.notifier_block** %power_nb37, align 8, !dbg !5968
  %call38 = call i32 @raw_notifier_chain_unregister(%struct.raw_notifier_head* %power_notifiers, %struct.notifier_block* %22) #11, !dbg !5969
  store i32 %call38, i32* %ret, align 4, !dbg !5970
  %23 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5971
  %lock_ops39 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %23, i32 0, i32 38, !dbg !5971
  %24 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops39, align 8, !dbg !5971
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %24, i32 0, i32 3, !dbg !5971
  %25 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !5971
  %26 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5971
  call void %25(%struct.generic_pm_domain* %26) #11, !dbg !5971
  %27 = load i32, i32* %ret, align 4, !dbg !5972
  %tobool40 = icmp ne i32 %27, 0, !dbg !5972
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !5974

if.then41:                                        ; preds = %if.end36
  %28 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5975
  %29 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !5975
  %name = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %29, i32 0, i32 10, !dbg !5975
  %30 = load i8*, i8** %name, align 8, !dbg !5975
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %28, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %30) #12, !dbg !5975
  %31 = load i32, i32* %ret, align 4, !dbg !5977
  store i32 %31, i32* %retval, align 4, !dbg !5978
  br label %return, !dbg !5978

if.end42:                                         ; preds = %if.end36
  %32 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !5979
  %power_nb43 = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %32, i32 0, i32 3, !dbg !5980
  store %struct.notifier_block* null, %struct.notifier_block** %power_nb43, align 8, !dbg !5981
  store i32 0, i32* %retval, align 4, !dbg !5982
  br label %return, !dbg !5982

return:                                           ; preds = %if.end42, %if.then41, %if.then35, %if.then28, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !5983
  ret i32 %33, !dbg !5983
}

; Function Attrs: noredzone
declare dso_local i32 @raw_notifier_chain_unregister(%struct.raw_notifier_head*, %struct.notifier_block*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pm_genpd_add_subdomain(%struct.generic_pm_domain* %genpd, %struct.generic_pm_domain* %subdomain) #0 !dbg !5984 {
entry:
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %subdomain.addr = alloca %struct.generic_pm_domain*, align 8
  %ret = alloca i32, align 4
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !5987, metadata !DIExpression()), !dbg !5988
  store %struct.generic_pm_domain* %subdomain, %struct.generic_pm_domain** %subdomain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %subdomain.addr, metadata !5989, metadata !DIExpression()), !dbg !5990
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5991, metadata !DIExpression()), !dbg !5992
  call void @mutex_lock(%struct.mutex* @gpd_list_lock) #11, !dbg !5993
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !5994
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain.addr, align 8, !dbg !5995
  %call = call i32 @genpd_add_subdomain(%struct.generic_pm_domain* %0, %struct.generic_pm_domain* %1) #11, !dbg !5996
  store i32 %call, i32* %ret, align 4, !dbg !5997
  call void @mutex_unlock(%struct.mutex* @gpd_list_lock) #11, !dbg !5998
  %2 = load i32, i32* %ret, align 4, !dbg !5999
  ret i32 %2, !dbg !6000
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_add_subdomain(%struct.generic_pm_domain* %genpd, %struct.generic_pm_domain* %subdomain) #0 !dbg !6001 {
entry:
  %retval = alloca i32, align 4
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %subdomain.addr = alloca %struct.generic_pm_domain*, align 8
  %link = alloca %struct.gpd_link*, align 8
  %itr = alloca %struct.gpd_link*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp47 = alloca %struct.gpd_link*, align 8
  %__mptr60 = alloca i8*, align 8
  %tmp65 = alloca %struct.gpd_link*, align 8
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !6002, metadata !DIExpression()), !dbg !6003
  store %struct.generic_pm_domain* %subdomain, %struct.generic_pm_domain** %subdomain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %subdomain.addr, metadata !6004, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.declare(metadata %struct.gpd_link** %link, metadata !6006, metadata !DIExpression()), !dbg !6007
  call void @llvm.dbg.declare(metadata %struct.gpd_link** %itr, metadata !6008, metadata !DIExpression()), !dbg !6009
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6010, metadata !DIExpression()), !dbg !6011
  store i32 0, i32* %ret, align 4, !dbg !6011
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6012
  %1 = bitcast %struct.generic_pm_domain* %0 to i8*, !dbg !6012
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %1) #11, !dbg !6014
  br i1 %call, label %if.then, label %lor.lhs.false, !dbg !6015

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain.addr, align 8, !dbg !6016
  %3 = bitcast %struct.generic_pm_domain* %2 to i8*, !dbg !6016
  %call1 = call zeroext i1 @IS_ERR_OR_NULL(i8* %3) #11, !dbg !6017
  br i1 %call1, label %if.then, label %lor.lhs.false2, !dbg !6018

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %4 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6019
  %5 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain.addr, align 8, !dbg !6020
  %cmp = icmp eq %struct.generic_pm_domain* %4, %5, !dbg !6021
  br i1 %cmp, label %if.then, label %if.end, !dbg !6022

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !6023
  br label %return, !dbg !6023

if.end:                                           ; preds = %lor.lhs.false2
  %6 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6024
  %flags = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %6, i32 0, i32 31, !dbg !6024
  %7 = load i32, i32* %flags, align 8, !dbg !6024
  %and = and i32 %7, 2, !dbg !6024
  %tobool = icmp ne i32 %and, 0, !dbg !6024
  br i1 %tobool, label %if.end31, label %land.lhs.true, !dbg !6026

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain.addr, align 8, !dbg !6027
  %flags3 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %8, i32 0, i32 31, !dbg !6027
  %9 = load i32, i32* %flags3, align 8, !dbg !6027
  %and4 = and i32 %9, 2, !dbg !6027
  %tobool5 = icmp ne i32 %and4, 0, !dbg !6027
  br i1 %tobool5, label %if.then6, label %if.end31, !dbg !6028

if.then6:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6029, metadata !DIExpression()), !dbg !6032
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !6032
  %10 = load i32, i32* %__ret_warn_on, align 4, !dbg !6033
  %tobool7 = icmp ne i32 %10, 0, !dbg !6033
  %lnot = xor i1 %tobool7, true, !dbg !6033
  %lnot8 = xor i1 %lnot, true, !dbg !6033
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !6033
  %conv = sext i32 %lnot.ext to i64, !dbg !6033
  %tobool9 = icmp ne i64 %conv, 0, !dbg !6033
  br i1 %tobool9, label %if.then10, label %if.end24, !dbg !6032

if.then10:                                        ; preds = %if.then6
  br label %do.body, !dbg !6033

do.body:                                          ; preds = %if.then10
  br label %do.body11, !dbg !6035

do.body11:                                        ; preds = %do.body
  br label %do.end, !dbg !6037

do.end:                                           ; preds = %do.body11
  %11 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6035
  %name = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %11, i32 0, i32 10, !dbg !6035
  %12 = load i8*, i8** %name, align 8, !dbg !6035
  %13 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain.addr, align 8, !dbg !6035
  %name12 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %13, i32 0, i32 10, !dbg !6035
  %14 = load i8*, i8** %name12, align 8, !dbg !6035
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i64 0, i64 0), i8* %12, i8* %14) #11, !dbg !6035
  br label %do.body13, !dbg !6035

do.body13:                                        ; preds = %do.end
  br label %do.body14, !dbg !6039

do.body14:                                        ; preds = %do.body13
  br label %do.end15, !dbg !6041

do.end15:                                         ; preds = %do.body14
  br label %do.body16, !dbg !6039

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 1749, i32 2313, i64 12) #7, !dbg !6043, !srcloc !6045
  br label %do.end17, !dbg !6043

do.end17:                                         ; preds = %do.body16
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 322) #7, !dbg !6046, !srcloc !6048
  br label %do.body18, !dbg !6039

do.body18:                                        ; preds = %do.end17
  br label %do.end19, !dbg !6049

do.end19:                                         ; preds = %do.body18
  br label %do.end20, !dbg !6039

do.end20:                                         ; preds = %do.end19
  br label %do.body21, !dbg !6035

do.body21:                                        ; preds = %do.end20
  br label %do.end22, !dbg !6051

do.end22:                                         ; preds = %do.body21
  br label %do.end23, !dbg !6035

do.end23:                                         ; preds = %do.end22
  br label %if.end24, !dbg !6035

if.end24:                                         ; preds = %do.end23, %if.then6
  %15 = load i32, i32* %__ret_warn_on, align 4, !dbg !6032
  %tobool25 = icmp ne i32 %15, 0, !dbg !6032
  %lnot26 = xor i1 %tobool25, true, !dbg !6032
  %lnot28 = xor i1 %lnot26, true, !dbg !6032
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !6032
  %conv30 = sext i32 %lnot.ext29 to i64, !dbg !6032
  store i64 %conv30, i64* %tmp, align 8, !dbg !6033
  %16 = load i64, i64* %tmp, align 8, !dbg !6032
  store i32 -22, i32* %retval, align 4, !dbg !6053
  br label %return, !dbg !6053

if.end31:                                         ; preds = %land.lhs.true, %if.end
  %call32 = call i8* @kzalloc(i64 56, i32 3264) #11, !dbg !6054
  %17 = bitcast i8* %call32 to %struct.gpd_link*, !dbg !6054
  store %struct.gpd_link* %17, %struct.gpd_link** %link, align 8, !dbg !6055
  %18 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !6056
  %tobool33 = icmp ne %struct.gpd_link* %18, null, !dbg !6056
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !6058

if.then34:                                        ; preds = %if.end31
  store i32 -12, i32* %retval, align 4, !dbg !6059
  br label %return, !dbg !6059

if.end35:                                         ; preds = %if.end31
  %19 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain.addr, align 8, !dbg !6060
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %19, i32 0, i32 38, !dbg !6060
  %20 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !6060
  %lock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %20, i32 0, i32 0, !dbg !6060
  %21 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %lock, align 8, !dbg !6060
  %22 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain.addr, align 8, !dbg !6060
  call void %21(%struct.generic_pm_domain* %22) #11, !dbg !6060
  %23 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6061
  %lock_ops36 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %23, i32 0, i32 38, !dbg !6061
  %24 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops36, align 8, !dbg !6061
  %lock_nested = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %24, i32 0, i32 1, !dbg !6061
  %25 = load void (%struct.generic_pm_domain*, i32)*, void (%struct.generic_pm_domain*, i32)** %lock_nested, align 8, !dbg !6061
  %26 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6061
  call void %25(%struct.generic_pm_domain* %26, i32 1) #11, !dbg !6061
  %27 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6062
  %status = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %27, i32 0, i32 12, !dbg !6062
  %28 = load i32, i32* %status, align 4, !dbg !6062
  %cmp37 = icmp eq i32 %28, 0, !dbg !6062
  br i1 %cmp37, label %if.end44, label %land.lhs.true39, !dbg !6064

land.lhs.true39:                                  ; preds = %if.end35
  %29 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain.addr, align 8, !dbg !6065
  %status40 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %29, i32 0, i32 12, !dbg !6065
  %30 = load i32, i32* %status40, align 4, !dbg !6065
  %cmp41 = icmp eq i32 %30, 0, !dbg !6065
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !6066

if.then43:                                        ; preds = %land.lhs.true39
  store i32 -22, i32* %ret, align 4, !dbg !6067
  br label %out, !dbg !6069

if.end44:                                         ; preds = %land.lhs.true39, %if.end35
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6070, metadata !DIExpression()), !dbg !6073
  %31 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6073
  %parent_links = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %31, i32 0, i32 3, !dbg !6073
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %parent_links, i32 0, i32 0, !dbg !6073
  %32 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6073
  %33 = bitcast %struct.list_head* %32 to i8*, !dbg !6073
  store i8* %33, i8** %__mptr, align 8, !dbg !6073
  br label %do.body45, !dbg !6073

do.body45:                                        ; preds = %if.end44
  br label %do.end46, !dbg !6074

do.end46:                                         ; preds = %do.body45
  %34 = load i8*, i8** %__mptr, align 8, !dbg !6073
  %add.ptr = getelementptr i8, i8* %34, i64 -8, !dbg !6073
  %35 = bitcast i8* %add.ptr to %struct.gpd_link*, !dbg !6073
  store %struct.gpd_link* %35, %struct.gpd_link** %tmp47, align 8, !dbg !6074
  %36 = load %struct.gpd_link*, %struct.gpd_link** %tmp47, align 8, !dbg !6073
  store %struct.gpd_link* %36, %struct.gpd_link** %itr, align 8, !dbg !6076
  br label %for.cond, !dbg !6076

for.cond:                                         ; preds = %do.end64, %do.end46
  %37 = load %struct.gpd_link*, %struct.gpd_link** %itr, align 8, !dbg !6077
  %parent_node = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %37, i32 0, i32 1, !dbg !6077
  %38 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6077
  %parent_links48 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %38, i32 0, i32 3, !dbg !6077
  %cmp49 = icmp eq %struct.list_head* %parent_node, %parent_links48, !dbg !6077
  %lnot51 = xor i1 %cmp49, true, !dbg !6077
  br i1 %lnot51, label %for.body, label %for.end, !dbg !6076

for.body:                                         ; preds = %for.cond
  %39 = load %struct.gpd_link*, %struct.gpd_link** %itr, align 8, !dbg !6079
  %child = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %39, i32 0, i32 2, !dbg !6082
  %40 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %child, align 8, !dbg !6082
  %41 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain.addr, align 8, !dbg !6083
  %cmp53 = icmp eq %struct.generic_pm_domain* %40, %41, !dbg !6084
  br i1 %cmp53, label %land.lhs.true55, label %if.end59, !dbg !6085

land.lhs.true55:                                  ; preds = %for.body
  %42 = load %struct.gpd_link*, %struct.gpd_link** %itr, align 8, !dbg !6086
  %parent = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %42, i32 0, i32 0, !dbg !6087
  %43 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !6087
  %44 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6088
  %cmp56 = icmp eq %struct.generic_pm_domain* %43, %44, !dbg !6089
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !6090

if.then58:                                        ; preds = %land.lhs.true55
  store i32 -22, i32* %ret, align 4, !dbg !6091
  br label %out, !dbg !6093

if.end59:                                         ; preds = %land.lhs.true55, %for.body
  br label %for.inc, !dbg !6094

for.inc:                                          ; preds = %if.end59
  call void @llvm.dbg.declare(metadata i8** %__mptr60, metadata !6095, metadata !DIExpression()), !dbg !6097
  %45 = load %struct.gpd_link*, %struct.gpd_link** %itr, align 8, !dbg !6097
  %parent_node61 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %45, i32 0, i32 1, !dbg !6097
  %next62 = getelementptr inbounds %struct.list_head, %struct.list_head* %parent_node61, i32 0, i32 0, !dbg !6097
  %46 = load %struct.list_head*, %struct.list_head** %next62, align 8, !dbg !6097
  %47 = bitcast %struct.list_head* %46 to i8*, !dbg !6097
  store i8* %47, i8** %__mptr60, align 8, !dbg !6097
  br label %do.body63, !dbg !6097

do.body63:                                        ; preds = %for.inc
  br label %do.end64, !dbg !6098

do.end64:                                         ; preds = %do.body63
  %48 = load i8*, i8** %__mptr60, align 8, !dbg !6097
  %add.ptr66 = getelementptr i8, i8* %48, i64 -8, !dbg !6097
  %49 = bitcast i8* %add.ptr66 to %struct.gpd_link*, !dbg !6097
  store %struct.gpd_link* %49, %struct.gpd_link** %tmp65, align 8, !dbg !6098
  %50 = load %struct.gpd_link*, %struct.gpd_link** %tmp65, align 8, !dbg !6097
  store %struct.gpd_link* %50, %struct.gpd_link** %itr, align 8, !dbg !6077
  br label %for.cond, !dbg !6077, !llvm.loop !6100

for.end:                                          ; preds = %for.cond
  %51 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6102
  %52 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !6103
  %parent67 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %52, i32 0, i32 0, !dbg !6104
  store %struct.generic_pm_domain* %51, %struct.generic_pm_domain** %parent67, align 8, !dbg !6105
  %53 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !6106
  %parent_node68 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %53, i32 0, i32 1, !dbg !6107
  %54 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6108
  %parent_links69 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %54, i32 0, i32 3, !dbg !6109
  call void @list_add_tail(%struct.list_head* %parent_node68, %struct.list_head* %parent_links69) #11, !dbg !6110
  %55 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain.addr, align 8, !dbg !6111
  %56 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !6112
  %child70 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %56, i32 0, i32 2, !dbg !6113
  store %struct.generic_pm_domain* %55, %struct.generic_pm_domain** %child70, align 8, !dbg !6114
  %57 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !6115
  %child_node = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %57, i32 0, i32 3, !dbg !6116
  %58 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain.addr, align 8, !dbg !6117
  %child_links = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %58, i32 0, i32 4, !dbg !6118
  call void @list_add_tail(%struct.list_head* %child_node, %struct.list_head* %child_links) #11, !dbg !6119
  %59 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain.addr, align 8, !dbg !6120
  %status71 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %59, i32 0, i32 12, !dbg !6120
  %60 = load i32, i32* %status71, align 4, !dbg !6120
  %cmp72 = icmp eq i32 %60, 0, !dbg !6120
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !6122

if.then74:                                        ; preds = %for.end
  %61 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6123
  call void @genpd_sd_counter_inc(%struct.generic_pm_domain* %61) #11, !dbg !6124
  br label %if.end75, !dbg !6124

if.end75:                                         ; preds = %if.then74, %for.end
  br label %out, !dbg !6120

out:                                              ; preds = %if.end75, %if.then58, %if.then43
  call void @llvm.dbg.label(metadata !6125), !dbg !6126
  %62 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6127
  %lock_ops76 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %62, i32 0, i32 38, !dbg !6127
  %63 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops76, align 8, !dbg !6127
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %63, i32 0, i32 3, !dbg !6127
  %64 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !6127
  %65 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6127
  call void %64(%struct.generic_pm_domain* %65) #11, !dbg !6127
  %66 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain.addr, align 8, !dbg !6128
  %lock_ops77 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %66, i32 0, i32 38, !dbg !6128
  %67 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops77, align 8, !dbg !6128
  %unlock78 = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %67, i32 0, i32 3, !dbg !6128
  %68 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock78, align 8, !dbg !6128
  %69 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain.addr, align 8, !dbg !6128
  call void %68(%struct.generic_pm_domain* %69) #11, !dbg !6128
  %70 = load i32, i32* %ret, align 4, !dbg !6129
  %tobool79 = icmp ne i32 %70, 0, !dbg !6129
  br i1 %tobool79, label %if.then80, label %if.end81, !dbg !6131

if.then80:                                        ; preds = %out
  %71 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !6132
  %72 = bitcast %struct.gpd_link* %71 to i8*, !dbg !6132
  call void @kfree(i8* %72) #11, !dbg !6133
  br label %if.end81, !dbg !6133

if.end81:                                         ; preds = %if.then80, %out
  %73 = load i32, i32* %ret, align 4, !dbg !6134
  store i32 %73, i32* %retval, align 4, !dbg !6135
  br label %return, !dbg !6135

return:                                           ; preds = %if.end81, %if.then34, %if.end24, %if.then
  %74 = load i32, i32* %retval, align 4, !dbg !6136
  ret i32 %74, !dbg !6136
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pm_genpd_remove_subdomain(%struct.generic_pm_domain* %genpd, %struct.generic_pm_domain* %subdomain) #0 !dbg !6137 {
entry:
  %retval = alloca i32, align 4
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %subdomain.addr = alloca %struct.generic_pm_domain*, align 8
  %l = alloca %struct.gpd_link*, align 8
  %link = alloca %struct.gpd_link*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.gpd_link*, align 8
  %__mptr11 = alloca i8*, align 8
  %tmp15 = alloca %struct.gpd_link*, align 8
  %__mptr27 = alloca i8*, align 8
  %tmp32 = alloca %struct.gpd_link*, align 8
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !6138, metadata !DIExpression()), !dbg !6139
  store %struct.generic_pm_domain* %subdomain, %struct.generic_pm_domain** %subdomain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %subdomain.addr, metadata !6140, metadata !DIExpression()), !dbg !6141
  call void @llvm.dbg.declare(metadata %struct.gpd_link** %l, metadata !6142, metadata !DIExpression()), !dbg !6143
  call void @llvm.dbg.declare(metadata %struct.gpd_link** %link, metadata !6144, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6146, metadata !DIExpression()), !dbg !6147
  store i32 -22, i32* %ret, align 4, !dbg !6147
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6148
  %1 = bitcast %struct.generic_pm_domain* %0 to i8*, !dbg !6148
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %1) #11, !dbg !6150
  br i1 %call, label %if.then, label %lor.lhs.false, !dbg !6151

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain.addr, align 8, !dbg !6152
  %3 = bitcast %struct.generic_pm_domain* %2 to i8*, !dbg !6152
  %call1 = call zeroext i1 @IS_ERR_OR_NULL(i8* %3) #11, !dbg !6153
  br i1 %call1, label %if.then, label %if.end, !dbg !6154

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !6155
  br label %return, !dbg !6155

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain.addr, align 8, !dbg !6156
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %4, i32 0, i32 38, !dbg !6156
  %5 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !6156
  %lock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %5, i32 0, i32 0, !dbg !6156
  %6 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %lock, align 8, !dbg !6156
  %7 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain.addr, align 8, !dbg !6156
  call void %6(%struct.generic_pm_domain* %7) #11, !dbg !6156
  %8 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6157
  %lock_ops2 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %8, i32 0, i32 38, !dbg !6157
  %9 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops2, align 8, !dbg !6157
  %lock_nested = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %9, i32 0, i32 1, !dbg !6157
  %10 = load void (%struct.generic_pm_domain*, i32)*, void (%struct.generic_pm_domain*, i32)** %lock_nested, align 8, !dbg !6157
  %11 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6157
  call void %10(%struct.generic_pm_domain* %11, i32 1) #11, !dbg !6157
  %12 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain.addr, align 8, !dbg !6158
  %parent_links = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %12, i32 0, i32 3, !dbg !6160
  %call3 = call i32 @list_empty(%struct.list_head* %parent_links) #11, !dbg !6161
  %tobool = icmp ne i32 %call3, 0, !dbg !6161
  br i1 %tobool, label %lor.lhs.false4, label %if.then6, !dbg !6162

lor.lhs.false4:                                   ; preds = %if.end
  %13 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain.addr, align 8, !dbg !6163
  %device_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %13, i32 0, i32 13, !dbg !6164
  %14 = load i32, i32* %device_count, align 8, !dbg !6164
  %tobool5 = icmp ne i32 %14, 0, !dbg !6163
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !6165

if.then6:                                         ; preds = %lor.lhs.false4, %if.end
  %15 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6166
  %name = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %15, i32 0, i32 10, !dbg !6166
  %16 = load i8*, i8** %name, align 8, !dbg !6166
  %17 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain.addr, align 8, !dbg !6166
  %name7 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %17, i32 0, i32 10, !dbg !6166
  %18 = load i8*, i8** %name7, align 8, !dbg !6166
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0), i8* %16, i8* %18) #12, !dbg !6166
  store i32 -16, i32* %ret, align 4, !dbg !6168
  br label %out, !dbg !6169

if.end9:                                          ; preds = %lor.lhs.false4
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6170, metadata !DIExpression()), !dbg !6173
  %19 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6173
  %parent_links10 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %19, i32 0, i32 3, !dbg !6173
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %parent_links10, i32 0, i32 0, !dbg !6173
  %20 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6173
  %21 = bitcast %struct.list_head* %20 to i8*, !dbg !6173
  store i8* %21, i8** %__mptr, align 8, !dbg !6173
  br label %do.body, !dbg !6173

do.body:                                          ; preds = %if.end9
  br label %do.end, !dbg !6174

do.end:                                           ; preds = %do.body
  %22 = load i8*, i8** %__mptr, align 8, !dbg !6173
  %add.ptr = getelementptr i8, i8* %22, i64 -8, !dbg !6173
  %23 = bitcast i8* %add.ptr to %struct.gpd_link*, !dbg !6173
  store %struct.gpd_link* %23, %struct.gpd_link** %tmp, align 8, !dbg !6174
  %24 = load %struct.gpd_link*, %struct.gpd_link** %tmp, align 8, !dbg !6173
  store %struct.gpd_link* %24, %struct.gpd_link** %link, align 8, !dbg !6176
  call void @llvm.dbg.declare(metadata i8** %__mptr11, metadata !6177, metadata !DIExpression()), !dbg !6179
  %25 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !6179
  %parent_node = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %25, i32 0, i32 1, !dbg !6179
  %next12 = getelementptr inbounds %struct.list_head, %struct.list_head* %parent_node, i32 0, i32 0, !dbg !6179
  %26 = load %struct.list_head*, %struct.list_head** %next12, align 8, !dbg !6179
  %27 = bitcast %struct.list_head* %26 to i8*, !dbg !6179
  store i8* %27, i8** %__mptr11, align 8, !dbg !6179
  br label %do.body13, !dbg !6179

do.body13:                                        ; preds = %do.end
  br label %do.end14, !dbg !6180

do.end14:                                         ; preds = %do.body13
  %28 = load i8*, i8** %__mptr11, align 8, !dbg !6179
  %add.ptr16 = getelementptr i8, i8* %28, i64 -8, !dbg !6179
  %29 = bitcast i8* %add.ptr16 to %struct.gpd_link*, !dbg !6179
  store %struct.gpd_link* %29, %struct.gpd_link** %tmp15, align 8, !dbg !6180
  %30 = load %struct.gpd_link*, %struct.gpd_link** %tmp15, align 8, !dbg !6179
  store %struct.gpd_link* %30, %struct.gpd_link** %l, align 8, !dbg !6176
  br label %for.cond, !dbg !6176

for.cond:                                         ; preds = %do.end31, %do.end14
  %31 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !6182
  %parent_node17 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %31, i32 0, i32 1, !dbg !6182
  %32 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6182
  %parent_links18 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %32, i32 0, i32 3, !dbg !6182
  %cmp = icmp eq %struct.list_head* %parent_node17, %parent_links18, !dbg !6182
  %lnot = xor i1 %cmp, true, !dbg !6182
  br i1 %lnot, label %for.body, label %for.end, !dbg !6176

for.body:                                         ; preds = %for.cond
  %33 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !6184
  %child = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %33, i32 0, i32 2, !dbg !6187
  %34 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %child, align 8, !dbg !6187
  %35 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain.addr, align 8, !dbg !6188
  %cmp19 = icmp ne %struct.generic_pm_domain* %34, %35, !dbg !6189
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !6190

if.then20:                                        ; preds = %for.body
  br label %for.inc, !dbg !6191

if.end21:                                         ; preds = %for.body
  %36 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !6192
  %parent_node22 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %36, i32 0, i32 1, !dbg !6193
  call void @list_del(%struct.list_head* %parent_node22) #11, !dbg !6194
  %37 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !6195
  %child_node = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %37, i32 0, i32 3, !dbg !6196
  call void @list_del(%struct.list_head* %child_node) #11, !dbg !6197
  %38 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !6198
  %39 = bitcast %struct.gpd_link* %38 to i8*, !dbg !6198
  call void @kfree(i8* %39) #11, !dbg !6199
  %40 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain.addr, align 8, !dbg !6200
  %status = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %40, i32 0, i32 12, !dbg !6200
  %41 = load i32, i32* %status, align 4, !dbg !6200
  %cmp23 = icmp eq i32 %41, 0, !dbg !6200
  br i1 %cmp23, label %if.then24, label %if.end26, !dbg !6202

if.then24:                                        ; preds = %if.end21
  %42 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6203
  %call25 = call zeroext i1 @genpd_sd_counter_dec(%struct.generic_pm_domain* %42) #11, !dbg !6204
  br label %if.end26, !dbg !6204

if.end26:                                         ; preds = %if.then24, %if.end21
  store i32 0, i32* %ret, align 4, !dbg !6205
  br label %for.end, !dbg !6206

for.inc:                                          ; preds = %if.then20
  %43 = load %struct.gpd_link*, %struct.gpd_link** %l, align 8, !dbg !6182
  store %struct.gpd_link* %43, %struct.gpd_link** %link, align 8, !dbg !6182
  call void @llvm.dbg.declare(metadata i8** %__mptr27, metadata !6207, metadata !DIExpression()), !dbg !6209
  %44 = load %struct.gpd_link*, %struct.gpd_link** %l, align 8, !dbg !6209
  %parent_node28 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %44, i32 0, i32 1, !dbg !6209
  %next29 = getelementptr inbounds %struct.list_head, %struct.list_head* %parent_node28, i32 0, i32 0, !dbg !6209
  %45 = load %struct.list_head*, %struct.list_head** %next29, align 8, !dbg !6209
  %46 = bitcast %struct.list_head* %45 to i8*, !dbg !6209
  store i8* %46, i8** %__mptr27, align 8, !dbg !6209
  br label %do.body30, !dbg !6209

do.body30:                                        ; preds = %for.inc
  br label %do.end31, !dbg !6210

do.end31:                                         ; preds = %do.body30
  %47 = load i8*, i8** %__mptr27, align 8, !dbg !6209
  %add.ptr33 = getelementptr i8, i8* %47, i64 -8, !dbg !6209
  %48 = bitcast i8* %add.ptr33 to %struct.gpd_link*, !dbg !6209
  store %struct.gpd_link* %48, %struct.gpd_link** %tmp32, align 8, !dbg !6210
  %49 = load %struct.gpd_link*, %struct.gpd_link** %tmp32, align 8, !dbg !6209
  store %struct.gpd_link* %49, %struct.gpd_link** %l, align 8, !dbg !6182
  br label %for.cond, !dbg !6182, !llvm.loop !6212

for.end:                                          ; preds = %if.end26, %for.cond
  br label %out, !dbg !6213

out:                                              ; preds = %for.end, %if.then6
  call void @llvm.dbg.label(metadata !6214), !dbg !6215
  %50 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6216
  %lock_ops34 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %50, i32 0, i32 38, !dbg !6216
  %51 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops34, align 8, !dbg !6216
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %51, i32 0, i32 3, !dbg !6216
  %52 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !6216
  %53 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6216
  call void %52(%struct.generic_pm_domain* %53) #11, !dbg !6216
  %54 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain.addr, align 8, !dbg !6217
  %lock_ops35 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %54, i32 0, i32 38, !dbg !6217
  %55 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops35, align 8, !dbg !6217
  %unlock36 = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %55, i32 0, i32 3, !dbg !6217
  %56 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock36, align 8, !dbg !6217
  %57 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain.addr, align 8, !dbg !6217
  call void %56(%struct.generic_pm_domain* %57) #11, !dbg !6217
  %58 = load i32, i32* %ret, align 4, !dbg !6218
  store i32 %58, i32* %retval, align 4, !dbg !6219
  br label %return, !dbg !6219

return:                                           ; preds = %out, %if.then
  %59 = load i32, i32* %retval, align 4, !dbg !6220
  ret i32 %59, !dbg !6220
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR_OR_NULL(i8* %ptr) #0 !dbg !6221 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6225, metadata !DIExpression()), !dbg !6226
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !6227
  %tobool = icmp ne i8* %0, null, !dbg !6227
  %lnot = xor i1 %tobool, true, !dbg !6227
  %lnot1 = xor i1 %lnot, true, !dbg !6227
  %lnot2 = xor i1 %lnot1, true, !dbg !6227
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !6227
  %conv = sext i32 %lnot.ext to i64, !dbg !6227
  %tobool3 = icmp ne i64 %conv, 0, !dbg !6227
  br i1 %tobool3, label %lor.end, label %lor.rhs, !dbg !6228

lor.rhs:                                          ; preds = %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !6229
  %2 = ptrtoint i8* %1 to i64, !dbg !6229
  %3 = inttoptr i64 %2 to i8*, !dbg !6229
  %4 = ptrtoint i8* %3 to i64, !dbg !6229
  %cmp = icmp uge i64 %4, -4095, !dbg !6229
  %lnot5 = xor i1 %cmp, true, !dbg !6229
  %lnot7 = xor i1 %lnot5, true, !dbg !6229
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !6229
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !6229
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !6228
  br label %lor.end, !dbg !6228

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i1 [ true, %entry ], [ %tobool10, %lor.rhs ]
  ret i1 %5, !dbg !6230
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !6231 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !6237, metadata !DIExpression()), !dbg !6238
  br label %do.body, !dbg !6239

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6241

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6239
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !6239
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6239
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !6241
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !6239
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6243
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !6244
  %conv = zext i1 %cmp to i32, !dbg !6244
  ret i32 %conv, !dbg !6245
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !6246 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !6249, metadata !DIExpression()), !dbg !6250
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6251
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !6252
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6253
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !6254
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !6255
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6256
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !6257
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !6258
  ret void, !dbg !6259
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @genpd_sd_counter_dec(%struct.generic_pm_domain* %genpd) #0 !dbg !6260 {
entry:
  %v.addr.i1.i29 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i29, metadata !6263, metadata !DIExpression()), !dbg !6269
  %c.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i.i, metadata !6275, metadata !DIExpression()), !dbg !6277
  %tmp.i.i = alloca i8, align 1
  %v.addr.i.i30 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i30, metadata !6278, metadata !DIExpression()), !dbg !6286
  %size.addr.i.i31 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i31, metadata !6288, metadata !DIExpression()), !dbg !6289
  %v.addr.i32 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i32, metadata !6290, metadata !DIExpression()), !dbg !6291
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !6292, metadata !DIExpression()), !dbg !6298
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6303, metadata !DIExpression()), !dbg !6305
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6307, metadata !DIExpression()), !dbg !6308
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !6309, metadata !DIExpression()), !dbg !6310
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %ret = alloca i8, align 1
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !6311, metadata !DIExpression()), !dbg !6312
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !6313, metadata !DIExpression()), !dbg !6314
  store i8 0, i8* %ret, align 1, !dbg !6314
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6315, metadata !DIExpression()), !dbg !6316
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6316
  %sd_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %0, i32 0, i32 11, !dbg !6316
  store %struct.atomic_t* %sd_count, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6317
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !6317
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6318
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !6319
  %conv.i.i = trunc i64 %4 to i32, !dbg !6319
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i.i) #13, !dbg !6320
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6321
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !6321
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #13, !dbg !6321
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6322
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6323
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !6323
  %9 = load volatile i32, i32* %counter.i.i, align 4, !dbg !6323
  %cmp = icmp eq i32 %9, 0, !dbg !6316
  %lnot = xor i1 %cmp, true, !dbg !6316
  %lnot1 = xor i1 %lnot, true, !dbg !6316
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6316
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6316
  %10 = load i32, i32* %__ret_warn_on, align 4, !dbg !6324
  %tobool = icmp ne i32 %10, 0, !dbg !6324
  %lnot2 = xor i1 %tobool, true, !dbg !6324
  %lnot4 = xor i1 %lnot2, true, !dbg !6324
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !6324
  %conv = sext i32 %lnot.ext5 to i64, !dbg !6324
  %tobool6 = icmp ne i64 %conv, 0, !dbg !6324
  br i1 %tobool6, label %if.then, label %if.end, !dbg !6316

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6324

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !6326

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !6328

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !6326

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 200, i32 2305, i64 12) #7, !dbg !6330, !srcloc !6332
  br label %do.end9, !dbg !6330

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 291) #7, !dbg !6333, !srcloc !6335
  br label %do.body10, !dbg !6326

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !6336

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !6326

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !6326

if.end:                                           ; preds = %do.end12, %entry
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !6316
  %tobool13 = icmp ne i32 %11, 0, !dbg !6316
  %lnot14 = xor i1 %tobool13, true, !dbg !6316
  %lnot16 = xor i1 %lnot14, true, !dbg !6316
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !6316
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !6316
  store i64 %conv18, i64* %tmp, align 8, !dbg !6324
  %12 = load i64, i64* %tmp, align 8, !dbg !6316
  %tobool19 = icmp ne i64 %12, 0, !dbg !6338
  br i1 %tobool19, label %if.end27, label %if.then20, !dbg !6339

if.then20:                                        ; preds = %if.end
  %13 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6340
  %sd_count21 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %13, i32 0, i32 11, !dbg !6341
  store %struct.atomic_t* %sd_count21, %struct.atomic_t** %v.addr.i32, align 8
  %14 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i32, align 8, !dbg !6342
  %15 = bitcast %struct.atomic_t* %14 to i8*, !dbg !6342
  store i8* %15, i8** %v.addr.i.i30, align 8
  store i64 4, i64* %size.addr.i.i31, align 8
  %16 = load i8*, i8** %v.addr.i.i30, align 8, !dbg !6343
  %17 = load i64, i64* %size.addr.i.i31, align 8, !dbg !6344
  %conv.i.i33 = trunc i64 %17 to i32, !dbg !6344
  %call.i.i34 = call zeroext i1 @kasan_check_write(i8* %16, i32 %conv.i.i33) #13, !dbg !6345
  %18 = load i8*, i8** %v.addr.i.i30, align 8, !dbg !6346
  %19 = load i64, i64* %size.addr.i.i31, align 8, !dbg !6346
  call void @kcsan_check_access(i8* %18, i64 %19, i32 7) #13, !dbg !6346
  %20 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i32, align 8, !dbg !6347
  store %struct.atomic_t* %20, %struct.atomic_t** %v.addr.i1.i29, align 8
  %21 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i29, align 8, !dbg !6277
  %counter.i.i35 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %21, i32 0, i32 0, !dbg !6277
  %22 = call i8 asm sideeffect "decl $0\0A\09/* output condition code e*/\0A", "=*m,={@cce},*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i35, i32* %counter.i.i35) #7, !dbg !6277, !srcloc !6348
  store i8 %22, i8* %c.i.i, align 1, !dbg !6277
  %23 = load i8, i8* %c.i.i, align 1, !dbg !6277
  %tobool.i.i = trunc i8 %23 to i1, !dbg !6277
  %frombool.i.i = zext i1 %tobool.i.i to i8, !dbg !6277
  store i8 %frombool.i.i, i8* %tmp.i.i, align 1, !dbg !6277
  %24 = load i8, i8* %tmp.i.i, align 1, !dbg !6277
  %tobool1.i.i = trunc i8 %24 to i1, !dbg !6277
  %lnot23 = xor i1 %tobool1.i.i, true, !dbg !6349
  %lnot25 = xor i1 %lnot23, true, !dbg !6350
  %frombool = zext i1 %lnot25 to i8, !dbg !6351
  store i8 %frombool, i8* %ret, align 1, !dbg !6351
  br label %if.end27, !dbg !6352

if.end27:                                         ; preds = %if.then20, %if.end
  %25 = load i8, i8* %ret, align 1, !dbg !6353
  %tobool28 = trunc i8 %25 to i1, !dbg !6353
  ret i1 %tobool28, !dbg !6354
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pm_genpd_init(%struct.generic_pm_domain* %genpd, %struct.dev_power_governor* %gov, i1 zeroext %is_off) #0 !dbg !6355 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !6358, metadata !DIExpression()), !dbg !6362
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !6366, metadata !DIExpression()), !dbg !6367
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6368, metadata !DIExpression()), !dbg !6370
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6372, metadata !DIExpression()), !dbg !6373
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !6374, metadata !DIExpression()), !dbg !6375
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !6376, metadata !DIExpression()), !dbg !6377
  %retval = alloca i32, align 4
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %gov.addr = alloca %struct.dev_power_governor*, align 8
  %is_off.addr = alloca i8, align 1
  %ret = alloca i32, align 4
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !6378, metadata !DIExpression()), !dbg !6379
  store %struct.dev_power_governor* %gov, %struct.dev_power_governor** %gov.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_power_governor** %gov.addr, metadata !6380, metadata !DIExpression()), !dbg !6381
  %frombool = zext i1 %is_off to i8
  store i8 %frombool, i8* %is_off.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_off.addr, metadata !6382, metadata !DIExpression()), !dbg !6383
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6384, metadata !DIExpression()), !dbg !6385
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6386
  %1 = bitcast %struct.generic_pm_domain* %0 to i8*, !dbg !6386
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %1) #11, !dbg !6388
  br i1 %call, label %if.then, label %if.end, !dbg !6389

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6390
  br label %return, !dbg !6390

if.end:                                           ; preds = %entry
  %2 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6391
  %parent_links = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %2, i32 0, i32 3, !dbg !6392
  call void @INIT_LIST_HEAD(%struct.list_head* %parent_links) #11, !dbg !6393
  %3 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6394
  %child_links = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %3, i32 0, i32 4, !dbg !6395
  call void @INIT_LIST_HEAD(%struct.list_head* %child_links) #11, !dbg !6396
  %4 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6397
  %dev_list = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %4, i32 0, i32 5, !dbg !6398
  call void @INIT_LIST_HEAD(%struct.list_head* %dev_list) #11, !dbg !6399
  br label %do.body, !dbg !6400

do.body:                                          ; preds = %if.end
  %5 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6401
  %power_notifiers = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %5, i32 0, i32 20, !dbg !6401
  %head = getelementptr inbounds %struct.raw_notifier_head, %struct.raw_notifier_head* %power_notifiers, i32 0, i32 0, !dbg !6401
  store %struct.notifier_block* null, %struct.notifier_block** %head, align 8, !dbg !6401
  br label %do.end, !dbg !6401

do.end:                                           ; preds = %do.body
  %6 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6403
  call void @genpd_lock_init(%struct.generic_pm_domain* %6) #11, !dbg !6404
  %7 = load %struct.dev_power_governor*, %struct.dev_power_governor** %gov.addr, align 8, !dbg !6405
  %8 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6406
  %gov1 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %8, i32 0, i32 6, !dbg !6407
  store %struct.dev_power_governor* %7, %struct.dev_power_governor** %gov1, align 8, !dbg !6408
  br label %do.body2, !dbg !6409

do.body2:                                         ; preds = %do.end
  %9 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6410
  %power_off_work = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %9, i32 0, i32 7, !dbg !6410
  call void @__init_work(%struct.work_struct* %power_off_work, i32 0) #11, !dbg !6410
  %10 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6410
  %power_off_work3 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %10, i32 0, i32 7, !dbg !6410
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %power_off_work3, i32 0, i32 0, !dbg !6410
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !6410
  store i64 68719476704, i64* %counter, align 8, !dbg !6410
  %11 = bitcast %struct.atomic64_t* %data to i8*, !dbg !6410
  %12 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !6410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !6410
  %13 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6410
  %power_off_work4 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %13, i32 0, i32 7, !dbg !6410
  %entry5 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %power_off_work4, i32 0, i32 1, !dbg !6410
  call void @INIT_LIST_HEAD(%struct.list_head* %entry5) #11, !dbg !6410
  %14 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6410
  %power_off_work6 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %14, i32 0, i32 7, !dbg !6410
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %power_off_work6, i32 0, i32 2, !dbg !6410
  store void (%struct.work_struct*)* @genpd_power_off_work_fn, void (%struct.work_struct*)** %func, align 8, !dbg !6410
  br label %do.end7, !dbg !6410

do.end7:                                          ; preds = %do.body2
  %15 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6412
  %sd_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %15, i32 0, i32 11, !dbg !6413
  store %struct.atomic_t* %sd_count, %struct.atomic_t** %v.addr.i, align 8
  store i32 0, i32* %i.addr.i, align 4
  %16 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6414
  %17 = bitcast %struct.atomic_t* %16 to i8*, !dbg !6414
  store i8* %17, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %18 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6415
  %19 = load i64, i64* %size.addr.i.i, align 8, !dbg !6416
  %conv.i.i = trunc i64 %19 to i32, !dbg !6416
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %18, i32 %conv.i.i) #13, !dbg !6417
  %20 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6418
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !6418
  call void @kcsan_check_access(i8* %20, i64 %21, i32 5) #13, !dbg !6418
  %22 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6419
  %23 = load i32, i32* %i.addr.i, align 4, !dbg !6420
  store %struct.atomic_t* %22, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %23, i32* %i.addr.i.i, align 4
  %24 = load i32, i32* %i.addr.i.i, align 4, !dbg !6421
  %25 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6421
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %25, i32 0, i32 0, !dbg !6421
  store volatile i32 %24, i32* %counter.i.i, align 4, !dbg !6421
  %26 = load i8, i8* %is_off.addr, align 1, !dbg !6423
  %tobool = trunc i8 %26 to i1, !dbg !6423
  %27 = zext i1 %tobool to i64, !dbg !6423
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !6423
  %28 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6424
  %status = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %28, i32 0, i32 12, !dbg !6425
  store i32 %cond, i32* %status, align 4, !dbg !6426
  %29 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6427
  %device_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %29, i32 0, i32 13, !dbg !6428
  store i32 0, i32* %device_count, align 8, !dbg !6429
  %30 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6430
  %max_off_time_ns = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %30, i32 0, i32 25, !dbg !6431
  store i64 -1, i64* %max_off_time_ns, align 8, !dbg !6432
  %31 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6433
  %max_off_time_changed = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %31, i32 0, i32 26, !dbg !6434
  store i8 1, i8* %max_off_time_changed, align 8, !dbg !6435
  %32 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6436
  %provider = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %32, i32 0, i32 8, !dbg !6437
  store %struct.fwnode_handle* null, %struct.fwnode_handle** %provider, align 8, !dbg !6438
  %33 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6439
  %has_provider = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %33, i32 0, i32 9, !dbg !6440
  store i8 0, i8* %has_provider, align 8, !dbg !6441
  %call8 = call i64 @ktime_get() #11, !dbg !6442
  %34 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6443
  %accounting_time = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %34, i32 0, i32 37, !dbg !6444
  store i64 %call8, i64* %accounting_time, align 8, !dbg !6445
  %35 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6446
  %domain = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %35, i32 0, i32 1, !dbg !6447
  %ops = getelementptr inbounds %struct.dev_pm_domain, %struct.dev_pm_domain* %domain, i32 0, i32 0, !dbg !6448
  %runtime_suspend = getelementptr inbounds %struct.dev_pm_ops, %struct.dev_pm_ops* %ops, i32 0, i32 20, !dbg !6449
  store i32 (%struct.device*)* @genpd_runtime_suspend, i32 (%struct.device*)** %runtime_suspend, align 8, !dbg !6450
  %36 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6451
  %domain9 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %36, i32 0, i32 1, !dbg !6452
  %ops10 = getelementptr inbounds %struct.dev_pm_domain, %struct.dev_pm_domain* %domain9, i32 0, i32 0, !dbg !6453
  %runtime_resume = getelementptr inbounds %struct.dev_pm_ops, %struct.dev_pm_ops* %ops10, i32 0, i32 21, !dbg !6454
  store i32 (%struct.device*)* @genpd_runtime_resume, i32 (%struct.device*)** %runtime_resume, align 8, !dbg !6455
  %37 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6456
  %domain11 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %37, i32 0, i32 1, !dbg !6457
  %ops12 = getelementptr inbounds %struct.dev_pm_domain, %struct.dev_pm_domain* %domain11, i32 0, i32 0, !dbg !6458
  %prepare = getelementptr inbounds %struct.dev_pm_ops, %struct.dev_pm_ops* %ops12, i32 0, i32 0, !dbg !6459
  store i32 (%struct.device*)* @genpd_prepare, i32 (%struct.device*)** %prepare, align 8, !dbg !6460
  %38 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6461
  %domain13 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %38, i32 0, i32 1, !dbg !6462
  %ops14 = getelementptr inbounds %struct.dev_pm_domain, %struct.dev_pm_domain* %domain13, i32 0, i32 0, !dbg !6463
  %suspend_noirq = getelementptr inbounds %struct.dev_pm_ops, %struct.dev_pm_ops* %ops14, i32 0, i32 14, !dbg !6464
  store i32 (%struct.device*)* @genpd_suspend_noirq, i32 (%struct.device*)** %suspend_noirq, align 8, !dbg !6465
  %39 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6466
  %domain15 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %39, i32 0, i32 1, !dbg !6467
  %ops16 = getelementptr inbounds %struct.dev_pm_domain, %struct.dev_pm_domain* %domain15, i32 0, i32 0, !dbg !6468
  %resume_noirq = getelementptr inbounds %struct.dev_pm_ops, %struct.dev_pm_ops* %ops16, i32 0, i32 15, !dbg !6469
  store i32 (%struct.device*)* @genpd_resume_noirq, i32 (%struct.device*)** %resume_noirq, align 8, !dbg !6470
  %40 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6471
  %domain17 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %40, i32 0, i32 1, !dbg !6472
  %ops18 = getelementptr inbounds %struct.dev_pm_domain, %struct.dev_pm_domain* %domain17, i32 0, i32 0, !dbg !6473
  %freeze_noirq = getelementptr inbounds %struct.dev_pm_ops, %struct.dev_pm_ops* %ops18, i32 0, i32 16, !dbg !6474
  store i32 (%struct.device*)* @genpd_freeze_noirq, i32 (%struct.device*)** %freeze_noirq, align 8, !dbg !6475
  %41 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6476
  %domain19 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %41, i32 0, i32 1, !dbg !6477
  %ops20 = getelementptr inbounds %struct.dev_pm_domain, %struct.dev_pm_domain* %domain19, i32 0, i32 0, !dbg !6478
  %thaw_noirq = getelementptr inbounds %struct.dev_pm_ops, %struct.dev_pm_ops* %ops20, i32 0, i32 17, !dbg !6479
  store i32 (%struct.device*)* @genpd_thaw_noirq, i32 (%struct.device*)** %thaw_noirq, align 8, !dbg !6480
  %42 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6481
  %domain21 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %42, i32 0, i32 1, !dbg !6482
  %ops22 = getelementptr inbounds %struct.dev_pm_domain, %struct.dev_pm_domain* %domain21, i32 0, i32 0, !dbg !6483
  %poweroff_noirq = getelementptr inbounds %struct.dev_pm_ops, %struct.dev_pm_ops* %ops22, i32 0, i32 18, !dbg !6484
  store i32 (%struct.device*)* @genpd_poweroff_noirq, i32 (%struct.device*)** %poweroff_noirq, align 8, !dbg !6485
  %43 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6486
  %domain23 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %43, i32 0, i32 1, !dbg !6487
  %ops24 = getelementptr inbounds %struct.dev_pm_domain, %struct.dev_pm_domain* %domain23, i32 0, i32 0, !dbg !6488
  %restore_noirq = getelementptr inbounds %struct.dev_pm_ops, %struct.dev_pm_ops* %ops24, i32 0, i32 19, !dbg !6489
  store i32 (%struct.device*)* @genpd_restore_noirq, i32 (%struct.device*)** %restore_noirq, align 8, !dbg !6490
  %44 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6491
  %domain25 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %44, i32 0, i32 1, !dbg !6492
  %ops26 = getelementptr inbounds %struct.dev_pm_domain, %struct.dev_pm_domain* %domain25, i32 0, i32 0, !dbg !6493
  %complete = getelementptr inbounds %struct.dev_pm_ops, %struct.dev_pm_ops* %ops26, i32 0, i32 1, !dbg !6494
  store void (%struct.device*)* @genpd_complete, void (%struct.device*)** %complete, align 8, !dbg !6495
  %45 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6496
  %domain27 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %45, i32 0, i32 1, !dbg !6497
  %start = getelementptr inbounds %struct.dev_pm_domain, %struct.dev_pm_domain* %domain27, i32 0, i32 1, !dbg !6498
  store i32 (%struct.device*)* @genpd_dev_pm_start, i32 (%struct.device*)** %start, align 8, !dbg !6499
  %46 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6500
  %flags = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %46, i32 0, i32 31, !dbg !6502
  %47 = load i32, i32* %flags, align 8, !dbg !6502
  %and = and i32 %47, 1, !dbg !6503
  %tobool28 = icmp ne i32 %and, 0, !dbg !6503
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !6504

if.then29:                                        ; preds = %do.end7
  %48 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6505
  %dev_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %48, i32 0, i32 24, !dbg !6507
  %stop = getelementptr inbounds %struct.gpd_dev_ops, %struct.gpd_dev_ops* %dev_ops, i32 0, i32 1, !dbg !6508
  store i32 (%struct.device*)* @pm_clk_suspend, i32 (%struct.device*)** %stop, align 8, !dbg !6509
  %49 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6510
  %dev_ops30 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %49, i32 0, i32 24, !dbg !6511
  %start31 = getelementptr inbounds %struct.gpd_dev_ops, %struct.gpd_dev_ops* %dev_ops30, i32 0, i32 0, !dbg !6512
  store i32 (%struct.device*)* @pm_clk_resume, i32 (%struct.device*)** %start31, align 8, !dbg !6513
  br label %if.end32, !dbg !6514

if.end32:                                         ; preds = %if.then29, %do.end7
  %50 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6515
  %flags33 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %50, i32 0, i32 31, !dbg !6515
  %51 = load i32, i32* %flags33, align 8, !dbg !6515
  %and34 = and i32 %51, 4, !dbg !6515
  %tobool35 = icmp ne i32 %and34, 0, !dbg !6515
  br i1 %tobool35, label %land.lhs.true, label %lor.lhs.false, !dbg !6517

lor.lhs.false:                                    ; preds = %if.end32
  %52 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6518
  %flags36 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %52, i32 0, i32 31, !dbg !6518
  %53 = load i32, i32* %flags36, align 8, !dbg !6518
  %and37 = and i32 %53, 32, !dbg !6518
  %tobool38 = icmp ne i32 %and37, 0, !dbg !6518
  br i1 %tobool38, label %land.lhs.true, label %if.end41, !dbg !6519

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end32
  %54 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6520
  %status39 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %54, i32 0, i32 12, !dbg !6520
  %55 = load i32, i32* %status39, align 4, !dbg !6520
  %cmp = icmp eq i32 %55, 0, !dbg !6520
  br i1 %cmp, label %if.end41, label %if.then40, !dbg !6521

if.then40:                                        ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !6522
  br label %return, !dbg !6522

if.end41:                                         ; preds = %land.lhs.true, %lor.lhs.false
  %56 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6523
  %flags42 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %56, i32 0, i32 31, !dbg !6523
  %57 = load i32, i32* %flags42, align 8, !dbg !6523
  %and43 = and i32 %57, 16, !dbg !6523
  %tobool44 = icmp ne i32 %and43, 0, !dbg !6523
  br i1 %tobool44, label %land.lhs.true45, label %if.end48, !dbg !6525

land.lhs.true45:                                  ; preds = %if.end41
  %58 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6526
  %cpus = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %58, i32 0, i32 17, !dbg !6527
  %call46 = call zeroext i1 @zalloc_cpumask_var([1 x %struct.cpumask]* %cpus, i32 3264) #11, !dbg !6528
  br i1 %call46, label %if.end48, label %if.then47, !dbg !6529

if.then47:                                        ; preds = %land.lhs.true45
  store i32 -12, i32* %retval, align 4, !dbg !6530
  br label %return, !dbg !6530

if.end48:                                         ; preds = %land.lhs.true45, %if.end41
  %59 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6531
  %state_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %59, i32 0, i32 34, !dbg !6533
  %60 = load i32, i32* %state_count, align 8, !dbg !6533
  %cmp49 = icmp eq i32 %60, 0, !dbg !6534
  br i1 %cmp49, label %if.then50, label %if.else, !dbg !6535

if.then50:                                        ; preds = %if.end48
  %61 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6536
  %call51 = call i32 @genpd_set_default_power_state(%struct.generic_pm_domain* %61) #11, !dbg !6538
  store i32 %call51, i32* %ret, align 4, !dbg !6539
  %62 = load i32, i32* %ret, align 4, !dbg !6540
  %tobool52 = icmp ne i32 %62, 0, !dbg !6540
  br i1 %tobool52, label %if.then53, label %if.end60, !dbg !6542

if.then53:                                        ; preds = %if.then50
  %63 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6543
  %flags54 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %63, i32 0, i32 31, !dbg !6543
  %64 = load i32, i32* %flags54, align 8, !dbg !6543
  %and55 = and i32 %64, 16, !dbg !6543
  %tobool56 = icmp ne i32 %and55, 0, !dbg !6543
  br i1 %tobool56, label %if.then57, label %if.end59, !dbg !6546

if.then57:                                        ; preds = %if.then53
  %65 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6547
  %cpus58 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %65, i32 0, i32 17, !dbg !6548
  %arraydecay = getelementptr inbounds [1 x %struct.cpumask], [1 x %struct.cpumask]* %cpus58, i64 0, i64 0, !dbg !6547
  call void @free_cpumask_var(%struct.cpumask* %arraydecay) #11, !dbg !6549
  br label %if.end59, !dbg !6549

if.end59:                                         ; preds = %if.then57, %if.then53
  %66 = load i32, i32* %ret, align 4, !dbg !6550
  store i32 %66, i32* %retval, align 4, !dbg !6551
  br label %return, !dbg !6551

if.end60:                                         ; preds = %if.then50
  br label %if.end68, !dbg !6552

if.else:                                          ; preds = %if.end48
  %67 = load %struct.dev_power_governor*, %struct.dev_power_governor** %gov.addr, align 8, !dbg !6553
  %tobool61 = icmp ne %struct.dev_power_governor* %67, null, !dbg !6553
  br i1 %tobool61, label %if.end67, label %land.lhs.true62, !dbg !6555

land.lhs.true62:                                  ; preds = %if.else
  %68 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6556
  %state_count63 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %68, i32 0, i32 34, !dbg !6557
  %69 = load i32, i32* %state_count63, align 8, !dbg !6557
  %cmp64 = icmp ugt i32 %69, 1, !dbg !6558
  br i1 %cmp64, label %if.then65, label %if.end67, !dbg !6559

if.then65:                                        ; preds = %land.lhs.true62
  %70 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6560
  %name = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %70, i32 0, i32 10, !dbg !6560
  %71 = load i8*, i8** %name, align 8, !dbg !6560
  %call66 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i8* %71) #12, !dbg !6560
  br label %if.end67, !dbg !6562

if.end67:                                         ; preds = %if.then65, %land.lhs.true62, %if.else
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.end60
  %72 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6563
  %dev = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %72, i32 0, i32 0, !dbg !6564
  call void @device_initialize(%struct.device* %dev) #11, !dbg !6565
  %73 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6566
  %dev69 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %73, i32 0, i32 0, !dbg !6567
  %74 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6568
  %name70 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %74, i32 0, i32 10, !dbg !6569
  %75 = load i8*, i8** %name70, align 8, !dbg !6569
  %call71 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %dev69, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %75) #11, !dbg !6570
  call void @mutex_lock(%struct.mutex* @gpd_list_lock) #11, !dbg !6571
  %76 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6572
  %gpd_list_node = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %76, i32 0, i32 2, !dbg !6573
  call void @list_add(%struct.list_head* %gpd_list_node, %struct.list_head* @gpd_list) #11, !dbg !6574
  call void @mutex_unlock(%struct.mutex* @gpd_list_lock) #11, !dbg !6575
  store i32 0, i32* %retval, align 4, !dbg !6576
  br label %return, !dbg !6576

return:                                           ; preds = %if.end68, %if.end59, %if.then47, %if.then40, %if.then
  %77 = load i32, i32* %retval, align 4, !dbg !6577
  ret i32 %77, !dbg !6577
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !6578 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !6579, metadata !DIExpression()), !dbg !6580
  br label %do.body, !dbg !6581

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6582

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !6584

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !6582

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6586
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6586
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !6586
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !6586
  br label %do.end3, !dbg !6586

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !6582

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6588
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6589
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !6590
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !6591
  ret void, !dbg !6592
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genpd_lock_init(%struct.generic_pm_domain* %genpd) #0 !dbg !5175 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6593, metadata !DIExpression()), !dbg !6599
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !6604, metadata !DIExpression()), !dbg !6605
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6606
  %flags = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %0, i32 0, i32 31, !dbg !6607
  %1 = load i32, i32* %flags, align 8, !dbg !6607
  %and = and i32 %1, 2, !dbg !6608
  %tobool = icmp ne i32 %and, 0, !dbg !6608
  br i1 %tobool, label %if.then, label %if.else, !dbg !6609

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6610

do.body:                                          ; preds = %if.then
  %2 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6611
  %3 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %2, i32 0, i32 39, !dbg !6611
  %4 = bitcast %union.anon.80* %3 to %struct.anon.81*, !dbg !6611
  %slock = getelementptr inbounds %struct.anon.81, %struct.anon.81* %4, i32 0, i32 0, !dbg !6611
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6612
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !6613
  %rlock.i = bitcast %union.anon.1* %6 to %struct.raw_spinlock*, !dbg !6613
  %7 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6611
  %8 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %7, i32 0, i32 39, !dbg !6611
  %9 = bitcast %union.anon.80* %8 to %struct.anon.81*, !dbg !6611
  %slock1 = getelementptr inbounds %struct.anon.81, %struct.anon.81* %9, i32 0, i32 0, !dbg !6611
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !6611
  %rlock = bitcast %union.anon.1* %10 to %struct.raw_spinlock*, !dbg !6611
  %11 = bitcast %struct.spinlock* %slock1 to i8*, !dbg !6611
  %12 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !6611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 1 %12, i64 0, i1 false), !dbg !6611
  br label %do.end, !dbg !6611

do.end:                                           ; preds = %do.body
  %13 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6614
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %13, i32 0, i32 38, !dbg !6615
  store %struct.genpd_lock_ops* @genpd_spin_ops, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !6616
  br label %if.end, !dbg !6617

if.else:                                          ; preds = %entry
  br label %do.body2, !dbg !6618

do.body2:                                         ; preds = %if.else
  %14 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6620
  %15 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %14, i32 0, i32 39, !dbg !6620
  %mlock = bitcast %union.anon.80* %15 to %struct.mutex*, !dbg !6620
  call void @__mutex_init(%struct.mutex* %mlock, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i64 0, i64 0), %struct.lock_class_key* @genpd_lock_init.__key) #11, !dbg !6620
  br label %do.end3, !dbg !6620

do.end3:                                          ; preds = %do.body2
  %16 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !6622
  %lock_ops4 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %16, i32 0, i32 38, !dbg !6623
  store %struct.genpd_lock_ops* @genpd_mtx_ops, %struct.genpd_lock_ops** %lock_ops4, align 8, !dbg !6624
  br label %if.end

if.end:                                           ; preds = %do.end3, %do.end
  ret void, !dbg !6625
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #0 !dbg !6626 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !6629, metadata !DIExpression()), !dbg !6630
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !6631, metadata !DIExpression()), !dbg !6632
  ret void, !dbg !6633
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genpd_power_off_work_fn(%struct.work_struct* %work) #0 !dbg !6634 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %genpd = alloca %struct.generic_pm_domain*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.generic_pm_domain*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !6635, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd, metadata !6637, metadata !DIExpression()), !dbg !6638
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6639, metadata !DIExpression()), !dbg !6641
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !6641
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !6641
  store i8* %1, i8** %__mptr, align 8, !dbg !6641
  br label %do.body, !dbg !6641

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6642

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6641
  %add.ptr = getelementptr i8, i8* %2, i64 -992, !dbg !6641
  %3 = bitcast i8* %add.ptr to %struct.generic_pm_domain*, !dbg !6641
  store %struct.generic_pm_domain* %3, %struct.generic_pm_domain** %tmp, align 8, !dbg !6642
  %4 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %tmp, align 8, !dbg !6641
  store %struct.generic_pm_domain* %4, %struct.generic_pm_domain** %genpd, align 8, !dbg !6644
  %5 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6645
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %5, i32 0, i32 38, !dbg !6645
  %6 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !6645
  %lock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %6, i32 0, i32 0, !dbg !6645
  %7 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %lock, align 8, !dbg !6645
  %8 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6645
  call void %7(%struct.generic_pm_domain* %8) #11, !dbg !6645
  %9 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6646
  %call = call i32 @genpd_power_off(%struct.generic_pm_domain* %9, i1 zeroext false, i32 0) #11, !dbg !6647
  %10 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6648
  %lock_ops1 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %10, i32 0, i32 38, !dbg !6648
  %11 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops1, align 8, !dbg !6648
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %11, i32 0, i32 3, !dbg !6648
  %12 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !6648
  %13 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6648
  call void %12(%struct.generic_pm_domain* %13) #11, !dbg !6648
  ret void, !dbg !6649
}

; Function Attrs: noredzone
declare dso_local i64 @ktime_get() #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_runtime_suspend(%struct.device* %dev) #0 !dbg !6650 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %genpd = alloca %struct.generic_pm_domain*, align 8
  %suspend_ok = alloca i1 (%struct.device*)*, align 8
  %td = alloca %struct.gpd_timing_data*, align 8
  %runtime_pm = alloca i8, align 1
  %time_start = alloca i64, align 8
  %elapsed_ns = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6651, metadata !DIExpression()), !dbg !6652
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd, metadata !6653, metadata !DIExpression()), !dbg !6654
  call void @llvm.dbg.declare(metadata i1 (%struct.device*)** %suspend_ok, metadata !6655, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.declare(metadata %struct.gpd_timing_data** %td, metadata !6657, metadata !DIExpression()), !dbg !6659
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6660
  %call = call %struct.generic_pm_domain_data* @dev_gpd_data(%struct.device* %0) #11, !dbg !6661
  %td1 = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %call, i32 0, i32 1, !dbg !6662
  store %struct.gpd_timing_data* %td1, %struct.gpd_timing_data** %td, align 8, !dbg !6659
  call void @llvm.dbg.declare(metadata i8* %runtime_pm, metadata !6663, metadata !DIExpression()), !dbg !6664
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6665
  %call2 = call zeroext i1 @pm_runtime_enabled(%struct.device* %1) #11, !dbg !6666
  %frombool = zext i1 %call2 to i8, !dbg !6664
  store i8 %frombool, i8* %runtime_pm, align 1, !dbg !6664
  call void @llvm.dbg.declare(metadata i64* %time_start, metadata !6667, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.declare(metadata i64* %elapsed_ns, metadata !6669, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6671, metadata !DIExpression()), !dbg !6672
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6673
  %call3 = call %struct.generic_pm_domain* @dev_to_genpd(%struct.device* %2) #11, !dbg !6674
  store %struct.generic_pm_domain* %call3, %struct.generic_pm_domain** %genpd, align 8, !dbg !6675
  %3 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6676
  %4 = bitcast %struct.generic_pm_domain* %3 to i8*, !dbg !6676
  %call4 = call zeroext i1 @IS_ERR(i8* %4) #11, !dbg !6678
  br i1 %call4, label %if.then, label %if.end, !dbg !6679

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6680
  br label %return, !dbg !6680

if.end:                                           ; preds = %entry
  %5 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6681
  %gov = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %5, i32 0, i32 6, !dbg !6682
  %6 = load %struct.dev_power_governor*, %struct.dev_power_governor** %gov, align 8, !dbg !6682
  %tobool = icmp ne %struct.dev_power_governor* %6, null, !dbg !6681
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6681

cond.true:                                        ; preds = %if.end
  %7 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6683
  %gov5 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %7, i32 0, i32 6, !dbg !6684
  %8 = load %struct.dev_power_governor*, %struct.dev_power_governor** %gov5, align 8, !dbg !6684
  %suspend_ok6 = getelementptr inbounds %struct.dev_power_governor, %struct.dev_power_governor* %8, i32 0, i32 1, !dbg !6685
  %9 = load i1 (%struct.device*)*, i1 (%struct.device*)** %suspend_ok6, align 8, !dbg !6685
  br label %cond.end, !dbg !6681

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !6681

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i1 (%struct.device*)* [ %9, %cond.true ], [ null, %cond.false ], !dbg !6681
  store i1 (%struct.device*)* %cond, i1 (%struct.device*)** %suspend_ok, align 8, !dbg !6686
  %10 = load i8, i8* %runtime_pm, align 1, !dbg !6687
  %tobool7 = trunc i8 %10 to i1, !dbg !6687
  br i1 %tobool7, label %land.lhs.true, label %if.end12, !dbg !6689

land.lhs.true:                                    ; preds = %cond.end
  %11 = load i1 (%struct.device*)*, i1 (%struct.device*)** %suspend_ok, align 8, !dbg !6690
  %tobool8 = icmp ne i1 (%struct.device*)* %11, null, !dbg !6690
  br i1 %tobool8, label %land.lhs.true9, label %if.end12, !dbg !6691

land.lhs.true9:                                   ; preds = %land.lhs.true
  %12 = load i1 (%struct.device*)*, i1 (%struct.device*)** %suspend_ok, align 8, !dbg !6692
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6693
  %call10 = call zeroext i1 %12(%struct.device* %13) #11, !dbg !6692
  br i1 %call10, label %if.end12, label %if.then11, !dbg !6694

if.then11:                                        ; preds = %land.lhs.true9
  store i32 -16, i32* %retval, align 4, !dbg !6695
  br label %return, !dbg !6695

if.end12:                                         ; preds = %land.lhs.true9, %land.lhs.true, %cond.end
  store i64 0, i64* %time_start, align 8, !dbg !6696
  %14 = load i8, i8* %runtime_pm, align 1, !dbg !6697
  %tobool13 = trunc i8 %14 to i1, !dbg !6697
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !6699

if.then14:                                        ; preds = %if.end12
  %call15 = call i64 @ktime_get() #11, !dbg !6700
  store i64 %call15, i64* %time_start, align 8, !dbg !6701
  br label %if.end16, !dbg !6702

if.end16:                                         ; preds = %if.then14, %if.end12
  %15 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6703
  %call17 = call i32 @__genpd_runtime_suspend(%struct.device* %15) #11, !dbg !6704
  store i32 %call17, i32* %ret, align 4, !dbg !6705
  %16 = load i32, i32* %ret, align 4, !dbg !6706
  %tobool18 = icmp ne i32 %16, 0, !dbg !6706
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !6708

if.then19:                                        ; preds = %if.end16
  %17 = load i32, i32* %ret, align 4, !dbg !6709
  store i32 %17, i32* %retval, align 4, !dbg !6710
  br label %return, !dbg !6710

if.end20:                                         ; preds = %if.end16
  %18 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6711
  %19 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6712
  %call21 = call i32 @genpd_stop_dev(%struct.generic_pm_domain* %18, %struct.device* %19) #11, !dbg !6713
  store i32 %call21, i32* %ret, align 4, !dbg !6714
  %20 = load i32, i32* %ret, align 4, !dbg !6715
  %tobool22 = icmp ne i32 %20, 0, !dbg !6715
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !6717

if.then23:                                        ; preds = %if.end20
  %21 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6718
  %call24 = call i32 @__genpd_runtime_resume(%struct.device* %21) #11, !dbg !6720
  %22 = load i32, i32* %ret, align 4, !dbg !6721
  store i32 %22, i32* %retval, align 4, !dbg !6722
  br label %return, !dbg !6722

if.end25:                                         ; preds = %if.end20
  %23 = load i8, i8* %runtime_pm, align 1, !dbg !6723
  %tobool26 = trunc i8 %23 to i1, !dbg !6723
  br i1 %tobool26, label %if.then27, label %if.end33, !dbg !6725

if.then27:                                        ; preds = %if.end25
  %call28 = call i64 @ktime_get() #11, !dbg !6726
  %24 = load i64, i64* %time_start, align 8, !dbg !6726
  %sub = sub i64 %call28, %24, !dbg !6726
  %call29 = call i64 @ktime_to_ns(i64 %sub) #11, !dbg !6728
  store i64 %call29, i64* %elapsed_ns, align 8, !dbg !6729
  %25 = load i64, i64* %elapsed_ns, align 8, !dbg !6730
  %26 = load %struct.gpd_timing_data*, %struct.gpd_timing_data** %td, align 8, !dbg !6732
  %suspend_latency_ns = getelementptr inbounds %struct.gpd_timing_data, %struct.gpd_timing_data* %26, i32 0, i32 0, !dbg !6733
  %27 = load i64, i64* %suspend_latency_ns, align 8, !dbg !6733
  %cmp = icmp sgt i64 %25, %27, !dbg !6734
  br i1 %cmp, label %if.then30, label %if.end32, !dbg !6735

if.then30:                                        ; preds = %if.then27
  %28 = load i64, i64* %elapsed_ns, align 8, !dbg !6736
  %29 = load %struct.gpd_timing_data*, %struct.gpd_timing_data** %td, align 8, !dbg !6738
  %suspend_latency_ns31 = getelementptr inbounds %struct.gpd_timing_data, %struct.gpd_timing_data* %29, i32 0, i32 0, !dbg !6739
  store i64 %28, i64* %suspend_latency_ns31, align 8, !dbg !6740
  %30 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6741
  %max_off_time_changed = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %30, i32 0, i32 26, !dbg !6742
  store i8 1, i8* %max_off_time_changed, align 8, !dbg !6743
  %31 = load %struct.gpd_timing_data*, %struct.gpd_timing_data** %td, align 8, !dbg !6744
  %constraint_changed = getelementptr inbounds %struct.gpd_timing_data, %struct.gpd_timing_data* %31, i32 0, i32 3, !dbg !6745
  store i8 1, i8* %constraint_changed, align 8, !dbg !6746
  br label %if.end32, !dbg !6747

if.end32:                                         ; preds = %if.then30, %if.then27
  br label %if.end33, !dbg !6748

if.end33:                                         ; preds = %if.end32, %if.end25
  %32 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6749
  %33 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6751
  %call34 = call zeroext i1 @irq_safe_dev_in_no_sleep_domain(%struct.device* %32, %struct.generic_pm_domain* %33) #11, !dbg !6752
  br i1 %call34, label %if.then35, label %if.end36, !dbg !6753

if.then35:                                        ; preds = %if.end33
  store i32 0, i32* %retval, align 4, !dbg !6754
  br label %return, !dbg !6754

if.end36:                                         ; preds = %if.end33
  %34 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6755
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %34, i32 0, i32 38, !dbg !6755
  %35 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !6755
  %lock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %35, i32 0, i32 0, !dbg !6755
  %36 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %lock, align 8, !dbg !6755
  %37 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6755
  call void %36(%struct.generic_pm_domain* %37) #11, !dbg !6755
  %38 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6756
  %call37 = call i32 @genpd_power_off(%struct.generic_pm_domain* %38, i1 zeroext true, i32 0) #11, !dbg !6757
  %39 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6758
  %lock_ops38 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %39, i32 0, i32 38, !dbg !6758
  %40 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops38, align 8, !dbg !6758
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %40, i32 0, i32 3, !dbg !6758
  %41 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !6758
  %42 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6758
  call void %41(%struct.generic_pm_domain* %42) #11, !dbg !6758
  store i32 0, i32* %retval, align 4, !dbg !6759
  br label %return, !dbg !6759

return:                                           ; preds = %if.end36, %if.then35, %if.then23, %if.then19, %if.then11, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !6760
  ret i32 %43, !dbg !6760
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_runtime_resume(%struct.device* %dev) #0 !dbg !6761 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %genpd = alloca %struct.generic_pm_domain*, align 8
  %td = alloca %struct.gpd_timing_data*, align 8
  %runtime_pm = alloca i8, align 1
  %time_start = alloca i64, align 8
  %elapsed_ns = alloca i64, align 8
  %ret = alloca i32, align 4
  %timed = alloca i8, align 1
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6762, metadata !DIExpression()), !dbg !6763
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd, metadata !6764, metadata !DIExpression()), !dbg !6765
  call void @llvm.dbg.declare(metadata %struct.gpd_timing_data** %td, metadata !6766, metadata !DIExpression()), !dbg !6767
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6768
  %call = call %struct.generic_pm_domain_data* @dev_gpd_data(%struct.device* %0) #11, !dbg !6769
  %td1 = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %call, i32 0, i32 1, !dbg !6770
  store %struct.gpd_timing_data* %td1, %struct.gpd_timing_data** %td, align 8, !dbg !6767
  call void @llvm.dbg.declare(metadata i8* %runtime_pm, metadata !6771, metadata !DIExpression()), !dbg !6772
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6773
  %call2 = call zeroext i1 @pm_runtime_enabled(%struct.device* %1) #11, !dbg !6774
  %frombool = zext i1 %call2 to i8, !dbg !6772
  store i8 %frombool, i8* %runtime_pm, align 1, !dbg !6772
  call void @llvm.dbg.declare(metadata i64* %time_start, metadata !6775, metadata !DIExpression()), !dbg !6776
  call void @llvm.dbg.declare(metadata i64* %elapsed_ns, metadata !6777, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6779, metadata !DIExpression()), !dbg !6780
  call void @llvm.dbg.declare(metadata i8* %timed, metadata !6781, metadata !DIExpression()), !dbg !6782
  store i8 1, i8* %timed, align 1, !dbg !6782
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6783
  %call3 = call %struct.generic_pm_domain* @dev_to_genpd(%struct.device* %2) #11, !dbg !6784
  store %struct.generic_pm_domain* %call3, %struct.generic_pm_domain** %genpd, align 8, !dbg !6785
  %3 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6786
  %4 = bitcast %struct.generic_pm_domain* %3 to i8*, !dbg !6786
  %call4 = call zeroext i1 @IS_ERR(i8* %4) #11, !dbg !6788
  br i1 %call4, label %if.then, label %if.end, !dbg !6789

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6790
  br label %return, !dbg !6790

if.end:                                           ; preds = %entry
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6791
  %6 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6793
  %call5 = call zeroext i1 @irq_safe_dev_in_no_sleep_domain(%struct.device* %5, %struct.generic_pm_domain* %6) #11, !dbg !6794
  br i1 %call5, label %if.then6, label %if.end7, !dbg !6795

if.then6:                                         ; preds = %if.end
  store i8 0, i8* %timed, align 1, !dbg !6796
  br label %out, !dbg !6798

if.end7:                                          ; preds = %if.end
  %7 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6799
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %7, i32 0, i32 38, !dbg !6799
  %8 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !6799
  %lock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %8, i32 0, i32 0, !dbg !6799
  %9 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %lock, align 8, !dbg !6799
  %10 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6799
  call void %9(%struct.generic_pm_domain* %10) #11, !dbg !6799
  %11 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6800
  %call8 = call i32 @genpd_power_on(%struct.generic_pm_domain* %11, i32 0) #11, !dbg !6801
  store i32 %call8, i32* %ret, align 4, !dbg !6802
  %12 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6803
  %lock_ops9 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %12, i32 0, i32 38, !dbg !6803
  %13 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops9, align 8, !dbg !6803
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %13, i32 0, i32 3, !dbg !6803
  %14 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !6803
  %15 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6803
  call void %14(%struct.generic_pm_domain* %15) #11, !dbg !6803
  %16 = load i32, i32* %ret, align 4, !dbg !6804
  %tobool = icmp ne i32 %16, 0, !dbg !6804
  br i1 %tobool, label %if.then10, label %if.end11, !dbg !6806

if.then10:                                        ; preds = %if.end7
  %17 = load i32, i32* %ret, align 4, !dbg !6807
  store i32 %17, i32* %retval, align 4, !dbg !6808
  br label %return, !dbg !6808

if.end11:                                         ; preds = %if.end7
  br label %out, !dbg !6804

out:                                              ; preds = %if.end11, %if.then6
  call void @llvm.dbg.label(metadata !6809), !dbg !6810
  store i64 0, i64* %time_start, align 8, !dbg !6811
  %18 = load i8, i8* %timed, align 1, !dbg !6812
  %tobool12 = trunc i8 %18 to i1, !dbg !6812
  br i1 %tobool12, label %land.lhs.true, label %if.end16, !dbg !6814

land.lhs.true:                                    ; preds = %out
  %19 = load i8, i8* %runtime_pm, align 1, !dbg !6815
  %tobool13 = trunc i8 %19 to i1, !dbg !6815
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !6816

if.then14:                                        ; preds = %land.lhs.true
  %call15 = call i64 @ktime_get() #11, !dbg !6817
  store i64 %call15, i64* %time_start, align 8, !dbg !6818
  br label %if.end16, !dbg !6819

if.end16:                                         ; preds = %if.then14, %land.lhs.true, %out
  %20 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6820
  %21 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6821
  %call17 = call i32 @genpd_start_dev(%struct.generic_pm_domain* %20, %struct.device* %21) #11, !dbg !6822
  store i32 %call17, i32* %ret, align 4, !dbg !6823
  %22 = load i32, i32* %ret, align 4, !dbg !6824
  %tobool18 = icmp ne i32 %22, 0, !dbg !6824
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !6826

if.then19:                                        ; preds = %if.end16
  br label %err_poweroff, !dbg !6827

if.end20:                                         ; preds = %if.end16
  %23 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6828
  %call21 = call i32 @__genpd_runtime_resume(%struct.device* %23) #11, !dbg !6829
  store i32 %call21, i32* %ret, align 4, !dbg !6830
  %24 = load i32, i32* %ret, align 4, !dbg !6831
  %tobool22 = icmp ne i32 %24, 0, !dbg !6831
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !6833

if.then23:                                        ; preds = %if.end20
  br label %err_stop, !dbg !6834

if.end24:                                         ; preds = %if.end20
  %25 = load i8, i8* %timed, align 1, !dbg !6835
  %tobool25 = trunc i8 %25 to i1, !dbg !6835
  br i1 %tobool25, label %land.lhs.true26, label %if.end34, !dbg !6837

land.lhs.true26:                                  ; preds = %if.end24
  %26 = load i8, i8* %runtime_pm, align 1, !dbg !6838
  %tobool27 = trunc i8 %26 to i1, !dbg !6838
  br i1 %tobool27, label %if.then28, label %if.end34, !dbg !6839

if.then28:                                        ; preds = %land.lhs.true26
  %call29 = call i64 @ktime_get() #11, !dbg !6840
  %27 = load i64, i64* %time_start, align 8, !dbg !6840
  %sub = sub i64 %call29, %27, !dbg !6840
  %call30 = call i64 @ktime_to_ns(i64 %sub) #11, !dbg !6842
  store i64 %call30, i64* %elapsed_ns, align 8, !dbg !6843
  %28 = load i64, i64* %elapsed_ns, align 8, !dbg !6844
  %29 = load %struct.gpd_timing_data*, %struct.gpd_timing_data** %td, align 8, !dbg !6846
  %resume_latency_ns = getelementptr inbounds %struct.gpd_timing_data, %struct.gpd_timing_data* %29, i32 0, i32 1, !dbg !6847
  %30 = load i64, i64* %resume_latency_ns, align 8, !dbg !6847
  %cmp = icmp sgt i64 %28, %30, !dbg !6848
  br i1 %cmp, label %if.then31, label %if.end33, !dbg !6849

if.then31:                                        ; preds = %if.then28
  %31 = load i64, i64* %elapsed_ns, align 8, !dbg !6850
  %32 = load %struct.gpd_timing_data*, %struct.gpd_timing_data** %td, align 8, !dbg !6852
  %resume_latency_ns32 = getelementptr inbounds %struct.gpd_timing_data, %struct.gpd_timing_data* %32, i32 0, i32 1, !dbg !6853
  store i64 %31, i64* %resume_latency_ns32, align 8, !dbg !6854
  %33 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6855
  %max_off_time_changed = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %33, i32 0, i32 26, !dbg !6856
  store i8 1, i8* %max_off_time_changed, align 8, !dbg !6857
  %34 = load %struct.gpd_timing_data*, %struct.gpd_timing_data** %td, align 8, !dbg !6858
  %constraint_changed = getelementptr inbounds %struct.gpd_timing_data, %struct.gpd_timing_data* %34, i32 0, i32 3, !dbg !6859
  store i8 1, i8* %constraint_changed, align 8, !dbg !6860
  br label %if.end33, !dbg !6861

if.end33:                                         ; preds = %if.then31, %if.then28
  br label %if.end34, !dbg !6862

if.end34:                                         ; preds = %if.end33, %land.lhs.true26, %if.end24
  store i32 0, i32* %retval, align 4, !dbg !6863
  br label %return, !dbg !6863

err_stop:                                         ; preds = %if.then23
  call void @llvm.dbg.label(metadata !6864), !dbg !6865
  %35 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6866
  %36 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6867
  %call35 = call i32 @genpd_stop_dev(%struct.generic_pm_domain* %35, %struct.device* %36) #11, !dbg !6868
  br label %err_poweroff, !dbg !6868

err_poweroff:                                     ; preds = %err_stop, %if.then19
  call void @llvm.dbg.label(metadata !6869), !dbg !6870
  %37 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6871
  %call36 = call zeroext i1 @pm_runtime_is_irq_safe(%struct.device* %37) #11, !dbg !6873
  br i1 %call36, label %lor.lhs.false, label %if.then40, !dbg !6874

lor.lhs.false:                                    ; preds = %err_poweroff
  %38 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6875
  %call37 = call zeroext i1 @pm_runtime_is_irq_safe(%struct.device* %38) #11, !dbg !6876
  br i1 %call37, label %land.lhs.true38, label %if.end46, !dbg !6877

land.lhs.true38:                                  ; preds = %lor.lhs.false
  %39 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6878
  %flags = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %39, i32 0, i32 31, !dbg !6878
  %40 = load i32, i32* %flags, align 8, !dbg !6878
  %and = and i32 %40, 2, !dbg !6878
  %tobool39 = icmp ne i32 %and, 0, !dbg !6878
  br i1 %tobool39, label %if.then40, label %if.end46, !dbg !6879

if.then40:                                        ; preds = %land.lhs.true38, %err_poweroff
  %41 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6880
  %lock_ops41 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %41, i32 0, i32 38, !dbg !6880
  %42 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops41, align 8, !dbg !6880
  %lock42 = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %42, i32 0, i32 0, !dbg !6880
  %43 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %lock42, align 8, !dbg !6880
  %44 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6880
  call void %43(%struct.generic_pm_domain* %44) #11, !dbg !6880
  %45 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6882
  %call43 = call i32 @genpd_power_off(%struct.generic_pm_domain* %45, i1 zeroext true, i32 0) #11, !dbg !6883
  %46 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6884
  %lock_ops44 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %46, i32 0, i32 38, !dbg !6884
  %47 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops44, align 8, !dbg !6884
  %unlock45 = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %47, i32 0, i32 3, !dbg !6884
  %48 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock45, align 8, !dbg !6884
  %49 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6884
  call void %48(%struct.generic_pm_domain* %49) #11, !dbg !6884
  br label %if.end46, !dbg !6885

if.end46:                                         ; preds = %if.then40, %land.lhs.true38, %lor.lhs.false
  %50 = load i32, i32* %ret, align 4, !dbg !6886
  store i32 %50, i32* %retval, align 4, !dbg !6887
  br label %return, !dbg !6887

return:                                           ; preds = %if.end46, %if.end34, %if.then10, %if.then
  %51 = load i32, i32* %retval, align 4, !dbg !6888
  ret i32 %51, !dbg !6888
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_prepare(%struct.device* %dev) #0 !dbg !6889 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %genpd = alloca %struct.generic_pm_domain*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6890, metadata !DIExpression()), !dbg !6891
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd, metadata !6892, metadata !DIExpression()), !dbg !6893
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6894, metadata !DIExpression()), !dbg !6895
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6896
  %call = call %struct.generic_pm_domain* @dev_to_genpd(%struct.device* %0) #11, !dbg !6897
  store %struct.generic_pm_domain* %call, %struct.generic_pm_domain** %genpd, align 8, !dbg !6898
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6899
  %2 = bitcast %struct.generic_pm_domain* %1 to i8*, !dbg !6899
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #11, !dbg !6901
  br i1 %call1, label %if.then, label %if.end, !dbg !6902

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6903
  br label %return, !dbg !6903

if.end:                                           ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6904
  %4 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6906
  %call2 = call zeroext i1 @resume_needed(%struct.device* %3, %struct.generic_pm_domain* %4) #11, !dbg !6907
  br i1 %call2, label %if.then3, label %if.end5, !dbg !6908

if.then3:                                         ; preds = %if.end
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6909
  %call4 = call i32 @pm_runtime_resume(%struct.device* %5) #11, !dbg !6910
  br label %if.end5, !dbg !6910

if.end5:                                          ; preds = %if.then3, %if.end
  %6 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6911
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %6, i32 0, i32 38, !dbg !6911
  %7 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !6911
  %lock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %7, i32 0, i32 0, !dbg !6911
  %8 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %lock, align 8, !dbg !6911
  %9 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6911
  call void %8(%struct.generic_pm_domain* %9) #11, !dbg !6911
  %10 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6912
  %prepared_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %10, i32 0, i32 15, !dbg !6914
  %11 = load i32, i32* %prepared_count, align 8, !dbg !6915
  %inc = add i32 %11, 1, !dbg !6915
  store i32 %inc, i32* %prepared_count, align 8, !dbg !6915
  %cmp = icmp eq i32 %11, 0, !dbg !6916
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !6917

if.then6:                                         ; preds = %if.end5
  %12 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6918
  %suspended_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %12, i32 0, i32 14, !dbg !6919
  store i32 0, i32* %suspended_count, align 4, !dbg !6920
  br label %if.end7, !dbg !6918

if.end7:                                          ; preds = %if.then6, %if.end5
  %13 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6921
  %lock_ops8 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %13, i32 0, i32 38, !dbg !6921
  %14 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops8, align 8, !dbg !6921
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %14, i32 0, i32 3, !dbg !6921
  %15 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !6921
  %16 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6921
  call void %15(%struct.generic_pm_domain* %16) #11, !dbg !6921
  %17 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6922
  %call9 = call i32 @pm_generic_prepare(%struct.device* %17) #11, !dbg !6923
  store i32 %call9, i32* %ret, align 4, !dbg !6924
  %18 = load i32, i32* %ret, align 4, !dbg !6925
  %cmp10 = icmp slt i32 %18, 0, !dbg !6927
  br i1 %cmp10, label %if.then11, label %if.end17, !dbg !6928

if.then11:                                        ; preds = %if.end7
  %19 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6929
  %lock_ops12 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %19, i32 0, i32 38, !dbg !6929
  %20 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops12, align 8, !dbg !6929
  %lock13 = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %20, i32 0, i32 0, !dbg !6929
  %21 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %lock13, align 8, !dbg !6929
  %22 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6929
  call void %21(%struct.generic_pm_domain* %22) #11, !dbg !6929
  %23 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6931
  %prepared_count14 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %23, i32 0, i32 15, !dbg !6932
  %24 = load i32, i32* %prepared_count14, align 8, !dbg !6933
  %dec = add i32 %24, -1, !dbg !6933
  store i32 %dec, i32* %prepared_count14, align 8, !dbg !6933
  %25 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6934
  %lock_ops15 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %25, i32 0, i32 38, !dbg !6934
  %26 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops15, align 8, !dbg !6934
  %unlock16 = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %26, i32 0, i32 3, !dbg !6934
  %27 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock16, align 8, !dbg !6934
  %28 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6934
  call void %27(%struct.generic_pm_domain* %28) #11, !dbg !6934
  br label %if.end17, !dbg !6935

if.end17:                                         ; preds = %if.then11, %if.end7
  %29 = load i32, i32* %ret, align 4, !dbg !6936
  %cmp18 = icmp sge i32 %29, 0, !dbg !6937
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !6936

cond.true:                                        ; preds = %if.end17
  br label %cond.end, !dbg !6936

cond.false:                                       ; preds = %if.end17
  %30 = load i32, i32* %ret, align 4, !dbg !6938
  br label %cond.end, !dbg !6936

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %30, %cond.false ], !dbg !6936
  store i32 %cond, i32* %retval, align 4, !dbg !6939
  br label %return, !dbg !6939

return:                                           ; preds = %cond.end, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !6940
  ret i32 %31, !dbg !6940
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_suspend_noirq(%struct.device* %dev) #0 !dbg !6941 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6942, metadata !DIExpression()), !dbg !6943
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6944
  %call = call i32 @genpd_finish_suspend(%struct.device* %0, i1 zeroext false) #11, !dbg !6945
  ret i32 %call, !dbg !6946
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_resume_noirq(%struct.device* %dev) #0 !dbg !6947 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %genpd = alloca %struct.generic_pm_domain*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6948, metadata !DIExpression()), !dbg !6949
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd, metadata !6950, metadata !DIExpression()), !dbg !6951
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6952, metadata !DIExpression()), !dbg !6953
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6954
  %call = call %struct.generic_pm_domain* @dev_to_genpd(%struct.device* %0) #11, !dbg !6955
  store %struct.generic_pm_domain* %call, %struct.generic_pm_domain** %genpd, align 8, !dbg !6956
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6957
  %2 = bitcast %struct.generic_pm_domain* %1 to i8*, !dbg !6957
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #11, !dbg !6959
  br i1 %call1, label %if.then, label %if.end, !dbg !6960

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6961
  br label %return, !dbg !6961

if.end:                                           ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6962
  %power = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 11, !dbg !6964
  %wakeup_path = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 7, !dbg !6965
  %bf.load = load i8, i8* %wakeup_path, align 8, !dbg !6965
  %bf.clear = and i8 %bf.load, 1, !dbg !6965
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !6965
  br i1 %bf.cast, label %land.lhs.true, label %if.end4, !dbg !6966

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6967
  %flags = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %4, i32 0, i32 31, !dbg !6967
  %5 = load i32, i32* %flags, align 8, !dbg !6967
  %and = and i32 %5, 8, !dbg !6967
  %tobool = icmp ne i32 %and, 0, !dbg !6967
  br i1 %tobool, label %if.then2, label %if.end4, !dbg !6968

if.then2:                                         ; preds = %land.lhs.true
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6969
  %call3 = call i32 @pm_generic_resume_noirq(%struct.device* %6) #11, !dbg !6970
  store i32 %call3, i32* %retval, align 4, !dbg !6971
  br label %return, !dbg !6971

if.end4:                                          ; preds = %land.lhs.true, %if.end
  %7 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6972
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %7, i32 0, i32 38, !dbg !6972
  %8 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !6972
  %lock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %8, i32 0, i32 0, !dbg !6972
  %9 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %lock, align 8, !dbg !6972
  %10 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6972
  call void %9(%struct.generic_pm_domain* %10) #11, !dbg !6972
  %11 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6973
  call void @genpd_sync_power_on(%struct.generic_pm_domain* %11, i1 zeroext true, i32 0) #11, !dbg !6974
  %12 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6975
  %suspended_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %12, i32 0, i32 14, !dbg !6976
  %13 = load i32, i32* %suspended_count, align 4, !dbg !6977
  %dec = add i32 %13, -1, !dbg !6977
  store i32 %dec, i32* %suspended_count, align 4, !dbg !6977
  %14 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6978
  %lock_ops5 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %14, i32 0, i32 38, !dbg !6978
  %15 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops5, align 8, !dbg !6978
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %15, i32 0, i32 3, !dbg !6978
  %16 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !6978
  %17 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6978
  call void %16(%struct.generic_pm_domain* %17) #11, !dbg !6978
  %18 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6979
  %dev_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %18, i32 0, i32 24, !dbg !6981
  %stop = getelementptr inbounds %struct.gpd_dev_ops, %struct.gpd_dev_ops* %dev_ops, i32 0, i32 1, !dbg !6982
  %19 = load i32 (%struct.device*)*, i32 (%struct.device*)** %stop, align 8, !dbg !6982
  %tobool6 = icmp ne i32 (%struct.device*)* %19, null, !dbg !6979
  br i1 %tobool6, label %land.lhs.true7, label %if.end17, !dbg !6983

land.lhs.true7:                                   ; preds = %if.end4
  %20 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6984
  %dev_ops8 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %20, i32 0, i32 24, !dbg !6985
  %start = getelementptr inbounds %struct.gpd_dev_ops, %struct.gpd_dev_ops* %dev_ops8, i32 0, i32 0, !dbg !6986
  %21 = load i32 (%struct.device*)*, i32 (%struct.device*)** %start, align 8, !dbg !6986
  %tobool9 = icmp ne i32 (%struct.device*)* %21, null, !dbg !6984
  br i1 %tobool9, label %land.lhs.true10, label %if.end17, !dbg !6987

land.lhs.true10:                                  ; preds = %land.lhs.true7
  %22 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6988
  %call11 = call zeroext i1 @pm_runtime_status_suspended(%struct.device* %22) #11, !dbg !6989
  br i1 %call11, label %if.end17, label %if.then12, !dbg !6990

if.then12:                                        ; preds = %land.lhs.true10
  %23 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !6991
  %24 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6993
  %call13 = call i32 @genpd_start_dev(%struct.generic_pm_domain* %23, %struct.device* %24) #11, !dbg !6994
  store i32 %call13, i32* %ret, align 4, !dbg !6995
  %25 = load i32, i32* %ret, align 4, !dbg !6996
  %tobool14 = icmp ne i32 %25, 0, !dbg !6996
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !6998

if.then15:                                        ; preds = %if.then12
  %26 = load i32, i32* %ret, align 4, !dbg !6999
  store i32 %26, i32* %retval, align 4, !dbg !7000
  br label %return, !dbg !7000

if.end16:                                         ; preds = %if.then12
  br label %if.end17, !dbg !7001

if.end17:                                         ; preds = %if.end16, %land.lhs.true10, %land.lhs.true7, %if.end4
  %27 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7002
  %call18 = call i32 @pm_generic_resume_noirq(%struct.device* %27) #11, !dbg !7003
  store i32 %call18, i32* %retval, align 4, !dbg !7004
  br label %return, !dbg !7004

return:                                           ; preds = %if.end17, %if.then15, %if.then2, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !7005
  ret i32 %28, !dbg !7005
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_freeze_noirq(%struct.device* %dev) #0 !dbg !7006 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %genpd = alloca %struct.generic_pm_domain*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7007, metadata !DIExpression()), !dbg !7008
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd, metadata !7009, metadata !DIExpression()), !dbg !7010
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7011, metadata !DIExpression()), !dbg !7012
  store i32 0, i32* %ret, align 4, !dbg !7012
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7013
  %call = call %struct.generic_pm_domain* @dev_to_genpd(%struct.device* %0) #11, !dbg !7014
  store %struct.generic_pm_domain* %call, %struct.generic_pm_domain** %genpd, align 8, !dbg !7015
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7016
  %2 = bitcast %struct.generic_pm_domain* %1 to i8*, !dbg !7016
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #11, !dbg !7018
  br i1 %call1, label %if.then, label %if.end, !dbg !7019

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !7020
  br label %return, !dbg !7020

if.end:                                           ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7021
  %call2 = call i32 @pm_generic_freeze_noirq(%struct.device* %3) #11, !dbg !7022
  store i32 %call2, i32* %ret, align 4, !dbg !7023
  %4 = load i32, i32* %ret, align 4, !dbg !7024
  %tobool = icmp ne i32 %4, 0, !dbg !7024
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !7026

if.then3:                                         ; preds = %if.end
  %5 = load i32, i32* %ret, align 4, !dbg !7027
  store i32 %5, i32* %retval, align 4, !dbg !7028
  br label %return, !dbg !7028

if.end4:                                          ; preds = %if.end
  %6 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7029
  %dev_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %6, i32 0, i32 24, !dbg !7031
  %stop = getelementptr inbounds %struct.gpd_dev_ops, %struct.gpd_dev_ops* %dev_ops, i32 0, i32 1, !dbg !7032
  %7 = load i32 (%struct.device*)*, i32 (%struct.device*)** %stop, align 8, !dbg !7032
  %tobool5 = icmp ne i32 (%struct.device*)* %7, null, !dbg !7029
  br i1 %tobool5, label %land.lhs.true, label %if.end12, !dbg !7033

land.lhs.true:                                    ; preds = %if.end4
  %8 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7034
  %dev_ops6 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %8, i32 0, i32 24, !dbg !7035
  %start = getelementptr inbounds %struct.gpd_dev_ops, %struct.gpd_dev_ops* %dev_ops6, i32 0, i32 0, !dbg !7036
  %9 = load i32 (%struct.device*)*, i32 (%struct.device*)** %start, align 8, !dbg !7036
  %tobool7 = icmp ne i32 (%struct.device*)* %9, null, !dbg !7034
  br i1 %tobool7, label %land.lhs.true8, label %if.end12, !dbg !7037

land.lhs.true8:                                   ; preds = %land.lhs.true
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7038
  %call9 = call zeroext i1 @pm_runtime_status_suspended(%struct.device* %10) #11, !dbg !7039
  br i1 %call9, label %if.end12, label %if.then10, !dbg !7040

if.then10:                                        ; preds = %land.lhs.true8
  %11 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7041
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7042
  %call11 = call i32 @genpd_stop_dev(%struct.generic_pm_domain* %11, %struct.device* %12) #11, !dbg !7043
  store i32 %call11, i32* %ret, align 4, !dbg !7044
  br label %if.end12, !dbg !7045

if.end12:                                         ; preds = %if.then10, %land.lhs.true8, %land.lhs.true, %if.end4
  %13 = load i32, i32* %ret, align 4, !dbg !7046
  store i32 %13, i32* %retval, align 4, !dbg !7047
  br label %return, !dbg !7047

return:                                           ; preds = %if.end12, %if.then3, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !7048
  ret i32 %14, !dbg !7048
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_thaw_noirq(%struct.device* %dev) #0 !dbg !7049 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %genpd = alloca %struct.generic_pm_domain*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7050, metadata !DIExpression()), !dbg !7051
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd, metadata !7052, metadata !DIExpression()), !dbg !7053
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7054, metadata !DIExpression()), !dbg !7055
  store i32 0, i32* %ret, align 4, !dbg !7055
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7056
  %call = call %struct.generic_pm_domain* @dev_to_genpd(%struct.device* %0) #11, !dbg !7057
  store %struct.generic_pm_domain* %call, %struct.generic_pm_domain** %genpd, align 8, !dbg !7058
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7059
  %2 = bitcast %struct.generic_pm_domain* %1 to i8*, !dbg !7059
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #11, !dbg !7061
  br i1 %call1, label %if.then, label %if.end, !dbg !7062

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !7063
  br label %return, !dbg !7063

if.end:                                           ; preds = %entry
  %3 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7064
  %dev_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %3, i32 0, i32 24, !dbg !7066
  %stop = getelementptr inbounds %struct.gpd_dev_ops, %struct.gpd_dev_ops* %dev_ops, i32 0, i32 1, !dbg !7067
  %4 = load i32 (%struct.device*)*, i32 (%struct.device*)** %stop, align 8, !dbg !7067
  %tobool = icmp ne i32 (%struct.device*)* %4, null, !dbg !7064
  br i1 %tobool, label %land.lhs.true, label %if.end11, !dbg !7068

land.lhs.true:                                    ; preds = %if.end
  %5 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7069
  %dev_ops2 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %5, i32 0, i32 24, !dbg !7070
  %start = getelementptr inbounds %struct.gpd_dev_ops, %struct.gpd_dev_ops* %dev_ops2, i32 0, i32 0, !dbg !7071
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %start, align 8, !dbg !7071
  %tobool3 = icmp ne i32 (%struct.device*)* %6, null, !dbg !7069
  br i1 %tobool3, label %land.lhs.true4, label %if.end11, !dbg !7072

land.lhs.true4:                                   ; preds = %land.lhs.true
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7073
  %call5 = call zeroext i1 @pm_runtime_status_suspended(%struct.device* %7) #11, !dbg !7074
  br i1 %call5, label %if.end11, label %if.then6, !dbg !7075

if.then6:                                         ; preds = %land.lhs.true4
  %8 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7076
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7078
  %call7 = call i32 @genpd_start_dev(%struct.generic_pm_domain* %8, %struct.device* %9) #11, !dbg !7079
  store i32 %call7, i32* %ret, align 4, !dbg !7080
  %10 = load i32, i32* %ret, align 4, !dbg !7081
  %tobool8 = icmp ne i32 %10, 0, !dbg !7081
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !7083

if.then9:                                         ; preds = %if.then6
  %11 = load i32, i32* %ret, align 4, !dbg !7084
  store i32 %11, i32* %retval, align 4, !dbg !7085
  br label %return, !dbg !7085

if.end10:                                         ; preds = %if.then6
  br label %if.end11, !dbg !7086

if.end11:                                         ; preds = %if.end10, %land.lhs.true4, %land.lhs.true, %if.end
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7087
  %call12 = call i32 @pm_generic_thaw_noirq(%struct.device* %12) #11, !dbg !7088
  store i32 %call12, i32* %retval, align 4, !dbg !7089
  br label %return, !dbg !7089

return:                                           ; preds = %if.end11, %if.then9, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !7090
  ret i32 %13, !dbg !7090
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_poweroff_noirq(%struct.device* %dev) #0 !dbg !7091 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7092, metadata !DIExpression()), !dbg !7093
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7094
  %call = call i32 @genpd_finish_suspend(%struct.device* %0, i1 zeroext true) #11, !dbg !7095
  ret i32 %call, !dbg !7096
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_restore_noirq(%struct.device* %dev) #0 !dbg !7097 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %genpd = alloca %struct.generic_pm_domain*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7098, metadata !DIExpression()), !dbg !7099
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd, metadata !7100, metadata !DIExpression()), !dbg !7101
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7102, metadata !DIExpression()), !dbg !7103
  store i32 0, i32* %ret, align 4, !dbg !7103
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7104
  %call = call %struct.generic_pm_domain* @dev_to_genpd(%struct.device* %0) #11, !dbg !7105
  store %struct.generic_pm_domain* %call, %struct.generic_pm_domain** %genpd, align 8, !dbg !7106
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7107
  %2 = bitcast %struct.generic_pm_domain* %1 to i8*, !dbg !7107
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #11, !dbg !7109
  br i1 %call1, label %if.then, label %if.end, !dbg !7110

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !7111
  br label %return, !dbg !7111

if.end:                                           ; preds = %entry
  %3 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7112
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %3, i32 0, i32 38, !dbg !7112
  %4 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !7112
  %lock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %4, i32 0, i32 0, !dbg !7112
  %5 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %lock, align 8, !dbg !7112
  %6 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7112
  call void %5(%struct.generic_pm_domain* %6) #11, !dbg !7112
  %7 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7113
  %suspended_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %7, i32 0, i32 14, !dbg !7115
  %8 = load i32, i32* %suspended_count, align 4, !dbg !7116
  %inc = add i32 %8, 1, !dbg !7116
  store i32 %inc, i32* %suspended_count, align 4, !dbg !7116
  %cmp = icmp eq i32 %8, 0, !dbg !7117
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !7118

if.then2:                                         ; preds = %if.end
  %9 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7119
  %status = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %9, i32 0, i32 12, !dbg !7121
  store i32 1, i32* %status, align 4, !dbg !7122
  br label %if.end3, !dbg !7123

if.end3:                                          ; preds = %if.then2, %if.end
  %10 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7124
  call void @genpd_sync_power_on(%struct.generic_pm_domain* %10, i1 zeroext true, i32 0) #11, !dbg !7125
  %11 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7126
  %lock_ops4 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %11, i32 0, i32 38, !dbg !7126
  %12 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops4, align 8, !dbg !7126
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %12, i32 0, i32 3, !dbg !7126
  %13 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !7126
  %14 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7126
  call void %13(%struct.generic_pm_domain* %14) #11, !dbg !7126
  %15 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7127
  %dev_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %15, i32 0, i32 24, !dbg !7129
  %stop = getelementptr inbounds %struct.gpd_dev_ops, %struct.gpd_dev_ops* %dev_ops, i32 0, i32 1, !dbg !7130
  %16 = load i32 (%struct.device*)*, i32 (%struct.device*)** %stop, align 8, !dbg !7130
  %tobool = icmp ne i32 (%struct.device*)* %16, null, !dbg !7127
  br i1 %tobool, label %land.lhs.true, label %if.end14, !dbg !7131

land.lhs.true:                                    ; preds = %if.end3
  %17 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7132
  %dev_ops5 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %17, i32 0, i32 24, !dbg !7133
  %start = getelementptr inbounds %struct.gpd_dev_ops, %struct.gpd_dev_ops* %dev_ops5, i32 0, i32 0, !dbg !7134
  %18 = load i32 (%struct.device*)*, i32 (%struct.device*)** %start, align 8, !dbg !7134
  %tobool6 = icmp ne i32 (%struct.device*)* %18, null, !dbg !7132
  br i1 %tobool6, label %land.lhs.true7, label %if.end14, !dbg !7135

land.lhs.true7:                                   ; preds = %land.lhs.true
  %19 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7136
  %call8 = call zeroext i1 @pm_runtime_status_suspended(%struct.device* %19) #11, !dbg !7137
  br i1 %call8, label %if.end14, label %if.then9, !dbg !7138

if.then9:                                         ; preds = %land.lhs.true7
  %20 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7139
  %21 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7141
  %call10 = call i32 @genpd_start_dev(%struct.generic_pm_domain* %20, %struct.device* %21) #11, !dbg !7142
  store i32 %call10, i32* %ret, align 4, !dbg !7143
  %22 = load i32, i32* %ret, align 4, !dbg !7144
  %tobool11 = icmp ne i32 %22, 0, !dbg !7144
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !7146

if.then12:                                        ; preds = %if.then9
  %23 = load i32, i32* %ret, align 4, !dbg !7147
  store i32 %23, i32* %retval, align 4, !dbg !7148
  br label %return, !dbg !7148

if.end13:                                         ; preds = %if.then9
  br label %if.end14, !dbg !7149

if.end14:                                         ; preds = %if.end13, %land.lhs.true7, %land.lhs.true, %if.end3
  %24 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7150
  %call15 = call i32 @pm_generic_restore_noirq(%struct.device* %24) #11, !dbg !7151
  store i32 %call15, i32* %retval, align 4, !dbg !7152
  br label %return, !dbg !7152

return:                                           ; preds = %if.end14, %if.then12, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !7153
  ret i32 %25, !dbg !7153
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genpd_complete(%struct.device* %dev) #0 !dbg !7154 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %genpd = alloca %struct.generic_pm_domain*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7155, metadata !DIExpression()), !dbg !7156
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd, metadata !7157, metadata !DIExpression()), !dbg !7158
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7159
  %call = call %struct.generic_pm_domain* @dev_to_genpd(%struct.device* %0) #11, !dbg !7160
  store %struct.generic_pm_domain* %call, %struct.generic_pm_domain** %genpd, align 8, !dbg !7161
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7162
  %2 = bitcast %struct.generic_pm_domain* %1 to i8*, !dbg !7162
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #11, !dbg !7164
  br i1 %call1, label %if.then, label %if.end, !dbg !7165

if.then:                                          ; preds = %entry
  br label %return, !dbg !7166

if.end:                                           ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7167
  call void @pm_generic_complete(%struct.device* %3) #11, !dbg !7168
  %4 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7169
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %4, i32 0, i32 38, !dbg !7169
  %5 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !7169
  %lock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %5, i32 0, i32 0, !dbg !7169
  %6 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %lock, align 8, !dbg !7169
  %7 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7169
  call void %6(%struct.generic_pm_domain* %7) #11, !dbg !7169
  %8 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7170
  %prepared_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %8, i32 0, i32 15, !dbg !7171
  %9 = load i32, i32* %prepared_count, align 8, !dbg !7172
  %dec = add i32 %9, -1, !dbg !7172
  store i32 %dec, i32* %prepared_count, align 8, !dbg !7172
  %10 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7173
  %prepared_count2 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %10, i32 0, i32 15, !dbg !7175
  %11 = load i32, i32* %prepared_count2, align 8, !dbg !7175
  %tobool = icmp ne i32 %11, 0, !dbg !7173
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !7176

if.then3:                                         ; preds = %if.end
  %12 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7177
  call void @genpd_queue_power_off_work(%struct.generic_pm_domain* %12) #11, !dbg !7178
  br label %if.end4, !dbg !7178

if.end4:                                          ; preds = %if.then3, %if.end
  %13 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7179
  %lock_ops5 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %13, i32 0, i32 38, !dbg !7179
  %14 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops5, align 8, !dbg !7179
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %14, i32 0, i32 3, !dbg !7179
  %15 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !7179
  %16 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7179
  call void %15(%struct.generic_pm_domain* %16) #11, !dbg !7179
  br label %return, !dbg !7180

return:                                           ; preds = %if.end4, %if.then
  ret void, !dbg !7180
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_dev_pm_start(%struct.device* %dev) #0 !dbg !7181 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %genpd = alloca %struct.generic_pm_domain*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7182, metadata !DIExpression()), !dbg !7183
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd, metadata !7184, metadata !DIExpression()), !dbg !7185
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7186
  %call = call %struct.generic_pm_domain* @dev_to_genpd(%struct.device* %0) #11, !dbg !7187
  store %struct.generic_pm_domain* %call, %struct.generic_pm_domain** %genpd, align 8, !dbg !7185
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7188
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7189
  %call1 = call i32 @genpd_start_dev(%struct.generic_pm_domain* %1, %struct.device* %2) #11, !dbg !7190
  ret i32 %call1, !dbg !7191
}

; Function Attrs: noredzone
declare dso_local i32 @pm_clk_suspend(%struct.device*) #3

; Function Attrs: noredzone
declare dso_local i32 @pm_clk_resume(%struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @zalloc_cpumask_var([1 x %struct.cpumask]* %mask, i32 %flags) #0 !dbg !7192 {
entry:
  %mask.addr = alloca [1 x %struct.cpumask]*, align 8
  %flags.addr = alloca i32, align 4
  store [1 x %struct.cpumask]* %mask, [1 x %struct.cpumask]** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata [1 x %struct.cpumask]** %mask.addr, metadata !7196, metadata !DIExpression()), !dbg !7197
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7198, metadata !DIExpression()), !dbg !7199
  %0 = load [1 x %struct.cpumask]*, [1 x %struct.cpumask]** %mask.addr, align 8, !dbg !7200
  %arraydecay = getelementptr inbounds [1 x %struct.cpumask], [1 x %struct.cpumask]* %0, i64 0, i64 0, !dbg !7201
  call void @cpumask_clear(%struct.cpumask* %arraydecay) #11, !dbg !7202
  ret i1 true, !dbg !7203
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_set_default_power_state(%struct.generic_pm_domain* %genpd) #0 !dbg !7204 {
entry:
  %retval = alloca i32, align 4
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %state = alloca %struct.genpd_power_state*, align 8
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !7205, metadata !DIExpression()), !dbg !7206
  call void @llvm.dbg.declare(metadata %struct.genpd_power_state** %state, metadata !7207, metadata !DIExpression()), !dbg !7208
  %call = call i8* @kzalloc(i64 64, i32 3264) #11, !dbg !7209
  %0 = bitcast i8* %call to %struct.genpd_power_state*, !dbg !7209
  store %struct.genpd_power_state* %0, %struct.genpd_power_state** %state, align 8, !dbg !7210
  %1 = load %struct.genpd_power_state*, %struct.genpd_power_state** %state, align 8, !dbg !7211
  %tobool = icmp ne %struct.genpd_power_state* %1, null, !dbg !7211
  br i1 %tobool, label %if.end, label %if.then, !dbg !7213

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !7214
  br label %return, !dbg !7214

if.end:                                           ; preds = %entry
  %2 = load %struct.genpd_power_state*, %struct.genpd_power_state** %state, align 8, !dbg !7215
  %3 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7216
  %states = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %3, i32 0, i32 32, !dbg !7217
  store %struct.genpd_power_state* %2, %struct.genpd_power_state** %states, align 8, !dbg !7218
  %4 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7219
  %state_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %4, i32 0, i32 34, !dbg !7220
  store i32 1, i32* %state_count, align 8, !dbg !7221
  %5 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7222
  %free_states = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %5, i32 0, i32 33, !dbg !7223
  store void (%struct.genpd_power_state*, i32)* @genpd_free_default_power_state, void (%struct.genpd_power_state*, i32)** %free_states, align 8, !dbg !7224
  store i32 0, i32* %retval, align 4, !dbg !7225
  br label %return, !dbg !7225

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !7226
  ret i32 %6, !dbg !7226
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @free_cpumask_var(%struct.cpumask* %mask) #0 !dbg !7227 {
entry:
  %mask.addr = alloca %struct.cpumask*, align 8
  store %struct.cpumask* %mask, %struct.cpumask** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cpumask** %mask.addr, metadata !7231, metadata !DIExpression()), !dbg !7232
  ret void, !dbg !7233
}

; Function Attrs: noredzone
declare dso_local void @device_initialize(%struct.device*) #3

; Function Attrs: noredzone
declare dso_local i32 @dev_set_name(%struct.device*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !7234 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7237, metadata !DIExpression()), !dbg !7238
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7239, metadata !DIExpression()), !dbg !7240
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7241
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7242
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7243
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !7244
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7244
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #11, !dbg !7245
  ret void, !dbg !7246
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pm_genpd_remove(%struct.generic_pm_domain* %genpd) #0 !dbg !7247 {
entry:
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %ret = alloca i32, align 4
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !7248, metadata !DIExpression()), !dbg !7249
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7250, metadata !DIExpression()), !dbg !7251
  call void @mutex_lock(%struct.mutex* @gpd_list_lock) #11, !dbg !7252
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7253
  %call = call i32 @genpd_remove(%struct.generic_pm_domain* %0) #11, !dbg !7254
  store i32 %call, i32* %ret, align 4, !dbg !7255
  call void @mutex_unlock(%struct.mutex* @gpd_list_lock) #11, !dbg !7256
  %1 = load i32, i32* %ret, align 4, !dbg !7257
  ret i32 %1, !dbg !7258
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_remove(%struct.generic_pm_domain* %genpd) #0 !dbg !7259 {
entry:
  %retval = alloca i32, align 4
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %l = alloca %struct.gpd_link*, align 8
  %link = alloca %struct.gpd_link*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.gpd_link*, align 8
  %__mptr14 = alloca i8*, align 8
  %tmp18 = alloca %struct.gpd_link*, align 8
  %__mptr23 = alloca i8*, align 8
  %tmp28 = alloca %struct.gpd_link*, align 8
  %tmp40 = alloca i32, align 4
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !7260, metadata !DIExpression()), !dbg !7261
  call void @llvm.dbg.declare(metadata %struct.gpd_link** %l, metadata !7262, metadata !DIExpression()), !dbg !7263
  call void @llvm.dbg.declare(metadata %struct.gpd_link** %link, metadata !7264, metadata !DIExpression()), !dbg !7265
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7266
  %1 = bitcast %struct.generic_pm_domain* %0 to i8*, !dbg !7266
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %1) #11, !dbg !7268
  br i1 %call, label %if.then, label %if.end, !dbg !7269

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !7270
  br label %return, !dbg !7270

if.end:                                           ; preds = %entry
  %2 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7271
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %2, i32 0, i32 38, !dbg !7271
  %3 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !7271
  %lock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %3, i32 0, i32 0, !dbg !7271
  %4 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %lock, align 8, !dbg !7271
  %5 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7271
  call void %4(%struct.generic_pm_domain* %5) #11, !dbg !7271
  %6 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7272
  %has_provider = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %6, i32 0, i32 9, !dbg !7274
  %7 = load i8, i8* %has_provider, align 8, !dbg !7274
  %tobool = trunc i8 %7 to i1, !dbg !7274
  br i1 %tobool, label %if.then1, label %if.end4, !dbg !7275

if.then1:                                         ; preds = %if.end
  %8 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7276
  %lock_ops2 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %8, i32 0, i32 38, !dbg !7276
  %9 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops2, align 8, !dbg !7276
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %9, i32 0, i32 3, !dbg !7276
  %10 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !7276
  %11 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7276
  call void %10(%struct.generic_pm_domain* %11) #11, !dbg !7276
  %12 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7278
  %name = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %12, i32 0, i32 10, !dbg !7278
  %13 = load i8*, i8** %name, align 8, !dbg !7278
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.17, i64 0, i64 0), i8* %13) #12, !dbg !7278
  store i32 -16, i32* %retval, align 4, !dbg !7279
  br label %return, !dbg !7279

if.end4:                                          ; preds = %if.end
  %14 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7280
  %parent_links = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %14, i32 0, i32 3, !dbg !7282
  %call5 = call i32 @list_empty(%struct.list_head* %parent_links) #11, !dbg !7283
  %tobool6 = icmp ne i32 %call5, 0, !dbg !7283
  br i1 %tobool6, label %lor.lhs.false, label %if.then8, !dbg !7284

lor.lhs.false:                                    ; preds = %if.end4
  %15 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7285
  %device_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %15, i32 0, i32 13, !dbg !7286
  %16 = load i32, i32* %device_count, align 8, !dbg !7286
  %tobool7 = icmp ne i32 %16, 0, !dbg !7285
  br i1 %tobool7, label %if.then8, label %if.end13, !dbg !7287

if.then8:                                         ; preds = %lor.lhs.false, %if.end4
  %17 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7288
  %lock_ops9 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %17, i32 0, i32 38, !dbg !7288
  %18 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops9, align 8, !dbg !7288
  %unlock10 = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %18, i32 0, i32 3, !dbg !7288
  %19 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock10, align 8, !dbg !7288
  %20 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7288
  call void %19(%struct.generic_pm_domain* %20) #11, !dbg !7288
  %21 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7290
  %name11 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %21, i32 0, i32 10, !dbg !7290
  %22 = load i8*, i8** %name11, align 8, !dbg !7290
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.genpd_remove, i64 0, i64 0), i8* %22) #12, !dbg !7290
  store i32 -16, i32* %retval, align 4, !dbg !7291
  br label %return, !dbg !7291

if.end13:                                         ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7292, metadata !DIExpression()), !dbg !7295
  %23 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7295
  %child_links = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %23, i32 0, i32 4, !dbg !7295
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %child_links, i32 0, i32 0, !dbg !7295
  %24 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7295
  %25 = bitcast %struct.list_head* %24 to i8*, !dbg !7295
  store i8* %25, i8** %__mptr, align 8, !dbg !7295
  br label %do.body, !dbg !7295

do.body:                                          ; preds = %if.end13
  br label %do.end, !dbg !7296

do.end:                                           ; preds = %do.body
  %26 = load i8*, i8** %__mptr, align 8, !dbg !7295
  %add.ptr = getelementptr i8, i8* %26, i64 -32, !dbg !7295
  %27 = bitcast i8* %add.ptr to %struct.gpd_link*, !dbg !7295
  store %struct.gpd_link* %27, %struct.gpd_link** %tmp, align 8, !dbg !7296
  %28 = load %struct.gpd_link*, %struct.gpd_link** %tmp, align 8, !dbg !7295
  store %struct.gpd_link* %28, %struct.gpd_link** %link, align 8, !dbg !7298
  call void @llvm.dbg.declare(metadata i8** %__mptr14, metadata !7299, metadata !DIExpression()), !dbg !7301
  %29 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !7301
  %child_node = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %29, i32 0, i32 3, !dbg !7301
  %next15 = getelementptr inbounds %struct.list_head, %struct.list_head* %child_node, i32 0, i32 0, !dbg !7301
  %30 = load %struct.list_head*, %struct.list_head** %next15, align 8, !dbg !7301
  %31 = bitcast %struct.list_head* %30 to i8*, !dbg !7301
  store i8* %31, i8** %__mptr14, align 8, !dbg !7301
  br label %do.body16, !dbg !7301

do.body16:                                        ; preds = %do.end
  br label %do.end17, !dbg !7302

do.end17:                                         ; preds = %do.body16
  %32 = load i8*, i8** %__mptr14, align 8, !dbg !7301
  %add.ptr19 = getelementptr i8, i8* %32, i64 -32, !dbg !7301
  %33 = bitcast i8* %add.ptr19 to %struct.gpd_link*, !dbg !7301
  store %struct.gpd_link* %33, %struct.gpd_link** %tmp18, align 8, !dbg !7302
  %34 = load %struct.gpd_link*, %struct.gpd_link** %tmp18, align 8, !dbg !7301
  store %struct.gpd_link* %34, %struct.gpd_link** %l, align 8, !dbg !7298
  br label %for.cond, !dbg !7298

for.cond:                                         ; preds = %do.end27, %do.end17
  %35 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !7304
  %child_node20 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %35, i32 0, i32 3, !dbg !7304
  %36 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7304
  %child_links21 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %36, i32 0, i32 4, !dbg !7304
  %cmp = icmp eq %struct.list_head* %child_node20, %child_links21, !dbg !7304
  %lnot = xor i1 %cmp, true, !dbg !7304
  br i1 %lnot, label %for.body, label %for.end, !dbg !7298

for.body:                                         ; preds = %for.cond
  %37 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !7306
  %parent_node = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %37, i32 0, i32 1, !dbg !7308
  call void @list_del(%struct.list_head* %parent_node) #11, !dbg !7309
  %38 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !7310
  %child_node22 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %38, i32 0, i32 3, !dbg !7311
  call void @list_del(%struct.list_head* %child_node22) #11, !dbg !7312
  %39 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !7313
  %40 = bitcast %struct.gpd_link* %39 to i8*, !dbg !7313
  call void @kfree(i8* %40) #11, !dbg !7314
  br label %for.inc, !dbg !7315

for.inc:                                          ; preds = %for.body
  %41 = load %struct.gpd_link*, %struct.gpd_link** %l, align 8, !dbg !7304
  store %struct.gpd_link* %41, %struct.gpd_link** %link, align 8, !dbg !7304
  call void @llvm.dbg.declare(metadata i8** %__mptr23, metadata !7316, metadata !DIExpression()), !dbg !7318
  %42 = load %struct.gpd_link*, %struct.gpd_link** %l, align 8, !dbg !7318
  %child_node24 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %42, i32 0, i32 3, !dbg !7318
  %next25 = getelementptr inbounds %struct.list_head, %struct.list_head* %child_node24, i32 0, i32 0, !dbg !7318
  %43 = load %struct.list_head*, %struct.list_head** %next25, align 8, !dbg !7318
  %44 = bitcast %struct.list_head* %43 to i8*, !dbg !7318
  store i8* %44, i8** %__mptr23, align 8, !dbg !7318
  br label %do.body26, !dbg !7318

do.body26:                                        ; preds = %for.inc
  br label %do.end27, !dbg !7319

do.end27:                                         ; preds = %do.body26
  %45 = load i8*, i8** %__mptr23, align 8, !dbg !7318
  %add.ptr29 = getelementptr i8, i8* %45, i64 -32, !dbg !7318
  %46 = bitcast i8* %add.ptr29 to %struct.gpd_link*, !dbg !7318
  store %struct.gpd_link* %46, %struct.gpd_link** %tmp28, align 8, !dbg !7319
  %47 = load %struct.gpd_link*, %struct.gpd_link** %tmp28, align 8, !dbg !7318
  store %struct.gpd_link* %47, %struct.gpd_link** %l, align 8, !dbg !7304
  br label %for.cond, !dbg !7304, !llvm.loop !7321

for.end:                                          ; preds = %for.cond
  %48 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7323
  %gpd_list_node = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %48, i32 0, i32 2, !dbg !7324
  call void @list_del(%struct.list_head* %gpd_list_node) #11, !dbg !7325
  %49 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7326
  %lock_ops30 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %49, i32 0, i32 38, !dbg !7326
  %50 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops30, align 8, !dbg !7326
  %unlock31 = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %50, i32 0, i32 3, !dbg !7326
  %51 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock31, align 8, !dbg !7326
  %52 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7326
  call void %51(%struct.generic_pm_domain* %52) #11, !dbg !7326
  %53 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7327
  %power_off_work = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %53, i32 0, i32 7, !dbg !7328
  %call32 = call zeroext i1 @cancel_work_sync(%struct.work_struct* %power_off_work) #11, !dbg !7329
  %54 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7330
  %flags = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %54, i32 0, i32 31, !dbg !7330
  %55 = load i32, i32* %flags, align 8, !dbg !7330
  %and = and i32 %55, 16, !dbg !7330
  %tobool33 = icmp ne i32 %and, 0, !dbg !7330
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !7332

if.then34:                                        ; preds = %for.end
  %56 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7333
  %cpus = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %56, i32 0, i32 17, !dbg !7334
  %arraydecay = getelementptr inbounds [1 x %struct.cpumask], [1 x %struct.cpumask]* %cpus, i64 0, i64 0, !dbg !7333
  call void @free_cpumask_var(%struct.cpumask* %arraydecay) #11, !dbg !7335
  br label %if.end35, !dbg !7335

if.end35:                                         ; preds = %if.then34, %for.end
  %57 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7336
  %free_states = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %57, i32 0, i32 33, !dbg !7338
  %58 = load void (%struct.genpd_power_state*, i32)*, void (%struct.genpd_power_state*, i32)** %free_states, align 8, !dbg !7338
  %tobool36 = icmp ne void (%struct.genpd_power_state*, i32)* %58, null, !dbg !7336
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !7339

if.then37:                                        ; preds = %if.end35
  %59 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7340
  %free_states38 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %59, i32 0, i32 33, !dbg !7341
  %60 = load void (%struct.genpd_power_state*, i32)*, void (%struct.genpd_power_state*, i32)** %free_states38, align 8, !dbg !7341
  %61 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7342
  %states = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %61, i32 0, i32 32, !dbg !7343
  %62 = load %struct.genpd_power_state*, %struct.genpd_power_state** %states, align 8, !dbg !7343
  %63 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7344
  %state_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %63, i32 0, i32 34, !dbg !7345
  %64 = load i32, i32* %state_count, align 8, !dbg !7345
  call void %60(%struct.genpd_power_state* %62, i32 %64) #11, !dbg !7340
  br label %if.end39, !dbg !7340

if.end39:                                         ; preds = %if.then37, %if.end35
  store i32 0, i32* %tmp40, align 4, !dbg !7346
  %65 = load i32, i32* %tmp40, align 4, !dbg !7349
  store i32 0, i32* %retval, align 4, !dbg !7350
  br label %return, !dbg !7350

return:                                           ; preds = %if.end39, %if.then8, %if.then1, %if.then
  %66 = load i32, i32* %retval, align 4, !dbg !7351
  ret i32 %66, !dbg !7351
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_genpd_add_provider_simple(%struct.device_node* %np, %struct.generic_pm_domain* %genpd) #0 !dbg !7352 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7355, metadata !DIExpression()), !dbg !7356
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !7357, metadata !DIExpression()), !dbg !7358
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7359, metadata !DIExpression()), !dbg !7360
  store i32 -22, i32* %ret, align 4, !dbg !7360
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7361
  %tobool = icmp ne %struct.device_node* %0, null, !dbg !7361
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7363

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7364
  %tobool1 = icmp ne %struct.generic_pm_domain* %1, null, !dbg !7364
  br i1 %tobool1, label %if.end, label %if.then, !dbg !7365

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !7366
  br label %return, !dbg !7366

if.end:                                           ; preds = %lor.lhs.false
  call void @mutex_lock(%struct.mutex* @gpd_list_lock) #11, !dbg !7367
  %2 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7368
  %call = call zeroext i1 @genpd_present(%struct.generic_pm_domain* %2) #11, !dbg !7370
  br i1 %call, label %if.end3, label %if.then2, !dbg !7371

if.then2:                                         ; preds = %if.end
  br label %unlock, !dbg !7372

if.end3:                                          ; preds = %if.end
  %3 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7373
  %4 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7374
  %dev = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %4, i32 0, i32 0, !dbg !7375
  %of_node = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 23, !dbg !7376
  store %struct.device_node* %3, %struct.device_node** %of_node, align 8, !dbg !7377
  %5 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7378
  %set_performance_state = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %5, i32 0, i32 23, !dbg !7380
  %6 = load i32 (%struct.generic_pm_domain*, i32)*, i32 (%struct.generic_pm_domain*, i32)** %set_performance_state, align 8, !dbg !7380
  %tobool4 = icmp ne i32 (%struct.generic_pm_domain*, i32)* %6, null, !dbg !7378
  br i1 %tobool4, label %if.then5, label %if.end39, !dbg !7381

if.then5:                                         ; preds = %if.end3
  %7 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7382
  %dev6 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %7, i32 0, i32 0, !dbg !7384
  %call7 = call i32 @dev_pm_opp_of_add_table(%struct.device* %dev6) #11, !dbg !7385
  store i32 %call7, i32* %ret, align 4, !dbg !7386
  %8 = load i32, i32* %ret, align 4, !dbg !7387
  %tobool8 = icmp ne i32 %8, 0, !dbg !7387
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !7389

if.then9:                                         ; preds = %if.then5
  %9 = load i32, i32* %ret, align 4, !dbg !7390
  %cmp = icmp ne i32 %9, -517, !dbg !7393
  br i1 %cmp, label %if.then10, label %if.end12, !dbg !7394

if.then10:                                        ; preds = %if.then9
  %10 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7395
  %dev11 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %10, i32 0, i32 0, !dbg !7395
  %11 = load i32, i32* %ret, align 4, !dbg !7395
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev11, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i32 %11) #12, !dbg !7395
  br label %if.end12, !dbg !7395

if.end12:                                         ; preds = %if.then10, %if.then9
  br label %unlock, !dbg !7396

if.end13:                                         ; preds = %if.then5
  %12 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7397
  %dev14 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %12, i32 0, i32 0, !dbg !7398
  %call15 = call %struct.opp_table* @dev_pm_opp_get_opp_table(%struct.device* %dev14) #11, !dbg !7399
  %13 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7400
  %opp_table = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %13, i32 0, i32 21, !dbg !7401
  store %struct.opp_table* %call15, %struct.opp_table** %opp_table, align 8, !dbg !7402
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7403, metadata !DIExpression()), !dbg !7405
  %14 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7405
  %opp_table16 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %14, i32 0, i32 21, !dbg !7405
  %15 = load %struct.opp_table*, %struct.opp_table** %opp_table16, align 8, !dbg !7405
  %16 = bitcast %struct.opp_table* %15 to i8*, !dbg !7405
  %call17 = call zeroext i1 @IS_ERR(i8* %16) #11, !dbg !7405
  %lnot = xor i1 %call17, true, !dbg !7405
  %lnot18 = xor i1 %lnot, true, !dbg !7405
  %lnot.ext = zext i1 %lnot18 to i32, !dbg !7405
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7405
  %17 = load i32, i32* %__ret_warn_on, align 4, !dbg !7406
  %tobool19 = icmp ne i32 %17, 0, !dbg !7406
  %lnot20 = xor i1 %tobool19, true, !dbg !7406
  %lnot22 = xor i1 %lnot20, true, !dbg !7406
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !7406
  %conv = sext i32 %lnot.ext23 to i64, !dbg !7406
  %tobool24 = icmp ne i64 %conv, 0, !dbg !7406
  br i1 %tobool24, label %if.then25, label %if.end32, !dbg !7405

if.then25:                                        ; preds = %if.end13
  br label %do.body, !dbg !7406

do.body:                                          ; preds = %if.then25
  br label %do.body26, !dbg !7408

do.body26:                                        ; preds = %do.body
  br label %do.end, !dbg !7410

do.end:                                           ; preds = %do.body26
  br label %do.body27, !dbg !7408

do.body27:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 2185, i32 2305, i64 12) #7, !dbg !7412, !srcloc !7414
  br label %do.end28, !dbg !7412

do.end28:                                         ; preds = %do.body27
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 333) #7, !dbg !7415, !srcloc !7417
  br label %do.body29, !dbg !7408

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !7418

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !7408

do.end31:                                         ; preds = %do.end30
  br label %if.end32, !dbg !7408

if.end32:                                         ; preds = %do.end31, %if.end13
  %18 = load i32, i32* %__ret_warn_on, align 4, !dbg !7405
  %tobool33 = icmp ne i32 %18, 0, !dbg !7405
  %lnot34 = xor i1 %tobool33, true, !dbg !7405
  %lnot36 = xor i1 %lnot34, true, !dbg !7405
  %lnot.ext37 = zext i1 %lnot36 to i32, !dbg !7405
  %conv38 = sext i32 %lnot.ext37 to i64, !dbg !7405
  store i64 %conv38, i64* %tmp, align 8, !dbg !7406
  %19 = load i64, i64* %tmp, align 8, !dbg !7405
  br label %if.end39, !dbg !7420

if.end39:                                         ; preds = %if.end32, %if.end3
  %20 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7421
  %21 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7422
  %22 = bitcast %struct.generic_pm_domain* %21 to i8*, !dbg !7422
  %call40 = call i32 @genpd_add_provider(%struct.device_node* %20, %struct.generic_pm_domain* (%struct.of_phandle_args*, i8*)* @genpd_xlate_simple, i8* %22) #11, !dbg !7423
  store i32 %call40, i32* %ret, align 4, !dbg !7424
  %23 = load i32, i32* %ret, align 4, !dbg !7425
  %tobool41 = icmp ne i32 %23, 0, !dbg !7425
  br i1 %tobool41, label %if.then42, label %if.end49, !dbg !7427

if.then42:                                        ; preds = %if.end39
  %24 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7428
  %set_performance_state43 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %24, i32 0, i32 23, !dbg !7431
  %25 = load i32 (%struct.generic_pm_domain*, i32)*, i32 (%struct.generic_pm_domain*, i32)** %set_performance_state43, align 8, !dbg !7431
  %tobool44 = icmp ne i32 (%struct.generic_pm_domain*, i32)* %25, null, !dbg !7428
  br i1 %tobool44, label %if.then45, label %if.end48, !dbg !7432

if.then45:                                        ; preds = %if.then42
  %26 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7433
  %opp_table46 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %26, i32 0, i32 21, !dbg !7435
  %27 = load %struct.opp_table*, %struct.opp_table** %opp_table46, align 8, !dbg !7435
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %27) #11, !dbg !7436
  %28 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7437
  %dev47 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %28, i32 0, i32 0, !dbg !7438
  call void @dev_pm_opp_of_remove_table(%struct.device* %dev47) #11, !dbg !7439
  br label %if.end48, !dbg !7440

if.end48:                                         ; preds = %if.then45, %if.then42
  br label %unlock, !dbg !7441

if.end49:                                         ; preds = %if.end39
  %29 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7442
  %fwnode = getelementptr inbounds %struct.device_node, %struct.device_node* %29, i32 0, i32 3, !dbg !7443
  %30 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7444
  %provider = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %30, i32 0, i32 8, !dbg !7445
  store %struct.fwnode_handle* %fwnode, %struct.fwnode_handle** %provider, align 8, !dbg !7446
  %31 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7447
  %has_provider = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %31, i32 0, i32 9, !dbg !7448
  store i8 1, i8* %has_provider, align 8, !dbg !7449
  br label %unlock, !dbg !7447

unlock:                                           ; preds = %if.end49, %if.end48, %if.end12, %if.then2
  call void @llvm.dbg.label(metadata !7450), !dbg !7451
  call void @mutex_unlock(%struct.mutex* @gpd_list_lock) #11, !dbg !7452
  %32 = load i32, i32* %ret, align 4, !dbg !7453
  store i32 %32, i32* %retval, align 4, !dbg !7454
  br label %return, !dbg !7454

return:                                           ; preds = %unlock, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !7455
  ret i32 %33, !dbg !7455
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @genpd_present(%struct.generic_pm_domain* %genpd) #0 !dbg !7456 {
entry:
  %retval = alloca i1, align 1
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %gpd = alloca %struct.generic_pm_domain*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.generic_pm_domain*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp6 = alloca %struct.generic_pm_domain*, align 8
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !7459, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %gpd, metadata !7461, metadata !DIExpression()), !dbg !7462
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7463, metadata !DIExpression()), !dbg !7466
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @gpd_list, i32 0, i32 0), align 8, !dbg !7466
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !7466
  store i8* %1, i8** %__mptr, align 8, !dbg !7466
  br label %do.body, !dbg !7466

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7467

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7466
  %add.ptr = getelementptr i8, i8* %2, i64 -920, !dbg !7466
  %3 = bitcast i8* %add.ptr to %struct.generic_pm_domain*, !dbg !7466
  store %struct.generic_pm_domain* %3, %struct.generic_pm_domain** %tmp, align 8, !dbg !7467
  %4 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %tmp, align 8, !dbg !7466
  store %struct.generic_pm_domain* %4, %struct.generic_pm_domain** %gpd, align 8, !dbg !7469
  br label %for.cond, !dbg !7469

for.cond:                                         ; preds = %do.end5, %do.end
  %5 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %gpd, align 8, !dbg !7470
  %gpd_list_node = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %5, i32 0, i32 2, !dbg !7470
  %cmp = icmp eq %struct.list_head* %gpd_list_node, @gpd_list, !dbg !7470
  %lnot = xor i1 %cmp, true, !dbg !7470
  br i1 %lnot, label %for.body, label %for.end, !dbg !7469

for.body:                                         ; preds = %for.cond
  %6 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %gpd, align 8, !dbg !7472
  %7 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !7474
  %cmp1 = icmp eq %struct.generic_pm_domain* %6, %7, !dbg !7475
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7476

if.then:                                          ; preds = %for.body
  store i1 true, i1* %retval, align 1, !dbg !7477
  br label %return, !dbg !7477

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !7474

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !7478, metadata !DIExpression()), !dbg !7480
  %8 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %gpd, align 8, !dbg !7480
  %gpd_list_node3 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %8, i32 0, i32 2, !dbg !7480
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %gpd_list_node3, i32 0, i32 0, !dbg !7480
  %9 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7480
  %10 = bitcast %struct.list_head* %9 to i8*, !dbg !7480
  store i8* %10, i8** %__mptr2, align 8, !dbg !7480
  br label %do.body4, !dbg !7480

do.body4:                                         ; preds = %for.inc
  br label %do.end5, !dbg !7481

do.end5:                                          ; preds = %do.body4
  %11 = load i8*, i8** %__mptr2, align 8, !dbg !7480
  %add.ptr7 = getelementptr i8, i8* %11, i64 -920, !dbg !7480
  %12 = bitcast i8* %add.ptr7 to %struct.generic_pm_domain*, !dbg !7480
  store %struct.generic_pm_domain* %12, %struct.generic_pm_domain** %tmp6, align 8, !dbg !7481
  %13 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %tmp6, align 8, !dbg !7480
  store %struct.generic_pm_domain* %13, %struct.generic_pm_domain** %gpd, align 8, !dbg !7470
  br label %for.cond, !dbg !7470, !llvm.loop !7483

for.end:                                          ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !7485
  br label %return, !dbg !7485

return:                                           ; preds = %for.end, %if.then
  %14 = load i1, i1* %retval, align 1, !dbg !7486
  ret i1 %14, !dbg !7486
}

; Function Attrs: noredzone
declare dso_local i32 @dev_pm_opp_of_add_table(%struct.device*) #3

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local %struct.opp_table* @dev_pm_opp_get_opp_table(%struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !7487 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7488, metadata !DIExpression()), !dbg !7489
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !7490
  %1 = ptrtoint i8* %0 to i64, !dbg !7490
  %2 = inttoptr i64 %1 to i8*, !dbg !7490
  %3 = ptrtoint i8* %2 to i64, !dbg !7490
  %cmp = icmp uge i64 %3, -4095, !dbg !7490
  %lnot = xor i1 %cmp, true, !dbg !7490
  %lnot1 = xor i1 %lnot, true, !dbg !7490
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7490
  %conv = sext i32 %lnot.ext to i64, !dbg !7490
  %tobool = icmp ne i64 %conv, 0, !dbg !7490
  ret i1 %tobool, !dbg !7491
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_add_provider(%struct.device_node* %np, %struct.generic_pm_domain* (%struct.of_phandle_args*, i8*)* %xlate, i8* %data) #0 !dbg !7492 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %xlate.addr = alloca %struct.generic_pm_domain* (%struct.of_phandle_args*, i8*)*, align 8
  %data.addr = alloca i8*, align 8
  %cp = alloca %struct.of_genpd_provider*, align 8
  %tmp = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7495, metadata !DIExpression()), !dbg !7496
  store %struct.generic_pm_domain* (%struct.of_phandle_args*, i8*)* %xlate, %struct.generic_pm_domain* (%struct.of_phandle_args*, i8*)** %xlate.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain* (%struct.of_phandle_args*, i8*)** %xlate.addr, metadata !7497, metadata !DIExpression()), !dbg !7498
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7499, metadata !DIExpression()), !dbg !7500
  call void @llvm.dbg.declare(metadata %struct.of_genpd_provider** %cp, metadata !7501, metadata !DIExpression()), !dbg !7502
  %call = call i8* @kzalloc(i64 40, i32 3264) #11, !dbg !7503
  %0 = bitcast i8* %call to %struct.of_genpd_provider*, !dbg !7503
  store %struct.of_genpd_provider* %0, %struct.of_genpd_provider** %cp, align 8, !dbg !7504
  %1 = load %struct.of_genpd_provider*, %struct.of_genpd_provider** %cp, align 8, !dbg !7505
  %tobool = icmp ne %struct.of_genpd_provider* %1, null, !dbg !7505
  br i1 %tobool, label %if.end, label %if.then, !dbg !7507

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !7508
  br label %return, !dbg !7508

if.end:                                           ; preds = %entry
  %2 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7509
  %call1 = call %struct.device_node* @of_node_get(%struct.device_node* %2) #11, !dbg !7510
  %3 = load %struct.of_genpd_provider*, %struct.of_genpd_provider** %cp, align 8, !dbg !7511
  %node = getelementptr inbounds %struct.of_genpd_provider, %struct.of_genpd_provider* %3, i32 0, i32 1, !dbg !7512
  store %struct.device_node* %call1, %struct.device_node** %node, align 8, !dbg !7513
  %4 = load i8*, i8** %data.addr, align 8, !dbg !7514
  %5 = load %struct.of_genpd_provider*, %struct.of_genpd_provider** %cp, align 8, !dbg !7515
  %data2 = getelementptr inbounds %struct.of_genpd_provider, %struct.of_genpd_provider* %5, i32 0, i32 3, !dbg !7516
  store i8* %4, i8** %data2, align 8, !dbg !7517
  %6 = load %struct.generic_pm_domain* (%struct.of_phandle_args*, i8*)*, %struct.generic_pm_domain* (%struct.of_phandle_args*, i8*)** %xlate.addr, align 8, !dbg !7518
  %7 = load %struct.of_genpd_provider*, %struct.of_genpd_provider** %cp, align 8, !dbg !7519
  %xlate3 = getelementptr inbounds %struct.of_genpd_provider, %struct.of_genpd_provider* %7, i32 0, i32 2, !dbg !7520
  store %struct.generic_pm_domain* (%struct.of_phandle_args*, i8*)* %6, %struct.generic_pm_domain* (%struct.of_phandle_args*, i8*)** %xlate3, align 8, !dbg !7521
  call void @mutex_lock(%struct.mutex* @of_genpd_mutex) #11, !dbg !7522
  %8 = load %struct.of_genpd_provider*, %struct.of_genpd_provider** %cp, align 8, !dbg !7523
  %link = getelementptr inbounds %struct.of_genpd_provider, %struct.of_genpd_provider* %8, i32 0, i32 0, !dbg !7524
  call void @list_add(%struct.list_head* %link, %struct.list_head* @of_genpd_providers) #11, !dbg !7525
  call void @mutex_unlock(%struct.mutex* @of_genpd_mutex) #11, !dbg !7526
  store i32 0, i32* %tmp, align 4, !dbg !7527
  %9 = load i32, i32* %tmp, align 4, !dbg !7530
  store i32 0, i32* %retval, align 4, !dbg !7531
  br label %return, !dbg !7531

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !7532
  ret i32 %10, !dbg !7532
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.generic_pm_domain* @genpd_xlate_simple(%struct.of_phandle_args* %genpdspec, i8* %data) #0 !dbg !7533 {
entry:
  %genpdspec.addr = alloca %struct.of_phandle_args*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.of_phandle_args* %genpdspec, %struct.of_phandle_args** %genpdspec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args** %genpdspec.addr, metadata !7534, metadata !DIExpression()), !dbg !7535
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7536, metadata !DIExpression()), !dbg !7537
  %0 = load i8*, i8** %data.addr, align 8, !dbg !7538
  %1 = bitcast i8* %0 to %struct.generic_pm_domain*, !dbg !7538
  ret %struct.generic_pm_domain* %1, !dbg !7539
}

; Function Attrs: noredzone
declare dso_local void @dev_pm_opp_put_opp_table(%struct.opp_table*) #3

; Function Attrs: noredzone
declare dso_local void @dev_pm_opp_of_remove_table(%struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_genpd_add_provider_onecell(%struct.device_node* %np, %struct.genpd_onecell_data* %data) #0 !dbg !7540 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %data.addr = alloca %struct.genpd_onecell_data*, align 8
  %genpd = alloca %struct.generic_pm_domain*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7550, metadata !DIExpression()), !dbg !7551
  store %struct.genpd_onecell_data* %data, %struct.genpd_onecell_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.genpd_onecell_data** %data.addr, metadata !7552, metadata !DIExpression()), !dbg !7553
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd, metadata !7554, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7556, metadata !DIExpression()), !dbg !7557
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7558, metadata !DIExpression()), !dbg !7559
  store i32 -22, i32* %ret, align 4, !dbg !7559
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7560
  %tobool = icmp ne %struct.device_node* %0, null, !dbg !7560
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7562

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.genpd_onecell_data*, %struct.genpd_onecell_data** %data.addr, align 8, !dbg !7563
  %tobool1 = icmp ne %struct.genpd_onecell_data* %1, null, !dbg !7563
  br i1 %tobool1, label %if.end, label %if.then, !dbg !7564

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !7565
  br label %return, !dbg !7565

if.end:                                           ; preds = %lor.lhs.false
  call void @mutex_lock(%struct.mutex* @gpd_list_lock) #11, !dbg !7566
  %2 = load %struct.genpd_onecell_data*, %struct.genpd_onecell_data** %data.addr, align 8, !dbg !7567
  %xlate = getelementptr inbounds %struct.genpd_onecell_data, %struct.genpd_onecell_data* %2, i32 0, i32 2, !dbg !7569
  %3 = load %struct.generic_pm_domain* (%struct.of_phandle_args*, i8*)*, %struct.generic_pm_domain* (%struct.of_phandle_args*, i8*)** %xlate, align 8, !dbg !7569
  %tobool2 = icmp ne %struct.generic_pm_domain* (%struct.of_phandle_args*, i8*)* %3, null, !dbg !7567
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !7570

if.then3:                                         ; preds = %if.end
  %4 = load %struct.genpd_onecell_data*, %struct.genpd_onecell_data** %data.addr, align 8, !dbg !7571
  %xlate4 = getelementptr inbounds %struct.genpd_onecell_data, %struct.genpd_onecell_data* %4, i32 0, i32 2, !dbg !7572
  store %struct.generic_pm_domain* (%struct.of_phandle_args*, i8*)* @genpd_xlate_onecell, %struct.generic_pm_domain* (%struct.of_phandle_args*, i8*)** %xlate4, align 8, !dbg !7573
  br label %if.end5, !dbg !7571

if.end5:                                          ; preds = %if.then3, %if.end
  store i32 0, i32* %i, align 4, !dbg !7574
  br label %for.cond, !dbg !7576

for.cond:                                         ; preds = %for.inc, %if.end5
  %5 = load i32, i32* %i, align 4, !dbg !7577
  %6 = load %struct.genpd_onecell_data*, %struct.genpd_onecell_data** %data.addr, align 8, !dbg !7579
  %num_domains = getelementptr inbounds %struct.genpd_onecell_data, %struct.genpd_onecell_data* %6, i32 0, i32 1, !dbg !7580
  %7 = load i32, i32* %num_domains, align 8, !dbg !7580
  %cmp = icmp ult i32 %5, %7, !dbg !7581
  br i1 %cmp, label %for.body, label %for.end, !dbg !7582

for.body:                                         ; preds = %for.cond
  %8 = load %struct.genpd_onecell_data*, %struct.genpd_onecell_data** %data.addr, align 8, !dbg !7583
  %domains = getelementptr inbounds %struct.genpd_onecell_data, %struct.genpd_onecell_data* %8, i32 0, i32 0, !dbg !7585
  %9 = load %struct.generic_pm_domain**, %struct.generic_pm_domain*** %domains, align 8, !dbg !7585
  %10 = load i32, i32* %i, align 4, !dbg !7586
  %idxprom = zext i32 %10 to i64, !dbg !7583
  %arrayidx = getelementptr %struct.generic_pm_domain*, %struct.generic_pm_domain** %9, i64 %idxprom, !dbg !7583
  %11 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %arrayidx, align 8, !dbg !7583
  store %struct.generic_pm_domain* %11, %struct.generic_pm_domain** %genpd, align 8, !dbg !7587
  %12 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7588
  %tobool6 = icmp ne %struct.generic_pm_domain* %12, null, !dbg !7588
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !7590

if.then7:                                         ; preds = %for.body
  br label %for.inc, !dbg !7591

if.end8:                                          ; preds = %for.body
  %13 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7592
  %call = call zeroext i1 @genpd_present(%struct.generic_pm_domain* %13) #11, !dbg !7594
  br i1 %call, label %if.end10, label %if.then9, !dbg !7595

if.then9:                                         ; preds = %if.end8
  br label %error, !dbg !7596

if.end10:                                         ; preds = %if.end8
  %14 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7597
  %15 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7598
  %dev = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %15, i32 0, i32 0, !dbg !7599
  %of_node = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 23, !dbg !7600
  store %struct.device_node* %14, %struct.device_node** %of_node, align 8, !dbg !7601
  %16 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7602
  %set_performance_state = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %16, i32 0, i32 23, !dbg !7604
  %17 = load i32 (%struct.generic_pm_domain*, i32)*, i32 (%struct.generic_pm_domain*, i32)** %set_performance_state, align 8, !dbg !7604
  %tobool11 = icmp ne i32 (%struct.generic_pm_domain*, i32)* %17, null, !dbg !7602
  br i1 %tobool11, label %if.then12, label %if.end47, !dbg !7605

if.then12:                                        ; preds = %if.end10
  %18 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7606
  %dev13 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %18, i32 0, i32 0, !dbg !7608
  %19 = load i32, i32* %i, align 4, !dbg !7609
  %call14 = call i32 @dev_pm_opp_of_add_table_indexed(%struct.device* %dev13, i32 %19) #11, !dbg !7610
  store i32 %call14, i32* %ret, align 4, !dbg !7611
  %20 = load i32, i32* %ret, align 4, !dbg !7612
  %tobool15 = icmp ne i32 %20, 0, !dbg !7612
  br i1 %tobool15, label %if.then16, label %if.end21, !dbg !7614

if.then16:                                        ; preds = %if.then12
  %21 = load i32, i32* %ret, align 4, !dbg !7615
  %cmp17 = icmp ne i32 %21, -517, !dbg !7618
  br i1 %cmp17, label %if.then18, label %if.end20, !dbg !7619

if.then18:                                        ; preds = %if.then16
  %22 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7620
  %dev19 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %22, i32 0, i32 0, !dbg !7620
  %23 = load i32, i32* %i, align 4, !dbg !7620
  %24 = load i32, i32* %ret, align 4, !dbg !7620
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev19, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i32 %23, i32 %24) #12, !dbg !7620
  br label %if.end20, !dbg !7620

if.end20:                                         ; preds = %if.then18, %if.then16
  br label %error, !dbg !7621

if.end21:                                         ; preds = %if.then12
  %25 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7622
  %dev22 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %25, i32 0, i32 0, !dbg !7623
  %26 = load i32, i32* %i, align 4, !dbg !7624
  %call23 = call %struct.opp_table* @dev_pm_opp_get_opp_table_indexed(%struct.device* %dev22, i32 %26) #11, !dbg !7625
  %27 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7626
  %opp_table = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %27, i32 0, i32 21, !dbg !7627
  store %struct.opp_table* %call23, %struct.opp_table** %opp_table, align 8, !dbg !7628
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7629, metadata !DIExpression()), !dbg !7631
  %28 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7631
  %opp_table24 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %28, i32 0, i32 21, !dbg !7631
  %29 = load %struct.opp_table*, %struct.opp_table** %opp_table24, align 8, !dbg !7631
  %30 = bitcast %struct.opp_table* %29 to i8*, !dbg !7631
  %call25 = call zeroext i1 @IS_ERR(i8* %30) #11, !dbg !7631
  %lnot = xor i1 %call25, true, !dbg !7631
  %lnot26 = xor i1 %lnot, true, !dbg !7631
  %lnot.ext = zext i1 %lnot26 to i32, !dbg !7631
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7631
  %31 = load i32, i32* %__ret_warn_on, align 4, !dbg !7632
  %tobool27 = icmp ne i32 %31, 0, !dbg !7632
  %lnot28 = xor i1 %tobool27, true, !dbg !7632
  %lnot30 = xor i1 %lnot28, true, !dbg !7632
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !7632
  %conv = sext i32 %lnot.ext31 to i64, !dbg !7632
  %tobool32 = icmp ne i64 %conv, 0, !dbg !7632
  br i1 %tobool32, label %if.then33, label %if.end40, !dbg !7631

if.then33:                                        ; preds = %if.end21
  br label %do.body, !dbg !7632

do.body:                                          ; preds = %if.then33
  br label %do.body34, !dbg !7634

do.body34:                                        ; preds = %do.body
  br label %do.end, !dbg !7636

do.end:                                           ; preds = %do.body34
  br label %do.body35, !dbg !7634

do.body35:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 2253, i32 2305, i64 12) #7, !dbg !7638, !srcloc !7640
  br label %do.end36, !dbg !7638

do.end36:                                         ; preds = %do.body35
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 334) #7, !dbg !7641, !srcloc !7643
  br label %do.body37, !dbg !7634

do.body37:                                        ; preds = %do.end36
  br label %do.end38, !dbg !7644

do.end38:                                         ; preds = %do.body37
  br label %do.end39, !dbg !7634

do.end39:                                         ; preds = %do.end38
  br label %if.end40, !dbg !7634

if.end40:                                         ; preds = %do.end39, %if.end21
  %32 = load i32, i32* %__ret_warn_on, align 4, !dbg !7631
  %tobool41 = icmp ne i32 %32, 0, !dbg !7631
  %lnot42 = xor i1 %tobool41, true, !dbg !7631
  %lnot44 = xor i1 %lnot42, true, !dbg !7631
  %lnot.ext45 = zext i1 %lnot44 to i32, !dbg !7631
  %conv46 = sext i32 %lnot.ext45 to i64, !dbg !7631
  store i64 %conv46, i64* %tmp, align 8, !dbg !7632
  %33 = load i64, i64* %tmp, align 8, !dbg !7631
  br label %if.end47, !dbg !7646

if.end47:                                         ; preds = %if.end40, %if.end10
  %34 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7647
  %fwnode = getelementptr inbounds %struct.device_node, %struct.device_node* %34, i32 0, i32 3, !dbg !7648
  %35 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7649
  %provider = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %35, i32 0, i32 8, !dbg !7650
  store %struct.fwnode_handle* %fwnode, %struct.fwnode_handle** %provider, align 8, !dbg !7651
  %36 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7652
  %has_provider = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %36, i32 0, i32 9, !dbg !7653
  store i8 1, i8* %has_provider, align 8, !dbg !7654
  br label %for.inc, !dbg !7655

for.inc:                                          ; preds = %if.end47, %if.then7
  %37 = load i32, i32* %i, align 4, !dbg !7656
  %inc = add i32 %37, 1, !dbg !7656
  store i32 %inc, i32* %i, align 4, !dbg !7656
  br label %for.cond, !dbg !7657, !llvm.loop !7658

for.end:                                          ; preds = %for.cond
  %38 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7660
  %39 = load %struct.genpd_onecell_data*, %struct.genpd_onecell_data** %data.addr, align 8, !dbg !7661
  %xlate48 = getelementptr inbounds %struct.genpd_onecell_data, %struct.genpd_onecell_data* %39, i32 0, i32 2, !dbg !7662
  %40 = load %struct.generic_pm_domain* (%struct.of_phandle_args*, i8*)*, %struct.generic_pm_domain* (%struct.of_phandle_args*, i8*)** %xlate48, align 8, !dbg !7662
  %41 = load %struct.genpd_onecell_data*, %struct.genpd_onecell_data** %data.addr, align 8, !dbg !7663
  %42 = bitcast %struct.genpd_onecell_data* %41 to i8*, !dbg !7663
  %call49 = call i32 @genpd_add_provider(%struct.device_node* %38, %struct.generic_pm_domain* (%struct.of_phandle_args*, i8*)* %40, i8* %42) #11, !dbg !7664
  store i32 %call49, i32* %ret, align 4, !dbg !7665
  %43 = load i32, i32* %ret, align 4, !dbg !7666
  %cmp50 = icmp slt i32 %43, 0, !dbg !7668
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !7669

if.then52:                                        ; preds = %for.end
  br label %error, !dbg !7670

if.end53:                                         ; preds = %for.end
  call void @mutex_unlock(%struct.mutex* @gpd_list_lock) #11, !dbg !7671
  store i32 0, i32* %retval, align 4, !dbg !7672
  br label %return, !dbg !7672

error:                                            ; preds = %if.then52, %if.end20, %if.then9
  call void @llvm.dbg.label(metadata !7673), !dbg !7674
  br label %while.cond, !dbg !7675

while.cond:                                       ; preds = %if.end68, %if.then59, %error
  %44 = load i32, i32* %i, align 4, !dbg !7676
  %dec = add i32 %44, -1, !dbg !7676
  store i32 %dec, i32* %i, align 4, !dbg !7676
  %tobool54 = icmp ne i32 %44, 0, !dbg !7675
  br i1 %tobool54, label %while.body, label %while.end, !dbg !7675

while.body:                                       ; preds = %while.cond
  %45 = load %struct.genpd_onecell_data*, %struct.genpd_onecell_data** %data.addr, align 8, !dbg !7677
  %domains55 = getelementptr inbounds %struct.genpd_onecell_data, %struct.genpd_onecell_data* %45, i32 0, i32 0, !dbg !7679
  %46 = load %struct.generic_pm_domain**, %struct.generic_pm_domain*** %domains55, align 8, !dbg !7679
  %47 = load i32, i32* %i, align 4, !dbg !7680
  %idxprom56 = zext i32 %47 to i64, !dbg !7677
  %arrayidx57 = getelementptr %struct.generic_pm_domain*, %struct.generic_pm_domain** %46, i64 %idxprom56, !dbg !7677
  %48 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %arrayidx57, align 8, !dbg !7677
  store %struct.generic_pm_domain* %48, %struct.generic_pm_domain** %genpd, align 8, !dbg !7681
  %49 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7682
  %tobool58 = icmp ne %struct.generic_pm_domain* %49, null, !dbg !7682
  br i1 %tobool58, label %if.end60, label %if.then59, !dbg !7684

if.then59:                                        ; preds = %while.body
  br label %while.cond, !dbg !7685, !llvm.loop !7686

if.end60:                                         ; preds = %while.body
  %50 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7688
  %provider61 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %50, i32 0, i32 8, !dbg !7689
  store %struct.fwnode_handle* null, %struct.fwnode_handle** %provider61, align 8, !dbg !7690
  %51 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7691
  %has_provider62 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %51, i32 0, i32 9, !dbg !7692
  store i8 0, i8* %has_provider62, align 8, !dbg !7693
  %52 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7694
  %set_performance_state63 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %52, i32 0, i32 23, !dbg !7696
  %53 = load i32 (%struct.generic_pm_domain*, i32)*, i32 (%struct.generic_pm_domain*, i32)** %set_performance_state63, align 8, !dbg !7696
  %tobool64 = icmp ne i32 (%struct.generic_pm_domain*, i32)* %53, null, !dbg !7694
  br i1 %tobool64, label %if.then65, label %if.end68, !dbg !7697

if.then65:                                        ; preds = %if.end60
  %54 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7698
  %opp_table66 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %54, i32 0, i32 21, !dbg !7700
  %55 = load %struct.opp_table*, %struct.opp_table** %opp_table66, align 8, !dbg !7700
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %55) #11, !dbg !7701
  %56 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7702
  %dev67 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %56, i32 0, i32 0, !dbg !7703
  call void @dev_pm_opp_of_remove_table(%struct.device* %dev67) #11, !dbg !7704
  br label %if.end68, !dbg !7705

if.end68:                                         ; preds = %if.then65, %if.end60
  br label %while.cond, !dbg !7675, !llvm.loop !7686

while.end:                                        ; preds = %while.cond
  call void @mutex_unlock(%struct.mutex* @gpd_list_lock) #11, !dbg !7706
  %57 = load i32, i32* %ret, align 4, !dbg !7707
  store i32 %57, i32* %retval, align 4, !dbg !7708
  br label %return, !dbg !7708

return:                                           ; preds = %while.end, %if.end53, %if.then
  %58 = load i32, i32* %retval, align 4, !dbg !7709
  ret i32 %58, !dbg !7709
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.generic_pm_domain* @genpd_xlate_onecell(%struct.of_phandle_args* %genpdspec, i8* %data) #0 !dbg !7710 {
entry:
  %retval = alloca %struct.generic_pm_domain*, align 8
  %genpdspec.addr = alloca %struct.of_phandle_args*, align 8
  %data.addr = alloca i8*, align 8
  %genpd_data = alloca %struct.genpd_onecell_data*, align 8
  %idx = alloca i32, align 4
  store %struct.of_phandle_args* %genpdspec, %struct.of_phandle_args** %genpdspec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args** %genpdspec.addr, metadata !7711, metadata !DIExpression()), !dbg !7712
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7713, metadata !DIExpression()), !dbg !7714
  call void @llvm.dbg.declare(metadata %struct.genpd_onecell_data** %genpd_data, metadata !7715, metadata !DIExpression()), !dbg !7716
  %0 = load i8*, i8** %data.addr, align 8, !dbg !7717
  %1 = bitcast i8* %0 to %struct.genpd_onecell_data*, !dbg !7717
  store %struct.genpd_onecell_data* %1, %struct.genpd_onecell_data** %genpd_data, align 8, !dbg !7716
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !7718, metadata !DIExpression()), !dbg !7719
  %2 = load %struct.of_phandle_args*, %struct.of_phandle_args** %genpdspec.addr, align 8, !dbg !7720
  %args = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %2, i32 0, i32 2, !dbg !7721
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %args, i64 0, i64 0, !dbg !7720
  %3 = load i32, i32* %arrayidx, align 4, !dbg !7720
  store i32 %3, i32* %idx, align 4, !dbg !7719
  %4 = load %struct.of_phandle_args*, %struct.of_phandle_args** %genpdspec.addr, align 8, !dbg !7722
  %args_count = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %4, i32 0, i32 1, !dbg !7724
  %5 = load i32, i32* %args_count, align 8, !dbg !7724
  %cmp = icmp ne i32 %5, 1, !dbg !7725
  br i1 %cmp, label %if.then, label %if.end, !dbg !7726

if.then:                                          ; preds = %entry
  %call = call i8* @ERR_PTR(i64 -22) #11, !dbg !7727
  %6 = bitcast i8* %call to %struct.generic_pm_domain*, !dbg !7727
  store %struct.generic_pm_domain* %6, %struct.generic_pm_domain** %retval, align 8, !dbg !7728
  br label %return, !dbg !7728

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %idx, align 4, !dbg !7729
  %8 = load %struct.genpd_onecell_data*, %struct.genpd_onecell_data** %genpd_data, align 8, !dbg !7731
  %num_domains = getelementptr inbounds %struct.genpd_onecell_data, %struct.genpd_onecell_data* %8, i32 0, i32 1, !dbg !7732
  %9 = load i32, i32* %num_domains, align 8, !dbg !7732
  %cmp1 = icmp uge i32 %7, %9, !dbg !7733
  br i1 %cmp1, label %if.then2, label %if.end5, !dbg !7734

if.then2:                                         ; preds = %if.end
  %10 = load i32, i32* %idx, align 4, !dbg !7735
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.genpd_xlate_onecell, i64 0, i64 0), i32 %10) #12, !dbg !7735
  %call4 = call i8* @ERR_PTR(i64 -22) #11, !dbg !7737
  %11 = bitcast i8* %call4 to %struct.generic_pm_domain*, !dbg !7737
  store %struct.generic_pm_domain* %11, %struct.generic_pm_domain** %retval, align 8, !dbg !7738
  br label %return, !dbg !7738

if.end5:                                          ; preds = %if.end
  %12 = load %struct.genpd_onecell_data*, %struct.genpd_onecell_data** %genpd_data, align 8, !dbg !7739
  %domains = getelementptr inbounds %struct.genpd_onecell_data, %struct.genpd_onecell_data* %12, i32 0, i32 0, !dbg !7741
  %13 = load %struct.generic_pm_domain**, %struct.generic_pm_domain*** %domains, align 8, !dbg !7741
  %14 = load i32, i32* %idx, align 4, !dbg !7742
  %idxprom = zext i32 %14 to i64, !dbg !7739
  %arrayidx6 = getelementptr %struct.generic_pm_domain*, %struct.generic_pm_domain** %13, i64 %idxprom, !dbg !7739
  %15 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %arrayidx6, align 8, !dbg !7739
  %tobool = icmp ne %struct.generic_pm_domain* %15, null, !dbg !7739
  br i1 %tobool, label %if.end9, label %if.then7, !dbg !7743

if.then7:                                         ; preds = %if.end5
  %call8 = call i8* @ERR_PTR(i64 -2) #11, !dbg !7744
  %16 = bitcast i8* %call8 to %struct.generic_pm_domain*, !dbg !7744
  store %struct.generic_pm_domain* %16, %struct.generic_pm_domain** %retval, align 8, !dbg !7745
  br label %return, !dbg !7745

if.end9:                                          ; preds = %if.end5
  %17 = load %struct.genpd_onecell_data*, %struct.genpd_onecell_data** %genpd_data, align 8, !dbg !7746
  %domains10 = getelementptr inbounds %struct.genpd_onecell_data, %struct.genpd_onecell_data* %17, i32 0, i32 0, !dbg !7747
  %18 = load %struct.generic_pm_domain**, %struct.generic_pm_domain*** %domains10, align 8, !dbg !7747
  %19 = load i32, i32* %idx, align 4, !dbg !7748
  %idxprom11 = zext i32 %19 to i64, !dbg !7746
  %arrayidx12 = getelementptr %struct.generic_pm_domain*, %struct.generic_pm_domain** %18, i64 %idxprom11, !dbg !7746
  %20 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %arrayidx12, align 8, !dbg !7746
  store %struct.generic_pm_domain* %20, %struct.generic_pm_domain** %retval, align 8, !dbg !7749
  br label %return, !dbg !7749

return:                                           ; preds = %if.end9, %if.then7, %if.then2, %if.then
  %21 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %retval, align 8, !dbg !7750
  ret %struct.generic_pm_domain* %21, !dbg !7750
}

; Function Attrs: noredzone
declare dso_local i32 @dev_pm_opp_of_add_table_indexed(%struct.device*, i32) #3

; Function Attrs: noredzone
declare dso_local %struct.opp_table* @dev_pm_opp_get_opp_table_indexed(%struct.device*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @of_genpd_del_provider(%struct.device_node* %np) #0 !dbg !7751 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %cp = alloca %struct.of_genpd_provider*, align 8
  %tmp = alloca %struct.of_genpd_provider*, align 8
  %gpd = alloca %struct.generic_pm_domain*, align 8
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.of_genpd_provider*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp5 = alloca %struct.of_genpd_provider*, align 8
  %__mptr9 = alloca i8*, align 8
  %tmp12 = alloca %struct.generic_pm_domain*, align 8
  %__mptr22 = alloca i8*, align 8
  %tmp27 = alloca %struct.generic_pm_domain*, align 8
  %__mptr33 = alloca i8*, align 8
  %tmp38 = alloca %struct.of_genpd_provider*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7754, metadata !DIExpression()), !dbg !7755
  call void @llvm.dbg.declare(metadata %struct.of_genpd_provider** %cp, metadata !7756, metadata !DIExpression()), !dbg !7757
  call void @llvm.dbg.declare(metadata %struct.of_genpd_provider** %tmp, metadata !7758, metadata !DIExpression()), !dbg !7759
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %gpd, metadata !7760, metadata !DIExpression()), !dbg !7761
  call void @mutex_lock(%struct.mutex* @gpd_list_lock) #11, !dbg !7762
  call void @mutex_lock(%struct.mutex* @of_genpd_mutex) #11, !dbg !7763
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7764, metadata !DIExpression()), !dbg !7767
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @of_genpd_providers, i32 0, i32 0), align 8, !dbg !7767
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !7767
  store i8* %1, i8** %__mptr, align 8, !dbg !7767
  br label %do.body, !dbg !7767

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7768

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7767
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !7767
  %3 = bitcast i8* %add.ptr to %struct.of_genpd_provider*, !dbg !7767
  store %struct.of_genpd_provider* %3, %struct.of_genpd_provider** %tmp1, align 8, !dbg !7768
  %4 = load %struct.of_genpd_provider*, %struct.of_genpd_provider** %tmp1, align 8, !dbg !7767
  store %struct.of_genpd_provider* %4, %struct.of_genpd_provider** %cp, align 8, !dbg !7770
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !7771, metadata !DIExpression()), !dbg !7773
  %5 = load %struct.of_genpd_provider*, %struct.of_genpd_provider** %cp, align 8, !dbg !7773
  %link = getelementptr inbounds %struct.of_genpd_provider, %struct.of_genpd_provider* %5, i32 0, i32 0, !dbg !7773
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %link, i32 0, i32 0, !dbg !7773
  %6 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7773
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !7773
  store i8* %7, i8** %__mptr2, align 8, !dbg !7773
  br label %do.body3, !dbg !7773

do.body3:                                         ; preds = %do.end
  br label %do.end4, !dbg !7774

do.end4:                                          ; preds = %do.body3
  %8 = load i8*, i8** %__mptr2, align 8, !dbg !7773
  %add.ptr6 = getelementptr i8, i8* %8, i64 0, !dbg !7773
  %9 = bitcast i8* %add.ptr6 to %struct.of_genpd_provider*, !dbg !7773
  store %struct.of_genpd_provider* %9, %struct.of_genpd_provider** %tmp5, align 8, !dbg !7774
  %10 = load %struct.of_genpd_provider*, %struct.of_genpd_provider** %tmp5, align 8, !dbg !7773
  store %struct.of_genpd_provider* %10, %struct.of_genpd_provider** %tmp, align 8, !dbg !7770
  br label %for.cond, !dbg !7770

for.cond:                                         ; preds = %do.end37, %do.end4
  %11 = load %struct.of_genpd_provider*, %struct.of_genpd_provider** %cp, align 8, !dbg !7776
  %link7 = getelementptr inbounds %struct.of_genpd_provider, %struct.of_genpd_provider* %11, i32 0, i32 0, !dbg !7776
  %cmp = icmp eq %struct.list_head* %link7, @of_genpd_providers, !dbg !7776
  %lnot = xor i1 %cmp, true, !dbg !7776
  br i1 %lnot, label %for.body, label %for.end40, !dbg !7770

for.body:                                         ; preds = %for.cond
  %12 = load %struct.of_genpd_provider*, %struct.of_genpd_provider** %cp, align 8, !dbg !7778
  %node = getelementptr inbounds %struct.of_genpd_provider, %struct.of_genpd_provider* %12, i32 0, i32 1, !dbg !7781
  %13 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !7781
  %14 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7782
  %cmp8 = icmp eq %struct.device_node* %13, %14, !dbg !7783
  br i1 %cmp8, label %if.then, label %if.end31, !dbg !7784

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr9, metadata !7785, metadata !DIExpression()), !dbg !7789
  %15 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @gpd_list, i32 0, i32 0), align 8, !dbg !7789
  %16 = bitcast %struct.list_head* %15 to i8*, !dbg !7789
  store i8* %16, i8** %__mptr9, align 8, !dbg !7789
  br label %do.body10, !dbg !7789

do.body10:                                        ; preds = %if.then
  br label %do.end11, !dbg !7790

do.end11:                                         ; preds = %do.body10
  %17 = load i8*, i8** %__mptr9, align 8, !dbg !7789
  %add.ptr13 = getelementptr i8, i8* %17, i64 -920, !dbg !7789
  %18 = bitcast i8* %add.ptr13 to %struct.generic_pm_domain*, !dbg !7789
  store %struct.generic_pm_domain* %18, %struct.generic_pm_domain** %tmp12, align 8, !dbg !7790
  %19 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %tmp12, align 8, !dbg !7789
  store %struct.generic_pm_domain* %19, %struct.generic_pm_domain** %gpd, align 8, !dbg !7792
  br label %for.cond14, !dbg !7792

for.cond14:                                       ; preds = %do.end26, %do.end11
  %20 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %gpd, align 8, !dbg !7793
  %gpd_list_node = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %20, i32 0, i32 2, !dbg !7793
  %cmp15 = icmp eq %struct.list_head* %gpd_list_node, @gpd_list, !dbg !7793
  %lnot16 = xor i1 %cmp15, true, !dbg !7793
  br i1 %lnot16, label %for.body17, label %for.end, !dbg !7792

for.body17:                                       ; preds = %for.cond14
  %21 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %gpd, align 8, !dbg !7795
  %provider = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %21, i32 0, i32 8, !dbg !7798
  %22 = load %struct.fwnode_handle*, %struct.fwnode_handle** %provider, align 8, !dbg !7798
  %23 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7799
  %fwnode = getelementptr inbounds %struct.device_node, %struct.device_node* %23, i32 0, i32 3, !dbg !7800
  %cmp18 = icmp eq %struct.fwnode_handle* %22, %fwnode, !dbg !7801
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !7802

if.then19:                                        ; preds = %for.body17
  %24 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %gpd, align 8, !dbg !7803
  %has_provider = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %24, i32 0, i32 9, !dbg !7805
  store i8 0, i8* %has_provider, align 8, !dbg !7806
  %25 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %gpd, align 8, !dbg !7807
  %set_performance_state = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %25, i32 0, i32 23, !dbg !7809
  %26 = load i32 (%struct.generic_pm_domain*, i32)*, i32 (%struct.generic_pm_domain*, i32)** %set_performance_state, align 8, !dbg !7809
  %tobool = icmp ne i32 (%struct.generic_pm_domain*, i32)* %26, null, !dbg !7807
  br i1 %tobool, label %if.end, label %if.then20, !dbg !7810

if.then20:                                        ; preds = %if.then19
  br label %for.inc, !dbg !7811

if.end:                                           ; preds = %if.then19
  %27 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %gpd, align 8, !dbg !7812
  %opp_table = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %27, i32 0, i32 21, !dbg !7813
  %28 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7813
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %28) #11, !dbg !7814
  %29 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %gpd, align 8, !dbg !7815
  %dev = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %29, i32 0, i32 0, !dbg !7816
  call void @dev_pm_opp_of_remove_table(%struct.device* %dev) #11, !dbg !7817
  br label %if.end21, !dbg !7818

if.end21:                                         ; preds = %if.end, %for.body17
  br label %for.inc, !dbg !7819

for.inc:                                          ; preds = %if.end21, %if.then20
  call void @llvm.dbg.declare(metadata i8** %__mptr22, metadata !7820, metadata !DIExpression()), !dbg !7822
  %30 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %gpd, align 8, !dbg !7822
  %gpd_list_node23 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %30, i32 0, i32 2, !dbg !7822
  %next24 = getelementptr inbounds %struct.list_head, %struct.list_head* %gpd_list_node23, i32 0, i32 0, !dbg !7822
  %31 = load %struct.list_head*, %struct.list_head** %next24, align 8, !dbg !7822
  %32 = bitcast %struct.list_head* %31 to i8*, !dbg !7822
  store i8* %32, i8** %__mptr22, align 8, !dbg !7822
  br label %do.body25, !dbg !7822

do.body25:                                        ; preds = %for.inc
  br label %do.end26, !dbg !7823

do.end26:                                         ; preds = %do.body25
  %33 = load i8*, i8** %__mptr22, align 8, !dbg !7822
  %add.ptr28 = getelementptr i8, i8* %33, i64 -920, !dbg !7822
  %34 = bitcast i8* %add.ptr28 to %struct.generic_pm_domain*, !dbg !7822
  store %struct.generic_pm_domain* %34, %struct.generic_pm_domain** %tmp27, align 8, !dbg !7823
  %35 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %tmp27, align 8, !dbg !7822
  store %struct.generic_pm_domain* %35, %struct.generic_pm_domain** %gpd, align 8, !dbg !7793
  br label %for.cond14, !dbg !7793, !llvm.loop !7825

for.end:                                          ; preds = %for.cond14
  %36 = load %struct.of_genpd_provider*, %struct.of_genpd_provider** %cp, align 8, !dbg !7827
  %link29 = getelementptr inbounds %struct.of_genpd_provider, %struct.of_genpd_provider* %36, i32 0, i32 0, !dbg !7828
  call void @list_del(%struct.list_head* %link29) #11, !dbg !7829
  %37 = load %struct.of_genpd_provider*, %struct.of_genpd_provider** %cp, align 8, !dbg !7830
  %node30 = getelementptr inbounds %struct.of_genpd_provider, %struct.of_genpd_provider* %37, i32 0, i32 1, !dbg !7831
  %38 = load %struct.device_node*, %struct.device_node** %node30, align 8, !dbg !7831
  call void @of_node_put(%struct.device_node* %38) #11, !dbg !7832
  %39 = load %struct.of_genpd_provider*, %struct.of_genpd_provider** %cp, align 8, !dbg !7833
  %40 = bitcast %struct.of_genpd_provider* %39 to i8*, !dbg !7833
  call void @kfree(i8* %40) #11, !dbg !7834
  br label %for.end40, !dbg !7835

if.end31:                                         ; preds = %for.body
  br label %for.inc32, !dbg !7836

for.inc32:                                        ; preds = %if.end31
  %41 = load %struct.of_genpd_provider*, %struct.of_genpd_provider** %tmp, align 8, !dbg !7776
  store %struct.of_genpd_provider* %41, %struct.of_genpd_provider** %cp, align 8, !dbg !7776
  call void @llvm.dbg.declare(metadata i8** %__mptr33, metadata !7837, metadata !DIExpression()), !dbg !7839
  %42 = load %struct.of_genpd_provider*, %struct.of_genpd_provider** %tmp, align 8, !dbg !7839
  %link34 = getelementptr inbounds %struct.of_genpd_provider, %struct.of_genpd_provider* %42, i32 0, i32 0, !dbg !7839
  %next35 = getelementptr inbounds %struct.list_head, %struct.list_head* %link34, i32 0, i32 0, !dbg !7839
  %43 = load %struct.list_head*, %struct.list_head** %next35, align 8, !dbg !7839
  %44 = bitcast %struct.list_head* %43 to i8*, !dbg !7839
  store i8* %44, i8** %__mptr33, align 8, !dbg !7839
  br label %do.body36, !dbg !7839

do.body36:                                        ; preds = %for.inc32
  br label %do.end37, !dbg !7840

do.end37:                                         ; preds = %do.body36
  %45 = load i8*, i8** %__mptr33, align 8, !dbg !7839
  %add.ptr39 = getelementptr i8, i8* %45, i64 0, !dbg !7839
  %46 = bitcast i8* %add.ptr39 to %struct.of_genpd_provider*, !dbg !7839
  store %struct.of_genpd_provider* %46, %struct.of_genpd_provider** %tmp38, align 8, !dbg !7840
  %47 = load %struct.of_genpd_provider*, %struct.of_genpd_provider** %tmp38, align 8, !dbg !7839
  store %struct.of_genpd_provider* %47, %struct.of_genpd_provider** %tmp, align 8, !dbg !7776
  br label %for.cond, !dbg !7776, !llvm.loop !7842

for.end40:                                        ; preds = %for.end, %for.cond
  call void @mutex_unlock(%struct.mutex* @of_genpd_mutex) #11, !dbg !7844
  call void @mutex_unlock(%struct.mutex* @gpd_list_lock) #11, !dbg !7845
  ret void, !dbg !7846
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @of_node_put(%struct.device_node* %node) #0 !dbg !7847 {
entry:
  %node.addr = alloca %struct.device_node*, align 8
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !7848, metadata !DIExpression()), !dbg !7849
  ret void, !dbg !7850
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_genpd_add_device(%struct.of_phandle_args* %genpdspec, %struct.device* %dev) #0 !dbg !7851 {
entry:
  %genpdspec.addr = alloca %struct.of_phandle_args*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %genpd = alloca %struct.generic_pm_domain*, align 8
  %ret = alloca i32, align 4
  store %struct.of_phandle_args* %genpdspec, %struct.of_phandle_args** %genpdspec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args** %genpdspec.addr, metadata !7854, metadata !DIExpression()), !dbg !7855
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7856, metadata !DIExpression()), !dbg !7857
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd, metadata !7858, metadata !DIExpression()), !dbg !7859
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7860, metadata !DIExpression()), !dbg !7861
  call void @mutex_lock(%struct.mutex* @gpd_list_lock) #11, !dbg !7862
  %0 = load %struct.of_phandle_args*, %struct.of_phandle_args** %genpdspec.addr, align 8, !dbg !7863
  %call = call %struct.generic_pm_domain* @genpd_get_from_provider(%struct.of_phandle_args* %0) #11, !dbg !7864
  store %struct.generic_pm_domain* %call, %struct.generic_pm_domain** %genpd, align 8, !dbg !7865
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7866
  %2 = bitcast %struct.generic_pm_domain* %1 to i8*, !dbg !7866
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #11, !dbg !7868
  br i1 %call1, label %if.then, label %if.end, !dbg !7869

if.then:                                          ; preds = %entry
  %3 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7870
  %4 = bitcast %struct.generic_pm_domain* %3 to i8*, !dbg !7870
  %call2 = call i64 @PTR_ERR(i8* %4) #11, !dbg !7872
  %conv = trunc i64 %call2 to i32, !dbg !7872
  store i32 %conv, i32* %ret, align 4, !dbg !7873
  br label %out, !dbg !7874

if.end:                                           ; preds = %entry
  %5 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7875
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7876
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7877
  %call3 = call i32 @genpd_add_device(%struct.generic_pm_domain* %5, %struct.device* %6, %struct.device* %7) #11, !dbg !7878
  store i32 %call3, i32* %ret, align 4, !dbg !7879
  br label %out, !dbg !7880

out:                                              ; preds = %if.end, %if.then
  call void @llvm.dbg.label(metadata !7881), !dbg !7882
  call void @mutex_unlock(%struct.mutex* @gpd_list_lock) #11, !dbg !7883
  %8 = load i32, i32* %ret, align 4, !dbg !7884
  ret i32 %8, !dbg !7885
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.generic_pm_domain* @genpd_get_from_provider(%struct.of_phandle_args* %genpdspec) #0 !dbg !7886 {
entry:
  %retval = alloca %struct.generic_pm_domain*, align 8
  %genpdspec.addr = alloca %struct.of_phandle_args*, align 8
  %genpd = alloca %struct.generic_pm_domain*, align 8
  %provider = alloca %struct.of_genpd_provider*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.of_genpd_provider*, align 8
  %__mptr9 = alloca i8*, align 8
  %tmp13 = alloca %struct.of_genpd_provider*, align 8
  store %struct.of_phandle_args* %genpdspec, %struct.of_phandle_args** %genpdspec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args** %genpdspec.addr, metadata !7889, metadata !DIExpression()), !dbg !7890
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd, metadata !7891, metadata !DIExpression()), !dbg !7892
  %call = call i8* @ERR_PTR(i64 -2) #11, !dbg !7893
  %0 = bitcast i8* %call to %struct.generic_pm_domain*, !dbg !7893
  store %struct.generic_pm_domain* %0, %struct.generic_pm_domain** %genpd, align 8, !dbg !7892
  call void @llvm.dbg.declare(metadata %struct.of_genpd_provider** %provider, metadata !7894, metadata !DIExpression()), !dbg !7895
  %1 = load %struct.of_phandle_args*, %struct.of_phandle_args** %genpdspec.addr, align 8, !dbg !7896
  %tobool = icmp ne %struct.of_phandle_args* %1, null, !dbg !7896
  br i1 %tobool, label %if.end, label %if.then, !dbg !7898

if.then:                                          ; preds = %entry
  %call1 = call i8* @ERR_PTR(i64 -22) #11, !dbg !7899
  %2 = bitcast i8* %call1 to %struct.generic_pm_domain*, !dbg !7899
  store %struct.generic_pm_domain* %2, %struct.generic_pm_domain** %retval, align 8, !dbg !7900
  br label %return, !dbg !7900

if.end:                                           ; preds = %entry
  call void @mutex_lock(%struct.mutex* @of_genpd_mutex) #11, !dbg !7901
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7902, metadata !DIExpression()), !dbg !7905
  %3 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @of_genpd_providers, i32 0, i32 0), align 8, !dbg !7905
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !7905
  store i8* %4, i8** %__mptr, align 8, !dbg !7905
  br label %do.body, !dbg !7905

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !7906

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !7905
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !7905
  %6 = bitcast i8* %add.ptr to %struct.of_genpd_provider*, !dbg !7905
  store %struct.of_genpd_provider* %6, %struct.of_genpd_provider** %tmp, align 8, !dbg !7906
  %7 = load %struct.of_genpd_provider*, %struct.of_genpd_provider** %tmp, align 8, !dbg !7905
  store %struct.of_genpd_provider* %7, %struct.of_genpd_provider** %provider, align 8, !dbg !7908
  br label %for.cond, !dbg !7908

for.cond:                                         ; preds = %do.end12, %do.end
  %8 = load %struct.of_genpd_provider*, %struct.of_genpd_provider** %provider, align 8, !dbg !7909
  %link = getelementptr inbounds %struct.of_genpd_provider, %struct.of_genpd_provider* %8, i32 0, i32 0, !dbg !7909
  %cmp = icmp eq %struct.list_head* %link, @of_genpd_providers, !dbg !7909
  %lnot = xor i1 %cmp, true, !dbg !7909
  br i1 %lnot, label %for.body, label %for.end, !dbg !7908

for.body:                                         ; preds = %for.cond
  %9 = load %struct.of_genpd_provider*, %struct.of_genpd_provider** %provider, align 8, !dbg !7911
  %node = getelementptr inbounds %struct.of_genpd_provider, %struct.of_genpd_provider* %9, i32 0, i32 1, !dbg !7914
  %10 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !7914
  %11 = load %struct.of_phandle_args*, %struct.of_phandle_args** %genpdspec.addr, align 8, !dbg !7915
  %np = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %11, i32 0, i32 0, !dbg !7916
  %12 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !7916
  %cmp2 = icmp eq %struct.device_node* %10, %12, !dbg !7917
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !7918

if.then3:                                         ; preds = %for.body
  %13 = load %struct.of_genpd_provider*, %struct.of_genpd_provider** %provider, align 8, !dbg !7919
  %xlate = getelementptr inbounds %struct.of_genpd_provider, %struct.of_genpd_provider* %13, i32 0, i32 2, !dbg !7920
  %14 = load %struct.generic_pm_domain* (%struct.of_phandle_args*, i8*)*, %struct.generic_pm_domain* (%struct.of_phandle_args*, i8*)** %xlate, align 8, !dbg !7920
  %15 = load %struct.of_phandle_args*, %struct.of_phandle_args** %genpdspec.addr, align 8, !dbg !7921
  %16 = load %struct.of_genpd_provider*, %struct.of_genpd_provider** %provider, align 8, !dbg !7922
  %data = getelementptr inbounds %struct.of_genpd_provider, %struct.of_genpd_provider* %16, i32 0, i32 3, !dbg !7923
  %17 = load i8*, i8** %data, align 8, !dbg !7923
  %call4 = call %struct.generic_pm_domain* %14(%struct.of_phandle_args* %15, i8* %17) #11, !dbg !7919
  store %struct.generic_pm_domain* %call4, %struct.generic_pm_domain** %genpd, align 8, !dbg !7924
  br label %if.end5, !dbg !7925

if.end5:                                          ; preds = %if.then3, %for.body
  %18 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7926
  %19 = bitcast %struct.generic_pm_domain* %18 to i8*, !dbg !7926
  %call6 = call zeroext i1 @IS_ERR(i8* %19) #11, !dbg !7928
  br i1 %call6, label %if.end8, label %if.then7, !dbg !7929

if.then7:                                         ; preds = %if.end5
  br label %for.end, !dbg !7930

if.end8:                                          ; preds = %if.end5
  br label %for.inc, !dbg !7931

for.inc:                                          ; preds = %if.end8
  call void @llvm.dbg.declare(metadata i8** %__mptr9, metadata !7932, metadata !DIExpression()), !dbg !7934
  %20 = load %struct.of_genpd_provider*, %struct.of_genpd_provider** %provider, align 8, !dbg !7934
  %link10 = getelementptr inbounds %struct.of_genpd_provider, %struct.of_genpd_provider* %20, i32 0, i32 0, !dbg !7934
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %link10, i32 0, i32 0, !dbg !7934
  %21 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7934
  %22 = bitcast %struct.list_head* %21 to i8*, !dbg !7934
  store i8* %22, i8** %__mptr9, align 8, !dbg !7934
  br label %do.body11, !dbg !7934

do.body11:                                        ; preds = %for.inc
  br label %do.end12, !dbg !7935

do.end12:                                         ; preds = %do.body11
  %23 = load i8*, i8** %__mptr9, align 8, !dbg !7934
  %add.ptr14 = getelementptr i8, i8* %23, i64 0, !dbg !7934
  %24 = bitcast i8* %add.ptr14 to %struct.of_genpd_provider*, !dbg !7934
  store %struct.of_genpd_provider* %24, %struct.of_genpd_provider** %tmp13, align 8, !dbg !7935
  %25 = load %struct.of_genpd_provider*, %struct.of_genpd_provider** %tmp13, align 8, !dbg !7934
  store %struct.of_genpd_provider* %25, %struct.of_genpd_provider** %provider, align 8, !dbg !7909
  br label %for.cond, !dbg !7909, !llvm.loop !7937

for.end:                                          ; preds = %if.then7, %for.cond
  call void @mutex_unlock(%struct.mutex* @of_genpd_mutex) #11, !dbg !7939
  %26 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !7940
  store %struct.generic_pm_domain* %26, %struct.generic_pm_domain** %retval, align 8, !dbg !7941
  br label %return, !dbg !7941

return:                                           ; preds = %for.end, %if.then
  %27 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %retval, align 8, !dbg !7942
  ret %struct.generic_pm_domain* %27, !dbg !7942
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !7943 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7946, metadata !DIExpression()), !dbg !7947
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !7948
  %1 = ptrtoint i8* %0 to i64, !dbg !7949
  ret i64 %1, !dbg !7950
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_genpd_add_subdomain(%struct.of_phandle_args* %parent_spec, %struct.of_phandle_args* %subdomain_spec) #0 !dbg !7951 {
entry:
  %parent_spec.addr = alloca %struct.of_phandle_args*, align 8
  %subdomain_spec.addr = alloca %struct.of_phandle_args*, align 8
  %parent = alloca %struct.generic_pm_domain*, align 8
  %subdomain = alloca %struct.generic_pm_domain*, align 8
  %ret = alloca i32, align 4
  store %struct.of_phandle_args* %parent_spec, %struct.of_phandle_args** %parent_spec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args** %parent_spec.addr, metadata !7954, metadata !DIExpression()), !dbg !7955
  store %struct.of_phandle_args* %subdomain_spec, %struct.of_phandle_args** %subdomain_spec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args** %subdomain_spec.addr, metadata !7956, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %parent, metadata !7958, metadata !DIExpression()), !dbg !7959
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %subdomain, metadata !7960, metadata !DIExpression()), !dbg !7961
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7962, metadata !DIExpression()), !dbg !7963
  call void @mutex_lock(%struct.mutex* @gpd_list_lock) #11, !dbg !7964
  %0 = load %struct.of_phandle_args*, %struct.of_phandle_args** %parent_spec.addr, align 8, !dbg !7965
  %call = call %struct.generic_pm_domain* @genpd_get_from_provider(%struct.of_phandle_args* %0) #11, !dbg !7966
  store %struct.generic_pm_domain* %call, %struct.generic_pm_domain** %parent, align 8, !dbg !7967
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !7968
  %2 = bitcast %struct.generic_pm_domain* %1 to i8*, !dbg !7968
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #11, !dbg !7970
  br i1 %call1, label %if.then, label %if.end, !dbg !7971

if.then:                                          ; preds = %entry
  %3 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !7972
  %4 = bitcast %struct.generic_pm_domain* %3 to i8*, !dbg !7972
  %call2 = call i64 @PTR_ERR(i8* %4) #11, !dbg !7974
  %conv = trunc i64 %call2 to i32, !dbg !7974
  store i32 %conv, i32* %ret, align 4, !dbg !7975
  br label %out, !dbg !7976

if.end:                                           ; preds = %entry
  %5 = load %struct.of_phandle_args*, %struct.of_phandle_args** %subdomain_spec.addr, align 8, !dbg !7977
  %call3 = call %struct.generic_pm_domain* @genpd_get_from_provider(%struct.of_phandle_args* %5) #11, !dbg !7978
  store %struct.generic_pm_domain* %call3, %struct.generic_pm_domain** %subdomain, align 8, !dbg !7979
  %6 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain, align 8, !dbg !7980
  %7 = bitcast %struct.generic_pm_domain* %6 to i8*, !dbg !7980
  %call4 = call zeroext i1 @IS_ERR(i8* %7) #11, !dbg !7982
  br i1 %call4, label %if.then5, label %if.end8, !dbg !7983

if.then5:                                         ; preds = %if.end
  %8 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain, align 8, !dbg !7984
  %9 = bitcast %struct.generic_pm_domain* %8 to i8*, !dbg !7984
  %call6 = call i64 @PTR_ERR(i8* %9) #11, !dbg !7986
  %conv7 = trunc i64 %call6 to i32, !dbg !7986
  store i32 %conv7, i32* %ret, align 4, !dbg !7987
  br label %out, !dbg !7988

if.end8:                                          ; preds = %if.end
  %10 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !7989
  %11 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain, align 8, !dbg !7990
  %call9 = call i32 @genpd_add_subdomain(%struct.generic_pm_domain* %10, %struct.generic_pm_domain* %11) #11, !dbg !7991
  store i32 %call9, i32* %ret, align 4, !dbg !7992
  br label %out, !dbg !7993

out:                                              ; preds = %if.end8, %if.then5, %if.then
  call void @llvm.dbg.label(metadata !7994), !dbg !7995
  call void @mutex_unlock(%struct.mutex* @gpd_list_lock) #11, !dbg !7996
  %12 = load i32, i32* %ret, align 4, !dbg !7997
  ret i32 %12, !dbg !7998
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_genpd_remove_subdomain(%struct.of_phandle_args* %parent_spec, %struct.of_phandle_args* %subdomain_spec) #0 !dbg !7999 {
entry:
  %parent_spec.addr = alloca %struct.of_phandle_args*, align 8
  %subdomain_spec.addr = alloca %struct.of_phandle_args*, align 8
  %parent = alloca %struct.generic_pm_domain*, align 8
  %subdomain = alloca %struct.generic_pm_domain*, align 8
  %ret = alloca i32, align 4
  store %struct.of_phandle_args* %parent_spec, %struct.of_phandle_args** %parent_spec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args** %parent_spec.addr, metadata !8000, metadata !DIExpression()), !dbg !8001
  store %struct.of_phandle_args* %subdomain_spec, %struct.of_phandle_args** %subdomain_spec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args** %subdomain_spec.addr, metadata !8002, metadata !DIExpression()), !dbg !8003
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %parent, metadata !8004, metadata !DIExpression()), !dbg !8005
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %subdomain, metadata !8006, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8008, metadata !DIExpression()), !dbg !8009
  call void @mutex_lock(%struct.mutex* @gpd_list_lock) #11, !dbg !8010
  %0 = load %struct.of_phandle_args*, %struct.of_phandle_args** %parent_spec.addr, align 8, !dbg !8011
  %call = call %struct.generic_pm_domain* @genpd_get_from_provider(%struct.of_phandle_args* %0) #11, !dbg !8012
  store %struct.generic_pm_domain* %call, %struct.generic_pm_domain** %parent, align 8, !dbg !8013
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !8014
  %2 = bitcast %struct.generic_pm_domain* %1 to i8*, !dbg !8014
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #11, !dbg !8016
  br i1 %call1, label %if.then, label %if.end, !dbg !8017

if.then:                                          ; preds = %entry
  %3 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !8018
  %4 = bitcast %struct.generic_pm_domain* %3 to i8*, !dbg !8018
  %call2 = call i64 @PTR_ERR(i8* %4) #11, !dbg !8020
  %conv = trunc i64 %call2 to i32, !dbg !8020
  store i32 %conv, i32* %ret, align 4, !dbg !8021
  br label %out, !dbg !8022

if.end:                                           ; preds = %entry
  %5 = load %struct.of_phandle_args*, %struct.of_phandle_args** %subdomain_spec.addr, align 8, !dbg !8023
  %call3 = call %struct.generic_pm_domain* @genpd_get_from_provider(%struct.of_phandle_args* %5) #11, !dbg !8024
  store %struct.generic_pm_domain* %call3, %struct.generic_pm_domain** %subdomain, align 8, !dbg !8025
  %6 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain, align 8, !dbg !8026
  %7 = bitcast %struct.generic_pm_domain* %6 to i8*, !dbg !8026
  %call4 = call zeroext i1 @IS_ERR(i8* %7) #11, !dbg !8028
  br i1 %call4, label %if.then5, label %if.end8, !dbg !8029

if.then5:                                         ; preds = %if.end
  %8 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain, align 8, !dbg !8030
  %9 = bitcast %struct.generic_pm_domain* %8 to i8*, !dbg !8030
  %call6 = call i64 @PTR_ERR(i8* %9) #11, !dbg !8032
  %conv7 = trunc i64 %call6 to i32, !dbg !8032
  store i32 %conv7, i32* %ret, align 4, !dbg !8033
  br label %out, !dbg !8034

if.end8:                                          ; preds = %if.end
  %10 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !8035
  %11 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %subdomain, align 8, !dbg !8036
  %call9 = call i32 @pm_genpd_remove_subdomain(%struct.generic_pm_domain* %10, %struct.generic_pm_domain* %11) #11, !dbg !8037
  store i32 %call9, i32* %ret, align 4, !dbg !8038
  br label %out, !dbg !8039

out:                                              ; preds = %if.end8, %if.then5, %if.then
  call void @llvm.dbg.label(metadata !8040), !dbg !8041
  call void @mutex_unlock(%struct.mutex* @gpd_list_lock) #11, !dbg !8042
  %12 = load i32, i32* %ret, align 4, !dbg !8043
  ret i32 %12, !dbg !8044
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.generic_pm_domain* @of_genpd_remove_last(%struct.device_node* %np) #0 !dbg !8045 {
entry:
  %retval = alloca %struct.generic_pm_domain*, align 8
  %np.addr = alloca %struct.device_node*, align 8
  %gpd = alloca %struct.generic_pm_domain*, align 8
  %tmp = alloca %struct.generic_pm_domain*, align 8
  %genpd = alloca %struct.generic_pm_domain*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp3 = alloca %struct.generic_pm_domain*, align 8
  %__mptr4 = alloca i8*, align 8
  %tmp7 = alloca %struct.generic_pm_domain*, align 8
  %__mptr15 = alloca i8*, align 8
  %tmp20 = alloca %struct.generic_pm_domain*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !8048, metadata !DIExpression()), !dbg !8049
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %gpd, metadata !8050, metadata !DIExpression()), !dbg !8051
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %tmp, metadata !8052, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd, metadata !8054, metadata !DIExpression()), !dbg !8055
  %call = call i8* @ERR_PTR(i64 -2) #11, !dbg !8056
  %0 = bitcast i8* %call to %struct.generic_pm_domain*, !dbg !8056
  store %struct.generic_pm_domain* %0, %struct.generic_pm_domain** %genpd, align 8, !dbg !8055
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8057, metadata !DIExpression()), !dbg !8058
  %1 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !8059
  %2 = bitcast %struct.device_node* %1 to i8*, !dbg !8059
  %call1 = call zeroext i1 @IS_ERR_OR_NULL(i8* %2) #11, !dbg !8061
  br i1 %call1, label %if.then, label %if.end, !dbg !8062

if.then:                                          ; preds = %entry
  %call2 = call i8* @ERR_PTR(i64 -22) #11, !dbg !8063
  %3 = bitcast i8* %call2 to %struct.generic_pm_domain*, !dbg !8063
  store %struct.generic_pm_domain* %3, %struct.generic_pm_domain** %retval, align 8, !dbg !8064
  br label %return, !dbg !8064

if.end:                                           ; preds = %entry
  call void @mutex_lock(%struct.mutex* @gpd_list_lock) #11, !dbg !8065
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8066, metadata !DIExpression()), !dbg !8069
  %4 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @gpd_list, i32 0, i32 0), align 8, !dbg !8069
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !8069
  store i8* %5, i8** %__mptr, align 8, !dbg !8069
  br label %do.body, !dbg !8069

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !8070

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !8069
  %add.ptr = getelementptr i8, i8* %6, i64 -920, !dbg !8069
  %7 = bitcast i8* %add.ptr to %struct.generic_pm_domain*, !dbg !8069
  store %struct.generic_pm_domain* %7, %struct.generic_pm_domain** %tmp3, align 8, !dbg !8070
  %8 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %tmp3, align 8, !dbg !8069
  store %struct.generic_pm_domain* %8, %struct.generic_pm_domain** %gpd, align 8, !dbg !8072
  call void @llvm.dbg.declare(metadata i8** %__mptr4, metadata !8073, metadata !DIExpression()), !dbg !8075
  %9 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %gpd, align 8, !dbg !8075
  %gpd_list_node = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %9, i32 0, i32 2, !dbg !8075
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %gpd_list_node, i32 0, i32 0, !dbg !8075
  %10 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8075
  %11 = bitcast %struct.list_head* %10 to i8*, !dbg !8075
  store i8* %11, i8** %__mptr4, align 8, !dbg !8075
  br label %do.body5, !dbg !8075

do.body5:                                         ; preds = %do.end
  br label %do.end6, !dbg !8076

do.end6:                                          ; preds = %do.body5
  %12 = load i8*, i8** %__mptr4, align 8, !dbg !8075
  %add.ptr8 = getelementptr i8, i8* %12, i64 -920, !dbg !8075
  %13 = bitcast i8* %add.ptr8 to %struct.generic_pm_domain*, !dbg !8075
  store %struct.generic_pm_domain* %13, %struct.generic_pm_domain** %tmp7, align 8, !dbg !8076
  %14 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %tmp7, align 8, !dbg !8075
  store %struct.generic_pm_domain* %14, %struct.generic_pm_domain** %tmp, align 8, !dbg !8072
  br label %for.cond, !dbg !8072

for.cond:                                         ; preds = %do.end19, %do.end6
  %15 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %gpd, align 8, !dbg !8078
  %gpd_list_node9 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %15, i32 0, i32 2, !dbg !8078
  %cmp = icmp eq %struct.list_head* %gpd_list_node9, @gpd_list, !dbg !8078
  %lnot = xor i1 %cmp, true, !dbg !8078
  br i1 %lnot, label %for.body, label %for.end, !dbg !8072

for.body:                                         ; preds = %for.cond
  %16 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %gpd, align 8, !dbg !8080
  %provider = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %16, i32 0, i32 8, !dbg !8083
  %17 = load %struct.fwnode_handle*, %struct.fwnode_handle** %provider, align 8, !dbg !8083
  %18 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !8084
  %fwnode = getelementptr inbounds %struct.device_node, %struct.device_node* %18, i32 0, i32 3, !dbg !8085
  %cmp10 = icmp eq %struct.fwnode_handle* %17, %fwnode, !dbg !8086
  br i1 %cmp10, label %if.then11, label %if.end14, !dbg !8087

if.then11:                                        ; preds = %for.body
  %19 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %gpd, align 8, !dbg !8088
  %call12 = call i32 @genpd_remove(%struct.generic_pm_domain* %19) #11, !dbg !8090
  store i32 %call12, i32* %ret, align 4, !dbg !8091
  %20 = load i32, i32* %ret, align 4, !dbg !8092
  %tobool = icmp ne i32 %20, 0, !dbg !8092
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8092

cond.true:                                        ; preds = %if.then11
  %21 = load i32, i32* %ret, align 4, !dbg !8093
  %conv = sext i32 %21 to i64, !dbg !8093
  %call13 = call i8* @ERR_PTR(i64 %conv) #11, !dbg !8094
  br label %cond.end, !dbg !8092

cond.false:                                       ; preds = %if.then11
  %22 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %gpd, align 8, !dbg !8095
  %23 = bitcast %struct.generic_pm_domain* %22 to i8*, !dbg !8095
  br label %cond.end, !dbg !8092

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call13, %cond.true ], [ %23, %cond.false ], !dbg !8092
  %24 = bitcast i8* %cond to %struct.generic_pm_domain*, !dbg !8092
  store %struct.generic_pm_domain* %24, %struct.generic_pm_domain** %genpd, align 8, !dbg !8096
  br label %for.end, !dbg !8097

if.end14:                                         ; preds = %for.body
  br label %for.inc, !dbg !8098

for.inc:                                          ; preds = %if.end14
  %25 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %tmp, align 8, !dbg !8078
  store %struct.generic_pm_domain* %25, %struct.generic_pm_domain** %gpd, align 8, !dbg !8078
  call void @llvm.dbg.declare(metadata i8** %__mptr15, metadata !8099, metadata !DIExpression()), !dbg !8101
  %26 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %tmp, align 8, !dbg !8101
  %gpd_list_node16 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %26, i32 0, i32 2, !dbg !8101
  %next17 = getelementptr inbounds %struct.list_head, %struct.list_head* %gpd_list_node16, i32 0, i32 0, !dbg !8101
  %27 = load %struct.list_head*, %struct.list_head** %next17, align 8, !dbg !8101
  %28 = bitcast %struct.list_head* %27 to i8*, !dbg !8101
  store i8* %28, i8** %__mptr15, align 8, !dbg !8101
  br label %do.body18, !dbg !8101

do.body18:                                        ; preds = %for.inc
  br label %do.end19, !dbg !8102

do.end19:                                         ; preds = %do.body18
  %29 = load i8*, i8** %__mptr15, align 8, !dbg !8101
  %add.ptr21 = getelementptr i8, i8* %29, i64 -920, !dbg !8101
  %30 = bitcast i8* %add.ptr21 to %struct.generic_pm_domain*, !dbg !8101
  store %struct.generic_pm_domain* %30, %struct.generic_pm_domain** %tmp20, align 8, !dbg !8102
  %31 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %tmp20, align 8, !dbg !8101
  store %struct.generic_pm_domain* %31, %struct.generic_pm_domain** %tmp, align 8, !dbg !8078
  br label %for.cond, !dbg !8078, !llvm.loop !8104

for.end:                                          ; preds = %cond.end, %for.cond
  call void @mutex_unlock(%struct.mutex* @gpd_list_lock) #11, !dbg !8106
  %32 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !8107
  store %struct.generic_pm_domain* %32, %struct.generic_pm_domain** %retval, align 8, !dbg !8108
  br label %return, !dbg !8108

return:                                           ; preds = %for.end, %if.then
  %33 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %retval, align 8, !dbg !8109
  ret %struct.generic_pm_domain* %33, !dbg !8109
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !8110 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !8113, metadata !DIExpression()), !dbg !8114
  %0 = load i64, i64* %error.addr, align 8, !dbg !8115
  %1 = inttoptr i64 %0 to i8*, !dbg !8116
  ret i8* %1, !dbg !8117
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @genpd_dev_pm_attach(%struct.device* %dev) #0 !dbg !8118 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8119, metadata !DIExpression()), !dbg !8120
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8121
  %of_node = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 23, !dbg !8123
  %1 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !8123
  %tobool = icmp ne %struct.device_node* %1, null, !dbg !8121
  br i1 %tobool, label %if.end, label %if.then, !dbg !8124

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8125
  br label %return, !dbg !8125

if.end:                                           ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8126
  %of_node1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 23, !dbg !8128
  %3 = load %struct.device_node*, %struct.device_node** %of_node1, align 8, !dbg !8128
  %call = call i32 @of_count_phandle_with_args(%struct.device_node* %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0)) #11, !dbg !8129
  %cmp = icmp ne i32 %call, 1, !dbg !8130
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8131

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8132
  br label %return, !dbg !8132

if.end3:                                          ; preds = %if.end
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8133
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8134
  %call4 = call i32 @__genpd_dev_pm_attach(%struct.device* %4, %struct.device* %5, i32 0, i1 zeroext true) #11, !dbg !8135
  store i32 %call4, i32* %retval, align 4, !dbg !8136
  br label %return, !dbg !8136

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !8137
  ret i32 %6, !dbg !8137
}

; Function Attrs: noredzone
declare dso_local i32 @of_count_phandle_with_args(%struct.device_node*, i8*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__genpd_dev_pm_attach(%struct.device* %dev, %struct.device* %base_dev, i32 %index, i1 zeroext %power_on) #0 !dbg !8138 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %base_dev.addr = alloca %struct.device*, align 8
  %index.addr = alloca i32, align 4
  %power_on.addr = alloca i8, align 1
  %pd_args = alloca %struct.of_phandle_args, align 8
  %pd = alloca %struct.generic_pm_domain*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8141, metadata !DIExpression()), !dbg !8142
  store %struct.device* %base_dev, %struct.device** %base_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %base_dev.addr, metadata !8143, metadata !DIExpression()), !dbg !8144
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8145, metadata !DIExpression()), !dbg !8146
  %frombool = zext i1 %power_on to i8
  store i8 %frombool, i8* %power_on.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %power_on.addr, metadata !8147, metadata !DIExpression()), !dbg !8148
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args* %pd_args, metadata !8149, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %pd, metadata !8151, metadata !DIExpression()), !dbg !8152
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8153, metadata !DIExpression()), !dbg !8154
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8155
  %of_node = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 23, !dbg !8156
  %1 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !8156
  %2 = load i32, i32* %index.addr, align 4, !dbg !8157
  %call = call i32 @of_parse_phandle_with_args(%struct.device_node* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0), i32 %2, %struct.of_phandle_args* %pd_args) #11, !dbg !8158
  store i32 %call, i32* %ret, align 4, !dbg !8159
  %3 = load i32, i32* %ret, align 4, !dbg !8160
  %cmp = icmp slt i32 %3, 0, !dbg !8162
  br i1 %cmp, label %if.then, label %if.end, !dbg !8163

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %ret, align 4, !dbg !8164
  store i32 %4, i32* %retval, align 4, !dbg !8165
  br label %return, !dbg !8165

if.end:                                           ; preds = %entry
  call void @mutex_lock(%struct.mutex* @gpd_list_lock) #11, !dbg !8166
  %call1 = call %struct.generic_pm_domain* @genpd_get_from_provider(%struct.of_phandle_args* %pd_args) #11, !dbg !8167
  store %struct.generic_pm_domain* %call1, %struct.generic_pm_domain** %pd, align 8, !dbg !8168
  %np = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %pd_args, i32 0, i32 0, !dbg !8169
  %5 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !8169
  call void @of_node_put(%struct.device_node* %5) #11, !dbg !8170
  %6 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %pd, align 8, !dbg !8171
  %7 = bitcast %struct.generic_pm_domain* %6 to i8*, !dbg !8171
  %call2 = call zeroext i1 @IS_ERR(i8* %7) #11, !dbg !8173
  br i1 %call2, label %if.then3, label %if.end5, !dbg !8174

if.then3:                                         ; preds = %if.end
  call void @mutex_unlock(%struct.mutex* @gpd_list_lock) #11, !dbg !8175
  %8 = load %struct.device*, %struct.device** %base_dev.addr, align 8, !dbg !8177
  %call4 = call i32 @driver_deferred_probe_check_state(%struct.device* %8) #11, !dbg !8178
  store i32 %call4, i32* %retval, align 4, !dbg !8179
  br label %return, !dbg !8179

if.end5:                                          ; preds = %if.end
  %9 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %pd, align 8, !dbg !8180
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8181
  %11 = load %struct.device*, %struct.device** %base_dev.addr, align 8, !dbg !8182
  %call6 = call i32 @genpd_add_device(%struct.generic_pm_domain* %9, %struct.device* %10, %struct.device* %11) #11, !dbg !8183
  store i32 %call6, i32* %ret, align 4, !dbg !8184
  call void @mutex_unlock(%struct.mutex* @gpd_list_lock) #11, !dbg !8185
  %12 = load i32, i32* %ret, align 4, !dbg !8186
  %cmp7 = icmp slt i32 %12, 0, !dbg !8188
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !8189

if.then8:                                         ; preds = %if.end5
  %13 = load i32, i32* %ret, align 4, !dbg !8190
  %cmp9 = icmp ne i32 %13, -517, !dbg !8193
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !8194

if.then10:                                        ; preds = %if.then8
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8195
  %15 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %pd, align 8, !dbg !8195
  %name = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %15, i32 0, i32 10, !dbg !8195
  %16 = load i8*, i8** %name, align 8, !dbg !8195
  %17 = load i32, i32* %ret, align 4, !dbg !8195
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %14, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20, i64 0, i64 0), i8* %16, i32 %17) #12, !dbg !8195
  br label %if.end11, !dbg !8195

if.end11:                                         ; preds = %if.then10, %if.then8
  %18 = load i32, i32* %ret, align 4, !dbg !8196
  store i32 %18, i32* %retval, align 4, !dbg !8197
  br label %return, !dbg !8197

if.end12:                                         ; preds = %if.end5
  %19 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8198
  %pm_domain = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 12, !dbg !8199
  %20 = load %struct.dev_pm_domain*, %struct.dev_pm_domain** %pm_domain, align 8, !dbg !8199
  %detach = getelementptr inbounds %struct.dev_pm_domain, %struct.dev_pm_domain* %20, i32 0, i32 2, !dbg !8200
  store void (%struct.device*, i1)* @genpd_dev_pm_detach, void (%struct.device*, i1)** %detach, align 8, !dbg !8201
  %21 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8202
  %pm_domain13 = getelementptr inbounds %struct.device, %struct.device* %21, i32 0, i32 12, !dbg !8203
  %22 = load %struct.dev_pm_domain*, %struct.dev_pm_domain** %pm_domain13, align 8, !dbg !8203
  %sync = getelementptr inbounds %struct.dev_pm_domain, %struct.dev_pm_domain* %22, i32 0, i32 4, !dbg !8204
  store void (%struct.device*)* @genpd_dev_pm_sync, void (%struct.device*)** %sync, align 8, !dbg !8205
  %23 = load i8, i8* %power_on.addr, align 1, !dbg !8206
  %tobool = trunc i8 %23 to i1, !dbg !8206
  br i1 %tobool, label %if.then14, label %if.end17, !dbg !8208

if.then14:                                        ; preds = %if.end12
  %24 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %pd, align 8, !dbg !8209
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %24, i32 0, i32 38, !dbg !8209
  %25 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !8209
  %lock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %25, i32 0, i32 0, !dbg !8209
  %26 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %lock, align 8, !dbg !8209
  %27 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %pd, align 8, !dbg !8209
  call void %26(%struct.generic_pm_domain* %27) #11, !dbg !8209
  %28 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %pd, align 8, !dbg !8211
  %call15 = call i32 @genpd_power_on(%struct.generic_pm_domain* %28, i32 0) #11, !dbg !8212
  store i32 %call15, i32* %ret, align 4, !dbg !8213
  %29 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %pd, align 8, !dbg !8214
  %lock_ops16 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %29, i32 0, i32 38, !dbg !8214
  %30 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops16, align 8, !dbg !8214
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %30, i32 0, i32 3, !dbg !8214
  %31 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !8214
  %32 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %pd, align 8, !dbg !8214
  call void %31(%struct.generic_pm_domain* %32) #11, !dbg !8214
  br label %if.end17, !dbg !8215

if.end17:                                         ; preds = %if.then14, %if.end12
  %33 = load i32, i32* %ret, align 4, !dbg !8216
  %tobool18 = icmp ne i32 %33, 0, !dbg !8216
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !8218

if.then19:                                        ; preds = %if.end17
  %34 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %pd, align 8, !dbg !8219
  %35 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8220
  %call20 = call i32 @genpd_remove_device(%struct.generic_pm_domain* %34, %struct.device* %35) #11, !dbg !8221
  br label %if.end21, !dbg !8221

if.end21:                                         ; preds = %if.then19, %if.end17
  %36 = load i32, i32* %ret, align 4, !dbg !8222
  %tobool22 = icmp ne i32 %36, 0, !dbg !8222
  %37 = zext i1 %tobool22 to i64, !dbg !8222
  %cond = select i1 %tobool22, i32 -517, i32 1, !dbg !8222
  store i32 %cond, i32* %retval, align 4, !dbg !8223
  br label %return, !dbg !8223

return:                                           ; preds = %if.end21, %if.end11, %if.then3, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !8224
  ret i32 %38, !dbg !8224
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device* @genpd_dev_pm_attach_by_id(%struct.device* %dev, i32 %index) #0 !dbg !8225 {
entry:
  %retval = alloca %struct.device*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %index.addr = alloca i32, align 4
  %virt_dev = alloca %struct.device*, align 8
  %num_domains = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8228, metadata !DIExpression()), !dbg !8229
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8230, metadata !DIExpression()), !dbg !8231
  call void @llvm.dbg.declare(metadata %struct.device** %virt_dev, metadata !8232, metadata !DIExpression()), !dbg !8233
  call void @llvm.dbg.declare(metadata i32* %num_domains, metadata !8234, metadata !DIExpression()), !dbg !8235
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8236, metadata !DIExpression()), !dbg !8237
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8238
  %of_node = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 23, !dbg !8240
  %1 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !8240
  %tobool = icmp ne %struct.device_node* %1, null, !dbg !8238
  br i1 %tobool, label %if.end, label %if.then, !dbg !8241

if.then:                                          ; preds = %entry
  store %struct.device* null, %struct.device** %retval, align 8, !dbg !8242
  br label %return, !dbg !8242

if.end:                                           ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8243
  %of_node1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 23, !dbg !8244
  %3 = load %struct.device_node*, %struct.device_node** %of_node1, align 8, !dbg !8244
  %call = call i32 @of_count_phandle_with_args(%struct.device_node* %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0)) #11, !dbg !8245
  store i32 %call, i32* %num_domains, align 4, !dbg !8246
  %4 = load i32, i32* %index.addr, align 4, !dbg !8247
  %5 = load i32, i32* %num_domains, align 4, !dbg !8249
  %cmp = icmp uge i32 %4, %5, !dbg !8250
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8251

if.then2:                                         ; preds = %if.end
  store %struct.device* null, %struct.device** %retval, align 8, !dbg !8252
  br label %return, !dbg !8252

if.end3:                                          ; preds = %if.end
  %call4 = call i8* @kzalloc(i64 696, i32 3264) #11, !dbg !8253
  %6 = bitcast i8* %call4 to %struct.device*, !dbg !8253
  store %struct.device* %6, %struct.device** %virt_dev, align 8, !dbg !8254
  %7 = load %struct.device*, %struct.device** %virt_dev, align 8, !dbg !8255
  %tobool5 = icmp ne %struct.device* %7, null, !dbg !8255
  br i1 %tobool5, label %if.end8, label %if.then6, !dbg !8257

if.then6:                                         ; preds = %if.end3
  %call7 = call i8* @ERR_PTR(i64 -12) #11, !dbg !8258
  %8 = bitcast i8* %call7 to %struct.device*, !dbg !8258
  store %struct.device* %8, %struct.device** %retval, align 8, !dbg !8259
  br label %return, !dbg !8259

if.end8:                                          ; preds = %if.end3
  %9 = load %struct.device*, %struct.device** %virt_dev, align 8, !dbg !8260
  %10 = load i32, i32* %index.addr, align 4, !dbg !8261
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8262
  %call9 = call i8* @dev_name(%struct.device* %11) #11, !dbg !8263
  %call10 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %9, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0), i32 %10, i8* %call9) #11, !dbg !8264
  %12 = load %struct.device*, %struct.device** %virt_dev, align 8, !dbg !8265
  %bus = getelementptr inbounds %struct.device, %struct.device* %12, i32 0, i32 5, !dbg !8266
  store %struct.bus_type* @genpd_bus_type, %struct.bus_type** %bus, align 8, !dbg !8267
  %13 = load %struct.device*, %struct.device** %virt_dev, align 8, !dbg !8268
  %release = getelementptr inbounds %struct.device, %struct.device* %13, i32 0, i32 31, !dbg !8269
  store void (%struct.device*)* @genpd_release_dev, void (%struct.device*)** %release, align 8, !dbg !8270
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8271
  %of_node11 = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 23, !dbg !8272
  %15 = load %struct.device_node*, %struct.device_node** %of_node11, align 8, !dbg !8272
  %call12 = call %struct.device_node* @of_node_get(%struct.device_node* %15) #11, !dbg !8273
  %16 = load %struct.device*, %struct.device** %virt_dev, align 8, !dbg !8274
  %of_node13 = getelementptr inbounds %struct.device, %struct.device* %16, i32 0, i32 23, !dbg !8275
  store %struct.device_node* %call12, %struct.device_node** %of_node13, align 8, !dbg !8276
  %17 = load %struct.device*, %struct.device** %virt_dev, align 8, !dbg !8277
  %call14 = call i32 @device_register(%struct.device* %17) #11, !dbg !8278
  store i32 %call14, i32* %ret, align 4, !dbg !8279
  %18 = load i32, i32* %ret, align 4, !dbg !8280
  %tobool15 = icmp ne i32 %18, 0, !dbg !8280
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !8282

if.then16:                                        ; preds = %if.end8
  %19 = load %struct.device*, %struct.device** %virt_dev, align 8, !dbg !8283
  call void @put_device(%struct.device* %19) #11, !dbg !8285
  %20 = load i32, i32* %ret, align 4, !dbg !8286
  %conv = sext i32 %20 to i64, !dbg !8286
  %call17 = call i8* @ERR_PTR(i64 %conv) #11, !dbg !8287
  %21 = bitcast i8* %call17 to %struct.device*, !dbg !8287
  store %struct.device* %21, %struct.device** %retval, align 8, !dbg !8288
  br label %return, !dbg !8288

if.end18:                                         ; preds = %if.end8
  %22 = load %struct.device*, %struct.device** %virt_dev, align 8, !dbg !8289
  %23 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8290
  %24 = load i32, i32* %index.addr, align 4, !dbg !8291
  %call19 = call i32 @__genpd_dev_pm_attach(%struct.device* %22, %struct.device* %23, i32 %24, i1 zeroext false) #11, !dbg !8292
  store i32 %call19, i32* %ret, align 4, !dbg !8293
  %25 = load i32, i32* %ret, align 4, !dbg !8294
  %cmp20 = icmp slt i32 %25, 1, !dbg !8296
  br i1 %cmp20, label %if.then22, label %if.end26, !dbg !8297

if.then22:                                        ; preds = %if.end18
  %26 = load %struct.device*, %struct.device** %virt_dev, align 8, !dbg !8298
  call void @device_unregister(%struct.device* %26) #11, !dbg !8300
  %27 = load i32, i32* %ret, align 4, !dbg !8301
  %tobool23 = icmp ne i32 %27, 0, !dbg !8301
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !8301

cond.true:                                        ; preds = %if.then22
  %28 = load i32, i32* %ret, align 4, !dbg !8302
  %conv24 = sext i32 %28 to i64, !dbg !8302
  %call25 = call i8* @ERR_PTR(i64 %conv24) #11, !dbg !8303
  br label %cond.end, !dbg !8301

cond.false:                                       ; preds = %if.then22
  br label %cond.end, !dbg !8301

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call25, %cond.true ], [ null, %cond.false ], !dbg !8301
  %29 = bitcast i8* %cond to %struct.device*, !dbg !8301
  store %struct.device* %29, %struct.device** %retval, align 8, !dbg !8304
  br label %return, !dbg !8304

if.end26:                                         ; preds = %if.end18
  %30 = load %struct.device*, %struct.device** %virt_dev, align 8, !dbg !8305
  call void @pm_runtime_enable(%struct.device* %30) #11, !dbg !8306
  %31 = load %struct.device*, %struct.device** %virt_dev, align 8, !dbg !8307
  %call27 = call %struct.generic_pm_domain* @dev_to_genpd(%struct.device* %31) #11, !dbg !8308
  call void @genpd_queue_power_off_work(%struct.generic_pm_domain* %call27) #11, !dbg !8309
  %32 = load %struct.device*, %struct.device** %virt_dev, align 8, !dbg !8310
  store %struct.device* %32, %struct.device** %retval, align 8, !dbg !8311
  br label %return, !dbg !8311

return:                                           ; preds = %if.end26, %cond.end, %if.then16, %if.then6, %if.then2, %if.then
  %33 = load %struct.device*, %struct.device** %retval, align 8, !dbg !8312
  ret %struct.device* %33, !dbg !8312
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !8313 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !8316, metadata !DIExpression()), !dbg !8320
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !8326, metadata !DIExpression()), !dbg !8327
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !8328, metadata !DIExpression()), !dbg !8329
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !8330, metadata !DIExpression()), !dbg !8331
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !8332, metadata !DIExpression()), !dbg !8336
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !8338, metadata !DIExpression()), !dbg !8342
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !8344, metadata !DIExpression()), !dbg !8348
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !8353, metadata !DIExpression()), !dbg !8354
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !8355, metadata !DIExpression()), !dbg !8356
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8357, metadata !DIExpression()), !dbg !8358
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !8359, metadata !DIExpression()), !dbg !8360
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !8361, metadata !DIExpression()), !dbg !8362
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8363, metadata !DIExpression()), !dbg !8364
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !8365, metadata !DIExpression()), !dbg !8366
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !8367, metadata !DIExpression()), !dbg !8368
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8369, metadata !DIExpression()), !dbg !8370
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8371, metadata !DIExpression()), !dbg !8372
  %0 = load i64, i64* %size.addr, align 8, !dbg !8373
  %1 = load i32, i32* %flags.addr, align 4, !dbg !8374
  %or = or i32 %1, 256, !dbg !8375
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !8376
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #7, !dbg !8377
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !8378

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8379
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !8380
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8381

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !8382
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !8383
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !8384
  %call.i.i = call i32 @get_order(i64 %7) #14, !dbg !8385
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !8362
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !8386
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !8387
  %10 = load i32, i32* %order.i.i, align 4, !dbg !8388
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !8389
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !8390
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !8391
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #13, !dbg !8392
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !8392
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !8392
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !8392
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !8392
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !8393
  br label %kmalloc.exit, !dbg !8393

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !8394
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8395
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !8395
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !8397

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !8398
  br label %kmalloc_index.exit.i, !dbg !8398

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8399
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !8401
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !8402

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8403
  br label %kmalloc_index.exit.i, !dbg !8403

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8404
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !8406
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !8407

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8408
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !8409
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !8410

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !8411
  br label %kmalloc_index.exit.i, !dbg !8411

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8412
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !8414
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !8415

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8416
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !8417
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !8418

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !8419
  br label %kmalloc_index.exit.i, !dbg !8419

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8420
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !8422
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !8423

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8424
  br label %kmalloc_index.exit.i, !dbg !8424

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8425
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !8427
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !8428

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !8429
  br label %kmalloc_index.exit.i, !dbg !8429

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8430
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !8432
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !8433

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !8434
  br label %kmalloc_index.exit.i, !dbg !8434

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8435
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !8437
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !8438

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !8439
  br label %kmalloc_index.exit.i, !dbg !8439

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8440
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !8442
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !8443

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !8444
  br label %kmalloc_index.exit.i, !dbg !8444

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8445
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !8447
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !8448

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !8449
  br label %kmalloc_index.exit.i, !dbg !8449

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8450
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !8452
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !8453

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !8454
  br label %kmalloc_index.exit.i, !dbg !8454

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8455
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !8457
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !8458

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !8459
  br label %kmalloc_index.exit.i, !dbg !8459

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8460
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !8462
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !8463

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !8464
  br label %kmalloc_index.exit.i, !dbg !8464

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8465
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !8467
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !8468

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !8469
  br label %kmalloc_index.exit.i, !dbg !8469

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8470
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !8472
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !8473

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !8474
  br label %kmalloc_index.exit.i, !dbg !8474

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8475
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !8477
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !8478

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !8479
  br label %kmalloc_index.exit.i, !dbg !8479

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8480
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !8482
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !8483

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !8484
  br label %kmalloc_index.exit.i, !dbg !8484

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8485
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !8487
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !8488

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !8489
  br label %kmalloc_index.exit.i, !dbg !8489

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8490
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !8492
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !8493

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !8494
  br label %kmalloc_index.exit.i, !dbg !8494

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8495
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !8497
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !8498

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !8499
  br label %kmalloc_index.exit.i, !dbg !8499

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8500
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !8502
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !8503

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !8504
  br label %kmalloc_index.exit.i, !dbg !8504

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8505
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !8507
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !8508

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !8509
  br label %kmalloc_index.exit.i, !dbg !8509

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8510
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !8512
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !8513

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !8514
  br label %kmalloc_index.exit.i, !dbg !8514

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8515
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !8517
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !8518

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !8519
  br label %kmalloc_index.exit.i, !dbg !8519

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8520
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !8522
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !8523

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !8524
  br label %kmalloc_index.exit.i, !dbg !8524

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8525
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !8527
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !8528

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !8529
  br label %kmalloc_index.exit.i, !dbg !8529

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8530
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !8532
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !8533

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !8534
  br label %kmalloc_index.exit.i, !dbg !8534

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8535
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !8537
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !8538

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !8539
  br label %kmalloc_index.exit.i, !dbg !8539

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !8540, !srcloc !8543
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 159) #7, !dbg !8544, !srcloc !8547
  unreachable, !dbg !8548

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !8549
  store i32 %45, i32* %index.i, align 4, !dbg !8550
  %46 = load i32, i32* %index.i, align 4, !dbg !8551
  %tobool.i = icmp ne i32 %46, 0, !dbg !8551
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !8553

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !8554
  br label %kmalloc.exit, !dbg !8554

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !8555
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8556
  %and.i.i = and i32 %48, 17, !dbg !8556
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !8556
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !8556
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !8556
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8556
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !8558

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !8559
  br label %kmalloc_type.exit.i, !dbg !8559

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8560
  %and2.i.i = and i32 %49, 1, !dbg !8561
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !8560
  %50 = zext i1 %tobool3.i.i to i64, !dbg !8560
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !8560
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !8562
  br label %kmalloc_type.exit.i, !dbg !8562

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !8563
  %idxprom.i = zext i32 %51 to i64, !dbg !8564
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !8564
  %52 = load i32, i32* %index.i, align 4, !dbg !8565
  %idxprom6.i = zext i32 %52 to i64, !dbg !8564
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !8564
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !8564
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !8566
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !8567
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8568
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8569
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #13, !dbg !8570
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !8570
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !8570
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !8570
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !8570
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !8331
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8571
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !8572
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !8573
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8574
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #13, !dbg !8575
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !8576
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !8577
  store i8* %62, i8** %retval.i, align 8, !dbg !8578
  br label %kmalloc.exit, !dbg !8578

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !8579
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !8580
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #13, !dbg !8581
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !8581
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !8581
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !8581
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !8581
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !8582
  br label %kmalloc.exit, !dbg !8582

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !8583
  ret i8* %65, !dbg !8584
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !8585 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8588, metadata !DIExpression()), !dbg !8589
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8590
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !8592
  %1 = load i8*, i8** %init_name, align 8, !dbg !8592
  %tobool = icmp ne i8* %1, null, !dbg !8590
  br i1 %tobool, label %if.then, label %if.end, !dbg !8593

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8594
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !8595
  %3 = load i8*, i8** %init_name1, align 8, !dbg !8595
  store i8* %3, i8** %retval, align 8, !dbg !8596
  br label %return, !dbg !8596

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8597
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !8598
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #11, !dbg !8599
  store i8* %call, i8** %retval, align 8, !dbg !8600
  br label %return, !dbg !8600

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !8601
  ret i8* %5, !dbg !8601
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genpd_release_dev(%struct.device* %dev) #0 !dbg !8602 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8603, metadata !DIExpression()), !dbg !8604
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8605
  %of_node = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 23, !dbg !8606
  %1 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !8606
  call void @of_node_put(%struct.device_node* %1) #11, !dbg !8607
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8608
  %3 = bitcast %struct.device* %2 to i8*, !dbg !8608
  call void @kfree(i8* %3) #11, !dbg !8609
  ret void, !dbg !8610
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device_node* @of_node_get(%struct.device_node* %node) #0 !dbg !8611 {
entry:
  %node.addr = alloca %struct.device_node*, align 8
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !8614, metadata !DIExpression()), !dbg !8615
  %0 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !8616
  ret %struct.device_node* %0, !dbg !8617
}

; Function Attrs: noredzone
declare dso_local i32 @device_register(%struct.device*) #3

; Function Attrs: noredzone
declare dso_local void @put_device(%struct.device*) #3

; Function Attrs: noredzone
declare dso_local void @device_unregister(%struct.device*) #3

; Function Attrs: noredzone
declare dso_local void @pm_runtime_enable(%struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genpd_queue_power_off_work(%struct.generic_pm_domain* %genpd) #0 !dbg !8618 {
entry:
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !8619, metadata !DIExpression()), !dbg !8620
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @pm_wq, align 8, !dbg !8621
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !8622
  %power_off_work = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %1, i32 0, i32 7, !dbg !8623
  %call = call zeroext i1 @queue_work(%struct.workqueue_struct* %0, %struct.work_struct* %power_off_work) #11, !dbg !8624
  ret void, !dbg !8625
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.generic_pm_domain* @dev_to_genpd(%struct.device* %dev) #0 !dbg !8626 {
entry:
  %retval = alloca %struct.generic_pm_domain*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8627, metadata !DIExpression()), !dbg !8628
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8629
  %pm_domain = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 12, !dbg !8631
  %1 = load %struct.dev_pm_domain*, %struct.dev_pm_domain** %pm_domain, align 8, !dbg !8631
  %2 = bitcast %struct.dev_pm_domain* %1 to i8*, !dbg !8629
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %2) #11, !dbg !8632
  br i1 %call, label %if.then, label %if.end, !dbg !8633

if.then:                                          ; preds = %entry
  %call1 = call i8* @ERR_PTR(i64 -22) #11, !dbg !8634
  %3 = bitcast i8* %call1 to %struct.generic_pm_domain*, !dbg !8634
  store %struct.generic_pm_domain* %3, %struct.generic_pm_domain** %retval, align 8, !dbg !8635
  br label %return, !dbg !8635

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8636
  %pm_domain2 = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 12, !dbg !8637
  %5 = load %struct.dev_pm_domain*, %struct.dev_pm_domain** %pm_domain2, align 8, !dbg !8637
  %call3 = call %struct.generic_pm_domain* @pd_to_genpd(%struct.dev_pm_domain* %5) #11, !dbg !8638
  store %struct.generic_pm_domain* %call3, %struct.generic_pm_domain** %retval, align 8, !dbg !8639
  br label %return, !dbg !8639

return:                                           ; preds = %if.end, %if.then
  %6 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %retval, align 8, !dbg !8640
  ret %struct.generic_pm_domain* %6, !dbg !8640
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device* @genpd_dev_pm_attach_by_name(%struct.device* %dev, i8* %name) #0 !dbg !8641 {
entry:
  %retval = alloca %struct.device*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %name.addr = alloca i8*, align 8
  %index = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8644, metadata !DIExpression()), !dbg !8645
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8646, metadata !DIExpression()), !dbg !8647
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8648, metadata !DIExpression()), !dbg !8649
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8650
  %of_node = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 23, !dbg !8652
  %1 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !8652
  %tobool = icmp ne %struct.device_node* %1, null, !dbg !8650
  br i1 %tobool, label %if.end, label %if.then, !dbg !8653

if.then:                                          ; preds = %entry
  store %struct.device* null, %struct.device** %retval, align 8, !dbg !8654
  br label %return, !dbg !8654

if.end:                                           ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8655
  %of_node1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 23, !dbg !8656
  %3 = load %struct.device_node*, %struct.device_node** %of_node1, align 8, !dbg !8656
  %4 = load i8*, i8** %name.addr, align 8, !dbg !8657
  %call = call i32 @of_property_match_string(%struct.device_node* %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0), i8* %4) #11, !dbg !8658
  store i32 %call, i32* %index, align 4, !dbg !8659
  %5 = load i32, i32* %index, align 4, !dbg !8660
  %cmp = icmp slt i32 %5, 0, !dbg !8662
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8663

if.then2:                                         ; preds = %if.end
  store %struct.device* null, %struct.device** %retval, align 8, !dbg !8664
  br label %return, !dbg !8664

if.end3:                                          ; preds = %if.end
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8665
  %7 = load i32, i32* %index, align 4, !dbg !8666
  %call4 = call %struct.device* @genpd_dev_pm_attach_by_id(%struct.device* %6, i32 %7) #11, !dbg !8667
  store %struct.device* %call4, %struct.device** %retval, align 8, !dbg !8668
  br label %return, !dbg !8668

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %8 = load %struct.device*, %struct.device** %retval, align 8, !dbg !8669
  ret %struct.device* %8, !dbg !8669
}

; Function Attrs: noredzone
declare dso_local i32 @of_property_match_string(%struct.device_node*, i8*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_genpd_parse_idle_states(%struct.device_node* %dn, %struct.genpd_power_state** %states, i32* %n) #0 !dbg !8670 {
entry:
  %retval = alloca i32, align 4
  %dn.addr = alloca %struct.device_node*, align 8
  %states.addr = alloca %struct.genpd_power_state**, align 8
  %n.addr = alloca i32*, align 8
  %st = alloca %struct.genpd_power_state*, align 8
  %ret = alloca i32, align 4
  store %struct.device_node* %dn, %struct.device_node** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %dn.addr, metadata !8674, metadata !DIExpression()), !dbg !8675
  store %struct.genpd_power_state** %states, %struct.genpd_power_state*** %states.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.genpd_power_state*** %states.addr, metadata !8676, metadata !DIExpression()), !dbg !8677
  store i32* %n, i32** %n.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %n.addr, metadata !8678, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.declare(metadata %struct.genpd_power_state** %st, metadata !8680, metadata !DIExpression()), !dbg !8681
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8682, metadata !DIExpression()), !dbg !8683
  %0 = load %struct.device_node*, %struct.device_node** %dn.addr, align 8, !dbg !8684
  %call = call i32 @genpd_iterate_idle_states(%struct.device_node* %0, %struct.genpd_power_state* null) #11, !dbg !8685
  store i32 %call, i32* %ret, align 4, !dbg !8686
  %1 = load i32, i32* %ret, align 4, !dbg !8687
  %cmp = icmp slt i32 %1, 0, !dbg !8689
  br i1 %cmp, label %if.then, label %if.end, !dbg !8690

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !8691
  store i32 %2, i32* %retval, align 4, !dbg !8692
  br label %return, !dbg !8692

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !8693
  %tobool = icmp ne i32 %3, 0, !dbg !8693
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !8695

if.then1:                                         ; preds = %if.end
  %4 = load %struct.genpd_power_state**, %struct.genpd_power_state*** %states.addr, align 8, !dbg !8696
  store %struct.genpd_power_state* null, %struct.genpd_power_state** %4, align 8, !dbg !8698
  %5 = load i32*, i32** %n.addr, align 8, !dbg !8699
  store i32 0, i32* %5, align 4, !dbg !8700
  store i32 0, i32* %retval, align 4, !dbg !8701
  br label %return, !dbg !8701

if.end2:                                          ; preds = %if.end
  %6 = load i32, i32* %ret, align 4, !dbg !8702
  %conv = sext i32 %6 to i64, !dbg !8702
  %call3 = call i8* @kcalloc(i64 %conv, i64 64, i32 3264) #11, !dbg !8703
  %7 = bitcast i8* %call3 to %struct.genpd_power_state*, !dbg !8703
  store %struct.genpd_power_state* %7, %struct.genpd_power_state** %st, align 8, !dbg !8704
  %8 = load %struct.genpd_power_state*, %struct.genpd_power_state** %st, align 8, !dbg !8705
  %tobool4 = icmp ne %struct.genpd_power_state* %8, null, !dbg !8705
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !8707

if.then5:                                         ; preds = %if.end2
  store i32 -12, i32* %retval, align 4, !dbg !8708
  br label %return, !dbg !8708

if.end6:                                          ; preds = %if.end2
  %9 = load %struct.device_node*, %struct.device_node** %dn.addr, align 8, !dbg !8709
  %10 = load %struct.genpd_power_state*, %struct.genpd_power_state** %st, align 8, !dbg !8710
  %call7 = call i32 @genpd_iterate_idle_states(%struct.device_node* %9, %struct.genpd_power_state* %10) #11, !dbg !8711
  store i32 %call7, i32* %ret, align 4, !dbg !8712
  %11 = load i32, i32* %ret, align 4, !dbg !8713
  %cmp8 = icmp sle i32 %11, 0, !dbg !8715
  br i1 %cmp8, label %if.then10, label %if.end13, !dbg !8716

if.then10:                                        ; preds = %if.end6
  %12 = load %struct.genpd_power_state*, %struct.genpd_power_state** %st, align 8, !dbg !8717
  %13 = bitcast %struct.genpd_power_state* %12 to i8*, !dbg !8717
  call void @kfree(i8* %13) #11, !dbg !8719
  %14 = load i32, i32* %ret, align 4, !dbg !8720
  %cmp11 = icmp slt i32 %14, 0, !dbg !8721
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !8720

cond.true:                                        ; preds = %if.then10
  %15 = load i32, i32* %ret, align 4, !dbg !8722
  br label %cond.end, !dbg !8720

cond.false:                                       ; preds = %if.then10
  br label %cond.end, !dbg !8720

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %15, %cond.true ], [ -22, %cond.false ], !dbg !8720
  store i32 %cond, i32* %retval, align 4, !dbg !8723
  br label %return, !dbg !8723

if.end13:                                         ; preds = %if.end6
  %16 = load %struct.genpd_power_state*, %struct.genpd_power_state** %st, align 8, !dbg !8724
  %17 = load %struct.genpd_power_state**, %struct.genpd_power_state*** %states.addr, align 8, !dbg !8725
  store %struct.genpd_power_state* %16, %struct.genpd_power_state** %17, align 8, !dbg !8726
  %18 = load i32, i32* %ret, align 4, !dbg !8727
  %19 = load i32*, i32** %n.addr, align 8, !dbg !8728
  store i32 %18, i32* %19, align 4, !dbg !8729
  store i32 0, i32* %retval, align 4, !dbg !8730
  br label %return, !dbg !8730

return:                                           ; preds = %if.end13, %cond.end, %if.then5, %if.then1, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !8731
  ret i32 %20, !dbg !8731
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_iterate_idle_states(%struct.device_node* %dn, %struct.genpd_power_state* %states) #0 !dbg !8732 {
entry:
  %retval = alloca i32, align 4
  %dn.addr = alloca %struct.device_node*, align 8
  %states.addr = alloca %struct.genpd_power_state*, align 8
  %ret = alloca i32, align 4
  %it = alloca %struct.of_phandle_iterator, align 8
  %np = alloca %struct.device_node*, align 8
  %i = alloca i32, align 4
  store %struct.device_node* %dn, %struct.device_node** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %dn.addr, metadata !8735, metadata !DIExpression()), !dbg !8736
  store %struct.genpd_power_state* %states, %struct.genpd_power_state** %states.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.genpd_power_state** %states.addr, metadata !8737, metadata !DIExpression()), !dbg !8738
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8739, metadata !DIExpression()), !dbg !8740
  call void @llvm.dbg.declare(metadata %struct.of_phandle_iterator* %it, metadata !8741, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !8759, metadata !DIExpression()), !dbg !8760
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8761, metadata !DIExpression()), !dbg !8762
  store i32 0, i32* %i, align 4, !dbg !8762
  %0 = load %struct.device_node*, %struct.device_node** %dn.addr, align 8, !dbg !8763
  %call = call i32 @of_count_phandle_with_args(%struct.device_node* %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24, i64 0, i64 0), i8* null) #11, !dbg !8764
  store i32 %call, i32* %ret, align 4, !dbg !8765
  %1 = load i32, i32* %ret, align 4, !dbg !8766
  %cmp = icmp sle i32 %1, 0, !dbg !8768
  br i1 %cmp, label %if.then, label %if.end, !dbg !8769

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !8770
  %cmp1 = icmp eq i32 %2, -2, !dbg !8771
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !8770

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !8770

cond.false:                                       ; preds = %if.then
  %3 = load i32, i32* %ret, align 4, !dbg !8772
  br label %cond.end, !dbg !8770

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %3, %cond.false ], !dbg !8770
  store i32 %cond, i32* %retval, align 4, !dbg !8773
  br label %return, !dbg !8773

if.end:                                           ; preds = %entry
  %4 = load %struct.device_node*, %struct.device_node** %dn.addr, align 8, !dbg !8774
  %call2 = call i32 @of_phandle_iterator_init(%struct.of_phandle_iterator* %it, %struct.device_node* %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24, i64 0, i64 0), i8* null, i32 0) #11, !dbg !8774
  %call3 = call i32 @of_phandle_iterator_next(%struct.of_phandle_iterator* %it) #11, !dbg !8774
  store i32 %call3, i32* %ret, align 4, !dbg !8774
  br label %for.cond, !dbg !8774

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %ret, align 4, !dbg !8776
  %cmp4 = icmp eq i32 %5, 0, !dbg !8776
  br i1 %cmp4, label %for.body, label %for.end, !dbg !8774

for.body:                                         ; preds = %for.cond
  %node = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %it, i32 0, i32 8, !dbg !8778
  %6 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !8778
  store %struct.device_node* %6, %struct.device_node** %np, align 8, !dbg !8780
  %7 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !8781
  %call5 = call %struct.of_device_id* @of_match_node(%struct.of_device_id* getelementptr inbounds ([2 x %struct.of_device_id], [2 x %struct.of_device_id]* @idle_state_match, i64 0, i64 0), %struct.device_node* %7) #11, !dbg !8783
  %tobool = icmp ne %struct.of_device_id* %call5, null, !dbg !8783
  br i1 %tobool, label %if.end7, label %if.then6, !dbg !8784

if.then6:                                         ; preds = %for.body
  br label %for.inc, !dbg !8785

if.end7:                                          ; preds = %for.body
  %8 = load %struct.genpd_power_state*, %struct.genpd_power_state** %states.addr, align 8, !dbg !8786
  %tobool8 = icmp ne %struct.genpd_power_state* %8, null, !dbg !8786
  br i1 %tobool8, label %if.then9, label %if.end15, !dbg !8788

if.then9:                                         ; preds = %if.end7
  %9 = load %struct.genpd_power_state*, %struct.genpd_power_state** %states.addr, align 8, !dbg !8789
  %10 = load i32, i32* %i, align 4, !dbg !8791
  %idxprom = sext i32 %10 to i64, !dbg !8789
  %arrayidx = getelementptr %struct.genpd_power_state, %struct.genpd_power_state* %9, i64 %idxprom, !dbg !8789
  %11 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !8792
  %call10 = call i32 @genpd_parse_state(%struct.genpd_power_state* %arrayidx, %struct.device_node* %11) #11, !dbg !8793
  store i32 %call10, i32* %ret, align 4, !dbg !8794
  %12 = load i32, i32* %ret, align 4, !dbg !8795
  %tobool11 = icmp ne i32 %12, 0, !dbg !8795
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !8797

if.then12:                                        ; preds = %if.then9
  %13 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !8798
  %14 = load i32, i32* %ret, align 4, !dbg !8798
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), %struct.device_node* %13, i32 %14) #12, !dbg !8798
  %15 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !8800
  call void @of_node_put(%struct.device_node* %15) #11, !dbg !8801
  %16 = load i32, i32* %ret, align 4, !dbg !8802
  store i32 %16, i32* %retval, align 4, !dbg !8803
  br label %return, !dbg !8803

if.end14:                                         ; preds = %if.then9
  br label %if.end15, !dbg !8804

if.end15:                                         ; preds = %if.end14, %if.end7
  %17 = load i32, i32* %i, align 4, !dbg !8805
  %inc = add i32 %17, 1, !dbg !8805
  store i32 %inc, i32* %i, align 4, !dbg !8805
  br label %for.inc, !dbg !8806

for.inc:                                          ; preds = %if.end15, %if.then6
  %call16 = call i32 @of_phandle_iterator_next(%struct.of_phandle_iterator* %it) #11, !dbg !8776
  store i32 %call16, i32* %ret, align 4, !dbg !8776
  br label %for.cond, !dbg !8776, !llvm.loop !8807

for.end:                                          ; preds = %for.cond
  %18 = load i32, i32* %i, align 4, !dbg !8809
  store i32 %18, i32* %retval, align 4, !dbg !8810
  br label %return, !dbg !8810

return:                                           ; preds = %for.end, %if.then12, %cond.end
  %19 = load i32, i32* %retval, align 4, !dbg !8811
  ret i32 %19, !dbg !8811
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #0 !dbg !8812 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !8815, metadata !DIExpression()), !dbg !8816
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8817, metadata !DIExpression()), !dbg !8818
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8819, metadata !DIExpression()), !dbg !8820
  %0 = load i64, i64* %n.addr, align 8, !dbg !8821
  %1 = load i64, i64* %size.addr, align 8, !dbg !8822
  %2 = load i32, i32* %flags.addr, align 4, !dbg !8823
  %or = or i32 %2, 256, !dbg !8824
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #11, !dbg !8825
  ret i8* %call, !dbg !8826
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pm_genpd_opp_to_performance_state(%struct.device* %genpd_dev, %struct.dev_pm_opp* %opp) #0 !dbg !8827 {
entry:
  %retval = alloca i32, align 4
  %genpd_dev.addr = alloca %struct.device*, align 8
  %opp.addr = alloca %struct.dev_pm_opp*, align 8
  %genpd = alloca %struct.generic_pm_domain*, align 8
  %state = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.generic_pm_domain*, align 8
  store %struct.device* %genpd_dev, %struct.device** %genpd_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %genpd_dev.addr, metadata !8830, metadata !DIExpression()), !dbg !8831
  store %struct.dev_pm_opp* %opp, %struct.dev_pm_opp** %opp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp.addr, metadata !8832, metadata !DIExpression()), !dbg !8833
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd, metadata !8834, metadata !DIExpression()), !dbg !8835
  store %struct.generic_pm_domain* null, %struct.generic_pm_domain** %genpd, align 8, !dbg !8835
  call void @llvm.dbg.declare(metadata i32* %state, metadata !8836, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8838, metadata !DIExpression()), !dbg !8840
  %0 = load %struct.device*, %struct.device** %genpd_dev.addr, align 8, !dbg !8840
  %1 = bitcast %struct.device* %0 to i8*, !dbg !8840
  store i8* %1, i8** %__mptr, align 8, !dbg !8840
  br label %do.body, !dbg !8840

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8841

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8840
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !8840
  %3 = bitcast i8* %add.ptr to %struct.generic_pm_domain*, !dbg !8840
  store %struct.generic_pm_domain* %3, %struct.generic_pm_domain** %tmp, align 8, !dbg !8841
  %4 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %tmp, align 8, !dbg !8840
  store %struct.generic_pm_domain* %4, %struct.generic_pm_domain** %genpd, align 8, !dbg !8843
  %5 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !8844
  %opp_to_performance_state = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %5, i32 0, i32 22, !dbg !8844
  %6 = load i32 (%struct.generic_pm_domain*, %struct.dev_pm_opp*)*, i32 (%struct.generic_pm_domain*, %struct.dev_pm_opp*)** %opp_to_performance_state, align 8, !dbg !8844
  %tobool = icmp ne i32 (%struct.generic_pm_domain*, %struct.dev_pm_opp*)* %6, null, !dbg !8844
  %lnot = xor i1 %tobool, true, !dbg !8844
  %lnot1 = xor i1 %lnot, true, !dbg !8844
  %lnot2 = xor i1 %lnot1, true, !dbg !8844
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8844
  %conv = sext i32 %lnot.ext to i64, !dbg !8844
  %tobool3 = icmp ne i64 %conv, 0, !dbg !8844
  br i1 %tobool3, label %if.then, label %if.end, !dbg !8846

if.then:                                          ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !8847
  br label %return, !dbg !8847

if.end:                                           ; preds = %do.end
  %7 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !8848
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %7, i32 0, i32 38, !dbg !8848
  %8 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !8848
  %lock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %8, i32 0, i32 0, !dbg !8848
  %9 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %lock, align 8, !dbg !8848
  %10 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !8848
  call void %9(%struct.generic_pm_domain* %10) #11, !dbg !8848
  %11 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !8849
  %opp_to_performance_state4 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %11, i32 0, i32 22, !dbg !8850
  %12 = load i32 (%struct.generic_pm_domain*, %struct.dev_pm_opp*)*, i32 (%struct.generic_pm_domain*, %struct.dev_pm_opp*)** %opp_to_performance_state4, align 8, !dbg !8850
  %13 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !8851
  %14 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !8852
  %call = call i32 %12(%struct.generic_pm_domain* %13, %struct.dev_pm_opp* %14) #11, !dbg !8849
  store i32 %call, i32* %state, align 4, !dbg !8853
  %15 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !8854
  %lock_ops5 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %15, i32 0, i32 38, !dbg !8854
  %16 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops5, align 8, !dbg !8854
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %16, i32 0, i32 3, !dbg !8854
  %17 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !8854
  %18 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !8854
  call void %17(%struct.generic_pm_domain* %18) #11, !dbg !8854
  %19 = load i32, i32* %state, align 4, !dbg !8855
  store i32 %19, i32* %retval, align 4, !dbg !8856
  br label %return, !dbg !8856

return:                                           ; preds = %if.end, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !8857
  ret i32 %20, !dbg !8857
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_bus_init() #2 section ".init.text" !dbg !8858 {
entry:
  %call = call i32 @bus_register(%struct.bus_type* @genpd_bus_type) #11, !dbg !8859
  ret i32 %call, !dbg !8860
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.generic_pm_domain* @pd_to_genpd(%struct.dev_pm_domain* %pd) #0 !dbg !8861 {
entry:
  %pd.addr = alloca %struct.dev_pm_domain*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.generic_pm_domain*, align 8
  store %struct.dev_pm_domain* %pd, %struct.dev_pm_domain** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_domain** %pd.addr, metadata !8864, metadata !DIExpression()), !dbg !8865
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8866, metadata !DIExpression()), !dbg !8868
  %0 = load %struct.dev_pm_domain*, %struct.dev_pm_domain** %pd.addr, align 8, !dbg !8868
  %1 = bitcast %struct.dev_pm_domain* %0 to i8*, !dbg !8868
  store i8* %1, i8** %__mptr, align 8, !dbg !8868
  br label %do.body, !dbg !8868

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8869

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8868
  %add.ptr = getelementptr i8, i8* %2, i64 -696, !dbg !8868
  %3 = bitcast i8* %add.ptr to %struct.generic_pm_domain*, !dbg !8868
  store %struct.generic_pm_domain* %3, %struct.generic_pm_domain** %tmp, align 8, !dbg !8869
  %4 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %tmp, align 8, !dbg !8868
  ret %struct.generic_pm_domain* %4, !dbg !8871
}

; Function Attrs: noredzone
declare dso_local i32 @dev_pm_opp_xlate_performance_state(%struct.opp_table*, %struct.opp_table*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genpd_sync_power_off(%struct.generic_pm_domain* %genpd, i1 zeroext %use_lock, i32 %depth) #0 !dbg !8872 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !6292, metadata !DIExpression()), !dbg !8875
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6303, metadata !DIExpression()), !dbg !8879
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6307, metadata !DIExpression()), !dbg !8881
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !6309, metadata !DIExpression()), !dbg !8882
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %use_lock.addr = alloca i8, align 1
  %depth.addr = alloca i32, align 4
  %link = alloca %struct.gpd_link*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.gpd_link*, align 8
  %__mptr28 = alloca i8*, align 8
  %tmp33 = alloca %struct.gpd_link*, align 8
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !8883, metadata !DIExpression()), !dbg !8884
  %frombool = zext i1 %use_lock to i8
  store i8 %frombool, i8* %use_lock.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_lock.addr, metadata !8885, metadata !DIExpression()), !dbg !8886
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !8887, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.declare(metadata %struct.gpd_link** %link, metadata !8889, metadata !DIExpression()), !dbg !8890
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !8891
  %status = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %0, i32 0, i32 12, !dbg !8891
  %1 = load i32, i32* %status, align 4, !dbg !8891
  %cmp = icmp eq i32 %1, 0, !dbg !8891
  br i1 %cmp, label %lor.lhs.false, label %if.then, !dbg !8893

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !8894
  %flags = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %2, i32 0, i32 31, !dbg !8894
  %3 = load i32, i32* %flags, align 8, !dbg !8894
  %and = and i32 %3, 4, !dbg !8894
  %tobool = icmp ne i32 %and, 0, !dbg !8894
  br i1 %tobool, label %if.then, label %if.end, !dbg !8895

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %for.end, !dbg !8896

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !8897
  %suspended_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %4, i32 0, i32 14, !dbg !8898
  %5 = load i32, i32* %suspended_count, align 4, !dbg !8898
  %6 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !8899
  %device_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %6, i32 0, i32 13, !dbg !8900
  %7 = load i32, i32* %device_count, align 8, !dbg !8900
  %cmp1 = icmp ne i32 %5, %7, !dbg !8901
  br i1 %cmp1, label %if.then4, label %lor.lhs.false2, !dbg !8902

lor.lhs.false2:                                   ; preds = %if.end
  %8 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !8903
  %sd_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %8, i32 0, i32 11, !dbg !8904
  store %struct.atomic_t* %sd_count, %struct.atomic_t** %v.addr.i, align 8
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8905
  %10 = bitcast %struct.atomic_t* %9 to i8*, !dbg !8905
  store i8* %10, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %11 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8906
  %12 = load i64, i64* %size.addr.i.i, align 8, !dbg !8907
  %conv.i.i = trunc i64 %12 to i32, !dbg !8907
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %11, i32 %conv.i.i) #13, !dbg !8908
  %13 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8909
  %14 = load i64, i64* %size.addr.i.i, align 8, !dbg !8909
  call void @kcsan_check_access(i8* %13, i64 %14, i32 4) #13, !dbg !8909
  %15 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8910
  store %struct.atomic_t* %15, %struct.atomic_t** %v.addr.i1.i, align 8
  %16 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !8911
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %16, i32 0, i32 0, !dbg !8911
  %17 = load volatile i32, i32* %counter.i.i, align 4, !dbg !8911
  %cmp3 = icmp sgt i32 %17, 0, !dbg !8912
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !8913

if.then4:                                         ; preds = %lor.lhs.false2, %if.end
  br label %for.end, !dbg !8914

if.end5:                                          ; preds = %lor.lhs.false2
  %18 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !8915
  %state_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %18, i32 0, i32 34, !dbg !8916
  %19 = load i32, i32* %state_count, align 8, !dbg !8916
  %sub = sub i32 %19, 1, !dbg !8917
  %20 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !8918
  %state_idx = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %20, i32 0, i32 35, !dbg !8919
  store i32 %sub, i32* %state_idx, align 4, !dbg !8920
  %21 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !8921
  %call6 = call i32 @_genpd_power_off(%struct.generic_pm_domain* %21, i1 zeroext false) #11, !dbg !8923
  %tobool7 = icmp ne i32 %call6, 0, !dbg !8923
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !8924

if.then8:                                         ; preds = %if.end5
  br label %for.end, !dbg !8925

if.end9:                                          ; preds = %if.end5
  %22 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !8926
  %status10 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %22, i32 0, i32 12, !dbg !8927
  store i32 1, i32* %status10, align 4, !dbg !8928
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8929, metadata !DIExpression()), !dbg !8932
  %23 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !8932
  %child_links = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %23, i32 0, i32 4, !dbg !8932
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %child_links, i32 0, i32 0, !dbg !8932
  %24 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8932
  %25 = bitcast %struct.list_head* %24 to i8*, !dbg !8932
  store i8* %25, i8** %__mptr, align 8, !dbg !8932
  br label %do.body, !dbg !8932

do.body:                                          ; preds = %if.end9
  br label %do.end, !dbg !8933

do.end:                                           ; preds = %do.body
  %26 = load i8*, i8** %__mptr, align 8, !dbg !8932
  %add.ptr = getelementptr i8, i8* %26, i64 -32, !dbg !8932
  %27 = bitcast i8* %add.ptr to %struct.gpd_link*, !dbg !8932
  store %struct.gpd_link* %27, %struct.gpd_link** %tmp, align 8, !dbg !8933
  %28 = load %struct.gpd_link*, %struct.gpd_link** %tmp, align 8, !dbg !8932
  store %struct.gpd_link* %28, %struct.gpd_link** %link, align 8, !dbg !8935
  br label %for.cond, !dbg !8935

for.cond:                                         ; preds = %do.end32, %do.end
  %29 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !8936
  %child_node = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %29, i32 0, i32 3, !dbg !8936
  %30 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !8936
  %child_links11 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %30, i32 0, i32 4, !dbg !8936
  %cmp12 = icmp eq %struct.list_head* %child_node, %child_links11, !dbg !8936
  %lnot = xor i1 %cmp12, true, !dbg !8936
  br i1 %lnot, label %for.body, label %for.end, !dbg !8935

for.body:                                         ; preds = %for.cond
  %31 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !8938
  %parent = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %31, i32 0, i32 0, !dbg !8940
  %32 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !8940
  %call13 = call zeroext i1 @genpd_sd_counter_dec(%struct.generic_pm_domain* %32) #11, !dbg !8941
  %33 = load i8, i8* %use_lock.addr, align 1, !dbg !8942
  %tobool14 = trunc i8 %33 to i1, !dbg !8942
  br i1 %tobool14, label %if.then15, label %if.end18, !dbg !8944

if.then15:                                        ; preds = %for.body
  %34 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !8945
  %parent16 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %34, i32 0, i32 0, !dbg !8945
  %35 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent16, align 8, !dbg !8945
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %35, i32 0, i32 38, !dbg !8945
  %36 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !8945
  %lock_nested = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %36, i32 0, i32 1, !dbg !8945
  %37 = load void (%struct.generic_pm_domain*, i32)*, void (%struct.generic_pm_domain*, i32)** %lock_nested, align 8, !dbg !8945
  %38 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !8945
  %parent17 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %38, i32 0, i32 0, !dbg !8945
  %39 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent17, align 8, !dbg !8945
  %40 = load i32, i32* %depth.addr, align 4, !dbg !8945
  %add = add i32 %40, 1, !dbg !8945
  call void %37(%struct.generic_pm_domain* %39, i32 %add) #11, !dbg !8945
  br label %if.end18, !dbg !8945

if.end18:                                         ; preds = %if.then15, %for.body
  %41 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !8946
  %parent19 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %41, i32 0, i32 0, !dbg !8947
  %42 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent19, align 8, !dbg !8947
  %43 = load i8, i8* %use_lock.addr, align 1, !dbg !8948
  %tobool20 = trunc i8 %43 to i1, !dbg !8948
  %44 = load i32, i32* %depth.addr, align 4, !dbg !8949
  %add21 = add i32 %44, 1, !dbg !8950
  call void @genpd_sync_power_off(%struct.generic_pm_domain* %42, i1 zeroext %tobool20, i32 %add21) #11, !dbg !8951
  %45 = load i8, i8* %use_lock.addr, align 1, !dbg !8952
  %tobool22 = trunc i8 %45 to i1, !dbg !8952
  br i1 %tobool22, label %if.then23, label %if.end27, !dbg !8954

if.then23:                                        ; preds = %if.end18
  %46 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !8955
  %parent24 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %46, i32 0, i32 0, !dbg !8955
  %47 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent24, align 8, !dbg !8955
  %lock_ops25 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %47, i32 0, i32 38, !dbg !8955
  %48 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops25, align 8, !dbg !8955
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %48, i32 0, i32 3, !dbg !8955
  %49 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !8955
  %50 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !8955
  %parent26 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %50, i32 0, i32 0, !dbg !8955
  %51 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent26, align 8, !dbg !8955
  call void %49(%struct.generic_pm_domain* %51) #11, !dbg !8955
  br label %if.end27, !dbg !8955

if.end27:                                         ; preds = %if.then23, %if.end18
  br label %for.inc, !dbg !8956

for.inc:                                          ; preds = %if.end27
  call void @llvm.dbg.declare(metadata i8** %__mptr28, metadata !8957, metadata !DIExpression()), !dbg !8959
  %52 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !8959
  %child_node29 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %52, i32 0, i32 3, !dbg !8959
  %next30 = getelementptr inbounds %struct.list_head, %struct.list_head* %child_node29, i32 0, i32 0, !dbg !8959
  %53 = load %struct.list_head*, %struct.list_head** %next30, align 8, !dbg !8959
  %54 = bitcast %struct.list_head* %53 to i8*, !dbg !8959
  store i8* %54, i8** %__mptr28, align 8, !dbg !8959
  br label %do.body31, !dbg !8959

do.body31:                                        ; preds = %for.inc
  br label %do.end32, !dbg !8960

do.end32:                                         ; preds = %do.body31
  %55 = load i8*, i8** %__mptr28, align 8, !dbg !8959
  %add.ptr34 = getelementptr i8, i8* %55, i64 -32, !dbg !8959
  %56 = bitcast i8* %add.ptr34 to %struct.gpd_link*, !dbg !8959
  store %struct.gpd_link* %56, %struct.gpd_link** %tmp33, align 8, !dbg !8960
  %57 = load %struct.gpd_link*, %struct.gpd_link** %tmp33, align 8, !dbg !8959
  store %struct.gpd_link* %57, %struct.gpd_link** %link, align 8, !dbg !8936
  br label %for.cond, !dbg !8936, !llvm.loop !8962

for.end:                                          ; preds = %if.then, %if.then4, %if.then8, %for.cond
  ret void, !dbg !8964
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genpd_sync_power_on(%struct.generic_pm_domain* %genpd, i1 zeroext %use_lock, i32 %depth) #0 !dbg !8965 {
entry:
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %use_lock.addr = alloca i8, align 1
  %depth.addr = alloca i32, align 4
  %link = alloca %struct.gpd_link*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.gpd_link*, align 8
  %__mptr16 = alloca i8*, align 8
  %tmp21 = alloca %struct.gpd_link*, align 8
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !8966, metadata !DIExpression()), !dbg !8967
  %frombool = zext i1 %use_lock to i8
  store i8 %frombool, i8* %use_lock.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_lock.addr, metadata !8968, metadata !DIExpression()), !dbg !8969
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !8970, metadata !DIExpression()), !dbg !8971
  call void @llvm.dbg.declare(metadata %struct.gpd_link** %link, metadata !8972, metadata !DIExpression()), !dbg !8973
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !8974
  %status = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %0, i32 0, i32 12, !dbg !8974
  %1 = load i32, i32* %status, align 4, !dbg !8974
  %cmp = icmp eq i32 %1, 0, !dbg !8974
  br i1 %cmp, label %if.then, label %if.end, !dbg !8976

if.then:                                          ; preds = %entry
  br label %return, !dbg !8977

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8978, metadata !DIExpression()), !dbg !8981
  %2 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !8981
  %child_links = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %2, i32 0, i32 4, !dbg !8981
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %child_links, i32 0, i32 0, !dbg !8981
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8981
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !8981
  store i8* %4, i8** %__mptr, align 8, !dbg !8981
  br label %do.body, !dbg !8981

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !8982

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !8981
  %add.ptr = getelementptr i8, i8* %5, i64 -32, !dbg !8981
  %6 = bitcast i8* %add.ptr to %struct.gpd_link*, !dbg !8981
  store %struct.gpd_link* %6, %struct.gpd_link** %tmp, align 8, !dbg !8982
  %7 = load %struct.gpd_link*, %struct.gpd_link** %tmp, align 8, !dbg !8981
  store %struct.gpd_link* %7, %struct.gpd_link** %link, align 8, !dbg !8984
  br label %for.cond, !dbg !8984

for.cond:                                         ; preds = %do.end20, %do.end
  %8 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !8985
  %child_node = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %8, i32 0, i32 3, !dbg !8985
  %9 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !8985
  %child_links1 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %9, i32 0, i32 4, !dbg !8985
  %cmp2 = icmp eq %struct.list_head* %child_node, %child_links1, !dbg !8985
  %lnot = xor i1 %cmp2, true, !dbg !8985
  br i1 %lnot, label %for.body, label %for.end, !dbg !8984

for.body:                                         ; preds = %for.cond
  %10 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !8987
  %parent = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %10, i32 0, i32 0, !dbg !8989
  %11 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !8989
  call void @genpd_sd_counter_inc(%struct.generic_pm_domain* %11) #11, !dbg !8990
  %12 = load i8, i8* %use_lock.addr, align 1, !dbg !8991
  %tobool = trunc i8 %12 to i1, !dbg !8991
  br i1 %tobool, label %if.then3, label %if.end6, !dbg !8993

if.then3:                                         ; preds = %for.body
  %13 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !8994
  %parent4 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %13, i32 0, i32 0, !dbg !8994
  %14 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent4, align 8, !dbg !8994
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %14, i32 0, i32 38, !dbg !8994
  %15 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !8994
  %lock_nested = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %15, i32 0, i32 1, !dbg !8994
  %16 = load void (%struct.generic_pm_domain*, i32)*, void (%struct.generic_pm_domain*, i32)** %lock_nested, align 8, !dbg !8994
  %17 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !8994
  %parent5 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %17, i32 0, i32 0, !dbg !8994
  %18 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent5, align 8, !dbg !8994
  %19 = load i32, i32* %depth.addr, align 4, !dbg !8994
  %add = add i32 %19, 1, !dbg !8994
  call void %16(%struct.generic_pm_domain* %18, i32 %add) #11, !dbg !8994
  br label %if.end6, !dbg !8994

if.end6:                                          ; preds = %if.then3, %for.body
  %20 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !8995
  %parent7 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %20, i32 0, i32 0, !dbg !8996
  %21 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent7, align 8, !dbg !8996
  %22 = load i8, i8* %use_lock.addr, align 1, !dbg !8997
  %tobool8 = trunc i8 %22 to i1, !dbg !8997
  %23 = load i32, i32* %depth.addr, align 4, !dbg !8998
  %add9 = add i32 %23, 1, !dbg !8999
  call void @genpd_sync_power_on(%struct.generic_pm_domain* %21, i1 zeroext %tobool8, i32 %add9) #11, !dbg !9000
  %24 = load i8, i8* %use_lock.addr, align 1, !dbg !9001
  %tobool10 = trunc i8 %24 to i1, !dbg !9001
  br i1 %tobool10, label %if.then11, label %if.end15, !dbg !9003

if.then11:                                        ; preds = %if.end6
  %25 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !9004
  %parent12 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %25, i32 0, i32 0, !dbg !9004
  %26 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent12, align 8, !dbg !9004
  %lock_ops13 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %26, i32 0, i32 38, !dbg !9004
  %27 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops13, align 8, !dbg !9004
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %27, i32 0, i32 3, !dbg !9004
  %28 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !9004
  %29 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !9004
  %parent14 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %29, i32 0, i32 0, !dbg !9004
  %30 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent14, align 8, !dbg !9004
  call void %28(%struct.generic_pm_domain* %30) #11, !dbg !9004
  br label %if.end15, !dbg !9004

if.end15:                                         ; preds = %if.then11, %if.end6
  br label %for.inc, !dbg !9005

for.inc:                                          ; preds = %if.end15
  call void @llvm.dbg.declare(metadata i8** %__mptr16, metadata !9006, metadata !DIExpression()), !dbg !9008
  %31 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !9008
  %child_node17 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %31, i32 0, i32 3, !dbg !9008
  %next18 = getelementptr inbounds %struct.list_head, %struct.list_head* %child_node17, i32 0, i32 0, !dbg !9008
  %32 = load %struct.list_head*, %struct.list_head** %next18, align 8, !dbg !9008
  %33 = bitcast %struct.list_head* %32 to i8*, !dbg !9008
  store i8* %33, i8** %__mptr16, align 8, !dbg !9008
  br label %do.body19, !dbg !9008

do.body19:                                        ; preds = %for.inc
  br label %do.end20, !dbg !9009

do.end20:                                         ; preds = %do.body19
  %34 = load i8*, i8** %__mptr16, align 8, !dbg !9008
  %add.ptr22 = getelementptr i8, i8* %34, i64 -32, !dbg !9008
  %35 = bitcast i8* %add.ptr22 to %struct.gpd_link*, !dbg !9008
  store %struct.gpd_link* %35, %struct.gpd_link** %tmp21, align 8, !dbg !9009
  %36 = load %struct.gpd_link*, %struct.gpd_link** %tmp21, align 8, !dbg !9008
  store %struct.gpd_link* %36, %struct.gpd_link** %link, align 8, !dbg !8985
  br label %for.cond, !dbg !8985, !llvm.loop !9011

for.end:                                          ; preds = %for.cond
  %37 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9013
  %call = call i32 @_genpd_power_on(%struct.generic_pm_domain* %37, i1 zeroext false) #11, !dbg !9014
  %38 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9015
  %status23 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %38, i32 0, i32 12, !dbg !9016
  store i32 0, i32* %status23, align 4, !dbg !9017
  br label %return, !dbg !9018

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !9018
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_genpd_power_off(%struct.generic_pm_domain* %genpd, i1 zeroext %timed) #0 !dbg !9019 {
entry:
  %retval = alloca i32, align 4
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %timed.addr = alloca i8, align 1
  %state_idx = alloca i32, align 4
  %time_start = alloca i64, align 8
  %elapsed_ns = alloca i64, align 8
  %ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !9022, metadata !DIExpression()), !dbg !9023
  %frombool = zext i1 %timed to i8
  store i8 %frombool, i8* %timed.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %timed.addr, metadata !9024, metadata !DIExpression()), !dbg !9025
  call void @llvm.dbg.declare(metadata i32* %state_idx, metadata !9026, metadata !DIExpression()), !dbg !9027
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9028
  %state_idx1 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %0, i32 0, i32 35, !dbg !9029
  %1 = load i32, i32* %state_idx1, align 4, !dbg !9029
  store i32 %1, i32* %state_idx, align 4, !dbg !9027
  call void @llvm.dbg.declare(metadata i64* %time_start, metadata !9030, metadata !DIExpression()), !dbg !9031
  call void @llvm.dbg.declare(metadata i64* %elapsed_ns, metadata !9032, metadata !DIExpression()), !dbg !9033
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9034, metadata !DIExpression()), !dbg !9035
  %2 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9036
  %power_notifiers = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %2, i32 0, i32 20, !dbg !9037
  %call = call i32 @raw_notifier_call_chain_robust(%struct.raw_notifier_head* %power_notifiers, i64 0, i64 3, i8* null) #11, !dbg !9038
  store i32 %call, i32* %ret, align 4, !dbg !9039
  %3 = load i32, i32* %ret, align 4, !dbg !9040
  %call2 = call i32 @notifier_to_errno(i32 %3) #11, !dbg !9041
  store i32 %call2, i32* %ret, align 4, !dbg !9042
  %4 = load i32, i32* %ret, align 4, !dbg !9043
  %tobool = icmp ne i32 %4, 0, !dbg !9043
  br i1 %tobool, label %if.then, label %if.end, !dbg !9045

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %ret, align 4, !dbg !9046
  store i32 %5, i32* %retval, align 4, !dbg !9047
  br label %return, !dbg !9047

if.end:                                           ; preds = %entry
  %6 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9048
  %power_off = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %6, i32 0, i32 18, !dbg !9050
  %7 = load i32 (%struct.generic_pm_domain*)*, i32 (%struct.generic_pm_domain*)** %power_off, align 8, !dbg !9050
  %tobool3 = icmp ne i32 (%struct.generic_pm_domain*)* %7, null, !dbg !9048
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !9051

if.then4:                                         ; preds = %if.end
  br label %out, !dbg !9052

if.end5:                                          ; preds = %if.end
  %8 = load i8, i8* %timed.addr, align 1, !dbg !9053
  %tobool6 = trunc i8 %8 to i1, !dbg !9053
  br i1 %tobool6, label %if.end13, label %if.then7, !dbg !9055

if.then7:                                         ; preds = %if.end5
  %9 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9056
  %power_off8 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %9, i32 0, i32 18, !dbg !9058
  %10 = load i32 (%struct.generic_pm_domain*)*, i32 (%struct.generic_pm_domain*)** %power_off8, align 8, !dbg !9058
  %11 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9059
  %call9 = call i32 %10(%struct.generic_pm_domain* %11) #11, !dbg !9056
  store i32 %call9, i32* %ret, align 4, !dbg !9060
  %12 = load i32, i32* %ret, align 4, !dbg !9061
  %tobool10 = icmp ne i32 %12, 0, !dbg !9061
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !9063

if.then11:                                        ; preds = %if.then7
  br label %busy, !dbg !9064

if.end12:                                         ; preds = %if.then7
  br label %out, !dbg !9065

if.end13:                                         ; preds = %if.end5
  %call14 = call i64 @ktime_get() #11, !dbg !9066
  store i64 %call14, i64* %time_start, align 8, !dbg !9067
  %13 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9068
  %power_off15 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %13, i32 0, i32 18, !dbg !9069
  %14 = load i32 (%struct.generic_pm_domain*)*, i32 (%struct.generic_pm_domain*)** %power_off15, align 8, !dbg !9069
  %15 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9070
  %call16 = call i32 %14(%struct.generic_pm_domain* %15) #11, !dbg !9068
  store i32 %call16, i32* %ret, align 4, !dbg !9071
  %16 = load i32, i32* %ret, align 4, !dbg !9072
  %tobool17 = icmp ne i32 %16, 0, !dbg !9072
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !9074

if.then18:                                        ; preds = %if.end13
  br label %busy, !dbg !9075

if.end19:                                         ; preds = %if.end13
  %call20 = call i64 @ktime_get() #11, !dbg !9076
  %17 = load i64, i64* %time_start, align 8, !dbg !9076
  %sub = sub i64 %call20, %17, !dbg !9076
  %call21 = call i64 @ktime_to_ns(i64 %sub) #11, !dbg !9077
  store i64 %call21, i64* %elapsed_ns, align 8, !dbg !9078
  %18 = load i64, i64* %elapsed_ns, align 8, !dbg !9079
  %19 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9081
  %states = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %19, i32 0, i32 32, !dbg !9082
  %20 = load %struct.genpd_power_state*, %struct.genpd_power_state** %states, align 8, !dbg !9082
  %21 = load i32, i32* %state_idx, align 4, !dbg !9083
  %idxprom = zext i32 %21 to i64, !dbg !9081
  %arrayidx = getelementptr %struct.genpd_power_state, %struct.genpd_power_state* %20, i64 %idxprom, !dbg !9081
  %power_off_latency_ns = getelementptr inbounds %struct.genpd_power_state, %struct.genpd_power_state* %arrayidx, i32 0, i32 0, !dbg !9084
  %22 = load i64, i64* %power_off_latency_ns, align 8, !dbg !9084
  %cmp = icmp sle i64 %18, %22, !dbg !9085
  br i1 %cmp, label %if.then22, label %if.end23, !dbg !9086

if.then22:                                        ; preds = %if.end19
  br label %out, !dbg !9087

if.end23:                                         ; preds = %if.end19
  %23 = load i64, i64* %elapsed_ns, align 8, !dbg !9088
  %24 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9089
  %states24 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %24, i32 0, i32 32, !dbg !9090
  %25 = load %struct.genpd_power_state*, %struct.genpd_power_state** %states24, align 8, !dbg !9090
  %26 = load i32, i32* %state_idx, align 4, !dbg !9091
  %idxprom25 = zext i32 %26 to i64, !dbg !9089
  %arrayidx26 = getelementptr %struct.genpd_power_state, %struct.genpd_power_state* %25, i64 %idxprom25, !dbg !9089
  %power_off_latency_ns27 = getelementptr inbounds %struct.genpd_power_state, %struct.genpd_power_state* %arrayidx26, i32 0, i32 0, !dbg !9092
  store i64 %23, i64* %power_off_latency_ns27, align 8, !dbg !9093
  %27 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9094
  %max_off_time_changed = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %27, i32 0, i32 26, !dbg !9095
  store i8 1, i8* %max_off_time_changed, align 8, !dbg !9096
  store i32 0, i32* %tmp, align 4, !dbg !9097
  %28 = load i32, i32* %tmp, align 4, !dbg !9100
  br label %out, !dbg !9101

out:                                              ; preds = %if.end23, %if.then22, %if.end12, %if.then4
  call void @llvm.dbg.label(metadata !9102), !dbg !9103
  %29 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9104
  %power_notifiers28 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %29, i32 0, i32 20, !dbg !9105
  %call29 = call i32 @raw_notifier_call_chain(%struct.raw_notifier_head* %power_notifiers28, i64 1, i8* null) #11, !dbg !9106
  store i32 0, i32* %retval, align 4, !dbg !9107
  br label %return, !dbg !9107

busy:                                             ; preds = %if.then18, %if.then11
  call void @llvm.dbg.label(metadata !9108), !dbg !9109
  %30 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9110
  %power_notifiers30 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %30, i32 0, i32 20, !dbg !9111
  %call31 = call i32 @raw_notifier_call_chain(%struct.raw_notifier_head* %power_notifiers30, i64 3, i8* null) #11, !dbg !9112
  %31 = load i32, i32* %ret, align 4, !dbg !9113
  store i32 %31, i32* %retval, align 4, !dbg !9114
  br label %return, !dbg !9114

return:                                           ; preds = %busy, %out, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !9115
  ret i32 %32, !dbg !9115
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !9116 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !9120, metadata !DIExpression()), !dbg !9121
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !9122, metadata !DIExpression()), !dbg !9123
  ret i1 true, !dbg !9124
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !9125 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9129, metadata !DIExpression()), !dbg !9130
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9131, metadata !DIExpression()), !dbg !9132
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !9133, metadata !DIExpression()), !dbg !9134
  ret void, !dbg !9135
}

; Function Attrs: noredzone
declare dso_local i32 @raw_notifier_call_chain_robust(%struct.raw_notifier_head*, i64, i64, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @notifier_to_errno(i32 %ret) #0 !dbg !9136 {
entry:
  %ret.addr = alloca i32, align 4
  store i32 %ret, i32* %ret.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ret.addr, metadata !9137, metadata !DIExpression()), !dbg !9138
  %0 = load i32, i32* %ret.addr, align 4, !dbg !9139
  %and = and i32 %0, -32769, !dbg !9139
  store i32 %and, i32* %ret.addr, align 4, !dbg !9139
  %1 = load i32, i32* %ret.addr, align 4, !dbg !9140
  %cmp = icmp sgt i32 %1, 1, !dbg !9141
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9140

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %ret.addr, align 4, !dbg !9142
  %sub = sub i32 1, %2, !dbg !9143
  br label %cond.end, !dbg !9140

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9140

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ 0, %cond.false ], !dbg !9140
  ret i32 %cond, !dbg !9144
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ktime_to_ns(i64 %kt) #0 !dbg !9145 {
entry:
  %kt.addr = alloca i64, align 8
  store i64 %kt, i64* %kt.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %kt.addr, metadata !9149, metadata !DIExpression()), !dbg !9150
  %0 = load i64, i64* %kt.addr, align 8, !dbg !9151
  ret i64 %0, !dbg !9152
}

; Function Attrs: noredzone
declare dso_local i32 @raw_notifier_call_chain(%struct.raw_notifier_head*, i64, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genpd_sd_counter_inc(%struct.generic_pm_domain* %genpd) #0 !dbg !9153 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !9154, metadata !DIExpression()), !dbg !9158
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6278, metadata !DIExpression()), !dbg !9162
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6288, metadata !DIExpression()), !dbg !9164
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !9165, metadata !DIExpression()), !dbg !9166
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !9167, metadata !DIExpression()), !dbg !9168
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9169
  %sd_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %0, i32 0, i32 11, !dbg !9170
  store %struct.atomic_t* %sd_count, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9171
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !9171
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9172
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !9173
  %conv.i.i = trunc i64 %4 to i32, !dbg !9173
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #13, !dbg !9174
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9175
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !9175
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #13, !dbg !9175
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9176
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !9177
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !9178
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #7, !dbg !9179, !srcloc !9180
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9181, !srcloc !9182
  ret void, !dbg !9183
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_genpd_power_on(%struct.generic_pm_domain* %genpd, i1 zeroext %timed) #0 !dbg !9184 {
entry:
  %retval = alloca i32, align 4
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %timed.addr = alloca i8, align 1
  %state_idx = alloca i32, align 4
  %time_start = alloca i64, align 8
  %elapsed_ns = alloca i64, align 8
  %ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !9185, metadata !DIExpression()), !dbg !9186
  %frombool = zext i1 %timed to i8
  store i8 %frombool, i8* %timed.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %timed.addr, metadata !9187, metadata !DIExpression()), !dbg !9188
  call void @llvm.dbg.declare(metadata i32* %state_idx, metadata !9189, metadata !DIExpression()), !dbg !9190
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9191
  %state_idx1 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %0, i32 0, i32 35, !dbg !9192
  %1 = load i32, i32* %state_idx1, align 4, !dbg !9192
  store i32 %1, i32* %state_idx, align 4, !dbg !9190
  call void @llvm.dbg.declare(metadata i64* %time_start, metadata !9193, metadata !DIExpression()), !dbg !9194
  call void @llvm.dbg.declare(metadata i64* %elapsed_ns, metadata !9195, metadata !DIExpression()), !dbg !9196
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9197, metadata !DIExpression()), !dbg !9198
  %2 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9199
  %power_notifiers = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %2, i32 0, i32 20, !dbg !9200
  %call = call i32 @raw_notifier_call_chain_robust(%struct.raw_notifier_head* %power_notifiers, i64 2, i64 1, i8* null) #11, !dbg !9201
  store i32 %call, i32* %ret, align 4, !dbg !9202
  %3 = load i32, i32* %ret, align 4, !dbg !9203
  %call2 = call i32 @notifier_to_errno(i32 %3) #11, !dbg !9204
  store i32 %call2, i32* %ret, align 4, !dbg !9205
  %4 = load i32, i32* %ret, align 4, !dbg !9206
  %tobool = icmp ne i32 %4, 0, !dbg !9206
  br i1 %tobool, label %if.then, label %if.end, !dbg !9208

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %ret, align 4, !dbg !9209
  store i32 %5, i32* %retval, align 4, !dbg !9210
  br label %return, !dbg !9210

if.end:                                           ; preds = %entry
  %6 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9211
  %power_on = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %6, i32 0, i32 19, !dbg !9213
  %7 = load i32 (%struct.generic_pm_domain*)*, i32 (%struct.generic_pm_domain*)** %power_on, align 8, !dbg !9213
  %tobool3 = icmp ne i32 (%struct.generic_pm_domain*)* %7, null, !dbg !9211
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !9214

if.then4:                                         ; preds = %if.end
  br label %out, !dbg !9215

if.end5:                                          ; preds = %if.end
  %8 = load i8, i8* %timed.addr, align 1, !dbg !9216
  %tobool6 = trunc i8 %8 to i1, !dbg !9216
  br i1 %tobool6, label %if.end13, label %if.then7, !dbg !9218

if.then7:                                         ; preds = %if.end5
  %9 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9219
  %power_on8 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %9, i32 0, i32 19, !dbg !9221
  %10 = load i32 (%struct.generic_pm_domain*)*, i32 (%struct.generic_pm_domain*)** %power_on8, align 8, !dbg !9221
  %11 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9222
  %call9 = call i32 %10(%struct.generic_pm_domain* %11) #11, !dbg !9219
  store i32 %call9, i32* %ret, align 4, !dbg !9223
  %12 = load i32, i32* %ret, align 4, !dbg !9224
  %tobool10 = icmp ne i32 %12, 0, !dbg !9224
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !9226

if.then11:                                        ; preds = %if.then7
  br label %err, !dbg !9227

if.end12:                                         ; preds = %if.then7
  br label %out, !dbg !9228

if.end13:                                         ; preds = %if.end5
  %call14 = call i64 @ktime_get() #11, !dbg !9229
  store i64 %call14, i64* %time_start, align 8, !dbg !9230
  %13 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9231
  %power_on15 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %13, i32 0, i32 19, !dbg !9232
  %14 = load i32 (%struct.generic_pm_domain*)*, i32 (%struct.generic_pm_domain*)** %power_on15, align 8, !dbg !9232
  %15 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9233
  %call16 = call i32 %14(%struct.generic_pm_domain* %15) #11, !dbg !9231
  store i32 %call16, i32* %ret, align 4, !dbg !9234
  %16 = load i32, i32* %ret, align 4, !dbg !9235
  %tobool17 = icmp ne i32 %16, 0, !dbg !9235
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !9237

if.then18:                                        ; preds = %if.end13
  br label %err, !dbg !9238

if.end19:                                         ; preds = %if.end13
  %call20 = call i64 @ktime_get() #11, !dbg !9239
  %17 = load i64, i64* %time_start, align 8, !dbg !9239
  %sub = sub i64 %call20, %17, !dbg !9239
  %call21 = call i64 @ktime_to_ns(i64 %sub) #11, !dbg !9240
  store i64 %call21, i64* %elapsed_ns, align 8, !dbg !9241
  %18 = load i64, i64* %elapsed_ns, align 8, !dbg !9242
  %19 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9244
  %states = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %19, i32 0, i32 32, !dbg !9245
  %20 = load %struct.genpd_power_state*, %struct.genpd_power_state** %states, align 8, !dbg !9245
  %21 = load i32, i32* %state_idx, align 4, !dbg !9246
  %idxprom = zext i32 %21 to i64, !dbg !9244
  %arrayidx = getelementptr %struct.genpd_power_state, %struct.genpd_power_state* %20, i64 %idxprom, !dbg !9244
  %power_on_latency_ns = getelementptr inbounds %struct.genpd_power_state, %struct.genpd_power_state* %arrayidx, i32 0, i32 1, !dbg !9247
  %22 = load i64, i64* %power_on_latency_ns, align 8, !dbg !9247
  %cmp = icmp sle i64 %18, %22, !dbg !9248
  br i1 %cmp, label %if.then22, label %if.end23, !dbg !9249

if.then22:                                        ; preds = %if.end19
  br label %out, !dbg !9250

if.end23:                                         ; preds = %if.end19
  %23 = load i64, i64* %elapsed_ns, align 8, !dbg !9251
  %24 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9252
  %states24 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %24, i32 0, i32 32, !dbg !9253
  %25 = load %struct.genpd_power_state*, %struct.genpd_power_state** %states24, align 8, !dbg !9253
  %26 = load i32, i32* %state_idx, align 4, !dbg !9254
  %idxprom25 = zext i32 %26 to i64, !dbg !9252
  %arrayidx26 = getelementptr %struct.genpd_power_state, %struct.genpd_power_state* %25, i64 %idxprom25, !dbg !9252
  %power_on_latency_ns27 = getelementptr inbounds %struct.genpd_power_state, %struct.genpd_power_state* %arrayidx26, i32 0, i32 1, !dbg !9255
  store i64 %23, i64* %power_on_latency_ns27, align 8, !dbg !9256
  %27 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9257
  %max_off_time_changed = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %27, i32 0, i32 26, !dbg !9258
  store i8 1, i8* %max_off_time_changed, align 8, !dbg !9259
  store i32 0, i32* %tmp, align 4, !dbg !9260
  %28 = load i32, i32* %tmp, align 4, !dbg !9263
  br label %out, !dbg !9264

out:                                              ; preds = %if.end23, %if.then22, %if.end12, %if.then4
  call void @llvm.dbg.label(metadata !9265), !dbg !9266
  %29 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9267
  %power_notifiers28 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %29, i32 0, i32 20, !dbg !9268
  %call29 = call i32 @raw_notifier_call_chain(%struct.raw_notifier_head* %power_notifiers28, i64 3, i8* null) #11, !dbg !9269
  store i32 0, i32* %retval, align 4, !dbg !9270
  br label %return, !dbg !9270

err:                                              ; preds = %if.then18, %if.then11
  call void @llvm.dbg.label(metadata !9271), !dbg !9272
  %30 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9273
  %power_notifiers30 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %30, i32 0, i32 20, !dbg !9274
  %call31 = call i32 @raw_notifier_call_chain(%struct.raw_notifier_head* %power_notifiers30, i64 1, i8* null) #11, !dbg !9275
  %31 = load i32, i32* %ret, align 4, !dbg !9276
  store i32 %31, i32* %retval, align 4, !dbg !9277
  br label %return, !dbg !9277

return:                                           ; preds = %err, %out, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !9278
  ret i32 %32, !dbg !9278
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !9279 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !9280, metadata !DIExpression()), !dbg !9281
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !9282, metadata !DIExpression()), !dbg !9283
  ret i1 true, !dbg !9284
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.generic_pm_domain_data* @genpd_alloc_dev_data(%struct.device* %dev) #0 !dbg !9285 {
entry:
  %lock.addr.i24 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i24, metadata !9288, metadata !DIExpression()), !dbg !9292
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !9288, metadata !DIExpression()), !dbg !9294
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9296, metadata !DIExpression()), !dbg !9298
  %retval = alloca %struct.generic_pm_domain_data*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %gpd_data = alloca %struct.generic_pm_domain_data*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9300, metadata !DIExpression()), !dbg !9301
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain_data** %gpd_data, metadata !9302, metadata !DIExpression()), !dbg !9303
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9304, metadata !DIExpression()), !dbg !9305
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9306
  %call = call i32 @dev_pm_get_subsys_data(%struct.device* %0) #11, !dbg !9307
  store i32 %call, i32* %ret, align 4, !dbg !9308
  %1 = load i32, i32* %ret, align 4, !dbg !9309
  %tobool = icmp ne i32 %1, 0, !dbg !9309
  br i1 %tobool, label %if.then, label %if.end, !dbg !9311

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !9312
  %conv = sext i32 %2 to i64, !dbg !9312
  %call1 = call i8* @ERR_PTR(i64 %conv) #11, !dbg !9313
  %3 = bitcast i8* %call1 to %struct.generic_pm_domain_data*, !dbg !9313
  store %struct.generic_pm_domain_data* %3, %struct.generic_pm_domain_data** %retval, align 8, !dbg !9314
  br label %return, !dbg !9314

if.end:                                           ; preds = %entry
  %call2 = call i8* @kzalloc(i64 104, i32 3264) #11, !dbg !9315
  %4 = bitcast i8* %call2 to %struct.generic_pm_domain_data*, !dbg !9315
  store %struct.generic_pm_domain_data* %4, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !9316
  %5 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !9317
  %tobool3 = icmp ne %struct.generic_pm_domain_data* %5, null, !dbg !9317
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !9319

if.then4:                                         ; preds = %if.end
  store i32 -12, i32* %ret, align 4, !dbg !9320
  br label %err_put, !dbg !9322

if.end5:                                          ; preds = %if.end
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9323
  %7 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !9324
  %base = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %7, i32 0, i32 0, !dbg !9325
  %dev6 = getelementptr inbounds %struct.pm_domain_data, %struct.pm_domain_data* %base, i32 0, i32 1, !dbg !9326
  store %struct.device* %6, %struct.device** %dev6, align 8, !dbg !9327
  %8 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !9328
  %td = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %8, i32 0, i32 1, !dbg !9329
  %constraint_changed = getelementptr inbounds %struct.gpd_timing_data, %struct.gpd_timing_data* %td, i32 0, i32 3, !dbg !9330
  store i8 1, i8* %constraint_changed, align 8, !dbg !9331
  %9 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !9332
  %td7 = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %9, i32 0, i32 1, !dbg !9333
  %effective_constraint_ns = getelementptr inbounds %struct.gpd_timing_data, %struct.gpd_timing_data* %td7, i32 0, i32 2, !dbg !9334
  store i64 2147483647000, i64* %effective_constraint_ns, align 8, !dbg !9335
  %10 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !9336
  %nb = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %10, i32 0, i32 2, !dbg !9337
  %notifier_call = getelementptr inbounds %struct.notifier_block, %struct.notifier_block* %nb, i32 0, i32 0, !dbg !9338
  store i32 (%struct.notifier_block*, i64, i8*)* @genpd_dev_pm_qos_notifier, i32 (%struct.notifier_block*, i64, i8*)** %notifier_call, align 8, !dbg !9339
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9340
  %power = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 11, !dbg !9341
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 3, !dbg !9342
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #13, !dbg !9343
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9346, !srcloc !9348
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9349
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !9349
  %rlock.i = bitcast %union.anon.1* %13 to %struct.raw_spinlock*, !dbg !9349
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9351
  %power8 = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 11, !dbg !9353
  %subsys_data = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power8, i32 0, i32 25, !dbg !9354
  %15 = load %struct.pm_subsys_data*, %struct.pm_subsys_data** %subsys_data, align 8, !dbg !9354
  %domain_data = getelementptr inbounds %struct.pm_subsys_data, %struct.pm_subsys_data* %15, i32 0, i32 3, !dbg !9355
  %16 = load %struct.pm_domain_data*, %struct.pm_domain_data** %domain_data, align 8, !dbg !9355
  %tobool9 = icmp ne %struct.pm_domain_data* %16, null, !dbg !9351
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !9356

if.then10:                                        ; preds = %if.end5
  store i32 -22, i32* %ret, align 4, !dbg !9357
  br label %err_free, !dbg !9359

if.end11:                                         ; preds = %if.end5
  %17 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !9360
  %base12 = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %17, i32 0, i32 0, !dbg !9361
  %18 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9362
  %power13 = getelementptr inbounds %struct.device, %struct.device* %18, i32 0, i32 11, !dbg !9363
  %subsys_data14 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power13, i32 0, i32 25, !dbg !9364
  %19 = load %struct.pm_subsys_data*, %struct.pm_subsys_data** %subsys_data14, align 8, !dbg !9364
  %domain_data15 = getelementptr inbounds %struct.pm_subsys_data, %struct.pm_subsys_data* %19, i32 0, i32 3, !dbg !9365
  store %struct.pm_domain_data* %base12, %struct.pm_domain_data** %domain_data15, align 8, !dbg !9366
  %20 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9367
  %power16 = getelementptr inbounds %struct.device, %struct.device* %20, i32 0, i32 11, !dbg !9368
  %lock17 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power16, i32 0, i32 3, !dbg !9369
  store %struct.spinlock* %lock17, %struct.spinlock** %lock.addr.i22, align 8
  call void @arch_local_irq_enable() #13, !dbg !9370
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9373, !srcloc !9375
  %21 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !9376
  %22 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %21, i32 0, i32 0, !dbg !9376
  %rlock.i23 = bitcast %union.anon.1* %22 to %struct.raw_spinlock*, !dbg !9376
  %23 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !9378
  store %struct.generic_pm_domain_data* %23, %struct.generic_pm_domain_data** %retval, align 8, !dbg !9379
  br label %return, !dbg !9379

err_free:                                         ; preds = %if.then10
  call void @llvm.dbg.label(metadata !9380), !dbg !9381
  %24 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9382
  %power18 = getelementptr inbounds %struct.device, %struct.device* %24, i32 0, i32 11, !dbg !9383
  %lock19 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power18, i32 0, i32 3, !dbg !9384
  store %struct.spinlock* %lock19, %struct.spinlock** %lock.addr.i24, align 8
  call void @arch_local_irq_enable() #13, !dbg !9385
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9386, !srcloc !9375
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i24, align 8, !dbg !9387
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !9387
  %rlock.i25 = bitcast %union.anon.1* %26 to %struct.raw_spinlock*, !dbg !9387
  %27 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !9388
  %28 = bitcast %struct.generic_pm_domain_data* %27 to i8*, !dbg !9388
  call void @kfree(i8* %28) #11, !dbg !9389
  br label %err_put, !dbg !9389

err_put:                                          ; preds = %err_free, %if.then4
  call void @llvm.dbg.label(metadata !9390), !dbg !9391
  %29 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9392
  call void @dev_pm_put_subsys_data(%struct.device* %29) #11, !dbg !9393
  %30 = load i32, i32* %ret, align 4, !dbg !9394
  %conv20 = sext i32 %30 to i64, !dbg !9394
  %call21 = call i8* @ERR_PTR(i64 %conv20) #11, !dbg !9395
  %31 = bitcast i8* %call21 to %struct.generic_pm_domain_data*, !dbg !9395
  store %struct.generic_pm_domain_data* %31, %struct.generic_pm_domain_data** %retval, align 8, !dbg !9396
  br label %return, !dbg !9396

return:                                           ; preds = %err_put, %if.end11, %if.then
  %32 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %retval, align 8, !dbg !9397
  ret %struct.generic_pm_domain_data* %32, !dbg !9397
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_get_cpu(%struct.generic_pm_domain* %genpd, %struct.device* %dev) #0 !dbg !9398 {
entry:
  %retval = alloca i32, align 4
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %cpu = alloca i32, align 4
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !9399, metadata !DIExpression()), !dbg !9400
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9401, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.declare(metadata i32* %cpu, metadata !9403, metadata !DIExpression()), !dbg !9404
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9405
  %flags = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %0, i32 0, i32 31, !dbg !9405
  %1 = load i32, i32* %flags, align 8, !dbg !9405
  %and = and i32 %1, 16, !dbg !9405
  %tobool = icmp ne i32 %and, 0, !dbg !9405
  br i1 %tobool, label %if.end, label %if.then, !dbg !9407

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !9408
  br label %return, !dbg !9408

if.end:                                           ; preds = %entry
  store i32 0, i32* %cpu, align 4, !dbg !9409
  br label %for.cond, !dbg !9409

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %cpu, align 4, !dbg !9411
  %cmp = icmp slt i32 %2, 1, !dbg !9411
  br i1 %cmp, label %for.body, label %for.end, !dbg !9409

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %cpu, align 4, !dbg !9413
  %call = call %struct.device* @get_cpu_device(i32 %3) #11, !dbg !9416
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9417
  %cmp1 = icmp eq %struct.device* %call, %4, !dbg !9418
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !9419

if.then2:                                         ; preds = %for.body
  %5 = load i32, i32* %cpu, align 4, !dbg !9420
  store i32 %5, i32* %retval, align 4, !dbg !9421
  br label %return, !dbg !9421

if.end3:                                          ; preds = %for.body
  br label %for.inc, !dbg !9422

for.inc:                                          ; preds = %if.end3
  %6 = load i32, i32* %cpu, align 4, !dbg !9411
  %inc = add i32 %6, 1, !dbg !9411
  store i32 %inc, i32* %cpu, align 4, !dbg !9411
  br label %for.cond, !dbg !9411, !llvm.loop !9423

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !9425
  br label %return, !dbg !9425

return:                                           ; preds = %for.end, %if.then2, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !9426
  ret i32 %7, !dbg !9426
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genpd_set_cpumask(%struct.generic_pm_domain* %genpd, i32 %cpu) #0 !dbg !9427 {
entry:
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %cpu.addr = alloca i32, align 4
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !9428, metadata !DIExpression()), !dbg !9429
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !9430, metadata !DIExpression()), !dbg !9431
  %0 = load i32, i32* %cpu.addr, align 4, !dbg !9432
  %cmp = icmp sge i32 %0, 0, !dbg !9434
  br i1 %cmp, label %if.then, label %if.end, !dbg !9435

if.then:                                          ; preds = %entry
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9436
  %2 = load i32, i32* %cpu.addr, align 4, !dbg !9437
  call void @genpd_update_cpumask(%struct.generic_pm_domain* %1, i32 %2, i1 zeroext true, i32 0) #11, !dbg !9438
  br label %if.end, !dbg !9438

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9439
}

; Function Attrs: noredzone
declare dso_local void @dev_pm_domain_set(%struct.device*, %struct.dev_pm_domain*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !9440 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !9441, metadata !DIExpression()), !dbg !9442
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !9443, metadata !DIExpression()), !dbg !9444
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9445
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !9446
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !9447
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !9447
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !9448
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #11, !dbg !9449
  ret void, !dbg !9450
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genpd_free_dev_data(%struct.device* %dev, %struct.generic_pm_domain_data* %gpd_data) #0 !dbg !9451 {
entry:
  %lock.addr.i4 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i4, metadata !9288, metadata !DIExpression()), !dbg !9454
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9296, metadata !DIExpression()), !dbg !9456
  %dev.addr = alloca %struct.device*, align 8
  %gpd_data.addr = alloca %struct.generic_pm_domain_data*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9458, metadata !DIExpression()), !dbg !9459
  store %struct.generic_pm_domain_data* %gpd_data, %struct.generic_pm_domain_data** %gpd_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain_data** %gpd_data.addr, metadata !9460, metadata !DIExpression()), !dbg !9461
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9462
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !9463
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 3, !dbg !9464
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #13, !dbg !9465
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9466, !srcloc !9348
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9467
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !9467
  %rlock.i = bitcast %union.anon.1* %2 to %struct.raw_spinlock*, !dbg !9467
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9468
  %power1 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 11, !dbg !9469
  %subsys_data = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 25, !dbg !9470
  %4 = load %struct.pm_subsys_data*, %struct.pm_subsys_data** %subsys_data, align 8, !dbg !9470
  %domain_data = getelementptr inbounds %struct.pm_subsys_data, %struct.pm_subsys_data* %4, i32 0, i32 3, !dbg !9471
  store %struct.pm_domain_data* null, %struct.pm_domain_data** %domain_data, align 8, !dbg !9472
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9473
  %power2 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 11, !dbg !9474
  %lock3 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power2, i32 0, i32 3, !dbg !9475
  store %struct.spinlock* %lock3, %struct.spinlock** %lock.addr.i4, align 8
  call void @arch_local_irq_enable() #13, !dbg !9476
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9477, !srcloc !9375
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i4, align 8, !dbg !9478
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !9478
  %rlock.i5 = bitcast %union.anon.1* %7 to %struct.raw_spinlock*, !dbg !9478
  %8 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data.addr, align 8, !dbg !9479
  %9 = bitcast %struct.generic_pm_domain_data* %8 to i8*, !dbg !9479
  call void @kfree(i8* %9) #11, !dbg !9480
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9481
  call void @dev_pm_put_subsys_data(%struct.device* %10) #11, !dbg !9482
  ret void, !dbg !9483
}

; Function Attrs: noredzone
declare dso_local i32 @dev_pm_qos_add_notifier(%struct.device*, %struct.notifier_block*, i32) #3

; Function Attrs: noredzone
declare dso_local i32 @dev_pm_get_subsys_data(%struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_dev_pm_qos_notifier(%struct.notifier_block* %nb, i64 %val, i8* %ptr) #0 !dbg !9484 {
entry:
  %lock.addr.i19 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i19, metadata !9288, metadata !DIExpression()), !dbg !9485
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9296, metadata !DIExpression()), !dbg !9490
  %nb.addr = alloca %struct.notifier_block*, align 8
  %val.addr = alloca i64, align 8
  %ptr.addr = alloca i8*, align 8
  %gpd_data = alloca %struct.generic_pm_domain_data*, align 8
  %dev = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.generic_pm_domain_data*, align 8
  %genpd = alloca %struct.generic_pm_domain*, align 8
  %pdd = alloca %struct.pm_domain_data*, align 8
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !9492, metadata !DIExpression()), !dbg !9493
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !9494, metadata !DIExpression()), !dbg !9495
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9496, metadata !DIExpression()), !dbg !9497
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain_data** %gpd_data, metadata !9498, metadata !DIExpression()), !dbg !9499
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !9500, metadata !DIExpression()), !dbg !9501
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9502, metadata !DIExpression()), !dbg !9504
  %0 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !9504
  %1 = bitcast %struct.notifier_block* %0 to i8*, !dbg !9504
  store i8* %1, i8** %__mptr, align 8, !dbg !9504
  br label %do.body, !dbg !9504

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9505

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9504
  %add.ptr = getelementptr i8, i8* %2, i64 -56, !dbg !9504
  %3 = bitcast i8* %add.ptr to %struct.generic_pm_domain_data*, !dbg !9504
  store %struct.generic_pm_domain_data* %3, %struct.generic_pm_domain_data** %tmp, align 8, !dbg !9505
  %4 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %tmp, align 8, !dbg !9504
  store %struct.generic_pm_domain_data* %4, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !9507
  %5 = load %struct.generic_pm_domain_data*, %struct.generic_pm_domain_data** %gpd_data, align 8, !dbg !9508
  %base = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %5, i32 0, i32 0, !dbg !9509
  %dev1 = getelementptr inbounds %struct.pm_domain_data, %struct.pm_domain_data* %base, i32 0, i32 1, !dbg !9510
  %6 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !9510
  store %struct.device* %6, %struct.device** %dev, align 8, !dbg !9511
  br label %for.cond, !dbg !9512

for.cond:                                         ; preds = %if.end18, %do.end
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd, metadata !9513, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.declare(metadata %struct.pm_domain_data** %pdd, metadata !9515, metadata !DIExpression()), !dbg !9516
  %7 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9517
  %power = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 11, !dbg !9518
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 3, !dbg !9519
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #13, !dbg !9520
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9521, !srcloc !9348
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9522
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !9522
  %rlock.i = bitcast %union.anon.1* %9 to %struct.raw_spinlock*, !dbg !9522
  %10 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9523
  %power2 = getelementptr inbounds %struct.device, %struct.device* %10, i32 0, i32 11, !dbg !9524
  %subsys_data = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power2, i32 0, i32 25, !dbg !9525
  %11 = load %struct.pm_subsys_data*, %struct.pm_subsys_data** %subsys_data, align 8, !dbg !9525
  %tobool = icmp ne %struct.pm_subsys_data* %11, null, !dbg !9523
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9523

cond.true:                                        ; preds = %for.cond
  %12 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9526
  %power3 = getelementptr inbounds %struct.device, %struct.device* %12, i32 0, i32 11, !dbg !9527
  %subsys_data4 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power3, i32 0, i32 25, !dbg !9528
  %13 = load %struct.pm_subsys_data*, %struct.pm_subsys_data** %subsys_data4, align 8, !dbg !9528
  %domain_data = getelementptr inbounds %struct.pm_subsys_data, %struct.pm_subsys_data* %13, i32 0, i32 3, !dbg !9529
  %14 = load %struct.pm_domain_data*, %struct.pm_domain_data** %domain_data, align 8, !dbg !9529
  br label %cond.end, !dbg !9523

cond.false:                                       ; preds = %for.cond
  br label %cond.end, !dbg !9523

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.pm_domain_data* [ %14, %cond.true ], [ null, %cond.false ], !dbg !9523
  store %struct.pm_domain_data* %cond, %struct.pm_domain_data** %pdd, align 8, !dbg !9530
  %15 = load %struct.pm_domain_data*, %struct.pm_domain_data** %pdd, align 8, !dbg !9531
  %tobool5 = icmp ne %struct.pm_domain_data* %15, null, !dbg !9531
  br i1 %tobool5, label %if.then, label %if.else, !dbg !9533

if.then:                                          ; preds = %cond.end
  %16 = load %struct.pm_domain_data*, %struct.pm_domain_data** %pdd, align 8, !dbg !9534
  %call = call %struct.generic_pm_domain_data* @to_gpd_data(%struct.pm_domain_data* %16) #11, !dbg !9536
  %td = getelementptr inbounds %struct.generic_pm_domain_data, %struct.generic_pm_domain_data* %call, i32 0, i32 1, !dbg !9537
  %constraint_changed = getelementptr inbounds %struct.gpd_timing_data, %struct.gpd_timing_data* %td, i32 0, i32 3, !dbg !9538
  store i8 1, i8* %constraint_changed, align 8, !dbg !9539
  %17 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9540
  %call6 = call %struct.generic_pm_domain* @dev_to_genpd(%struct.device* %17) #11, !dbg !9541
  store %struct.generic_pm_domain* %call6, %struct.generic_pm_domain** %genpd, align 8, !dbg !9542
  br label %if.end, !dbg !9543

if.else:                                          ; preds = %cond.end
  %call7 = call i8* @ERR_PTR(i64 -61) #11, !dbg !9544
  %18 = bitcast i8* %call7 to %struct.generic_pm_domain*, !dbg !9544
  store %struct.generic_pm_domain* %18, %struct.generic_pm_domain** %genpd, align 8, !dbg !9546
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %19 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9547
  %power8 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 11, !dbg !9548
  %lock9 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power8, i32 0, i32 3, !dbg !9549
  store %struct.spinlock* %lock9, %struct.spinlock** %lock.addr.i19, align 8
  call void @arch_local_irq_enable() #13, !dbg !9550
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9551, !srcloc !9375
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i19, align 8, !dbg !9552
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !9552
  %rlock.i20 = bitcast %union.anon.1* %21 to %struct.raw_spinlock*, !dbg !9552
  %22 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !9553
  %23 = bitcast %struct.generic_pm_domain* %22 to i8*, !dbg !9553
  %call10 = call zeroext i1 @IS_ERR(i8* %23) #11, !dbg !9555
  br i1 %call10, label %if.end14, label %if.then11, !dbg !9556

if.then11:                                        ; preds = %if.end
  %24 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !9557
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %24, i32 0, i32 38, !dbg !9557
  %25 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !9557
  %lock12 = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %25, i32 0, i32 0, !dbg !9557
  %26 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %lock12, align 8, !dbg !9557
  %27 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !9557
  call void %26(%struct.generic_pm_domain* %27) #11, !dbg !9557
  %28 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !9559
  %max_off_time_changed = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %28, i32 0, i32 26, !dbg !9560
  store i8 1, i8* %max_off_time_changed, align 8, !dbg !9561
  %29 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !9562
  %lock_ops13 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %29, i32 0, i32 38, !dbg !9562
  %30 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops13, align 8, !dbg !9562
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %30, i32 0, i32 3, !dbg !9562
  %31 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !9562
  %32 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !9562
  call void %31(%struct.generic_pm_domain* %32) #11, !dbg !9562
  br label %if.end14, !dbg !9563

if.end14:                                         ; preds = %if.then11, %if.end
  %33 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9564
  %parent = getelementptr inbounds %struct.device, %struct.device* %33, i32 0, i32 1, !dbg !9565
  %34 = load %struct.device*, %struct.device** %parent, align 8, !dbg !9565
  store %struct.device* %34, %struct.device** %dev, align 8, !dbg !9566
  %35 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9567
  %tobool15 = icmp ne %struct.device* %35, null, !dbg !9567
  br i1 %tobool15, label %lor.lhs.false, label %if.then17, !dbg !9569

lor.lhs.false:                                    ; preds = %if.end14
  %36 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9570
  %power16 = getelementptr inbounds %struct.device, %struct.device* %36, i32 0, i32 11, !dbg !9571
  %ignore_children = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power16, i32 0, i32 15, !dbg !9572
  %bf.load = load i16, i16* %ignore_children, align 8, !dbg !9572
  %bf.lshr = lshr i16 %bf.load, 7, !dbg !9572
  %bf.clear = and i16 %bf.lshr, 1, !dbg !9572
  %bf.cast = trunc i16 %bf.clear to i1, !dbg !9572
  br i1 %bf.cast, label %if.then17, label %if.end18, !dbg !9573

if.then17:                                        ; preds = %lor.lhs.false, %if.end14
  br label %for.end, !dbg !9574

if.end18:                                         ; preds = %lor.lhs.false
  br label %for.cond, !dbg !9575, !llvm.loop !9576

for.end:                                          ; preds = %if.then17
  ret i32 0, !dbg !9579
}

; Function Attrs: noredzone
declare dso_local void @dev_pm_put_subsys_data(%struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !9580 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !9582, metadata !DIExpression()), !dbg !9584
  %0 = load i64, i64* %__edi, align 8, !dbg !9584
  store i64 %0, i64* %__edi, align 8, !dbg !9584
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !9585, metadata !DIExpression()), !dbg !9584
  %1 = load i64, i64* %__esi, align 8, !dbg !9584
  store i64 %1, i64* %__esi, align 8, !dbg !9584
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !9586, metadata !DIExpression()), !dbg !9584
  %2 = load i64, i64* %__edx, align 8, !dbg !9584
  store i64 %2, i64* %__edx, align 8, !dbg !9584
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9587, metadata !DIExpression()), !dbg !9584
  %3 = load i64, i64* %__ecx, align 8, !dbg !9584
  store i64 %3, i64* %__ecx, align 8, !dbg !9584
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9588, metadata !DIExpression()), !dbg !9584
  %4 = load i64, i64* %__eax, align 8, !dbg !9584
  store i64 %4, i64* %__eax, align 8, !dbg !9584
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !9584
  %6 = call i64 @llvm.read_register.i64(metadata !5199), !dbg !9584
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #7, !dbg !9584, !srcloc !9589
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !9584
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !9584
  store i64 %asmresult, i64* %__eax, align 8, !dbg !9584
  call void @llvm.write_register.i64(metadata !5199, i64 %asmresult1), !dbg !9584
  ret void, !dbg !9590
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #6

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #0 !dbg !9591 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !9592, metadata !DIExpression()), !dbg !9594
  %0 = load i64, i64* %__edi, align 8, !dbg !9594
  store i64 %0, i64* %__edi, align 8, !dbg !9594
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !9595, metadata !DIExpression()), !dbg !9594
  %1 = load i64, i64* %__esi, align 8, !dbg !9594
  store i64 %1, i64* %__esi, align 8, !dbg !9594
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !9596, metadata !DIExpression()), !dbg !9594
  %2 = load i64, i64* %__edx, align 8, !dbg !9594
  store i64 %2, i64* %__edx, align 8, !dbg !9594
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9597, metadata !DIExpression()), !dbg !9594
  %3 = load i64, i64* %__ecx, align 8, !dbg !9594
  store i64 %3, i64* %__ecx, align 8, !dbg !9594
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9598, metadata !DIExpression()), !dbg !9594
  %4 = load i64, i64* %__eax, align 8, !dbg !9594
  store i64 %4, i64* %__eax, align 8, !dbg !9594
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !9594
  %6 = call i64 @llvm.read_register.i64(metadata !5199), !dbg !9594
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #7, !dbg !9594, !srcloc !9599
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !9594
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !9594
  store i64 %asmresult, i64* %__eax, align 8, !dbg !9594
  call void @llvm.write_register.i64(metadata !5199, i64 %asmresult1), !dbg !9594
  ret void, !dbg !9600
}

; Function Attrs: noredzone
declare dso_local %struct.device* @get_cpu_device(i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genpd_update_cpumask(%struct.generic_pm_domain* %genpd, i32 %cpu, i1 zeroext %set, i32 %depth) #0 !dbg !9601 {
entry:
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %cpu.addr = alloca i32, align 4
  %set.addr = alloca i8, align 1
  %depth.addr = alloca i32, align 4
  %link = alloca %struct.gpd_link*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.gpd_link*, align 8
  %parent = alloca %struct.generic_pm_domain*, align 8
  %__mptr6 = alloca i8*, align 8
  %tmp11 = alloca %struct.gpd_link*, align 8
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !9604, metadata !DIExpression()), !dbg !9605
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !9606, metadata !DIExpression()), !dbg !9607
  %frombool = zext i1 %set to i8
  store i8 %frombool, i8* %set.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %set.addr, metadata !9608, metadata !DIExpression()), !dbg !9609
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !9610, metadata !DIExpression()), !dbg !9611
  call void @llvm.dbg.declare(metadata %struct.gpd_link** %link, metadata !9612, metadata !DIExpression()), !dbg !9613
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9614
  %flags = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %0, i32 0, i32 31, !dbg !9614
  %1 = load i32, i32* %flags, align 8, !dbg !9614
  %and = and i32 %1, 16, !dbg !9614
  %tobool = icmp ne i32 %and, 0, !dbg !9614
  br i1 %tobool, label %if.end, label %if.then, !dbg !9616

if.then:                                          ; preds = %entry
  br label %if.end17, !dbg !9617

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9618, metadata !DIExpression()), !dbg !9621
  %2 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9621
  %child_links = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %2, i32 0, i32 4, !dbg !9621
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %child_links, i32 0, i32 0, !dbg !9621
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9621
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !9621
  store i8* %4, i8** %__mptr, align 8, !dbg !9621
  br label %do.body, !dbg !9621

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !9622

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !9621
  %add.ptr = getelementptr i8, i8* %5, i64 -32, !dbg !9621
  %6 = bitcast i8* %add.ptr to %struct.gpd_link*, !dbg !9621
  store %struct.gpd_link* %6, %struct.gpd_link** %tmp, align 8, !dbg !9622
  %7 = load %struct.gpd_link*, %struct.gpd_link** %tmp, align 8, !dbg !9621
  store %struct.gpd_link* %7, %struct.gpd_link** %link, align 8, !dbg !9624
  br label %for.cond, !dbg !9624

for.cond:                                         ; preds = %do.end10, %do.end
  %8 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !9625
  %child_node = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %8, i32 0, i32 3, !dbg !9625
  %9 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9625
  %child_links1 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %9, i32 0, i32 4, !dbg !9625
  %cmp = icmp eq %struct.list_head* %child_node, %child_links1, !dbg !9625
  %lnot = xor i1 %cmp, true, !dbg !9625
  br i1 %lnot, label %for.body, label %for.end, !dbg !9624

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %parent, metadata !9627, metadata !DIExpression()), !dbg !9629
  %10 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !9630
  %parent2 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %10, i32 0, i32 0, !dbg !9631
  %11 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent2, align 8, !dbg !9631
  store %struct.generic_pm_domain* %11, %struct.generic_pm_domain** %parent, align 8, !dbg !9629
  %12 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !9632
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %12, i32 0, i32 38, !dbg !9632
  %13 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !9632
  %lock_nested = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %13, i32 0, i32 1, !dbg !9632
  %14 = load void (%struct.generic_pm_domain*, i32)*, void (%struct.generic_pm_domain*, i32)** %lock_nested, align 8, !dbg !9632
  %15 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !9632
  %16 = load i32, i32* %depth.addr, align 4, !dbg !9632
  %add = add i32 %16, 1, !dbg !9632
  call void %14(%struct.generic_pm_domain* %15, i32 %add) #11, !dbg !9632
  %17 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !9633
  %18 = load i32, i32* %cpu.addr, align 4, !dbg !9634
  %19 = load i8, i8* %set.addr, align 1, !dbg !9635
  %tobool3 = trunc i8 %19 to i1, !dbg !9635
  %20 = load i32, i32* %depth.addr, align 4, !dbg !9636
  %add4 = add i32 %20, 1, !dbg !9637
  call void @genpd_update_cpumask(%struct.generic_pm_domain* %17, i32 %18, i1 zeroext %tobool3, i32 %add4) #11, !dbg !9638
  %21 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !9639
  %lock_ops5 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %21, i32 0, i32 38, !dbg !9639
  %22 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops5, align 8, !dbg !9639
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %22, i32 0, i32 3, !dbg !9639
  %23 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !9639
  %24 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !9639
  call void %23(%struct.generic_pm_domain* %24) #11, !dbg !9639
  br label %for.inc, !dbg !9640

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr6, metadata !9641, metadata !DIExpression()), !dbg !9643
  %25 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !9643
  %child_node7 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %25, i32 0, i32 3, !dbg !9643
  %next8 = getelementptr inbounds %struct.list_head, %struct.list_head* %child_node7, i32 0, i32 0, !dbg !9643
  %26 = load %struct.list_head*, %struct.list_head** %next8, align 8, !dbg !9643
  %27 = bitcast %struct.list_head* %26 to i8*, !dbg !9643
  store i8* %27, i8** %__mptr6, align 8, !dbg !9643
  br label %do.body9, !dbg !9643

do.body9:                                         ; preds = %for.inc
  br label %do.end10, !dbg !9644

do.end10:                                         ; preds = %do.body9
  %28 = load i8*, i8** %__mptr6, align 8, !dbg !9643
  %add.ptr12 = getelementptr i8, i8* %28, i64 -32, !dbg !9643
  %29 = bitcast i8* %add.ptr12 to %struct.gpd_link*, !dbg !9643
  store %struct.gpd_link* %29, %struct.gpd_link** %tmp11, align 8, !dbg !9644
  %30 = load %struct.gpd_link*, %struct.gpd_link** %tmp11, align 8, !dbg !9643
  store %struct.gpd_link* %30, %struct.gpd_link** %link, align 8, !dbg !9625
  br label %for.cond, !dbg !9625, !llvm.loop !9646

for.end:                                          ; preds = %for.cond
  %31 = load i8, i8* %set.addr, align 1, !dbg !9648
  %tobool13 = trunc i8 %31 to i1, !dbg !9648
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !9650

if.then14:                                        ; preds = %for.end
  %32 = load i32, i32* %cpu.addr, align 4, !dbg !9651
  %33 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9652
  %cpus = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %33, i32 0, i32 17, !dbg !9653
  %arraydecay = getelementptr inbounds [1 x %struct.cpumask], [1 x %struct.cpumask]* %cpus, i64 0, i64 0, !dbg !9652
  call void @cpumask_set_cpu(i32 %32, %struct.cpumask* %arraydecay) #11, !dbg !9654
  br label %if.end17, !dbg !9654

if.else:                                          ; preds = %for.end
  %34 = load i32, i32* %cpu.addr, align 4, !dbg !9655
  %35 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9656
  %cpus15 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %35, i32 0, i32 17, !dbg !9657
  %arraydecay16 = getelementptr inbounds [1 x %struct.cpumask], [1 x %struct.cpumask]* %cpus15, i64 0, i64 0, !dbg !9656
  call void @cpumask_clear_cpu(i32 %34, %struct.cpumask* %arraydecay16) #11, !dbg !9658
  br label %if.end17

if.end17:                                         ; preds = %if.then, %if.else, %if.then14
  ret void, !dbg !9659
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cpumask_set_cpu(i32 %cpu, %struct.cpumask* %dstp) #0 !dbg !9660 {
entry:
  %cpu.addr = alloca i32, align 4
  %dstp.addr = alloca %struct.cpumask*, align 8
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !9663, metadata !DIExpression()), !dbg !9664
  store %struct.cpumask* %dstp, %struct.cpumask** %dstp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cpumask** %dstp.addr, metadata !9665, metadata !DIExpression()), !dbg !9666
  %0 = load i32, i32* %cpu.addr, align 4, !dbg !9667
  %call = call i32 @cpumask_check(i32 %0) #11, !dbg !9668
  %conv = zext i32 %call to i64, !dbg !9668
  %1 = load %struct.cpumask*, %struct.cpumask** %dstp.addr, align 8, !dbg !9669
  %bits = getelementptr inbounds %struct.cpumask, %struct.cpumask* %1, i32 0, i32 0, !dbg !9669
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %bits, i64 0, i64 0, !dbg !9669
  call void @set_bit(i64 %conv, i64* %arraydecay) #11, !dbg !9670
  ret void, !dbg !9671
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cpumask_clear_cpu(i32 %cpu, %struct.cpumask* %dstp) #0 !dbg !9672 {
entry:
  %cpu.addr = alloca i32, align 4
  %dstp.addr = alloca %struct.cpumask*, align 8
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !9675, metadata !DIExpression()), !dbg !9676
  store %struct.cpumask* %dstp, %struct.cpumask** %dstp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cpumask** %dstp.addr, metadata !9677, metadata !DIExpression()), !dbg !9678
  %0 = load i32, i32* %cpu.addr, align 4, !dbg !9679
  %call = call i32 @cpumask_check(i32 %0) #11, !dbg !9680
  %conv = zext i32 %call to i64, !dbg !9680
  %1 = load %struct.cpumask*, %struct.cpumask** %dstp.addr, align 8, !dbg !9681
  %bits = getelementptr inbounds %struct.cpumask, %struct.cpumask* %1, i32 0, i32 0, !dbg !9681
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %bits, i64 0, i64 0, !dbg !9681
  call void @clear_bit(i64 %conv, i64* %arraydecay) #11, !dbg !9682
  ret void, !dbg !9683
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !9684 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !9690, metadata !DIExpression()), !dbg !9693
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !9695, metadata !DIExpression()), !dbg !9696
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !6368, metadata !DIExpression()), !dbg !9697
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6372, metadata !DIExpression()), !dbg !9699
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !9700, metadata !DIExpression()), !dbg !9701
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !9702, metadata !DIExpression()), !dbg !9703
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !9704
  %1 = load i64, i64* %nr.addr, align 8, !dbg !9705
  %div = sdiv i64 %1, 64, !dbg !9705
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !9706
  %2 = bitcast i64* %add.ptr to i8*, !dbg !9704
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !9707
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9708
  %conv.i = trunc i64 %4 to i32, !dbg !9708
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !9709
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !9710
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !9710
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #13, !dbg !9710
  %7 = load i64, i64* %nr.addr, align 8, !dbg !9711
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !9712
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !9713
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !9715
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !9716

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !9717
  %12 = bitcast i64* %11 to i8*, !dbg !9717
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !9717
  %shr.i = ashr i64 %13, 3, !dbg !9717
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !9717
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !9719
  %and.i = and i64 %14, 7, !dbg !9719
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !9719
  %shl.i = shl i32 1, %sh_prom.i, !dbg !9719
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #7, !dbg !9720, !srcloc !9721
  br label %arch_set_bit.exit, !dbg !9722

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !9723
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !9725
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #7, !dbg !9726, !srcloc !9727
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !9728
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cpumask_check(i32 %cpu) #0 !dbg !9729 {
entry:
  %cpu.addr = alloca i32, align 4
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !9732, metadata !DIExpression()), !dbg !9733
  %0 = load i32, i32* %cpu.addr, align 4, !dbg !9734
  call void @cpu_max_bits_warn(i32 %0, i32 1) #11, !dbg !9735
  %1 = load i32, i32* %cpu.addr, align 4, !dbg !9736
  ret i32 %1, !dbg !9737
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cpu_max_bits_warn(i32 %cpu, i32 %bits) #0 !dbg !9738 {
entry:
  %cpu.addr = alloca i32, align 4
  %bits.addr = alloca i32, align 4
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !9741, metadata !DIExpression()), !dbg !9742
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !9743, metadata !DIExpression()), !dbg !9744
  ret void, !dbg !9745
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #0 !dbg !9746 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !9747, metadata !DIExpression()), !dbg !9749
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !9751, metadata !DIExpression()), !dbg !9752
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !6368, metadata !DIExpression()), !dbg !9753
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6372, metadata !DIExpression()), !dbg !9755
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !9756, metadata !DIExpression()), !dbg !9757
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !9758, metadata !DIExpression()), !dbg !9759
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !9760
  %1 = load i64, i64* %nr.addr, align 8, !dbg !9761
  %div = sdiv i64 %1, 64, !dbg !9761
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !9762
  %2 = bitcast i64* %add.ptr to i8*, !dbg !9760
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !9763
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9764
  %conv.i = trunc i64 %4 to i32, !dbg !9764
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !9765
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !9766
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !9766
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #13, !dbg !9766
  %7 = load i64, i64* %nr.addr, align 8, !dbg !9767
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !9768
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !9769
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !9771
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !9772

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !9773
  %12 = bitcast i64* %11 to i8*, !dbg !9773
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !9773
  %shr.i = ashr i64 %13, 3, !dbg !9773
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !9773
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !9775
  %and.i = and i64 %14, 7, !dbg !9775
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !9775
  %shl.i = shl i32 1, %sh_prom.i, !dbg !9775
  %neg.i = xor i32 %shl.i, -1, !dbg !9776
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #7, !dbg !9777, !srcloc !9778
  br label %arch_clear_bit.exit, !dbg !9779

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !9780
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !9782
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #7, !dbg !9783, !srcloc !9784
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !9785
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !9786 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !9789, metadata !DIExpression()), !dbg !9790
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !9791, metadata !DIExpression()), !dbg !9792
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !9793, metadata !DIExpression()), !dbg !9794
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9795
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9797
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9798
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !9799
  br i1 %call, label %if.end, label %if.then, !dbg !9800

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !9801

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9802
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9803
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !9804
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !9805
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9806
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9807
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !9808
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !9809
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9810
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9811
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !9812
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !9813
  br label %do.body, !dbg !9814

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !9815

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !9817

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !9815

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9819
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9819
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !9819
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !9819
  br label %do.end7, !dbg !9819

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !9815

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !9821
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !9822 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !9825, metadata !DIExpression()), !dbg !9826
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !9827, metadata !DIExpression()), !dbg !9828
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !9829, metadata !DIExpression()), !dbg !9830
  ret i1 true, !dbg !9831
}

; Function Attrs: noredzone
declare dso_local i32 @dev_pm_qos_remove_notifier(%struct.device*, %struct.notifier_block*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genpd_clear_cpumask(%struct.generic_pm_domain* %genpd, i32 %cpu) #0 !dbg !9832 {
entry:
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %cpu.addr = alloca i32, align 4
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !9833, metadata !DIExpression()), !dbg !9834
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !9835, metadata !DIExpression()), !dbg !9836
  %0 = load i32, i32* %cpu.addr, align 4, !dbg !9837
  %cmp = icmp sge i32 %0, 0, !dbg !9839
  br i1 %cmp, label %if.then, label %if.end, !dbg !9840

if.then:                                          ; preds = %entry
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9841
  %2 = load i32, i32* %cpu.addr, align 4, !dbg !9842
  call void @genpd_update_cpumask(%struct.generic_pm_domain* %1, i32 %2, i1 zeroext false, i32 0) #11, !dbg !9843
  br label %if.end, !dbg !9843

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9844
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del_init(%struct.list_head* %entry1) #0 !dbg !9845 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !9846, metadata !DIExpression()), !dbg !9847
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9848
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !9849
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9850
  call void @INIT_LIST_HEAD(%struct.list_head* %1) #11, !dbg !9851
  ret void, !dbg !9852
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !9853 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !9854, metadata !DIExpression()), !dbg !9855
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9856
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #11, !dbg !9858
  br i1 %call, label %if.end, label %if.then, !dbg !9859

if.then:                                          ; preds = %entry
  br label %return, !dbg !9860

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9861
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !9862
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !9862
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9863
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !9864
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9864
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #11, !dbg !9865
  br label %return, !dbg !9866

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9866
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !9867 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !9870, metadata !DIExpression()), !dbg !9871
  ret i1 true, !dbg !9872
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !9873 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !9874, metadata !DIExpression()), !dbg !9875
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !9876, metadata !DIExpression()), !dbg !9877
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9878
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9879
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !9880
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !9881
  br label %do.body, !dbg !9882

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !9883

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !9885

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !9883

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9887
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9887
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !9887
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !9887
  br label %do.end5, !dbg !9887

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !9883

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !9889
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #3

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genpd_lock_spin(%struct.generic_pm_domain* %genpd) #0 !dbg !9890 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6593, metadata !DIExpression()), !dbg !9891
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !9898, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9900, metadata !DIExpression()), !dbg !9901
  br label %do.body, !dbg !9902

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9903

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9904, metadata !DIExpression()), !dbg !9906
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9907, metadata !DIExpression()), !dbg !9906
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9906
  %conv = zext i1 %cmp to i32, !dbg !9906
  store i32 1, i32* %tmp, align 4, !dbg !9906
  %0 = load i32, i32* %tmp, align 4, !dbg !9906
  br label %do.body2, !dbg !9908

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9909

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9910

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9912, metadata !DIExpression()), !dbg !9915
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9916, metadata !DIExpression()), !dbg !9915
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9915
  %conv8 = zext i1 %cmp7 to i32, !dbg !9915
  store i32 1, i32* %tmp9, align 4, !dbg !9915
  %1 = load i32, i32* %tmp9, align 4, !dbg !9915
  %call = call i64 @arch_local_irq_save() #11, !dbg !9917
  store i64 %call, i64* %flags, align 8, !dbg !9917
  br label %do.end, !dbg !9917

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !9910

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !9909

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9918, !srcloc !9919
  br label %do.body12, !dbg !9918

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9920
  %3 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %2, i32 0, i32 39, !dbg !9920
  %4 = bitcast %union.anon.80* %3 to %struct.anon.81*, !dbg !9920
  %slock = getelementptr inbounds %struct.anon.81, %struct.anon.81* %4, i32 0, i32 0, !dbg !9920
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9921
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !9922
  %rlock.i = bitcast %union.anon.1* %6 to %struct.raw_spinlock*, !dbg !9922
  br label %do.end14, !dbg !9920

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !9918

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !9909

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9908

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9903

do.end18:                                         ; preds = %do.end17
  %7 = load i64, i64* %flags, align 8, !dbg !9923
  %8 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9924
  %9 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %8, i32 0, i32 39, !dbg !9925
  %10 = bitcast %union.anon.80* %9 to %struct.anon.81*, !dbg !9925
  %lock_flags = getelementptr inbounds %struct.anon.81, %struct.anon.81* %10, i32 0, i32 1, !dbg !9925
  store i64 %7, i64* %lock_flags, align 8, !dbg !9926
  ret void, !dbg !9927
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genpd_lock_nested_spin(%struct.generic_pm_domain* %genpd, i32 %depth) #0 !dbg !9928 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6593, metadata !DIExpression()), !dbg !9929
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %depth.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !9936, metadata !DIExpression()), !dbg !9937
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !9938, metadata !DIExpression()), !dbg !9939
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9940, metadata !DIExpression()), !dbg !9941
  br label %do.body, !dbg !9942

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9943

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9944, metadata !DIExpression()), !dbg !9946
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9947, metadata !DIExpression()), !dbg !9946
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9946
  %conv = zext i1 %cmp to i32, !dbg !9946
  store i32 1, i32* %tmp, align 4, !dbg !9946
  %0 = load i32, i32* %tmp, align 4, !dbg !9946
  br label %do.body2, !dbg !9948

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9949

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9950

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9952, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9956, metadata !DIExpression()), !dbg !9955
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9955
  %conv8 = zext i1 %cmp7 to i32, !dbg !9955
  store i32 1, i32* %tmp9, align 4, !dbg !9955
  %1 = load i32, i32* %tmp9, align 4, !dbg !9955
  %call = call i64 @arch_local_irq_save() #11, !dbg !9957
  store i64 %call, i64* %flags, align 8, !dbg !9957
  br label %do.end, !dbg !9957

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !9950

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !9949

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9958, !srcloc !9959
  br label %do.body12, !dbg !9958

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9960
  %3 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %2, i32 0, i32 39, !dbg !9960
  %4 = bitcast %union.anon.80* %3 to %struct.anon.81*, !dbg !9960
  %slock = getelementptr inbounds %struct.anon.81, %struct.anon.81* %4, i32 0, i32 0, !dbg !9960
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9961
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !9962
  %rlock.i = bitcast %union.anon.1* %6 to %struct.raw_spinlock*, !dbg !9962
  br label %do.end14, !dbg !9960

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !9958

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !9949

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9948

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9943

do.end18:                                         ; preds = %do.end17
  %7 = load i64, i64* %flags, align 8, !dbg !9963
  %8 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9964
  %9 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %8, i32 0, i32 39, !dbg !9965
  %10 = bitcast %union.anon.80* %9 to %struct.anon.81*, !dbg !9965
  %lock_flags = getelementptr inbounds %struct.anon.81, %struct.anon.81* %10, i32 0, i32 1, !dbg !9965
  store i64 %7, i64* %lock_flags, align 8, !dbg !9966
  ret void, !dbg !9967
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_lock_interruptible_spin(%struct.generic_pm_domain* %genpd) #0 !dbg !9968 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6593, metadata !DIExpression()), !dbg !9969
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !9976, metadata !DIExpression()), !dbg !9977
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9978, metadata !DIExpression()), !dbg !9979
  br label %do.body, !dbg !9980

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9981

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9982, metadata !DIExpression()), !dbg !9984
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9985, metadata !DIExpression()), !dbg !9984
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9984
  %conv = zext i1 %cmp to i32, !dbg !9984
  store i32 1, i32* %tmp, align 4, !dbg !9984
  %0 = load i32, i32* %tmp, align 4, !dbg !9984
  br label %do.body2, !dbg !9986

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9987

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9988

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9990, metadata !DIExpression()), !dbg !9993
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9994, metadata !DIExpression()), !dbg !9993
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9993
  %conv8 = zext i1 %cmp7 to i32, !dbg !9993
  store i32 1, i32* %tmp9, align 4, !dbg !9993
  %1 = load i32, i32* %tmp9, align 4, !dbg !9993
  %call = call i64 @arch_local_irq_save() #11, !dbg !9995
  store i64 %call, i64* %flags, align 8, !dbg !9995
  br label %do.end, !dbg !9995

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !9988

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !9987

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9996, !srcloc !9997
  br label %do.body12, !dbg !9996

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !9998
  %3 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %2, i32 0, i32 39, !dbg !9998
  %4 = bitcast %union.anon.80* %3 to %struct.anon.81*, !dbg !9998
  %slock = getelementptr inbounds %struct.anon.81, %struct.anon.81* %4, i32 0, i32 0, !dbg !9998
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9999
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !10000
  %rlock.i = bitcast %union.anon.1* %6 to %struct.raw_spinlock*, !dbg !10000
  br label %do.end14, !dbg !9998

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !9996

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !9987

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9986

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9981

do.end18:                                         ; preds = %do.end17
  %7 = load i64, i64* %flags, align 8, !dbg !10001
  %8 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10002
  %9 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %8, i32 0, i32 39, !dbg !10003
  %10 = bitcast %union.anon.80* %9 to %struct.anon.81*, !dbg !10003
  %lock_flags = getelementptr inbounds %struct.anon.81, %struct.anon.81* %10, i32 0, i32 1, !dbg !10003
  store i64 %7, i64* %lock_flags, align 8, !dbg !10004
  ret i32 0, !dbg !10005
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genpd_unlock_spin(%struct.generic_pm_domain* %genpd) #0 !dbg !10006 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10007, metadata !DIExpression()), !dbg !10011
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10013, metadata !DIExpression()), !dbg !10014
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !10015, metadata !DIExpression()), !dbg !10016
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10017
  %1 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %0, i32 0, i32 39, !dbg !10018
  %2 = bitcast %union.anon.80* %1 to %struct.anon.81*, !dbg !10018
  %slock = getelementptr inbounds %struct.anon.81, %struct.anon.81* %2, i32 0, i32 0, !dbg !10018
  %3 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10019
  %4 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %3, i32 0, i32 39, !dbg !10020
  %5 = bitcast %union.anon.80* %4 to %struct.anon.81*, !dbg !10020
  %lock_flags = getelementptr inbounds %struct.anon.81, %struct.anon.81* %5, i32 0, i32 1, !dbg !10020
  %6 = load i64, i64* %lock_flags, align 8, !dbg !10020
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  store i64 %6, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !257, metadata !10021, metadata !DIExpression()) #7, !dbg !10024
  call void @llvm.dbg.declare(metadata !257, metadata !10025, metadata !DIExpression()) #7, !dbg !10024
  store i32 1, i32* %tmp.i, align 4, !dbg !10024
  %7 = load i32, i32* %tmp.i, align 4, !dbg !10024
  call void @llvm.dbg.declare(metadata !257, metadata !10026, metadata !DIExpression()) #7, !dbg !10031
  call void @llvm.dbg.declare(metadata !257, metadata !10032, metadata !DIExpression()) #7, !dbg !10031
  store i32 1, i32* %tmp8.i, align 4, !dbg !10031
  %8 = load i32, i32* %tmp8.i, align 4, !dbg !10031
  %9 = load i64, i64* %flags.addr.i, align 8, !dbg !10033
  call void @arch_local_irq_restore(i64 %9) #13, !dbg !10033
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10034, !srcloc !10036
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10037
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !10037
  %rlock.i = bitcast %union.anon.1* %11 to %struct.raw_spinlock*, !dbg !10037
  ret void, !dbg !10039
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !10040 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !10043, metadata !DIExpression()), !dbg !10044
  %call = call i64 @arch_local_save_flags() #11, !dbg !10045
  store i64 %call, i64* %f, align 8, !dbg !10046
  call void @arch_local_irq_disable() #11, !dbg !10047
  %0 = load i64, i64* %f, align 8, !dbg !10048
  ret i64 %0, !dbg !10049
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !10050 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !10051, metadata !DIExpression()), !dbg !10053
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !10054, metadata !DIExpression()), !dbg !10053
  %0 = load i64, i64* %__edi, align 8, !dbg !10053
  store i64 %0, i64* %__edi, align 8, !dbg !10053
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !10055, metadata !DIExpression()), !dbg !10053
  %1 = load i64, i64* %__esi, align 8, !dbg !10053
  store i64 %1, i64* %__esi, align 8, !dbg !10053
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !10056, metadata !DIExpression()), !dbg !10053
  %2 = load i64, i64* %__edx, align 8, !dbg !10053
  store i64 %2, i64* %__edx, align 8, !dbg !10053
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !10057, metadata !DIExpression()), !dbg !10053
  %3 = load i64, i64* %__ecx, align 8, !dbg !10053
  store i64 %3, i64* %__ecx, align 8, !dbg !10053
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !10058, metadata !DIExpression()), !dbg !10053
  %4 = load i64, i64* %__eax, align 8, !dbg !10053
  store i64 %4, i64* %__eax, align 8, !dbg !10053
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !10053
  %6 = call i64 @llvm.read_register.i64(metadata !5199), !dbg !10059
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #7, !dbg !10059, !srcloc !10062
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !10059
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !10059
  store i64 %asmresult, i64* %__eax, align 8, !dbg !10059
  call void @llvm.write_register.i64(metadata !5199, i64 %asmresult1), !dbg !10059
  %8 = load i64, i64* %__eax, align 8, !dbg !10059
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !10063, metadata !DIExpression()), !dbg !10065
  store i64 -1, i64* %__mask, align 8, !dbg !10065
  %9 = load i64, i64* %__mask, align 8, !dbg !10065
  store i64 %9, i64* %tmp, align 8, !dbg !10065
  %10 = load i64, i64* %tmp, align 8, !dbg !10065
  %and = and i64 %8, %10, !dbg !10059
  store i64 %and, i64* %__ret, align 8, !dbg !10059
  %11 = load i64, i64* %__ret, align 8, !dbg !10053
  store i64 %11, i64* %tmp2, align 8, !dbg !10066
  %12 = load i64, i64* %tmp2, align 8, !dbg !10053
  ret i64 %12, !dbg !10067
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !10068 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !10071, metadata !DIExpression()), !dbg !10072
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !10073, metadata !DIExpression()), !dbg !10075
  %0 = load i64, i64* %__edi, align 8, !dbg !10075
  store i64 %0, i64* %__edi, align 8, !dbg !10075
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !10076, metadata !DIExpression()), !dbg !10075
  %1 = load i64, i64* %__esi, align 8, !dbg !10075
  store i64 %1, i64* %__esi, align 8, !dbg !10075
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !10077, metadata !DIExpression()), !dbg !10075
  %2 = load i64, i64* %__edx, align 8, !dbg !10075
  store i64 %2, i64* %__edx, align 8, !dbg !10075
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !10078, metadata !DIExpression()), !dbg !10075
  %3 = load i64, i64* %__ecx, align 8, !dbg !10075
  store i64 %3, i64* %__ecx, align 8, !dbg !10075
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !10079, metadata !DIExpression()), !dbg !10075
  %4 = load i64, i64* %__eax, align 8, !dbg !10075
  store i64 %4, i64* %__eax, align 8, !dbg !10075
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !10075
  %6 = call i64 @llvm.read_register.i64(metadata !5199), !dbg !10075
  %7 = load i64, i64* %f.addr, align 8, !dbg !10075
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #7, !dbg !10075, !srcloc !10080
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !10075
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !10075
  store i64 %asmresult, i64* %__eax, align 8, !dbg !10075
  call void @llvm.write_register.i64(metadata !5199, i64 %asmresult1), !dbg !10075
  ret void, !dbg !10081
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genpd_lock_mtx(%struct.generic_pm_domain* %genpd) #0 !dbg !10082 {
entry:
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !10083, metadata !DIExpression()), !dbg !10084
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10085
  %1 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %0, i32 0, i32 39, !dbg !10086
  %mlock = bitcast %union.anon.80* %1 to %struct.mutex*, !dbg !10086
  call void @mutex_lock(%struct.mutex* %mlock) #11, !dbg !10087
  ret void, !dbg !10088
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genpd_lock_nested_mtx(%struct.generic_pm_domain* %genpd, i32 %depth) #0 !dbg !10089 {
entry:
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %depth.addr = alloca i32, align 4
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !10090, metadata !DIExpression()), !dbg !10091
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !10092, metadata !DIExpression()), !dbg !10093
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10094
  %1 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %0, i32 0, i32 39, !dbg !10094
  %mlock = bitcast %union.anon.80* %1 to %struct.mutex*, !dbg !10094
  call void @mutex_lock(%struct.mutex* %mlock) #11, !dbg !10094
  ret void, !dbg !10095
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_lock_interruptible_mtx(%struct.generic_pm_domain* %genpd) #0 !dbg !10096 {
entry:
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !10097, metadata !DIExpression()), !dbg !10098
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10099
  %1 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %0, i32 0, i32 39, !dbg !10100
  %mlock = bitcast %union.anon.80* %1 to %struct.mutex*, !dbg !10100
  %call = call i32 @mutex_lock_interruptible(%struct.mutex* %mlock) #11, !dbg !10101
  ret i32 %call, !dbg !10102
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genpd_unlock_mtx(%struct.generic_pm_domain* %genpd) #0 !dbg !10103 {
entry:
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !10104, metadata !DIExpression()), !dbg !10105
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10106
  %1 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %0, i32 0, i32 39, !dbg !10107
  %mlock = bitcast %union.anon.80* %1 to %struct.mutex*, !dbg !10107
  call void @mutex_unlock(%struct.mutex* %mlock) #11, !dbg !10108
  ret void, !dbg !10109
}

; Function Attrs: noredzone
declare dso_local i32 @mutex_lock_interruptible(%struct.mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_power_off(%struct.generic_pm_domain* %genpd, i1 zeroext %one_dev_on, i32 %depth) #0 !dbg !10110 {
entry:
  %v.addr.i1.i97 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i97, metadata !6292, metadata !DIExpression()), !dbg !10113
  %v.addr.i.i98 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i98, metadata !6303, metadata !DIExpression()), !dbg !10117
  %size.addr.i.i99 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i99, metadata !6307, metadata !DIExpression()), !dbg !10119
  %v.addr.i100 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i100, metadata !6309, metadata !DIExpression()), !dbg !10120
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !6292, metadata !DIExpression()), !dbg !10121
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6303, metadata !DIExpression()), !dbg !10125
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6307, metadata !DIExpression()), !dbg !10127
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !6309, metadata !DIExpression()), !dbg !10128
  %retval = alloca i32, align 4
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %one_dev_on.addr = alloca i8, align 1
  %depth.addr = alloca i32, align 4
  %pdd = alloca %struct.pm_domain_data*, align 8
  %link = alloca %struct.gpd_link*, align 8
  %not_suspended = alloca i32, align 4
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pm_domain_data*, align 8
  %stat = alloca i32, align 4
  %__mptr23 = alloca i8*, align 8
  %tmp28 = alloca %struct.pm_domain_data*, align 8
  %__mptr68 = alloca i8*, align 8
  %tmp72 = alloca %struct.gpd_link*, align 8
  %__mptr89 = alloca i8*, align 8
  %tmp94 = alloca %struct.gpd_link*, align 8
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !10129, metadata !DIExpression()), !dbg !10130
  %frombool = zext i1 %one_dev_on to i8
  store i8 %frombool, i8* %one_dev_on.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %one_dev_on.addr, metadata !10131, metadata !DIExpression()), !dbg !10132
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !10133, metadata !DIExpression()), !dbg !10134
  call void @llvm.dbg.declare(metadata %struct.pm_domain_data** %pdd, metadata !10135, metadata !DIExpression()), !dbg !10136
  call void @llvm.dbg.declare(metadata %struct.gpd_link** %link, metadata !10137, metadata !DIExpression()), !dbg !10138
  call void @llvm.dbg.declare(metadata i32* %not_suspended, metadata !10139, metadata !DIExpression()), !dbg !10140
  store i32 0, i32* %not_suspended, align 4, !dbg !10140
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10141, metadata !DIExpression()), !dbg !10142
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10143
  %status = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %0, i32 0, i32 12, !dbg !10143
  %1 = load i32, i32* %status, align 4, !dbg !10143
  %cmp = icmp eq i32 %1, 0, !dbg !10143
  br i1 %cmp, label %lor.lhs.false, label %if.then, !dbg !10145

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10146
  %prepared_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %2, i32 0, i32 15, !dbg !10147
  %3 = load i32, i32* %prepared_count, align 8, !dbg !10147
  %cmp1 = icmp ugt i32 %3, 0, !dbg !10148
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10149

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !10150
  br label %return, !dbg !10150

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10151
  %flags = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %4, i32 0, i32 31, !dbg !10151
  %5 = load i32, i32* %flags, align 8, !dbg !10151
  %and = and i32 %5, 4, !dbg !10151
  %tobool = icmp ne i32 %and, 0, !dbg !10151
  br i1 %tobool, label %if.then8, label %lor.lhs.false2, !dbg !10152

lor.lhs.false2:                                   ; preds = %if.end
  %6 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10153
  %flags3 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %6, i32 0, i32 31, !dbg !10153
  %7 = load i32, i32* %flags3, align 8, !dbg !10153
  %and4 = and i32 %7, 32, !dbg !10153
  %tobool5 = icmp ne i32 %and4, 0, !dbg !10153
  br i1 %tobool5, label %if.then8, label %lor.lhs.false6, !dbg !10154

lor.lhs.false6:                                   ; preds = %lor.lhs.false2
  %8 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10155
  %sd_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %8, i32 0, i32 11, !dbg !10156
  store %struct.atomic_t* %sd_count, %struct.atomic_t** %v.addr.i, align 8
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10157
  %10 = bitcast %struct.atomic_t* %9 to i8*, !dbg !10157
  store i8* %10, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %11 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10158
  %12 = load i64, i64* %size.addr.i.i, align 8, !dbg !10159
  %conv.i.i = trunc i64 %12 to i32, !dbg !10159
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %11, i32 %conv.i.i) #13, !dbg !10160
  %13 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10161
  %14 = load i64, i64* %size.addr.i.i, align 8, !dbg !10161
  call void @kcsan_check_access(i8* %13, i64 %14, i32 4) #13, !dbg !10161
  %15 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10162
  store %struct.atomic_t* %15, %struct.atomic_t** %v.addr.i1.i, align 8
  %16 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !10163
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %16, i32 0, i32 0, !dbg !10163
  %17 = load volatile i32, i32* %counter.i.i, align 4, !dbg !10163
  %cmp7 = icmp sgt i32 %17, 0, !dbg !10164
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !10165

if.then8:                                         ; preds = %lor.lhs.false6, %lor.lhs.false2, %if.end
  store i32 -16, i32* %retval, align 4, !dbg !10166
  br label %return, !dbg !10166

if.end9:                                          ; preds = %lor.lhs.false6
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10167, metadata !DIExpression()), !dbg !10170
  %18 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10170
  %dev_list = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %18, i32 0, i32 5, !dbg !10170
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %dev_list, i32 0, i32 0, !dbg !10170
  %19 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10170
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !10170
  store i8* %20, i8** %__mptr, align 8, !dbg !10170
  br label %do.body, !dbg !10170

do.body:                                          ; preds = %if.end9
  br label %do.end, !dbg !10171

do.end:                                           ; preds = %do.body
  %21 = load i8*, i8** %__mptr, align 8, !dbg !10170
  %add.ptr = getelementptr i8, i8* %21, i64 0, !dbg !10170
  %22 = bitcast i8* %add.ptr to %struct.pm_domain_data*, !dbg !10170
  store %struct.pm_domain_data* %22, %struct.pm_domain_data** %tmp, align 8, !dbg !10171
  %23 = load %struct.pm_domain_data*, %struct.pm_domain_data** %tmp, align 8, !dbg !10170
  store %struct.pm_domain_data* %23, %struct.pm_domain_data** %pdd, align 8, !dbg !10173
  br label %for.cond, !dbg !10173

for.cond:                                         ; preds = %do.end27, %do.end
  %24 = load %struct.pm_domain_data*, %struct.pm_domain_data** %pdd, align 8, !dbg !10174
  %list_node = getelementptr inbounds %struct.pm_domain_data, %struct.pm_domain_data* %24, i32 0, i32 0, !dbg !10174
  %25 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10174
  %dev_list10 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %25, i32 0, i32 5, !dbg !10174
  %cmp11 = icmp eq %struct.list_head* %list_node, %dev_list10, !dbg !10174
  %lnot = xor i1 %cmp11, true, !dbg !10174
  br i1 %lnot, label %for.body, label %for.end, !dbg !10173

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %stat, metadata !10176, metadata !DIExpression()), !dbg !10178
  %26 = load %struct.pm_domain_data*, %struct.pm_domain_data** %pdd, align 8, !dbg !10179
  %dev = getelementptr inbounds %struct.pm_domain_data, %struct.pm_domain_data* %26, i32 0, i32 1, !dbg !10180
  %27 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10180
  %call12 = call i32 @dev_pm_qos_flags(%struct.device* %27, i32 1) #11, !dbg !10181
  store i32 %call12, i32* %stat, align 4, !dbg !10182
  %28 = load i32, i32* %stat, align 4, !dbg !10183
  %cmp13 = icmp sgt i32 %28, 0, !dbg !10185
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !10186

if.then14:                                        ; preds = %for.body
  store i32 -16, i32* %retval, align 4, !dbg !10187
  br label %return, !dbg !10187

if.end15:                                         ; preds = %for.body
  %29 = load %struct.pm_domain_data*, %struct.pm_domain_data** %pdd, align 8, !dbg !10188
  %dev16 = getelementptr inbounds %struct.pm_domain_data, %struct.pm_domain_data* %29, i32 0, i32 1, !dbg !10190
  %30 = load %struct.device*, %struct.device** %dev16, align 8, !dbg !10190
  %call17 = call zeroext i1 @pm_runtime_suspended(%struct.device* %30) #11, !dbg !10191
  br i1 %call17, label %lor.lhs.false18, label %if.then21, !dbg !10192

lor.lhs.false18:                                  ; preds = %if.end15
  %31 = load %struct.pm_domain_data*, %struct.pm_domain_data** %pdd, align 8, !dbg !10193
  %dev19 = getelementptr inbounds %struct.pm_domain_data, %struct.pm_domain_data* %31, i32 0, i32 1, !dbg !10194
  %32 = load %struct.device*, %struct.device** %dev19, align 8, !dbg !10194
  %33 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10195
  %call20 = call zeroext i1 @irq_safe_dev_in_no_sleep_domain(%struct.device* %32, %struct.generic_pm_domain* %33) #11, !dbg !10196
  br i1 %call20, label %if.then21, label %if.end22, !dbg !10197

if.then21:                                        ; preds = %lor.lhs.false18, %if.end15
  %34 = load i32, i32* %not_suspended, align 4, !dbg !10198
  %inc = add i32 %34, 1, !dbg !10198
  store i32 %inc, i32* %not_suspended, align 4, !dbg !10198
  br label %if.end22, !dbg !10199

if.end22:                                         ; preds = %if.then21, %lor.lhs.false18
  br label %for.inc, !dbg !10200

for.inc:                                          ; preds = %if.end22
  call void @llvm.dbg.declare(metadata i8** %__mptr23, metadata !10201, metadata !DIExpression()), !dbg !10203
  %35 = load %struct.pm_domain_data*, %struct.pm_domain_data** %pdd, align 8, !dbg !10203
  %list_node24 = getelementptr inbounds %struct.pm_domain_data, %struct.pm_domain_data* %35, i32 0, i32 0, !dbg !10203
  %next25 = getelementptr inbounds %struct.list_head, %struct.list_head* %list_node24, i32 0, i32 0, !dbg !10203
  %36 = load %struct.list_head*, %struct.list_head** %next25, align 8, !dbg !10203
  %37 = bitcast %struct.list_head* %36 to i8*, !dbg !10203
  store i8* %37, i8** %__mptr23, align 8, !dbg !10203
  br label %do.body26, !dbg !10203

do.body26:                                        ; preds = %for.inc
  br label %do.end27, !dbg !10204

do.end27:                                         ; preds = %do.body26
  %38 = load i8*, i8** %__mptr23, align 8, !dbg !10203
  %add.ptr29 = getelementptr i8, i8* %38, i64 0, !dbg !10203
  %39 = bitcast i8* %add.ptr29 to %struct.pm_domain_data*, !dbg !10203
  store %struct.pm_domain_data* %39, %struct.pm_domain_data** %tmp28, align 8, !dbg !10204
  %40 = load %struct.pm_domain_data*, %struct.pm_domain_data** %tmp28, align 8, !dbg !10203
  store %struct.pm_domain_data* %40, %struct.pm_domain_data** %pdd, align 8, !dbg !10174
  br label %for.cond, !dbg !10174, !llvm.loop !10206

for.end:                                          ; preds = %for.cond
  %41 = load i32, i32* %not_suspended, align 4, !dbg !10208
  %cmp30 = icmp ugt i32 %41, 1, !dbg !10210
  br i1 %cmp30, label %if.then34, label %lor.lhs.false31, !dbg !10211

lor.lhs.false31:                                  ; preds = %for.end
  %42 = load i32, i32* %not_suspended, align 4, !dbg !10212
  %cmp32 = icmp eq i32 %42, 1, !dbg !10213
  br i1 %cmp32, label %land.lhs.true, label %if.end35, !dbg !10214

land.lhs.true:                                    ; preds = %lor.lhs.false31
  %43 = load i8, i8* %one_dev_on.addr, align 1, !dbg !10215
  %tobool33 = trunc i8 %43 to i1, !dbg !10215
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !10216

if.then34:                                        ; preds = %land.lhs.true, %for.end
  store i32 -16, i32* %retval, align 4, !dbg !10217
  br label %return, !dbg !10217

if.end35:                                         ; preds = %land.lhs.true, %lor.lhs.false31
  %44 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10218
  %gov = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %44, i32 0, i32 6, !dbg !10220
  %45 = load %struct.dev_power_governor*, %struct.dev_power_governor** %gov, align 8, !dbg !10220
  %tobool36 = icmp ne %struct.dev_power_governor* %45, null, !dbg !10218
  br i1 %tobool36, label %land.lhs.true37, label %if.end46, !dbg !10221

land.lhs.true37:                                  ; preds = %if.end35
  %46 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10222
  %gov38 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %46, i32 0, i32 6, !dbg !10223
  %47 = load %struct.dev_power_governor*, %struct.dev_power_governor** %gov38, align 8, !dbg !10223
  %power_down_ok = getelementptr inbounds %struct.dev_power_governor, %struct.dev_power_governor* %47, i32 0, i32 0, !dbg !10224
  %48 = load i1 (%struct.dev_pm_domain*)*, i1 (%struct.dev_pm_domain*)** %power_down_ok, align 8, !dbg !10224
  %tobool39 = icmp ne i1 (%struct.dev_pm_domain*)* %48, null, !dbg !10222
  br i1 %tobool39, label %if.then40, label %if.end46, !dbg !10225

if.then40:                                        ; preds = %land.lhs.true37
  %49 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10226
  %gov41 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %49, i32 0, i32 6, !dbg !10229
  %50 = load %struct.dev_power_governor*, %struct.dev_power_governor** %gov41, align 8, !dbg !10229
  %power_down_ok42 = getelementptr inbounds %struct.dev_power_governor, %struct.dev_power_governor* %50, i32 0, i32 0, !dbg !10230
  %51 = load i1 (%struct.dev_pm_domain*)*, i1 (%struct.dev_pm_domain*)** %power_down_ok42, align 8, !dbg !10230
  %52 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10231
  %domain = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %52, i32 0, i32 1, !dbg !10232
  %call43 = call zeroext i1 %51(%struct.dev_pm_domain* %domain) #11, !dbg !10226
  br i1 %call43, label %if.end45, label %if.then44, !dbg !10233

if.then44:                                        ; preds = %if.then40
  store i32 -11, i32* %retval, align 4, !dbg !10234
  br label %return, !dbg !10234

if.end45:                                         ; preds = %if.then40
  br label %if.end46, !dbg !10235

if.end46:                                         ; preds = %if.end45, %land.lhs.true37, %if.end35
  %53 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10236
  %gov47 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %53, i32 0, i32 6, !dbg !10238
  %54 = load %struct.dev_power_governor*, %struct.dev_power_governor** %gov47, align 8, !dbg !10238
  %tobool48 = icmp ne %struct.dev_power_governor* %54, null, !dbg !10236
  br i1 %tobool48, label %if.end50, label %if.then49, !dbg !10239

if.then49:                                        ; preds = %if.end46
  %55 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10240
  %state_idx = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %55, i32 0, i32 35, !dbg !10241
  store i32 0, i32* %state_idx, align 4, !dbg !10242
  br label %if.end50, !dbg !10240

if.end50:                                         ; preds = %if.then49, %if.end46
  %56 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10243
  %sd_count51 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %56, i32 0, i32 11, !dbg !10244
  store %struct.atomic_t* %sd_count51, %struct.atomic_t** %v.addr.i100, align 8
  %57 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i100, align 8, !dbg !10245
  %58 = bitcast %struct.atomic_t* %57 to i8*, !dbg !10245
  store i8* %58, i8** %v.addr.i.i98, align 8
  store i64 4, i64* %size.addr.i.i99, align 8
  %59 = load i8*, i8** %v.addr.i.i98, align 8, !dbg !10246
  %60 = load i64, i64* %size.addr.i.i99, align 8, !dbg !10247
  %conv.i.i101 = trunc i64 %60 to i32, !dbg !10247
  %call.i.i102 = call zeroext i1 @kasan_check_read(i8* %59, i32 %conv.i.i101) #13, !dbg !10248
  %61 = load i8*, i8** %v.addr.i.i98, align 8, !dbg !10249
  %62 = load i64, i64* %size.addr.i.i99, align 8, !dbg !10249
  call void @kcsan_check_access(i8* %61, i64 %62, i32 4) #13, !dbg !10249
  %63 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i100, align 8, !dbg !10250
  store %struct.atomic_t* %63, %struct.atomic_t** %v.addr.i1.i97, align 8
  %64 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i97, align 8, !dbg !10251
  %counter.i.i103 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %64, i32 0, i32 0, !dbg !10251
  %65 = load volatile i32, i32* %counter.i.i103, align 4, !dbg !10251
  %cmp53 = icmp sgt i32 %65, 0, !dbg !10252
  br i1 %cmp53, label %if.then54, label %if.end55, !dbg !10253

if.then54:                                        ; preds = %if.end50
  store i32 -16, i32* %retval, align 4, !dbg !10254
  br label %return, !dbg !10254

if.end55:                                         ; preds = %if.end50
  %66 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10255
  %call56 = call i32 @_genpd_power_off(%struct.generic_pm_domain* %66, i1 zeroext true) #11, !dbg !10256
  store i32 %call56, i32* %ret, align 4, !dbg !10257
  %67 = load i32, i32* %ret, align 4, !dbg !10258
  %tobool57 = icmp ne i32 %67, 0, !dbg !10258
  br i1 %tobool57, label %if.then58, label %if.end61, !dbg !10260

if.then58:                                        ; preds = %if.end55
  %68 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10261
  %states = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %68, i32 0, i32 32, !dbg !10263
  %69 = load %struct.genpd_power_state*, %struct.genpd_power_state** %states, align 8, !dbg !10263
  %70 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10264
  %state_idx59 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %70, i32 0, i32 35, !dbg !10265
  %71 = load i32, i32* %state_idx59, align 4, !dbg !10265
  %idxprom = zext i32 %71 to i64, !dbg !10261
  %arrayidx = getelementptr %struct.genpd_power_state, %struct.genpd_power_state* %69, i64 %idxprom, !dbg !10261
  %rejected = getelementptr inbounds %struct.genpd_power_state, %struct.genpd_power_state* %arrayidx, i32 0, i32 4, !dbg !10266
  %72 = load i64, i64* %rejected, align 8, !dbg !10267
  %inc60 = add i64 %72, 1, !dbg !10267
  store i64 %inc60, i64* %rejected, align 8, !dbg !10267
  %73 = load i32, i32* %ret, align 4, !dbg !10268
  store i32 %73, i32* %retval, align 4, !dbg !10269
  br label %return, !dbg !10269

if.end61:                                         ; preds = %if.end55
  %74 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10270
  %status62 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %74, i32 0, i32 12, !dbg !10271
  store i32 1, i32* %status62, align 4, !dbg !10272
  %75 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10273
  call void @genpd_update_accounting(%struct.generic_pm_domain* %75) #11, !dbg !10274
  %76 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10275
  %states63 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %76, i32 0, i32 32, !dbg !10276
  %77 = load %struct.genpd_power_state*, %struct.genpd_power_state** %states63, align 8, !dbg !10276
  %78 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10277
  %state_idx64 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %78, i32 0, i32 35, !dbg !10278
  %79 = load i32, i32* %state_idx64, align 4, !dbg !10278
  %idxprom65 = zext i32 %79 to i64, !dbg !10275
  %arrayidx66 = getelementptr %struct.genpd_power_state, %struct.genpd_power_state* %77, i64 %idxprom65, !dbg !10275
  %usage = getelementptr inbounds %struct.genpd_power_state, %struct.genpd_power_state* %arrayidx66, i32 0, i32 3, !dbg !10279
  %80 = load i64, i64* %usage, align 8, !dbg !10280
  %inc67 = add i64 %80, 1, !dbg !10280
  store i64 %inc67, i64* %usage, align 8, !dbg !10280
  call void @llvm.dbg.declare(metadata i8** %__mptr68, metadata !10281, metadata !DIExpression()), !dbg !10284
  %81 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10284
  %child_links = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %81, i32 0, i32 4, !dbg !10284
  %next69 = getelementptr inbounds %struct.list_head, %struct.list_head* %child_links, i32 0, i32 0, !dbg !10284
  %82 = load %struct.list_head*, %struct.list_head** %next69, align 8, !dbg !10284
  %83 = bitcast %struct.list_head* %82 to i8*, !dbg !10284
  store i8* %83, i8** %__mptr68, align 8, !dbg !10284
  br label %do.body70, !dbg !10284

do.body70:                                        ; preds = %if.end61
  br label %do.end71, !dbg !10285

do.end71:                                         ; preds = %do.body70
  %84 = load i8*, i8** %__mptr68, align 8, !dbg !10284
  %add.ptr73 = getelementptr i8, i8* %84, i64 -32, !dbg !10284
  %85 = bitcast i8* %add.ptr73 to %struct.gpd_link*, !dbg !10284
  store %struct.gpd_link* %85, %struct.gpd_link** %tmp72, align 8, !dbg !10285
  %86 = load %struct.gpd_link*, %struct.gpd_link** %tmp72, align 8, !dbg !10284
  store %struct.gpd_link* %86, %struct.gpd_link** %link, align 8, !dbg !10287
  br label %for.cond74, !dbg !10287

for.cond74:                                       ; preds = %do.end93, %do.end71
  %87 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !10288
  %child_node = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %87, i32 0, i32 3, !dbg !10288
  %88 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10288
  %child_links75 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %88, i32 0, i32 4, !dbg !10288
  %cmp76 = icmp eq %struct.list_head* %child_node, %child_links75, !dbg !10288
  %lnot77 = xor i1 %cmp76, true, !dbg !10288
  br i1 %lnot77, label %for.body78, label %for.end96, !dbg !10287

for.body78:                                       ; preds = %for.cond74
  %89 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !10290
  %parent = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %89, i32 0, i32 0, !dbg !10292
  %90 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !10292
  %call79 = call zeroext i1 @genpd_sd_counter_dec(%struct.generic_pm_domain* %90) #11, !dbg !10293
  %91 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !10294
  %parent80 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %91, i32 0, i32 0, !dbg !10294
  %92 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent80, align 8, !dbg !10294
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %92, i32 0, i32 38, !dbg !10294
  %93 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !10294
  %lock_nested = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %93, i32 0, i32 1, !dbg !10294
  %94 = load void (%struct.generic_pm_domain*, i32)*, void (%struct.generic_pm_domain*, i32)** %lock_nested, align 8, !dbg !10294
  %95 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !10294
  %parent81 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %95, i32 0, i32 0, !dbg !10294
  %96 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent81, align 8, !dbg !10294
  %97 = load i32, i32* %depth.addr, align 4, !dbg !10294
  %add = add i32 %97, 1, !dbg !10294
  call void %94(%struct.generic_pm_domain* %96, i32 %add) #11, !dbg !10294
  %98 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !10295
  %parent82 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %98, i32 0, i32 0, !dbg !10296
  %99 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent82, align 8, !dbg !10296
  %100 = load i32, i32* %depth.addr, align 4, !dbg !10297
  %add83 = add i32 %100, 1, !dbg !10298
  %call84 = call i32 @genpd_power_off(%struct.generic_pm_domain* %99, i1 zeroext false, i32 %add83) #11, !dbg !10299
  %101 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !10300
  %parent85 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %101, i32 0, i32 0, !dbg !10300
  %102 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent85, align 8, !dbg !10300
  %lock_ops86 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %102, i32 0, i32 38, !dbg !10300
  %103 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops86, align 8, !dbg !10300
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %103, i32 0, i32 3, !dbg !10300
  %104 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !10300
  %105 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !10300
  %parent87 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %105, i32 0, i32 0, !dbg !10300
  %106 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent87, align 8, !dbg !10300
  call void %104(%struct.generic_pm_domain* %106) #11, !dbg !10300
  br label %for.inc88, !dbg !10301

for.inc88:                                        ; preds = %for.body78
  call void @llvm.dbg.declare(metadata i8** %__mptr89, metadata !10302, metadata !DIExpression()), !dbg !10304
  %107 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !10304
  %child_node90 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %107, i32 0, i32 3, !dbg !10304
  %next91 = getelementptr inbounds %struct.list_head, %struct.list_head* %child_node90, i32 0, i32 0, !dbg !10304
  %108 = load %struct.list_head*, %struct.list_head** %next91, align 8, !dbg !10304
  %109 = bitcast %struct.list_head* %108 to i8*, !dbg !10304
  store i8* %109, i8** %__mptr89, align 8, !dbg !10304
  br label %do.body92, !dbg !10304

do.body92:                                        ; preds = %for.inc88
  br label %do.end93, !dbg !10305

do.end93:                                         ; preds = %do.body92
  %110 = load i8*, i8** %__mptr89, align 8, !dbg !10304
  %add.ptr95 = getelementptr i8, i8* %110, i64 -32, !dbg !10304
  %111 = bitcast i8* %add.ptr95 to %struct.gpd_link*, !dbg !10304
  store %struct.gpd_link* %111, %struct.gpd_link** %tmp94, align 8, !dbg !10305
  %112 = load %struct.gpd_link*, %struct.gpd_link** %tmp94, align 8, !dbg !10304
  store %struct.gpd_link* %112, %struct.gpd_link** %link, align 8, !dbg !10288
  br label %for.cond74, !dbg !10288, !llvm.loop !10307

for.end96:                                        ; preds = %for.cond74
  store i32 0, i32* %retval, align 4, !dbg !10309
  br label %return, !dbg !10309

return:                                           ; preds = %for.end96, %if.then58, %if.then54, %if.then44, %if.then34, %if.then14, %if.then8, %if.then
  %113 = load i32, i32* %retval, align 4, !dbg !10310
  ret i32 %113, !dbg !10310
}

; Function Attrs: noredzone
declare dso_local i32 @dev_pm_qos_flags(%struct.device*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pm_runtime_suspended(%struct.device* %dev) #0 !dbg !10311 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10313, metadata !DIExpression()), !dbg !10314
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10315
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !10316
  %runtime_status = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 18, !dbg !10317
  %1 = load i32, i32* %runtime_status, align 4, !dbg !10317
  %cmp = icmp eq i32 %1, 2, !dbg !10318
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10319

land.rhs:                                         ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10320
  %power1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 11, !dbg !10321
  %disable_depth = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 15, !dbg !10322
  %bf.load = load i16, i16* %disable_depth, align 8, !dbg !10322
  %bf.clear = and i16 %bf.load, 7, !dbg !10322
  %bf.cast = zext i16 %bf.clear to i32, !dbg !10322
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !10323
  %lnot = xor i1 %tobool, true, !dbg !10323
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !10324
  ret i1 %3, !dbg !10325
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @irq_safe_dev_in_no_sleep_domain(%struct.device* %dev, %struct.generic_pm_domain* %genpd) #0 !dbg !5182 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %ret = alloca i8, align 1
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10326, metadata !DIExpression()), !dbg !10327
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !10328, metadata !DIExpression()), !dbg !10329
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !10330, metadata !DIExpression()), !dbg !10331
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10332
  %call = call zeroext i1 @pm_runtime_is_irq_safe(%struct.device* %0) #11, !dbg !10333
  br i1 %call, label %land.rhs, label %land.end, !dbg !10334

land.rhs:                                         ; preds = %entry
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10335
  %flags = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %1, i32 0, i32 31, !dbg !10335
  %2 = load i32, i32* %flags, align 8, !dbg !10335
  %and = and i32 %2, 2, !dbg !10335
  %tobool = icmp ne i32 %and, 0, !dbg !10336
  %lnot = xor i1 %tobool, true, !dbg !10336
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !10337
  %frombool = zext i1 %3 to i8, !dbg !10338
  store i8 %frombool, i8* %ret, align 1, !dbg !10338
  %4 = load i8, i8* %ret, align 1, !dbg !10339
  %tobool1 = trunc i8 %4 to i1, !dbg !10339
  br i1 %tobool1, label %land.lhs.true, label %if.end7, !dbg !10341

land.lhs.true:                                    ; preds = %land.end
  %5 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10342
  %flags2 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %5, i32 0, i32 31, !dbg !10342
  %6 = load i32, i32* %flags2, align 8, !dbg !10342
  %and3 = and i32 %6, 4, !dbg !10342
  %tobool4 = icmp ne i32 %and3, 0, !dbg !10342
  br i1 %tobool4, label %if.end7, label %if.then, !dbg !10343

if.then:                                          ; preds = %land.lhs.true
  br label %do.body, !dbg !10344

do.body:                                          ; preds = %if.then
  %7 = load i8, i8* @irq_safe_dev_in_no_sleep_domain.__print_once, align 1, !dbg !10345
  %tobool5 = trunc i8 %7 to i1, !dbg !10345
  br i1 %tobool5, label %if.end, label %if.then6, !dbg !10348

if.then6:                                         ; preds = %do.body
  store i8 1, i8* @irq_safe_dev_in_no_sleep_domain.__print_once, align 1, !dbg !10349
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10349
  %9 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10349
  %name = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %9, i32 0, i32 10, !dbg !10349
  %10 = load i8*, i8** %name, align 8, !dbg !10349
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.16, i64 0, i64 0), i8* %10) #12, !dbg !10349
  br label %if.end, !dbg !10349

if.end:                                           ; preds = %if.then6, %do.body
  br label %do.end, !dbg !10348

do.end:                                           ; preds = %if.end
  br label %if.end7, !dbg !10348

if.end7:                                          ; preds = %do.end, %land.lhs.true, %land.end
  %11 = load i8, i8* %ret, align 1, !dbg !10351
  %tobool8 = trunc i8 %11 to i1, !dbg !10351
  ret i1 %tobool8, !dbg !10352
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genpd_update_accounting(%struct.generic_pm_domain* %genpd) #0 !dbg !10353 {
entry:
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !10354, metadata !DIExpression()), !dbg !10355
  ret void, !dbg !10356
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pm_runtime_is_irq_safe(%struct.device* %dev) #0 !dbg !10357 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10358, metadata !DIExpression()), !dbg !10359
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10360
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !10361
  %irq_safe = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 15, !dbg !10362
  %bf.load = load i16, i16* %irq_safe, align 8, !dbg !10362
  %bf.lshr = lshr i16 %bf.load, 9, !dbg !10362
  %bf.clear = and i16 %bf.lshr, 1, !dbg !10362
  %bf.cast = zext i16 %bf.clear to i32, !dbg !10362
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !10360
  ret i1 %tobool, !dbg !10363
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.generic_pm_domain_data* @dev_gpd_data(%struct.device* %dev) #0 !dbg !10364 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10365, metadata !DIExpression()), !dbg !10366
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10367
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !10368
  %subsys_data = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 25, !dbg !10369
  %1 = load %struct.pm_subsys_data*, %struct.pm_subsys_data** %subsys_data, align 8, !dbg !10369
  %domain_data = getelementptr inbounds %struct.pm_subsys_data, %struct.pm_subsys_data* %1, i32 0, i32 3, !dbg !10370
  %2 = load %struct.pm_domain_data*, %struct.pm_domain_data** %domain_data, align 8, !dbg !10370
  %call = call %struct.generic_pm_domain_data* @to_gpd_data(%struct.pm_domain_data* %2) #11, !dbg !10371
  ret %struct.generic_pm_domain_data* %call, !dbg !10372
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pm_runtime_enabled(%struct.device* %dev) #0 !dbg !10373 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10374, metadata !DIExpression()), !dbg !10375
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10376
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !10377
  %disable_depth = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 15, !dbg !10378
  %bf.load = load i16, i16* %disable_depth, align 8, !dbg !10378
  %bf.clear = and i16 %bf.load, 7, !dbg !10378
  %bf.cast = zext i16 %bf.clear to i32, !dbg !10378
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !10379
  %lnot = xor i1 %tobool, true, !dbg !10379
  ret i1 %lnot, !dbg !10380
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__genpd_runtime_suspend(%struct.device* %dev) #0 !dbg !10381 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %cb = alloca i32 (%struct.device*)*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10382, metadata !DIExpression()), !dbg !10383
  call void @llvm.dbg.declare(metadata i32 (%struct.device*)** %cb, metadata !10384, metadata !DIExpression()), !dbg !10385
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10386
  %type = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10388
  %1 = load %struct.device_type*, %struct.device_type** %type, align 8, !dbg !10388
  %tobool = icmp ne %struct.device_type* %1, null, !dbg !10386
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !10389

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10390
  %type1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !10391
  %3 = load %struct.device_type*, %struct.device_type** %type1, align 8, !dbg !10391
  %pm = getelementptr inbounds %struct.device_type, %struct.device_type* %3, i32 0, i32 5, !dbg !10392
  %4 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %pm, align 8, !dbg !10392
  %tobool2 = icmp ne %struct.dev_pm_ops* %4, null, !dbg !10390
  br i1 %tobool2, label %if.then, label %if.else, !dbg !10393

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10394
  %type3 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 4, !dbg !10395
  %6 = load %struct.device_type*, %struct.device_type** %type3, align 8, !dbg !10395
  %pm4 = getelementptr inbounds %struct.device_type, %struct.device_type* %6, i32 0, i32 5, !dbg !10396
  %7 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %pm4, align 8, !dbg !10396
  %runtime_suspend = getelementptr inbounds %struct.dev_pm_ops, %struct.dev_pm_ops* %7, i32 0, i32 20, !dbg !10397
  %8 = load i32 (%struct.device*)*, i32 (%struct.device*)** %runtime_suspend, align 8, !dbg !10397
  store i32 (%struct.device*)* %8, i32 (%struct.device*)** %cb, align 8, !dbg !10398
  br label %if.end26, !dbg !10399

if.else:                                          ; preds = %land.lhs.true, %entry
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10400
  %class = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 29, !dbg !10402
  %10 = load %struct.class*, %struct.class** %class, align 8, !dbg !10402
  %tobool5 = icmp ne %struct.class* %10, null, !dbg !10400
  br i1 %tobool5, label %land.lhs.true6, label %if.else14, !dbg !10403

land.lhs.true6:                                   ; preds = %if.else
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10404
  %class7 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 29, !dbg !10405
  %12 = load %struct.class*, %struct.class** %class7, align 8, !dbg !10405
  %pm8 = getelementptr inbounds %struct.class, %struct.class* %12, i32 0, i32 13, !dbg !10406
  %13 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %pm8, align 8, !dbg !10406
  %tobool9 = icmp ne %struct.dev_pm_ops* %13, null, !dbg !10404
  br i1 %tobool9, label %if.then10, label %if.else14, !dbg !10407

if.then10:                                        ; preds = %land.lhs.true6
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10408
  %class11 = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 29, !dbg !10409
  %15 = load %struct.class*, %struct.class** %class11, align 8, !dbg !10409
  %pm12 = getelementptr inbounds %struct.class, %struct.class* %15, i32 0, i32 13, !dbg !10410
  %16 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %pm12, align 8, !dbg !10410
  %runtime_suspend13 = getelementptr inbounds %struct.dev_pm_ops, %struct.dev_pm_ops* %16, i32 0, i32 20, !dbg !10411
  %17 = load i32 (%struct.device*)*, i32 (%struct.device*)** %runtime_suspend13, align 8, !dbg !10411
  store i32 (%struct.device*)* %17, i32 (%struct.device*)** %cb, align 8, !dbg !10412
  br label %if.end25, !dbg !10413

if.else14:                                        ; preds = %land.lhs.true6, %if.else
  %18 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10414
  %bus = getelementptr inbounds %struct.device, %struct.device* %18, i32 0, i32 5, !dbg !10416
  %19 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !10416
  %tobool15 = icmp ne %struct.bus_type* %19, null, !dbg !10414
  br i1 %tobool15, label %land.lhs.true16, label %if.else24, !dbg !10417

land.lhs.true16:                                  ; preds = %if.else14
  %20 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10418
  %bus17 = getelementptr inbounds %struct.device, %struct.device* %20, i32 0, i32 5, !dbg !10419
  %21 = load %struct.bus_type*, %struct.bus_type** %bus17, align 8, !dbg !10419
  %pm18 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %21, i32 0, i32 18, !dbg !10420
  %22 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %pm18, align 8, !dbg !10420
  %tobool19 = icmp ne %struct.dev_pm_ops* %22, null, !dbg !10418
  br i1 %tobool19, label %if.then20, label %if.else24, !dbg !10421

if.then20:                                        ; preds = %land.lhs.true16
  %23 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10422
  %bus21 = getelementptr inbounds %struct.device, %struct.device* %23, i32 0, i32 5, !dbg !10423
  %24 = load %struct.bus_type*, %struct.bus_type** %bus21, align 8, !dbg !10423
  %pm22 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %24, i32 0, i32 18, !dbg !10424
  %25 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %pm22, align 8, !dbg !10424
  %runtime_suspend23 = getelementptr inbounds %struct.dev_pm_ops, %struct.dev_pm_ops* %25, i32 0, i32 20, !dbg !10425
  %26 = load i32 (%struct.device*)*, i32 (%struct.device*)** %runtime_suspend23, align 8, !dbg !10425
  store i32 (%struct.device*)* %26, i32 (%struct.device*)** %cb, align 8, !dbg !10426
  br label %if.end, !dbg !10427

if.else24:                                        ; preds = %land.lhs.true16, %if.else14
  store i32 (%struct.device*)* null, i32 (%struct.device*)** %cb, align 8, !dbg !10428
  br label %if.end

if.end:                                           ; preds = %if.else24, %if.then20
  br label %if.end25

if.end25:                                         ; preds = %if.end, %if.then10
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then
  %27 = load i32 (%struct.device*)*, i32 (%struct.device*)** %cb, align 8, !dbg !10429
  %tobool27 = icmp ne i32 (%struct.device*)* %27, null, !dbg !10429
  br i1 %tobool27, label %if.end38, label %land.lhs.true28, !dbg !10431

land.lhs.true28:                                  ; preds = %if.end26
  %28 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10432
  %driver = getelementptr inbounds %struct.device, %struct.device* %28, i32 0, i32 6, !dbg !10433
  %29 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !10433
  %tobool29 = icmp ne %struct.device_driver* %29, null, !dbg !10432
  br i1 %tobool29, label %land.lhs.true30, label %if.end38, !dbg !10434

land.lhs.true30:                                  ; preds = %land.lhs.true28
  %30 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10435
  %driver31 = getelementptr inbounds %struct.device, %struct.device* %30, i32 0, i32 6, !dbg !10436
  %31 = load %struct.device_driver*, %struct.device_driver** %driver31, align 8, !dbg !10436
  %pm32 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %31, i32 0, i32 16, !dbg !10437
  %32 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %pm32, align 8, !dbg !10437
  %tobool33 = icmp ne %struct.dev_pm_ops* %32, null, !dbg !10435
  br i1 %tobool33, label %if.then34, label %if.end38, !dbg !10438

if.then34:                                        ; preds = %land.lhs.true30
  %33 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10439
  %driver35 = getelementptr inbounds %struct.device, %struct.device* %33, i32 0, i32 6, !dbg !10440
  %34 = load %struct.device_driver*, %struct.device_driver** %driver35, align 8, !dbg !10440
  %pm36 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %34, i32 0, i32 16, !dbg !10441
  %35 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %pm36, align 8, !dbg !10441
  %runtime_suspend37 = getelementptr inbounds %struct.dev_pm_ops, %struct.dev_pm_ops* %35, i32 0, i32 20, !dbg !10442
  %36 = load i32 (%struct.device*)*, i32 (%struct.device*)** %runtime_suspend37, align 8, !dbg !10442
  store i32 (%struct.device*)* %36, i32 (%struct.device*)** %cb, align 8, !dbg !10443
  br label %if.end38, !dbg !10444

if.end38:                                         ; preds = %if.then34, %land.lhs.true30, %land.lhs.true28, %if.end26
  %37 = load i32 (%struct.device*)*, i32 (%struct.device*)** %cb, align 8, !dbg !10445
  %tobool39 = icmp ne i32 (%struct.device*)* %37, null, !dbg !10445
  br i1 %tobool39, label %cond.true, label %cond.false, !dbg !10445

cond.true:                                        ; preds = %if.end38
  %38 = load i32 (%struct.device*)*, i32 (%struct.device*)** %cb, align 8, !dbg !10446
  %39 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10447
  %call = call i32 %38(%struct.device* %39) #11, !dbg !10446
  br label %cond.end, !dbg !10445

cond.false:                                       ; preds = %if.end38
  br label %cond.end, !dbg !10445

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !10445
  ret i32 %cond, !dbg !10448
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_stop_dev(%struct.generic_pm_domain* %genpd, %struct.device* %dev) #0 !dbg !10449 {
entry:
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %__routine = alloca i32 (%struct.device*)*, align 8
  %__ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !10452, metadata !DIExpression()), !dbg !10453
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10454, metadata !DIExpression()), !dbg !10455
  call void @llvm.dbg.declare(metadata i32 (%struct.device*)** %__routine, metadata !10456, metadata !DIExpression()), !dbg !10458
  call void @llvm.dbg.declare(metadata i32* %__ret, metadata !10459, metadata !DIExpression()), !dbg !10458
  store i32 0, i32* %__ret, align 4, !dbg !10458
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10458
  %dev_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %0, i32 0, i32 24, !dbg !10458
  %stop = getelementptr inbounds %struct.gpd_dev_ops, %struct.gpd_dev_ops* %dev_ops, i32 0, i32 1, !dbg !10458
  %1 = load i32 (%struct.device*)*, i32 (%struct.device*)** %stop, align 8, !dbg !10458
  store i32 (%struct.device*)* %1, i32 (%struct.device*)** %__routine, align 8, !dbg !10458
  %2 = load i32 (%struct.device*)*, i32 (%struct.device*)** %__routine, align 8, !dbg !10460
  %tobool = icmp ne i32 (%struct.device*)* %2, null, !dbg !10460
  br i1 %tobool, label %if.then, label %if.end, !dbg !10458

if.then:                                          ; preds = %entry
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %__routine, align 8, !dbg !10462
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10462
  %call = call i32 %3(%struct.device* %4) #11, !dbg !10462
  store i32 %call, i32* %__ret, align 4, !dbg !10462
  br label %if.end, !dbg !10462

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %__ret, align 4, !dbg !10458
  store i32 %5, i32* %tmp, align 4, !dbg !10460
  %6 = load i32, i32* %tmp, align 4, !dbg !10458
  ret i32 %6, !dbg !10464
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__genpd_runtime_resume(%struct.device* %dev) #0 !dbg !10465 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %cb = alloca i32 (%struct.device*)*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10466, metadata !DIExpression()), !dbg !10467
  call void @llvm.dbg.declare(metadata i32 (%struct.device*)** %cb, metadata !10468, metadata !DIExpression()), !dbg !10469
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10470
  %type = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10472
  %1 = load %struct.device_type*, %struct.device_type** %type, align 8, !dbg !10472
  %tobool = icmp ne %struct.device_type* %1, null, !dbg !10470
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !10473

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10474
  %type1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !10475
  %3 = load %struct.device_type*, %struct.device_type** %type1, align 8, !dbg !10475
  %pm = getelementptr inbounds %struct.device_type, %struct.device_type* %3, i32 0, i32 5, !dbg !10476
  %4 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %pm, align 8, !dbg !10476
  %tobool2 = icmp ne %struct.dev_pm_ops* %4, null, !dbg !10474
  br i1 %tobool2, label %if.then, label %if.else, !dbg !10477

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10478
  %type3 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 4, !dbg !10479
  %6 = load %struct.device_type*, %struct.device_type** %type3, align 8, !dbg !10479
  %pm4 = getelementptr inbounds %struct.device_type, %struct.device_type* %6, i32 0, i32 5, !dbg !10480
  %7 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %pm4, align 8, !dbg !10480
  %runtime_resume = getelementptr inbounds %struct.dev_pm_ops, %struct.dev_pm_ops* %7, i32 0, i32 21, !dbg !10481
  %8 = load i32 (%struct.device*)*, i32 (%struct.device*)** %runtime_resume, align 8, !dbg !10481
  store i32 (%struct.device*)* %8, i32 (%struct.device*)** %cb, align 8, !dbg !10482
  br label %if.end26, !dbg !10483

if.else:                                          ; preds = %land.lhs.true, %entry
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10484
  %class = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 29, !dbg !10486
  %10 = load %struct.class*, %struct.class** %class, align 8, !dbg !10486
  %tobool5 = icmp ne %struct.class* %10, null, !dbg !10484
  br i1 %tobool5, label %land.lhs.true6, label %if.else14, !dbg !10487

land.lhs.true6:                                   ; preds = %if.else
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10488
  %class7 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 29, !dbg !10489
  %12 = load %struct.class*, %struct.class** %class7, align 8, !dbg !10489
  %pm8 = getelementptr inbounds %struct.class, %struct.class* %12, i32 0, i32 13, !dbg !10490
  %13 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %pm8, align 8, !dbg !10490
  %tobool9 = icmp ne %struct.dev_pm_ops* %13, null, !dbg !10488
  br i1 %tobool9, label %if.then10, label %if.else14, !dbg !10491

if.then10:                                        ; preds = %land.lhs.true6
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10492
  %class11 = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 29, !dbg !10493
  %15 = load %struct.class*, %struct.class** %class11, align 8, !dbg !10493
  %pm12 = getelementptr inbounds %struct.class, %struct.class* %15, i32 0, i32 13, !dbg !10494
  %16 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %pm12, align 8, !dbg !10494
  %runtime_resume13 = getelementptr inbounds %struct.dev_pm_ops, %struct.dev_pm_ops* %16, i32 0, i32 21, !dbg !10495
  %17 = load i32 (%struct.device*)*, i32 (%struct.device*)** %runtime_resume13, align 8, !dbg !10495
  store i32 (%struct.device*)* %17, i32 (%struct.device*)** %cb, align 8, !dbg !10496
  br label %if.end25, !dbg !10497

if.else14:                                        ; preds = %land.lhs.true6, %if.else
  %18 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10498
  %bus = getelementptr inbounds %struct.device, %struct.device* %18, i32 0, i32 5, !dbg !10500
  %19 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !10500
  %tobool15 = icmp ne %struct.bus_type* %19, null, !dbg !10498
  br i1 %tobool15, label %land.lhs.true16, label %if.else24, !dbg !10501

land.lhs.true16:                                  ; preds = %if.else14
  %20 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10502
  %bus17 = getelementptr inbounds %struct.device, %struct.device* %20, i32 0, i32 5, !dbg !10503
  %21 = load %struct.bus_type*, %struct.bus_type** %bus17, align 8, !dbg !10503
  %pm18 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %21, i32 0, i32 18, !dbg !10504
  %22 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %pm18, align 8, !dbg !10504
  %tobool19 = icmp ne %struct.dev_pm_ops* %22, null, !dbg !10502
  br i1 %tobool19, label %if.then20, label %if.else24, !dbg !10505

if.then20:                                        ; preds = %land.lhs.true16
  %23 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10506
  %bus21 = getelementptr inbounds %struct.device, %struct.device* %23, i32 0, i32 5, !dbg !10507
  %24 = load %struct.bus_type*, %struct.bus_type** %bus21, align 8, !dbg !10507
  %pm22 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %24, i32 0, i32 18, !dbg !10508
  %25 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %pm22, align 8, !dbg !10508
  %runtime_resume23 = getelementptr inbounds %struct.dev_pm_ops, %struct.dev_pm_ops* %25, i32 0, i32 21, !dbg !10509
  %26 = load i32 (%struct.device*)*, i32 (%struct.device*)** %runtime_resume23, align 8, !dbg !10509
  store i32 (%struct.device*)* %26, i32 (%struct.device*)** %cb, align 8, !dbg !10510
  br label %if.end, !dbg !10511

if.else24:                                        ; preds = %land.lhs.true16, %if.else14
  store i32 (%struct.device*)* null, i32 (%struct.device*)** %cb, align 8, !dbg !10512
  br label %if.end

if.end:                                           ; preds = %if.else24, %if.then20
  br label %if.end25

if.end25:                                         ; preds = %if.end, %if.then10
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then
  %27 = load i32 (%struct.device*)*, i32 (%struct.device*)** %cb, align 8, !dbg !10513
  %tobool27 = icmp ne i32 (%struct.device*)* %27, null, !dbg !10513
  br i1 %tobool27, label %if.end38, label %land.lhs.true28, !dbg !10515

land.lhs.true28:                                  ; preds = %if.end26
  %28 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10516
  %driver = getelementptr inbounds %struct.device, %struct.device* %28, i32 0, i32 6, !dbg !10517
  %29 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !10517
  %tobool29 = icmp ne %struct.device_driver* %29, null, !dbg !10516
  br i1 %tobool29, label %land.lhs.true30, label %if.end38, !dbg !10518

land.lhs.true30:                                  ; preds = %land.lhs.true28
  %30 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10519
  %driver31 = getelementptr inbounds %struct.device, %struct.device* %30, i32 0, i32 6, !dbg !10520
  %31 = load %struct.device_driver*, %struct.device_driver** %driver31, align 8, !dbg !10520
  %pm32 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %31, i32 0, i32 16, !dbg !10521
  %32 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %pm32, align 8, !dbg !10521
  %tobool33 = icmp ne %struct.dev_pm_ops* %32, null, !dbg !10519
  br i1 %tobool33, label %if.then34, label %if.end38, !dbg !10522

if.then34:                                        ; preds = %land.lhs.true30
  %33 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10523
  %driver35 = getelementptr inbounds %struct.device, %struct.device* %33, i32 0, i32 6, !dbg !10524
  %34 = load %struct.device_driver*, %struct.device_driver** %driver35, align 8, !dbg !10524
  %pm36 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %34, i32 0, i32 16, !dbg !10525
  %35 = load %struct.dev_pm_ops*, %struct.dev_pm_ops** %pm36, align 8, !dbg !10525
  %runtime_resume37 = getelementptr inbounds %struct.dev_pm_ops, %struct.dev_pm_ops* %35, i32 0, i32 21, !dbg !10526
  %36 = load i32 (%struct.device*)*, i32 (%struct.device*)** %runtime_resume37, align 8, !dbg !10526
  store i32 (%struct.device*)* %36, i32 (%struct.device*)** %cb, align 8, !dbg !10527
  br label %if.end38, !dbg !10528

if.end38:                                         ; preds = %if.then34, %land.lhs.true30, %land.lhs.true28, %if.end26
  %37 = load i32 (%struct.device*)*, i32 (%struct.device*)** %cb, align 8, !dbg !10529
  %tobool39 = icmp ne i32 (%struct.device*)* %37, null, !dbg !10529
  br i1 %tobool39, label %cond.true, label %cond.false, !dbg !10529

cond.true:                                        ; preds = %if.end38
  %38 = load i32 (%struct.device*)*, i32 (%struct.device*)** %cb, align 8, !dbg !10530
  %39 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10531
  %call = call i32 %38(%struct.device* %39) #11, !dbg !10530
  br label %cond.end, !dbg !10529

cond.false:                                       ; preds = %if.end38
  br label %cond.end, !dbg !10529

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !10529
  ret i32 %cond, !dbg !10532
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_power_on(%struct.generic_pm_domain* %genpd, i32 %depth) #0 !dbg !10533 {
entry:
  %retval = alloca i32, align 4
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %depth.addr = alloca i32, align 4
  %link = alloca %struct.gpd_link*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.gpd_link*, align 8
  %parent = alloca %struct.generic_pm_domain*, align 8
  %__mptr9 = alloca i8*, align 8
  %tmp14 = alloca %struct.gpd_link*, align 8
  %__mptr21 = alloca i8*, align 8
  %tmp25 = alloca %struct.gpd_link*, align 8
  %__mptr48 = alloca i8*, align 8
  %tmp53 = alloca %struct.gpd_link*, align 8
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !10534, metadata !DIExpression()), !dbg !10535
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !10536, metadata !DIExpression()), !dbg !10537
  call void @llvm.dbg.declare(metadata %struct.gpd_link** %link, metadata !10538, metadata !DIExpression()), !dbg !10539
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10540, metadata !DIExpression()), !dbg !10541
  store i32 0, i32* %ret, align 4, !dbg !10541
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10542
  %status = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %0, i32 0, i32 12, !dbg !10542
  %1 = load i32, i32* %status, align 4, !dbg !10542
  %cmp = icmp eq i32 %1, 0, !dbg !10542
  br i1 %cmp, label %if.then, label %if.end, !dbg !10544

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10545
  br label %return, !dbg !10545

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10546, metadata !DIExpression()), !dbg !10549
  %2 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10549
  %child_links = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %2, i32 0, i32 4, !dbg !10549
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %child_links, i32 0, i32 0, !dbg !10549
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10549
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !10549
  store i8* %4, i8** %__mptr, align 8, !dbg !10549
  br label %do.body, !dbg !10549

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !10550

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !10549
  %add.ptr = getelementptr i8, i8* %5, i64 -32, !dbg !10549
  %6 = bitcast i8* %add.ptr to %struct.gpd_link*, !dbg !10549
  store %struct.gpd_link* %6, %struct.gpd_link** %tmp, align 8, !dbg !10550
  %7 = load %struct.gpd_link*, %struct.gpd_link** %tmp, align 8, !dbg !10549
  store %struct.gpd_link* %7, %struct.gpd_link** %link, align 8, !dbg !10552
  br label %for.cond, !dbg !10552

for.cond:                                         ; preds = %do.end13, %do.end
  %8 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !10553
  %child_node = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %8, i32 0, i32 3, !dbg !10553
  %9 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10553
  %child_links1 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %9, i32 0, i32 4, !dbg !10553
  %cmp2 = icmp eq %struct.list_head* %child_node, %child_links1, !dbg !10553
  %lnot = xor i1 %cmp2, true, !dbg !10553
  br i1 %lnot, label %for.body, label %for.end, !dbg !10552

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %parent, metadata !10555, metadata !DIExpression()), !dbg !10557
  %10 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !10558
  %parent3 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %10, i32 0, i32 0, !dbg !10559
  %11 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent3, align 8, !dbg !10559
  store %struct.generic_pm_domain* %11, %struct.generic_pm_domain** %parent, align 8, !dbg !10557
  %12 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !10560
  call void @genpd_sd_counter_inc(%struct.generic_pm_domain* %12) #11, !dbg !10561
  %13 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !10562
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %13, i32 0, i32 38, !dbg !10562
  %14 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !10562
  %lock_nested = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %14, i32 0, i32 1, !dbg !10562
  %15 = load void (%struct.generic_pm_domain*, i32)*, void (%struct.generic_pm_domain*, i32)** %lock_nested, align 8, !dbg !10562
  %16 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !10562
  %17 = load i32, i32* %depth.addr, align 4, !dbg !10562
  %add = add i32 %17, 1, !dbg !10562
  call void %15(%struct.generic_pm_domain* %16, i32 %add) #11, !dbg !10562
  %18 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !10563
  %19 = load i32, i32* %depth.addr, align 4, !dbg !10564
  %add4 = add i32 %19, 1, !dbg !10565
  %call = call i32 @genpd_power_on(%struct.generic_pm_domain* %18, i32 %add4) #11, !dbg !10566
  store i32 %call, i32* %ret, align 4, !dbg !10567
  %20 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !10568
  %lock_ops5 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %20, i32 0, i32 38, !dbg !10568
  %21 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops5, align 8, !dbg !10568
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %21, i32 0, i32 3, !dbg !10568
  %22 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !10568
  %23 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !10568
  call void %22(%struct.generic_pm_domain* %23) #11, !dbg !10568
  %24 = load i32, i32* %ret, align 4, !dbg !10569
  %tobool = icmp ne i32 %24, 0, !dbg !10569
  br i1 %tobool, label %if.then6, label %if.end8, !dbg !10571

if.then6:                                         ; preds = %for.body
  %25 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent, align 8, !dbg !10572
  %call7 = call zeroext i1 @genpd_sd_counter_dec(%struct.generic_pm_domain* %25) #11, !dbg !10574
  br label %err, !dbg !10575

if.end8:                                          ; preds = %for.body
  br label %for.inc, !dbg !10576

for.inc:                                          ; preds = %if.end8
  call void @llvm.dbg.declare(metadata i8** %__mptr9, metadata !10577, metadata !DIExpression()), !dbg !10579
  %26 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !10579
  %child_node10 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %26, i32 0, i32 3, !dbg !10579
  %next11 = getelementptr inbounds %struct.list_head, %struct.list_head* %child_node10, i32 0, i32 0, !dbg !10579
  %27 = load %struct.list_head*, %struct.list_head** %next11, align 8, !dbg !10579
  %28 = bitcast %struct.list_head* %27 to i8*, !dbg !10579
  store i8* %28, i8** %__mptr9, align 8, !dbg !10579
  br label %do.body12, !dbg !10579

do.body12:                                        ; preds = %for.inc
  br label %do.end13, !dbg !10580

do.end13:                                         ; preds = %do.body12
  %29 = load i8*, i8** %__mptr9, align 8, !dbg !10579
  %add.ptr15 = getelementptr i8, i8* %29, i64 -32, !dbg !10579
  %30 = bitcast i8* %add.ptr15 to %struct.gpd_link*, !dbg !10579
  store %struct.gpd_link* %30, %struct.gpd_link** %tmp14, align 8, !dbg !10580
  %31 = load %struct.gpd_link*, %struct.gpd_link** %tmp14, align 8, !dbg !10579
  store %struct.gpd_link* %31, %struct.gpd_link** %link, align 8, !dbg !10553
  br label %for.cond, !dbg !10553, !llvm.loop !10582

for.end:                                          ; preds = %for.cond
  %32 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10584
  %call16 = call i32 @_genpd_power_on(%struct.generic_pm_domain* %32, i1 zeroext true) #11, !dbg !10585
  store i32 %call16, i32* %ret, align 4, !dbg !10586
  %33 = load i32, i32* %ret, align 4, !dbg !10587
  %tobool17 = icmp ne i32 %33, 0, !dbg !10587
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !10589

if.then18:                                        ; preds = %for.end
  br label %err, !dbg !10590

if.end19:                                         ; preds = %for.end
  %34 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10591
  %status20 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %34, i32 0, i32 12, !dbg !10592
  store i32 0, i32* %status20, align 4, !dbg !10593
  %35 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10594
  call void @genpd_update_accounting(%struct.generic_pm_domain* %35) #11, !dbg !10595
  store i32 0, i32* %retval, align 4, !dbg !10596
  br label %return, !dbg !10596

err:                                              ; preds = %if.then18, %if.then6
  call void @llvm.dbg.label(metadata !10597), !dbg !10598
  call void @llvm.dbg.declare(metadata i8** %__mptr21, metadata !10599, metadata !DIExpression()), !dbg !10602
  %36 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !10602
  %child_node22 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %36, i32 0, i32 3, !dbg !10602
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %child_node22, i32 0, i32 1, !dbg !10602
  %37 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !10602
  %38 = bitcast %struct.list_head* %37 to i8*, !dbg !10602
  store i8* %38, i8** %__mptr21, align 8, !dbg !10602
  br label %do.body23, !dbg !10602

do.body23:                                        ; preds = %err
  br label %do.end24, !dbg !10603

do.end24:                                         ; preds = %do.body23
  %39 = load i8*, i8** %__mptr21, align 8, !dbg !10602
  %add.ptr26 = getelementptr i8, i8* %39, i64 -32, !dbg !10602
  %40 = bitcast i8* %add.ptr26 to %struct.gpd_link*, !dbg !10602
  store %struct.gpd_link* %40, %struct.gpd_link** %tmp25, align 8, !dbg !10603
  %41 = load %struct.gpd_link*, %struct.gpd_link** %tmp25, align 8, !dbg !10602
  store %struct.gpd_link* %41, %struct.gpd_link** %link, align 8, !dbg !10605
  br label %for.cond27, !dbg !10605

for.cond27:                                       ; preds = %do.end52, %do.end24
  %42 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !10606
  %child_node28 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %42, i32 0, i32 3, !dbg !10606
  %43 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10606
  %child_links29 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %43, i32 0, i32 4, !dbg !10606
  %cmp30 = icmp eq %struct.list_head* %child_node28, %child_links29, !dbg !10606
  %lnot31 = xor i1 %cmp30, true, !dbg !10606
  br i1 %lnot31, label %for.body32, label %for.end55, !dbg !10605

for.body32:                                       ; preds = %for.cond27
  %44 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !10608
  %parent33 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %44, i32 0, i32 0, !dbg !10610
  %45 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent33, align 8, !dbg !10610
  %call34 = call zeroext i1 @genpd_sd_counter_dec(%struct.generic_pm_domain* %45) #11, !dbg !10611
  %46 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !10612
  %parent35 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %46, i32 0, i32 0, !dbg !10612
  %47 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent35, align 8, !dbg !10612
  %lock_ops36 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %47, i32 0, i32 38, !dbg !10612
  %48 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops36, align 8, !dbg !10612
  %lock_nested37 = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %48, i32 0, i32 1, !dbg !10612
  %49 = load void (%struct.generic_pm_domain*, i32)*, void (%struct.generic_pm_domain*, i32)** %lock_nested37, align 8, !dbg !10612
  %50 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !10612
  %parent38 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %50, i32 0, i32 0, !dbg !10612
  %51 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent38, align 8, !dbg !10612
  %52 = load i32, i32* %depth.addr, align 4, !dbg !10612
  %add39 = add i32 %52, 1, !dbg !10612
  call void %49(%struct.generic_pm_domain* %51, i32 %add39) #11, !dbg !10612
  %53 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !10613
  %parent40 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %53, i32 0, i32 0, !dbg !10614
  %54 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent40, align 8, !dbg !10614
  %55 = load i32, i32* %depth.addr, align 4, !dbg !10615
  %add41 = add i32 %55, 1, !dbg !10616
  %call42 = call i32 @genpd_power_off(%struct.generic_pm_domain* %54, i1 zeroext false, i32 %add41) #11, !dbg !10617
  %56 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !10618
  %parent43 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %56, i32 0, i32 0, !dbg !10618
  %57 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent43, align 8, !dbg !10618
  %lock_ops44 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %57, i32 0, i32 38, !dbg !10618
  %58 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops44, align 8, !dbg !10618
  %unlock45 = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %58, i32 0, i32 3, !dbg !10618
  %59 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock45, align 8, !dbg !10618
  %60 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !10618
  %parent46 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %60, i32 0, i32 0, !dbg !10618
  %61 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %parent46, align 8, !dbg !10618
  call void %59(%struct.generic_pm_domain* %61) #11, !dbg !10618
  br label %for.inc47, !dbg !10619

for.inc47:                                        ; preds = %for.body32
  call void @llvm.dbg.declare(metadata i8** %__mptr48, metadata !10620, metadata !DIExpression()), !dbg !10622
  %62 = load %struct.gpd_link*, %struct.gpd_link** %link, align 8, !dbg !10622
  %child_node49 = getelementptr inbounds %struct.gpd_link, %struct.gpd_link* %62, i32 0, i32 3, !dbg !10622
  %prev50 = getelementptr inbounds %struct.list_head, %struct.list_head* %child_node49, i32 0, i32 1, !dbg !10622
  %63 = load %struct.list_head*, %struct.list_head** %prev50, align 8, !dbg !10622
  %64 = bitcast %struct.list_head* %63 to i8*, !dbg !10622
  store i8* %64, i8** %__mptr48, align 8, !dbg !10622
  br label %do.body51, !dbg !10622

do.body51:                                        ; preds = %for.inc47
  br label %do.end52, !dbg !10623

do.end52:                                         ; preds = %do.body51
  %65 = load i8*, i8** %__mptr48, align 8, !dbg !10622
  %add.ptr54 = getelementptr i8, i8* %65, i64 -32, !dbg !10622
  %66 = bitcast i8* %add.ptr54 to %struct.gpd_link*, !dbg !10622
  store %struct.gpd_link* %66, %struct.gpd_link** %tmp53, align 8, !dbg !10623
  %67 = load %struct.gpd_link*, %struct.gpd_link** %tmp53, align 8, !dbg !10622
  store %struct.gpd_link* %67, %struct.gpd_link** %link, align 8, !dbg !10606
  br label %for.cond27, !dbg !10606, !llvm.loop !10625

for.end55:                                        ; preds = %for.cond27
  %68 = load i32, i32* %ret, align 4, !dbg !10627
  store i32 %68, i32* %retval, align 4, !dbg !10628
  br label %return, !dbg !10628

return:                                           ; preds = %for.end55, %if.end19, %if.then
  %69 = load i32, i32* %retval, align 4, !dbg !10629
  ret i32 %69, !dbg !10629
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_start_dev(%struct.generic_pm_domain* %genpd, %struct.device* %dev) #0 !dbg !10630 {
entry:
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %__routine = alloca i32 (%struct.device*)*, align 8
  %__ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !10631, metadata !DIExpression()), !dbg !10632
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10633, metadata !DIExpression()), !dbg !10634
  call void @llvm.dbg.declare(metadata i32 (%struct.device*)** %__routine, metadata !10635, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.declare(metadata i32* %__ret, metadata !10638, metadata !DIExpression()), !dbg !10637
  store i32 0, i32* %__ret, align 4, !dbg !10637
  %0 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10637
  %dev_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %0, i32 0, i32 24, !dbg !10637
  %start = getelementptr inbounds %struct.gpd_dev_ops, %struct.gpd_dev_ops* %dev_ops, i32 0, i32 0, !dbg !10637
  %1 = load i32 (%struct.device*)*, i32 (%struct.device*)** %start, align 8, !dbg !10637
  store i32 (%struct.device*)* %1, i32 (%struct.device*)** %__routine, align 8, !dbg !10637
  %2 = load i32 (%struct.device*)*, i32 (%struct.device*)** %__routine, align 8, !dbg !10639
  %tobool = icmp ne i32 (%struct.device*)* %2, null, !dbg !10639
  br i1 %tobool, label %if.then, label %if.end, !dbg !10637

if.then:                                          ; preds = %entry
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %__routine, align 8, !dbg !10641
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10641
  %call = call i32 %3(%struct.device* %4) #11, !dbg !10641
  store i32 %call, i32* %__ret, align 4, !dbg !10641
  br label %if.end, !dbg !10641

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %__ret, align 4, !dbg !10637
  store i32 %5, i32* %tmp, align 4, !dbg !10639
  %6 = load i32, i32* %tmp, align 4, !dbg !10637
  ret i32 %6, !dbg !10643
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @resume_needed(%struct.device* %dev, %struct.generic_pm_domain* %genpd) #0 !dbg !10644 {
entry:
  %retval = alloca i1, align 1
  %dev.addr = alloca %struct.device*, align 8
  %genpd.addr = alloca %struct.generic_pm_domain*, align 8
  %active_wakeup = alloca i8, align 1
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10645, metadata !DIExpression()), !dbg !10646
  store %struct.generic_pm_domain* %genpd, %struct.generic_pm_domain** %genpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd.addr, metadata !10647, metadata !DIExpression()), !dbg !10648
  call void @llvm.dbg.declare(metadata i8* %active_wakeup, metadata !10649, metadata !DIExpression()), !dbg !10650
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10651
  %call = call zeroext i1 @device_can_wakeup(%struct.device* %0) #11, !dbg !10653
  br i1 %call, label %if.end, label %if.then, !dbg !10654

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !10655
  br label %return, !dbg !10655

if.end:                                           ; preds = %entry
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd.addr, align 8, !dbg !10656
  %flags = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %1, i32 0, i32 31, !dbg !10656
  %2 = load i32, i32* %flags, align 8, !dbg !10656
  %and = and i32 %2, 8, !dbg !10656
  %tobool = icmp ne i32 %and, 0, !dbg !10656
  %frombool = zext i1 %tobool to i8, !dbg !10657
  store i8 %frombool, i8* %active_wakeup, align 1, !dbg !10657
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10658
  %call1 = call zeroext i1 @device_may_wakeup(%struct.device* %3) #11, !dbg !10659
  br i1 %call1, label %cond.true, label %cond.false, !dbg !10659

cond.true:                                        ; preds = %if.end
  %4 = load i8, i8* %active_wakeup, align 1, !dbg !10660
  %tobool2 = trunc i8 %4 to i1, !dbg !10660
  %conv = zext i1 %tobool2 to i32, !dbg !10660
  br label %cond.end, !dbg !10659

cond.false:                                       ; preds = %if.end
  %5 = load i8, i8* %active_wakeup, align 1, !dbg !10661
  %tobool3 = trunc i8 %5 to i1, !dbg !10661
  %lnot = xor i1 %tobool3, true, !dbg !10662
  %lnot.ext = zext i1 %lnot to i32, !dbg !10662
  br label %cond.end, !dbg !10659

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %lnot.ext, %cond.false ], !dbg !10659
  %tobool4 = icmp ne i32 %cond, 0, !dbg !10659
  store i1 %tobool4, i1* %retval, align 1, !dbg !10663
  br label %return, !dbg !10663

return:                                           ; preds = %cond.end, %if.then
  %6 = load i1, i1* %retval, align 1, !dbg !10664
  ret i1 %6, !dbg !10664
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_resume(%struct.device* %dev) #0 !dbg !10665 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10666, metadata !DIExpression()), !dbg !10667
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10668
  %call = call i32 @__pm_runtime_resume(%struct.device* %0, i32 0) #11, !dbg !10669
  ret i32 %call, !dbg !10670
}

; Function Attrs: noredzone
declare dso_local i32 @pm_generic_prepare(%struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @device_can_wakeup(%struct.device* %dev) #0 !dbg !10671 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10672, metadata !DIExpression()), !dbg !10673
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10674
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !10675
  %can_wakeup = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 1, !dbg !10676
  %bf.load = load i16, i16* %can_wakeup, align 4, !dbg !10676
  %bf.clear = and i16 %bf.load, 1, !dbg !10676
  %bf.cast = zext i16 %bf.clear to i32, !dbg !10676
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !10674
  ret i1 %tobool, !dbg !10677
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @device_may_wakeup(%struct.device* %dev) #0 !dbg !10678 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10679, metadata !DIExpression()), !dbg !10680
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10681
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !10682
  %can_wakeup = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 1, !dbg !10683
  %bf.load = load i16, i16* %can_wakeup, align 4, !dbg !10683
  %bf.clear = and i16 %bf.load, 1, !dbg !10683
  %bf.cast = zext i16 %bf.clear to i32, !dbg !10683
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !10681
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !10684

land.rhs:                                         ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10685
  %power1 = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !10686
  %wakeup = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 6, !dbg !10687
  %2 = load %struct.wakeup_source*, %struct.wakeup_source** %wakeup, align 8, !dbg !10687
  %tobool2 = icmp ne %struct.wakeup_source* %2, null, !dbg !10688
  %lnot = xor i1 %tobool2, true, !dbg !10688
  %lnot3 = xor i1 %lnot, true, !dbg !10689
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !10690
  ret i1 %3, !dbg !10691
}

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_resume(%struct.device*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_finish_suspend(%struct.device* %dev, i1 zeroext %poweroff) #0 !dbg !10692 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %poweroff.addr = alloca i8, align 1
  %genpd = alloca %struct.generic_pm_domain*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10695, metadata !DIExpression()), !dbg !10696
  %frombool = zext i1 %poweroff to i8
  store i8 %frombool, i8* %poweroff.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %poweroff.addr, metadata !10697, metadata !DIExpression()), !dbg !10698
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %genpd, metadata !10699, metadata !DIExpression()), !dbg !10700
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10701, metadata !DIExpression()), !dbg !10702
  store i32 0, i32* %ret, align 4, !dbg !10702
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10703
  %call = call %struct.generic_pm_domain* @dev_to_genpd(%struct.device* %0) #11, !dbg !10704
  store %struct.generic_pm_domain* %call, %struct.generic_pm_domain** %genpd, align 8, !dbg !10705
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !10706
  %2 = bitcast %struct.generic_pm_domain* %1 to i8*, !dbg !10706
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #11, !dbg !10708
  br i1 %call1, label %if.then, label %if.end, !dbg !10709

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10710
  br label %return, !dbg !10710

if.end:                                           ; preds = %entry
  %3 = load i8, i8* %poweroff.addr, align 1, !dbg !10711
  %tobool = trunc i8 %3 to i1, !dbg !10711
  br i1 %tobool, label %if.then2, label %if.else, !dbg !10713

if.then2:                                         ; preds = %if.end
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10714
  %call3 = call i32 @pm_generic_poweroff_noirq(%struct.device* %4) #11, !dbg !10715
  store i32 %call3, i32* %ret, align 4, !dbg !10716
  br label %if.end5, !dbg !10717

if.else:                                          ; preds = %if.end
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10718
  %call4 = call i32 @pm_generic_suspend_noirq(%struct.device* %5) #11, !dbg !10719
  store i32 %call4, i32* %ret, align 4, !dbg !10720
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then2
  %6 = load i32, i32* %ret, align 4, !dbg !10721
  %tobool6 = icmp ne i32 %6, 0, !dbg !10721
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !10723

if.then7:                                         ; preds = %if.end5
  %7 = load i32, i32* %ret, align 4, !dbg !10724
  store i32 %7, i32* %retval, align 4, !dbg !10725
  br label %return, !dbg !10725

if.end8:                                          ; preds = %if.end5
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10726
  %power = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 11, !dbg !10728
  %wakeup_path = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 7, !dbg !10729
  %bf.load = load i8, i8* %wakeup_path, align 8, !dbg !10729
  %bf.clear = and i8 %bf.load, 1, !dbg !10729
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !10729
  br i1 %bf.cast, label %land.lhs.true, label %if.end11, !dbg !10730

land.lhs.true:                                    ; preds = %if.end8
  %9 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !10731
  %flags = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %9, i32 0, i32 31, !dbg !10731
  %10 = load i32, i32* %flags, align 8, !dbg !10731
  %and = and i32 %10, 8, !dbg !10731
  %tobool9 = icmp ne i32 %and, 0, !dbg !10731
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !10732

if.then10:                                        ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !10733
  br label %return, !dbg !10733

if.end11:                                         ; preds = %land.lhs.true, %if.end8
  %11 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !10734
  %dev_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %11, i32 0, i32 24, !dbg !10736
  %stop = getelementptr inbounds %struct.gpd_dev_ops, %struct.gpd_dev_ops* %dev_ops, i32 0, i32 1, !dbg !10737
  %12 = load i32 (%struct.device*)*, i32 (%struct.device*)** %stop, align 8, !dbg !10737
  %tobool12 = icmp ne i32 (%struct.device*)* %12, null, !dbg !10734
  br i1 %tobool12, label %land.lhs.true13, label %if.end29, !dbg !10738

land.lhs.true13:                                  ; preds = %if.end11
  %13 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !10739
  %dev_ops14 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %13, i32 0, i32 24, !dbg !10740
  %start = getelementptr inbounds %struct.gpd_dev_ops, %struct.gpd_dev_ops* %dev_ops14, i32 0, i32 0, !dbg !10741
  %14 = load i32 (%struct.device*)*, i32 (%struct.device*)** %start, align 8, !dbg !10741
  %tobool15 = icmp ne i32 (%struct.device*)* %14, null, !dbg !10739
  br i1 %tobool15, label %land.lhs.true16, label %if.end29, !dbg !10742

land.lhs.true16:                                  ; preds = %land.lhs.true13
  %15 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10743
  %call17 = call zeroext i1 @pm_runtime_status_suspended(%struct.device* %15) #11, !dbg !10744
  br i1 %call17, label %if.end29, label %if.then18, !dbg !10745

if.then18:                                        ; preds = %land.lhs.true16
  %16 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !10746
  %17 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10748
  %call19 = call i32 @genpd_stop_dev(%struct.generic_pm_domain* %16, %struct.device* %17) #11, !dbg !10749
  store i32 %call19, i32* %ret, align 4, !dbg !10750
  %18 = load i32, i32* %ret, align 4, !dbg !10751
  %tobool20 = icmp ne i32 %18, 0, !dbg !10751
  br i1 %tobool20, label %if.then21, label %if.end28, !dbg !10753

if.then21:                                        ; preds = %if.then18
  %19 = load i8, i8* %poweroff.addr, align 1, !dbg !10754
  %tobool22 = trunc i8 %19 to i1, !dbg !10754
  br i1 %tobool22, label %if.then23, label %if.else25, !dbg !10757

if.then23:                                        ; preds = %if.then21
  %20 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10758
  %call24 = call i32 @pm_generic_restore_noirq(%struct.device* %20) #11, !dbg !10759
  br label %if.end27, !dbg !10759

if.else25:                                        ; preds = %if.then21
  %21 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10760
  %call26 = call i32 @pm_generic_resume_noirq(%struct.device* %21) #11, !dbg !10761
  br label %if.end27

if.end27:                                         ; preds = %if.else25, %if.then23
  %22 = load i32, i32* %ret, align 4, !dbg !10762
  store i32 %22, i32* %retval, align 4, !dbg !10763
  br label %return, !dbg !10763

if.end28:                                         ; preds = %if.then18
  br label %if.end29, !dbg !10764

if.end29:                                         ; preds = %if.end28, %land.lhs.true16, %land.lhs.true13, %if.end11
  %23 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !10765
  %lock_ops = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %23, i32 0, i32 38, !dbg !10765
  %24 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops, align 8, !dbg !10765
  %lock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %24, i32 0, i32 0, !dbg !10765
  %25 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %lock, align 8, !dbg !10765
  %26 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !10765
  call void %25(%struct.generic_pm_domain* %26) #11, !dbg !10765
  %27 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !10766
  %suspended_count = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %27, i32 0, i32 14, !dbg !10767
  %28 = load i32, i32* %suspended_count, align 4, !dbg !10768
  %inc = add i32 %28, 1, !dbg !10768
  store i32 %inc, i32* %suspended_count, align 4, !dbg !10768
  %29 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !10769
  call void @genpd_sync_power_off(%struct.generic_pm_domain* %29, i1 zeroext true, i32 0) #11, !dbg !10770
  %30 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !10771
  %lock_ops30 = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %30, i32 0, i32 38, !dbg !10771
  %31 = load %struct.genpd_lock_ops*, %struct.genpd_lock_ops** %lock_ops30, align 8, !dbg !10771
  %unlock = getelementptr inbounds %struct.genpd_lock_ops, %struct.genpd_lock_ops* %31, i32 0, i32 3, !dbg !10771
  %32 = load void (%struct.generic_pm_domain*)*, void (%struct.generic_pm_domain*)** %unlock, align 8, !dbg !10771
  %33 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %genpd, align 8, !dbg !10771
  call void %32(%struct.generic_pm_domain* %33) #11, !dbg !10771
  store i32 0, i32* %retval, align 4, !dbg !10772
  br label %return, !dbg !10772

return:                                           ; preds = %if.end29, %if.end27, %if.then10, %if.then7, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !10773
  ret i32 %34, !dbg !10773
}

; Function Attrs: noredzone
declare dso_local i32 @pm_generic_poweroff_noirq(%struct.device*) #3

; Function Attrs: noredzone
declare dso_local i32 @pm_generic_suspend_noirq(%struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pm_runtime_status_suspended(%struct.device* %dev) #0 !dbg !10774 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10775, metadata !DIExpression()), !dbg !10776
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10777
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !10778
  %runtime_status = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 18, !dbg !10779
  %1 = load i32, i32* %runtime_status, align 4, !dbg !10779
  %cmp = icmp eq i32 %1, 2, !dbg !10780
  ret i1 %cmp, !dbg !10781
}

; Function Attrs: noredzone
declare dso_local i32 @pm_generic_restore_noirq(%struct.device*) #3

; Function Attrs: noredzone
declare dso_local i32 @pm_generic_resume_noirq(%struct.device*) #3

; Function Attrs: noredzone
declare dso_local i32 @pm_generic_freeze_noirq(%struct.device*) #3

; Function Attrs: noredzone
declare dso_local i32 @pm_generic_thaw_noirq(%struct.device*) #3

; Function Attrs: noredzone
declare dso_local void @pm_generic_complete(%struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cpumask_clear(%struct.cpumask* %dstp) #0 !dbg !10782 {
entry:
  %dstp.addr = alloca %struct.cpumask*, align 8
  store %struct.cpumask* %dstp, %struct.cpumask** %dstp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cpumask** %dstp.addr, metadata !10783, metadata !DIExpression()), !dbg !10784
  %0 = load %struct.cpumask*, %struct.cpumask** %dstp.addr, align 8, !dbg !10785
  %bits = getelementptr inbounds %struct.cpumask, %struct.cpumask* %0, i32 0, i32 0, !dbg !10785
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %bits, i64 0, i64 0, !dbg !10785
  call void @bitmap_zero(i64* %arraydecay, i32 1) #11, !dbg !10786
  ret void, !dbg !10787
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bitmap_zero(i64* %dst, i32 %nbits) #0 !dbg !10788 {
entry:
  %dst.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  %len = alloca i32, align 4
  store i64* %dst, i64** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.addr, metadata !10793, metadata !DIExpression()), !dbg !10794
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !10795, metadata !DIExpression()), !dbg !10796
  call void @llvm.dbg.declare(metadata i32* %len, metadata !10797, metadata !DIExpression()), !dbg !10798
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !10799
  %conv = zext i32 %0 to i64, !dbg !10799
  %add = add i64 %conv, 64, !dbg !10799
  %sub = sub i64 %add, 1, !dbg !10799
  %div = udiv i64 %sub, 64, !dbg !10799
  %mul = mul i64 %div, 8, !dbg !10800
  %conv1 = trunc i64 %mul to i32, !dbg !10799
  store i32 %conv1, i32* %len, align 4, !dbg !10798
  %1 = load i64*, i64** %dst.addr, align 8, !dbg !10801
  %2 = bitcast i64* %1 to i8*, !dbg !10802
  %3 = load i32, i32* %len, align 4, !dbg !10803
  %conv2 = zext i32 %3 to i64, !dbg !10803
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 %conv2, i1 false), !dbg !10802
  ret void, !dbg !10804
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genpd_free_default_power_state(%struct.genpd_power_state* %states, i32 %state_count) #0 !dbg !10805 {
entry:
  %states.addr = alloca %struct.genpd_power_state*, align 8
  %state_count.addr = alloca i32, align 4
  store %struct.genpd_power_state* %states, %struct.genpd_power_state** %states.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.genpd_power_state** %states.addr, metadata !10806, metadata !DIExpression()), !dbg !10807
  store i32 %state_count, i32* %state_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state_count.addr, metadata !10808, metadata !DIExpression()), !dbg !10809
  %0 = load %struct.genpd_power_state*, %struct.genpd_power_state** %states.addr, align 8, !dbg !10810
  %1 = bitcast %struct.genpd_power_state* %0 to i8*, !dbg !10810
  call void @kfree(i8* %1) #11, !dbg !10811
  ret void, !dbg !10812
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @cancel_work_sync(%struct.work_struct*) #3

; Function Attrs: noredzone
declare dso_local i32 @of_parse_phandle_with_args(%struct.device_node*, i8*, i8*, i32, %struct.of_phandle_args*) #3

; Function Attrs: noredzone
declare dso_local i32 @driver_deferred_probe_check_state(%struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genpd_dev_pm_detach(%struct.device* %dev, i1 zeroext %power_off) #0 !dbg !10813 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %power_off.addr = alloca i8, align 1
  %pd = alloca %struct.generic_pm_domain*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %__ms = alloca i64, align 8
  %tmp = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10814, metadata !DIExpression()), !dbg !10815
  %frombool = zext i1 %power_off to i8
  store i8 %frombool, i8* %power_off.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %power_off.addr, metadata !10816, metadata !DIExpression()), !dbg !10817
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %pd, metadata !10818, metadata !DIExpression()), !dbg !10819
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10820, metadata !DIExpression()), !dbg !10821
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10822, metadata !DIExpression()), !dbg !10823
  store i32 0, i32* %ret, align 4, !dbg !10823
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10824
  %call = call %struct.generic_pm_domain* @dev_to_genpd(%struct.device* %0) #11, !dbg !10825
  store %struct.generic_pm_domain* %call, %struct.generic_pm_domain** %pd, align 8, !dbg !10826
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %pd, align 8, !dbg !10827
  %2 = bitcast %struct.generic_pm_domain* %1 to i8*, !dbg !10827
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #11, !dbg !10829
  br i1 %call1, label %if.then, label %if.end, !dbg !10830

if.then:                                          ; preds = %entry
  br label %if.end27, !dbg !10831

if.end:                                           ; preds = %entry
  store i32 1, i32* %i, align 4, !dbg !10832
  br label %for.cond, !dbg !10834

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !10835
  %cmp = icmp ult i32 %3, 250, !dbg !10837
  br i1 %cmp, label %for.body, label %for.end, !dbg !10838

for.body:                                         ; preds = %for.cond
  %4 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %pd, align 8, !dbg !10839
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10841
  %call2 = call i32 @genpd_remove_device(%struct.generic_pm_domain* %4, %struct.device* %5) #11, !dbg !10842
  store i32 %call2, i32* %ret, align 4, !dbg !10843
  %6 = load i32, i32* %ret, align 4, !dbg !10844
  %cmp3 = icmp ne i32 %6, -11, !dbg !10846
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !10847

if.then4:                                         ; preds = %for.body
  br label %for.end, !dbg !10848

if.end5:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !10849
  %8 = call i1 @llvm.is.constant.i32(i32 %7), !dbg !10849
  br i1 %8, label %land.lhs.true, label %cond.false, !dbg !10849

land.lhs.true:                                    ; preds = %if.end5
  %9 = load i32, i32* %i, align 4, !dbg !10849
  %cmp6 = icmp ule i32 %9, 5, !dbg !10849
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !10849

cond.true:                                        ; preds = %land.lhs.true
  %10 = load i32, i32* %i, align 4, !dbg !10850
  %mul = mul i32 %10, 1000, !dbg !10850
  %11 = call i1 @llvm.is.constant.i32(i32 %mul), !dbg !10850
  br i1 %11, label %if.then7, label %if.else14, !dbg !10853

if.then7:                                         ; preds = %cond.true
  %12 = load i32, i32* %i, align 4, !dbg !10854
  %mul8 = mul i32 %12, 1000, !dbg !10854
  %div = udiv i32 %mul8, 20000, !dbg !10854
  %cmp9 = icmp uge i32 %div, 1, !dbg !10854
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !10857

if.then10:                                        ; preds = %if.then7
  call void @__bad_udelay() #11, !dbg !10854
  br label %if.end13, !dbg !10854

if.else:                                          ; preds = %if.then7
  %13 = load i32, i32* %i, align 4, !dbg !10854
  %mul11 = mul i32 %13, 1000, !dbg !10854
  %conv = zext i32 %mul11 to i64, !dbg !10854
  %mul12 = mul i64 %conv, 4295, !dbg !10854
  call void @__const_udelay(i64 %mul12) #11, !dbg !10854
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then10
  br label %if.end17, !dbg !10857

if.else14:                                        ; preds = %cond.true
  %14 = load i32, i32* %i, align 4, !dbg !10858
  %mul15 = mul i32 %14, 1000, !dbg !10858
  %conv16 = zext i32 %mul15 to i64, !dbg !10858
  call void @__udelay(i64 %conv16) #11, !dbg !10858
  br label %if.end17

if.end17:                                         ; preds = %if.else14, %if.end13
  br label %cond.end, !dbg !10849

cond.false:                                       ; preds = %land.lhs.true, %if.end5
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !10860, metadata !DIExpression()), !dbg !10862
  %15 = load i32, i32* %i, align 4, !dbg !10862
  %conv18 = zext i32 %15 to i64, !dbg !10862
  store i64 %conv18, i64* %__ms, align 8, !dbg !10862
  br label %while.cond, !dbg !10862

while.cond:                                       ; preds = %while.body, %cond.false
  %16 = load i64, i64* %__ms, align 8, !dbg !10862
  %dec = add i64 %16, -1, !dbg !10862
  store i64 %dec, i64* %__ms, align 8, !dbg !10862
  %tobool = icmp ne i64 %16, 0, !dbg !10862
  br i1 %tobool, label %while.body, label %while.end, !dbg !10862

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #11, !dbg !10863
  br label %while.cond, !dbg !10862, !llvm.loop !10868

while.end:                                        ; preds = %while.cond
  br label %cond.end, !dbg !10849

cond.end:                                         ; preds = %while.end, %if.end17
  call void @___might_sleep(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 2543, i32 0) #11, !dbg !10869
  %call19 = call i32 @_cond_resched() #11, !dbg !10869
  store i32 %call19, i32* %tmp, align 4, !dbg !10869
  %17 = load i32, i32* %tmp, align 4, !dbg !10869
  br label %for.inc, !dbg !10871

for.inc:                                          ; preds = %cond.end
  %18 = load i32, i32* %i, align 4, !dbg !10872
  %shl = shl i32 %18, 1, !dbg !10872
  store i32 %shl, i32* %i, align 4, !dbg !10872
  br label %for.cond, !dbg !10873, !llvm.loop !10874

for.end:                                          ; preds = %if.then4, %for.cond
  %19 = load i32, i32* %ret, align 4, !dbg !10876
  %cmp20 = icmp slt i32 %19, 0, !dbg !10878
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !10879

if.then22:                                        ; preds = %for.end
  %20 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10880
  %21 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %pd, align 8, !dbg !10880
  %name = getelementptr inbounds %struct.generic_pm_domain, %struct.generic_pm_domain* %21, i32 0, i32 10, !dbg !10880
  %22 = load i8*, i8** %name, align 8, !dbg !10880
  %23 = load i32, i32* %ret, align 4, !dbg !10880
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %20, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21, i64 0, i64 0), i8* %22, i32 %23) #12, !dbg !10880
  br label %if.end27, !dbg !10882

if.end23:                                         ; preds = %for.end
  %24 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %pd, align 8, !dbg !10883
  call void @genpd_queue_power_off_work(%struct.generic_pm_domain* %24) #11, !dbg !10884
  %25 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10885
  %bus = getelementptr inbounds %struct.device, %struct.device* %25, i32 0, i32 5, !dbg !10887
  %26 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !10887
  %cmp24 = icmp eq %struct.bus_type* %26, @genpd_bus_type, !dbg !10888
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !10889

if.then26:                                        ; preds = %if.end23
  %27 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10890
  call void @device_unregister(%struct.device* %27) #11, !dbg !10891
  br label %if.end27, !dbg !10891

if.end27:                                         ; preds = %if.then, %if.then22, %if.then26, %if.end23
  ret void, !dbg !10892
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genpd_dev_pm_sync(%struct.device* %dev) #0 !dbg !10893 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %pd = alloca %struct.generic_pm_domain*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10894, metadata !DIExpression()), !dbg !10895
  call void @llvm.dbg.declare(metadata %struct.generic_pm_domain** %pd, metadata !10896, metadata !DIExpression()), !dbg !10897
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10898
  %call = call %struct.generic_pm_domain* @dev_to_genpd(%struct.device* %0) #11, !dbg !10899
  store %struct.generic_pm_domain* %call, %struct.generic_pm_domain** %pd, align 8, !dbg !10900
  %1 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %pd, align 8, !dbg !10901
  %2 = bitcast %struct.generic_pm_domain* %1 to i8*, !dbg !10901
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #11, !dbg !10903
  br i1 %call1, label %if.then, label %if.end, !dbg !10904

if.then:                                          ; preds = %entry
  br label %return, !dbg !10905

if.end:                                           ; preds = %entry
  %3 = load %struct.generic_pm_domain*, %struct.generic_pm_domain** %pd, align 8, !dbg !10906
  call void @genpd_queue_power_off_work(%struct.generic_pm_domain* %3) #11, !dbg !10907
  br label %return, !dbg !10908

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10908
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #8

; Function Attrs: noredzone
declare dso_local void @__bad_udelay() #3

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #3

; Function Attrs: noredzone
declare dso_local void @__udelay(i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @___might_sleep(i8* %file, i32 %line, i32 %preempt_offset) #0 !dbg !10909 {
entry:
  %file.addr = alloca i8*, align 8
  %line.addr = alloca i32, align 4
  %preempt_offset.addr = alloca i32, align 4
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10913, metadata !DIExpression()), !dbg !10914
  store i32 %line, i32* %line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %line.addr, metadata !10915, metadata !DIExpression()), !dbg !10916
  store i32 %preempt_offset, i32* %preempt_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %preempt_offset.addr, metadata !10917, metadata !DIExpression()), !dbg !10918
  ret void, !dbg !10919
}

; Function Attrs: noredzone
declare dso_local i32 @_cond_resched() #3

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #3

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #9

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #10 !dbg !10920 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !10924, metadata !DIExpression()), !dbg !10928
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !10930, metadata !DIExpression()), !dbg !10931
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10932, metadata !DIExpression()), !dbg !10933
  %0 = load i64, i64* %size.addr, align 8, !dbg !10934
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !10936
  br i1 %1, label %if.then, label %if.end447, !dbg !10937

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !10938
  %tobool = icmp ne i64 %2, 0, !dbg !10938
  br i1 %tobool, label %if.end, label %if.then1, !dbg !10941

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !10942
  br label %return, !dbg !10942

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !10943
  %cmp = icmp ult i64 %3, 4096, !dbg !10945
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !10946

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10947
  br label %return, !dbg !10947

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub = sub i64 %4, 1, !dbg !10948
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !10948
  br i1 %5, label %cond.true, label %cond.false442, !dbg !10948

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub4 = sub i64 %6, 1, !dbg !10948
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !10948
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !10948

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub6 = sub i64 %8, 1, !dbg !10948
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !10948
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !10948

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !10948

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub9 = sub i64 %9, 1, !dbg !10948
  %and = and i64 %sub9, -9223372036854775808, !dbg !10948
  %tobool10 = icmp ne i64 %and, 0, !dbg !10948
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !10948

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !10948

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub13 = sub i64 %10, 1, !dbg !10948
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !10948
  %tobool15 = icmp ne i64 %and14, 0, !dbg !10948
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !10948

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !10948

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub18 = sub i64 %11, 1, !dbg !10948
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !10948
  %tobool20 = icmp ne i64 %and19, 0, !dbg !10948
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !10948

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !10948

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub23 = sub i64 %12, 1, !dbg !10948
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !10948
  %tobool25 = icmp ne i64 %and24, 0, !dbg !10948
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !10948

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !10948

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub28 = sub i64 %13, 1, !dbg !10948
  %and29 = and i64 %sub28, 576460752303423488, !dbg !10948
  %tobool30 = icmp ne i64 %and29, 0, !dbg !10948
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !10948

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !10948

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub33 = sub i64 %14, 1, !dbg !10948
  %and34 = and i64 %sub33, 288230376151711744, !dbg !10948
  %tobool35 = icmp ne i64 %and34, 0, !dbg !10948
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !10948

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !10948

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub38 = sub i64 %15, 1, !dbg !10948
  %and39 = and i64 %sub38, 144115188075855872, !dbg !10948
  %tobool40 = icmp ne i64 %and39, 0, !dbg !10948
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !10948

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !10948

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub43 = sub i64 %16, 1, !dbg !10948
  %and44 = and i64 %sub43, 72057594037927936, !dbg !10948
  %tobool45 = icmp ne i64 %and44, 0, !dbg !10948
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !10948

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !10948

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub48 = sub i64 %17, 1, !dbg !10948
  %and49 = and i64 %sub48, 36028797018963968, !dbg !10948
  %tobool50 = icmp ne i64 %and49, 0, !dbg !10948
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !10948

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !10948

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub53 = sub i64 %18, 1, !dbg !10948
  %and54 = and i64 %sub53, 18014398509481984, !dbg !10948
  %tobool55 = icmp ne i64 %and54, 0, !dbg !10948
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !10948

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !10948

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub58 = sub i64 %19, 1, !dbg !10948
  %and59 = and i64 %sub58, 9007199254740992, !dbg !10948
  %tobool60 = icmp ne i64 %and59, 0, !dbg !10948
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !10948

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !10948

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub63 = sub i64 %20, 1, !dbg !10948
  %and64 = and i64 %sub63, 4503599627370496, !dbg !10948
  %tobool65 = icmp ne i64 %and64, 0, !dbg !10948
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !10948

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !10948

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub68 = sub i64 %21, 1, !dbg !10948
  %and69 = and i64 %sub68, 2251799813685248, !dbg !10948
  %tobool70 = icmp ne i64 %and69, 0, !dbg !10948
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !10948

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !10948

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub73 = sub i64 %22, 1, !dbg !10948
  %and74 = and i64 %sub73, 1125899906842624, !dbg !10948
  %tobool75 = icmp ne i64 %and74, 0, !dbg !10948
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !10948

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !10948

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub78 = sub i64 %23, 1, !dbg !10948
  %and79 = and i64 %sub78, 562949953421312, !dbg !10948
  %tobool80 = icmp ne i64 %and79, 0, !dbg !10948
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !10948

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !10948

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub83 = sub i64 %24, 1, !dbg !10948
  %and84 = and i64 %sub83, 281474976710656, !dbg !10948
  %tobool85 = icmp ne i64 %and84, 0, !dbg !10948
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !10948

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !10948

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub88 = sub i64 %25, 1, !dbg !10948
  %and89 = and i64 %sub88, 140737488355328, !dbg !10948
  %tobool90 = icmp ne i64 %and89, 0, !dbg !10948
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !10948

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !10948

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub93 = sub i64 %26, 1, !dbg !10948
  %and94 = and i64 %sub93, 70368744177664, !dbg !10948
  %tobool95 = icmp ne i64 %and94, 0, !dbg !10948
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !10948

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !10948

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub98 = sub i64 %27, 1, !dbg !10948
  %and99 = and i64 %sub98, 35184372088832, !dbg !10948
  %tobool100 = icmp ne i64 %and99, 0, !dbg !10948
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !10948

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !10948

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub103 = sub i64 %28, 1, !dbg !10948
  %and104 = and i64 %sub103, 17592186044416, !dbg !10948
  %tobool105 = icmp ne i64 %and104, 0, !dbg !10948
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !10948

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !10948

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub108 = sub i64 %29, 1, !dbg !10948
  %and109 = and i64 %sub108, 8796093022208, !dbg !10948
  %tobool110 = icmp ne i64 %and109, 0, !dbg !10948
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !10948

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !10948

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub113 = sub i64 %30, 1, !dbg !10948
  %and114 = and i64 %sub113, 4398046511104, !dbg !10948
  %tobool115 = icmp ne i64 %and114, 0, !dbg !10948
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !10948

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !10948

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub118 = sub i64 %31, 1, !dbg !10948
  %and119 = and i64 %sub118, 2199023255552, !dbg !10948
  %tobool120 = icmp ne i64 %and119, 0, !dbg !10948
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !10948

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !10948

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub123 = sub i64 %32, 1, !dbg !10948
  %and124 = and i64 %sub123, 1099511627776, !dbg !10948
  %tobool125 = icmp ne i64 %and124, 0, !dbg !10948
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !10948

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !10948

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub128 = sub i64 %33, 1, !dbg !10948
  %and129 = and i64 %sub128, 549755813888, !dbg !10948
  %tobool130 = icmp ne i64 %and129, 0, !dbg !10948
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !10948

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !10948

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub133 = sub i64 %34, 1, !dbg !10948
  %and134 = and i64 %sub133, 274877906944, !dbg !10948
  %tobool135 = icmp ne i64 %and134, 0, !dbg !10948
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !10948

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !10948

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub138 = sub i64 %35, 1, !dbg !10948
  %and139 = and i64 %sub138, 137438953472, !dbg !10948
  %tobool140 = icmp ne i64 %and139, 0, !dbg !10948
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !10948

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !10948

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub143 = sub i64 %36, 1, !dbg !10948
  %and144 = and i64 %sub143, 68719476736, !dbg !10948
  %tobool145 = icmp ne i64 %and144, 0, !dbg !10948
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !10948

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !10948

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub148 = sub i64 %37, 1, !dbg !10948
  %and149 = and i64 %sub148, 34359738368, !dbg !10948
  %tobool150 = icmp ne i64 %and149, 0, !dbg !10948
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !10948

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !10948

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub153 = sub i64 %38, 1, !dbg !10948
  %and154 = and i64 %sub153, 17179869184, !dbg !10948
  %tobool155 = icmp ne i64 %and154, 0, !dbg !10948
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !10948

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !10948

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub158 = sub i64 %39, 1, !dbg !10948
  %and159 = and i64 %sub158, 8589934592, !dbg !10948
  %tobool160 = icmp ne i64 %and159, 0, !dbg !10948
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !10948

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !10948

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub163 = sub i64 %40, 1, !dbg !10948
  %and164 = and i64 %sub163, 4294967296, !dbg !10948
  %tobool165 = icmp ne i64 %and164, 0, !dbg !10948
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !10948

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !10948

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub168 = sub i64 %41, 1, !dbg !10948
  %and169 = and i64 %sub168, 2147483648, !dbg !10948
  %tobool170 = icmp ne i64 %and169, 0, !dbg !10948
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !10948

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !10948

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub173 = sub i64 %42, 1, !dbg !10948
  %and174 = and i64 %sub173, 1073741824, !dbg !10948
  %tobool175 = icmp ne i64 %and174, 0, !dbg !10948
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !10948

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !10948

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub178 = sub i64 %43, 1, !dbg !10948
  %and179 = and i64 %sub178, 536870912, !dbg !10948
  %tobool180 = icmp ne i64 %and179, 0, !dbg !10948
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !10948

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !10948

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub183 = sub i64 %44, 1, !dbg !10948
  %and184 = and i64 %sub183, 268435456, !dbg !10948
  %tobool185 = icmp ne i64 %and184, 0, !dbg !10948
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !10948

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !10948

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub188 = sub i64 %45, 1, !dbg !10948
  %and189 = and i64 %sub188, 134217728, !dbg !10948
  %tobool190 = icmp ne i64 %and189, 0, !dbg !10948
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !10948

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !10948

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub193 = sub i64 %46, 1, !dbg !10948
  %and194 = and i64 %sub193, 67108864, !dbg !10948
  %tobool195 = icmp ne i64 %and194, 0, !dbg !10948
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !10948

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !10948

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub198 = sub i64 %47, 1, !dbg !10948
  %and199 = and i64 %sub198, 33554432, !dbg !10948
  %tobool200 = icmp ne i64 %and199, 0, !dbg !10948
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !10948

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !10948

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub203 = sub i64 %48, 1, !dbg !10948
  %and204 = and i64 %sub203, 16777216, !dbg !10948
  %tobool205 = icmp ne i64 %and204, 0, !dbg !10948
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !10948

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !10948

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub208 = sub i64 %49, 1, !dbg !10948
  %and209 = and i64 %sub208, 8388608, !dbg !10948
  %tobool210 = icmp ne i64 %and209, 0, !dbg !10948
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !10948

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !10948

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub213 = sub i64 %50, 1, !dbg !10948
  %and214 = and i64 %sub213, 4194304, !dbg !10948
  %tobool215 = icmp ne i64 %and214, 0, !dbg !10948
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !10948

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !10948

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub218 = sub i64 %51, 1, !dbg !10948
  %and219 = and i64 %sub218, 2097152, !dbg !10948
  %tobool220 = icmp ne i64 %and219, 0, !dbg !10948
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !10948

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !10948

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub223 = sub i64 %52, 1, !dbg !10948
  %and224 = and i64 %sub223, 1048576, !dbg !10948
  %tobool225 = icmp ne i64 %and224, 0, !dbg !10948
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !10948

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !10948

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub228 = sub i64 %53, 1, !dbg !10948
  %and229 = and i64 %sub228, 524288, !dbg !10948
  %tobool230 = icmp ne i64 %and229, 0, !dbg !10948
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !10948

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !10948

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub233 = sub i64 %54, 1, !dbg !10948
  %and234 = and i64 %sub233, 262144, !dbg !10948
  %tobool235 = icmp ne i64 %and234, 0, !dbg !10948
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !10948

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !10948

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub238 = sub i64 %55, 1, !dbg !10948
  %and239 = and i64 %sub238, 131072, !dbg !10948
  %tobool240 = icmp ne i64 %and239, 0, !dbg !10948
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !10948

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !10948

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub243 = sub i64 %56, 1, !dbg !10948
  %and244 = and i64 %sub243, 65536, !dbg !10948
  %tobool245 = icmp ne i64 %and244, 0, !dbg !10948
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !10948

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !10948

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub248 = sub i64 %57, 1, !dbg !10948
  %and249 = and i64 %sub248, 32768, !dbg !10948
  %tobool250 = icmp ne i64 %and249, 0, !dbg !10948
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !10948

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !10948

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub253 = sub i64 %58, 1, !dbg !10948
  %and254 = and i64 %sub253, 16384, !dbg !10948
  %tobool255 = icmp ne i64 %and254, 0, !dbg !10948
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !10948

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !10948

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub258 = sub i64 %59, 1, !dbg !10948
  %and259 = and i64 %sub258, 8192, !dbg !10948
  %tobool260 = icmp ne i64 %and259, 0, !dbg !10948
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !10948

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !10948

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub263 = sub i64 %60, 1, !dbg !10948
  %and264 = and i64 %sub263, 4096, !dbg !10948
  %tobool265 = icmp ne i64 %and264, 0, !dbg !10948
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !10948

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !10948

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub268 = sub i64 %61, 1, !dbg !10948
  %and269 = and i64 %sub268, 2048, !dbg !10948
  %tobool270 = icmp ne i64 %and269, 0, !dbg !10948
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !10948

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !10948

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub273 = sub i64 %62, 1, !dbg !10948
  %and274 = and i64 %sub273, 1024, !dbg !10948
  %tobool275 = icmp ne i64 %and274, 0, !dbg !10948
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !10948

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !10948

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub278 = sub i64 %63, 1, !dbg !10948
  %and279 = and i64 %sub278, 512, !dbg !10948
  %tobool280 = icmp ne i64 %and279, 0, !dbg !10948
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !10948

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !10948

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub283 = sub i64 %64, 1, !dbg !10948
  %and284 = and i64 %sub283, 256, !dbg !10948
  %tobool285 = icmp ne i64 %and284, 0, !dbg !10948
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !10948

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !10948

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub288 = sub i64 %65, 1, !dbg !10948
  %and289 = and i64 %sub288, 128, !dbg !10948
  %tobool290 = icmp ne i64 %and289, 0, !dbg !10948
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !10948

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !10948

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub293 = sub i64 %66, 1, !dbg !10948
  %and294 = and i64 %sub293, 64, !dbg !10948
  %tobool295 = icmp ne i64 %and294, 0, !dbg !10948
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !10948

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !10948

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub298 = sub i64 %67, 1, !dbg !10948
  %and299 = and i64 %sub298, 32, !dbg !10948
  %tobool300 = icmp ne i64 %and299, 0, !dbg !10948
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !10948

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !10948

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub303 = sub i64 %68, 1, !dbg !10948
  %and304 = and i64 %sub303, 16, !dbg !10948
  %tobool305 = icmp ne i64 %and304, 0, !dbg !10948
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !10948

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !10948

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub308 = sub i64 %69, 1, !dbg !10948
  %and309 = and i64 %sub308, 8, !dbg !10948
  %tobool310 = icmp ne i64 %and309, 0, !dbg !10948
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !10948

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !10948

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub313 = sub i64 %70, 1, !dbg !10948
  %and314 = and i64 %sub313, 4, !dbg !10948
  %tobool315 = icmp ne i64 %and314, 0, !dbg !10948
  %71 = zext i1 %tobool315 to i64, !dbg !10948
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !10948
  br label %cond.end, !dbg !10948

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !10948
  br label %cond.end317, !dbg !10948

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !10948
  br label %cond.end319, !dbg !10948

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !10948
  br label %cond.end321, !dbg !10948

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !10948
  br label %cond.end323, !dbg !10948

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !10948
  br label %cond.end325, !dbg !10948

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !10948
  br label %cond.end327, !dbg !10948

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !10948
  br label %cond.end329, !dbg !10948

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !10948
  br label %cond.end331, !dbg !10948

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !10948
  br label %cond.end333, !dbg !10948

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !10948
  br label %cond.end335, !dbg !10948

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !10948
  br label %cond.end337, !dbg !10948

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !10948
  br label %cond.end339, !dbg !10948

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !10948
  br label %cond.end341, !dbg !10948

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !10948
  br label %cond.end343, !dbg !10948

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !10948
  br label %cond.end345, !dbg !10948

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !10948
  br label %cond.end347, !dbg !10948

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !10948
  br label %cond.end349, !dbg !10948

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !10948
  br label %cond.end351, !dbg !10948

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !10948
  br label %cond.end353, !dbg !10948

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !10948
  br label %cond.end355, !dbg !10948

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !10948
  br label %cond.end357, !dbg !10948

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !10948
  br label %cond.end359, !dbg !10948

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !10948
  br label %cond.end361, !dbg !10948

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !10948
  br label %cond.end363, !dbg !10948

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !10948
  br label %cond.end365, !dbg !10948

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !10948
  br label %cond.end367, !dbg !10948

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !10948
  br label %cond.end369, !dbg !10948

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !10948
  br label %cond.end371, !dbg !10948

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !10948
  br label %cond.end373, !dbg !10948

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !10948
  br label %cond.end375, !dbg !10948

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !10948
  br label %cond.end377, !dbg !10948

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !10948
  br label %cond.end379, !dbg !10948

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !10948
  br label %cond.end381, !dbg !10948

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !10948
  br label %cond.end383, !dbg !10948

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !10948
  br label %cond.end385, !dbg !10948

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !10948
  br label %cond.end387, !dbg !10948

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !10948
  br label %cond.end389, !dbg !10948

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !10948
  br label %cond.end391, !dbg !10948

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !10948
  br label %cond.end393, !dbg !10948

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !10948
  br label %cond.end395, !dbg !10948

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !10948
  br label %cond.end397, !dbg !10948

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !10948
  br label %cond.end399, !dbg !10948

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !10948
  br label %cond.end401, !dbg !10948

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !10948
  br label %cond.end403, !dbg !10948

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !10948
  br label %cond.end405, !dbg !10948

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !10948
  br label %cond.end407, !dbg !10948

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !10948
  br label %cond.end409, !dbg !10948

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !10948
  br label %cond.end411, !dbg !10948

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !10948
  br label %cond.end413, !dbg !10948

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !10948
  br label %cond.end415, !dbg !10948

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !10948
  br label %cond.end417, !dbg !10948

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !10948
  br label %cond.end419, !dbg !10948

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !10948
  br label %cond.end421, !dbg !10948

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !10948
  br label %cond.end423, !dbg !10948

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !10948
  br label %cond.end425, !dbg !10948

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !10948
  br label %cond.end427, !dbg !10948

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !10948
  br label %cond.end429, !dbg !10948

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !10948
  br label %cond.end431, !dbg !10948

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !10948
  br label %cond.end433, !dbg !10948

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !10948
  br label %cond.end435, !dbg !10948

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !10948
  br label %cond.end437, !dbg !10948

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !10948
  br label %cond.end440, !dbg !10948

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !10948

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !10948
  br label %cond.end444, !dbg !10948

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !10948
  %sub443 = sub i64 %72, 1, !dbg !10948
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !10948
  br label %cond.end444, !dbg !10948

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !10948
  %sub446 = sub i32 %cond445, 12, !dbg !10949
  %add = add i32 %sub446, 1, !dbg !10950
  store i32 %add, i32* %retval, align 4, !dbg !10951
  br label %return, !dbg !10951

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !10952
  %dec = add i64 %73, -1, !dbg !10952
  store i64 %dec, i64* %size.addr, align 8, !dbg !10952
  %74 = load i64, i64* %size.addr, align 8, !dbg !10953
  %shr = lshr i64 %74, 12, !dbg !10953
  store i64 %shr, i64* %size.addr, align 8, !dbg !10953
  %75 = load i64, i64* %size.addr, align 8, !dbg !10954
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !10931
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !10955
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !10956
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #6, !dbg !10955, !srcloc !10957
  store i32 %78, i32* %bitpos.i, align 4, !dbg !10955
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !10958
  %add.i = add i32 %79, 1, !dbg !10959
  store i32 %add.i, i32* %retval, align 4, !dbg !10960
  br label %return, !dbg !10960

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !10961
  ret i32 %80, !dbg !10961
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #10 !dbg !10962 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !10924, metadata !DIExpression()), !dbg !10966
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !10930, metadata !DIExpression()), !dbg !10968
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10969, metadata !DIExpression()), !dbg !10970
  %0 = load i64, i64* %n.addr, align 8, !dbg !10971
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !10968
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !10972
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !10973
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #6, !dbg !10972, !srcloc !10957
  store i32 %3, i32* %bitpos.i, align 4, !dbg !10972
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !10974
  %add.i = add i32 %4, 1, !dbg !10975
  %sub = sub i32 %add.i, 1, !dbg !10976
  ret i32 %sub, !dbg !10977
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !10978 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !10982, metadata !DIExpression()), !dbg !10983
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !10984, metadata !DIExpression()), !dbg !10985
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10986, metadata !DIExpression()), !dbg !10987
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10988, metadata !DIExpression()), !dbg !10989
  %0 = load i8*, i8** %object.addr, align 8, !dbg !10990
  ret i8* %0, !dbg !10991
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !10992 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !10997, metadata !DIExpression()), !dbg !10998
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !10999
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !11000
  %1 = load i8*, i8** %name, align 8, !dbg !11000
  ret i8* %1, !dbg !11001
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #0 !dbg !11002 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !11005, metadata !DIExpression()), !dbg !11006
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !11007, metadata !DIExpression()), !dbg !11008
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !11009
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !11010
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #11, !dbg !11011
  ret i1 %call, !dbg !11012
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #3

; Function Attrs: noredzone
declare dso_local i32 @of_phandle_iterator_init(%struct.of_phandle_iterator*, %struct.device_node*, i8*, i8*, i32) #3

; Function Attrs: noredzone
declare dso_local i32 @of_phandle_iterator_next(%struct.of_phandle_iterator*) #3

; Function Attrs: noredzone
declare dso_local %struct.of_device_id* @of_match_node(%struct.of_device_id*, %struct.device_node*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genpd_parse_state(%struct.genpd_power_state* %genpd_state, %struct.device_node* %state_node) #0 !dbg !11013 {
entry:
  %retval = alloca i32, align 4
  %genpd_state.addr = alloca %struct.genpd_power_state*, align 8
  %state_node.addr = alloca %struct.device_node*, align 8
  %err = alloca i32, align 4
  %residency = alloca i32, align 4
  %entry_latency = alloca i32, align 4
  %exit_latency = alloca i32, align 4
  %tmp = alloca i32, align 4
  %tmp4 = alloca i32, align 4
  store %struct.genpd_power_state* %genpd_state, %struct.genpd_power_state** %genpd_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.genpd_power_state** %genpd_state.addr, metadata !11016, metadata !DIExpression()), !dbg !11017
  store %struct.device_node* %state_node, %struct.device_node** %state_node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %state_node.addr, metadata !11018, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11020, metadata !DIExpression()), !dbg !11021
  call void @llvm.dbg.declare(metadata i32* %residency, metadata !11022, metadata !DIExpression()), !dbg !11023
  call void @llvm.dbg.declare(metadata i32* %entry_latency, metadata !11024, metadata !DIExpression()), !dbg !11025
  call void @llvm.dbg.declare(metadata i32* %exit_latency, metadata !11026, metadata !DIExpression()), !dbg !11027
  %0 = load %struct.device_node*, %struct.device_node** %state_node.addr, align 8, !dbg !11028
  %call = call i32 @of_property_read_u32(%struct.device_node* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.26, i64 0, i64 0), i32* %entry_latency) #11, !dbg !11029
  store i32 %call, i32* %err, align 4, !dbg !11030
  %1 = load i32, i32* %err, align 4, !dbg !11031
  %tobool = icmp ne i32 %1, 0, !dbg !11031
  br i1 %tobool, label %if.then, label %if.end, !dbg !11033

if.then:                                          ; preds = %entry
  store i32 0, i32* %tmp, align 4, !dbg !11034
  %2 = load i32, i32* %tmp, align 4, !dbg !11038
  store i32 -22, i32* %retval, align 4, !dbg !11039
  br label %return, !dbg !11039

if.end:                                           ; preds = %entry
  %3 = load %struct.device_node*, %struct.device_node** %state_node.addr, align 8, !dbg !11040
  %call1 = call i32 @of_property_read_u32(%struct.device_node* %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.27, i64 0, i64 0), i32* %exit_latency) #11, !dbg !11041
  store i32 %call1, i32* %err, align 4, !dbg !11042
  %4 = load i32, i32* %err, align 4, !dbg !11043
  %tobool2 = icmp ne i32 %4, 0, !dbg !11043
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !11045

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %tmp4, align 4, !dbg !11046
  %5 = load i32, i32* %tmp4, align 4, !dbg !11050
  store i32 -22, i32* %retval, align 4, !dbg !11051
  br label %return, !dbg !11051

if.end5:                                          ; preds = %if.end
  %6 = load %struct.device_node*, %struct.device_node** %state_node.addr, align 8, !dbg !11052
  %call6 = call i32 @of_property_read_u32(%struct.device_node* %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.28, i64 0, i64 0), i32* %residency) #11, !dbg !11053
  store i32 %call6, i32* %err, align 4, !dbg !11054
  %7 = load i32, i32* %err, align 4, !dbg !11055
  %tobool7 = icmp ne i32 %7, 0, !dbg !11055
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !11057

if.then8:                                         ; preds = %if.end5
  %8 = load i32, i32* %residency, align 4, !dbg !11058
  %mul = mul i32 1000, %8, !dbg !11059
  %conv = zext i32 %mul to i64, !dbg !11060
  %9 = load %struct.genpd_power_state*, %struct.genpd_power_state** %genpd_state.addr, align 8, !dbg !11061
  %residency_ns = getelementptr inbounds %struct.genpd_power_state, %struct.genpd_power_state* %9, i32 0, i32 2, !dbg !11062
  store i64 %conv, i64* %residency_ns, align 8, !dbg !11063
  br label %if.end9, !dbg !11061

if.end9:                                          ; preds = %if.then8, %if.end5
  %10 = load i32, i32* %exit_latency, align 4, !dbg !11064
  %mul10 = mul i32 1000, %10, !dbg !11065
  %conv11 = zext i32 %mul10 to i64, !dbg !11066
  %11 = load %struct.genpd_power_state*, %struct.genpd_power_state** %genpd_state.addr, align 8, !dbg !11067
  %power_on_latency_ns = getelementptr inbounds %struct.genpd_power_state, %struct.genpd_power_state* %11, i32 0, i32 1, !dbg !11068
  store i64 %conv11, i64* %power_on_latency_ns, align 8, !dbg !11069
  %12 = load i32, i32* %entry_latency, align 4, !dbg !11070
  %mul12 = mul i32 1000, %12, !dbg !11071
  %conv13 = zext i32 %mul12 to i64, !dbg !11072
  %13 = load %struct.genpd_power_state*, %struct.genpd_power_state** %genpd_state.addr, align 8, !dbg !11073
  %power_off_latency_ns = getelementptr inbounds %struct.genpd_power_state, %struct.genpd_power_state* %13, i32 0, i32 0, !dbg !11074
  store i64 %conv13, i64* %power_off_latency_ns, align 8, !dbg !11075
  %14 = load %struct.device_node*, %struct.device_node** %state_node.addr, align 8, !dbg !11076
  %fwnode = getelementptr inbounds %struct.device_node, %struct.device_node* %14, i32 0, i32 3, !dbg !11077
  %15 = load %struct.genpd_power_state*, %struct.genpd_power_state** %genpd_state.addr, align 8, !dbg !11078
  %fwnode14 = getelementptr inbounds %struct.genpd_power_state, %struct.genpd_power_state* %15, i32 0, i32 5, !dbg !11079
  store %struct.fwnode_handle* %fwnode, %struct.fwnode_handle** %fwnode14, align 8, !dbg !11080
  store i32 0, i32* %retval, align 4, !dbg !11081
  br label %return, !dbg !11081

return:                                           ; preds = %if.end9, %if.then3, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !11082
  ret i32 %16, !dbg !11082
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_property_read_u32(%struct.device_node* %np, i8* %propname, i32* %out_value) #0 !dbg !11083 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %propname.addr = alloca i8*, align 8
  %out_value.addr = alloca i32*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !11086, metadata !DIExpression()), !dbg !11087
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !11088, metadata !DIExpression()), !dbg !11089
  store i32* %out_value, i32** %out_value.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %out_value.addr, metadata !11090, metadata !DIExpression()), !dbg !11091
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !11092
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !11093
  %2 = load i32*, i32** %out_value.addr, align 8, !dbg !11094
  %call = call i32 @of_property_read_u32_array(%struct.device_node* %0, i8* %1, i32* %2, i64 1) #11, !dbg !11095
  ret i32 %call, !dbg !11096
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_property_read_u32_array(%struct.device_node* %np, i8* %propname, i32* %out_values, i64 %sz) #0 !dbg !11097 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %propname.addr = alloca i8*, align 8
  %out_values.addr = alloca i32*, align 8
  %sz.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !11100, metadata !DIExpression()), !dbg !11101
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !11102, metadata !DIExpression()), !dbg !11103
  store i32* %out_values, i32** %out_values.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %out_values.addr, metadata !11104, metadata !DIExpression()), !dbg !11105
  store i64 %sz, i64* %sz.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %sz.addr, metadata !11106, metadata !DIExpression()), !dbg !11107
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11108, metadata !DIExpression()), !dbg !11109
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !11110
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !11111
  %2 = load i32*, i32** %out_values.addr, align 8, !dbg !11112
  %3 = load i64, i64* %sz.addr, align 8, !dbg !11113
  %call = call i32 @of_property_read_variable_u32_array(%struct.device_node* %0, i8* %1, i32* %2, i64 %3, i64 0) #11, !dbg !11114
  store i32 %call, i32* %ret, align 4, !dbg !11109
  %4 = load i32, i32* %ret, align 4, !dbg !11115
  %cmp = icmp sge i32 %4, 0, !dbg !11117
  br i1 %cmp, label %if.then, label %if.else, !dbg !11118

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11119
  br label %return, !dbg !11119

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %ret, align 4, !dbg !11120
  store i32 %5, i32* %retval, align 4, !dbg !11121
  br label %return, !dbg !11121

return:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !11122
  ret i32 %6, !dbg !11122
}

; Function Attrs: noredzone
declare dso_local i32 @of_property_read_variable_u32_array(%struct.device_node*, i8*, i32*, i64, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !11123 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !8316, metadata !DIExpression()), !dbg !11124
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !8326, metadata !DIExpression()), !dbg !11128
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !8328, metadata !DIExpression()), !dbg !11129
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !8330, metadata !DIExpression()), !dbg !11130
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !8332, metadata !DIExpression()), !dbg !11131
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !8338, metadata !DIExpression()), !dbg !11133
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !8344, metadata !DIExpression()), !dbg !11135
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !8353, metadata !DIExpression()), !dbg !11138
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !8355, metadata !DIExpression()), !dbg !11139
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8357, metadata !DIExpression()), !dbg !11140
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !8359, metadata !DIExpression()), !dbg !11141
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !8361, metadata !DIExpression()), !dbg !11142
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8363, metadata !DIExpression()), !dbg !11143
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !8365, metadata !DIExpression()), !dbg !11144
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !8367, metadata !DIExpression()), !dbg !11145
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11146, metadata !DIExpression()), !dbg !11147
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11148, metadata !DIExpression()), !dbg !11149
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11150, metadata !DIExpression()), !dbg !11151
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !11152, metadata !DIExpression()), !dbg !11153
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !11154, metadata !DIExpression()), !dbg !11157
  %0 = load i64, i64* %n.addr, align 8, !dbg !11157
  store i64 %0, i64* %__a, align 8, !dbg !11157
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !11158, metadata !DIExpression()), !dbg !11157
  %1 = load i64, i64* %size.addr, align 8, !dbg !11157
  store i64 %1, i64* %__b, align 8, !dbg !11157
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !11159, metadata !DIExpression()), !dbg !11157
  store i64* %bytes, i64** %__d, align 8, !dbg !11157
  %cmp = icmp eq i64* %__a, %__b, !dbg !11157
  %conv = zext i1 %cmp to i32, !dbg !11157
  %2 = load i64*, i64** %__d, align 8, !dbg !11157
  %cmp1 = icmp eq i64* %__a, %2, !dbg !11157
  %conv2 = zext i1 %cmp1 to i32, !dbg !11157
  %3 = load i64, i64* %__a, align 8, !dbg !11157
  %4 = load i64, i64* %__b, align 8, !dbg !11157
  %5 = load i64*, i64** %__d, align 8, !dbg !11157
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !11157
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !11157
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !11157
  store i64 %8, i64* %5, align 8, !dbg !11157
  %frombool = zext i1 %7 to i8, !dbg !11157
  store i8 %frombool, i8* %tmp, align 1, !dbg !11157
  %9 = load i8, i8* %tmp, align 1, !dbg !11157
  %tobool = trunc i8 %9 to i1, !dbg !11157
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !11160
  %lnot = xor i1 %call, true, !dbg !11160
  %lnot3 = xor i1 %lnot, true, !dbg !11160
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !11160
  %conv4 = sext i32 %lnot.ext to i64, !dbg !11160
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !11160
  br i1 %tobool5, label %if.then, label %if.end, !dbg !11161

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11162
  br label %return, !dbg !11162

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !11163
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !11164
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !11165

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !11166
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !11167
  br i1 %13, label %if.then6, label %if.end8, !dbg !11168

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !11169
  %15 = load i32, i32* %flags.addr, align 4, !dbg !11170
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !11171
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #7, !dbg !11172
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !11173

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !11174
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !11175
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !11176

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !11177
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !11178
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !11179
  %call.i.i = call i32 @get_order(i64 %21) #14, !dbg !11180
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !11142
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !11181
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !11182
  %24 = load i32, i32* %order.i.i, align 4, !dbg !11183
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !11184
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !11185
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !11186
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #13, !dbg !11187
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !11187
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !11187
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !11187
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !11187
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !11188
  br label %kmalloc.exit, !dbg !11188

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !11189
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11190
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !11190
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !11191

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !11192
  br label %kmalloc_index.exit.i, !dbg !11192

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11193
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !11194
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !11195

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11196
  br label %kmalloc_index.exit.i, !dbg !11196

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11197
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !11198
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !11199

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11200
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !11201
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !11202

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !11203
  br label %kmalloc_index.exit.i, !dbg !11203

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11204
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !11205
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !11206

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11207
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !11208
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !11209

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !11210
  br label %kmalloc_index.exit.i, !dbg !11210

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11211
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !11212
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !11213

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11214
  br label %kmalloc_index.exit.i, !dbg !11214

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11215
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !11216
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !11217

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !11218
  br label %kmalloc_index.exit.i, !dbg !11218

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11219
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !11220
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !11221

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !11222
  br label %kmalloc_index.exit.i, !dbg !11222

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11223
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !11224
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !11225

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !11226
  br label %kmalloc_index.exit.i, !dbg !11226

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11227
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !11228
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !11229

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !11230
  br label %kmalloc_index.exit.i, !dbg !11230

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11231
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !11232
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !11233

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !11234
  br label %kmalloc_index.exit.i, !dbg !11234

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11235
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !11236
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !11237

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !11238
  br label %kmalloc_index.exit.i, !dbg !11238

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11239
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !11240
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !11241

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !11242
  br label %kmalloc_index.exit.i, !dbg !11242

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11243
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !11244
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !11245

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !11246
  br label %kmalloc_index.exit.i, !dbg !11246

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11247
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !11248
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !11249

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !11250
  br label %kmalloc_index.exit.i, !dbg !11250

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11251
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !11252
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !11253

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !11254
  br label %kmalloc_index.exit.i, !dbg !11254

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11255
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !11256
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !11257

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !11258
  br label %kmalloc_index.exit.i, !dbg !11258

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11259
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !11260
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !11261

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !11262
  br label %kmalloc_index.exit.i, !dbg !11262

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11263
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !11264
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !11265

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !11266
  br label %kmalloc_index.exit.i, !dbg !11266

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11267
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !11268
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !11269

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !11270
  br label %kmalloc_index.exit.i, !dbg !11270

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11271
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !11272
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !11273

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !11274
  br label %kmalloc_index.exit.i, !dbg !11274

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11275
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !11276
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !11277

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !11278
  br label %kmalloc_index.exit.i, !dbg !11278

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11279
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !11280
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !11281

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !11282
  br label %kmalloc_index.exit.i, !dbg !11282

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11283
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !11284
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !11285

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !11286
  br label %kmalloc_index.exit.i, !dbg !11286

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11287
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !11288
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !11289

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !11290
  br label %kmalloc_index.exit.i, !dbg !11290

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11291
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !11292
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !11293

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !11294
  br label %kmalloc_index.exit.i, !dbg !11294

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11295
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !11296
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !11297

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !11298
  br label %kmalloc_index.exit.i, !dbg !11298

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11299
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !11300
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !11301

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !11302
  br label %kmalloc_index.exit.i, !dbg !11302

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11303
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !11304
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !11305

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !11306
  br label %kmalloc_index.exit.i, !dbg !11306

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !11307, !srcloc !8543
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 159) #7, !dbg !11308, !srcloc !8547
  unreachable, !dbg !11309

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !11310
  store i32 %59, i32* %index.i, align 4, !dbg !11311
  %60 = load i32, i32* %index.i, align 4, !dbg !11312
  %tobool.i = icmp ne i32 %60, 0, !dbg !11312
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !11313

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !11314
  br label %kmalloc.exit, !dbg !11314

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !11315
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11316
  %and.i.i = and i32 %62, 17, !dbg !11316
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !11316
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !11316
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !11316
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !11316
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !11317

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !11318
  br label %kmalloc_type.exit.i, !dbg !11318

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11319
  %and2.i.i = and i32 %63, 1, !dbg !11320
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !11319
  %64 = zext i1 %tobool3.i.i to i64, !dbg !11319
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !11319
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !11321
  br label %kmalloc_type.exit.i, !dbg !11321

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !11322
  %idxprom.i = zext i32 %65 to i64, !dbg !11323
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !11323
  %66 = load i32, i32* %index.i, align 4, !dbg !11324
  %idxprom6.i = zext i32 %66 to i64, !dbg !11323
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !11323
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !11323
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !11325
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !11326
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11327
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11328
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #13, !dbg !11329
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !11329
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !11329
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !11329
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !11329
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !11130
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11330
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !11331
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !11332
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11333
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #13, !dbg !11334
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !11335
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !11336
  store i8* %76, i8** %retval.i, align 8, !dbg !11337
  br label %kmalloc.exit, !dbg !11337

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !11338
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !11339
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #13, !dbg !11340
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !11340
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !11340
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !11340
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !11340
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !11341
  br label %kmalloc.exit, !dbg !11341

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !11342
  store i8* %79, i8** %retval, align 8, !dbg !11343
  br label %return, !dbg !11343

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !11344
  %81 = load i32, i32* %flags.addr, align 4, !dbg !11345
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #11, !dbg !11346
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !11346
  %maskedptr = and i64 %ptrint, 7, !dbg !11346
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !11346
  call void @llvm.assume(i1 %maskcond), !dbg !11346
  store i8* %call9, i8** %retval, align 8, !dbg !11347
  br label %return, !dbg !11347

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !11348
  ret i8* %82, !dbg !11348
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !11349 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !11353, metadata !DIExpression()), !dbg !11354
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !11355
  %tobool = trunc i8 %0 to i1, !dbg !11355
  %lnot = xor i1 %tobool, true, !dbg !11355
  %lnot1 = xor i1 %lnot, true, !dbg !11355
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11355
  %conv = sext i32 %lnot.ext to i64, !dbg !11355
  %tobool2 = icmp ne i64 %conv, 0, !dbg !11355
  ret i1 %tobool2, !dbg !11356
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: noredzone
declare dso_local i32 @bus_register(%struct.bus_type*) #3

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone willreturn }
attributes #9 = { nounwind willreturn }
attributes #10 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noredzone }
attributes #12 = { cold noredzone }
attributes #13 = { noredzone nounwind }
attributes #14 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!5199}
!llvm.module.flags = !{!5200, !5201, !5202, !5203}
!llvm.ident = !{!5204}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__setup_str_pd_ignore_unused_setup", scope: !2, file: !3, line: 938, type: !5196, isLocal: true, isDefinition: true, align: 8)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !208, globals: !5153, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/base/power/domain.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !18, !24, !31, !43, !50, !55, !61, !66, !72, !79, !85, !94, !102, !108, !114, !121, !128, !134, !141, !145, !150, !155, !188, !194, !201}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "writeback_sync_modes", file: !6, line: 41, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/writeback.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "WB_SYNC_NONE", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "WB_SYNC_ALL", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !12, line: 15, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15, !16, !17}
!14 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !19, line: 118, baseType: !7, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22, !23}
!21 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !25, line: 19, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29, !30}
!27 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!30 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!31 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !32, line: 49, baseType: !7, size: 32, elements: !33)
!32 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42}
!34 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!35 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!36 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!37 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!38 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!39 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!40 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!41 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!42 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !44, line: 502, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49}
!46 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !19, line: 315, baseType: !7, size: 32, elements: !51)
!51 = !{!52, !53, !54}
!52 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!53 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!54 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!55 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !56, line: 546, baseType: !7, size: 32, elements: !57)
!56 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!57 = !{!58, !59, !60}
!58 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!59 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!60 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!61 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !62, line: 65, baseType: !7, size: 32, elements: !63)
!62 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!63 = !{!64, !65}
!64 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!65 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !67, line: 16, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !73, line: 59, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!76 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!77 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!78 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !80, line: 54, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84}
!82 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!85 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !86, line: 296, baseType: !7, size: 32, elements: !87)
!86 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!87 = !{!88, !89, !90, !91, !92, !93}
!88 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!89 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!90 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!91 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!92 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!93 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!94 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !95, line: 9, baseType: !7, size: 32, elements: !96)
!95 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!96 = !{!97, !98, !99, !100, !101}
!97 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!101 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!102 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !103, line: 26, baseType: !7, size: 32, elements: !104)
!103 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!104 = !{!105, !106, !107}
!105 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!106 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!107 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!108 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !109, line: 44, baseType: !7, size: 32, elements: !110)
!109 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!110 = !{!111, !112, !113}
!111 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!112 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!113 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!114 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !115, line: 343, baseType: !7, size: 32, elements: !116)
!115 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!116 = !{!117, !118, !119, !120}
!117 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!118 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!119 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!120 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!121 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !44, line: 524, baseType: !7, size: 32, elements: !122)
!122 = !{!123, !124, !125, !126, !127}
!123 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!125 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!126 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!127 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!128 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pm_qos_type", file: !129, line: 41, baseType: !7, size: 32, elements: !130)
!129 = !DIFile(filename: "./include/linux/pm_qos.h", directory: "/home/lizy2001/genbc/linux")
!130 = !{!131, !132, !133}
!131 = !DIEnumerator(name: "PM_QOS_UNITIALIZED", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "PM_QOS_MAX", value: 1, isUnsigned: true)
!133 = !DIEnumerator(name: "PM_QOS_MIN", value: 2, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dev_pm_qos_req_type", file: !129, line: 99, baseType: !7, size: 32, elements: !135)
!135 = !{!136, !137, !138, !139, !140}
!136 = !DIEnumerator(name: "DEV_PM_QOS_RESUME_LATENCY", value: 1, isUnsigned: true)
!137 = !DIEnumerator(name: "DEV_PM_QOS_LATENCY_TOLERANCE", value: 2, isUnsigned: true)
!138 = !DIEnumerator(name: "DEV_PM_QOS_MIN_FREQUENCY", value: 3, isUnsigned: true)
!139 = !DIEnumerator(name: "DEV_PM_QOS_MAX_FREQUENCY", value: 4, isUnsigned: true)
!140 = !DIEnumerator(name: "DEV_PM_QOS_FLAGS", value: 5, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "freq_qos_req_type", file: !129, line: 80, baseType: !7, size: 32, elements: !142)
!142 = !{!143, !144}
!143 = !DIEnumerator(name: "FREQ_QOS_MIN", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "FREQ_QOS_MAX", value: 2, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpd_status", file: !146, line: 66, baseType: !7, size: 32, elements: !147)
!146 = !DIFile(filename: "./include/linux/pm_domain.h", directory: "/home/lizy2001/genbc/linux")
!147 = !{!148, !149}
!148 = !DIEnumerator(name: "GENPD_STATE_ON", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "GENPD_STATE_OFF", value: 1, isUnsigned: true)
!150 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !151, line: 10, baseType: !7, size: 32, elements: !152)
!151 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!152 = !{!153, !154}
!153 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!154 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!155 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !156, line: 30, baseType: !157, size: 64, elements: !158)
!156 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!157 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!158 = !{!159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187}
!159 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!160 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!161 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!162 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!163 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!164 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!165 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!166 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!167 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!168 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!169 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!170 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!171 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!172 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!173 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!174 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!175 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!176 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!177 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!178 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!179 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!180 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!181 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!182 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!183 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!184 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!185 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!186 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!187 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!188 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "genpd_notication", file: !146, line: 71, baseType: !7, size: 32, elements: !189)
!189 = !{!190, !191, !192, !193}
!190 = !DIEnumerator(name: "GENPD_NOTIFY_PRE_OFF", value: 0, isUnsigned: true)
!191 = !DIEnumerator(name: "GENPD_NOTIFY_OFF", value: 1, isUnsigned: true)
!192 = !DIEnumerator(name: "GENPD_NOTIFY_PRE_ON", value: 2, isUnsigned: true)
!193 = !DIEnumerator(name: "GENPD_NOTIFY_ON", value: 3, isUnsigned: true)
!194 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pm_qos_flags_status", file: !129, line: 19, baseType: !195, size: 32, elements: !196)
!195 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!196 = !{!197, !198, !199, !200}
!197 = !DIEnumerator(name: "PM_QOS_FLAGS_UNDEFINED", value: -1)
!198 = !DIEnumerator(name: "PM_QOS_FLAGS_NONE", value: 0)
!199 = !DIEnumerator(name: "PM_QOS_FLAGS_SOME", value: 1)
!200 = !DIEnumerator(name: "PM_QOS_FLAGS_ALL", value: 2)
!201 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !202, line: 305, baseType: !7, size: 32, elements: !203)
!202 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!203 = !{!204, !205, !206, !207}
!204 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!205 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!206 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!207 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!208 = !{!209, !210, !333, !819, !5103, !214, !5121, !4702, !5138, !759, !2449, !424, !5141, !5143, !5145, !7, !5146, !5148, !5150, !195, !5151, !157}
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpd_link", file: !146, line: 163, size: 448, elements: !212)
!212 = !{!213, !5098, !5099, !5100, !5101, !5102}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !211, file: !146, line: 164, baseType: !214, size: 64)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "generic_pm_domain", file: !146, line: 103, size: 10048, elements: !216)
!216 = !{!217, !4983, !4984, !4985, !4986, !4987, !4988, !5000, !5001, !5002, !5003, !5004, !5005, !5006, !5007, !5008, !5009, !5010, !5013, !5017, !5018, !5022, !5026, !5032, !5036, !5041, !5042, !5043, !5044, !5045, !5049, !5053, !5054, !5066, !5070, !5071, !5072, !5073, !5074, !5089}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !215, file: !146, line: 104, baseType: !218, size: 5568)
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !115, line: 461, size: 5568, elements: !219)
!219 = !{!220, !4452, !4453, !4456, !4457, !4507, !4598, !4599, !4600, !4601, !4602, !4611, !4780, !4793, !4796, !4797, !4801, !4803, !4804, !4805, !4809, !4815, !4816, !4819, !4934, !4935, !4936, !4937, !4938, !4939, !4971, !4972, !4973, !4976, !4979, !4980, !4981, !4982}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !218, file: !115, line: 462, baseType: !221, size: 512)
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !222, line: 64, size: 512, elements: !223)
!222 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!223 = !{!224, !228, !235, !237, !297, !4319, !4446, !4447, !4448, !4449, !4450, !4451}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !221, file: !222, line: 65, baseType: !225, size: 64)
!225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64)
!226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !227)
!227 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !221, file: !222, line: 66, baseType: !229, size: 128, offset: 64)
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !230, line: 178, size: 128, elements: !231)
!230 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!231 = !{!232, !234}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !229, file: !230, line: 179, baseType: !233, size: 64)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !229, file: !230, line: 179, baseType: !233, size: 64, offset: 64)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !221, file: !222, line: 67, baseType: !236, size: 64, offset: 192)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !221, file: !222, line: 68, baseType: !238, size: 64, offset: 256)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !222, line: 192, size: 704, elements: !240)
!240 = !{!241, !242, !258, !259}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !239, file: !222, line: 193, baseType: !229, size: 128)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !239, file: !222, line: 194, baseType: !243, offset: 128)
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !244, line: 83, baseType: !245)
!244 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !244, line: 71, elements: !246)
!246 = !{!247}
!247 = !DIDerivedType(tag: DW_TAG_member, scope: !245, file: !244, line: 72, baseType: !248)
!248 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !245, file: !244, line: 72, elements: !249)
!249 = !{!250}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !248, file: !244, line: 73, baseType: !251)
!251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !244, line: 20, elements: !252)
!252 = !{!253}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !251, file: !244, line: 21, baseType: !254)
!254 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !255, line: 25, baseType: !256)
!255 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!256 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !255, line: 25, elements: !257)
!257 = !{}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !239, file: !222, line: 195, baseType: !221, size: 512, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !239, file: !222, line: 196, baseType: !260, size: 64, offset: 640)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64)
!261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !222, line: 156, size: 192, elements: !263)
!263 = !{!264, !269, !274}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !262, file: !222, line: 157, baseType: !265, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !266)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64)
!267 = !DISubroutineType(types: !268)
!268 = !{!195, !238, !236}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !262, file: !222, line: 158, baseType: !270, size: 64, offset: 64)
!270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !271)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64)
!272 = !DISubroutineType(types: !273)
!273 = !{!225, !238, !236}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !262, file: !222, line: 159, baseType: !275, size: 64, offset: 128)
!275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !276)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64)
!277 = !DISubroutineType(types: !278)
!278 = !{!195, !238, !236, !279}
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !222, line: 148, size: 20736, elements: !281)
!281 = !{!282, !287, !291, !292, !296}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !280, file: !222, line: 149, baseType: !283, size: 192)
!283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !284, size: 192, elements: !285)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64)
!285 = !{!286}
!286 = !DISubrange(count: 3)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !280, file: !222, line: 150, baseType: !288, size: 4096, offset: 192)
!288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !284, size: 4096, elements: !289)
!289 = !{!290}
!290 = !DISubrange(count: 64)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !280, file: !222, line: 151, baseType: !195, size: 32, offset: 4288)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !280, file: !222, line: 152, baseType: !293, size: 16384, offset: 4320)
!293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 16384, elements: !294)
!294 = !{!295}
!295 = !DISubrange(count: 2048)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !280, file: !222, line: 153, baseType: !195, size: 32, offset: 20704)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !221, file: !222, line: 69, baseType: !298, size: 64, offset: 320)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !222, line: 138, size: 448, elements: !300)
!300 = !{!301, !305, !334, !336, !4283, !4311, !4315}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !299, file: !222, line: 139, baseType: !302, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!303 = !DISubroutineType(types: !304)
!304 = !{null, !236}
!305 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !299, file: !222, line: 140, baseType: !306, size: 64, offset: 64)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 64)
!307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !308)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !309, line: 230, size: 128, elements: !310)
!309 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!310 = !{!311, !326}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !308, file: !309, line: 231, baseType: !312, size: 64)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!313 = !DISubroutineType(types: !314)
!314 = !{!315, !236, !319, !284}
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !230, line: 60, baseType: !316)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !317, line: 73, baseType: !318)
!317 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !317, line: 15, baseType: !157)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !309, line: 30, size: 128, elements: !321)
!321 = !{!322, !323}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !320, file: !309, line: 31, baseType: !225, size: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !320, file: !309, line: 32, baseType: !324, size: 16, offset: 64)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !230, line: 19, baseType: !325)
!325 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !308, file: !309, line: 232, baseType: !327, size: 64, offset: 64)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64)
!328 = !DISubroutineType(types: !329)
!329 = !{!315, !236, !319, !225, !330}
!330 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !230, line: 55, baseType: !331)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !317, line: 72, baseType: !332)
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !317, line: 16, baseType: !333)
!333 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !299, file: !222, line: 141, baseType: !335, size: 64, offset: 128)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !299, file: !222, line: 142, baseType: !337, size: 64, offset: 192)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 64)
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !340)
!340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !309, line: 84, size: 320, elements: !341)
!341 = !{!342, !343, !347, !4280, !4281}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !340, file: !309, line: 85, baseType: !225, size: 64)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !340, file: !309, line: 86, baseType: !344, size: 64, offset: 64)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!345 = !DISubroutineType(types: !346)
!346 = !{!324, !236, !319, !195}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !340, file: !309, line: 88, baseType: !348, size: 64, offset: 128)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!349 = !DISubroutineType(types: !350)
!350 = !{!324, !236, !351, !195}
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !309, line: 168, size: 448, elements: !353)
!353 = !{!354, !355, !356, !357, !4275, !4276}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !352, file: !309, line: 169, baseType: !320, size: 128)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !352, file: !309, line: 170, baseType: !330, size: 64, offset: 128)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !352, file: !309, line: 171, baseType: !209, size: 64, offset: 192)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !352, file: !309, line: 172, baseType: !358, size: 64, offset: 256)
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64)
!359 = !DISubroutineType(types: !360)
!360 = !{!315, !361, !236, !351, !284, !540, !330}
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 64)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !86, line: 916, size: 1856, align: 32, elements: !363)
!363 = !{!364, !382, !4240, !4241, !4242, !4243, !4244, !4245, !4246, !4247, !4248, !4249, !4258, !4259, !4268, !4269, !4270, !4271, !4272, !4273, !4274}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !362, file: !86, line: 920, baseType: !365, size: 128)
!365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !362, file: !86, line: 917, size: 128, elements: !366)
!366 = !{!367, !373}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !365, file: !86, line: 918, baseType: !368, size: 64)
!368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !369, line: 58, size: 64, elements: !370)
!369 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!370 = !{!371}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !368, file: !369, line: 59, baseType: !372, size: 64)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !365, file: !86, line: 919, baseType: !374, size: 128, align: 64)
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !230, line: 216, size: 128, align: 64, elements: !375)
!375 = !{!376, !378}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !374, file: !230, line: 217, baseType: !377, size: 64)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 64)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !374, file: !230, line: 218, baseType: !379, size: 64, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 64)
!380 = !DISubroutineType(types: !381)
!381 = !{null, !377}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !362, file: !86, line: 921, baseType: !383, size: 128, offset: 128)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !384, line: 8, size: 128, elements: !385)
!384 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!385 = !{!386, !390}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !383, file: !384, line: 9, baseType: !387, size: 64)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!388 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !389, line: 18, flags: DIFlagFwdDecl)
!389 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!390 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !383, file: !384, line: 10, baseType: !391, size: 64, offset: 64)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 64)
!392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !389, line: 89, size: 1536, elements: !393)
!393 = !{!394, !395, !405, !413, !414, !437, !4208, !4210, !4222, !4223, !4224, !4225, !4226, !4232, !4233, !4234}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !392, file: !389, line: 91, baseType: !7, size: 32)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !392, file: !389, line: 92, baseType: !396, size: 32, offset: 32)
!396 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !397, line: 277, baseType: !398)
!397 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !397, line: 277, size: 32, elements: !399)
!399 = !{!400}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !398, file: !397, line: 277, baseType: !401, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !397, line: 70, baseType: !402)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !397, line: 65, size: 32, elements: !403)
!403 = !{!404}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !402, file: !397, line: 66, baseType: !7, size: 32)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !392, file: !389, line: 93, baseType: !406, size: 128, offset: 64)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !407, line: 38, size: 128, elements: !408)
!407 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!408 = !{!409, !411}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !406, file: !407, line: 39, baseType: !410, size: 64)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !406, file: !407, line: 39, baseType: !412, size: 64, offset: 64)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 64)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !392, file: !389, line: 94, baseType: !391, size: 64, offset: 192)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !392, file: !389, line: 95, baseType: !415, size: 128, offset: 256)
!415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !389, line: 47, size: 128, elements: !416)
!416 = !{!417, !433}
!417 = !DIDerivedType(tag: DW_TAG_member, scope: !415, file: !389, line: 48, baseType: !418, size: 64)
!418 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !415, file: !389, line: 48, size: 64, elements: !419)
!419 = !{!420, !429}
!420 = !DIDerivedType(tag: DW_TAG_member, scope: !418, file: !389, line: 49, baseType: !421, size: 64)
!421 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !418, file: !389, line: 49, size: 64, elements: !422)
!422 = !{!423, !428}
!423 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !421, file: !389, line: 50, baseType: !424, size: 32)
!424 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !425, line: 21, baseType: !426)
!425 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !427, line: 27, baseType: !7)
!427 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!428 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !421, file: !389, line: 50, baseType: !424, size: 32, offset: 32)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !418, file: !389, line: 52, baseType: !430, size: 64)
!430 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !425, line: 23, baseType: !431)
!431 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !427, line: 31, baseType: !432)
!432 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !415, file: !389, line: 54, baseType: !434, size: 64, offset: 64)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !436)
!436 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !392, file: !389, line: 96, baseType: !438, size: 64, offset: 384)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 64)
!439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !86, line: 610, size: 4224, elements: !440)
!440 = !{!441, !442, !443, !451, !458, !459, !607, !3921, !3922, !3923, !3928, !3929, !3930, !3931, !3932, !3933, !3934, !3935, !3936, !3937, !3938, !3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946, !3947, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !4184, !4192, !4193, !4194, !4204, !4205, !4206, !4207}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !439, file: !86, line: 611, baseType: !324, size: 16)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !439, file: !86, line: 612, baseType: !325, size: 16, offset: 16)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !439, file: !86, line: 613, baseType: !444, size: 32, offset: 32)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !445, line: 23, baseType: !446)
!445 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !445, line: 21, size: 32, elements: !447)
!447 = !{!448}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !446, file: !445, line: 22, baseType: !449, size: 32)
!449 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !230, line: 32, baseType: !450)
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !317, line: 49, baseType: !7)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !439, file: !86, line: 614, baseType: !452, size: 32, offset: 64)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !445, line: 28, baseType: !453)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !445, line: 26, size: 32, elements: !454)
!454 = !{!455}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !453, file: !445, line: 27, baseType: !456, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !230, line: 33, baseType: !457)
!457 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !317, line: 50, baseType: !7)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !439, file: !86, line: 615, baseType: !7, size: 32, offset: 96)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !439, file: !86, line: 622, baseType: !460, size: 64, offset: 128)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !462)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !86, line: 1864, size: 1536, align: 512, elements: !463)
!463 = !{!464, !468, !481, !485, !491, !495, !501, !505, !509, !513, !517, !518, !524, !528, !554, !583, !587, !593, !598, !602, !603}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !462, file: !86, line: 1865, baseType: !465, size: 64)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!466 = !DISubroutineType(types: !467)
!467 = !{!391, !438, !391, !7}
!468 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !462, file: !86, line: 1866, baseType: !469, size: 64, offset: 64)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64)
!470 = !DISubroutineType(types: !471)
!471 = !{!225, !391, !438, !472}
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !474, line: 10, size: 128, elements: !475)
!474 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!475 = !{!476, !480}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !473, file: !474, line: 11, baseType: !477, size: 64)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64)
!478 = !DISubroutineType(types: !479)
!479 = !{null, !209}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !473, file: !474, line: 12, baseType: !209, size: 64, offset: 64)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !462, file: !86, line: 1867, baseType: !482, size: 64, offset: 128)
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!483 = !DISubroutineType(types: !484)
!484 = !{!195, !438, !195}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !462, file: !86, line: 1868, baseType: !486, size: 64, offset: 192)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64)
!487 = !DISubroutineType(types: !488)
!488 = !{!489, !438, !195}
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!490 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !86, line: 581, flags: DIFlagFwdDecl)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !462, file: !86, line: 1870, baseType: !492, size: 64, offset: 256)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = !DISubroutineType(types: !494)
!494 = !{!195, !391, !284, !195}
!495 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !462, file: !86, line: 1872, baseType: !496, size: 64, offset: 320)
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64)
!497 = !DISubroutineType(types: !498)
!498 = !{!195, !438, !391, !324, !499}
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !230, line: 30, baseType: !500)
!500 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !462, file: !86, line: 1873, baseType: !502, size: 64, offset: 384)
!502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64)
!503 = !DISubroutineType(types: !504)
!504 = !{!195, !391, !438, !391}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !462, file: !86, line: 1874, baseType: !506, size: 64, offset: 448)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64)
!507 = !DISubroutineType(types: !508)
!508 = !{!195, !438, !391}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !462, file: !86, line: 1875, baseType: !510, size: 64, offset: 512)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!511 = !DISubroutineType(types: !512)
!512 = !{!195, !438, !391, !225}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !462, file: !86, line: 1876, baseType: !514, size: 64, offset: 576)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!515 = !DISubroutineType(types: !516)
!516 = !{!195, !438, !391, !324}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !462, file: !86, line: 1877, baseType: !506, size: 64, offset: 640)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !462, file: !86, line: 1878, baseType: !519, size: 64, offset: 704)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!520 = !DISubroutineType(types: !521)
!521 = !{!195, !438, !391, !324, !522}
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !230, line: 16, baseType: !523)
!523 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !230, line: 13, baseType: !424)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !462, file: !86, line: 1879, baseType: !525, size: 64, offset: 768)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!526 = !DISubroutineType(types: !527)
!527 = !{!195, !438, !391, !438, !391, !7}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !462, file: !86, line: 1881, baseType: !529, size: 64, offset: 832)
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!530 = !DISubroutineType(types: !531)
!531 = !{!195, !391, !532}
!532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 64)
!533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !86, line: 219, size: 640, elements: !534)
!534 = !{!535, !536, !537, !538, !539, !543, !551, !552, !553}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !533, file: !86, line: 220, baseType: !7, size: 32)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !533, file: !86, line: 221, baseType: !324, size: 16, offset: 32)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !533, file: !86, line: 222, baseType: !444, size: 32, offset: 64)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !533, file: !86, line: 223, baseType: !452, size: 32, offset: 96)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !533, file: !86, line: 224, baseType: !540, size: 64, offset: 128)
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !230, line: 46, baseType: !541)
!541 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !317, line: 88, baseType: !542)
!542 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !533, file: !86, line: 225, baseType: !544, size: 128, offset: 192)
!544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !545, line: 13, size: 128, elements: !546)
!545 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!546 = !{!547, !550}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !544, file: !545, line: 14, baseType: !548, size: 64)
!548 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !545, line: 8, baseType: !549)
!549 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !427, line: 30, baseType: !542)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !544, file: !545, line: 15, baseType: !157, size: 64, offset: 64)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !533, file: !86, line: 226, baseType: !544, size: 128, offset: 320)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !533, file: !86, line: 227, baseType: !544, size: 128, offset: 448)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !533, file: !86, line: 234, baseType: !361, size: 64, offset: 576)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !462, file: !86, line: 1882, baseType: !555, size: 64, offset: 896)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!556 = !DISubroutineType(types: !557)
!557 = !{!195, !558, !560, !424, !7}
!558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 64)
!559 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !383)
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 64)
!561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !562, line: 22, size: 1152, elements: !563)
!562 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!563 = !{!564, !565, !566, !567, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !561, file: !562, line: 23, baseType: !424, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !561, file: !562, line: 24, baseType: !324, size: 16, offset: 32)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !561, file: !562, line: 25, baseType: !7, size: 32, offset: 64)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !561, file: !562, line: 26, baseType: !568, size: 32, offset: 96)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !230, line: 104, baseType: !424)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !561, file: !562, line: 27, baseType: !430, size: 64, offset: 128)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !561, file: !562, line: 28, baseType: !430, size: 64, offset: 192)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !561, file: !562, line: 37, baseType: !430, size: 64, offset: 256)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !561, file: !562, line: 38, baseType: !522, size: 32, offset: 320)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !561, file: !562, line: 39, baseType: !522, size: 32, offset: 352)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !561, file: !562, line: 40, baseType: !444, size: 32, offset: 384)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !561, file: !562, line: 41, baseType: !452, size: 32, offset: 416)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !561, file: !562, line: 42, baseType: !540, size: 64, offset: 448)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !561, file: !562, line: 43, baseType: !544, size: 128, offset: 512)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !561, file: !562, line: 44, baseType: !544, size: 128, offset: 640)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !561, file: !562, line: 45, baseType: !544, size: 128, offset: 768)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !561, file: !562, line: 46, baseType: !544, size: 128, offset: 896)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !561, file: !562, line: 47, baseType: !430, size: 64, offset: 1024)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !561, file: !562, line: 48, baseType: !430, size: 64, offset: 1088)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !462, file: !86, line: 1883, baseType: !584, size: 64, offset: 960)
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!585 = !DISubroutineType(types: !586)
!586 = !{!315, !391, !284, !330}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !462, file: !86, line: 1884, baseType: !588, size: 64, offset: 1024)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!589 = !DISubroutineType(types: !590)
!590 = !{!195, !438, !591, !430, !430}
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64)
!592 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !86, line: 50, flags: DIFlagFwdDecl)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !462, file: !86, line: 1886, baseType: !594, size: 64, offset: 1088)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DISubroutineType(types: !596)
!596 = !{!195, !438, !597, !195}
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !462, file: !86, line: 1887, baseType: !599, size: 64, offset: 1152)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = !DISubroutineType(types: !601)
!601 = !{!195, !438, !391, !361, !7, !324}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !462, file: !86, line: 1890, baseType: !514, size: 64, offset: 1216)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !462, file: !86, line: 1891, baseType: !604, size: 64, offset: 1280)
!604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 64)
!605 = !DISubroutineType(types: !606)
!606 = !{!195, !438, !489, !195}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !439, file: !86, line: 623, baseType: !608, size: 64, offset: 192)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !86, line: 1416, size: 9472, elements: !610)
!610 = !{!611, !612, !613, !614, !615, !616, !666, !3535, !3617, !3700, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3716, !3720, !3721, !3722, !3723, !3726, !3727, !3728, !3769, !3795, !3796, !3797, !3798, !3799, !3800, !3803, !3804, !3811, !3812, !3813, !3814, !3815, !3874, !3875, !3890, !3891, !3892, !3893, !3894, !3895, !3896, !3897, !3912, !3913, !3914, !3915, !3916, !3917, !3918, !3919, !3920}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !609, file: !86, line: 1417, baseType: !229, size: 128)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !609, file: !86, line: 1418, baseType: !522, size: 32, offset: 128)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !609, file: !86, line: 1419, baseType: !436, size: 8, offset: 160)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !609, file: !86, line: 1420, baseType: !333, size: 64, offset: 192)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !609, file: !86, line: 1421, baseType: !540, size: 64, offset: 256)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !609, file: !86, line: 1422, baseType: !617, size: 64, offset: 320)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !86, line: 2228, size: 576, elements: !619)
!619 = !{!620, !621, !622, !629, !633, !637, !641, !645, !646, !656, !659, !660, !661, !663, !664, !665}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !618, file: !86, line: 2229, baseType: !225, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !618, file: !86, line: 2230, baseType: !195, size: 32, offset: 64)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !618, file: !86, line: 2238, baseType: !623, size: 64, offset: 128)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!624 = !DISubroutineType(types: !625)
!625 = !{!195, !626}
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!627 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !628, line: 28, flags: DIFlagFwdDecl)
!628 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!629 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !618, file: !86, line: 2239, baseType: !630, size: 64, offset: 192)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !632)
!632 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !86, line: 70, flags: DIFlagFwdDecl)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !618, file: !86, line: 2240, baseType: !634, size: 64, offset: 256)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!635 = !DISubroutineType(types: !636)
!636 = !{!391, !617, !195, !225, !209}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !618, file: !86, line: 2242, baseType: !638, size: 64, offset: 320)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!639 = !DISubroutineType(types: !640)
!640 = !{null, !608}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !618, file: !86, line: 2243, baseType: !642, size: 64, offset: 384)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !644, line: 76, flags: DIFlagFwdDecl)
!644 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!645 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !618, file: !86, line: 2244, baseType: !617, size: 64, offset: 448)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !618, file: !86, line: 2245, baseType: !647, size: 64, offset: 512)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !230, line: 182, size: 64, elements: !648)
!648 = !{!649}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !647, file: !230, line: 183, baseType: !650, size: 64)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !230, line: 186, size: 128, elements: !652)
!652 = !{!653, !654}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !651, file: !230, line: 187, baseType: !650, size: 64)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !651, file: !230, line: 187, baseType: !655, size: 64, offset: 64)
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !618, file: !86, line: 2247, baseType: !657, offset: 576)
!657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !658, line: 187, elements: !257)
!658 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!659 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !618, file: !86, line: 2248, baseType: !657, offset: 576)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !618, file: !86, line: 2249, baseType: !657, offset: 576)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !618, file: !86, line: 2250, baseType: !662, offset: 576)
!662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !657, elements: !285)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !618, file: !86, line: 2252, baseType: !657, offset: 576)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !618, file: !86, line: 2253, baseType: !657, offset: 576)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !618, file: !86, line: 2254, baseType: !657, offset: 576)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !609, file: !86, line: 1423, baseType: !667, size: 64, offset: 384)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 64)
!668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !669)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !86, line: 1935, size: 1472, elements: !670)
!670 = !{!671, !675, !679, !680, !684, !704, !708, !709, !710, !714, !718, !719, !720, !721, !727, !732, !733, !789, !790, !791, !792, !3519, !3534}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !669, file: !86, line: 1936, baseType: !672, size: 64)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64)
!673 = !DISubroutineType(types: !674)
!674 = !{!438, !608}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !669, file: !86, line: 1937, baseType: !676, size: 64, offset: 64)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DISubroutineType(types: !678)
!678 = !{null, !438}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !669, file: !86, line: 1938, baseType: !676, size: 64, offset: 128)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !669, file: !86, line: 1940, baseType: !681, size: 64, offset: 192)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = !DISubroutineType(types: !683)
!683 = !{null, !438, !195}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !669, file: !86, line: 1941, baseType: !685, size: 64, offset: 256)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = !DISubroutineType(types: !687)
!687 = !{!195, !438, !688}
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !6, line: 51, size: 320, elements: !690)
!690 = !{!691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_write", scope: !689, file: !6, line: 52, baseType: !157, size: 64)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "pages_skipped", scope: !689, file: !6, line: 54, baseType: !157, size: 64, offset: 64)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !689, file: !6, line: 61, baseType: !540, size: 64, offset: 128)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !689, file: !6, line: 62, baseType: !540, size: 64, offset: 192)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !689, file: !6, line: 64, baseType: !5, size: 32, offset: 256)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "for_kupdate", scope: !689, file: !6, line: 66, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "for_background", scope: !689, file: !6, line: 67, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_writepages", scope: !689, file: !6, line: 68, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "for_reclaim", scope: !689, file: !6, line: 69, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "range_cyclic", scope: !689, file: !6, line: 70, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "for_sync", scope: !689, file: !6, line: 71, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "no_cgroup_owner", scope: !689, file: !6, line: 79, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "punt_to_cgroup", scope: !689, file: !6, line: 81, baseType: !7, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !669, file: !86, line: 1942, baseType: !705, size: 64, offset: 320)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!706 = !DISubroutineType(types: !707)
!707 = !{!195, !438}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !669, file: !86, line: 1943, baseType: !676, size: 64, offset: 384)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !669, file: !86, line: 1944, baseType: !638, size: 64, offset: 448)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !669, file: !86, line: 1945, baseType: !711, size: 64, offset: 512)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = !DISubroutineType(types: !713)
!713 = !{!195, !608, !195}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !669, file: !86, line: 1946, baseType: !715, size: 64, offset: 576)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!716 = !DISubroutineType(types: !717)
!717 = !{!195, !608}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !669, file: !86, line: 1947, baseType: !715, size: 64, offset: 640)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !669, file: !86, line: 1948, baseType: !715, size: 64, offset: 704)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !669, file: !86, line: 1949, baseType: !715, size: 64, offset: 768)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !669, file: !86, line: 1950, baseType: !722, size: 64, offset: 832)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = !DISubroutineType(types: !724)
!724 = !{!195, !391, !725}
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 64)
!726 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !86, line: 57, flags: DIFlagFwdDecl)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !669, file: !86, line: 1951, baseType: !728, size: 64, offset: 896)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!729 = !DISubroutineType(types: !730)
!730 = !{!195, !608, !731, !284}
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !669, file: !86, line: 1952, baseType: !638, size: 64, offset: 960)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !669, file: !86, line: 1954, baseType: !734, size: 64, offset: 1024)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = !DISubroutineType(types: !736)
!736 = !{!195, !737, !391}
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !739, line: 16, size: 896, elements: !740)
!739 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!740 = !{!741, !742, !743, !744, !745, !746, !747, !748, !762, !784, !785, !788}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !738, file: !739, line: 17, baseType: !284, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !738, file: !739, line: 18, baseType: !330, size: 64, offset: 64)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !738, file: !739, line: 19, baseType: !330, size: 64, offset: 128)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !738, file: !739, line: 20, baseType: !330, size: 64, offset: 192)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !738, file: !739, line: 21, baseType: !330, size: 64, offset: 256)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !738, file: !739, line: 22, baseType: !540, size: 64, offset: 320)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !738, file: !739, line: 23, baseType: !540, size: 64, offset: 384)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !738, file: !739, line: 24, baseType: !749, size: 192, offset: 448)
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !750, line: 53, size: 192, elements: !751)
!750 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!751 = !{!752, !760, !761}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !749, file: !750, line: 54, baseType: !753, size: 64)
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !754, line: 13, baseType: !755)
!754 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!755 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !230, line: 175, baseType: !756)
!756 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !230, line: 173, size: 64, elements: !757)
!757 = !{!758}
!758 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !756, file: !230, line: 174, baseType: !759, size: 64)
!759 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !425, line: 22, baseType: !549)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !749, file: !750, line: 55, baseType: !243, offset: 64)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !749, file: !750, line: 59, baseType: !229, size: 128, offset: 64)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !738, file: !739, line: 25, baseType: !763, size: 64, offset: 640)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !765)
!765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !739, line: 31, size: 256, elements: !766)
!766 = !{!767, !772, !776, !780}
!767 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !765, file: !739, line: 32, baseType: !768, size: 64)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DISubroutineType(types: !770)
!770 = !{!209, !737, !771}
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !765, file: !739, line: 33, baseType: !773, size: 64, offset: 64)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DISubroutineType(types: !775)
!775 = !{null, !737, !209}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !765, file: !739, line: 34, baseType: !777, size: 64, offset: 128)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DISubroutineType(types: !779)
!779 = !{!209, !737, !209, !771}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !765, file: !739, line: 35, baseType: !781, size: 64, offset: 192)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = !DISubroutineType(types: !783)
!783 = !{!195, !737, !209}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !738, file: !739, line: 26, baseType: !195, size: 32, offset: 704)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !738, file: !739, line: 27, baseType: !786, size: 64, offset: 768)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !362)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !738, file: !739, line: 28, baseType: !209, size: 64, offset: 832)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !669, file: !86, line: 1955, baseType: !734, size: 64, offset: 1088)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !669, file: !86, line: 1956, baseType: !734, size: 64, offset: 1152)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !669, file: !86, line: 1957, baseType: !734, size: 64, offset: 1216)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !669, file: !86, line: 1963, baseType: !793, size: 64, offset: 1280)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DISubroutineType(types: !795)
!795 = !{!195, !608, !796, !819}
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !798, line: 68, size: 512, align: 128, elements: !799)
!798 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!799 = !{!800, !801, !3511, !3518}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !797, file: !798, line: 69, baseType: !333, size: 64)
!801 = !DIDerivedType(tag: DW_TAG_member, scope: !797, file: !798, line: 77, baseType: !802, size: 320, offset: 64)
!802 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !797, file: !798, line: 77, size: 320, elements: !803)
!803 = !{!804, !1938, !1943, !1969, !1977, !1983, !3462, !3510}
!804 = !DIDerivedType(tag: DW_TAG_member, scope: !802, file: !798, line: 78, baseType: !805, size: 320)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !802, file: !798, line: 78, size: 320, elements: !806)
!806 = !{!807, !808, !1936, !1937}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !805, file: !798, line: 84, baseType: !229, size: 128)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !805, file: !798, line: 86, baseType: !809, size: 64, offset: 128)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !86, line: 451, size: 1216, align: 64, elements: !811)
!811 = !{!812, !813, !821, !822, !827, !842, !851, !852, !853, !854, !1929, !1930, !1933, !1934, !1935}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !810, file: !86, line: 452, baseType: !438, size: 64)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !810, file: !86, line: 453, baseType: !814, size: 128, offset: 64)
!814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !815, line: 292, size: 128, elements: !816)
!815 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!816 = !{!817, !818, !820}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !814, file: !815, line: 293, baseType: !243)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !814, file: !815, line: 295, baseType: !819, size: 32)
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !230, line: 148, baseType: !7)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !814, file: !815, line: 296, baseType: !209, size: 64, offset: 64)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !810, file: !86, line: 454, baseType: !819, size: 32, offset: 192)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !810, file: !86, line: 455, baseType: !823, size: 32, offset: 224)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !230, line: 168, baseType: !824)
!824 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !230, line: 166, size: 32, elements: !825)
!825 = !{!826}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !824, file: !230, line: 167, baseType: !195, size: 32)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !810, file: !86, line: 460, baseType: !828, size: 128, offset: 256)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !829, line: 125, size: 128, elements: !830)
!829 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!830 = !{!831, !841}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !828, file: !829, line: 126, baseType: !832, size: 64)
!832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !829, line: 31, size: 64, elements: !833)
!833 = !{!834}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !832, file: !829, line: 32, baseType: !835, size: 64)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !829, line: 24, size: 192, align: 64, elements: !837)
!837 = !{!838, !839, !840}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !836, file: !829, line: 25, baseType: !333, size: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !836, file: !829, line: 26, baseType: !835, size: 64, offset: 64)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !836, file: !829, line: 27, baseType: !835, size: 64, offset: 128)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !828, file: !829, line: 127, baseType: !835, size: 64, offset: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !810, file: !86, line: 461, baseType: !843, size: 256, offset: 384)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !844, line: 35, size: 256, elements: !845)
!844 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!845 = !{!846, !847, !848, !850}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !843, file: !844, line: 36, baseType: !753, size: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !843, file: !844, line: 42, baseType: !753, size: 64, offset: 64)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !843, file: !844, line: 46, baseType: !849, offset: 128)
!849 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !244, line: 29, baseType: !251)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !843, file: !844, line: 47, baseType: !229, size: 128, offset: 128)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !810, file: !86, line: 462, baseType: !333, size: 64, offset: 640)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !810, file: !86, line: 463, baseType: !333, size: 64, offset: 704)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !810, file: !86, line: 464, baseType: !333, size: 64, offset: 768)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !810, file: !86, line: 465, baseType: !855, size: 64, offset: 832)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !857)
!857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !86, line: 367, size: 1408, elements: !858)
!858 = !{!859, !863, !867, !871, !875, !879, !892, !898, !902, !907, !911, !915, !919, !964, !968, !974, !975, !976, !980, !985, !989, !1925}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !857, file: !86, line: 368, baseType: !860, size: 64)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = !DISubroutineType(types: !862)
!862 = !{!195, !796, !688}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !857, file: !86, line: 369, baseType: !864, size: 64, offset: 64)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = !DISubroutineType(types: !866)
!866 = !{!195, !361, !796}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !857, file: !86, line: 372, baseType: !868, size: 64, offset: 128)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = !DISubroutineType(types: !870)
!870 = !{!195, !809, !688}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !857, file: !86, line: 375, baseType: !872, size: 64, offset: 192)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DISubroutineType(types: !874)
!874 = !{!195, !796}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !857, file: !86, line: 381, baseType: !876, size: 64, offset: 256)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!877 = !DISubroutineType(types: !878)
!878 = !{!195, !361, !809, !233, !7}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !857, file: !86, line: 383, baseType: !880, size: 64, offset: 320)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DISubroutineType(types: !882)
!882 = !{null, !883}
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !885, line: 795, size: 256, elements: !886)
!885 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!886 = !{!887, !888, !889, !890, !891}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !884, file: !885, line: 796, baseType: !361, size: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !884, file: !885, line: 797, baseType: !809, size: 64, offset: 64)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !884, file: !885, line: 799, baseType: !333, size: 64, offset: 128)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !884, file: !885, line: 800, baseType: !7, size: 32, offset: 192)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !884, file: !885, line: 801, baseType: !7, size: 32, offset: 224)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !857, file: !86, line: 385, baseType: !893, size: 64, offset: 384)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = !DISubroutineType(types: !895)
!895 = !{!195, !361, !809, !540, !7, !7, !896, !897}
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !857, file: !86, line: 388, baseType: !899, size: 64, offset: 448)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!900 = !DISubroutineType(types: !901)
!901 = !{!195, !361, !809, !540, !7, !7, !796, !209}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !857, file: !86, line: 393, baseType: !903, size: 64, offset: 512)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = !DISubroutineType(types: !905)
!905 = !{!906, !809, !906}
!906 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !230, line: 125, baseType: !430)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !857, file: !86, line: 394, baseType: !908, size: 64, offset: 576)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DISubroutineType(types: !910)
!910 = !{null, !796, !7, !7}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !857, file: !86, line: 395, baseType: !912, size: 64, offset: 640)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64)
!913 = !DISubroutineType(types: !914)
!914 = !{!195, !796, !819}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !857, file: !86, line: 396, baseType: !916, size: 64, offset: 704)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DISubroutineType(types: !918)
!918 = !{null, !796}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !857, file: !86, line: 397, baseType: !920, size: 64, offset: 768)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DISubroutineType(types: !922)
!922 = !{!315, !923, !962}
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !86, line: 320, size: 384, elements: !925)
!925 = !{!926, !927, !928, !932, !933, !934, !937, !938}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !924, file: !86, line: 321, baseType: !361, size: 64)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !924, file: !86, line: 326, baseType: !540, size: 64, offset: 64)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !924, file: !86, line: 327, baseType: !929, size: 64, offset: 128)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DISubroutineType(types: !931)
!931 = !{null, !923, !157, !157}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !924, file: !86, line: 328, baseType: !209, size: 64, offset: 192)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !924, file: !86, line: 329, baseType: !195, size: 32, offset: 256)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !924, file: !86, line: 330, baseType: !935, size: 16, offset: 288)
!935 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !425, line: 19, baseType: !936)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !427, line: 24, baseType: !325)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !924, file: !86, line: 331, baseType: !935, size: 16, offset: 304)
!938 = !DIDerivedType(tag: DW_TAG_member, scope: !924, file: !86, line: 332, baseType: !939, size: 64, offset: 320)
!939 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !924, file: !86, line: 332, size: 64, elements: !940)
!940 = !{!941, !942}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !939, file: !86, line: 333, baseType: !7, size: 32)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !939, file: !86, line: 334, baseType: !943, size: 64)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !885, line: 569, size: 448, elements: !945)
!945 = !{!946, !947, !948}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !944, file: !885, line: 570, baseType: !796, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !944, file: !885, line: 571, baseType: !195, size: 32, offset: 64)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !944, file: !885, line: 572, baseType: !949, size: 320, offset: 128)
!949 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !950, line: 14, baseType: !951)
!950 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !950, line: 29, size: 320, elements: !952)
!952 = !{!953, !954, !955, !961}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !951, file: !950, line: 30, baseType: !7, size: 32)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !951, file: !950, line: 31, baseType: !209, size: 64, offset: 64)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !951, file: !950, line: 32, baseType: !956, size: 64, offset: 128)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !950, line: 16, baseType: !957)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!958 = !DISubroutineType(types: !959)
!959 = !{!195, !960, !7, !195, !209}
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !951, file: !950, line: 33, baseType: !229, size: 128, offset: 192)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !86, line: 64, flags: DIFlagFwdDecl)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !857, file: !86, line: 402, baseType: !965, size: 64, offset: 832)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = !DISubroutineType(types: !967)
!967 = !{!195, !809, !796, !796, !11}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !857, file: !86, line: 404, baseType: !969, size: 64, offset: 896)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = !DISubroutineType(types: !971)
!971 = !{!499, !796, !972}
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !973, line: 305, baseType: !7)
!973 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!974 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !857, file: !86, line: 405, baseType: !916, size: 64, offset: 960)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !857, file: !86, line: 406, baseType: !872, size: 64, offset: 1024)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !857, file: !86, line: 407, baseType: !977, size: 64, offset: 1088)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64)
!978 = !DISubroutineType(types: !979)
!979 = !{!195, !796, !333, !333}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !857, file: !86, line: 409, baseType: !981, size: 64, offset: 1152)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64)
!982 = !DISubroutineType(types: !983)
!983 = !{null, !796, !984, !984}
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 64)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !857, file: !86, line: 410, baseType: !986, size: 64, offset: 1216)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!987 = !DISubroutineType(types: !988)
!988 = !{!195, !809, !796}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !857, file: !86, line: 413, baseType: !990, size: 64, offset: 1280)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!991 = !DISubroutineType(types: !992)
!992 = !{!195, !993, !361, !1924}
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !995, line: 240, size: 1600, elements: !996)
!995 = !DIFile(filename: "./include/linux/swap.h", directory: "/home/lizy2001/genbc/linux")
!996 = !{!997, !998, !1000, !1007, !1009, !1010, !1012, !1019, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1032, !1038, !1039, !1916, !1917, !1918, !1919, !1920, !1921, !1922}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !994, file: !995, line: 241, baseType: !333, size: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !994, file: !995, line: 242, baseType: !999, size: 16, offset: 64)
!999 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !994, file: !995, line: 243, baseType: !1001, size: 320, offset: 128)
!1001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plist_node", file: !1002, line: 83, size: 320, elements: !1003)
!1002 = !DIFile(filename: "./include/linux/plist.h", directory: "/home/lizy2001/genbc/linux")
!1003 = !{!1004, !1005, !1006}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1001, file: !1002, line: 84, baseType: !195, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "prio_list", scope: !1001, file: !1002, line: 85, baseType: !229, size: 128, offset: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "node_list", scope: !1001, file: !1002, line: 86, baseType: !229, size: 128, offset: 192)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !994, file: !995, line: 244, baseType: !1008, size: 8, offset: 448)
!1008 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !994, file: !995, line: 245, baseType: !7, size: 32, offset: 480)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "swap_map", scope: !994, file: !995, line: 246, baseType: !1011, size: 64, offset: 512)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_info", scope: !994, file: !995, line: 247, baseType: !1013, size: 64, offset: 576)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_cluster_info", file: !995, line: 208, size: 32, elements: !1015)
!1015 = !{!1016, !1017, !1018}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1014, file: !995, line: 209, baseType: !243)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1014, file: !995, line: 215, baseType: !7, size: 24, flags: DIFlagBitField, extraData: i64 0)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1014, file: !995, line: 216, baseType: !7, size: 8, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "free_clusters", scope: !994, file: !995, line: 248, baseType: !1020, size: 64, offset: 640)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_cluster_list", file: !995, line: 232, size: 64, elements: !1021)
!1021 = !{!1022, !1023}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1020, file: !995, line: 233, baseType: !1014, size: 32)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1020, file: !995, line: 234, baseType: !1014, size: 32, offset: 32)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_bit", scope: !994, file: !995, line: 249, baseType: !7, size: 32, offset: 704)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "highest_bit", scope: !994, file: !995, line: 250, baseType: !7, size: 32, offset: 736)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !994, file: !995, line: 251, baseType: !7, size: 32, offset: 768)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "inuse_pages", scope: !994, file: !995, line: 252, baseType: !7, size: 32, offset: 800)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_next", scope: !994, file: !995, line: 253, baseType: !7, size: 32, offset: 832)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_nr", scope: !994, file: !995, line: 254, baseType: !7, size: 32, offset: 864)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_next_cpu", scope: !994, file: !995, line: 255, baseType: !1031, size: 64, offset: 896)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_cluster", scope: !994, file: !995, line: 256, baseType: !1033, size: 64, offset: 960)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_cluster", file: !995, line: 227, size: 64, elements: !1035)
!1035 = !{!1036, !1037}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1034, file: !995, line: 228, baseType: !1014, size: 32)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1034, file: !995, line: 229, baseType: !7, size: 32, offset: 32)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "swap_extent_root", scope: !994, file: !995, line: 257, baseType: !832, size: 64, offset: 1024)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "bdev", scope: !994, file: !995, line: 258, baseType: !1040, size: 64, offset: 1088)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !1042, line: 22, size: 1344, elements: !1043)
!1042 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!1043 = !{!1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1058, !1122, !1123, !1124, !1913, !1914, !1915}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !1041, file: !1042, line: 23, baseType: !522, size: 32)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !1041, file: !1042, line: 24, baseType: !195, size: 32, offset: 32)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !1041, file: !1042, line: 25, baseType: !438, size: 64, offset: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !1041, file: !1042, line: 26, baseType: !608, size: 64, offset: 128)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !1041, file: !1042, line: 27, baseType: !749, size: 192, offset: 192)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !1041, file: !1042, line: 28, baseType: !209, size: 64, offset: 384)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !1041, file: !1042, line: 29, baseType: !209, size: 64, offset: 448)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !1041, file: !1042, line: 30, baseType: !195, size: 32, offset: 512)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !1041, file: !1042, line: 31, baseType: !499, size: 8, offset: 544)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !1041, file: !1042, line: 33, baseType: !229, size: 128, offset: 576)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !1041, file: !1042, line: 35, baseType: !1040, size: 64, offset: 704)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !1041, file: !1042, line: 36, baseType: !1056, size: 8, offset: 768)
!1056 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !425, line: 17, baseType: !1057)
!1057 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !427, line: 21, baseType: !436)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !1041, file: !1042, line: 37, baseType: !1059, size: 64, offset: 832)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !1061, line: 53, size: 6592, elements: !1062)
!1061 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!1062 = !{!1063, !1064, !1065, !1066, !1069, !1090, !1091, !1092, !1093, !1094, !1104}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !1060, file: !1061, line: 54, baseType: !906, size: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !1060, file: !1061, line: 60, baseType: !906, size: 64, offset: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1060, file: !1061, line: 64, baseType: !333, size: 64, offset: 128)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !1060, file: !1061, line: 65, baseType: !1067, size: 64, offset: 192)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64)
!1068 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !1061, line: 65, flags: DIFlagFwdDecl)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1060, file: !1061, line: 66, baseType: !1070, size: 128, offset: 256)
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !1071, line: 105, size: 128, elements: !1072)
!1071 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!1072 = !{!1073, !1074}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !1070, file: !1071, line: 110, baseType: !333, size: 64)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1070, file: !1071, line: 118, baseType: !1075, size: 64, offset: 64)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !1071, line: 95, size: 448, elements: !1077)
!1077 = !{!1078, !1079, !1085, !1086, !1087, !1088, !1089}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1076, file: !1071, line: 96, baseType: !753, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1076, file: !1071, line: 97, baseType: !1080, size: 64, offset: 64)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !1071, line: 60, baseType: !1082)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{null, !1084}
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !1076, file: !1071, line: 98, baseType: !1080, size: 64, offset: 128)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !1076, file: !1071, line: 99, baseType: !499, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !1076, file: !1071, line: 100, baseType: !499, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1076, file: !1071, line: 101, baseType: !374, size: 128, align: 64, offset: 256)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1076, file: !1071, line: 102, baseType: !1084, size: 64, offset: 384)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !1060, file: !1061, line: 68, baseType: !218, size: 5568, offset: 384)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !1060, file: !1061, line: 69, baseType: !236, size: 64, offset: 5952)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1060, file: !1061, line: 70, baseType: !195, size: 32, offset: 6016)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !1060, file: !1061, line: 70, baseType: !195, size: 32, offset: 6048)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1060, file: !1061, line: 71, baseType: !1095, size: 64, offset: 6080)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !1061, line: 48, size: 808, elements: !1097)
!1097 = !{!1098, !1102}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !1096, file: !1061, line: 49, baseType: !1099, size: 296)
!1099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 296, elements: !1100)
!1100 = !{!1101}
!1101 = !DISubrange(count: 37)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !1096, file: !1061, line: 50, baseType: !1103, size: 512, offset: 296)
!1103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1056, size: 512, elements: !289)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !1060, file: !1061, line: 75, baseType: !1105, size: 448, offset: 6144)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !156, line: 124, size: 448, elements: !1106)
!1106 = !{!1107, !1118, !1119}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1105, file: !156, line: 125, baseType: !1108, size: 256)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !156, line: 102, size: 256, elements: !1109)
!1109 = !{!1110, !1111, !1112}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1108, file: !156, line: 103, baseType: !753, size: 64)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1108, file: !156, line: 104, baseType: !229, size: 128, offset: 64)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1108, file: !156, line: 105, baseType: !1113, size: 64, offset: 192)
!1113 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !156, line: 21, baseType: !1114)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{null, !1117}
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1105, file: !156, line: 126, baseType: !374, size: 128, align: 64, offset: 256)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !1105, file: !156, line: 129, baseType: !1120, size: 64, offset: 384)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64)
!1121 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !156, line: 18, flags: DIFlagFwdDecl)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !1041, file: !1042, line: 39, baseType: !7, size: 32, offset: 896)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !1041, file: !1042, line: 41, baseType: !243, offset: 928)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !1041, file: !1042, line: 42, baseType: !1125, size: 64, offset: 960)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !1061, line: 167, size: 8512, elements: !1127)
!1127 = !{!1128, !1129, !1130, !1131, !1135, !1136, !1137, !1148, !1149, !1339, !1894, !1895, !1896, !1897, !1898, !1899, !1902, !1903, !1906, !1907, !1908, !1911}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !1126, file: !1061, line: 171, baseType: !195, size: 32)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !1126, file: !1061, line: 172, baseType: !195, size: 32, offset: 32)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !1126, file: !1061, line: 173, baseType: !195, size: 32, offset: 64)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !1126, file: !1061, line: 176, baseType: !1132, size: 256, offset: 96)
!1132 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 256, elements: !1133)
!1133 = !{!1134}
!1134 = !DISubrange(count: 32)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1126, file: !1061, line: 178, baseType: !325, size: 16, offset: 352)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !1126, file: !1061, line: 179, baseType: !325, size: 16, offset: 368)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !1126, file: !1061, line: 186, baseType: !1138, size: 64, offset: 384)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !1061, line: 149, size: 256, elements: !1140)
!1140 = !{!1141, !1142, !1143, !1144}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1139, file: !1061, line: 150, baseType: !374, size: 128, align: 64)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1139, file: !1061, line: 151, baseType: !195, size: 32, offset: 128)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !1139, file: !1061, line: 152, baseType: !1059, size: 64, offset: 192)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !1139, file: !1061, line: 153, baseType: !1145, offset: 256)
!1145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1059, elements: !1146)
!1146 = !{!1147}
!1147 = !DISubrange(count: -1)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !1126, file: !1061, line: 187, baseType: !1060, size: 6592, offset: 448)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !1126, file: !1061, line: 189, baseType: !1150, size: 64, offset: 7040)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64)
!1151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1152)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !19, line: 1844, size: 960, elements: !1153)
!1153 = !{!1154, !1261, !1266, !1270, !1274, !1278, !1279, !1283, !1287, !1291, !1297, !1301, !1329, !1334, !1335}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !1152, file: !19, line: 1845, baseType: !1155, size: 64)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!1156 = !DISubroutineType(types: !1157)
!1157 = !{!1158, !1159}
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !1042, line: 515, baseType: !7)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !1042, line: 203, size: 832, elements: !1161)
!1161 = !{!1162, !1163, !1164, !1165, !1166, !1167, !1168, !1170, !1171, !1172, !1180, !1185, !1186, !1211, !1212, !1213, !1214, !1215, !1260}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !1160, file: !1042, line: 204, baseType: !1159, size: 64)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !1160, file: !1042, line: 205, baseType: !1125, size: 64, offset: 64)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !1160, file: !1042, line: 206, baseType: !7, size: 32, offset: 128)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !1160, file: !1042, line: 210, baseType: !325, size: 16, offset: 160)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !1160, file: !1042, line: 211, baseType: !325, size: 16, offset: 176)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !1160, file: !1042, line: 212, baseType: !325, size: 16, offset: 192)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !1160, file: !1042, line: 213, baseType: !1169, size: 8, offset: 208)
!1169 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !1042, line: 58, baseType: !1056)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !1160, file: !1042, line: 214, baseType: !1056, size: 8, offset: 216)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !1160, file: !1042, line: 215, baseType: !823, size: 32, offset: 224)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !1160, file: !1042, line: 217, baseType: !1173, size: 192, offset: 256)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !1174, line: 37, size: 192, elements: !1175)
!1174 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!1175 = !{!1176, !1177, !1178, !1179}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !1173, file: !1174, line: 38, baseType: !906, size: 64)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !1173, file: !1174, line: 40, baseType: !7, size: 32, offset: 64)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !1173, file: !1174, line: 42, baseType: !7, size: 32, offset: 96)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !1173, file: !1174, line: 44, baseType: !7, size: 32, offset: 128)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !1160, file: !1042, line: 219, baseType: !1181, size: 64, offset: 448)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 64)
!1182 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !1042, line: 19, baseType: !1183)
!1183 = !DISubroutineType(types: !1184)
!1184 = !{null, !1159}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !1160, file: !1042, line: 221, baseType: !209, size: 64, offset: 512)
!1186 = !DIDerivedType(tag: DW_TAG_member, scope: !1160, file: !1042, line: 240, baseType: !1187, size: 64, offset: 576)
!1187 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1160, file: !1042, line: 240, size: 64, elements: !1188)
!1188 = !{!1189}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !1187, file: !1042, line: 242, baseType: !1190, size: 64)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !1192, line: 313, size: 832, elements: !1193)
!1192 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!1193 = !{!1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1209}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !1191, file: !1192, line: 314, baseType: !1159, size: 64)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !1191, file: !1192, line: 316, baseType: !1173, size: 192, offset: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !1191, file: !1192, line: 318, baseType: !325, size: 16, offset: 256)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !1191, file: !1192, line: 319, baseType: !325, size: 16, offset: 272)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !1191, file: !1192, line: 320, baseType: !325, size: 16, offset: 288)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !1191, file: !1192, line: 321, baseType: !325, size: 16, offset: 304)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !1191, file: !1192, line: 323, baseType: !1173, size: 192, offset: 320)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !1191, file: !1192, line: 325, baseType: !1108, size: 256, offset: 512)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !1191, file: !1192, line: 327, baseType: !1203, size: 64, offset: 768)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !1174, line: 31, size: 128, elements: !1205)
!1205 = !{!1206, !1207, !1208}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !1204, file: !1174, line: 32, baseType: !796, size: 64)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !1204, file: !1174, line: 33, baseType: !7, size: 32, offset: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !1204, file: !1174, line: 34, baseType: !7, size: 32, offset: 96)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !1191, file: !1192, line: 328, baseType: !1210, offset: 832)
!1210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1204, elements: !1146)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !1160, file: !1042, line: 246, baseType: !325, size: 16, offset: 640)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !1160, file: !1042, line: 252, baseType: !325, size: 16, offset: 656)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !1160, file: !1042, line: 254, baseType: !823, size: 32, offset: 672)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !1160, file: !1042, line: 256, baseType: !1203, size: 64, offset: 704)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !1160, file: !1042, line: 258, baseType: !1216, size: 64, offset: 768)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 64)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !1192, line: 682, size: 2368, elements: !1218)
!1218 = !{!1219, !1222, !1223, !1249, !1250, !1251, !1252, !1253, !1258, !1259}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !1217, file: !1192, line: 683, baseType: !1220, size: 64)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64)
!1221 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !798, line: 117, flags: DIFlagFwdDecl)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !1217, file: !1192, line: 684, baseType: !7, size: 32, offset: 64)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !1217, file: !1192, line: 686, baseType: !1224, size: 448, offset: 128)
!1224 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !1225, line: 26, baseType: !1226)
!1225 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !1225, line: 16, size: 448, elements: !1227)
!1227 = !{!1228, !1229, !1230, !1231, !1232, !1233, !1238, !1243}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1226, file: !1225, line: 17, baseType: !243)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !1226, file: !1225, line: 18, baseType: !195, size: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !1226, file: !1225, line: 19, baseType: !195, size: 32, offset: 32)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1226, file: !1225, line: 20, baseType: !897, size: 64, offset: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !1226, file: !1225, line: 22, baseType: !209, size: 64, offset: 128)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1226, file: !1225, line: 23, baseType: !1234, size: 64, offset: 192)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !1225, line: 13, baseType: !1236)
!1236 = !DISubroutineType(types: !1237)
!1237 = !{!209, !819, !209}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1226, file: !1225, line: 24, baseType: !1239, size: 64, offset: 256)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 64)
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !1225, line: 14, baseType: !1241)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{null, !209, !209}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1226, file: !1225, line: 25, baseType: !1244, size: 128, offset: 320)
!1244 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !950, line: 40, baseType: !1245)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !950, line: 36, size: 128, elements: !1246)
!1246 = !{!1247, !1248}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1245, file: !950, line: 37, baseType: !243)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1245, file: !950, line: 38, baseType: !229, size: 128)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !1217, file: !1192, line: 687, baseType: !1224, size: 448, offset: 576)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !1217, file: !1192, line: 689, baseType: !1224, size: 448, offset: 1024)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !1217, file: !1192, line: 690, baseType: !1224, size: 448, offset: 1472)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !1217, file: !1192, line: 697, baseType: !243, offset: 1920)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !1217, file: !1192, line: 698, baseType: !1254, size: 128, offset: 1920)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1192, line: 554, size: 128, elements: !1255)
!1255 = !{!1256, !1257}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1254, file: !1192, line: 555, baseType: !1159, size: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1254, file: !1192, line: 556, baseType: !1159, size: 64, offset: 64)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !1217, file: !1192, line: 699, baseType: !1108, size: 256, offset: 2048)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !1217, file: !1192, line: 700, baseType: !1120, size: 64, offset: 2304)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !1160, file: !1042, line: 265, baseType: !1210, offset: 832)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1152, file: !19, line: 1846, baseType: !1262, size: 64, offset: 64)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{!195, !1040, !1265}
!1265 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !230, line: 150, baseType: !7)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1152, file: !19, line: 1847, baseType: !1267, size: 64, offset: 128)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{null, !1125, !1265}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !1152, file: !19, line: 1848, baseType: !1271, size: 64, offset: 192)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 64)
!1272 = !DISubroutineType(types: !1273)
!1273 = !{!195, !1040, !906, !796, !7}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !1152, file: !19, line: 1849, baseType: !1275, size: 64, offset: 256)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64)
!1276 = !DISubroutineType(types: !1277)
!1277 = !{!195, !1040, !1265, !7, !333}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !1152, file: !19, line: 1850, baseType: !1275, size: 64, offset: 320)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !1152, file: !19, line: 1851, baseType: !1280, size: 64, offset: 384)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{!7, !1125, !7}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !1152, file: !19, line: 1853, baseType: !1284, size: 64, offset: 448)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!1285 = !DISubroutineType(types: !1286)
!1286 = !{null, !1125}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !1152, file: !19, line: 1854, baseType: !1288, size: 64, offset: 512)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!195, !1125}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !1152, file: !19, line: 1855, baseType: !1292, size: 64, offset: 576)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = !DISubroutineType(types: !1294)
!1294 = !{!195, !1040, !1295}
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 64)
!1296 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !86, line: 51, flags: DIFlagFwdDecl)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !1152, file: !19, line: 1857, baseType: !1298, size: 64, offset: 640)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{null, !1040, !333}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !1152, file: !19, line: 1858, baseType: !1302, size: 64, offset: 704)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!1303 = !DISubroutineType(types: !1304)
!1304 = !{!195, !1125, !906, !7, !1305, !209}
!1305 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !19, line: 354, baseType: !1306)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64)
!1307 = !DISubroutineType(types: !1308)
!1308 = !{!195, !1309, !7, !209}
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !1311, line: 106, size: 512, elements: !1312)
!1311 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!1312 = !{!1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1324, !1325}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1310, file: !1311, line: 107, baseType: !431, size: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1310, file: !1311, line: 108, baseType: !431, size: 64, offset: 64)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !1310, file: !1311, line: 109, baseType: !431, size: 64, offset: 128)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1310, file: !1311, line: 110, baseType: !1057, size: 8, offset: 192)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1310, file: !1311, line: 111, baseType: !1057, size: 8, offset: 200)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !1310, file: !1311, line: 112, baseType: !1057, size: 8, offset: 208)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !1310, file: !1311, line: 113, baseType: !1057, size: 8, offset: 216)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !1310, file: !1311, line: 114, baseType: !1321, size: 32, offset: 224)
!1321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1057, size: 32, elements: !1322)
!1322 = !{!1323}
!1323 = !DISubrange(count: 4)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1310, file: !1311, line: 115, baseType: !431, size: 64, offset: 256)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !1310, file: !1311, line: 116, baseType: !1326, size: 192, offset: 320)
!1326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1057, size: 192, elements: !1327)
!1327 = !{!1328}
!1328 = !DISubrange(count: 24)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !1152, file: !19, line: 1860, baseType: !1330, size: 64, offset: 768)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64)
!1331 = !DISubroutineType(types: !1332)
!1332 = !{!284, !1125, !1333}
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1152, file: !19, line: 1861, baseType: !642, size: 64, offset: 832)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !1152, file: !19, line: 1862, baseType: !1336, size: 64, offset: 896)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!1337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1338)
!1338 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !19, line: 41, flags: DIFlagFwdDecl)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1126, file: !1061, line: 190, baseType: !1340, size: 64, offset: 7104)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !19, line: 399, size: 14464, elements: !1342)
!1342 = !{!1343, !1479, !1601, !1602, !1605, !1608, !1612, !1613, !1614, !1616, !1617, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1755, !1766, !1767, !1768, !1769, !1770, !1800, !1801, !1802, !1803, !1804, !1805, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1879, !1880, !1881, !1882, !1885, !1886, !1887, !1888, !1889, !1890}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !1341, file: !19, line: 400, baseType: !1344, size: 64)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !19, line: 130, size: 2176, elements: !1346)
!1346 = !{!1347, !1348, !1351, !1354, !1355, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1369, !1376, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1442, !1443, !1444, !1477, !1478}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1345, file: !19, line: 131, baseType: !1340, size: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !1345, file: !19, line: 132, baseType: !1349, size: 64, offset: 64)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64)
!1350 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !19, line: 132, flags: DIFlagFwdDecl)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !1345, file: !19, line: 133, baseType: !1352, size: 64, offset: 128)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1353 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !19, line: 133, flags: DIFlagFwdDecl)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !1345, file: !19, line: 135, baseType: !7, size: 32, offset: 192)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !1345, file: !19, line: 136, baseType: !1356, size: 32, offset: 224)
!1356 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !19, line: 66, baseType: !426)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !1345, file: !19, line: 138, baseType: !195, size: 32, offset: 256)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !1345, file: !19, line: 139, baseType: !195, size: 32, offset: 288)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !1345, file: !19, line: 142, baseType: !7, size: 32, offset: 320)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !1345, file: !19, line: 143, baseType: !906, size: 64, offset: 384)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !1345, file: !19, line: 145, baseType: !1159, size: 64, offset: 448)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !1345, file: !19, line: 146, baseType: !1159, size: 64, offset: 512)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !1345, file: !19, line: 148, baseType: !229, size: 128, offset: 576)
!1364 = !DIDerivedType(tag: DW_TAG_member, scope: !1345, file: !19, line: 157, baseType: !1365, size: 128, offset: 704)
!1365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1345, file: !19, line: 157, size: 128, elements: !1366)
!1366 = !{!1367, !1368}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1365, file: !19, line: 158, baseType: !651, size: 128)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !1365, file: !19, line: 159, baseType: !229, size: 128)
!1369 = !DIDerivedType(tag: DW_TAG_member, scope: !1345, file: !19, line: 167, baseType: !1370, size: 192, offset: 832)
!1370 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1345, file: !19, line: 167, size: 192, elements: !1371)
!1371 = !{!1372, !1373, !1374, !1375}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1370, file: !19, line: 168, baseType: !836, size: 192, align: 64)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !1370, file: !19, line: 169, baseType: !1204, size: 128)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !1370, file: !19, line: 170, baseType: !209, size: 64)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !1370, file: !19, line: 171, baseType: !195, size: 32)
!1376 = !DIDerivedType(tag: DW_TAG_member, scope: !1345, file: !19, line: 180, baseType: !1377, size: 256, offset: 1024)
!1377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1345, file: !19, line: 180, size: 256, elements: !1378)
!1378 = !{!1379, !1416}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !1377, file: !19, line: 184, baseType: !1380, size: 192)
!1380 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1377, file: !19, line: 181, size: 192, elements: !1381)
!1381 = !{!1382, !1412}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !1380, file: !19, line: 182, baseType: !1383, size: 64)
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 64)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1385, line: 73, size: 448, elements: !1386)
!1385 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1386 = !{!1387, !1388, !1401, !1406, !1411}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1384, file: !1385, line: 74, baseType: !1340, size: 64)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !1384, file: !1385, line: 75, baseType: !1389, size: 64, offset: 64)
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1385, line: 99, size: 704, elements: !1391)
!1391 = !{!1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1390, file: !1385, line: 100, baseType: !753, size: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1390, file: !1385, line: 101, baseType: !823, size: 32, offset: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1390, file: !1385, line: 102, baseType: !823, size: 32, offset: 96)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1390, file: !1385, line: 105, baseType: !243, offset: 128)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1390, file: !1385, line: 107, baseType: !325, size: 16, offset: 128)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1390, file: !1385, line: 109, baseType: !814, size: 128, offset: 192)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1390, file: !1385, line: 110, baseType: !1383, size: 64, offset: 320)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1390, file: !1385, line: 111, baseType: !647, size: 64, offset: 384)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1390, file: !1385, line: 113, baseType: !1108, size: 256, offset: 448)
!1401 = !DIDerivedType(tag: DW_TAG_member, scope: !1384, file: !1385, line: 83, baseType: !1402, size: 128, offset: 128)
!1402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1384, file: !1385, line: 83, size: 128, elements: !1403)
!1403 = !{!1404, !1405}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !1402, file: !1385, line: 84, baseType: !229, size: 128)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !1402, file: !1385, line: 85, baseType: !1220, size: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, scope: !1384, file: !1385, line: 87, baseType: !1407, size: 128, offset: 256)
!1407 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1384, file: !1385, line: 87, size: 128, elements: !1408)
!1408 = !{!1409, !1410}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !1407, file: !1385, line: 88, baseType: !651, size: 128)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !1407, file: !1385, line: 89, baseType: !374, size: 128, align: 64)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1384, file: !1385, line: 92, baseType: !7, size: 32, offset: 384)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1380, file: !19, line: 183, baseType: !1413, size: 128, offset: 64)
!1413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 128, elements: !1414)
!1414 = !{!1415}
!1415 = !DISubrange(count: 2)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1377, file: !19, line: 190, baseType: !1417, size: 256)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1377, file: !19, line: 186, size: 256, elements: !1418)
!1418 = !{!1419, !1420, !1421}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1417, file: !19, line: 187, baseType: !7, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1417, file: !19, line: 188, baseType: !229, size: 128, offset: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !1417, file: !19, line: 189, baseType: !1422, size: 64, offset: 192)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1423 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !19, line: 62, baseType: !1424)
!1424 = !DISubroutineType(types: !1425)
!1425 = !{null, !1344, !1169}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !1345, file: !19, line: 193, baseType: !1125, size: 64, offset: 1280)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !1345, file: !19, line: 194, baseType: !1059, size: 64, offset: 1344)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !1345, file: !19, line: 200, baseType: !430, size: 64, offset: 1408)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !1345, file: !19, line: 202, baseType: !430, size: 64, offset: 1472)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !1345, file: !19, line: 212, baseType: !325, size: 16, offset: 1536)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !1345, file: !19, line: 218, baseType: !325, size: 16, offset: 1552)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !1345, file: !19, line: 221, baseType: !325, size: 16, offset: 1568)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !1345, file: !19, line: 229, baseType: !325, size: 16, offset: 1584)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1345, file: !19, line: 230, baseType: !325, size: 16, offset: 1600)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1345, file: !19, line: 232, baseType: !18, size: 32, offset: 1632)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1345, file: !19, line: 233, baseType: !1437, size: 32, offset: 1664)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1438, line: 113, baseType: !1439)
!1438 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1438, line: 111, size: 32, elements: !1440)
!1440 = !{!1441}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1439, file: !1438, line: 112, baseType: !823, size: 32)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1345, file: !19, line: 235, baseType: !7, size: 32, offset: 1696)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1345, file: !19, line: 236, baseType: !333, size: 64, offset: 1728)
!1444 = !DIDerivedType(tag: DW_TAG_member, scope: !1345, file: !19, line: 238, baseType: !1445, size: 256, offset: 1792)
!1445 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1345, file: !19, line: 238, size: 256, elements: !1446)
!1446 = !{!1447, !1476}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !1445, file: !19, line: 239, baseType: !1448, size: 256)
!1448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !1449, line: 23, size: 256, elements: !1450)
!1449 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!1450 = !{!1451, !1473, !1475}
!1451 = !DIDerivedType(tag: DW_TAG_member, scope: !1448, file: !1449, line: 24, baseType: !1452, size: 128)
!1452 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1448, file: !1449, line: 24, size: 128, elements: !1453)
!1453 = !{!1454, !1466}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1452, file: !1449, line: 25, baseType: !1455, size: 128)
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !1456, line: 58, size: 128, elements: !1457)
!1456 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!1457 = !{!1458, !1459, !1464, !1465}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !1455, file: !1456, line: 59, baseType: !368, size: 64)
!1459 = !DIDerivedType(tag: DW_TAG_member, scope: !1455, file: !1456, line: 60, baseType: !1460, size: 32, offset: 64)
!1460 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1455, file: !1456, line: 60, size: 32, elements: !1461)
!1461 = !{!1462, !1463}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !1460, file: !1456, line: 61, baseType: !7, size: 32)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !1460, file: !1456, line: 62, baseType: !823, size: 32)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1455, file: !1456, line: 65, baseType: !935, size: 16, offset: 96)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !1455, file: !1456, line: 65, baseType: !935, size: 16, offset: 112)
!1466 = !DIDerivedType(tag: DW_TAG_member, scope: !1452, file: !1449, line: 26, baseType: !1467, size: 128)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1452, file: !1449, line: 26, size: 128, elements: !1468)
!1468 = !{!1469, !1470, !1471, !1472}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !1467, file: !1449, line: 27, baseType: !368, size: 64)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1467, file: !1449, line: 28, baseType: !7, size: 32, offset: 64)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1467, file: !1449, line: 30, baseType: !935, size: 16, offset: 96)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !1467, file: !1449, line: 30, baseType: !935, size: 16, offset: 112)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1448, file: !1449, line: 34, baseType: !1474, size: 64, offset: 128)
!1474 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !1449, line: 17, baseType: !477)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1448, file: !1449, line: 35, baseType: !209, size: 64, offset: 192)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !1445, file: !19, line: 240, baseType: !430, size: 64)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !1345, file: !19, line: 246, baseType: !1422, size: 64, offset: 2048)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !1345, file: !19, line: 247, baseType: !209, size: 64, offset: 2112)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !1341, file: !19, line: 401, baseType: !1480, size: 64, offset: 64)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !25, line: 101, size: 4992, elements: !1482)
!1482 = !{!1483, !1595, !1596, !1597, !1598, !1599}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1481, file: !25, line: 103, baseType: !1484, size: 64)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64)
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !25, line: 66, size: 2240, elements: !1486)
!1486 = !{!1487, !1488, !1570, !1571, !1572, !1585, !1586, !1587, !1589, !1590, !1594}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !1485, file: !25, line: 69, baseType: !1220, size: 64)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1485, file: !25, line: 72, baseType: !1489, size: 1408, offset: 64)
!1489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !25, line: 29, size: 1408, elements: !1490)
!1490 = !{!1491, !1495, !1499, !1503, !1507, !1511, !1515, !1519, !1524, !1528, !1532, !1538, !1542, !1543, !1547, !1551, !1555, !1559, !1560, !1564, !1565, !1569}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !1489, file: !25, line: 30, baseType: !1492, size: 64)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!1493 = !DISubroutineType(types: !1494)
!1494 = !{!195, !1340, !1484}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !1489, file: !25, line: 31, baseType: !1496, size: 64, offset: 64)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64)
!1497 = !DISubroutineType(types: !1498)
!1498 = !{null, !1480}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !1489, file: !25, line: 32, baseType: !1500, size: 64, offset: 128)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 64)
!1501 = !DISubroutineType(types: !1502)
!1502 = !{!195, !1352, !7}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !1489, file: !25, line: 33, baseType: !1504, size: 64, offset: 192)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 64)
!1505 = !DISubroutineType(types: !1506)
!1506 = !{null, !1352, !7}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !1489, file: !25, line: 34, baseType: !1508, size: 64, offset: 256)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 64)
!1509 = !DISubroutineType(types: !1510)
!1510 = !{null, !1352}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !1489, file: !25, line: 36, baseType: !1512, size: 64, offset: 320)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 64)
!1513 = !DISubroutineType(types: !1514)
!1514 = !{!499, !1340, !1344, !1159}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !1489, file: !25, line: 37, baseType: !1516, size: 64, offset: 384)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 64)
!1517 = !DISubroutineType(types: !1518)
!1518 = !{!499, !1352, !1159, !7}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !1489, file: !25, line: 38, baseType: !1520, size: 64, offset: 448)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64)
!1521 = !DISubroutineType(types: !1522)
!1522 = !{!195, !1340, !1523, !1159}
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !1489, file: !25, line: 39, baseType: !1525, size: 64, offset: 512)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{null, !1340, !1344, !24}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !1489, file: !25, line: 40, baseType: !1529, size: 64, offset: 576)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64)
!1530 = !DISubroutineType(types: !1531)
!1531 = !{null, !1340, !1344, !1344}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !1489, file: !25, line: 41, baseType: !1533, size: 64, offset: 640)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64)
!1534 = !DISubroutineType(types: !1535)
!1535 = !{null, !7, !1536}
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !25, line: 26, flags: DIFlagFwdDecl)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !1489, file: !25, line: 42, baseType: !1539, size: 64, offset: 704)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1540 = !DISubroutineType(types: !1541)
!1541 = !{null, !1344}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !1489, file: !25, line: 43, baseType: !1539, size: 64, offset: 768)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !1489, file: !25, line: 44, baseType: !1544, size: 64, offset: 832)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{null, !1352, !233, !499}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !1489, file: !25, line: 45, baseType: !1548, size: 64, offset: 896)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64)
!1549 = !DISubroutineType(types: !1550)
!1550 = !{!1344, !1352}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !1489, file: !25, line: 46, baseType: !1552, size: 64, offset: 960)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = !DISubroutineType(types: !1554)
!1554 = !{!499, !1352}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !1489, file: !25, line: 47, baseType: !1556, size: 64, offset: 1024)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 64)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{null, !1344, !430}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !1489, file: !25, line: 48, baseType: !1539, size: 64, offset: 1088)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !1489, file: !25, line: 49, baseType: !1561, size: 64, offset: 1152)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 64)
!1562 = !DISubroutineType(types: !1563)
!1563 = !{!1344, !1340, !1344}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !1489, file: !25, line: 50, baseType: !1561, size: 64, offset: 1216)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !1489, file: !25, line: 51, baseType: !1566, size: 64, offset: 1280)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 64)
!1567 = !DISubroutineType(types: !1568)
!1568 = !{null, !1383}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !1489, file: !25, line: 52, baseType: !1566, size: 64, offset: 1344)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !1485, file: !25, line: 74, baseType: !330, size: 64, offset: 1472)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !1485, file: !25, line: 75, baseType: !330, size: 64, offset: 1536)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !1485, file: !25, line: 76, baseType: !1573, size: 64, offset: 1600)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 64)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !25, line: 57, size: 256, elements: !1575)
!1575 = !{!1576, !1577, !1581}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1574, file: !25, line: 58, baseType: !320, size: 128)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1574, file: !25, line: 59, baseType: !1578, size: 64, offset: 128)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64)
!1579 = !DISubroutineType(types: !1580)
!1580 = !{!315, !1480, !284}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !1574, file: !25, line: 60, baseType: !1582, size: 64, offset: 192)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 64)
!1583 = !DISubroutineType(types: !1584)
!1584 = !{!315, !1480, !225, !330}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !1485, file: !25, line: 77, baseType: !225, size: 64, offset: 1664)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !1485, file: !25, line: 78, baseType: !225, size: 64, offset: 1728)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !1485, file: !25, line: 79, baseType: !1588, size: 32, offset: 1792)
!1588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !1485, file: !25, line: 80, baseType: !642, size: 64, offset: 1856)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !1485, file: !25, line: 87, baseType: !1591, size: 176, offset: 1920)
!1591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 176, elements: !1592)
!1592 = !{!1593}
!1593 = !DISubrange(count: 22)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1485, file: !25, line: 88, baseType: !229, size: 128, offset: 2112)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !1481, file: !25, line: 104, baseType: !209, size: 64, offset: 64)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1481, file: !25, line: 105, baseType: !221, size: 512, offset: 128)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !1481, file: !25, line: 106, baseType: !749, size: 192, offset: 640)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !1481, file: !25, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1481, file: !25, line: 108, baseType: !1600, size: 4096, offset: 896)
!1600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !647, size: 4096, elements: !289)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !1341, file: !19, line: 403, baseType: !1070, size: 128, offset: 128)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1341, file: !19, line: 405, baseType: !1603, size: 64, offset: 256)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !19, line: 43, flags: DIFlagFwdDecl)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !1341, file: !19, line: 406, baseType: !1606, size: 64, offset: 320)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 64)
!1607 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !19, line: 42, flags: DIFlagFwdDecl)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !1341, file: !19, line: 408, baseType: !1609, size: 64, offset: 384)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 64)
!1610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1611)
!1611 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !19, line: 408, flags: DIFlagFwdDecl)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !1341, file: !19, line: 411, baseType: !1349, size: 64, offset: 448)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !1341, file: !19, line: 413, baseType: !7, size: 32, offset: 512)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !1341, file: !19, line: 416, baseType: !1615, size: 64, offset: 576)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !1341, file: !19, line: 417, baseType: !7, size: 32, offset: 640)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1341, file: !19, line: 419, baseType: !1618, size: 64, offset: 704)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !32, line: 165, size: 4672, elements: !1620)
!1620 = !{!1621, !1622, !1623, !1624, !1625, !1626, !1631, !1632, !1633, !1634, !1635, !1636, !1692, !1693, !1694, !1696, !1698, !1699}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1619, file: !32, line: 166, baseType: !430, size: 64)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1619, file: !32, line: 167, baseType: !836, size: 192, align: 64, offset: 64)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !1619, file: !32, line: 168, baseType: !229, size: 128, offset: 256)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !1619, file: !32, line: 169, baseType: !333, size: 64, offset: 384)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !1619, file: !32, line: 170, baseType: !333, size: 64, offset: 448)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !1619, file: !32, line: 172, baseType: !1627, size: 32, offset: 512)
!1627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !1628, line: 19, size: 32, elements: !1629)
!1628 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!1629 = !{!1630}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1627, file: !1628, line: 20, baseType: !1437, size: 32)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1619, file: !32, line: 173, baseType: !7, size: 32, offset: 544)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !1619, file: !32, line: 174, baseType: !7, size: 32, offset: 576)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !1619, file: !32, line: 175, baseType: !7, size: 32, offset: 608)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !1619, file: !32, line: 175, baseType: !7, size: 32, offset: 640)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !1619, file: !32, line: 181, baseType: !753, size: 64, offset: 704)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !1619, file: !32, line: 183, baseType: !1637, size: 2688, offset: 768)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !32, line: 107, size: 2688, elements: !1638)
!1638 = !{!1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1668, !1669, !1670, !1671, !1672, !1690, !1691}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !1637, file: !32, line: 108, baseType: !1618, size: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1637, file: !32, line: 110, baseType: !333, size: 64, offset: 64)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !1637, file: !32, line: 111, baseType: !333, size: 64, offset: 128)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !1637, file: !32, line: 113, baseType: !229, size: 128, offset: 192)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !1637, file: !32, line: 114, baseType: !229, size: 128, offset: 320)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !1637, file: !32, line: 115, baseType: !229, size: 128, offset: 448)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !1637, file: !32, line: 116, baseType: !229, size: 128, offset: 576)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !1637, file: !32, line: 117, baseType: !243, offset: 704)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !1637, file: !32, line: 119, baseType: !1648, size: 256, offset: 704)
!1648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1649, size: 256, elements: !1322)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !1650, line: 97, size: 64, elements: !1651)
!1650 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!1651 = !{!1652}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1649, file: !1650, line: 98, baseType: !759, size: 64)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !1637, file: !32, line: 121, baseType: !333, size: 64, offset: 960)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !1637, file: !32, line: 123, baseType: !333, size: 64, offset: 1024)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !1637, file: !32, line: 124, baseType: !333, size: 64, offset: 1088)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !1637, file: !32, line: 125, baseType: !333, size: 64, offset: 1152)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !1637, file: !32, line: 126, baseType: !333, size: 64, offset: 1216)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !1637, file: !32, line: 127, baseType: !333, size: 64, offset: 1280)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !1637, file: !32, line: 135, baseType: !333, size: 64, offset: 1344)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !1637, file: !32, line: 136, baseType: !333, size: 64, offset: 1408)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !1637, file: !32, line: 138, baseType: !1662, size: 128, offset: 1472)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !1663, line: 76, size: 128, elements: !1664)
!1663 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!1664 = !{!1665, !1666, !1667}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1662, file: !1663, line: 78, baseType: !1649, size: 64)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !1662, file: !1663, line: 80, baseType: !7, size: 32, offset: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1662, file: !1663, line: 81, baseType: !849, offset: 96)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !1637, file: !32, line: 139, baseType: !195, size: 32, offset: 1600)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !1637, file: !32, line: 140, baseType: !31, size: 32, offset: 1632)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !1637, file: !32, line: 142, baseType: !243, offset: 1664)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !1637, file: !32, line: 143, baseType: !229, size: 128, offset: 1664)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !1637, file: !32, line: 144, baseType: !1673, size: 704, offset: 1792)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !156, line: 115, size: 704, elements: !1674)
!1674 = !{!1675, !1676, !1688, !1689}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1673, file: !156, line: 116, baseType: !1108, size: 256)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !1673, file: !156, line: 117, baseType: !1677, size: 320, offset: 256)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !1678, line: 11, size: 320, elements: !1679)
!1678 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!1679 = !{!1680, !1681, !1682, !1687}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1677, file: !1678, line: 16, baseType: !651, size: 128)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1677, file: !1678, line: 17, baseType: !333, size: 64, offset: 128)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1677, file: !1678, line: 18, baseType: !1683, size: 64, offset: 192)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64)
!1684 = !DISubroutineType(types: !1685)
!1685 = !{null, !1686}
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 64)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1677, file: !1678, line: 19, baseType: !424, size: 32, offset: 256)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !1673, file: !156, line: 120, baseType: !1120, size: 64, offset: 576)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1673, file: !156, line: 121, baseType: !195, size: 32, offset: 640)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !1637, file: !32, line: 146, baseType: !333, size: 64, offset: 2496)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !1637, file: !32, line: 148, baseType: !229, size: 128, offset: 2560)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !1619, file: !32, line: 184, baseType: !229, size: 128, offset: 3456)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !1619, file: !32, line: 190, baseType: !1244, size: 128, offset: 3584)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1619, file: !32, line: 192, baseType: !1695, size: 64, offset: 3712)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 64)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !1619, file: !32, line: 193, baseType: !1697, size: 512, offset: 3776)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 512, elements: !289)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1619, file: !32, line: 194, baseType: !1695, size: 64, offset: 4288)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !1619, file: !32, line: 196, baseType: !1677, size: 320, offset: 4352)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !1341, file: !19, line: 425, baseType: !209, size: 64, offset: 768)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !1341, file: !19, line: 430, baseType: !333, size: 64, offset: 832)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !1341, file: !19, line: 436, baseType: !823, size: 32, offset: 896)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1341, file: !19, line: 442, baseType: !195, size: 32, offset: 928)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !1341, file: !19, line: 447, baseType: !819, size: 32, offset: 960)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !1341, file: !19, line: 449, baseType: !243, offset: 992)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1341, file: !19, line: 454, baseType: !221, size: 512, offset: 1024)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !1341, file: !19, line: 459, baseType: !236, size: 64, offset: 1536)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !1341, file: !19, line: 462, baseType: !1709, size: 128, offset: 1600)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !1061, line: 159, size: 128, elements: !1710)
!1710 = !{!1711, !1740, !1741, !1742, !1743}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1709, file: !1061, line: 160, baseType: !1712, size: 64)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64)
!1713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1714)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !19, line: 1664, size: 320, elements: !1715)
!1715 = !{!1716, !1730, !1731, !1734, !1739}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !1714, file: !19, line: 1665, baseType: !1717, size: 64)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1718 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !19, line: 1660, baseType: !1719)
!1719 = !DISubroutineType(types: !1720)
!1720 = !{!1169, !1721}
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !19, line: 1651, size: 320, elements: !1723)
!1723 = !{!1724, !1725, !1726, !1727, !1728, !1729}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !1722, file: !19, line: 1652, baseType: !209, size: 64)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !1722, file: !19, line: 1653, baseType: !209, size: 64, offset: 64)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !1722, file: !19, line: 1654, baseType: !906, size: 64, offset: 128)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !1722, file: !19, line: 1655, baseType: !7, size: 32, offset: 192)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1722, file: !19, line: 1656, baseType: !325, size: 16, offset: 224)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !1722, file: !19, line: 1657, baseType: !225, size: 64, offset: 256)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !1714, file: !19, line: 1666, baseType: !1717, size: 64, offset: 64)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !1714, file: !19, line: 1667, baseType: !1732, size: 64, offset: 128)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64)
!1733 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !19, line: 1661, baseType: !1540)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !1714, file: !19, line: 1668, baseType: !1735, size: 64, offset: 192)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !19, line: 1662, baseType: !1737)
!1737 = !DISubroutineType(types: !1738)
!1738 = !{null, !1344, !7}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1714, file: !19, line: 1669, baseType: !225, size: 64, offset: 256)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1709, file: !1061, line: 161, baseType: !436, size: 8, offset: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !1709, file: !1061, line: 162, baseType: !436, size: 8, offset: 72)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !1709, file: !1061, line: 163, baseType: !436, size: 8, offset: 80)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !1709, file: !1061, line: 164, baseType: !436, size: 8, offset: 88)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1341, file: !19, line: 466, baseType: !1695, size: 64, offset: 1728)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !1341, file: !19, line: 467, baseType: !43, size: 32, offset: 1792)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !1341, file: !19, line: 468, baseType: !7, size: 32, offset: 1824)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !1341, file: !19, line: 474, baseType: !333, size: 64, offset: 1856)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !1341, file: !19, line: 476, baseType: !7, size: 32, offset: 1920)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !1341, file: !19, line: 477, baseType: !7, size: 32, offset: 1952)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !1341, file: !19, line: 484, baseType: !7, size: 32, offset: 1984)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !1341, file: !19, line: 485, baseType: !195, size: 32, offset: 2016)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !1341, file: !19, line: 487, baseType: !1753, size: 64, offset: 2048)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 64)
!1754 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !19, line: 44, flags: DIFlagFwdDecl)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !1341, file: !19, line: 488, baseType: !1756, size: 5120, offset: 2112)
!1756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1757, size: 5120, elements: !1764)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !1042, line: 540, size: 320, elements: !1758)
!1758 = !{!1759, !1760, !1761, !1762, !1763}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !1757, file: !1042, line: 541, baseType: !430, size: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1757, file: !1042, line: 542, baseType: !430, size: 64, offset: 64)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1757, file: !1042, line: 543, baseType: !430, size: 64, offset: 128)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !1757, file: !1042, line: 544, baseType: !424, size: 32, offset: 192)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !1757, file: !1042, line: 545, baseType: !430, size: 64, offset: 256)
!1764 = !{!1765}
!1765 = !DISubrange(count: 16)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1341, file: !19, line: 490, baseType: !1677, size: 320, offset: 7232)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !1341, file: !19, line: 491, baseType: !1108, size: 256, offset: 7552)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !1341, file: !19, line: 493, baseType: !823, size: 32, offset: 7808)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1341, file: !19, line: 495, baseType: !229, size: 128, offset: 7872)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !1341, file: !19, line: 502, baseType: !1771, size: 896, offset: 8000)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !19, line: 321, size: 896, elements: !1772)
!1772 = !{!1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !1771, file: !19, line: 322, baseType: !333, size: 64)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !1771, file: !19, line: 323, baseType: !333, size: 64, offset: 64)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !1771, file: !19, line: 324, baseType: !333, size: 64, offset: 128)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !1771, file: !19, line: 326, baseType: !7, size: 32, offset: 192)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !1771, file: !19, line: 327, baseType: !7, size: 32, offset: 224)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !1771, file: !19, line: 328, baseType: !7, size: 32, offset: 256)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !1771, file: !19, line: 329, baseType: !7, size: 32, offset: 288)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !1771, file: !19, line: 330, baseType: !7, size: 32, offset: 320)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !1771, file: !19, line: 331, baseType: !7, size: 32, offset: 352)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !1771, file: !19, line: 332, baseType: !7, size: 32, offset: 384)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !1771, file: !19, line: 333, baseType: !7, size: 32, offset: 416)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !1771, file: !19, line: 334, baseType: !7, size: 32, offset: 448)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !1771, file: !19, line: 335, baseType: !7, size: 32, offset: 480)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !1771, file: !19, line: 336, baseType: !7, size: 32, offset: 512)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !1771, file: !19, line: 337, baseType: !7, size: 32, offset: 544)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !1771, file: !19, line: 338, baseType: !7, size: 32, offset: 576)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !1771, file: !19, line: 339, baseType: !7, size: 32, offset: 608)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !1771, file: !19, line: 340, baseType: !7, size: 32, offset: 640)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !1771, file: !19, line: 341, baseType: !7, size: 32, offset: 672)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !1771, file: !19, line: 342, baseType: !7, size: 32, offset: 704)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !1771, file: !19, line: 344, baseType: !325, size: 16, offset: 736)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !1771, file: !19, line: 345, baseType: !325, size: 16, offset: 752)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !1771, file: !19, line: 346, baseType: !325, size: 16, offset: 768)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !1771, file: !19, line: 348, baseType: !436, size: 8, offset: 784)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !1771, file: !19, line: 349, baseType: !436, size: 8, offset: 792)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !1771, file: !19, line: 350, baseType: !436, size: 8, offset: 800)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !1771, file: !19, line: 351, baseType: !50, size: 32, offset: 832)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !1341, file: !19, line: 504, baseType: !7, size: 32, offset: 8896)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !1341, file: !19, line: 534, baseType: !7, size: 32, offset: 8928)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !1341, file: !19, line: 535, baseType: !7, size: 32, offset: 8960)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1341, file: !19, line: 536, baseType: !195, size: 32, offset: 8992)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !1341, file: !19, line: 537, baseType: !749, size: 192, offset: 9024)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !1341, file: !19, line: 544, baseType: !1806, size: 64, offset: 9216)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64)
!1807 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !19, line: 40, flags: DIFlagFwdDecl)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !1341, file: !19, line: 546, baseType: !229, size: 128, offset: 9280)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !1341, file: !19, line: 547, baseType: !243, offset: 9408)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !1341, file: !19, line: 548, baseType: !1673, size: 704, offset: 9408)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !1341, file: !19, line: 550, baseType: !749, size: 192, offset: 10112)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !1341, file: !19, line: 551, baseType: !749, size: 192, offset: 10304)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !1341, file: !19, line: 557, baseType: !229, size: 128, offset: 10496)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !1341, file: !19, line: 558, baseType: !243, offset: 10624)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !1341, file: !19, line: 560, baseType: !195, size: 32, offset: 10624)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !1341, file: !19, line: 563, baseType: !1817, size: 256, offset: 10688)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !1818, line: 18, size: 256, elements: !1819)
!1818 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!1819 = !{!1820, !1821, !1822, !1823}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !1817, file: !1818, line: 19, baseType: !1695, size: 64)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !1817, file: !1818, line: 20, baseType: !195, size: 32, offset: 64)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1817, file: !1818, line: 21, baseType: !1340, size: 64, offset: 128)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1817, file: !1818, line: 22, baseType: !1824, size: 64, offset: 192)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64)
!1825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1826)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !1818, line: 10, size: 256, elements: !1827)
!1827 = !{!1828, !1870, !1874, !1878}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !1826, file: !1818, line: 11, baseType: !1829, size: 64)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64)
!1830 = !DISubroutineType(types: !1831)
!1831 = !{!195, !1832}
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 64)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !1834, line: 22, size: 1280, elements: !1835)
!1834 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!1835 = !{!1836, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !1833, file: !1834, line: 23, baseType: !1837, size: 32)
!1837 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !427, line: 26, baseType: !195)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !1833, file: !1834, line: 24, baseType: !426, size: 32, offset: 32)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !1833, file: !1834, line: 25, baseType: !426, size: 32, offset: 64)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !1833, file: !1834, line: 28, baseType: !426, size: 32, offset: 96)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !1833, file: !1834, line: 29, baseType: !431, size: 64, offset: 128)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !1833, file: !1834, line: 30, baseType: !431, size: 64, offset: 192)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !1833, file: !1834, line: 31, baseType: !426, size: 32, offset: 256)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !1833, file: !1834, line: 32, baseType: !426, size: 32, offset: 288)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !1833, file: !1834, line: 33, baseType: !426, size: 32, offset: 320)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !1833, file: !1834, line: 34, baseType: !426, size: 32, offset: 352)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !1833, file: !1834, line: 35, baseType: !431, size: 64, offset: 384)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !1833, file: !1834, line: 38, baseType: !426, size: 32, offset: 448)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !1833, file: !1834, line: 40, baseType: !426, size: 32, offset: 480)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !1833, file: !1834, line: 41, baseType: !426, size: 32, offset: 512)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !1833, file: !1834, line: 42, baseType: !426, size: 32, offset: 544)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !1833, file: !1834, line: 43, baseType: !431, size: 64, offset: 576)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !1833, file: !1834, line: 44, baseType: !431, size: 64, offset: 640)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1833, file: !1834, line: 46, baseType: !426, size: 32, offset: 704)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1833, file: !1834, line: 47, baseType: !426, size: 32, offset: 736)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !1833, file: !1834, line: 48, baseType: !431, size: 64, offset: 768)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !1833, file: !1834, line: 49, baseType: !426, size: 32, offset: 832)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !1833, file: !1834, line: 51, baseType: !426, size: 32, offset: 864)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !1833, file: !1834, line: 52, baseType: !426, size: 32, offset: 896)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !1833, file: !1834, line: 53, baseType: !426, size: 32, offset: 928)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !1833, file: !1834, line: 54, baseType: !426, size: 32, offset: 960)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1833, file: !1834, line: 55, baseType: !426, size: 32, offset: 992)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1833, file: !1834, line: 56, baseType: !426, size: 32, offset: 1024)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !1833, file: !1834, line: 57, baseType: !426, size: 32, offset: 1056)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !1833, file: !1834, line: 58, baseType: !1837, size: 32, offset: 1088)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !1833, file: !1834, line: 59, baseType: !1837, size: 32, offset: 1120)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !1833, file: !1834, line: 60, baseType: !431, size: 64, offset: 1152)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !1833, file: !1834, line: 61, baseType: !426, size: 32, offset: 1216)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !1833, file: !1834, line: 63, baseType: !426, size: 32, offset: 1248)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !1826, file: !1818, line: 12, baseType: !1871, size: 64, offset: 64)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 64)
!1872 = !DISubroutineType(types: !1873)
!1873 = !{!195, !1344, !1832, !1265}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !1826, file: !1818, line: 14, baseType: !1875, size: 64, offset: 128)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 64)
!1876 = !DISubroutineType(types: !1877)
!1877 = !{!195, !1344, !1832}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !1826, file: !1818, line: 15, baseType: !1539, size: 64, offset: 192)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1341, file: !19, line: 570, baseType: !374, size: 128, align: 64, offset: 10944)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !1341, file: !19, line: 571, baseType: !1244, size: 128, offset: 11072)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !1341, file: !19, line: 576, baseType: !749, size: 192, offset: 11200)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !1341, file: !19, line: 578, baseType: !1883, size: 64, offset: 11392)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !19, line: 578, flags: DIFlagFwdDecl)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !1341, file: !19, line: 579, baseType: !229, size: 128, offset: 11456)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !1341, file: !19, line: 580, baseType: !1217, size: 2368, offset: 11584)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !1341, file: !19, line: 582, baseType: !391, size: 64, offset: 13952)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !1341, file: !19, line: 589, baseType: !499, size: 8, offset: 14016)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !1341, file: !19, line: 591, baseType: !330, size: 64, offset: 14080)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !1341, file: !19, line: 594, baseType: !1891, size: 320, offset: 14144)
!1891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !430, size: 320, elements: !1892)
!1892 = !{!1893}
!1893 = !DISubrange(count: 5)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1126, file: !1061, line: 191, baseType: !209, size: 64, offset: 7168)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1126, file: !1061, line: 193, baseType: !195, size: 32, offset: 7232)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1126, file: !1061, line: 194, baseType: !333, size: 64, offset: 7296)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !1126, file: !1061, line: 196, baseType: !843, size: 256, offset: 7360)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !1126, file: !1061, line: 197, baseType: !236, size: 64, offset: 7616)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !1126, file: !1061, line: 199, baseType: !1900, size: 64, offset: 7680)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64)
!1901 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !1061, line: 199, flags: DIFlagFwdDecl)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !1126, file: !1061, line: 200, baseType: !823, size: 32, offset: 7744)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !1126, file: !1061, line: 201, baseType: !1904, size: 64, offset: 7808)
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 64)
!1905 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !1061, line: 156, flags: DIFlagFwdDecl)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !1126, file: !1061, line: 203, baseType: !221, size: 512, offset: 7872)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !1126, file: !1061, line: 208, baseType: !195, size: 32, offset: 8384)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1126, file: !1061, line: 209, baseType: !1909, size: 64, offset: 8448)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64)
!1910 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !1061, line: 157, flags: DIFlagFwdDecl)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !1126, file: !1061, line: 210, baseType: !1912, offset: 8512)
!1912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !658, line: 192, elements: !257)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !1041, file: !1042, line: 43, baseType: !1618, size: 64, offset: 1024)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !1041, file: !1042, line: 46, baseType: !195, size: 32, offset: 1088)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !1041, file: !1042, line: 48, baseType: !749, size: 192, offset: 1152)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "swap_file", scope: !994, file: !995, line: 259, baseType: !361, size: 64, offset: 1152)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "old_block_size", scope: !994, file: !995, line: 260, baseType: !7, size: 32, offset: 1216)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !994, file: !995, line: 265, baseType: !243, offset: 1248)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "cont_lock", scope: !994, file: !995, line: 278, baseType: !243, offset: 1248)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "discard_work", scope: !994, file: !995, line: 282, baseType: !1108, size: 256, offset: 1280)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "discard_clusters", scope: !994, file: !995, line: 283, baseType: !1020, size: 64, offset: 1536)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "avail_lists", scope: !994, file: !995, line: 284, baseType: !1923, offset: 1600)
!1923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1001, elements: !1146)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 64)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !857, file: !86, line: 415, baseType: !1926, size: 64, offset: 1344)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1927 = !DISubroutineType(types: !1928)
!1928 = !{null, !361}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !810, file: !86, line: 466, baseType: !333, size: 64, offset: 896)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !810, file: !86, line: 467, baseType: !1931, size: 32, offset: 960)
!1931 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1932, line: 8, baseType: !424)
!1932 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !810, file: !86, line: 468, baseType: !243, offset: 992)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !810, file: !86, line: 469, baseType: !229, size: 128, offset: 1024)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !810, file: !86, line: 470, baseType: !209, size: 64, offset: 1152)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !805, file: !798, line: 87, baseType: !333, size: 64, offset: 192)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !805, file: !798, line: 94, baseType: !333, size: 64, offset: 256)
!1938 = !DIDerivedType(tag: DW_TAG_member, scope: !802, file: !798, line: 96, baseType: !1939, size: 64)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !802, file: !798, line: 96, size: 64, elements: !1940)
!1940 = !{!1941}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1939, file: !798, line: 101, baseType: !1942, size: 64)
!1942 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !230, line: 143, baseType: !430)
!1943 = !DIDerivedType(tag: DW_TAG_member, scope: !802, file: !798, line: 103, baseType: !1944, size: 320)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !802, file: !798, line: 103, size: 320, elements: !1945)
!1945 = !{!1946, !1956, !1957, !1958}
!1946 = !DIDerivedType(tag: DW_TAG_member, scope: !1944, file: !798, line: 104, baseType: !1947, size: 128)
!1947 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1944, file: !798, line: 104, size: 128, elements: !1948)
!1948 = !{!1949, !1950}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1947, file: !798, line: 105, baseType: !229, size: 128)
!1950 = !DIDerivedType(tag: DW_TAG_member, scope: !1947, file: !798, line: 106, baseType: !1951, size: 128)
!1951 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1947, file: !798, line: 106, size: 128, elements: !1952)
!1952 = !{!1953, !1954, !1955}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1951, file: !798, line: 107, baseType: !796, size: 64)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1951, file: !798, line: 109, baseType: !195, size: 32, offset: 64)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1951, file: !798, line: 110, baseType: !195, size: 32, offset: 96)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1944, file: !798, line: 117, baseType: !1220, size: 64, offset: 128)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1944, file: !798, line: 119, baseType: !209, size: 64, offset: 192)
!1958 = !DIDerivedType(tag: DW_TAG_member, scope: !1944, file: !798, line: 120, baseType: !1959, size: 64, offset: 256)
!1959 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1944, file: !798, line: 120, size: 64, elements: !1960)
!1960 = !{!1961, !1962, !1963}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1959, file: !798, line: 121, baseType: !209, size: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1959, file: !798, line: 122, baseType: !333, size: 64)
!1963 = !DIDerivedType(tag: DW_TAG_member, scope: !1959, file: !798, line: 123, baseType: !1964, size: 32)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1959, file: !798, line: 123, size: 32, elements: !1965)
!1965 = !{!1966, !1967, !1968}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1964, file: !798, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1964, file: !798, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1964, file: !798, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1969 = !DIDerivedType(tag: DW_TAG_member, scope: !802, file: !798, line: 130, baseType: !1970, size: 192)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !802, file: !798, line: 130, size: 192, elements: !1971)
!1971 = !{!1972, !1973, !1974, !1975, !1976}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1970, file: !798, line: 131, baseType: !333, size: 64)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1970, file: !798, line: 134, baseType: !436, size: 8, offset: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1970, file: !798, line: 135, baseType: !436, size: 8, offset: 72)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1970, file: !798, line: 136, baseType: !823, size: 32, offset: 96)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1970, file: !798, line: 137, baseType: !7, size: 32, offset: 128)
!1977 = !DIDerivedType(tag: DW_TAG_member, scope: !802, file: !798, line: 139, baseType: !1978, size: 256)
!1978 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !802, file: !798, line: 139, size: 256, elements: !1979)
!1979 = !{!1980, !1981, !1982}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1978, file: !798, line: 140, baseType: !333, size: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1978, file: !798, line: 141, baseType: !823, size: 32, offset: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1978, file: !798, line: 143, baseType: !229, size: 128, offset: 128)
!1983 = !DIDerivedType(tag: DW_TAG_member, scope: !802, file: !798, line: 145, baseType: !1984, size: 256)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !802, file: !798, line: 145, size: 256, elements: !1985)
!1985 = !{!1986, !1987, !1990, !1991, !3461}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1984, file: !798, line: 146, baseType: !333, size: 64)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1984, file: !798, line: 147, baseType: !1988, size: 64, offset: 64)
!1988 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1989, line: 509, baseType: !796)
!1989 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1984, file: !798, line: 148, baseType: !333, size: 64, offset: 128)
!1991 = !DIDerivedType(tag: DW_TAG_member, scope: !1984, file: !798, line: 149, baseType: !1992, size: 64, offset: 192)
!1992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1984, file: !798, line: 149, size: 64, elements: !1993)
!1993 = !{!1994, !3460}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1992, file: !798, line: 150, baseType: !1995, size: 64)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 64)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !798, line: 388, size: 7296, elements: !1997)
!1997 = !{!1998, !3458}
!1998 = !DIDerivedType(tag: DW_TAG_member, scope: !1996, file: !798, line: 389, baseType: !1999, size: 7296)
!1999 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1996, file: !798, line: 389, size: 7296, elements: !2000)
!2000 = !{!2001, !2119, !2120, !2121, !2125, !2126, !2127, !2128, !2129, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2170, !2176, !2179, !2218, !2219, !3442, !3443, !3446, !3447, !3448, !3451, !3452, !3453, !3456, !3457}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1999, file: !798, line: 390, baseType: !2002, size: 64)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 64)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !798, line: 305, size: 1472, elements: !2004)
!2004 = !{!2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2019, !2020, !2025, !2026, !2029, !2113, !2114, !2115, !2116, !2117}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !2003, file: !798, line: 308, baseType: !333, size: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !2003, file: !798, line: 309, baseType: !333, size: 64, offset: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !2003, file: !798, line: 313, baseType: !2002, size: 64, offset: 128)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !2003, file: !798, line: 313, baseType: !2002, size: 64, offset: 192)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !2003, file: !798, line: 315, baseType: !836, size: 192, align: 64, offset: 256)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !2003, file: !798, line: 323, baseType: !333, size: 64, offset: 448)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !2003, file: !798, line: 327, baseType: !1995, size: 64, offset: 512)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !2003, file: !798, line: 333, baseType: !2013, size: 64, offset: 576)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1989, line: 284, baseType: !2014)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1989, line: 284, size: 64, elements: !2015)
!2015 = !{!2016}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !2014, file: !1989, line: 284, baseType: !2017, size: 64)
!2017 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !2018, line: 19, baseType: !333)
!2018 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !2003, file: !798, line: 334, baseType: !333, size: 64, offset: 640)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !2003, file: !798, line: 343, baseType: !2021, size: 256, offset: 704)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2003, file: !798, line: 340, size: 256, elements: !2022)
!2022 = !{!2023, !2024}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2021, file: !798, line: 341, baseType: !836, size: 192, align: 64)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !2021, file: !798, line: 342, baseType: !333, size: 64, offset: 192)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !2003, file: !798, line: 351, baseType: !229, size: 128, offset: 960)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !2003, file: !798, line: 353, baseType: !2027, size: 64, offset: 1088)
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 64)
!2028 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !798, line: 353, flags: DIFlagFwdDecl)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2003, file: !798, line: 356, baseType: !2030, size: 64, offset: 1152)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 64)
!2031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2032)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !56, line: 557, size: 832, elements: !2033)
!2033 = !{!2034, !2038, !2039, !2043, !2047, !2087, !2091, !2095, !2099, !2100, !2101, !2105, !2109}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2032, file: !56, line: 558, baseType: !2035, size: 64)
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64)
!2036 = !DISubroutineType(types: !2037)
!2037 = !{null, !2002}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2032, file: !56, line: 559, baseType: !2035, size: 64, offset: 64)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2032, file: !56, line: 560, baseType: !2040, size: 64, offset: 128)
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64)
!2041 = !DISubroutineType(types: !2042)
!2042 = !{!195, !2002, !333}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !2032, file: !56, line: 561, baseType: !2044, size: 64, offset: 192)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2045 = !DISubroutineType(types: !2046)
!2046 = !{!195, !2002}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !2032, file: !56, line: 562, baseType: !2048, size: 64, offset: 256)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!2049 = !DISubroutineType(types: !2050)
!2050 = !{!2051, !2052}
!2051 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !798, line: 682, baseType: !7)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !56, line: 508, size: 768, elements: !2054)
!2054 = !{!2055, !2056, !2057, !2058, !2059, !2060, !2067, !2074, !2080, !2081, !2082, !2084, !2086}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !2053, file: !56, line: 509, baseType: !2002, size: 64)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2053, file: !56, line: 510, baseType: !7, size: 32, offset: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2053, file: !56, line: 511, baseType: !819, size: 32, offset: 96)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !2053, file: !56, line: 512, baseType: !333, size: 64, offset: 128)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2053, file: !56, line: 513, baseType: !333, size: 64, offset: 192)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2053, file: !56, line: 514, baseType: !2061, size: 64, offset: 256)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64)
!2062 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1989, line: 385, baseType: !2063)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1989, line: 385, size: 64, elements: !2064)
!2064 = !{!2065}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2063, file: !1989, line: 385, baseType: !2066, size: 64)
!2066 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !2018, line: 15, baseType: !333)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2053, file: !56, line: 516, baseType: !2068, size: 64, offset: 320)
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1989, line: 359, baseType: !2070)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1989, line: 359, size: 64, elements: !2071)
!2071 = !{!2072}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2070, file: !1989, line: 359, baseType: !2073, size: 64)
!2073 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !2018, line: 16, baseType: !333)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !2053, file: !56, line: 519, baseType: !2075, size: 64, offset: 384)
!2075 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !2018, line: 21, baseType: !2076)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2018, line: 21, size: 64, elements: !2077)
!2077 = !{!2078}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2076, file: !2018, line: 21, baseType: !2079, size: 64)
!2079 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !2018, line: 14, baseType: !333)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !2053, file: !56, line: 521, baseType: !796, size: 64, offset: 448)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2053, file: !56, line: 522, baseType: !796, size: 64, offset: 512)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2053, file: !56, line: 528, baseType: !2083, size: 64, offset: 576)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2075, size: 64)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2053, file: !56, line: 532, baseType: !2085, size: 64, offset: 640)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !2053, file: !56, line: 536, baseType: !1988, size: 64, offset: 704)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !2032, file: !56, line: 563, baseType: !2088, size: 64, offset: 320)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64)
!2089 = !DISubroutineType(types: !2090)
!2090 = !{!2051, !2052, !55}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !2032, file: !56, line: 565, baseType: !2092, size: 64, offset: 384)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 64)
!2093 = !DISubroutineType(types: !2094)
!2094 = !{null, !2052, !333, !333}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !2032, file: !56, line: 567, baseType: !2096, size: 64, offset: 448)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64)
!2097 = !DISubroutineType(types: !2098)
!2098 = !{!333, !2002}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !2032, file: !56, line: 571, baseType: !2048, size: 64, offset: 512)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !2032, file: !56, line: 574, baseType: !2048, size: 64, offset: 576)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !2032, file: !56, line: 579, baseType: !2102, size: 64, offset: 640)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!2103 = !DISubroutineType(types: !2104)
!2104 = !{!195, !2002, !333, !209, !195, !195}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2032, file: !56, line: 585, baseType: !2106, size: 64, offset: 704)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 64)
!2107 = !DISubroutineType(types: !2108)
!2108 = !{!225, !2002}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !2032, file: !56, line: 615, baseType: !2110, size: 64, offset: 768)
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 64)
!2111 = !DISubroutineType(types: !2112)
!2112 = !{!796, !2002, !333}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !2003, file: !798, line: 359, baseType: !333, size: 64, offset: 1216)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !2003, file: !798, line: 361, baseType: !361, size: 64, offset: 1280)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !2003, file: !798, line: 362, baseType: !209, size: 64, offset: 1344)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !2003, file: !798, line: 365, baseType: !753, size: 64, offset: 1408)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !2003, file: !798, line: 373, baseType: !2118, offset: 1472)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !798, line: 296, elements: !257)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1999, file: !798, line: 391, baseType: !832, size: 64, offset: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1999, file: !798, line: 392, baseType: !430, size: 64, offset: 128)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1999, file: !798, line: 394, baseType: !2122, size: 64, offset: 192)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 64)
!2123 = !DISubroutineType(types: !2124)
!2124 = !{!333, !361, !333, !333, !333, !333}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1999, file: !798, line: 398, baseType: !333, size: 64, offset: 256)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1999, file: !798, line: 399, baseType: !333, size: 64, offset: 320)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1999, file: !798, line: 405, baseType: !333, size: 64, offset: 384)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1999, file: !798, line: 406, baseType: !333, size: 64, offset: 448)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1999, file: !798, line: 407, baseType: !2130, size: 64, offset: 512)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 64)
!2131 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1989, line: 286, baseType: !2132)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1989, line: 286, size: 64, elements: !2133)
!2133 = !{!2134}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2132, file: !1989, line: 286, baseType: !2135, size: 64)
!2135 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !2018, line: 18, baseType: !333)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1999, file: !798, line: 416, baseType: !823, size: 32, offset: 576)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1999, file: !798, line: 428, baseType: !823, size: 32, offset: 608)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1999, file: !798, line: 437, baseType: !823, size: 32, offset: 640)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1999, file: !798, line: 447, baseType: !823, size: 32, offset: 672)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1999, file: !798, line: 450, baseType: !753, size: 64, offset: 704)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1999, file: !798, line: 452, baseType: !195, size: 32, offset: 768)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1999, file: !798, line: 454, baseType: !243, offset: 800)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1999, file: !798, line: 457, baseType: !843, size: 256, offset: 832)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1999, file: !798, line: 459, baseType: !229, size: 128, offset: 1088)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1999, file: !798, line: 466, baseType: !333, size: 64, offset: 1216)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1999, file: !798, line: 467, baseType: !333, size: 64, offset: 1280)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1999, file: !798, line: 469, baseType: !333, size: 64, offset: 1344)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1999, file: !798, line: 470, baseType: !333, size: 64, offset: 1408)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1999, file: !798, line: 471, baseType: !755, size: 64, offset: 1472)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1999, file: !798, line: 472, baseType: !333, size: 64, offset: 1536)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1999, file: !798, line: 473, baseType: !333, size: 64, offset: 1600)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1999, file: !798, line: 474, baseType: !333, size: 64, offset: 1664)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1999, file: !798, line: 475, baseType: !333, size: 64, offset: 1728)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1999, file: !798, line: 477, baseType: !243, offset: 1792)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1999, file: !798, line: 478, baseType: !333, size: 64, offset: 1792)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1999, file: !798, line: 478, baseType: !333, size: 64, offset: 1856)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1999, file: !798, line: 478, baseType: !333, size: 64, offset: 1920)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1999, file: !798, line: 478, baseType: !333, size: 64, offset: 1984)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1999, file: !798, line: 479, baseType: !333, size: 64, offset: 2048)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1999, file: !798, line: 479, baseType: !333, size: 64, offset: 2112)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1999, file: !798, line: 479, baseType: !333, size: 64, offset: 2176)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1999, file: !798, line: 480, baseType: !333, size: 64, offset: 2240)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1999, file: !798, line: 480, baseType: !333, size: 64, offset: 2304)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1999, file: !798, line: 480, baseType: !333, size: 64, offset: 2368)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1999, file: !798, line: 480, baseType: !333, size: 64, offset: 2432)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1999, file: !798, line: 482, baseType: !2167, size: 2816, offset: 2496)
!2167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, size: 2816, elements: !2168)
!2168 = !{!2169}
!2169 = !DISubrange(count: 44)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1999, file: !798, line: 488, baseType: !2171, size: 256, offset: 5312)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2172, line: 60, size: 256, elements: !2173)
!2172 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2173 = !{!2174}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2171, file: !2172, line: 61, baseType: !2175, size: 256)
!2175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !753, size: 256, elements: !1322)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1999, file: !798, line: 490, baseType: !2177, size: 64, offset: 5568)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 64)
!2178 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !798, line: 490, flags: DIFlagFwdDecl)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1999, file: !798, line: 493, baseType: !2180, size: 896, offset: 5632)
!2180 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2181, line: 53, baseType: !2182)
!2181 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2182 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2181, line: 13, size: 896, elements: !2183)
!2183 = !{!2184, !2185, !2186, !2187, !2190, !2191, !2192, !2193, !2213, !2214, !2215}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2182, file: !2181, line: 18, baseType: !430, size: 64)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2182, file: !2181, line: 28, baseType: !755, size: 64, offset: 64)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2182, file: !2181, line: 31, baseType: !843, size: 256, offset: 128)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2182, file: !2181, line: 32, baseType: !2188, size: 64, offset: 384)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 64)
!2189 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2181, line: 32, flags: DIFlagFwdDecl)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2182, file: !2181, line: 37, baseType: !325, size: 16, offset: 448)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2182, file: !2181, line: 40, baseType: !749, size: 192, offset: 512)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2182, file: !2181, line: 41, baseType: !209, size: 64, offset: 704)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2182, file: !2181, line: 42, baseType: !2194, size: 64, offset: 768)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64)
!2195 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2196)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2197, line: 13, size: 896, elements: !2198)
!2197 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2198 = !{!2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2196, file: !2197, line: 14, baseType: !209, size: 64)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2196, file: !2197, line: 15, baseType: !333, size: 64, offset: 64)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2196, file: !2197, line: 17, baseType: !333, size: 64, offset: 128)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2196, file: !2197, line: 17, baseType: !333, size: 64, offset: 192)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2196, file: !2197, line: 19, baseType: !157, size: 64, offset: 256)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2196, file: !2197, line: 21, baseType: !157, size: 64, offset: 320)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2196, file: !2197, line: 22, baseType: !157, size: 64, offset: 384)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2196, file: !2197, line: 23, baseType: !157, size: 64, offset: 448)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2196, file: !2197, line: 24, baseType: !157, size: 64, offset: 512)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2196, file: !2197, line: 25, baseType: !157, size: 64, offset: 576)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2196, file: !2197, line: 26, baseType: !157, size: 64, offset: 640)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2196, file: !2197, line: 27, baseType: !157, size: 64, offset: 704)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2196, file: !2197, line: 28, baseType: !157, size: 64, offset: 768)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2196, file: !2197, line: 29, baseType: !157, size: 64, offset: 832)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2182, file: !2181, line: 44, baseType: !823, size: 32, offset: 832)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2182, file: !2181, line: 50, baseType: !935, size: 16, offset: 864)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2182, file: !2181, line: 51, baseType: !2216, size: 16, offset: 880)
!2216 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !425, line: 18, baseType: !2217)
!2217 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !427, line: 23, baseType: !999)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1999, file: !798, line: 495, baseType: !333, size: 64, offset: 6528)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1999, file: !798, line: 497, baseType: !2220, size: 64, offset: 6592)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 64)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !798, line: 381, size: 384, elements: !2222)
!2222 = !{!2223, !2224, !3441}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2221, file: !798, line: 382, baseType: !823, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2221, file: !798, line: 383, baseType: !2225, size: 128, offset: 64)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !798, line: 376, size: 128, elements: !2226)
!2226 = !{!2227, !3439}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2225, file: !798, line: 377, baseType: !2228, size: 64)
!2228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2229, size: 64)
!2229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !2230, line: 640, size: 48640, elements: !2231)
!2230 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!2231 = !{!2232, !2238, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2253, !2271, !2282, !2365, !2366, !2367, !2378, !2379, !2381, !2382, !2383, !2384, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2462, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2494, !2496, !2497, !2498, !2510, !2511, !2512, !2513, !2514, !2515, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2539, !2544, !2866, !2867, !2868, !2869, !2871, !2874, !2877, !2880, !2883, !2919, !3020, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3066, !3067, !3068, !3069, !3070, !3075, !3076, !3077, !3080, !3081, !3083, !3092, !3097, !3098, !3099, !3102, !3103, !3182, !3183, !3186, !3187, !3190, !3191, !3192, !3196, !3197, !3198, !3211, !3212, !3213, !3223, !3228, !3231, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !2229, file: !2230, line: 646, baseType: !2233, size: 128)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !2234, line: 56, size: 128, elements: !2235)
!2234 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!2235 = !{!2236, !2237}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2233, file: !2234, line: 57, baseType: !333, size: 64)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2233, file: !2234, line: 58, baseType: !424, size: 32, offset: 64)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2229, file: !2230, line: 649, baseType: !2239, size: 64, offset: 128)
!2239 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !157)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2229, file: !2230, line: 657, baseType: !209, size: 64, offset: 192)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2229, file: !2230, line: 658, baseType: !1437, size: 32, offset: 256)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2229, file: !2230, line: 660, baseType: !7, size: 32, offset: 288)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !2229, file: !2230, line: 661, baseType: !7, size: 32, offset: 320)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2229, file: !2230, line: 684, baseType: !195, size: 32, offset: 352)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2229, file: !2230, line: 686, baseType: !195, size: 32, offset: 384)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !2229, file: !2230, line: 687, baseType: !195, size: 32, offset: 416)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !2229, file: !2230, line: 688, baseType: !195, size: 32, offset: 448)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !2229, file: !2230, line: 689, baseType: !7, size: 32, offset: 480)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !2229, file: !2230, line: 691, baseType: !2250, size: 64, offset: 512)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 64)
!2251 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2252)
!2252 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !2230, line: 691, flags: DIFlagFwdDecl)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !2229, file: !2230, line: 692, baseType: !2254, size: 832, offset: 576)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !2230, line: 451, size: 832, elements: !2255)
!2255 = !{!2256, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !2254, file: !2230, line: 453, baseType: !2257, size: 128)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !2230, line: 325, size: 128, elements: !2258)
!2258 = !{!2259, !2260}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2257, file: !2230, line: 326, baseType: !333, size: 64)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !2257, file: !2230, line: 327, baseType: !424, size: 32, offset: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !2254, file: !2230, line: 454, baseType: !836, size: 192, align: 64, offset: 128)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !2254, file: !2230, line: 455, baseType: !229, size: 128, offset: 320)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2254, file: !2230, line: 456, baseType: !7, size: 32, offset: 448)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !2254, file: !2230, line: 458, baseType: !430, size: 64, offset: 512)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2254, file: !2230, line: 459, baseType: !430, size: 64, offset: 576)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !2254, file: !2230, line: 460, baseType: !430, size: 64, offset: 640)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !2254, file: !2230, line: 461, baseType: !430, size: 64, offset: 704)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !2254, file: !2230, line: 463, baseType: !430, size: 64, offset: 768)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !2254, file: !2230, line: 465, baseType: !2270, offset: 832)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !2230, line: 415, elements: !257)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2229, file: !2230, line: 693, baseType: !2272, size: 384, offset: 1408)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !2230, line: 489, size: 384, elements: !2273)
!2273 = !{!2274, !2275, !2276, !2277, !2278, !2279, !2280}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !2272, file: !2230, line: 490, baseType: !229, size: 128)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2272, file: !2230, line: 491, baseType: !333, size: 64, offset: 128)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !2272, file: !2230, line: 492, baseType: !333, size: 64, offset: 192)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !2272, file: !2230, line: 493, baseType: !7, size: 32, offset: 256)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2272, file: !2230, line: 494, baseType: !325, size: 16, offset: 288)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !2272, file: !2230, line: 495, baseType: !325, size: 16, offset: 304)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2272, file: !2230, line: 497, baseType: !2281, size: 64, offset: 320)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 64)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !2229, file: !2230, line: 697, baseType: !2283, size: 1792, offset: 1792)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !2230, line: 507, size: 1792, elements: !2284)
!2284 = !{!2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2362, !2363}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2283, file: !2230, line: 508, baseType: !836, size: 192, align: 64)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !2283, file: !2230, line: 515, baseType: !430, size: 64, offset: 192)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !2283, file: !2230, line: 516, baseType: !430, size: 64, offset: 256)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !2283, file: !2230, line: 517, baseType: !430, size: 64, offset: 320)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !2283, file: !2230, line: 518, baseType: !430, size: 64, offset: 384)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !2283, file: !2230, line: 519, baseType: !430, size: 64, offset: 448)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !2283, file: !2230, line: 526, baseType: !759, size: 64, offset: 512)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2283, file: !2230, line: 527, baseType: !430, size: 64, offset: 576)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2283, file: !2230, line: 528, baseType: !7, size: 32, offset: 640)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !2283, file: !2230, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !2283, file: !2230, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !2283, file: !2230, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !2283, file: !2230, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !2283, file: !2230, line: 563, baseType: !2299, size: 512, offset: 704)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !62, line: 118, size: 512, elements: !2300)
!2300 = !{!2301, !2309, !2310, !2315, !2358, !2359, !2360, !2361}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2299, file: !62, line: 119, baseType: !2302, size: 256)
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !2303, line: 9, size: 256, elements: !2304)
!2303 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!2304 = !{!2305, !2306}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2302, file: !2303, line: 10, baseType: !836, size: 192, align: 64)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2302, file: !2303, line: 11, baseType: !2307, size: 64, offset: 192)
!2307 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !2308, line: 29, baseType: !759)
!2308 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !2299, file: !62, line: 120, baseType: !2307, size: 64, offset: 256)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2299, file: !62, line: 121, baseType: !2311, size: 64, offset: 320)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 64)
!2312 = !DISubroutineType(types: !2313)
!2313 = !{!61, !2314}
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 64)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2299, file: !62, line: 122, baseType: !2316, size: 64, offset: 384)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 64)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !62, line: 159, size: 512, align: 512, elements: !2318)
!2318 = !{!2319, !2339, !2340, !2343, !2348, !2349, !2353, !2357}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !2317, file: !62, line: 160, baseType: !2320, size: 64)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 64)
!2321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !62, line: 214, size: 4608, align: 512, elements: !2322)
!2322 = !{!2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2321, file: !62, line: 215, baseType: !849)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2321, file: !62, line: 216, baseType: !7, size: 32)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !2321, file: !62, line: 217, baseType: !7, size: 32, offset: 32)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !2321, file: !62, line: 218, baseType: !7, size: 32, offset: 64)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !2321, file: !62, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !2321, file: !62, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !2321, file: !62, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !2321, file: !62, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !2321, file: !62, line: 233, baseType: !2307, size: 64, offset: 128)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !2321, file: !62, line: 234, baseType: !2314, size: 64, offset: 192)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !2321, file: !62, line: 235, baseType: !2307, size: 64, offset: 256)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !2321, file: !62, line: 236, baseType: !2314, size: 64, offset: 320)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !2321, file: !62, line: 237, baseType: !2336, size: 4096, offset: 512)
!2336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2317, size: 4096, elements: !2337)
!2337 = !{!2338}
!2338 = !DISubrange(count: 8)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2317, file: !62, line: 161, baseType: !7, size: 32, offset: 64)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2317, file: !62, line: 162, baseType: !2341, size: 32, offset: 96)
!2341 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !230, line: 27, baseType: !2342)
!2342 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !317, line: 96, baseType: !195)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2317, file: !62, line: 163, baseType: !2344, size: 32, offset: 128)
!2344 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !397, line: 276, baseType: !2345)
!2345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !397, line: 276, size: 32, elements: !2346)
!2346 = !{!2347}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2345, file: !397, line: 276, baseType: !401, size: 32)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !2317, file: !62, line: 164, baseType: !2314, size: 64, offset: 192)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2317, file: !62, line: 165, baseType: !2350, size: 128, offset: 256)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !2303, line: 14, size: 128, elements: !2351)
!2351 = !{!2352}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2350, file: !2303, line: 15, baseType: !828, size: 128)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !2317, file: !62, line: 166, baseType: !2354, size: 64, offset: 384)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64)
!2355 = !DISubroutineType(types: !2356)
!2356 = !{!2307}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2317, file: !62, line: 167, baseType: !2307, size: 64, offset: 448)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2299, file: !62, line: 123, baseType: !1056, size: 8, offset: 448)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !2299, file: !62, line: 124, baseType: !1056, size: 8, offset: 456)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !2299, file: !62, line: 125, baseType: !1056, size: 8, offset: 464)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !2299, file: !62, line: 126, baseType: !1056, size: 8, offset: 472)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !2283, file: !2230, line: 572, baseType: !2299, size: 512, offset: 1216)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !2283, file: !2230, line: 580, baseType: !2364, size: 64, offset: 1728)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 64)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2229, file: !2230, line: 721, baseType: !7, size: 32, offset: 3584)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !2229, file: !2230, line: 722, baseType: !195, size: 32, offset: 3616)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !2229, file: !2230, line: 723, baseType: !2368, size: 64, offset: 3648)
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 64)
!2369 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2370)
!2370 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !2371, line: 17, baseType: !2372)
!2371 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !2371, line: 17, size: 64, elements: !2373)
!2373 = !{!2374}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2372, file: !2371, line: 17, baseType: !2375, size: 64)
!2375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, size: 64, elements: !2376)
!2376 = !{!2377}
!2377 = !DISubrange(count: 1)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !2229, file: !2230, line: 724, baseType: !2370, size: 64, offset: 3712)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !2229, file: !2230, line: 749, baseType: !2380, offset: 3776)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !2230, line: 290, elements: !257)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2229, file: !2230, line: 751, baseType: !229, size: 128, offset: 3776)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !2229, file: !2230, line: 757, baseType: !1995, size: 64, offset: 3904)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !2229, file: !2230, line: 758, baseType: !1995, size: 64, offset: 3968)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !2229, file: !2230, line: 761, baseType: !2385, size: 320, offset: 4032)
!2385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2172, line: 34, size: 320, elements: !2386)
!2386 = !{!2387, !2388}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2385, file: !2172, line: 35, baseType: !430, size: 64)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2385, file: !2172, line: 36, baseType: !2389, size: 256, offset: 64)
!2389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2002, size: 256, elements: !1322)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !2229, file: !2230, line: 766, baseType: !195, size: 32, offset: 4352)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !2229, file: !2230, line: 767, baseType: !195, size: 32, offset: 4384)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !2229, file: !2230, line: 768, baseType: !195, size: 32, offset: 4416)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !2229, file: !2230, line: 770, baseType: !195, size: 32, offset: 4448)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !2229, file: !2230, line: 772, baseType: !333, size: 64, offset: 4480)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2229, file: !2230, line: 775, baseType: !7, size: 32, offset: 4544)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !2229, file: !2230, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !2229, file: !2230, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !2229, file: !2230, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !2229, file: !2230, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !2229, file: !2230, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !2229, file: !2230, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !2229, file: !2230, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !2229, file: !2230, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !2229, file: !2230, line: 831, baseType: !333, size: 64, offset: 4672)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !2229, file: !2230, line: 833, baseType: !2406, size: 384, offset: 4736)
!2406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !67, line: 25, size: 384, elements: !2407)
!2407 = !{!2408, !2413}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2406, file: !67, line: 26, baseType: !2409, size: 64)
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 64)
!2410 = !DISubroutineType(types: !2411)
!2411 = !{!157, !2412}
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 64)
!2413 = !DIDerivedType(tag: DW_TAG_member, scope: !2406, file: !67, line: 27, baseType: !2414, size: 320, offset: 64)
!2414 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2406, file: !67, line: 27, size: 320, elements: !2415)
!2415 = !{!2416, !2426, !2452}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2414, file: !67, line: 36, baseType: !2417, size: 320)
!2417 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2414, file: !67, line: 29, size: 320, elements: !2418)
!2418 = !{!2419, !2421, !2422, !2423, !2424, !2425}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2417, file: !67, line: 30, baseType: !2420, size: 64)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2417, file: !67, line: 31, baseType: !424, size: 32, offset: 64)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2417, file: !67, line: 32, baseType: !424, size: 32, offset: 96)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2417, file: !67, line: 33, baseType: !424, size: 32, offset: 128)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2417, file: !67, line: 34, baseType: !430, size: 64, offset: 192)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2417, file: !67, line: 35, baseType: !2420, size: 64, offset: 256)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2414, file: !67, line: 46, baseType: !2427, size: 192)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2414, file: !67, line: 38, size: 192, elements: !2428)
!2428 = !{!2429, !2430, !2431, !2451}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2427, file: !67, line: 39, baseType: !2341, size: 32)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2427, file: !67, line: 40, baseType: !66, size: 32, offset: 32)
!2431 = !DIDerivedType(tag: DW_TAG_member, scope: !2427, file: !67, line: 41, baseType: !2432, size: 64, offset: 64)
!2432 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2427, file: !67, line: 41, size: 64, elements: !2433)
!2433 = !{!2434, !2442}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2432, file: !67, line: 42, baseType: !2435, size: 64)
!2435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 64)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2437, line: 7, size: 128, elements: !2438)
!2437 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2438 = !{!2439, !2441}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2436, file: !2437, line: 8, baseType: !2440, size: 64)
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !317, line: 93, baseType: !542)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2436, file: !2437, line: 9, baseType: !542, size: 64, offset: 64)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2432, file: !67, line: 43, baseType: !2443, size: 64)
!2443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 64)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2445, line: 7, size: 64, elements: !2446)
!2445 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2446 = !{!2447, !2450}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2444, file: !2445, line: 8, baseType: !2448, size: 32)
!2448 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2445, line: 5, baseType: !2449)
!2449 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !425, line: 20, baseType: !1837)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2444, file: !2445, line: 9, baseType: !2449, size: 32, offset: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2427, file: !67, line: 45, baseType: !430, size: 64, offset: 128)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2414, file: !67, line: 54, baseType: !2453, size: 256)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2414, file: !67, line: 48, size: 256, elements: !2454)
!2454 = !{!2455, !2458, !2459, !2460, !2461}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2453, file: !67, line: 49, baseType: !2456, size: 64)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 64)
!2457 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !67, line: 14, flags: DIFlagFwdDecl)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2453, file: !67, line: 50, baseType: !195, size: 32, offset: 64)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2453, file: !67, line: 51, baseType: !195, size: 32, offset: 96)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2453, file: !67, line: 52, baseType: !333, size: 64, offset: 128)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2453, file: !67, line: 53, baseType: !333, size: 64, offset: 192)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2229, file: !2230, line: 835, baseType: !2463, size: 32, offset: 5120)
!2463 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !230, line: 22, baseType: !2464)
!2464 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !317, line: 28, baseType: !195)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !2229, file: !2230, line: 836, baseType: !2463, size: 32, offset: 5152)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !2229, file: !2230, line: 840, baseType: !333, size: 64, offset: 5184)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !2229, file: !2230, line: 849, baseType: !2228, size: 64, offset: 5248)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2229, file: !2230, line: 852, baseType: !2228, size: 64, offset: 5312)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2229, file: !2230, line: 857, baseType: !229, size: 128, offset: 5376)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2229, file: !2230, line: 858, baseType: !229, size: 128, offset: 5504)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !2229, file: !2230, line: 859, baseType: !2228, size: 64, offset: 5632)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !2229, file: !2230, line: 867, baseType: !229, size: 128, offset: 5696)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !2229, file: !2230, line: 868, baseType: !229, size: 128, offset: 5824)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !2229, file: !2230, line: 871, baseType: !2475, size: 64, offset: 5952)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 64)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !95, line: 59, size: 768, elements: !2477)
!2477 = !{!2478, !2479, !2480, !2481, !2483, !2484, !2485, !2486}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2476, file: !95, line: 61, baseType: !1437, size: 32)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2476, file: !95, line: 62, baseType: !7, size: 32, offset: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2476, file: !95, line: 63, baseType: !243, offset: 64)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2476, file: !95, line: 65, baseType: !2482, size: 256, offset: 64)
!2482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !647, size: 256, elements: !1322)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2476, file: !95, line: 66, baseType: !647, size: 64, offset: 320)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2476, file: !95, line: 68, baseType: !1244, size: 128, offset: 384)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2476, file: !95, line: 69, baseType: !374, size: 128, align: 64, offset: 512)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2476, file: !95, line: 70, baseType: !2487, size: 128, offset: 640)
!2487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2488, size: 128, elements: !2376)
!2488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !95, line: 54, size: 128, elements: !2489)
!2489 = !{!2490, !2491}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2488, file: !95, line: 55, baseType: !195, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2488, file: !95, line: 56, baseType: !2492, size: 64, offset: 64)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 64)
!2493 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !95, line: 56, flags: DIFlagFwdDecl)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !2229, file: !2230, line: 872, baseType: !2495, size: 512, offset: 6016)
!2495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !651, size: 512, elements: !1322)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !2229, file: !2230, line: 873, baseType: !229, size: 128, offset: 6528)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !2229, file: !2230, line: 874, baseType: !229, size: 128, offset: 6656)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !2229, file: !2230, line: 876, baseType: !2499, size: 64, offset: 6784)
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 64)
!2500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2501, line: 26, size: 192, elements: !2502)
!2501 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2502 = !{!2503, !2504}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2500, file: !2501, line: 27, baseType: !7, size: 32)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2500, file: !2501, line: 28, baseType: !2505, size: 128, offset: 64)
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2506, line: 43, size: 128, elements: !2507)
!2506 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2507 = !{!2508, !2509}
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2505, file: !2506, line: 44, baseType: !849)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2505, file: !2506, line: 45, baseType: !229, size: 128)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !2229, file: !2230, line: 879, baseType: !731, size: 64, offset: 6848)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !2229, file: !2230, line: 882, baseType: !731, size: 64, offset: 6912)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2229, file: !2230, line: 884, baseType: !430, size: 64, offset: 6976)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2229, file: !2230, line: 885, baseType: !430, size: 64, offset: 7040)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2229, file: !2230, line: 890, baseType: !430, size: 64, offset: 7104)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2229, file: !2230, line: 891, baseType: !2516, size: 128, offset: 7168)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !2230, line: 242, size: 128, elements: !2517)
!2517 = !{!2518, !2519, !2520}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2516, file: !2230, line: 244, baseType: !430, size: 64)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2516, file: !2230, line: 245, baseType: !430, size: 64, offset: 64)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2516, file: !2230, line: 246, baseType: !849, offset: 128)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2229, file: !2230, line: 900, baseType: !333, size: 64, offset: 7296)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2229, file: !2230, line: 901, baseType: !333, size: 64, offset: 7360)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2229, file: !2230, line: 904, baseType: !430, size: 64, offset: 7424)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !2229, file: !2230, line: 907, baseType: !430, size: 64, offset: 7488)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2229, file: !2230, line: 910, baseType: !333, size: 64, offset: 7552)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2229, file: !2230, line: 911, baseType: !333, size: 64, offset: 7616)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2229, file: !2230, line: 914, baseType: !2528, size: 640, offset: 7680)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2529, line: 123, size: 640, elements: !2530)
!2529 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2530 = !{!2531, !2537, !2538}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2528, file: !2529, line: 124, baseType: !2532, size: 576)
!2532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2533, size: 576, elements: !285)
!2533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2529, line: 108, size: 192, elements: !2534)
!2534 = !{!2535, !2536}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2533, file: !2529, line: 109, baseType: !430, size: 64)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2533, file: !2529, line: 110, baseType: !2350, size: 128, offset: 64)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2528, file: !2529, line: 125, baseType: !7, size: 32, offset: 576)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2528, file: !2529, line: 126, baseType: !7, size: 32, offset: 608)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !2229, file: !2230, line: 917, baseType: !2540, size: 192, offset: 8320)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2529, line: 134, size: 192, elements: !2541)
!2541 = !{!2542, !2543}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2540, file: !2529, line: 135, baseType: !374, size: 128, align: 64)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2540, file: !2529, line: 136, baseType: !7, size: 32, offset: 128)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !2229, file: !2230, line: 923, baseType: !2545, size: 64, offset: 8512)
!2545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2546, size: 64)
!2546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2547)
!2547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2548, line: 111, size: 1280, elements: !2549)
!2548 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2549 = !{!2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2567, !2568, !2569, !2570, !2571, !2572, !2679, !2680, !2681, !2682, !2708, !2851, !2861}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2547, file: !2548, line: 112, baseType: !823, size: 32)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2547, file: !2548, line: 120, baseType: !444, size: 32, offset: 32)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2547, file: !2548, line: 121, baseType: !452, size: 32, offset: 64)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2547, file: !2548, line: 122, baseType: !444, size: 32, offset: 96)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2547, file: !2548, line: 123, baseType: !452, size: 32, offset: 128)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2547, file: !2548, line: 124, baseType: !444, size: 32, offset: 160)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2547, file: !2548, line: 125, baseType: !452, size: 32, offset: 192)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2547, file: !2548, line: 126, baseType: !444, size: 32, offset: 224)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2547, file: !2548, line: 127, baseType: !452, size: 32, offset: 256)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2547, file: !2548, line: 128, baseType: !7, size: 32, offset: 288)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2547, file: !2548, line: 129, baseType: !2561, size: 64, offset: 320)
!2561 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2562, line: 26, baseType: !2563)
!2562 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2562, line: 24, size: 64, elements: !2564)
!2564 = !{!2565}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2563, file: !2562, line: 25, baseType: !2566, size: 64)
!2566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 64, elements: !1414)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2547, file: !2548, line: 130, baseType: !2561, size: 64, offset: 384)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2547, file: !2548, line: 131, baseType: !2561, size: 64, offset: 448)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2547, file: !2548, line: 132, baseType: !2561, size: 64, offset: 512)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2547, file: !2548, line: 133, baseType: !2561, size: 64, offset: 576)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2547, file: !2548, line: 135, baseType: !436, size: 8, offset: 640)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2547, file: !2548, line: 137, baseType: !2573, size: 64, offset: 704)
!2573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2574, size: 64)
!2574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2575, line: 189, size: 1664, elements: !2576)
!2575 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2576 = !{!2577, !2578, !2581, !2586, !2587, !2590, !2591, !2596, !2597, !2598, !2599, !2601, !2602, !2603, !2604, !2605, !2643, !2664}
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2574, file: !2575, line: 190, baseType: !1437, size: 32)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2574, file: !2575, line: 191, baseType: !2579, size: 32, offset: 32)
!2579 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2575, line: 28, baseType: !2580)
!2580 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !230, line: 98, baseType: !2449)
!2581 = !DIDerivedType(tag: DW_TAG_member, scope: !2574, file: !2575, line: 192, baseType: !2582, size: 192, offset: 64)
!2582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2574, file: !2575, line: 192, size: 192, elements: !2583)
!2583 = !{!2584, !2585}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2582, file: !2575, line: 193, baseType: !229, size: 128)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2582, file: !2575, line: 194, baseType: !836, size: 192, align: 64)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2574, file: !2575, line: 199, baseType: !843, size: 256, offset: 256)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2574, file: !2575, line: 200, baseType: !2588, size: 64, offset: 512)
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 64)
!2589 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2575, line: 200, flags: DIFlagFwdDecl)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2574, file: !2575, line: 201, baseType: !209, size: 64, offset: 576)
!2591 = !DIDerivedType(tag: DW_TAG_member, scope: !2574, file: !2575, line: 202, baseType: !2592, size: 64, offset: 640)
!2592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2574, file: !2575, line: 202, size: 64, elements: !2593)
!2593 = !{!2594, !2595}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2592, file: !2575, line: 203, baseType: !548, size: 64)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2592, file: !2575, line: 204, baseType: !548, size: 64)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2574, file: !2575, line: 206, baseType: !548, size: 64, offset: 704)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2574, file: !2575, line: 207, baseType: !444, size: 32, offset: 768)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2574, file: !2575, line: 208, baseType: !452, size: 32, offset: 800)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2574, file: !2575, line: 209, baseType: !2600, size: 32, offset: 832)
!2600 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2575, line: 31, baseType: !568)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2574, file: !2575, line: 210, baseType: !325, size: 16, offset: 864)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2574, file: !2575, line: 211, baseType: !325, size: 16, offset: 880)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2574, file: !2575, line: 215, baseType: !999, size: 16, offset: 896)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2574, file: !2575, line: 222, baseType: !333, size: 64, offset: 960)
!2605 = !DIDerivedType(tag: DW_TAG_member, scope: !2574, file: !2575, line: 239, baseType: !2606, size: 320, offset: 1024)
!2606 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2574, file: !2575, line: 239, size: 320, elements: !2607)
!2607 = !{!2608, !2635}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2606, file: !2575, line: 240, baseType: !2609, size: 320)
!2609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2575, line: 108, size: 320, elements: !2610)
!2610 = !{!2611, !2612, !2624, !2627, !2634}
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2609, file: !2575, line: 110, baseType: !333, size: 64)
!2612 = !DIDerivedType(tag: DW_TAG_member, scope: !2609, file: !2575, line: 111, baseType: !2613, size: 64, offset: 64)
!2613 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2609, file: !2575, line: 111, size: 64, elements: !2614)
!2614 = !{!2615, !2623}
!2615 = !DIDerivedType(tag: DW_TAG_member, scope: !2613, file: !2575, line: 112, baseType: !2616, size: 64)
!2616 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2613, file: !2575, line: 112, size: 64, elements: !2617)
!2617 = !{!2618, !2619}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2616, file: !2575, line: 114, baseType: !935, size: 16)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2616, file: !2575, line: 115, baseType: !2620, size: 48, offset: 16)
!2620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 48, elements: !2621)
!2621 = !{!2622}
!2622 = !DISubrange(count: 6)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2613, file: !2575, line: 121, baseType: !333, size: 64)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2609, file: !2575, line: 123, baseType: !2625, size: 64, offset: 128)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 64)
!2626 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2575, line: 96, flags: DIFlagFwdDecl)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2609, file: !2575, line: 124, baseType: !2628, size: 64, offset: 192)
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2629, size: 64)
!2629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2575, line: 102, size: 192, elements: !2630)
!2630 = !{!2631, !2632, !2633}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2629, file: !2575, line: 103, baseType: !374, size: 128, align: 64)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2629, file: !2575, line: 104, baseType: !1437, size: 32, offset: 128)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2629, file: !2575, line: 105, baseType: !499, size: 8, offset: 160)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2609, file: !2575, line: 125, baseType: !225, size: 64, offset: 256)
!2635 = !DIDerivedType(tag: DW_TAG_member, scope: !2606, file: !2575, line: 241, baseType: !2636, size: 320)
!2636 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2606, file: !2575, line: 241, size: 320, elements: !2637)
!2637 = !{!2638, !2639, !2640, !2641, !2642}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2636, file: !2575, line: 242, baseType: !333, size: 64)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2636, file: !2575, line: 243, baseType: !333, size: 64, offset: 64)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2636, file: !2575, line: 244, baseType: !2625, size: 64, offset: 128)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2636, file: !2575, line: 245, baseType: !2628, size: 64, offset: 192)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2636, file: !2575, line: 246, baseType: !284, size: 64, offset: 256)
!2643 = !DIDerivedType(tag: DW_TAG_member, scope: !2574, file: !2575, line: 254, baseType: !2644, size: 256, offset: 1344)
!2644 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2574, file: !2575, line: 254, size: 256, elements: !2645)
!2645 = !{!2646, !2652}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2644, file: !2575, line: 255, baseType: !2647, size: 256)
!2647 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2575, line: 128, size: 256, elements: !2648)
!2648 = !{!2649, !2650}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2647, file: !2575, line: 129, baseType: !209, size: 64)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2647, file: !2575, line: 130, baseType: !2651, size: 256)
!2651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 256, elements: !1322)
!2652 = !DIDerivedType(tag: DW_TAG_member, scope: !2644, file: !2575, line: 256, baseType: !2653, size: 256)
!2653 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2644, file: !2575, line: 256, size: 256, elements: !2654)
!2654 = !{!2655, !2656}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2653, file: !2575, line: 258, baseType: !229, size: 128)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2653, file: !2575, line: 259, baseType: !2657, size: 128, offset: 128)
!2657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2658, line: 22, size: 128, elements: !2659)
!2658 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2659 = !{!2660, !2663}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2657, file: !2658, line: 23, baseType: !2661, size: 64)
!2661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2662, size: 64)
!2662 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2658, line: 23, flags: DIFlagFwdDecl)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2657, file: !2658, line: 24, baseType: !333, size: 64, offset: 64)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2574, file: !2575, line: 274, baseType: !2665, size: 64, offset: 1600)
!2665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2666, size: 64)
!2666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2575, line: 170, size: 192, elements: !2667)
!2667 = !{!2668, !2677, !2678}
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2666, file: !2575, line: 171, baseType: !2669, size: 64)
!2669 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2575, line: 165, baseType: !2670)
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 64)
!2671 = !DISubroutineType(types: !2672)
!2672 = !{!195, !2573, !2673, !2675, !2573}
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 64)
!2674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2626)
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 64)
!2676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2647)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2666, file: !2575, line: 172, baseType: !2573, size: 64, offset: 64)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2666, file: !2575, line: 173, baseType: !2625, size: 64, offset: 128)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2547, file: !2548, line: 138, baseType: !2573, size: 64, offset: 768)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2547, file: !2548, line: 139, baseType: !2573, size: 64, offset: 832)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2547, file: !2548, line: 140, baseType: !2573, size: 64, offset: 896)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2547, file: !2548, line: 145, baseType: !2683, size: 64, offset: 960)
!2683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2684, size: 64)
!2684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !2685, line: 13, size: 896, elements: !2686)
!2685 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!2686 = !{!2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2684, file: !2685, line: 14, baseType: !1437, size: 32)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !2684, file: !2685, line: 15, baseType: !823, size: 32, offset: 32)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !2684, file: !2685, line: 16, baseType: !823, size: 32, offset: 64)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !2684, file: !2685, line: 21, baseType: !753, size: 64, offset: 128)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !2684, file: !2685, line: 27, baseType: !333, size: 64, offset: 192)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !2684, file: !2685, line: 28, baseType: !333, size: 64, offset: 256)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !2684, file: !2685, line: 29, baseType: !753, size: 64, offset: 320)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !2684, file: !2685, line: 32, baseType: !651, size: 128, offset: 384)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2684, file: !2685, line: 33, baseType: !444, size: 32, offset: 512)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2684, file: !2685, line: 37, baseType: !753, size: 64, offset: 576)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !2684, file: !2685, line: 44, baseType: !2698, size: 256, offset: 640)
!2698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !2699, line: 15, size: 256, elements: !2700)
!2699 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!2700 = !{!2701, !2702, !2703, !2704, !2705, !2706, !2707}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2698, file: !2699, line: 16, baseType: !849)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2698, file: !2699, line: 18, baseType: !195, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !2698, file: !2699, line: 19, baseType: !195, size: 32, offset: 32)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !2698, file: !2699, line: 20, baseType: !195, size: 32, offset: 64)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !2698, file: !2699, line: 21, baseType: !195, size: 32, offset: 96)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2698, file: !2699, line: 22, baseType: !333, size: 64, offset: 128)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2698, file: !2699, line: 23, baseType: !333, size: 64, offset: 192)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2547, file: !2548, line: 146, baseType: !2709, size: 64, offset: 1024)
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 64)
!2710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !2711, line: 56, size: 4160, elements: !2712)
!2711 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2712 = !{!2713, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2750, !2751, !2752, !2753, !2754, !2755, !2836, !2837, !2849}
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !2710, file: !2711, line: 57, baseType: !2714, size: 576)
!2714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !2711, line: 23, size: 576, elements: !2715)
!2715 = !{!2716, !2717}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !2714, file: !2711, line: 24, baseType: !424, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, scope: !2714, file: !2711, line: 25, baseType: !2718, size: 512, offset: 64)
!2718 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2714, file: !2711, line: 25, size: 512, elements: !2719)
!2719 = !{!2720, !2727}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !2718, file: !2711, line: 26, baseType: !2721, size: 480)
!2721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2722, size: 480, elements: !1892)
!2722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !2711, line: 17, size: 96, elements: !2723)
!2723 = !{!2724, !2725, !2726}
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2722, file: !2711, line: 18, baseType: !424, size: 32)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !2722, file: !2711, line: 19, baseType: !424, size: 32, offset: 32)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2722, file: !2711, line: 20, baseType: !424, size: 32, offset: 64)
!2727 = !DIDerivedType(tag: DW_TAG_member, scope: !2718, file: !2711, line: 27, baseType: !2728, size: 128)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2718, file: !2711, line: 27, size: 128, elements: !2729)
!2729 = !{!2730, !2732}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !2728, file: !2711, line: 28, baseType: !2731, size: 64)
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2722, size: 64)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !2728, file: !2711, line: 29, baseType: !2731, size: 64, offset: 64)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !2710, file: !2711, line: 58, baseType: !2714, size: 576, offset: 576)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !2710, file: !2711, line: 59, baseType: !2714, size: 576, offset: 1152)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2710, file: !2711, line: 60, baseType: !823, size: 32, offset: 1728)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2710, file: !2711, line: 61, baseType: !2709, size: 64, offset: 1792)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2710, file: !2711, line: 62, baseType: !195, size: 32, offset: 1856)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2710, file: !2711, line: 63, baseType: !444, size: 32, offset: 1888)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2710, file: !2711, line: 64, baseType: !452, size: 32, offset: 1920)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2710, file: !2711, line: 65, baseType: !2741, size: 192, offset: 1984)
!2741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !2742, line: 7, size: 192, elements: !2743)
!2742 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!2743 = !{!2744, !2745, !2749}
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !2741, file: !2742, line: 8, baseType: !753, size: 64)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2741, file: !2742, line: 9, baseType: !2746, size: 64, offset: 64)
!2746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2747, size: 64)
!2747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2748)
!2748 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !2742, line: 5, flags: DIFlagFwdDecl)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !2741, file: !2742, line: 10, baseType: !7, size: 32, offset: 128)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2710, file: !2711, line: 66, baseType: !333, size: 64, offset: 2176)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !2710, file: !2711, line: 74, baseType: !229, size: 128, offset: 2240)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !2710, file: !2711, line: 75, baseType: !2573, size: 64, offset: 2368)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !2710, file: !2711, line: 76, baseType: !843, size: 256, offset: 2432)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2710, file: !2711, line: 83, baseType: !1108, size: 256, offset: 2688)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2710, file: !2711, line: 85, baseType: !2756, size: 768, offset: 2944)
!2756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !2757, line: 156, size: 768, elements: !2758)
!2757 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2758 = !{!2759, !2764}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !2756, file: !2757, line: 157, baseType: !2760, size: 64)
!2760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2761, size: 64)
!2761 = !DISubroutineType(types: !2762)
!2762 = !{!195, !2763}
!2763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 64)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2756, file: !2757, line: 158, baseType: !2765, size: 704, offset: 64)
!2765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !2757, line: 150, size: 704, elements: !2766)
!2766 = !{!2767, !2835}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2765, file: !2757, line: 152, baseType: !2768, size: 640)
!2768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !2757, line: 131, size: 640, elements: !2769)
!2769 = !{!2770, !2803, !2804, !2805, !2825, !2826, !2828, !2834}
!2770 = !DIDerivedType(tag: DW_TAG_member, scope: !2768, file: !2757, line: 132, baseType: !2771, size: 192)
!2771 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2768, file: !2757, line: 132, size: 192, elements: !2772)
!2772 = !{!2773, !2802}
!2773 = !DIDerivedType(tag: DW_TAG_member, scope: !2771, file: !2757, line: 133, baseType: !2774, size: 192)
!2774 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2771, file: !2757, line: 133, size: 192, elements: !2775)
!2775 = !{!2776, !2799, !2800, !2801}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !2774, file: !2757, line: 134, baseType: !2777, size: 64)
!2777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2778, size: 64)
!2778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !2757, line: 112, size: 512, elements: !2779)
!2779 = !{!2780, !2781, !2782, !2783, !2784, !2785, !2791, !2797, !2798}
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !2778, file: !2757, line: 113, baseType: !225, size: 64)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2778, file: !2757, line: 114, baseType: !209, size: 64, offset: 64)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !2778, file: !2757, line: 115, baseType: !195, size: 32, offset: 128)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2778, file: !2757, line: 116, baseType: !324, size: 16, offset: 160)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2778, file: !2757, line: 117, baseType: !2777, size: 64, offset: 192)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !2778, file: !2757, line: 118, baseType: !2786, size: 64, offset: 256)
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 64)
!2787 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !2757, line: 47, baseType: !2788)
!2788 = !DISubroutineType(types: !2789)
!2789 = !{!195, !2777, !195, !209, !2790, !771}
!2790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2778, file: !2757, line: 119, baseType: !2792, size: 64, offset: 320)
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 64)
!2793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !2757, line: 94, size: 192, elements: !2794)
!2794 = !{!2795, !2796}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2793, file: !2757, line: 95, baseType: !823, size: 32)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2793, file: !2757, line: 96, baseType: !1244, size: 128, offset: 64)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !2778, file: !2757, line: 120, baseType: !209, size: 64, offset: 384)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !2778, file: !2757, line: 121, baseType: !209, size: 64, offset: 448)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2774, file: !2757, line: 135, baseType: !195, size: 32, offset: 64)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2774, file: !2757, line: 136, baseType: !195, size: 32, offset: 96)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !2774, file: !2757, line: 137, baseType: !195, size: 32, offset: 128)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2771, file: !2757, line: 139, baseType: !374, size: 128, align: 64)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !2768, file: !2757, line: 141, baseType: !2499, size: 64, offset: 192)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !2768, file: !2757, line: 142, baseType: !2777, size: 64, offset: 256)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2768, file: !2757, line: 143, baseType: !2806, size: 64, offset: 320)
!2806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2807, size: 64)
!2807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !2757, line: 161, size: 960, elements: !2808)
!2808 = !{!2809, !2810, !2814, !2821}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !2807, file: !2757, line: 162, baseType: !2756, size: 768)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2807, file: !2757, line: 163, baseType: !2811, size: 64, offset: 768)
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2812, size: 64)
!2812 = !DISubroutineType(types: !2813)
!2813 = !{!2763, !2806}
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !2807, file: !2757, line: 164, baseType: !2815, size: 64, offset: 832)
!2815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2816, size: 64)
!2816 = !DISubroutineType(types: !2817)
!2817 = !{null, !2818, !2777, !2819, !2820}
!2818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2768, size: 64)
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !2807, file: !2757, line: 167, baseType: !2822, size: 64, offset: 896)
!2822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2823, size: 64)
!2823 = !DISubroutineType(types: !2824)
!2824 = !{!195, !2818, !2777}
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2768, file: !2757, line: 144, baseType: !2763, size: 64, offset: 384)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2768, file: !2757, line: 145, baseType: !2827, size: 64, offset: 448)
!2827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 64)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2768, file: !2757, line: 146, baseType: !2829, size: 64, offset: 512)
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 64)
!2830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !2757, line: 124, size: 256, elements: !2831)
!2831 = !{!2832, !2833}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2830, file: !2757, line: 125, baseType: !836, size: 192, align: 64)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2830, file: !2757, line: 126, baseType: !2818, size: 64, offset: 192)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2768, file: !2757, line: 147, baseType: !647, size: 64, offset: 576)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2765, file: !2757, line: 153, baseType: !832, size: 64, offset: 640)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2710, file: !2711, line: 86, baseType: !2818, size: 64, offset: 3712)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2710, file: !2711, line: 88, baseType: !2838, size: 64, offset: 3776)
!2838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2839, size: 64)
!2839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !2711, line: 92, size: 576, elements: !2840)
!2840 = !{!2841, !2842, !2843, !2844, !2845}
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2839, file: !2711, line: 93, baseType: !651, size: 128)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2839, file: !2711, line: 94, baseType: !2709, size: 64, offset: 128)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2839, file: !2711, line: 95, baseType: !444, size: 32, offset: 192)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2839, file: !2711, line: 96, baseType: !195, size: 32, offset: 224)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !2839, file: !2711, line: 97, baseType: !2846, size: 320, offset: 256)
!2846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !823, size: 320, elements: !2847)
!2847 = !{!2848}
!2848 = !DISubrange(count: 10)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !2710, file: !2711, line: 89, baseType: !2850, size: 320, offset: 3840)
!2850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 320, elements: !2847)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2547, file: !2548, line: 147, baseType: !2852, size: 64, offset: 1088)
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!2853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2548, line: 25, size: 64, elements: !2854)
!2854 = !{!2855, !2856, !2857}
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2853, file: !2548, line: 26, baseType: !823, size: 32)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2853, file: !2548, line: 27, baseType: !195, size: 32, offset: 32)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2853, file: !2548, line: 28, baseType: !2858, offset: 64)
!2858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, elements: !2859)
!2859 = !{!2860}
!2860 = !DISubrange(count: 0)
!2861 = !DIDerivedType(tag: DW_TAG_member, scope: !2547, file: !2548, line: 149, baseType: !2862, size: 128, offset: 1152)
!2862 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2547, file: !2548, line: 149, size: 128, elements: !2863)
!2863 = !{!2864, !2865}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2862, file: !2548, line: 150, baseType: !195, size: 32)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2862, file: !2548, line: 151, baseType: !374, size: 128, align: 64)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !2229, file: !2230, line: 926, baseType: !2545, size: 64, offset: 8576)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !2229, file: !2230, line: 929, baseType: !2545, size: 64, offset: 8640)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !2229, file: !2230, line: 933, baseType: !2573, size: 64, offset: 8704)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !2229, file: !2230, line: 943, baseType: !2870, size: 128, offset: 8768)
!2870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 128, elements: !1764)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !2229, file: !2230, line: 945, baseType: !2872, size: 64, offset: 8896)
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2873, size: 64)
!2873 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !2230, line: 49, flags: DIFlagFwdDecl)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !2229, file: !2230, line: 956, baseType: !2875, size: 64, offset: 8960)
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2876, size: 64)
!2876 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !2230, line: 45, flags: DIFlagFwdDecl)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2229, file: !2230, line: 959, baseType: !2878, size: 64, offset: 9024)
!2878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2879, size: 64)
!2879 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !2230, line: 959, flags: DIFlagFwdDecl)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !2229, file: !2230, line: 962, baseType: !2881, size: 64, offset: 9088)
!2881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2882, size: 64)
!2882 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !2230, line: 66, flags: DIFlagFwdDecl)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !2229, file: !2230, line: 966, baseType: !2884, size: 64, offset: 9152)
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2885, size: 64)
!2885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2886, line: 31, size: 576, elements: !2887)
!2886 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!2887 = !{!2888, !2889, !2892, !2895, !2898, !2899, !2902, !2905, !2906}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2885, file: !2886, line: 32, baseType: !823, size: 32)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !2885, file: !2886, line: 33, baseType: !2890, size: 64, offset: 64)
!2890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2891, size: 64)
!2891 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !2886, line: 9, flags: DIFlagFwdDecl)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !2885, file: !2886, line: 34, baseType: !2893, size: 64, offset: 128)
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 64)
!2894 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !2886, line: 10, flags: DIFlagFwdDecl)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !2885, file: !2886, line: 35, baseType: !2896, size: 64, offset: 192)
!2896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2897, size: 64)
!2897 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !2886, line: 8, flags: DIFlagFwdDecl)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !2885, file: !2886, line: 36, baseType: !2492, size: 64, offset: 256)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !2885, file: !2886, line: 37, baseType: !2900, size: 64, offset: 320)
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 64)
!2901 = !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !2575, line: 34, flags: DIFlagFwdDecl)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !2885, file: !2886, line: 38, baseType: !2903, size: 64, offset: 384)
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2904, size: 64)
!2904 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !2886, line: 38, flags: DIFlagFwdDecl)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !2885, file: !2886, line: 39, baseType: !2903, size: 64, offset: 448)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !2885, file: !2886, line: 40, baseType: !2907, size: 64, offset: 512)
!2907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2908, size: 64)
!2908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !2909, line: 856, size: 448, elements: !2910)
!2909 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!2910 = !{!2911, !2912, !2913, !2914, !2915}
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2908, file: !2909, line: 857, baseType: !1437, size: 32)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2908, file: !2909, line: 858, baseType: !2741, size: 192, offset: 64)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2908, file: !2909, line: 859, baseType: !2709, size: 64, offset: 256)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2908, file: !2909, line: 860, baseType: !2838, size: 64, offset: 320)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !2908, file: !2909, line: 861, baseType: !2916, size: 64, offset: 384)
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2917, size: 64)
!2917 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !2918, line: 16, flags: DIFlagFwdDecl)
!2918 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2229, file: !2230, line: 969, baseType: !2920, size: 64, offset: 9216)
!2920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2921, size: 64)
!2921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !2922, line: 82, size: 7296, elements: !2923)
!2922 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!2923 = !{!2924, !2925, !2926, !2927, !2928, !2929, !2930, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2959, !2968, !2969, !2971, !2972, !2973, !2976, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3006, !3007, !3014, !3015, !3016, !3017, !3018, !3019}
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !2921, file: !2922, line: 83, baseType: !1437, size: 32)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2921, file: !2922, line: 84, baseType: !823, size: 32, offset: 32)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2921, file: !2922, line: 85, baseType: !195, size: 32, offset: 64)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !2921, file: !2922, line: 86, baseType: !229, size: 128, offset: 128)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !2921, file: !2922, line: 88, baseType: !1244, size: 128, offset: 256)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !2921, file: !2922, line: 91, baseType: !2228, size: 64, offset: 384)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !2921, file: !2922, line: 94, baseType: !2931, size: 192, offset: 448)
!2931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !2932, line: 30, size: 192, elements: !2933)
!2932 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!2933 = !{!2934, !2935}
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2931, file: !2932, line: 31, baseType: !229, size: 128)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2931, file: !2932, line: 32, baseType: !2936, size: 64, offset: 128)
!2936 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !2937, line: 25, baseType: !2938)
!2937 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!2938 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2937, line: 23, size: 64, elements: !2939)
!2939 = !{!2940}
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2938, file: !2937, line: 24, baseType: !2375, size: 64)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !2921, file: !2922, line: 97, baseType: !647, size: 64, offset: 640)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !2921, file: !2922, line: 100, baseType: !195, size: 32, offset: 704)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !2921, file: !2922, line: 106, baseType: !195, size: 32, offset: 736)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !2921, file: !2922, line: 107, baseType: !2228, size: 64, offset: 768)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !2921, file: !2922, line: 110, baseType: !195, size: 32, offset: 832)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2921, file: !2922, line: 111, baseType: !7, size: 32, offset: 864)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !2921, file: !2922, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !2921, file: !2922, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !2921, file: !2922, line: 128, baseType: !195, size: 32, offset: 928)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !2921, file: !2922, line: 129, baseType: !229, size: 128, offset: 960)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !2921, file: !2922, line: 132, baseType: !2299, size: 512, offset: 1088)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !2921, file: !2922, line: 133, baseType: !2307, size: 64, offset: 1600)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !2921, file: !2922, line: 140, baseType: !2954, size: 256, offset: 1664)
!2954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2955, size: 256, elements: !1414)
!2955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !2922, line: 38, size: 128, elements: !2956)
!2956 = !{!2957, !2958}
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2955, file: !2922, line: 39, baseType: !430, size: 64)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2955, file: !2922, line: 40, baseType: !430, size: 64, offset: 64)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !2921, file: !2922, line: 146, baseType: !2960, size: 192, offset: 1920)
!2960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !2922, line: 66, size: 192, elements: !2961)
!2961 = !{!2962}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !2960, file: !2922, line: 67, baseType: !2963, size: 192)
!2963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !2922, line: 47, size: 192, elements: !2964)
!2964 = !{!2965, !2966, !2967}
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2963, file: !2922, line: 48, baseType: !755, size: 64)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2963, file: !2922, line: 49, baseType: !755, size: 64, offset: 64)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2963, file: !2922, line: 50, baseType: !755, size: 64, offset: 128)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2921, file: !2922, line: 150, baseType: !2528, size: 640, offset: 2112)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !2921, file: !2922, line: 153, baseType: !2970, size: 256, offset: 2752)
!2970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2475, size: 256, elements: !1322)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !2921, file: !2922, line: 159, baseType: !2475, size: 64, offset: 3008)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !2921, file: !2922, line: 162, baseType: !195, size: 32, offset: 3072)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2921, file: !2922, line: 164, baseType: !2974, size: 64, offset: 3136)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 64)
!2975 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !2922, line: 164, flags: DIFlagFwdDecl)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !2921, file: !2922, line: 175, baseType: !2977, size: 32, offset: 3200)
!2977 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !397, line: 805, baseType: !2978)
!2978 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !397, line: 798, size: 32, elements: !2979)
!2979 = !{!2980, !2981}
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2978, file: !397, line: 803, baseType: !396, size: 32)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2978, file: !397, line: 804, baseType: !243, offset: 32)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2921, file: !2922, line: 176, baseType: !430, size: 64, offset: 3264)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2921, file: !2922, line: 176, baseType: !430, size: 64, offset: 3328)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !2921, file: !2922, line: 176, baseType: !430, size: 64, offset: 3392)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !2921, file: !2922, line: 176, baseType: !430, size: 64, offset: 3456)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2921, file: !2922, line: 177, baseType: !430, size: 64, offset: 3520)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !2921, file: !2922, line: 178, baseType: !430, size: 64, offset: 3584)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2921, file: !2922, line: 179, baseType: !2516, size: 128, offset: 3648)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2921, file: !2922, line: 180, baseType: !333, size: 64, offset: 3776)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2921, file: !2922, line: 180, baseType: !333, size: 64, offset: 3840)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !2921, file: !2922, line: 180, baseType: !333, size: 64, offset: 3904)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !2921, file: !2922, line: 180, baseType: !333, size: 64, offset: 3968)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2921, file: !2922, line: 181, baseType: !333, size: 64, offset: 4032)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2921, file: !2922, line: 181, baseType: !333, size: 64, offset: 4096)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !2921, file: !2922, line: 181, baseType: !333, size: 64, offset: 4160)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !2921, file: !2922, line: 181, baseType: !333, size: 64, offset: 4224)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !2921, file: !2922, line: 182, baseType: !333, size: 64, offset: 4288)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !2921, file: !2922, line: 182, baseType: !333, size: 64, offset: 4352)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !2921, file: !2922, line: 182, baseType: !333, size: 64, offset: 4416)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !2921, file: !2922, line: 182, baseType: !333, size: 64, offset: 4480)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !2921, file: !2922, line: 183, baseType: !333, size: 64, offset: 4544)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !2921, file: !2922, line: 183, baseType: !333, size: 64, offset: 4608)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2921, file: !2922, line: 184, baseType: !3004, offset: 4672)
!3004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3005, line: 12, elements: !257)
!3005 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !2921, file: !2922, line: 192, baseType: !432, size: 64, offset: 4672)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !2921, file: !2922, line: 203, baseType: !3008, size: 2048, offset: 4736)
!3008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3009, size: 2048, elements: !1764)
!3009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3010, line: 43, size: 128, elements: !3011)
!3010 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3011 = !{!3012, !3013}
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3009, file: !3010, line: 44, baseType: !332, size: 64)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3009, file: !3010, line: 45, baseType: !332, size: 64, offset: 64)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !2921, file: !2922, line: 220, baseType: !499, size: 8, offset: 6784)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !2921, file: !2922, line: 221, baseType: !999, size: 16, offset: 6800)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !2921, file: !2922, line: 222, baseType: !999, size: 16, offset: 6816)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !2921, file: !2922, line: 224, baseType: !1995, size: 64, offset: 6848)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !2921, file: !2922, line: 227, baseType: !749, size: 192, offset: 6912)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !2921, file: !2922, line: 233, baseType: !749, size: 192, offset: 7104)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !2229, file: !2230, line: 970, baseType: !3021, size: 64, offset: 9280)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3022, size: 64)
!3022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !2922, line: 20, size: 16576, elements: !3023)
!3023 = !{!3024, !3025, !3026, !3027}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3022, file: !2922, line: 21, baseType: !243)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3022, file: !2922, line: 22, baseType: !1437, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3022, file: !2922, line: 23, baseType: !1244, size: 128, offset: 64)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3022, file: !2922, line: 24, baseType: !3028, size: 16384, offset: 192)
!3028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3029, size: 16384, elements: !289)
!3029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !2932, line: 49, size: 256, elements: !3030)
!3030 = !{!3031}
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3029, file: !2932, line: 50, baseType: !3032, size: 256)
!3032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !2932, line: 35, size: 256, elements: !3033)
!3033 = !{!3034, !3041, !3042, !3048}
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3032, file: !2932, line: 37, baseType: !3035, size: 64)
!3035 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3036, line: 19, baseType: !3037)
!3036 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3038, size: 64)
!3038 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3036, line: 18, baseType: !3039)
!3039 = !DISubroutineType(types: !3040)
!3040 = !{null, !195}
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3032, file: !2932, line: 38, baseType: !333, size: 64, offset: 64)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3032, file: !2932, line: 44, baseType: !3043, size: 64, offset: 128)
!3043 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3036, line: 22, baseType: !3044)
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 64)
!3045 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3036, line: 21, baseType: !3046)
!3046 = !DISubroutineType(types: !3047)
!3047 = !{null}
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3032, file: !2932, line: 46, baseType: !2936, size: 64, offset: 192)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !2229, file: !2230, line: 971, baseType: !2936, size: 64, offset: 9344)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !2229, file: !2230, line: 972, baseType: !2936, size: 64, offset: 9408)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !2229, file: !2230, line: 974, baseType: !2936, size: 64, offset: 9472)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2229, file: !2230, line: 975, baseType: !2931, size: 192, offset: 9536)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !2229, file: !2230, line: 976, baseType: !333, size: 64, offset: 9728)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !2229, file: !2230, line: 977, baseType: !330, size: 64, offset: 9792)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !2229, file: !2230, line: 978, baseType: !7, size: 32, offset: 9856)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !2229, file: !2230, line: 980, baseType: !377, size: 64, offset: 9920)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !2229, file: !2230, line: 989, baseType: !3058, size: 128, offset: 9984)
!3058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3059, line: 35, size: 128, elements: !3060)
!3059 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3060 = !{!3061, !3062, !3063}
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3058, file: !3059, line: 36, baseType: !195, size: 32)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3058, file: !3059, line: 37, baseType: !823, size: 32, offset: 32)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3058, file: !3059, line: 38, baseType: !3064, size: 64, offset: 64)
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 64)
!3065 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3059, line: 23, flags: DIFlagFwdDecl)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !2229, file: !2230, line: 992, baseType: !430, size: 64, offset: 10112)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !2229, file: !2230, line: 993, baseType: !430, size: 64, offset: 10176)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !2229, file: !2230, line: 996, baseType: !243, offset: 10240)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !2229, file: !2230, line: 999, baseType: !849, offset: 10240)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !2229, file: !2230, line: 1001, baseType: !3071, size: 64, offset: 10240)
!3071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !2230, line: 636, size: 64, elements: !3072)
!3072 = !{!3073}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3071, file: !2230, line: 637, baseType: !3074, size: 64)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3071, size: 64)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !2229, file: !2230, line: 1005, baseType: !828, size: 128, offset: 10304)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !2229, file: !2230, line: 1007, baseType: !2228, size: 64, offset: 10432)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !2229, file: !2230, line: 1009, baseType: !3078, size: 64, offset: 10496)
!3078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3079, size: 64)
!3079 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !2230, line: 1009, flags: DIFlagFwdDecl)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !2229, file: !2230, line: 1043, baseType: !209, size: 64, offset: 10560)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !2229, file: !2230, line: 1046, baseType: !3082, size: 64, offset: 10624)
!3082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !2229, file: !2230, line: 1050, baseType: !3084, size: 64, offset: 10688)
!3084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3085, size: 64)
!3085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !19, line: 1236, size: 320, elements: !3086)
!3086 = !{!3087, !3088, !3089, !3090, !3091}
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !3085, file: !19, line: 1237, baseType: !229, size: 128)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !3085, file: !19, line: 1238, baseType: !229, size: 128, offset: 128)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !3085, file: !19, line: 1239, baseType: !325, size: 16, offset: 256)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !3085, file: !19, line: 1240, baseType: !499, size: 8, offset: 272)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !3085, file: !19, line: 1241, baseType: !499, size: 8, offset: 280)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !2229, file: !2230, line: 1054, baseType: !3093, size: 64, offset: 10752)
!3093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3094, size: 64)
!3094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !995, line: 131, size: 64, elements: !3095)
!3095 = !{!3096}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "reclaimed_slab", scope: !3094, file: !995, line: 132, baseType: !333, size: 64)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2229, file: !2230, line: 1056, baseType: !1618, size: 64, offset: 10816)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !2229, file: !2230, line: 1058, baseType: !1389, size: 64, offset: 10880)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !2229, file: !2230, line: 1061, baseType: !3100, size: 64, offset: 10944)
!3100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3101, size: 64)
!3101 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !2230, line: 43, flags: DIFlagFwdDecl)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !2229, file: !2230, line: 1064, baseType: !333, size: 64, offset: 11008)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !2229, file: !2230, line: 1065, baseType: !3104, size: 64, offset: 11072)
!3104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3105, size: 64)
!3105 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !2932, line: 14, baseType: !3106)
!3106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !2932, line: 12, size: 384, elements: !3107)
!3107 = !{!3108}
!3108 = !DIDerivedType(tag: DW_TAG_member, scope: !3106, file: !2932, line: 13, baseType: !3109, size: 384)
!3109 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3106, file: !2932, line: 13, size: 384, elements: !3110)
!3110 = !{!3111, !3112, !3113, !3114}
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3109, file: !2932, line: 13, baseType: !195, size: 32)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3109, file: !2932, line: 13, baseType: !195, size: 32, offset: 32)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3109, file: !2932, line: 13, baseType: !195, size: 32, offset: 64)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3109, file: !2932, line: 13, baseType: !3115, size: 256, offset: 128)
!3115 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3116, line: 32, size: 256, elements: !3117)
!3116 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3117 = !{!3118, !3123, !3136, !3142, !3151, !3171, !3176}
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3115, file: !3116, line: 37, baseType: !3119, size: 64)
!3119 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3115, file: !3116, line: 34, size: 64, elements: !3120)
!3120 = !{!3121, !3122}
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3119, file: !3116, line: 35, baseType: !2464, size: 32)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3119, file: !3116, line: 36, baseType: !450, size: 32, offset: 32)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3115, file: !3116, line: 45, baseType: !3124, size: 192)
!3124 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3115, file: !3116, line: 40, size: 192, elements: !3125)
!3125 = !{!3126, !3128, !3129, !3135}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3124, file: !3116, line: 41, baseType: !3127, size: 32)
!3127 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !317, line: 95, baseType: !195)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3124, file: !3116, line: 42, baseType: !195, size: 32, offset: 32)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3124, file: !3116, line: 43, baseType: !3130, size: 64, offset: 64)
!3130 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3116, line: 11, baseType: !3131)
!3131 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3116, line: 8, size: 64, elements: !3132)
!3132 = !{!3133, !3134}
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3131, file: !3116, line: 9, baseType: !195, size: 32)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3131, file: !3116, line: 10, baseType: !209, size: 64)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3124, file: !3116, line: 44, baseType: !195, size: 32, offset: 128)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3115, file: !3116, line: 52, baseType: !3137, size: 128)
!3137 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3115, file: !3116, line: 48, size: 128, elements: !3138)
!3138 = !{!3139, !3140, !3141}
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3137, file: !3116, line: 49, baseType: !2464, size: 32)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3137, file: !3116, line: 50, baseType: !450, size: 32, offset: 32)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3137, file: !3116, line: 51, baseType: !3130, size: 64, offset: 64)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3115, file: !3116, line: 61, baseType: !3143, size: 256)
!3143 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3115, file: !3116, line: 55, size: 256, elements: !3144)
!3144 = !{!3145, !3146, !3147, !3148, !3150}
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3143, file: !3116, line: 56, baseType: !2464, size: 32)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3143, file: !3116, line: 57, baseType: !450, size: 32, offset: 32)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3143, file: !3116, line: 58, baseType: !195, size: 32, offset: 64)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3143, file: !3116, line: 59, baseType: !3149, size: 64, offset: 128)
!3149 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !317, line: 94, baseType: !318)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3143, file: !3116, line: 60, baseType: !3149, size: 64, offset: 192)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3115, file: !3116, line: 95, baseType: !3152, size: 256)
!3152 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3115, file: !3116, line: 64, size: 256, elements: !3153)
!3153 = !{!3154, !3155}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3152, file: !3116, line: 65, baseType: !209, size: 64)
!3155 = !DIDerivedType(tag: DW_TAG_member, scope: !3152, file: !3116, line: 77, baseType: !3156, size: 192, offset: 64)
!3156 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3152, file: !3116, line: 77, size: 192, elements: !3157)
!3157 = !{!3158, !3159, !3166}
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3156, file: !3116, line: 82, baseType: !999, size: 16)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3156, file: !3116, line: 88, baseType: !3160, size: 192)
!3160 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3156, file: !3116, line: 84, size: 192, elements: !3161)
!3161 = !{!3162, !3164, !3165}
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3160, file: !3116, line: 85, baseType: !3163, size: 64)
!3163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 64, elements: !2337)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3160, file: !3116, line: 86, baseType: !209, size: 64, offset: 64)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3160, file: !3116, line: 87, baseType: !209, size: 64, offset: 128)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3156, file: !3116, line: 93, baseType: !3167, size: 96)
!3167 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3156, file: !3116, line: 90, size: 96, elements: !3168)
!3168 = !{!3169, !3170}
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3167, file: !3116, line: 91, baseType: !3163, size: 64)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3167, file: !3116, line: 92, baseType: !426, size: 32, offset: 64)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3115, file: !3116, line: 101, baseType: !3172, size: 128)
!3172 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3115, file: !3116, line: 98, size: 128, elements: !3173)
!3173 = !{!3174, !3175}
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3172, file: !3116, line: 99, baseType: !157, size: 64)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3172, file: !3116, line: 100, baseType: !195, size: 32, offset: 64)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3115, file: !3116, line: 108, baseType: !3177, size: 128)
!3177 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3115, file: !3116, line: 104, size: 128, elements: !3178)
!3178 = !{!3179, !3180, !3181}
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3177, file: !3116, line: 105, baseType: !209, size: 64)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3177, file: !3116, line: 106, baseType: !195, size: 32, offset: 64)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3177, file: !3116, line: 107, baseType: !7, size: 32, offset: 96)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2229, file: !2230, line: 1067, baseType: !3004, offset: 11136)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !2229, file: !2230, line: 1099, baseType: !3184, size: 64, offset: 11136)
!3184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3185, size: 64)
!3185 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !2230, line: 56, flags: DIFlagFwdDecl)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !2229, file: !2230, line: 1103, baseType: !229, size: 128, offset: 11200)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !2229, file: !2230, line: 1104, baseType: !3188, size: 64, offset: 11328)
!3188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3189, size: 64)
!3189 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !2230, line: 46, flags: DIFlagFwdDecl)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !2229, file: !2230, line: 1105, baseType: !749, size: 192, offset: 11392)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !2229, file: !2230, line: 1106, baseType: !7, size: 32, offset: 11584)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !2229, file: !2230, line: 1109, baseType: !3193, size: 128, offset: 11648)
!3193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3194, size: 128, elements: !1414)
!3194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3195, size: 64)
!3195 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !2230, line: 51, flags: DIFlagFwdDecl)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !2229, file: !2230, line: 1110, baseType: !749, size: 192, offset: 11776)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !2229, file: !2230, line: 1111, baseType: !229, size: 128, offset: 11968)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !2229, file: !2230, line: 1173, baseType: !3199, size: 64, offset: 12096)
!3199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3200, size: 64)
!3200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3201, line: 62, size: 256, align: 256, elements: !3202)
!3201 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3202 = !{!3203, !3204, !3205, !3210}
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3200, file: !3201, line: 75, baseType: !426, size: 32)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3200, file: !3201, line: 90, baseType: !426, size: 32, offset: 32)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3200, file: !3201, line: 124, baseType: !3206, size: 64, offset: 64)
!3206 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3200, file: !3201, line: 109, size: 64, elements: !3207)
!3207 = !{!3208, !3209}
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3206, file: !3201, line: 110, baseType: !431, size: 64)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3206, file: !3201, line: 112, baseType: !431, size: 64)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3200, file: !3201, line: 144, baseType: !426, size: 32, offset: 128)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !2229, file: !2230, line: 1174, baseType: !424, size: 32, offset: 12160)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !2229, file: !2230, line: 1179, baseType: !333, size: 64, offset: 12224)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !2229, file: !2230, line: 1182, baseType: !3214, size: 128, offset: 12288)
!3214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2172, line: 76, size: 128, elements: !3215)
!3215 = !{!3216, !3221, !3222}
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3214, file: !2172, line: 85, baseType: !3217, size: 64)
!3217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !3218, line: 7, size: 64, elements: !3219)
!3218 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!3219 = !{!3220}
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3217, file: !3218, line: 12, baseType: !2372, size: 64)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !3214, file: !2172, line: 88, baseType: !499, size: 8, offset: 64)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !3214, file: !2172, line: 95, baseType: !499, size: 8, offset: 72)
!3223 = !DIDerivedType(tag: DW_TAG_member, scope: !2229, file: !2230, line: 1184, baseType: !3224, size: 128, offset: 12416)
!3224 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2229, file: !2230, line: 1184, size: 128, elements: !3225)
!3225 = !{!3226, !3227}
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !3224, file: !2230, line: 1185, baseType: !1437, size: 32)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3224, file: !2230, line: 1186, baseType: !374, size: 128, align: 64)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !2229, file: !2230, line: 1190, baseType: !3229, size: 64, offset: 12544)
!3229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3230, size: 64)
!3230 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !2230, line: 53, flags: DIFlagFwdDecl)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !2229, file: !2230, line: 1192, baseType: !3232, size: 128, offset: 12608)
!3232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2172, line: 64, size: 128, elements: !3233)
!3233 = !{!3234, !3235, !3236}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !3232, file: !2172, line: 65, baseType: !796, size: 64)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3232, file: !2172, line: 67, baseType: !426, size: 32, offset: 64)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3232, file: !2172, line: 68, baseType: !426, size: 32, offset: 96)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !2229, file: !2230, line: 1206, baseType: !195, size: 32, offset: 12736)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !2229, file: !2230, line: 1207, baseType: !195, size: 32, offset: 12768)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !2229, file: !2230, line: 1209, baseType: !333, size: 64, offset: 12800)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !2229, file: !2230, line: 1219, baseType: !430, size: 64, offset: 12864)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !2229, file: !2230, line: 1220, baseType: !430, size: 64, offset: 12928)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !2229, file: !2230, line: 1317, baseType: !195, size: 32, offset: 12992)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !2229, file: !2230, line: 1319, baseType: !2228, size: 64, offset: 13056)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !2229, file: !2230, line: 1322, baseType: !3245, size: 64, offset: 13120)
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 64)
!3246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !3247, line: 56, size: 512, elements: !3248)
!3247 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!3248 = !{!3249, !3250, !3251, !3252, !3253, !3254, !3255, !3257}
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3246, file: !3247, line: 57, baseType: !3245, size: 64)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3246, file: !3247, line: 58, baseType: !209, size: 64, offset: 64)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3246, file: !3247, line: 59, baseType: !333, size: 64, offset: 128)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3246, file: !3247, line: 60, baseType: !333, size: 64, offset: 192)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3246, file: !3247, line: 61, baseType: !896, size: 64, offset: 256)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !3246, file: !3247, line: 62, baseType: !7, size: 32, offset: 320)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !3246, file: !3247, line: 63, baseType: !3256, size: 64, offset: 384)
!3256 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !230, line: 153, baseType: !430)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !3246, file: !3247, line: 64, baseType: !3258, size: 64, offset: 448)
!3258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3259, size: 64)
!3259 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !2229, file: !2230, line: 1326, baseType: !1437, size: 32, offset: 13184)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !2229, file: !2230, line: 1342, baseType: !209, size: 64, offset: 13248)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !2229, file: !2230, line: 1343, baseType: !431, size: 64, offset: 13312)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !2229, file: !2230, line: 1344, baseType: !430, size: 64, offset: 13376)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !2229, file: !2230, line: 1345, baseType: !431, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !2229, file: !2230, line: 1346, baseType: !431, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !2229, file: !2230, line: 1347, baseType: !431, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !2229, file: !2230, line: 1348, baseType: !374, size: 128, align: 64, offset: 13504)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2229, file: !2230, line: 1358, baseType: !3269, size: 34816, offset: 13824)
!3269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !3270, line: 485, size: 34816, elements: !3271)
!3270 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!3271 = !{!3272, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3301, !3302, !3303, !3304, !3305, !3306, !3309, !3310, !3311}
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !3269, file: !3270, line: 487, baseType: !3273, size: 192)
!3273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3274, size: 192, elements: !285)
!3274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !3275, line: 16, size: 64, elements: !3276)
!3275 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!3276 = !{!3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289}
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !3274, file: !3275, line: 17, baseType: !935, size: 16)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !3274, file: !3275, line: 18, baseType: !935, size: 16, offset: 16)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !3274, file: !3275, line: 19, baseType: !935, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3274, file: !3275, line: 19, baseType: !935, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !3274, file: !3275, line: 19, baseType: !935, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !3274, file: !3275, line: 19, baseType: !935, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3274, file: !3275, line: 19, baseType: !935, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !3274, file: !3275, line: 20, baseType: !935, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !3274, file: !3275, line: 20, baseType: !935, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !3274, file: !3275, line: 20, baseType: !935, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3274, file: !3275, line: 20, baseType: !935, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3274, file: !3275, line: 20, baseType: !935, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !3274, file: !3275, line: 20, baseType: !935, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3269, file: !3270, line: 491, baseType: !333, size: 64, offset: 192)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !3269, file: !3270, line: 495, baseType: !325, size: 16, offset: 256)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !3269, file: !3270, line: 496, baseType: !325, size: 16, offset: 272)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !3269, file: !3270, line: 497, baseType: !325, size: 16, offset: 288)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !3269, file: !3270, line: 498, baseType: !325, size: 16, offset: 304)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !3269, file: !3270, line: 502, baseType: !333, size: 64, offset: 320)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3269, file: !3270, line: 503, baseType: !333, size: 64, offset: 384)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !3269, file: !3270, line: 514, baseType: !3298, size: 256, offset: 448)
!3298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3299, size: 256, elements: !1322)
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3300, size: 64)
!3300 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !3270, line: 483, flags: DIFlagFwdDecl)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !3269, file: !3270, line: 516, baseType: !333, size: 64, offset: 704)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !3269, file: !3270, line: 518, baseType: !333, size: 64, offset: 768)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !3269, file: !3270, line: 520, baseType: !333, size: 64, offset: 832)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !3269, file: !3270, line: 521, baseType: !333, size: 64, offset: 896)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !3269, file: !3270, line: 522, baseType: !333, size: 64, offset: 960)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !3269, file: !3270, line: 528, baseType: !3307, size: 64, offset: 1024)
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3308, size: 64)
!3308 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !3270, line: 10, flags: DIFlagFwdDecl)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !3269, file: !3270, line: 535, baseType: !333, size: 64, offset: 1088)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !3269, file: !3270, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !3269, file: !3270, line: 540, baseType: !3312, size: 33280, offset: 1536)
!3312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !3313, line: 317, size: 33280, elements: !3314)
!3313 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!3314 = !{!3315, !3316, !3317}
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !3312, file: !3313, line: 330, baseType: !7, size: 32)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !3312, file: !3313, line: 337, baseType: !333, size: 64, offset: 64)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3312, file: !3313, line: 348, baseType: !3318, size: 32768, offset: 512)
!3318 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !3313, line: 304, size: 32768, elements: !3319)
!3319 = !{!3320, !3335, !3372, !3422, !3435}
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !3318, file: !3313, line: 305, baseType: !3321, size: 896)
!3321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !3313, line: 12, size: 896, elements: !3322)
!3322 = !{!3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3334}
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3321, file: !3313, line: 13, baseType: !424, size: 32)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3321, file: !3313, line: 14, baseType: !424, size: 32, offset: 32)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3321, file: !3313, line: 15, baseType: !424, size: 32, offset: 64)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3321, file: !3313, line: 16, baseType: !424, size: 32, offset: 96)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3321, file: !3313, line: 17, baseType: !424, size: 32, offset: 128)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3321, file: !3313, line: 18, baseType: !424, size: 32, offset: 160)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3321, file: !3313, line: 19, baseType: !424, size: 32, offset: 192)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3321, file: !3313, line: 22, baseType: !3331, size: 640, offset: 224)
!3331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !424, size: 640, elements: !3332)
!3332 = !{!3333}
!3333 = !DISubrange(count: 20)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3321, file: !3313, line: 25, baseType: !424, size: 32, offset: 864)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !3318, file: !3313, line: 306, baseType: !3336, size: 4096, align: 128)
!3336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !3313, line: 34, size: 4096, align: 128, elements: !3337)
!3337 = !{!3338, !3339, !3340, !3341, !3342, !3357, !3358, !3359, !3361, !3363, !3367}
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3336, file: !3313, line: 35, baseType: !935, size: 16)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3336, file: !3313, line: 36, baseType: !935, size: 16, offset: 16)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3336, file: !3313, line: 37, baseType: !935, size: 16, offset: 32)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !3336, file: !3313, line: 38, baseType: !935, size: 16, offset: 48)
!3342 = !DIDerivedType(tag: DW_TAG_member, scope: !3336, file: !3313, line: 39, baseType: !3343, size: 128, offset: 64)
!3343 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3336, file: !3313, line: 39, size: 128, elements: !3344)
!3344 = !{!3345, !3350}
!3345 = !DIDerivedType(tag: DW_TAG_member, scope: !3343, file: !3313, line: 40, baseType: !3346, size: 128)
!3346 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3343, file: !3313, line: 40, size: 128, elements: !3347)
!3347 = !{!3348, !3349}
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !3346, file: !3313, line: 41, baseType: !430, size: 64)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !3346, file: !3313, line: 42, baseType: !430, size: 64, offset: 64)
!3350 = !DIDerivedType(tag: DW_TAG_member, scope: !3343, file: !3313, line: 44, baseType: !3351, size: 128)
!3351 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3343, file: !3313, line: 44, size: 128, elements: !3352)
!3352 = !{!3353, !3354, !3355, !3356}
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3351, file: !3313, line: 45, baseType: !424, size: 32)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3351, file: !3313, line: 46, baseType: !424, size: 32, offset: 32)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3351, file: !3313, line: 47, baseType: !424, size: 32, offset: 64)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3351, file: !3313, line: 48, baseType: !424, size: 32, offset: 96)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !3336, file: !3313, line: 51, baseType: !424, size: 32, offset: 192)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !3336, file: !3313, line: 52, baseType: !424, size: 32, offset: 224)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3336, file: !3313, line: 55, baseType: !3360, size: 1024, offset: 256)
!3360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !424, size: 1024, elements: !1133)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !3336, file: !3313, line: 58, baseType: !3362, size: 2048, offset: 1280)
!3362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !424, size: 2048, elements: !289)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3336, file: !3313, line: 60, baseType: !3364, size: 384, offset: 3328)
!3364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !424, size: 384, elements: !3365)
!3365 = !{!3366}
!3366 = !DISubrange(count: 12)
!3367 = !DIDerivedType(tag: DW_TAG_member, scope: !3336, file: !3313, line: 62, baseType: !3368, size: 384, offset: 3712)
!3368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3336, file: !3313, line: 62, size: 384, elements: !3369)
!3369 = !{!3370, !3371}
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !3368, file: !3313, line: 63, baseType: !3364, size: 384)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !3368, file: !3313, line: 64, baseType: !3364, size: 384)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !3318, file: !3313, line: 307, baseType: !3373, size: 1088)
!3373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !3313, line: 79, size: 1088, elements: !3374)
!3374 = !{!3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3421}
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3373, file: !3313, line: 80, baseType: !424, size: 32)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3373, file: !3313, line: 81, baseType: !424, size: 32, offset: 32)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3373, file: !3313, line: 82, baseType: !424, size: 32, offset: 64)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3373, file: !3313, line: 83, baseType: !424, size: 32, offset: 96)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3373, file: !3313, line: 84, baseType: !424, size: 32, offset: 128)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3373, file: !3313, line: 85, baseType: !424, size: 32, offset: 160)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3373, file: !3313, line: 86, baseType: !424, size: 32, offset: 192)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3373, file: !3313, line: 88, baseType: !3331, size: 640, offset: 224)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !3373, file: !3313, line: 89, baseType: !1056, size: 8, offset: 864)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !3373, file: !3313, line: 90, baseType: !1056, size: 8, offset: 872)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !3373, file: !3313, line: 91, baseType: !1056, size: 8, offset: 880)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !3373, file: !3313, line: 92, baseType: !1056, size: 8, offset: 888)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !3373, file: !3313, line: 93, baseType: !1056, size: 8, offset: 896)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !3373, file: !3313, line: 94, baseType: !1056, size: 8, offset: 904)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3373, file: !3313, line: 95, baseType: !3390, size: 64, offset: 960)
!3390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3391, size: 64)
!3391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !3392, line: 11, size: 128, elements: !3393)
!3392 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!3393 = !{!3394, !3395}
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !3391, file: !3392, line: 12, baseType: !157, size: 64)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !3391, file: !3392, line: 13, baseType: !3396, size: 64, offset: 64)
!3396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3397, size: 64)
!3397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !3398, line: 56, size: 1344, elements: !3399)
!3398 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!3399 = !{!3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420}
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3397, file: !3398, line: 61, baseType: !333, size: 64)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3397, file: !3398, line: 62, baseType: !333, size: 64, offset: 64)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !3397, file: !3398, line: 63, baseType: !333, size: 64, offset: 128)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3397, file: !3398, line: 64, baseType: !333, size: 64, offset: 192)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !3397, file: !3398, line: 65, baseType: !333, size: 64, offset: 256)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !3397, file: !3398, line: 66, baseType: !333, size: 64, offset: 320)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !3397, file: !3398, line: 68, baseType: !333, size: 64, offset: 384)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !3397, file: !3398, line: 69, baseType: !333, size: 64, offset: 448)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !3397, file: !3398, line: 70, baseType: !333, size: 64, offset: 512)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !3397, file: !3398, line: 71, baseType: !333, size: 64, offset: 576)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !3397, file: !3398, line: 72, baseType: !333, size: 64, offset: 640)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !3397, file: !3398, line: 73, baseType: !333, size: 64, offset: 704)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !3397, file: !3398, line: 74, baseType: !333, size: 64, offset: 768)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !3397, file: !3398, line: 75, baseType: !333, size: 64, offset: 832)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !3397, file: !3398, line: 76, baseType: !333, size: 64, offset: 896)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !3397, file: !3398, line: 81, baseType: !333, size: 64, offset: 960)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3397, file: !3398, line: 83, baseType: !333, size: 64, offset: 1024)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !3397, file: !3398, line: 84, baseType: !333, size: 64, offset: 1088)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3397, file: !3398, line: 85, baseType: !333, size: 64, offset: 1152)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3397, file: !3398, line: 86, baseType: !333, size: 64, offset: 1216)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !3397, file: !3398, line: 87, baseType: !333, size: 64, offset: 1280)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !3373, file: !3313, line: 96, baseType: !424, size: 32, offset: 1024)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !3318, file: !3313, line: 308, baseType: !3423, size: 4608, align: 512)
!3423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !3313, line: 289, size: 4608, align: 512, elements: !3424)
!3424 = !{!3425, !3426, !3433}
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !3423, file: !3313, line: 290, baseType: !3336, size: 4096, align: 128)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3423, file: !3313, line: 291, baseType: !3427, size: 512, offset: 4096)
!3427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !3313, line: 268, size: 512, elements: !3428)
!3428 = !{!3429, !3430, !3431}
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !3427, file: !3313, line: 269, baseType: !430, size: 64)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !3427, file: !3313, line: 270, baseType: !430, size: 64, offset: 64)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !3427, file: !3313, line: 271, baseType: !3432, size: 384, offset: 128)
!3432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !430, size: 384, elements: !2621)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !3423, file: !3313, line: 292, baseType: !3434, offset: 4608)
!3434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1056, elements: !2859)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !3318, file: !3313, line: 309, baseType: !3436, size: 32768)
!3436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1056, size: 32768, elements: !3437)
!3437 = !{!3438}
!3438 = !DISubrange(count: 4096)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2225, file: !798, line: 378, baseType: !3440, size: 64, offset: 64)
!3440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 64)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2221, file: !798, line: 384, baseType: !2500, size: 192, offset: 192)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1999, file: !798, line: 500, baseType: !243, offset: 6656)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1999, file: !798, line: 501, baseType: !3444, size: 64, offset: 6656)
!3444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3445, size: 64)
!3445 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !798, line: 387, flags: DIFlagFwdDecl)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1999, file: !798, line: 516, baseType: !2709, size: 64, offset: 6720)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1999, file: !798, line: 519, baseType: !361, size: 64, offset: 6784)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1999, file: !798, line: 521, baseType: !3449, size: 64, offset: 6848)
!3449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3450, size: 64)
!3450 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !798, line: 521, flags: DIFlagFwdDecl)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1999, file: !798, line: 545, baseType: !823, size: 32, offset: 6912)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1999, file: !798, line: 548, baseType: !499, size: 8, offset: 6944)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1999, file: !798, line: 550, baseType: !3454, offset: 6952)
!3454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !3455, line: 142, elements: !257)
!3455 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1999, file: !798, line: 554, baseType: !1108, size: 256, offset: 6976)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1999, file: !798, line: 557, baseType: !424, size: 32, offset: 7232)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1996, file: !798, line: 565, baseType: !3459, offset: 7296)
!3459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, elements: !1146)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1992, file: !798, line: 151, baseType: !823, size: 32)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1984, file: !798, line: 156, baseType: !243, offset: 256)
!3462 = !DIDerivedType(tag: DW_TAG_member, scope: !802, file: !798, line: 159, baseType: !3463, size: 128)
!3463 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !802, file: !798, line: 159, size: 128, elements: !3464)
!3464 = !{!3465, !3509}
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !3463, file: !798, line: 161, baseType: !3466, size: 64)
!3466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3467, size: 64)
!3467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !73, line: 110, size: 1152, elements: !3468)
!3468 = !{!3469, !3479, !3480, !3481, !3482, !3483, !3484, !3496, !3497, !3498}
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !3467, file: !73, line: 111, baseType: !3470, size: 384)
!3470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !73, line: 19, size: 384, elements: !3471)
!3471 = !{!3472, !3474, !3475, !3476, !3477, !3478}
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !3470, file: !73, line: 20, baseType: !3473, size: 64)
!3473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !333)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !3470, file: !73, line: 21, baseType: !3473, size: 64, offset: 64)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !3470, file: !73, line: 22, baseType: !3473, size: 64, offset: 128)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3470, file: !73, line: 23, baseType: !333, size: 64, offset: 192)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3470, file: !73, line: 24, baseType: !333, size: 64, offset: 256)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3470, file: !73, line: 25, baseType: !333, size: 64, offset: 320)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3467, file: !73, line: 112, baseType: !1084, size: 64, offset: 384)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !3467, file: !73, line: 113, baseType: !1070, size: 128, offset: 448)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3467, file: !73, line: 114, baseType: !2500, size: 192, offset: 576)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3467, file: !73, line: 115, baseType: !72, size: 32, offset: 768)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3467, file: !73, line: 116, baseType: !7, size: 32, offset: 800)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3467, file: !73, line: 117, baseType: !3485, size: 64, offset: 832)
!3485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3486, size: 64)
!3486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3487)
!3487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !73, line: 67, size: 256, elements: !3488)
!3488 = !{!3489, !3490, !3494, !3495}
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !3487, file: !73, line: 73, baseType: !916, size: 64)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !3487, file: !73, line: 78, baseType: !3491, size: 64, offset: 64)
!3491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3492, size: 64)
!3492 = !DISubroutineType(types: !3493)
!3493 = !{null, !3466}
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3487, file: !73, line: 83, baseType: !3491, size: 64, offset: 128)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !3487, file: !73, line: 89, baseType: !2048, size: 64, offset: 192)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3467, file: !73, line: 118, baseType: !209, size: 64, offset: 896)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !3467, file: !73, line: 119, baseType: !195, size: 32, offset: 960)
!3498 = !DIDerivedType(tag: DW_TAG_member, scope: !3467, file: !73, line: 120, baseType: !3499, size: 128, offset: 1024)
!3499 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3467, file: !73, line: 120, size: 128, elements: !3500)
!3500 = !{!3501, !3507}
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3499, file: !73, line: 121, baseType: !3502, size: 128)
!3502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !3503, line: 6, size: 128, elements: !3504)
!3503 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!3504 = !{!3505, !3506}
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3502, file: !3503, line: 7, baseType: !430, size: 64)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3502, file: !3503, line: 8, baseType: !430, size: 64, offset: 64)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !3499, file: !73, line: 122, baseType: !3508)
!3508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3502, elements: !2859)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !3463, file: !798, line: 162, baseType: !209, size: 64, offset: 64)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !802, file: !798, line: 176, baseType: !374, size: 128, align: 64)
!3511 = !DIDerivedType(tag: DW_TAG_member, scope: !797, file: !798, line: 179, baseType: !3512, size: 32, offset: 384)
!3512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !797, file: !798, line: 179, size: 32, elements: !3513)
!3513 = !{!3514, !3515, !3516, !3517}
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !3512, file: !798, line: 184, baseType: !823, size: 32)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !3512, file: !798, line: 192, baseType: !7, size: 32)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3512, file: !798, line: 194, baseType: !7, size: 32)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !3512, file: !798, line: 195, baseType: !195, size: 32)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !797, file: !798, line: 199, baseType: !823, size: 32, offset: 416)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !669, file: !86, line: 1964, baseType: !3520, size: 64, offset: 1344)
!3520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3521, size: 64)
!3521 = !DISubroutineType(types: !3522)
!3522 = !{!157, !608, !3523}
!3523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3524, size: 64)
!3524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !3525, line: 12, size: 256, elements: !3526)
!3525 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!3526 = !{!3527, !3528, !3529, !3530, !3531}
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !3524, file: !3525, line: 13, baseType: !819, size: 32)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !3524, file: !3525, line: 16, baseType: !195, size: 32, offset: 32)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !3524, file: !3525, line: 23, baseType: !333, size: 64, offset: 64)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !3524, file: !3525, line: 30, baseType: !333, size: 64, offset: 128)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !3524, file: !3525, line: 33, baseType: !3532, size: 64, offset: 192)
!3532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3533, size: 64)
!3533 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !798, line: 27, flags: DIFlagFwdDecl)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !669, file: !86, line: 1966, baseType: !3520, size: 64, offset: 1408)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !609, file: !86, line: 1424, baseType: !3536, size: 64, offset: 448)
!3536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3537, size: 64)
!3537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3538)
!3538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !80, line: 322, size: 704, elements: !3539)
!3539 = !{!3540, !3586, !3590, !3594, !3595, !3596, !3597, !3598, !3603, !3608, !3612}
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !3538, file: !80, line: 323, baseType: !3541, size: 64)
!3541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3542, size: 64)
!3542 = !DISubroutineType(types: !3543)
!3543 = !{!195, !3544}
!3544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3545, size: 64)
!3545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !80, line: 294, size: 1600, elements: !3546)
!3546 = !{!3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3571, !3572, !3573}
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !3545, file: !80, line: 295, baseType: !651, size: 128)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !3545, file: !80, line: 296, baseType: !229, size: 128, offset: 128)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !3545, file: !80, line: 297, baseType: !229, size: 128, offset: 256)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !3545, file: !80, line: 298, baseType: !229, size: 128, offset: 384)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !3545, file: !80, line: 299, baseType: !749, size: 192, offset: 512)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !3545, file: !80, line: 300, baseType: !243, offset: 704)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !3545, file: !80, line: 301, baseType: !823, size: 32, offset: 704)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !3545, file: !80, line: 302, baseType: !608, size: 64, offset: 768)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !3545, file: !80, line: 303, baseType: !3556, size: 64, offset: 832)
!3556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !80, line: 68, size: 64, elements: !3557)
!3557 = !{!3558, !3570}
!3558 = !DIDerivedType(tag: DW_TAG_member, scope: !3556, file: !80, line: 69, baseType: !3559, size: 32)
!3559 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3556, file: !80, line: 69, size: 32, elements: !3560)
!3560 = !{!3561, !3562, !3563}
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3559, file: !80, line: 70, baseType: !444, size: 32)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !3559, file: !80, line: 71, baseType: !452, size: 32)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !3559, file: !80, line: 72, baseType: !3564, size: 32)
!3564 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !3565, line: 24, baseType: !3566)
!3565 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!3566 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3565, line: 22, size: 32, elements: !3567)
!3567 = !{!3568}
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3566, file: !3565, line: 23, baseType: !3569, size: 32)
!3569 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !3565, line: 20, baseType: !450)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3556, file: !80, line: 74, baseType: !79, size: 32, offset: 32)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !3545, file: !80, line: 304, baseType: !540, size: 64, offset: 896)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !3545, file: !80, line: 305, baseType: !333, size: 64, offset: 960)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !3545, file: !80, line: 306, baseType: !3574, size: 576, offset: 1024)
!3574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !80, line: 205, size: 576, elements: !3575)
!3575 = !{!3576, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585}
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !3574, file: !80, line: 206, baseType: !3577, size: 64)
!3577 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !80, line: 66, baseType: !542)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !3574, file: !80, line: 207, baseType: !3577, size: 64, offset: 64)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !3574, file: !80, line: 208, baseType: !3577, size: 64, offset: 128)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !3574, file: !80, line: 209, baseType: !3577, size: 64, offset: 192)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !3574, file: !80, line: 210, baseType: !3577, size: 64, offset: 256)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !3574, file: !80, line: 211, baseType: !3577, size: 64, offset: 320)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !3574, file: !80, line: 212, baseType: !3577, size: 64, offset: 384)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !3574, file: !80, line: 213, baseType: !548, size: 64, offset: 448)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !3574, file: !80, line: 214, baseType: !548, size: 64, offset: 512)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !3538, file: !80, line: 324, baseType: !3587, size: 64, offset: 64)
!3587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3588, size: 64)
!3588 = !DISubroutineType(types: !3589)
!3589 = !{!3544, !608, !195}
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !3538, file: !80, line: 325, baseType: !3591, size: 64, offset: 128)
!3591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3592, size: 64)
!3592 = !DISubroutineType(types: !3593)
!3593 = !{null, !3544}
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !3538, file: !80, line: 326, baseType: !3541, size: 64, offset: 192)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !3538, file: !80, line: 327, baseType: !3541, size: 64, offset: 256)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !3538, file: !80, line: 328, baseType: !3541, size: 64, offset: 320)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !3538, file: !80, line: 329, baseType: !711, size: 64, offset: 384)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !3538, file: !80, line: 332, baseType: !3599, size: 64, offset: 448)
!3599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3600, size: 64)
!3600 = !DISubroutineType(types: !3601)
!3601 = !{!3602, !438}
!3602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3577, size: 64)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !3538, file: !80, line: 333, baseType: !3604, size: 64, offset: 512)
!3604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3605, size: 64)
!3605 = !DISubroutineType(types: !3606)
!3606 = !{!195, !438, !3607}
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3564, size: 64)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !3538, file: !80, line: 335, baseType: !3609, size: 64, offset: 576)
!3609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3610, size: 64)
!3610 = !DISubroutineType(types: !3611)
!3611 = !{!195, !438, !3602}
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3538, file: !80, line: 337, baseType: !3613, size: 64, offset: 640)
!3613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3614, size: 64)
!3614 = !DISubroutineType(types: !3615)
!3615 = !{!195, !608, !3616}
!3616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3556, size: 64)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !609, file: !86, line: 1425, baseType: !3618, size: 64, offset: 512)
!3618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3619, size: 64)
!3619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3620)
!3620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !80, line: 428, size: 704, elements: !3621)
!3621 = !{!3622, !3626, !3627, !3631, !3632, !3633, !3648, !3671, !3675, !3676, !3699}
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !3620, file: !80, line: 429, baseType: !3623, size: 64)
!3623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3624, size: 64)
!3624 = !DISubroutineType(types: !3625)
!3625 = !{!195, !608, !195, !195, !558}
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !3620, file: !80, line: 430, baseType: !711, size: 64, offset: 64)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !3620, file: !80, line: 431, baseType: !3628, size: 64, offset: 128)
!3628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3629, size: 64)
!3629 = !DISubroutineType(types: !3630)
!3630 = !{!195, !608, !7}
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !3620, file: !80, line: 432, baseType: !3628, size: 64, offset: 192)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !3620, file: !80, line: 433, baseType: !711, size: 64, offset: 256)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !3620, file: !80, line: 434, baseType: !3634, size: 64, offset: 320)
!3634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3635, size: 64)
!3635 = !DISubroutineType(types: !3636)
!3636 = !{!195, !608, !195, !3637}
!3637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3638, size: 64)
!3638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !80, line: 415, size: 256, elements: !3639)
!3639 = !{!3640, !3641, !3642, !3643, !3644, !3645, !3646, !3647}
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !3638, file: !80, line: 416, baseType: !195, size: 32)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !3638, file: !80, line: 417, baseType: !7, size: 32, offset: 32)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !3638, file: !80, line: 418, baseType: !7, size: 32, offset: 64)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !3638, file: !80, line: 420, baseType: !7, size: 32, offset: 96)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !3638, file: !80, line: 421, baseType: !7, size: 32, offset: 128)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !3638, file: !80, line: 422, baseType: !7, size: 32, offset: 160)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !3638, file: !80, line: 423, baseType: !7, size: 32, offset: 192)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !3638, file: !80, line: 424, baseType: !7, size: 32, offset: 224)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !3620, file: !80, line: 435, baseType: !3649, size: 64, offset: 384)
!3649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3650, size: 64)
!3650 = !DISubroutineType(types: !3651)
!3651 = !{!195, !608, !3556, !3652}
!3652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3653, size: 64)
!3653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !80, line: 343, size: 960, elements: !3654)
!3654 = !{!3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662, !3663, !3664, !3665, !3666, !3667, !3668, !3669, !3670}
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !3653, file: !80, line: 344, baseType: !195, size: 32)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !3653, file: !80, line: 345, baseType: !430, size: 64, offset: 64)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !3653, file: !80, line: 346, baseType: !430, size: 64, offset: 128)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !3653, file: !80, line: 347, baseType: !430, size: 64, offset: 192)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !3653, file: !80, line: 348, baseType: !430, size: 64, offset: 256)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !3653, file: !80, line: 349, baseType: !430, size: 64, offset: 320)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !3653, file: !80, line: 350, baseType: !430, size: 64, offset: 384)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !3653, file: !80, line: 351, baseType: !759, size: 64, offset: 448)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !3653, file: !80, line: 353, baseType: !759, size: 64, offset: 512)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !3653, file: !80, line: 354, baseType: !195, size: 32, offset: 576)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !3653, file: !80, line: 355, baseType: !195, size: 32, offset: 608)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !3653, file: !80, line: 356, baseType: !430, size: 64, offset: 640)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !3653, file: !80, line: 357, baseType: !430, size: 64, offset: 704)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !3653, file: !80, line: 358, baseType: !430, size: 64, offset: 768)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !3653, file: !80, line: 359, baseType: !759, size: 64, offset: 832)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !3653, file: !80, line: 360, baseType: !195, size: 32, offset: 896)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !3620, file: !80, line: 436, baseType: !3672, size: 64, offset: 448)
!3672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3673, size: 64)
!3673 = !DISubroutineType(types: !3674)
!3674 = !{!195, !608, !3616, !3652}
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !3620, file: !80, line: 438, baseType: !3649, size: 64, offset: 512)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !3620, file: !80, line: 439, baseType: !3677, size: 64, offset: 576)
!3677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3678, size: 64)
!3678 = !DISubroutineType(types: !3679)
!3679 = !{!195, !608, !3680}
!3680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3681, size: 64)
!3681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !80, line: 409, size: 1408, elements: !3682)
!3682 = !{!3683, !3684}
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !3681, file: !80, line: 410, baseType: !7, size: 32)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !3681, file: !80, line: 411, baseType: !3685, size: 1344, offset: 64)
!3685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3686, size: 1344, elements: !285)
!3686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !80, line: 395, size: 448, elements: !3687)
!3687 = !{!3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3698}
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3686, file: !80, line: 396, baseType: !7, size: 32)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !3686, file: !80, line: 397, baseType: !7, size: 32, offset: 32)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !3686, file: !80, line: 399, baseType: !7, size: 32, offset: 64)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !3686, file: !80, line: 400, baseType: !7, size: 32, offset: 96)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !3686, file: !80, line: 401, baseType: !7, size: 32, offset: 128)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !3686, file: !80, line: 402, baseType: !7, size: 32, offset: 160)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !3686, file: !80, line: 403, baseType: !7, size: 32, offset: 192)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !3686, file: !80, line: 404, baseType: !432, size: 64, offset: 256)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !3686, file: !80, line: 405, baseType: !3697, size: 64, offset: 320)
!3697 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !230, line: 126, baseType: !430)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !3686, file: !80, line: 406, baseType: !3697, size: 64, offset: 384)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !3620, file: !80, line: 440, baseType: !3628, size: 64, offset: 640)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !609, file: !86, line: 1426, baseType: !3701, size: 64, offset: 576)
!3701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3702, size: 64)
!3702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3703)
!3703 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !86, line: 49, flags: DIFlagFwdDecl)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !609, file: !86, line: 1427, baseType: !333, size: 64, offset: 640)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !609, file: !86, line: 1428, baseType: !333, size: 64, offset: 704)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !609, file: !86, line: 1429, baseType: !333, size: 64, offset: 768)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !609, file: !86, line: 1430, baseType: !391, size: 64, offset: 832)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !609, file: !86, line: 1431, baseType: !843, size: 256, offset: 896)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !609, file: !86, line: 1432, baseType: !195, size: 32, offset: 1152)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !609, file: !86, line: 1433, baseType: !823, size: 32, offset: 1184)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !609, file: !86, line: 1437, baseType: !3712, size: 64, offset: 1216)
!3712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3713, size: 64)
!3713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3714, size: 64)
!3714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3715)
!3715 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !86, line: 1437, flags: DIFlagFwdDecl)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !609, file: !86, line: 1449, baseType: !3717, size: 64, offset: 1280)
!3717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !407, line: 34, size: 64, elements: !3718)
!3718 = !{!3719}
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !3717, file: !407, line: 35, baseType: !410, size: 64)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !609, file: !86, line: 1450, baseType: !229, size: 128, offset: 1344)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !609, file: !86, line: 1451, baseType: !1040, size: 64, offset: 1472)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !609, file: !86, line: 1452, baseType: !1618, size: 64, offset: 1536)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !609, file: !86, line: 1453, baseType: !3724, size: 64, offset: 1600)
!3724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3725, size: 64)
!3725 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !86, line: 1453, flags: DIFlagFwdDecl)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !609, file: !86, line: 1454, baseType: !651, size: 128, offset: 1664)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !609, file: !86, line: 1455, baseType: !7, size: 32, offset: 1792)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !609, file: !86, line: 1456, baseType: !3729, size: 2432, offset: 1856)
!3729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !80, line: 518, size: 2432, elements: !3730)
!3730 = !{!3731, !3732, !3733, !3735, !3767}
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3729, file: !80, line: 519, baseType: !7, size: 32)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !3729, file: !80, line: 520, baseType: !843, size: 256, offset: 64)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !3729, file: !80, line: 521, baseType: !3734, size: 192, offset: 320)
!3734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !438, size: 192, elements: !285)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3729, file: !80, line: 522, baseType: !3736, size: 1728, offset: 512)
!3736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3737, size: 1728, elements: !285)
!3737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !80, line: 222, size: 576, elements: !3738)
!3738 = !{!3739, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766}
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !3737, file: !80, line: 223, baseType: !3740, size: 64)
!3740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3741, size: 64)
!3741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !80, line: 443, size: 256, elements: !3742)
!3742 = !{!3743, !3744, !3757, !3758}
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !3741, file: !80, line: 444, baseType: !195, size: 32)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !3741, file: !80, line: 445, baseType: !3745, size: 64, offset: 64)
!3745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3746, size: 64)
!3746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3747)
!3747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !80, line: 310, size: 512, elements: !3748)
!3748 = !{!3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756}
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !3747, file: !80, line: 311, baseType: !711, size: 64)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !3747, file: !80, line: 312, baseType: !711, size: 64, offset: 64)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !3747, file: !80, line: 313, baseType: !711, size: 64, offset: 128)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !3747, file: !80, line: 314, baseType: !711, size: 64, offset: 192)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !3747, file: !80, line: 315, baseType: !3541, size: 64, offset: 256)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !3747, file: !80, line: 316, baseType: !3541, size: 64, offset: 320)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !3747, file: !80, line: 317, baseType: !3541, size: 64, offset: 384)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3747, file: !80, line: 318, baseType: !3613, size: 64, offset: 448)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !3741, file: !80, line: 446, baseType: !642, size: 64, offset: 128)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !3741, file: !80, line: 447, baseType: !3740, size: 64, offset: 192)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !3737, file: !80, line: 224, baseType: !195, size: 32, offset: 64)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !3737, file: !80, line: 226, baseType: !229, size: 128, offset: 128)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !3737, file: !80, line: 227, baseType: !333, size: 64, offset: 256)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !3737, file: !80, line: 228, baseType: !7, size: 32, offset: 320)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !3737, file: !80, line: 229, baseType: !7, size: 32, offset: 352)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !3737, file: !80, line: 230, baseType: !3577, size: 64, offset: 384)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !3737, file: !80, line: 231, baseType: !3577, size: 64, offset: 448)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !3737, file: !80, line: 232, baseType: !209, size: 64, offset: 512)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3729, file: !80, line: 523, baseType: !3768, size: 192, offset: 2240)
!3768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3745, size: 192, elements: !285)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !609, file: !86, line: 1458, baseType: !3770, size: 2112, offset: 4288)
!3770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !86, line: 1410, size: 2112, elements: !3771)
!3771 = !{!3772, !3773, !3774}
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3770, file: !86, line: 1411, baseType: !195, size: 32)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !3770, file: !86, line: 1412, baseType: !1244, size: 128, offset: 64)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !3770, file: !86, line: 1413, baseType: !3775, size: 1920, offset: 192)
!3775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3776, size: 1920, elements: !285)
!3776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !3777, line: 12, size: 640, elements: !3778)
!3777 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!3778 = !{!3779, !3787, !3788, !3793, !3794}
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !3776, file: !3777, line: 13, baseType: !3780, size: 320)
!3780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !3781, line: 17, size: 320, elements: !3782)
!3781 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!3782 = !{!3783, !3784, !3785, !3786}
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !3780, file: !3781, line: 18, baseType: !195, size: 32)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !3780, file: !3781, line: 19, baseType: !195, size: 32, offset: 32)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !3780, file: !3781, line: 20, baseType: !1244, size: 128, offset: 64)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !3780, file: !3781, line: 22, baseType: !374, size: 128, align: 64, offset: 192)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !3776, file: !3777, line: 14, baseType: !1031, size: 64, offset: 320)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !3776, file: !3777, line: 15, baseType: !3789, size: 64, offset: 384)
!3789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !3790, line: 16, size: 64, elements: !3791)
!3790 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!3791 = !{!3792}
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3789, file: !3790, line: 17, baseType: !2228, size: 64)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !3776, file: !3777, line: 16, baseType: !1244, size: 128, offset: 448)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3776, file: !3777, line: 17, baseType: !823, size: 32, offset: 576)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !609, file: !86, line: 1465, baseType: !209, size: 64, offset: 6400)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !609, file: !86, line: 1468, baseType: !424, size: 32, offset: 6464)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !609, file: !86, line: 1470, baseType: !548, size: 64, offset: 6528)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !609, file: !86, line: 1471, baseType: !548, size: 64, offset: 6592)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !609, file: !86, line: 1473, baseType: !426, size: 32, offset: 6656)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !609, file: !86, line: 1474, baseType: !3801, size: 64, offset: 6720)
!3801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3802, size: 64)
!3802 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !86, line: 603, flags: DIFlagFwdDecl)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !609, file: !86, line: 1477, baseType: !1132, size: 256, offset: 6784)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !609, file: !86, line: 1478, baseType: !3805, size: 128, offset: 7040)
!3805 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !3806, line: 18, baseType: !3807)
!3806 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!3807 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3806, line: 16, size: 128, elements: !3808)
!3808 = !{!3809}
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3807, file: !3806, line: 17, baseType: !3810, size: 128)
!3810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1057, size: 128, elements: !1764)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !609, file: !86, line: 1480, baseType: !7, size: 32, offset: 7168)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !609, file: !86, line: 1481, baseType: !1265, size: 32, offset: 7200)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !609, file: !86, line: 1487, baseType: !749, size: 192, offset: 7232)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !609, file: !86, line: 1493, baseType: !225, size: 64, offset: 7424)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !609, file: !86, line: 1495, baseType: !3816, size: 64, offset: 7488)
!3816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3817, size: 64)
!3817 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3818)
!3818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !389, line: 135, size: 1024, align: 512, elements: !3819)
!3819 = !{!3820, !3824, !3825, !3832, !3838, !3842, !3846, !3850, !3851, !3855, !3859, !3864, !3868}
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !3818, file: !389, line: 136, baseType: !3821, size: 64)
!3821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3822, size: 64)
!3822 = !DISubroutineType(types: !3823)
!3823 = !{!195, !391, !7}
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !3818, file: !389, line: 137, baseType: !3821, size: 64, offset: 64)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !3818, file: !389, line: 138, baseType: !3826, size: 64, offset: 128)
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3827, size: 64)
!3827 = !DISubroutineType(types: !3828)
!3828 = !{!195, !3829, !3831}
!3829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3830, size: 64)
!3830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !392)
!3831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !3818, file: !389, line: 139, baseType: !3833, size: 64, offset: 192)
!3833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3834, size: 64)
!3834 = !DISubroutineType(types: !3835)
!3835 = !{!195, !3829, !7, !225, !3836}
!3836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3837, size: 64)
!3837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !415)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !3818, file: !389, line: 141, baseType: !3839, size: 64, offset: 256)
!3839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3840, size: 64)
!3840 = !DISubroutineType(types: !3841)
!3841 = !{!195, !3829}
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !3818, file: !389, line: 142, baseType: !3843, size: 64, offset: 320)
!3843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3844, size: 64)
!3844 = !DISubroutineType(types: !3845)
!3845 = !{!195, !391}
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !3818, file: !389, line: 143, baseType: !3847, size: 64, offset: 384)
!3847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3848, size: 64)
!3848 = !DISubroutineType(types: !3849)
!3849 = !{null, !391}
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !3818, file: !389, line: 144, baseType: !3847, size: 64, offset: 448)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !3818, file: !389, line: 145, baseType: !3852, size: 64, offset: 512)
!3852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3853, size: 64)
!3853 = !DISubroutineType(types: !3854)
!3854 = !{null, !391, !438}
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !3818, file: !389, line: 146, baseType: !3856, size: 64, offset: 576)
!3856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3857, size: 64)
!3857 = !DISubroutineType(types: !3858)
!3858 = !{!284, !391, !284, !195}
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !3818, file: !389, line: 147, baseType: !3860, size: 64, offset: 640)
!3860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3861, size: 64)
!3861 = !DISubroutineType(types: !3862)
!3862 = !{!387, !3863}
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !3818, file: !389, line: 148, baseType: !3865, size: 64, offset: 704)
!3865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3866, size: 64)
!3866 = !DISubroutineType(types: !3867)
!3867 = !{!195, !558, !499}
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !3818, file: !389, line: 149, baseType: !3869, size: 64, offset: 768)
!3869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3870, size: 64)
!3870 = !DISubroutineType(types: !3871)
!3871 = !{!391, !391, !3872}
!3872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3873, size: 64)
!3873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !439)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !609, file: !86, line: 1500, baseType: !195, size: 32, offset: 7552)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !609, file: !86, line: 1502, baseType: !3876, size: 448, offset: 7616)
!3876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !3525, line: 60, size: 448, elements: !3877)
!3877 = !{!3878, !3883, !3884, !3885, !3886, !3887, !3888}
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !3876, file: !3525, line: 61, baseType: !3879, size: 64)
!3879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3880, size: 64)
!3880 = !DISubroutineType(types: !3881)
!3881 = !{!333, !3882, !3523}
!3882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3876, size: 64)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !3876, file: !3525, line: 63, baseType: !3879, size: 64, offset: 64)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3876, file: !3525, line: 66, baseType: !157, size: 64, offset: 128)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !3876, file: !3525, line: 67, baseType: !195, size: 32, offset: 192)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3876, file: !3525, line: 68, baseType: !7, size: 32, offset: 224)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3876, file: !3525, line: 71, baseType: !229, size: 128, offset: 256)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !3876, file: !3525, line: 77, baseType: !3889, size: 64, offset: 384)
!3889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !609, file: !86, line: 1505, baseType: !753, size: 64, offset: 8064)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !609, file: !86, line: 1508, baseType: !753, size: 64, offset: 8128)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !609, file: !86, line: 1511, baseType: !195, size: 32, offset: 8192)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !609, file: !86, line: 1514, baseType: !1931, size: 32, offset: 8224)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !609, file: !86, line: 1517, baseType: !1120, size: 64, offset: 8256)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !609, file: !86, line: 1518, baseType: !647, size: 64, offset: 8320)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !609, file: !86, line: 1525, baseType: !2709, size: 64, offset: 8384)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !609, file: !86, line: 1532, baseType: !3898, size: 64, offset: 8448)
!3898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !3899, line: 52, size: 64, elements: !3900)
!3899 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!3900 = !{!3901}
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3898, file: !3899, line: 53, baseType: !3902, size: 64)
!3902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3903, size: 64)
!3903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !3899, line: 40, size: 256, elements: !3904)
!3904 = !{!3905, !3906, !3911}
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3903, file: !3899, line: 42, baseType: !243)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !3903, file: !3899, line: 44, baseType: !3907, size: 192)
!3907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !3899, line: 28, size: 192, elements: !3908)
!3908 = !{!3909, !3910}
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3907, file: !3899, line: 29, baseType: !229, size: 128)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3907, file: !3899, line: 31, baseType: !157, size: 64, offset: 128)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3903, file: !3899, line: 49, baseType: !157, size: 64, offset: 192)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !609, file: !86, line: 1533, baseType: !3898, size: 64, offset: 8512)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !609, file: !86, line: 1534, baseType: !374, size: 128, align: 64, offset: 8576)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !609, file: !86, line: 1535, baseType: !1108, size: 256, offset: 8704)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !609, file: !86, line: 1537, baseType: !749, size: 192, offset: 8960)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !609, file: !86, line: 1542, baseType: !195, size: 32, offset: 9152)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !609, file: !86, line: 1545, baseType: !243, offset: 9184)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !609, file: !86, line: 1546, baseType: !229, size: 128, offset: 9216)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !609, file: !86, line: 1548, baseType: !243, offset: 9344)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !609, file: !86, line: 1549, baseType: !229, size: 128, offset: 9344)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !439, file: !86, line: 624, baseType: !809, size: 64, offset: 256)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !439, file: !86, line: 631, baseType: !333, size: 64, offset: 320)
!3923 = !DIDerivedType(tag: DW_TAG_member, scope: !439, file: !86, line: 639, baseType: !3924, size: 32, offset: 384)
!3924 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !439, file: !86, line: 639, size: 32, elements: !3925)
!3925 = !{!3926, !3927}
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !3924, file: !86, line: 640, baseType: !1588, size: 32)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !3924, file: !86, line: 641, baseType: !7, size: 32)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !439, file: !86, line: 643, baseType: !522, size: 32, offset: 416)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !439, file: !86, line: 644, baseType: !540, size: 64, offset: 448)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !439, file: !86, line: 645, baseType: !544, size: 128, offset: 512)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !439, file: !86, line: 646, baseType: !544, size: 128, offset: 640)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !439, file: !86, line: 647, baseType: !544, size: 128, offset: 768)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !439, file: !86, line: 648, baseType: !243, offset: 896)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !439, file: !86, line: 649, baseType: !325, size: 16, offset: 896)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !439, file: !86, line: 650, baseType: !1056, size: 8, offset: 912)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !439, file: !86, line: 651, baseType: !1056, size: 8, offset: 920)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !439, file: !86, line: 652, baseType: !3697, size: 64, offset: 960)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !439, file: !86, line: 659, baseType: !333, size: 64, offset: 1024)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !439, file: !86, line: 660, baseType: !843, size: 256, offset: 1088)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !439, file: !86, line: 662, baseType: !333, size: 64, offset: 1344)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !439, file: !86, line: 663, baseType: !333, size: 64, offset: 1408)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !439, file: !86, line: 665, baseType: !651, size: 128, offset: 1472)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !439, file: !86, line: 666, baseType: !229, size: 128, offset: 1600)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !439, file: !86, line: 675, baseType: !229, size: 128, offset: 1728)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !439, file: !86, line: 676, baseType: !229, size: 128, offset: 1856)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !439, file: !86, line: 677, baseType: !229, size: 128, offset: 1984)
!3947 = !DIDerivedType(tag: DW_TAG_member, scope: !439, file: !86, line: 678, baseType: !3948, size: 128, offset: 2112)
!3948 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !439, file: !86, line: 678, size: 128, elements: !3949)
!3949 = !{!3950, !3951}
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !3948, file: !86, line: 679, baseType: !647, size: 64)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !3948, file: !86, line: 680, baseType: !374, size: 128, align: 64)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !439, file: !86, line: 682, baseType: !755, size: 64, offset: 2240)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !439, file: !86, line: 683, baseType: !755, size: 64, offset: 2304)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !439, file: !86, line: 684, baseType: !823, size: 32, offset: 2368)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !439, file: !86, line: 685, baseType: !823, size: 32, offset: 2400)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !439, file: !86, line: 686, baseType: !823, size: 32, offset: 2432)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !439, file: !86, line: 688, baseType: !823, size: 32, offset: 2464)
!3958 = !DIDerivedType(tag: DW_TAG_member, scope: !439, file: !86, line: 690, baseType: !3959, size: 64, offset: 2496)
!3959 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !439, file: !86, line: 690, size: 64, elements: !3960)
!3960 = !{!3961, !4183}
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3959, file: !86, line: 691, baseType: !3962, size: 64)
!3962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3963, size: 64)
!3963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3964)
!3964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !86, line: 1822, size: 2048, elements: !3965)
!3965 = !{!3966, !3967, !3971, !3975, !3979, !3980, !3981, !3985, !3998, !3999, !4007, !4011, !4012, !4016, !4017, !4021, !4026, !4027, !4031, !4035, !4143, !4147, !4148, !4152, !4153, !4157, !4161, !4166, !4170, !4174, !4178, !4182}
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3964, file: !86, line: 1823, baseType: !642, size: 64)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !3964, file: !86, line: 1824, baseType: !3968, size: 64, offset: 64)
!3968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3969, size: 64)
!3969 = !DISubroutineType(types: !3970)
!3970 = !{!540, !361, !540, !195}
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3964, file: !86, line: 1825, baseType: !3972, size: 64, offset: 128)
!3972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3973, size: 64)
!3973 = !DISubroutineType(types: !3974)
!3974 = !{!315, !361, !284, !330, !771}
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3964, file: !86, line: 1826, baseType: !3976, size: 64, offset: 192)
!3976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3977, size: 64)
!3977 = !DISubroutineType(types: !3978)
!3978 = !{!315, !361, !225, !330, !771}
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !3964, file: !86, line: 1827, baseType: !920, size: 64, offset: 256)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !3964, file: !86, line: 1828, baseType: !920, size: 64, offset: 320)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !3964, file: !86, line: 1829, baseType: !3982, size: 64, offset: 384)
!3982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3983, size: 64)
!3983 = !DISubroutineType(types: !3984)
!3984 = !{!195, !923, !499}
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !3964, file: !86, line: 1830, baseType: !3986, size: 64, offset: 448)
!3986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3987, size: 64)
!3987 = !DISubroutineType(types: !3988)
!3988 = !{!195, !361, !3989}
!3989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3990, size: 64)
!3990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !86, line: 1776, size: 128, elements: !3991)
!3991 = !{!3992, !3997}
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !3990, file: !86, line: 1777, baseType: !3993, size: 64)
!3993 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !86, line: 1773, baseType: !3994)
!3994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3995, size: 64)
!3995 = !DISubroutineType(types: !3996)
!3996 = !{!195, !3989, !225, !195, !540, !430, !7}
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3990, file: !86, line: 1778, baseType: !540, size: 64, offset: 64)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !3964, file: !86, line: 1831, baseType: !3986, size: 64, offset: 512)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3964, file: !86, line: 1832, baseType: !4000, size: 64, offset: 576)
!4000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4001, size: 64)
!4001 = !DISubroutineType(types: !4002)
!4002 = !{!4003, !361, !4005}
!4003 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !4004, line: 52, baseType: !7)
!4004 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!4005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4006, size: 64)
!4006 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !628, line: 27, flags: DIFlagFwdDecl)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !3964, file: !86, line: 1833, baseType: !4008, size: 64, offset: 640)
!4008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4009, size: 64)
!4009 = !DISubroutineType(types: !4010)
!4010 = !{!157, !361, !7, !333}
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3964, file: !86, line: 1834, baseType: !4008, size: 64, offset: 704)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3964, file: !86, line: 1835, baseType: !4013, size: 64, offset: 768)
!4013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4014, size: 64)
!4014 = !DISubroutineType(types: !4015)
!4015 = !{!195, !361, !2002}
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !3964, file: !86, line: 1836, baseType: !333, size: 64, offset: 832)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3964, file: !86, line: 1837, baseType: !4018, size: 64, offset: 896)
!4018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4019, size: 64)
!4019 = !DISubroutineType(types: !4020)
!4020 = !{!195, !438, !361}
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3964, file: !86, line: 1838, baseType: !4022, size: 64, offset: 960)
!4022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4023, size: 64)
!4023 = !DISubroutineType(types: !4024)
!4024 = !{!195, !361, !4025}
!4025 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !86, line: 1007, baseType: !209)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3964, file: !86, line: 1839, baseType: !4018, size: 64, offset: 1024)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !3964, file: !86, line: 1840, baseType: !4028, size: 64, offset: 1088)
!4028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4029, size: 64)
!4029 = !DISubroutineType(types: !4030)
!4030 = !{!195, !361, !540, !540, !195}
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !3964, file: !86, line: 1841, baseType: !4032, size: 64, offset: 1152)
!4032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4033, size: 64)
!4033 = !DISubroutineType(types: !4034)
!4034 = !{!195, !195, !361, !195}
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3964, file: !86, line: 1842, baseType: !4036, size: 64, offset: 1216)
!4036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4037, size: 64)
!4037 = !DISubroutineType(types: !4038)
!4038 = !{!195, !361, !195, !4039}
!4039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4040, size: 64)
!4040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !86, line: 1062, size: 1664, elements: !4041)
!4041 = !{!4042, !4043, !4044, !4045, !4046, !4047, !4048, !4049, !4050, !4051, !4052, !4053, !4054, !4055, !4056, !4073, !4074, !4075, !4088, !4119}
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !4040, file: !86, line: 1063, baseType: !4039, size: 64)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !4040, file: !86, line: 1064, baseType: !229, size: 128, offset: 64)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !4040, file: !86, line: 1065, baseType: !651, size: 128, offset: 192)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !4040, file: !86, line: 1066, baseType: !229, size: 128, offset: 320)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !4040, file: !86, line: 1069, baseType: !229, size: 128, offset: 448)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !4040, file: !86, line: 1072, baseType: !4025, size: 64, offset: 576)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !4040, file: !86, line: 1073, baseType: !7, size: 32, offset: 640)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !4040, file: !86, line: 1074, baseType: !436, size: 8, offset: 672)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !4040, file: !86, line: 1075, baseType: !7, size: 32, offset: 704)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !4040, file: !86, line: 1076, baseType: !195, size: 32, offset: 736)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !4040, file: !86, line: 1077, baseType: !1244, size: 128, offset: 768)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !4040, file: !86, line: 1078, baseType: !361, size: 64, offset: 896)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !4040, file: !86, line: 1079, baseType: !540, size: 64, offset: 960)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !4040, file: !86, line: 1080, baseType: !540, size: 64, offset: 1024)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !4040, file: !86, line: 1082, baseType: !4057, size: 64, offset: 1088)
!4057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4058, size: 64)
!4058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !86, line: 1314, size: 320, elements: !4059)
!4059 = !{!4060, !4068, !4069, !4070, !4071, !4072}
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !4058, file: !86, line: 1315, baseType: !4061)
!4061 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !4062, line: 20, baseType: !4063)
!4062 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!4063 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4062, line: 11, elements: !4064)
!4064 = !{!4065}
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !4063, file: !4062, line: 12, baseType: !4066)
!4066 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !255, line: 33, baseType: !4067)
!4067 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !255, line: 31, elements: !257)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !4058, file: !86, line: 1316, baseType: !195, size: 32)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !4058, file: !86, line: 1317, baseType: !195, size: 32, offset: 32)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !4058, file: !86, line: 1318, baseType: !4057, size: 64, offset: 64)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !4058, file: !86, line: 1319, baseType: !361, size: 64, offset: 128)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !4058, file: !86, line: 1320, baseType: !374, size: 128, align: 64, offset: 192)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !4040, file: !86, line: 1084, baseType: !333, size: 64, offset: 1152)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !4040, file: !86, line: 1085, baseType: !333, size: 64, offset: 1216)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !4040, file: !86, line: 1087, baseType: !4076, size: 64, offset: 1280)
!4076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4077, size: 64)
!4077 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4078)
!4078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !86, line: 1011, size: 128, elements: !4079)
!4079 = !{!4080, !4084}
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !4078, file: !86, line: 1012, baseType: !4081, size: 64)
!4081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4082, size: 64)
!4082 = !DISubroutineType(types: !4083)
!4083 = !{null, !4039, !4039}
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !4078, file: !86, line: 1013, baseType: !4085, size: 64, offset: 64)
!4085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4086, size: 64)
!4086 = !DISubroutineType(types: !4087)
!4087 = !{null, !4039}
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !4040, file: !86, line: 1088, baseType: !4089, size: 64, offset: 1344)
!4089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4090, size: 64)
!4090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4091)
!4091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !86, line: 1016, size: 512, elements: !4092)
!4092 = !{!4093, !4097, !4101, !4102, !4106, !4110, !4114, !4118}
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4091, file: !86, line: 1017, baseType: !4094, size: 64)
!4094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4095, size: 64)
!4095 = !DISubroutineType(types: !4096)
!4096 = !{!4025, !4025}
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4091, file: !86, line: 1018, baseType: !4098, size: 64, offset: 64)
!4098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4099, size: 64)
!4099 = !DISubroutineType(types: !4100)
!4100 = !{null, !4025}
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4091, file: !86, line: 1019, baseType: !4085, size: 64, offset: 128)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4091, file: !86, line: 1020, baseType: !4103, size: 64, offset: 192)
!4103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4104, size: 64)
!4104 = !DISubroutineType(types: !4105)
!4105 = !{!195, !4039, !195}
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4091, file: !86, line: 1021, baseType: !4107, size: 64, offset: 256)
!4107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4108, size: 64)
!4108 = !DISubroutineType(types: !4109)
!4109 = !{!499, !4039}
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4091, file: !86, line: 1022, baseType: !4111, size: 64, offset: 320)
!4111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4112, size: 64)
!4112 = !DISubroutineType(types: !4113)
!4113 = !{!195, !4039, !195, !233}
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4091, file: !86, line: 1023, baseType: !4115, size: 64, offset: 384)
!4115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4116, size: 64)
!4116 = !DISubroutineType(types: !4117)
!4117 = !{null, !4039, !897}
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4091, file: !86, line: 1024, baseType: !4107, size: 64, offset: 448)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !4040, file: !86, line: 1097, baseType: !4120, size: 256, offset: 1408)
!4120 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4040, file: !86, line: 1089, size: 256, elements: !4121)
!4121 = !{!4122, !4131, !4137}
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4120, file: !86, line: 1090, baseType: !4123, size: 256)
!4123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4124, line: 10, size: 256, elements: !4125)
!4124 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4125 = !{!4126, !4127, !4130}
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4123, file: !4124, line: 11, baseType: !424, size: 32)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4123, file: !4124, line: 12, baseType: !4128, size: 64, offset: 64)
!4128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4129, size: 64)
!4129 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4124, line: 5, flags: DIFlagFwdDecl)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4123, file: !4124, line: 13, baseType: !229, size: 128, offset: 128)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4120, file: !86, line: 1091, baseType: !4132, size: 64)
!4132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4124, line: 17, size: 64, elements: !4133)
!4133 = !{!4134}
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4132, file: !4124, line: 18, baseType: !4135, size: 64)
!4135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4136, size: 64)
!4136 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4124, line: 16, flags: DIFlagFwdDecl)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4120, file: !86, line: 1096, baseType: !4138, size: 192)
!4138 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4120, file: !86, line: 1092, size: 192, elements: !4139)
!4139 = !{!4140, !4141, !4142}
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4138, file: !86, line: 1093, baseType: !229, size: 128)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4138, file: !86, line: 1094, baseType: !195, size: 32, offset: 128)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4138, file: !86, line: 1095, baseType: !7, size: 32, offset: 160)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !3964, file: !86, line: 1843, baseType: !4144, size: 64, offset: 1280)
!4144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4145, size: 64)
!4145 = !DISubroutineType(types: !4146)
!4146 = !{!315, !361, !796, !195, !330, !771, !195}
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !3964, file: !86, line: 1844, baseType: !2122, size: 64, offset: 1344)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !3964, file: !86, line: 1845, baseType: !4149, size: 64, offset: 1408)
!4149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4150, size: 64)
!4150 = !DISubroutineType(types: !4151)
!4151 = !{!195, !195}
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !3964, file: !86, line: 1846, baseType: !4036, size: 64, offset: 1472)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !3964, file: !86, line: 1847, baseType: !4154, size: 64, offset: 1536)
!4154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4155, size: 64)
!4155 = !DISubroutineType(types: !4156)
!4156 = !{!315, !3229, !361, !771, !330, !7}
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !3964, file: !86, line: 1848, baseType: !4158, size: 64, offset: 1600)
!4158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4159, size: 64)
!4159 = !DISubroutineType(types: !4160)
!4160 = !{!315, !361, !771, !3229, !330, !7}
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !3964, file: !86, line: 1849, baseType: !4162, size: 64, offset: 1664)
!4162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4163, size: 64)
!4163 = !DISubroutineType(types: !4164)
!4164 = !{!195, !361, !157, !4165, !897}
!4165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4039, size: 64)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !3964, file: !86, line: 1850, baseType: !4167, size: 64, offset: 1728)
!4167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4168, size: 64)
!4168 = !DISubroutineType(types: !4169)
!4169 = !{!157, !361, !195, !540, !540}
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3964, file: !86, line: 1852, baseType: !4171, size: 64, offset: 1792)
!4171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4172, size: 64)
!4172 = !DISubroutineType(types: !4173)
!4173 = !{null, !737, !361}
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !3964, file: !86, line: 1856, baseType: !4175, size: 64, offset: 1856)
!4175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4176, size: 64)
!4176 = !DISubroutineType(types: !4177)
!4177 = !{!315, !361, !540, !361, !540, !330, !7}
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !3964, file: !86, line: 1858, baseType: !4179, size: 64, offset: 1920)
!4179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4180, size: 64)
!4180 = !DISubroutineType(types: !4181)
!4181 = !{!540, !361, !540, !361, !540, !540, !7}
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !3964, file: !86, line: 1861, baseType: !4028, size: 64, offset: 1984)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3959, file: !86, line: 692, baseType: !676, size: 64)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !439, file: !86, line: 694, baseType: !4185, size: 64, offset: 2560)
!4185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4186, size: 64)
!4186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !86, line: 1100, size: 384, elements: !4187)
!4187 = !{!4188, !4189, !4190, !4191}
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !4186, file: !86, line: 1101, baseType: !243)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !4186, file: !86, line: 1102, baseType: !229, size: 128)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !4186, file: !86, line: 1103, baseType: !229, size: 128, offset: 128)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !4186, file: !86, line: 1104, baseType: !229, size: 128, offset: 256)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !439, file: !86, line: 695, baseType: !810, size: 1216, align: 64, offset: 2624)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !439, file: !86, line: 696, baseType: !229, size: 128, offset: 3840)
!4194 = !DIDerivedType(tag: DW_TAG_member, scope: !439, file: !86, line: 697, baseType: !4195, size: 64, offset: 3968)
!4195 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !439, file: !86, line: 697, size: 64, elements: !4196)
!4196 = !{!4197, !4198, !4199, !4202, !4203}
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !4195, file: !86, line: 698, baseType: !3229, size: 64)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !4195, file: !86, line: 699, baseType: !1040, size: 64)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !4195, file: !86, line: 700, baseType: !4200, size: 64)
!4200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4201, size: 64)
!4201 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !86, line: 700, flags: DIFlagFwdDecl)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !4195, file: !86, line: 701, baseType: !284, size: 64)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !4195, file: !86, line: 702, baseType: !7, size: 32)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !439, file: !86, line: 705, baseType: !426, size: 32, offset: 4032)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !439, file: !86, line: 708, baseType: !426, size: 32, offset: 4064)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !439, file: !86, line: 709, baseType: !3801, size: 64, offset: 4096)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !439, file: !86, line: 720, baseType: !209, size: 64, offset: 4160)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !392, file: !389, line: 98, baseType: !4209, size: 256, offset: 448)
!4209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !436, size: 256, elements: !1133)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !392, file: !389, line: 101, baseType: !4211, size: 32, offset: 704)
!4211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !4212, line: 25, size: 32, elements: !4213)
!4212 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!4213 = !{!4214}
!4214 = !DIDerivedType(tag: DW_TAG_member, scope: !4211, file: !4212, line: 26, baseType: !4215, size: 32)
!4215 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4211, file: !4212, line: 26, size: 32, elements: !4216)
!4216 = !{!4217}
!4217 = !DIDerivedType(tag: DW_TAG_member, scope: !4215, file: !4212, line: 30, baseType: !4218, size: 32)
!4218 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4215, file: !4212, line: 30, size: 32, elements: !4219)
!4219 = !{!4220, !4221}
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4218, file: !4212, line: 31, baseType: !243)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4218, file: !4212, line: 32, baseType: !195, size: 32)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !392, file: !389, line: 102, baseType: !3816, size: 64, offset: 768)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !392, file: !389, line: 103, baseType: !608, size: 64, offset: 832)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !392, file: !389, line: 104, baseType: !333, size: 64, offset: 896)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !392, file: !389, line: 105, baseType: !209, size: 64, offset: 960)
!4226 = !DIDerivedType(tag: DW_TAG_member, scope: !392, file: !389, line: 107, baseType: !4227, size: 128, offset: 1024)
!4227 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !392, file: !389, line: 107, size: 128, elements: !4228)
!4228 = !{!4229, !4230}
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !4227, file: !389, line: 108, baseType: !229, size: 128)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !4227, file: !389, line: 109, baseType: !4231, size: 64)
!4231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !392, file: !389, line: 111, baseType: !229, size: 128, offset: 1152)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !392, file: !389, line: 112, baseType: !229, size: 128, offset: 1280)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !392, file: !389, line: 120, baseType: !4235, size: 128, offset: 1408)
!4235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !392, file: !389, line: 116, size: 128, elements: !4236)
!4236 = !{!4237, !4238, !4239}
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !4235, file: !389, line: 117, baseType: !651, size: 128)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !4235, file: !389, line: 118, baseType: !406, size: 128)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !4235, file: !389, line: 119, baseType: !374, size: 128, align: 64)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !362, file: !86, line: 922, baseType: !438, size: 64, offset: 256)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !362, file: !86, line: 923, baseType: !3962, size: 64, offset: 320)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !362, file: !86, line: 929, baseType: !243, offset: 384)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !362, file: !86, line: 930, baseType: !85, size: 32, offset: 384)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !362, file: !86, line: 931, baseType: !753, size: 64, offset: 448)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !362, file: !86, line: 932, baseType: !7, size: 32, offset: 512)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !362, file: !86, line: 933, baseType: !1265, size: 32, offset: 544)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !362, file: !86, line: 934, baseType: !749, size: 192, offset: 576)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !362, file: !86, line: 935, baseType: !540, size: 64, offset: 768)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !362, file: !86, line: 936, baseType: !4250, size: 192, offset: 832)
!4250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !86, line: 885, size: 192, elements: !4251)
!4251 = !{!4252, !4253, !4254, !4255, !4256, !4257}
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4250, file: !86, line: 886, baseType: !4061)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !4250, file: !86, line: 887, baseType: !2475, size: 64)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !4250, file: !86, line: 888, baseType: !94, size: 32, offset: 64)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4250, file: !86, line: 889, baseType: !444, size: 32, offset: 96)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !4250, file: !86, line: 889, baseType: !444, size: 32, offset: 128)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !4250, file: !86, line: 890, baseType: !195, size: 32, offset: 160)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !362, file: !86, line: 937, baseType: !2545, size: 64, offset: 1024)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !362, file: !86, line: 938, baseType: !4260, size: 256, offset: 1088)
!4260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !86, line: 896, size: 256, elements: !4261)
!4261 = !{!4262, !4263, !4264, !4265, !4266, !4267}
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4260, file: !86, line: 897, baseType: !333, size: 64)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4260, file: !86, line: 898, baseType: !7, size: 32, offset: 64)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !4260, file: !86, line: 899, baseType: !7, size: 32, offset: 96)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !4260, file: !86, line: 902, baseType: !7, size: 32, offset: 128)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !4260, file: !86, line: 903, baseType: !7, size: 32, offset: 160)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !4260, file: !86, line: 904, baseType: !540, size: 64, offset: 192)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !362, file: !86, line: 940, baseType: !430, size: 64, offset: 1344)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !362, file: !86, line: 945, baseType: !209, size: 64, offset: 1408)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !362, file: !86, line: 949, baseType: !229, size: 128, offset: 1472)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !362, file: !86, line: 950, baseType: !229, size: 128, offset: 1600)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !362, file: !86, line: 952, baseType: !809, size: 64, offset: 1728)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !362, file: !86, line: 953, baseType: !1931, size: 32, offset: 1792)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !362, file: !86, line: 954, baseType: !1931, size: 32, offset: 1824)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !352, file: !309, line: 174, baseType: !358, size: 64, offset: 320)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !352, file: !309, line: 176, baseType: !4277, size: 64, offset: 384)
!4277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4278, size: 64)
!4278 = !DISubroutineType(types: !4279)
!4279 = !{!195, !361, !236, !351, !2002}
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !340, file: !309, line: 90, baseType: !335, size: 64, offset: 192)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !340, file: !309, line: 91, baseType: !4282, size: 64, offset: 256)
!4282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !299, file: !222, line: 143, baseType: !4284, size: 64, offset: 256)
!4284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4285, size: 64)
!4285 = !DISubroutineType(types: !4286)
!4286 = !{!4287, !236}
!4287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4288, size: 64)
!4288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4289)
!4289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !103, line: 39, size: 384, elements: !4290)
!4290 = !{!4291, !4292, !4296, !4300, !4306, !4310}
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4289, file: !103, line: 40, baseType: !102, size: 32)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !4289, file: !103, line: 41, baseType: !4293, size: 64, offset: 64)
!4293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4294, size: 64)
!4294 = !DISubroutineType(types: !4295)
!4295 = !{!499}
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !4289, file: !103, line: 42, baseType: !4297, size: 64, offset: 128)
!4297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4298, size: 64)
!4298 = !DISubroutineType(types: !4299)
!4299 = !{!209}
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !4289, file: !103, line: 43, baseType: !4301, size: 64, offset: 192)
!4301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4302, size: 64)
!4302 = !DISubroutineType(types: !4303)
!4303 = !{!3258, !4304}
!4304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4305, size: 64)
!4305 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !103, line: 19, flags: DIFlagFwdDecl)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !4289, file: !103, line: 44, baseType: !4307, size: 64, offset: 256)
!4307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4308, size: 64)
!4308 = !DISubroutineType(types: !4309)
!4309 = !{!3258}
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !4289, file: !103, line: 45, baseType: !477, size: 64, offset: 320)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !299, file: !222, line: 144, baseType: !4312, size: 64, offset: 320)
!4312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4313, size: 64)
!4313 = !DISubroutineType(types: !4314)
!4314 = !{!3258, !236}
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !299, file: !222, line: 145, baseType: !4316, size: 64, offset: 384)
!4316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4317, size: 64)
!4317 = !DISubroutineType(types: !4318)
!4318 = !{null, !236, !2819, !2820}
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !221, file: !222, line: 70, baseType: !4320, size: 64, offset: 384)
!4320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4321, size: 64)
!4321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !628, line: 123, size: 1024, elements: !4322)
!4322 = !{!4323, !4324, !4325, !4326, !4327, !4328, !4329, !4330, !4439, !4440, !4441, !4442, !4443}
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4321, file: !628, line: 124, baseType: !823, size: 32)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4321, file: !628, line: 125, baseType: !823, size: 32, offset: 32)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4321, file: !628, line: 135, baseType: !4320, size: 64, offset: 64)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4321, file: !628, line: 136, baseType: !225, size: 64, offset: 128)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !4321, file: !628, line: 138, baseType: !836, size: 192, align: 64, offset: 192)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4321, file: !628, line: 140, baseType: !3258, size: 64, offset: 384)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4321, file: !628, line: 141, baseType: !7, size: 32, offset: 448)
!4330 = !DIDerivedType(tag: DW_TAG_member, scope: !4321, file: !628, line: 142, baseType: !4331, size: 256, offset: 512)
!4331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4321, file: !628, line: 142, size: 256, elements: !4332)
!4332 = !{!4333, !4379, !4383}
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4331, file: !628, line: 143, baseType: !4334, size: 192)
!4334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !628, line: 91, size: 192, elements: !4335)
!4335 = !{!4336, !4337, !4338}
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !4334, file: !628, line: 92, baseType: !333, size: 64)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4334, file: !628, line: 94, baseType: !832, size: 64, offset: 64)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !4334, file: !628, line: 100, baseType: !4339, size: 64, offset: 128)
!4339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4340, size: 64)
!4340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !628, line: 180, size: 704, elements: !4341)
!4341 = !{!4342, !4343, !4344, !4351, !4352, !4353, !4377, !4378}
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4340, file: !628, line: 182, baseType: !4320, size: 64)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4340, file: !628, line: 183, baseType: !7, size: 32, offset: 64)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !4340, file: !628, line: 186, baseType: !4345, size: 192, offset: 128)
!4345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !4346, line: 19, size: 192, elements: !4347)
!4346 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!4347 = !{!4348, !4349, !4350}
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !4345, file: !4346, line: 20, baseType: !814, size: 128)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !4345, file: !4346, line: 21, baseType: !7, size: 32, offset: 128)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !4345, file: !4346, line: 22, baseType: !7, size: 32, offset: 160)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !4340, file: !628, line: 187, baseType: !424, size: 32, offset: 320)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !4340, file: !628, line: 188, baseType: !424, size: 32, offset: 352)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !4340, file: !628, line: 189, baseType: !4354, size: 64, offset: 384)
!4354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4355, size: 64)
!4355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !628, line: 168, size: 320, elements: !4356)
!4356 = !{!4357, !4361, !4365, !4369, !4373}
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !4355, file: !628, line: 169, baseType: !4358, size: 64)
!4358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4359, size: 64)
!4359 = !DISubroutineType(types: !4360)
!4360 = !{!195, !737, !4339}
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !4355, file: !628, line: 171, baseType: !4362, size: 64, offset: 64)
!4362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4363, size: 64)
!4363 = !DISubroutineType(types: !4364)
!4364 = !{!195, !4320, !225, !324}
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !4355, file: !628, line: 173, baseType: !4366, size: 64, offset: 128)
!4366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4367, size: 64)
!4367 = !DISubroutineType(types: !4368)
!4368 = !{!195, !4320}
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !4355, file: !628, line: 174, baseType: !4370, size: 64, offset: 192)
!4370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4371, size: 64)
!4371 = !DISubroutineType(types: !4372)
!4372 = !{!195, !4320, !4320, !225}
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !4355, file: !628, line: 176, baseType: !4374, size: 64, offset: 256)
!4374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4375, size: 64)
!4375 = !DISubroutineType(types: !4376)
!4376 = !{!195, !737, !4320, !4339}
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !4340, file: !628, line: 192, baseType: !229, size: 128, offset: 448)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !4340, file: !628, line: 194, baseType: !1244, size: 128, offset: 576)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !4331, file: !628, line: 144, baseType: !4380, size: 64)
!4380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !628, line: 103, size: 64, elements: !4381)
!4381 = !{!4382}
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !4380, file: !628, line: 104, baseType: !4320, size: 64)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4331, file: !628, line: 145, baseType: !4384, size: 256)
!4384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !628, line: 107, size: 256, elements: !4385)
!4385 = !{!4386, !4434, !4437, !4438}
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4384, file: !628, line: 108, baseType: !4387, size: 64)
!4387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4388, size: 64)
!4388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4389)
!4389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !628, line: 217, size: 768, elements: !4390)
!4390 = !{!4391, !4411, !4415, !4416, !4417, !4418, !4419, !4423, !4424, !4425, !4426, !4430}
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4389, file: !628, line: 222, baseType: !4392, size: 64)
!4392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4393, size: 64)
!4393 = !DISubroutineType(types: !4394)
!4394 = !{!195, !4395}
!4395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4396, size: 64)
!4396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !628, line: 197, size: 1088, elements: !4397)
!4397 = !{!4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409, !4410}
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4396, file: !628, line: 199, baseType: !4320, size: 64)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4396, file: !628, line: 200, baseType: !361, size: 64, offset: 64)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !4396, file: !628, line: 201, baseType: !737, size: 64, offset: 128)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4396, file: !628, line: 202, baseType: !209, size: 64, offset: 192)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4396, file: !628, line: 205, baseType: !749, size: 192, offset: 256)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !4396, file: !628, line: 206, baseType: !749, size: 192, offset: 448)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4396, file: !628, line: 207, baseType: !195, size: 32, offset: 640)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4396, file: !628, line: 208, baseType: !229, size: 128, offset: 704)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !4396, file: !628, line: 209, baseType: !284, size: 64, offset: 832)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4396, file: !628, line: 211, baseType: !330, size: 64, offset: 896)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !4396, file: !628, line: 212, baseType: !499, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !4396, file: !628, line: 213, baseType: !499, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !4396, file: !628, line: 214, baseType: !2030, size: 64, offset: 1024)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4389, file: !628, line: 223, baseType: !4412, size: 64, offset: 64)
!4412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4413, size: 64)
!4413 = !DISubroutineType(types: !4414)
!4414 = !{null, !4395}
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !4389, file: !628, line: 236, baseType: !781, size: 64, offset: 128)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !4389, file: !628, line: 238, baseType: !768, size: 64, offset: 192)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !4389, file: !628, line: 239, baseType: !777, size: 64, offset: 256)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !4389, file: !628, line: 240, baseType: !773, size: 64, offset: 320)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4389, file: !628, line: 242, baseType: !4420, size: 64, offset: 384)
!4420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4421, size: 64)
!4421 = !DISubroutineType(types: !4422)
!4422 = !{!315, !4395, !284, !330, !540}
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4389, file: !628, line: 252, baseType: !330, size: 64, offset: 448)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !4389, file: !628, line: 259, baseType: !499, size: 8, offset: 512)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4389, file: !628, line: 260, baseType: !4420, size: 64, offset: 576)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4389, file: !628, line: 263, baseType: !4427, size: 64, offset: 640)
!4427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4428, size: 64)
!4428 = !DISubroutineType(types: !4429)
!4429 = !{!4003, !4395, !4005}
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4389, file: !628, line: 266, baseType: !4431, size: 64, offset: 704)
!4431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4432, size: 64)
!4432 = !DISubroutineType(types: !4433)
!4433 = !{!195, !4395, !2002}
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4384, file: !628, line: 109, baseType: !4435, size: 64, offset: 64)
!4435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4436, size: 64)
!4436 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !628, line: 31, flags: DIFlagFwdDecl)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4384, file: !628, line: 110, baseType: !540, size: 64, offset: 128)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !4384, file: !628, line: 111, baseType: !4320, size: 64, offset: 192)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4321, file: !628, line: 148, baseType: !209, size: 64, offset: 768)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4321, file: !628, line: 154, baseType: !430, size: 64, offset: 832)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4321, file: !628, line: 156, baseType: !325, size: 16, offset: 896)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4321, file: !628, line: 157, baseType: !324, size: 16, offset: 912)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !4321, file: !628, line: 158, baseType: !4444, size: 64, offset: 960)
!4444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4445, size: 64)
!4445 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !628, line: 32, flags: DIFlagFwdDecl)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !221, file: !222, line: 71, baseType: !1627, size: 32, offset: 448)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !221, file: !222, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !221, file: !222, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !221, file: !222, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !221, file: !222, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !221, file: !222, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !218, file: !115, line: 463, baseType: !1695, size: 64, offset: 512)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !218, file: !115, line: 465, baseType: !4454, size: 64, offset: 576)
!4454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4455, size: 64)
!4455 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !115, line: 36, flags: DIFlagFwdDecl)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !218, file: !115, line: 467, baseType: !225, size: 64, offset: 640)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !218, file: !115, line: 468, baseType: !4458, size: 64, offset: 704)
!4458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4459, size: 64)
!4459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4460)
!4460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !115, line: 87, size: 384, elements: !4461)
!4461 = !{!4462, !4463, !4464, !4468, !4472, !4476}
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4460, file: !115, line: 88, baseType: !225, size: 64)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4460, file: !115, line: 89, baseType: !337, size: 64, offset: 64)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4460, file: !115, line: 90, baseType: !4465, size: 64, offset: 128)
!4465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4466, size: 64)
!4466 = !DISubroutineType(types: !4467)
!4467 = !{!195, !1695, !279}
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4460, file: !115, line: 91, baseType: !4469, size: 64, offset: 192)
!4469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4470, size: 64)
!4470 = !DISubroutineType(types: !4471)
!4471 = !{!284, !1695, !1333, !2819, !2820}
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4460, file: !115, line: 93, baseType: !4473, size: 64, offset: 256)
!4473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4474, size: 64)
!4474 = !DISubroutineType(types: !4475)
!4475 = !{null, !1695}
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4460, file: !115, line: 95, baseType: !4477, size: 64, offset: 320)
!4477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4478, size: 64)
!4478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4479)
!4479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !44, line: 278, size: 1472, elements: !4480)
!4480 = !{!4481, !4485, !4486, !4487, !4488, !4489, !4490, !4491, !4492, !4493, !4494, !4495, !4496, !4497, !4498, !4499, !4500, !4501, !4502, !4503, !4504, !4505, !4506}
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4479, file: !44, line: 279, baseType: !4482, size: 64)
!4482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4483, size: 64)
!4483 = !DISubroutineType(types: !4484)
!4484 = !{!195, !1695}
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4479, file: !44, line: 280, baseType: !4473, size: 64, offset: 64)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4479, file: !44, line: 281, baseType: !4482, size: 64, offset: 128)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4479, file: !44, line: 282, baseType: !4482, size: 64, offset: 192)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !4479, file: !44, line: 283, baseType: !4482, size: 64, offset: 256)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !4479, file: !44, line: 284, baseType: !4482, size: 64, offset: 320)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !4479, file: !44, line: 285, baseType: !4482, size: 64, offset: 384)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !4479, file: !44, line: 286, baseType: !4482, size: 64, offset: 448)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !4479, file: !44, line: 287, baseType: !4482, size: 64, offset: 512)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !4479, file: !44, line: 288, baseType: !4482, size: 64, offset: 576)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !4479, file: !44, line: 289, baseType: !4482, size: 64, offset: 640)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !4479, file: !44, line: 290, baseType: !4482, size: 64, offset: 704)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !4479, file: !44, line: 291, baseType: !4482, size: 64, offset: 768)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !4479, file: !44, line: 292, baseType: !4482, size: 64, offset: 832)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !4479, file: !44, line: 293, baseType: !4482, size: 64, offset: 896)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !4479, file: !44, line: 294, baseType: !4482, size: 64, offset: 960)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !4479, file: !44, line: 295, baseType: !4482, size: 64, offset: 1024)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !4479, file: !44, line: 296, baseType: !4482, size: 64, offset: 1088)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !4479, file: !44, line: 297, baseType: !4482, size: 64, offset: 1152)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !4479, file: !44, line: 298, baseType: !4482, size: 64, offset: 1216)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !4479, file: !44, line: 299, baseType: !4482, size: 64, offset: 1280)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !4479, file: !44, line: 300, baseType: !4482, size: 64, offset: 1344)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !4479, file: !44, line: 301, baseType: !4482, size: 64, offset: 1408)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !218, file: !115, line: 470, baseType: !4508, size: 64, offset: 768)
!4508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4509, size: 64)
!4509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !4510, line: 82, size: 1408, elements: !4511)
!4510 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!4511 = !{!4512, !4513, !4514, !4515, !4516, !4517, !4518, !4577, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586, !4587, !4588, !4589, !4593, !4596, !4597}
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4509, file: !4510, line: 83, baseType: !225, size: 64)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4509, file: !4510, line: 84, baseType: !225, size: 64, offset: 64)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !4509, file: !4510, line: 85, baseType: !1695, size: 64, offset: 128)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !4509, file: !4510, line: 86, baseType: !337, size: 64, offset: 192)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4509, file: !4510, line: 87, baseType: !337, size: 64, offset: 256)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !4509, file: !4510, line: 88, baseType: !337, size: 64, offset: 320)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4509, file: !4510, line: 90, baseType: !4519, size: 64, offset: 384)
!4519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4520, size: 64)
!4520 = !DISubroutineType(types: !4521)
!4521 = !{!195, !1695, !4522}
!4522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4523, size: 64)
!4523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !109, line: 95, size: 1152, elements: !4524)
!4524 = !{!4525, !4526, !4527, !4528, !4529, !4530, !4531, !4544, !4557, !4558, !4559, !4560, !4561, !4569, !4570, !4571, !4572, !4573, !4574}
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4523, file: !109, line: 96, baseType: !225, size: 64)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4523, file: !109, line: 97, baseType: !4508, size: 64, offset: 64)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4523, file: !109, line: 99, baseType: !642, size: 64, offset: 128)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !4523, file: !109, line: 100, baseType: !225, size: 64, offset: 192)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !4523, file: !109, line: 102, baseType: !499, size: 8, offset: 256)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !4523, file: !109, line: 103, baseType: !108, size: 32, offset: 288)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !4523, file: !109, line: 105, baseType: !4532, size: 64, offset: 320)
!4532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4533, size: 64)
!4533 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4534)
!4534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !4535, line: 262, size: 1600, elements: !4536)
!4535 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!4536 = !{!4537, !4538, !4539, !4543}
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4534, file: !4535, line: 263, baseType: !1132, size: 256)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4534, file: !4535, line: 264, baseType: !1132, size: 256, offset: 256)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !4534, file: !4535, line: 265, baseType: !4540, size: 1024, offset: 512)
!4540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 1024, elements: !4541)
!4541 = !{!4542}
!4542 = !DISubrange(count: 128)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4534, file: !4535, line: 266, baseType: !3258, size: 64, offset: 1536)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !4523, file: !109, line: 106, baseType: !4545, size: 64, offset: 384)
!4545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4546, size: 64)
!4546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4547)
!4547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !4535, line: 210, size: 256, elements: !4548)
!4548 = !{!4549, !4553, !4555, !4556}
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4547, file: !4535, line: 211, baseType: !4550, size: 72)
!4550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1057, size: 72, elements: !4551)
!4551 = !{!4552}
!4552 = !DISubrange(count: 9)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4547, file: !4535, line: 212, baseType: !4554, size: 64, offset: 128)
!4554 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !4535, line: 14, baseType: !333)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !4547, file: !4535, line: 213, baseType: !426, size: 32, offset: 192)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !4547, file: !4535, line: 214, baseType: !426, size: 32, offset: 224)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4523, file: !109, line: 108, baseType: !4482, size: 64, offset: 448)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4523, file: !109, line: 109, baseType: !4473, size: 64, offset: 512)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4523, file: !109, line: 110, baseType: !4482, size: 64, offset: 576)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4523, file: !109, line: 111, baseType: !4473, size: 64, offset: 640)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4523, file: !109, line: 112, baseType: !4562, size: 64, offset: 704)
!4562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4563, size: 64)
!4563 = !DISubroutineType(types: !4564)
!4564 = !{!195, !1695, !4565}
!4565 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !44, line: 52, baseType: !4566)
!4566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !44, line: 50, size: 32, elements: !4567)
!4567 = !{!4568}
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4566, file: !44, line: 51, baseType: !195, size: 32)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4523, file: !109, line: 113, baseType: !4482, size: 64, offset: 768)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4523, file: !109, line: 114, baseType: !337, size: 64, offset: 832)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4523, file: !109, line: 115, baseType: !337, size: 64, offset: 896)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4523, file: !109, line: 117, baseType: !4477, size: 64, offset: 960)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !4523, file: !109, line: 118, baseType: !4473, size: 64, offset: 1024)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4523, file: !109, line: 120, baseType: !4575, size: 64, offset: 1088)
!4575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4576, size: 64)
!4576 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !109, line: 120, flags: DIFlagFwdDecl)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4509, file: !4510, line: 91, baseType: !4465, size: 64, offset: 448)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4509, file: !4510, line: 92, baseType: !4482, size: 64, offset: 512)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4509, file: !4510, line: 93, baseType: !4473, size: 64, offset: 576)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4509, file: !4510, line: 94, baseType: !4482, size: 64, offset: 640)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4509, file: !4510, line: 95, baseType: !4473, size: 64, offset: 704)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4509, file: !4510, line: 97, baseType: !4482, size: 64, offset: 768)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4509, file: !4510, line: 98, baseType: !4482, size: 64, offset: 832)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4509, file: !4510, line: 100, baseType: !4562, size: 64, offset: 896)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4509, file: !4510, line: 101, baseType: !4482, size: 64, offset: 960)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !4509, file: !4510, line: 103, baseType: !4482, size: 64, offset: 1024)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !4509, file: !4510, line: 105, baseType: !4482, size: 64, offset: 1088)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4509, file: !4510, line: 107, baseType: !4477, size: 64, offset: 1152)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !4509, file: !4510, line: 109, baseType: !4590, size: 64, offset: 1216)
!4590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4591, size: 64)
!4591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4592)
!4592 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !4510, line: 109, flags: DIFlagFwdDecl)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4509, file: !4510, line: 111, baseType: !4594, size: 64, offset: 1280)
!4594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4595, size: 64)
!4595 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !4510, line: 111, flags: DIFlagFwdDecl)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4509, file: !4510, line: 112, baseType: !657, offset: 1344)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !4509, file: !4510, line: 114, baseType: !499, size: 8, offset: 1344)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !218, file: !115, line: 471, baseType: !4522, size: 64, offset: 832)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !218, file: !115, line: 473, baseType: !209, size: 64, offset: 896)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !218, file: !115, line: 475, baseType: !209, size: 64, offset: 960)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !218, file: !115, line: 480, baseType: !749, size: 192, offset: 1024)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !218, file: !115, line: 484, baseType: !4603, size: 576, offset: 1216)
!4603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !115, line: 361, size: 576, elements: !4604)
!4604 = !{!4605, !4606, !4607, !4608, !4609, !4610}
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !4603, file: !115, line: 362, baseType: !229, size: 128)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !4603, file: !115, line: 363, baseType: !229, size: 128, offset: 128)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !4603, file: !115, line: 364, baseType: !229, size: 128, offset: 256)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !4603, file: !115, line: 365, baseType: !229, size: 128, offset: 384)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !4603, file: !115, line: 366, baseType: !499, size: 8, offset: 512)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4603, file: !115, line: 367, baseType: !114, size: 32, offset: 544)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !218, file: !115, line: 485, baseType: !4612, size: 2304, offset: 1792)
!4612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !44, line: 565, size: 2304, elements: !4613)
!4613 = !{!4614, !4615, !4616, !4617, !4618, !4619, !4620, !4621, !4622, !4623, !4624, !4625, !4626, !4627, !4628, !4629, !4662, !4663, !4664, !4665, !4666, !4667, !4668, !4669, !4670, !4671, !4672, !4673, !4674, !4675, !4676, !4677, !4678, !4679, !4680, !4681, !4682, !4683, !4684, !4685, !4686, !4687, !4688, !4689, !4690, !4691, !4692, !4693, !4694, !4707, !4711}
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !4612, file: !44, line: 566, baseType: !4565, size: 32)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !4612, file: !44, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !4612, file: !44, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !4612, file: !44, line: 569, baseType: !499, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !4612, file: !44, line: 570, baseType: !499, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !4612, file: !44, line: 571, baseType: !499, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !4612, file: !44, line: 572, baseType: !499, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !4612, file: !44, line: 573, baseType: !499, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !4612, file: !44, line: 574, baseType: !499, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !4612, file: !44, line: 575, baseType: !499, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !4612, file: !44, line: 576, baseType: !499, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !4612, file: !44, line: 577, baseType: !424, size: 32, offset: 64)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4612, file: !44, line: 578, baseType: !243, offset: 96)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4612, file: !44, line: 580, baseType: !229, size: 128, offset: 128)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4612, file: !44, line: 581, baseType: !2500, size: 192, offset: 256)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4612, file: !44, line: 582, baseType: !4630, size: 64, offset: 448)
!4630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4631, size: 64)
!4631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !4632, line: 43, size: 1472, elements: !4633)
!4632 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!4633 = !{!4634, !4635, !4636, !4637, !4638, !4647, !4648, !4649, !4650, !4651, !4652, !4653, !4654, !4655, !4656, !4657, !4658, !4659, !4660, !4661}
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4631, file: !4632, line: 44, baseType: !225, size: 64)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4631, file: !4632, line: 45, baseType: !195, size: 32, offset: 64)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4631, file: !4632, line: 46, baseType: !229, size: 128, offset: 128)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4631, file: !4632, line: 47, baseType: !243, offset: 256)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4631, file: !4632, line: 48, baseType: !4639, size: 64, offset: 256)
!4639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4640, size: 64)
!4640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !4641, line: 31, size: 192, elements: !4642)
!4641 = !DIFile(filename: "drivers/base/power/power.h", directory: "/home/lizy2001/genbc/linux")
!4642 = !{!4643, !4644, !4645, !4646}
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4640, file: !4641, line: 32, baseType: !1695, size: 64)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4640, file: !4641, line: 33, baseType: !7, size: 32, offset: 64)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4640, file: !4641, line: 34, baseType: !195, size: 32, offset: 96)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4640, file: !4641, line: 35, baseType: !225, size: 64, offset: 128)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4631, file: !4632, line: 49, baseType: !1677, size: 320, offset: 320)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4631, file: !4632, line: 50, baseType: !333, size: 64, offset: 640)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !4631, file: !4632, line: 51, baseType: !2307, size: 64, offset: 704)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !4631, file: !4632, line: 52, baseType: !2307, size: 64, offset: 768)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !4631, file: !4632, line: 53, baseType: !2307, size: 64, offset: 832)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !4631, file: !4632, line: 54, baseType: !2307, size: 64, offset: 896)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !4631, file: !4632, line: 55, baseType: !2307, size: 64, offset: 960)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !4631, file: !4632, line: 56, baseType: !333, size: 64, offset: 1024)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !4631, file: !4632, line: 57, baseType: !333, size: 64, offset: 1088)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !4631, file: !4632, line: 58, baseType: !333, size: 64, offset: 1152)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !4631, file: !4632, line: 59, baseType: !333, size: 64, offset: 1216)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !4631, file: !4632, line: 60, baseType: !333, size: 64, offset: 1280)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4631, file: !4632, line: 61, baseType: !1695, size: 64, offset: 1344)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4631, file: !4632, line: 62, baseType: !499, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !4631, file: !4632, line: 63, baseType: !499, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !4612, file: !44, line: 583, baseType: !499, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !4612, file: !44, line: 584, baseType: !499, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !4612, file: !44, line: 585, baseType: !499, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !4612, file: !44, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !4612, file: !44, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !4612, file: !44, line: 592, baseType: !2299, size: 512, offset: 576)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4612, file: !44, line: 593, baseType: !430, size: 64, offset: 1088)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4612, file: !44, line: 594, baseType: !1108, size: 256, offset: 1152)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4612, file: !44, line: 595, baseType: !1244, size: 128, offset: 1408)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4612, file: !44, line: 596, baseType: !4639, size: 64, offset: 1536)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !4612, file: !44, line: 597, baseType: !823, size: 32, offset: 1600)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4612, file: !44, line: 598, baseType: !823, size: 32, offset: 1632)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !4612, file: !44, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !4612, file: !44, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !4612, file: !44, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !4612, file: !44, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !4612, file: !44, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !4612, file: !44, line: 604, baseType: !499, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !4612, file: !44, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !4612, file: !44, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !4612, file: !44, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !4612, file: !44, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !4612, file: !44, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !4612, file: !44, line: 610, baseType: !7, size: 32, offset: 1696)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4612, file: !44, line: 611, baseType: !121, size: 32, offset: 1728)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !4612, file: !44, line: 612, baseType: !43, size: 32, offset: 1760)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !4612, file: !44, line: 613, baseType: !195, size: 32, offset: 1792)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !4612, file: !44, line: 614, baseType: !195, size: 32, offset: 1824)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !4612, file: !44, line: 615, baseType: !430, size: 64, offset: 1856)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !4612, file: !44, line: 616, baseType: !430, size: 64, offset: 1920)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !4612, file: !44, line: 617, baseType: !430, size: 64, offset: 1984)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !4612, file: !44, line: 618, baseType: !430, size: 64, offset: 2048)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !4612, file: !44, line: 620, baseType: !4695, size: 64, offset: 2112)
!4695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4696, size: 64)
!4696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !44, line: 536, size: 256, elements: !4697)
!4697 = !{!4698, !4699, !4700, !4701}
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4696, file: !44, line: 537, baseType: !243)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4696, file: !44, line: 538, baseType: !7, size: 32)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4696, file: !44, line: 540, baseType: !229, size: 128, offset: 64)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4696, file: !44, line: 543, baseType: !4702, size: 64, offset: 192)
!4702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4703, size: 64)
!4703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !146, line: 182, size: 192, elements: !4704)
!4704 = !{!4705, !4706}
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "list_node", scope: !4703, file: !146, line: 183, baseType: !229, size: 128)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4703, file: !146, line: 184, baseType: !1695, size: 64, offset: 128)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !4612, file: !44, line: 621, baseType: !4708, size: 64, offset: 2176)
!4708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4709, size: 64)
!4709 = !DISubroutineType(types: !4710)
!4710 = !{null, !1695, !2449}
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4612, file: !44, line: 622, baseType: !4712, size: 64, offset: 2240)
!4712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4713, size: 64)
!4713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !129, line: 117, size: 2304, elements: !4714)
!4714 = !{!4715, !4743, !4744, !4751, !4756, !4778, !4779}
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "resume_latency", scope: !4713, file: !129, line: 118, baseType: !4716, size: 320)
!4716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_qos_constraints", file: !129, line: 52, size: 320, elements: !4717)
!4717 = !{!4718, !4722, !4723, !4724, !4725, !4726}
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4716, file: !129, line: 53, baseType: !4719, size: 128)
!4719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plist_head", file: !1002, line: 79, size: 128, elements: !4720)
!4720 = !{!4721}
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "node_list", scope: !4719, file: !1002, line: 80, baseType: !229, size: 128)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "target_value", scope: !4716, file: !129, line: 54, baseType: !2449, size: 32, offset: 128)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "default_value", scope: !4716, file: !129, line: 55, baseType: !2449, size: 32, offset: 160)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "no_constraint_value", scope: !4716, file: !129, line: 56, baseType: !2449, size: 32, offset: 192)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4716, file: !129, line: 57, baseType: !128, size: 32, offset: 224)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "notifiers", scope: !4716, file: !129, line: 58, baseType: !4727, size: 64, offset: 256)
!4727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4728, size: 64)
!4728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !4729, line: 65, size: 320, elements: !4730)
!4729 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!4730 = !{!4731, !4732}
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !4728, file: !4729, line: 66, baseType: !843, size: 256)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4728, file: !4729, line: 67, baseType: !4733, size: 64, offset: 256)
!4733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4734, size: 64)
!4734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !4729, line: 54, size: 192, elements: !4735)
!4735 = !{!4736, !4741, !4742}
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !4734, file: !4729, line: 55, baseType: !4737, size: 64)
!4737 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !4729, line: 51, baseType: !4738)
!4738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4739, size: 64)
!4739 = !DISubroutineType(types: !4740)
!4740 = !{!195, !4733, !333, !209}
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4734, file: !4729, line: 56, baseType: !4733, size: 64, offset: 64)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !4734, file: !4729, line: 57, baseType: !195, size: 32, offset: 128)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "latency_tolerance", scope: !4713, file: !129, line: 119, baseType: !4716, size: 320, offset: 320)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !4713, file: !129, line: 120, baseType: !4745, size: 1280, offset: 640)
!4745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "freq_constraints", file: !129, line: 85, size: 1280, elements: !4746)
!4746 = !{!4747, !4748, !4749, !4750}
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "min_freq", scope: !4745, file: !129, line: 86, baseType: !4716, size: 320)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "min_freq_notifiers", scope: !4745, file: !129, line: 87, baseType: !4728, size: 320, offset: 320)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "max_freq", scope: !4745, file: !129, line: 88, baseType: !4716, size: 320, offset: 640)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "max_freq_notifiers", scope: !4745, file: !129, line: 89, baseType: !4728, size: 320, offset: 960)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4713, file: !129, line: 121, baseType: !4752, size: 192, offset: 1920)
!4752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_qos_flags", file: !129, line: 71, size: 192, elements: !4753)
!4753 = !{!4754, !4755}
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4752, file: !129, line: 72, baseType: !229, size: 128)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "effective_flags", scope: !4752, file: !129, line: 73, baseType: !2449, size: 32, offset: 128)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "resume_latency_req", scope: !4713, file: !129, line: 122, baseType: !4757, size: 64, offset: 2112)
!4757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4758, size: 64)
!4758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos_request", file: !129, line: 107, size: 576, elements: !4759)
!4759 = !{!4760, !4761, !4777}
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4758, file: !129, line: 108, baseType: !134, size: 32)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4758, file: !129, line: 113, baseType: !4762, size: 448, offset: 64)
!4762 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4758, file: !129, line: 109, size: 448, elements: !4763)
!4763 = !{!4764, !4765, !4770}
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "pnode", scope: !4762, file: !129, line: 110, baseType: !1001, size: 320)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "flr", scope: !4762, file: !129, line: 111, baseType: !4766, size: 192)
!4766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_qos_flags_request", file: !129, line: 66, size: 192, elements: !4767)
!4767 = !{!4768, !4769}
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4766, file: !129, line: 67, baseType: !229, size: 128)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4766, file: !129, line: 68, baseType: !2449, size: 32, offset: 128)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !4762, file: !129, line: 112, baseType: !4771, size: 448)
!4771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "freq_qos_request", file: !129, line: 92, size: 448, elements: !4772)
!4772 = !{!4773, !4774, !4775}
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4771, file: !129, line: 93, baseType: !141, size: 32)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "pnode", scope: !4771, file: !129, line: 94, baseType: !1001, size: 320, offset: 64)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4771, file: !129, line: 95, baseType: !4776, size: 64, offset: 384)
!4776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4745, size: 64)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4758, file: !129, line: 114, baseType: !1695, size: 64, offset: 512)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "latency_tolerance_req", scope: !4713, file: !129, line: 123, baseType: !4757, size: 64, offset: 2176)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "flags_req", scope: !4713, file: !129, line: 124, baseType: !4757, size: 64, offset: 2240)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !218, file: !115, line: 486, baseType: !4781, size: 64, offset: 4096)
!4781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4782, size: 64)
!4782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !44, line: 642, size: 1792, elements: !4783)
!4783 = !{!4784, !4785, !4786, !4790, !4791, !4792}
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4782, file: !44, line: 643, baseType: !4479, size: 1472)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4782, file: !44, line: 644, baseType: !4482, size: 64, offset: 1472)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4782, file: !44, line: 645, baseType: !4787, size: 64, offset: 1536)
!4787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4788, size: 64)
!4788 = !DISubroutineType(types: !4789)
!4789 = !{null, !1695, !499}
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4782, file: !44, line: 646, baseType: !4482, size: 64, offset: 1600)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4782, file: !44, line: 647, baseType: !4473, size: 64, offset: 1664)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4782, file: !44, line: 648, baseType: !4473, size: 64, offset: 1728)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !218, file: !115, line: 493, baseType: !4794, size: 64, offset: 4160)
!4794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4795, size: 64)
!4795 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !115, line: 493, flags: DIFlagFwdDecl)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !218, file: !115, line: 499, baseType: !229, size: 128, offset: 4224)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !218, file: !115, line: 502, baseType: !4798, size: 64, offset: 4352)
!4798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4799, size: 64)
!4799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4800)
!4800 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !115, line: 502, flags: DIFlagFwdDecl)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !218, file: !115, line: 504, baseType: !4802, size: 64, offset: 4416)
!4802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !218, file: !115, line: 505, baseType: !430, size: 64, offset: 4480)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !218, file: !115, line: 510, baseType: !430, size: 64, offset: 4544)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !218, file: !115, line: 511, baseType: !4806, size: 64, offset: 4608)
!4806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4807, size: 64)
!4807 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4808)
!4808 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !115, line: 511, flags: DIFlagFwdDecl)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !218, file: !115, line: 513, baseType: !4810, size: 64, offset: 4672)
!4810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4811, size: 64)
!4811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !115, line: 288, size: 128, elements: !4812)
!4812 = !{!4813, !4814}
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4811, file: !115, line: 293, baseType: !7, size: 32)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4811, file: !115, line: 294, baseType: !333, size: 64, offset: 64)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !218, file: !115, line: 515, baseType: !229, size: 128, offset: 4736)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !218, file: !115, line: 526, baseType: !4817, offset: 4864)
!4817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4818, line: 5, elements: !257)
!4818 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !218, file: !115, line: 528, baseType: !4820, size: 64, offset: 4864)
!4820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4821, size: 64)
!4821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !4822, line: 51, size: 1344, elements: !4823)
!4822 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!4823 = !{!4824, !4825, !4827, !4828, !4918, !4927, !4928, !4929, !4930, !4931, !4932, !4933}
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4821, file: !4822, line: 52, baseType: !225, size: 64)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !4821, file: !4822, line: 53, baseType: !4826, size: 32, offset: 64)
!4826 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !4822, line: 28, baseType: !424)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !4821, file: !4822, line: 54, baseType: !225, size: 64, offset: 128)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4821, file: !4822, line: 55, baseType: !4829, size: 192, offset: 192)
!4829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !4830, line: 17, size: 192, elements: !4831)
!4830 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!4831 = !{!4832, !4834, !4917}
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4829, file: !4830, line: 18, baseType: !4833, size: 64)
!4833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4829, size: 64)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4829, file: !4830, line: 19, baseType: !4835, size: 64, offset: 64)
!4835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4836, size: 64)
!4836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4837)
!4837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !4830, line: 110, size: 1152, elements: !4838)
!4838 = !{!4839, !4843, !4847, !4853, !4859, !4863, !4867, !4872, !4876, !4877, !4881, !4885, !4889, !4900, !4901, !4902, !4903, !4913}
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4837, file: !4830, line: 111, baseType: !4840, size: 64)
!4840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4841, size: 64)
!4841 = !DISubroutineType(types: !4842)
!4842 = !{!4833, !4833}
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !4837, file: !4830, line: 112, baseType: !4844, size: 64, offset: 64)
!4844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4845, size: 64)
!4845 = !DISubroutineType(types: !4846)
!4846 = !{null, !4833}
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !4837, file: !4830, line: 113, baseType: !4848, size: 64, offset: 128)
!4848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4849, size: 64)
!4849 = !DISubroutineType(types: !4850)
!4850 = !{!499, !4851}
!4851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4852, size: 64)
!4852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4829)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !4837, file: !4830, line: 114, baseType: !4854, size: 64, offset: 192)
!4854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4855, size: 64)
!4855 = !DISubroutineType(types: !4856)
!4856 = !{!3258, !4851, !4857}
!4857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4858, size: 64)
!4858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !218)
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !4837, file: !4830, line: 116, baseType: !4860, size: 64, offset: 256)
!4860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4861, size: 64)
!4861 = !DISubroutineType(types: !4862)
!4862 = !{!499, !4851, !225}
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !4837, file: !4830, line: 118, baseType: !4864, size: 64, offset: 320)
!4864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4865, size: 64)
!4865 = !DISubroutineType(types: !4866)
!4866 = !{!195, !4851, !225, !7, !209, !330}
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !4837, file: !4830, line: 123, baseType: !4868, size: 64, offset: 384)
!4868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4869, size: 64)
!4869 = !DISubroutineType(types: !4870)
!4870 = !{!195, !4851, !225, !4871, !330}
!4871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !225, size: 64)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4837, file: !4830, line: 126, baseType: !4873, size: 64, offset: 448)
!4873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4874, size: 64)
!4874 = !DISubroutineType(types: !4875)
!4875 = !{!225, !4851}
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !4837, file: !4830, line: 127, baseType: !4873, size: 64, offset: 512)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !4837, file: !4830, line: 128, baseType: !4878, size: 64, offset: 576)
!4878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4879, size: 64)
!4879 = !DISubroutineType(types: !4880)
!4880 = !{!4833, !4851}
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !4837, file: !4830, line: 130, baseType: !4882, size: 64, offset: 640)
!4882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4883, size: 64)
!4883 = !DISubroutineType(types: !4884)
!4884 = !{!4833, !4851, !4833}
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !4837, file: !4830, line: 133, baseType: !4886, size: 64, offset: 704)
!4886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4887, size: 64)
!4887 = !DISubroutineType(types: !4888)
!4888 = !{!4833, !4851, !225}
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !4837, file: !4830, line: 135, baseType: !4890, size: 64, offset: 768)
!4890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4891, size: 64)
!4891 = !DISubroutineType(types: !4892)
!4892 = !{!195, !4851, !225, !225, !7, !7, !4893}
!4893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4894, size: 64)
!4894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !4830, line: 43, size: 640, elements: !4895)
!4895 = !{!4896, !4897, !4898}
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4894, file: !4830, line: 44, baseType: !4833, size: 64)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4894, file: !4830, line: 45, baseType: !7, size: 32, offset: 64)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4894, file: !4830, line: 46, baseType: !4899, size: 512, offset: 128)
!4899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !430, size: 512, elements: !2337)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !4837, file: !4830, line: 140, baseType: !4882, size: 64, offset: 832)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !4837, file: !4830, line: 143, baseType: !4878, size: 64, offset: 896)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !4837, file: !4830, line: 145, baseType: !4840, size: 64, offset: 960)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !4837, file: !4830, line: 146, baseType: !4904, size: 64, offset: 1024)
!4904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4905, size: 64)
!4905 = !DISubroutineType(types: !4906)
!4906 = !{!195, !4851, !4907}
!4907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4908, size: 64)
!4908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !4830, line: 29, size: 128, elements: !4909)
!4909 = !{!4910, !4911, !4912}
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4908, file: !4830, line: 30, baseType: !7, size: 32)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4908, file: !4830, line: 31, baseType: !7, size: 32, offset: 32)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4908, file: !4830, line: 32, baseType: !4851, size: 64, offset: 64)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !4837, file: !4830, line: 148, baseType: !4914, size: 64, offset: 1088)
!4914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4915, size: 64)
!4915 = !DISubroutineType(types: !4916)
!4916 = !{!195, !4851, !1695}
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4829, file: !4830, line: 20, baseType: !1695, size: 64, offset: 128)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4821, file: !4822, line: 57, baseType: !4919, size: 64, offset: 384)
!4919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4920, size: 64)
!4920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !4822, line: 31, size: 704, elements: !4921)
!4921 = !{!4922, !4923, !4924, !4925, !4926}
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4920, file: !4822, line: 32, baseType: !284, size: 64)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4920, file: !4822, line: 33, baseType: !195, size: 32, offset: 64)
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4920, file: !4822, line: 34, baseType: !209, size: 64, offset: 128)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4920, file: !4822, line: 35, baseType: !4919, size: 64, offset: 192)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4920, file: !4822, line: 43, baseType: !352, size: 448, offset: 256)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !4821, file: !4822, line: 58, baseType: !4919, size: 64, offset: 448)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4821, file: !4822, line: 59, baseType: !4820, size: 64, offset: 512)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4821, file: !4822, line: 60, baseType: !4820, size: 64, offset: 576)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4821, file: !4822, line: 61, baseType: !4820, size: 64, offset: 640)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4821, file: !4822, line: 63, baseType: !221, size: 512, offset: 704)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4821, file: !4822, line: 65, baseType: !333, size: 64, offset: 1216)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4821, file: !4822, line: 66, baseType: !209, size: 64, offset: 1280)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !218, file: !115, line: 529, baseType: !4833, size: 64, offset: 4928)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !218, file: !115, line: 534, baseType: !522, size: 32, offset: 4992)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !218, file: !115, line: 535, baseType: !424, size: 32, offset: 5024)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !218, file: !115, line: 537, baseType: !243, offset: 5056)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !218, file: !115, line: 538, baseType: !229, size: 128, offset: 5056)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !218, file: !115, line: 540, baseType: !4940, size: 64, offset: 5184)
!4940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4941, size: 64)
!4941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4942, line: 54, size: 960, elements: !4943)
!4942 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4943 = !{!4944, !4945, !4946, !4947, !4948, !4949, !4950, !4954, !4958, !4959, !4960, !4961, !4965, !4969, !4970}
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4941, file: !4942, line: 55, baseType: !225, size: 64)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4941, file: !4942, line: 56, baseType: !642, size: 64, offset: 64)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4941, file: !4942, line: 58, baseType: !337, size: 64, offset: 128)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4941, file: !4942, line: 59, baseType: !337, size: 64, offset: 192)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4941, file: !4942, line: 60, baseType: !236, size: 64, offset: 256)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4941, file: !4942, line: 62, baseType: !4465, size: 64, offset: 320)
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4941, file: !4942, line: 63, baseType: !4951, size: 64, offset: 384)
!4951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4952, size: 64)
!4952 = !DISubroutineType(types: !4953)
!4953 = !{!284, !1695, !1333}
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4941, file: !4942, line: 65, baseType: !4955, size: 64, offset: 448)
!4955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4956, size: 64)
!4956 = !DISubroutineType(types: !4957)
!4957 = !{null, !4940}
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4941, file: !4942, line: 66, baseType: !4473, size: 64, offset: 512)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4941, file: !4942, line: 68, baseType: !4482, size: 64, offset: 576)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4941, file: !4942, line: 70, baseType: !4287, size: 64, offset: 640)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4941, file: !4942, line: 71, baseType: !4962, size: 64, offset: 704)
!4962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4963, size: 64)
!4963 = !DISubroutineType(types: !4964)
!4964 = !{!3258, !1695}
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4941, file: !4942, line: 73, baseType: !4966, size: 64, offset: 768)
!4966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4967, size: 64)
!4967 = !DISubroutineType(types: !4968)
!4968 = !{null, !1695, !2819, !2820}
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4941, file: !4942, line: 75, baseType: !4477, size: 64, offset: 832)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4941, file: !4942, line: 77, baseType: !4594, size: 64, offset: 896)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !218, file: !115, line: 541, baseType: !337, size: 64, offset: 5248)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !218, file: !115, line: 543, baseType: !4473, size: 64, offset: 5312)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !218, file: !115, line: 544, baseType: !4974, size: 64, offset: 5376)
!4974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4975, size: 64)
!4975 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !115, line: 45, flags: DIFlagFwdDecl)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !218, file: !115, line: 545, baseType: !4977, size: 64, offset: 5440)
!4977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4978, size: 64)
!4978 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !115, line: 47, flags: DIFlagFwdDecl)
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !218, file: !115, line: 547, baseType: !499, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !218, file: !115, line: 548, baseType: !499, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !218, file: !115, line: 549, baseType: !499, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !218, file: !115, line: 550, baseType: !499, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !215, file: !146, line: 105, baseType: !4782, size: 1792, offset: 5568)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "gpd_list_node", scope: !215, file: !146, line: 106, baseType: !229, size: 128, offset: 7360)
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "parent_links", scope: !215, file: !146, line: 107, baseType: !229, size: 128, offset: 7488)
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "child_links", scope: !215, file: !146, line: 108, baseType: !229, size: 128, offset: 7616)
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !215, file: !146, line: 109, baseType: !229, size: 128, offset: 7744)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "gov", scope: !215, file: !146, line: 110, baseType: !4989, size: 64, offset: 7872)
!4989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4990, size: 64)
!4990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_power_governor", file: !146, line: 78, size: 128, elements: !4991)
!4991 = !{!4992, !4996}
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "power_down_ok", scope: !4990, file: !146, line: 79, baseType: !4993, size: 64)
!4993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4994, size: 64)
!4994 = !DISubroutineType(types: !4995)
!4995 = !{!499, !4781}
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_ok", scope: !4990, file: !146, line: 80, baseType: !4997, size: 64, offset: 64)
!4997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4998, size: 64)
!4998 = !DISubroutineType(types: !4999)
!4999 = !{!499, !1695}
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "power_off_work", scope: !215, file: !146, line: 111, baseType: !1108, size: 256, offset: 7936)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "provider", scope: !215, file: !146, line: 112, baseType: !4833, size: 64, offset: 8192)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "has_provider", scope: !215, file: !146, line: 113, baseType: !499, size: 8, offset: 8256)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !215, file: !146, line: 114, baseType: !225, size: 64, offset: 8320)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "sd_count", scope: !215, file: !146, line: 115, baseType: !823, size: 32, offset: 8384)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !215, file: !146, line: 116, baseType: !145, size: 32, offset: 8416)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "device_count", scope: !215, file: !146, line: 117, baseType: !7, size: 32, offset: 8448)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_count", scope: !215, file: !146, line: 118, baseType: !7, size: 32, offset: 8480)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "prepared_count", scope: !215, file: !146, line: 119, baseType: !7, size: 32, offset: 8512)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "performance_state", scope: !215, file: !146, line: 120, baseType: !7, size: 32, offset: 8544)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !215, file: !146, line: 121, baseType: !5011, size: 64, offset: 8576)
!5011 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !2371, line: 756, baseType: !5012)
!5012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2372, size: 64, elements: !2376)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "power_off", scope: !215, file: !146, line: 122, baseType: !5014, size: 64, offset: 8640)
!5014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5015, size: 64)
!5015 = !DISubroutineType(types: !5016)
!5016 = !{!195, !214}
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "power_on", scope: !215, file: !146, line: 123, baseType: !5014, size: 64, offset: 8704)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "power_notifiers", scope: !215, file: !146, line: 124, baseType: !5019, size: 64, offset: 8768)
!5019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !4729, line: 70, size: 64, elements: !5020)
!5020 = !{!5021}
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5019, file: !4729, line: 71, baseType: !4733, size: 64)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "opp_table", scope: !215, file: !146, line: 125, baseType: !5023, size: 64, offset: 8832)
!5023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5024, size: 64)
!5024 = !DICompositeType(tag: DW_TAG_structure_type, name: "opp_table", file: !5025, line: 22, flags: DIFlagFwdDecl)
!5025 = !DIFile(filename: "./include/linux/pm_opp.h", directory: "/home/lizy2001/genbc/linux")
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "opp_to_performance_state", scope: !215, file: !146, line: 126, baseType: !5027, size: 64, offset: 8896)
!5027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5028, size: 64)
!5028 = !DISubroutineType(types: !5029)
!5029 = !{!7, !214, !5030}
!5030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5031, size: 64)
!5031 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_opp", file: !5025, line: 20, flags: DIFlagFwdDecl)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "set_performance_state", scope: !215, file: !146, line: 128, baseType: !5033, size: 64, offset: 8960)
!5033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5034, size: 64)
!5034 = !DISubroutineType(types: !5035)
!5035 = !{!195, !214, !7}
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !215, file: !146, line: 130, baseType: !5037, size: 128, offset: 9024)
!5037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpd_dev_ops", file: !146, line: 83, size: 128, elements: !5038)
!5038 = !{!5039, !5040}
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5037, file: !146, line: 84, baseType: !4482, size: 64)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !5037, file: !146, line: 85, baseType: !4482, size: 64, offset: 64)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "max_off_time_ns", scope: !215, file: !146, line: 131, baseType: !759, size: 64, offset: 9152)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "max_off_time_changed", scope: !215, file: !146, line: 132, baseType: !499, size: 8, offset: 9216)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "cached_power_down_ok", scope: !215, file: !146, line: 133, baseType: !499, size: 8, offset: 9224)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "cached_power_down_state_idx", scope: !215, file: !146, line: 134, baseType: !499, size: 8, offset: 9232)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "attach_dev", scope: !215, file: !146, line: 135, baseType: !5046, size: 64, offset: 9280)
!5046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5047, size: 64)
!5047 = !DISubroutineType(types: !5048)
!5048 = !{!195, !214, !1695}
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "detach_dev", scope: !215, file: !146, line: 137, baseType: !5050, size: 64, offset: 9344)
!5050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5051, size: 64)
!5051 = !DISubroutineType(types: !5052)
!5052 = !{null, !214, !1695}
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !215, file: !146, line: 139, baseType: !7, size: 32, offset: 9408)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !215, file: !146, line: 140, baseType: !5055, size: 64, offset: 9472)
!5055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5056, size: 64)
!5056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "genpd_power_state", file: !146, line: 88, size: 512, elements: !5057)
!5057 = !{!5058, !5059, !5060, !5061, !5062, !5063, !5064, !5065}
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "power_off_latency_ns", scope: !5056, file: !146, line: 89, baseType: !759, size: 64)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "power_on_latency_ns", scope: !5056, file: !146, line: 90, baseType: !759, size: 64, offset: 64)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "residency_ns", scope: !5056, file: !146, line: 91, baseType: !759, size: 64, offset: 128)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !5056, file: !146, line: 92, baseType: !430, size: 64, offset: 192)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "rejected", scope: !5056, file: !146, line: 93, baseType: !430, size: 64, offset: 256)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5056, file: !146, line: 94, baseType: !4833, size: 64, offset: 320)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "idle_time", scope: !5056, file: !146, line: 95, baseType: !2307, size: 64, offset: 384)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5056, file: !146, line: 96, baseType: !209, size: 64, offset: 448)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "free_states", scope: !215, file: !146, line: 141, baseType: !5067, size: 64, offset: 9536)
!5067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5068, size: 64)
!5068 = !DISubroutineType(types: !5069)
!5069 = !{null, !5055, !7}
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "state_count", scope: !215, file: !146, line: 143, baseType: !7, size: 32, offset: 9600)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "state_idx", scope: !215, file: !146, line: 144, baseType: !7, size: 32, offset: 9632)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "on_time", scope: !215, file: !146, line: 145, baseType: !2307, size: 64, offset: 9664)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_time", scope: !215, file: !146, line: 146, baseType: !2307, size: 64, offset: 9728)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "lock_ops", scope: !215, file: !146, line: 147, baseType: !5075, size: 64, offset: 9792)
!5075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5076, size: 64)
!5076 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5077)
!5077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "genpd_lock_ops", file: !3, line: 44, size: 256, elements: !5078)
!5078 = !{!5079, !5083, !5087, !5088}
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5077, file: !3, line: 45, baseType: !5080, size: 64)
!5080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5081, size: 64)
!5081 = !DISubroutineType(types: !5082)
!5082 = !{null, !214}
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "lock_nested", scope: !5077, file: !3, line: 46, baseType: !5084, size: 64, offset: 64)
!5084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5085, size: 64)
!5085 = !DISubroutineType(types: !5086)
!5086 = !{null, !214, !195}
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "lock_interruptible", scope: !5077, file: !3, line: 47, baseType: !5014, size: 64, offset: 128)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "unlock", scope: !5077, file: !3, line: 48, baseType: !5080, size: 64, offset: 192)
!5089 = !DIDerivedType(tag: DW_TAG_member, scope: !215, file: !146, line: 148, baseType: !5090, size: 192, offset: 9856)
!5090 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !215, file: !146, line: 148, size: 192, elements: !5091)
!5091 = !{!5092, !5093}
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "mlock", scope: !5090, file: !146, line: 149, baseType: !749, size: 192)
!5093 = !DIDerivedType(tag: DW_TAG_member, scope: !5090, file: !146, line: 150, baseType: !5094, size: 64)
!5094 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5090, file: !146, line: 150, size: 64, elements: !5095)
!5095 = !{!5096, !5097}
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "slock", scope: !5094, file: !146, line: 151, baseType: !243)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "lock_flags", scope: !5094, file: !146, line: 152, baseType: !333, size: 64)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "parent_node", scope: !211, file: !146, line: 165, baseType: !229, size: 128, offset: 64)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !211, file: !146, line: 166, baseType: !214, size: 64, offset: 192)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "child_node", scope: !211, file: !146, line: 167, baseType: !229, size: 128, offset: 256)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "performance_state", scope: !211, file: !146, line: 170, baseType: !7, size: 32, offset: 384)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "prev_performance_state", scope: !211, file: !146, line: 171, baseType: !7, size: 32, offset: 416)
!5103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5104, size: 64)
!5104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_genpd_provider", file: !3, line: 2054, size: 320, elements: !5105)
!5105 = !{!5106, !5107, !5108, !5120}
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !5104, file: !3, line: 2055, baseType: !229, size: 128)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5104, file: !3, line: 2056, baseType: !4820, size: 64, offset: 128)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !5104, file: !3, line: 2057, baseType: !5109, size: 64, offset: 192)
!5109 = !DIDerivedType(tag: DW_TAG_typedef, name: "genpd_xlate_t", file: !146, line: 293, baseType: !5110)
!5110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5111, size: 64)
!5111 = !DISubroutineType(types: !5112)
!5112 = !{!214, !5113, !209}
!5113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5114, size: 64)
!5114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_phandle_args", file: !4822, line: 74, size: 640, elements: !5115)
!5115 = !{!5116, !5117, !5118}
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "np", scope: !5114, file: !4822, line: 75, baseType: !4820, size: 64)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "args_count", scope: !5114, file: !4822, line: 76, baseType: !195, size: 32, offset: 64)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !5114, file: !4822, line: 77, baseType: !5119, size: 512, offset: 96)
!5119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !568, size: 512, elements: !1764)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5104, file: !3, line: 2058, baseType: !209, size: 64, offset: 256)
!5121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5122, size: 64)
!5122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "generic_pm_domain_data", file: !146, line: 187, size: 832, elements: !5123)
!5123 = !{!5124, !5125, !5133, !5134, !5135, !5136, !5137}
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5122, file: !146, line: 188, baseType: !4703, size: 192)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "td", scope: !5122, file: !146, line: 189, baseType: !5126, size: 256, offset: 192)
!5126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpd_timing_data", file: !146, line: 174, size: 256, elements: !5127)
!5127 = !{!5128, !5129, !5130, !5131, !5132}
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_latency_ns", scope: !5126, file: !146, line: 175, baseType: !759, size: 64)
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "resume_latency_ns", scope: !5126, file: !146, line: 176, baseType: !759, size: 64, offset: 64)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "effective_constraint_ns", scope: !5126, file: !146, line: 177, baseType: !759, size: 64, offset: 128)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "constraint_changed", scope: !5126, file: !146, line: 178, baseType: !499, size: 8, offset: 192)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "cached_suspend_ok", scope: !5126, file: !146, line: 179, baseType: !499, size: 8, offset: 200)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "nb", scope: !5122, file: !146, line: 190, baseType: !4734, size: 192, offset: 448)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "power_nb", scope: !5122, file: !146, line: 191, baseType: !4733, size: 64, offset: 640)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !5122, file: !146, line: 192, baseType: !195, size: 32, offset: 704)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "performance_state", scope: !5122, file: !146, line: 193, baseType: !7, size: 32, offset: 736)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5122, file: !146, line: 194, baseType: !209, size: 64, offset: 768)
!5138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5139, size: 64)
!5139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5140)
!5140 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !195)
!5141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5142, size: 64)
!5142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2372)
!5143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5144, size: 64)
!5144 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !227)
!5145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 64)
!5146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5147, size: 64)
!5147 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !233)
!5148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5149, size: 64)
!5149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5147)
!5150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5140, size: 64)
!5151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5152, size: 64)
!5152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !215)
!5153 = !{!5154, !5165, !5167, !0, !5169, !5171, !5173, !5176, !5178, !5180, !5185, !5187, !5189, !5191, !5193}
!5154 = !DIGlobalVariableExpression(var: !5155, expr: !DIExpression())
!5155 = distinct !DIGlobalVariable(name: "__setup_pd_ignore_unused_setup", scope: !2, file: !3, line: 938, type: !5156, isLocal: true, isDefinition: true, align: 64)
!5156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obs_kernel_param", file: !5157, line: 241, size: 192, elements: !5158)
!5157 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!5158 = !{!5159, !5160, !5164}
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5156, file: !5157, line: 242, baseType: !225, size: 64)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "setup_func", scope: !5156, file: !5157, line: 243, baseType: !5161, size: 64, offset: 64)
!5161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5162, size: 64)
!5162 = !DISubroutineType(types: !5163)
!5163 = !{!195, !284}
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "early", scope: !5156, file: !5157, line: 244, baseType: !195, size: 32, offset: 128)
!5165 = !DIGlobalVariableExpression(var: !5166, expr: !DIExpression())
!5166 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_genpd_power_off_unused313", scope: !2, file: !3, line: 961, type: !209, isLocal: true, isDefinition: true)
!5167 = !DIGlobalVariableExpression(var: !5168, expr: !DIExpression())
!5168 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_genpd_bus_init346", scope: !2, file: !3, line: 2888, type: !209, isLocal: true, isDefinition: true)
!5169 = !DIGlobalVariableExpression(var: !5170, expr: !DIExpression())
!5170 = distinct !DIGlobalVariable(name: "pd_ignore_unused", scope: !2, file: !3, line: 932, type: !499, isLocal: true, isDefinition: true)
!5171 = !DIGlobalVariableExpression(var: !5172, expr: !DIExpression())
!5172 = distinct !DIGlobalVariable(name: "gpd_list_lock", scope: !2, file: !3, line: 42, type: !749, isLocal: true, isDefinition: true)
!5173 = !DIGlobalVariableExpression(var: !5174, expr: !DIExpression())
!5174 = distinct !DIGlobalVariable(name: "__key", scope: !5175, file: !3, line: 1878, type: !657, isLocal: true, isDefinition: true)
!5175 = distinct !DISubprogram(name: "genpd_lock_init", scope: !3, file: !3, line: 1872, type: !5081, scopeLine: 1873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5176 = !DIGlobalVariableExpression(var: !5177, expr: !DIExpression())
!5177 = distinct !DIGlobalVariable(name: "genpd_spin_ops", scope: !2, file: !3, line: 114, type: !5076, isLocal: true, isDefinition: true)
!5178 = !DIGlobalVariableExpression(var: !5179, expr: !DIExpression())
!5179 = distinct !DIGlobalVariable(name: "genpd_mtx_ops", scope: !2, file: !3, line: 72, type: !5076, isLocal: true, isDefinition: true)
!5180 = !DIGlobalVariableExpression(var: !5181, expr: !DIExpression())
!5181 = distinct !DIGlobalVariable(name: "__print_once", scope: !5182, file: !3, line: 146, type: !499, isLocal: true, isDefinition: true)
!5182 = distinct !DISubprogram(name: "irq_safe_dev_in_no_sleep_domain", scope: !3, file: !3, line: 133, type: !5183, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5183 = !DISubroutineType(types: !5184)
!5184 = !{!499, !1695, !5151}
!5185 = !DIGlobalVariableExpression(var: !5186, expr: !DIExpression())
!5186 = distinct !DIGlobalVariable(name: "gpd_list", scope: !2, file: !3, line: 41, type: !229, isLocal: true, isDefinition: true)
!5187 = !DIGlobalVariableExpression(var: !5188, expr: !DIExpression())
!5188 = distinct !DIGlobalVariable(name: "of_genpd_mutex", scope: !2, file: !3, line: 2064, type: !749, isLocal: true, isDefinition: true)
!5189 = !DIGlobalVariableExpression(var: !5190, expr: !DIExpression())
!5190 = distinct !DIGlobalVariable(name: "of_genpd_providers", scope: !2, file: !3, line: 2062, type: !229, isLocal: true, isDefinition: true)
!5191 = !DIGlobalVariableExpression(var: !5192, expr: !DIExpression())
!5192 = distinct !DIGlobalVariable(name: "genpd_bus_type", scope: !2, file: !3, line: 2513, type: !4509, isLocal: true, isDefinition: true)
!5193 = !DIGlobalVariableExpression(var: !5194, expr: !DIExpression())
!5194 = distinct !DIGlobalVariable(name: "idle_state_match", scope: !2, file: !3, line: 2736, type: !5195, isLocal: true, isDefinition: true)
!5195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4533, size: 3200, elements: !1414)
!5196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 136, elements: !5197)
!5197 = !{!5198}
!5198 = !DISubrange(count: 17)
!5199 = !{!"rsp"}
!5200 = !{i32 7, !"Dwarf Version", i32 4}
!5201 = !{i32 2, !"Debug Info Version", i32 3}
!5202 = !{i32 1, !"wchar_size", i32 2}
!5203 = !{i32 1, !"Code Model", i32 2}
!5204 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!5205 = distinct !DISubprogram(name: "dev_pm_genpd_set_performance_state", scope: !3, file: !3, line: 376, type: !5206, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5206 = !DISubroutineType(types: !5207)
!5207 = !{!195, !1695, !7}
!5208 = !DILocalVariable(name: "dev", arg: 1, scope: !5205, file: !3, line: 376, type: !1695)
!5209 = !DILocation(line: 376, column: 55, scope: !5205)
!5210 = !DILocalVariable(name: "state", arg: 2, scope: !5205, file: !3, line: 376, type: !7)
!5211 = !DILocation(line: 376, column: 73, scope: !5205)
!5212 = !DILocalVariable(name: "genpd", scope: !5205, file: !3, line: 378, type: !214)
!5213 = !DILocation(line: 378, column: 28, scope: !5205)
!5214 = !DILocalVariable(name: "gpd_data", scope: !5205, file: !3, line: 379, type: !5121)
!5215 = !DILocation(line: 379, column: 33, scope: !5205)
!5216 = !DILocalVariable(name: "prev", scope: !5205, file: !3, line: 380, type: !7)
!5217 = !DILocation(line: 380, column: 15, scope: !5205)
!5218 = !DILocalVariable(name: "ret", scope: !5205, file: !3, line: 381, type: !195)
!5219 = !DILocation(line: 381, column: 6, scope: !5205)
!5220 = !DILocation(line: 383, column: 28, scope: !5205)
!5221 = !DILocation(line: 383, column: 10, scope: !5205)
!5222 = !DILocation(line: 383, column: 8, scope: !5205)
!5223 = !DILocation(line: 384, column: 7, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5205, file: !3, line: 384, column: 6)
!5225 = !DILocation(line: 384, column: 6, scope: !5205)
!5226 = !DILocation(line: 385, column: 3, scope: !5224)
!5227 = !DILocation(line: 387, column: 6, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5205, file: !3, line: 387, column: 6)
!5229 = !DILocation(line: 387, column: 6, scope: !5205)
!5230 = !DILocation(line: 388, column: 3, scope: !5228)
!5231 = !DILocalVariable(name: "__ret_warn_on", scope: !5232, file: !3, line: 390, type: !195)
!5232 = distinct !DILexicalBlock(scope: !5233, file: !3, line: 390, column: 6)
!5233 = distinct !DILexicalBlock(scope: !5205, file: !3, line: 390, column: 6)
!5234 = !DILocation(line: 390, column: 6, scope: !5232)
!5235 = !DILocation(line: 390, column: 6, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 390, column: 6)
!5237 = !DILocation(line: 390, column: 6, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5236, file: !3, line: 390, column: 6)
!5239 = !DILocation(line: 390, column: 6, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 390, column: 6)
!5241 = !DILocation(line: 390, column: 6, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 390, column: 6)
!5243 = !{i32 -2140669432, i32 -2140669403, i32 -2140669357, i32 -2140669299, i32 -2140669245, i32 -2140669191, i32 -2140669136, i32 -2140669105}
!5244 = !DILocation(line: 390, column: 6, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 390, column: 6)
!5246 = !{i32 -2140668696, i32 -2140668689, i32 -2140668637, i32 -2140668606, i32 -2140668576}
!5247 = !DILocation(line: 390, column: 6, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 390, column: 6)
!5249 = !DILocation(line: 390, column: 6, scope: !5233)
!5250 = !DILocation(line: 390, column: 6, scope: !5205)
!5251 = !DILocation(line: 392, column: 3, scope: !5233)
!5252 = !DILocation(line: 394, column: 2, scope: !5205)
!5253 = !DILocation(line: 396, column: 25, scope: !5205)
!5254 = !DILocation(line: 396, column: 30, scope: !5205)
!5255 = !DILocation(line: 396, column: 36, scope: !5205)
!5256 = !DILocation(line: 396, column: 49, scope: !5205)
!5257 = !DILocation(line: 396, column: 13, scope: !5205)
!5258 = !DILocation(line: 396, column: 11, scope: !5205)
!5259 = !DILocation(line: 397, column: 9, scope: !5205)
!5260 = !DILocation(line: 397, column: 19, scope: !5205)
!5261 = !DILocation(line: 397, column: 7, scope: !5205)
!5262 = !DILocation(line: 398, column: 32, scope: !5205)
!5263 = !DILocation(line: 398, column: 2, scope: !5205)
!5264 = !DILocation(line: 398, column: 12, scope: !5205)
!5265 = !DILocation(line: 398, column: 30, scope: !5205)
!5266 = !DILocation(line: 400, column: 42, scope: !5205)
!5267 = !DILocation(line: 400, column: 49, scope: !5205)
!5268 = !DILocation(line: 400, column: 10, scope: !5205)
!5269 = !DILocation(line: 400, column: 8, scope: !5205)
!5270 = !DILocation(line: 401, column: 37, scope: !5205)
!5271 = !DILocation(line: 401, column: 44, scope: !5205)
!5272 = !DILocation(line: 401, column: 8, scope: !5205)
!5273 = !DILocation(line: 401, column: 6, scope: !5205)
!5274 = !DILocation(line: 402, column: 6, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5205, file: !3, line: 402, column: 6)
!5276 = !DILocation(line: 402, column: 6, scope: !5205)
!5277 = !DILocation(line: 403, column: 33, scope: !5275)
!5278 = !DILocation(line: 403, column: 3, scope: !5275)
!5279 = !DILocation(line: 403, column: 13, scope: !5275)
!5280 = !DILocation(line: 403, column: 31, scope: !5275)
!5281 = !DILocation(line: 405, column: 2, scope: !5205)
!5282 = !DILocation(line: 407, column: 9, scope: !5205)
!5283 = !DILocation(line: 407, column: 2, scope: !5205)
!5284 = !DILocation(line: 408, column: 1, scope: !5205)
!5285 = distinct !DISubprogram(name: "dev_to_genpd_safe", scope: !3, file: !3, line: 160, type: !5286, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5286 = !DISubroutineType(types: !5287)
!5287 = !{!214, !1695}
!5288 = !DILocalVariable(name: "dev", arg: 1, scope: !5285, file: !3, line: 160, type: !1695)
!5289 = !DILocation(line: 160, column: 67, scope: !5285)
!5290 = !DILocation(line: 162, column: 21, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5285, file: !3, line: 162, column: 6)
!5292 = !DILocation(line: 162, column: 6, scope: !5291)
!5293 = !DILocation(line: 162, column: 26, scope: !5291)
!5294 = !DILocation(line: 162, column: 44, scope: !5291)
!5295 = !DILocation(line: 162, column: 49, scope: !5291)
!5296 = !DILocation(line: 162, column: 29, scope: !5291)
!5297 = !DILocation(line: 162, column: 6, scope: !5285)
!5298 = !DILocation(line: 163, column: 3, scope: !5291)
!5299 = !DILocation(line: 166, column: 6, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5285, file: !3, line: 166, column: 6)
!5301 = !DILocation(line: 166, column: 11, scope: !5300)
!5302 = !DILocation(line: 166, column: 22, scope: !5300)
!5303 = !DILocation(line: 166, column: 26, scope: !5300)
!5304 = !DILocation(line: 166, column: 42, scope: !5300)
!5305 = !DILocation(line: 166, column: 6, scope: !5285)
!5306 = !DILocation(line: 167, column: 22, scope: !5300)
!5307 = !DILocation(line: 167, column: 27, scope: !5300)
!5308 = !DILocation(line: 167, column: 10, scope: !5300)
!5309 = !DILocation(line: 167, column: 3, scope: !5300)
!5310 = !DILocation(line: 169, column: 2, scope: !5285)
!5311 = !DILocation(line: 170, column: 1, scope: !5285)
!5312 = distinct !DISubprogram(name: "to_gpd_data", scope: !146, file: !146, line: 198, type: !5313, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5313 = !DISubroutineType(types: !5314)
!5314 = !{!5121, !4702}
!5315 = !DILocalVariable(name: "pdd", arg: 1, scope: !5312, file: !146, line: 198, type: !4702)
!5316 = !DILocation(line: 198, column: 81, scope: !5312)
!5317 = !DILocalVariable(name: "__mptr", scope: !5318, file: !146, line: 200, type: !209)
!5318 = distinct !DILexicalBlock(scope: !5312, file: !146, line: 200, column: 9)
!5319 = !DILocation(line: 200, column: 9, scope: !5318)
!5320 = !DILocation(line: 200, column: 9, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5318, file: !146, line: 200, column: 9)
!5322 = !DILocation(line: 200, column: 2, scope: !5312)
!5323 = distinct !DISubprogram(name: "_genpd_reeval_performance_state", scope: !3, file: !3, line: 240, type: !5034, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5324 = !DILocalVariable(name: "genpd", arg: 1, scope: !5323, file: !3, line: 240, type: !214)
!5325 = !DILocation(line: 240, column: 70, scope: !5323)
!5326 = !DILocalVariable(name: "state", arg: 2, scope: !5323, file: !3, line: 241, type: !7)
!5327 = !DILocation(line: 241, column: 22, scope: !5323)
!5328 = !DILocalVariable(name: "pd_data", scope: !5323, file: !3, line: 243, type: !5121)
!5329 = !DILocation(line: 243, column: 33, scope: !5323)
!5330 = !DILocalVariable(name: "pdd", scope: !5323, file: !3, line: 244, type: !4702)
!5331 = !DILocation(line: 244, column: 25, scope: !5323)
!5332 = !DILocalVariable(name: "link", scope: !5323, file: !3, line: 245, type: !210)
!5333 = !DILocation(line: 245, column: 19, scope: !5323)
!5334 = !DILocation(line: 248, column: 6, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5323, file: !3, line: 248, column: 6)
!5336 = !DILocation(line: 248, column: 15, scope: !5335)
!5337 = !DILocation(line: 248, column: 22, scope: !5335)
!5338 = !DILocation(line: 248, column: 12, scope: !5335)
!5339 = !DILocation(line: 248, column: 6, scope: !5323)
!5340 = !DILocation(line: 249, column: 10, scope: !5335)
!5341 = !DILocation(line: 249, column: 3, scope: !5335)
!5342 = !DILocation(line: 252, column: 6, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5323, file: !3, line: 252, column: 6)
!5344 = !DILocation(line: 252, column: 14, scope: !5343)
!5345 = !DILocation(line: 252, column: 21, scope: !5343)
!5346 = !DILocation(line: 252, column: 12, scope: !5343)
!5347 = !DILocation(line: 252, column: 6, scope: !5323)
!5348 = !DILocation(line: 253, column: 10, scope: !5343)
!5349 = !DILocation(line: 253, column: 3, scope: !5343)
!5350 = !DILocalVariable(name: "__mptr", scope: !5351, file: !3, line: 256, type: !209)
!5351 = distinct !DILexicalBlock(scope: !5352, file: !3, line: 256, column: 2)
!5352 = distinct !DILexicalBlock(scope: !5323, file: !3, line: 256, column: 2)
!5353 = !DILocation(line: 256, column: 2, scope: !5351)
!5354 = !DILocation(line: 256, column: 2, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5351, file: !3, line: 256, column: 2)
!5356 = !DILocation(line: 256, column: 2, scope: !5352)
!5357 = !DILocation(line: 256, column: 2, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5352, file: !3, line: 256, column: 2)
!5359 = !DILocation(line: 257, column: 25, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5358, file: !3, line: 256, column: 56)
!5361 = !DILocation(line: 257, column: 13, scope: !5360)
!5362 = !DILocation(line: 257, column: 11, scope: !5360)
!5363 = !DILocation(line: 259, column: 7, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5360, file: !3, line: 259, column: 7)
!5365 = !DILocation(line: 259, column: 16, scope: !5364)
!5366 = !DILocation(line: 259, column: 36, scope: !5364)
!5367 = !DILocation(line: 259, column: 34, scope: !5364)
!5368 = !DILocation(line: 259, column: 7, scope: !5360)
!5369 = !DILocation(line: 260, column: 12, scope: !5364)
!5370 = !DILocation(line: 260, column: 21, scope: !5364)
!5371 = !DILocation(line: 260, column: 10, scope: !5364)
!5372 = !DILocation(line: 260, column: 4, scope: !5364)
!5373 = !DILocation(line: 261, column: 2, scope: !5360)
!5374 = !DILocalVariable(name: "__mptr", scope: !5375, file: !3, line: 256, type: !209)
!5375 = distinct !DILexicalBlock(scope: !5358, file: !3, line: 256, column: 2)
!5376 = !DILocation(line: 256, column: 2, scope: !5375)
!5377 = !DILocation(line: 256, column: 2, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5375, file: !3, line: 256, column: 2)
!5379 = distinct !{!5379, !5356, !5380}
!5380 = !DILocation(line: 261, column: 2, scope: !5352)
!5381 = !DILocalVariable(name: "__mptr", scope: !5382, file: !3, line: 277, type: !209)
!5382 = distinct !DILexicalBlock(scope: !5383, file: !3, line: 277, column: 2)
!5383 = distinct !DILexicalBlock(scope: !5323, file: !3, line: 277, column: 2)
!5384 = !DILocation(line: 277, column: 2, scope: !5382)
!5385 = !DILocation(line: 277, column: 2, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5382, file: !3, line: 277, column: 2)
!5387 = !DILocation(line: 277, column: 2, scope: !5383)
!5388 = !DILocation(line: 277, column: 2, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5383, file: !3, line: 277, column: 2)
!5390 = !DILocation(line: 278, column: 7, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5392, file: !3, line: 278, column: 7)
!5392 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 277, column: 63)
!5393 = !DILocation(line: 278, column: 13, scope: !5391)
!5394 = !DILocation(line: 278, column: 33, scope: !5391)
!5395 = !DILocation(line: 278, column: 31, scope: !5391)
!5396 = !DILocation(line: 278, column: 7, scope: !5392)
!5397 = !DILocation(line: 279, column: 12, scope: !5391)
!5398 = !DILocation(line: 279, column: 18, scope: !5391)
!5399 = !DILocation(line: 279, column: 10, scope: !5391)
!5400 = !DILocation(line: 279, column: 4, scope: !5391)
!5401 = !DILocation(line: 280, column: 2, scope: !5392)
!5402 = !DILocalVariable(name: "__mptr", scope: !5403, file: !3, line: 277, type: !209)
!5403 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 277, column: 2)
!5404 = !DILocation(line: 277, column: 2, scope: !5403)
!5405 = !DILocation(line: 277, column: 2, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5403, file: !3, line: 277, column: 2)
!5407 = distinct !{!5407, !5387, !5408}
!5408 = !DILocation(line: 280, column: 2, scope: !5383)
!5409 = !DILocation(line: 282, column: 9, scope: !5323)
!5410 = !DILocation(line: 282, column: 2, scope: !5323)
!5411 = !DILocation(line: 283, column: 1, scope: !5323)
!5412 = distinct !DISubprogram(name: "_genpd_set_performance_state", scope: !3, file: !3, line: 285, type: !5413, scopeLine: 287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5413 = !DISubroutineType(types: !5414)
!5414 = !{!195, !214, !7, !195}
!5415 = !DILocalVariable(name: "genpd", arg: 1, scope: !5412, file: !3, line: 285, type: !214)
!5416 = !DILocation(line: 285, column: 67, scope: !5412)
!5417 = !DILocalVariable(name: "state", arg: 2, scope: !5412, file: !3, line: 286, type: !7)
!5418 = !DILocation(line: 286, column: 19, scope: !5412)
!5419 = !DILocalVariable(name: "depth", arg: 3, scope: !5412, file: !3, line: 286, type: !195)
!5420 = !DILocation(line: 286, column: 30, scope: !5412)
!5421 = !DILocalVariable(name: "parent", scope: !5412, file: !3, line: 288, type: !214)
!5422 = !DILocation(line: 288, column: 28, scope: !5412)
!5423 = !DILocalVariable(name: "link", scope: !5412, file: !3, line: 289, type: !210)
!5424 = !DILocation(line: 289, column: 19, scope: !5412)
!5425 = !DILocalVariable(name: "parent_state", scope: !5412, file: !3, line: 290, type: !195)
!5426 = !DILocation(line: 290, column: 6, scope: !5412)
!5427 = !DILocalVariable(name: "ret", scope: !5412, file: !3, line: 290, type: !195)
!5428 = !DILocation(line: 290, column: 20, scope: !5412)
!5429 = !DILocation(line: 292, column: 6, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5412, file: !3, line: 292, column: 6)
!5431 = !DILocation(line: 292, column: 15, scope: !5430)
!5432 = !DILocation(line: 292, column: 22, scope: !5430)
!5433 = !DILocation(line: 292, column: 12, scope: !5430)
!5434 = !DILocation(line: 292, column: 6, scope: !5412)
!5435 = !DILocation(line: 293, column: 3, scope: !5430)
!5436 = !DILocalVariable(name: "__mptr", scope: !5437, file: !3, line: 296, type: !209)
!5437 = distinct !DILexicalBlock(scope: !5438, file: !3, line: 296, column: 2)
!5438 = distinct !DILexicalBlock(scope: !5412, file: !3, line: 296, column: 2)
!5439 = !DILocation(line: 296, column: 2, scope: !5437)
!5440 = !DILocation(line: 296, column: 2, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5437, file: !3, line: 296, column: 2)
!5442 = !DILocation(line: 296, column: 2, scope: !5438)
!5443 = !DILocation(line: 296, column: 2, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5438, file: !3, line: 296, column: 2)
!5445 = !DILocation(line: 297, column: 12, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5444, file: !3, line: 296, column: 61)
!5447 = !DILocation(line: 297, column: 18, scope: !5446)
!5448 = !DILocation(line: 297, column: 10, scope: !5446)
!5449 = !DILocation(line: 299, column: 8, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5446, file: !3, line: 299, column: 7)
!5451 = !DILocation(line: 299, column: 16, scope: !5450)
!5452 = !DILocation(line: 299, column: 7, scope: !5446)
!5453 = !DILocation(line: 300, column: 4, scope: !5450)
!5454 = !DILocation(line: 303, column: 44, scope: !5446)
!5455 = !DILocation(line: 303, column: 51, scope: !5446)
!5456 = !DILocation(line: 304, column: 9, scope: !5446)
!5457 = !DILocation(line: 304, column: 17, scope: !5446)
!5458 = !DILocation(line: 305, column: 9, scope: !5446)
!5459 = !DILocation(line: 303, column: 9, scope: !5446)
!5460 = !DILocation(line: 303, column: 7, scope: !5446)
!5461 = !DILocation(line: 306, column: 7, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5446, file: !3, line: 306, column: 7)
!5463 = !DILocation(line: 306, column: 7, scope: !5446)
!5464 = !DILocation(line: 307, column: 4, scope: !5462)
!5465 = !DILocation(line: 309, column: 18, scope: !5446)
!5466 = !DILocation(line: 309, column: 16, scope: !5446)
!5467 = !DILocation(line: 311, column: 3, scope: !5446)
!5468 = !DILocation(line: 313, column: 34, scope: !5446)
!5469 = !DILocation(line: 313, column: 40, scope: !5446)
!5470 = !DILocation(line: 313, column: 3, scope: !5446)
!5471 = !DILocation(line: 313, column: 9, scope: !5446)
!5472 = !DILocation(line: 313, column: 32, scope: !5446)
!5473 = !DILocation(line: 314, column: 29, scope: !5446)
!5474 = !DILocation(line: 314, column: 3, scope: !5446)
!5475 = !DILocation(line: 314, column: 9, scope: !5446)
!5476 = !DILocation(line: 314, column: 27, scope: !5446)
!5477 = !DILocation(line: 315, column: 50, scope: !5446)
!5478 = !DILocation(line: 316, column: 7, scope: !5446)
!5479 = !DILocation(line: 315, column: 18, scope: !5446)
!5480 = !DILocation(line: 315, column: 16, scope: !5446)
!5481 = !DILocation(line: 317, column: 38, scope: !5446)
!5482 = !DILocation(line: 317, column: 46, scope: !5446)
!5483 = !DILocation(line: 317, column: 60, scope: !5446)
!5484 = !DILocation(line: 317, column: 66, scope: !5446)
!5485 = !DILocation(line: 317, column: 9, scope: !5446)
!5486 = !DILocation(line: 317, column: 7, scope: !5446)
!5487 = !DILocation(line: 318, column: 7, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5446, file: !3, line: 318, column: 7)
!5489 = !DILocation(line: 318, column: 7, scope: !5446)
!5490 = !DILocation(line: 319, column: 30, scope: !5488)
!5491 = !DILocation(line: 319, column: 36, scope: !5488)
!5492 = !DILocation(line: 319, column: 4, scope: !5488)
!5493 = !DILocation(line: 319, column: 10, scope: !5488)
!5494 = !DILocation(line: 319, column: 28, scope: !5488)
!5495 = !DILocation(line: 321, column: 3, scope: !5446)
!5496 = !DILocation(line: 323, column: 7, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5446, file: !3, line: 323, column: 7)
!5498 = !DILocation(line: 323, column: 7, scope: !5446)
!5499 = !DILocation(line: 324, column: 4, scope: !5497)
!5500 = !DILocation(line: 325, column: 2, scope: !5446)
!5501 = !DILocalVariable(name: "__mptr", scope: !5502, file: !3, line: 296, type: !209)
!5502 = distinct !DILexicalBlock(scope: !5444, file: !3, line: 296, column: 2)
!5503 = !DILocation(line: 296, column: 2, scope: !5502)
!5504 = !DILocation(line: 296, column: 2, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5502, file: !3, line: 296, column: 2)
!5506 = distinct !{!5506, !5442, !5507}
!5507 = !DILocation(line: 325, column: 2, scope: !5438)
!5508 = !DILocation(line: 327, column: 8, scope: !5412)
!5509 = !DILocation(line: 327, column: 15, scope: !5412)
!5510 = !DILocation(line: 327, column: 37, scope: !5412)
!5511 = !DILocation(line: 327, column: 44, scope: !5412)
!5512 = !DILocation(line: 327, column: 6, scope: !5412)
!5513 = !DILocation(line: 328, column: 6, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5412, file: !3, line: 328, column: 6)
!5515 = !DILocation(line: 328, column: 6, scope: !5412)
!5516 = !DILocation(line: 329, column: 3, scope: !5514)
!5517 = !DILocation(line: 331, column: 29, scope: !5412)
!5518 = !DILocation(line: 331, column: 2, scope: !5412)
!5519 = !DILocation(line: 331, column: 9, scope: !5412)
!5520 = !DILocation(line: 331, column: 27, scope: !5412)
!5521 = !DILocation(line: 332, column: 2, scope: !5412)
!5522 = !DILabel(scope: !5412, name: "err", file: !3, line: 334)
!5523 = !DILocation(line: 334, column: 1, scope: !5412)
!5524 = !DILocalVariable(name: "__mptr", scope: !5525, file: !3, line: 336, type: !209)
!5525 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 336, column: 2)
!5526 = distinct !DILexicalBlock(scope: !5412, file: !3, line: 336, column: 2)
!5527 = !DILocation(line: 336, column: 2, scope: !5525)
!5528 = !DILocation(line: 336, column: 2, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5525, file: !3, line: 336, column: 2)
!5530 = !DILocation(line: 336, column: 2, scope: !5526)
!5531 = !DILocation(line: 336, column: 2, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 336, column: 2)
!5533 = !DILocation(line: 338, column: 12, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5532, file: !3, line: 337, column: 23)
!5535 = !DILocation(line: 338, column: 18, scope: !5534)
!5536 = !DILocation(line: 338, column: 10, scope: !5534)
!5537 = !DILocation(line: 340, column: 8, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 340, column: 7)
!5539 = !DILocation(line: 340, column: 16, scope: !5538)
!5540 = !DILocation(line: 340, column: 7, scope: !5534)
!5541 = !DILocation(line: 341, column: 4, scope: !5538)
!5542 = !DILocation(line: 343, column: 3, scope: !5534)
!5543 = !DILocation(line: 345, column: 18, scope: !5534)
!5544 = !DILocation(line: 345, column: 24, scope: !5534)
!5545 = !DILocation(line: 345, column: 16, scope: !5534)
!5546 = !DILocation(line: 346, column: 29, scope: !5534)
!5547 = !DILocation(line: 346, column: 3, scope: !5534)
!5548 = !DILocation(line: 346, column: 9, scope: !5534)
!5549 = !DILocation(line: 346, column: 27, scope: !5534)
!5550 = !DILocation(line: 348, column: 50, scope: !5534)
!5551 = !DILocation(line: 349, column: 7, scope: !5534)
!5552 = !DILocation(line: 348, column: 18, scope: !5534)
!5553 = !DILocation(line: 348, column: 16, scope: !5534)
!5554 = !DILocation(line: 350, column: 36, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 350, column: 7)
!5556 = !DILocation(line: 350, column: 44, scope: !5555)
!5557 = !DILocation(line: 350, column: 58, scope: !5555)
!5558 = !DILocation(line: 350, column: 64, scope: !5555)
!5559 = !DILocation(line: 350, column: 7, scope: !5555)
!5560 = !DILocation(line: 350, column: 7, scope: !5534)
!5561 = !DILocation(line: 351, column: 4, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5555, file: !3, line: 350, column: 70)
!5563 = !DILocation(line: 353, column: 3, scope: !5562)
!5564 = !DILocation(line: 355, column: 3, scope: !5534)
!5565 = !DILocation(line: 356, column: 2, scope: !5534)
!5566 = !DILocalVariable(name: "__mptr", scope: !5567, file: !3, line: 336, type: !209)
!5567 = distinct !DILexicalBlock(scope: !5532, file: !3, line: 336, column: 2)
!5568 = !DILocation(line: 336, column: 2, scope: !5567)
!5569 = !DILocation(line: 336, column: 2, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5567, file: !3, line: 336, column: 2)
!5571 = distinct !{!5571, !5530, !5572}
!5572 = !DILocation(line: 356, column: 2, scope: !5526)
!5573 = !DILocation(line: 358, column: 9, scope: !5412)
!5574 = !DILocation(line: 358, column: 2, scope: !5412)
!5575 = !DILocation(line: 359, column: 1, scope: !5412)
!5576 = distinct !DISubprogram(name: "pd_ignore_unused_setup", scope: !3, file: !3, line: 933, type: !5162, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5577 = !DILocalVariable(name: "__unused", arg: 1, scope: !5576, file: !3, line: 933, type: !284)
!5578 = !DILocation(line: 933, column: 48, scope: !5576)
!5579 = !DILocation(line: 935, column: 19, scope: !5576)
!5580 = !DILocation(line: 936, column: 2, scope: !5576)
!5581 = distinct !DISubprogram(name: "genpd_power_off_unused", scope: !3, file: !3, line: 943, type: !5582, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5582 = !DISubroutineType(types: !5583)
!5583 = !{!195}
!5584 = !DILocalVariable(name: "genpd", scope: !5581, file: !3, line: 945, type: !214)
!5585 = !DILocation(line: 945, column: 28, scope: !5581)
!5586 = !DILocation(line: 947, column: 6, scope: !5587)
!5587 = distinct !DILexicalBlock(scope: !5581, file: !3, line: 947, column: 6)
!5588 = !DILocation(line: 947, column: 6, scope: !5581)
!5589 = !DILocation(line: 948, column: 3, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5587, file: !3, line: 947, column: 24)
!5591 = !DILocation(line: 949, column: 3, scope: !5590)
!5592 = !DILocation(line: 952, column: 2, scope: !5581)
!5593 = !DILocalVariable(name: "__mptr", scope: !5594, file: !3, line: 954, type: !209)
!5594 = distinct !DILexicalBlock(scope: !5595, file: !3, line: 954, column: 2)
!5595 = distinct !DILexicalBlock(scope: !5581, file: !3, line: 954, column: 2)
!5596 = !DILocation(line: 954, column: 2, scope: !5594)
!5597 = !DILocation(line: 954, column: 2, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 954, column: 2)
!5599 = !DILocation(line: 954, column: 2, scope: !5595)
!5600 = !DILocation(line: 954, column: 2, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5595, file: !3, line: 954, column: 2)
!5602 = !DILocation(line: 955, column: 30, scope: !5601)
!5603 = !DILocation(line: 955, column: 3, scope: !5601)
!5604 = !DILocalVariable(name: "__mptr", scope: !5605, file: !3, line: 954, type: !209)
!5605 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 954, column: 2)
!5606 = !DILocation(line: 954, column: 2, scope: !5605)
!5607 = !DILocation(line: 954, column: 2, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5605, file: !3, line: 954, column: 2)
!5609 = distinct !{!5609, !5599, !5610}
!5610 = !DILocation(line: 955, column: 35, scope: !5595)
!5611 = !DILocation(line: 957, column: 2, scope: !5581)
!5612 = !DILocation(line: 959, column: 2, scope: !5581)
!5613 = !DILocation(line: 960, column: 1, scope: !5581)
!5614 = distinct !DISubprogram(name: "pm_genpd_syscore_poweroff", scope: !3, file: !3, line: 1390, type: !4474, scopeLine: 1391, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5615 = !DILocalVariable(name: "dev", arg: 1, scope: !5614, file: !3, line: 1390, type: !1695)
!5616 = !DILocation(line: 1390, column: 47, scope: !5614)
!5617 = !DILocation(line: 1392, column: 23, scope: !5614)
!5618 = !DILocation(line: 1392, column: 2, scope: !5614)
!5619 = !DILocation(line: 1393, column: 1, scope: !5614)
!5620 = distinct !DISubprogram(name: "genpd_syscore_switch", scope: !3, file: !3, line: 1373, type: !4788, scopeLine: 1374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5621 = !DILocalVariable(name: "dev", arg: 1, scope: !5620, file: !3, line: 1373, type: !1695)
!5622 = !DILocation(line: 1373, column: 49, scope: !5620)
!5623 = !DILocalVariable(name: "suspend", arg: 2, scope: !5620, file: !3, line: 1373, type: !499)
!5624 = !DILocation(line: 1373, column: 59, scope: !5620)
!5625 = !DILocalVariable(name: "genpd", scope: !5620, file: !3, line: 1375, type: !214)
!5626 = !DILocation(line: 1375, column: 28, scope: !5620)
!5627 = !DILocation(line: 1377, column: 28, scope: !5620)
!5628 = !DILocation(line: 1377, column: 10, scope: !5620)
!5629 = !DILocation(line: 1377, column: 8, scope: !5620)
!5630 = !DILocation(line: 1378, column: 7, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 1378, column: 6)
!5632 = !DILocation(line: 1378, column: 6, scope: !5620)
!5633 = !DILocation(line: 1379, column: 3, scope: !5631)
!5634 = !DILocation(line: 1381, column: 6, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 1381, column: 6)
!5636 = !DILocation(line: 1381, column: 6, scope: !5620)
!5637 = !DILocation(line: 1382, column: 3, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 1381, column: 15)
!5639 = !DILocation(line: 1382, column: 10, scope: !5638)
!5640 = !DILocation(line: 1382, column: 25, scope: !5638)
!5641 = !DILocation(line: 1383, column: 24, scope: !5638)
!5642 = !DILocation(line: 1383, column: 3, scope: !5638)
!5643 = !DILocation(line: 1384, column: 2, scope: !5638)
!5644 = !DILocation(line: 1385, column: 23, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 1384, column: 9)
!5646 = !DILocation(line: 1385, column: 3, scope: !5645)
!5647 = !DILocation(line: 1386, column: 3, scope: !5645)
!5648 = !DILocation(line: 1386, column: 10, scope: !5645)
!5649 = !DILocation(line: 1386, column: 25, scope: !5645)
!5650 = !DILocation(line: 1388, column: 1, scope: !5620)
!5651 = distinct !DISubprogram(name: "pm_genpd_syscore_poweron", scope: !3, file: !3, line: 1396, type: !4474, scopeLine: 1397, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5652 = !DILocalVariable(name: "dev", arg: 1, scope: !5651, file: !3, line: 1396, type: !1695)
!5653 = !DILocation(line: 1396, column: 46, scope: !5651)
!5654 = !DILocation(line: 1398, column: 23, scope: !5651)
!5655 = !DILocation(line: 1398, column: 2, scope: !5651)
!5656 = !DILocation(line: 1399, column: 1, scope: !5651)
!5657 = distinct !DISubprogram(name: "pm_genpd_add_device", scope: !3, file: !3, line: 1565, type: !5047, scopeLine: 1566, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5658 = !DILocalVariable(name: "genpd", arg: 1, scope: !5657, file: !3, line: 1565, type: !214)
!5659 = !DILocation(line: 1565, column: 51, scope: !5657)
!5660 = !DILocalVariable(name: "dev", arg: 2, scope: !5657, file: !3, line: 1565, type: !1695)
!5661 = !DILocation(line: 1565, column: 73, scope: !5657)
!5662 = !DILocalVariable(name: "ret", scope: !5657, file: !3, line: 1567, type: !195)
!5663 = !DILocation(line: 1567, column: 6, scope: !5657)
!5664 = !DILocation(line: 1569, column: 2, scope: !5657)
!5665 = !DILocation(line: 1570, column: 25, scope: !5657)
!5666 = !DILocation(line: 1570, column: 32, scope: !5657)
!5667 = !DILocation(line: 1570, column: 37, scope: !5657)
!5668 = !DILocation(line: 1570, column: 8, scope: !5657)
!5669 = !DILocation(line: 1570, column: 6, scope: !5657)
!5670 = !DILocation(line: 1571, column: 2, scope: !5657)
!5671 = !DILocation(line: 1573, column: 9, scope: !5657)
!5672 = !DILocation(line: 1573, column: 2, scope: !5657)
!5673 = distinct !DISubprogram(name: "genpd_add_device", scope: !3, file: !3, line: 1518, type: !5674, scopeLine: 1520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5674 = !DISubroutineType(types: !5675)
!5675 = !{!195, !214, !1695, !1695}
!5676 = !DILocalVariable(name: "genpd", arg: 1, scope: !5673, file: !3, line: 1518, type: !214)
!5677 = !DILocation(line: 1518, column: 55, scope: !5673)
!5678 = !DILocalVariable(name: "dev", arg: 2, scope: !5673, file: !3, line: 1518, type: !1695)
!5679 = !DILocation(line: 1518, column: 77, scope: !5673)
!5680 = !DILocalVariable(name: "base_dev", arg: 3, scope: !5673, file: !3, line: 1519, type: !1695)
!5681 = !DILocation(line: 1519, column: 23, scope: !5673)
!5682 = !DILocalVariable(name: "gpd_data", scope: !5673, file: !3, line: 1521, type: !5121)
!5683 = !DILocation(line: 1521, column: 33, scope: !5673)
!5684 = !DILocalVariable(name: "ret", scope: !5673, file: !3, line: 1522, type: !195)
!5685 = !DILocation(line: 1522, column: 6, scope: !5673)
!5686 = !DILocation(line: 1526, column: 21, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5673, file: !3, line: 1526, column: 6)
!5688 = !DILocation(line: 1526, column: 6, scope: !5687)
!5689 = !DILocation(line: 1526, column: 28, scope: !5687)
!5690 = !DILocation(line: 1526, column: 46, scope: !5687)
!5691 = !DILocation(line: 1526, column: 31, scope: !5687)
!5692 = !DILocation(line: 1526, column: 6, scope: !5673)
!5693 = !DILocation(line: 1527, column: 3, scope: !5687)
!5694 = !DILocation(line: 1529, column: 34, scope: !5673)
!5695 = !DILocation(line: 1529, column: 13, scope: !5673)
!5696 = !DILocation(line: 1529, column: 11, scope: !5673)
!5697 = !DILocation(line: 1530, column: 13, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5673, file: !3, line: 1530, column: 6)
!5699 = !DILocation(line: 1530, column: 6, scope: !5698)
!5700 = !DILocation(line: 1530, column: 6, scope: !5673)
!5701 = !DILocation(line: 1531, column: 18, scope: !5698)
!5702 = !DILocation(line: 1531, column: 10, scope: !5698)
!5703 = !DILocation(line: 1531, column: 3, scope: !5698)
!5704 = !DILocation(line: 1533, column: 32, scope: !5673)
!5705 = !DILocation(line: 1533, column: 39, scope: !5673)
!5706 = !DILocation(line: 1533, column: 18, scope: !5673)
!5707 = !DILocation(line: 1533, column: 2, scope: !5673)
!5708 = !DILocation(line: 1533, column: 12, scope: !5673)
!5709 = !DILocation(line: 1533, column: 16, scope: !5673)
!5710 = !DILocation(line: 1535, column: 8, scope: !5673)
!5711 = !DILocation(line: 1535, column: 15, scope: !5673)
!5712 = !DILocation(line: 1535, column: 28, scope: !5673)
!5713 = !DILocation(line: 1535, column: 35, scope: !5673)
!5714 = !DILocation(line: 1535, column: 46, scope: !5673)
!5715 = !DILocation(line: 1535, column: 53, scope: !5673)
!5716 = !DILocation(line: 1535, column: 6, scope: !5673)
!5717 = !DILocation(line: 1536, column: 6, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5673, file: !3, line: 1536, column: 6)
!5719 = !DILocation(line: 1536, column: 6, scope: !5673)
!5720 = !DILocation(line: 1537, column: 3, scope: !5718)
!5721 = !DILocation(line: 1539, column: 2, scope: !5673)
!5722 = !DILocation(line: 1541, column: 20, scope: !5673)
!5723 = !DILocation(line: 1541, column: 27, scope: !5673)
!5724 = !DILocation(line: 1541, column: 37, scope: !5673)
!5725 = !DILocation(line: 1541, column: 2, scope: !5673)
!5726 = !DILocation(line: 1542, column: 20, scope: !5673)
!5727 = !DILocation(line: 1542, column: 26, scope: !5673)
!5728 = !DILocation(line: 1542, column: 33, scope: !5673)
!5729 = !DILocation(line: 1542, column: 2, scope: !5673)
!5730 = !DILocation(line: 1544, column: 2, scope: !5673)
!5731 = !DILocation(line: 1544, column: 9, scope: !5673)
!5732 = !DILocation(line: 1544, column: 21, scope: !5673)
!5733 = !DILocation(line: 1545, column: 2, scope: !5673)
!5734 = !DILocation(line: 1545, column: 9, scope: !5673)
!5735 = !DILocation(line: 1545, column: 30, scope: !5673)
!5736 = !DILocation(line: 1547, column: 17, scope: !5673)
!5737 = !DILocation(line: 1547, column: 27, scope: !5673)
!5738 = !DILocation(line: 1547, column: 32, scope: !5673)
!5739 = !DILocation(line: 1547, column: 44, scope: !5673)
!5740 = !DILocation(line: 1547, column: 51, scope: !5673)
!5741 = !DILocation(line: 1547, column: 2, scope: !5673)
!5742 = !DILocation(line: 1549, column: 2, scope: !5673)
!5743 = !DILabel(scope: !5673, name: "out", file: !3, line: 1550)
!5744 = !DILocation(line: 1550, column: 2, scope: !5673)
!5745 = !DILocation(line: 1551, column: 6, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5673, file: !3, line: 1551, column: 6)
!5747 = !DILocation(line: 1551, column: 6, scope: !5673)
!5748 = !DILocation(line: 1552, column: 23, scope: !5746)
!5749 = !DILocation(line: 1552, column: 28, scope: !5746)
!5750 = !DILocation(line: 1552, column: 3, scope: !5746)
!5751 = !DILocation(line: 1554, column: 27, scope: !5746)
!5752 = !DILocation(line: 1554, column: 33, scope: !5746)
!5753 = !DILocation(line: 1554, column: 43, scope: !5746)
!5754 = !DILocation(line: 1554, column: 3, scope: !5746)
!5755 = !DILocation(line: 1557, column: 9, scope: !5673)
!5756 = !DILocation(line: 1557, column: 2, scope: !5673)
!5757 = !DILocation(line: 1558, column: 1, scope: !5673)
!5758 = distinct !DISubprogram(name: "pm_genpd_remove_device", scope: !3, file: !3, line: 1626, type: !4483, scopeLine: 1627, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5759 = !DILocalVariable(name: "dev", arg: 1, scope: !5758, file: !3, line: 1626, type: !1695)
!5760 = !DILocation(line: 1626, column: 43, scope: !5758)
!5761 = !DILocalVariable(name: "genpd", scope: !5758, file: !3, line: 1628, type: !214)
!5762 = !DILocation(line: 1628, column: 28, scope: !5758)
!5763 = !DILocation(line: 1628, column: 54, scope: !5758)
!5764 = !DILocation(line: 1628, column: 36, scope: !5758)
!5765 = !DILocation(line: 1630, column: 7, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5758, file: !3, line: 1630, column: 6)
!5767 = !DILocation(line: 1630, column: 6, scope: !5758)
!5768 = !DILocation(line: 1631, column: 3, scope: !5766)
!5769 = !DILocation(line: 1633, column: 29, scope: !5758)
!5770 = !DILocation(line: 1633, column: 36, scope: !5758)
!5771 = !DILocation(line: 1633, column: 9, scope: !5758)
!5772 = !DILocation(line: 1633, column: 2, scope: !5758)
!5773 = !DILocation(line: 1634, column: 1, scope: !5758)
!5774 = distinct !DISubprogram(name: "genpd_remove_device", scope: !3, file: !3, line: 1577, type: !5047, scopeLine: 1579, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5775 = !DILocalVariable(name: "genpd", arg: 1, scope: !5774, file: !3, line: 1577, type: !214)
!5776 = !DILocation(line: 1577, column: 58, scope: !5774)
!5777 = !DILocalVariable(name: "dev", arg: 2, scope: !5774, file: !3, line: 1578, type: !1695)
!5778 = !DILocation(line: 1578, column: 26, scope: !5774)
!5779 = !DILocalVariable(name: "gpd_data", scope: !5774, file: !3, line: 1580, type: !5121)
!5780 = !DILocation(line: 1580, column: 33, scope: !5774)
!5781 = !DILocalVariable(name: "pdd", scope: !5774, file: !3, line: 1581, type: !4702)
!5782 = !DILocation(line: 1581, column: 25, scope: !5774)
!5783 = !DILocalVariable(name: "ret", scope: !5774, file: !3, line: 1582, type: !195)
!5784 = !DILocation(line: 1582, column: 6, scope: !5774)
!5785 = !DILocation(line: 1586, column: 8, scope: !5774)
!5786 = !DILocation(line: 1586, column: 13, scope: !5774)
!5787 = !DILocation(line: 1586, column: 19, scope: !5774)
!5788 = !DILocation(line: 1586, column: 32, scope: !5774)
!5789 = !DILocation(line: 1586, column: 6, scope: !5774)
!5790 = !DILocation(line: 1587, column: 25, scope: !5774)
!5791 = !DILocation(line: 1587, column: 13, scope: !5774)
!5792 = !DILocation(line: 1587, column: 11, scope: !5774)
!5793 = !DILocation(line: 1588, column: 29, scope: !5774)
!5794 = !DILocation(line: 1588, column: 35, scope: !5774)
!5795 = !DILocation(line: 1588, column: 45, scope: !5774)
!5796 = !DILocation(line: 1588, column: 2, scope: !5774)
!5797 = !DILocation(line: 1591, column: 2, scope: !5774)
!5798 = !DILocation(line: 1593, column: 6, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5774, file: !3, line: 1593, column: 6)
!5800 = !DILocation(line: 1593, column: 13, scope: !5799)
!5801 = !DILocation(line: 1593, column: 28, scope: !5799)
!5802 = !DILocation(line: 1593, column: 6, scope: !5774)
!5803 = !DILocation(line: 1594, column: 7, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5799, file: !3, line: 1593, column: 33)
!5805 = !DILocation(line: 1595, column: 3, scope: !5804)
!5806 = !DILocation(line: 1598, column: 2, scope: !5774)
!5807 = !DILocation(line: 1598, column: 9, scope: !5774)
!5808 = !DILocation(line: 1598, column: 21, scope: !5774)
!5809 = !DILocation(line: 1599, column: 2, scope: !5774)
!5810 = !DILocation(line: 1599, column: 9, scope: !5774)
!5811 = !DILocation(line: 1599, column: 30, scope: !5774)
!5812 = !DILocation(line: 1601, column: 22, scope: !5774)
!5813 = !DILocation(line: 1601, column: 29, scope: !5774)
!5814 = !DILocation(line: 1601, column: 39, scope: !5774)
!5815 = !DILocation(line: 1601, column: 2, scope: !5774)
!5816 = !DILocation(line: 1602, column: 20, scope: !5774)
!5817 = !DILocation(line: 1602, column: 2, scope: !5774)
!5818 = !DILocation(line: 1604, column: 17, scope: !5774)
!5819 = !DILocation(line: 1604, column: 22, scope: !5774)
!5820 = !DILocation(line: 1604, column: 2, scope: !5774)
!5821 = !DILocation(line: 1606, column: 2, scope: !5774)
!5822 = !DILocation(line: 1608, column: 6, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5774, file: !3, line: 1608, column: 6)
!5824 = !DILocation(line: 1608, column: 13, scope: !5823)
!5825 = !DILocation(line: 1608, column: 6, scope: !5774)
!5826 = !DILocation(line: 1609, column: 3, scope: !5823)
!5827 = !DILocation(line: 1609, column: 10, scope: !5823)
!5828 = !DILocation(line: 1609, column: 21, scope: !5823)
!5829 = !DILocation(line: 1609, column: 28, scope: !5823)
!5830 = !DILocation(line: 1611, column: 22, scope: !5774)
!5831 = !DILocation(line: 1611, column: 27, scope: !5774)
!5832 = !DILocation(line: 1611, column: 2, scope: !5774)
!5833 = !DILocation(line: 1613, column: 2, scope: !5774)
!5834 = !DILabel(scope: !5774, name: "out", file: !3, line: 1615)
!5835 = !DILocation(line: 1615, column: 2, scope: !5774)
!5836 = !DILocation(line: 1616, column: 2, scope: !5774)
!5837 = !DILocation(line: 1617, column: 26, scope: !5774)
!5838 = !DILocation(line: 1617, column: 32, scope: !5774)
!5839 = !DILocation(line: 1617, column: 42, scope: !5774)
!5840 = !DILocation(line: 1617, column: 2, scope: !5774)
!5841 = !DILocation(line: 1619, column: 9, scope: !5774)
!5842 = !DILocation(line: 1619, column: 2, scope: !5774)
!5843 = !DILocation(line: 1620, column: 1, scope: !5774)
!5844 = distinct !DISubprogram(name: "dev_pm_genpd_add_notifier", scope: !3, file: !3, line: 1652, type: !5845, scopeLine: 1653, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5845 = !DISubroutineType(types: !5846)
!5846 = !{!195, !1695, !4733}
!5847 = !DILocalVariable(name: "dev", arg: 1, scope: !5844, file: !3, line: 1652, type: !1695)
!5848 = !DILocation(line: 1652, column: 46, scope: !5844)
!5849 = !DILocalVariable(name: "nb", arg: 2, scope: !5844, file: !3, line: 1652, type: !4733)
!5850 = !DILocation(line: 1652, column: 74, scope: !5844)
!5851 = !DILocalVariable(name: "genpd", scope: !5844, file: !3, line: 1654, type: !214)
!5852 = !DILocation(line: 1654, column: 28, scope: !5844)
!5853 = !DILocalVariable(name: "gpd_data", scope: !5844, file: !3, line: 1655, type: !5121)
!5854 = !DILocation(line: 1655, column: 33, scope: !5844)
!5855 = !DILocalVariable(name: "ret", scope: !5844, file: !3, line: 1656, type: !195)
!5856 = !DILocation(line: 1656, column: 6, scope: !5844)
!5857 = !DILocation(line: 1658, column: 28, scope: !5844)
!5858 = !DILocation(line: 1658, column: 10, scope: !5844)
!5859 = !DILocation(line: 1658, column: 8, scope: !5844)
!5860 = !DILocation(line: 1659, column: 7, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 1659, column: 6)
!5862 = !DILocation(line: 1659, column: 6, scope: !5844)
!5863 = !DILocation(line: 1660, column: 3, scope: !5861)
!5864 = !DILocalVariable(name: "__ret_warn_on", scope: !5865, file: !3, line: 1662, type: !195)
!5865 = distinct !DILexicalBlock(scope: !5866, file: !3, line: 1662, column: 6)
!5866 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 1662, column: 6)
!5867 = !DILocation(line: 1662, column: 6, scope: !5865)
!5868 = !DILocation(line: 1662, column: 6, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 1662, column: 6)
!5870 = !DILocation(line: 1662, column: 6, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5869, file: !3, line: 1662, column: 6)
!5872 = !DILocation(line: 1662, column: 6, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 1662, column: 6)
!5874 = !DILocation(line: 1662, column: 6, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 1662, column: 6)
!5876 = !{i32 -2140622419, i32 -2140622390, i32 -2140622344, i32 -2140622286, i32 -2140622232, i32 -2140622178, i32 -2140622123, i32 -2140622092}
!5877 = !DILocation(line: 1662, column: 6, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 1662, column: 6)
!5879 = !{i32 -2140621682, i32 -2140621675, i32 -2140621623, i32 -2140621592, i32 -2140621562}
!5880 = !DILocation(line: 1662, column: 6, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 1662, column: 6)
!5882 = !DILocation(line: 1662, column: 6, scope: !5866)
!5883 = !DILocation(line: 1662, column: 6, scope: !5844)
!5884 = !DILocation(line: 1664, column: 3, scope: !5866)
!5885 = !DILocation(line: 1666, column: 25, scope: !5844)
!5886 = !DILocation(line: 1666, column: 30, scope: !5844)
!5887 = !DILocation(line: 1666, column: 36, scope: !5844)
!5888 = !DILocation(line: 1666, column: 49, scope: !5844)
!5889 = !DILocation(line: 1666, column: 13, scope: !5844)
!5890 = !DILocation(line: 1666, column: 11, scope: !5844)
!5891 = !DILocation(line: 1667, column: 6, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 1667, column: 6)
!5893 = !DILocation(line: 1667, column: 16, scope: !5892)
!5894 = !DILocation(line: 1667, column: 6, scope: !5844)
!5895 = !DILocation(line: 1668, column: 3, scope: !5892)
!5896 = !DILocation(line: 1670, column: 2, scope: !5844)
!5897 = !DILocation(line: 1671, column: 37, scope: !5844)
!5898 = !DILocation(line: 1671, column: 44, scope: !5844)
!5899 = !DILocation(line: 1671, column: 61, scope: !5844)
!5900 = !DILocation(line: 1671, column: 8, scope: !5844)
!5901 = !DILocation(line: 1671, column: 6, scope: !5844)
!5902 = !DILocation(line: 1672, column: 2, scope: !5844)
!5903 = !DILocation(line: 1674, column: 6, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 1674, column: 6)
!5905 = !DILocation(line: 1674, column: 6, scope: !5844)
!5906 = !DILocation(line: 1675, column: 3, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5904, file: !3, line: 1674, column: 11)
!5908 = !DILocation(line: 1677, column: 10, scope: !5907)
!5909 = !DILocation(line: 1677, column: 3, scope: !5907)
!5910 = !DILocation(line: 1680, column: 23, scope: !5844)
!5911 = !DILocation(line: 1680, column: 2, scope: !5844)
!5912 = !DILocation(line: 1680, column: 12, scope: !5844)
!5913 = !DILocation(line: 1680, column: 21, scope: !5844)
!5914 = !DILocation(line: 1681, column: 2, scope: !5844)
!5915 = !DILocation(line: 1682, column: 1, scope: !5844)
!5916 = distinct !DISubprogram(name: "dev_pm_genpd_remove_notifier", scope: !3, file: !3, line: 1698, type: !4483, scopeLine: 1699, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5917 = !DILocalVariable(name: "dev", arg: 1, scope: !5916, file: !3, line: 1698, type: !1695)
!5918 = !DILocation(line: 1698, column: 49, scope: !5916)
!5919 = !DILocalVariable(name: "genpd", scope: !5916, file: !3, line: 1700, type: !214)
!5920 = !DILocation(line: 1700, column: 28, scope: !5916)
!5921 = !DILocalVariable(name: "gpd_data", scope: !5916, file: !3, line: 1701, type: !5121)
!5922 = !DILocation(line: 1701, column: 33, scope: !5916)
!5923 = !DILocalVariable(name: "ret", scope: !5916, file: !3, line: 1702, type: !195)
!5924 = !DILocation(line: 1702, column: 6, scope: !5916)
!5925 = !DILocation(line: 1704, column: 28, scope: !5916)
!5926 = !DILocation(line: 1704, column: 10, scope: !5916)
!5927 = !DILocation(line: 1704, column: 8, scope: !5916)
!5928 = !DILocation(line: 1705, column: 7, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5916, file: !3, line: 1705, column: 6)
!5930 = !DILocation(line: 1705, column: 6, scope: !5916)
!5931 = !DILocation(line: 1706, column: 3, scope: !5929)
!5932 = !DILocalVariable(name: "__ret_warn_on", scope: !5933, file: !3, line: 1708, type: !195)
!5933 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 1708, column: 6)
!5934 = distinct !DILexicalBlock(scope: !5916, file: !3, line: 1708, column: 6)
!5935 = !DILocation(line: 1708, column: 6, scope: !5933)
!5936 = !DILocation(line: 1708, column: 6, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5933, file: !3, line: 1708, column: 6)
!5938 = !DILocation(line: 1708, column: 6, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5937, file: !3, line: 1708, column: 6)
!5940 = !DILocation(line: 1708, column: 6, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5939, file: !3, line: 1708, column: 6)
!5942 = !DILocation(line: 1708, column: 6, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5939, file: !3, line: 1708, column: 6)
!5944 = !{i32 -2140620574, i32 -2140620545, i32 -2140620499, i32 -2140620441, i32 -2140620387, i32 -2140620333, i32 -2140620278, i32 -2140620247}
!5945 = !DILocation(line: 1708, column: 6, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5939, file: !3, line: 1708, column: 6)
!5947 = !{i32 -2140619837, i32 -2140619830, i32 -2140619778, i32 -2140619747, i32 -2140619717}
!5948 = !DILocation(line: 1708, column: 6, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5939, file: !3, line: 1708, column: 6)
!5950 = !DILocation(line: 1708, column: 6, scope: !5934)
!5951 = !DILocation(line: 1708, column: 6, scope: !5916)
!5952 = !DILocation(line: 1710, column: 3, scope: !5934)
!5953 = !DILocation(line: 1712, column: 25, scope: !5916)
!5954 = !DILocation(line: 1712, column: 30, scope: !5916)
!5955 = !DILocation(line: 1712, column: 36, scope: !5916)
!5956 = !DILocation(line: 1712, column: 49, scope: !5916)
!5957 = !DILocation(line: 1712, column: 13, scope: !5916)
!5958 = !DILocation(line: 1712, column: 11, scope: !5916)
!5959 = !DILocation(line: 1713, column: 7, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5916, file: !3, line: 1713, column: 6)
!5961 = !DILocation(line: 1713, column: 17, scope: !5960)
!5962 = !DILocation(line: 1713, column: 6, scope: !5916)
!5963 = !DILocation(line: 1714, column: 3, scope: !5960)
!5964 = !DILocation(line: 1716, column: 2, scope: !5916)
!5965 = !DILocation(line: 1717, column: 39, scope: !5916)
!5966 = !DILocation(line: 1717, column: 46, scope: !5916)
!5967 = !DILocation(line: 1718, column: 10, scope: !5916)
!5968 = !DILocation(line: 1718, column: 20, scope: !5916)
!5969 = !DILocation(line: 1717, column: 8, scope: !5916)
!5970 = !DILocation(line: 1717, column: 6, scope: !5916)
!5971 = !DILocation(line: 1719, column: 2, scope: !5916)
!5972 = !DILocation(line: 1721, column: 6, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5916, file: !3, line: 1721, column: 6)
!5974 = !DILocation(line: 1721, column: 6, scope: !5916)
!5975 = !DILocation(line: 1722, column: 3, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 1721, column: 11)
!5977 = !DILocation(line: 1724, column: 10, scope: !5976)
!5978 = !DILocation(line: 1724, column: 3, scope: !5976)
!5979 = !DILocation(line: 1727, column: 2, scope: !5916)
!5980 = !DILocation(line: 1727, column: 12, scope: !5916)
!5981 = !DILocation(line: 1727, column: 21, scope: !5916)
!5982 = !DILocation(line: 1728, column: 2, scope: !5916)
!5983 = !DILocation(line: 1729, column: 1, scope: !5916)
!5984 = distinct !DISubprogram(name: "pm_genpd_add_subdomain", scope: !3, file: !3, line: 1792, type: !5985, scopeLine: 1794, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5985 = !DISubroutineType(types: !5986)
!5986 = !{!195, !214, !214}
!5987 = !DILocalVariable(name: "genpd", arg: 1, scope: !5984, file: !3, line: 1792, type: !214)
!5988 = !DILocation(line: 1792, column: 54, scope: !5984)
!5989 = !DILocalVariable(name: "subdomain", arg: 2, scope: !5984, file: !3, line: 1793, type: !214)
!5990 = !DILocation(line: 1793, column: 33, scope: !5984)
!5991 = !DILocalVariable(name: "ret", scope: !5984, file: !3, line: 1795, type: !195)
!5992 = !DILocation(line: 1795, column: 6, scope: !5984)
!5993 = !DILocation(line: 1797, column: 2, scope: !5984)
!5994 = !DILocation(line: 1798, column: 28, scope: !5984)
!5995 = !DILocation(line: 1798, column: 35, scope: !5984)
!5996 = !DILocation(line: 1798, column: 8, scope: !5984)
!5997 = !DILocation(line: 1798, column: 6, scope: !5984)
!5998 = !DILocation(line: 1799, column: 2, scope: !5984)
!5999 = !DILocation(line: 1801, column: 9, scope: !5984)
!6000 = !DILocation(line: 1801, column: 2, scope: !5984)
!6001 = distinct !DISubprogram(name: "genpd_add_subdomain", scope: !3, file: !3, line: 1732, type: !5985, scopeLine: 1734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6002 = !DILocalVariable(name: "genpd", arg: 1, scope: !6001, file: !3, line: 1732, type: !214)
!6003 = !DILocation(line: 1732, column: 58, scope: !6001)
!6004 = !DILocalVariable(name: "subdomain", arg: 2, scope: !6001, file: !3, line: 1733, type: !214)
!6005 = !DILocation(line: 1733, column: 37, scope: !6001)
!6006 = !DILocalVariable(name: "link", scope: !6001, file: !3, line: 1735, type: !210)
!6007 = !DILocation(line: 1735, column: 19, scope: !6001)
!6008 = !DILocalVariable(name: "itr", scope: !6001, file: !3, line: 1735, type: !210)
!6009 = !DILocation(line: 1735, column: 26, scope: !6001)
!6010 = !DILocalVariable(name: "ret", scope: !6001, file: !3, line: 1736, type: !195)
!6011 = !DILocation(line: 1736, column: 6, scope: !6001)
!6012 = !DILocation(line: 1738, column: 21, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 1738, column: 6)
!6014 = !DILocation(line: 1738, column: 6, scope: !6013)
!6015 = !DILocation(line: 1738, column: 28, scope: !6013)
!6016 = !DILocation(line: 1738, column: 46, scope: !6013)
!6017 = !DILocation(line: 1738, column: 31, scope: !6013)
!6018 = !DILocation(line: 1739, column: 6, scope: !6013)
!6019 = !DILocation(line: 1739, column: 9, scope: !6013)
!6020 = !DILocation(line: 1739, column: 18, scope: !6013)
!6021 = !DILocation(line: 1739, column: 15, scope: !6013)
!6022 = !DILocation(line: 1738, column: 6, scope: !6001)
!6023 = !DILocation(line: 1740, column: 3, scope: !6013)
!6024 = !DILocation(line: 1747, column: 7, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 1747, column: 6)
!6026 = !DILocation(line: 1747, column: 32, scope: !6025)
!6027 = !DILocation(line: 1747, column: 35, scope: !6025)
!6028 = !DILocation(line: 1747, column: 6, scope: !6001)
!6029 = !DILocalVariable(name: "__ret_warn_on", scope: !6030, file: !3, line: 1748, type: !195)
!6030 = distinct !DILexicalBlock(scope: !6031, file: !3, line: 1748, column: 3)
!6031 = distinct !DILexicalBlock(scope: !6025, file: !3, line: 1747, column: 65)
!6032 = !DILocation(line: 1748, column: 3, scope: !6030)
!6033 = !DILocation(line: 1748, column: 3, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 1748, column: 3)
!6035 = !DILocation(line: 1748, column: 3, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6034, file: !3, line: 1748, column: 3)
!6037 = !DILocation(line: 1748, column: 3, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6036, file: !3, line: 1748, column: 3)
!6039 = !DILocation(line: 1748, column: 3, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !6036, file: !3, line: 1748, column: 3)
!6041 = !DILocation(line: 1748, column: 3, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !6040, file: !3, line: 1748, column: 3)
!6043 = !DILocation(line: 1748, column: 3, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6040, file: !3, line: 1748, column: 3)
!6045 = !{i32 -2140618308, i32 -2140618279, i32 -2140618233, i32 -2140618175, i32 -2140618121, i32 -2140618067, i32 -2140618012, i32 -2140617981}
!6046 = !DILocation(line: 1748, column: 3, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6040, file: !3, line: 1748, column: 3)
!6048 = !{i32 -2140617560, i32 -2140617553, i32 -2140617501, i32 -2140617470, i32 -2140617440}
!6049 = !DILocation(line: 1748, column: 3, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6040, file: !3, line: 1748, column: 3)
!6051 = !DILocation(line: 1748, column: 3, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6036, file: !3, line: 1748, column: 3)
!6053 = !DILocation(line: 1750, column: 3, scope: !6031)
!6054 = !DILocation(line: 1753, column: 9, scope: !6001)
!6055 = !DILocation(line: 1753, column: 7, scope: !6001)
!6056 = !DILocation(line: 1754, column: 7, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 1754, column: 6)
!6058 = !DILocation(line: 1754, column: 6, scope: !6001)
!6059 = !DILocation(line: 1755, column: 3, scope: !6057)
!6060 = !DILocation(line: 1757, column: 2, scope: !6001)
!6061 = !DILocation(line: 1758, column: 2, scope: !6001)
!6062 = !DILocation(line: 1760, column: 7, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 1760, column: 6)
!6064 = !DILocation(line: 1760, column: 30, scope: !6063)
!6065 = !DILocation(line: 1760, column: 33, scope: !6063)
!6066 = !DILocation(line: 1760, column: 6, scope: !6001)
!6067 = !DILocation(line: 1761, column: 7, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 1760, column: 61)
!6069 = !DILocation(line: 1762, column: 3, scope: !6068)
!6070 = !DILocalVariable(name: "__mptr", scope: !6071, file: !3, line: 1765, type: !209)
!6071 = distinct !DILexicalBlock(scope: !6072, file: !3, line: 1765, column: 2)
!6072 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 1765, column: 2)
!6073 = !DILocation(line: 1765, column: 2, scope: !6071)
!6074 = !DILocation(line: 1765, column: 2, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 1765, column: 2)
!6076 = !DILocation(line: 1765, column: 2, scope: !6072)
!6077 = !DILocation(line: 1765, column: 2, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6072, file: !3, line: 1765, column: 2)
!6079 = !DILocation(line: 1766, column: 7, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6081, file: !3, line: 1766, column: 7)
!6081 = distinct !DILexicalBlock(scope: !6078, file: !3, line: 1765, column: 62)
!6082 = !DILocation(line: 1766, column: 12, scope: !6080)
!6083 = !DILocation(line: 1766, column: 21, scope: !6080)
!6084 = !DILocation(line: 1766, column: 18, scope: !6080)
!6085 = !DILocation(line: 1766, column: 31, scope: !6080)
!6086 = !DILocation(line: 1766, column: 34, scope: !6080)
!6087 = !DILocation(line: 1766, column: 39, scope: !6080)
!6088 = !DILocation(line: 1766, column: 49, scope: !6080)
!6089 = !DILocation(line: 1766, column: 46, scope: !6080)
!6090 = !DILocation(line: 1766, column: 7, scope: !6081)
!6091 = !DILocation(line: 1767, column: 8, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6080, file: !3, line: 1766, column: 56)
!6093 = !DILocation(line: 1768, column: 4, scope: !6092)
!6094 = !DILocation(line: 1770, column: 2, scope: !6081)
!6095 = !DILocalVariable(name: "__mptr", scope: !6096, file: !3, line: 1765, type: !209)
!6096 = distinct !DILexicalBlock(scope: !6078, file: !3, line: 1765, column: 2)
!6097 = !DILocation(line: 1765, column: 2, scope: !6096)
!6098 = !DILocation(line: 1765, column: 2, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6096, file: !3, line: 1765, column: 2)
!6100 = distinct !{!6100, !6076, !6101}
!6101 = !DILocation(line: 1770, column: 2, scope: !6072)
!6102 = !DILocation(line: 1772, column: 17, scope: !6001)
!6103 = !DILocation(line: 1772, column: 2, scope: !6001)
!6104 = !DILocation(line: 1772, column: 8, scope: !6001)
!6105 = !DILocation(line: 1772, column: 15, scope: !6001)
!6106 = !DILocation(line: 1773, column: 17, scope: !6001)
!6107 = !DILocation(line: 1773, column: 23, scope: !6001)
!6108 = !DILocation(line: 1773, column: 37, scope: !6001)
!6109 = !DILocation(line: 1773, column: 44, scope: !6001)
!6110 = !DILocation(line: 1773, column: 2, scope: !6001)
!6111 = !DILocation(line: 1774, column: 16, scope: !6001)
!6112 = !DILocation(line: 1774, column: 2, scope: !6001)
!6113 = !DILocation(line: 1774, column: 8, scope: !6001)
!6114 = !DILocation(line: 1774, column: 14, scope: !6001)
!6115 = !DILocation(line: 1775, column: 17, scope: !6001)
!6116 = !DILocation(line: 1775, column: 23, scope: !6001)
!6117 = !DILocation(line: 1775, column: 36, scope: !6001)
!6118 = !DILocation(line: 1775, column: 47, scope: !6001)
!6119 = !DILocation(line: 1775, column: 2, scope: !6001)
!6120 = !DILocation(line: 1776, column: 6, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 1776, column: 6)
!6122 = !DILocation(line: 1776, column: 6, scope: !6001)
!6123 = !DILocation(line: 1777, column: 24, scope: !6121)
!6124 = !DILocation(line: 1777, column: 3, scope: !6121)
!6125 = !DILabel(scope: !6001, name: "out", file: !3, line: 1779)
!6126 = !DILocation(line: 1779, column: 2, scope: !6001)
!6127 = !DILocation(line: 1780, column: 2, scope: !6001)
!6128 = !DILocation(line: 1781, column: 2, scope: !6001)
!6129 = !DILocation(line: 1782, column: 6, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 1782, column: 6)
!6131 = !DILocation(line: 1782, column: 6, scope: !6001)
!6132 = !DILocation(line: 1783, column: 9, scope: !6130)
!6133 = !DILocation(line: 1783, column: 3, scope: !6130)
!6134 = !DILocation(line: 1784, column: 9, scope: !6001)
!6135 = !DILocation(line: 1784, column: 2, scope: !6001)
!6136 = !DILocation(line: 1785, column: 1, scope: !6001)
!6137 = distinct !DISubprogram(name: "pm_genpd_remove_subdomain", scope: !3, file: !3, line: 1810, type: !5985, scopeLine: 1812, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6138 = !DILocalVariable(name: "genpd", arg: 1, scope: !6137, file: !3, line: 1810, type: !214)
!6139 = !DILocation(line: 1810, column: 57, scope: !6137)
!6140 = !DILocalVariable(name: "subdomain", arg: 2, scope: !6137, file: !3, line: 1811, type: !214)
!6141 = !DILocation(line: 1811, column: 36, scope: !6137)
!6142 = !DILocalVariable(name: "l", scope: !6137, file: !3, line: 1813, type: !210)
!6143 = !DILocation(line: 1813, column: 19, scope: !6137)
!6144 = !DILocalVariable(name: "link", scope: !6137, file: !3, line: 1813, type: !210)
!6145 = !DILocation(line: 1813, column: 23, scope: !6137)
!6146 = !DILocalVariable(name: "ret", scope: !6137, file: !3, line: 1814, type: !195)
!6147 = !DILocation(line: 1814, column: 6, scope: !6137)
!6148 = !DILocation(line: 1816, column: 21, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6137, file: !3, line: 1816, column: 6)
!6150 = !DILocation(line: 1816, column: 6, scope: !6149)
!6151 = !DILocation(line: 1816, column: 28, scope: !6149)
!6152 = !DILocation(line: 1816, column: 46, scope: !6149)
!6153 = !DILocation(line: 1816, column: 31, scope: !6149)
!6154 = !DILocation(line: 1816, column: 6, scope: !6137)
!6155 = !DILocation(line: 1817, column: 3, scope: !6149)
!6156 = !DILocation(line: 1819, column: 2, scope: !6137)
!6157 = !DILocation(line: 1820, column: 2, scope: !6137)
!6158 = !DILocation(line: 1822, column: 19, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6137, file: !3, line: 1822, column: 6)
!6160 = !DILocation(line: 1822, column: 30, scope: !6159)
!6161 = !DILocation(line: 1822, column: 7, scope: !6159)
!6162 = !DILocation(line: 1822, column: 44, scope: !6159)
!6163 = !DILocation(line: 1822, column: 47, scope: !6159)
!6164 = !DILocation(line: 1822, column: 58, scope: !6159)
!6165 = !DILocation(line: 1822, column: 6, scope: !6137)
!6166 = !DILocation(line: 1823, column: 3, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6159, file: !3, line: 1822, column: 72)
!6168 = !DILocation(line: 1825, column: 7, scope: !6167)
!6169 = !DILocation(line: 1826, column: 3, scope: !6167)
!6170 = !DILocalVariable(name: "__mptr", scope: !6171, file: !3, line: 1829, type: !209)
!6171 = distinct !DILexicalBlock(scope: !6172, file: !3, line: 1829, column: 2)
!6172 = distinct !DILexicalBlock(scope: !6137, file: !3, line: 1829, column: 2)
!6173 = !DILocation(line: 1829, column: 2, scope: !6171)
!6174 = !DILocation(line: 1829, column: 2, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6171, file: !3, line: 1829, column: 2)
!6176 = !DILocation(line: 1829, column: 2, scope: !6172)
!6177 = !DILocalVariable(name: "__mptr", scope: !6178, file: !3, line: 1829, type: !209)
!6178 = distinct !DILexicalBlock(scope: !6172, file: !3, line: 1829, column: 2)
!6179 = !DILocation(line: 1829, column: 2, scope: !6178)
!6180 = !DILocation(line: 1829, column: 2, scope: !6181)
!6181 = distinct !DILexicalBlock(scope: !6178, file: !3, line: 1829, column: 2)
!6182 = !DILocation(line: 1829, column: 2, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6172, file: !3, line: 1829, column: 2)
!6184 = !DILocation(line: 1830, column: 7, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6186, file: !3, line: 1830, column: 7)
!6186 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 1829, column: 71)
!6187 = !DILocation(line: 1830, column: 13, scope: !6185)
!6188 = !DILocation(line: 1830, column: 22, scope: !6185)
!6189 = !DILocation(line: 1830, column: 19, scope: !6185)
!6190 = !DILocation(line: 1830, column: 7, scope: !6186)
!6191 = !DILocation(line: 1831, column: 4, scope: !6185)
!6192 = !DILocation(line: 1833, column: 13, scope: !6186)
!6193 = !DILocation(line: 1833, column: 19, scope: !6186)
!6194 = !DILocation(line: 1833, column: 3, scope: !6186)
!6195 = !DILocation(line: 1834, column: 13, scope: !6186)
!6196 = !DILocation(line: 1834, column: 19, scope: !6186)
!6197 = !DILocation(line: 1834, column: 3, scope: !6186)
!6198 = !DILocation(line: 1835, column: 9, scope: !6186)
!6199 = !DILocation(line: 1835, column: 3, scope: !6186)
!6200 = !DILocation(line: 1836, column: 7, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6186, file: !3, line: 1836, column: 7)
!6202 = !DILocation(line: 1836, column: 7, scope: !6186)
!6203 = !DILocation(line: 1837, column: 25, scope: !6201)
!6204 = !DILocation(line: 1837, column: 4, scope: !6201)
!6205 = !DILocation(line: 1839, column: 7, scope: !6186)
!6206 = !DILocation(line: 1840, column: 3, scope: !6186)
!6207 = !DILocalVariable(name: "__mptr", scope: !6208, file: !3, line: 1829, type: !209)
!6208 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 1829, column: 2)
!6209 = !DILocation(line: 1829, column: 2, scope: !6208)
!6210 = !DILocation(line: 1829, column: 2, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 1829, column: 2)
!6212 = distinct !{!6212, !6176, !6213}
!6213 = !DILocation(line: 1841, column: 2, scope: !6172)
!6214 = !DILabel(scope: !6137, name: "out", file: !3, line: 1843)
!6215 = !DILocation(line: 1843, column: 1, scope: !6137)
!6216 = !DILocation(line: 1844, column: 2, scope: !6137)
!6217 = !DILocation(line: 1845, column: 2, scope: !6137)
!6218 = !DILocation(line: 1847, column: 9, scope: !6137)
!6219 = !DILocation(line: 1847, column: 2, scope: !6137)
!6220 = !DILocation(line: 1848, column: 1, scope: !6137)
!6221 = distinct !DISubprogram(name: "IS_ERR_OR_NULL", scope: !6222, file: !6222, line: 39, type: !6223, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6222 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!6223 = !DISubroutineType(types: !6224)
!6224 = !{!499, !3258}
!6225 = !DILocalVariable(name: "ptr", arg: 1, scope: !6221, file: !6222, line: 39, type: !3258)
!6226 = !DILocation(line: 39, column: 68, scope: !6221)
!6227 = !DILocation(line: 41, column: 9, scope: !6221)
!6228 = !DILocation(line: 41, column: 24, scope: !6221)
!6229 = !DILocation(line: 41, column: 27, scope: !6221)
!6230 = !DILocation(line: 41, column: 2, scope: !6221)
!6231 = distinct !DISubprogram(name: "list_empty", scope: !6232, file: !6232, line: 280, type: !6233, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6232 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!6233 = !DISubroutineType(types: !6234)
!6234 = !{!195, !6235}
!6235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6236, size: 64)
!6236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !229)
!6237 = !DILocalVariable(name: "head", arg: 1, scope: !6231, file: !6232, line: 280, type: !6235)
!6238 = !DILocation(line: 280, column: 54, scope: !6231)
!6239 = !DILocation(line: 282, column: 9, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6231, file: !6232, line: 282, column: 9)
!6241 = !DILocation(line: 282, column: 9, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6240, file: !6232, line: 282, column: 9)
!6243 = !DILocation(line: 282, column: 34, scope: !6231)
!6244 = !DILocation(line: 282, column: 31, scope: !6231)
!6245 = !DILocation(line: 282, column: 2, scope: !6231)
!6246 = distinct !DISubprogram(name: "list_del", scope: !6232, file: !6232, line: 144, type: !6247, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6247 = !DISubroutineType(types: !6248)
!6248 = !{null, !233}
!6249 = !DILocalVariable(name: "entry", arg: 1, scope: !6246, file: !6232, line: 144, type: !233)
!6250 = !DILocation(line: 144, column: 47, scope: !6246)
!6251 = !DILocation(line: 146, column: 19, scope: !6246)
!6252 = !DILocation(line: 146, column: 2, scope: !6246)
!6253 = !DILocation(line: 147, column: 2, scope: !6246)
!6254 = !DILocation(line: 147, column: 9, scope: !6246)
!6255 = !DILocation(line: 147, column: 14, scope: !6246)
!6256 = !DILocation(line: 148, column: 2, scope: !6246)
!6257 = !DILocation(line: 148, column: 9, scope: !6246)
!6258 = !DILocation(line: 148, column: 14, scope: !6246)
!6259 = !DILocation(line: 149, column: 1, scope: !6246)
!6260 = distinct !DISubprogram(name: "genpd_sd_counter_dec", scope: !3, file: !3, line: 196, type: !6261, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6261 = !DISubroutineType(types: !6262)
!6262 = !{!499, !214}
!6263 = !DILocalVariable(name: "v", arg: 1, scope: !6264, file: !6265, line: 121, type: !6268)
!6264 = distinct !DISubprogram(name: "arch_atomic_dec_and_test", scope: !6265, file: !6265, line: 121, type: !6266, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6265 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!6266 = !DISubroutineType(types: !6267)
!6267 = !{!499, !6268}
!6268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 64)
!6269 = !DILocation(line: 121, column: 64, scope: !6264, inlinedAt: !6270)
!6270 = distinct !DILocation(line: 749, column: 9, scope: !6271, inlinedAt: !6273)
!6271 = distinct !DISubprogram(name: "atomic_dec_and_test", scope: !6272, file: !6272, line: 746, type: !6266, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6272 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!6273 = distinct !DILocation(line: 201, column: 11, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6260, file: !3, line: 200, column: 6)
!6275 = !DILocalVariable(name: "c", scope: !6276, file: !6265, line: 123, type: !499)
!6276 = distinct !DILexicalBlock(scope: !6264, file: !6265, line: 123, column: 9)
!6277 = !DILocation(line: 123, column: 9, scope: !6276, inlinedAt: !6270)
!6278 = !DILocalVariable(name: "v", arg: 1, scope: !6279, file: !6280, line: 99, type: !6283)
!6279 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !6280, file: !6280, line: 99, type: !6281, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6280 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!6281 = !DISubroutineType(types: !6282)
!6282 = !{null, !6283, !330}
!6283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6284, size: 64)
!6284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6285)
!6285 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!6286 = !DILocation(line: 99, column: 79, scope: !6279, inlinedAt: !6287)
!6287 = distinct !DILocation(line: 748, column: 2, scope: !6271, inlinedAt: !6273)
!6288 = !DILocalVariable(name: "size", arg: 2, scope: !6279, file: !6280, line: 99, type: !330)
!6289 = !DILocation(line: 99, column: 89, scope: !6279, inlinedAt: !6287)
!6290 = !DILocalVariable(name: "v", arg: 1, scope: !6271, file: !6272, line: 746, type: !6268)
!6291 = !DILocation(line: 746, column: 31, scope: !6271, inlinedAt: !6273)
!6292 = !DILocalVariable(name: "v", arg: 1, scope: !6293, file: !6265, line: 23, type: !6296)
!6293 = distinct !DISubprogram(name: "arch_atomic_read", scope: !6265, file: !6265, line: 23, type: !6294, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6294 = !DISubroutineType(types: !6295)
!6295 = !{!195, !6296}
!6296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6297, size: 64)
!6297 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !823)
!6298 = !DILocation(line: 23, column: 61, scope: !6293, inlinedAt: !6299)
!6299 = distinct !DILocation(line: 28, column: 9, scope: !6300, inlinedAt: !6301)
!6300 = distinct !DISubprogram(name: "atomic_read", scope: !6272, file: !6272, line: 25, type: !6294, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6301 = distinct !DILocation(line: 200, column: 7, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6274, file: !3, line: 200, column: 7)
!6303 = !DILocalVariable(name: "v", arg: 1, scope: !6304, file: !6280, line: 69, type: !6283)
!6304 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !6280, file: !6280, line: 69, type: !6281, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6305 = !DILocation(line: 69, column: 73, scope: !6304, inlinedAt: !6306)
!6306 = distinct !DILocation(line: 27, column: 2, scope: !6300, inlinedAt: !6301)
!6307 = !DILocalVariable(name: "size", arg: 2, scope: !6304, file: !6280, line: 69, type: !330)
!6308 = !DILocation(line: 69, column: 83, scope: !6304, inlinedAt: !6306)
!6309 = !DILocalVariable(name: "v", arg: 1, scope: !6300, file: !6272, line: 25, type: !6296)
!6310 = !DILocation(line: 25, column: 29, scope: !6300, inlinedAt: !6301)
!6311 = !DILocalVariable(name: "genpd", arg: 1, scope: !6260, file: !3, line: 196, type: !214)
!6312 = !DILocation(line: 196, column: 60, scope: !6260)
!6313 = !DILocalVariable(name: "ret", scope: !6260, file: !3, line: 198, type: !499)
!6314 = !DILocation(line: 198, column: 7, scope: !6260)
!6315 = !DILocalVariable(name: "__ret_warn_on", scope: !6302, file: !3, line: 200, type: !195)
!6316 = !DILocation(line: 200, column: 7, scope: !6302)
!6317 = !DILocation(line: 27, column: 25, scope: !6300, inlinedAt: !6301)
!6318 = !DILocation(line: 71, column: 19, scope: !6304, inlinedAt: !6306)
!6319 = !DILocation(line: 71, column: 22, scope: !6304, inlinedAt: !6306)
!6320 = !DILocation(line: 71, column: 2, scope: !6304, inlinedAt: !6306)
!6321 = !DILocation(line: 72, column: 2, scope: !6304, inlinedAt: !6306)
!6322 = !DILocation(line: 28, column: 26, scope: !6300, inlinedAt: !6301)
!6323 = !DILocation(line: 29, column: 9, scope: !6293, inlinedAt: !6299)
!6324 = !DILocation(line: 200, column: 7, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6302, file: !3, line: 200, column: 7)
!6326 = !DILocation(line: 200, column: 7, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6325, file: !3, line: 200, column: 7)
!6328 = !DILocation(line: 200, column: 7, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6327, file: !3, line: 200, column: 7)
!6330 = !DILocation(line: 200, column: 7, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6327, file: !3, line: 200, column: 7)
!6332 = !{i32 -2140688209, i32 -2140688180, i32 -2140688134, i32 -2140688076, i32 -2140688022, i32 -2140687968, i32 -2140687913, i32 -2140687882}
!6333 = !DILocation(line: 200, column: 7, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6327, file: !3, line: 200, column: 7)
!6335 = !{i32 -2140687473, i32 -2140687466, i32 -2140687414, i32 -2140687383, i32 -2140687353}
!6336 = !DILocation(line: 200, column: 7, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6327, file: !3, line: 200, column: 7)
!6338 = !DILocation(line: 200, column: 7, scope: !6274)
!6339 = !DILocation(line: 200, column: 6, scope: !6260)
!6340 = !DILocation(line: 201, column: 32, scope: !6274)
!6341 = !DILocation(line: 201, column: 39, scope: !6274)
!6342 = !DILocation(line: 748, column: 31, scope: !6271, inlinedAt: !6273)
!6343 = !DILocation(line: 101, column: 20, scope: !6279, inlinedAt: !6287)
!6344 = !DILocation(line: 101, column: 23, scope: !6279, inlinedAt: !6287)
!6345 = !DILocation(line: 101, column: 2, scope: !6279, inlinedAt: !6287)
!6346 = !DILocation(line: 102, column: 2, scope: !6279, inlinedAt: !6287)
!6347 = !DILocation(line: 749, column: 34, scope: !6271, inlinedAt: !6273)
!6348 = !{i32 -2146803229, i32 -2146803162}
!6349 = !DILocation(line: 201, column: 10, scope: !6274)
!6350 = !DILocation(line: 201, column: 9, scope: !6274)
!6351 = !DILocation(line: 201, column: 7, scope: !6274)
!6352 = !DILocation(line: 201, column: 3, scope: !6274)
!6353 = !DILocation(line: 203, column: 9, scope: !6260)
!6354 = !DILocation(line: 203, column: 2, scope: !6260)
!6355 = distinct !DISubprogram(name: "pm_genpd_init", scope: !3, file: !3, line: 1891, type: !6356, scopeLine: 1893, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6356 = !DISubroutineType(types: !6357)
!6357 = !{!195, !214, !4989, !499}
!6358 = !DILocalVariable(name: "v", arg: 1, scope: !6359, file: !6265, line: 39, type: !6268)
!6359 = distinct !DISubprogram(name: "arch_atomic_set", scope: !6265, file: !6265, line: 39, type: !6360, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6360 = !DISubroutineType(types: !6361)
!6361 = !{null, !6268, !195}
!6362 = !DILocation(line: 39, column: 55, scope: !6359, inlinedAt: !6363)
!6363 = distinct !DILocation(line: 46, column: 2, scope: !6364, inlinedAt: !6365)
!6364 = distinct !DISubprogram(name: "atomic_set", scope: !6272, file: !6272, line: 43, type: !6360, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6365 = distinct !DILocation(line: 1906, column: 2, scope: !6355)
!6366 = !DILocalVariable(name: "i", arg: 2, scope: !6359, file: !6265, line: 39, type: !195)
!6367 = !DILocation(line: 39, column: 62, scope: !6359, inlinedAt: !6363)
!6368 = !DILocalVariable(name: "v", arg: 1, scope: !6369, file: !6280, line: 84, type: !6283)
!6369 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !6280, file: !6280, line: 84, type: !6281, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6370 = !DILocation(line: 84, column: 74, scope: !6369, inlinedAt: !6371)
!6371 = distinct !DILocation(line: 45, column: 2, scope: !6364, inlinedAt: !6365)
!6372 = !DILocalVariable(name: "size", arg: 2, scope: !6369, file: !6280, line: 84, type: !330)
!6373 = !DILocation(line: 84, column: 84, scope: !6369, inlinedAt: !6371)
!6374 = !DILocalVariable(name: "v", arg: 1, scope: !6364, file: !6272, line: 43, type: !6268)
!6375 = !DILocation(line: 43, column: 22, scope: !6364, inlinedAt: !6365)
!6376 = !DILocalVariable(name: "i", arg: 2, scope: !6364, file: !6272, line: 43, type: !195)
!6377 = !DILocation(line: 43, column: 29, scope: !6364, inlinedAt: !6365)
!6378 = !DILocalVariable(name: "genpd", arg: 1, scope: !6355, file: !3, line: 1891, type: !214)
!6379 = !DILocation(line: 1891, column: 45, scope: !6355)
!6380 = !DILocalVariable(name: "gov", arg: 2, scope: !6355, file: !3, line: 1892, type: !4989)
!6381 = !DILocation(line: 1892, column: 32, scope: !6355)
!6382 = !DILocalVariable(name: "is_off", arg: 3, scope: !6355, file: !3, line: 1892, type: !499)
!6383 = !DILocation(line: 1892, column: 42, scope: !6355)
!6384 = !DILocalVariable(name: "ret", scope: !6355, file: !3, line: 1894, type: !195)
!6385 = !DILocation(line: 1894, column: 6, scope: !6355)
!6386 = !DILocation(line: 1896, column: 21, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 1896, column: 6)
!6388 = !DILocation(line: 1896, column: 6, scope: !6387)
!6389 = !DILocation(line: 1896, column: 6, scope: !6355)
!6390 = !DILocation(line: 1897, column: 3, scope: !6387)
!6391 = !DILocation(line: 1899, column: 18, scope: !6355)
!6392 = !DILocation(line: 1899, column: 25, scope: !6355)
!6393 = !DILocation(line: 1899, column: 2, scope: !6355)
!6394 = !DILocation(line: 1900, column: 18, scope: !6355)
!6395 = !DILocation(line: 1900, column: 25, scope: !6355)
!6396 = !DILocation(line: 1900, column: 2, scope: !6355)
!6397 = !DILocation(line: 1901, column: 18, scope: !6355)
!6398 = !DILocation(line: 1901, column: 25, scope: !6355)
!6399 = !DILocation(line: 1901, column: 2, scope: !6355)
!6400 = !DILocation(line: 1902, column: 2, scope: !6355)
!6401 = !DILocation(line: 1902, column: 2, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 1902, column: 2)
!6403 = !DILocation(line: 1903, column: 18, scope: !6355)
!6404 = !DILocation(line: 1903, column: 2, scope: !6355)
!6405 = !DILocation(line: 1904, column: 15, scope: !6355)
!6406 = !DILocation(line: 1904, column: 2, scope: !6355)
!6407 = !DILocation(line: 1904, column: 9, scope: !6355)
!6408 = !DILocation(line: 1904, column: 13, scope: !6355)
!6409 = !DILocation(line: 1905, column: 2, scope: !6355)
!6410 = !DILocation(line: 1905, column: 2, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 1905, column: 2)
!6412 = !DILocation(line: 1906, column: 14, scope: !6355)
!6413 = !DILocation(line: 1906, column: 21, scope: !6355)
!6414 = !DILocation(line: 45, column: 26, scope: !6364, inlinedAt: !6365)
!6415 = !DILocation(line: 86, column: 20, scope: !6369, inlinedAt: !6371)
!6416 = !DILocation(line: 86, column: 23, scope: !6369, inlinedAt: !6371)
!6417 = !DILocation(line: 86, column: 2, scope: !6369, inlinedAt: !6371)
!6418 = !DILocation(line: 87, column: 2, scope: !6369, inlinedAt: !6371)
!6419 = !DILocation(line: 46, column: 18, scope: !6364, inlinedAt: !6365)
!6420 = !DILocation(line: 46, column: 21, scope: !6364, inlinedAt: !6365)
!6421 = !DILocation(line: 41, column: 2, scope: !6422, inlinedAt: !6363)
!6422 = distinct !DILexicalBlock(scope: !6359, file: !6265, line: 41, column: 2)
!6423 = !DILocation(line: 1907, column: 18, scope: !6355)
!6424 = !DILocation(line: 1907, column: 2, scope: !6355)
!6425 = !DILocation(line: 1907, column: 9, scope: !6355)
!6426 = !DILocation(line: 1907, column: 16, scope: !6355)
!6427 = !DILocation(line: 1908, column: 2, scope: !6355)
!6428 = !DILocation(line: 1908, column: 9, scope: !6355)
!6429 = !DILocation(line: 1908, column: 22, scope: !6355)
!6430 = !DILocation(line: 1909, column: 2, scope: !6355)
!6431 = !DILocation(line: 1909, column: 9, scope: !6355)
!6432 = !DILocation(line: 1909, column: 25, scope: !6355)
!6433 = !DILocation(line: 1910, column: 2, scope: !6355)
!6434 = !DILocation(line: 1910, column: 9, scope: !6355)
!6435 = !DILocation(line: 1910, column: 30, scope: !6355)
!6436 = !DILocation(line: 1911, column: 2, scope: !6355)
!6437 = !DILocation(line: 1911, column: 9, scope: !6355)
!6438 = !DILocation(line: 1911, column: 18, scope: !6355)
!6439 = !DILocation(line: 1912, column: 2, scope: !6355)
!6440 = !DILocation(line: 1912, column: 9, scope: !6355)
!6441 = !DILocation(line: 1912, column: 22, scope: !6355)
!6442 = !DILocation(line: 1913, column: 27, scope: !6355)
!6443 = !DILocation(line: 1913, column: 2, scope: !6355)
!6444 = !DILocation(line: 1913, column: 9, scope: !6355)
!6445 = !DILocation(line: 1913, column: 25, scope: !6355)
!6446 = !DILocation(line: 1914, column: 2, scope: !6355)
!6447 = !DILocation(line: 1914, column: 9, scope: !6355)
!6448 = !DILocation(line: 1914, column: 16, scope: !6355)
!6449 = !DILocation(line: 1914, column: 20, scope: !6355)
!6450 = !DILocation(line: 1914, column: 36, scope: !6355)
!6451 = !DILocation(line: 1915, column: 2, scope: !6355)
!6452 = !DILocation(line: 1915, column: 9, scope: !6355)
!6453 = !DILocation(line: 1915, column: 16, scope: !6355)
!6454 = !DILocation(line: 1915, column: 20, scope: !6355)
!6455 = !DILocation(line: 1915, column: 35, scope: !6355)
!6456 = !DILocation(line: 1916, column: 2, scope: !6355)
!6457 = !DILocation(line: 1916, column: 9, scope: !6355)
!6458 = !DILocation(line: 1916, column: 16, scope: !6355)
!6459 = !DILocation(line: 1916, column: 20, scope: !6355)
!6460 = !DILocation(line: 1916, column: 28, scope: !6355)
!6461 = !DILocation(line: 1917, column: 2, scope: !6355)
!6462 = !DILocation(line: 1917, column: 9, scope: !6355)
!6463 = !DILocation(line: 1917, column: 16, scope: !6355)
!6464 = !DILocation(line: 1917, column: 20, scope: !6355)
!6465 = !DILocation(line: 1917, column: 34, scope: !6355)
!6466 = !DILocation(line: 1918, column: 2, scope: !6355)
!6467 = !DILocation(line: 1918, column: 9, scope: !6355)
!6468 = !DILocation(line: 1918, column: 16, scope: !6355)
!6469 = !DILocation(line: 1918, column: 20, scope: !6355)
!6470 = !DILocation(line: 1918, column: 33, scope: !6355)
!6471 = !DILocation(line: 1919, column: 2, scope: !6355)
!6472 = !DILocation(line: 1919, column: 9, scope: !6355)
!6473 = !DILocation(line: 1919, column: 16, scope: !6355)
!6474 = !DILocation(line: 1919, column: 20, scope: !6355)
!6475 = !DILocation(line: 1919, column: 33, scope: !6355)
!6476 = !DILocation(line: 1920, column: 2, scope: !6355)
!6477 = !DILocation(line: 1920, column: 9, scope: !6355)
!6478 = !DILocation(line: 1920, column: 16, scope: !6355)
!6479 = !DILocation(line: 1920, column: 20, scope: !6355)
!6480 = !DILocation(line: 1920, column: 31, scope: !6355)
!6481 = !DILocation(line: 1921, column: 2, scope: !6355)
!6482 = !DILocation(line: 1921, column: 9, scope: !6355)
!6483 = !DILocation(line: 1921, column: 16, scope: !6355)
!6484 = !DILocation(line: 1921, column: 20, scope: !6355)
!6485 = !DILocation(line: 1921, column: 35, scope: !6355)
!6486 = !DILocation(line: 1922, column: 2, scope: !6355)
!6487 = !DILocation(line: 1922, column: 9, scope: !6355)
!6488 = !DILocation(line: 1922, column: 16, scope: !6355)
!6489 = !DILocation(line: 1922, column: 20, scope: !6355)
!6490 = !DILocation(line: 1922, column: 34, scope: !6355)
!6491 = !DILocation(line: 1923, column: 2, scope: !6355)
!6492 = !DILocation(line: 1923, column: 9, scope: !6355)
!6493 = !DILocation(line: 1923, column: 16, scope: !6355)
!6494 = !DILocation(line: 1923, column: 20, scope: !6355)
!6495 = !DILocation(line: 1923, column: 29, scope: !6355)
!6496 = !DILocation(line: 1924, column: 2, scope: !6355)
!6497 = !DILocation(line: 1924, column: 9, scope: !6355)
!6498 = !DILocation(line: 1924, column: 16, scope: !6355)
!6499 = !DILocation(line: 1924, column: 22, scope: !6355)
!6500 = !DILocation(line: 1926, column: 6, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 1926, column: 6)
!6502 = !DILocation(line: 1926, column: 13, scope: !6501)
!6503 = !DILocation(line: 1926, column: 19, scope: !6501)
!6504 = !DILocation(line: 1926, column: 6, scope: !6355)
!6505 = !DILocation(line: 1927, column: 3, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6501, file: !3, line: 1926, column: 40)
!6507 = !DILocation(line: 1927, column: 10, scope: !6506)
!6508 = !DILocation(line: 1927, column: 18, scope: !6506)
!6509 = !DILocation(line: 1927, column: 23, scope: !6506)
!6510 = !DILocation(line: 1928, column: 3, scope: !6506)
!6511 = !DILocation(line: 1928, column: 10, scope: !6506)
!6512 = !DILocation(line: 1928, column: 18, scope: !6506)
!6513 = !DILocation(line: 1928, column: 24, scope: !6506)
!6514 = !DILocation(line: 1929, column: 2, scope: !6506)
!6515 = !DILocation(line: 1932, column: 7, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 1932, column: 6)
!6517 = !DILocation(line: 1932, column: 33, scope: !6516)
!6518 = !DILocation(line: 1932, column: 36, scope: !6516)
!6519 = !DILocation(line: 1932, column: 67, scope: !6516)
!6520 = !DILocation(line: 1933, column: 5, scope: !6516)
!6521 = !DILocation(line: 1932, column: 6, scope: !6355)
!6522 = !DILocation(line: 1934, column: 3, scope: !6516)
!6523 = !DILocation(line: 1936, column: 6, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 1936, column: 6)
!6525 = !DILocation(line: 1936, column: 33, scope: !6524)
!6526 = !DILocation(line: 1937, column: 27, scope: !6524)
!6527 = !DILocation(line: 1937, column: 34, scope: !6524)
!6528 = !DILocation(line: 1937, column: 7, scope: !6524)
!6529 = !DILocation(line: 1936, column: 6, scope: !6355)
!6530 = !DILocation(line: 1938, column: 3, scope: !6524)
!6531 = !DILocation(line: 1941, column: 6, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 1941, column: 6)
!6533 = !DILocation(line: 1941, column: 13, scope: !6532)
!6534 = !DILocation(line: 1941, column: 25, scope: !6532)
!6535 = !DILocation(line: 1941, column: 6, scope: !6355)
!6536 = !DILocation(line: 1942, column: 39, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6532, file: !3, line: 1941, column: 31)
!6538 = !DILocation(line: 1942, column: 9, scope: !6537)
!6539 = !DILocation(line: 1942, column: 7, scope: !6537)
!6540 = !DILocation(line: 1943, column: 7, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6537, file: !3, line: 1943, column: 7)
!6542 = !DILocation(line: 1943, column: 7, scope: !6537)
!6543 = !DILocation(line: 1944, column: 8, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 1944, column: 8)
!6545 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 1943, column: 12)
!6546 = !DILocation(line: 1944, column: 8, scope: !6545)
!6547 = !DILocation(line: 1945, column: 22, scope: !6544)
!6548 = !DILocation(line: 1945, column: 29, scope: !6544)
!6549 = !DILocation(line: 1945, column: 5, scope: !6544)
!6550 = !DILocation(line: 1946, column: 11, scope: !6545)
!6551 = !DILocation(line: 1946, column: 4, scope: !6545)
!6552 = !DILocation(line: 1948, column: 2, scope: !6537)
!6553 = !DILocation(line: 1948, column: 14, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6532, file: !3, line: 1948, column: 13)
!6555 = !DILocation(line: 1948, column: 18, scope: !6554)
!6556 = !DILocation(line: 1948, column: 21, scope: !6554)
!6557 = !DILocation(line: 1948, column: 28, scope: !6554)
!6558 = !DILocation(line: 1948, column: 40, scope: !6554)
!6559 = !DILocation(line: 1948, column: 13, scope: !6532)
!6560 = !DILocation(line: 1949, column: 3, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6554, file: !3, line: 1948, column: 45)
!6562 = !DILocation(line: 1950, column: 2, scope: !6561)
!6563 = !DILocation(line: 1952, column: 21, scope: !6355)
!6564 = !DILocation(line: 1952, column: 28, scope: !6355)
!6565 = !DILocation(line: 1952, column: 2, scope: !6355)
!6566 = !DILocation(line: 1953, column: 16, scope: !6355)
!6567 = !DILocation(line: 1953, column: 23, scope: !6355)
!6568 = !DILocation(line: 1953, column: 34, scope: !6355)
!6569 = !DILocation(line: 1953, column: 41, scope: !6355)
!6570 = !DILocation(line: 1953, column: 2, scope: !6355)
!6571 = !DILocation(line: 1955, column: 2, scope: !6355)
!6572 = !DILocation(line: 1956, column: 12, scope: !6355)
!6573 = !DILocation(line: 1956, column: 19, scope: !6355)
!6574 = !DILocation(line: 1956, column: 2, scope: !6355)
!6575 = !DILocation(line: 1957, column: 2, scope: !6355)
!6576 = !DILocation(line: 1959, column: 2, scope: !6355)
!6577 = !DILocation(line: 1960, column: 1, scope: !6355)
!6578 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !6232, file: !6232, line: 33, type: !6247, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6579 = !DILocalVariable(name: "list", arg: 1, scope: !6578, file: !6232, line: 33, type: !233)
!6580 = !DILocation(line: 33, column: 53, scope: !6578)
!6581 = !DILocation(line: 35, column: 2, scope: !6578)
!6582 = !DILocation(line: 35, column: 2, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6578, file: !6232, line: 35, column: 2)
!6584 = !DILocation(line: 35, column: 2, scope: !6585)
!6585 = distinct !DILexicalBlock(scope: !6583, file: !6232, line: 35, column: 2)
!6586 = !DILocation(line: 35, column: 2, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6583, file: !6232, line: 35, column: 2)
!6588 = !DILocation(line: 36, column: 15, scope: !6578)
!6589 = !DILocation(line: 36, column: 2, scope: !6578)
!6590 = !DILocation(line: 36, column: 8, scope: !6578)
!6591 = !DILocation(line: 36, column: 13, scope: !6578)
!6592 = !DILocation(line: 37, column: 1, scope: !6578)
!6593 = !DILocalVariable(name: "lock", arg: 1, scope: !6594, file: !6595, line: 327, type: !2085)
!6594 = distinct !DISubprogram(name: "spinlock_check", scope: !6595, file: !6595, line: 327, type: !6596, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6595 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!6596 = !DISubroutineType(types: !6597)
!6597 = !{!6598, !2085}
!6598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!6599 = !DILocation(line: 327, column: 67, scope: !6594, inlinedAt: !6600)
!6600 = distinct !DILocation(line: 1875, column: 3, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6602, file: !3, line: 1875, column: 3)
!6602 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 1874, column: 42)
!6603 = distinct !DILexicalBlock(scope: !5175, file: !3, line: 1874, column: 6)
!6604 = !DILocalVariable(name: "genpd", arg: 1, scope: !5175, file: !3, line: 1872, type: !214)
!6605 = !DILocation(line: 1872, column: 55, scope: !5175)
!6606 = !DILocation(line: 1874, column: 6, scope: !6603)
!6607 = !DILocation(line: 1874, column: 13, scope: !6603)
!6608 = !DILocation(line: 1874, column: 19, scope: !6603)
!6609 = !DILocation(line: 1874, column: 6, scope: !5175)
!6610 = !DILocation(line: 1875, column: 3, scope: !6602)
!6611 = !DILocation(line: 1875, column: 3, scope: !6601)
!6612 = !DILocation(line: 329, column: 10, scope: !6594, inlinedAt: !6600)
!6613 = !DILocation(line: 329, column: 16, scope: !6594, inlinedAt: !6600)
!6614 = !DILocation(line: 1876, column: 3, scope: !6602)
!6615 = !DILocation(line: 1876, column: 10, scope: !6602)
!6616 = !DILocation(line: 1876, column: 19, scope: !6602)
!6617 = !DILocation(line: 1877, column: 2, scope: !6602)
!6618 = !DILocation(line: 1878, column: 3, scope: !6619)
!6619 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 1877, column: 9)
!6620 = !DILocation(line: 1878, column: 3, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6619, file: !3, line: 1878, column: 3)
!6622 = !DILocation(line: 1879, column: 3, scope: !6619)
!6623 = !DILocation(line: 1879, column: 10, scope: !6619)
!6624 = !DILocation(line: 1879, column: 19, scope: !6619)
!6625 = !DILocation(line: 1881, column: 1, scope: !5175)
!6626 = distinct !DISubprogram(name: "__init_work", scope: !156, file: !156, line: 215, type: !6627, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6627 = !DISubroutineType(types: !6628)
!6628 = !{null, !1117, !195}
!6629 = !DILocalVariable(name: "work", arg: 1, scope: !6626, file: !156, line: 215, type: !1117)
!6630 = !DILocation(line: 215, column: 52, scope: !6626)
!6631 = !DILocalVariable(name: "onstack", arg: 2, scope: !6626, file: !156, line: 215, type: !195)
!6632 = !DILocation(line: 215, column: 62, scope: !6626)
!6633 = !DILocation(line: 215, column: 73, scope: !6626)
!6634 = distinct !DISubprogram(name: "genpd_power_off_work_fn", scope: !3, file: !3, line: 719, type: !1115, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6635 = !DILocalVariable(name: "work", arg: 1, scope: !6634, file: !3, line: 719, type: !1117)
!6636 = !DILocation(line: 719, column: 57, scope: !6634)
!6637 = !DILocalVariable(name: "genpd", scope: !6634, file: !3, line: 721, type: !214)
!6638 = !DILocation(line: 721, column: 28, scope: !6634)
!6639 = !DILocalVariable(name: "__mptr", scope: !6640, file: !3, line: 723, type: !209)
!6640 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 723, column: 10)
!6641 = !DILocation(line: 723, column: 10, scope: !6640)
!6642 = !DILocation(line: 723, column: 10, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6640, file: !3, line: 723, column: 10)
!6644 = !DILocation(line: 723, column: 8, scope: !6634)
!6645 = !DILocation(line: 725, column: 2, scope: !6634)
!6646 = !DILocation(line: 726, column: 18, scope: !6634)
!6647 = !DILocation(line: 726, column: 2, scope: !6634)
!6648 = !DILocation(line: 727, column: 2, scope: !6634)
!6649 = !DILocation(line: 728, column: 1, scope: !6634)
!6650 = distinct !DISubprogram(name: "genpd_runtime_suspend", scope: !3, file: !3, line: 784, type: !4483, scopeLine: 785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6651 = !DILocalVariable(name: "dev", arg: 1, scope: !6650, file: !3, line: 784, type: !1695)
!6652 = !DILocation(line: 784, column: 49, scope: !6650)
!6653 = !DILocalVariable(name: "genpd", scope: !6650, file: !3, line: 786, type: !214)
!6654 = !DILocation(line: 786, column: 28, scope: !6650)
!6655 = !DILocalVariable(name: "suspend_ok", scope: !6650, file: !3, line: 787, type: !4997)
!6656 = !DILocation(line: 787, column: 9, scope: !6650)
!6657 = !DILocalVariable(name: "td", scope: !6650, file: !3, line: 788, type: !6658)
!6658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5126, size: 64)
!6659 = !DILocation(line: 788, column: 26, scope: !6650)
!6660 = !DILocation(line: 788, column: 45, scope: !6650)
!6661 = !DILocation(line: 788, column: 32, scope: !6650)
!6662 = !DILocation(line: 788, column: 51, scope: !6650)
!6663 = !DILocalVariable(name: "runtime_pm", scope: !6650, file: !3, line: 789, type: !499)
!6664 = !DILocation(line: 789, column: 7, scope: !6650)
!6665 = !DILocation(line: 789, column: 39, scope: !6650)
!6666 = !DILocation(line: 789, column: 20, scope: !6650)
!6667 = !DILocalVariable(name: "time_start", scope: !6650, file: !3, line: 790, type: !2307)
!6668 = !DILocation(line: 790, column: 10, scope: !6650)
!6669 = !DILocalVariable(name: "elapsed_ns", scope: !6650, file: !3, line: 791, type: !759)
!6670 = !DILocation(line: 791, column: 6, scope: !6650)
!6671 = !DILocalVariable(name: "ret", scope: !6650, file: !3, line: 792, type: !195)
!6672 = !DILocation(line: 792, column: 6, scope: !6650)
!6673 = !DILocation(line: 796, column: 23, scope: !6650)
!6674 = !DILocation(line: 796, column: 10, scope: !6650)
!6675 = !DILocation(line: 796, column: 8, scope: !6650)
!6676 = !DILocation(line: 797, column: 13, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 797, column: 6)
!6678 = !DILocation(line: 797, column: 6, scope: !6677)
!6679 = !DILocation(line: 797, column: 6, scope: !6650)
!6680 = !DILocation(line: 798, column: 3, scope: !6677)
!6681 = !DILocation(line: 806, column: 15, scope: !6650)
!6682 = !DILocation(line: 806, column: 22, scope: !6650)
!6683 = !DILocation(line: 806, column: 28, scope: !6650)
!6684 = !DILocation(line: 806, column: 35, scope: !6650)
!6685 = !DILocation(line: 806, column: 40, scope: !6650)
!6686 = !DILocation(line: 806, column: 13, scope: !6650)
!6687 = !DILocation(line: 807, column: 6, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 807, column: 6)
!6689 = !DILocation(line: 807, column: 17, scope: !6688)
!6690 = !DILocation(line: 807, column: 20, scope: !6688)
!6691 = !DILocation(line: 807, column: 31, scope: !6688)
!6692 = !DILocation(line: 807, column: 35, scope: !6688)
!6693 = !DILocation(line: 807, column: 46, scope: !6688)
!6694 = !DILocation(line: 807, column: 6, scope: !6650)
!6695 = !DILocation(line: 808, column: 3, scope: !6688)
!6696 = !DILocation(line: 811, column: 13, scope: !6650)
!6697 = !DILocation(line: 812, column: 6, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 812, column: 6)
!6699 = !DILocation(line: 812, column: 6, scope: !6650)
!6700 = !DILocation(line: 813, column: 16, scope: !6698)
!6701 = !DILocation(line: 813, column: 14, scope: !6698)
!6702 = !DILocation(line: 813, column: 3, scope: !6698)
!6703 = !DILocation(line: 815, column: 32, scope: !6650)
!6704 = !DILocation(line: 815, column: 8, scope: !6650)
!6705 = !DILocation(line: 815, column: 6, scope: !6650)
!6706 = !DILocation(line: 816, column: 6, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 816, column: 6)
!6708 = !DILocation(line: 816, column: 6, scope: !6650)
!6709 = !DILocation(line: 817, column: 10, scope: !6707)
!6710 = !DILocation(line: 817, column: 3, scope: !6707)
!6711 = !DILocation(line: 819, column: 23, scope: !6650)
!6712 = !DILocation(line: 819, column: 30, scope: !6650)
!6713 = !DILocation(line: 819, column: 8, scope: !6650)
!6714 = !DILocation(line: 819, column: 6, scope: !6650)
!6715 = !DILocation(line: 820, column: 6, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 820, column: 6)
!6717 = !DILocation(line: 820, column: 6, scope: !6650)
!6718 = !DILocation(line: 821, column: 26, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6716, file: !3, line: 820, column: 11)
!6720 = !DILocation(line: 821, column: 3, scope: !6719)
!6721 = !DILocation(line: 822, column: 10, scope: !6719)
!6722 = !DILocation(line: 822, column: 3, scope: !6719)
!6723 = !DILocation(line: 826, column: 6, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 826, column: 6)
!6725 = !DILocation(line: 826, column: 6, scope: !6650)
!6726 = !DILocation(line: 827, column: 28, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6724, file: !3, line: 826, column: 18)
!6728 = !DILocation(line: 827, column: 16, scope: !6727)
!6729 = !DILocation(line: 827, column: 14, scope: !6727)
!6730 = !DILocation(line: 828, column: 7, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6727, file: !3, line: 828, column: 7)
!6732 = !DILocation(line: 828, column: 20, scope: !6731)
!6733 = !DILocation(line: 828, column: 24, scope: !6731)
!6734 = !DILocation(line: 828, column: 18, scope: !6731)
!6735 = !DILocation(line: 828, column: 7, scope: !6727)
!6736 = !DILocation(line: 829, column: 29, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 828, column: 44)
!6738 = !DILocation(line: 829, column: 4, scope: !6737)
!6739 = !DILocation(line: 829, column: 8, scope: !6737)
!6740 = !DILocation(line: 829, column: 27, scope: !6737)
!6741 = !DILocation(line: 832, column: 4, scope: !6737)
!6742 = !DILocation(line: 832, column: 11, scope: !6737)
!6743 = !DILocation(line: 832, column: 32, scope: !6737)
!6744 = !DILocation(line: 833, column: 4, scope: !6737)
!6745 = !DILocation(line: 833, column: 8, scope: !6737)
!6746 = !DILocation(line: 833, column: 27, scope: !6737)
!6747 = !DILocation(line: 834, column: 3, scope: !6737)
!6748 = !DILocation(line: 835, column: 2, scope: !6727)
!6749 = !DILocation(line: 841, column: 38, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 841, column: 6)
!6751 = !DILocation(line: 841, column: 43, scope: !6750)
!6752 = !DILocation(line: 841, column: 6, scope: !6750)
!6753 = !DILocation(line: 841, column: 6, scope: !6650)
!6754 = !DILocation(line: 842, column: 3, scope: !6750)
!6755 = !DILocation(line: 844, column: 2, scope: !6650)
!6756 = !DILocation(line: 845, column: 18, scope: !6650)
!6757 = !DILocation(line: 845, column: 2, scope: !6650)
!6758 = !DILocation(line: 846, column: 2, scope: !6650)
!6759 = !DILocation(line: 848, column: 2, scope: !6650)
!6760 = !DILocation(line: 849, column: 1, scope: !6650)
!6761 = distinct !DISubprogram(name: "genpd_runtime_resume", scope: !3, file: !3, line: 859, type: !4483, scopeLine: 860, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6762 = !DILocalVariable(name: "dev", arg: 1, scope: !6761, file: !3, line: 859, type: !1695)
!6763 = !DILocation(line: 859, column: 48, scope: !6761)
!6764 = !DILocalVariable(name: "genpd", scope: !6761, file: !3, line: 861, type: !214)
!6765 = !DILocation(line: 861, column: 28, scope: !6761)
!6766 = !DILocalVariable(name: "td", scope: !6761, file: !3, line: 862, type: !6658)
!6767 = !DILocation(line: 862, column: 26, scope: !6761)
!6768 = !DILocation(line: 862, column: 45, scope: !6761)
!6769 = !DILocation(line: 862, column: 32, scope: !6761)
!6770 = !DILocation(line: 862, column: 51, scope: !6761)
!6771 = !DILocalVariable(name: "runtime_pm", scope: !6761, file: !3, line: 863, type: !499)
!6772 = !DILocation(line: 863, column: 7, scope: !6761)
!6773 = !DILocation(line: 863, column: 39, scope: !6761)
!6774 = !DILocation(line: 863, column: 20, scope: !6761)
!6775 = !DILocalVariable(name: "time_start", scope: !6761, file: !3, line: 864, type: !2307)
!6776 = !DILocation(line: 864, column: 10, scope: !6761)
!6777 = !DILocalVariable(name: "elapsed_ns", scope: !6761, file: !3, line: 865, type: !759)
!6778 = !DILocation(line: 865, column: 6, scope: !6761)
!6779 = !DILocalVariable(name: "ret", scope: !6761, file: !3, line: 866, type: !195)
!6780 = !DILocation(line: 866, column: 6, scope: !6761)
!6781 = !DILocalVariable(name: "timed", scope: !6761, file: !3, line: 867, type: !499)
!6782 = !DILocation(line: 867, column: 7, scope: !6761)
!6783 = !DILocation(line: 871, column: 23, scope: !6761)
!6784 = !DILocation(line: 871, column: 10, scope: !6761)
!6785 = !DILocation(line: 871, column: 8, scope: !6761)
!6786 = !DILocation(line: 872, column: 13, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 872, column: 6)
!6788 = !DILocation(line: 872, column: 6, scope: !6787)
!6789 = !DILocation(line: 872, column: 6, scope: !6761)
!6790 = !DILocation(line: 873, column: 3, scope: !6787)
!6791 = !DILocation(line: 879, column: 38, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 879, column: 6)
!6793 = !DILocation(line: 879, column: 43, scope: !6792)
!6794 = !DILocation(line: 879, column: 6, scope: !6792)
!6795 = !DILocation(line: 879, column: 6, scope: !6761)
!6796 = !DILocation(line: 880, column: 9, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 879, column: 51)
!6798 = !DILocation(line: 881, column: 3, scope: !6797)
!6799 = !DILocation(line: 884, column: 2, scope: !6761)
!6800 = !DILocation(line: 885, column: 23, scope: !6761)
!6801 = !DILocation(line: 885, column: 8, scope: !6761)
!6802 = !DILocation(line: 885, column: 6, scope: !6761)
!6803 = !DILocation(line: 886, column: 2, scope: !6761)
!6804 = !DILocation(line: 888, column: 6, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 888, column: 6)
!6806 = !DILocation(line: 888, column: 6, scope: !6761)
!6807 = !DILocation(line: 889, column: 10, scope: !6805)
!6808 = !DILocation(line: 889, column: 3, scope: !6805)
!6809 = !DILabel(scope: !6761, name: "out", file: !3, line: 891)
!6810 = !DILocation(line: 891, column: 2, scope: !6761)
!6811 = !DILocation(line: 893, column: 13, scope: !6761)
!6812 = !DILocation(line: 894, column: 6, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 894, column: 6)
!6814 = !DILocation(line: 894, column: 12, scope: !6813)
!6815 = !DILocation(line: 894, column: 15, scope: !6813)
!6816 = !DILocation(line: 894, column: 6, scope: !6761)
!6817 = !DILocation(line: 895, column: 16, scope: !6813)
!6818 = !DILocation(line: 895, column: 14, scope: !6813)
!6819 = !DILocation(line: 895, column: 3, scope: !6813)
!6820 = !DILocation(line: 897, column: 24, scope: !6761)
!6821 = !DILocation(line: 897, column: 31, scope: !6761)
!6822 = !DILocation(line: 897, column: 8, scope: !6761)
!6823 = !DILocation(line: 897, column: 6, scope: !6761)
!6824 = !DILocation(line: 898, column: 6, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 898, column: 6)
!6826 = !DILocation(line: 898, column: 6, scope: !6761)
!6827 = !DILocation(line: 899, column: 3, scope: !6825)
!6828 = !DILocation(line: 901, column: 31, scope: !6761)
!6829 = !DILocation(line: 901, column: 8, scope: !6761)
!6830 = !DILocation(line: 901, column: 6, scope: !6761)
!6831 = !DILocation(line: 902, column: 6, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 902, column: 6)
!6833 = !DILocation(line: 902, column: 6, scope: !6761)
!6834 = !DILocation(line: 903, column: 3, scope: !6832)
!6835 = !DILocation(line: 906, column: 6, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 906, column: 6)
!6837 = !DILocation(line: 906, column: 12, scope: !6836)
!6838 = !DILocation(line: 906, column: 15, scope: !6836)
!6839 = !DILocation(line: 906, column: 6, scope: !6761)
!6840 = !DILocation(line: 907, column: 28, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6836, file: !3, line: 906, column: 27)
!6842 = !DILocation(line: 907, column: 16, scope: !6841)
!6843 = !DILocation(line: 907, column: 14, scope: !6841)
!6844 = !DILocation(line: 908, column: 7, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6841, file: !3, line: 908, column: 7)
!6846 = !DILocation(line: 908, column: 20, scope: !6845)
!6847 = !DILocation(line: 908, column: 24, scope: !6845)
!6848 = !DILocation(line: 908, column: 18, scope: !6845)
!6849 = !DILocation(line: 908, column: 7, scope: !6841)
!6850 = !DILocation(line: 909, column: 28, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6845, file: !3, line: 908, column: 43)
!6852 = !DILocation(line: 909, column: 4, scope: !6851)
!6853 = !DILocation(line: 909, column: 8, scope: !6851)
!6854 = !DILocation(line: 909, column: 26, scope: !6851)
!6855 = !DILocation(line: 912, column: 4, scope: !6851)
!6856 = !DILocation(line: 912, column: 11, scope: !6851)
!6857 = !DILocation(line: 912, column: 32, scope: !6851)
!6858 = !DILocation(line: 913, column: 4, scope: !6851)
!6859 = !DILocation(line: 913, column: 8, scope: !6851)
!6860 = !DILocation(line: 913, column: 27, scope: !6851)
!6861 = !DILocation(line: 914, column: 3, scope: !6851)
!6862 = !DILocation(line: 915, column: 2, scope: !6841)
!6863 = !DILocation(line: 917, column: 2, scope: !6761)
!6864 = !DILabel(scope: !6761, name: "err_stop", file: !3, line: 919)
!6865 = !DILocation(line: 919, column: 1, scope: !6761)
!6866 = !DILocation(line: 920, column: 17, scope: !6761)
!6867 = !DILocation(line: 920, column: 24, scope: !6761)
!6868 = !DILocation(line: 920, column: 2, scope: !6761)
!6869 = !DILabel(scope: !6761, name: "err_poweroff", file: !3, line: 921)
!6870 = !DILocation(line: 921, column: 1, scope: !6761)
!6871 = !DILocation(line: 922, column: 30, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 922, column: 6)
!6873 = !DILocation(line: 922, column: 7, scope: !6872)
!6874 = !DILocation(line: 922, column: 35, scope: !6872)
!6875 = !DILocation(line: 923, column: 27, scope: !6872)
!6876 = !DILocation(line: 923, column: 4, scope: !6872)
!6877 = !DILocation(line: 923, column: 32, scope: !6872)
!6878 = !DILocation(line: 923, column: 35, scope: !6872)
!6879 = !DILocation(line: 922, column: 6, scope: !6761)
!6880 = !DILocation(line: 924, column: 3, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6872, file: !3, line: 923, column: 62)
!6882 = !DILocation(line: 925, column: 19, scope: !6881)
!6883 = !DILocation(line: 925, column: 3, scope: !6881)
!6884 = !DILocation(line: 926, column: 3, scope: !6881)
!6885 = !DILocation(line: 927, column: 2, scope: !6881)
!6886 = !DILocation(line: 929, column: 9, scope: !6761)
!6887 = !DILocation(line: 929, column: 2, scope: !6761)
!6888 = !DILocation(line: 930, column: 1, scope: !6761)
!6889 = distinct !DISubprogram(name: "genpd_prepare", scope: !3, file: !3, line: 1081, type: !4483, scopeLine: 1082, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6890 = !DILocalVariable(name: "dev", arg: 1, scope: !6889, file: !3, line: 1081, type: !1695)
!6891 = !DILocation(line: 1081, column: 41, scope: !6889)
!6892 = !DILocalVariable(name: "genpd", scope: !6889, file: !3, line: 1083, type: !214)
!6893 = !DILocation(line: 1083, column: 28, scope: !6889)
!6894 = !DILocalVariable(name: "ret", scope: !6889, file: !3, line: 1084, type: !195)
!6895 = !DILocation(line: 1084, column: 6, scope: !6889)
!6896 = !DILocation(line: 1088, column: 23, scope: !6889)
!6897 = !DILocation(line: 1088, column: 10, scope: !6889)
!6898 = !DILocation(line: 1088, column: 8, scope: !6889)
!6899 = !DILocation(line: 1089, column: 13, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6889, file: !3, line: 1089, column: 6)
!6901 = !DILocation(line: 1089, column: 6, scope: !6900)
!6902 = !DILocation(line: 1089, column: 6, scope: !6889)
!6903 = !DILocation(line: 1090, column: 3, scope: !6900)
!6904 = !DILocation(line: 1097, column: 20, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6889, file: !3, line: 1097, column: 6)
!6906 = !DILocation(line: 1097, column: 25, scope: !6905)
!6907 = !DILocation(line: 1097, column: 6, scope: !6905)
!6908 = !DILocation(line: 1097, column: 6, scope: !6889)
!6909 = !DILocation(line: 1098, column: 21, scope: !6905)
!6910 = !DILocation(line: 1098, column: 3, scope: !6905)
!6911 = !DILocation(line: 1100, column: 2, scope: !6889)
!6912 = !DILocation(line: 1102, column: 6, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6889, file: !3, line: 1102, column: 6)
!6914 = !DILocation(line: 1102, column: 13, scope: !6913)
!6915 = !DILocation(line: 1102, column: 27, scope: !6913)
!6916 = !DILocation(line: 1102, column: 30, scope: !6913)
!6917 = !DILocation(line: 1102, column: 6, scope: !6889)
!6918 = !DILocation(line: 1103, column: 3, scope: !6913)
!6919 = !DILocation(line: 1103, column: 10, scope: !6913)
!6920 = !DILocation(line: 1103, column: 26, scope: !6913)
!6921 = !DILocation(line: 1105, column: 2, scope: !6889)
!6922 = !DILocation(line: 1107, column: 27, scope: !6889)
!6923 = !DILocation(line: 1107, column: 8, scope: !6889)
!6924 = !DILocation(line: 1107, column: 6, scope: !6889)
!6925 = !DILocation(line: 1108, column: 6, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6889, file: !3, line: 1108, column: 6)
!6927 = !DILocation(line: 1108, column: 10, scope: !6926)
!6928 = !DILocation(line: 1108, column: 6, scope: !6889)
!6929 = !DILocation(line: 1109, column: 3, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6926, file: !3, line: 1108, column: 15)
!6931 = !DILocation(line: 1111, column: 3, scope: !6930)
!6932 = !DILocation(line: 1111, column: 10, scope: !6930)
!6933 = !DILocation(line: 1111, column: 24, scope: !6930)
!6934 = !DILocation(line: 1113, column: 3, scope: !6930)
!6935 = !DILocation(line: 1114, column: 2, scope: !6930)
!6936 = !DILocation(line: 1117, column: 9, scope: !6889)
!6937 = !DILocation(line: 1117, column: 13, scope: !6889)
!6938 = !DILocation(line: 1117, column: 24, scope: !6889)
!6939 = !DILocation(line: 1117, column: 2, scope: !6889)
!6940 = !DILocation(line: 1118, column: 1, scope: !6889)
!6941 = distinct !DISubprogram(name: "genpd_suspend_noirq", scope: !3, file: !3, line: 1175, type: !4483, scopeLine: 1176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6942 = !DILocalVariable(name: "dev", arg: 1, scope: !6941, file: !3, line: 1175, type: !1695)
!6943 = !DILocation(line: 1175, column: 47, scope: !6941)
!6944 = !DILocation(line: 1179, column: 30, scope: !6941)
!6945 = !DILocation(line: 1179, column: 9, scope: !6941)
!6946 = !DILocation(line: 1179, column: 2, scope: !6941)
!6947 = distinct !DISubprogram(name: "genpd_resume_noirq", scope: !3, file: !3, line: 1188, type: !4483, scopeLine: 1189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6948 = !DILocalVariable(name: "dev", arg: 1, scope: !6947, file: !3, line: 1188, type: !1695)
!6949 = !DILocation(line: 1188, column: 46, scope: !6947)
!6950 = !DILocalVariable(name: "genpd", scope: !6947, file: !3, line: 1190, type: !214)
!6951 = !DILocation(line: 1190, column: 28, scope: !6947)
!6952 = !DILocalVariable(name: "ret", scope: !6947, file: !3, line: 1191, type: !195)
!6953 = !DILocation(line: 1191, column: 6, scope: !6947)
!6954 = !DILocation(line: 1195, column: 23, scope: !6947)
!6955 = !DILocation(line: 1195, column: 10, scope: !6947)
!6956 = !DILocation(line: 1195, column: 8, scope: !6947)
!6957 = !DILocation(line: 1196, column: 13, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6947, file: !3, line: 1196, column: 6)
!6959 = !DILocation(line: 1196, column: 6, scope: !6958)
!6960 = !DILocation(line: 1196, column: 6, scope: !6947)
!6961 = !DILocation(line: 1197, column: 3, scope: !6958)
!6962 = !DILocation(line: 1199, column: 6, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6947, file: !3, line: 1199, column: 6)
!6964 = !DILocation(line: 1199, column: 11, scope: !6963)
!6965 = !DILocation(line: 1199, column: 17, scope: !6963)
!6966 = !DILocation(line: 1199, column: 29, scope: !6963)
!6967 = !DILocation(line: 1199, column: 32, scope: !6963)
!6968 = !DILocation(line: 1199, column: 6, scope: !6947)
!6969 = !DILocation(line: 1200, column: 34, scope: !6963)
!6970 = !DILocation(line: 1200, column: 10, scope: !6963)
!6971 = !DILocation(line: 1200, column: 3, scope: !6963)
!6972 = !DILocation(line: 1202, column: 2, scope: !6947)
!6973 = !DILocation(line: 1203, column: 22, scope: !6947)
!6974 = !DILocation(line: 1203, column: 2, scope: !6947)
!6975 = !DILocation(line: 1204, column: 2, scope: !6947)
!6976 = !DILocation(line: 1204, column: 9, scope: !6947)
!6977 = !DILocation(line: 1204, column: 24, scope: !6947)
!6978 = !DILocation(line: 1205, column: 2, scope: !6947)
!6979 = !DILocation(line: 1207, column: 6, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6947, file: !3, line: 1207, column: 6)
!6981 = !DILocation(line: 1207, column: 13, scope: !6980)
!6982 = !DILocation(line: 1207, column: 21, scope: !6980)
!6983 = !DILocation(line: 1207, column: 26, scope: !6980)
!6984 = !DILocation(line: 1207, column: 29, scope: !6980)
!6985 = !DILocation(line: 1207, column: 36, scope: !6980)
!6986 = !DILocation(line: 1207, column: 44, scope: !6980)
!6987 = !DILocation(line: 1207, column: 50, scope: !6980)
!6988 = !DILocation(line: 1208, column: 35, scope: !6980)
!6989 = !DILocation(line: 1208, column: 7, scope: !6980)
!6990 = !DILocation(line: 1207, column: 6, scope: !6947)
!6991 = !DILocation(line: 1209, column: 25, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6980, file: !3, line: 1208, column: 41)
!6993 = !DILocation(line: 1209, column: 32, scope: !6992)
!6994 = !DILocation(line: 1209, column: 9, scope: !6992)
!6995 = !DILocation(line: 1209, column: 7, scope: !6992)
!6996 = !DILocation(line: 1210, column: 7, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6992, file: !3, line: 1210, column: 7)
!6998 = !DILocation(line: 1210, column: 7, scope: !6992)
!6999 = !DILocation(line: 1211, column: 11, scope: !6997)
!7000 = !DILocation(line: 1211, column: 4, scope: !6997)
!7001 = !DILocation(line: 1212, column: 2, scope: !6992)
!7002 = !DILocation(line: 1214, column: 33, scope: !6947)
!7003 = !DILocation(line: 1214, column: 9, scope: !6947)
!7004 = !DILocation(line: 1214, column: 2, scope: !6947)
!7005 = !DILocation(line: 1215, column: 1, scope: !6947)
!7006 = distinct !DISubprogram(name: "genpd_freeze_noirq", scope: !3, file: !3, line: 1226, type: !4483, scopeLine: 1227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7007 = !DILocalVariable(name: "dev", arg: 1, scope: !7006, file: !3, line: 1226, type: !1695)
!7008 = !DILocation(line: 1226, column: 46, scope: !7006)
!7009 = !DILocalVariable(name: "genpd", scope: !7006, file: !3, line: 1228, type: !5151)
!7010 = !DILocation(line: 1228, column: 34, scope: !7006)
!7011 = !DILocalVariable(name: "ret", scope: !7006, file: !3, line: 1229, type: !195)
!7012 = !DILocation(line: 1229, column: 6, scope: !7006)
!7013 = !DILocation(line: 1233, column: 23, scope: !7006)
!7014 = !DILocation(line: 1233, column: 10, scope: !7006)
!7015 = !DILocation(line: 1233, column: 8, scope: !7006)
!7016 = !DILocation(line: 1234, column: 13, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 1234, column: 6)
!7018 = !DILocation(line: 1234, column: 6, scope: !7017)
!7019 = !DILocation(line: 1234, column: 6, scope: !7006)
!7020 = !DILocation(line: 1235, column: 3, scope: !7017)
!7021 = !DILocation(line: 1237, column: 32, scope: !7006)
!7022 = !DILocation(line: 1237, column: 8, scope: !7006)
!7023 = !DILocation(line: 1237, column: 6, scope: !7006)
!7024 = !DILocation(line: 1238, column: 6, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 1238, column: 6)
!7026 = !DILocation(line: 1238, column: 6, scope: !7006)
!7027 = !DILocation(line: 1239, column: 10, scope: !7025)
!7028 = !DILocation(line: 1239, column: 3, scope: !7025)
!7029 = !DILocation(line: 1241, column: 6, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 1241, column: 6)
!7031 = !DILocation(line: 1241, column: 13, scope: !7030)
!7032 = !DILocation(line: 1241, column: 21, scope: !7030)
!7033 = !DILocation(line: 1241, column: 26, scope: !7030)
!7034 = !DILocation(line: 1241, column: 29, scope: !7030)
!7035 = !DILocation(line: 1241, column: 36, scope: !7030)
!7036 = !DILocation(line: 1241, column: 44, scope: !7030)
!7037 = !DILocation(line: 1241, column: 50, scope: !7030)
!7038 = !DILocation(line: 1242, column: 35, scope: !7030)
!7039 = !DILocation(line: 1242, column: 7, scope: !7030)
!7040 = !DILocation(line: 1241, column: 6, scope: !7006)
!7041 = !DILocation(line: 1243, column: 24, scope: !7030)
!7042 = !DILocation(line: 1243, column: 31, scope: !7030)
!7043 = !DILocation(line: 1243, column: 9, scope: !7030)
!7044 = !DILocation(line: 1243, column: 7, scope: !7030)
!7045 = !DILocation(line: 1243, column: 3, scope: !7030)
!7046 = !DILocation(line: 1245, column: 9, scope: !7006)
!7047 = !DILocation(line: 1245, column: 2, scope: !7006)
!7048 = !DILocation(line: 1246, column: 1, scope: !7006)
!7049 = distinct !DISubprogram(name: "genpd_thaw_noirq", scope: !3, file: !3, line: 1255, type: !4483, scopeLine: 1256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7050 = !DILocalVariable(name: "dev", arg: 1, scope: !7049, file: !3, line: 1255, type: !1695)
!7051 = !DILocation(line: 1255, column: 44, scope: !7049)
!7052 = !DILocalVariable(name: "genpd", scope: !7049, file: !3, line: 1257, type: !5151)
!7053 = !DILocation(line: 1257, column: 34, scope: !7049)
!7054 = !DILocalVariable(name: "ret", scope: !7049, file: !3, line: 1258, type: !195)
!7055 = !DILocation(line: 1258, column: 6, scope: !7049)
!7056 = !DILocation(line: 1262, column: 23, scope: !7049)
!7057 = !DILocation(line: 1262, column: 10, scope: !7049)
!7058 = !DILocation(line: 1262, column: 8, scope: !7049)
!7059 = !DILocation(line: 1263, column: 13, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 1263, column: 6)
!7061 = !DILocation(line: 1263, column: 6, scope: !7060)
!7062 = !DILocation(line: 1263, column: 6, scope: !7049)
!7063 = !DILocation(line: 1264, column: 3, scope: !7060)
!7064 = !DILocation(line: 1266, column: 6, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 1266, column: 6)
!7066 = !DILocation(line: 1266, column: 13, scope: !7065)
!7067 = !DILocation(line: 1266, column: 21, scope: !7065)
!7068 = !DILocation(line: 1266, column: 26, scope: !7065)
!7069 = !DILocation(line: 1266, column: 29, scope: !7065)
!7070 = !DILocation(line: 1266, column: 36, scope: !7065)
!7071 = !DILocation(line: 1266, column: 44, scope: !7065)
!7072 = !DILocation(line: 1266, column: 50, scope: !7065)
!7073 = !DILocation(line: 1267, column: 35, scope: !7065)
!7074 = !DILocation(line: 1267, column: 7, scope: !7065)
!7075 = !DILocation(line: 1266, column: 6, scope: !7049)
!7076 = !DILocation(line: 1268, column: 25, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7065, file: !3, line: 1267, column: 41)
!7078 = !DILocation(line: 1268, column: 32, scope: !7077)
!7079 = !DILocation(line: 1268, column: 9, scope: !7077)
!7080 = !DILocation(line: 1268, column: 7, scope: !7077)
!7081 = !DILocation(line: 1269, column: 7, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7077, file: !3, line: 1269, column: 7)
!7083 = !DILocation(line: 1269, column: 7, scope: !7077)
!7084 = !DILocation(line: 1270, column: 11, scope: !7082)
!7085 = !DILocation(line: 1270, column: 4, scope: !7082)
!7086 = !DILocation(line: 1271, column: 2, scope: !7077)
!7087 = !DILocation(line: 1273, column: 31, scope: !7049)
!7088 = !DILocation(line: 1273, column: 9, scope: !7049)
!7089 = !DILocation(line: 1273, column: 2, scope: !7049)
!7090 = !DILocation(line: 1274, column: 1, scope: !7049)
!7091 = distinct !DISubprogram(name: "genpd_poweroff_noirq", scope: !3, file: !3, line: 1284, type: !4483, scopeLine: 1285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7092 = !DILocalVariable(name: "dev", arg: 1, scope: !7091, file: !3, line: 1284, type: !1695)
!7093 = !DILocation(line: 1284, column: 48, scope: !7091)
!7094 = !DILocation(line: 1288, column: 30, scope: !7091)
!7095 = !DILocation(line: 1288, column: 9, scope: !7091)
!7096 = !DILocation(line: 1288, column: 2, scope: !7091)
!7097 = distinct !DISubprogram(name: "genpd_restore_noirq", scope: !3, file: !3, line: 1298, type: !4483, scopeLine: 1299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7098 = !DILocalVariable(name: "dev", arg: 1, scope: !7097, file: !3, line: 1298, type: !1695)
!7099 = !DILocation(line: 1298, column: 47, scope: !7097)
!7100 = !DILocalVariable(name: "genpd", scope: !7097, file: !3, line: 1300, type: !214)
!7101 = !DILocation(line: 1300, column: 28, scope: !7097)
!7102 = !DILocalVariable(name: "ret", scope: !7097, file: !3, line: 1301, type: !195)
!7103 = !DILocation(line: 1301, column: 6, scope: !7097)
!7104 = !DILocation(line: 1305, column: 23, scope: !7097)
!7105 = !DILocation(line: 1305, column: 10, scope: !7097)
!7106 = !DILocation(line: 1305, column: 8, scope: !7097)
!7107 = !DILocation(line: 1306, column: 13, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7097, file: !3, line: 1306, column: 6)
!7109 = !DILocation(line: 1306, column: 6, scope: !7108)
!7110 = !DILocation(line: 1306, column: 6, scope: !7097)
!7111 = !DILocation(line: 1307, column: 3, scope: !7108)
!7112 = !DILocation(line: 1313, column: 2, scope: !7097)
!7113 = !DILocation(line: 1314, column: 6, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7097, file: !3, line: 1314, column: 6)
!7115 = !DILocation(line: 1314, column: 13, scope: !7114)
!7116 = !DILocation(line: 1314, column: 28, scope: !7114)
!7117 = !DILocation(line: 1314, column: 31, scope: !7114)
!7118 = !DILocation(line: 1314, column: 6, scope: !7097)
!7119 = !DILocation(line: 1320, column: 3, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7114, file: !3, line: 1314, column: 37)
!7121 = !DILocation(line: 1320, column: 10, scope: !7120)
!7122 = !DILocation(line: 1320, column: 17, scope: !7120)
!7123 = !DILocation(line: 1321, column: 2, scope: !7120)
!7124 = !DILocation(line: 1323, column: 22, scope: !7097)
!7125 = !DILocation(line: 1323, column: 2, scope: !7097)
!7126 = !DILocation(line: 1324, column: 2, scope: !7097)
!7127 = !DILocation(line: 1326, column: 6, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7097, file: !3, line: 1326, column: 6)
!7129 = !DILocation(line: 1326, column: 13, scope: !7128)
!7130 = !DILocation(line: 1326, column: 21, scope: !7128)
!7131 = !DILocation(line: 1326, column: 26, scope: !7128)
!7132 = !DILocation(line: 1326, column: 29, scope: !7128)
!7133 = !DILocation(line: 1326, column: 36, scope: !7128)
!7134 = !DILocation(line: 1326, column: 44, scope: !7128)
!7135 = !DILocation(line: 1326, column: 50, scope: !7128)
!7136 = !DILocation(line: 1327, column: 35, scope: !7128)
!7137 = !DILocation(line: 1327, column: 7, scope: !7128)
!7138 = !DILocation(line: 1326, column: 6, scope: !7097)
!7139 = !DILocation(line: 1328, column: 25, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !7128, file: !3, line: 1327, column: 41)
!7141 = !DILocation(line: 1328, column: 32, scope: !7140)
!7142 = !DILocation(line: 1328, column: 9, scope: !7140)
!7143 = !DILocation(line: 1328, column: 7, scope: !7140)
!7144 = !DILocation(line: 1329, column: 7, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7140, file: !3, line: 1329, column: 7)
!7146 = !DILocation(line: 1329, column: 7, scope: !7140)
!7147 = !DILocation(line: 1330, column: 11, scope: !7145)
!7148 = !DILocation(line: 1330, column: 4, scope: !7145)
!7149 = !DILocation(line: 1331, column: 2, scope: !7140)
!7150 = !DILocation(line: 1333, column: 34, scope: !7097)
!7151 = !DILocation(line: 1333, column: 9, scope: !7097)
!7152 = !DILocation(line: 1333, column: 2, scope: !7097)
!7153 = !DILocation(line: 1334, column: 1, scope: !7097)
!7154 = distinct !DISubprogram(name: "genpd_complete", scope: !3, file: !3, line: 1345, type: !4474, scopeLine: 1346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7155 = !DILocalVariable(name: "dev", arg: 1, scope: !7154, file: !3, line: 1345, type: !1695)
!7156 = !DILocation(line: 1345, column: 43, scope: !7154)
!7157 = !DILocalVariable(name: "genpd", scope: !7154, file: !3, line: 1347, type: !214)
!7158 = !DILocation(line: 1347, column: 28, scope: !7154)
!7159 = !DILocation(line: 1351, column: 23, scope: !7154)
!7160 = !DILocation(line: 1351, column: 10, scope: !7154)
!7161 = !DILocation(line: 1351, column: 8, scope: !7154)
!7162 = !DILocation(line: 1352, column: 13, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 1352, column: 6)
!7164 = !DILocation(line: 1352, column: 6, scope: !7163)
!7165 = !DILocation(line: 1352, column: 6, scope: !7154)
!7166 = !DILocation(line: 1353, column: 3, scope: !7163)
!7167 = !DILocation(line: 1355, column: 22, scope: !7154)
!7168 = !DILocation(line: 1355, column: 2, scope: !7154)
!7169 = !DILocation(line: 1357, column: 2, scope: !7154)
!7170 = !DILocation(line: 1359, column: 2, scope: !7154)
!7171 = !DILocation(line: 1359, column: 9, scope: !7154)
!7172 = !DILocation(line: 1359, column: 23, scope: !7154)
!7173 = !DILocation(line: 1360, column: 7, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 1360, column: 6)
!7175 = !DILocation(line: 1360, column: 14, scope: !7174)
!7176 = !DILocation(line: 1360, column: 6, scope: !7154)
!7177 = !DILocation(line: 1361, column: 30, scope: !7174)
!7178 = !DILocation(line: 1361, column: 3, scope: !7174)
!7179 = !DILocation(line: 1363, column: 2, scope: !7154)
!7180 = !DILocation(line: 1364, column: 1, scope: !7154)
!7181 = distinct !DISubprogram(name: "genpd_dev_pm_start", scope: !3, file: !3, line: 668, type: !4483, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7182 = !DILocalVariable(name: "dev", arg: 1, scope: !7181, file: !3, line: 668, type: !1695)
!7183 = !DILocation(line: 668, column: 46, scope: !7181)
!7184 = !DILocalVariable(name: "genpd", scope: !7181, file: !3, line: 670, type: !214)
!7185 = !DILocation(line: 670, column: 28, scope: !7181)
!7186 = !DILocation(line: 670, column: 49, scope: !7181)
!7187 = !DILocation(line: 670, column: 36, scope: !7181)
!7188 = !DILocation(line: 672, column: 25, scope: !7181)
!7189 = !DILocation(line: 672, column: 32, scope: !7181)
!7190 = !DILocation(line: 672, column: 9, scope: !7181)
!7191 = !DILocation(line: 672, column: 2, scope: !7181)
!7192 = distinct !DISubprogram(name: "zalloc_cpumask_var", scope: !2371, file: !2371, line: 772, type: !7193, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7193 = !DISubroutineType(types: !7194)
!7194 = !{!499, !7195, !819}
!7195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5011, size: 64)
!7196 = !DILocalVariable(name: "mask", arg: 1, scope: !7192, file: !2371, line: 772, type: !7195)
!7197 = !DILocation(line: 772, column: 54, scope: !7192)
!7198 = !DILocalVariable(name: "flags", arg: 2, scope: !7192, file: !2371, line: 772, type: !819)
!7199 = !DILocation(line: 772, column: 66, scope: !7192)
!7200 = !DILocation(line: 774, column: 17, scope: !7192)
!7201 = !DILocation(line: 774, column: 16, scope: !7192)
!7202 = !DILocation(line: 774, column: 2, scope: !7192)
!7203 = !DILocation(line: 775, column: 2, scope: !7192)
!7204 = distinct !DISubprogram(name: "genpd_set_default_power_state", scope: !3, file: !3, line: 1857, type: !5015, scopeLine: 1858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7205 = !DILocalVariable(name: "genpd", arg: 1, scope: !7204, file: !3, line: 1857, type: !214)
!7206 = !DILocation(line: 1857, column: 68, scope: !7204)
!7207 = !DILocalVariable(name: "state", scope: !7204, file: !3, line: 1859, type: !5055)
!7208 = !DILocation(line: 1859, column: 28, scope: !7204)
!7209 = !DILocation(line: 1861, column: 10, scope: !7204)
!7210 = !DILocation(line: 1861, column: 8, scope: !7204)
!7211 = !DILocation(line: 1862, column: 7, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7204, file: !3, line: 1862, column: 6)
!7213 = !DILocation(line: 1862, column: 6, scope: !7204)
!7214 = !DILocation(line: 1863, column: 3, scope: !7212)
!7215 = !DILocation(line: 1865, column: 18, scope: !7204)
!7216 = !DILocation(line: 1865, column: 2, scope: !7204)
!7217 = !DILocation(line: 1865, column: 9, scope: !7204)
!7218 = !DILocation(line: 1865, column: 16, scope: !7204)
!7219 = !DILocation(line: 1866, column: 2, scope: !7204)
!7220 = !DILocation(line: 1866, column: 9, scope: !7204)
!7221 = !DILocation(line: 1866, column: 21, scope: !7204)
!7222 = !DILocation(line: 1867, column: 2, scope: !7204)
!7223 = !DILocation(line: 1867, column: 9, scope: !7204)
!7224 = !DILocation(line: 1867, column: 21, scope: !7204)
!7225 = !DILocation(line: 1869, column: 2, scope: !7204)
!7226 = !DILocation(line: 1870, column: 1, scope: !7204)
!7227 = distinct !DISubprogram(name: "free_cpumask_var", scope: !2371, file: !2371, line: 789, type: !7228, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7228 = !DISubroutineType(types: !7229)
!7229 = !{null, !7230}
!7230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 64)
!7231 = !DILocalVariable(name: "mask", arg: 1, scope: !7227, file: !2371, line: 789, type: !7230)
!7232 = !DILocation(line: 789, column: 51, scope: !7227)
!7233 = !DILocation(line: 791, column: 1, scope: !7227)
!7234 = distinct !DISubprogram(name: "list_add", scope: !6232, file: !6232, line: 84, type: !7235, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7235 = !DISubroutineType(types: !7236)
!7236 = !{null, !233, !233}
!7237 = !DILocalVariable(name: "new", arg: 1, scope: !7234, file: !6232, line: 84, type: !233)
!7238 = !DILocation(line: 84, column: 47, scope: !7234)
!7239 = !DILocalVariable(name: "head", arg: 2, scope: !7234, file: !6232, line: 84, type: !233)
!7240 = !DILocation(line: 84, column: 70, scope: !7234)
!7241 = !DILocation(line: 86, column: 13, scope: !7234)
!7242 = !DILocation(line: 86, column: 18, scope: !7234)
!7243 = !DILocation(line: 86, column: 24, scope: !7234)
!7244 = !DILocation(line: 86, column: 30, scope: !7234)
!7245 = !DILocation(line: 86, column: 2, scope: !7234)
!7246 = !DILocation(line: 87, column: 1, scope: !7234)
!7247 = distinct !DISubprogram(name: "pm_genpd_remove", scope: !3, file: !3, line: 2016, type: !5015, scopeLine: 2017, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7248 = !DILocalVariable(name: "genpd", arg: 1, scope: !7247, file: !3, line: 2016, type: !214)
!7249 = !DILocation(line: 2016, column: 47, scope: !7247)
!7250 = !DILocalVariable(name: "ret", scope: !7247, file: !3, line: 2018, type: !195)
!7251 = !DILocation(line: 2018, column: 6, scope: !7247)
!7252 = !DILocation(line: 2020, column: 2, scope: !7247)
!7253 = !DILocation(line: 2021, column: 21, scope: !7247)
!7254 = !DILocation(line: 2021, column: 8, scope: !7247)
!7255 = !DILocation(line: 2021, column: 6, scope: !7247)
!7256 = !DILocation(line: 2022, column: 2, scope: !7247)
!7257 = !DILocation(line: 2024, column: 9, scope: !7247)
!7258 = !DILocation(line: 2024, column: 2, scope: !7247)
!7259 = distinct !DISubprogram(name: "genpd_remove", scope: !3, file: !3, line: 1963, type: !5015, scopeLine: 1964, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7260 = !DILocalVariable(name: "genpd", arg: 1, scope: !7259, file: !3, line: 1963, type: !214)
!7261 = !DILocation(line: 1963, column: 51, scope: !7259)
!7262 = !DILocalVariable(name: "l", scope: !7259, file: !3, line: 1965, type: !210)
!7263 = !DILocation(line: 1965, column: 19, scope: !7259)
!7264 = !DILocalVariable(name: "link", scope: !7259, file: !3, line: 1965, type: !210)
!7265 = !DILocation(line: 1965, column: 23, scope: !7259)
!7266 = !DILocation(line: 1967, column: 21, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 1967, column: 6)
!7268 = !DILocation(line: 1967, column: 6, scope: !7267)
!7269 = !DILocation(line: 1967, column: 6, scope: !7259)
!7270 = !DILocation(line: 1968, column: 3, scope: !7267)
!7271 = !DILocation(line: 1970, column: 2, scope: !7259)
!7272 = !DILocation(line: 1972, column: 6, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 1972, column: 6)
!7274 = !DILocation(line: 1972, column: 13, scope: !7273)
!7275 = !DILocation(line: 1972, column: 6, scope: !7259)
!7276 = !DILocation(line: 1973, column: 3, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7273, file: !3, line: 1972, column: 27)
!7278 = !DILocation(line: 1974, column: 3, scope: !7277)
!7279 = !DILocation(line: 1975, column: 3, scope: !7277)
!7280 = !DILocation(line: 1978, column: 19, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 1978, column: 6)
!7282 = !DILocation(line: 1978, column: 26, scope: !7281)
!7283 = !DILocation(line: 1978, column: 7, scope: !7281)
!7284 = !DILocation(line: 1978, column: 40, scope: !7281)
!7285 = !DILocation(line: 1978, column: 43, scope: !7281)
!7286 = !DILocation(line: 1978, column: 50, scope: !7281)
!7287 = !DILocation(line: 1978, column: 6, scope: !7259)
!7288 = !DILocation(line: 1979, column: 3, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 1978, column: 64)
!7290 = !DILocation(line: 1980, column: 3, scope: !7289)
!7291 = !DILocation(line: 1981, column: 3, scope: !7289)
!7292 = !DILocalVariable(name: "__mptr", scope: !7293, file: !3, line: 1984, type: !209)
!7293 = distinct !DILexicalBlock(scope: !7294, file: !3, line: 1984, column: 2)
!7294 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 1984, column: 2)
!7295 = !DILocation(line: 1984, column: 2, scope: !7293)
!7296 = !DILocation(line: 1984, column: 2, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7293, file: !3, line: 1984, column: 2)
!7298 = !DILocation(line: 1984, column: 2, scope: !7294)
!7299 = !DILocalVariable(name: "__mptr", scope: !7300, file: !3, line: 1984, type: !209)
!7300 = distinct !DILexicalBlock(scope: !7294, file: !3, line: 1984, column: 2)
!7301 = !DILocation(line: 1984, column: 2, scope: !7300)
!7302 = !DILocation(line: 1984, column: 2, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7300, file: !3, line: 1984, column: 2)
!7304 = !DILocation(line: 1984, column: 2, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7294, file: !3, line: 1984, column: 2)
!7306 = !DILocation(line: 1985, column: 13, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7305, file: !3, line: 1984, column: 69)
!7308 = !DILocation(line: 1985, column: 19, scope: !7307)
!7309 = !DILocation(line: 1985, column: 3, scope: !7307)
!7310 = !DILocation(line: 1986, column: 13, scope: !7307)
!7311 = !DILocation(line: 1986, column: 19, scope: !7307)
!7312 = !DILocation(line: 1986, column: 3, scope: !7307)
!7313 = !DILocation(line: 1987, column: 9, scope: !7307)
!7314 = !DILocation(line: 1987, column: 3, scope: !7307)
!7315 = !DILocation(line: 1988, column: 2, scope: !7307)
!7316 = !DILocalVariable(name: "__mptr", scope: !7317, file: !3, line: 1984, type: !209)
!7317 = distinct !DILexicalBlock(scope: !7305, file: !3, line: 1984, column: 2)
!7318 = !DILocation(line: 1984, column: 2, scope: !7317)
!7319 = !DILocation(line: 1984, column: 2, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7317, file: !3, line: 1984, column: 2)
!7321 = distinct !{!7321, !7298, !7322}
!7322 = !DILocation(line: 1988, column: 2, scope: !7294)
!7323 = !DILocation(line: 1990, column: 12, scope: !7259)
!7324 = !DILocation(line: 1990, column: 19, scope: !7259)
!7325 = !DILocation(line: 1990, column: 2, scope: !7259)
!7326 = !DILocation(line: 1991, column: 2, scope: !7259)
!7327 = !DILocation(line: 1992, column: 20, scope: !7259)
!7328 = !DILocation(line: 1992, column: 27, scope: !7259)
!7329 = !DILocation(line: 1992, column: 2, scope: !7259)
!7330 = !DILocation(line: 1993, column: 6, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 1993, column: 6)
!7332 = !DILocation(line: 1993, column: 6, scope: !7259)
!7333 = !DILocation(line: 1994, column: 20, scope: !7331)
!7334 = !DILocation(line: 1994, column: 27, scope: !7331)
!7335 = !DILocation(line: 1994, column: 3, scope: !7331)
!7336 = !DILocation(line: 1995, column: 6, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 1995, column: 6)
!7338 = !DILocation(line: 1995, column: 13, scope: !7337)
!7339 = !DILocation(line: 1995, column: 6, scope: !7259)
!7340 = !DILocation(line: 1996, column: 3, scope: !7337)
!7341 = !DILocation(line: 1996, column: 10, scope: !7337)
!7342 = !DILocation(line: 1996, column: 22, scope: !7337)
!7343 = !DILocation(line: 1996, column: 29, scope: !7337)
!7344 = !DILocation(line: 1996, column: 37, scope: !7337)
!7345 = !DILocation(line: 1996, column: 44, scope: !7337)
!7346 = !DILocation(line: 1998, column: 2, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7348, file: !3, line: 1998, column: 2)
!7348 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 1998, column: 2)
!7349 = !DILocation(line: 1998, column: 2, scope: !7348)
!7350 = !DILocation(line: 2000, column: 2, scope: !7259)
!7351 = !DILocation(line: 2001, column: 1, scope: !7259)
!7352 = distinct !DISubprogram(name: "of_genpd_add_provider_simple", scope: !3, file: !3, line: 2155, type: !7353, scopeLine: 2157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7353 = !DISubroutineType(types: !7354)
!7354 = !{!195, !4820, !214}
!7355 = !DILocalVariable(name: "np", arg: 1, scope: !7352, file: !3, line: 2155, type: !4820)
!7356 = !DILocation(line: 2155, column: 54, scope: !7352)
!7357 = !DILocalVariable(name: "genpd", arg: 2, scope: !7352, file: !3, line: 2156, type: !214)
!7358 = !DILocation(line: 2156, column: 32, scope: !7352)
!7359 = !DILocalVariable(name: "ret", scope: !7352, file: !3, line: 2158, type: !195)
!7360 = !DILocation(line: 2158, column: 6, scope: !7352)
!7361 = !DILocation(line: 2160, column: 7, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7352, file: !3, line: 2160, column: 6)
!7363 = !DILocation(line: 2160, column: 10, scope: !7362)
!7364 = !DILocation(line: 2160, column: 14, scope: !7362)
!7365 = !DILocation(line: 2160, column: 6, scope: !7352)
!7366 = !DILocation(line: 2161, column: 3, scope: !7362)
!7367 = !DILocation(line: 2163, column: 2, scope: !7352)
!7368 = !DILocation(line: 2165, column: 21, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7352, file: !3, line: 2165, column: 6)
!7370 = !DILocation(line: 2165, column: 7, scope: !7369)
!7371 = !DILocation(line: 2165, column: 6, scope: !7352)
!7372 = !DILocation(line: 2166, column: 3, scope: !7369)
!7373 = !DILocation(line: 2168, column: 23, scope: !7352)
!7374 = !DILocation(line: 2168, column: 2, scope: !7352)
!7375 = !DILocation(line: 2168, column: 9, scope: !7352)
!7376 = !DILocation(line: 2168, column: 13, scope: !7352)
!7377 = !DILocation(line: 2168, column: 21, scope: !7352)
!7378 = !DILocation(line: 2171, column: 6, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7352, file: !3, line: 2171, column: 6)
!7380 = !DILocation(line: 2171, column: 13, scope: !7379)
!7381 = !DILocation(line: 2171, column: 6, scope: !7352)
!7382 = !DILocation(line: 2172, column: 34, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7379, file: !3, line: 2171, column: 36)
!7384 = !DILocation(line: 2172, column: 41, scope: !7383)
!7385 = !DILocation(line: 2172, column: 9, scope: !7383)
!7386 = !DILocation(line: 2172, column: 7, scope: !7383)
!7387 = !DILocation(line: 2173, column: 7, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7383, file: !3, line: 2173, column: 7)
!7389 = !DILocation(line: 2173, column: 7, scope: !7383)
!7390 = !DILocation(line: 2174, column: 8, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 2174, column: 8)
!7392 = distinct !DILexicalBlock(scope: !7388, file: !3, line: 2173, column: 12)
!7393 = !DILocation(line: 2174, column: 12, scope: !7391)
!7394 = !DILocation(line: 2174, column: 8, scope: !7392)
!7395 = !DILocation(line: 2175, column: 5, scope: !7391)
!7396 = !DILocation(line: 2177, column: 4, scope: !7392)
!7397 = !DILocation(line: 2184, column: 48, scope: !7383)
!7398 = !DILocation(line: 2184, column: 55, scope: !7383)
!7399 = !DILocation(line: 2184, column: 22, scope: !7383)
!7400 = !DILocation(line: 2184, column: 3, scope: !7383)
!7401 = !DILocation(line: 2184, column: 10, scope: !7383)
!7402 = !DILocation(line: 2184, column: 20, scope: !7383)
!7403 = !DILocalVariable(name: "__ret_warn_on", scope: !7404, file: !3, line: 2185, type: !195)
!7404 = distinct !DILexicalBlock(scope: !7383, file: !3, line: 2185, column: 3)
!7405 = !DILocation(line: 2185, column: 3, scope: !7404)
!7406 = !DILocation(line: 2185, column: 3, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7404, file: !3, line: 2185, column: 3)
!7408 = !DILocation(line: 2185, column: 3, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 2185, column: 3)
!7410 = !DILocation(line: 2185, column: 3, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7409, file: !3, line: 2185, column: 3)
!7412 = !DILocation(line: 2185, column: 3, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7409, file: !3, line: 2185, column: 3)
!7414 = !{i32 -2140586423, i32 -2140586394, i32 -2140586348, i32 -2140586290, i32 -2140586236, i32 -2140586182, i32 -2140586127, i32 -2140586096}
!7415 = !DILocation(line: 2185, column: 3, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7409, file: !3, line: 2185, column: 3)
!7417 = !{i32 -2140585686, i32 -2140585679, i32 -2140585627, i32 -2140585596, i32 -2140585566}
!7418 = !DILocation(line: 2185, column: 3, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7409, file: !3, line: 2185, column: 3)
!7420 = !DILocation(line: 2186, column: 2, scope: !7383)
!7421 = !DILocation(line: 2188, column: 27, scope: !7352)
!7422 = !DILocation(line: 2188, column: 51, scope: !7352)
!7423 = !DILocation(line: 2188, column: 8, scope: !7352)
!7424 = !DILocation(line: 2188, column: 6, scope: !7352)
!7425 = !DILocation(line: 2189, column: 6, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7352, file: !3, line: 2189, column: 6)
!7427 = !DILocation(line: 2189, column: 6, scope: !7352)
!7428 = !DILocation(line: 2190, column: 7, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7430, file: !3, line: 2190, column: 7)
!7430 = distinct !DILexicalBlock(scope: !7426, file: !3, line: 2189, column: 11)
!7431 = !DILocation(line: 2190, column: 14, scope: !7429)
!7432 = !DILocation(line: 2190, column: 7, scope: !7430)
!7433 = !DILocation(line: 2191, column: 29, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 2190, column: 37)
!7435 = !DILocation(line: 2191, column: 36, scope: !7434)
!7436 = !DILocation(line: 2191, column: 4, scope: !7434)
!7437 = !DILocation(line: 2192, column: 32, scope: !7434)
!7438 = !DILocation(line: 2192, column: 39, scope: !7434)
!7439 = !DILocation(line: 2192, column: 4, scope: !7434)
!7440 = !DILocation(line: 2193, column: 3, scope: !7434)
!7441 = !DILocation(line: 2195, column: 3, scope: !7430)
!7442 = !DILocation(line: 2198, column: 21, scope: !7352)
!7443 = !DILocation(line: 2198, column: 25, scope: !7352)
!7444 = !DILocation(line: 2198, column: 2, scope: !7352)
!7445 = !DILocation(line: 2198, column: 9, scope: !7352)
!7446 = !DILocation(line: 2198, column: 18, scope: !7352)
!7447 = !DILocation(line: 2199, column: 2, scope: !7352)
!7448 = !DILocation(line: 2199, column: 9, scope: !7352)
!7449 = !DILocation(line: 2199, column: 22, scope: !7352)
!7450 = !DILabel(scope: !7352, name: "unlock", file: !3, line: 2201)
!7451 = !DILocation(line: 2201, column: 1, scope: !7352)
!7452 = !DILocation(line: 2202, column: 2, scope: !7352)
!7453 = !DILocation(line: 2204, column: 9, scope: !7352)
!7454 = !DILocation(line: 2204, column: 2, scope: !7352)
!7455 = !DILocation(line: 2205, column: 1, scope: !7352)
!7456 = distinct !DISubprogram(name: "genpd_present", scope: !3, file: !3, line: 2140, type: !7457, scopeLine: 2141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7457 = !DISubroutineType(types: !7458)
!7458 = !{!499, !5151}
!7459 = !DILocalVariable(name: "genpd", arg: 1, scope: !7456, file: !3, line: 2140, type: !5151)
!7460 = !DILocation(line: 2140, column: 59, scope: !7456)
!7461 = !DILocalVariable(name: "gpd", scope: !7456, file: !3, line: 2142, type: !5151)
!7462 = !DILocation(line: 2142, column: 34, scope: !7456)
!7463 = !DILocalVariable(name: "__mptr", scope: !7464, file: !3, line: 2144, type: !209)
!7464 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 2144, column: 2)
!7465 = distinct !DILexicalBlock(scope: !7456, file: !3, line: 2144, column: 2)
!7466 = !DILocation(line: 2144, column: 2, scope: !7464)
!7467 = !DILocation(line: 2144, column: 2, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7464, file: !3, line: 2144, column: 2)
!7469 = !DILocation(line: 2144, column: 2, scope: !7465)
!7470 = !DILocation(line: 2144, column: 2, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 2144, column: 2)
!7472 = !DILocation(line: 2145, column: 7, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7471, file: !3, line: 2145, column: 7)
!7474 = !DILocation(line: 2145, column: 14, scope: !7473)
!7475 = !DILocation(line: 2145, column: 11, scope: !7473)
!7476 = !DILocation(line: 2145, column: 7, scope: !7471)
!7477 = !DILocation(line: 2146, column: 4, scope: !7473)
!7478 = !DILocalVariable(name: "__mptr", scope: !7479, file: !3, line: 2144, type: !209)
!7479 = distinct !DILexicalBlock(scope: !7471, file: !3, line: 2144, column: 2)
!7480 = !DILocation(line: 2144, column: 2, scope: !7479)
!7481 = !DILocation(line: 2144, column: 2, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7479, file: !3, line: 2144, column: 2)
!7483 = distinct !{!7483, !7469, !7484}
!7484 = !DILocation(line: 2146, column: 11, scope: !7465)
!7485 = !DILocation(line: 2147, column: 2, scope: !7456)
!7486 = !DILocation(line: 2148, column: 1, scope: !7456)
!7487 = distinct !DISubprogram(name: "IS_ERR", scope: !6222, file: !6222, line: 34, type: !6223, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7488 = !DILocalVariable(name: "ptr", arg: 1, scope: !7487, file: !6222, line: 34, type: !3258)
!7489 = !DILocation(line: 34, column: 60, scope: !7487)
!7490 = !DILocation(line: 36, column: 9, scope: !7487)
!7491 = !DILocation(line: 36, column: 2, scope: !7487)
!7492 = distinct !DISubprogram(name: "genpd_add_provider", scope: !3, file: !3, line: 2119, type: !7493, scopeLine: 2121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7493 = !DISubroutineType(types: !7494)
!7494 = !{!195, !4820, !5109, !209}
!7495 = !DILocalVariable(name: "np", arg: 1, scope: !7492, file: !3, line: 2119, type: !4820)
!7496 = !DILocation(line: 2119, column: 51, scope: !7492)
!7497 = !DILocalVariable(name: "xlate", arg: 2, scope: !7492, file: !3, line: 2119, type: !5109)
!7498 = !DILocation(line: 2119, column: 69, scope: !7492)
!7499 = !DILocalVariable(name: "data", arg: 3, scope: !7492, file: !3, line: 2120, type: !209)
!7500 = !DILocation(line: 2120, column: 16, scope: !7492)
!7501 = !DILocalVariable(name: "cp", scope: !7492, file: !3, line: 2122, type: !5103)
!7502 = !DILocation(line: 2122, column: 28, scope: !7492)
!7503 = !DILocation(line: 2124, column: 7, scope: !7492)
!7504 = !DILocation(line: 2124, column: 5, scope: !7492)
!7505 = !DILocation(line: 2125, column: 7, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 2125, column: 6)
!7507 = !DILocation(line: 2125, column: 6, scope: !7492)
!7508 = !DILocation(line: 2126, column: 3, scope: !7506)
!7509 = !DILocation(line: 2128, column: 25, scope: !7492)
!7510 = !DILocation(line: 2128, column: 13, scope: !7492)
!7511 = !DILocation(line: 2128, column: 2, scope: !7492)
!7512 = !DILocation(line: 2128, column: 6, scope: !7492)
!7513 = !DILocation(line: 2128, column: 11, scope: !7492)
!7514 = !DILocation(line: 2129, column: 13, scope: !7492)
!7515 = !DILocation(line: 2129, column: 2, scope: !7492)
!7516 = !DILocation(line: 2129, column: 6, scope: !7492)
!7517 = !DILocation(line: 2129, column: 11, scope: !7492)
!7518 = !DILocation(line: 2130, column: 14, scope: !7492)
!7519 = !DILocation(line: 2130, column: 2, scope: !7492)
!7520 = !DILocation(line: 2130, column: 6, scope: !7492)
!7521 = !DILocation(line: 2130, column: 12, scope: !7492)
!7522 = !DILocation(line: 2132, column: 2, scope: !7492)
!7523 = !DILocation(line: 2133, column: 12, scope: !7492)
!7524 = !DILocation(line: 2133, column: 16, scope: !7492)
!7525 = !DILocation(line: 2133, column: 2, scope: !7492)
!7526 = !DILocation(line: 2134, column: 2, scope: !7492)
!7527 = !DILocation(line: 2135, column: 2, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7529, file: !3, line: 2135, column: 2)
!7529 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 2135, column: 2)
!7530 = !DILocation(line: 2135, column: 2, scope: !7529)
!7531 = !DILocation(line: 2137, column: 2, scope: !7492)
!7532 = !DILocation(line: 2138, column: 1, scope: !7492)
!7533 = distinct !DISubprogram(name: "genpd_xlate_simple", scope: !3, file: !3, line: 2075, type: !5111, scopeLine: 2078, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7534 = !DILocalVariable(name: "genpdspec", arg: 1, scope: !7533, file: !3, line: 2076, type: !5113)
!7535 = !DILocation(line: 2076, column: 30, scope: !7533)
!7536 = !DILocalVariable(name: "data", arg: 2, scope: !7533, file: !3, line: 2077, type: !209)
!7537 = !DILocation(line: 2077, column: 12, scope: !7533)
!7538 = !DILocation(line: 2079, column: 9, scope: !7533)
!7539 = !DILocation(line: 2079, column: 2, scope: !7533)
!7540 = distinct !DISubprogram(name: "of_genpd_add_provider_onecell", scope: !3, file: !3, line: 2213, type: !7541, scopeLine: 2215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7541 = !DISubroutineType(types: !7542)
!7542 = !{!195, !4820, !7543}
!7543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7544, size: 64)
!7544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "genpd_onecell_data", file: !146, line: 296, size: 192, elements: !7545)
!7545 = !{!7546, !7548, !7549}
!7546 = !DIDerivedType(tag: DW_TAG_member, name: "domains", scope: !7544, file: !146, line: 297, baseType: !7547, size: 64)
!7547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "num_domains", scope: !7544, file: !146, line: 298, baseType: !7, size: 32, offset: 64)
!7549 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !7544, file: !146, line: 299, baseType: !5109, size: 64, offset: 128)
!7550 = !DILocalVariable(name: "np", arg: 1, scope: !7540, file: !3, line: 2213, type: !4820)
!7551 = !DILocation(line: 2213, column: 55, scope: !7540)
!7552 = !DILocalVariable(name: "data", arg: 2, scope: !7540, file: !3, line: 2214, type: !7543)
!7553 = !DILocation(line: 2214, column: 34, scope: !7540)
!7554 = !DILocalVariable(name: "genpd", scope: !7540, file: !3, line: 2216, type: !214)
!7555 = !DILocation(line: 2216, column: 28, scope: !7540)
!7556 = !DILocalVariable(name: "i", scope: !7540, file: !3, line: 2217, type: !7)
!7557 = !DILocation(line: 2217, column: 15, scope: !7540)
!7558 = !DILocalVariable(name: "ret", scope: !7540, file: !3, line: 2218, type: !195)
!7559 = !DILocation(line: 2218, column: 6, scope: !7540)
!7560 = !DILocation(line: 2220, column: 7, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 2220, column: 6)
!7562 = !DILocation(line: 2220, column: 10, scope: !7561)
!7563 = !DILocation(line: 2220, column: 14, scope: !7561)
!7564 = !DILocation(line: 2220, column: 6, scope: !7540)
!7565 = !DILocation(line: 2221, column: 3, scope: !7561)
!7566 = !DILocation(line: 2223, column: 2, scope: !7540)
!7567 = !DILocation(line: 2225, column: 7, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 2225, column: 6)
!7569 = !DILocation(line: 2225, column: 13, scope: !7568)
!7570 = !DILocation(line: 2225, column: 6, scope: !7540)
!7571 = !DILocation(line: 2226, column: 3, scope: !7568)
!7572 = !DILocation(line: 2226, column: 9, scope: !7568)
!7573 = !DILocation(line: 2226, column: 15, scope: !7568)
!7574 = !DILocation(line: 2228, column: 9, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 2228, column: 2)
!7576 = !DILocation(line: 2228, column: 7, scope: !7575)
!7577 = !DILocation(line: 2228, column: 14, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7575, file: !3, line: 2228, column: 2)
!7579 = !DILocation(line: 2228, column: 18, scope: !7578)
!7580 = !DILocation(line: 2228, column: 24, scope: !7578)
!7581 = !DILocation(line: 2228, column: 16, scope: !7578)
!7582 = !DILocation(line: 2228, column: 2, scope: !7575)
!7583 = !DILocation(line: 2229, column: 11, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7578, file: !3, line: 2228, column: 42)
!7585 = !DILocation(line: 2229, column: 17, scope: !7584)
!7586 = !DILocation(line: 2229, column: 25, scope: !7584)
!7587 = !DILocation(line: 2229, column: 9, scope: !7584)
!7588 = !DILocation(line: 2231, column: 8, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7584, file: !3, line: 2231, column: 7)
!7590 = !DILocation(line: 2231, column: 7, scope: !7584)
!7591 = !DILocation(line: 2232, column: 4, scope: !7589)
!7592 = !DILocation(line: 2233, column: 22, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7584, file: !3, line: 2233, column: 7)
!7594 = !DILocation(line: 2233, column: 8, scope: !7593)
!7595 = !DILocation(line: 2233, column: 7, scope: !7584)
!7596 = !DILocation(line: 2234, column: 4, scope: !7593)
!7597 = !DILocation(line: 2236, column: 24, scope: !7584)
!7598 = !DILocation(line: 2236, column: 3, scope: !7584)
!7599 = !DILocation(line: 2236, column: 10, scope: !7584)
!7600 = !DILocation(line: 2236, column: 14, scope: !7584)
!7601 = !DILocation(line: 2236, column: 22, scope: !7584)
!7602 = !DILocation(line: 2239, column: 7, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7584, file: !3, line: 2239, column: 7)
!7604 = !DILocation(line: 2239, column: 14, scope: !7603)
!7605 = !DILocation(line: 2239, column: 7, scope: !7584)
!7606 = !DILocation(line: 2240, column: 43, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7603, file: !3, line: 2239, column: 37)
!7608 = !DILocation(line: 2240, column: 50, scope: !7607)
!7609 = !DILocation(line: 2240, column: 55, scope: !7607)
!7610 = !DILocation(line: 2240, column: 10, scope: !7607)
!7611 = !DILocation(line: 2240, column: 8, scope: !7607)
!7612 = !DILocation(line: 2241, column: 8, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7607, file: !3, line: 2241, column: 8)
!7614 = !DILocation(line: 2241, column: 8, scope: !7607)
!7615 = !DILocation(line: 2242, column: 9, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7617, file: !3, line: 2242, column: 9)
!7617 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 2241, column: 13)
!7618 = !DILocation(line: 2242, column: 13, scope: !7616)
!7619 = !DILocation(line: 2242, column: 9, scope: !7617)
!7620 = !DILocation(line: 2243, column: 6, scope: !7616)
!7621 = !DILocation(line: 2245, column: 5, scope: !7617)
!7622 = !DILocation(line: 2252, column: 57, scope: !7607)
!7623 = !DILocation(line: 2252, column: 64, scope: !7607)
!7624 = !DILocation(line: 2252, column: 69, scope: !7607)
!7625 = !DILocation(line: 2252, column: 23, scope: !7607)
!7626 = !DILocation(line: 2252, column: 4, scope: !7607)
!7627 = !DILocation(line: 2252, column: 11, scope: !7607)
!7628 = !DILocation(line: 2252, column: 21, scope: !7607)
!7629 = !DILocalVariable(name: "__ret_warn_on", scope: !7630, file: !3, line: 2253, type: !195)
!7630 = distinct !DILexicalBlock(scope: !7607, file: !3, line: 2253, column: 4)
!7631 = !DILocation(line: 2253, column: 4, scope: !7630)
!7632 = !DILocation(line: 2253, column: 4, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7630, file: !3, line: 2253, column: 4)
!7634 = !DILocation(line: 2253, column: 4, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7633, file: !3, line: 2253, column: 4)
!7636 = !DILocation(line: 2253, column: 4, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7635, file: !3, line: 2253, column: 4)
!7638 = !DILocation(line: 2253, column: 4, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7635, file: !3, line: 2253, column: 4)
!7640 = !{i32 -2140584681, i32 -2140584652, i32 -2140584606, i32 -2140584548, i32 -2140584494, i32 -2140584440, i32 -2140584385, i32 -2140584354}
!7641 = !DILocation(line: 2253, column: 4, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7635, file: !3, line: 2253, column: 4)
!7643 = !{i32 -2140583944, i32 -2140583937, i32 -2140583885, i32 -2140583854, i32 -2140583824}
!7644 = !DILocation(line: 2253, column: 4, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7635, file: !3, line: 2253, column: 4)
!7646 = !DILocation(line: 2254, column: 3, scope: !7607)
!7647 = !DILocation(line: 2256, column: 22, scope: !7584)
!7648 = !DILocation(line: 2256, column: 26, scope: !7584)
!7649 = !DILocation(line: 2256, column: 3, scope: !7584)
!7650 = !DILocation(line: 2256, column: 10, scope: !7584)
!7651 = !DILocation(line: 2256, column: 19, scope: !7584)
!7652 = !DILocation(line: 2257, column: 3, scope: !7584)
!7653 = !DILocation(line: 2257, column: 10, scope: !7584)
!7654 = !DILocation(line: 2257, column: 23, scope: !7584)
!7655 = !DILocation(line: 2258, column: 2, scope: !7584)
!7656 = !DILocation(line: 2228, column: 38, scope: !7578)
!7657 = !DILocation(line: 2228, column: 2, scope: !7578)
!7658 = distinct !{!7658, !7582, !7659}
!7659 = !DILocation(line: 2258, column: 2, scope: !7575)
!7660 = !DILocation(line: 2260, column: 27, scope: !7540)
!7661 = !DILocation(line: 2260, column: 31, scope: !7540)
!7662 = !DILocation(line: 2260, column: 37, scope: !7540)
!7663 = !DILocation(line: 2260, column: 44, scope: !7540)
!7664 = !DILocation(line: 2260, column: 8, scope: !7540)
!7665 = !DILocation(line: 2260, column: 6, scope: !7540)
!7666 = !DILocation(line: 2261, column: 6, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 2261, column: 6)
!7668 = !DILocation(line: 2261, column: 10, scope: !7667)
!7669 = !DILocation(line: 2261, column: 6, scope: !7540)
!7670 = !DILocation(line: 2262, column: 3, scope: !7667)
!7671 = !DILocation(line: 2264, column: 2, scope: !7540)
!7672 = !DILocation(line: 2266, column: 2, scope: !7540)
!7673 = !DILabel(scope: !7540, name: "error", file: !3, line: 2268)
!7674 = !DILocation(line: 2268, column: 1, scope: !7540)
!7675 = !DILocation(line: 2269, column: 2, scope: !7540)
!7676 = !DILocation(line: 2269, column: 10, scope: !7540)
!7677 = !DILocation(line: 2270, column: 11, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 2269, column: 14)
!7679 = !DILocation(line: 2270, column: 17, scope: !7678)
!7680 = !DILocation(line: 2270, column: 25, scope: !7678)
!7681 = !DILocation(line: 2270, column: 9, scope: !7678)
!7682 = !DILocation(line: 2272, column: 8, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7678, file: !3, line: 2272, column: 7)
!7684 = !DILocation(line: 2272, column: 7, scope: !7678)
!7685 = !DILocation(line: 2273, column: 4, scope: !7683)
!7686 = distinct !{!7686, !7675, !7687}
!7687 = !DILocation(line: 2282, column: 2, scope: !7540)
!7688 = !DILocation(line: 2275, column: 3, scope: !7678)
!7689 = !DILocation(line: 2275, column: 10, scope: !7678)
!7690 = !DILocation(line: 2275, column: 19, scope: !7678)
!7691 = !DILocation(line: 2276, column: 3, scope: !7678)
!7692 = !DILocation(line: 2276, column: 10, scope: !7678)
!7693 = !DILocation(line: 2276, column: 23, scope: !7678)
!7694 = !DILocation(line: 2278, column: 7, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7678, file: !3, line: 2278, column: 7)
!7696 = !DILocation(line: 2278, column: 14, scope: !7695)
!7697 = !DILocation(line: 2278, column: 7, scope: !7678)
!7698 = !DILocation(line: 2279, column: 29, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7695, file: !3, line: 2278, column: 37)
!7700 = !DILocation(line: 2279, column: 36, scope: !7699)
!7701 = !DILocation(line: 2279, column: 4, scope: !7699)
!7702 = !DILocation(line: 2280, column: 32, scope: !7699)
!7703 = !DILocation(line: 2280, column: 39, scope: !7699)
!7704 = !DILocation(line: 2280, column: 4, scope: !7699)
!7705 = !DILocation(line: 2281, column: 3, scope: !7699)
!7706 = !DILocation(line: 2284, column: 2, scope: !7540)
!7707 = !DILocation(line: 2286, column: 9, scope: !7540)
!7708 = !DILocation(line: 2286, column: 2, scope: !7540)
!7709 = !DILocation(line: 2287, column: 1, scope: !7540)
!7710 = distinct !DISubprogram(name: "genpd_xlate_onecell", scope: !3, file: !3, line: 2092, type: !5111, scopeLine: 2095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7711 = !DILocalVariable(name: "genpdspec", arg: 1, scope: !7710, file: !3, line: 2093, type: !5113)
!7712 = !DILocation(line: 2093, column: 30, scope: !7710)
!7713 = !DILocalVariable(name: "data", arg: 2, scope: !7710, file: !3, line: 2094, type: !209)
!7714 = !DILocation(line: 2094, column: 12, scope: !7710)
!7715 = !DILocalVariable(name: "genpd_data", scope: !7710, file: !3, line: 2096, type: !7543)
!7716 = !DILocation(line: 2096, column: 29, scope: !7710)
!7717 = !DILocation(line: 2096, column: 42, scope: !7710)
!7718 = !DILocalVariable(name: "idx", scope: !7710, file: !3, line: 2097, type: !7)
!7719 = !DILocation(line: 2097, column: 15, scope: !7710)
!7720 = !DILocation(line: 2097, column: 21, scope: !7710)
!7721 = !DILocation(line: 2097, column: 32, scope: !7710)
!7722 = !DILocation(line: 2099, column: 6, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 2099, column: 6)
!7724 = !DILocation(line: 2099, column: 17, scope: !7723)
!7725 = !DILocation(line: 2099, column: 28, scope: !7723)
!7726 = !DILocation(line: 2099, column: 6, scope: !7710)
!7727 = !DILocation(line: 2100, column: 10, scope: !7723)
!7728 = !DILocation(line: 2100, column: 3, scope: !7723)
!7729 = !DILocation(line: 2102, column: 6, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 2102, column: 6)
!7731 = !DILocation(line: 2102, column: 13, scope: !7730)
!7732 = !DILocation(line: 2102, column: 25, scope: !7730)
!7733 = !DILocation(line: 2102, column: 10, scope: !7730)
!7734 = !DILocation(line: 2102, column: 6, scope: !7710)
!7735 = !DILocation(line: 2103, column: 3, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7730, file: !3, line: 2102, column: 38)
!7737 = !DILocation(line: 2104, column: 10, scope: !7736)
!7738 = !DILocation(line: 2104, column: 3, scope: !7736)
!7739 = !DILocation(line: 2107, column: 7, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 2107, column: 6)
!7741 = !DILocation(line: 2107, column: 19, scope: !7740)
!7742 = !DILocation(line: 2107, column: 27, scope: !7740)
!7743 = !DILocation(line: 2107, column: 6, scope: !7710)
!7744 = !DILocation(line: 2108, column: 10, scope: !7740)
!7745 = !DILocation(line: 2108, column: 3, scope: !7740)
!7746 = !DILocation(line: 2110, column: 9, scope: !7710)
!7747 = !DILocation(line: 2110, column: 21, scope: !7710)
!7748 = !DILocation(line: 2110, column: 29, scope: !7710)
!7749 = !DILocation(line: 2110, column: 2, scope: !7710)
!7750 = !DILocation(line: 2111, column: 1, scope: !7710)
!7751 = distinct !DISubprogram(name: "of_genpd_del_provider", scope: !3, file: !3, line: 2294, type: !7752, scopeLine: 2295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7752 = !DISubroutineType(types: !7753)
!7753 = !{null, !4820}
!7754 = !DILocalVariable(name: "np", arg: 1, scope: !7751, file: !3, line: 2294, type: !4820)
!7755 = !DILocation(line: 2294, column: 48, scope: !7751)
!7756 = !DILocalVariable(name: "cp", scope: !7751, file: !3, line: 2296, type: !5103)
!7757 = !DILocation(line: 2296, column: 28, scope: !7751)
!7758 = !DILocalVariable(name: "tmp", scope: !7751, file: !3, line: 2296, type: !5103)
!7759 = !DILocation(line: 2296, column: 33, scope: !7751)
!7760 = !DILocalVariable(name: "gpd", scope: !7751, file: !3, line: 2297, type: !214)
!7761 = !DILocation(line: 2297, column: 28, scope: !7751)
!7762 = !DILocation(line: 2299, column: 2, scope: !7751)
!7763 = !DILocation(line: 2300, column: 2, scope: !7751)
!7764 = !DILocalVariable(name: "__mptr", scope: !7765, file: !3, line: 2301, type: !209)
!7765 = distinct !DILexicalBlock(scope: !7766, file: !3, line: 2301, column: 2)
!7766 = distinct !DILexicalBlock(scope: !7751, file: !3, line: 2301, column: 2)
!7767 = !DILocation(line: 2301, column: 2, scope: !7765)
!7768 = !DILocation(line: 2301, column: 2, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 2301, column: 2)
!7770 = !DILocation(line: 2301, column: 2, scope: !7766)
!7771 = !DILocalVariable(name: "__mptr", scope: !7772, file: !3, line: 2301, type: !209)
!7772 = distinct !DILexicalBlock(scope: !7766, file: !3, line: 2301, column: 2)
!7773 = !DILocation(line: 2301, column: 2, scope: !7772)
!7774 = !DILocation(line: 2301, column: 2, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 2301, column: 2)
!7776 = !DILocation(line: 2301, column: 2, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !7766, file: !3, line: 2301, column: 2)
!7778 = !DILocation(line: 2302, column: 7, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7780, file: !3, line: 2302, column: 7)
!7780 = distinct !DILexicalBlock(scope: !7777, file: !3, line: 2301, column: 63)
!7781 = !DILocation(line: 2302, column: 11, scope: !7779)
!7782 = !DILocation(line: 2302, column: 19, scope: !7779)
!7783 = !DILocation(line: 2302, column: 16, scope: !7779)
!7784 = !DILocation(line: 2302, column: 7, scope: !7780)
!7785 = !DILocalVariable(name: "__mptr", scope: !7786, file: !3, line: 2308, type: !209)
!7786 = distinct !DILexicalBlock(scope: !7787, file: !3, line: 2308, column: 4)
!7787 = distinct !DILexicalBlock(scope: !7788, file: !3, line: 2308, column: 4)
!7788 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 2302, column: 23)
!7789 = !DILocation(line: 2308, column: 4, scope: !7786)
!7790 = !DILocation(line: 2308, column: 4, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7786, file: !3, line: 2308, column: 4)
!7792 = !DILocation(line: 2308, column: 4, scope: !7787)
!7793 = !DILocation(line: 2308, column: 4, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7787, file: !3, line: 2308, column: 4)
!7795 = !DILocation(line: 2309, column: 9, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 2309, column: 9)
!7797 = distinct !DILexicalBlock(scope: !7794, file: !3, line: 2308, column: 55)
!7798 = !DILocation(line: 2309, column: 14, scope: !7796)
!7799 = !DILocation(line: 2309, column: 27, scope: !7796)
!7800 = !DILocation(line: 2309, column: 31, scope: !7796)
!7801 = !DILocation(line: 2309, column: 23, scope: !7796)
!7802 = !DILocation(line: 2309, column: 9, scope: !7797)
!7803 = !DILocation(line: 2310, column: 6, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7796, file: !3, line: 2309, column: 39)
!7805 = !DILocation(line: 2310, column: 11, scope: !7804)
!7806 = !DILocation(line: 2310, column: 24, scope: !7804)
!7807 = !DILocation(line: 2312, column: 11, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7804, file: !3, line: 2312, column: 10)
!7809 = !DILocation(line: 2312, column: 16, scope: !7808)
!7810 = !DILocation(line: 2312, column: 10, scope: !7804)
!7811 = !DILocation(line: 2313, column: 7, scope: !7808)
!7812 = !DILocation(line: 2315, column: 31, scope: !7804)
!7813 = !DILocation(line: 2315, column: 36, scope: !7804)
!7814 = !DILocation(line: 2315, column: 6, scope: !7804)
!7815 = !DILocation(line: 2316, column: 34, scope: !7804)
!7816 = !DILocation(line: 2316, column: 39, scope: !7804)
!7817 = !DILocation(line: 2316, column: 6, scope: !7804)
!7818 = !DILocation(line: 2317, column: 5, scope: !7804)
!7819 = !DILocation(line: 2318, column: 4, scope: !7797)
!7820 = !DILocalVariable(name: "__mptr", scope: !7821, file: !3, line: 2308, type: !209)
!7821 = distinct !DILexicalBlock(scope: !7794, file: !3, line: 2308, column: 4)
!7822 = !DILocation(line: 2308, column: 4, scope: !7821)
!7823 = !DILocation(line: 2308, column: 4, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7821, file: !3, line: 2308, column: 4)
!7825 = distinct !{!7825, !7792, !7826}
!7826 = !DILocation(line: 2318, column: 4, scope: !7787)
!7827 = !DILocation(line: 2320, column: 14, scope: !7788)
!7828 = !DILocation(line: 2320, column: 18, scope: !7788)
!7829 = !DILocation(line: 2320, column: 4, scope: !7788)
!7830 = !DILocation(line: 2321, column: 16, scope: !7788)
!7831 = !DILocation(line: 2321, column: 20, scope: !7788)
!7832 = !DILocation(line: 2321, column: 4, scope: !7788)
!7833 = !DILocation(line: 2322, column: 10, scope: !7788)
!7834 = !DILocation(line: 2322, column: 4, scope: !7788)
!7835 = !DILocation(line: 2323, column: 4, scope: !7788)
!7836 = !DILocation(line: 2325, column: 2, scope: !7780)
!7837 = !DILocalVariable(name: "__mptr", scope: !7838, file: !3, line: 2301, type: !209)
!7838 = distinct !DILexicalBlock(scope: !7777, file: !3, line: 2301, column: 2)
!7839 = !DILocation(line: 2301, column: 2, scope: !7838)
!7840 = !DILocation(line: 2301, column: 2, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7838, file: !3, line: 2301, column: 2)
!7842 = distinct !{!7842, !7770, !7843}
!7843 = !DILocation(line: 2325, column: 2, scope: !7766)
!7844 = !DILocation(line: 2326, column: 2, scope: !7751)
!7845 = !DILocation(line: 2327, column: 2, scope: !7751)
!7846 = !DILocation(line: 2328, column: 1, scope: !7751)
!7847 = distinct !DISubprogram(name: "of_node_put", scope: !4822, file: !4822, line: 129, type: !7752, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7848 = !DILocalVariable(name: "node", arg: 1, scope: !7847, file: !4822, line: 129, type: !4820)
!7849 = !DILocation(line: 129, column: 52, scope: !7847)
!7850 = !DILocation(line: 129, column: 60, scope: !7847)
!7851 = distinct !DISubprogram(name: "of_genpd_add_device", scope: !3, file: !3, line: 2374, type: !7852, scopeLine: 2375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7852 = !DISubroutineType(types: !7853)
!7853 = !{!195, !5113, !1695}
!7854 = !DILocalVariable(name: "genpdspec", arg: 1, scope: !7851, file: !3, line: 2374, type: !5113)
!7855 = !DILocation(line: 2374, column: 49, scope: !7851)
!7856 = !DILocalVariable(name: "dev", arg: 2, scope: !7851, file: !3, line: 2374, type: !1695)
!7857 = !DILocation(line: 2374, column: 75, scope: !7851)
!7858 = !DILocalVariable(name: "genpd", scope: !7851, file: !3, line: 2376, type: !214)
!7859 = !DILocation(line: 2376, column: 28, scope: !7851)
!7860 = !DILocalVariable(name: "ret", scope: !7851, file: !3, line: 2377, type: !195)
!7861 = !DILocation(line: 2377, column: 6, scope: !7851)
!7862 = !DILocation(line: 2379, column: 2, scope: !7851)
!7863 = !DILocation(line: 2381, column: 34, scope: !7851)
!7864 = !DILocation(line: 2381, column: 10, scope: !7851)
!7865 = !DILocation(line: 2381, column: 8, scope: !7851)
!7866 = !DILocation(line: 2382, column: 13, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7851, file: !3, line: 2382, column: 6)
!7868 = !DILocation(line: 2382, column: 6, scope: !7867)
!7869 = !DILocation(line: 2382, column: 6, scope: !7851)
!7870 = !DILocation(line: 2383, column: 17, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7867, file: !3, line: 2382, column: 21)
!7872 = !DILocation(line: 2383, column: 9, scope: !7871)
!7873 = !DILocation(line: 2383, column: 7, scope: !7871)
!7874 = !DILocation(line: 2384, column: 3, scope: !7871)
!7875 = !DILocation(line: 2387, column: 25, scope: !7851)
!7876 = !DILocation(line: 2387, column: 32, scope: !7851)
!7877 = !DILocation(line: 2387, column: 37, scope: !7851)
!7878 = !DILocation(line: 2387, column: 8, scope: !7851)
!7879 = !DILocation(line: 2387, column: 6, scope: !7851)
!7880 = !DILocation(line: 2387, column: 2, scope: !7851)
!7881 = !DILabel(scope: !7851, name: "out", file: !3, line: 2389)
!7882 = !DILocation(line: 2389, column: 1, scope: !7851)
!7883 = !DILocation(line: 2390, column: 2, scope: !7851)
!7884 = !DILocation(line: 2392, column: 9, scope: !7851)
!7885 = !DILocation(line: 2392, column: 2, scope: !7851)
!7886 = distinct !DISubprogram(name: "genpd_get_from_provider", scope: !3, file: !3, line: 2342, type: !7887, scopeLine: 2344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7887 = !DISubroutineType(types: !7888)
!7888 = !{!214, !5113}
!7889 = !DILocalVariable(name: "genpdspec", arg: 1, scope: !7886, file: !3, line: 2343, type: !5113)
!7890 = !DILocation(line: 2343, column: 30, scope: !7886)
!7891 = !DILocalVariable(name: "genpd", scope: !7886, file: !3, line: 2345, type: !214)
!7892 = !DILocation(line: 2345, column: 28, scope: !7886)
!7893 = !DILocation(line: 2345, column: 36, scope: !7886)
!7894 = !DILocalVariable(name: "provider", scope: !7886, file: !3, line: 2346, type: !5103)
!7895 = !DILocation(line: 2346, column: 28, scope: !7886)
!7896 = !DILocation(line: 2348, column: 7, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 2348, column: 6)
!7898 = !DILocation(line: 2348, column: 6, scope: !7886)
!7899 = !DILocation(line: 2349, column: 10, scope: !7897)
!7900 = !DILocation(line: 2349, column: 3, scope: !7897)
!7901 = !DILocation(line: 2351, column: 2, scope: !7886)
!7902 = !DILocalVariable(name: "__mptr", scope: !7903, file: !3, line: 2354, type: !209)
!7903 = distinct !DILexicalBlock(scope: !7904, file: !3, line: 2354, column: 2)
!7904 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 2354, column: 2)
!7905 = !DILocation(line: 2354, column: 2, scope: !7903)
!7906 = !DILocation(line: 2354, column: 2, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7903, file: !3, line: 2354, column: 2)
!7908 = !DILocation(line: 2354, column: 2, scope: !7904)
!7909 = !DILocation(line: 2354, column: 2, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7904, file: !3, line: 2354, column: 2)
!7911 = !DILocation(line: 2355, column: 7, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7913, file: !3, line: 2355, column: 7)
!7913 = distinct !DILexicalBlock(scope: !7910, file: !3, line: 2354, column: 59)
!7914 = !DILocation(line: 2355, column: 17, scope: !7912)
!7915 = !DILocation(line: 2355, column: 25, scope: !7912)
!7916 = !DILocation(line: 2355, column: 36, scope: !7912)
!7917 = !DILocation(line: 2355, column: 22, scope: !7912)
!7918 = !DILocation(line: 2355, column: 7, scope: !7913)
!7919 = !DILocation(line: 2356, column: 12, scope: !7912)
!7920 = !DILocation(line: 2356, column: 22, scope: !7912)
!7921 = !DILocation(line: 2356, column: 28, scope: !7912)
!7922 = !DILocation(line: 2356, column: 39, scope: !7912)
!7923 = !DILocation(line: 2356, column: 49, scope: !7912)
!7924 = !DILocation(line: 2356, column: 10, scope: !7912)
!7925 = !DILocation(line: 2356, column: 4, scope: !7912)
!7926 = !DILocation(line: 2357, column: 15, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7913, file: !3, line: 2357, column: 7)
!7928 = !DILocation(line: 2357, column: 8, scope: !7927)
!7929 = !DILocation(line: 2357, column: 7, scope: !7913)
!7930 = !DILocation(line: 2358, column: 4, scope: !7927)
!7931 = !DILocation(line: 2359, column: 2, scope: !7913)
!7932 = !DILocalVariable(name: "__mptr", scope: !7933, file: !3, line: 2354, type: !209)
!7933 = distinct !DILexicalBlock(scope: !7910, file: !3, line: 2354, column: 2)
!7934 = !DILocation(line: 2354, column: 2, scope: !7933)
!7935 = !DILocation(line: 2354, column: 2, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7933, file: !3, line: 2354, column: 2)
!7937 = distinct !{!7937, !7908, !7938}
!7938 = !DILocation(line: 2359, column: 2, scope: !7904)
!7939 = !DILocation(line: 2361, column: 2, scope: !7886)
!7940 = !DILocation(line: 2363, column: 9, scope: !7886)
!7941 = !DILocation(line: 2363, column: 2, scope: !7886)
!7942 = !DILocation(line: 2364, column: 1, scope: !7886)
!7943 = distinct !DISubprogram(name: "PTR_ERR", scope: !6222, file: !6222, line: 29, type: !7944, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7944 = !DISubroutineType(types: !7945)
!7945 = !{!157, !3258}
!7946 = !DILocalVariable(name: "ptr", arg: 1, scope: !7943, file: !6222, line: 29, type: !3258)
!7947 = !DILocation(line: 29, column: 61, scope: !7943)
!7948 = !DILocation(line: 31, column: 16, scope: !7943)
!7949 = !DILocation(line: 31, column: 9, scope: !7943)
!7950 = !DILocation(line: 31, column: 2, scope: !7943)
!7951 = distinct !DISubprogram(name: "of_genpd_add_subdomain", scope: !3, file: !3, line: 2405, type: !7952, scopeLine: 2407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7952 = !DISubroutineType(types: !7953)
!7953 = !{!195, !5113, !5113}
!7954 = !DILocalVariable(name: "parent_spec", arg: 1, scope: !7951, file: !3, line: 2405, type: !5113)
!7955 = !DILocation(line: 2405, column: 52, scope: !7951)
!7956 = !DILocalVariable(name: "subdomain_spec", arg: 2, scope: !7951, file: !3, line: 2406, type: !5113)
!7957 = !DILocation(line: 2406, column: 31, scope: !7951)
!7958 = !DILocalVariable(name: "parent", scope: !7951, file: !3, line: 2408, type: !214)
!7959 = !DILocation(line: 2408, column: 28, scope: !7951)
!7960 = !DILocalVariable(name: "subdomain", scope: !7951, file: !3, line: 2408, type: !214)
!7961 = !DILocation(line: 2408, column: 37, scope: !7951)
!7962 = !DILocalVariable(name: "ret", scope: !7951, file: !3, line: 2409, type: !195)
!7963 = !DILocation(line: 2409, column: 6, scope: !7951)
!7964 = !DILocation(line: 2411, column: 2, scope: !7951)
!7965 = !DILocation(line: 2413, column: 35, scope: !7951)
!7966 = !DILocation(line: 2413, column: 11, scope: !7951)
!7967 = !DILocation(line: 2413, column: 9, scope: !7951)
!7968 = !DILocation(line: 2414, column: 13, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 2414, column: 6)
!7970 = !DILocation(line: 2414, column: 6, scope: !7969)
!7971 = !DILocation(line: 2414, column: 6, scope: !7951)
!7972 = !DILocation(line: 2415, column: 17, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7969, file: !3, line: 2414, column: 22)
!7974 = !DILocation(line: 2415, column: 9, scope: !7973)
!7975 = !DILocation(line: 2415, column: 7, scope: !7973)
!7976 = !DILocation(line: 2416, column: 3, scope: !7973)
!7977 = !DILocation(line: 2419, column: 38, scope: !7951)
!7978 = !DILocation(line: 2419, column: 14, scope: !7951)
!7979 = !DILocation(line: 2419, column: 12, scope: !7951)
!7980 = !DILocation(line: 2420, column: 13, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 2420, column: 6)
!7982 = !DILocation(line: 2420, column: 6, scope: !7981)
!7983 = !DILocation(line: 2420, column: 6, scope: !7951)
!7984 = !DILocation(line: 2421, column: 17, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7981, file: !3, line: 2420, column: 25)
!7986 = !DILocation(line: 2421, column: 9, scope: !7985)
!7987 = !DILocation(line: 2421, column: 7, scope: !7985)
!7988 = !DILocation(line: 2422, column: 3, scope: !7985)
!7989 = !DILocation(line: 2425, column: 28, scope: !7951)
!7990 = !DILocation(line: 2425, column: 36, scope: !7951)
!7991 = !DILocation(line: 2425, column: 8, scope: !7951)
!7992 = !DILocation(line: 2425, column: 6, scope: !7951)
!7993 = !DILocation(line: 2425, column: 2, scope: !7951)
!7994 = !DILabel(scope: !7951, name: "out", file: !3, line: 2427)
!7995 = !DILocation(line: 2427, column: 1, scope: !7951)
!7996 = !DILocation(line: 2428, column: 2, scope: !7951)
!7997 = !DILocation(line: 2430, column: 9, scope: !7951)
!7998 = !DILocation(line: 2430, column: 2, scope: !7951)
!7999 = distinct !DISubprogram(name: "of_genpd_remove_subdomain", scope: !3, file: !3, line: 2443, type: !7952, scopeLine: 2445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8000 = !DILocalVariable(name: "parent_spec", arg: 1, scope: !7999, file: !3, line: 2443, type: !5113)
!8001 = !DILocation(line: 2443, column: 55, scope: !7999)
!8002 = !DILocalVariable(name: "subdomain_spec", arg: 2, scope: !7999, file: !3, line: 2444, type: !5113)
!8003 = !DILocation(line: 2444, column: 34, scope: !7999)
!8004 = !DILocalVariable(name: "parent", scope: !7999, file: !3, line: 2446, type: !214)
!8005 = !DILocation(line: 2446, column: 28, scope: !7999)
!8006 = !DILocalVariable(name: "subdomain", scope: !7999, file: !3, line: 2446, type: !214)
!8007 = !DILocation(line: 2446, column: 37, scope: !7999)
!8008 = !DILocalVariable(name: "ret", scope: !7999, file: !3, line: 2447, type: !195)
!8009 = !DILocation(line: 2447, column: 6, scope: !7999)
!8010 = !DILocation(line: 2449, column: 2, scope: !7999)
!8011 = !DILocation(line: 2451, column: 35, scope: !7999)
!8012 = !DILocation(line: 2451, column: 11, scope: !7999)
!8013 = !DILocation(line: 2451, column: 9, scope: !7999)
!8014 = !DILocation(line: 2452, column: 13, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 2452, column: 6)
!8016 = !DILocation(line: 2452, column: 6, scope: !8015)
!8017 = !DILocation(line: 2452, column: 6, scope: !7999)
!8018 = !DILocation(line: 2453, column: 17, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8015, file: !3, line: 2452, column: 22)
!8020 = !DILocation(line: 2453, column: 9, scope: !8019)
!8021 = !DILocation(line: 2453, column: 7, scope: !8019)
!8022 = !DILocation(line: 2454, column: 3, scope: !8019)
!8023 = !DILocation(line: 2457, column: 38, scope: !7999)
!8024 = !DILocation(line: 2457, column: 14, scope: !7999)
!8025 = !DILocation(line: 2457, column: 12, scope: !7999)
!8026 = !DILocation(line: 2458, column: 13, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 2458, column: 6)
!8028 = !DILocation(line: 2458, column: 6, scope: !8027)
!8029 = !DILocation(line: 2458, column: 6, scope: !7999)
!8030 = !DILocation(line: 2459, column: 17, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !8027, file: !3, line: 2458, column: 25)
!8032 = !DILocation(line: 2459, column: 9, scope: !8031)
!8033 = !DILocation(line: 2459, column: 7, scope: !8031)
!8034 = !DILocation(line: 2460, column: 3, scope: !8031)
!8035 = !DILocation(line: 2463, column: 34, scope: !7999)
!8036 = !DILocation(line: 2463, column: 42, scope: !7999)
!8037 = !DILocation(line: 2463, column: 8, scope: !7999)
!8038 = !DILocation(line: 2463, column: 6, scope: !7999)
!8039 = !DILocation(line: 2463, column: 2, scope: !7999)
!8040 = !DILabel(scope: !7999, name: "out", file: !3, line: 2465)
!8041 = !DILocation(line: 2465, column: 1, scope: !7999)
!8042 = !DILocation(line: 2466, column: 2, scope: !7999)
!8043 = !DILocation(line: 2468, column: 9, scope: !7999)
!8044 = !DILocation(line: 2468, column: 2, scope: !7999)
!8045 = distinct !DISubprogram(name: "of_genpd_remove_last", scope: !3, file: !3, line: 2485, type: !8046, scopeLine: 2486, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8046 = !DISubroutineType(types: !8047)
!8047 = !{!214, !4820}
!8048 = !DILocalVariable(name: "np", arg: 1, scope: !8045, file: !3, line: 2485, type: !4820)
!8049 = !DILocation(line: 2485, column: 68, scope: !8045)
!8050 = !DILocalVariable(name: "gpd", scope: !8045, file: !3, line: 2487, type: !214)
!8051 = !DILocation(line: 2487, column: 28, scope: !8045)
!8052 = !DILocalVariable(name: "tmp", scope: !8045, file: !3, line: 2487, type: !214)
!8053 = !DILocation(line: 2487, column: 34, scope: !8045)
!8054 = !DILocalVariable(name: "genpd", scope: !8045, file: !3, line: 2487, type: !214)
!8055 = !DILocation(line: 2487, column: 40, scope: !8045)
!8056 = !DILocation(line: 2487, column: 48, scope: !8045)
!8057 = !DILocalVariable(name: "ret", scope: !8045, file: !3, line: 2488, type: !195)
!8058 = !DILocation(line: 2488, column: 6, scope: !8045)
!8059 = !DILocation(line: 2490, column: 21, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !8045, file: !3, line: 2490, column: 6)
!8061 = !DILocation(line: 2490, column: 6, scope: !8060)
!8062 = !DILocation(line: 2490, column: 6, scope: !8045)
!8063 = !DILocation(line: 2491, column: 10, scope: !8060)
!8064 = !DILocation(line: 2491, column: 3, scope: !8060)
!8065 = !DILocation(line: 2493, column: 2, scope: !8045)
!8066 = !DILocalVariable(name: "__mptr", scope: !8067, file: !3, line: 2494, type: !209)
!8067 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 2494, column: 2)
!8068 = distinct !DILexicalBlock(scope: !8045, file: !3, line: 2494, column: 2)
!8069 = !DILocation(line: 2494, column: 2, scope: !8067)
!8070 = !DILocation(line: 2494, column: 2, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8067, file: !3, line: 2494, column: 2)
!8072 = !DILocation(line: 2494, column: 2, scope: !8068)
!8073 = !DILocalVariable(name: "__mptr", scope: !8074, file: !3, line: 2494, type: !209)
!8074 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 2494, column: 2)
!8075 = !DILocation(line: 2494, column: 2, scope: !8074)
!8076 = !DILocation(line: 2494, column: 2, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 2494, column: 2)
!8078 = !DILocation(line: 2494, column: 2, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 2494, column: 2)
!8080 = !DILocation(line: 2495, column: 7, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 2495, column: 7)
!8082 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 2494, column: 63)
!8083 = !DILocation(line: 2495, column: 12, scope: !8081)
!8084 = !DILocation(line: 2495, column: 25, scope: !8081)
!8085 = !DILocation(line: 2495, column: 29, scope: !8081)
!8086 = !DILocation(line: 2495, column: 21, scope: !8081)
!8087 = !DILocation(line: 2495, column: 7, scope: !8082)
!8088 = !DILocation(line: 2496, column: 23, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8081, file: !3, line: 2495, column: 37)
!8090 = !DILocation(line: 2496, column: 10, scope: !8089)
!8091 = !DILocation(line: 2496, column: 8, scope: !8089)
!8092 = !DILocation(line: 2497, column: 12, scope: !8089)
!8093 = !DILocation(line: 2497, column: 26, scope: !8089)
!8094 = !DILocation(line: 2497, column: 18, scope: !8089)
!8095 = !DILocation(line: 2497, column: 33, scope: !8089)
!8096 = !DILocation(line: 2497, column: 10, scope: !8089)
!8097 = !DILocation(line: 2498, column: 4, scope: !8089)
!8098 = !DILocation(line: 2500, column: 2, scope: !8082)
!8099 = !DILocalVariable(name: "__mptr", scope: !8100, file: !3, line: 2494, type: !209)
!8100 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 2494, column: 2)
!8101 = !DILocation(line: 2494, column: 2, scope: !8100)
!8102 = !DILocation(line: 2494, column: 2, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8100, file: !3, line: 2494, column: 2)
!8104 = distinct !{!8104, !8072, !8105}
!8105 = !DILocation(line: 2500, column: 2, scope: !8068)
!8106 = !DILocation(line: 2501, column: 2, scope: !8045)
!8107 = !DILocation(line: 2503, column: 9, scope: !8045)
!8108 = !DILocation(line: 2503, column: 2, scope: !8045)
!8109 = !DILocation(line: 2504, column: 1, scope: !8045)
!8110 = distinct !DISubprogram(name: "ERR_PTR", scope: !6222, file: !6222, line: 24, type: !8111, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8111 = !DISubroutineType(types: !8112)
!8112 = !{!209, !157}
!8113 = !DILocalVariable(name: "error", arg: 1, scope: !8110, file: !6222, line: 24, type: !157)
!8114 = !DILocation(line: 24, column: 48, scope: !8110)
!8115 = !DILocation(line: 26, column: 18, scope: !8110)
!8116 = !DILocation(line: 26, column: 9, scope: !8110)
!8117 = !DILocation(line: 26, column: 2, scope: !8110)
!8118 = distinct !DISubprogram(name: "genpd_dev_pm_attach", scope: !3, file: !3, line: 2633, type: !4483, scopeLine: 2634, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8119 = !DILocalVariable(name: "dev", arg: 1, scope: !8118, file: !3, line: 2633, type: !1695)
!8120 = !DILocation(line: 2633, column: 40, scope: !8118)
!8121 = !DILocation(line: 2635, column: 7, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8118, file: !3, line: 2635, column: 6)
!8123 = !DILocation(line: 2635, column: 12, scope: !8122)
!8124 = !DILocation(line: 2635, column: 6, scope: !8118)
!8125 = !DILocation(line: 2636, column: 3, scope: !8122)
!8126 = !DILocation(line: 2642, column: 33, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8118, file: !3, line: 2642, column: 6)
!8128 = !DILocation(line: 2642, column: 38, scope: !8127)
!8129 = !DILocation(line: 2642, column: 6, scope: !8127)
!8130 = !DILocation(line: 2643, column: 35, scope: !8127)
!8131 = !DILocation(line: 2642, column: 6, scope: !8118)
!8132 = !DILocation(line: 2644, column: 3, scope: !8127)
!8133 = !DILocation(line: 2646, column: 31, scope: !8118)
!8134 = !DILocation(line: 2646, column: 36, scope: !8118)
!8135 = !DILocation(line: 2646, column: 9, scope: !8118)
!8136 = !DILocation(line: 2646, column: 2, scope: !8118)
!8137 = !DILocation(line: 2647, column: 1, scope: !8118)
!8138 = distinct !DISubprogram(name: "__genpd_dev_pm_attach", scope: !3, file: !3, line: 2571, type: !8139, scopeLine: 2573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8139 = !DISubroutineType(types: !8140)
!8140 = !{!195, !1695, !1695, !7, !499}
!8141 = !DILocalVariable(name: "dev", arg: 1, scope: !8138, file: !3, line: 2571, type: !1695)
!8142 = !DILocation(line: 2571, column: 49, scope: !8138)
!8143 = !DILocalVariable(name: "base_dev", arg: 2, scope: !8138, file: !3, line: 2571, type: !1695)
!8144 = !DILocation(line: 2571, column: 69, scope: !8138)
!8145 = !DILocalVariable(name: "index", arg: 3, scope: !8138, file: !3, line: 2572, type: !7)
!8146 = !DILocation(line: 2572, column: 19, scope: !8138)
!8147 = !DILocalVariable(name: "power_on", arg: 4, scope: !8138, file: !3, line: 2572, type: !499)
!8148 = !DILocation(line: 2572, column: 31, scope: !8138)
!8149 = !DILocalVariable(name: "pd_args", scope: !8138, file: !3, line: 2574, type: !5114)
!8150 = !DILocation(line: 2574, column: 25, scope: !8138)
!8151 = !DILocalVariable(name: "pd", scope: !8138, file: !3, line: 2575, type: !214)
!8152 = !DILocation(line: 2575, column: 28, scope: !8138)
!8153 = !DILocalVariable(name: "ret", scope: !8138, file: !3, line: 2576, type: !195)
!8154 = !DILocation(line: 2576, column: 6, scope: !8138)
!8155 = !DILocation(line: 2578, column: 35, scope: !8138)
!8156 = !DILocation(line: 2578, column: 40, scope: !8138)
!8157 = !DILocation(line: 2579, column: 28, scope: !8138)
!8158 = !DILocation(line: 2578, column: 8, scope: !8138)
!8159 = !DILocation(line: 2578, column: 6, scope: !8138)
!8160 = !DILocation(line: 2580, column: 6, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 2580, column: 6)
!8162 = !DILocation(line: 2580, column: 10, scope: !8161)
!8163 = !DILocation(line: 2580, column: 6, scope: !8138)
!8164 = !DILocation(line: 2581, column: 10, scope: !8161)
!8165 = !DILocation(line: 2581, column: 3, scope: !8161)
!8166 = !DILocation(line: 2583, column: 2, scope: !8138)
!8167 = !DILocation(line: 2584, column: 7, scope: !8138)
!8168 = !DILocation(line: 2584, column: 5, scope: !8138)
!8169 = !DILocation(line: 2585, column: 22, scope: !8138)
!8170 = !DILocation(line: 2585, column: 2, scope: !8138)
!8171 = !DILocation(line: 2586, column: 13, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 2586, column: 6)
!8173 = !DILocation(line: 2586, column: 6, scope: !8172)
!8174 = !DILocation(line: 2586, column: 6, scope: !8138)
!8175 = !DILocation(line: 2587, column: 3, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8172, file: !3, line: 2586, column: 18)
!8177 = !DILocation(line: 2590, column: 44, scope: !8176)
!8178 = !DILocation(line: 2590, column: 10, scope: !8176)
!8179 = !DILocation(line: 2590, column: 3, scope: !8176)
!8180 = !DILocation(line: 2595, column: 25, scope: !8138)
!8181 = !DILocation(line: 2595, column: 29, scope: !8138)
!8182 = !DILocation(line: 2595, column: 34, scope: !8138)
!8183 = !DILocation(line: 2595, column: 8, scope: !8138)
!8184 = !DILocation(line: 2595, column: 6, scope: !8138)
!8185 = !DILocation(line: 2596, column: 2, scope: !8138)
!8186 = !DILocation(line: 2598, column: 6, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 2598, column: 6)
!8188 = !DILocation(line: 2598, column: 10, scope: !8187)
!8189 = !DILocation(line: 2598, column: 6, scope: !8138)
!8190 = !DILocation(line: 2599, column: 7, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 2599, column: 7)
!8192 = distinct !DILexicalBlock(scope: !8187, file: !3, line: 2598, column: 15)
!8193 = !DILocation(line: 2599, column: 11, scope: !8191)
!8194 = !DILocation(line: 2599, column: 7, scope: !8192)
!8195 = !DILocation(line: 2600, column: 4, scope: !8191)
!8196 = !DILocation(line: 2602, column: 10, scope: !8192)
!8197 = !DILocation(line: 2602, column: 3, scope: !8192)
!8198 = !DILocation(line: 2605, column: 2, scope: !8138)
!8199 = !DILocation(line: 2605, column: 7, scope: !8138)
!8200 = !DILocation(line: 2605, column: 18, scope: !8138)
!8201 = !DILocation(line: 2605, column: 25, scope: !8138)
!8202 = !DILocation(line: 2606, column: 2, scope: !8138)
!8203 = !DILocation(line: 2606, column: 7, scope: !8138)
!8204 = !DILocation(line: 2606, column: 18, scope: !8138)
!8205 = !DILocation(line: 2606, column: 23, scope: !8138)
!8206 = !DILocation(line: 2608, column: 6, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 2608, column: 6)
!8208 = !DILocation(line: 2608, column: 6, scope: !8138)
!8209 = !DILocation(line: 2609, column: 3, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8207, file: !3, line: 2608, column: 16)
!8211 = !DILocation(line: 2610, column: 24, scope: !8210)
!8212 = !DILocation(line: 2610, column: 9, scope: !8210)
!8213 = !DILocation(line: 2610, column: 7, scope: !8210)
!8214 = !DILocation(line: 2611, column: 3, scope: !8210)
!8215 = !DILocation(line: 2612, column: 2, scope: !8210)
!8216 = !DILocation(line: 2614, column: 6, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 2614, column: 6)
!8218 = !DILocation(line: 2614, column: 6, scope: !8138)
!8219 = !DILocation(line: 2615, column: 23, scope: !8217)
!8220 = !DILocation(line: 2615, column: 27, scope: !8217)
!8221 = !DILocation(line: 2615, column: 3, scope: !8217)
!8222 = !DILocation(line: 2617, column: 9, scope: !8138)
!8223 = !DILocation(line: 2617, column: 2, scope: !8138)
!8224 = !DILocation(line: 2618, column: 1, scope: !8138)
!8225 = distinct !DISubprogram(name: "genpd_dev_pm_attach_by_id", scope: !3, file: !3, line: 2666, type: !8226, scopeLine: 2668, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8226 = !DISubroutineType(types: !8227)
!8227 = !{!1695, !1695, !7}
!8228 = !DILocalVariable(name: "dev", arg: 1, scope: !8225, file: !3, line: 2666, type: !1695)
!8229 = !DILocation(line: 2666, column: 57, scope: !8225)
!8230 = !DILocalVariable(name: "index", arg: 2, scope: !8225, file: !3, line: 2667, type: !7)
!8231 = !DILocation(line: 2667, column: 20, scope: !8225)
!8232 = !DILocalVariable(name: "virt_dev", scope: !8225, file: !3, line: 2669, type: !1695)
!8233 = !DILocation(line: 2669, column: 17, scope: !8225)
!8234 = !DILocalVariable(name: "num_domains", scope: !8225, file: !3, line: 2670, type: !195)
!8235 = !DILocation(line: 2670, column: 6, scope: !8225)
!8236 = !DILocalVariable(name: "ret", scope: !8225, file: !3, line: 2671, type: !195)
!8237 = !DILocation(line: 2671, column: 6, scope: !8225)
!8238 = !DILocation(line: 2673, column: 7, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8225, file: !3, line: 2673, column: 6)
!8240 = !DILocation(line: 2673, column: 12, scope: !8239)
!8241 = !DILocation(line: 2673, column: 6, scope: !8225)
!8242 = !DILocation(line: 2674, column: 3, scope: !8239)
!8243 = !DILocation(line: 2677, column: 43, scope: !8225)
!8244 = !DILocation(line: 2677, column: 48, scope: !8225)
!8245 = !DILocation(line: 2677, column: 16, scope: !8225)
!8246 = !DILocation(line: 2677, column: 14, scope: !8225)
!8247 = !DILocation(line: 2679, column: 6, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8225, file: !3, line: 2679, column: 6)
!8249 = !DILocation(line: 2679, column: 15, scope: !8248)
!8250 = !DILocation(line: 2679, column: 12, scope: !8248)
!8251 = !DILocation(line: 2679, column: 6, scope: !8225)
!8252 = !DILocation(line: 2680, column: 3, scope: !8248)
!8253 = !DILocation(line: 2683, column: 13, scope: !8225)
!8254 = !DILocation(line: 2683, column: 11, scope: !8225)
!8255 = !DILocation(line: 2684, column: 7, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8225, file: !3, line: 2684, column: 6)
!8257 = !DILocation(line: 2684, column: 6, scope: !8225)
!8258 = !DILocation(line: 2685, column: 10, scope: !8256)
!8259 = !DILocation(line: 2685, column: 3, scope: !8256)
!8260 = !DILocation(line: 2687, column: 15, scope: !8225)
!8261 = !DILocation(line: 2687, column: 40, scope: !8225)
!8262 = !DILocation(line: 2687, column: 56, scope: !8225)
!8263 = !DILocation(line: 2687, column: 47, scope: !8225)
!8264 = !DILocation(line: 2687, column: 2, scope: !8225)
!8265 = !DILocation(line: 2688, column: 2, scope: !8225)
!8266 = !DILocation(line: 2688, column: 12, scope: !8225)
!8267 = !DILocation(line: 2688, column: 16, scope: !8225)
!8268 = !DILocation(line: 2689, column: 2, scope: !8225)
!8269 = !DILocation(line: 2689, column: 12, scope: !8225)
!8270 = !DILocation(line: 2689, column: 20, scope: !8225)
!8271 = !DILocation(line: 2690, column: 34, scope: !8225)
!8272 = !DILocation(line: 2690, column: 39, scope: !8225)
!8273 = !DILocation(line: 2690, column: 22, scope: !8225)
!8274 = !DILocation(line: 2690, column: 2, scope: !8225)
!8275 = !DILocation(line: 2690, column: 12, scope: !8225)
!8276 = !DILocation(line: 2690, column: 20, scope: !8225)
!8277 = !DILocation(line: 2692, column: 24, scope: !8225)
!8278 = !DILocation(line: 2692, column: 8, scope: !8225)
!8279 = !DILocation(line: 2692, column: 6, scope: !8225)
!8280 = !DILocation(line: 2693, column: 6, scope: !8281)
!8281 = distinct !DILexicalBlock(scope: !8225, file: !3, line: 2693, column: 6)
!8282 = !DILocation(line: 2693, column: 6, scope: !8225)
!8283 = !DILocation(line: 2694, column: 14, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8281, file: !3, line: 2693, column: 11)
!8285 = !DILocation(line: 2694, column: 3, scope: !8284)
!8286 = !DILocation(line: 2695, column: 18, scope: !8284)
!8287 = !DILocation(line: 2695, column: 10, scope: !8284)
!8288 = !DILocation(line: 2695, column: 3, scope: !8284)
!8289 = !DILocation(line: 2699, column: 30, scope: !8225)
!8290 = !DILocation(line: 2699, column: 40, scope: !8225)
!8291 = !DILocation(line: 2699, column: 45, scope: !8225)
!8292 = !DILocation(line: 2699, column: 8, scope: !8225)
!8293 = !DILocation(line: 2699, column: 6, scope: !8225)
!8294 = !DILocation(line: 2700, column: 6, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8225, file: !3, line: 2700, column: 6)
!8296 = !DILocation(line: 2700, column: 10, scope: !8295)
!8297 = !DILocation(line: 2700, column: 6, scope: !8225)
!8298 = !DILocation(line: 2701, column: 21, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8295, file: !3, line: 2700, column: 15)
!8300 = !DILocation(line: 2701, column: 3, scope: !8299)
!8301 = !DILocation(line: 2702, column: 10, scope: !8299)
!8302 = !DILocation(line: 2702, column: 24, scope: !8299)
!8303 = !DILocation(line: 2702, column: 16, scope: !8299)
!8304 = !DILocation(line: 2702, column: 3, scope: !8299)
!8305 = !DILocation(line: 2705, column: 20, scope: !8225)
!8306 = !DILocation(line: 2705, column: 2, scope: !8225)
!8307 = !DILocation(line: 2706, column: 42, scope: !8225)
!8308 = !DILocation(line: 2706, column: 29, scope: !8225)
!8309 = !DILocation(line: 2706, column: 2, scope: !8225)
!8310 = !DILocation(line: 2708, column: 9, scope: !8225)
!8311 = !DILocation(line: 2708, column: 2, scope: !8225)
!8312 = !DILocation(line: 2709, column: 1, scope: !8225)
!8313 = distinct !DISubprogram(name: "kzalloc", scope: !202, file: !202, line: 662, type: !8314, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8314 = !DISubroutineType(types: !8315)
!8315 = !{!209, !330, !819}
!8316 = !DILocalVariable(name: "s", arg: 1, scope: !8317, file: !202, line: 445, type: !1220)
!8317 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !202, file: !202, line: 445, type: !8318, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8318 = !DISubroutineType(types: !8319)
!8319 = !{!209, !1220, !819, !330}
!8320 = !DILocation(line: 445, column: 72, scope: !8317, inlinedAt: !8321)
!8321 = distinct !DILocation(line: 552, column: 10, scope: !8322, inlinedAt: !8325)
!8322 = distinct !DILexicalBlock(scope: !8323, file: !202, line: 540, column: 34)
!8323 = distinct !DILexicalBlock(scope: !8324, file: !202, line: 540, column: 6)
!8324 = distinct !DISubprogram(name: "kmalloc", scope: !202, file: !202, line: 538, type: !8314, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8325 = distinct !DILocation(line: 664, column: 9, scope: !8313)
!8326 = !DILocalVariable(name: "flags", arg: 2, scope: !8317, file: !202, line: 446, type: !819)
!8327 = !DILocation(line: 446, column: 9, scope: !8317, inlinedAt: !8321)
!8328 = !DILocalVariable(name: "size", arg: 3, scope: !8317, file: !202, line: 446, type: !330)
!8329 = !DILocation(line: 446, column: 23, scope: !8317, inlinedAt: !8321)
!8330 = !DILocalVariable(name: "ret", scope: !8317, file: !202, line: 448, type: !209)
!8331 = !DILocation(line: 448, column: 8, scope: !8317, inlinedAt: !8321)
!8332 = !DILocalVariable(name: "flags", arg: 1, scope: !8333, file: !202, line: 318, type: !819)
!8333 = distinct !DISubprogram(name: "kmalloc_type", scope: !202, file: !202, line: 318, type: !8334, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8334 = !DISubroutineType(types: !8335)
!8335 = !{!201, !819}
!8336 = !DILocation(line: 318, column: 67, scope: !8333, inlinedAt: !8337)
!8337 = distinct !DILocation(line: 553, column: 20, scope: !8322, inlinedAt: !8325)
!8338 = !DILocalVariable(name: "size", arg: 1, scope: !8339, file: !202, line: 346, type: !330)
!8339 = distinct !DISubprogram(name: "kmalloc_index", scope: !202, file: !202, line: 346, type: !8340, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8340 = !DISubroutineType(types: !8341)
!8341 = !{!7, !330}
!8342 = !DILocation(line: 346, column: 58, scope: !8339, inlinedAt: !8343)
!8343 = distinct !DILocation(line: 547, column: 11, scope: !8322, inlinedAt: !8325)
!8344 = !DILocalVariable(name: "size", arg: 1, scope: !8345, file: !202, line: 472, type: !330)
!8345 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !202, file: !202, line: 472, type: !8346, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8346 = !DISubroutineType(types: !8347)
!8347 = !{!209, !330, !819, !7}
!8348 = !DILocation(line: 472, column: 28, scope: !8345, inlinedAt: !8349)
!8349 = distinct !DILocation(line: 481, column: 9, scope: !8350, inlinedAt: !8351)
!8350 = distinct !DISubprogram(name: "kmalloc_large", scope: !202, file: !202, line: 478, type: !8314, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8351 = distinct !DILocation(line: 545, column: 11, scope: !8352, inlinedAt: !8325)
!8352 = distinct !DILexicalBlock(scope: !8322, file: !202, line: 544, column: 7)
!8353 = !DILocalVariable(name: "flags", arg: 2, scope: !8345, file: !202, line: 472, type: !819)
!8354 = !DILocation(line: 472, column: 40, scope: !8345, inlinedAt: !8349)
!8355 = !DILocalVariable(name: "order", arg: 3, scope: !8345, file: !202, line: 472, type: !7)
!8356 = !DILocation(line: 472, column: 60, scope: !8345, inlinedAt: !8349)
!8357 = !DILocalVariable(name: "size", arg: 1, scope: !8350, file: !202, line: 478, type: !330)
!8358 = !DILocation(line: 478, column: 51, scope: !8350, inlinedAt: !8351)
!8359 = !DILocalVariable(name: "flags", arg: 2, scope: !8350, file: !202, line: 478, type: !819)
!8360 = !DILocation(line: 478, column: 63, scope: !8350, inlinedAt: !8351)
!8361 = !DILocalVariable(name: "order", scope: !8350, file: !202, line: 480, type: !7)
!8362 = !DILocation(line: 480, column: 15, scope: !8350, inlinedAt: !8351)
!8363 = !DILocalVariable(name: "size", arg: 1, scope: !8324, file: !202, line: 538, type: !330)
!8364 = !DILocation(line: 538, column: 45, scope: !8324, inlinedAt: !8325)
!8365 = !DILocalVariable(name: "flags", arg: 2, scope: !8324, file: !202, line: 538, type: !819)
!8366 = !DILocation(line: 538, column: 57, scope: !8324, inlinedAt: !8325)
!8367 = !DILocalVariable(name: "index", scope: !8322, file: !202, line: 542, type: !7)
!8368 = !DILocation(line: 542, column: 16, scope: !8322, inlinedAt: !8325)
!8369 = !DILocalVariable(name: "size", arg: 1, scope: !8313, file: !202, line: 662, type: !330)
!8370 = !DILocation(line: 662, column: 36, scope: !8313)
!8371 = !DILocalVariable(name: "flags", arg: 2, scope: !8313, file: !202, line: 662, type: !819)
!8372 = !DILocation(line: 662, column: 48, scope: !8313)
!8373 = !DILocation(line: 664, column: 17, scope: !8313)
!8374 = !DILocation(line: 664, column: 23, scope: !8313)
!8375 = !DILocation(line: 664, column: 29, scope: !8313)
!8376 = !DILocation(line: 540, column: 27, scope: !8323, inlinedAt: !8325)
!8377 = !DILocation(line: 540, column: 6, scope: !8323, inlinedAt: !8325)
!8378 = !DILocation(line: 540, column: 6, scope: !8324, inlinedAt: !8325)
!8379 = !DILocation(line: 544, column: 7, scope: !8352, inlinedAt: !8325)
!8380 = !DILocation(line: 544, column: 12, scope: !8352, inlinedAt: !8325)
!8381 = !DILocation(line: 544, column: 7, scope: !8322, inlinedAt: !8325)
!8382 = !DILocation(line: 545, column: 25, scope: !8352, inlinedAt: !8325)
!8383 = !DILocation(line: 545, column: 31, scope: !8352, inlinedAt: !8325)
!8384 = !DILocation(line: 480, column: 33, scope: !8350, inlinedAt: !8351)
!8385 = !DILocation(line: 480, column: 23, scope: !8350, inlinedAt: !8351)
!8386 = !DILocation(line: 481, column: 29, scope: !8350, inlinedAt: !8351)
!8387 = !DILocation(line: 481, column: 35, scope: !8350, inlinedAt: !8351)
!8388 = !DILocation(line: 481, column: 42, scope: !8350, inlinedAt: !8351)
!8389 = !DILocation(line: 474, column: 23, scope: !8345, inlinedAt: !8349)
!8390 = !DILocation(line: 474, column: 29, scope: !8345, inlinedAt: !8349)
!8391 = !DILocation(line: 474, column: 36, scope: !8345, inlinedAt: !8349)
!8392 = !DILocation(line: 474, column: 9, scope: !8345, inlinedAt: !8349)
!8393 = !DILocation(line: 545, column: 4, scope: !8352, inlinedAt: !8325)
!8394 = !DILocation(line: 547, column: 25, scope: !8322, inlinedAt: !8325)
!8395 = !DILocation(line: 348, column: 7, scope: !8396, inlinedAt: !8343)
!8396 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 348, column: 6)
!8397 = !DILocation(line: 348, column: 6, scope: !8339, inlinedAt: !8343)
!8398 = !DILocation(line: 349, column: 3, scope: !8396, inlinedAt: !8343)
!8399 = !DILocation(line: 351, column: 6, scope: !8400, inlinedAt: !8343)
!8400 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 351, column: 6)
!8401 = !DILocation(line: 351, column: 11, scope: !8400, inlinedAt: !8343)
!8402 = !DILocation(line: 351, column: 6, scope: !8339, inlinedAt: !8343)
!8403 = !DILocation(line: 352, column: 3, scope: !8400, inlinedAt: !8343)
!8404 = !DILocation(line: 354, column: 32, scope: !8405, inlinedAt: !8343)
!8405 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 354, column: 6)
!8406 = !DILocation(line: 354, column: 37, scope: !8405, inlinedAt: !8343)
!8407 = !DILocation(line: 354, column: 42, scope: !8405, inlinedAt: !8343)
!8408 = !DILocation(line: 354, column: 45, scope: !8405, inlinedAt: !8343)
!8409 = !DILocation(line: 354, column: 50, scope: !8405, inlinedAt: !8343)
!8410 = !DILocation(line: 354, column: 6, scope: !8339, inlinedAt: !8343)
!8411 = !DILocation(line: 355, column: 3, scope: !8405, inlinedAt: !8343)
!8412 = !DILocation(line: 356, column: 32, scope: !8413, inlinedAt: !8343)
!8413 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 356, column: 6)
!8414 = !DILocation(line: 356, column: 37, scope: !8413, inlinedAt: !8343)
!8415 = !DILocation(line: 356, column: 43, scope: !8413, inlinedAt: !8343)
!8416 = !DILocation(line: 356, column: 46, scope: !8413, inlinedAt: !8343)
!8417 = !DILocation(line: 356, column: 51, scope: !8413, inlinedAt: !8343)
!8418 = !DILocation(line: 356, column: 6, scope: !8339, inlinedAt: !8343)
!8419 = !DILocation(line: 357, column: 3, scope: !8413, inlinedAt: !8343)
!8420 = !DILocation(line: 358, column: 6, scope: !8421, inlinedAt: !8343)
!8421 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 358, column: 6)
!8422 = !DILocation(line: 358, column: 11, scope: !8421, inlinedAt: !8343)
!8423 = !DILocation(line: 358, column: 6, scope: !8339, inlinedAt: !8343)
!8424 = !DILocation(line: 358, column: 26, scope: !8421, inlinedAt: !8343)
!8425 = !DILocation(line: 359, column: 6, scope: !8426, inlinedAt: !8343)
!8426 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 359, column: 6)
!8427 = !DILocation(line: 359, column: 11, scope: !8426, inlinedAt: !8343)
!8428 = !DILocation(line: 359, column: 6, scope: !8339, inlinedAt: !8343)
!8429 = !DILocation(line: 359, column: 26, scope: !8426, inlinedAt: !8343)
!8430 = !DILocation(line: 360, column: 6, scope: !8431, inlinedAt: !8343)
!8431 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 360, column: 6)
!8432 = !DILocation(line: 360, column: 11, scope: !8431, inlinedAt: !8343)
!8433 = !DILocation(line: 360, column: 6, scope: !8339, inlinedAt: !8343)
!8434 = !DILocation(line: 360, column: 26, scope: !8431, inlinedAt: !8343)
!8435 = !DILocation(line: 361, column: 6, scope: !8436, inlinedAt: !8343)
!8436 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 361, column: 6)
!8437 = !DILocation(line: 361, column: 11, scope: !8436, inlinedAt: !8343)
!8438 = !DILocation(line: 361, column: 6, scope: !8339, inlinedAt: !8343)
!8439 = !DILocation(line: 361, column: 26, scope: !8436, inlinedAt: !8343)
!8440 = !DILocation(line: 362, column: 6, scope: !8441, inlinedAt: !8343)
!8441 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 362, column: 6)
!8442 = !DILocation(line: 362, column: 11, scope: !8441, inlinedAt: !8343)
!8443 = !DILocation(line: 362, column: 6, scope: !8339, inlinedAt: !8343)
!8444 = !DILocation(line: 362, column: 26, scope: !8441, inlinedAt: !8343)
!8445 = !DILocation(line: 363, column: 6, scope: !8446, inlinedAt: !8343)
!8446 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 363, column: 6)
!8447 = !DILocation(line: 363, column: 11, scope: !8446, inlinedAt: !8343)
!8448 = !DILocation(line: 363, column: 6, scope: !8339, inlinedAt: !8343)
!8449 = !DILocation(line: 363, column: 26, scope: !8446, inlinedAt: !8343)
!8450 = !DILocation(line: 364, column: 6, scope: !8451, inlinedAt: !8343)
!8451 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 364, column: 6)
!8452 = !DILocation(line: 364, column: 11, scope: !8451, inlinedAt: !8343)
!8453 = !DILocation(line: 364, column: 6, scope: !8339, inlinedAt: !8343)
!8454 = !DILocation(line: 364, column: 26, scope: !8451, inlinedAt: !8343)
!8455 = !DILocation(line: 365, column: 6, scope: !8456, inlinedAt: !8343)
!8456 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 365, column: 6)
!8457 = !DILocation(line: 365, column: 11, scope: !8456, inlinedAt: !8343)
!8458 = !DILocation(line: 365, column: 6, scope: !8339, inlinedAt: !8343)
!8459 = !DILocation(line: 365, column: 26, scope: !8456, inlinedAt: !8343)
!8460 = !DILocation(line: 366, column: 6, scope: !8461, inlinedAt: !8343)
!8461 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 366, column: 6)
!8462 = !DILocation(line: 366, column: 11, scope: !8461, inlinedAt: !8343)
!8463 = !DILocation(line: 366, column: 6, scope: !8339, inlinedAt: !8343)
!8464 = !DILocation(line: 366, column: 26, scope: !8461, inlinedAt: !8343)
!8465 = !DILocation(line: 367, column: 6, scope: !8466, inlinedAt: !8343)
!8466 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 367, column: 6)
!8467 = !DILocation(line: 367, column: 11, scope: !8466, inlinedAt: !8343)
!8468 = !DILocation(line: 367, column: 6, scope: !8339, inlinedAt: !8343)
!8469 = !DILocation(line: 367, column: 26, scope: !8466, inlinedAt: !8343)
!8470 = !DILocation(line: 368, column: 6, scope: !8471, inlinedAt: !8343)
!8471 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 368, column: 6)
!8472 = !DILocation(line: 368, column: 11, scope: !8471, inlinedAt: !8343)
!8473 = !DILocation(line: 368, column: 6, scope: !8339, inlinedAt: !8343)
!8474 = !DILocation(line: 368, column: 26, scope: !8471, inlinedAt: !8343)
!8475 = !DILocation(line: 369, column: 6, scope: !8476, inlinedAt: !8343)
!8476 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 369, column: 6)
!8477 = !DILocation(line: 369, column: 11, scope: !8476, inlinedAt: !8343)
!8478 = !DILocation(line: 369, column: 6, scope: !8339, inlinedAt: !8343)
!8479 = !DILocation(line: 369, column: 26, scope: !8476, inlinedAt: !8343)
!8480 = !DILocation(line: 370, column: 6, scope: !8481, inlinedAt: !8343)
!8481 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 370, column: 6)
!8482 = !DILocation(line: 370, column: 11, scope: !8481, inlinedAt: !8343)
!8483 = !DILocation(line: 370, column: 6, scope: !8339, inlinedAt: !8343)
!8484 = !DILocation(line: 370, column: 26, scope: !8481, inlinedAt: !8343)
!8485 = !DILocation(line: 371, column: 6, scope: !8486, inlinedAt: !8343)
!8486 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 371, column: 6)
!8487 = !DILocation(line: 371, column: 11, scope: !8486, inlinedAt: !8343)
!8488 = !DILocation(line: 371, column: 6, scope: !8339, inlinedAt: !8343)
!8489 = !DILocation(line: 371, column: 26, scope: !8486, inlinedAt: !8343)
!8490 = !DILocation(line: 372, column: 6, scope: !8491, inlinedAt: !8343)
!8491 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 372, column: 6)
!8492 = !DILocation(line: 372, column: 11, scope: !8491, inlinedAt: !8343)
!8493 = !DILocation(line: 372, column: 6, scope: !8339, inlinedAt: !8343)
!8494 = !DILocation(line: 372, column: 26, scope: !8491, inlinedAt: !8343)
!8495 = !DILocation(line: 373, column: 6, scope: !8496, inlinedAt: !8343)
!8496 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 373, column: 6)
!8497 = !DILocation(line: 373, column: 11, scope: !8496, inlinedAt: !8343)
!8498 = !DILocation(line: 373, column: 6, scope: !8339, inlinedAt: !8343)
!8499 = !DILocation(line: 373, column: 26, scope: !8496, inlinedAt: !8343)
!8500 = !DILocation(line: 374, column: 6, scope: !8501, inlinedAt: !8343)
!8501 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 374, column: 6)
!8502 = !DILocation(line: 374, column: 11, scope: !8501, inlinedAt: !8343)
!8503 = !DILocation(line: 374, column: 6, scope: !8339, inlinedAt: !8343)
!8504 = !DILocation(line: 374, column: 26, scope: !8501, inlinedAt: !8343)
!8505 = !DILocation(line: 375, column: 6, scope: !8506, inlinedAt: !8343)
!8506 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 375, column: 6)
!8507 = !DILocation(line: 375, column: 11, scope: !8506, inlinedAt: !8343)
!8508 = !DILocation(line: 375, column: 6, scope: !8339, inlinedAt: !8343)
!8509 = !DILocation(line: 375, column: 27, scope: !8506, inlinedAt: !8343)
!8510 = !DILocation(line: 376, column: 6, scope: !8511, inlinedAt: !8343)
!8511 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 376, column: 6)
!8512 = !DILocation(line: 376, column: 11, scope: !8511, inlinedAt: !8343)
!8513 = !DILocation(line: 376, column: 6, scope: !8339, inlinedAt: !8343)
!8514 = !DILocation(line: 376, column: 32, scope: !8511, inlinedAt: !8343)
!8515 = !DILocation(line: 377, column: 6, scope: !8516, inlinedAt: !8343)
!8516 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 377, column: 6)
!8517 = !DILocation(line: 377, column: 11, scope: !8516, inlinedAt: !8343)
!8518 = !DILocation(line: 377, column: 6, scope: !8339, inlinedAt: !8343)
!8519 = !DILocation(line: 377, column: 32, scope: !8516, inlinedAt: !8343)
!8520 = !DILocation(line: 378, column: 6, scope: !8521, inlinedAt: !8343)
!8521 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 378, column: 6)
!8522 = !DILocation(line: 378, column: 11, scope: !8521, inlinedAt: !8343)
!8523 = !DILocation(line: 378, column: 6, scope: !8339, inlinedAt: !8343)
!8524 = !DILocation(line: 378, column: 32, scope: !8521, inlinedAt: !8343)
!8525 = !DILocation(line: 379, column: 6, scope: !8526, inlinedAt: !8343)
!8526 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 379, column: 6)
!8527 = !DILocation(line: 379, column: 11, scope: !8526, inlinedAt: !8343)
!8528 = !DILocation(line: 379, column: 6, scope: !8339, inlinedAt: !8343)
!8529 = !DILocation(line: 379, column: 33, scope: !8526, inlinedAt: !8343)
!8530 = !DILocation(line: 380, column: 6, scope: !8531, inlinedAt: !8343)
!8531 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 380, column: 6)
!8532 = !DILocation(line: 380, column: 11, scope: !8531, inlinedAt: !8343)
!8533 = !DILocation(line: 380, column: 6, scope: !8339, inlinedAt: !8343)
!8534 = !DILocation(line: 380, column: 33, scope: !8531, inlinedAt: !8343)
!8535 = !DILocation(line: 381, column: 6, scope: !8536, inlinedAt: !8343)
!8536 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 381, column: 6)
!8537 = !DILocation(line: 381, column: 11, scope: !8536, inlinedAt: !8343)
!8538 = !DILocation(line: 381, column: 6, scope: !8339, inlinedAt: !8343)
!8539 = !DILocation(line: 381, column: 33, scope: !8536, inlinedAt: !8343)
!8540 = !DILocation(line: 382, column: 2, scope: !8541, inlinedAt: !8343)
!8541 = distinct !DILexicalBlock(scope: !8542, file: !202, line: 382, column: 2)
!8542 = distinct !DILexicalBlock(scope: !8339, file: !202, line: 382, column: 2)
!8543 = !{i32 -2143380065, i32 -2143380036, i32 -2143379990, i32 -2143379932, i32 -2143379878, i32 -2143379824, i32 -2143379769, i32 -2143379738}
!8544 = !DILocation(line: 382, column: 2, scope: !8545, inlinedAt: !8343)
!8545 = distinct !DILexicalBlock(scope: !8546, file: !202, line: 382, column: 2)
!8546 = distinct !DILexicalBlock(scope: !8542, file: !202, line: 382, column: 2)
!8547 = !{i32 -2143379295, i32 -2143379288, i32 -2143379234, i32 -2143379203, i32 -2143379173}
!8548 = !DILocation(line: 382, column: 2, scope: !8546, inlinedAt: !8343)
!8549 = !DILocation(line: 386, column: 1, scope: !8339, inlinedAt: !8343)
!8550 = !DILocation(line: 547, column: 9, scope: !8322, inlinedAt: !8325)
!8551 = !DILocation(line: 549, column: 8, scope: !8552, inlinedAt: !8325)
!8552 = distinct !DILexicalBlock(scope: !8322, file: !202, line: 549, column: 7)
!8553 = !DILocation(line: 549, column: 7, scope: !8322, inlinedAt: !8325)
!8554 = !DILocation(line: 550, column: 4, scope: !8552, inlinedAt: !8325)
!8555 = !DILocation(line: 553, column: 33, scope: !8322, inlinedAt: !8325)
!8556 = !DILocation(line: 325, column: 6, scope: !8557, inlinedAt: !8337)
!8557 = distinct !DILexicalBlock(scope: !8333, file: !202, line: 325, column: 6)
!8558 = !DILocation(line: 325, column: 6, scope: !8333, inlinedAt: !8337)
!8559 = !DILocation(line: 326, column: 3, scope: !8557, inlinedAt: !8337)
!8560 = !DILocation(line: 332, column: 9, scope: !8333, inlinedAt: !8337)
!8561 = !DILocation(line: 332, column: 15, scope: !8333, inlinedAt: !8337)
!8562 = !DILocation(line: 332, column: 2, scope: !8333, inlinedAt: !8337)
!8563 = !DILocation(line: 336, column: 1, scope: !8333, inlinedAt: !8337)
!8564 = !DILocation(line: 553, column: 5, scope: !8322, inlinedAt: !8325)
!8565 = !DILocation(line: 553, column: 41, scope: !8322, inlinedAt: !8325)
!8566 = !DILocation(line: 554, column: 5, scope: !8322, inlinedAt: !8325)
!8567 = !DILocation(line: 554, column: 12, scope: !8322, inlinedAt: !8325)
!8568 = !DILocation(line: 448, column: 31, scope: !8317, inlinedAt: !8321)
!8569 = !DILocation(line: 448, column: 34, scope: !8317, inlinedAt: !8321)
!8570 = !DILocation(line: 448, column: 14, scope: !8317, inlinedAt: !8321)
!8571 = !DILocation(line: 450, column: 22, scope: !8317, inlinedAt: !8321)
!8572 = !DILocation(line: 450, column: 25, scope: !8317, inlinedAt: !8321)
!8573 = !DILocation(line: 450, column: 30, scope: !8317, inlinedAt: !8321)
!8574 = !DILocation(line: 450, column: 36, scope: !8317, inlinedAt: !8321)
!8575 = !DILocation(line: 450, column: 8, scope: !8317, inlinedAt: !8321)
!8576 = !DILocation(line: 450, column: 6, scope: !8317, inlinedAt: !8321)
!8577 = !DILocation(line: 451, column: 9, scope: !8317, inlinedAt: !8321)
!8578 = !DILocation(line: 552, column: 3, scope: !8322, inlinedAt: !8325)
!8579 = !DILocation(line: 557, column: 19, scope: !8324, inlinedAt: !8325)
!8580 = !DILocation(line: 557, column: 25, scope: !8324, inlinedAt: !8325)
!8581 = !DILocation(line: 557, column: 9, scope: !8324, inlinedAt: !8325)
!8582 = !DILocation(line: 557, column: 2, scope: !8324, inlinedAt: !8325)
!8583 = !DILocation(line: 558, column: 1, scope: !8324, inlinedAt: !8325)
!8584 = !DILocation(line: 664, column: 2, scope: !8313)
!8585 = distinct !DISubprogram(name: "dev_name", scope: !115, file: !115, line: 609, type: !8586, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8586 = !DISubroutineType(types: !8587)
!8587 = !{!225, !4857}
!8588 = !DILocalVariable(name: "dev", arg: 1, scope: !8585, file: !115, line: 609, type: !4857)
!8589 = !DILocation(line: 609, column: 57, scope: !8585)
!8590 = !DILocation(line: 612, column: 6, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8585, file: !115, line: 612, column: 6)
!8592 = !DILocation(line: 612, column: 11, scope: !8591)
!8593 = !DILocation(line: 612, column: 6, scope: !8585)
!8594 = !DILocation(line: 613, column: 10, scope: !8591)
!8595 = !DILocation(line: 613, column: 15, scope: !8591)
!8596 = !DILocation(line: 613, column: 3, scope: !8591)
!8597 = !DILocation(line: 615, column: 23, scope: !8585)
!8598 = !DILocation(line: 615, column: 28, scope: !8585)
!8599 = !DILocation(line: 615, column: 9, scope: !8585)
!8600 = !DILocation(line: 615, column: 2, scope: !8585)
!8601 = !DILocation(line: 616, column: 1, scope: !8585)
!8602 = distinct !DISubprogram(name: "genpd_release_dev", scope: !3, file: !3, line: 2507, type: !4474, scopeLine: 2508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8603 = !DILocalVariable(name: "dev", arg: 1, scope: !8602, file: !3, line: 2507, type: !1695)
!8604 = !DILocation(line: 2507, column: 46, scope: !8602)
!8605 = !DILocation(line: 2509, column: 14, scope: !8602)
!8606 = !DILocation(line: 2509, column: 19, scope: !8602)
!8607 = !DILocation(line: 2509, column: 2, scope: !8602)
!8608 = !DILocation(line: 2510, column: 8, scope: !8602)
!8609 = !DILocation(line: 2510, column: 2, scope: !8602)
!8610 = !DILocation(line: 2511, column: 1, scope: !8602)
!8611 = distinct !DISubprogram(name: "of_node_get", scope: !4822, file: !4822, line: 125, type: !8612, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8612 = !DISubroutineType(types: !8613)
!8613 = !{!4820, !4820}
!8614 = !DILocalVariable(name: "node", arg: 1, scope: !8611, file: !4822, line: 125, type: !4820)
!8615 = !DILocation(line: 125, column: 67, scope: !8611)
!8616 = !DILocation(line: 127, column: 9, scope: !8611)
!8617 = !DILocation(line: 127, column: 2, scope: !8611)
!8618 = distinct !DISubprogram(name: "genpd_queue_power_off_work", scope: !3, file: !3, line: 516, type: !5081, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8619 = !DILocalVariable(name: "genpd", arg: 1, scope: !8618, file: !3, line: 516, type: !214)
!8620 = !DILocation(line: 516, column: 66, scope: !8618)
!8621 = !DILocation(line: 518, column: 13, scope: !8618)
!8622 = !DILocation(line: 518, column: 21, scope: !8618)
!8623 = !DILocation(line: 518, column: 28, scope: !8618)
!8624 = !DILocation(line: 518, column: 2, scope: !8618)
!8625 = !DILocation(line: 519, column: 1, scope: !8618)
!8626 = distinct !DISubprogram(name: "dev_to_genpd", scope: !3, file: !3, line: 176, type: !5286, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8627 = !DILocalVariable(name: "dev", arg: 1, scope: !8626, file: !3, line: 176, type: !1695)
!8628 = !DILocation(line: 176, column: 62, scope: !8626)
!8629 = !DILocation(line: 178, column: 21, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8626, file: !3, line: 178, column: 6)
!8631 = !DILocation(line: 178, column: 26, scope: !8630)
!8632 = !DILocation(line: 178, column: 6, scope: !8630)
!8633 = !DILocation(line: 178, column: 6, scope: !8626)
!8634 = !DILocation(line: 179, column: 10, scope: !8630)
!8635 = !DILocation(line: 179, column: 3, scope: !8630)
!8636 = !DILocation(line: 181, column: 21, scope: !8626)
!8637 = !DILocation(line: 181, column: 26, scope: !8626)
!8638 = !DILocation(line: 181, column: 9, scope: !8626)
!8639 = !DILocation(line: 181, column: 2, scope: !8626)
!8640 = !DILocation(line: 182, column: 1, scope: !8626)
!8641 = distinct !DISubprogram(name: "genpd_dev_pm_attach_by_name", scope: !3, file: !3, line: 2721, type: !8642, scopeLine: 2722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8642 = !DISubroutineType(types: !8643)
!8643 = !{!1695, !1695, !225}
!8644 = !DILocalVariable(name: "dev", arg: 1, scope: !8641, file: !3, line: 2721, type: !1695)
!8645 = !DILocation(line: 2721, column: 59, scope: !8641)
!8646 = !DILocalVariable(name: "name", arg: 2, scope: !8641, file: !3, line: 2721, type: !225)
!8647 = !DILocation(line: 2721, column: 76, scope: !8641)
!8648 = !DILocalVariable(name: "index", scope: !8641, file: !3, line: 2723, type: !195)
!8649 = !DILocation(line: 2723, column: 6, scope: !8641)
!8650 = !DILocation(line: 2725, column: 7, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8641, file: !3, line: 2725, column: 6)
!8652 = !DILocation(line: 2725, column: 12, scope: !8651)
!8653 = !DILocation(line: 2725, column: 6, scope: !8641)
!8654 = !DILocation(line: 2726, column: 3, scope: !8651)
!8655 = !DILocation(line: 2728, column: 35, scope: !8641)
!8656 = !DILocation(line: 2728, column: 40, scope: !8641)
!8657 = !DILocation(line: 2729, column: 7, scope: !8641)
!8658 = !DILocation(line: 2728, column: 10, scope: !8641)
!8659 = !DILocation(line: 2728, column: 8, scope: !8641)
!8660 = !DILocation(line: 2730, column: 6, scope: !8661)
!8661 = distinct !DILexicalBlock(scope: !8641, file: !3, line: 2730, column: 6)
!8662 = !DILocation(line: 2730, column: 12, scope: !8661)
!8663 = !DILocation(line: 2730, column: 6, scope: !8641)
!8664 = !DILocation(line: 2731, column: 3, scope: !8661)
!8665 = !DILocation(line: 2733, column: 35, scope: !8641)
!8666 = !DILocation(line: 2733, column: 40, scope: !8641)
!8667 = !DILocation(line: 2733, column: 9, scope: !8641)
!8668 = !DILocation(line: 2733, column: 2, scope: !8641)
!8669 = !DILocation(line: 2734, column: 1, scope: !8641)
!8670 = distinct !DISubprogram(name: "of_genpd_parse_idle_states", scope: !3, file: !3, line: 2819, type: !8671, scopeLine: 2821, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8671 = !DISubroutineType(types: !8672)
!8672 = !{!195, !4820, !8673, !731}
!8673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5055, size: 64)
!8674 = !DILocalVariable(name: "dn", arg: 1, scope: !8670, file: !3, line: 2819, type: !4820)
!8675 = !DILocation(line: 2819, column: 52, scope: !8670)
!8676 = !DILocalVariable(name: "states", arg: 2, scope: !8670, file: !3, line: 2820, type: !8673)
!8677 = !DILocation(line: 2820, column: 31, scope: !8670)
!8678 = !DILocalVariable(name: "n", arg: 3, scope: !8670, file: !3, line: 2820, type: !731)
!8679 = !DILocation(line: 2820, column: 44, scope: !8670)
!8680 = !DILocalVariable(name: "st", scope: !8670, file: !3, line: 2822, type: !5055)
!8681 = !DILocation(line: 2822, column: 28, scope: !8670)
!8682 = !DILocalVariable(name: "ret", scope: !8670, file: !3, line: 2823, type: !195)
!8683 = !DILocation(line: 2823, column: 6, scope: !8670)
!8684 = !DILocation(line: 2825, column: 34, scope: !8670)
!8685 = !DILocation(line: 2825, column: 8, scope: !8670)
!8686 = !DILocation(line: 2825, column: 6, scope: !8670)
!8687 = !DILocation(line: 2826, column: 6, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8670, file: !3, line: 2826, column: 6)
!8689 = !DILocation(line: 2826, column: 10, scope: !8688)
!8690 = !DILocation(line: 2826, column: 6, scope: !8670)
!8691 = !DILocation(line: 2827, column: 10, scope: !8688)
!8692 = !DILocation(line: 2827, column: 3, scope: !8688)
!8693 = !DILocation(line: 2829, column: 7, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8670, file: !3, line: 2829, column: 6)
!8695 = !DILocation(line: 2829, column: 6, scope: !8670)
!8696 = !DILocation(line: 2830, column: 4, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8694, file: !3, line: 2829, column: 12)
!8698 = !DILocation(line: 2830, column: 11, scope: !8697)
!8699 = !DILocation(line: 2831, column: 4, scope: !8697)
!8700 = !DILocation(line: 2831, column: 6, scope: !8697)
!8701 = !DILocation(line: 2832, column: 3, scope: !8697)
!8702 = !DILocation(line: 2835, column: 15, scope: !8670)
!8703 = !DILocation(line: 2835, column: 7, scope: !8670)
!8704 = !DILocation(line: 2835, column: 5, scope: !8670)
!8705 = !DILocation(line: 2836, column: 7, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8670, file: !3, line: 2836, column: 6)
!8707 = !DILocation(line: 2836, column: 6, scope: !8670)
!8708 = !DILocation(line: 2837, column: 3, scope: !8706)
!8709 = !DILocation(line: 2839, column: 34, scope: !8670)
!8710 = !DILocation(line: 2839, column: 38, scope: !8670)
!8711 = !DILocation(line: 2839, column: 8, scope: !8670)
!8712 = !DILocation(line: 2839, column: 6, scope: !8670)
!8713 = !DILocation(line: 2840, column: 6, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8670, file: !3, line: 2840, column: 6)
!8715 = !DILocation(line: 2840, column: 10, scope: !8714)
!8716 = !DILocation(line: 2840, column: 6, scope: !8670)
!8717 = !DILocation(line: 2841, column: 9, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8714, file: !3, line: 2840, column: 16)
!8719 = !DILocation(line: 2841, column: 3, scope: !8718)
!8720 = !DILocation(line: 2842, column: 10, scope: !8718)
!8721 = !DILocation(line: 2842, column: 14, scope: !8718)
!8722 = !DILocation(line: 2842, column: 20, scope: !8718)
!8723 = !DILocation(line: 2842, column: 3, scope: !8718)
!8724 = !DILocation(line: 2845, column: 12, scope: !8670)
!8725 = !DILocation(line: 2845, column: 3, scope: !8670)
!8726 = !DILocation(line: 2845, column: 10, scope: !8670)
!8727 = !DILocation(line: 2846, column: 7, scope: !8670)
!8728 = !DILocation(line: 2846, column: 3, scope: !8670)
!8729 = !DILocation(line: 2846, column: 5, scope: !8670)
!8730 = !DILocation(line: 2848, column: 2, scope: !8670)
!8731 = !DILocation(line: 2849, column: 1, scope: !8670)
!8732 = distinct !DISubprogram(name: "genpd_iterate_idle_states", scope: !3, file: !3, line: 2775, type: !8733, scopeLine: 2777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8733 = !DISubroutineType(types: !8734)
!8734 = !{!195, !4820, !5055}
!8735 = !DILocalVariable(name: "dn", arg: 1, scope: !8732, file: !3, line: 2775, type: !4820)
!8736 = !DILocation(line: 2775, column: 58, scope: !8732)
!8737 = !DILocalVariable(name: "states", arg: 2, scope: !8732, file: !3, line: 2776, type: !5055)
!8738 = !DILocation(line: 2776, column: 36, scope: !8732)
!8739 = !DILocalVariable(name: "ret", scope: !8732, file: !3, line: 2778, type: !195)
!8740 = !DILocation(line: 2778, column: 6, scope: !8732)
!8741 = !DILocalVariable(name: "it", scope: !8732, file: !3, line: 2779, type: !8742)
!8742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_phandle_iterator", file: !4822, line: 80, size: 512, elements: !8743)
!8743 = !{!8744, !8745, !8746, !8749, !8753, !8754, !8755, !8756, !8757}
!8744 = !DIDerivedType(tag: DW_TAG_member, name: "cells_name", scope: !8742, file: !4822, line: 82, baseType: !225, size: 64)
!8745 = !DIDerivedType(tag: DW_TAG_member, name: "cell_count", scope: !8742, file: !4822, line: 83, baseType: !195, size: 32, offset: 64)
!8746 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !8742, file: !4822, line: 84, baseType: !8747, size: 64, offset: 128)
!8747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8748, size: 64)
!8748 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4821)
!8749 = !DIDerivedType(tag: DW_TAG_member, name: "list_end", scope: !8742, file: !4822, line: 87, baseType: !8750, size: 64, offset: 192)
!8750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8751, size: 64)
!8751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8752)
!8752 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !4004, line: 32, baseType: !426)
!8753 = !DIDerivedType(tag: DW_TAG_member, name: "phandle_end", scope: !8742, file: !4822, line: 88, baseType: !8750, size: 64, offset: 256)
!8754 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !8742, file: !4822, line: 91, baseType: !8750, size: 64, offset: 320)
!8755 = !DIDerivedType(tag: DW_TAG_member, name: "cur_count", scope: !8742, file: !4822, line: 92, baseType: !568, size: 32, offset: 384)
!8756 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !8742, file: !4822, line: 93, baseType: !4826, size: 32, offset: 416)
!8757 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8742, file: !4822, line: 94, baseType: !4820, size: 64, offset: 448)
!8758 = !DILocation(line: 2779, column: 29, scope: !8732)
!8759 = !DILocalVariable(name: "np", scope: !8732, file: !3, line: 2780, type: !4820)
!8760 = !DILocation(line: 2780, column: 22, scope: !8732)
!8761 = !DILocalVariable(name: "i", scope: !8732, file: !3, line: 2781, type: !195)
!8762 = !DILocation(line: 2781, column: 6, scope: !8732)
!8763 = !DILocation(line: 2783, column: 35, scope: !8732)
!8764 = !DILocation(line: 2783, column: 8, scope: !8732)
!8765 = !DILocation(line: 2783, column: 6, scope: !8732)
!8766 = !DILocation(line: 2784, column: 6, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8732, file: !3, line: 2784, column: 6)
!8768 = !DILocation(line: 2784, column: 10, scope: !8767)
!8769 = !DILocation(line: 2784, column: 6, scope: !8732)
!8770 = !DILocation(line: 2785, column: 10, scope: !8767)
!8771 = !DILocation(line: 2785, column: 14, scope: !8767)
!8772 = !DILocation(line: 2785, column: 31, scope: !8767)
!8773 = !DILocation(line: 2785, column: 3, scope: !8767)
!8774 = !DILocation(line: 2788, column: 2, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !8732, file: !3, line: 2788, column: 2)
!8776 = !DILocation(line: 2788, column: 2, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8775, file: !3, line: 2788, column: 2)
!8778 = !DILocation(line: 2789, column: 11, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8777, file: !3, line: 2788, column: 67)
!8780 = !DILocation(line: 2789, column: 6, scope: !8779)
!8781 = !DILocation(line: 2790, column: 40, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8779, file: !3, line: 2790, column: 7)
!8783 = !DILocation(line: 2790, column: 8, scope: !8782)
!8784 = !DILocation(line: 2790, column: 7, scope: !8779)
!8785 = !DILocation(line: 2791, column: 4, scope: !8782)
!8786 = !DILocation(line: 2792, column: 7, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8779, file: !3, line: 2792, column: 7)
!8788 = !DILocation(line: 2792, column: 7, scope: !8779)
!8789 = !DILocation(line: 2793, column: 29, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8787, file: !3, line: 2792, column: 15)
!8791 = !DILocation(line: 2793, column: 36, scope: !8790)
!8792 = !DILocation(line: 2793, column: 40, scope: !8790)
!8793 = !DILocation(line: 2793, column: 10, scope: !8790)
!8794 = !DILocation(line: 2793, column: 8, scope: !8790)
!8795 = !DILocation(line: 2794, column: 8, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8790, file: !3, line: 2794, column: 8)
!8797 = !DILocation(line: 2794, column: 8, scope: !8790)
!8798 = !DILocation(line: 2795, column: 5, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8796, file: !3, line: 2794, column: 13)
!8800 = !DILocation(line: 2797, column: 17, scope: !8799)
!8801 = !DILocation(line: 2797, column: 5, scope: !8799)
!8802 = !DILocation(line: 2798, column: 12, scope: !8799)
!8803 = !DILocation(line: 2798, column: 5, scope: !8799)
!8804 = !DILocation(line: 2800, column: 3, scope: !8790)
!8805 = !DILocation(line: 2801, column: 4, scope: !8779)
!8806 = !DILocation(line: 2802, column: 2, scope: !8779)
!8807 = distinct !{!8807, !8774, !8808}
!8808 = !DILocation(line: 2802, column: 2, scope: !8775)
!8809 = !DILocation(line: 2804, column: 9, scope: !8732)
!8810 = !DILocation(line: 2804, column: 2, scope: !8732)
!8811 = !DILocation(line: 2805, column: 1, scope: !8732)
!8812 = distinct !DISubprogram(name: "kcalloc", scope: !202, file: !202, line: 601, type: !8813, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8813 = !DISubroutineType(types: !8814)
!8814 = !{!209, !330, !330, !819}
!8815 = !DILocalVariable(name: "n", arg: 1, scope: !8812, file: !202, line: 601, type: !330)
!8816 = !DILocation(line: 601, column: 36, scope: !8812)
!8817 = !DILocalVariable(name: "size", arg: 2, scope: !8812, file: !202, line: 601, type: !330)
!8818 = !DILocation(line: 601, column: 46, scope: !8812)
!8819 = !DILocalVariable(name: "flags", arg: 3, scope: !8812, file: !202, line: 601, type: !819)
!8820 = !DILocation(line: 601, column: 58, scope: !8812)
!8821 = !DILocation(line: 603, column: 23, scope: !8812)
!8822 = !DILocation(line: 603, column: 26, scope: !8812)
!8823 = !DILocation(line: 603, column: 32, scope: !8812)
!8824 = !DILocation(line: 603, column: 38, scope: !8812)
!8825 = !DILocation(line: 603, column: 9, scope: !8812)
!8826 = !DILocation(line: 603, column: 2, scope: !8812)
!8827 = distinct !DISubprogram(name: "pm_genpd_opp_to_performance_state", scope: !3, file: !3, line: 2865, type: !8828, scopeLine: 2867, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8828 = !DISubroutineType(types: !8829)
!8829 = !{!7, !1695, !5030}
!8830 = !DILocalVariable(name: "genpd_dev", arg: 1, scope: !8827, file: !3, line: 2865, type: !1695)
!8831 = !DILocation(line: 2865, column: 63, scope: !8827)
!8832 = !DILocalVariable(name: "opp", arg: 2, scope: !8827, file: !3, line: 2866, type: !5030)
!8833 = !DILocation(line: 2866, column: 32, scope: !8827)
!8834 = !DILocalVariable(name: "genpd", scope: !8827, file: !3, line: 2868, type: !214)
!8835 = !DILocation(line: 2868, column: 28, scope: !8827)
!8836 = !DILocalVariable(name: "state", scope: !8827, file: !3, line: 2869, type: !195)
!8837 = !DILocation(line: 2869, column: 6, scope: !8827)
!8838 = !DILocalVariable(name: "__mptr", scope: !8839, file: !3, line: 2871, type: !209)
!8839 = distinct !DILexicalBlock(scope: !8827, file: !3, line: 2871, column: 10)
!8840 = !DILocation(line: 2871, column: 10, scope: !8839)
!8841 = !DILocation(line: 2871, column: 10, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8839, file: !3, line: 2871, column: 10)
!8843 = !DILocation(line: 2871, column: 8, scope: !8827)
!8844 = !DILocation(line: 2873, column: 6, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8827, file: !3, line: 2873, column: 6)
!8846 = !DILocation(line: 2873, column: 6, scope: !8827)
!8847 = !DILocation(line: 2874, column: 3, scope: !8845)
!8848 = !DILocation(line: 2876, column: 2, scope: !8827)
!8849 = !DILocation(line: 2877, column: 10, scope: !8827)
!8850 = !DILocation(line: 2877, column: 17, scope: !8827)
!8851 = !DILocation(line: 2877, column: 42, scope: !8827)
!8852 = !DILocation(line: 2877, column: 49, scope: !8827)
!8853 = !DILocation(line: 2877, column: 8, scope: !8827)
!8854 = !DILocation(line: 2878, column: 2, scope: !8827)
!8855 = !DILocation(line: 2880, column: 9, scope: !8827)
!8856 = !DILocation(line: 2880, column: 2, scope: !8827)
!8857 = !DILocation(line: 2881, column: 1, scope: !8827)
!8858 = distinct !DISubprogram(name: "genpd_bus_init", scope: !3, file: !3, line: 2884, type: !5582, scopeLine: 2885, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8859 = !DILocation(line: 2886, column: 9, scope: !8858)
!8860 = !DILocation(line: 2886, column: 2, scope: !8858)
!8861 = distinct !DISubprogram(name: "pd_to_genpd", scope: !146, file: !146, line: 158, type: !8862, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8862 = !DISubroutineType(types: !8863)
!8863 = !{!214, !4781}
!8864 = !DILocalVariable(name: "pd", arg: 1, scope: !8861, file: !146, line: 158, type: !4781)
!8865 = !DILocation(line: 158, column: 75, scope: !8861)
!8866 = !DILocalVariable(name: "__mptr", scope: !8867, file: !146, line: 160, type: !209)
!8867 = distinct !DILexicalBlock(scope: !8861, file: !146, line: 160, column: 9)
!8868 = !DILocation(line: 160, column: 9, scope: !8867)
!8869 = !DILocation(line: 160, column: 9, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !8867, file: !146, line: 160, column: 9)
!8871 = !DILocation(line: 160, column: 2, scope: !8861)
!8872 = distinct !DISubprogram(name: "genpd_sync_power_off", scope: !3, file: !3, line: 978, type: !8873, scopeLine: 980, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8873 = !DISubroutineType(types: !8874)
!8874 = !{null, !214, !499, !7}
!8875 = !DILocation(line: 23, column: 61, scope: !6293, inlinedAt: !8876)
!8876 = distinct !DILocation(line: 28, column: 9, scope: !6300, inlinedAt: !8877)
!8877 = distinct !DILocation(line: 987, column: 9, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8872, file: !3, line: 986, column: 6)
!8879 = !DILocation(line: 69, column: 73, scope: !6304, inlinedAt: !8880)
!8880 = distinct !DILocation(line: 27, column: 2, scope: !6300, inlinedAt: !8877)
!8881 = !DILocation(line: 69, column: 83, scope: !6304, inlinedAt: !8880)
!8882 = !DILocation(line: 25, column: 29, scope: !6300, inlinedAt: !8877)
!8883 = !DILocalVariable(name: "genpd", arg: 1, scope: !8872, file: !3, line: 978, type: !214)
!8884 = !DILocation(line: 978, column: 60, scope: !8872)
!8885 = !DILocalVariable(name: "use_lock", arg: 2, scope: !8872, file: !3, line: 978, type: !499)
!8886 = !DILocation(line: 978, column: 72, scope: !8872)
!8887 = !DILocalVariable(name: "depth", arg: 3, scope: !8872, file: !3, line: 979, type: !7)
!8888 = !DILocation(line: 979, column: 19, scope: !8872)
!8889 = !DILocalVariable(name: "link", scope: !8872, file: !3, line: 981, type: !210)
!8890 = !DILocation(line: 981, column: 19, scope: !8872)
!8891 = !DILocation(line: 983, column: 7, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8872, file: !3, line: 983, column: 6)
!8893 = !DILocation(line: 983, column: 30, scope: !8892)
!8894 = !DILocation(line: 983, column: 33, scope: !8892)
!8895 = !DILocation(line: 983, column: 6, scope: !8872)
!8896 = !DILocation(line: 984, column: 3, scope: !8892)
!8897 = !DILocation(line: 986, column: 6, scope: !8878)
!8898 = !DILocation(line: 986, column: 13, scope: !8878)
!8899 = !DILocation(line: 986, column: 32, scope: !8878)
!8900 = !DILocation(line: 986, column: 39, scope: !8878)
!8901 = !DILocation(line: 986, column: 29, scope: !8878)
!8902 = !DILocation(line: 987, column: 6, scope: !8878)
!8903 = !DILocation(line: 987, column: 22, scope: !8878)
!8904 = !DILocation(line: 987, column: 29, scope: !8878)
!8905 = !DILocation(line: 27, column: 25, scope: !6300, inlinedAt: !8877)
!8906 = !DILocation(line: 71, column: 19, scope: !6304, inlinedAt: !8880)
!8907 = !DILocation(line: 71, column: 22, scope: !6304, inlinedAt: !8880)
!8908 = !DILocation(line: 71, column: 2, scope: !6304, inlinedAt: !8880)
!8909 = !DILocation(line: 72, column: 2, scope: !6304, inlinedAt: !8880)
!8910 = !DILocation(line: 28, column: 26, scope: !6300, inlinedAt: !8877)
!8911 = !DILocation(line: 29, column: 9, scope: !6293, inlinedAt: !8876)
!8912 = !DILocation(line: 987, column: 39, scope: !8878)
!8913 = !DILocation(line: 986, column: 6, scope: !8872)
!8914 = !DILocation(line: 988, column: 3, scope: !8878)
!8915 = !DILocation(line: 991, column: 21, scope: !8872)
!8916 = !DILocation(line: 991, column: 28, scope: !8872)
!8917 = !DILocation(line: 991, column: 40, scope: !8872)
!8918 = !DILocation(line: 991, column: 2, scope: !8872)
!8919 = !DILocation(line: 991, column: 9, scope: !8872)
!8920 = !DILocation(line: 991, column: 19, scope: !8872)
!8921 = !DILocation(line: 992, column: 23, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8872, file: !3, line: 992, column: 6)
!8923 = !DILocation(line: 992, column: 6, scope: !8922)
!8924 = !DILocation(line: 992, column: 6, scope: !8872)
!8925 = !DILocation(line: 993, column: 3, scope: !8922)
!8926 = !DILocation(line: 995, column: 2, scope: !8872)
!8927 = !DILocation(line: 995, column: 9, scope: !8872)
!8928 = !DILocation(line: 995, column: 16, scope: !8872)
!8929 = !DILocalVariable(name: "__mptr", scope: !8930, file: !3, line: 997, type: !209)
!8930 = distinct !DILexicalBlock(scope: !8931, file: !3, line: 997, column: 2)
!8931 = distinct !DILexicalBlock(scope: !8872, file: !3, line: 997, column: 2)
!8932 = !DILocation(line: 997, column: 2, scope: !8930)
!8933 = !DILocation(line: 997, column: 2, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8930, file: !3, line: 997, column: 2)
!8935 = !DILocation(line: 997, column: 2, scope: !8931)
!8936 = !DILocation(line: 997, column: 2, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8931, file: !3, line: 997, column: 2)
!8938 = !DILocation(line: 998, column: 24, scope: !8939)
!8939 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 997, column: 61)
!8940 = !DILocation(line: 998, column: 30, scope: !8939)
!8941 = !DILocation(line: 998, column: 3, scope: !8939)
!8942 = !DILocation(line: 1000, column: 7, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8939, file: !3, line: 1000, column: 7)
!8944 = !DILocation(line: 1000, column: 7, scope: !8939)
!8945 = !DILocation(line: 1001, column: 4, scope: !8943)
!8946 = !DILocation(line: 1003, column: 24, scope: !8939)
!8947 = !DILocation(line: 1003, column: 30, scope: !8939)
!8948 = !DILocation(line: 1003, column: 38, scope: !8939)
!8949 = !DILocation(line: 1003, column: 48, scope: !8939)
!8950 = !DILocation(line: 1003, column: 54, scope: !8939)
!8951 = !DILocation(line: 1003, column: 3, scope: !8939)
!8952 = !DILocation(line: 1005, column: 7, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8939, file: !3, line: 1005, column: 7)
!8954 = !DILocation(line: 1005, column: 7, scope: !8939)
!8955 = !DILocation(line: 1006, column: 4, scope: !8953)
!8956 = !DILocation(line: 1007, column: 2, scope: !8939)
!8957 = !DILocalVariable(name: "__mptr", scope: !8958, file: !3, line: 997, type: !209)
!8958 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 997, column: 2)
!8959 = !DILocation(line: 997, column: 2, scope: !8958)
!8960 = !DILocation(line: 997, column: 2, scope: !8961)
!8961 = distinct !DILexicalBlock(scope: !8958, file: !3, line: 997, column: 2)
!8962 = distinct !{!8962, !8935, !8963}
!8963 = !DILocation(line: 1007, column: 2, scope: !8931)
!8964 = !DILocation(line: 1008, column: 1, scope: !8872)
!8965 = distinct !DISubprogram(name: "genpd_sync_power_on", scope: !3, file: !3, line: 1020, type: !8873, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8966 = !DILocalVariable(name: "genpd", arg: 1, scope: !8965, file: !3, line: 1020, type: !214)
!8967 = !DILocation(line: 1020, column: 59, scope: !8965)
!8968 = !DILocalVariable(name: "use_lock", arg: 2, scope: !8965, file: !3, line: 1020, type: !499)
!8969 = !DILocation(line: 1020, column: 71, scope: !8965)
!8970 = !DILocalVariable(name: "depth", arg: 3, scope: !8965, file: !3, line: 1021, type: !7)
!8971 = !DILocation(line: 1021, column: 18, scope: !8965)
!8972 = !DILocalVariable(name: "link", scope: !8965, file: !3, line: 1023, type: !210)
!8973 = !DILocation(line: 1023, column: 19, scope: !8965)
!8974 = !DILocation(line: 1025, column: 6, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8965, file: !3, line: 1025, column: 6)
!8976 = !DILocation(line: 1025, column: 6, scope: !8965)
!8977 = !DILocation(line: 1026, column: 3, scope: !8975)
!8978 = !DILocalVariable(name: "__mptr", scope: !8979, file: !3, line: 1028, type: !209)
!8979 = distinct !DILexicalBlock(scope: !8980, file: !3, line: 1028, column: 2)
!8980 = distinct !DILexicalBlock(scope: !8965, file: !3, line: 1028, column: 2)
!8981 = !DILocation(line: 1028, column: 2, scope: !8979)
!8982 = !DILocation(line: 1028, column: 2, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8979, file: !3, line: 1028, column: 2)
!8984 = !DILocation(line: 1028, column: 2, scope: !8980)
!8985 = !DILocation(line: 1028, column: 2, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8980, file: !3, line: 1028, column: 2)
!8987 = !DILocation(line: 1029, column: 24, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8986, file: !3, line: 1028, column: 61)
!8989 = !DILocation(line: 1029, column: 30, scope: !8988)
!8990 = !DILocation(line: 1029, column: 3, scope: !8988)
!8991 = !DILocation(line: 1031, column: 7, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8988, file: !3, line: 1031, column: 7)
!8993 = !DILocation(line: 1031, column: 7, scope: !8988)
!8994 = !DILocation(line: 1032, column: 4, scope: !8992)
!8995 = !DILocation(line: 1034, column: 23, scope: !8988)
!8996 = !DILocation(line: 1034, column: 29, scope: !8988)
!8997 = !DILocation(line: 1034, column: 37, scope: !8988)
!8998 = !DILocation(line: 1034, column: 47, scope: !8988)
!8999 = !DILocation(line: 1034, column: 53, scope: !8988)
!9000 = !DILocation(line: 1034, column: 3, scope: !8988)
!9001 = !DILocation(line: 1036, column: 7, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8988, file: !3, line: 1036, column: 7)
!9003 = !DILocation(line: 1036, column: 7, scope: !8988)
!9004 = !DILocation(line: 1037, column: 4, scope: !9002)
!9005 = !DILocation(line: 1038, column: 2, scope: !8988)
!9006 = !DILocalVariable(name: "__mptr", scope: !9007, file: !3, line: 1028, type: !209)
!9007 = distinct !DILexicalBlock(scope: !8986, file: !3, line: 1028, column: 2)
!9008 = !DILocation(line: 1028, column: 2, scope: !9007)
!9009 = !DILocation(line: 1028, column: 2, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !9007, file: !3, line: 1028, column: 2)
!9011 = distinct !{!9011, !8984, !9012}
!9012 = !DILocation(line: 1038, column: 2, scope: !8980)
!9013 = !DILocation(line: 1040, column: 18, scope: !8965)
!9014 = !DILocation(line: 1040, column: 2, scope: !8965)
!9015 = !DILocation(line: 1041, column: 2, scope: !8965)
!9016 = !DILocation(line: 1041, column: 9, scope: !8965)
!9017 = !DILocation(line: 1041, column: 16, scope: !8965)
!9018 = !DILocation(line: 1042, column: 1, scope: !8965)
!9019 = distinct !DISubprogram(name: "_genpd_power_off", scope: !3, file: !3, line: 460, type: !9020, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9020 = !DISubroutineType(types: !9021)
!9021 = !{!195, !214, !499}
!9022 = !DILocalVariable(name: "genpd", arg: 1, scope: !9019, file: !3, line: 460, type: !214)
!9023 = !DILocation(line: 460, column: 55, scope: !9019)
!9024 = !DILocalVariable(name: "timed", arg: 2, scope: !9019, file: !3, line: 460, type: !499)
!9025 = !DILocation(line: 460, column: 67, scope: !9019)
!9026 = !DILocalVariable(name: "state_idx", scope: !9019, file: !3, line: 462, type: !7)
!9027 = !DILocation(line: 462, column: 15, scope: !9019)
!9028 = !DILocation(line: 462, column: 27, scope: !9019)
!9029 = !DILocation(line: 462, column: 34, scope: !9019)
!9030 = !DILocalVariable(name: "time_start", scope: !9019, file: !3, line: 463, type: !2307)
!9031 = !DILocation(line: 463, column: 10, scope: !9019)
!9032 = !DILocalVariable(name: "elapsed_ns", scope: !9019, file: !3, line: 464, type: !759)
!9033 = !DILocation(line: 464, column: 6, scope: !9019)
!9034 = !DILocalVariable(name: "ret", scope: !9019, file: !3, line: 465, type: !195)
!9035 = !DILocation(line: 465, column: 6, scope: !9019)
!9036 = !DILocation(line: 468, column: 40, scope: !9019)
!9037 = !DILocation(line: 468, column: 47, scope: !9019)
!9038 = !DILocation(line: 468, column: 8, scope: !9019)
!9039 = !DILocation(line: 468, column: 6, scope: !9019)
!9040 = !DILocation(line: 471, column: 26, scope: !9019)
!9041 = !DILocation(line: 471, column: 8, scope: !9019)
!9042 = !DILocation(line: 471, column: 6, scope: !9019)
!9043 = !DILocation(line: 472, column: 6, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !9019, file: !3, line: 472, column: 6)
!9045 = !DILocation(line: 472, column: 6, scope: !9019)
!9046 = !DILocation(line: 473, column: 10, scope: !9044)
!9047 = !DILocation(line: 473, column: 3, scope: !9044)
!9048 = !DILocation(line: 475, column: 7, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9019, file: !3, line: 475, column: 6)
!9050 = !DILocation(line: 475, column: 14, scope: !9049)
!9051 = !DILocation(line: 475, column: 6, scope: !9019)
!9052 = !DILocation(line: 476, column: 3, scope: !9049)
!9053 = !DILocation(line: 478, column: 7, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9019, file: !3, line: 478, column: 6)
!9055 = !DILocation(line: 478, column: 6, scope: !9019)
!9056 = !DILocation(line: 479, column: 9, scope: !9057)
!9057 = distinct !DILexicalBlock(scope: !9054, file: !3, line: 478, column: 14)
!9058 = !DILocation(line: 479, column: 16, scope: !9057)
!9059 = !DILocation(line: 479, column: 26, scope: !9057)
!9060 = !DILocation(line: 479, column: 7, scope: !9057)
!9061 = !DILocation(line: 480, column: 7, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9057, file: !3, line: 480, column: 7)
!9063 = !DILocation(line: 480, column: 7, scope: !9057)
!9064 = !DILocation(line: 481, column: 4, scope: !9062)
!9065 = !DILocation(line: 483, column: 3, scope: !9057)
!9066 = !DILocation(line: 486, column: 15, scope: !9019)
!9067 = !DILocation(line: 486, column: 13, scope: !9019)
!9068 = !DILocation(line: 487, column: 8, scope: !9019)
!9069 = !DILocation(line: 487, column: 15, scope: !9019)
!9070 = !DILocation(line: 487, column: 25, scope: !9019)
!9071 = !DILocation(line: 487, column: 6, scope: !9019)
!9072 = !DILocation(line: 488, column: 6, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9019, file: !3, line: 488, column: 6)
!9074 = !DILocation(line: 488, column: 6, scope: !9019)
!9075 = !DILocation(line: 489, column: 3, scope: !9073)
!9076 = !DILocation(line: 491, column: 27, scope: !9019)
!9077 = !DILocation(line: 491, column: 15, scope: !9019)
!9078 = !DILocation(line: 491, column: 13, scope: !9019)
!9079 = !DILocation(line: 492, column: 6, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9019, file: !3, line: 492, column: 6)
!9081 = !DILocation(line: 492, column: 20, scope: !9080)
!9082 = !DILocation(line: 492, column: 27, scope: !9080)
!9083 = !DILocation(line: 492, column: 34, scope: !9080)
!9084 = !DILocation(line: 492, column: 45, scope: !9080)
!9085 = !DILocation(line: 492, column: 17, scope: !9080)
!9086 = !DILocation(line: 492, column: 6, scope: !9019)
!9087 = !DILocation(line: 493, column: 3, scope: !9080)
!9088 = !DILocation(line: 495, column: 50, scope: !9019)
!9089 = !DILocation(line: 495, column: 2, scope: !9019)
!9090 = !DILocation(line: 495, column: 9, scope: !9019)
!9091 = !DILocation(line: 495, column: 16, scope: !9019)
!9092 = !DILocation(line: 495, column: 27, scope: !9019)
!9093 = !DILocation(line: 495, column: 48, scope: !9019)
!9094 = !DILocation(line: 496, column: 2, scope: !9019)
!9095 = !DILocation(line: 496, column: 9, scope: !9019)
!9096 = !DILocation(line: 496, column: 30, scope: !9019)
!9097 = !DILocation(line: 497, column: 2, scope: !9098)
!9098 = distinct !DILexicalBlock(scope: !9099, file: !3, line: 497, column: 2)
!9099 = distinct !DILexicalBlock(scope: !9019, file: !3, line: 497, column: 2)
!9100 = !DILocation(line: 497, column: 2, scope: !9099)
!9101 = !DILocation(line: 497, column: 2, scope: !9019)
!9102 = !DILabel(scope: !9019, name: "out", file: !3, line: 500)
!9103 = !DILocation(line: 500, column: 1, scope: !9019)
!9104 = !DILocation(line: 501, column: 27, scope: !9019)
!9105 = !DILocation(line: 501, column: 34, scope: !9019)
!9106 = !DILocation(line: 501, column: 2, scope: !9019)
!9107 = !DILocation(line: 503, column: 2, scope: !9019)
!9108 = !DILabel(scope: !9019, name: "busy", file: !3, line: 504)
!9109 = !DILocation(line: 504, column: 1, scope: !9019)
!9110 = !DILocation(line: 505, column: 27, scope: !9019)
!9111 = !DILocation(line: 505, column: 34, scope: !9019)
!9112 = !DILocation(line: 505, column: 2, scope: !9019)
!9113 = !DILocation(line: 506, column: 9, scope: !9019)
!9114 = !DILocation(line: 506, column: 2, scope: !9019)
!9115 = !DILocation(line: 507, column: 1, scope: !9019)
!9116 = distinct !DISubprogram(name: "kasan_check_read", scope: !9117, file: !9117, line: 34, type: !9118, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9117 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!9118 = !DISubroutineType(types: !9119)
!9119 = !{!499, !6283, !7}
!9120 = !DILocalVariable(name: "p", arg: 1, scope: !9116, file: !9117, line: 34, type: !6283)
!9121 = !DILocation(line: 34, column: 58, scope: !9116)
!9122 = !DILocalVariable(name: "size", arg: 2, scope: !9116, file: !9117, line: 34, type: !7)
!9123 = !DILocation(line: 34, column: 74, scope: !9116)
!9124 = !DILocation(line: 36, column: 2, scope: !9116)
!9125 = distinct !DISubprogram(name: "kcsan_check_access", scope: !9126, file: !9126, line: 178, type: !9127, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9126 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!9127 = !DISubroutineType(types: !9128)
!9128 = !{null, !6283, !330, !195}
!9129 = !DILocalVariable(name: "ptr", arg: 1, scope: !9125, file: !9126, line: 178, type: !6283)
!9130 = !DILocation(line: 178, column: 60, scope: !9125)
!9131 = !DILocalVariable(name: "size", arg: 2, scope: !9125, file: !9126, line: 178, type: !330)
!9132 = !DILocation(line: 178, column: 72, scope: !9125)
!9133 = !DILocalVariable(name: "type", arg: 3, scope: !9125, file: !9126, line: 179, type: !195)
!9134 = !DILocation(line: 179, column: 15, scope: !9125)
!9135 = !DILocation(line: 179, column: 23, scope: !9125)
!9136 = distinct !DISubprogram(name: "notifier_to_errno", scope: !4729, file: !4729, line: 198, type: !4150, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9137 = !DILocalVariable(name: "ret", arg: 1, scope: !9136, file: !4729, line: 198, type: !195)
!9138 = !DILocation(line: 198, column: 41, scope: !9136)
!9139 = !DILocation(line: 200, column: 6, scope: !9136)
!9140 = !DILocation(line: 201, column: 9, scope: !9136)
!9141 = !DILocation(line: 201, column: 13, scope: !9136)
!9142 = !DILocation(line: 201, column: 39, scope: !9136)
!9143 = !DILocation(line: 201, column: 37, scope: !9136)
!9144 = !DILocation(line: 201, column: 2, scope: !9136)
!9145 = distinct !DISubprogram(name: "ktime_to_ns", scope: !2308, file: !2308, line: 80, type: !9146, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9146 = !DISubroutineType(types: !9147)
!9147 = !{!759, !9148}
!9148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2307)
!9149 = !DILocalVariable(name: "kt", arg: 1, scope: !9145, file: !2308, line: 80, type: !9148)
!9150 = !DILocation(line: 80, column: 45, scope: !9145)
!9151 = !DILocation(line: 82, column: 9, scope: !9145)
!9152 = !DILocation(line: 82, column: 2, scope: !9145)
!9153 = distinct !DISubprogram(name: "genpd_sd_counter_inc", scope: !3, file: !3, line: 206, type: !5081, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9154 = !DILocalVariable(name: "v", arg: 1, scope: !9155, file: !6265, line: 93, type: !6268)
!9155 = distinct !DISubprogram(name: "arch_atomic_inc", scope: !6265, file: !6265, line: 93, type: !9156, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9156 = !DISubroutineType(types: !9157)
!9157 = !{null, !6268}
!9158 = !DILocation(line: 93, column: 55, scope: !9155, inlinedAt: !9159)
!9159 = distinct !DILocation(line: 241, column: 2, scope: !9160, inlinedAt: !9161)
!9160 = distinct !DISubprogram(name: "atomic_inc", scope: !6272, file: !6272, line: 238, type: !9156, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9161 = distinct !DILocation(line: 208, column: 2, scope: !9153)
!9162 = !DILocation(line: 99, column: 79, scope: !6279, inlinedAt: !9163)
!9163 = distinct !DILocation(line: 240, column: 2, scope: !9160, inlinedAt: !9161)
!9164 = !DILocation(line: 99, column: 89, scope: !6279, inlinedAt: !9163)
!9165 = !DILocalVariable(name: "v", arg: 1, scope: !9160, file: !6272, line: 238, type: !6268)
!9166 = !DILocation(line: 238, column: 22, scope: !9160, inlinedAt: !9161)
!9167 = !DILocalVariable(name: "genpd", arg: 1, scope: !9153, file: !3, line: 206, type: !214)
!9168 = !DILocation(line: 206, column: 60, scope: !9153)
!9169 = !DILocation(line: 208, column: 14, scope: !9153)
!9170 = !DILocation(line: 208, column: 21, scope: !9153)
!9171 = !DILocation(line: 240, column: 31, scope: !9160, inlinedAt: !9161)
!9172 = !DILocation(line: 101, column: 20, scope: !6279, inlinedAt: !9163)
!9173 = !DILocation(line: 101, column: 23, scope: !6279, inlinedAt: !9163)
!9174 = !DILocation(line: 101, column: 2, scope: !6279, inlinedAt: !9163)
!9175 = !DILocation(line: 102, column: 2, scope: !6279, inlinedAt: !9163)
!9176 = !DILocation(line: 241, column: 18, scope: !9160, inlinedAt: !9161)
!9177 = !DILocation(line: 96, column: 16, scope: !9155, inlinedAt: !9159)
!9178 = !DILocation(line: 96, column: 19, scope: !9155, inlinedAt: !9159)
!9179 = !DILocation(line: 95, column: 2, scope: !9155, inlinedAt: !9159)
!9180 = !{i32 -2146804239}
!9181 = !DILocation(line: 209, column: 2, scope: !9153)
!9182 = !{i32 -2140687196}
!9183 = !DILocation(line: 210, column: 1, scope: !9153)
!9184 = distinct !DISubprogram(name: "_genpd_power_on", scope: !3, file: !3, line: 411, type: !9020, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9185 = !DILocalVariable(name: "genpd", arg: 1, scope: !9184, file: !3, line: 411, type: !214)
!9186 = !DILocation(line: 411, column: 54, scope: !9184)
!9187 = !DILocalVariable(name: "timed", arg: 2, scope: !9184, file: !3, line: 411, type: !499)
!9188 = !DILocation(line: 411, column: 66, scope: !9184)
!9189 = !DILocalVariable(name: "state_idx", scope: !9184, file: !3, line: 413, type: !7)
!9190 = !DILocation(line: 413, column: 15, scope: !9184)
!9191 = !DILocation(line: 413, column: 27, scope: !9184)
!9192 = !DILocation(line: 413, column: 34, scope: !9184)
!9193 = !DILocalVariable(name: "time_start", scope: !9184, file: !3, line: 414, type: !2307)
!9194 = !DILocation(line: 414, column: 10, scope: !9184)
!9195 = !DILocalVariable(name: "elapsed_ns", scope: !9184, file: !3, line: 415, type: !759)
!9196 = !DILocation(line: 415, column: 6, scope: !9184)
!9197 = !DILocalVariable(name: "ret", scope: !9184, file: !3, line: 416, type: !195)
!9198 = !DILocation(line: 416, column: 6, scope: !9184)
!9199 = !DILocation(line: 419, column: 40, scope: !9184)
!9200 = !DILocation(line: 419, column: 47, scope: !9184)
!9201 = !DILocation(line: 419, column: 8, scope: !9184)
!9202 = !DILocation(line: 419, column: 6, scope: !9184)
!9203 = !DILocation(line: 422, column: 26, scope: !9184)
!9204 = !DILocation(line: 422, column: 8, scope: !9184)
!9205 = !DILocation(line: 422, column: 6, scope: !9184)
!9206 = !DILocation(line: 423, column: 6, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 423, column: 6)
!9208 = !DILocation(line: 423, column: 6, scope: !9184)
!9209 = !DILocation(line: 424, column: 10, scope: !9207)
!9210 = !DILocation(line: 424, column: 3, scope: !9207)
!9211 = !DILocation(line: 426, column: 7, scope: !9212)
!9212 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 426, column: 6)
!9213 = !DILocation(line: 426, column: 14, scope: !9212)
!9214 = !DILocation(line: 426, column: 6, scope: !9184)
!9215 = !DILocation(line: 427, column: 3, scope: !9212)
!9216 = !DILocation(line: 429, column: 7, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 429, column: 6)
!9218 = !DILocation(line: 429, column: 6, scope: !9184)
!9219 = !DILocation(line: 430, column: 9, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9217, file: !3, line: 429, column: 14)
!9221 = !DILocation(line: 430, column: 16, scope: !9220)
!9222 = !DILocation(line: 430, column: 25, scope: !9220)
!9223 = !DILocation(line: 430, column: 7, scope: !9220)
!9224 = !DILocation(line: 431, column: 7, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9220, file: !3, line: 431, column: 7)
!9226 = !DILocation(line: 431, column: 7, scope: !9220)
!9227 = !DILocation(line: 432, column: 4, scope: !9225)
!9228 = !DILocation(line: 434, column: 3, scope: !9220)
!9229 = !DILocation(line: 437, column: 15, scope: !9184)
!9230 = !DILocation(line: 437, column: 13, scope: !9184)
!9231 = !DILocation(line: 438, column: 8, scope: !9184)
!9232 = !DILocation(line: 438, column: 15, scope: !9184)
!9233 = !DILocation(line: 438, column: 24, scope: !9184)
!9234 = !DILocation(line: 438, column: 6, scope: !9184)
!9235 = !DILocation(line: 439, column: 6, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 439, column: 6)
!9237 = !DILocation(line: 439, column: 6, scope: !9184)
!9238 = !DILocation(line: 440, column: 3, scope: !9236)
!9239 = !DILocation(line: 442, column: 27, scope: !9184)
!9240 = !DILocation(line: 442, column: 15, scope: !9184)
!9241 = !DILocation(line: 442, column: 13, scope: !9184)
!9242 = !DILocation(line: 443, column: 6, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 443, column: 6)
!9244 = !DILocation(line: 443, column: 20, scope: !9243)
!9245 = !DILocation(line: 443, column: 27, scope: !9243)
!9246 = !DILocation(line: 443, column: 34, scope: !9243)
!9247 = !DILocation(line: 443, column: 45, scope: !9243)
!9248 = !DILocation(line: 443, column: 17, scope: !9243)
!9249 = !DILocation(line: 443, column: 6, scope: !9184)
!9250 = !DILocation(line: 444, column: 3, scope: !9243)
!9251 = !DILocation(line: 446, column: 49, scope: !9184)
!9252 = !DILocation(line: 446, column: 2, scope: !9184)
!9253 = !DILocation(line: 446, column: 9, scope: !9184)
!9254 = !DILocation(line: 446, column: 16, scope: !9184)
!9255 = !DILocation(line: 446, column: 27, scope: !9184)
!9256 = !DILocation(line: 446, column: 47, scope: !9184)
!9257 = !DILocation(line: 447, column: 2, scope: !9184)
!9258 = !DILocation(line: 447, column: 9, scope: !9184)
!9259 = !DILocation(line: 447, column: 30, scope: !9184)
!9260 = !DILocation(line: 448, column: 2, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9262, file: !3, line: 448, column: 2)
!9262 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 448, column: 2)
!9263 = !DILocation(line: 448, column: 2, scope: !9262)
!9264 = !DILocation(line: 448, column: 2, scope: !9184)
!9265 = !DILabel(scope: !9184, name: "out", file: !3, line: 451)
!9266 = !DILocation(line: 451, column: 1, scope: !9184)
!9267 = !DILocation(line: 452, column: 27, scope: !9184)
!9268 = !DILocation(line: 452, column: 34, scope: !9184)
!9269 = !DILocation(line: 452, column: 2, scope: !9184)
!9270 = !DILocation(line: 453, column: 2, scope: !9184)
!9271 = !DILabel(scope: !9184, name: "err", file: !3, line: 454)
!9272 = !DILocation(line: 454, column: 1, scope: !9184)
!9273 = !DILocation(line: 455, column: 27, scope: !9184)
!9274 = !DILocation(line: 455, column: 34, scope: !9184)
!9275 = !DILocation(line: 455, column: 2, scope: !9184)
!9276 = !DILocation(line: 457, column: 9, scope: !9184)
!9277 = !DILocation(line: 457, column: 2, scope: !9184)
!9278 = !DILocation(line: 458, column: 1, scope: !9184)
!9279 = distinct !DISubprogram(name: "kasan_check_write", scope: !9117, file: !9117, line: 38, type: !9118, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9280 = !DILocalVariable(name: "p", arg: 1, scope: !9279, file: !9117, line: 38, type: !6283)
!9281 = !DILocation(line: 38, column: 59, scope: !9279)
!9282 = !DILocalVariable(name: "size", arg: 2, scope: !9279, file: !9117, line: 38, type: !7)
!9283 = !DILocation(line: 38, column: 75, scope: !9279)
!9284 = !DILocation(line: 40, column: 2, scope: !9279)
!9285 = distinct !DISubprogram(name: "genpd_alloc_dev_data", scope: !3, file: !3, line: 1415, type: !9286, scopeLine: 1416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9286 = !DISubroutineType(types: !9287)
!9287 = !{!5121, !1695}
!9288 = !DILocalVariable(name: "lock", arg: 1, scope: !9289, file: !6595, line: 402, type: !2085)
!9289 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !6595, file: !6595, line: 402, type: !9290, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9290 = !DISubroutineType(types: !9291)
!9291 = !{null, !2085}
!9292 = !DILocation(line: 402, column: 57, scope: !9289, inlinedAt: !9293)
!9293 = distinct !DILocation(line: 1449, column: 2, scope: !9285)
!9294 = !DILocation(line: 402, column: 57, scope: !9289, inlinedAt: !9295)
!9295 = distinct !DILocation(line: 1444, column: 2, scope: !9285)
!9296 = !DILocalVariable(name: "lock", arg: 1, scope: !9297, file: !6595, line: 377, type: !2085)
!9297 = distinct !DISubprogram(name: "spin_lock_irq", scope: !6595, file: !6595, line: 377, type: !9290, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9298 = !DILocation(line: 377, column: 55, scope: !9297, inlinedAt: !9299)
!9299 = distinct !DILocation(line: 1435, column: 2, scope: !9285)
!9300 = !DILocalVariable(name: "dev", arg: 1, scope: !9285, file: !3, line: 1415, type: !1695)
!9301 = !DILocation(line: 1415, column: 75, scope: !9285)
!9302 = !DILocalVariable(name: "gpd_data", scope: !9285, file: !3, line: 1417, type: !5121)
!9303 = !DILocation(line: 1417, column: 33, scope: !9285)
!9304 = !DILocalVariable(name: "ret", scope: !9285, file: !3, line: 1418, type: !195)
!9305 = !DILocation(line: 1418, column: 6, scope: !9285)
!9306 = !DILocation(line: 1420, column: 31, scope: !9285)
!9307 = !DILocation(line: 1420, column: 8, scope: !9285)
!9308 = !DILocation(line: 1420, column: 6, scope: !9285)
!9309 = !DILocation(line: 1421, column: 6, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9285, file: !3, line: 1421, column: 6)
!9311 = !DILocation(line: 1421, column: 6, scope: !9285)
!9312 = !DILocation(line: 1422, column: 18, scope: !9310)
!9313 = !DILocation(line: 1422, column: 10, scope: !9310)
!9314 = !DILocation(line: 1422, column: 3, scope: !9310)
!9315 = !DILocation(line: 1424, column: 13, scope: !9285)
!9316 = !DILocation(line: 1424, column: 11, scope: !9285)
!9317 = !DILocation(line: 1425, column: 7, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9285, file: !3, line: 1425, column: 6)
!9319 = !DILocation(line: 1425, column: 6, scope: !9285)
!9320 = !DILocation(line: 1426, column: 7, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9318, file: !3, line: 1425, column: 17)
!9322 = !DILocation(line: 1427, column: 3, scope: !9321)
!9323 = !DILocation(line: 1430, column: 23, scope: !9285)
!9324 = !DILocation(line: 1430, column: 2, scope: !9285)
!9325 = !DILocation(line: 1430, column: 12, scope: !9285)
!9326 = !DILocation(line: 1430, column: 17, scope: !9285)
!9327 = !DILocation(line: 1430, column: 21, scope: !9285)
!9328 = !DILocation(line: 1431, column: 2, scope: !9285)
!9329 = !DILocation(line: 1431, column: 12, scope: !9285)
!9330 = !DILocation(line: 1431, column: 15, scope: !9285)
!9331 = !DILocation(line: 1431, column: 34, scope: !9285)
!9332 = !DILocation(line: 1432, column: 2, scope: !9285)
!9333 = !DILocation(line: 1432, column: 12, scope: !9285)
!9334 = !DILocation(line: 1432, column: 15, scope: !9285)
!9335 = !DILocation(line: 1432, column: 39, scope: !9285)
!9336 = !DILocation(line: 1433, column: 2, scope: !9285)
!9337 = !DILocation(line: 1433, column: 12, scope: !9285)
!9338 = !DILocation(line: 1433, column: 15, scope: !9285)
!9339 = !DILocation(line: 1433, column: 29, scope: !9285)
!9340 = !DILocation(line: 1435, column: 17, scope: !9285)
!9341 = !DILocation(line: 1435, column: 22, scope: !9285)
!9342 = !DILocation(line: 1435, column: 28, scope: !9285)
!9343 = !DILocation(line: 379, column: 2, scope: !9344, inlinedAt: !9299)
!9344 = distinct !DILexicalBlock(scope: !9345, file: !6595, line: 379, column: 2)
!9345 = distinct !DILexicalBlock(scope: !9297, file: !6595, line: 379, column: 2)
!9346 = !DILocation(line: 379, column: 2, scope: !9347, inlinedAt: !9299)
!9347 = distinct !DILexicalBlock(scope: !9345, file: !6595, line: 379, column: 2)
!9348 = !{i32 -2145458670}
!9349 = !DILocation(line: 379, column: 2, scope: !9350, inlinedAt: !9299)
!9350 = distinct !DILexicalBlock(scope: !9347, file: !6595, line: 379, column: 2)
!9351 = !DILocation(line: 1437, column: 6, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9285, file: !3, line: 1437, column: 6)
!9353 = !DILocation(line: 1437, column: 11, scope: !9352)
!9354 = !DILocation(line: 1437, column: 17, scope: !9352)
!9355 = !DILocation(line: 1437, column: 30, scope: !9352)
!9356 = !DILocation(line: 1437, column: 6, scope: !9285)
!9357 = !DILocation(line: 1438, column: 7, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9352, file: !3, line: 1437, column: 43)
!9359 = !DILocation(line: 1439, column: 3, scope: !9358)
!9360 = !DILocation(line: 1442, column: 41, scope: !9285)
!9361 = !DILocation(line: 1442, column: 51, scope: !9285)
!9362 = !DILocation(line: 1442, column: 2, scope: !9285)
!9363 = !DILocation(line: 1442, column: 7, scope: !9285)
!9364 = !DILocation(line: 1442, column: 13, scope: !9285)
!9365 = !DILocation(line: 1442, column: 26, scope: !9285)
!9366 = !DILocation(line: 1442, column: 38, scope: !9285)
!9367 = !DILocation(line: 1444, column: 19, scope: !9285)
!9368 = !DILocation(line: 1444, column: 24, scope: !9285)
!9369 = !DILocation(line: 1444, column: 30, scope: !9285)
!9370 = !DILocation(line: 404, column: 2, scope: !9371, inlinedAt: !9295)
!9371 = distinct !DILexicalBlock(scope: !9372, file: !6595, line: 404, column: 2)
!9372 = distinct !DILexicalBlock(scope: !9289, file: !6595, line: 404, column: 2)
!9373 = !DILocation(line: 404, column: 2, scope: !9374, inlinedAt: !9295)
!9374 = distinct !DILexicalBlock(scope: !9372, file: !6595, line: 404, column: 2)
!9375 = !{i32 -2145456922}
!9376 = !DILocation(line: 404, column: 2, scope: !9377, inlinedAt: !9295)
!9377 = distinct !DILexicalBlock(scope: !9374, file: !6595, line: 404, column: 2)
!9378 = !DILocation(line: 1446, column: 9, scope: !9285)
!9379 = !DILocation(line: 1446, column: 2, scope: !9285)
!9380 = !DILabel(scope: !9285, name: "err_free", file: !3, line: 1448)
!9381 = !DILocation(line: 1448, column: 2, scope: !9285)
!9382 = !DILocation(line: 1449, column: 19, scope: !9285)
!9383 = !DILocation(line: 1449, column: 24, scope: !9285)
!9384 = !DILocation(line: 1449, column: 30, scope: !9285)
!9385 = !DILocation(line: 404, column: 2, scope: !9371, inlinedAt: !9293)
!9386 = !DILocation(line: 404, column: 2, scope: !9374, inlinedAt: !9293)
!9387 = !DILocation(line: 404, column: 2, scope: !9377, inlinedAt: !9293)
!9388 = !DILocation(line: 1450, column: 8, scope: !9285)
!9389 = !DILocation(line: 1450, column: 2, scope: !9285)
!9390 = !DILabel(scope: !9285, name: "err_put", file: !3, line: 1451)
!9391 = !DILocation(line: 1451, column: 2, scope: !9285)
!9392 = !DILocation(line: 1452, column: 25, scope: !9285)
!9393 = !DILocation(line: 1452, column: 2, scope: !9285)
!9394 = !DILocation(line: 1453, column: 17, scope: !9285)
!9395 = !DILocation(line: 1453, column: 9, scope: !9285)
!9396 = !DILocation(line: 1453, column: 2, scope: !9285)
!9397 = !DILocation(line: 1454, column: 1, scope: !9285)
!9398 = distinct !DISubprogram(name: "genpd_get_cpu", scope: !3, file: !3, line: 1503, type: !5047, scopeLine: 1504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9399 = !DILocalVariable(name: "genpd", arg: 1, scope: !9398, file: !3, line: 1503, type: !214)
!9400 = !DILocation(line: 1503, column: 52, scope: !9398)
!9401 = !DILocalVariable(name: "dev", arg: 2, scope: !9398, file: !3, line: 1503, type: !1695)
!9402 = !DILocation(line: 1503, column: 74, scope: !9398)
!9403 = !DILocalVariable(name: "cpu", scope: !9398, file: !3, line: 1505, type: !195)
!9404 = !DILocation(line: 1505, column: 6, scope: !9398)
!9405 = !DILocation(line: 1507, column: 7, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9398, file: !3, line: 1507, column: 6)
!9407 = !DILocation(line: 1507, column: 6, scope: !9398)
!9408 = !DILocation(line: 1508, column: 3, scope: !9406)
!9409 = !DILocation(line: 1510, column: 2, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9398, file: !3, line: 1510, column: 2)
!9411 = !DILocation(line: 1510, column: 2, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9410, file: !3, line: 1510, column: 2)
!9413 = !DILocation(line: 1511, column: 22, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9415, file: !3, line: 1511, column: 7)
!9415 = distinct !DILexicalBlock(scope: !9412, file: !3, line: 1510, column: 29)
!9416 = !DILocation(line: 1511, column: 7, scope: !9414)
!9417 = !DILocation(line: 1511, column: 30, scope: !9414)
!9418 = !DILocation(line: 1511, column: 27, scope: !9414)
!9419 = !DILocation(line: 1511, column: 7, scope: !9415)
!9420 = !DILocation(line: 1512, column: 11, scope: !9414)
!9421 = !DILocation(line: 1512, column: 4, scope: !9414)
!9422 = !DILocation(line: 1513, column: 2, scope: !9415)
!9423 = distinct !{!9423, !9409, !9424}
!9424 = !DILocation(line: 1513, column: 2, scope: !9410)
!9425 = !DILocation(line: 1515, column: 2, scope: !9398)
!9426 = !DILocation(line: 1516, column: 1, scope: !9398)
!9427 = distinct !DISubprogram(name: "genpd_set_cpumask", scope: !3, file: !3, line: 1491, type: !5085, scopeLine: 1492, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9428 = !DILocalVariable(name: "genpd", arg: 1, scope: !9427, file: !3, line: 1491, type: !214)
!9429 = !DILocation(line: 1491, column: 57, scope: !9427)
!9430 = !DILocalVariable(name: "cpu", arg: 2, scope: !9427, file: !3, line: 1491, type: !195)
!9431 = !DILocation(line: 1491, column: 68, scope: !9427)
!9432 = !DILocation(line: 1493, column: 6, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9427, file: !3, line: 1493, column: 6)
!9434 = !DILocation(line: 1493, column: 10, scope: !9433)
!9435 = !DILocation(line: 1493, column: 6, scope: !9427)
!9436 = !DILocation(line: 1494, column: 24, scope: !9433)
!9437 = !DILocation(line: 1494, column: 31, scope: !9433)
!9438 = !DILocation(line: 1494, column: 3, scope: !9433)
!9439 = !DILocation(line: 1495, column: 1, scope: !9427)
!9440 = distinct !DISubprogram(name: "list_add_tail", scope: !6232, file: !6232, line: 98, type: !7235, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9441 = !DILocalVariable(name: "new", arg: 1, scope: !9440, file: !6232, line: 98, type: !233)
!9442 = !DILocation(line: 98, column: 52, scope: !9440)
!9443 = !DILocalVariable(name: "head", arg: 2, scope: !9440, file: !6232, line: 98, type: !233)
!9444 = !DILocation(line: 98, column: 75, scope: !9440)
!9445 = !DILocation(line: 100, column: 13, scope: !9440)
!9446 = !DILocation(line: 100, column: 18, scope: !9440)
!9447 = !DILocation(line: 100, column: 24, scope: !9440)
!9448 = !DILocation(line: 100, column: 30, scope: !9440)
!9449 = !DILocation(line: 100, column: 2, scope: !9440)
!9450 = !DILocation(line: 101, column: 1, scope: !9440)
!9451 = distinct !DISubprogram(name: "genpd_free_dev_data", scope: !3, file: !3, line: 1456, type: !9452, scopeLine: 1458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9452 = !DISubroutineType(types: !9453)
!9453 = !{null, !1695, !5121}
!9454 = !DILocation(line: 402, column: 57, scope: !9289, inlinedAt: !9455)
!9455 = distinct !DILocation(line: 1463, column: 2, scope: !9451)
!9456 = !DILocation(line: 377, column: 55, scope: !9297, inlinedAt: !9457)
!9457 = distinct !DILocation(line: 1459, column: 2, scope: !9451)
!9458 = !DILocalVariable(name: "dev", arg: 1, scope: !9451, file: !3, line: 1456, type: !1695)
!9459 = !DILocation(line: 1456, column: 48, scope: !9451)
!9460 = !DILocalVariable(name: "gpd_data", arg: 2, scope: !9451, file: !3, line: 1457, type: !5121)
!9461 = !DILocation(line: 1457, column: 36, scope: !9451)
!9462 = !DILocation(line: 1459, column: 17, scope: !9451)
!9463 = !DILocation(line: 1459, column: 22, scope: !9451)
!9464 = !DILocation(line: 1459, column: 28, scope: !9451)
!9465 = !DILocation(line: 379, column: 2, scope: !9344, inlinedAt: !9457)
!9466 = !DILocation(line: 379, column: 2, scope: !9347, inlinedAt: !9457)
!9467 = !DILocation(line: 379, column: 2, scope: !9350, inlinedAt: !9457)
!9468 = !DILocation(line: 1461, column: 2, scope: !9451)
!9469 = !DILocation(line: 1461, column: 7, scope: !9451)
!9470 = !DILocation(line: 1461, column: 13, scope: !9451)
!9471 = !DILocation(line: 1461, column: 26, scope: !9451)
!9472 = !DILocation(line: 1461, column: 38, scope: !9451)
!9473 = !DILocation(line: 1463, column: 19, scope: !9451)
!9474 = !DILocation(line: 1463, column: 24, scope: !9451)
!9475 = !DILocation(line: 1463, column: 30, scope: !9451)
!9476 = !DILocation(line: 404, column: 2, scope: !9371, inlinedAt: !9455)
!9477 = !DILocation(line: 404, column: 2, scope: !9374, inlinedAt: !9455)
!9478 = !DILocation(line: 404, column: 2, scope: !9377, inlinedAt: !9455)
!9479 = !DILocation(line: 1465, column: 8, scope: !9451)
!9480 = !DILocation(line: 1465, column: 2, scope: !9451)
!9481 = !DILocation(line: 1466, column: 25, scope: !9451)
!9482 = !DILocation(line: 1466, column: 2, scope: !9451)
!9483 = !DILocation(line: 1467, column: 1, scope: !9451)
!9484 = distinct !DISubprogram(name: "genpd_dev_pm_qos_notifier", scope: !3, file: !3, line: 675, type: !4739, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9485 = !DILocation(line: 402, column: 57, scope: !9289, inlinedAt: !9486)
!9486 = distinct !DILocation(line: 699, column: 3, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9488, file: !3, line: 684, column: 11)
!9488 = distinct !DILexicalBlock(scope: !9489, file: !3, line: 684, column: 2)
!9489 = distinct !DILexicalBlock(scope: !9484, file: !3, line: 684, column: 2)
!9490 = !DILocation(line: 377, column: 55, scope: !9297, inlinedAt: !9491)
!9491 = distinct !DILocation(line: 688, column: 3, scope: !9487)
!9492 = !DILocalVariable(name: "nb", arg: 1, scope: !9484, file: !3, line: 675, type: !4733)
!9493 = !DILocation(line: 675, column: 61, scope: !9484)
!9494 = !DILocalVariable(name: "val", arg: 2, scope: !9484, file: !3, line: 676, type: !333)
!9495 = !DILocation(line: 676, column: 24, scope: !9484)
!9496 = !DILocalVariable(name: "ptr", arg: 3, scope: !9484, file: !3, line: 676, type: !209)
!9497 = !DILocation(line: 676, column: 35, scope: !9484)
!9498 = !DILocalVariable(name: "gpd_data", scope: !9484, file: !3, line: 678, type: !5121)
!9499 = !DILocation(line: 678, column: 33, scope: !9484)
!9500 = !DILocalVariable(name: "dev", scope: !9484, file: !3, line: 679, type: !1695)
!9501 = !DILocation(line: 679, column: 17, scope: !9484)
!9502 = !DILocalVariable(name: "__mptr", scope: !9503, file: !3, line: 681, type: !209)
!9503 = distinct !DILexicalBlock(scope: !9484, file: !3, line: 681, column: 13)
!9504 = !DILocation(line: 681, column: 13, scope: !9503)
!9505 = !DILocation(line: 681, column: 13, scope: !9506)
!9506 = distinct !DILexicalBlock(scope: !9503, file: !3, line: 681, column: 13)
!9507 = !DILocation(line: 681, column: 11, scope: !9484)
!9508 = !DILocation(line: 682, column: 8, scope: !9484)
!9509 = !DILocation(line: 682, column: 18, scope: !9484)
!9510 = !DILocation(line: 682, column: 23, scope: !9484)
!9511 = !DILocation(line: 682, column: 6, scope: !9484)
!9512 = !DILocation(line: 684, column: 2, scope: !9484)
!9513 = !DILocalVariable(name: "genpd", scope: !9487, file: !3, line: 685, type: !214)
!9514 = !DILocation(line: 685, column: 29, scope: !9487)
!9515 = !DILocalVariable(name: "pdd", scope: !9487, file: !3, line: 686, type: !4702)
!9516 = !DILocation(line: 686, column: 26, scope: !9487)
!9517 = !DILocation(line: 688, column: 18, scope: !9487)
!9518 = !DILocation(line: 688, column: 23, scope: !9487)
!9519 = !DILocation(line: 688, column: 29, scope: !9487)
!9520 = !DILocation(line: 379, column: 2, scope: !9344, inlinedAt: !9491)
!9521 = !DILocation(line: 379, column: 2, scope: !9347, inlinedAt: !9491)
!9522 = !DILocation(line: 379, column: 2, scope: !9350, inlinedAt: !9491)
!9523 = !DILocation(line: 690, column: 9, scope: !9487)
!9524 = !DILocation(line: 690, column: 14, scope: !9487)
!9525 = !DILocation(line: 690, column: 20, scope: !9487)
!9526 = !DILocation(line: 691, column: 5, scope: !9487)
!9527 = !DILocation(line: 691, column: 10, scope: !9487)
!9528 = !DILocation(line: 691, column: 16, scope: !9487)
!9529 = !DILocation(line: 691, column: 29, scope: !9487)
!9530 = !DILocation(line: 690, column: 7, scope: !9487)
!9531 = !DILocation(line: 692, column: 7, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 692, column: 7)
!9533 = !DILocation(line: 692, column: 7, scope: !9487)
!9534 = !DILocation(line: 693, column: 16, scope: !9535)
!9535 = distinct !DILexicalBlock(scope: !9532, file: !3, line: 692, column: 12)
!9536 = !DILocation(line: 693, column: 4, scope: !9535)
!9537 = !DILocation(line: 693, column: 22, scope: !9535)
!9538 = !DILocation(line: 693, column: 25, scope: !9535)
!9539 = !DILocation(line: 693, column: 44, scope: !9535)
!9540 = !DILocation(line: 694, column: 25, scope: !9535)
!9541 = !DILocation(line: 694, column: 12, scope: !9535)
!9542 = !DILocation(line: 694, column: 10, scope: !9535)
!9543 = !DILocation(line: 695, column: 3, scope: !9535)
!9544 = !DILocation(line: 696, column: 12, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9532, file: !3, line: 695, column: 10)
!9546 = !DILocation(line: 696, column: 10, scope: !9545)
!9547 = !DILocation(line: 699, column: 20, scope: !9487)
!9548 = !DILocation(line: 699, column: 25, scope: !9487)
!9549 = !DILocation(line: 699, column: 31, scope: !9487)
!9550 = !DILocation(line: 404, column: 2, scope: !9371, inlinedAt: !9486)
!9551 = !DILocation(line: 404, column: 2, scope: !9374, inlinedAt: !9486)
!9552 = !DILocation(line: 404, column: 2, scope: !9377, inlinedAt: !9486)
!9553 = !DILocation(line: 701, column: 15, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 701, column: 7)
!9555 = !DILocation(line: 701, column: 8, scope: !9554)
!9556 = !DILocation(line: 701, column: 7, scope: !9487)
!9557 = !DILocation(line: 702, column: 4, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9554, file: !3, line: 701, column: 23)
!9559 = !DILocation(line: 703, column: 4, scope: !9558)
!9560 = !DILocation(line: 703, column: 11, scope: !9558)
!9561 = !DILocation(line: 703, column: 32, scope: !9558)
!9562 = !DILocation(line: 704, column: 4, scope: !9558)
!9563 = !DILocation(line: 705, column: 3, scope: !9558)
!9564 = !DILocation(line: 707, column: 9, scope: !9487)
!9565 = !DILocation(line: 707, column: 14, scope: !9487)
!9566 = !DILocation(line: 707, column: 7, scope: !9487)
!9567 = !DILocation(line: 708, column: 8, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 708, column: 7)
!9569 = !DILocation(line: 708, column: 12, scope: !9568)
!9570 = !DILocation(line: 708, column: 15, scope: !9568)
!9571 = !DILocation(line: 708, column: 20, scope: !9568)
!9572 = !DILocation(line: 708, column: 26, scope: !9568)
!9573 = !DILocation(line: 708, column: 7, scope: !9487)
!9574 = !DILocation(line: 709, column: 4, scope: !9568)
!9575 = !DILocation(line: 684, column: 2, scope: !9488)
!9576 = distinct !{!9576, !9577, !9578}
!9577 = !DILocation(line: 684, column: 2, scope: !9489)
!9578 = !DILocation(line: 710, column: 2, scope: !9489)
!9579 = !DILocation(line: 712, column: 2, scope: !9484)
!9580 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !9581, file: !9581, line: 656, type: !3046, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9581 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!9582 = !DILocalVariable(name: "__edi", scope: !9583, file: !9581, line: 658, type: !333)
!9583 = distinct !DILexicalBlock(scope: !9580, file: !9581, line: 658, column: 2)
!9584 = !DILocation(line: 658, column: 2, scope: !9583)
!9585 = !DILocalVariable(name: "__esi", scope: !9583, file: !9581, line: 658, type: !333)
!9586 = !DILocalVariable(name: "__edx", scope: !9583, file: !9581, line: 658, type: !333)
!9587 = !DILocalVariable(name: "__ecx", scope: !9583, file: !9581, line: 658, type: !333)
!9588 = !DILocalVariable(name: "__eax", scope: !9583, file: !9581, line: 658, type: !333)
!9589 = !{i32 -2145949945, i32 -2145949213, i32 -2145948979, i32 -2145948928, i32 -2145948900, i32 -2145948875, i32 -2145949191, i32 -2145949178, i32 -2145948740, i32 -2145948621, i32 -2145949086, i32 -2145949059, i32 -2145949031, i32 -2145949001}
!9590 = !DILocation(line: 659, column: 1, scope: !9580)
!9591 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !9581, file: !9581, line: 661, type: !3046, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9592 = !DILocalVariable(name: "__edi", scope: !9593, file: !9581, line: 663, type: !333)
!9593 = distinct !DILexicalBlock(scope: !9591, file: !9581, line: 663, column: 2)
!9594 = !DILocation(line: 663, column: 2, scope: !9593)
!9595 = !DILocalVariable(name: "__esi", scope: !9593, file: !9581, line: 663, type: !333)
!9596 = !DILocalVariable(name: "__edx", scope: !9593, file: !9581, line: 663, type: !333)
!9597 = !DILocalVariable(name: "__ecx", scope: !9593, file: !9581, line: 663, type: !333)
!9598 = !DILocalVariable(name: "__eax", scope: !9593, file: !9581, line: 663, type: !333)
!9599 = !{i32 -2145947361, i32 -2145946631, i32 -2145946397, i32 -2145946346, i32 -2145946318, i32 -2145946293, i32 -2145946609, i32 -2145946596, i32 -2145946158, i32 -2145946039, i32 -2145946504, i32 -2145946477, i32 -2145946449, i32 -2145946419}
!9600 = !DILocation(line: 664, column: 1, scope: !9591)
!9601 = distinct !DISubprogram(name: "genpd_update_cpumask", scope: !3, file: !3, line: 1469, type: !9602, scopeLine: 1471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9602 = !DISubroutineType(types: !9603)
!9603 = !{null, !214, !195, !499, !7}
!9604 = !DILocalVariable(name: "genpd", arg: 1, scope: !9601, file: !3, line: 1469, type: !214)
!9605 = !DILocation(line: 1469, column: 60, scope: !9601)
!9606 = !DILocalVariable(name: "cpu", arg: 2, scope: !9601, file: !3, line: 1470, type: !195)
!9607 = !DILocation(line: 1470, column: 10, scope: !9601)
!9608 = !DILocalVariable(name: "set", arg: 3, scope: !9601, file: !3, line: 1470, type: !499)
!9609 = !DILocation(line: 1470, column: 20, scope: !9601)
!9610 = !DILocalVariable(name: "depth", arg: 4, scope: !9601, file: !3, line: 1470, type: !7)
!9611 = !DILocation(line: 1470, column: 38, scope: !9601)
!9612 = !DILocalVariable(name: "link", scope: !9601, file: !3, line: 1472, type: !210)
!9613 = !DILocation(line: 1472, column: 19, scope: !9601)
!9614 = !DILocation(line: 1474, column: 7, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9601, file: !3, line: 1474, column: 6)
!9616 = !DILocation(line: 1474, column: 6, scope: !9601)
!9617 = !DILocation(line: 1475, column: 3, scope: !9615)
!9618 = !DILocalVariable(name: "__mptr", scope: !9619, file: !3, line: 1477, type: !209)
!9619 = distinct !DILexicalBlock(scope: !9620, file: !3, line: 1477, column: 2)
!9620 = distinct !DILexicalBlock(scope: !9601, file: !3, line: 1477, column: 2)
!9621 = !DILocation(line: 1477, column: 2, scope: !9619)
!9622 = !DILocation(line: 1477, column: 2, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9619, file: !3, line: 1477, column: 2)
!9624 = !DILocation(line: 1477, column: 2, scope: !9620)
!9625 = !DILocation(line: 1477, column: 2, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !9620, file: !3, line: 1477, column: 2)
!9627 = !DILocalVariable(name: "parent", scope: !9628, file: !3, line: 1478, type: !214)
!9628 = distinct !DILexicalBlock(scope: !9626, file: !3, line: 1477, column: 61)
!9629 = !DILocation(line: 1478, column: 29, scope: !9628)
!9630 = !DILocation(line: 1478, column: 38, scope: !9628)
!9631 = !DILocation(line: 1478, column: 44, scope: !9628)
!9632 = !DILocation(line: 1480, column: 3, scope: !9628)
!9633 = !DILocation(line: 1481, column: 24, scope: !9628)
!9634 = !DILocation(line: 1481, column: 32, scope: !9628)
!9635 = !DILocation(line: 1481, column: 37, scope: !9628)
!9636 = !DILocation(line: 1481, column: 42, scope: !9628)
!9637 = !DILocation(line: 1481, column: 48, scope: !9628)
!9638 = !DILocation(line: 1481, column: 3, scope: !9628)
!9639 = !DILocation(line: 1482, column: 3, scope: !9628)
!9640 = !DILocation(line: 1483, column: 2, scope: !9628)
!9641 = !DILocalVariable(name: "__mptr", scope: !9642, file: !3, line: 1477, type: !209)
!9642 = distinct !DILexicalBlock(scope: !9626, file: !3, line: 1477, column: 2)
!9643 = !DILocation(line: 1477, column: 2, scope: !9642)
!9644 = !DILocation(line: 1477, column: 2, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9642, file: !3, line: 1477, column: 2)
!9646 = distinct !{!9646, !9624, !9647}
!9647 = !DILocation(line: 1483, column: 2, scope: !9620)
!9648 = !DILocation(line: 1485, column: 6, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !9601, file: !3, line: 1485, column: 6)
!9650 = !DILocation(line: 1485, column: 6, scope: !9601)
!9651 = !DILocation(line: 1486, column: 19, scope: !9649)
!9652 = !DILocation(line: 1486, column: 24, scope: !9649)
!9653 = !DILocation(line: 1486, column: 31, scope: !9649)
!9654 = !DILocation(line: 1486, column: 3, scope: !9649)
!9655 = !DILocation(line: 1488, column: 21, scope: !9649)
!9656 = !DILocation(line: 1488, column: 26, scope: !9649)
!9657 = !DILocation(line: 1488, column: 33, scope: !9649)
!9658 = !DILocation(line: 1488, column: 3, scope: !9649)
!9659 = !DILocation(line: 1489, column: 1, scope: !9601)
!9660 = distinct !DISubprogram(name: "cpumask_set_cpu", scope: !2371, file: !2371, line: 332, type: !9661, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9661 = !DISubroutineType(types: !9662)
!9662 = !{null, !7, !7230}
!9663 = !DILocalVariable(name: "cpu", arg: 1, scope: !9660, file: !2371, line: 332, type: !7)
!9664 = !DILocation(line: 332, column: 49, scope: !9660)
!9665 = !DILocalVariable(name: "dstp", arg: 2, scope: !9660, file: !2371, line: 332, type: !7230)
!9666 = !DILocation(line: 332, column: 70, scope: !9660)
!9667 = !DILocation(line: 334, column: 24, scope: !9660)
!9668 = !DILocation(line: 334, column: 10, scope: !9660)
!9669 = !DILocation(line: 334, column: 30, scope: !9660)
!9670 = !DILocation(line: 334, column: 2, scope: !9660)
!9671 = !DILocation(line: 335, column: 1, scope: !9660)
!9672 = distinct !DISubprogram(name: "cpumask_clear_cpu", scope: !2371, file: !2371, line: 348, type: !9673, scopeLine: 349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9673 = !DISubroutineType(types: !9674)
!9674 = !{null, !195, !7230}
!9675 = !DILocalVariable(name: "cpu", arg: 1, scope: !9672, file: !2371, line: 348, type: !195)
!9676 = !DILocation(line: 348, column: 42, scope: !9672)
!9677 = !DILocalVariable(name: "dstp", arg: 2, scope: !9672, file: !2371, line: 348, type: !7230)
!9678 = !DILocation(line: 348, column: 63, scope: !9672)
!9679 = !DILocation(line: 350, column: 26, scope: !9672)
!9680 = !DILocation(line: 350, column: 12, scope: !9672)
!9681 = !DILocation(line: 350, column: 32, scope: !9672)
!9682 = !DILocation(line: 350, column: 2, scope: !9672)
!9683 = !DILocation(line: 351, column: 1, scope: !9672)
!9684 = distinct !DISubprogram(name: "set_bit", scope: !9685, file: !9685, line: 26, type: !9686, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9685 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!9686 = !DISubroutineType(types: !9687)
!9687 = !{null, !157, !9688}
!9688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9689, size: 64)
!9689 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !333)
!9690 = !DILocalVariable(name: "nr", arg: 1, scope: !9691, file: !9692, line: 52, type: !157)
!9691 = distinct !DISubprogram(name: "arch_set_bit", scope: !9692, file: !9692, line: 52, type: !9686, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9692 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!9693 = !DILocation(line: 52, column: 19, scope: !9691, inlinedAt: !9694)
!9694 = distinct !DILocation(line: 29, column: 2, scope: !9684)
!9695 = !DILocalVariable(name: "addr", arg: 2, scope: !9691, file: !9692, line: 52, type: !9688)
!9696 = !DILocation(line: 52, column: 47, scope: !9691, inlinedAt: !9694)
!9697 = !DILocation(line: 84, column: 74, scope: !6369, inlinedAt: !9698)
!9698 = distinct !DILocation(line: 28, column: 2, scope: !9684)
!9699 = !DILocation(line: 84, column: 84, scope: !6369, inlinedAt: !9698)
!9700 = !DILocalVariable(name: "nr", arg: 1, scope: !9684, file: !9685, line: 26, type: !157)
!9701 = !DILocation(line: 26, column: 33, scope: !9684)
!9702 = !DILocalVariable(name: "addr", arg: 2, scope: !9684, file: !9685, line: 26, type: !9688)
!9703 = !DILocation(line: 26, column: 61, scope: !9684)
!9704 = !DILocation(line: 28, column: 26, scope: !9684)
!9705 = !DILocation(line: 28, column: 33, scope: !9684)
!9706 = !DILocation(line: 28, column: 31, scope: !9684)
!9707 = !DILocation(line: 86, column: 20, scope: !6369, inlinedAt: !9698)
!9708 = !DILocation(line: 86, column: 23, scope: !6369, inlinedAt: !9698)
!9709 = !DILocation(line: 86, column: 2, scope: !6369, inlinedAt: !9698)
!9710 = !DILocation(line: 87, column: 2, scope: !6369, inlinedAt: !9698)
!9711 = !DILocation(line: 29, column: 15, scope: !9684)
!9712 = !DILocation(line: 29, column: 19, scope: !9684)
!9713 = !DILocation(line: 54, column: 27, scope: !9714, inlinedAt: !9694)
!9714 = distinct !DILexicalBlock(scope: !9691, file: !9692, line: 54, column: 6)
!9715 = !DILocation(line: 54, column: 6, scope: !9714, inlinedAt: !9694)
!9716 = !DILocation(line: 54, column: 6, scope: !9691, inlinedAt: !9694)
!9717 = !DILocation(line: 56, column: 6, scope: !9718, inlinedAt: !9694)
!9718 = distinct !DILexicalBlock(scope: !9714, file: !9692, line: 54, column: 32)
!9719 = !DILocation(line: 57, column: 12, scope: !9718, inlinedAt: !9694)
!9720 = !DILocation(line: 55, column: 3, scope: !9718, inlinedAt: !9694)
!9721 = !{i32 -2147128902}
!9722 = !DILocation(line: 59, column: 2, scope: !9718, inlinedAt: !9694)
!9723 = !DILocation(line: 61, column: 8, scope: !9724, inlinedAt: !9694)
!9724 = distinct !DILexicalBlock(scope: !9714, file: !9692, line: 59, column: 9)
!9725 = !DILocation(line: 61, column: 32, scope: !9724, inlinedAt: !9694)
!9726 = !DILocation(line: 60, column: 3, scope: !9724, inlinedAt: !9694)
!9727 = !{i32 -2147128770}
!9728 = !DILocation(line: 30, column: 1, scope: !9684)
!9729 = distinct !DISubprogram(name: "cpumask_check", scope: !2371, file: !2371, line: 142, type: !9730, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9730 = !DISubroutineType(types: !9731)
!9731 = !{!7, !7}
!9732 = !DILocalVariable(name: "cpu", arg: 1, scope: !9729, file: !2371, line: 142, type: !7)
!9733 = !DILocation(line: 142, column: 55, scope: !9729)
!9734 = !DILocation(line: 144, column: 20, scope: !9729)
!9735 = !DILocation(line: 144, column: 2, scope: !9729)
!9736 = !DILocation(line: 145, column: 9, scope: !9729)
!9737 = !DILocation(line: 145, column: 2, scope: !9729)
!9738 = distinct !DISubprogram(name: "cpu_max_bits_warn", scope: !2371, file: !2371, line: 134, type: !9739, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9739 = !DISubroutineType(types: !9740)
!9740 = !{null, !7, !7}
!9741 = !DILocalVariable(name: "cpu", arg: 1, scope: !9738, file: !2371, line: 134, type: !7)
!9742 = !DILocation(line: 134, column: 51, scope: !9738)
!9743 = !DILocalVariable(name: "bits", arg: 2, scope: !9738, file: !2371, line: 134, type: !7)
!9744 = !DILocation(line: 134, column: 69, scope: !9738)
!9745 = !DILocation(line: 139, column: 1, scope: !9738)
!9746 = distinct !DISubprogram(name: "clear_bit", scope: !9685, file: !9685, line: 39, type: !9686, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9747 = !DILocalVariable(name: "nr", arg: 1, scope: !9748, file: !9692, line: 72, type: !157)
!9748 = distinct !DISubprogram(name: "arch_clear_bit", scope: !9692, file: !9692, line: 72, type: !9686, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9749 = !DILocation(line: 72, column: 21, scope: !9748, inlinedAt: !9750)
!9750 = distinct !DILocation(line: 42, column: 2, scope: !9746)
!9751 = !DILocalVariable(name: "addr", arg: 2, scope: !9748, file: !9692, line: 72, type: !9688)
!9752 = !DILocation(line: 72, column: 49, scope: !9748, inlinedAt: !9750)
!9753 = !DILocation(line: 84, column: 74, scope: !6369, inlinedAt: !9754)
!9754 = distinct !DILocation(line: 41, column: 2, scope: !9746)
!9755 = !DILocation(line: 84, column: 84, scope: !6369, inlinedAt: !9754)
!9756 = !DILocalVariable(name: "nr", arg: 1, scope: !9746, file: !9685, line: 39, type: !157)
!9757 = !DILocation(line: 39, column: 35, scope: !9746)
!9758 = !DILocalVariable(name: "addr", arg: 2, scope: !9746, file: !9685, line: 39, type: !9688)
!9759 = !DILocation(line: 39, column: 63, scope: !9746)
!9760 = !DILocation(line: 41, column: 26, scope: !9746)
!9761 = !DILocation(line: 41, column: 33, scope: !9746)
!9762 = !DILocation(line: 41, column: 31, scope: !9746)
!9763 = !DILocation(line: 86, column: 20, scope: !6369, inlinedAt: !9754)
!9764 = !DILocation(line: 86, column: 23, scope: !6369, inlinedAt: !9754)
!9765 = !DILocation(line: 86, column: 2, scope: !6369, inlinedAt: !9754)
!9766 = !DILocation(line: 87, column: 2, scope: !6369, inlinedAt: !9754)
!9767 = !DILocation(line: 42, column: 17, scope: !9746)
!9768 = !DILocation(line: 42, column: 21, scope: !9746)
!9769 = !DILocation(line: 74, column: 27, scope: !9770, inlinedAt: !9750)
!9770 = distinct !DILexicalBlock(scope: !9748, file: !9692, line: 74, column: 6)
!9771 = !DILocation(line: 74, column: 6, scope: !9770, inlinedAt: !9750)
!9772 = !DILocation(line: 74, column: 6, scope: !9748, inlinedAt: !9750)
!9773 = !DILocation(line: 76, column: 6, scope: !9774, inlinedAt: !9750)
!9774 = distinct !DILexicalBlock(scope: !9770, file: !9692, line: 74, column: 32)
!9775 = !DILocation(line: 77, column: 13, scope: !9774, inlinedAt: !9750)
!9776 = !DILocation(line: 77, column: 12, scope: !9774, inlinedAt: !9750)
!9777 = !DILocation(line: 75, column: 3, scope: !9774, inlinedAt: !9750)
!9778 = !{i32 -2147127948}
!9779 = !DILocation(line: 78, column: 2, scope: !9774, inlinedAt: !9750)
!9780 = !DILocation(line: 80, column: 8, scope: !9781, inlinedAt: !9750)
!9781 = distinct !DILexicalBlock(scope: !9770, file: !9692, line: 78, column: 9)
!9782 = !DILocation(line: 80, column: 32, scope: !9781, inlinedAt: !9750)
!9783 = !DILocation(line: 79, column: 3, scope: !9781, inlinedAt: !9750)
!9784 = !{i32 -2147127816}
!9785 = !DILocation(line: 43, column: 1, scope: !9746)
!9786 = distinct !DISubprogram(name: "__list_add", scope: !6232, file: !6232, line: 63, type: !9787, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9787 = !DISubroutineType(types: !9788)
!9788 = !{null, !233, !233, !233}
!9789 = !DILocalVariable(name: "new", arg: 1, scope: !9786, file: !6232, line: 63, type: !233)
!9790 = !DILocation(line: 63, column: 49, scope: !9786)
!9791 = !DILocalVariable(name: "prev", arg: 2, scope: !9786, file: !6232, line: 64, type: !233)
!9792 = !DILocation(line: 64, column: 28, scope: !9786)
!9793 = !DILocalVariable(name: "next", arg: 3, scope: !9786, file: !6232, line: 65, type: !233)
!9794 = !DILocation(line: 65, column: 28, scope: !9786)
!9795 = !DILocation(line: 67, column: 24, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9786, file: !6232, line: 67, column: 6)
!9797 = !DILocation(line: 67, column: 29, scope: !9796)
!9798 = !DILocation(line: 67, column: 35, scope: !9796)
!9799 = !DILocation(line: 67, column: 7, scope: !9796)
!9800 = !DILocation(line: 67, column: 6, scope: !9786)
!9801 = !DILocation(line: 68, column: 3, scope: !9796)
!9802 = !DILocation(line: 70, column: 15, scope: !9786)
!9803 = !DILocation(line: 70, column: 2, scope: !9786)
!9804 = !DILocation(line: 70, column: 8, scope: !9786)
!9805 = !DILocation(line: 70, column: 13, scope: !9786)
!9806 = !DILocation(line: 71, column: 14, scope: !9786)
!9807 = !DILocation(line: 71, column: 2, scope: !9786)
!9808 = !DILocation(line: 71, column: 7, scope: !9786)
!9809 = !DILocation(line: 71, column: 12, scope: !9786)
!9810 = !DILocation(line: 72, column: 14, scope: !9786)
!9811 = !DILocation(line: 72, column: 2, scope: !9786)
!9812 = !DILocation(line: 72, column: 7, scope: !9786)
!9813 = !DILocation(line: 72, column: 12, scope: !9786)
!9814 = !DILocation(line: 73, column: 2, scope: !9786)
!9815 = !DILocation(line: 73, column: 2, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9786, file: !6232, line: 73, column: 2)
!9817 = !DILocation(line: 73, column: 2, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9816, file: !6232, line: 73, column: 2)
!9819 = !DILocation(line: 73, column: 2, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9816, file: !6232, line: 73, column: 2)
!9821 = !DILocation(line: 74, column: 1, scope: !9786)
!9822 = distinct !DISubprogram(name: "__list_add_valid", scope: !6232, file: !6232, line: 45, type: !9823, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9823 = !DISubroutineType(types: !9824)
!9824 = !{!499, !233, !233, !233}
!9825 = !DILocalVariable(name: "new", arg: 1, scope: !9822, file: !6232, line: 45, type: !233)
!9826 = !DILocation(line: 45, column: 55, scope: !9822)
!9827 = !DILocalVariable(name: "prev", arg: 2, scope: !9822, file: !6232, line: 46, type: !233)
!9828 = !DILocation(line: 46, column: 23, scope: !9822)
!9829 = !DILocalVariable(name: "next", arg: 3, scope: !9822, file: !6232, line: 47, type: !233)
!9830 = !DILocation(line: 47, column: 23, scope: !9822)
!9831 = !DILocation(line: 49, column: 2, scope: !9822)
!9832 = distinct !DISubprogram(name: "genpd_clear_cpumask", scope: !3, file: !3, line: 1497, type: !5085, scopeLine: 1498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9833 = !DILocalVariable(name: "genpd", arg: 1, scope: !9832, file: !3, line: 1497, type: !214)
!9834 = !DILocation(line: 1497, column: 59, scope: !9832)
!9835 = !DILocalVariable(name: "cpu", arg: 2, scope: !9832, file: !3, line: 1497, type: !195)
!9836 = !DILocation(line: 1497, column: 70, scope: !9832)
!9837 = !DILocation(line: 1499, column: 6, scope: !9838)
!9838 = distinct !DILexicalBlock(scope: !9832, file: !3, line: 1499, column: 6)
!9839 = !DILocation(line: 1499, column: 10, scope: !9838)
!9840 = !DILocation(line: 1499, column: 6, scope: !9832)
!9841 = !DILocation(line: 1500, column: 24, scope: !9838)
!9842 = !DILocation(line: 1500, column: 31, scope: !9838)
!9843 = !DILocation(line: 1500, column: 3, scope: !9838)
!9844 = !DILocation(line: 1501, column: 1, scope: !9832)
!9845 = distinct !DISubprogram(name: "list_del_init", scope: !6232, file: !6232, line: 202, type: !6247, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9846 = !DILocalVariable(name: "entry", arg: 1, scope: !9845, file: !6232, line: 202, type: !233)
!9847 = !DILocation(line: 202, column: 52, scope: !9845)
!9848 = !DILocation(line: 204, column: 19, scope: !9845)
!9849 = !DILocation(line: 204, column: 2, scope: !9845)
!9850 = !DILocation(line: 205, column: 17, scope: !9845)
!9851 = !DILocation(line: 205, column: 2, scope: !9845)
!9852 = !DILocation(line: 206, column: 1, scope: !9845)
!9853 = distinct !DISubprogram(name: "__list_del_entry", scope: !6232, file: !6232, line: 130, type: !6247, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9854 = !DILocalVariable(name: "entry", arg: 1, scope: !9853, file: !6232, line: 130, type: !233)
!9855 = !DILocation(line: 130, column: 55, scope: !9853)
!9856 = !DILocation(line: 132, column: 30, scope: !9857)
!9857 = distinct !DILexicalBlock(scope: !9853, file: !6232, line: 132, column: 6)
!9858 = !DILocation(line: 132, column: 7, scope: !9857)
!9859 = !DILocation(line: 132, column: 6, scope: !9853)
!9860 = !DILocation(line: 133, column: 3, scope: !9857)
!9861 = !DILocation(line: 135, column: 13, scope: !9853)
!9862 = !DILocation(line: 135, column: 20, scope: !9853)
!9863 = !DILocation(line: 135, column: 26, scope: !9853)
!9864 = !DILocation(line: 135, column: 33, scope: !9853)
!9865 = !DILocation(line: 135, column: 2, scope: !9853)
!9866 = !DILocation(line: 136, column: 1, scope: !9853)
!9867 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !6232, file: !6232, line: 51, type: !9868, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9868 = !DISubroutineType(types: !9869)
!9869 = !{!499, !233}
!9870 = !DILocalVariable(name: "entry", arg: 1, scope: !9867, file: !6232, line: 51, type: !233)
!9871 = !DILocation(line: 51, column: 61, scope: !9867)
!9872 = !DILocation(line: 53, column: 2, scope: !9867)
!9873 = distinct !DISubprogram(name: "__list_del", scope: !6232, file: !6232, line: 110, type: !7235, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9874 = !DILocalVariable(name: "prev", arg: 1, scope: !9873, file: !6232, line: 110, type: !233)
!9875 = !DILocation(line: 110, column: 50, scope: !9873)
!9876 = !DILocalVariable(name: "next", arg: 2, scope: !9873, file: !6232, line: 110, type: !233)
!9877 = !DILocation(line: 110, column: 75, scope: !9873)
!9878 = !DILocation(line: 112, column: 15, scope: !9873)
!9879 = !DILocation(line: 112, column: 2, scope: !9873)
!9880 = !DILocation(line: 112, column: 8, scope: !9873)
!9881 = !DILocation(line: 112, column: 13, scope: !9873)
!9882 = !DILocation(line: 113, column: 2, scope: !9873)
!9883 = !DILocation(line: 113, column: 2, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9873, file: !6232, line: 113, column: 2)
!9885 = !DILocation(line: 113, column: 2, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9884, file: !6232, line: 113, column: 2)
!9887 = !DILocation(line: 113, column: 2, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9884, file: !6232, line: 113, column: 2)
!9889 = !DILocation(line: 114, column: 1, scope: !9873)
!9890 = distinct !DISubprogram(name: "genpd_lock_spin", scope: !3, file: !3, line: 79, type: !5081, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9891 = !DILocation(line: 327, column: 67, scope: !6594, inlinedAt: !9892)
!9892 = distinct !DILocation(line: 84, column: 2, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9894, file: !3, line: 84, column: 2)
!9894 = distinct !DILexicalBlock(scope: !9895, file: !3, line: 84, column: 2)
!9895 = distinct !DILexicalBlock(scope: !9896, file: !3, line: 84, column: 2)
!9896 = distinct !DILexicalBlock(scope: !9897, file: !3, line: 84, column: 2)
!9897 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 84, column: 2)
!9898 = !DILocalVariable(name: "genpd", arg: 1, scope: !9890, file: !3, line: 79, type: !214)
!9899 = !DILocation(line: 79, column: 55, scope: !9890)
!9900 = !DILocalVariable(name: "flags", scope: !9890, file: !3, line: 82, type: !333)
!9901 = !DILocation(line: 82, column: 16, scope: !9890)
!9902 = !DILocation(line: 84, column: 2, scope: !9890)
!9903 = !DILocation(line: 84, column: 2, scope: !9897)
!9904 = !DILocalVariable(name: "__dummy", scope: !9905, file: !3, line: 84, type: !333)
!9905 = distinct !DILexicalBlock(scope: !9896, file: !3, line: 84, column: 2)
!9906 = !DILocation(line: 84, column: 2, scope: !9905)
!9907 = !DILocalVariable(name: "__dummy2", scope: !9905, file: !3, line: 84, type: !333)
!9908 = !DILocation(line: 84, column: 2, scope: !9896)
!9909 = !DILocation(line: 84, column: 2, scope: !9895)
!9910 = !DILocation(line: 84, column: 2, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9895, file: !3, line: 84, column: 2)
!9912 = !DILocalVariable(name: "__dummy", scope: !9913, file: !3, line: 84, type: !333)
!9913 = distinct !DILexicalBlock(scope: !9914, file: !3, line: 84, column: 2)
!9914 = distinct !DILexicalBlock(scope: !9911, file: !3, line: 84, column: 2)
!9915 = !DILocation(line: 84, column: 2, scope: !9913)
!9916 = !DILocalVariable(name: "__dummy2", scope: !9913, file: !3, line: 84, type: !333)
!9917 = !DILocation(line: 84, column: 2, scope: !9914)
!9918 = !DILocation(line: 84, column: 2, scope: !9894)
!9919 = !{i32 -2140692447}
!9920 = !DILocation(line: 84, column: 2, scope: !9893)
!9921 = !DILocation(line: 329, column: 10, scope: !6594, inlinedAt: !9892)
!9922 = !DILocation(line: 329, column: 16, scope: !6594, inlinedAt: !9892)
!9923 = !DILocation(line: 85, column: 22, scope: !9890)
!9924 = !DILocation(line: 85, column: 2, scope: !9890)
!9925 = !DILocation(line: 85, column: 9, scope: !9890)
!9926 = !DILocation(line: 85, column: 20, scope: !9890)
!9927 = !DILocation(line: 86, column: 1, scope: !9890)
!9928 = distinct !DISubprogram(name: "genpd_lock_nested_spin", scope: !3, file: !3, line: 88, type: !5085, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9929 = !DILocation(line: 327, column: 67, scope: !6594, inlinedAt: !9930)
!9930 = distinct !DILocation(line: 94, column: 2, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9932, file: !3, line: 94, column: 2)
!9932 = distinct !DILexicalBlock(scope: !9933, file: !3, line: 94, column: 2)
!9933 = distinct !DILexicalBlock(scope: !9934, file: !3, line: 94, column: 2)
!9934 = distinct !DILexicalBlock(scope: !9935, file: !3, line: 94, column: 2)
!9935 = distinct !DILexicalBlock(scope: !9928, file: !3, line: 94, column: 2)
!9936 = !DILocalVariable(name: "genpd", arg: 1, scope: !9928, file: !3, line: 88, type: !214)
!9937 = !DILocation(line: 88, column: 62, scope: !9928)
!9938 = !DILocalVariable(name: "depth", arg: 2, scope: !9928, file: !3, line: 89, type: !195)
!9939 = !DILocation(line: 89, column: 10, scope: !9928)
!9940 = !DILocalVariable(name: "flags", scope: !9928, file: !3, line: 92, type: !333)
!9941 = !DILocation(line: 92, column: 16, scope: !9928)
!9942 = !DILocation(line: 94, column: 2, scope: !9928)
!9943 = !DILocation(line: 94, column: 2, scope: !9935)
!9944 = !DILocalVariable(name: "__dummy", scope: !9945, file: !3, line: 94, type: !333)
!9945 = distinct !DILexicalBlock(scope: !9934, file: !3, line: 94, column: 2)
!9946 = !DILocation(line: 94, column: 2, scope: !9945)
!9947 = !DILocalVariable(name: "__dummy2", scope: !9945, file: !3, line: 94, type: !333)
!9948 = !DILocation(line: 94, column: 2, scope: !9934)
!9949 = !DILocation(line: 94, column: 2, scope: !9933)
!9950 = !DILocation(line: 94, column: 2, scope: !9951)
!9951 = distinct !DILexicalBlock(scope: !9933, file: !3, line: 94, column: 2)
!9952 = !DILocalVariable(name: "__dummy", scope: !9953, file: !3, line: 94, type: !333)
!9953 = distinct !DILexicalBlock(scope: !9954, file: !3, line: 94, column: 2)
!9954 = distinct !DILexicalBlock(scope: !9951, file: !3, line: 94, column: 2)
!9955 = !DILocation(line: 94, column: 2, scope: !9953)
!9956 = !DILocalVariable(name: "__dummy2", scope: !9953, file: !3, line: 94, type: !333)
!9957 = !DILocation(line: 94, column: 2, scope: !9954)
!9958 = !DILocation(line: 94, column: 2, scope: !9932)
!9959 = !{i32 -2140691317}
!9960 = !DILocation(line: 94, column: 2, scope: !9931)
!9961 = !DILocation(line: 329, column: 10, scope: !6594, inlinedAt: !9930)
!9962 = !DILocation(line: 329, column: 16, scope: !6594, inlinedAt: !9930)
!9963 = !DILocation(line: 95, column: 22, scope: !9928)
!9964 = !DILocation(line: 95, column: 2, scope: !9928)
!9965 = !DILocation(line: 95, column: 9, scope: !9928)
!9966 = !DILocation(line: 95, column: 20, scope: !9928)
!9967 = !DILocation(line: 96, column: 1, scope: !9928)
!9968 = distinct !DISubprogram(name: "genpd_lock_interruptible_spin", scope: !3, file: !3, line: 98, type: !5015, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9969 = !DILocation(line: 327, column: 67, scope: !6594, inlinedAt: !9970)
!9970 = distinct !DILocation(line: 103, column: 2, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9972, file: !3, line: 103, column: 2)
!9972 = distinct !DILexicalBlock(scope: !9973, file: !3, line: 103, column: 2)
!9973 = distinct !DILexicalBlock(scope: !9974, file: !3, line: 103, column: 2)
!9974 = distinct !DILexicalBlock(scope: !9975, file: !3, line: 103, column: 2)
!9975 = distinct !DILexicalBlock(scope: !9968, file: !3, line: 103, column: 2)
!9976 = !DILocalVariable(name: "genpd", arg: 1, scope: !9968, file: !3, line: 98, type: !214)
!9977 = !DILocation(line: 98, column: 68, scope: !9968)
!9978 = !DILocalVariable(name: "flags", scope: !9968, file: !3, line: 101, type: !333)
!9979 = !DILocation(line: 101, column: 16, scope: !9968)
!9980 = !DILocation(line: 103, column: 2, scope: !9968)
!9981 = !DILocation(line: 103, column: 2, scope: !9975)
!9982 = !DILocalVariable(name: "__dummy", scope: !9983, file: !3, line: 103, type: !333)
!9983 = distinct !DILexicalBlock(scope: !9974, file: !3, line: 103, column: 2)
!9984 = !DILocation(line: 103, column: 2, scope: !9983)
!9985 = !DILocalVariable(name: "__dummy2", scope: !9983, file: !3, line: 103, type: !333)
!9986 = !DILocation(line: 103, column: 2, scope: !9974)
!9987 = !DILocation(line: 103, column: 2, scope: !9973)
!9988 = !DILocation(line: 103, column: 2, scope: !9989)
!9989 = distinct !DILexicalBlock(scope: !9973, file: !3, line: 103, column: 2)
!9990 = !DILocalVariable(name: "__dummy", scope: !9991, file: !3, line: 103, type: !333)
!9991 = distinct !DILexicalBlock(scope: !9992, file: !3, line: 103, column: 2)
!9992 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 103, column: 2)
!9993 = !DILocation(line: 103, column: 2, scope: !9991)
!9994 = !DILocalVariable(name: "__dummy2", scope: !9991, file: !3, line: 103, type: !333)
!9995 = !DILocation(line: 103, column: 2, scope: !9992)
!9996 = !DILocation(line: 103, column: 2, scope: !9972)
!9997 = !{i32 -2140690284}
!9998 = !DILocation(line: 103, column: 2, scope: !9971)
!9999 = !DILocation(line: 329, column: 10, scope: !6594, inlinedAt: !9970)
!10000 = !DILocation(line: 329, column: 16, scope: !6594, inlinedAt: !9970)
!10001 = !DILocation(line: 104, column: 22, scope: !9968)
!10002 = !DILocation(line: 104, column: 2, scope: !9968)
!10003 = !DILocation(line: 104, column: 9, scope: !9968)
!10004 = !DILocation(line: 104, column: 20, scope: !9968)
!10005 = !DILocation(line: 105, column: 2, scope: !9968)
!10006 = distinct !DISubprogram(name: "genpd_unlock_spin", scope: !3, file: !3, line: 108, type: !5081, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10007 = !DILocalVariable(name: "lock", arg: 1, scope: !10008, file: !6595, line: 407, type: !2085)
!10008 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !6595, file: !6595, line: 407, type: !10009, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10009 = !DISubroutineType(types: !10010)
!10010 = !{null, !2085, !333}
!10011 = !DILocation(line: 407, column: 64, scope: !10008, inlinedAt: !10012)
!10012 = distinct !DILocation(line: 111, column: 2, scope: !10006)
!10013 = !DILocalVariable(name: "flags", arg: 2, scope: !10008, file: !6595, line: 407, type: !333)
!10014 = !DILocation(line: 407, column: 84, scope: !10008, inlinedAt: !10012)
!10015 = !DILocalVariable(name: "genpd", arg: 1, scope: !10006, file: !3, line: 108, type: !214)
!10016 = !DILocation(line: 108, column: 57, scope: !10006)
!10017 = !DILocation(line: 111, column: 26, scope: !10006)
!10018 = !DILocation(line: 111, column: 33, scope: !10006)
!10019 = !DILocation(line: 111, column: 40, scope: !10006)
!10020 = !DILocation(line: 111, column: 47, scope: !10006)
!10021 = !DILocalVariable(name: "__dummy", scope: !10022, file: !6595, line: 409, type: !333)
!10022 = distinct !DILexicalBlock(scope: !10023, file: !6595, line: 409, column: 2)
!10023 = distinct !DILexicalBlock(scope: !10008, file: !6595, line: 409, column: 2)
!10024 = !DILocation(line: 409, column: 2, scope: !10022, inlinedAt: !10012)
!10025 = !DILocalVariable(name: "__dummy2", scope: !10022, file: !6595, line: 409, type: !333)
!10026 = !DILocalVariable(name: "__dummy", scope: !10027, file: !6595, line: 409, type: !333)
!10027 = distinct !DILexicalBlock(scope: !10028, file: !6595, line: 409, column: 2)
!10028 = distinct !DILexicalBlock(scope: !10029, file: !6595, line: 409, column: 2)
!10029 = distinct !DILexicalBlock(scope: !10030, file: !6595, line: 409, column: 2)
!10030 = distinct !DILexicalBlock(scope: !10023, file: !6595, line: 409, column: 2)
!10031 = !DILocation(line: 409, column: 2, scope: !10027, inlinedAt: !10012)
!10032 = !DILocalVariable(name: "__dummy2", scope: !10027, file: !6595, line: 409, type: !333)
!10033 = !DILocation(line: 409, column: 2, scope: !10028, inlinedAt: !10012)
!10034 = !DILocation(line: 409, column: 2, scope: !10035, inlinedAt: !10012)
!10035 = distinct !DILexicalBlock(scope: !10030, file: !6595, line: 409, column: 2)
!10036 = !{i32 -2145455878}
!10037 = !DILocation(line: 409, column: 2, scope: !10038, inlinedAt: !10012)
!10038 = distinct !DILexicalBlock(scope: !10035, file: !6595, line: 409, column: 2)
!10039 = !DILocation(line: 112, column: 1, scope: !10006)
!10040 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !9581, file: !9581, line: 666, type: !10041, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10041 = !DISubroutineType(types: !10042)
!10042 = !{!333}
!10043 = !DILocalVariable(name: "f", scope: !10040, file: !9581, line: 668, type: !333)
!10044 = !DILocation(line: 668, column: 16, scope: !10040)
!10045 = !DILocation(line: 670, column: 6, scope: !10040)
!10046 = !DILocation(line: 670, column: 4, scope: !10040)
!10047 = !DILocation(line: 671, column: 2, scope: !10040)
!10048 = !DILocation(line: 672, column: 9, scope: !10040)
!10049 = !DILocation(line: 672, column: 2, scope: !10040)
!10050 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !9581, file: !9581, line: 646, type: !10041, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10051 = !DILocalVariable(name: "__ret", scope: !10052, file: !9581, line: 648, type: !333)
!10052 = distinct !DILexicalBlock(scope: !10050, file: !9581, line: 648, column: 9)
!10053 = !DILocation(line: 648, column: 9, scope: !10052)
!10054 = !DILocalVariable(name: "__edi", scope: !10052, file: !9581, line: 648, type: !333)
!10055 = !DILocalVariable(name: "__esi", scope: !10052, file: !9581, line: 648, type: !333)
!10056 = !DILocalVariable(name: "__edx", scope: !10052, file: !9581, line: 648, type: !333)
!10057 = !DILocalVariable(name: "__ecx", scope: !10052, file: !9581, line: 648, type: !333)
!10058 = !DILocalVariable(name: "__eax", scope: !10052, file: !9581, line: 648, type: !333)
!10059 = !DILocation(line: 648, column: 9, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !10061, file: !9581, line: 648, column: 9)
!10061 = distinct !DILexicalBlock(scope: !10052, file: !9581, line: 648, column: 9)
!10062 = !{i32 -2145957039, i32 -2145954724, i32 -2145954490, i32 -2145954439, i32 -2145954411, i32 -2145954386, i32 -2145954702, i32 -2145954689, i32 -2145954251, i32 -2145954132, i32 -2145954597, i32 -2145954570, i32 -2145954542, i32 -2145954512}
!10063 = !DILocalVariable(name: "__mask", scope: !10064, file: !9581, line: 648, type: !333)
!10064 = distinct !DILexicalBlock(scope: !10060, file: !9581, line: 648, column: 9)
!10065 = !DILocation(line: 648, column: 9, scope: !10064)
!10066 = !DILocation(line: 648, column: 9, scope: !10061)
!10067 = !DILocation(line: 648, column: 2, scope: !10050)
!10068 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !9581, file: !9581, line: 651, type: !10069, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10069 = !DISubroutineType(types: !10070)
!10070 = !{null, !333}
!10071 = !DILocalVariable(name: "f", arg: 1, scope: !10068, file: !9581, line: 651, type: !333)
!10072 = !DILocation(line: 651, column: 65, scope: !10068)
!10073 = !DILocalVariable(name: "__edi", scope: !10074, file: !9581, line: 653, type: !333)
!10074 = distinct !DILexicalBlock(scope: !10068, file: !9581, line: 653, column: 2)
!10075 = !DILocation(line: 653, column: 2, scope: !10074)
!10076 = !DILocalVariable(name: "__esi", scope: !10074, file: !9581, line: 653, type: !333)
!10077 = !DILocalVariable(name: "__edx", scope: !10074, file: !9581, line: 653, type: !333)
!10078 = !DILocalVariable(name: "__ecx", scope: !10074, file: !9581, line: 653, type: !333)
!10079 = !DILocalVariable(name: "__eax", scope: !10074, file: !9581, line: 653, type: !333)
!10080 = !{i32 -2145952572, i32 -2145951822, i32 -2145951588, i32 -2145951537, i32 -2145951509, i32 -2145951484, i32 -2145951800, i32 -2145951787, i32 -2145951349, i32 -2145951230, i32 -2145951695, i32 -2145951668, i32 -2145951640, i32 -2145951610}
!10081 = !DILocation(line: 654, column: 1, scope: !10068)
!10082 = distinct !DISubprogram(name: "genpd_lock_mtx", scope: !3, file: !3, line: 51, type: !5081, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10083 = !DILocalVariable(name: "genpd", arg: 1, scope: !10082, file: !3, line: 51, type: !214)
!10084 = !DILocation(line: 51, column: 54, scope: !10082)
!10085 = !DILocation(line: 53, column: 14, scope: !10082)
!10086 = !DILocation(line: 53, column: 21, scope: !10082)
!10087 = !DILocation(line: 53, column: 2, scope: !10082)
!10088 = !DILocation(line: 54, column: 1, scope: !10082)
!10089 = distinct !DISubprogram(name: "genpd_lock_nested_mtx", scope: !3, file: !3, line: 56, type: !5085, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10090 = !DILocalVariable(name: "genpd", arg: 1, scope: !10089, file: !3, line: 56, type: !214)
!10091 = !DILocation(line: 56, column: 61, scope: !10089)
!10092 = !DILocalVariable(name: "depth", arg: 2, scope: !10089, file: !3, line: 57, type: !195)
!10093 = !DILocation(line: 57, column: 10, scope: !10089)
!10094 = !DILocation(line: 59, column: 2, scope: !10089)
!10095 = !DILocation(line: 60, column: 1, scope: !10089)
!10096 = distinct !DISubprogram(name: "genpd_lock_interruptible_mtx", scope: !3, file: !3, line: 62, type: !5015, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10097 = !DILocalVariable(name: "genpd", arg: 1, scope: !10096, file: !3, line: 62, type: !214)
!10098 = !DILocation(line: 62, column: 67, scope: !10096)
!10099 = !DILocation(line: 64, column: 35, scope: !10096)
!10100 = !DILocation(line: 64, column: 42, scope: !10096)
!10101 = !DILocation(line: 64, column: 9, scope: !10096)
!10102 = !DILocation(line: 64, column: 2, scope: !10096)
!10103 = distinct !DISubprogram(name: "genpd_unlock_mtx", scope: !3, file: !3, line: 67, type: !5081, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10104 = !DILocalVariable(name: "genpd", arg: 1, scope: !10103, file: !3, line: 67, type: !214)
!10105 = !DILocation(line: 67, column: 56, scope: !10103)
!10106 = !DILocation(line: 69, column: 23, scope: !10103)
!10107 = !DILocation(line: 69, column: 30, scope: !10103)
!10108 = !DILocation(line: 69, column: 9, scope: !10103)
!10109 = !DILocation(line: 69, column: 2, scope: !10103)
!10110 = distinct !DISubprogram(name: "genpd_power_off", scope: !3, file: !3, line: 532, type: !10111, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10111 = !DISubroutineType(types: !10112)
!10112 = !{!195, !214, !499, !7}
!10113 = !DILocation(line: 23, column: 61, scope: !6293, inlinedAt: !10114)
!10114 = distinct !DILocation(line: 28, column: 9, scope: !6300, inlinedAt: !10115)
!10115 = distinct !DILocation(line: 587, column: 6, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10110, file: !3, line: 587, column: 6)
!10117 = !DILocation(line: 69, column: 73, scope: !6304, inlinedAt: !10118)
!10118 = distinct !DILocation(line: 27, column: 2, scope: !6300, inlinedAt: !10115)
!10119 = !DILocation(line: 69, column: 83, scope: !6304, inlinedAt: !10118)
!10120 = !DILocation(line: 25, column: 29, scope: !6300, inlinedAt: !10115)
!10121 = !DILocation(line: 23, column: 61, scope: !6293, inlinedAt: !10122)
!10122 = distinct !DILocation(line: 28, column: 9, scope: !6300, inlinedAt: !10123)
!10123 = distinct !DILocation(line: 555, column: 4, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10110, file: !3, line: 553, column: 6)
!10125 = !DILocation(line: 69, column: 73, scope: !6304, inlinedAt: !10126)
!10126 = distinct !DILocation(line: 27, column: 2, scope: !6300, inlinedAt: !10123)
!10127 = !DILocation(line: 69, column: 83, scope: !6304, inlinedAt: !10126)
!10128 = !DILocation(line: 25, column: 29, scope: !6300, inlinedAt: !10123)
!10129 = !DILocalVariable(name: "genpd", arg: 1, scope: !10110, file: !3, line: 532, type: !214)
!10130 = !DILocation(line: 532, column: 54, scope: !10110)
!10131 = !DILocalVariable(name: "one_dev_on", arg: 2, scope: !10110, file: !3, line: 532, type: !499)
!10132 = !DILocation(line: 532, column: 66, scope: !10110)
!10133 = !DILocalVariable(name: "depth", arg: 3, scope: !10110, file: !3, line: 533, type: !7)
!10134 = !DILocation(line: 533, column: 20, scope: !10110)
!10135 = !DILocalVariable(name: "pdd", scope: !10110, file: !3, line: 535, type: !4702)
!10136 = !DILocation(line: 535, column: 25, scope: !10110)
!10137 = !DILocalVariable(name: "link", scope: !10110, file: !3, line: 536, type: !210)
!10138 = !DILocation(line: 536, column: 19, scope: !10110)
!10139 = !DILocalVariable(name: "not_suspended", scope: !10110, file: !3, line: 537, type: !7)
!10140 = !DILocation(line: 537, column: 15, scope: !10110)
!10141 = !DILocalVariable(name: "ret", scope: !10110, file: !3, line: 538, type: !195)
!10142 = !DILocation(line: 538, column: 6, scope: !10110)
!10143 = !DILocation(line: 545, column: 7, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10110, file: !3, line: 545, column: 6)
!10145 = !DILocation(line: 545, column: 30, scope: !10144)
!10146 = !DILocation(line: 545, column: 33, scope: !10144)
!10147 = !DILocation(line: 545, column: 40, scope: !10144)
!10148 = !DILocation(line: 545, column: 55, scope: !10144)
!10149 = !DILocation(line: 545, column: 6, scope: !10110)
!10150 = !DILocation(line: 546, column: 3, scope: !10144)
!10151 = !DILocation(line: 553, column: 6, scope: !10124)
!10152 = !DILocation(line: 553, column: 32, scope: !10124)
!10153 = !DILocation(line: 554, column: 4, scope: !10124)
!10154 = !DILocation(line: 554, column: 34, scope: !10124)
!10155 = !DILocation(line: 555, column: 17, scope: !10124)
!10156 = !DILocation(line: 555, column: 24, scope: !10124)
!10157 = !DILocation(line: 27, column: 25, scope: !6300, inlinedAt: !10123)
!10158 = !DILocation(line: 71, column: 19, scope: !6304, inlinedAt: !10126)
!10159 = !DILocation(line: 71, column: 22, scope: !6304, inlinedAt: !10126)
!10160 = !DILocation(line: 71, column: 2, scope: !6304, inlinedAt: !10126)
!10161 = !DILocation(line: 72, column: 2, scope: !6304, inlinedAt: !10126)
!10162 = !DILocation(line: 28, column: 26, scope: !6300, inlinedAt: !10123)
!10163 = !DILocation(line: 29, column: 9, scope: !6293, inlinedAt: !10122)
!10164 = !DILocation(line: 555, column: 34, scope: !10124)
!10165 = !DILocation(line: 553, column: 6, scope: !10110)
!10166 = !DILocation(line: 556, column: 3, scope: !10124)
!10167 = !DILocalVariable(name: "__mptr", scope: !10168, file: !3, line: 558, type: !209)
!10168 = distinct !DILexicalBlock(scope: !10169, file: !3, line: 558, column: 2)
!10169 = distinct !DILexicalBlock(scope: !10110, file: !3, line: 558, column: 2)
!10170 = !DILocation(line: 558, column: 2, scope: !10168)
!10171 = !DILocation(line: 558, column: 2, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10168, file: !3, line: 558, column: 2)
!10173 = !DILocation(line: 558, column: 2, scope: !10169)
!10174 = !DILocation(line: 558, column: 2, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !10169, file: !3, line: 558, column: 2)
!10176 = !DILocalVariable(name: "stat", scope: !10177, file: !3, line: 559, type: !194)
!10177 = distinct !DILexicalBlock(scope: !10175, file: !3, line: 558, column: 56)
!10178 = !DILocation(line: 559, column: 28, scope: !10177)
!10179 = !DILocation(line: 561, column: 27, scope: !10177)
!10180 = !DILocation(line: 561, column: 32, scope: !10177)
!10181 = !DILocation(line: 561, column: 10, scope: !10177)
!10182 = !DILocation(line: 561, column: 8, scope: !10177)
!10183 = !DILocation(line: 562, column: 7, scope: !10184)
!10184 = distinct !DILexicalBlock(scope: !10177, file: !3, line: 562, column: 7)
!10185 = !DILocation(line: 562, column: 12, scope: !10184)
!10186 = !DILocation(line: 562, column: 7, scope: !10177)
!10187 = !DILocation(line: 563, column: 4, scope: !10184)
!10188 = !DILocation(line: 569, column: 29, scope: !10189)
!10189 = distinct !DILexicalBlock(scope: !10177, file: !3, line: 569, column: 7)
!10190 = !DILocation(line: 569, column: 34, scope: !10189)
!10191 = !DILocation(line: 569, column: 8, scope: !10189)
!10192 = !DILocation(line: 569, column: 39, scope: !10189)
!10193 = !DILocation(line: 570, column: 36, scope: !10189)
!10194 = !DILocation(line: 570, column: 41, scope: !10189)
!10195 = !DILocation(line: 570, column: 46, scope: !10189)
!10196 = !DILocation(line: 570, column: 4, scope: !10189)
!10197 = !DILocation(line: 569, column: 7, scope: !10177)
!10198 = !DILocation(line: 571, column: 17, scope: !10189)
!10199 = !DILocation(line: 571, column: 4, scope: !10189)
!10200 = !DILocation(line: 572, column: 2, scope: !10177)
!10201 = !DILocalVariable(name: "__mptr", scope: !10202, file: !3, line: 558, type: !209)
!10202 = distinct !DILexicalBlock(scope: !10175, file: !3, line: 558, column: 2)
!10203 = !DILocation(line: 558, column: 2, scope: !10202)
!10204 = !DILocation(line: 558, column: 2, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10202, file: !3, line: 558, column: 2)
!10206 = distinct !{!10206, !10173, !10207}
!10207 = !DILocation(line: 572, column: 2, scope: !10169)
!10208 = !DILocation(line: 574, column: 6, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10110, file: !3, line: 574, column: 6)
!10210 = !DILocation(line: 574, column: 20, scope: !10209)
!10211 = !DILocation(line: 574, column: 24, scope: !10209)
!10212 = !DILocation(line: 574, column: 28, scope: !10209)
!10213 = !DILocation(line: 574, column: 42, scope: !10209)
!10214 = !DILocation(line: 574, column: 47, scope: !10209)
!10215 = !DILocation(line: 574, column: 51, scope: !10209)
!10216 = !DILocation(line: 574, column: 6, scope: !10110)
!10217 = !DILocation(line: 575, column: 3, scope: !10209)
!10218 = !DILocation(line: 577, column: 6, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10110, file: !3, line: 577, column: 6)
!10220 = !DILocation(line: 577, column: 13, scope: !10219)
!10221 = !DILocation(line: 577, column: 17, scope: !10219)
!10222 = !DILocation(line: 577, column: 20, scope: !10219)
!10223 = !DILocation(line: 577, column: 27, scope: !10219)
!10224 = !DILocation(line: 577, column: 32, scope: !10219)
!10225 = !DILocation(line: 577, column: 6, scope: !10110)
!10226 = !DILocation(line: 578, column: 8, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10228, file: !3, line: 578, column: 7)
!10228 = distinct !DILexicalBlock(scope: !10219, file: !3, line: 577, column: 47)
!10229 = !DILocation(line: 578, column: 15, scope: !10227)
!10230 = !DILocation(line: 578, column: 20, scope: !10227)
!10231 = !DILocation(line: 578, column: 35, scope: !10227)
!10232 = !DILocation(line: 578, column: 42, scope: !10227)
!10233 = !DILocation(line: 578, column: 7, scope: !10228)
!10234 = !DILocation(line: 579, column: 4, scope: !10227)
!10235 = !DILocation(line: 580, column: 2, scope: !10228)
!10236 = !DILocation(line: 583, column: 7, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !10110, file: !3, line: 583, column: 6)
!10238 = !DILocation(line: 583, column: 14, scope: !10237)
!10239 = !DILocation(line: 583, column: 6, scope: !10110)
!10240 = !DILocation(line: 584, column: 3, scope: !10237)
!10241 = !DILocation(line: 584, column: 10, scope: !10237)
!10242 = !DILocation(line: 584, column: 20, scope: !10237)
!10243 = !DILocation(line: 587, column: 19, scope: !10116)
!10244 = !DILocation(line: 587, column: 26, scope: !10116)
!10245 = !DILocation(line: 27, column: 25, scope: !6300, inlinedAt: !10115)
!10246 = !DILocation(line: 71, column: 19, scope: !6304, inlinedAt: !10118)
!10247 = !DILocation(line: 71, column: 22, scope: !6304, inlinedAt: !10118)
!10248 = !DILocation(line: 71, column: 2, scope: !6304, inlinedAt: !10118)
!10249 = !DILocation(line: 72, column: 2, scope: !6304, inlinedAt: !10118)
!10250 = !DILocation(line: 28, column: 26, scope: !6300, inlinedAt: !10115)
!10251 = !DILocation(line: 29, column: 9, scope: !6293, inlinedAt: !10114)
!10252 = !DILocation(line: 587, column: 36, scope: !10116)
!10253 = !DILocation(line: 587, column: 6, scope: !10110)
!10254 = !DILocation(line: 588, column: 3, scope: !10116)
!10255 = !DILocation(line: 590, column: 25, scope: !10110)
!10256 = !DILocation(line: 590, column: 8, scope: !10110)
!10257 = !DILocation(line: 590, column: 6, scope: !10110)
!10258 = !DILocation(line: 591, column: 6, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10110, file: !3, line: 591, column: 6)
!10260 = !DILocation(line: 591, column: 6, scope: !10110)
!10261 = !DILocation(line: 592, column: 3, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10259, file: !3, line: 591, column: 11)
!10263 = !DILocation(line: 592, column: 10, scope: !10262)
!10264 = !DILocation(line: 592, column: 17, scope: !10262)
!10265 = !DILocation(line: 592, column: 24, scope: !10262)
!10266 = !DILocation(line: 592, column: 35, scope: !10262)
!10267 = !DILocation(line: 592, column: 43, scope: !10262)
!10268 = !DILocation(line: 593, column: 10, scope: !10262)
!10269 = !DILocation(line: 593, column: 3, scope: !10262)
!10270 = !DILocation(line: 596, column: 2, scope: !10110)
!10271 = !DILocation(line: 596, column: 9, scope: !10110)
!10272 = !DILocation(line: 596, column: 16, scope: !10110)
!10273 = !DILocation(line: 597, column: 26, scope: !10110)
!10274 = !DILocation(line: 597, column: 2, scope: !10110)
!10275 = !DILocation(line: 598, column: 2, scope: !10110)
!10276 = !DILocation(line: 598, column: 9, scope: !10110)
!10277 = !DILocation(line: 598, column: 16, scope: !10110)
!10278 = !DILocation(line: 598, column: 23, scope: !10110)
!10279 = !DILocation(line: 598, column: 34, scope: !10110)
!10280 = !DILocation(line: 598, column: 39, scope: !10110)
!10281 = !DILocalVariable(name: "__mptr", scope: !10282, file: !3, line: 600, type: !209)
!10282 = distinct !DILexicalBlock(scope: !10283, file: !3, line: 600, column: 2)
!10283 = distinct !DILexicalBlock(scope: !10110, file: !3, line: 600, column: 2)
!10284 = !DILocation(line: 600, column: 2, scope: !10282)
!10285 = !DILocation(line: 600, column: 2, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !10282, file: !3, line: 600, column: 2)
!10287 = !DILocation(line: 600, column: 2, scope: !10283)
!10288 = !DILocation(line: 600, column: 2, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10283, file: !3, line: 600, column: 2)
!10290 = !DILocation(line: 601, column: 24, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !10289, file: !3, line: 600, column: 61)
!10292 = !DILocation(line: 601, column: 30, scope: !10291)
!10293 = !DILocation(line: 601, column: 3, scope: !10291)
!10294 = !DILocation(line: 602, column: 3, scope: !10291)
!10295 = !DILocation(line: 603, column: 19, scope: !10291)
!10296 = !DILocation(line: 603, column: 25, scope: !10291)
!10297 = !DILocation(line: 603, column: 40, scope: !10291)
!10298 = !DILocation(line: 603, column: 46, scope: !10291)
!10299 = !DILocation(line: 603, column: 3, scope: !10291)
!10300 = !DILocation(line: 604, column: 3, scope: !10291)
!10301 = !DILocation(line: 605, column: 2, scope: !10291)
!10302 = !DILocalVariable(name: "__mptr", scope: !10303, file: !3, line: 600, type: !209)
!10303 = distinct !DILexicalBlock(scope: !10289, file: !3, line: 600, column: 2)
!10304 = !DILocation(line: 600, column: 2, scope: !10303)
!10305 = !DILocation(line: 600, column: 2, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !10303, file: !3, line: 600, column: 2)
!10307 = distinct !{!10307, !10287, !10308}
!10308 = !DILocation(line: 605, column: 2, scope: !10283)
!10309 = !DILocation(line: 607, column: 2, scope: !10110)
!10310 = !DILocation(line: 608, column: 1, scope: !10110)
!10311 = distinct !DISubprogram(name: "pm_runtime_suspended", scope: !10312, file: !10312, line: 120, type: !4998, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10312 = !DIFile(filename: "./include/linux/pm_runtime.h", directory: "/home/lizy2001/genbc/linux")
!10313 = !DILocalVariable(name: "dev", arg: 1, scope: !10311, file: !10312, line: 120, type: !1695)
!10314 = !DILocation(line: 120, column: 56, scope: !10311)
!10315 = !DILocation(line: 122, column: 9, scope: !10311)
!10316 = !DILocation(line: 122, column: 14, scope: !10311)
!10317 = !DILocation(line: 122, column: 20, scope: !10311)
!10318 = !DILocation(line: 122, column: 35, scope: !10311)
!10319 = !DILocation(line: 123, column: 3, scope: !10311)
!10320 = !DILocation(line: 123, column: 7, scope: !10311)
!10321 = !DILocation(line: 123, column: 12, scope: !10311)
!10322 = !DILocation(line: 123, column: 18, scope: !10311)
!10323 = !DILocation(line: 123, column: 6, scope: !10311)
!10324 = !DILocation(line: 0, scope: !10311)
!10325 = !DILocation(line: 122, column: 2, scope: !10311)
!10326 = !DILocalVariable(name: "dev", arg: 1, scope: !5182, file: !3, line: 133, type: !1695)
!10327 = !DILocation(line: 133, column: 67, scope: !5182)
!10328 = !DILocalVariable(name: "genpd", arg: 2, scope: !5182, file: !3, line: 134, type: !5151)
!10329 = !DILocation(line: 134, column: 35, scope: !5182)
!10330 = !DILocalVariable(name: "ret", scope: !5182, file: !3, line: 136, type: !499)
!10331 = !DILocation(line: 136, column: 7, scope: !5182)
!10332 = !DILocation(line: 138, column: 31, scope: !5182)
!10333 = !DILocation(line: 138, column: 8, scope: !5182)
!10334 = !DILocation(line: 138, column: 36, scope: !5182)
!10335 = !DILocation(line: 138, column: 40, scope: !5182)
!10336 = !DILocation(line: 138, column: 39, scope: !5182)
!10337 = !DILocation(line: 0, scope: !5182)
!10338 = !DILocation(line: 138, column: 6, scope: !5182)
!10339 = !DILocation(line: 145, column: 6, scope: !10340)
!10340 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 145, column: 6)
!10341 = !DILocation(line: 145, column: 10, scope: !10340)
!10342 = !DILocation(line: 145, column: 14, scope: !10340)
!10343 = !DILocation(line: 145, column: 6, scope: !5182)
!10344 = !DILocation(line: 146, column: 3, scope: !10340)
!10345 = !DILocation(line: 146, column: 3, scope: !10346)
!10346 = distinct !DILexicalBlock(scope: !10347, file: !3, line: 146, column: 3)
!10347 = distinct !DILexicalBlock(scope: !10340, file: !3, line: 146, column: 3)
!10348 = !DILocation(line: 146, column: 3, scope: !10347)
!10349 = !DILocation(line: 146, column: 3, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10346, file: !3, line: 146, column: 3)
!10351 = !DILocation(line: 149, column: 9, scope: !5182)
!10352 = !DILocation(line: 149, column: 2, scope: !5182)
!10353 = distinct !DISubprogram(name: "genpd_update_accounting", scope: !3, file: !3, line: 237, type: !5081, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10354 = !DILocalVariable(name: "genpd", arg: 1, scope: !10353, file: !3, line: 237, type: !214)
!10355 = !DILocation(line: 237, column: 70, scope: !10353)
!10356 = !DILocation(line: 237, column: 78, scope: !10353)
!10357 = distinct !DISubprogram(name: "pm_runtime_is_irq_safe", scope: !10312, file: !10312, line: 207, type: !4998, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10358 = !DILocalVariable(name: "dev", arg: 1, scope: !10357, file: !10312, line: 207, type: !1695)
!10359 = !DILocation(line: 207, column: 58, scope: !10357)
!10360 = !DILocation(line: 209, column: 9, scope: !10357)
!10361 = !DILocation(line: 209, column: 14, scope: !10357)
!10362 = !DILocation(line: 209, column: 20, scope: !10357)
!10363 = !DILocation(line: 209, column: 2, scope: !10357)
!10364 = distinct !DISubprogram(name: "dev_gpd_data", scope: !146, file: !146, line: 203, type: !9286, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10365 = !DILocalVariable(name: "dev", arg: 1, scope: !10364, file: !146, line: 203, type: !1695)
!10366 = !DILocation(line: 203, column: 74, scope: !10364)
!10367 = !DILocation(line: 205, column: 21, scope: !10364)
!10368 = !DILocation(line: 205, column: 26, scope: !10364)
!10369 = !DILocation(line: 205, column: 32, scope: !10364)
!10370 = !DILocation(line: 205, column: 45, scope: !10364)
!10371 = !DILocation(line: 205, column: 9, scope: !10364)
!10372 = !DILocation(line: 205, column: 2, scope: !10364)
!10373 = distinct !DISubprogram(name: "pm_runtime_enabled", scope: !10312, file: !10312, line: 170, type: !4998, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10374 = !DILocalVariable(name: "dev", arg: 1, scope: !10373, file: !10312, line: 170, type: !1695)
!10375 = !DILocation(line: 170, column: 54, scope: !10373)
!10376 = !DILocation(line: 172, column: 10, scope: !10373)
!10377 = !DILocation(line: 172, column: 15, scope: !10373)
!10378 = !DILocation(line: 172, column: 21, scope: !10373)
!10379 = !DILocation(line: 172, column: 9, scope: !10373)
!10380 = !DILocation(line: 172, column: 2, scope: !10373)
!10381 = distinct !DISubprogram(name: "__genpd_runtime_suspend", scope: !3, file: !3, line: 734, type: !4483, scopeLine: 735, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10382 = !DILocalVariable(name: "dev", arg: 1, scope: !10381, file: !3, line: 734, type: !1695)
!10383 = !DILocation(line: 734, column: 51, scope: !10381)
!10384 = !DILocalVariable(name: "cb", scope: !10381, file: !3, line: 736, type: !4482)
!10385 = !DILocation(line: 736, column: 8, scope: !10381)
!10386 = !DILocation(line: 738, column: 6, scope: !10387)
!10387 = distinct !DILexicalBlock(scope: !10381, file: !3, line: 738, column: 6)
!10388 = !DILocation(line: 738, column: 11, scope: !10387)
!10389 = !DILocation(line: 738, column: 16, scope: !10387)
!10390 = !DILocation(line: 738, column: 19, scope: !10387)
!10391 = !DILocation(line: 738, column: 24, scope: !10387)
!10392 = !DILocation(line: 738, column: 30, scope: !10387)
!10393 = !DILocation(line: 738, column: 6, scope: !10381)
!10394 = !DILocation(line: 739, column: 8, scope: !10387)
!10395 = !DILocation(line: 739, column: 13, scope: !10387)
!10396 = !DILocation(line: 739, column: 19, scope: !10387)
!10397 = !DILocation(line: 739, column: 23, scope: !10387)
!10398 = !DILocation(line: 739, column: 6, scope: !10387)
!10399 = !DILocation(line: 739, column: 3, scope: !10387)
!10400 = !DILocation(line: 740, column: 11, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10387, file: !3, line: 740, column: 11)
!10402 = !DILocation(line: 740, column: 16, scope: !10401)
!10403 = !DILocation(line: 740, column: 22, scope: !10401)
!10404 = !DILocation(line: 740, column: 25, scope: !10401)
!10405 = !DILocation(line: 740, column: 30, scope: !10401)
!10406 = !DILocation(line: 740, column: 37, scope: !10401)
!10407 = !DILocation(line: 740, column: 11, scope: !10387)
!10408 = !DILocation(line: 741, column: 8, scope: !10401)
!10409 = !DILocation(line: 741, column: 13, scope: !10401)
!10410 = !DILocation(line: 741, column: 20, scope: !10401)
!10411 = !DILocation(line: 741, column: 24, scope: !10401)
!10412 = !DILocation(line: 741, column: 6, scope: !10401)
!10413 = !DILocation(line: 741, column: 3, scope: !10401)
!10414 = !DILocation(line: 742, column: 11, scope: !10415)
!10415 = distinct !DILexicalBlock(scope: !10401, file: !3, line: 742, column: 11)
!10416 = !DILocation(line: 742, column: 16, scope: !10415)
!10417 = !DILocation(line: 742, column: 20, scope: !10415)
!10418 = !DILocation(line: 742, column: 23, scope: !10415)
!10419 = !DILocation(line: 742, column: 28, scope: !10415)
!10420 = !DILocation(line: 742, column: 33, scope: !10415)
!10421 = !DILocation(line: 742, column: 11, scope: !10401)
!10422 = !DILocation(line: 743, column: 8, scope: !10415)
!10423 = !DILocation(line: 743, column: 13, scope: !10415)
!10424 = !DILocation(line: 743, column: 18, scope: !10415)
!10425 = !DILocation(line: 743, column: 22, scope: !10415)
!10426 = !DILocation(line: 743, column: 6, scope: !10415)
!10427 = !DILocation(line: 743, column: 3, scope: !10415)
!10428 = !DILocation(line: 745, column: 6, scope: !10415)
!10429 = !DILocation(line: 747, column: 7, scope: !10430)
!10430 = distinct !DILexicalBlock(scope: !10381, file: !3, line: 747, column: 6)
!10431 = !DILocation(line: 747, column: 10, scope: !10430)
!10432 = !DILocation(line: 747, column: 13, scope: !10430)
!10433 = !DILocation(line: 747, column: 18, scope: !10430)
!10434 = !DILocation(line: 747, column: 25, scope: !10430)
!10435 = !DILocation(line: 747, column: 28, scope: !10430)
!10436 = !DILocation(line: 747, column: 33, scope: !10430)
!10437 = !DILocation(line: 747, column: 41, scope: !10430)
!10438 = !DILocation(line: 747, column: 6, scope: !10381)
!10439 = !DILocation(line: 748, column: 8, scope: !10430)
!10440 = !DILocation(line: 748, column: 13, scope: !10430)
!10441 = !DILocation(line: 748, column: 21, scope: !10430)
!10442 = !DILocation(line: 748, column: 25, scope: !10430)
!10443 = !DILocation(line: 748, column: 6, scope: !10430)
!10444 = !DILocation(line: 748, column: 3, scope: !10430)
!10445 = !DILocation(line: 750, column: 9, scope: !10381)
!10446 = !DILocation(line: 750, column: 14, scope: !10381)
!10447 = !DILocation(line: 750, column: 17, scope: !10381)
!10448 = !DILocation(line: 750, column: 2, scope: !10381)
!10449 = distinct !DISubprogram(name: "genpd_stop_dev", scope: !3, file: !3, line: 184, type: !10450, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10450 = !DISubroutineType(types: !10451)
!10451 = !{!195, !5151, !1695}
!10452 = !DILocalVariable(name: "genpd", arg: 1, scope: !10449, file: !3, line: 184, type: !5151)
!10453 = !DILocation(line: 184, column: 59, scope: !10449)
!10454 = !DILocalVariable(name: "dev", arg: 2, scope: !10449, file: !3, line: 185, type: !1695)
!10455 = !DILocation(line: 185, column: 21, scope: !10449)
!10456 = !DILocalVariable(name: "__routine", scope: !10457, file: !3, line: 187, type: !4482)
!10457 = distinct !DILexicalBlock(scope: !10449, file: !3, line: 187, column: 9)
!10458 = !DILocation(line: 187, column: 9, scope: !10457)
!10459 = !DILocalVariable(name: "__ret", scope: !10457, file: !3, line: 187, type: !195)
!10460 = !DILocation(line: 187, column: 9, scope: !10461)
!10461 = distinct !DILexicalBlock(scope: !10457, file: !3, line: 187, column: 9)
!10462 = !DILocation(line: 187, column: 9, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10461, file: !3, line: 187, column: 9)
!10464 = !DILocation(line: 187, column: 2, scope: !10449)
!10465 = distinct !DISubprogram(name: "__genpd_runtime_resume", scope: !3, file: !3, line: 757, type: !4483, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10466 = !DILocalVariable(name: "dev", arg: 1, scope: !10465, file: !3, line: 757, type: !1695)
!10467 = !DILocation(line: 757, column: 50, scope: !10465)
!10468 = !DILocalVariable(name: "cb", scope: !10465, file: !3, line: 759, type: !4482)
!10469 = !DILocation(line: 759, column: 8, scope: !10465)
!10470 = !DILocation(line: 761, column: 6, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10465, file: !3, line: 761, column: 6)
!10472 = !DILocation(line: 761, column: 11, scope: !10471)
!10473 = !DILocation(line: 761, column: 16, scope: !10471)
!10474 = !DILocation(line: 761, column: 19, scope: !10471)
!10475 = !DILocation(line: 761, column: 24, scope: !10471)
!10476 = !DILocation(line: 761, column: 30, scope: !10471)
!10477 = !DILocation(line: 761, column: 6, scope: !10465)
!10478 = !DILocation(line: 762, column: 8, scope: !10471)
!10479 = !DILocation(line: 762, column: 13, scope: !10471)
!10480 = !DILocation(line: 762, column: 19, scope: !10471)
!10481 = !DILocation(line: 762, column: 23, scope: !10471)
!10482 = !DILocation(line: 762, column: 6, scope: !10471)
!10483 = !DILocation(line: 762, column: 3, scope: !10471)
!10484 = !DILocation(line: 763, column: 11, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10471, file: !3, line: 763, column: 11)
!10486 = !DILocation(line: 763, column: 16, scope: !10485)
!10487 = !DILocation(line: 763, column: 22, scope: !10485)
!10488 = !DILocation(line: 763, column: 25, scope: !10485)
!10489 = !DILocation(line: 763, column: 30, scope: !10485)
!10490 = !DILocation(line: 763, column: 37, scope: !10485)
!10491 = !DILocation(line: 763, column: 11, scope: !10471)
!10492 = !DILocation(line: 764, column: 8, scope: !10485)
!10493 = !DILocation(line: 764, column: 13, scope: !10485)
!10494 = !DILocation(line: 764, column: 20, scope: !10485)
!10495 = !DILocation(line: 764, column: 24, scope: !10485)
!10496 = !DILocation(line: 764, column: 6, scope: !10485)
!10497 = !DILocation(line: 764, column: 3, scope: !10485)
!10498 = !DILocation(line: 765, column: 11, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10485, file: !3, line: 765, column: 11)
!10500 = !DILocation(line: 765, column: 16, scope: !10499)
!10501 = !DILocation(line: 765, column: 20, scope: !10499)
!10502 = !DILocation(line: 765, column: 23, scope: !10499)
!10503 = !DILocation(line: 765, column: 28, scope: !10499)
!10504 = !DILocation(line: 765, column: 33, scope: !10499)
!10505 = !DILocation(line: 765, column: 11, scope: !10485)
!10506 = !DILocation(line: 766, column: 8, scope: !10499)
!10507 = !DILocation(line: 766, column: 13, scope: !10499)
!10508 = !DILocation(line: 766, column: 18, scope: !10499)
!10509 = !DILocation(line: 766, column: 22, scope: !10499)
!10510 = !DILocation(line: 766, column: 6, scope: !10499)
!10511 = !DILocation(line: 766, column: 3, scope: !10499)
!10512 = !DILocation(line: 768, column: 6, scope: !10499)
!10513 = !DILocation(line: 770, column: 7, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10465, file: !3, line: 770, column: 6)
!10515 = !DILocation(line: 770, column: 10, scope: !10514)
!10516 = !DILocation(line: 770, column: 13, scope: !10514)
!10517 = !DILocation(line: 770, column: 18, scope: !10514)
!10518 = !DILocation(line: 770, column: 25, scope: !10514)
!10519 = !DILocation(line: 770, column: 28, scope: !10514)
!10520 = !DILocation(line: 770, column: 33, scope: !10514)
!10521 = !DILocation(line: 770, column: 41, scope: !10514)
!10522 = !DILocation(line: 770, column: 6, scope: !10465)
!10523 = !DILocation(line: 771, column: 8, scope: !10514)
!10524 = !DILocation(line: 771, column: 13, scope: !10514)
!10525 = !DILocation(line: 771, column: 21, scope: !10514)
!10526 = !DILocation(line: 771, column: 25, scope: !10514)
!10527 = !DILocation(line: 771, column: 6, scope: !10514)
!10528 = !DILocation(line: 771, column: 3, scope: !10514)
!10529 = !DILocation(line: 773, column: 9, scope: !10465)
!10530 = !DILocation(line: 773, column: 14, scope: !10465)
!10531 = !DILocation(line: 773, column: 17, scope: !10465)
!10532 = !DILocation(line: 773, column: 2, scope: !10465)
!10533 = distinct !DISubprogram(name: "genpd_power_on", scope: !3, file: !3, line: 618, type: !5034, scopeLine: 619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10534 = !DILocalVariable(name: "genpd", arg: 1, scope: !10533, file: !3, line: 618, type: !214)
!10535 = !DILocation(line: 618, column: 53, scope: !10533)
!10536 = !DILocalVariable(name: "depth", arg: 2, scope: !10533, file: !3, line: 618, type: !7)
!10537 = !DILocation(line: 618, column: 73, scope: !10533)
!10538 = !DILocalVariable(name: "link", scope: !10533, file: !3, line: 620, type: !210)
!10539 = !DILocation(line: 620, column: 19, scope: !10533)
!10540 = !DILocalVariable(name: "ret", scope: !10533, file: !3, line: 621, type: !195)
!10541 = !DILocation(line: 621, column: 6, scope: !10533)
!10542 = !DILocation(line: 623, column: 6, scope: !10543)
!10543 = distinct !DILexicalBlock(scope: !10533, file: !3, line: 623, column: 6)
!10544 = !DILocation(line: 623, column: 6, scope: !10533)
!10545 = !DILocation(line: 624, column: 3, scope: !10543)
!10546 = !DILocalVariable(name: "__mptr", scope: !10547, file: !3, line: 631, type: !209)
!10547 = distinct !DILexicalBlock(scope: !10548, file: !3, line: 631, column: 2)
!10548 = distinct !DILexicalBlock(scope: !10533, file: !3, line: 631, column: 2)
!10549 = !DILocation(line: 631, column: 2, scope: !10547)
!10550 = !DILocation(line: 631, column: 2, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10547, file: !3, line: 631, column: 2)
!10552 = !DILocation(line: 631, column: 2, scope: !10548)
!10553 = !DILocation(line: 631, column: 2, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10548, file: !3, line: 631, column: 2)
!10555 = !DILocalVariable(name: "parent", scope: !10556, file: !3, line: 632, type: !214)
!10556 = distinct !DILexicalBlock(scope: !10554, file: !3, line: 631, column: 61)
!10557 = !DILocation(line: 632, column: 29, scope: !10556)
!10558 = !DILocation(line: 632, column: 38, scope: !10556)
!10559 = !DILocation(line: 632, column: 44, scope: !10556)
!10560 = !DILocation(line: 634, column: 24, scope: !10556)
!10561 = !DILocation(line: 634, column: 3, scope: !10556)
!10562 = !DILocation(line: 636, column: 3, scope: !10556)
!10563 = !DILocation(line: 637, column: 24, scope: !10556)
!10564 = !DILocation(line: 637, column: 32, scope: !10556)
!10565 = !DILocation(line: 637, column: 38, scope: !10556)
!10566 = !DILocation(line: 637, column: 9, scope: !10556)
!10567 = !DILocation(line: 637, column: 7, scope: !10556)
!10568 = !DILocation(line: 638, column: 3, scope: !10556)
!10569 = !DILocation(line: 640, column: 7, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10556, file: !3, line: 640, column: 7)
!10571 = !DILocation(line: 640, column: 7, scope: !10556)
!10572 = !DILocation(line: 641, column: 25, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !10570, file: !3, line: 640, column: 12)
!10574 = !DILocation(line: 641, column: 4, scope: !10573)
!10575 = !DILocation(line: 642, column: 4, scope: !10573)
!10576 = !DILocation(line: 644, column: 2, scope: !10556)
!10577 = !DILocalVariable(name: "__mptr", scope: !10578, file: !3, line: 631, type: !209)
!10578 = distinct !DILexicalBlock(scope: !10554, file: !3, line: 631, column: 2)
!10579 = !DILocation(line: 631, column: 2, scope: !10578)
!10580 = !DILocation(line: 631, column: 2, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10578, file: !3, line: 631, column: 2)
!10582 = distinct !{!10582, !10552, !10583}
!10583 = !DILocation(line: 644, column: 2, scope: !10548)
!10584 = !DILocation(line: 646, column: 24, scope: !10533)
!10585 = !DILocation(line: 646, column: 8, scope: !10533)
!10586 = !DILocation(line: 646, column: 6, scope: !10533)
!10587 = !DILocation(line: 647, column: 6, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10533, file: !3, line: 647, column: 6)
!10589 = !DILocation(line: 647, column: 6, scope: !10533)
!10590 = !DILocation(line: 648, column: 3, scope: !10588)
!10591 = !DILocation(line: 650, column: 2, scope: !10533)
!10592 = !DILocation(line: 650, column: 9, scope: !10533)
!10593 = !DILocation(line: 650, column: 16, scope: !10533)
!10594 = !DILocation(line: 651, column: 26, scope: !10533)
!10595 = !DILocation(line: 651, column: 2, scope: !10533)
!10596 = !DILocation(line: 653, column: 2, scope: !10533)
!10597 = !DILabel(scope: !10533, name: "err", file: !3, line: 655)
!10598 = !DILocation(line: 655, column: 2, scope: !10533)
!10599 = !DILocalVariable(name: "__mptr", scope: !10600, file: !3, line: 656, type: !209)
!10600 = distinct !DILexicalBlock(scope: !10601, file: !3, line: 656, column: 2)
!10601 = distinct !DILexicalBlock(scope: !10533, file: !3, line: 656, column: 2)
!10602 = !DILocation(line: 656, column: 2, scope: !10600)
!10603 = !DILocation(line: 656, column: 2, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10600, file: !3, line: 656, column: 2)
!10605 = !DILocation(line: 656, column: 2, scope: !10601)
!10606 = !DILocation(line: 656, column: 2, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10601, file: !3, line: 656, column: 2)
!10608 = !DILocation(line: 659, column: 24, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10607, file: !3, line: 658, column: 18)
!10610 = !DILocation(line: 659, column: 30, scope: !10609)
!10611 = !DILocation(line: 659, column: 3, scope: !10609)
!10612 = !DILocation(line: 660, column: 3, scope: !10609)
!10613 = !DILocation(line: 661, column: 19, scope: !10609)
!10614 = !DILocation(line: 661, column: 25, scope: !10609)
!10615 = !DILocation(line: 661, column: 40, scope: !10609)
!10616 = !DILocation(line: 661, column: 46, scope: !10609)
!10617 = !DILocation(line: 661, column: 3, scope: !10609)
!10618 = !DILocation(line: 662, column: 3, scope: !10609)
!10619 = !DILocation(line: 663, column: 2, scope: !10609)
!10620 = !DILocalVariable(name: "__mptr", scope: !10621, file: !3, line: 656, type: !209)
!10621 = distinct !DILexicalBlock(scope: !10607, file: !3, line: 656, column: 2)
!10622 = !DILocation(line: 656, column: 2, scope: !10621)
!10623 = !DILocation(line: 656, column: 2, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !10621, file: !3, line: 656, column: 2)
!10625 = distinct !{!10625, !10605, !10626}
!10626 = !DILocation(line: 663, column: 2, scope: !10601)
!10627 = !DILocation(line: 665, column: 9, scope: !10533)
!10628 = !DILocation(line: 665, column: 2, scope: !10533)
!10629 = !DILocation(line: 666, column: 1, scope: !10533)
!10630 = distinct !DISubprogram(name: "genpd_start_dev", scope: !3, file: !3, line: 190, type: !10450, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10631 = !DILocalVariable(name: "genpd", arg: 1, scope: !10630, file: !3, line: 190, type: !5151)
!10632 = !DILocation(line: 190, column: 60, scope: !10630)
!10633 = !DILocalVariable(name: "dev", arg: 2, scope: !10630, file: !3, line: 191, type: !1695)
!10634 = !DILocation(line: 191, column: 22, scope: !10630)
!10635 = !DILocalVariable(name: "__routine", scope: !10636, file: !3, line: 193, type: !4482)
!10636 = distinct !DILexicalBlock(scope: !10630, file: !3, line: 193, column: 9)
!10637 = !DILocation(line: 193, column: 9, scope: !10636)
!10638 = !DILocalVariable(name: "__ret", scope: !10636, file: !3, line: 193, type: !195)
!10639 = !DILocation(line: 193, column: 9, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10636, file: !3, line: 193, column: 9)
!10641 = !DILocation(line: 193, column: 9, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !10640, file: !3, line: 193, column: 9)
!10643 = !DILocation(line: 193, column: 2, scope: !10630)
!10644 = distinct !DISubprogram(name: "resume_needed", scope: !3, file: !3, line: 1060, type: !5183, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10645 = !DILocalVariable(name: "dev", arg: 1, scope: !10644, file: !3, line: 1060, type: !1695)
!10646 = !DILocation(line: 1060, column: 42, scope: !10644)
!10647 = !DILocalVariable(name: "genpd", arg: 2, scope: !10644, file: !3, line: 1061, type: !5151)
!10648 = !DILocation(line: 1061, column: 38, scope: !10644)
!10649 = !DILocalVariable(name: "active_wakeup", scope: !10644, file: !3, line: 1063, type: !499)
!10650 = !DILocation(line: 1063, column: 7, scope: !10644)
!10651 = !DILocation(line: 1065, column: 25, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10644, file: !3, line: 1065, column: 6)
!10653 = !DILocation(line: 1065, column: 7, scope: !10652)
!10654 = !DILocation(line: 1065, column: 6, scope: !10644)
!10655 = !DILocation(line: 1066, column: 3, scope: !10652)
!10656 = !DILocation(line: 1068, column: 18, scope: !10644)
!10657 = !DILocation(line: 1068, column: 16, scope: !10644)
!10658 = !DILocation(line: 1069, column: 27, scope: !10644)
!10659 = !DILocation(line: 1069, column: 9, scope: !10644)
!10660 = !DILocation(line: 1069, column: 34, scope: !10644)
!10661 = !DILocation(line: 1069, column: 51, scope: !10644)
!10662 = !DILocation(line: 1069, column: 50, scope: !10644)
!10663 = !DILocation(line: 1069, column: 2, scope: !10644)
!10664 = !DILocation(line: 1070, column: 1, scope: !10644)
!10665 = distinct !DISubprogram(name: "pm_runtime_resume", scope: !10312, file: !10312, line: 323, type: !4483, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10666 = !DILocalVariable(name: "dev", arg: 1, scope: !10665, file: !10312, line: 323, type: !1695)
!10667 = !DILocation(line: 323, column: 52, scope: !10665)
!10668 = !DILocation(line: 325, column: 29, scope: !10665)
!10669 = !DILocation(line: 325, column: 9, scope: !10665)
!10670 = !DILocation(line: 325, column: 2, scope: !10665)
!10671 = distinct !DISubprogram(name: "device_can_wakeup", scope: !4632, file: !4632, line: 77, type: !4998, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10672 = !DILocalVariable(name: "dev", arg: 1, scope: !10671, file: !4632, line: 77, type: !1695)
!10673 = !DILocation(line: 77, column: 53, scope: !10671)
!10674 = !DILocation(line: 79, column: 9, scope: !10671)
!10675 = !DILocation(line: 79, column: 14, scope: !10671)
!10676 = !DILocation(line: 79, column: 20, scope: !10671)
!10677 = !DILocation(line: 79, column: 2, scope: !10671)
!10678 = distinct !DISubprogram(name: "device_may_wakeup", scope: !4632, file: !4632, line: 82, type: !4998, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10679 = !DILocalVariable(name: "dev", arg: 1, scope: !10678, file: !4632, line: 82, type: !1695)
!10680 = !DILocation(line: 82, column: 53, scope: !10678)
!10681 = !DILocation(line: 84, column: 9, scope: !10678)
!10682 = !DILocation(line: 84, column: 14, scope: !10678)
!10683 = !DILocation(line: 84, column: 20, scope: !10678)
!10684 = !DILocation(line: 84, column: 31, scope: !10678)
!10685 = !DILocation(line: 84, column: 36, scope: !10678)
!10686 = !DILocation(line: 84, column: 41, scope: !10678)
!10687 = !DILocation(line: 84, column: 47, scope: !10678)
!10688 = !DILocation(line: 84, column: 35, scope: !10678)
!10689 = !DILocation(line: 84, column: 34, scope: !10678)
!10690 = !DILocation(line: 0, scope: !10678)
!10691 = !DILocation(line: 84, column: 2, scope: !10678)
!10692 = distinct !DISubprogram(name: "genpd_finish_suspend", scope: !3, file: !3, line: 1129, type: !10693, scopeLine: 1130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10693 = !DISubroutineType(types: !10694)
!10694 = !{!195, !1695, !499}
!10695 = !DILocalVariable(name: "dev", arg: 1, scope: !10692, file: !3, line: 1129, type: !1695)
!10696 = !DILocation(line: 1129, column: 48, scope: !10692)
!10697 = !DILocalVariable(name: "poweroff", arg: 2, scope: !10692, file: !3, line: 1129, type: !499)
!10698 = !DILocation(line: 1129, column: 58, scope: !10692)
!10699 = !DILocalVariable(name: "genpd", scope: !10692, file: !3, line: 1131, type: !214)
!10700 = !DILocation(line: 1131, column: 28, scope: !10692)
!10701 = !DILocalVariable(name: "ret", scope: !10692, file: !3, line: 1132, type: !195)
!10702 = !DILocation(line: 1132, column: 6, scope: !10692)
!10703 = !DILocation(line: 1134, column: 23, scope: !10692)
!10704 = !DILocation(line: 1134, column: 10, scope: !10692)
!10705 = !DILocation(line: 1134, column: 8, scope: !10692)
!10706 = !DILocation(line: 1135, column: 13, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10692, file: !3, line: 1135, column: 6)
!10708 = !DILocation(line: 1135, column: 6, scope: !10707)
!10709 = !DILocation(line: 1135, column: 6, scope: !10692)
!10710 = !DILocation(line: 1136, column: 3, scope: !10707)
!10711 = !DILocation(line: 1138, column: 6, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10692, file: !3, line: 1138, column: 6)
!10713 = !DILocation(line: 1138, column: 6, scope: !10692)
!10714 = !DILocation(line: 1139, column: 35, scope: !10712)
!10715 = !DILocation(line: 1139, column: 9, scope: !10712)
!10716 = !DILocation(line: 1139, column: 7, scope: !10712)
!10717 = !DILocation(line: 1139, column: 3, scope: !10712)
!10718 = !DILocation(line: 1141, column: 34, scope: !10712)
!10719 = !DILocation(line: 1141, column: 9, scope: !10712)
!10720 = !DILocation(line: 1141, column: 7, scope: !10712)
!10721 = !DILocation(line: 1142, column: 6, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10692, file: !3, line: 1142, column: 6)
!10723 = !DILocation(line: 1142, column: 6, scope: !10692)
!10724 = !DILocation(line: 1143, column: 10, scope: !10722)
!10725 = !DILocation(line: 1143, column: 3, scope: !10722)
!10726 = !DILocation(line: 1145, column: 6, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10692, file: !3, line: 1145, column: 6)
!10728 = !DILocation(line: 1145, column: 11, scope: !10727)
!10729 = !DILocation(line: 1145, column: 17, scope: !10727)
!10730 = !DILocation(line: 1145, column: 29, scope: !10727)
!10731 = !DILocation(line: 1145, column: 32, scope: !10727)
!10732 = !DILocation(line: 1145, column: 6, scope: !10692)
!10733 = !DILocation(line: 1146, column: 3, scope: !10727)
!10734 = !DILocation(line: 1148, column: 6, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10692, file: !3, line: 1148, column: 6)
!10736 = !DILocation(line: 1148, column: 13, scope: !10735)
!10737 = !DILocation(line: 1148, column: 21, scope: !10735)
!10738 = !DILocation(line: 1148, column: 26, scope: !10735)
!10739 = !DILocation(line: 1148, column: 29, scope: !10735)
!10740 = !DILocation(line: 1148, column: 36, scope: !10735)
!10741 = !DILocation(line: 1148, column: 44, scope: !10735)
!10742 = !DILocation(line: 1148, column: 50, scope: !10735)
!10743 = !DILocation(line: 1149, column: 35, scope: !10735)
!10744 = !DILocation(line: 1149, column: 7, scope: !10735)
!10745 = !DILocation(line: 1148, column: 6, scope: !10692)
!10746 = !DILocation(line: 1150, column: 24, scope: !10747)
!10747 = distinct !DILexicalBlock(scope: !10735, file: !3, line: 1149, column: 41)
!10748 = !DILocation(line: 1150, column: 31, scope: !10747)
!10749 = !DILocation(line: 1150, column: 9, scope: !10747)
!10750 = !DILocation(line: 1150, column: 7, scope: !10747)
!10751 = !DILocation(line: 1151, column: 7, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 1151, column: 7)
!10753 = !DILocation(line: 1151, column: 7, scope: !10747)
!10754 = !DILocation(line: 1152, column: 8, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10756, file: !3, line: 1152, column: 8)
!10756 = distinct !DILexicalBlock(scope: !10752, file: !3, line: 1151, column: 12)
!10757 = !DILocation(line: 1152, column: 8, scope: !10756)
!10758 = !DILocation(line: 1153, column: 30, scope: !10755)
!10759 = !DILocation(line: 1153, column: 5, scope: !10755)
!10760 = !DILocation(line: 1155, column: 29, scope: !10755)
!10761 = !DILocation(line: 1155, column: 5, scope: !10755)
!10762 = !DILocation(line: 1156, column: 11, scope: !10756)
!10763 = !DILocation(line: 1156, column: 4, scope: !10756)
!10764 = !DILocation(line: 1158, column: 2, scope: !10747)
!10765 = !DILocation(line: 1160, column: 2, scope: !10692)
!10766 = !DILocation(line: 1161, column: 2, scope: !10692)
!10767 = !DILocation(line: 1161, column: 9, scope: !10692)
!10768 = !DILocation(line: 1161, column: 24, scope: !10692)
!10769 = !DILocation(line: 1162, column: 23, scope: !10692)
!10770 = !DILocation(line: 1162, column: 2, scope: !10692)
!10771 = !DILocation(line: 1163, column: 2, scope: !10692)
!10772 = !DILocation(line: 1165, column: 2, scope: !10692)
!10773 = !DILocation(line: 1166, column: 1, scope: !10692)
!10774 = distinct !DISubprogram(name: "pm_runtime_status_suspended", scope: !10312, file: !10312, line: 155, type: !4998, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10775 = !DILocalVariable(name: "dev", arg: 1, scope: !10774, file: !10312, line: 155, type: !1695)
!10776 = !DILocation(line: 155, column: 63, scope: !10774)
!10777 = !DILocation(line: 157, column: 9, scope: !10774)
!10778 = !DILocation(line: 157, column: 14, scope: !10774)
!10779 = !DILocation(line: 157, column: 20, scope: !10774)
!10780 = !DILocation(line: 157, column: 35, scope: !10774)
!10781 = !DILocation(line: 157, column: 2, scope: !10774)
!10782 = distinct !DISubprogram(name: "cpumask_clear", scope: !2371, file: !2371, line: 411, type: !7228, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10783 = !DILocalVariable(name: "dstp", arg: 1, scope: !10782, file: !2371, line: 411, type: !7230)
!10784 = !DILocation(line: 411, column: 50, scope: !10782)
!10785 = !DILocation(line: 413, column: 14, scope: !10782)
!10786 = !DILocation(line: 413, column: 2, scope: !10782)
!10787 = !DILocation(line: 414, column: 1, scope: !10782)
!10788 = distinct !DISubprogram(name: "bitmap_zero", scope: !10789, file: !10789, line: 235, type: !10790, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10789 = !DIFile(filename: "./include/linux/bitmap.h", directory: "/home/lizy2001/genbc/linux")
!10790 = !DISubroutineType(types: !10791)
!10791 = !{null, !10792, !7}
!10792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64)
!10793 = !DILocalVariable(name: "dst", arg: 1, scope: !10788, file: !10789, line: 235, type: !10792)
!10794 = !DILocation(line: 235, column: 47, scope: !10788)
!10795 = !DILocalVariable(name: "nbits", arg: 2, scope: !10788, file: !10789, line: 235, type: !7)
!10796 = !DILocation(line: 235, column: 65, scope: !10788)
!10797 = !DILocalVariable(name: "len", scope: !10788, file: !10789, line: 237, type: !7)
!10798 = !DILocation(line: 237, column: 15, scope: !10788)
!10799 = !DILocation(line: 237, column: 21, scope: !10788)
!10800 = !DILocation(line: 237, column: 42, scope: !10788)
!10801 = !DILocation(line: 238, column: 9, scope: !10788)
!10802 = !DILocation(line: 238, column: 2, scope: !10788)
!10803 = !DILocation(line: 238, column: 17, scope: !10788)
!10804 = !DILocation(line: 239, column: 1, scope: !10788)
!10805 = distinct !DISubprogram(name: "genpd_free_default_power_state", scope: !3, file: !3, line: 1851, type: !5068, scopeLine: 1853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10806 = !DILocalVariable(name: "states", arg: 1, scope: !10805, file: !3, line: 1851, type: !5055)
!10807 = !DILocation(line: 1851, column: 70, scope: !10805)
!10808 = !DILocalVariable(name: "state_count", arg: 2, scope: !10805, file: !3, line: 1852, type: !7)
!10809 = !DILocation(line: 1852, column: 22, scope: !10805)
!10810 = !DILocation(line: 1854, column: 8, scope: !10805)
!10811 = !DILocation(line: 1854, column: 2, scope: !10805)
!10812 = !DILocation(line: 1855, column: 1, scope: !10805)
!10813 = distinct !DISubprogram(name: "genpd_dev_pm_detach", scope: !3, file: !3, line: 2525, type: !4788, scopeLine: 2526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10814 = !DILocalVariable(name: "dev", arg: 1, scope: !10813, file: !3, line: 2525, type: !1695)
!10815 = !DILocation(line: 2525, column: 48, scope: !10813)
!10816 = !DILocalVariable(name: "power_off", arg: 2, scope: !10813, file: !3, line: 2525, type: !499)
!10817 = !DILocation(line: 2525, column: 58, scope: !10813)
!10818 = !DILocalVariable(name: "pd", scope: !10813, file: !3, line: 2527, type: !214)
!10819 = !DILocation(line: 2527, column: 28, scope: !10813)
!10820 = !DILocalVariable(name: "i", scope: !10813, file: !3, line: 2528, type: !7)
!10821 = !DILocation(line: 2528, column: 15, scope: !10813)
!10822 = !DILocalVariable(name: "ret", scope: !10813, file: !3, line: 2529, type: !195)
!10823 = !DILocation(line: 2529, column: 6, scope: !10813)
!10824 = !DILocation(line: 2531, column: 20, scope: !10813)
!10825 = !DILocation(line: 2531, column: 7, scope: !10813)
!10826 = !DILocation(line: 2531, column: 5, scope: !10813)
!10827 = !DILocation(line: 2532, column: 13, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10813, file: !3, line: 2532, column: 6)
!10829 = !DILocation(line: 2532, column: 6, scope: !10828)
!10830 = !DILocation(line: 2532, column: 6, scope: !10813)
!10831 = !DILocation(line: 2533, column: 3, scope: !10828)
!10832 = !DILocation(line: 2537, column: 9, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10813, file: !3, line: 2537, column: 2)
!10834 = !DILocation(line: 2537, column: 7, scope: !10833)
!10835 = !DILocation(line: 2537, column: 14, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10833, file: !3, line: 2537, column: 2)
!10837 = !DILocation(line: 2537, column: 16, scope: !10836)
!10838 = !DILocation(line: 2537, column: 2, scope: !10833)
!10839 = !DILocation(line: 2538, column: 29, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10836, file: !3, line: 2537, column: 47)
!10841 = !DILocation(line: 2538, column: 33, scope: !10840)
!10842 = !DILocation(line: 2538, column: 9, scope: !10840)
!10843 = !DILocation(line: 2538, column: 7, scope: !10840)
!10844 = !DILocation(line: 2539, column: 7, scope: !10845)
!10845 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 2539, column: 7)
!10846 = !DILocation(line: 2539, column: 11, scope: !10845)
!10847 = !DILocation(line: 2539, column: 7, scope: !10840)
!10848 = !DILocation(line: 2540, column: 4, scope: !10845)
!10849 = !DILocation(line: 2542, column: 3, scope: !10840)
!10850 = !DILocation(line: 2542, column: 3, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !10852, file: !3, line: 2542, column: 3)
!10852 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 2542, column: 3)
!10853 = !DILocation(line: 2542, column: 3, scope: !10852)
!10854 = !DILocation(line: 2542, column: 3, scope: !10855)
!10855 = distinct !DILexicalBlock(scope: !10856, file: !3, line: 2542, column: 3)
!10856 = distinct !DILexicalBlock(scope: !10851, file: !3, line: 2542, column: 3)
!10857 = !DILocation(line: 2542, column: 3, scope: !10856)
!10858 = !DILocation(line: 2542, column: 3, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10851, file: !3, line: 2542, column: 3)
!10860 = !DILocalVariable(name: "__ms", scope: !10861, file: !3, line: 2542, type: !333)
!10861 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 2542, column: 3)
!10862 = !DILocation(line: 2542, column: 3, scope: !10861)
!10863 = !DILocation(line: 2542, column: 3, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !10865, file: !3, line: 2542, column: 3)
!10865 = distinct !DILexicalBlock(scope: !10866, file: !3, line: 2542, column: 3)
!10866 = distinct !DILexicalBlock(scope: !10867, file: !3, line: 2542, column: 3)
!10867 = distinct !DILexicalBlock(scope: !10861, file: !3, line: 2542, column: 3)
!10868 = distinct !{!10868, !10862, !10862}
!10869 = !DILocation(line: 2543, column: 3, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 2543, column: 3)
!10871 = !DILocation(line: 2544, column: 2, scope: !10840)
!10872 = !DILocation(line: 2537, column: 40, scope: !10836)
!10873 = !DILocation(line: 2537, column: 2, scope: !10836)
!10874 = distinct !{!10874, !10838, !10875}
!10875 = !DILocation(line: 2544, column: 2, scope: !10833)
!10876 = !DILocation(line: 2546, column: 6, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10813, file: !3, line: 2546, column: 6)
!10878 = !DILocation(line: 2546, column: 10, scope: !10877)
!10879 = !DILocation(line: 2546, column: 6, scope: !10813)
!10880 = !DILocation(line: 2547, column: 3, scope: !10881)
!10881 = distinct !DILexicalBlock(scope: !10877, file: !3, line: 2546, column: 15)
!10882 = !DILocation(line: 2549, column: 3, scope: !10881)
!10883 = !DILocation(line: 2553, column: 29, scope: !10813)
!10884 = !DILocation(line: 2553, column: 2, scope: !10813)
!10885 = !DILocation(line: 2556, column: 6, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10813, file: !3, line: 2556, column: 6)
!10887 = !DILocation(line: 2556, column: 11, scope: !10886)
!10888 = !DILocation(line: 2556, column: 15, scope: !10886)
!10889 = !DILocation(line: 2556, column: 6, scope: !10813)
!10890 = !DILocation(line: 2557, column: 21, scope: !10886)
!10891 = !DILocation(line: 2557, column: 3, scope: !10886)
!10892 = !DILocation(line: 2558, column: 1, scope: !10813)
!10893 = distinct !DISubprogram(name: "genpd_dev_pm_sync", scope: !3, file: !3, line: 2560, type: !4474, scopeLine: 2561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10894 = !DILocalVariable(name: "dev", arg: 1, scope: !10893, file: !3, line: 2560, type: !1695)
!10895 = !DILocation(line: 2560, column: 46, scope: !10893)
!10896 = !DILocalVariable(name: "pd", scope: !10893, file: !3, line: 2562, type: !214)
!10897 = !DILocation(line: 2562, column: 28, scope: !10893)
!10898 = !DILocation(line: 2564, column: 20, scope: !10893)
!10899 = !DILocation(line: 2564, column: 7, scope: !10893)
!10900 = !DILocation(line: 2564, column: 5, scope: !10893)
!10901 = !DILocation(line: 2565, column: 13, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10893, file: !3, line: 2565, column: 6)
!10903 = !DILocation(line: 2565, column: 6, scope: !10902)
!10904 = !DILocation(line: 2565, column: 6, scope: !10893)
!10905 = !DILocation(line: 2566, column: 3, scope: !10902)
!10906 = !DILocation(line: 2568, column: 29, scope: !10893)
!10907 = !DILocation(line: 2568, column: 2, scope: !10893)
!10908 = !DILocation(line: 2569, column: 1, scope: !10893)
!10909 = distinct !DISubprogram(name: "___might_sleep", scope: !10910, file: !10910, line: 248, type: !10911, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10910 = !DIFile(filename: "./include/linux/kernel.h", directory: "/home/lizy2001/genbc/linux")
!10911 = !DISubroutineType(types: !10912)
!10912 = !{null, !225, !195, !195}
!10913 = !DILocalVariable(name: "file", arg: 1, scope: !10909, file: !10910, line: 248, type: !225)
!10914 = !DILocation(line: 248, column: 49, scope: !10909)
!10915 = !DILocalVariable(name: "line", arg: 2, scope: !10909, file: !10910, line: 248, type: !195)
!10916 = !DILocation(line: 248, column: 59, scope: !10909)
!10917 = !DILocalVariable(name: "preempt_offset", arg: 3, scope: !10909, file: !10910, line: 249, type: !195)
!10918 = !DILocation(line: 249, column: 12, scope: !10909)
!10919 = !DILocation(line: 249, column: 30, scope: !10909)
!10920 = distinct !DISubprogram(name: "get_order", scope: !10921, file: !10921, line: 29, type: !10922, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10921 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!10922 = !DISubroutineType(types: !10923)
!10923 = !{!195, !333}
!10924 = !DILocalVariable(name: "x", arg: 1, scope: !10925, file: !9692, line: 366, type: !431)
!10925 = distinct !DISubprogram(name: "fls64", scope: !9692, file: !9692, line: 366, type: !10926, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10926 = !DISubroutineType(types: !10927)
!10927 = !{!195, !431}
!10928 = !DILocation(line: 366, column: 40, scope: !10925, inlinedAt: !10929)
!10929 = distinct !DILocation(line: 46, column: 9, scope: !10920)
!10930 = !DILocalVariable(name: "bitpos", scope: !10925, file: !9692, line: 368, type: !195)
!10931 = !DILocation(line: 368, column: 6, scope: !10925, inlinedAt: !10929)
!10932 = !DILocalVariable(name: "size", arg: 1, scope: !10920, file: !10921, line: 29, type: !333)
!10933 = !DILocation(line: 29, column: 63, scope: !10920)
!10934 = !DILocation(line: 31, column: 27, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10920, file: !10921, line: 31, column: 6)
!10936 = !DILocation(line: 31, column: 6, scope: !10935)
!10937 = !DILocation(line: 31, column: 6, scope: !10920)
!10938 = !DILocation(line: 32, column: 8, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10940, file: !10921, line: 32, column: 7)
!10940 = distinct !DILexicalBlock(scope: !10935, file: !10921, line: 31, column: 34)
!10941 = !DILocation(line: 32, column: 7, scope: !10940)
!10942 = !DILocation(line: 33, column: 4, scope: !10939)
!10943 = !DILocation(line: 35, column: 7, scope: !10944)
!10944 = distinct !DILexicalBlock(scope: !10940, file: !10921, line: 35, column: 7)
!10945 = !DILocation(line: 35, column: 12, scope: !10944)
!10946 = !DILocation(line: 35, column: 7, scope: !10940)
!10947 = !DILocation(line: 36, column: 4, scope: !10944)
!10948 = !DILocation(line: 38, column: 10, scope: !10940)
!10949 = !DILocation(line: 38, column: 28, scope: !10940)
!10950 = !DILocation(line: 38, column: 41, scope: !10940)
!10951 = !DILocation(line: 38, column: 3, scope: !10940)
!10952 = !DILocation(line: 41, column: 6, scope: !10920)
!10953 = !DILocation(line: 42, column: 7, scope: !10920)
!10954 = !DILocation(line: 46, column: 15, scope: !10920)
!10955 = !DILocation(line: 374, column: 2, scope: !10925, inlinedAt: !10929)
!10956 = !DILocation(line: 376, column: 14, scope: !10925, inlinedAt: !10929)
!10957 = !{i32 323319}
!10958 = !DILocation(line: 377, column: 9, scope: !10925, inlinedAt: !10929)
!10959 = !DILocation(line: 377, column: 16, scope: !10925, inlinedAt: !10929)
!10960 = !DILocation(line: 46, column: 2, scope: !10920)
!10961 = !DILocation(line: 48, column: 1, scope: !10920)
!10962 = distinct !DISubprogram(name: "__ilog2_u64", scope: !10963, file: !10963, line: 30, type: !10964, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10963 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!10964 = !DISubroutineType(types: !10965)
!10965 = !{!195, !430}
!10966 = !DILocation(line: 366, column: 40, scope: !10925, inlinedAt: !10967)
!10967 = distinct !DILocation(line: 32, column: 9, scope: !10962)
!10968 = !DILocation(line: 368, column: 6, scope: !10925, inlinedAt: !10967)
!10969 = !DILocalVariable(name: "n", arg: 1, scope: !10962, file: !10963, line: 30, type: !430)
!10970 = !DILocation(line: 30, column: 21, scope: !10962)
!10971 = !DILocation(line: 32, column: 15, scope: !10962)
!10972 = !DILocation(line: 374, column: 2, scope: !10925, inlinedAt: !10967)
!10973 = !DILocation(line: 376, column: 14, scope: !10925, inlinedAt: !10967)
!10974 = !DILocation(line: 377, column: 9, scope: !10925, inlinedAt: !10967)
!10975 = !DILocation(line: 377, column: 16, scope: !10925, inlinedAt: !10967)
!10976 = !DILocation(line: 32, column: 18, scope: !10962)
!10977 = !DILocation(line: 32, column: 2, scope: !10962)
!10978 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !10979, file: !10979, line: 137, type: !10980, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10979 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!10980 = !DISubroutineType(types: !10981)
!10981 = !{!209, !1220, !3258, !330, !819}
!10982 = !DILocalVariable(name: "s", arg: 1, scope: !10978, file: !10979, line: 137, type: !1220)
!10983 = !DILocation(line: 137, column: 54, scope: !10978)
!10984 = !DILocalVariable(name: "object", arg: 2, scope: !10978, file: !10979, line: 137, type: !3258)
!10985 = !DILocation(line: 137, column: 69, scope: !10978)
!10986 = !DILocalVariable(name: "size", arg: 3, scope: !10978, file: !10979, line: 138, type: !330)
!10987 = !DILocation(line: 138, column: 12, scope: !10978)
!10988 = !DILocalVariable(name: "flags", arg: 4, scope: !10978, file: !10979, line: 138, type: !819)
!10989 = !DILocation(line: 138, column: 24, scope: !10978)
!10990 = !DILocation(line: 140, column: 17, scope: !10978)
!10991 = !DILocation(line: 140, column: 2, scope: !10978)
!10992 = distinct !DISubprogram(name: "kobject_name", scope: !222, file: !222, line: 88, type: !10993, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!10993 = !DISubroutineType(types: !10994)
!10994 = !{!225, !10995}
!10995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10996, size: 64)
!10996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !221)
!10997 = !DILocalVariable(name: "kobj", arg: 1, scope: !10992, file: !222, line: 88, type: !10995)
!10998 = !DILocation(line: 88, column: 62, scope: !10992)
!10999 = !DILocation(line: 90, column: 9, scope: !10992)
!11000 = !DILocation(line: 90, column: 15, scope: !10992)
!11001 = !DILocation(line: 90, column: 2, scope: !10992)
!11002 = distinct !DISubprogram(name: "queue_work", scope: !156, file: !156, line: 504, type: !11003, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!11003 = !DISubroutineType(types: !11004)
!11004 = !{!499, !1120, !1117}
!11005 = !DILocalVariable(name: "wq", arg: 1, scope: !11002, file: !156, line: 504, type: !1120)
!11006 = !DILocation(line: 504, column: 56, scope: !11002)
!11007 = !DILocalVariable(name: "work", arg: 2, scope: !11002, file: !156, line: 505, type: !1117)
!11008 = !DILocation(line: 505, column: 30, scope: !11002)
!11009 = !DILocation(line: 507, column: 41, scope: !11002)
!11010 = !DILocation(line: 507, column: 45, scope: !11002)
!11011 = !DILocation(line: 507, column: 9, scope: !11002)
!11012 = !DILocation(line: 507, column: 2, scope: !11002)
!11013 = distinct !DISubprogram(name: "genpd_parse_state", scope: !3, file: !3, line: 2741, type: !11014, scopeLine: 2743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!11014 = !DISubroutineType(types: !11015)
!11015 = !{!195, !5055, !4820}
!11016 = !DILocalVariable(name: "genpd_state", arg: 1, scope: !11013, file: !3, line: 2741, type: !5055)
!11017 = !DILocation(line: 2741, column: 56, scope: !11013)
!11018 = !DILocalVariable(name: "state_node", arg: 2, scope: !11013, file: !3, line: 2742, type: !4820)
!11019 = !DILocation(line: 2742, column: 29, scope: !11013)
!11020 = !DILocalVariable(name: "err", scope: !11013, file: !3, line: 2744, type: !195)
!11021 = !DILocation(line: 2744, column: 6, scope: !11013)
!11022 = !DILocalVariable(name: "residency", scope: !11013, file: !3, line: 2745, type: !424)
!11023 = !DILocation(line: 2745, column: 6, scope: !11013)
!11024 = !DILocalVariable(name: "entry_latency", scope: !11013, file: !3, line: 2746, type: !424)
!11025 = !DILocation(line: 2746, column: 6, scope: !11013)
!11026 = !DILocalVariable(name: "exit_latency", scope: !11013, file: !3, line: 2746, type: !424)
!11027 = !DILocation(line: 2746, column: 21, scope: !11013)
!11028 = !DILocation(line: 2748, column: 29, scope: !11013)
!11029 = !DILocation(line: 2748, column: 8, scope: !11013)
!11030 = !DILocation(line: 2748, column: 6, scope: !11013)
!11031 = !DILocation(line: 2750, column: 6, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11013, file: !3, line: 2750, column: 6)
!11033 = !DILocation(line: 2750, column: 6, scope: !11013)
!11034 = !DILocation(line: 2751, column: 3, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11036, file: !3, line: 2751, column: 3)
!11036 = distinct !DILexicalBlock(scope: !11037, file: !3, line: 2751, column: 3)
!11037 = distinct !DILexicalBlock(scope: !11032, file: !3, line: 2750, column: 11)
!11038 = !DILocation(line: 2751, column: 3, scope: !11036)
!11039 = !DILocation(line: 2753, column: 3, scope: !11037)
!11040 = !DILocation(line: 2756, column: 29, scope: !11013)
!11041 = !DILocation(line: 2756, column: 8, scope: !11013)
!11042 = !DILocation(line: 2756, column: 6, scope: !11013)
!11043 = !DILocation(line: 2758, column: 6, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !11013, file: !3, line: 2758, column: 6)
!11045 = !DILocation(line: 2758, column: 6, scope: !11013)
!11046 = !DILocation(line: 2759, column: 3, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11048, file: !3, line: 2759, column: 3)
!11048 = distinct !DILexicalBlock(scope: !11049, file: !3, line: 2759, column: 3)
!11049 = distinct !DILexicalBlock(scope: !11044, file: !3, line: 2758, column: 11)
!11050 = !DILocation(line: 2759, column: 3, scope: !11048)
!11051 = !DILocation(line: 2761, column: 3, scope: !11049)
!11052 = !DILocation(line: 2764, column: 29, scope: !11013)
!11053 = !DILocation(line: 2764, column: 8, scope: !11013)
!11054 = !DILocation(line: 2764, column: 6, scope: !11013)
!11055 = !DILocation(line: 2765, column: 7, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11013, file: !3, line: 2765, column: 6)
!11057 = !DILocation(line: 2765, column: 6, scope: !11013)
!11058 = !DILocation(line: 2766, column: 38, scope: !11056)
!11059 = !DILocation(line: 2766, column: 36, scope: !11056)
!11060 = !DILocation(line: 2766, column: 31, scope: !11056)
!11061 = !DILocation(line: 2766, column: 3, scope: !11056)
!11062 = !DILocation(line: 2766, column: 16, scope: !11056)
!11063 = !DILocation(line: 2766, column: 29, scope: !11056)
!11064 = !DILocation(line: 2768, column: 44, scope: !11013)
!11065 = !DILocation(line: 2768, column: 42, scope: !11013)
!11066 = !DILocation(line: 2768, column: 37, scope: !11013)
!11067 = !DILocation(line: 2768, column: 2, scope: !11013)
!11068 = !DILocation(line: 2768, column: 15, scope: !11013)
!11069 = !DILocation(line: 2768, column: 35, scope: !11013)
!11070 = !DILocation(line: 2769, column: 45, scope: !11013)
!11071 = !DILocation(line: 2769, column: 43, scope: !11013)
!11072 = !DILocation(line: 2769, column: 38, scope: !11013)
!11073 = !DILocation(line: 2769, column: 2, scope: !11013)
!11074 = !DILocation(line: 2769, column: 15, scope: !11013)
!11075 = !DILocation(line: 2769, column: 36, scope: !11013)
!11076 = !DILocation(line: 2770, column: 25, scope: !11013)
!11077 = !DILocation(line: 2770, column: 37, scope: !11013)
!11078 = !DILocation(line: 2770, column: 2, scope: !11013)
!11079 = !DILocation(line: 2770, column: 15, scope: !11013)
!11080 = !DILocation(line: 2770, column: 22, scope: !11013)
!11081 = !DILocation(line: 2772, column: 2, scope: !11013)
!11082 = !DILocation(line: 2773, column: 1, scope: !11013)
!11083 = distinct !DISubprogram(name: "of_property_read_u32", scope: !4822, file: !4822, line: 1214, type: !11084, scopeLine: 1217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!11084 = !DISubroutineType(types: !11085)
!11085 = !{!195, !8747, !225, !2420}
!11086 = !DILocalVariable(name: "np", arg: 1, scope: !11083, file: !4822, line: 1214, type: !8747)
!11087 = !DILocation(line: 1214, column: 66, scope: !11083)
!11088 = !DILocalVariable(name: "propname", arg: 2, scope: !11083, file: !4822, line: 1215, type: !225)
!11089 = !DILocation(line: 1215, column: 24, scope: !11083)
!11090 = !DILocalVariable(name: "out_value", arg: 3, scope: !11083, file: !4822, line: 1216, type: !2420)
!11091 = !DILocation(line: 1216, column: 17, scope: !11083)
!11092 = !DILocation(line: 1218, column: 36, scope: !11083)
!11093 = !DILocation(line: 1218, column: 40, scope: !11083)
!11094 = !DILocation(line: 1218, column: 50, scope: !11083)
!11095 = !DILocation(line: 1218, column: 9, scope: !11083)
!11096 = !DILocation(line: 1218, column: 2, scope: !11083)
!11097 = distinct !DISubprogram(name: "of_property_read_u32_array", scope: !4822, file: !4822, line: 494, type: !11098, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!11098 = !DISubroutineType(types: !11099)
!11099 = !{!195, !8747, !225, !2420, !330}
!11100 = !DILocalVariable(name: "np", arg: 1, scope: !11097, file: !4822, line: 494, type: !8747)
!11101 = !DILocation(line: 494, column: 72, scope: !11097)
!11102 = !DILocalVariable(name: "propname", arg: 2, scope: !11097, file: !4822, line: 495, type: !225)
!11103 = !DILocation(line: 495, column: 23, scope: !11097)
!11104 = !DILocalVariable(name: "out_values", arg: 3, scope: !11097, file: !4822, line: 496, type: !2420)
!11105 = !DILocation(line: 496, column: 16, scope: !11097)
!11106 = !DILocalVariable(name: "sz", arg: 4, scope: !11097, file: !4822, line: 496, type: !330)
!11107 = !DILocation(line: 496, column: 35, scope: !11097)
!11108 = !DILocalVariable(name: "ret", scope: !11097, file: !4822, line: 498, type: !195)
!11109 = !DILocation(line: 498, column: 6, scope: !11097)
!11110 = !DILocation(line: 498, column: 48, scope: !11097)
!11111 = !DILocation(line: 498, column: 52, scope: !11097)
!11112 = !DILocation(line: 498, column: 62, scope: !11097)
!11113 = !DILocation(line: 499, column: 13, scope: !11097)
!11114 = !DILocation(line: 498, column: 12, scope: !11097)
!11115 = !DILocation(line: 500, column: 6, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11097, file: !4822, line: 500, column: 6)
!11117 = !DILocation(line: 500, column: 10, scope: !11116)
!11118 = !DILocation(line: 500, column: 6, scope: !11097)
!11119 = !DILocation(line: 501, column: 3, scope: !11116)
!11120 = !DILocation(line: 503, column: 10, scope: !11116)
!11121 = !DILocation(line: 503, column: 3, scope: !11116)
!11122 = !DILocation(line: 504, column: 1, scope: !11097)
!11123 = distinct !DISubprogram(name: "kmalloc_array", scope: !202, file: !202, line: 584, type: !8813, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!11124 = !DILocation(line: 445, column: 72, scope: !8317, inlinedAt: !11125)
!11125 = distinct !DILocation(line: 552, column: 10, scope: !8322, inlinedAt: !11126)
!11126 = distinct !DILocation(line: 591, column: 10, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !11123, file: !202, line: 590, column: 6)
!11128 = !DILocation(line: 446, column: 9, scope: !8317, inlinedAt: !11125)
!11129 = !DILocation(line: 446, column: 23, scope: !8317, inlinedAt: !11125)
!11130 = !DILocation(line: 448, column: 8, scope: !8317, inlinedAt: !11125)
!11131 = !DILocation(line: 318, column: 67, scope: !8333, inlinedAt: !11132)
!11132 = distinct !DILocation(line: 553, column: 20, scope: !8322, inlinedAt: !11126)
!11133 = !DILocation(line: 346, column: 58, scope: !8339, inlinedAt: !11134)
!11134 = distinct !DILocation(line: 547, column: 11, scope: !8322, inlinedAt: !11126)
!11135 = !DILocation(line: 472, column: 28, scope: !8345, inlinedAt: !11136)
!11136 = distinct !DILocation(line: 481, column: 9, scope: !8350, inlinedAt: !11137)
!11137 = distinct !DILocation(line: 545, column: 11, scope: !8352, inlinedAt: !11126)
!11138 = !DILocation(line: 472, column: 40, scope: !8345, inlinedAt: !11136)
!11139 = !DILocation(line: 472, column: 60, scope: !8345, inlinedAt: !11136)
!11140 = !DILocation(line: 478, column: 51, scope: !8350, inlinedAt: !11137)
!11141 = !DILocation(line: 478, column: 63, scope: !8350, inlinedAt: !11137)
!11142 = !DILocation(line: 480, column: 15, scope: !8350, inlinedAt: !11137)
!11143 = !DILocation(line: 538, column: 45, scope: !8324, inlinedAt: !11126)
!11144 = !DILocation(line: 538, column: 57, scope: !8324, inlinedAt: !11126)
!11145 = !DILocation(line: 542, column: 16, scope: !8322, inlinedAt: !11126)
!11146 = !DILocalVariable(name: "n", arg: 1, scope: !11123, file: !202, line: 584, type: !330)
!11147 = !DILocation(line: 584, column: 42, scope: !11123)
!11148 = !DILocalVariable(name: "size", arg: 2, scope: !11123, file: !202, line: 584, type: !330)
!11149 = !DILocation(line: 584, column: 52, scope: !11123)
!11150 = !DILocalVariable(name: "flags", arg: 3, scope: !11123, file: !202, line: 584, type: !819)
!11151 = !DILocation(line: 584, column: 64, scope: !11123)
!11152 = !DILocalVariable(name: "bytes", scope: !11123, file: !202, line: 586, type: !330)
!11153 = !DILocation(line: 586, column: 9, scope: !11123)
!11154 = !DILocalVariable(name: "__a", scope: !11155, file: !202, line: 588, type: !330)
!11155 = distinct !DILexicalBlock(scope: !11156, file: !202, line: 588, column: 6)
!11156 = distinct !DILexicalBlock(scope: !11123, file: !202, line: 588, column: 6)
!11157 = !DILocation(line: 588, column: 6, scope: !11155)
!11158 = !DILocalVariable(name: "__b", scope: !11155, file: !202, line: 588, type: !330)
!11159 = !DILocalVariable(name: "__d", scope: !11155, file: !202, line: 588, type: !2790)
!11160 = !DILocation(line: 588, column: 6, scope: !11156)
!11161 = !DILocation(line: 588, column: 6, scope: !11123)
!11162 = !DILocation(line: 589, column: 3, scope: !11156)
!11163 = !DILocation(line: 590, column: 27, scope: !11127)
!11164 = !DILocation(line: 590, column: 6, scope: !11127)
!11165 = !DILocation(line: 590, column: 30, scope: !11127)
!11166 = !DILocation(line: 590, column: 54, scope: !11127)
!11167 = !DILocation(line: 590, column: 33, scope: !11127)
!11168 = !DILocation(line: 590, column: 6, scope: !11123)
!11169 = !DILocation(line: 591, column: 18, scope: !11127)
!11170 = !DILocation(line: 591, column: 25, scope: !11127)
!11171 = !DILocation(line: 540, column: 27, scope: !8323, inlinedAt: !11126)
!11172 = !DILocation(line: 540, column: 6, scope: !8323, inlinedAt: !11126)
!11173 = !DILocation(line: 540, column: 6, scope: !8324, inlinedAt: !11126)
!11174 = !DILocation(line: 544, column: 7, scope: !8352, inlinedAt: !11126)
!11175 = !DILocation(line: 544, column: 12, scope: !8352, inlinedAt: !11126)
!11176 = !DILocation(line: 544, column: 7, scope: !8322, inlinedAt: !11126)
!11177 = !DILocation(line: 545, column: 25, scope: !8352, inlinedAt: !11126)
!11178 = !DILocation(line: 545, column: 31, scope: !8352, inlinedAt: !11126)
!11179 = !DILocation(line: 480, column: 33, scope: !8350, inlinedAt: !11137)
!11180 = !DILocation(line: 480, column: 23, scope: !8350, inlinedAt: !11137)
!11181 = !DILocation(line: 481, column: 29, scope: !8350, inlinedAt: !11137)
!11182 = !DILocation(line: 481, column: 35, scope: !8350, inlinedAt: !11137)
!11183 = !DILocation(line: 481, column: 42, scope: !8350, inlinedAt: !11137)
!11184 = !DILocation(line: 474, column: 23, scope: !8345, inlinedAt: !11136)
!11185 = !DILocation(line: 474, column: 29, scope: !8345, inlinedAt: !11136)
!11186 = !DILocation(line: 474, column: 36, scope: !8345, inlinedAt: !11136)
!11187 = !DILocation(line: 474, column: 9, scope: !8345, inlinedAt: !11136)
!11188 = !DILocation(line: 545, column: 4, scope: !8352, inlinedAt: !11126)
!11189 = !DILocation(line: 547, column: 25, scope: !8322, inlinedAt: !11126)
!11190 = !DILocation(line: 348, column: 7, scope: !8396, inlinedAt: !11134)
!11191 = !DILocation(line: 348, column: 6, scope: !8339, inlinedAt: !11134)
!11192 = !DILocation(line: 349, column: 3, scope: !8396, inlinedAt: !11134)
!11193 = !DILocation(line: 351, column: 6, scope: !8400, inlinedAt: !11134)
!11194 = !DILocation(line: 351, column: 11, scope: !8400, inlinedAt: !11134)
!11195 = !DILocation(line: 351, column: 6, scope: !8339, inlinedAt: !11134)
!11196 = !DILocation(line: 352, column: 3, scope: !8400, inlinedAt: !11134)
!11197 = !DILocation(line: 354, column: 32, scope: !8405, inlinedAt: !11134)
!11198 = !DILocation(line: 354, column: 37, scope: !8405, inlinedAt: !11134)
!11199 = !DILocation(line: 354, column: 42, scope: !8405, inlinedAt: !11134)
!11200 = !DILocation(line: 354, column: 45, scope: !8405, inlinedAt: !11134)
!11201 = !DILocation(line: 354, column: 50, scope: !8405, inlinedAt: !11134)
!11202 = !DILocation(line: 354, column: 6, scope: !8339, inlinedAt: !11134)
!11203 = !DILocation(line: 355, column: 3, scope: !8405, inlinedAt: !11134)
!11204 = !DILocation(line: 356, column: 32, scope: !8413, inlinedAt: !11134)
!11205 = !DILocation(line: 356, column: 37, scope: !8413, inlinedAt: !11134)
!11206 = !DILocation(line: 356, column: 43, scope: !8413, inlinedAt: !11134)
!11207 = !DILocation(line: 356, column: 46, scope: !8413, inlinedAt: !11134)
!11208 = !DILocation(line: 356, column: 51, scope: !8413, inlinedAt: !11134)
!11209 = !DILocation(line: 356, column: 6, scope: !8339, inlinedAt: !11134)
!11210 = !DILocation(line: 357, column: 3, scope: !8413, inlinedAt: !11134)
!11211 = !DILocation(line: 358, column: 6, scope: !8421, inlinedAt: !11134)
!11212 = !DILocation(line: 358, column: 11, scope: !8421, inlinedAt: !11134)
!11213 = !DILocation(line: 358, column: 6, scope: !8339, inlinedAt: !11134)
!11214 = !DILocation(line: 358, column: 26, scope: !8421, inlinedAt: !11134)
!11215 = !DILocation(line: 359, column: 6, scope: !8426, inlinedAt: !11134)
!11216 = !DILocation(line: 359, column: 11, scope: !8426, inlinedAt: !11134)
!11217 = !DILocation(line: 359, column: 6, scope: !8339, inlinedAt: !11134)
!11218 = !DILocation(line: 359, column: 26, scope: !8426, inlinedAt: !11134)
!11219 = !DILocation(line: 360, column: 6, scope: !8431, inlinedAt: !11134)
!11220 = !DILocation(line: 360, column: 11, scope: !8431, inlinedAt: !11134)
!11221 = !DILocation(line: 360, column: 6, scope: !8339, inlinedAt: !11134)
!11222 = !DILocation(line: 360, column: 26, scope: !8431, inlinedAt: !11134)
!11223 = !DILocation(line: 361, column: 6, scope: !8436, inlinedAt: !11134)
!11224 = !DILocation(line: 361, column: 11, scope: !8436, inlinedAt: !11134)
!11225 = !DILocation(line: 361, column: 6, scope: !8339, inlinedAt: !11134)
!11226 = !DILocation(line: 361, column: 26, scope: !8436, inlinedAt: !11134)
!11227 = !DILocation(line: 362, column: 6, scope: !8441, inlinedAt: !11134)
!11228 = !DILocation(line: 362, column: 11, scope: !8441, inlinedAt: !11134)
!11229 = !DILocation(line: 362, column: 6, scope: !8339, inlinedAt: !11134)
!11230 = !DILocation(line: 362, column: 26, scope: !8441, inlinedAt: !11134)
!11231 = !DILocation(line: 363, column: 6, scope: !8446, inlinedAt: !11134)
!11232 = !DILocation(line: 363, column: 11, scope: !8446, inlinedAt: !11134)
!11233 = !DILocation(line: 363, column: 6, scope: !8339, inlinedAt: !11134)
!11234 = !DILocation(line: 363, column: 26, scope: !8446, inlinedAt: !11134)
!11235 = !DILocation(line: 364, column: 6, scope: !8451, inlinedAt: !11134)
!11236 = !DILocation(line: 364, column: 11, scope: !8451, inlinedAt: !11134)
!11237 = !DILocation(line: 364, column: 6, scope: !8339, inlinedAt: !11134)
!11238 = !DILocation(line: 364, column: 26, scope: !8451, inlinedAt: !11134)
!11239 = !DILocation(line: 365, column: 6, scope: !8456, inlinedAt: !11134)
!11240 = !DILocation(line: 365, column: 11, scope: !8456, inlinedAt: !11134)
!11241 = !DILocation(line: 365, column: 6, scope: !8339, inlinedAt: !11134)
!11242 = !DILocation(line: 365, column: 26, scope: !8456, inlinedAt: !11134)
!11243 = !DILocation(line: 366, column: 6, scope: !8461, inlinedAt: !11134)
!11244 = !DILocation(line: 366, column: 11, scope: !8461, inlinedAt: !11134)
!11245 = !DILocation(line: 366, column: 6, scope: !8339, inlinedAt: !11134)
!11246 = !DILocation(line: 366, column: 26, scope: !8461, inlinedAt: !11134)
!11247 = !DILocation(line: 367, column: 6, scope: !8466, inlinedAt: !11134)
!11248 = !DILocation(line: 367, column: 11, scope: !8466, inlinedAt: !11134)
!11249 = !DILocation(line: 367, column: 6, scope: !8339, inlinedAt: !11134)
!11250 = !DILocation(line: 367, column: 26, scope: !8466, inlinedAt: !11134)
!11251 = !DILocation(line: 368, column: 6, scope: !8471, inlinedAt: !11134)
!11252 = !DILocation(line: 368, column: 11, scope: !8471, inlinedAt: !11134)
!11253 = !DILocation(line: 368, column: 6, scope: !8339, inlinedAt: !11134)
!11254 = !DILocation(line: 368, column: 26, scope: !8471, inlinedAt: !11134)
!11255 = !DILocation(line: 369, column: 6, scope: !8476, inlinedAt: !11134)
!11256 = !DILocation(line: 369, column: 11, scope: !8476, inlinedAt: !11134)
!11257 = !DILocation(line: 369, column: 6, scope: !8339, inlinedAt: !11134)
!11258 = !DILocation(line: 369, column: 26, scope: !8476, inlinedAt: !11134)
!11259 = !DILocation(line: 370, column: 6, scope: !8481, inlinedAt: !11134)
!11260 = !DILocation(line: 370, column: 11, scope: !8481, inlinedAt: !11134)
!11261 = !DILocation(line: 370, column: 6, scope: !8339, inlinedAt: !11134)
!11262 = !DILocation(line: 370, column: 26, scope: !8481, inlinedAt: !11134)
!11263 = !DILocation(line: 371, column: 6, scope: !8486, inlinedAt: !11134)
!11264 = !DILocation(line: 371, column: 11, scope: !8486, inlinedAt: !11134)
!11265 = !DILocation(line: 371, column: 6, scope: !8339, inlinedAt: !11134)
!11266 = !DILocation(line: 371, column: 26, scope: !8486, inlinedAt: !11134)
!11267 = !DILocation(line: 372, column: 6, scope: !8491, inlinedAt: !11134)
!11268 = !DILocation(line: 372, column: 11, scope: !8491, inlinedAt: !11134)
!11269 = !DILocation(line: 372, column: 6, scope: !8339, inlinedAt: !11134)
!11270 = !DILocation(line: 372, column: 26, scope: !8491, inlinedAt: !11134)
!11271 = !DILocation(line: 373, column: 6, scope: !8496, inlinedAt: !11134)
!11272 = !DILocation(line: 373, column: 11, scope: !8496, inlinedAt: !11134)
!11273 = !DILocation(line: 373, column: 6, scope: !8339, inlinedAt: !11134)
!11274 = !DILocation(line: 373, column: 26, scope: !8496, inlinedAt: !11134)
!11275 = !DILocation(line: 374, column: 6, scope: !8501, inlinedAt: !11134)
!11276 = !DILocation(line: 374, column: 11, scope: !8501, inlinedAt: !11134)
!11277 = !DILocation(line: 374, column: 6, scope: !8339, inlinedAt: !11134)
!11278 = !DILocation(line: 374, column: 26, scope: !8501, inlinedAt: !11134)
!11279 = !DILocation(line: 375, column: 6, scope: !8506, inlinedAt: !11134)
!11280 = !DILocation(line: 375, column: 11, scope: !8506, inlinedAt: !11134)
!11281 = !DILocation(line: 375, column: 6, scope: !8339, inlinedAt: !11134)
!11282 = !DILocation(line: 375, column: 27, scope: !8506, inlinedAt: !11134)
!11283 = !DILocation(line: 376, column: 6, scope: !8511, inlinedAt: !11134)
!11284 = !DILocation(line: 376, column: 11, scope: !8511, inlinedAt: !11134)
!11285 = !DILocation(line: 376, column: 6, scope: !8339, inlinedAt: !11134)
!11286 = !DILocation(line: 376, column: 32, scope: !8511, inlinedAt: !11134)
!11287 = !DILocation(line: 377, column: 6, scope: !8516, inlinedAt: !11134)
!11288 = !DILocation(line: 377, column: 11, scope: !8516, inlinedAt: !11134)
!11289 = !DILocation(line: 377, column: 6, scope: !8339, inlinedAt: !11134)
!11290 = !DILocation(line: 377, column: 32, scope: !8516, inlinedAt: !11134)
!11291 = !DILocation(line: 378, column: 6, scope: !8521, inlinedAt: !11134)
!11292 = !DILocation(line: 378, column: 11, scope: !8521, inlinedAt: !11134)
!11293 = !DILocation(line: 378, column: 6, scope: !8339, inlinedAt: !11134)
!11294 = !DILocation(line: 378, column: 32, scope: !8521, inlinedAt: !11134)
!11295 = !DILocation(line: 379, column: 6, scope: !8526, inlinedAt: !11134)
!11296 = !DILocation(line: 379, column: 11, scope: !8526, inlinedAt: !11134)
!11297 = !DILocation(line: 379, column: 6, scope: !8339, inlinedAt: !11134)
!11298 = !DILocation(line: 379, column: 33, scope: !8526, inlinedAt: !11134)
!11299 = !DILocation(line: 380, column: 6, scope: !8531, inlinedAt: !11134)
!11300 = !DILocation(line: 380, column: 11, scope: !8531, inlinedAt: !11134)
!11301 = !DILocation(line: 380, column: 6, scope: !8339, inlinedAt: !11134)
!11302 = !DILocation(line: 380, column: 33, scope: !8531, inlinedAt: !11134)
!11303 = !DILocation(line: 381, column: 6, scope: !8536, inlinedAt: !11134)
!11304 = !DILocation(line: 381, column: 11, scope: !8536, inlinedAt: !11134)
!11305 = !DILocation(line: 381, column: 6, scope: !8339, inlinedAt: !11134)
!11306 = !DILocation(line: 381, column: 33, scope: !8536, inlinedAt: !11134)
!11307 = !DILocation(line: 382, column: 2, scope: !8541, inlinedAt: !11134)
!11308 = !DILocation(line: 382, column: 2, scope: !8545, inlinedAt: !11134)
!11309 = !DILocation(line: 382, column: 2, scope: !8546, inlinedAt: !11134)
!11310 = !DILocation(line: 386, column: 1, scope: !8339, inlinedAt: !11134)
!11311 = !DILocation(line: 547, column: 9, scope: !8322, inlinedAt: !11126)
!11312 = !DILocation(line: 549, column: 8, scope: !8552, inlinedAt: !11126)
!11313 = !DILocation(line: 549, column: 7, scope: !8322, inlinedAt: !11126)
!11314 = !DILocation(line: 550, column: 4, scope: !8552, inlinedAt: !11126)
!11315 = !DILocation(line: 553, column: 33, scope: !8322, inlinedAt: !11126)
!11316 = !DILocation(line: 325, column: 6, scope: !8557, inlinedAt: !11132)
!11317 = !DILocation(line: 325, column: 6, scope: !8333, inlinedAt: !11132)
!11318 = !DILocation(line: 326, column: 3, scope: !8557, inlinedAt: !11132)
!11319 = !DILocation(line: 332, column: 9, scope: !8333, inlinedAt: !11132)
!11320 = !DILocation(line: 332, column: 15, scope: !8333, inlinedAt: !11132)
!11321 = !DILocation(line: 332, column: 2, scope: !8333, inlinedAt: !11132)
!11322 = !DILocation(line: 336, column: 1, scope: !8333, inlinedAt: !11132)
!11323 = !DILocation(line: 553, column: 5, scope: !8322, inlinedAt: !11126)
!11324 = !DILocation(line: 553, column: 41, scope: !8322, inlinedAt: !11126)
!11325 = !DILocation(line: 554, column: 5, scope: !8322, inlinedAt: !11126)
!11326 = !DILocation(line: 554, column: 12, scope: !8322, inlinedAt: !11126)
!11327 = !DILocation(line: 448, column: 31, scope: !8317, inlinedAt: !11125)
!11328 = !DILocation(line: 448, column: 34, scope: !8317, inlinedAt: !11125)
!11329 = !DILocation(line: 448, column: 14, scope: !8317, inlinedAt: !11125)
!11330 = !DILocation(line: 450, column: 22, scope: !8317, inlinedAt: !11125)
!11331 = !DILocation(line: 450, column: 25, scope: !8317, inlinedAt: !11125)
!11332 = !DILocation(line: 450, column: 30, scope: !8317, inlinedAt: !11125)
!11333 = !DILocation(line: 450, column: 36, scope: !8317, inlinedAt: !11125)
!11334 = !DILocation(line: 450, column: 8, scope: !8317, inlinedAt: !11125)
!11335 = !DILocation(line: 450, column: 6, scope: !8317, inlinedAt: !11125)
!11336 = !DILocation(line: 451, column: 9, scope: !8317, inlinedAt: !11125)
!11337 = !DILocation(line: 552, column: 3, scope: !8322, inlinedAt: !11126)
!11338 = !DILocation(line: 557, column: 19, scope: !8324, inlinedAt: !11126)
!11339 = !DILocation(line: 557, column: 25, scope: !8324, inlinedAt: !11126)
!11340 = !DILocation(line: 557, column: 9, scope: !8324, inlinedAt: !11126)
!11341 = !DILocation(line: 557, column: 2, scope: !8324, inlinedAt: !11126)
!11342 = !DILocation(line: 558, column: 1, scope: !8324, inlinedAt: !11126)
!11343 = !DILocation(line: 591, column: 3, scope: !11127)
!11344 = !DILocation(line: 592, column: 19, scope: !11123)
!11345 = !DILocation(line: 592, column: 26, scope: !11123)
!11346 = !DILocation(line: 592, column: 9, scope: !11123)
!11347 = !DILocation(line: 592, column: 2, scope: !11123)
!11348 = !DILocation(line: 593, column: 1, scope: !11123)
!11349 = distinct !DISubprogram(name: "__must_check_overflow", scope: !11350, file: !11350, line: 52, type: !11351, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!11350 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!11351 = !DISubroutineType(types: !11352)
!11352 = !{!499, !499}
!11353 = !DILocalVariable(name: "overflow", arg: 1, scope: !11349, file: !11350, line: 52, type: !499)
!11354 = !DILocation(line: 52, column: 60, scope: !11349)
!11355 = !DILocation(line: 54, column: 9, scope: !11349)
!11356 = !DILocation(line: 54, column: 2, scope: !11349)
