; ModuleID = '../bcout/drivers/base/core.llvm.bc'
source_filename = "drivers/base/core.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall2.init\22, \22a\22\09"
module asm "__initcall_devlink_class_init2:\09\09\09"
module asm ".long\09devlink_class_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"
module asm ".section\09\22.initcall7.init\22, \22a\22\09"
module asm "__initcall_sync_state_resume_initcall7:\09\09\09"
module asm ".long\09sync_state_resume_initcall - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.srcu_struct = type { [2 x i16], i16, i8, i8, %struct.swait_queue_head, %struct.callback_head*, %struct.callback_head**, %struct.work_struct }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.atomic64_t = type { i64 }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.module = type opaque
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.attribute = type { i8*, i16 }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.84, %struct.list_head, %struct.list_head, %union.anon.85 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.82 }
%union.anon.82 = type { %struct.anon.83 }
%struct.anon.83 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.page = type { i64, %union.anon.2, %union.anon.74, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.74 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.75, i32 }
%union.anon.75 = type { %struct.kuid_t }
%struct.kuid_t = type { i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.atomic_t = type { i32 }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.86, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.86 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.67, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.llist_node = type { %struct.llist_node* }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.proc_dir_entry = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.35, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.35 = type { %struct.anon.36 }
%struct.anon.36 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.88, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.128, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.anon.88 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.iw_handler_def = type opaque
%struct.iw_public_data = type opaque
%struct.net_device_ops = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.sk_buff = type { %union.anon.40, %union.anon.43, %union.anon.44, [48 x i8], %union.anon.45, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.47, i32, i32, i32, i16, i16, %union.anon.49, %union.anon.50, %union.anon.51, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon.40 = type { %struct.anon.41 }
%struct.anon.41 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.42 }
%union.anon.42 = type { %struct.net_device* }
%union.anon.43 = type { %struct.sock* }
%union.anon.44 = type { i64 }
%union.anon.45 = type { %struct.anon.46 }
%struct.anon.46 = type { i64, void (%struct.sk_buff*)* }
%union.anon.47 = type { i32 }
%union.anon.49 = type { i32 }
%union.anon.50 = type { i32 }
%union.anon.51 = type { i16 }
%struct.ifreq = type { %union.anon.89, %union.anon.90 }
%union.anon.89 = type { [16 x i8] }
%union.anon.90 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.neigh_parms = type opaque
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.nlattr = type { i16, i16 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.nla_policy = type opaque
%struct.neighbour = type opaque
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.92 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%union.anon.92 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.udp_tunnel_info = type opaque
%struct.netdev_bpf = type { i32, %union.anon.93 }
%union.anon.93 = type { %struct.anon.94 }
%struct.anon.94 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.xdp_mem_info = type { i32, i32 }
%struct.devlink_port = type opaque
%struct.ip_tunnel_parm = type opaque
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.125 }
%union.anon.125 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.126, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.126 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.127 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.127 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type opaque
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.vlan_info = type opaque
%struct.in_device = type opaque
%struct.inet6_dev = type opaque
%struct.wireless_dev = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.bpf_prog = type opaque
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.Qdisc = type opaque
%struct.xdp_dev_bulk_queue = type opaque
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.possible_net_t = type { %struct.net* }
%union.anon.128 = type { i8* }
%struct.rtnl_link_ops = type opaque
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type opaque
%struct.sfp_bus = type opaque
%struct.udp_tunnel_nic_info = type opaque
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.u64_stats_sync = type {}
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ipv4_devconf = type opaque
%struct.ip_ra_chain = type opaque
%struct.inet_peer_base = type opaque
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.38, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.38 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.in6_addr = type { %union.anon.39 }
%union.anon.39 = type { [4 x i32] }
%struct.kmem_cache = type opaque
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type opaque
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type opaque
%struct.tcp_congestion_ops = type opaque
%struct.tcp_fastopen_context = type opaque
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type opaque
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.52 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.ipv6_devconf = type opaque
%struct.fib6_info = type opaque
%struct.rt6_info = type opaque
%struct.rt6_statistics = type opaque
%struct.fib6_table = type opaque
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.dst_entry = type opaque
%struct.percpu_counter = type { i64 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.seg6_pernet_data = type opaque
%struct.anon.52 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.net_generic = type opaque
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.sock = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.53, %union.anon.54, i32 }
%struct.request_queue = type opaque
%union.anon.53 = type { %struct.list_head }
%union.anon.54 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.55 }
%struct.anon.55 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.59 }
%struct.anon.59 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.66, i32, [12 x i8] }
%union.anon.66 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.67 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.68, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.71 }
%union.anon.68 = type { %struct.anon.69 }
%struct.anon.69 = type { i64, i64 }
%union.anon.71 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.poll_table_struct = type opaque
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type { %struct.klist, %struct.klist_node, %struct.klist_node, %struct.klist_node, %struct.klist_node, %struct.list_head, %struct.device_driver*, i8*, %struct.device*, i8 }
%struct.klist = type { %struct.spinlock, %struct.list_head, void (%struct.klist_node*)*, void (%struct.klist_node*)* }
%struct.klist_node = type { i8*, %struct.list_head, %struct.kref }
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type { %struct.kobject, %struct.klist, %struct.klist_node, %struct.module_kobject*, %struct.device_driver* }
%struct.module_kobject = type { %struct.kobject, %struct.module*, %struct.kobject*, %struct.module_param_attrs*, %struct.completion* }
%struct.module_param_attrs = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type { %struct.device*, i32, i32, i8* }
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type { %struct.pm_qos_constraints, %struct.pm_qos_constraints, %struct.freq_constraints, %struct.pm_qos_flags, %struct.dev_pm_qos_request*, %struct.dev_pm_qos_request*, %struct.dev_pm_qos_request* }
%struct.pm_qos_constraints = type { %struct.plist_head, i32, i32, i32, i32, %struct.blocking_notifier_head* }
%struct.plist_head = type { %struct.list_head }
%struct.freq_constraints = type { %struct.pm_qos_constraints, %struct.blocking_notifier_head, %struct.pm_qos_constraints, %struct.blocking_notifier_head }
%struct.pm_qos_flags = type { %struct.list_head, i32 }
%struct.dev_pm_qos_request = type { i32, %union.anon.87, %struct.device* }
%union.anon.87 = type { %struct.freq_qos_request }
%struct.freq_qos_request = type { i32, %struct.plist_node, %struct.freq_constraints* }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type opaque
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.33 }
%union.anon.33 = type { %struct.anon.34, [48 x i8] }
%struct.anon.34 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.84 = type { %struct.list_head }
%union.anon.85 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.76, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.77, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.78, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.81, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.76 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.77 = type { %struct.callback_head }
%union.anon.78 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.81 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.79 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.79 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.37 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.37 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.subsys_private = type { %struct.kset, %struct.kset*, %struct.list_head, %struct.mutex, %struct.kset*, %struct.klist, %struct.klist, %struct.blocking_notifier_head, i8, %struct.bus_type*, %struct.kset, %struct.class* }
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.obs_kernel_param = type { i8*, i32 (i8*)*, i32 }
%struct.class_interface = type { %struct.list_head, %struct.class*, i32 (%struct.device*, %struct.class_interface*)*, void (%struct.device*, %struct.class_interface*)* }
%struct.device_link = type { %struct.device*, %struct.list_head, %struct.device*, %struct.list_head, %struct.device, i32, i32, %struct.refcount_struct, %struct.kref, %struct.callback_head, i8 }
%struct.klist_iter = type { %struct.klist*, %struct.klist_node* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.dev_ext_attribute = type { %struct.device_attribute, i8* }
%union.device_attr_group_devres = type { %struct.attribute_group* }
%struct.root_device = type { %struct.device, %struct.module* }
%struct.va_format = type { i8*, [1 x %struct.__va_list_tag]* }
%struct.dev_printk_info = type { [16 x i8], [48 x i8] }
%struct.acpi_device = type { i32, i8*, %struct.fwnode_handle, %struct.acpi_device*, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.acpi_device_status, %struct.acpi_device_flags, %struct.acpi_device_pnp, %struct.acpi_device_power, %struct.acpi_device_wakeup, %struct.acpi_device_perf, %struct.acpi_device_dir, %struct.acpi_device_data, %struct.acpi_scan_handler*, %struct.acpi_hotplug_context*, %struct.acpi_driver*, %struct.acpi_gpio_mapping*, i8*, %struct.device, i32, i32, %struct.list_head, %struct.mutex, void (%struct.acpi_device*)* }
%struct.acpi_device_status = type { i32 }
%struct.acpi_device_flags = type { i32 }
%struct.acpi_device_pnp = type { [8 x i8], %struct.acpi_pnp_type, i64, i8*, %struct.list_head, [40 x i8], [20 x i8], %union.acpi_object* }
%struct.acpi_pnp_type = type { i32 }
%union.acpi_object = type { %struct.anon.134 }
%struct.anon.134 = type { i32, i32, i64, i32 }
%struct.acpi_device_power = type { i32, %struct.acpi_device_power_flags, [5 x %struct.acpi_device_power_state] }
%struct.acpi_device_power_flags = type { i32 }
%struct.acpi_device_power_state = type { %struct.anon.136, i32, i32, %struct.list_head }
%struct.anon.136 = type { i8 }
%struct.acpi_device_wakeup = type { i8*, i64, i64, %struct.list_head, %struct.acpi_device_wakeup_flags, %struct.acpi_device_wakeup_context, %struct.wakeup_source*, i32, i32 }
%struct.acpi_device_wakeup_flags = type { i8 }
%struct.acpi_device_wakeup_context = type { void (%struct.acpi_device_wakeup_context*)*, %struct.device* }
%struct.acpi_device_perf = type { i32, %struct.acpi_device_perf_flags, i32, %struct.acpi_device_perf_state* }
%struct.acpi_device_perf_flags = type { i8 }
%struct.acpi_device_perf_state = type { %struct.anon.137, i8, i8, i32 }
%struct.anon.137 = type { i8 }
%struct.acpi_device_dir = type { %struct.proc_dir_entry* }
%struct.acpi_device_data = type { %union.acpi_object*, %struct.list_head, %union.acpi_object*, %struct.list_head }
%struct.acpi_scan_handler = type { %struct.acpi_device_id*, %struct.list_head, i1 (i8*, %struct.acpi_device_id**)*, i32 (%struct.acpi_device*, %struct.acpi_device_id*)*, void (%struct.acpi_device*)*, void (%struct.device*)*, void (%struct.device*)*, %struct.acpi_hotplug_profile }
%struct.acpi_hotplug_profile = type { %struct.kobject, i32 (%struct.acpi_device*)*, void (%struct.acpi_device*)*, i8 }
%struct.acpi_hotplug_context = type { %struct.acpi_device*, i32 (%struct.acpi_device*, i32)*, void (%struct.acpi_device*, i32)*, void (%struct.acpi_device*)* }
%struct.acpi_driver = type { [80 x i8], [80 x i8], %struct.acpi_device_id*, i32, %struct.acpi_device_ops, %struct.device_driver, %struct.module* }
%struct.acpi_device_ops = type { i32 (%struct.acpi_device*)*, i32 (%struct.acpi_device*)*, void (%struct.acpi_device*, i32)* }
%struct.acpi_gpio_mapping = type opaque
%struct.class_dir = type { %struct.kobject, %struct.class* }
%struct.kernfs_elem_dir = type { i64, %struct.rb_root, %struct.kernfs_root* }
%struct.kernfs_root = type { %struct.kernfs_node*, i32, %struct.idr, i32, i32, %struct.kernfs_syscall_ops*, %struct.list_head, %struct.wait_queue_head }
%struct.kernfs_syscall_ops = type { i32 (%struct.seq_file*, %struct.kernfs_root*)*, i32 (%struct.kernfs_node*, i8*, i16)*, i32 (%struct.kernfs_node*)*, i32 (%struct.kernfs_node*, %struct.kernfs_node*, i8*)*, i32 (%struct.seq_file*, %struct.kernfs_node*, %struct.kernfs_root*)* }

@device_links_srcu = internal global %struct.srcu_struct { [2 x i16] zeroinitializer, i16 0, i8 0, i8 0, %struct.swait_queue_head { %struct.raw_spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.srcu_struct* @device_links_srcu to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.srcu_struct* @device_links_srcu to i8*), i64 8) to %struct.list_head*) } }, %struct.callback_head* null, %struct.callback_head** bitcast (i8* getelementptr (i8, i8* bitcast (%struct.srcu_struct* @device_links_srcu to i8*), i64 24) to %struct.callback_head**), %struct.work_struct { %struct.atomic64_t { i64 68719476704 }, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.srcu_struct* @device_links_srcu to i8*), i64 48) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.srcu_struct* @device_links_srcu to i8*), i64 48) to %struct.list_head*) }, void (%struct.work_struct*)* @srcu_drive_gp } }, align 8, !dbg !0
@__UNIQUE_ID___addressable_devlink_class_init340 = internal global i8* bitcast (i32 ()* @devlink_class_init to i8*), section ".discard.addressable", align 8, !dbg !7802
@devlink_class = internal global %struct.class { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.35, i32 0, i32 0), %struct.module* null, %struct.attribute_group** null, %struct.attribute_group** getelementptr inbounds ([2 x %struct.attribute_group*], [2 x %struct.attribute_group*]* @devlink_groups, i32 0, i32 0), %struct.kobject* null, i32 (%struct.device*, %struct.kobj_uevent_env*)* null, i8* (%struct.device*, i16*)* null, void (%struct.class*)* null, void (%struct.device*)* @devlink_dev_release, i32 (%struct.device*)* null, %struct.kobj_ns_type_operations* null, i8* (%struct.device*)* null, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)* null, %struct.dev_pm_ops* null, %struct.subsys_private* null }, align 8, !dbg !7848
@.str = private unnamed_addr constant [7 x i8] c"%s--%s\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"drivers/base/core.c\00", align 1
@wfs_lock = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @wfs_lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @wfs_lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !7866
@defer_sync_state_count = internal global i32 1, align 4, !dbg !7868
@.str.2 = private unnamed_addr constant [35 x i8] c"Unmatched sync_state pause/resume!\00", align 1
@deferred_sync = internal global %struct.list_head { %struct.list_head* @deferred_sync, %struct.list_head* @deferred_sync }, align 8, !dbg !7870
@__UNIQUE_ID___addressable_sync_state_resume_initcall369 = internal global i8* bitcast (i32 ()* @sync_state_resume_initcall to i8*), section ".discard.addressable", align 8, !dbg !7804
@dev_attr_waiting_for_supplier = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.52, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @waiting_for_supplier_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !7872
@__setup_str_fw_devlink_setup = internal constant [11 x i8] c"fw_devlink\00", section ".init.rodata", align 1, !dbg !7874
@__setup_fw_devlink_setup = internal global %struct.obs_kernel_param { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__setup_str_fw_devlink_setup, i32 0, i32 0), i32 (i8*)* @fw_devlink_setup, i32 1 }, section ".init.setup", align 8, !dbg !7806
@fw_devlink_flags = internal global i32 128, align 4, !dbg !7879
@defer_fw_devlink_lock = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @defer_fw_devlink_lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @defer_fw_devlink_lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !7881
@defer_fw_devlink_count = internal global i32 0, align 4, !dbg !7829
@.str.3 = private unnamed_addr constant [35 x i8] c"Unmatched fw_devlink pause/resume!\00", align 1
@deferred_fw_devlink = internal global %struct.list_head { %struct.list_head* @deferred_fw_devlink, %struct.list_head* @deferred_fw_devlink }, align 8, !dbg !7885
@platform_notify = dso_local global i32 (%struct.device*)* null, align 8, !dbg !7817
@platform_notify_remove = dso_local global i32 (%struct.device*)* null, align 8, !dbg !7819
@device_hotplug_lock = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @device_hotplug_lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @device_hotplug_lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !7887
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"%lx\0A\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@devices_kset = dso_local global %struct.kset* null, align 8, !dbg !7837
@.str.7 = private unnamed_addr constant [48 x i8] c"Attribute %s: write permission without 'store'\0A\00", align 1
@.str.8 = private unnamed_addr constant [46 x i8] c"Attribute %s: read permission without 'show'\0A\00", align 1
@device_ktype = internal global %struct.kobj_type { void (%struct.kobject*)* @device_release, %struct.sysfs_ops* @dev_sysfs_ops, %struct.attribute** null, %struct.attribute_group** null, %struct.kobj_ns_type_operations* (%struct.kobject*)* null, i8* (%struct.kobject*)* @device_namespace, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* @device_get_ownership }, align 8, !dbg !7889
@device_initialize.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !7821
@.str.9 = private unnamed_addr constant [12 x i8] c"&dev->mutex\00", align 1
@virtual_device_parent.virtual_dir = internal global %struct.kobject* null, align 8, !dbg !7824
@.str.10 = private unnamed_addr constant [8 x i8] c"virtual\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"%s%u\00", align 1
@dev_attr_uevent = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.60, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @uevent_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @uevent_store }, align 8, !dbg !7897
@dev_attr_dev = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @dev_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !7901
@.str.13 = private unnamed_addr constant [8 x i8] c"devices\00", align 1
@device_uevent_ops = internal constant %struct.kset_uevent_ops { i32 (%struct.kset*, %struct.kobject*)* @dev_uevent_filter, i8* (%struct.kset*, %struct.kobject*)* @dev_uevent_name, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* @dev_uevent }, align 8, !dbg !7903
@.str.14 = private unnamed_addr constant [4 x i8] c"dev\00", align 1
@dev_kobj = internal global %struct.kobject* null, align 8, !dbg !7831
@.str.15 = private unnamed_addr constant [6 x i8] c"block\00", align 1
@sysfs_dev_block_kobj = dso_local global %struct.kobject* null, align 8, !dbg !7835
@.str.16 = private unnamed_addr constant [5 x i8] c"char\00", align 1
@sysfs_dev_char_kobj = dso_local global %struct.kobject* null, align 8, !dbg !7833
@.str.17 = private unnamed_addr constant [7 x i8] c"module\00", align 1
@initcall_debug = external dso_local global i8, align 1
@.str.18 = private unnamed_addr constant [14 x i8] c"shutdown_pre\0A\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"shutdown\0A\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"\010\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"\011\00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c"\012\00", align 1
@.str.23 = private unnamed_addr constant [3 x i8] c"\013\00", align 1
@.str.24 = private unnamed_addr constant [3 x i8] c"\014\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"\015\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c"\016\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"error %pe: %pV\00", align 1
@.str.28 = private unnamed_addr constant [21 x i8] c"include/linux/srcu.h\00", align 1
@devlink_class_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !7839
@devlink_class_intf = internal global %struct.class_interface { %struct.list_head zeroinitializer, %struct.class* @devlink_class, i32 (%struct.device*, %struct.class_interface*)* @devlink_add_symlinks, void (%struct.device*, %struct.class_interface*)* @devlink_remove_symlinks }, align 8, !dbg !7844
@.str.29 = private unnamed_addr constant [9 x i8] c"supplier\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"consumer\00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c"consumer:%s\00", align 1
@.str.32 = private unnamed_addr constant [12 x i8] c"supplier:%s\00", align 1
@.str.33 = private unnamed_addr constant [47 x i8] c"Unable to properly free device link symlinks!\0A\00", align 1
@device_links_lock = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @device_links_lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @device_links_lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !7846
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.34 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.35 = private unnamed_addr constant [8 x i8] c"devlink\00", align 1
@devlink_groups = internal global [2 x %struct.attribute_group*] [%struct.attribute_group* @devlink_group, %struct.attribute_group* null], align 16, !dbg !7850
@devlink_group = internal constant %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([5 x %struct.attribute*], [5 x %struct.attribute*]* @devlink_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !7853
@devlink_attrs = internal global [5 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_status, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_auto_remove_on, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_runtime_pm, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_sync_state_only, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !7855
@dev_attr_status = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @status_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !7858
@dev_attr_auto_remove_on = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.45, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @auto_remove_on_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !7860
@dev_attr_runtime_pm = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.49, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @runtime_pm_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !7862
@dev_attr_sync_state_only = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.50, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @sync_state_only_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !7864
@.str.36 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.37 = private unnamed_addr constant [12 x i8] c"not tracked\00", align 1
@.str.38 = private unnamed_addr constant [8 x i8] c"dormant\00", align 1
@.str.39 = private unnamed_addr constant [10 x i8] c"available\00", align 1
@.str.40 = private unnamed_addr constant [17 x i8] c"consumer probing\00", align 1
@.str.41 = private unnamed_addr constant [7 x i8] c"active\00", align 1
@.str.42 = private unnamed_addr constant [19 x i8] c"supplier unbinding\00", align 1
@.str.43 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"auto_remove_on\00", align 1
@.str.46 = private unnamed_addr constant [16 x i8] c"supplier unbind\00", align 1
@.str.47 = private unnamed_addr constant [16 x i8] c"consumer unbind\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str.49 = private unnamed_addr constant [11 x i8] c"runtime_pm\00", align 1
@.str.50 = private unnamed_addr constant [16 x i8] c"sync_state_only\00", align 1
@.str.51 = private unnamed_addr constant [48 x i8] c"Unable to drop a managed device link reference\0A\00", align 1
@.str.52 = private unnamed_addr constant [21 x i8] c"waiting_for_supplier\00", align 1
@.str.53 = private unnamed_addr constant [4 x i8] c"%u\0A\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.55 = private unnamed_addr constant [11 x i8] c"permissive\00", align 1
@.str.56 = private unnamed_addr constant [3 x i8] c"on\00", align 1
@.str.57 = private unnamed_addr constant [4 x i8] c"rpm\00", align 1
@wait_for_suppliers = internal global %struct.list_head { %struct.list_head* @wait_for_suppliers, %struct.list_head* @wait_for_suppliers }, align 8, !dbg !7883
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@dev_sysfs_ops = internal constant %struct.sysfs_ops { i64 (%struct.kobject*, %struct.attribute*, i8*)* @dev_attr_show, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* @dev_attr_store }, align 8, !dbg !7891
@.str.58 = private unnamed_addr constant [123 x i8] c"\013Device '%s' does not have a release() function, it is broken and must be fixed. See Documentation/core-api/kobject.rst.\0A\00", align 1
@.str.59 = private unnamed_addr constant [39 x i8] c"dev_attr_show: %pS returned bad count\0A\00", align 1
@gdp_mutex = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @gdp_mutex to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @gdp_mutex to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !7893
@class_dir_ktype = internal global %struct.kobj_type { void (%struct.kobject*)* @class_dir_release, %struct.sysfs_ops* @kobj_sysfs_ops, %struct.attribute** null, %struct.attribute_group** null, %struct.kobj_ns_type_operations* (%struct.kobject*)* @class_dir_child_ns_type, i8* (%struct.kobject*)* null, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* null }, align 8, !dbg !7895
@kobj_sysfs_ops = external dso_local constant %struct.sysfs_ops, align 8
@.str.60 = private unnamed_addr constant [7 x i8] c"uevent\00", align 1
@.str.61 = private unnamed_addr constant [41 x i8] c"uevent: failed to send synthetic uevent\0A\00", align 1
@.str.62 = private unnamed_addr constant [8 x i8] c"of_node\00", align 1
@.str.63 = private unnamed_addr constant [32 x i8] c"Error %d creating of_node link\0A\00", align 1
@.str.64 = private unnamed_addr constant [10 x i8] c"subsystem\00", align 1
@.str.65 = private unnamed_addr constant [7 x i8] c"device\00", align 1
@part_type = external dso_local global %struct.device_type, align 8
@dev_attr_online = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.66, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @online_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @online_store }, align 8, !dbg !7899
@.str.66 = private unnamed_addr constant [7 x i8] c"online\00", align 1
@.str.67 = private unnamed_addr constant [7 x i8] c"%u:%u\0A\00", align 1
@.str.68 = private unnamed_addr constant [6 x i8] c"%u:%u\00", align 1
@.str.69 = private unnamed_addr constant [24 x i8] c"include/linux/kobject.h\00", align 1
@.str.70 = private unnamed_addr constant [9 x i8] c"MAJOR=%u\00", align 1
@.str.71 = private unnamed_addr constant [9 x i8] c"MINOR=%u\00", align 1
@.str.72 = private unnamed_addr constant [11 x i8] c"DEVNAME=%s\00", align 1
@.str.73 = private unnamed_addr constant [12 x i8] c"DEVMODE=%#o\00", align 1
@.str.74 = private unnamed_addr constant [10 x i8] c"DEVUID=%u\00", align 1
@init_user_ns = external dso_local global %struct.user_namespace, align 8
@.str.75 = private unnamed_addr constant [10 x i8] c"DEVGID=%u\00", align 1
@.str.76 = private unnamed_addr constant [11 x i8] c"DEVTYPE=%s\00", align 1
@.str.77 = private unnamed_addr constant [10 x i8] c"DRIVER=%s\00", align 1
@.str.78 = private unnamed_addr constant [8 x i8] c"%c%u:%u\00", align 1
@.str.79 = private unnamed_addr constant [4 x i8] c"net\00", align 1
@.str.80 = private unnamed_addr constant [4 x i8] c"n%u\00", align 1
@.str.81 = private unnamed_addr constant [7 x i8] c"+%s:%s\00", align 1
@.str.82 = private unnamed_addr constant [11 x i8] c"%s %s: %pV\00", align 1
@.str.83 = private unnamed_addr constant [23 x i8] c"%s(NULL device *): %pV\00", align 1
@llvm.used = appending global [3 x i8*] [i8* bitcast (i8** @__UNIQUE_ID___addressable_devlink_class_init340 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_sync_state_resume_initcall369 to i8*), i8* bitcast (%struct.obs_kernel_param* @__setup_fw_devlink_setup to i8*)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @device_links_read_lock() #0 !dbg !7923 {
entry:
  %call = call i32 @srcu_read_lock(%struct.srcu_struct* @device_links_srcu) #10, !dbg !7924
  ret i32 %call, !dbg !7925
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @srcu_read_lock(%struct.srcu_struct* %ssp) #0 !dbg !7926 {
entry:
  %ssp.addr = alloca %struct.srcu_struct*, align 8
  %retval1 = alloca i32, align 4
  store %struct.srcu_struct* %ssp, %struct.srcu_struct** %ssp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.srcu_struct** %ssp.addr, metadata !7931, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !7933, metadata !DIExpression()), !dbg !7934
  %0 = load %struct.srcu_struct*, %struct.srcu_struct** %ssp.addr, align 8, !dbg !7935
  %call = call i32 @__srcu_read_lock(%struct.srcu_struct* %0) #10, !dbg !7936
  store i32 %call, i32* %retval1, align 4, !dbg !7937
  br label %do.body, !dbg !7938

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7939

do.end:                                           ; preds = %do.body
  %1 = load i32, i32* %retval1, align 4, !dbg !7941
  ret i32 %1, !dbg !7942
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @device_links_read_unlock(i32 %idx) #0 !dbg !7943 {
entry:
  %idx.addr = alloca i32, align 4
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !7944, metadata !DIExpression()), !dbg !7945
  %0 = load i32, i32* %idx.addr, align 4, !dbg !7946
  call void @srcu_read_unlock(%struct.srcu_struct* @device_links_srcu, i32 %0) #10, !dbg !7947
  ret void, !dbg !7948
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @srcu_read_unlock(%struct.srcu_struct* %ssp, i32 %idx) #0 !dbg !7949 {
entry:
  %ssp.addr = alloca %struct.srcu_struct*, align 8
  %idx.addr = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.srcu_struct* %ssp, %struct.srcu_struct** %ssp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.srcu_struct** %ssp.addr, metadata !7952, metadata !DIExpression()), !dbg !7953
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !7954, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7956, metadata !DIExpression()), !dbg !7958
  %0 = load i32, i32* %idx.addr, align 4, !dbg !7958
  %and = and i32 %0, -2, !dbg !7958
  %tobool = icmp ne i32 %and, 0, !dbg !7958
  %lnot = xor i1 %tobool, true, !dbg !7958
  %lnot1 = xor i1 %lnot, true, !dbg !7958
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7958
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7958
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !7959
  %tobool2 = icmp ne i32 %1, 0, !dbg !7959
  %lnot3 = xor i1 %tobool2, true, !dbg !7959
  %lnot5 = xor i1 %lnot3, true, !dbg !7959
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !7959
  %conv = sext i32 %lnot.ext6 to i64, !dbg !7959
  %tobool7 = icmp ne i64 %conv, 0, !dbg !7959
  br i1 %tobool7, label %if.then, label %if.end, !dbg !7958

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7959

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !7961

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !7963

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !7961

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28, i64 0, i64 0), i32 179, i32 2307, i64 12) #5, !dbg !7965, !srcloc !7967
  br label %do.end10, !dbg !7965

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 83) #5, !dbg !7968, !srcloc !7970
  br label %do.body11, !dbg !7961

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !7971

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !7961

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !7961

if.end:                                           ; preds = %do.end13, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !7958
  %tobool14 = icmp ne i32 %2, 0, !dbg !7958
  %lnot15 = xor i1 %tobool14, true, !dbg !7958
  %lnot17 = xor i1 %lnot15, true, !dbg !7958
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !7958
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !7958
  store i64 %conv19, i64* %tmp, align 8, !dbg !7959
  %3 = load i64, i64* %tmp, align 8, !dbg !7958
  br label %do.body20, !dbg !7973

do.body20:                                        ; preds = %if.end
  br label %do.end21, !dbg !7974

do.end21:                                         ; preds = %do.body20
  %4 = load %struct.srcu_struct*, %struct.srcu_struct** %ssp.addr, align 8, !dbg !7976
  %5 = load i32, i32* %idx.addr, align 4, !dbg !7977
  call void @__srcu_read_unlock(%struct.srcu_struct* %4, i32 %5) #10, !dbg !7978
  ret void, !dbg !7979
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @device_links_read_lock_held() #0 !dbg !7980 {
entry:
  %call = call i32 @srcu_read_lock_held(%struct.srcu_struct* @device_links_srcu) #10, !dbg !7981
  ret i32 %call, !dbg !7982
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @srcu_read_lock_held(%struct.srcu_struct* %ssp) #0 !dbg !7983 {
entry:
  %ssp.addr = alloca %struct.srcu_struct*, align 8
  store %struct.srcu_struct* %ssp, %struct.srcu_struct** %ssp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.srcu_struct** %ssp.addr, metadata !7988, metadata !DIExpression()), !dbg !7989
  ret i32 1, !dbg !7990
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @device_is_dependent(%struct.device* %dev, i8* %target) #0 !dbg !7991 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %target.addr = alloca i8*, align 8
  %link = alloca %struct.device_link*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_link*, align 8
  %__mptr19 = alloca i8*, align 8
  %tmp24 = alloca %struct.device_link*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7994, metadata !DIExpression()), !dbg !7995
  store i8* %target, i8** %target.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %target.addr, metadata !7996, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !7998, metadata !DIExpression()), !dbg !7999
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8000, metadata !DIExpression()), !dbg !8001
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8002
  %1 = load i8*, i8** %target.addr, align 8, !dbg !8004
  %2 = bitcast i8* %1 to %struct.device*, !dbg !8004
  %cmp = icmp eq %struct.device* %0, %2, !dbg !8005
  br i1 %cmp, label %if.then, label %if.end, !dbg !8006

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !8007
  br label %return, !dbg !8007

if.end:                                           ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8008
  %4 = load i8*, i8** %target.addr, align 8, !dbg !8009
  %call = call i32 @device_for_each_child(%struct.device* %3, i8* %4, i32 (%struct.device*, i8*)* @device_is_dependent) #10, !dbg !8010
  store i32 %call, i32* %ret, align 4, !dbg !8011
  %5 = load i32, i32* %ret, align 4, !dbg !8012
  %tobool = icmp ne i32 %5, 0, !dbg !8012
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !8014

if.then1:                                         ; preds = %if.end
  %6 = load i32, i32* %ret, align 4, !dbg !8015
  store i32 %6, i32* %retval, align 4, !dbg !8016
  br label %return, !dbg !8016

if.end2:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8017, metadata !DIExpression()), !dbg !8020
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8020
  %links = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 10, !dbg !8020
  %consumers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 1, !dbg !8020
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %consumers, i32 0, i32 0, !dbg !8020
  %8 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8020
  %9 = bitcast %struct.list_head* %8 to i8*, !dbg !8020
  store i8* %9, i8** %__mptr, align 8, !dbg !8020
  br label %do.body, !dbg !8020

do.body:                                          ; preds = %if.end2
  br label %do.end, !dbg !8021

do.end:                                           ; preds = %do.body
  %10 = load i8*, i8** %__mptr, align 8, !dbg !8020
  %add.ptr = getelementptr i8, i8* %10, i64 -8, !dbg !8020
  %11 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !8020
  store %struct.device_link* %11, %struct.device_link** %tmp, align 8, !dbg !8021
  %12 = load %struct.device_link*, %struct.device_link** %tmp, align 8, !dbg !8020
  store %struct.device_link* %12, %struct.device_link** %link, align 8, !dbg !8023
  br label %for.cond, !dbg !8023

for.cond:                                         ; preds = %do.end23, %do.end
  %13 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8024
  %s_node = getelementptr inbounds %struct.device_link, %struct.device_link* %13, i32 0, i32 1, !dbg !8024
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8024
  %links3 = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 10, !dbg !8024
  %consumers4 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links3, i32 0, i32 1, !dbg !8024
  %cmp5 = icmp eq %struct.list_head* %s_node, %consumers4, !dbg !8024
  %lnot = xor i1 %cmp5, true, !dbg !8024
  br i1 %lnot, label %for.body, label %for.end, !dbg !8023

for.body:                                         ; preds = %for.cond
  %15 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8026
  %flags = getelementptr inbounds %struct.device_link, %struct.device_link* %15, i32 0, i32 6, !dbg !8029
  %16 = load i32, i32* %flags, align 4, !dbg !8029
  %conv = zext i32 %16 to i64, !dbg !8026
  %cmp6 = icmp eq i64 %conv, 192, !dbg !8030
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !8031

if.then8:                                         ; preds = %for.body
  br label %for.inc, !dbg !8032

if.end9:                                          ; preds = %for.body
  %17 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8033
  %consumer = getelementptr inbounds %struct.device_link, %struct.device_link* %17, i32 0, i32 2, !dbg !8035
  %18 = load %struct.device*, %struct.device** %consumer, align 8, !dbg !8035
  %19 = load i8*, i8** %target.addr, align 8, !dbg !8036
  %20 = bitcast i8* %19 to %struct.device*, !dbg !8036
  %cmp10 = icmp eq %struct.device* %18, %20, !dbg !8037
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !8038

if.then12:                                        ; preds = %if.end9
  store i32 1, i32* %retval, align 4, !dbg !8039
  br label %return, !dbg !8039

if.end13:                                         ; preds = %if.end9
  %21 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8040
  %consumer14 = getelementptr inbounds %struct.device_link, %struct.device_link* %21, i32 0, i32 2, !dbg !8041
  %22 = load %struct.device*, %struct.device** %consumer14, align 8, !dbg !8041
  %23 = load i8*, i8** %target.addr, align 8, !dbg !8042
  %call15 = call i32 @device_is_dependent(%struct.device* %22, i8* %23) #10, !dbg !8043
  store i32 %call15, i32* %ret, align 4, !dbg !8044
  %24 = load i32, i32* %ret, align 4, !dbg !8045
  %tobool16 = icmp ne i32 %24, 0, !dbg !8045
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !8047

if.then17:                                        ; preds = %if.end13
  br label %for.end, !dbg !8048

if.end18:                                         ; preds = %if.end13
  br label %for.inc, !dbg !8049

for.inc:                                          ; preds = %if.end18, %if.then8
  call void @llvm.dbg.declare(metadata i8** %__mptr19, metadata !8050, metadata !DIExpression()), !dbg !8052
  %25 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8052
  %s_node20 = getelementptr inbounds %struct.device_link, %struct.device_link* %25, i32 0, i32 1, !dbg !8052
  %next21 = getelementptr inbounds %struct.list_head, %struct.list_head* %s_node20, i32 0, i32 0, !dbg !8052
  %26 = load %struct.list_head*, %struct.list_head** %next21, align 8, !dbg !8052
  %27 = bitcast %struct.list_head* %26 to i8*, !dbg !8052
  store i8* %27, i8** %__mptr19, align 8, !dbg !8052
  br label %do.body22, !dbg !8052

do.body22:                                        ; preds = %for.inc
  br label %do.end23, !dbg !8053

do.end23:                                         ; preds = %do.body22
  %28 = load i8*, i8** %__mptr19, align 8, !dbg !8052
  %add.ptr25 = getelementptr i8, i8* %28, i64 -8, !dbg !8052
  %29 = bitcast i8* %add.ptr25 to %struct.device_link*, !dbg !8052
  store %struct.device_link* %29, %struct.device_link** %tmp24, align 8, !dbg !8053
  %30 = load %struct.device_link*, %struct.device_link** %tmp24, align 8, !dbg !8052
  store %struct.device_link* %30, %struct.device_link** %link, align 8, !dbg !8024
  br label %for.cond, !dbg !8024, !llvm.loop !8055

for.end:                                          ; preds = %if.then17, %for.cond
  %31 = load i32, i32* %ret, align 4, !dbg !8057
  store i32 %31, i32* %retval, align 4, !dbg !8058
  br label %return, !dbg !8058

return:                                           ; preds = %for.end, %if.then12, %if.then1, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !8059
  ret i32 %32, !dbg !8059
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @device_for_each_child(%struct.device* %parent, i8* %data, i32 (%struct.device*, i8*)* %fn) #0 !dbg !8060 {
entry:
  %retval = alloca i32, align 4
  %parent.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  %fn.addr = alloca i32 (%struct.device*, i8*)*, align 8
  %i = alloca %struct.klist_iter, align 8
  %child = alloca %struct.device*, align 8
  %error = alloca i32, align 4
  store %struct.device* %parent, %struct.device** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %parent.addr, metadata !8064, metadata !DIExpression()), !dbg !8065
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8066, metadata !DIExpression()), !dbg !8067
  store i32 (%struct.device*, i8*)* %fn, i32 (%struct.device*, i8*)** %fn.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.device*, i8*)** %fn.addr, metadata !8068, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.declare(metadata %struct.klist_iter* %i, metadata !8070, metadata !DIExpression()), !dbg !8076
  call void @llvm.dbg.declare(metadata %struct.device** %child, metadata !8077, metadata !DIExpression()), !dbg !8078
  call void @llvm.dbg.declare(metadata i32* %error, metadata !8079, metadata !DIExpression()), !dbg !8080
  store i32 0, i32* %error, align 4, !dbg !8080
  %0 = load %struct.device*, %struct.device** %parent.addr, align 8, !dbg !8081
  %p = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8083
  %1 = load %struct.device_private*, %struct.device_private** %p, align 8, !dbg !8083
  %tobool = icmp ne %struct.device_private* %1, null, !dbg !8081
  br i1 %tobool, label %if.end, label %if.then, !dbg !8084

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8085
  br label %return, !dbg !8085

if.end:                                           ; preds = %entry
  %2 = load %struct.device*, %struct.device** %parent.addr, align 8, !dbg !8086
  %p1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 2, !dbg !8087
  %3 = load %struct.device_private*, %struct.device_private** %p1, align 8, !dbg !8087
  %klist_children = getelementptr inbounds %struct.device_private, %struct.device_private* %3, i32 0, i32 0, !dbg !8088
  call void @klist_iter_init(%struct.klist* %klist_children, %struct.klist_iter* %i) #10, !dbg !8089
  br label %while.cond, !dbg !8090

while.cond:                                       ; preds = %while.body, %if.end
  %4 = load i32, i32* %error, align 4, !dbg !8091
  %tobool2 = icmp ne i32 %4, 0, !dbg !8091
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !8092

land.rhs:                                         ; preds = %while.cond
  %call = call %struct.device* @next_device(%struct.klist_iter* %i) #10, !dbg !8093
  store %struct.device* %call, %struct.device** %child, align 8, !dbg !8094
  %tobool3 = icmp ne %struct.device* %call, null, !dbg !8092
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %5 = phi i1 [ false, %while.cond ], [ %tobool3, %land.rhs ], !dbg !8095
  br i1 %5, label %while.body, label %while.end, !dbg !8090

while.body:                                       ; preds = %land.end
  %6 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %fn.addr, align 8, !dbg !8096
  %7 = load %struct.device*, %struct.device** %child, align 8, !dbg !8097
  %8 = load i8*, i8** %data.addr, align 8, !dbg !8098
  %call4 = call i32 %6(%struct.device* %7, i8* %8) #10, !dbg !8096
  store i32 %call4, i32* %error, align 4, !dbg !8099
  br label %while.cond, !dbg !8090, !llvm.loop !8100

while.end:                                        ; preds = %land.end
  call void @klist_iter_exit(%struct.klist_iter* %i) #10, !dbg !8102
  %9 = load i32, i32* %error, align 4, !dbg !8103
  store i32 %9, i32* %retval, align 4, !dbg !8104
  br label %return, !dbg !8104

return:                                           ; preds = %while.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !8105
  ret i32 %10, !dbg !8105
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @device_pm_move_to_tail(%struct.device* %dev) #0 !dbg !8106 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %idx = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8107, metadata !DIExpression()), !dbg !8108
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !8109, metadata !DIExpression()), !dbg !8110
  %call = call i32 @device_links_read_lock() #10, !dbg !8111
  store i32 %call, i32* %idx, align 4, !dbg !8112
  call void @device_pm_lock() #10, !dbg !8113
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8114
  %call1 = call i32 @device_reorder_to_tail(%struct.device* %0, i8* null) #10, !dbg !8115
  call void @device_pm_unlock() #10, !dbg !8116
  %1 = load i32, i32* %idx, align 4, !dbg !8117
  call void @device_links_read_unlock(i32 %1) #10, !dbg !8118
  ret void, !dbg !8119
}

; Function Attrs: noredzone
declare dso_local void @device_pm_lock() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @device_reorder_to_tail(%struct.device* %dev, i8* %not_used) #0 !dbg !8120 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %not_used.addr = alloca i8*, align 8
  %link = alloca %struct.device_link*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_link*, align 8
  %__mptr12 = alloca i8*, align 8
  %tmp17 = alloca %struct.device_link*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8121, metadata !DIExpression()), !dbg !8122
  store i8* %not_used, i8** %not_used.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %not_used.addr, metadata !8123, metadata !DIExpression()), !dbg !8124
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !8125, metadata !DIExpression()), !dbg !8126
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8127
  %call = call i32 @device_is_registered(%struct.device* %0) #10, !dbg !8129
  %tobool = icmp ne i32 %call, 0, !dbg !8129
  br i1 %tobool, label %if.then, label %if.end, !dbg !8130

if.then:                                          ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8131
  call void @devices_kset_move_last(%struct.device* %1) #10, !dbg !8132
  br label %if.end, !dbg !8132

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8133
  %call1 = call zeroext i1 @device_pm_initialized(%struct.device* %2) #10, !dbg !8135
  br i1 %call1, label %if.then2, label %if.end3, !dbg !8136

if.then2:                                         ; preds = %if.end
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8137
  call void @device_pm_move_last(%struct.device* %3) #10, !dbg !8138
  br label %if.end3, !dbg !8138

if.end3:                                          ; preds = %if.then2, %if.end
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8139
  %call4 = call i32 @device_for_each_child(%struct.device* %4, i8* null, i32 (%struct.device*, i8*)* @device_reorder_to_tail) #10, !dbg !8140
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8141, metadata !DIExpression()), !dbg !8144
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8144
  %links = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 10, !dbg !8144
  %consumers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 1, !dbg !8144
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %consumers, i32 0, i32 0, !dbg !8144
  %6 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8144
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !8144
  store i8* %7, i8** %__mptr, align 8, !dbg !8144
  br label %do.body, !dbg !8144

do.body:                                          ; preds = %if.end3
  br label %do.end, !dbg !8145

do.end:                                           ; preds = %do.body
  %8 = load i8*, i8** %__mptr, align 8, !dbg !8144
  %add.ptr = getelementptr i8, i8* %8, i64 -8, !dbg !8144
  %9 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !8144
  store %struct.device_link* %9, %struct.device_link** %tmp, align 8, !dbg !8145
  %10 = load %struct.device_link*, %struct.device_link** %tmp, align 8, !dbg !8144
  store %struct.device_link* %10, %struct.device_link** %link, align 8, !dbg !8147
  br label %for.cond, !dbg !8147

for.cond:                                         ; preds = %do.end16, %do.end
  %11 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8148
  %s_node = getelementptr inbounds %struct.device_link, %struct.device_link* %11, i32 0, i32 1, !dbg !8148
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8148
  %links5 = getelementptr inbounds %struct.device, %struct.device* %12, i32 0, i32 10, !dbg !8148
  %consumers6 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links5, i32 0, i32 1, !dbg !8148
  %cmp = icmp eq %struct.list_head* %s_node, %consumers6, !dbg !8148
  %lnot = xor i1 %cmp, true, !dbg !8148
  br i1 %lnot, label %for.body, label %for.end, !dbg !8147

for.body:                                         ; preds = %for.cond
  %13 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8150
  %flags = getelementptr inbounds %struct.device_link, %struct.device_link* %13, i32 0, i32 6, !dbg !8153
  %14 = load i32, i32* %flags, align 4, !dbg !8153
  %conv = zext i32 %14 to i64, !dbg !8150
  %cmp7 = icmp eq i64 %conv, 192, !dbg !8154
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !8155

if.then9:                                         ; preds = %for.body
  br label %for.inc, !dbg !8156

if.end10:                                         ; preds = %for.body
  %15 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8157
  %consumer = getelementptr inbounds %struct.device_link, %struct.device_link* %15, i32 0, i32 2, !dbg !8158
  %16 = load %struct.device*, %struct.device** %consumer, align 8, !dbg !8158
  %call11 = call i32 @device_reorder_to_tail(%struct.device* %16, i8* null) #10, !dbg !8159
  br label %for.inc, !dbg !8160

for.inc:                                          ; preds = %if.end10, %if.then9
  call void @llvm.dbg.declare(metadata i8** %__mptr12, metadata !8161, metadata !DIExpression()), !dbg !8163
  %17 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8163
  %s_node13 = getelementptr inbounds %struct.device_link, %struct.device_link* %17, i32 0, i32 1, !dbg !8163
  %next14 = getelementptr inbounds %struct.list_head, %struct.list_head* %s_node13, i32 0, i32 0, !dbg !8163
  %18 = load %struct.list_head*, %struct.list_head** %next14, align 8, !dbg !8163
  %19 = bitcast %struct.list_head* %18 to i8*, !dbg !8163
  store i8* %19, i8** %__mptr12, align 8, !dbg !8163
  br label %do.body15, !dbg !8163

do.body15:                                        ; preds = %for.inc
  br label %do.end16, !dbg !8164

do.end16:                                         ; preds = %do.body15
  %20 = load i8*, i8** %__mptr12, align 8, !dbg !8163
  %add.ptr18 = getelementptr i8, i8* %20, i64 -8, !dbg !8163
  %21 = bitcast i8* %add.ptr18 to %struct.device_link*, !dbg !8163
  store %struct.device_link* %21, %struct.device_link** %tmp17, align 8, !dbg !8164
  %22 = load %struct.device_link*, %struct.device_link** %tmp17, align 8, !dbg !8163
  store %struct.device_link* %22, %struct.device_link** %link, align 8, !dbg !8148
  br label %for.cond, !dbg !8148, !llvm.loop !8166

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !8168
}

; Function Attrs: noredzone
declare dso_local void @device_pm_unlock() #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @devlink_class_init() #3 section ".init.text" !dbg !7841 {
entry:
  %retval = alloca i32, align 4
  %ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8169, metadata !DIExpression()), !dbg !8170
  %call = call i32 @__class_register(%struct.class* @devlink_class, %struct.lock_class_key* @devlink_class_init.__key) #10, !dbg !8171
  store i32 %call, i32* %tmp, align 4, !dbg !8171
  %0 = load i32, i32* %tmp, align 4, !dbg !8171
  store i32 %0, i32* %ret, align 4, !dbg !8173
  %1 = load i32, i32* %ret, align 4, !dbg !8174
  %tobool = icmp ne i32 %1, 0, !dbg !8174
  br i1 %tobool, label %if.then, label %if.end, !dbg !8176

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !8177
  store i32 %2, i32* %retval, align 4, !dbg !8178
  br label %return, !dbg !8178

if.end:                                           ; preds = %entry
  %call1 = call i32 @class_interface_register(%struct.class_interface* @devlink_class_intf) #10, !dbg !8179
  store i32 %call1, i32* %ret, align 4, !dbg !8180
  %3 = load i32, i32* %ret, align 4, !dbg !8181
  %tobool2 = icmp ne i32 %3, 0, !dbg !8181
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !8183

if.then3:                                         ; preds = %if.end
  call void @class_unregister(%struct.class* @devlink_class) #10, !dbg !8184
  br label %if.end4, !dbg !8184

if.end4:                                          ; preds = %if.then3, %if.end
  %4 = load i32, i32* %ret, align 4, !dbg !8185
  store i32 %4, i32* %retval, align 4, !dbg !8186
  br label %return, !dbg !8186

return:                                           ; preds = %if.end4, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !8187
  ret i32 %5, !dbg !8187
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device_link* @device_link_add(%struct.device* %consumer, %struct.device* %supplier, i32 %flags) #0 !dbg !8188 {
entry:
  %retval = alloca %struct.device_link*, align 8
  %consumer.addr = alloca %struct.device*, align 8
  %supplier.addr = alloca %struct.device*, align 8
  %flags.addr = alloca i32, align 4
  %link = alloca %struct.device_link*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_link*, align 8
  %__mptr170 = alloca i8*, align 8
  %tmp175 = alloca %struct.device_link*, align 8
  store %struct.device* %consumer, %struct.device** %consumer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %consumer.addr, metadata !8191, metadata !DIExpression()), !dbg !8192
  store %struct.device* %supplier, %struct.device** %supplier.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %supplier.addr, metadata !8193, metadata !DIExpression()), !dbg !8194
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8195, metadata !DIExpression()), !dbg !8196
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !8197, metadata !DIExpression()), !dbg !8198
  %0 = load %struct.device*, %struct.device** %consumer.addr, align 8, !dbg !8199
  %tobool = icmp ne %struct.device* %0, null, !dbg !8199
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8201

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.device*, %struct.device** %supplier.addr, align 8, !dbg !8202
  %tobool1 = icmp ne %struct.device* %1, null, !dbg !8202
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !8203

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %flags.addr, align 4, !dbg !8204
  %conv = zext i32 %2 to i64, !dbg !8204
  %and = and i64 %conv, -192, !dbg !8205
  %tobool3 = icmp ne i64 %and, 0, !dbg !8205
  br i1 %tobool3, label %if.then, label %lor.lhs.false4, !dbg !8206

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %3 = load i32, i32* %flags.addr, align 4, !dbg !8207
  %conv5 = zext i32 %3 to i64, !dbg !8207
  %and6 = and i64 %conv5, 1, !dbg !8208
  %tobool7 = icmp ne i64 %and6, 0, !dbg !8208
  br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false11, !dbg !8209

land.lhs.true:                                    ; preds = %lor.lhs.false4
  %4 = load i32, i32* %flags.addr, align 4, !dbg !8210
  %conv8 = zext i32 %4 to i64, !dbg !8210
  %and9 = and i64 %conv8, 178, !dbg !8211
  %tobool10 = icmp ne i64 %and9, 0, !dbg !8211
  br i1 %tobool10, label %if.then, label %lor.lhs.false11, !dbg !8212

lor.lhs.false11:                                  ; preds = %land.lhs.true, %lor.lhs.false4
  %5 = load i32, i32* %flags.addr, align 4, !dbg !8213
  %conv12 = zext i32 %5 to i64, !dbg !8213
  %and13 = and i64 %conv12, 128, !dbg !8214
  %tobool14 = icmp ne i64 %and13, 0, !dbg !8214
  br i1 %tobool14, label %land.lhs.true15, label %lor.lhs.false18, !dbg !8215

land.lhs.true15:                                  ; preds = %lor.lhs.false11
  %6 = load i32, i32* %flags.addr, align 4, !dbg !8216
  %conv16 = zext i32 %6 to i64, !dbg !8216
  %cmp = icmp ne i64 %conv16, 128, !dbg !8217
  br i1 %cmp, label %if.then, label %lor.lhs.false18, !dbg !8218

lor.lhs.false18:                                  ; preds = %land.lhs.true15, %lor.lhs.false11
  %7 = load i32, i32* %flags.addr, align 4, !dbg !8219
  %conv19 = zext i32 %7 to i64, !dbg !8219
  %and20 = and i64 %conv19, 32, !dbg !8220
  %tobool21 = icmp ne i64 %and20, 0, !dbg !8220
  br i1 %tobool21, label %land.lhs.true22, label %if.end, !dbg !8221

land.lhs.true22:                                  ; preds = %lor.lhs.false18
  %8 = load i32, i32* %flags.addr, align 4, !dbg !8222
  %conv23 = zext i32 %8 to i64, !dbg !8222
  %and24 = and i64 %conv23, 18, !dbg !8223
  %tobool25 = icmp ne i64 %and24, 0, !dbg !8223
  br i1 %tobool25, label %if.then, label %if.end, !dbg !8224

if.then:                                          ; preds = %land.lhs.true22, %land.lhs.true15, %land.lhs.true, %lor.lhs.false2, %lor.lhs.false, %entry
  store %struct.device_link* null, %struct.device_link** %retval, align 8, !dbg !8225
  br label %return, !dbg !8225

if.end:                                           ; preds = %land.lhs.true22, %lor.lhs.false18
  %9 = load i32, i32* %flags.addr, align 4, !dbg !8226
  %conv26 = zext i32 %9 to i64, !dbg !8226
  %and27 = and i64 %conv26, 4, !dbg !8228
  %tobool28 = icmp ne i64 %and27, 0, !dbg !8228
  br i1 %tobool28, label %land.lhs.true29, label %if.end38, !dbg !8229

land.lhs.true29:                                  ; preds = %if.end
  %10 = load i32, i32* %flags.addr, align 4, !dbg !8230
  %conv30 = zext i32 %10 to i64, !dbg !8230
  %and31 = and i64 %conv30, 8, !dbg !8231
  %tobool32 = icmp ne i64 %and31, 0, !dbg !8231
  br i1 %tobool32, label %if.then33, label %if.end38, !dbg !8232

if.then33:                                        ; preds = %land.lhs.true29
  %11 = load %struct.device*, %struct.device** %supplier.addr, align 8, !dbg !8233
  %call = call i32 @pm_runtime_get_sync(%struct.device* %11) #10, !dbg !8236
  %cmp34 = icmp slt i32 %call, 0, !dbg !8237
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !8238

if.then36:                                        ; preds = %if.then33
  %12 = load %struct.device*, %struct.device** %supplier.addr, align 8, !dbg !8239
  call void @pm_runtime_put_noidle(%struct.device* %12) #10, !dbg !8241
  store %struct.device_link* null, %struct.device_link** %retval, align 8, !dbg !8242
  br label %return, !dbg !8242

if.end37:                                         ; preds = %if.then33
  br label %if.end38, !dbg !8243

if.end38:                                         ; preds = %if.end37, %land.lhs.true29, %if.end
  %13 = load i32, i32* %flags.addr, align 4, !dbg !8244
  %conv39 = zext i32 %13 to i64, !dbg !8244
  %and40 = and i64 %conv39, 1, !dbg !8246
  %tobool41 = icmp ne i64 %and40, 0, !dbg !8246
  br i1 %tobool41, label %if.end45, label %if.then42, !dbg !8247

if.then42:                                        ; preds = %if.end38
  %14 = load i32, i32* %flags.addr, align 4, !dbg !8248
  %conv43 = zext i32 %14 to i64, !dbg !8248
  %or = or i64 %conv43, 64, !dbg !8248
  %conv44 = trunc i64 %or to i32, !dbg !8248
  store i32 %conv44, i32* %flags.addr, align 4, !dbg !8248
  br label %if.end45, !dbg !8249

if.end45:                                         ; preds = %if.then42, %if.end38
  call void @device_links_write_lock() #10, !dbg !8250
  call void @device_pm_lock() #10, !dbg !8251
  %15 = load %struct.device*, %struct.device** %supplier.addr, align 8, !dbg !8252
  %call46 = call zeroext i1 @device_pm_initialized(%struct.device* %15) #10, !dbg !8254
  br i1 %call46, label %lor.lhs.false47, label %if.then54, !dbg !8255

lor.lhs.false47:                                  ; preds = %if.end45
  %16 = load i32, i32* %flags.addr, align 4, !dbg !8256
  %conv48 = zext i32 %16 to i64, !dbg !8256
  %and49 = and i64 %conv48, 128, !dbg !8257
  %tobool50 = icmp ne i64 %and49, 0, !dbg !8257
  br i1 %tobool50, label %if.end55, label %land.lhs.true51, !dbg !8258

land.lhs.true51:                                  ; preds = %lor.lhs.false47
  %17 = load %struct.device*, %struct.device** %consumer.addr, align 8, !dbg !8259
  %18 = load %struct.device*, %struct.device** %supplier.addr, align 8, !dbg !8260
  %19 = bitcast %struct.device* %18 to i8*, !dbg !8260
  %call52 = call i32 @device_is_dependent(%struct.device* %17, i8* %19) #10, !dbg !8261
  %tobool53 = icmp ne i32 %call52, 0, !dbg !8261
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !8262

if.then54:                                        ; preds = %land.lhs.true51, %if.end45
  store %struct.device_link* null, %struct.device_link** %link, align 8, !dbg !8263
  br label %out, !dbg !8265

if.end55:                                         ; preds = %land.lhs.true51, %lor.lhs.false47
  %20 = load i32, i32* %flags.addr, align 4, !dbg !8266
  %conv56 = zext i32 %20 to i64, !dbg !8266
  %and57 = and i64 %conv56, 16, !dbg !8268
  %tobool58 = icmp ne i64 %and57, 0, !dbg !8268
  br i1 %tobool58, label %if.then59, label %if.end63, !dbg !8269

if.then59:                                        ; preds = %if.end55
  %21 = load i32, i32* %flags.addr, align 4, !dbg !8270
  %conv60 = zext i32 %21 to i64, !dbg !8270
  %and61 = and i64 %conv60, -3, !dbg !8270
  %conv62 = trunc i64 %and61 to i32, !dbg !8270
  store i32 %conv62, i32* %flags.addr, align 4, !dbg !8270
  br label %if.end63, !dbg !8271

if.end63:                                         ; preds = %if.then59, %if.end55
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8272, metadata !DIExpression()), !dbg !8275
  %22 = load %struct.device*, %struct.device** %supplier.addr, align 8, !dbg !8275
  %links = getelementptr inbounds %struct.device, %struct.device* %22, i32 0, i32 10, !dbg !8275
  %consumers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 1, !dbg !8275
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %consumers, i32 0, i32 0, !dbg !8275
  %23 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8275
  %24 = bitcast %struct.list_head* %23 to i8*, !dbg !8275
  store i8* %24, i8** %__mptr, align 8, !dbg !8275
  br label %do.body, !dbg !8275

do.body:                                          ; preds = %if.end63
  br label %do.end, !dbg !8276

do.end:                                           ; preds = %do.body
  %25 = load i8*, i8** %__mptr, align 8, !dbg !8275
  %add.ptr = getelementptr i8, i8* %25, i64 -8, !dbg !8275
  %26 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !8275
  store %struct.device_link* %26, %struct.device_link** %tmp, align 8, !dbg !8276
  %27 = load %struct.device_link*, %struct.device_link** %tmp, align 8, !dbg !8275
  store %struct.device_link* %27, %struct.device_link** %link, align 8, !dbg !8278
  br label %for.cond, !dbg !8278

for.cond:                                         ; preds = %do.end174, %do.end
  %28 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8279
  %s_node = getelementptr inbounds %struct.device_link, %struct.device_link* %28, i32 0, i32 1, !dbg !8279
  %29 = load %struct.device*, %struct.device** %supplier.addr, align 8, !dbg !8279
  %links64 = getelementptr inbounds %struct.device, %struct.device* %29, i32 0, i32 10, !dbg !8279
  %consumers65 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links64, i32 0, i32 1, !dbg !8279
  %cmp66 = icmp eq %struct.list_head* %s_node, %consumers65, !dbg !8279
  %lnot = xor i1 %cmp66, true, !dbg !8279
  br i1 %lnot, label %for.body, label %for.end, !dbg !8278

for.body:                                         ; preds = %for.cond
  %30 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8281
  %consumer68 = getelementptr inbounds %struct.device_link, %struct.device_link* %30, i32 0, i32 2, !dbg !8284
  %31 = load %struct.device*, %struct.device** %consumer68, align 8, !dbg !8284
  %32 = load %struct.device*, %struct.device** %consumer.addr, align 8, !dbg !8285
  %cmp69 = icmp ne %struct.device* %31, %32, !dbg !8286
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !8287

if.then71:                                        ; preds = %for.body
  br label %for.inc, !dbg !8288

if.end72:                                         ; preds = %for.body
  %33 = load i32, i32* %flags.addr, align 4, !dbg !8289
  %conv73 = zext i32 %33 to i64, !dbg !8289
  %and74 = and i64 %conv73, 4, !dbg !8291
  %tobool75 = icmp ne i64 %and74, 0, !dbg !8291
  br i1 %tobool75, label %if.then76, label %if.end92, !dbg !8292

if.then76:                                        ; preds = %if.end72
  %34 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8293
  %flags77 = getelementptr inbounds %struct.device_link, %struct.device_link* %34, i32 0, i32 6, !dbg !8296
  %35 = load i32, i32* %flags77, align 4, !dbg !8296
  %conv78 = zext i32 %35 to i64, !dbg !8293
  %and79 = and i64 %conv78, 4, !dbg !8297
  %tobool80 = icmp ne i64 %and79, 0, !dbg !8297
  br i1 %tobool80, label %if.end86, label %if.then81, !dbg !8298

if.then81:                                        ; preds = %if.then76
  %36 = load %struct.device*, %struct.device** %consumer.addr, align 8, !dbg !8299
  call void @pm_runtime_new_link(%struct.device* %36) #10, !dbg !8301
  %37 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8302
  %flags82 = getelementptr inbounds %struct.device_link, %struct.device_link* %37, i32 0, i32 6, !dbg !8303
  %38 = load i32, i32* %flags82, align 4, !dbg !8304
  %conv83 = zext i32 %38 to i64, !dbg !8304
  %or84 = or i64 %conv83, 4, !dbg !8304
  %conv85 = trunc i64 %or84 to i32, !dbg !8304
  store i32 %conv85, i32* %flags82, align 4, !dbg !8304
  br label %if.end86, !dbg !8305

if.end86:                                         ; preds = %if.then81, %if.then76
  %39 = load i32, i32* %flags.addr, align 4, !dbg !8306
  %conv87 = zext i32 %39 to i64, !dbg !8306
  %and88 = and i64 %conv87, 8, !dbg !8308
  %tobool89 = icmp ne i64 %and88, 0, !dbg !8308
  br i1 %tobool89, label %if.then90, label %if.end91, !dbg !8309

if.then90:                                        ; preds = %if.end86
  %40 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8310
  %rpm_active = getelementptr inbounds %struct.device_link, %struct.device_link* %40, i32 0, i32 7, !dbg !8311
  call void @refcount_inc(%struct.refcount_struct* %rpm_active) #10, !dbg !8312
  br label %if.end91, !dbg !8312

if.end91:                                         ; preds = %if.then90, %if.end86
  br label %if.end92, !dbg !8313

if.end92:                                         ; preds = %if.end91, %if.end72
  %41 = load i32, i32* %flags.addr, align 4, !dbg !8314
  %conv93 = zext i32 %41 to i64, !dbg !8314
  %and94 = and i64 %conv93, 1, !dbg !8316
  %tobool95 = icmp ne i64 %and94, 0, !dbg !8316
  br i1 %tobool95, label %if.then96, label %if.end115, !dbg !8317

if.then96:                                        ; preds = %if.end92
  %42 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8318
  %kref = getelementptr inbounds %struct.device_link, %struct.device_link* %42, i32 0, i32 8, !dbg !8320
  call void @kref_get(%struct.kref* %kref) #10, !dbg !8321
  %43 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8322
  %flags97 = getelementptr inbounds %struct.device_link, %struct.device_link* %43, i32 0, i32 6, !dbg !8324
  %44 = load i32, i32* %flags97, align 4, !dbg !8324
  %conv98 = zext i32 %44 to i64, !dbg !8322
  %and99 = and i64 %conv98, 128, !dbg !8325
  %tobool100 = icmp ne i64 %and99, 0, !dbg !8325
  br i1 %tobool100, label %land.lhs.true101, label %if.else, !dbg !8326

land.lhs.true101:                                 ; preds = %if.then96
  %45 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8327
  %flags102 = getelementptr inbounds %struct.device_link, %struct.device_link* %45, i32 0, i32 6, !dbg !8328
  %46 = load i32, i32* %flags102, align 4, !dbg !8328
  %conv103 = zext i32 %46 to i64, !dbg !8327
  %and104 = and i64 %conv103, 1, !dbg !8329
  %tobool105 = icmp ne i64 %and104, 0, !dbg !8329
  br i1 %tobool105, label %if.else, label %if.then106, !dbg !8330

if.then106:                                       ; preds = %land.lhs.true101
  %47 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8331
  %flags107 = getelementptr inbounds %struct.device_link, %struct.device_link* %47, i32 0, i32 6, !dbg !8333
  %48 = load i32, i32* %flags107, align 4, !dbg !8334
  %conv108 = zext i32 %48 to i64, !dbg !8334
  %or109 = or i64 %conv108, 1, !dbg !8334
  %conv110 = trunc i64 %or109 to i32, !dbg !8334
  store i32 %conv110, i32* %flags107, align 4, !dbg !8334
  br label %reorder, !dbg !8335

if.else:                                          ; preds = %land.lhs.true101, %if.then96
  %49 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8336
  %flags111 = getelementptr inbounds %struct.device_link, %struct.device_link* %49, i32 0, i32 6, !dbg !8338
  %50 = load i32, i32* %flags111, align 4, !dbg !8339
  %conv112 = zext i32 %50 to i64, !dbg !8339
  %or113 = or i64 %conv112, 1, !dbg !8339
  %conv114 = trunc i64 %or113 to i32, !dbg !8339
  store i32 %conv114, i32* %flags111, align 4, !dbg !8339
  br label %out, !dbg !8340

if.end115:                                        ; preds = %if.end92
  %51 = load i32, i32* %flags.addr, align 4, !dbg !8341
  %conv116 = zext i32 %51 to i64, !dbg !8341
  %and117 = and i64 %conv116, 16, !dbg !8343
  %tobool118 = icmp ne i64 %and117, 0, !dbg !8343
  br i1 %tobool118, label %if.then119, label %if.else134, !dbg !8344

if.then119:                                       ; preds = %if.end115
  %52 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8345
  %flags120 = getelementptr inbounds %struct.device_link, %struct.device_link* %52, i32 0, i32 6, !dbg !8348
  %53 = load i32, i32* %flags120, align 4, !dbg !8348
  %conv121 = zext i32 %53 to i64, !dbg !8345
  %and122 = and i64 %conv121, 2, !dbg !8349
  %tobool123 = icmp ne i64 %and122, 0, !dbg !8349
  br i1 %tobool123, label %if.then124, label %if.end133, !dbg !8350

if.then124:                                       ; preds = %if.then119
  %54 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8351
  %flags125 = getelementptr inbounds %struct.device_link, %struct.device_link* %54, i32 0, i32 6, !dbg !8353
  %55 = load i32, i32* %flags125, align 4, !dbg !8354
  %conv126 = zext i32 %55 to i64, !dbg !8354
  %and127 = and i64 %conv126, -3, !dbg !8354
  %conv128 = trunc i64 %and127 to i32, !dbg !8354
  store i32 %conv128, i32* %flags125, align 4, !dbg !8354
  %56 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8355
  %flags129 = getelementptr inbounds %struct.device_link, %struct.device_link* %56, i32 0, i32 6, !dbg !8356
  %57 = load i32, i32* %flags129, align 4, !dbg !8357
  %conv130 = zext i32 %57 to i64, !dbg !8357
  %or131 = or i64 %conv130, 16, !dbg !8357
  %conv132 = trunc i64 %or131 to i32, !dbg !8357
  store i32 %conv132, i32* %flags129, align 4, !dbg !8357
  br label %if.end133, !dbg !8358

if.end133:                                        ; preds = %if.then124, %if.then119
  br label %if.end144, !dbg !8359

if.else134:                                       ; preds = %if.end115
  %58 = load i32, i32* %flags.addr, align 4, !dbg !8360
  %conv135 = zext i32 %58 to i64, !dbg !8360
  %and136 = and i64 %conv135, 2, !dbg !8362
  %tobool137 = icmp ne i64 %and136, 0, !dbg !8362
  br i1 %tobool137, label %if.end143, label %if.then138, !dbg !8363

if.then138:                                       ; preds = %if.else134
  %59 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8364
  %flags139 = getelementptr inbounds %struct.device_link, %struct.device_link* %59, i32 0, i32 6, !dbg !8366
  %60 = load i32, i32* %flags139, align 4, !dbg !8367
  %conv140 = zext i32 %60 to i64, !dbg !8367
  %and141 = and i64 %conv140, -19, !dbg !8367
  %conv142 = trunc i64 %and141 to i32, !dbg !8367
  store i32 %conv142, i32* %flags139, align 4, !dbg !8367
  br label %if.end143, !dbg !8368

if.end143:                                        ; preds = %if.then138, %if.else134
  br label %if.end144

if.end144:                                        ; preds = %if.end143, %if.end133
  %61 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8369
  %flags145 = getelementptr inbounds %struct.device_link, %struct.device_link* %61, i32 0, i32 6, !dbg !8371
  %62 = load i32, i32* %flags145, align 4, !dbg !8371
  %conv146 = zext i32 %62 to i64, !dbg !8369
  %and147 = and i64 %conv146, 64, !dbg !8372
  %tobool148 = icmp ne i64 %and147, 0, !dbg !8372
  br i1 %tobool148, label %if.end155, label %if.then149, !dbg !8373

if.then149:                                       ; preds = %if.end144
  %63 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8374
  %kref150 = getelementptr inbounds %struct.device_link, %struct.device_link* %63, i32 0, i32 8, !dbg !8376
  call void @kref_get(%struct.kref* %kref150) #10, !dbg !8377
  %64 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8378
  %flags151 = getelementptr inbounds %struct.device_link, %struct.device_link* %64, i32 0, i32 6, !dbg !8379
  %65 = load i32, i32* %flags151, align 4, !dbg !8380
  %conv152 = zext i32 %65 to i64, !dbg !8380
  %or153 = or i64 %conv152, 64, !dbg !8380
  %conv154 = trunc i64 %or153 to i32, !dbg !8380
  store i32 %conv154, i32* %flags151, align 4, !dbg !8380
  %66 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8381
  %67 = load %struct.device*, %struct.device** %consumer.addr, align 8, !dbg !8382
  %68 = load %struct.device*, %struct.device** %supplier.addr, align 8, !dbg !8383
  call void @device_link_init_status(%struct.device_link* %66, %struct.device* %67, %struct.device* %68) #10, !dbg !8384
  br label %if.end155, !dbg !8385

if.end155:                                        ; preds = %if.then149, %if.end144
  %69 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8386
  %flags156 = getelementptr inbounds %struct.device_link, %struct.device_link* %69, i32 0, i32 6, !dbg !8388
  %70 = load i32, i32* %flags156, align 4, !dbg !8388
  %conv157 = zext i32 %70 to i64, !dbg !8386
  %and158 = and i64 %conv157, 128, !dbg !8389
  %tobool159 = icmp ne i64 %and158, 0, !dbg !8389
  br i1 %tobool159, label %land.lhs.true160, label %if.end169, !dbg !8390

land.lhs.true160:                                 ; preds = %if.end155
  %71 = load i32, i32* %flags.addr, align 4, !dbg !8391
  %conv161 = zext i32 %71 to i64, !dbg !8391
  %and162 = and i64 %conv161, 128, !dbg !8392
  %tobool163 = icmp ne i64 %and162, 0, !dbg !8392
  br i1 %tobool163, label %if.end169, label %if.then164, !dbg !8393

if.then164:                                       ; preds = %land.lhs.true160
  %72 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8394
  %flags165 = getelementptr inbounds %struct.device_link, %struct.device_link* %72, i32 0, i32 6, !dbg !8396
  %73 = load i32, i32* %flags165, align 4, !dbg !8397
  %conv166 = zext i32 %73 to i64, !dbg !8397
  %and167 = and i64 %conv166, -129, !dbg !8397
  %conv168 = trunc i64 %and167 to i32, !dbg !8397
  store i32 %conv168, i32* %flags165, align 4, !dbg !8397
  br label %reorder, !dbg !8398

if.end169:                                        ; preds = %land.lhs.true160, %if.end155
  br label %out, !dbg !8399

for.inc:                                          ; preds = %if.then71
  call void @llvm.dbg.declare(metadata i8** %__mptr170, metadata !8400, metadata !DIExpression()), !dbg !8402
  %74 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8402
  %s_node171 = getelementptr inbounds %struct.device_link, %struct.device_link* %74, i32 0, i32 1, !dbg !8402
  %next172 = getelementptr inbounds %struct.list_head, %struct.list_head* %s_node171, i32 0, i32 0, !dbg !8402
  %75 = load %struct.list_head*, %struct.list_head** %next172, align 8, !dbg !8402
  %76 = bitcast %struct.list_head* %75 to i8*, !dbg !8402
  store i8* %76, i8** %__mptr170, align 8, !dbg !8402
  br label %do.body173, !dbg !8402

do.body173:                                       ; preds = %for.inc
  br label %do.end174, !dbg !8403

do.end174:                                        ; preds = %do.body173
  %77 = load i8*, i8** %__mptr170, align 8, !dbg !8402
  %add.ptr176 = getelementptr i8, i8* %77, i64 -8, !dbg !8402
  %78 = bitcast i8* %add.ptr176 to %struct.device_link*, !dbg !8402
  store %struct.device_link* %78, %struct.device_link** %tmp175, align 8, !dbg !8403
  %79 = load %struct.device_link*, %struct.device_link** %tmp175, align 8, !dbg !8402
  store %struct.device_link* %79, %struct.device_link** %link, align 8, !dbg !8279
  br label %for.cond, !dbg !8279, !llvm.loop !8405

for.end:                                          ; preds = %for.cond
  %call177 = call i8* @kzalloc(i64 784, i32 3264) #10, !dbg !8407
  %80 = bitcast i8* %call177 to %struct.device_link*, !dbg !8407
  store %struct.device_link* %80, %struct.device_link** %link, align 8, !dbg !8408
  %81 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8409
  %tobool178 = icmp ne %struct.device_link* %81, null, !dbg !8409
  br i1 %tobool178, label %if.end180, label %if.then179, !dbg !8411

if.then179:                                       ; preds = %for.end
  br label %out, !dbg !8412

if.end180:                                        ; preds = %for.end
  %82 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8413
  %rpm_active181 = getelementptr inbounds %struct.device_link, %struct.device_link* %82, i32 0, i32 7, !dbg !8414
  call void @refcount_set(%struct.refcount_struct* %rpm_active181, i32 1) #10, !dbg !8415
  %83 = load %struct.device*, %struct.device** %supplier.addr, align 8, !dbg !8416
  %call182 = call %struct.device* @get_device(%struct.device* %83) #10, !dbg !8417
  %84 = load %struct.device*, %struct.device** %supplier.addr, align 8, !dbg !8418
  %85 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8419
  %supplier183 = getelementptr inbounds %struct.device_link, %struct.device_link* %85, i32 0, i32 0, !dbg !8420
  store %struct.device* %84, %struct.device** %supplier183, align 8, !dbg !8421
  %86 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8422
  %s_node184 = getelementptr inbounds %struct.device_link, %struct.device_link* %86, i32 0, i32 1, !dbg !8423
  call void @INIT_LIST_HEAD(%struct.list_head* %s_node184) #10, !dbg !8424
  %87 = load %struct.device*, %struct.device** %consumer.addr, align 8, !dbg !8425
  %call185 = call %struct.device* @get_device(%struct.device* %87) #10, !dbg !8426
  %88 = load %struct.device*, %struct.device** %consumer.addr, align 8, !dbg !8427
  %89 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8428
  %consumer186 = getelementptr inbounds %struct.device_link, %struct.device_link* %89, i32 0, i32 2, !dbg !8429
  store %struct.device* %88, %struct.device** %consumer186, align 8, !dbg !8430
  %90 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8431
  %c_node = getelementptr inbounds %struct.device_link, %struct.device_link* %90, i32 0, i32 3, !dbg !8432
  call void @INIT_LIST_HEAD(%struct.list_head* %c_node) #10, !dbg !8433
  %91 = load i32, i32* %flags.addr, align 4, !dbg !8434
  %92 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8435
  %flags187 = getelementptr inbounds %struct.device_link, %struct.device_link* %92, i32 0, i32 6, !dbg !8436
  store i32 %91, i32* %flags187, align 4, !dbg !8437
  %93 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8438
  %kref188 = getelementptr inbounds %struct.device_link, %struct.device_link* %93, i32 0, i32 8, !dbg !8439
  call void @kref_init(%struct.kref* %kref188) #10, !dbg !8440
  %94 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8441
  %link_dev = getelementptr inbounds %struct.device_link, %struct.device_link* %94, i32 0, i32 4, !dbg !8442
  %class = getelementptr inbounds %struct.device, %struct.device* %link_dev, i32 0, i32 29, !dbg !8443
  store %struct.class* @devlink_class, %struct.class** %class, align 8, !dbg !8444
  %95 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8445
  %link_dev189 = getelementptr inbounds %struct.device_link, %struct.device_link* %95, i32 0, i32 4, !dbg !8446
  call void @device_set_pm_not_required(%struct.device* %link_dev189) #10, !dbg !8447
  %96 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8448
  %link_dev190 = getelementptr inbounds %struct.device_link, %struct.device_link* %96, i32 0, i32 4, !dbg !8449
  %97 = load %struct.device*, %struct.device** %supplier.addr, align 8, !dbg !8450
  %call191 = call i8* @dev_name(%struct.device* %97) #10, !dbg !8451
  %98 = load %struct.device*, %struct.device** %consumer.addr, align 8, !dbg !8452
  %call192 = call i8* @dev_name(%struct.device* %98) #10, !dbg !8453
  %call193 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %link_dev190, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* %call191, i8* %call192) #10, !dbg !8454
  %99 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8455
  %link_dev194 = getelementptr inbounds %struct.device_link, %struct.device_link* %99, i32 0, i32 4, !dbg !8457
  %call195 = call i32 @device_register(%struct.device* %link_dev194) #10, !dbg !8458
  %tobool196 = icmp ne i32 %call195, 0, !dbg !8458
  br i1 %tobool196, label %if.then197, label %if.end198, !dbg !8459

if.then197:                                       ; preds = %if.end180
  %100 = load %struct.device*, %struct.device** %consumer.addr, align 8, !dbg !8460
  call void @put_device(%struct.device* %100) #10, !dbg !8462
  %101 = load %struct.device*, %struct.device** %supplier.addr, align 8, !dbg !8463
  call void @put_device(%struct.device* %101) #10, !dbg !8464
  %102 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8465
  %103 = bitcast %struct.device_link* %102 to i8*, !dbg !8465
  call void @kfree(i8* %103) #10, !dbg !8466
  store %struct.device_link* null, %struct.device_link** %link, align 8, !dbg !8467
  br label %out, !dbg !8468

if.end198:                                        ; preds = %if.end180
  %104 = load i32, i32* %flags.addr, align 4, !dbg !8469
  %conv199 = zext i32 %104 to i64, !dbg !8469
  %and200 = and i64 %conv199, 4, !dbg !8471
  %tobool201 = icmp ne i64 %and200, 0, !dbg !8471
  br i1 %tobool201, label %if.then202, label %if.end209, !dbg !8472

if.then202:                                       ; preds = %if.end198
  %105 = load i32, i32* %flags.addr, align 4, !dbg !8473
  %conv203 = zext i32 %105 to i64, !dbg !8473
  %and204 = and i64 %conv203, 8, !dbg !8476
  %tobool205 = icmp ne i64 %and204, 0, !dbg !8476
  br i1 %tobool205, label %if.then206, label %if.end208, !dbg !8477

if.then206:                                       ; preds = %if.then202
  %106 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8478
  %rpm_active207 = getelementptr inbounds %struct.device_link, %struct.device_link* %106, i32 0, i32 7, !dbg !8479
  call void @refcount_inc(%struct.refcount_struct* %rpm_active207) #10, !dbg !8480
  br label %if.end208, !dbg !8480

if.end208:                                        ; preds = %if.then206, %if.then202
  %107 = load %struct.device*, %struct.device** %consumer.addr, align 8, !dbg !8481
  call void @pm_runtime_new_link(%struct.device* %107) #10, !dbg !8482
  br label %if.end209, !dbg !8483

if.end209:                                        ; preds = %if.end208, %if.end198
  %108 = load i32, i32* %flags.addr, align 4, !dbg !8484
  %conv210 = zext i32 %108 to i64, !dbg !8484
  %and211 = and i64 %conv210, 1, !dbg !8486
  %tobool212 = icmp ne i64 %and211, 0, !dbg !8486
  br i1 %tobool212, label %if.then213, label %if.else214, !dbg !8487

if.then213:                                       ; preds = %if.end209
  %109 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8488
  %status = getelementptr inbounds %struct.device_link, %struct.device_link* %109, i32 0, i32 5, !dbg !8489
  store i32 -1, i32* %status, align 8, !dbg !8490
  br label %if.end215, !dbg !8488

if.else214:                                       ; preds = %if.end209
  %110 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8491
  %111 = load %struct.device*, %struct.device** %consumer.addr, align 8, !dbg !8492
  %112 = load %struct.device*, %struct.device** %supplier.addr, align 8, !dbg !8493
  call void @device_link_init_status(%struct.device_link* %110, %struct.device* %111, %struct.device* %112) #10, !dbg !8494
  br label %if.end215

if.end215:                                        ; preds = %if.else214, %if.then213
  %113 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8495
  %status216 = getelementptr inbounds %struct.device_link, %struct.device_link* %113, i32 0, i32 5, !dbg !8497
  %114 = load i32, i32* %status216, align 8, !dbg !8497
  %cmp217 = icmp eq i32 %114, 2, !dbg !8498
  br i1 %cmp217, label %land.lhs.true219, label %if.end225, !dbg !8499

land.lhs.true219:                                 ; preds = %if.end215
  %115 = load i32, i32* %flags.addr, align 4, !dbg !8500
  %conv220 = zext i32 %115 to i64, !dbg !8500
  %and221 = and i64 %conv220, 4, !dbg !8501
  %tobool222 = icmp ne i64 %and221, 0, !dbg !8501
  br i1 %tobool222, label %if.then223, label %if.end225, !dbg !8502

if.then223:                                       ; preds = %land.lhs.true219
  %116 = load %struct.device*, %struct.device** %supplier.addr, align 8, !dbg !8503
  %call224 = call i32 @pm_runtime_resume(%struct.device* %116) #10, !dbg !8504
  br label %if.end225, !dbg !8504

if.end225:                                        ; preds = %if.then223, %land.lhs.true219, %if.end215
  %117 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8505
  %s_node226 = getelementptr inbounds %struct.device_link, %struct.device_link* %117, i32 0, i32 1, !dbg !8506
  %118 = load %struct.device*, %struct.device** %supplier.addr, align 8, !dbg !8507
  %links227 = getelementptr inbounds %struct.device, %struct.device* %118, i32 0, i32 10, !dbg !8508
  %consumers228 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links227, i32 0, i32 1, !dbg !8509
  call void @list_add_tail_rcu(%struct.list_head* %s_node226, %struct.list_head* %consumers228) #10, !dbg !8510
  %119 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8511
  %c_node229 = getelementptr inbounds %struct.device_link, %struct.device_link* %119, i32 0, i32 3, !dbg !8512
  %120 = load %struct.device*, %struct.device** %consumer.addr, align 8, !dbg !8513
  %links230 = getelementptr inbounds %struct.device, %struct.device* %120, i32 0, i32 10, !dbg !8514
  %suppliers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links230, i32 0, i32 0, !dbg !8515
  call void @list_add_tail_rcu(%struct.list_head* %c_node229, %struct.list_head* %suppliers) #10, !dbg !8516
  %121 = load i32, i32* %flags.addr, align 4, !dbg !8517
  %conv231 = zext i32 %121 to i64, !dbg !8517
  %and232 = and i64 %conv231, 128, !dbg !8519
  %tobool233 = icmp ne i64 %and232, 0, !dbg !8519
  br i1 %tobool233, label %if.then234, label %if.end235, !dbg !8520

if.then234:                                       ; preds = %if.end225
  br label %out, !dbg !8521

if.end235:                                        ; preds = %if.end225
  br label %reorder, !dbg !8523

reorder:                                          ; preds = %if.end235, %if.then164, %if.then106
  call void @llvm.dbg.label(metadata !8524), !dbg !8525
  %122 = load %struct.device*, %struct.device** %consumer.addr, align 8, !dbg !8526
  %call236 = call i32 @device_reorder_to_tail(%struct.device* %122, i8* null) #10, !dbg !8527
  br label %out, !dbg !8528

out:                                              ; preds = %reorder, %if.then234, %if.then197, %if.then179, %if.end169, %if.else, %if.then54
  call void @llvm.dbg.label(metadata !8529), !dbg !8530
  call void @device_pm_unlock() #10, !dbg !8531
  call void @device_links_write_unlock() #10, !dbg !8532
  %123 = load i32, i32* %flags.addr, align 4, !dbg !8533
  %conv237 = zext i32 %123 to i64, !dbg !8533
  %and238 = and i64 %conv237, 4, !dbg !8535
  %tobool239 = icmp ne i64 %and238, 0, !dbg !8535
  br i1 %tobool239, label %land.lhs.true240, label %if.end248, !dbg !8536

land.lhs.true240:                                 ; preds = %out
  %124 = load i32, i32* %flags.addr, align 4, !dbg !8537
  %conv241 = zext i32 %124 to i64, !dbg !8537
  %and242 = and i64 %conv241, 8, !dbg !8538
  %tobool243 = icmp ne i64 %and242, 0, !dbg !8538
  br i1 %tobool243, label %land.lhs.true244, label %if.end248, !dbg !8539

land.lhs.true244:                                 ; preds = %land.lhs.true240
  %125 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8540
  %tobool245 = icmp ne %struct.device_link* %125, null, !dbg !8540
  br i1 %tobool245, label %if.end248, label %if.then246, !dbg !8541

if.then246:                                       ; preds = %land.lhs.true244
  %126 = load %struct.device*, %struct.device** %supplier.addr, align 8, !dbg !8542
  %call247 = call i32 @pm_runtime_put(%struct.device* %126) #10, !dbg !8543
  br label %if.end248, !dbg !8543

if.end248:                                        ; preds = %if.then246, %land.lhs.true244, %land.lhs.true240, %out
  %127 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !8544
  store %struct.device_link* %127, %struct.device_link** %retval, align 8, !dbg !8545
  br label %return, !dbg !8545

return:                                           ; preds = %if.end248, %if.then36, %if.then
  %128 = load %struct.device_link*, %struct.device_link** %retval, align 8, !dbg !8546
  ret %struct.device_link* %128, !dbg !8546
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_get_sync(%struct.device* %dev) #0 !dbg !8547 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8549, metadata !DIExpression()), !dbg !8550
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8551
  %call = call i32 @__pm_runtime_resume(%struct.device* %0, i32 4) #10, !dbg !8552
  ret i32 %call, !dbg !8553
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_put_noidle(%struct.device* %dev) #0 !dbg !8554 {
entry:
  %v.addr.i5.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i5.i.i.i, metadata !8555, metadata !DIExpression()), !dbg !8561
  %old.addr.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %old.addr.i.i.i.i, metadata !8575, metadata !DIExpression()), !dbg !8576
  %new.addr.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i.i.i.i, metadata !8577, metadata !DIExpression()), !dbg !8578
  %success.i.i.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %success.i.i.i.i, metadata !8579, metadata !DIExpression()), !dbg !8581
  %_old.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %_old.i.i.i.i, metadata !8582, metadata !DIExpression()), !dbg !8581
  %__old.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__old.i.i.i.i, metadata !8583, metadata !DIExpression()), !dbg !8581
  %__new.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__new.i.i.i.i, metadata !8584, metadata !DIExpression()), !dbg !8581
  %__ptr.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %__ptr.i.i.i.i, metadata !8585, metadata !DIExpression()), !dbg !8581
  %tmp.i.i.i.i = alloca i64, align 8
  %v.addr.i.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i.i, metadata !8586, metadata !DIExpression()), !dbg !8592
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !8594, metadata !DIExpression()), !dbg !8595
  %a.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i.i, metadata !8596, metadata !DIExpression()), !dbg !8597
  %u.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i.i.i, metadata !8598, metadata !DIExpression()), !dbg !8599
  %c.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i.i.i, metadata !8600, metadata !DIExpression()), !dbg !8601
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !8602, metadata !DIExpression()), !dbg !8603
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !8604, metadata !DIExpression()), !dbg !8605
  %u.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i.i, metadata !8606, metadata !DIExpression()), !dbg !8607
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !8608, metadata !DIExpression()), !dbg !8616
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8618, metadata !DIExpression()), !dbg !8619
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !8620, metadata !DIExpression()), !dbg !8621
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !8622, metadata !DIExpression()), !dbg !8623
  %u.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i, metadata !8624, metadata !DIExpression()), !dbg !8625
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8626, metadata !DIExpression()), !dbg !8627
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8628
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !8629
  %usage_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 13, !dbg !8630
  store %struct.atomic_t* %usage_count, %struct.atomic_t** %v.addr.i, align 8
  store i32 -1, i32* %a.addr.i, align 4
  store i32 0, i32* %u.addr.i, align 4
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8631
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !8631
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8632
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !8633
  %conv.i.i = trunc i64 %4 to i32, !dbg !8633
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #11, !dbg !8634
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8635
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !8635
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #11, !dbg !8635
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8636
  %8 = load i32, i32* %a.addr.i, align 4, !dbg !8637
  %9 = load i32, i32* %u.addr.i, align 4, !dbg !8638
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %8, i32* %a.addr.i.i, align 4
  store i32 %9, i32* %u.addr.i.i, align 4
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !8639
  %11 = load i32, i32* %a.addr.i.i, align 4, !dbg !8640
  %12 = load i32, i32* %u.addr.i.i, align 4, !dbg !8641
  store %struct.atomic_t* %10, %struct.atomic_t** %v.addr.i.i.i, align 8
  store i32 %11, i32* %a.addr.i.i.i, align 4
  store i32 %12, i32* %u.addr.i.i.i, align 4
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !8642
  store %struct.atomic_t* %13, %struct.atomic_t** %v.addr.i.i.i.i, align 8
  %14 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i.i, align 8, !dbg !8643
  %counter.i.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %14, i32 0, i32 0, !dbg !8643
  %15 = load volatile i32, i32* %counter.i.i.i.i, align 4, !dbg !8643
  store i32 %15, i32* %c.i.i.i, align 4, !dbg !8601
  br label %do.body.i.i.i, !dbg !8644

do.body.i.i.i:                                    ; preds = %arch_atomic_try_cmpxchg.exit.i.i.i, %entry
  %16 = load i32, i32* %c.i.i.i, align 4, !dbg !8645
  %17 = load i32, i32* %u.addr.i.i.i, align 4, !dbg !8645
  %cmp.i.i.i = icmp eq i32 %16, %17, !dbg !8645
  %lnot.i.i.i = xor i1 %cmp.i.i.i, true, !dbg !8645
  %lnot.ext.i.i.i = zext i1 %cmp.i.i.i to i32, !dbg !8645
  %conv.i.i.i = sext i32 %lnot.ext.i.i.i to i64, !dbg !8645
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.end.i.i.i, !dbg !8648

if.then.i.i.i:                                    ; preds = %do.body.i.i.i
  br label %atomic_add_unless.exit, !dbg !8649

if.end.i.i.i:                                     ; preds = %do.body.i.i.i
  %18 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !8650
  %19 = load i32, i32* %c.i.i.i, align 4, !dbg !8651
  %20 = load i32, i32* %a.addr.i.i.i, align 4, !dbg !8652
  %add.i.i.i = add i32 %19, %20, !dbg !8653
  store %struct.atomic_t* %18, %struct.atomic_t** %v.addr.i5.i.i.i, align 8
  store i32* %c.i.i.i, i32** %old.addr.i.i.i.i, align 8
  store i32 %add.i.i.i, i32* %new.addr.i.i.i.i, align 4
  %21 = load i32*, i32** %old.addr.i.i.i.i, align 8, !dbg !8581
  store i32* %21, i32** %_old.i.i.i.i, align 8, !dbg !8581
  %22 = load i32*, i32** %_old.i.i.i.i, align 8, !dbg !8581
  %23 = load i32, i32* %22, align 4, !dbg !8581
  store i32 %23, i32* %__old.i.i.i.i, align 4, !dbg !8581
  %24 = load i32, i32* %new.addr.i.i.i.i, align 4, !dbg !8581
  store i32 %24, i32* %__new.i.i.i.i, align 4, !dbg !8581
  %25 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i5.i.i.i, align 8, !dbg !8581
  %counter.i6.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %25, i32 0, i32 0, !dbg !8581
  store i32* %counter.i6.i.i.i, i32** %__ptr.i.i.i.i, align 8, !dbg !8581
  %26 = load i32*, i32** %__ptr.i.i.i.i, align 8, !dbg !8581
  %27 = load i32, i32* %__old.i.i.i.i, align 4, !dbg !8581
  %28 = load i32, i32* %__new.i.i.i.i, align 4, !dbg !8581
  %29 = call { i8, i32 } asm sideeffect "cmpxchgl $3, $1\0A\09/* output condition code z*/\0A", "={@ccz},=*m,={ax},r,*m,2,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %26, i32 %28, i32* %26, i32 %27) #5, !dbg !8581, !srcloc !8654
  %asmresult.i.i.i.i = extractvalue { i8, i32 } %29, 0, !dbg !8581
  %asmresult1.i.i.i.i = extractvalue { i8, i32 } %29, 1, !dbg !8581
  store i8 %asmresult.i.i.i.i, i8* %success.i.i.i.i, align 1, !dbg !8581
  store i32 %asmresult1.i.i.i.i, i32* %__old.i.i.i.i, align 4, !dbg !8581
  %30 = load i8, i8* %success.i.i.i.i, align 1, !dbg !8655
  %tobool.i.i.i.i = trunc i8 %30 to i1, !dbg !8655
  %lnot.i.i.i.i = xor i1 %tobool.i.i.i.i, true, !dbg !8655
  %lnot3.i.i.i.i = xor i1 %tobool.i.i.i.i, true, !dbg !8655
  %lnot.ext.i.i.i.i = zext i1 %lnot3.i.i.i.i to i32, !dbg !8655
  %conv.i.i.i.i = sext i32 %lnot.ext.i.i.i.i to i64, !dbg !8655
  br i1 %lnot3.i.i.i.i, label %if.then.i.i.i.i, label %arch_atomic_try_cmpxchg.exit.i.i.i, !dbg !8581

if.then.i.i.i.i:                                  ; preds = %if.end.i.i.i
  %31 = load i32, i32* %__old.i.i.i.i, align 4, !dbg !8655
  %32 = load i32*, i32** %_old.i.i.i.i, align 8, !dbg !8655
  store i32 %31, i32* %32, align 4, !dbg !8655
  br label %arch_atomic_try_cmpxchg.exit.i.i.i, !dbg !8655

arch_atomic_try_cmpxchg.exit.i.i.i:               ; preds = %if.then.i.i.i.i, %if.end.i.i.i
  %33 = load i8, i8* %success.i.i.i.i, align 1, !dbg !8581
  %tobool5.i.i.i.i = trunc i8 %33 to i1, !dbg !8581
  %lnot6.i.i.i.i = xor i1 %tobool5.i.i.i.i, true, !dbg !8581
  %lnot.ext9.i.i.i.i = zext i1 %tobool5.i.i.i.i to i32, !dbg !8581
  %conv10.i.i.i.i = sext i32 %lnot.ext9.i.i.i.i to i64, !dbg !8581
  store i64 %conv10.i.i.i.i, i64* %tmp.i.i.i.i, align 8, !dbg !8655
  %34 = load i64, i64* %tmp.i.i.i.i, align 8, !dbg !8581
  %tobool11.i.i.i.i = icmp ne i64 %34, 0, !dbg !8657
  %lnot3.i.i.i = xor i1 %tobool11.i.i.i.i, true, !dbg !8658
  br i1 %lnot3.i.i.i, label %do.body.i.i.i, label %atomic_add_unless.exit, !dbg !8659, !llvm.loop !8660

atomic_add_unless.exit:                           ; preds = %if.then.i.i.i, %arch_atomic_try_cmpxchg.exit.i.i.i
  %35 = load i32, i32* %c.i.i.i, align 4, !dbg !8662
  %36 = load i32, i32* %u.addr.i.i, align 4, !dbg !8663
  %cmp.i.i = icmp ne i32 %35, %36, !dbg !8664
  ret void, !dbg !8665
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_links_write_lock() #0 !dbg !8666 {
entry:
  call void @mutex_lock(%struct.mutex* @device_links_lock) #10, !dbg !8667
  ret void, !dbg !8668
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @device_pm_initialized(%struct.device* %dev) #0 !dbg !8669 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8672, metadata !DIExpression()), !dbg !8673
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8674
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !8675
  %in_dpm_list = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 1, !dbg !8676
  %bf.load = load i16, i16* %in_dpm_list, align 4, !dbg !8676
  %bf.lshr = lshr i16 %bf.load, 2, !dbg !8676
  %bf.clear = and i16 %bf.lshr, 1, !dbg !8676
  %bf.cast = trunc i16 %bf.clear to i1, !dbg !8676
  ret i1 %bf.cast, !dbg !8677
}

; Function Attrs: noredzone
declare dso_local void @pm_runtime_new_link(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_inc(%struct.refcount_struct* %r) #0 !dbg !8678 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !8682, metadata !DIExpression()), !dbg !8683
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !8684
  call void @__refcount_inc(%struct.refcount_struct* %0, i32* null) #10, !dbg !8685
  ret void, !dbg !8686
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kref_get(%struct.kref* %kref) #0 !dbg !8687 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !8691, metadata !DIExpression()), !dbg !8692
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !8693
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !8694
  call void @refcount_inc(%struct.refcount_struct* %refcount) #10, !dbg !8695
  ret void, !dbg !8696
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_link_init_status(%struct.device_link* %link, %struct.device* %consumer, %struct.device* %supplier) #0 !dbg !8697 {
entry:
  %link.addr = alloca %struct.device_link*, align 8
  %consumer.addr = alloca %struct.device*, align 8
  %supplier.addr = alloca %struct.device*, align 8
  store %struct.device_link* %link, %struct.device_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_link** %link.addr, metadata !8700, metadata !DIExpression()), !dbg !8701
  store %struct.device* %consumer, %struct.device** %consumer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %consumer.addr, metadata !8702, metadata !DIExpression()), !dbg !8703
  store %struct.device* %supplier, %struct.device** %supplier.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %supplier.addr, metadata !8704, metadata !DIExpression()), !dbg !8705
  %0 = load %struct.device*, %struct.device** %supplier.addr, align 8, !dbg !8706
  %links = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 10, !dbg !8707
  %status = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 5, !dbg !8708
  %1 = load i32, i32* %status, align 4, !dbg !8708
  switch i32 %1, label %sw.default18 [
    i32 1, label %sw.bb
    i32 2, label %sw.bb6
    i32 3, label %sw.bb16
  ], !dbg !8709

sw.bb:                                            ; preds = %entry
  %2 = load %struct.device*, %struct.device** %consumer.addr, align 8, !dbg !8710
  %links1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 10, !dbg !8712
  %status2 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links1, i32 0, i32 5, !dbg !8713
  %3 = load i32, i32* %status2, align 4, !dbg !8713
  switch i32 %3, label %sw.default [
    i32 1, label %sw.bb3
  ], !dbg !8714

sw.bb3:                                           ; preds = %sw.bb
  %4 = load %struct.device_link*, %struct.device_link** %link.addr, align 8, !dbg !8715
  %status4 = getelementptr inbounds %struct.device_link, %struct.device_link* %4, i32 0, i32 5, !dbg !8717
  store i32 2, i32* %status4, align 8, !dbg !8718
  br label %sw.epilog, !dbg !8719

sw.default:                                       ; preds = %sw.bb
  %5 = load %struct.device_link*, %struct.device_link** %link.addr, align 8, !dbg !8720
  %status5 = getelementptr inbounds %struct.device_link, %struct.device_link* %5, i32 0, i32 5, !dbg !8721
  store i32 0, i32* %status5, align 8, !dbg !8722
  br label %sw.epilog, !dbg !8723

sw.epilog:                                        ; preds = %sw.default, %sw.bb3
  br label %sw.epilog20, !dbg !8724

sw.bb6:                                           ; preds = %entry
  %6 = load %struct.device*, %struct.device** %consumer.addr, align 8, !dbg !8725
  %links7 = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 10, !dbg !8726
  %status8 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links7, i32 0, i32 5, !dbg !8727
  %7 = load i32, i32* %status8, align 4, !dbg !8727
  switch i32 %7, label %sw.default13 [
    i32 1, label %sw.bb9
    i32 2, label %sw.bb11
  ], !dbg !8728

sw.bb9:                                           ; preds = %sw.bb6
  %8 = load %struct.device_link*, %struct.device_link** %link.addr, align 8, !dbg !8729
  %status10 = getelementptr inbounds %struct.device_link, %struct.device_link* %8, i32 0, i32 5, !dbg !8731
  store i32 2, i32* %status10, align 8, !dbg !8732
  br label %sw.epilog15, !dbg !8733

sw.bb11:                                          ; preds = %sw.bb6
  %9 = load %struct.device_link*, %struct.device_link** %link.addr, align 8, !dbg !8734
  %status12 = getelementptr inbounds %struct.device_link, %struct.device_link* %9, i32 0, i32 5, !dbg !8735
  store i32 3, i32* %status12, align 8, !dbg !8736
  br label %sw.epilog15, !dbg !8737

sw.default13:                                     ; preds = %sw.bb6
  %10 = load %struct.device_link*, %struct.device_link** %link.addr, align 8, !dbg !8738
  %status14 = getelementptr inbounds %struct.device_link, %struct.device_link* %10, i32 0, i32 5, !dbg !8739
  store i32 1, i32* %status14, align 8, !dbg !8740
  br label %sw.epilog15, !dbg !8741

sw.epilog15:                                      ; preds = %sw.default13, %sw.bb11, %sw.bb9
  br label %sw.epilog20, !dbg !8742

sw.bb16:                                          ; preds = %entry
  %11 = load %struct.device_link*, %struct.device_link** %link.addr, align 8, !dbg !8743
  %status17 = getelementptr inbounds %struct.device_link, %struct.device_link* %11, i32 0, i32 5, !dbg !8744
  store i32 4, i32* %status17, align 8, !dbg !8745
  br label %sw.epilog20, !dbg !8746

sw.default18:                                     ; preds = %entry
  %12 = load %struct.device_link*, %struct.device_link** %link.addr, align 8, !dbg !8747
  %status19 = getelementptr inbounds %struct.device_link, %struct.device_link* %12, i32 0, i32 5, !dbg !8748
  store i32 0, i32* %status19, align 8, !dbg !8749
  br label %sw.epilog20, !dbg !8750

sw.epilog20:                                      ; preds = %sw.default18, %sw.bb16, %sw.epilog15, %sw.epilog
  ret void, !dbg !8751
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !8752 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !8755, metadata !DIExpression()), !dbg !8759
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !8765, metadata !DIExpression()), !dbg !8766
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !8767, metadata !DIExpression()), !dbg !8768
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !8769, metadata !DIExpression()), !dbg !8770
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !8771, metadata !DIExpression()), !dbg !8775
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !8777, metadata !DIExpression()), !dbg !8781
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !8783, metadata !DIExpression()), !dbg !8787
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !8792, metadata !DIExpression()), !dbg !8793
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !8794, metadata !DIExpression()), !dbg !8795
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8796, metadata !DIExpression()), !dbg !8797
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !8798, metadata !DIExpression()), !dbg !8799
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !8800, metadata !DIExpression()), !dbg !8801
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8802, metadata !DIExpression()), !dbg !8803
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !8804, metadata !DIExpression()), !dbg !8805
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !8806, metadata !DIExpression()), !dbg !8807
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8808, metadata !DIExpression()), !dbg !8809
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8810, metadata !DIExpression()), !dbg !8811
  %0 = load i64, i64* %size.addr, align 8, !dbg !8812
  %1 = load i32, i32* %flags.addr, align 4, !dbg !8813
  %or = or i32 %1, 256, !dbg !8814
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !8815
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #5, !dbg !8816
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !8817

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8818
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !8819
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8820

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !8821
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !8822
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !8823
  %call.i.i = call i32 @get_order(i64 %7) #12, !dbg !8824
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !8801
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !8825
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !8826
  %10 = load i32, i32* %order.i.i, align 4, !dbg !8827
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !8828
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !8829
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !8830
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #11, !dbg !8831
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !8831
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !8831
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !8831
  call void @llvm.assume(i1 %maskcond.i.i.i) #5, !dbg !8831
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !8832
  br label %kmalloc.exit, !dbg !8832

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !8833
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8834
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !8834
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !8836

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !8837
  br label %kmalloc_index.exit.i, !dbg !8837

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8838
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !8840
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !8841

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8842
  br label %kmalloc_index.exit.i, !dbg !8842

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8843
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !8845
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !8846

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8847
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !8848
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !8849

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !8850
  br label %kmalloc_index.exit.i, !dbg !8850

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8851
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !8853
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !8854

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8855
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !8856
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !8857

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !8858
  br label %kmalloc_index.exit.i, !dbg !8858

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8859
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !8861
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !8862

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8863
  br label %kmalloc_index.exit.i, !dbg !8863

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8864
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !8866
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !8867

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !8868
  br label %kmalloc_index.exit.i, !dbg !8868

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8869
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !8871
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !8872

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !8873
  br label %kmalloc_index.exit.i, !dbg !8873

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8874
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !8876
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !8877

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !8878
  br label %kmalloc_index.exit.i, !dbg !8878

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8879
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !8881
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !8882

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !8883
  br label %kmalloc_index.exit.i, !dbg !8883

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8884
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !8886
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !8887

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !8888
  br label %kmalloc_index.exit.i, !dbg !8888

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8889
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !8891
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !8892

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !8893
  br label %kmalloc_index.exit.i, !dbg !8893

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8894
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !8896
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !8897

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !8898
  br label %kmalloc_index.exit.i, !dbg !8898

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8899
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !8901
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !8902

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !8903
  br label %kmalloc_index.exit.i, !dbg !8903

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8904
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !8906
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !8907

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !8908
  br label %kmalloc_index.exit.i, !dbg !8908

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8909
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !8911
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !8912

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !8913
  br label %kmalloc_index.exit.i, !dbg !8913

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8914
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !8916
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !8917

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !8918
  br label %kmalloc_index.exit.i, !dbg !8918

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8919
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !8921
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !8922

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !8923
  br label %kmalloc_index.exit.i, !dbg !8923

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8924
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !8926
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !8927

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !8928
  br label %kmalloc_index.exit.i, !dbg !8928

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8929
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !8931
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !8932

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !8933
  br label %kmalloc_index.exit.i, !dbg !8933

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8934
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !8936
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !8937

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !8938
  br label %kmalloc_index.exit.i, !dbg !8938

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8939
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !8941
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !8942

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !8943
  br label %kmalloc_index.exit.i, !dbg !8943

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8944
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !8946
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !8947

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !8948
  br label %kmalloc_index.exit.i, !dbg !8948

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8949
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !8951
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !8952

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !8953
  br label %kmalloc_index.exit.i, !dbg !8953

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8954
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !8956
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !8957

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !8958
  br label %kmalloc_index.exit.i, !dbg !8958

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8959
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !8961
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !8962

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !8963
  br label %kmalloc_index.exit.i, !dbg !8963

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8964
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !8966
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !8967

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !8968
  br label %kmalloc_index.exit.i, !dbg !8968

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8969
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !8971
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !8972

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !8973
  br label %kmalloc_index.exit.i, !dbg !8973

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8974
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !8976
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !8977

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !8978
  br label %kmalloc_index.exit.i, !dbg !8978

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.34, i64 0, i64 0), i32 382, i32 0, i64 12) #5, !dbg !8979, !srcloc !8982
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 102) #5, !dbg !8983, !srcloc !8986
  unreachable, !dbg !8987

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !8988
  store i32 %45, i32* %index.i, align 4, !dbg !8989
  %46 = load i32, i32* %index.i, align 4, !dbg !8990
  %tobool.i = icmp ne i32 %46, 0, !dbg !8990
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !8992

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !8993
  br label %kmalloc.exit, !dbg !8993

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !8994
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8995
  %and.i.i = and i32 %48, 17, !dbg !8995
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !8995
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !8995
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !8995
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8995
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !8997

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !8998
  br label %kmalloc_type.exit.i, !dbg !8998

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8999
  %and2.i.i = and i32 %49, 1, !dbg !9000
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !8999
  %50 = zext i1 %tobool3.i.i to i64, !dbg !8999
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !8999
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !9001
  br label %kmalloc_type.exit.i, !dbg !9001

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !9002
  %idxprom.i = zext i32 %51 to i64, !dbg !9003
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !9003
  %52 = load i32, i32* %index.i, align 4, !dbg !9004
  %idxprom6.i = zext i32 %52 to i64, !dbg !9003
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !9003
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !9003
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !9005
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !9006
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9007
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9008
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #11, !dbg !9009
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !9009
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !9009
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !9009
  call void @llvm.assume(i1 %maskcond.i.i) #5, !dbg !9009
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !8770
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9010
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !9011
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !9012
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9013
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #11, !dbg !9014
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !9015
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !9016
  store i8* %62, i8** %retval.i, align 8, !dbg !9017
  br label %kmalloc.exit, !dbg !9017

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !9018
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !9019
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #11, !dbg !9020
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !9020
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !9020
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !9020
  call void @llvm.assume(i1 %maskcond.i) #5, !dbg !9020
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !9021
  br label %kmalloc.exit, !dbg !9021

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !9022
  ret i8* %65, !dbg !9023
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_set(%struct.refcount_struct* %r, i32 %n) #0 !dbg !9024 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !9027, metadata !DIExpression()), !dbg !9031
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !9035, metadata !DIExpression()), !dbg !9036
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !9037, metadata !DIExpression()), !dbg !9039
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9041, metadata !DIExpression()), !dbg !9042
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !9043, metadata !DIExpression()), !dbg !9044
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !9045, metadata !DIExpression()), !dbg !9046
  %r.addr = alloca %struct.refcount_struct*, align 8
  %n.addr = alloca i32, align 4
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !9047, metadata !DIExpression()), !dbg !9048
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !9049, metadata !DIExpression()), !dbg !9050
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !9051
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %0, i32 0, i32 0, !dbg !9052
  %1 = load i32, i32* %n.addr, align 4, !dbg !9053
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  store i32 %1, i32* %i.addr.i, align 4
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9054
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !9054
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9055
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !9056
  %conv.i.i = trunc i64 %5 to i32, !dbg !9056
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #11, !dbg !9057
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9058
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !9058
  call void @kcsan_check_access(i8* %6, i64 %7, i32 5) #11, !dbg !9058
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9059
  %9 = load i32, i32* %i.addr.i, align 4, !dbg !9060
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %9, i32* %i.addr.i.i, align 4
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !9061
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !9061
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %11, i32 0, i32 0, !dbg !9061
  store volatile i32 %10, i32* %counter.i.i, align 4, !dbg !9061
  ret void, !dbg !9063
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device* @get_device(%struct.device* %dev) #0 !dbg !9064 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9067, metadata !DIExpression()), !dbg !9068
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9069
  %tobool = icmp ne %struct.device* %0, null, !dbg !9069
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9069

cond.true:                                        ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9070
  %kobj = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 0, !dbg !9071
  %call = call %struct.kobject* @kobject_get(%struct.kobject* %kobj) #10, !dbg !9072
  %call1 = call %struct.device* @kobj_to_dev(%struct.kobject* %call) #10, !dbg !9073
  br label %cond.end, !dbg !9069

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9069

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.device* [ %call1, %cond.true ], [ null, %cond.false ], !dbg !9069
  ret %struct.device* %cond, !dbg !9074
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !9075 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !9079, metadata !DIExpression()), !dbg !9080
  br label %do.body, !dbg !9081

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9082

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !9084

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !9082

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9086
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9086
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !9086
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !9086
  br label %do.end3, !dbg !9086

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !9082

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9088
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9089
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !9090
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !9091
  ret void, !dbg !9092
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kref_init(%struct.kref* %kref) #0 !dbg !9093 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !9094, metadata !DIExpression()), !dbg !9095
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !9096
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !9097
  call void @refcount_set(%struct.refcount_struct* %refcount, i32 1) #10, !dbg !9098
  ret void, !dbg !9099
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_set_pm_not_required(%struct.device* %dev) #0 !dbg !9100 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9101, metadata !DIExpression()), !dbg !9102
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9103
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !9104
  %no_pm = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 1, !dbg !9105
  %bf.load = load i16, i16* %no_pm, align 4, !dbg !9106
  %bf.clear = and i16 %bf.load, -129, !dbg !9106
  %bf.set = or i16 %bf.clear, 128, !dbg !9106
  store i16 %bf.set, i16* %no_pm, align 4, !dbg !9106
  ret void, !dbg !9107
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dev_set_name(%struct.device* %dev, i8* %fmt, ...) #0 !dbg !9108 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %fmt.addr = alloca i8*, align 8
  %vargs = alloca [1 x %struct.__va_list_tag], align 16
  %err = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9111, metadata !DIExpression()), !dbg !9112
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !9113, metadata !DIExpression()), !dbg !9114
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %vargs, metadata !9115, metadata !DIExpression()), !dbg !9127
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9128, metadata !DIExpression()), !dbg !9129
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %vargs, i64 0, i64 0, !dbg !9130
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !9130
  call void @llvm.va_start(i8* %arraydecay1), !dbg !9130
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9131
  %kobj = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !9132
  %1 = load i8*, i8** %fmt.addr, align 8, !dbg !9133
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %vargs, i64 0, i64 0, !dbg !9134
  %call = call i32 @kobject_set_name_vargs(%struct.kobject* %kobj, i8* %1, %struct.__va_list_tag* %arraydecay2) #10, !dbg !9135
  store i32 %call, i32* %err, align 4, !dbg !9136
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %vargs, i64 0, i64 0, !dbg !9137
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !9137
  call void @llvm.va_end(i8* %arraydecay34), !dbg !9137
  %2 = load i32, i32* %err, align 4, !dbg !9138
  ret i32 %2, !dbg !9139
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !9140 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9143, metadata !DIExpression()), !dbg !9144
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9145
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !9147
  %1 = load i8*, i8** %init_name, align 8, !dbg !9147
  %tobool = icmp ne i8* %1, null, !dbg !9145
  br i1 %tobool, label %if.then, label %if.end, !dbg !9148

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9149
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !9150
  %3 = load i8*, i8** %init_name1, align 8, !dbg !9150
  store i8* %3, i8** %retval, align 8, !dbg !9151
  br label %return, !dbg !9151

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9152
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !9153
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #10, !dbg !9154
  store i8* %call, i8** %retval, align 8, !dbg !9155
  br label %return, !dbg !9155

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !9156
  ret i8* %5, !dbg !9156
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @device_register(%struct.device* %dev) #0 !dbg !9157 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9158, metadata !DIExpression()), !dbg !9159
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9160
  call void @device_initialize(%struct.device* %0) #10, !dbg !9161
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9162
  %call = call i32 @device_add(%struct.device* %1) #10, !dbg !9163
  ret i32 %call, !dbg !9164
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @put_device(%struct.device* %dev) #0 !dbg !9165 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9166, metadata !DIExpression()), !dbg !9167
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9168
  %tobool = icmp ne %struct.device* %0, null, !dbg !9168
  br i1 %tobool, label %if.then, label %if.end, !dbg !9170

if.then:                                          ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9171
  %kobj = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 0, !dbg !9172
  call void @kobject_put(%struct.kobject* %kobj) #10, !dbg !9173
  br label %if.end, !dbg !9173

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9174
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_resume(%struct.device* %dev) #0 !dbg !9175 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9176, metadata !DIExpression()), !dbg !9177
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9178
  %call = call i32 @__pm_runtime_resume(%struct.device* %0, i32 0) #10, !dbg !9179
  ret i32 %call, !dbg !9180
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail_rcu(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !9181 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !9185, metadata !DIExpression()), !dbg !9186
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !9187, metadata !DIExpression()), !dbg !9188
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9189
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !9190
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !9191
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !9191
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !9192
  call void @__list_add_rcu(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #10, !dbg !9193
  ret void, !dbg !9194
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_links_write_unlock() #0 !dbg !9195 {
entry:
  call void @mutex_unlock(%struct.mutex* @device_links_lock) #10, !dbg !9196
  ret void, !dbg !9197
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_put(%struct.device* %dev) #0 !dbg !9198 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9199, metadata !DIExpression()), !dbg !9200
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9201
  %call = call i32 @__pm_runtime_idle(%struct.device* %0, i32 5) #10, !dbg !9202
  ret i32 %call, !dbg !9203
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @device_link_del(%struct.device_link* %link) #0 !dbg !9204 {
entry:
  %link.addr = alloca %struct.device_link*, align 8
  store %struct.device_link* %link, %struct.device_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_link** %link.addr, metadata !9207, metadata !DIExpression()), !dbg !9208
  call void @device_links_write_lock() #10, !dbg !9209
  %0 = load %struct.device_link*, %struct.device_link** %link.addr, align 8, !dbg !9210
  call void @device_link_put_kref(%struct.device_link* %0) #10, !dbg !9211
  call void @device_links_write_unlock() #10, !dbg !9212
  ret void, !dbg !9213
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_link_put_kref(%struct.device_link* %link) #0 !dbg !9214 {
entry:
  %link.addr = alloca %struct.device_link*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device_link* %link, %struct.device_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_link** %link.addr, metadata !9215, metadata !DIExpression()), !dbg !9216
  %0 = load %struct.device_link*, %struct.device_link** %link.addr, align 8, !dbg !9217
  %flags = getelementptr inbounds %struct.device_link, %struct.device_link* %0, i32 0, i32 6, !dbg !9219
  %1 = load i32, i32* %flags, align 4, !dbg !9219
  %conv = zext i32 %1 to i64, !dbg !9217
  %and = and i64 %conv, 1, !dbg !9220
  %tobool = icmp ne i64 %and, 0, !dbg !9220
  br i1 %tobool, label %if.then, label %if.else, !dbg !9221

if.then:                                          ; preds = %entry
  %2 = load %struct.device_link*, %struct.device_link** %link.addr, align 8, !dbg !9222
  %kref = getelementptr inbounds %struct.device_link, %struct.device_link* %2, i32 0, i32 8, !dbg !9223
  %call = call i32 @kref_put(%struct.kref* %kref, void (%struct.kref*)* @__device_link_del) #10, !dbg !9224
  br label %if.end24, !dbg !9224

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9225, metadata !DIExpression()), !dbg !9227
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !9227
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !9228
  %tobool1 = icmp ne i32 %3, 0, !dbg !9228
  %lnot = xor i1 %tobool1, true, !dbg !9228
  %lnot2 = xor i1 %lnot, true, !dbg !9228
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9228
  %conv3 = sext i32 %lnot.ext to i64, !dbg !9228
  %tobool4 = icmp ne i64 %conv3, 0, !dbg !9228
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !9227

if.then5:                                         ; preds = %if.else
  br label %do.body, !dbg !9228

do.body:                                          ; preds = %if.then5
  br label %do.body6, !dbg !9230

do.body6:                                         ; preds = %do.body
  br label %do.end, !dbg !9232

do.end:                                           ; preds = %do.body6
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.51, i64 0, i64 0)) #10, !dbg !9230
  br label %do.body7, !dbg !9230

do.body7:                                         ; preds = %do.end
  br label %do.body8, !dbg !9234

do.body8:                                         ; preds = %do.body7
  br label %do.end9, !dbg !9236

do.end9:                                          ; preds = %do.body8
  br label %do.body10, !dbg !9234

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 803, i32 2313, i64 12) #5, !dbg !9238, !srcloc !9240
  br label %do.end11, !dbg !9238

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 347) #5, !dbg !9241, !srcloc !9243
  br label %do.body12, !dbg !9234

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !9244

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !9234

do.end14:                                         ; preds = %do.end13
  br label %do.body15, !dbg !9230

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !9246

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !9230

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !9230

if.end:                                           ; preds = %do.end17, %if.else
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !9227
  %tobool18 = icmp ne i32 %4, 0, !dbg !9227
  %lnot19 = xor i1 %tobool18, true, !dbg !9227
  %lnot21 = xor i1 %lnot19, true, !dbg !9227
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !9227
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !9227
  store i64 %conv23, i64* %tmp, align 8, !dbg !9228
  %5 = load i64, i64* %tmp, align 8, !dbg !9227
  br label %if.end24

if.end24:                                         ; preds = %if.end, %if.then
  ret void, !dbg !9248
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @device_link_remove(i8* %consumer, %struct.device* %supplier) #0 !dbg !9249 {
entry:
  %consumer.addr = alloca i8*, align 8
  %supplier.addr = alloca %struct.device*, align 8
  %link = alloca %struct.device_link*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp24 = alloca %struct.device_link*, align 8
  %__mptr36 = alloca i8*, align 8
  %tmp41 = alloca %struct.device_link*, align 8
  store i8* %consumer, i8** %consumer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %consumer.addr, metadata !9252, metadata !DIExpression()), !dbg !9253
  store %struct.device* %supplier, %struct.device** %supplier.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %supplier.addr, metadata !9254, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !9256, metadata !DIExpression()), !dbg !9257
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9258, metadata !DIExpression()), !dbg !9261
  %0 = load i8*, i8** %consumer.addr, align 8, !dbg !9261
  %1 = load %struct.device*, %struct.device** %supplier.addr, align 8, !dbg !9261
  %2 = bitcast %struct.device* %1 to i8*, !dbg !9261
  %cmp = icmp eq i8* %0, %2, !dbg !9261
  %lnot = xor i1 %cmp, true, !dbg !9261
  %lnot1 = xor i1 %lnot, true, !dbg !9261
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9261
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9261
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !9262
  %tobool = icmp ne i32 %3, 0, !dbg !9262
  %lnot2 = xor i1 %tobool, true, !dbg !9262
  %lnot4 = xor i1 %lnot2, true, !dbg !9262
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !9262
  %conv = sext i32 %lnot.ext5 to i64, !dbg !9262
  %tobool6 = icmp ne i64 %conv, 0, !dbg !9262
  br i1 %tobool6, label %if.then, label %if.end, !dbg !9261

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9262

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !9264

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !9266

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !9264

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 835, i32 2305, i64 12) #5, !dbg !9268, !srcloc !9270
  br label %do.end9, !dbg !9268

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 348) #5, !dbg !9271, !srcloc !9273
  br label %do.body10, !dbg !9264

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !9274

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !9264

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !9264

if.end:                                           ; preds = %do.end12, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !9261
  %tobool13 = icmp ne i32 %4, 0, !dbg !9261
  %lnot14 = xor i1 %tobool13, true, !dbg !9261
  %lnot16 = xor i1 %lnot14, true, !dbg !9261
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !9261
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !9261
  store i64 %conv18, i64* %tmp, align 8, !dbg !9262
  %5 = load i64, i64* %tmp, align 8, !dbg !9261
  %tobool19 = icmp ne i64 %5, 0, !dbg !9276
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !9277

if.then20:                                        ; preds = %if.end
  br label %return, !dbg !9278

if.end21:                                         ; preds = %if.end
  call void @device_links_write_lock() #10, !dbg !9279
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9280, metadata !DIExpression()), !dbg !9283
  %6 = load %struct.device*, %struct.device** %supplier.addr, align 8, !dbg !9283
  %links = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 10, !dbg !9283
  %consumers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 1, !dbg !9283
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %consumers, i32 0, i32 0, !dbg !9283
  %7 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9283
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !9283
  store i8* %8, i8** %__mptr, align 8, !dbg !9283
  br label %do.body22, !dbg !9283

do.body22:                                        ; preds = %if.end21
  br label %do.end23, !dbg !9284

do.end23:                                         ; preds = %do.body22
  %9 = load i8*, i8** %__mptr, align 8, !dbg !9283
  %add.ptr = getelementptr i8, i8* %9, i64 -8, !dbg !9283
  %10 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !9283
  store %struct.device_link* %10, %struct.device_link** %tmp24, align 8, !dbg !9284
  %11 = load %struct.device_link*, %struct.device_link** %tmp24, align 8, !dbg !9283
  store %struct.device_link* %11, %struct.device_link** %link, align 8, !dbg !9286
  br label %for.cond, !dbg !9286

for.cond:                                         ; preds = %do.end40, %do.end23
  %12 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9287
  %s_node = getelementptr inbounds %struct.device_link, %struct.device_link* %12, i32 0, i32 1, !dbg !9287
  %13 = load %struct.device*, %struct.device** %supplier.addr, align 8, !dbg !9287
  %links25 = getelementptr inbounds %struct.device, %struct.device* %13, i32 0, i32 10, !dbg !9287
  %consumers26 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links25, i32 0, i32 1, !dbg !9287
  %cmp27 = icmp eq %struct.list_head* %s_node, %consumers26, !dbg !9287
  %lnot29 = xor i1 %cmp27, true, !dbg !9287
  br i1 %lnot29, label %for.body, label %for.end, !dbg !9286

for.body:                                         ; preds = %for.cond
  %14 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9289
  %consumer31 = getelementptr inbounds %struct.device_link, %struct.device_link* %14, i32 0, i32 2, !dbg !9292
  %15 = load %struct.device*, %struct.device** %consumer31, align 8, !dbg !9292
  %16 = load i8*, i8** %consumer.addr, align 8, !dbg !9293
  %17 = bitcast i8* %16 to %struct.device*, !dbg !9293
  %cmp32 = icmp eq %struct.device* %15, %17, !dbg !9294
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !9295

if.then34:                                        ; preds = %for.body
  %18 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9296
  call void @device_link_put_kref(%struct.device_link* %18) #10, !dbg !9298
  br label %for.end, !dbg !9299

if.end35:                                         ; preds = %for.body
  br label %for.inc, !dbg !9300

for.inc:                                          ; preds = %if.end35
  call void @llvm.dbg.declare(metadata i8** %__mptr36, metadata !9301, metadata !DIExpression()), !dbg !9303
  %19 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9303
  %s_node37 = getelementptr inbounds %struct.device_link, %struct.device_link* %19, i32 0, i32 1, !dbg !9303
  %next38 = getelementptr inbounds %struct.list_head, %struct.list_head* %s_node37, i32 0, i32 0, !dbg !9303
  %20 = load %struct.list_head*, %struct.list_head** %next38, align 8, !dbg !9303
  %21 = bitcast %struct.list_head* %20 to i8*, !dbg !9303
  store i8* %21, i8** %__mptr36, align 8, !dbg !9303
  br label %do.body39, !dbg !9303

do.body39:                                        ; preds = %for.inc
  br label %do.end40, !dbg !9304

do.end40:                                         ; preds = %do.body39
  %22 = load i8*, i8** %__mptr36, align 8, !dbg !9303
  %add.ptr42 = getelementptr i8, i8* %22, i64 -8, !dbg !9303
  %23 = bitcast i8* %add.ptr42 to %struct.device_link*, !dbg !9303
  store %struct.device_link* %23, %struct.device_link** %tmp41, align 8, !dbg !9304
  %24 = load %struct.device_link*, %struct.device_link** %tmp41, align 8, !dbg !9303
  store %struct.device_link* %24, %struct.device_link** %link, align 8, !dbg !9287
  br label %for.cond, !dbg !9287, !llvm.loop !9306

for.end:                                          ; preds = %if.then34, %for.cond
  call void @device_links_write_unlock() #10, !dbg !9308
  br label %return, !dbg !9309

return:                                           ; preds = %for.end, %if.then20
  ret void, !dbg !9309
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @device_links_check_suppliers(%struct.device* %dev) #0 !dbg !9310 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %link = alloca %struct.device_link*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_link*, align 8
  %__mptr25 = alloca i8*, align 8
  %tmp30 = alloca %struct.device_link*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9311, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !9313, metadata !DIExpression()), !dbg !9314
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9315, metadata !DIExpression()), !dbg !9316
  store i32 0, i32* %ret, align 4, !dbg !9316
  call void @mutex_lock(%struct.mutex* @wfs_lock) #10, !dbg !9317
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9318
  %links = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 10, !dbg !9320
  %needs_suppliers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 2, !dbg !9321
  %call = call i32 @list_empty(%struct.list_head* %needs_suppliers) #10, !dbg !9322
  %tobool = icmp ne i32 %call, 0, !dbg !9322
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !9323

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9324
  %links1 = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 10, !dbg !9325
  %need_for_probe = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links1, i32 0, i32 4, !dbg !9326
  %2 = load i8, i8* %need_for_probe, align 8, !dbg !9326
  %tobool2 = trunc i8 %2 to i1, !dbg !9326
  br i1 %tobool2, label %if.then, label %if.end, !dbg !9327

if.then:                                          ; preds = %land.lhs.true
  call void @mutex_unlock(%struct.mutex* @wfs_lock) #10, !dbg !9328
  store i32 -517, i32* %retval, align 4, !dbg !9330
  br label %return, !dbg !9330

if.end:                                           ; preds = %land.lhs.true, %entry
  call void @mutex_unlock(%struct.mutex* @wfs_lock) #10, !dbg !9331
  call void @device_links_write_lock() #10, !dbg !9332
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9333, metadata !DIExpression()), !dbg !9336
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9336
  %links3 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 10, !dbg !9336
  %suppliers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links3, i32 0, i32 0, !dbg !9336
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %suppliers, i32 0, i32 0, !dbg !9336
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9336
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !9336
  store i8* %5, i8** %__mptr, align 8, !dbg !9336
  br label %do.body, !dbg !9336

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !9337

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !9336
  %add.ptr = getelementptr i8, i8* %6, i64 -32, !dbg !9336
  %7 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !9336
  store %struct.device_link* %7, %struct.device_link** %tmp, align 8, !dbg !9337
  %8 = load %struct.device_link*, %struct.device_link** %tmp, align 8, !dbg !9336
  store %struct.device_link* %8, %struct.device_link** %link, align 8, !dbg !9339
  br label %for.cond, !dbg !9339

for.cond:                                         ; preds = %do.end29, %do.end
  %9 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9340
  %c_node = getelementptr inbounds %struct.device_link, %struct.device_link* %9, i32 0, i32 3, !dbg !9340
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9340
  %links4 = getelementptr inbounds %struct.device, %struct.device* %10, i32 0, i32 10, !dbg !9340
  %suppliers5 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links4, i32 0, i32 0, !dbg !9340
  %cmp = icmp eq %struct.list_head* %c_node, %suppliers5, !dbg !9340
  %lnot = xor i1 %cmp, true, !dbg !9340
  br i1 %lnot, label %for.body, label %for.end, !dbg !9339

for.body:                                         ; preds = %for.cond
  %11 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9342
  %flags = getelementptr inbounds %struct.device_link, %struct.device_link* %11, i32 0, i32 6, !dbg !9345
  %12 = load i32, i32* %flags, align 4, !dbg !9345
  %conv = zext i32 %12 to i64, !dbg !9342
  %and = and i64 %conv, 64, !dbg !9346
  %tobool6 = icmp ne i64 %and, 0, !dbg !9346
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !9347

if.then7:                                         ; preds = %for.body
  br label %for.inc, !dbg !9348

if.end8:                                          ; preds = %for.body
  %13 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9349
  %status = getelementptr inbounds %struct.device_link, %struct.device_link* %13, i32 0, i32 5, !dbg !9351
  %14 = load i32, i32* %status, align 8, !dbg !9351
  %cmp9 = icmp ne i32 %14, 1, !dbg !9352
  br i1 %cmp9, label %land.lhs.true11, label %if.end17, !dbg !9353

land.lhs.true11:                                  ; preds = %if.end8
  %15 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9354
  %flags12 = getelementptr inbounds %struct.device_link, %struct.device_link* %15, i32 0, i32 6, !dbg !9355
  %16 = load i32, i32* %flags12, align 4, !dbg !9355
  %conv13 = zext i32 %16 to i64, !dbg !9354
  %and14 = and i64 %conv13, 128, !dbg !9356
  %tobool15 = icmp ne i64 %and14, 0, !dbg !9356
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !9357

if.then16:                                        ; preds = %land.lhs.true11
  %17 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9358
  call void @device_links_missing_supplier(%struct.device* %17) #10, !dbg !9360
  store i32 -517, i32* %ret, align 4, !dbg !9361
  br label %for.end, !dbg !9362

if.end17:                                         ; preds = %land.lhs.true11, %if.end8
  br label %do.body18, !dbg !9363

do.body18:                                        ; preds = %if.end17
  br label %do.body19, !dbg !9364

do.body19:                                        ; preds = %do.body18
  br label %do.end20, !dbg !9366

do.end20:                                         ; preds = %do.body19
  br label %do.body21, !dbg !9364

do.body21:                                        ; preds = %do.end20
  %18 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9368
  %status22 = getelementptr inbounds %struct.device_link, %struct.device_link* %18, i32 0, i32 5, !dbg !9368
  store volatile i32 2, i32* %status22, align 8, !dbg !9368
  br label %do.end23, !dbg !9368

do.end23:                                         ; preds = %do.body21
  br label %do.end24, !dbg !9364

do.end24:                                         ; preds = %do.end23
  br label %for.inc, !dbg !9370

for.inc:                                          ; preds = %do.end24, %if.then7
  call void @llvm.dbg.declare(metadata i8** %__mptr25, metadata !9371, metadata !DIExpression()), !dbg !9373
  %19 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9373
  %c_node26 = getelementptr inbounds %struct.device_link, %struct.device_link* %19, i32 0, i32 3, !dbg !9373
  %next27 = getelementptr inbounds %struct.list_head, %struct.list_head* %c_node26, i32 0, i32 0, !dbg !9373
  %20 = load %struct.list_head*, %struct.list_head** %next27, align 8, !dbg !9373
  %21 = bitcast %struct.list_head* %20 to i8*, !dbg !9373
  store i8* %21, i8** %__mptr25, align 8, !dbg !9373
  br label %do.body28, !dbg !9373

do.body28:                                        ; preds = %for.inc
  br label %do.end29, !dbg !9374

do.end29:                                         ; preds = %do.body28
  %22 = load i8*, i8** %__mptr25, align 8, !dbg !9373
  %add.ptr31 = getelementptr i8, i8* %22, i64 -32, !dbg !9373
  %23 = bitcast i8* %add.ptr31 to %struct.device_link*, !dbg !9373
  store %struct.device_link* %23, %struct.device_link** %tmp30, align 8, !dbg !9374
  %24 = load %struct.device_link*, %struct.device_link** %tmp30, align 8, !dbg !9373
  store %struct.device_link* %24, %struct.device_link** %link, align 8, !dbg !9340
  br label %for.cond, !dbg !9340, !llvm.loop !9376

for.end:                                          ; preds = %if.then16, %for.cond
  %25 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9378
  %links32 = getelementptr inbounds %struct.device, %struct.device* %25, i32 0, i32 10, !dbg !9379
  %status33 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links32, i32 0, i32 5, !dbg !9380
  store i32 1, i32* %status33, align 4, !dbg !9381
  call void @device_links_write_unlock() #10, !dbg !9382
  %26 = load i32, i32* %ret, align 4, !dbg !9383
  store i32 %26, i32* %retval, align 4, !dbg !9384
  br label %return, !dbg !9384

return:                                           ; preds = %for.end, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !9385
  ret i32 %27, !dbg !9385
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !9386 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !9391, metadata !DIExpression()), !dbg !9392
  br label %do.body, !dbg !9393

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9395

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !9393
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !9393
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9393
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !9395
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !9393
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !9397
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !9398
  %conv = zext i1 %cmp to i32, !dbg !9398
  ret i32 %conv, !dbg !9399
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_links_missing_supplier(%struct.device* %dev) #0 !dbg !9400 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %link = alloca %struct.device_link*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_link*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp35 = alloca i64, align 8
  %__mptr50 = alloca i8*, align 8
  %tmp55 = alloca %struct.device_link*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9401, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !9403, metadata !DIExpression()), !dbg !9404
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9405, metadata !DIExpression()), !dbg !9408
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9408
  %links = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 10, !dbg !9408
  %suppliers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 0, !dbg !9408
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %suppliers, i32 0, i32 0, !dbg !9408
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9408
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !9408
  store i8* %2, i8** %__mptr, align 8, !dbg !9408
  br label %do.body, !dbg !9408

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9409

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !9408
  %add.ptr = getelementptr i8, i8* %3, i64 -32, !dbg !9408
  %4 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !9408
  store %struct.device_link* %4, %struct.device_link** %tmp, align 8, !dbg !9409
  %5 = load %struct.device_link*, %struct.device_link** %tmp, align 8, !dbg !9408
  store %struct.device_link* %5, %struct.device_link** %link, align 8, !dbg !9411
  br label %for.cond, !dbg !9411

for.cond:                                         ; preds = %do.end54, %do.end
  %6 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9412
  %c_node = getelementptr inbounds %struct.device_link, %struct.device_link* %6, i32 0, i32 3, !dbg !9412
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9412
  %links1 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 10, !dbg !9412
  %suppliers2 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links1, i32 0, i32 0, !dbg !9412
  %cmp = icmp eq %struct.list_head* %c_node, %suppliers2, !dbg !9412
  %lnot = xor i1 %cmp, true, !dbg !9412
  br i1 %lnot, label %for.body, label %for.end, !dbg !9411

for.body:                                         ; preds = %for.cond
  %8 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9414
  %status = getelementptr inbounds %struct.device_link, %struct.device_link* %8, i32 0, i32 5, !dbg !9417
  %9 = load i32, i32* %status, align 8, !dbg !9417
  %cmp3 = icmp ne i32 %9, 2, !dbg !9418
  br i1 %cmp3, label %if.then, label %if.end, !dbg !9419

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !9420

if.end:                                           ; preds = %for.body
  %10 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9421
  %supplier = getelementptr inbounds %struct.device_link, %struct.device_link* %10, i32 0, i32 0, !dbg !9423
  %11 = load %struct.device*, %struct.device** %supplier, align 8, !dbg !9423
  %links4 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 10, !dbg !9424
  %status5 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links4, i32 0, i32 5, !dbg !9425
  %12 = load i32, i32* %status5, align 4, !dbg !9425
  %cmp6 = icmp eq i32 %12, 2, !dbg !9426
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !9427

if.then7:                                         ; preds = %if.end
  br label %do.body8, !dbg !9428

do.body8:                                         ; preds = %if.then7
  br label %do.body9, !dbg !9430

do.body9:                                         ; preds = %do.body8
  br label %do.end10, !dbg !9432

do.end10:                                         ; preds = %do.body9
  br label %do.body11, !dbg !9430

do.body11:                                        ; preds = %do.end10
  %13 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9434
  %status12 = getelementptr inbounds %struct.device_link, %struct.device_link* %13, i32 0, i32 5, !dbg !9434
  store volatile i32 1, i32* %status12, align 8, !dbg !9434
  br label %do.end13, !dbg !9434

do.end13:                                         ; preds = %do.body11
  br label %do.end14, !dbg !9430

do.end14:                                         ; preds = %do.end13
  br label %if.end49, !dbg !9436

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9437, metadata !DIExpression()), !dbg !9440
  %14 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9440
  %flags = getelementptr inbounds %struct.device_link, %struct.device_link* %14, i32 0, i32 6, !dbg !9440
  %15 = load i32, i32* %flags, align 4, !dbg !9440
  %conv = zext i32 %15 to i64, !dbg !9440
  %and = and i64 %conv, 128, !dbg !9440
  %tobool = icmp ne i64 %and, 0, !dbg !9440
  %lnot15 = xor i1 %tobool, true, !dbg !9440
  %lnot16 = xor i1 %lnot15, true, !dbg !9440
  %lnot17 = xor i1 %lnot16, true, !dbg !9440
  %lnot.ext = zext i1 %lnot17 to i32, !dbg !9440
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9440
  %16 = load i32, i32* %__ret_warn_on, align 4, !dbg !9441
  %tobool18 = icmp ne i32 %16, 0, !dbg !9441
  %lnot19 = xor i1 %tobool18, true, !dbg !9441
  %lnot21 = xor i1 %lnot19, true, !dbg !9441
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !9441
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !9441
  %tobool24 = icmp ne i64 %conv23, 0, !dbg !9441
  br i1 %tobool24, label %if.then25, label %if.end34, !dbg !9440

if.then25:                                        ; preds = %if.else
  br label %do.body26, !dbg !9441

do.body26:                                        ; preds = %if.then25
  br label %do.body27, !dbg !9443

do.body27:                                        ; preds = %do.body26
  br label %do.end28, !dbg !9445

do.end28:                                         ; preds = %do.body27
  br label %do.body29, !dbg !9443

do.body29:                                        ; preds = %do.end28
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 862, i32 2305, i64 12) #5, !dbg !9447, !srcloc !9449
  br label %do.end30, !dbg !9447

do.end30:                                         ; preds = %do.body29
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 354) #5, !dbg !9450, !srcloc !9452
  br label %do.body31, !dbg !9443

do.body31:                                        ; preds = %do.end30
  br label %do.end32, !dbg !9453

do.end32:                                         ; preds = %do.body31
  br label %do.end33, !dbg !9443

do.end33:                                         ; preds = %do.end32
  br label %if.end34, !dbg !9443

if.end34:                                         ; preds = %do.end33, %if.else
  %17 = load i32, i32* %__ret_warn_on, align 4, !dbg !9440
  %tobool36 = icmp ne i32 %17, 0, !dbg !9440
  %lnot37 = xor i1 %tobool36, true, !dbg !9440
  %lnot39 = xor i1 %lnot37, true, !dbg !9440
  %lnot.ext40 = zext i1 %lnot39 to i32, !dbg !9440
  %conv41 = sext i32 %lnot.ext40 to i64, !dbg !9440
  store i64 %conv41, i64* %tmp35, align 8, !dbg !9441
  %18 = load i64, i64* %tmp35, align 8, !dbg !9440
  br label %do.body42, !dbg !9455

do.body42:                                        ; preds = %if.end34
  br label %do.body43, !dbg !9456

do.body43:                                        ; preds = %do.body42
  br label %do.end44, !dbg !9458

do.end44:                                         ; preds = %do.body43
  br label %do.body45, !dbg !9456

do.body45:                                        ; preds = %do.end44
  %19 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9460
  %status46 = getelementptr inbounds %struct.device_link, %struct.device_link* %19, i32 0, i32 5, !dbg !9460
  store volatile i32 0, i32* %status46, align 8, !dbg !9460
  br label %do.end47, !dbg !9460

do.end47:                                         ; preds = %do.body45
  br label %do.end48, !dbg !9456

do.end48:                                         ; preds = %do.end47
  br label %if.end49

if.end49:                                         ; preds = %do.end48, %do.end14
  br label %for.inc, !dbg !9462

for.inc:                                          ; preds = %if.end49, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr50, metadata !9463, metadata !DIExpression()), !dbg !9465
  %20 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9465
  %c_node51 = getelementptr inbounds %struct.device_link, %struct.device_link* %20, i32 0, i32 3, !dbg !9465
  %next52 = getelementptr inbounds %struct.list_head, %struct.list_head* %c_node51, i32 0, i32 0, !dbg !9465
  %21 = load %struct.list_head*, %struct.list_head** %next52, align 8, !dbg !9465
  %22 = bitcast %struct.list_head* %21 to i8*, !dbg !9465
  store i8* %22, i8** %__mptr50, align 8, !dbg !9465
  br label %do.body53, !dbg !9465

do.body53:                                        ; preds = %for.inc
  br label %do.end54, !dbg !9466

do.end54:                                         ; preds = %do.body53
  %23 = load i8*, i8** %__mptr50, align 8, !dbg !9465
  %add.ptr56 = getelementptr i8, i8* %23, i64 -32, !dbg !9465
  %24 = bitcast i8* %add.ptr56 to %struct.device_link*, !dbg !9465
  store %struct.device_link* %24, %struct.device_link** %tmp55, align 8, !dbg !9466
  %25 = load %struct.device_link*, %struct.device_link** %tmp55, align 8, !dbg !9465
  store %struct.device_link* %25, %struct.device_link** %link, align 8, !dbg !9412
  br label %for.cond, !dbg !9412, !llvm.loop !9468

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9470
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @device_links_supplier_sync_state_pause() #0 !dbg !9471 {
entry:
  call void @device_links_write_lock() #10, !dbg !9472
  %0 = load i32, i32* @defer_sync_state_count, align 4, !dbg !9473
  %inc = add i32 %0, 1, !dbg !9473
  store i32 %inc, i32* @defer_sync_state_count, align 4, !dbg !9473
  call void @device_links_write_unlock() #10, !dbg !9474
  ret void, !dbg !9475
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @device_links_supplier_sync_state_resume() #0 !dbg !9476 {
entry:
  %dev = alloca %struct.device*, align 8
  %tmp = alloca %struct.device*, align 8
  %sync_list = alloca %struct.list_head, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp17 = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp30 = alloca %struct.device*, align 8
  %__mptr31 = alloca i8*, align 8
  %tmp35 = alloca %struct.device*, align 8
  %__mptr44 = alloca i8*, align 8
  %tmp50 = alloca %struct.device*, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !9477, metadata !DIExpression()), !dbg !9478
  call void @llvm.dbg.declare(metadata %struct.device** %tmp, metadata !9479, metadata !DIExpression()), !dbg !9480
  call void @llvm.dbg.declare(metadata %struct.list_head* %sync_list, metadata !9481, metadata !DIExpression()), !dbg !9482
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %sync_list, i32 0, i32 0, !dbg !9482
  store %struct.list_head* %sync_list, %struct.list_head** %next, align 8, !dbg !9482
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %sync_list, i32 0, i32 1, !dbg !9482
  store %struct.list_head* %sync_list, %struct.list_head** %prev, align 8, !dbg !9482
  call void @device_links_write_lock() #10, !dbg !9483
  %0 = load i32, i32* @defer_sync_state_count, align 4, !dbg !9484
  %tobool = icmp ne i32 %0, 0, !dbg !9484
  br i1 %tobool, label %if.end24, label %if.then, !dbg !9486

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9487, metadata !DIExpression()), !dbg !9490
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !9490
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !9491
  %tobool1 = icmp ne i32 %1, 0, !dbg !9491
  %lnot = xor i1 %tobool1, true, !dbg !9491
  %lnot2 = xor i1 %lnot, true, !dbg !9491
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9491
  %conv = sext i32 %lnot.ext to i64, !dbg !9491
  %tobool3 = icmp ne i64 %conv, 0, !dbg !9491
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !9490

if.then4:                                         ; preds = %if.then
  br label %do.body, !dbg !9491

do.body:                                          ; preds = %if.then4
  br label %do.body5, !dbg !9493

do.body5:                                         ; preds = %do.body
  br label %do.end, !dbg !9495

do.end:                                           ; preds = %do.body5
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !9493
  br label %do.body6, !dbg !9493

do.body6:                                         ; preds = %do.end
  br label %do.body7, !dbg !9497

do.body7:                                         ; preds = %do.body6
  br label %do.end8, !dbg !9499

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !9497

do.body9:                                         ; preds = %do.end8
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 1017, i32 2313, i64 12) #5, !dbg !9501, !srcloc !9503
  br label %do.end10, !dbg !9501

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 365) #5, !dbg !9504, !srcloc !9506
  br label %do.body11, !dbg !9497

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !9507

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !9497

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !9493

do.body14:                                        ; preds = %do.end13
  br label %do.end15, !dbg !9509

do.end15:                                         ; preds = %do.body14
  br label %do.end16, !dbg !9493

do.end16:                                         ; preds = %do.end15
  br label %if.end, !dbg !9493

if.end:                                           ; preds = %do.end16, %if.then
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !9490
  %tobool18 = icmp ne i32 %2, 0, !dbg !9490
  %lnot19 = xor i1 %tobool18, true, !dbg !9490
  %lnot21 = xor i1 %lnot19, true, !dbg !9490
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !9490
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !9490
  store i64 %conv23, i64* %tmp17, align 8, !dbg !9491
  %3 = load i64, i64* %tmp17, align 8, !dbg !9490
  br label %out, !dbg !9511

if.end24:                                         ; preds = %entry
  %4 = load i32, i32* @defer_sync_state_count, align 4, !dbg !9512
  %dec = add i32 %4, -1, !dbg !9512
  store i32 %dec, i32* @defer_sync_state_count, align 4, !dbg !9512
  %5 = load i32, i32* @defer_sync_state_count, align 4, !dbg !9513
  %tobool25 = icmp ne i32 %5, 0, !dbg !9513
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !9515

if.then26:                                        ; preds = %if.end24
  br label %out, !dbg !9516

if.end27:                                         ; preds = %if.end24
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9517, metadata !DIExpression()), !dbg !9520
  %6 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @deferred_sync, i32 0, i32 0), align 8, !dbg !9520
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !9520
  store i8* %7, i8** %__mptr, align 8, !dbg !9520
  br label %do.body28, !dbg !9520

do.body28:                                        ; preds = %if.end27
  br label %do.end29, !dbg !9521

do.end29:                                         ; preds = %do.body28
  %8 = load i8*, i8** %__mptr, align 8, !dbg !9520
  %add.ptr = getelementptr i8, i8* %8, i64 -200, !dbg !9520
  %9 = bitcast i8* %add.ptr to %struct.device*, !dbg !9520
  store %struct.device* %9, %struct.device** %tmp30, align 8, !dbg !9521
  %10 = load %struct.device*, %struct.device** %tmp30, align 8, !dbg !9520
  store %struct.device* %10, %struct.device** %dev, align 8, !dbg !9523
  call void @llvm.dbg.declare(metadata i8** %__mptr31, metadata !9524, metadata !DIExpression()), !dbg !9526
  %11 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9526
  %links = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 10, !dbg !9526
  %defer_hook = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 3, !dbg !9526
  %next32 = getelementptr inbounds %struct.list_head, %struct.list_head* %defer_hook, i32 0, i32 0, !dbg !9526
  %12 = load %struct.list_head*, %struct.list_head** %next32, align 8, !dbg !9526
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !9526
  store i8* %13, i8** %__mptr31, align 8, !dbg !9526
  br label %do.body33, !dbg !9526

do.body33:                                        ; preds = %do.end29
  br label %do.end34, !dbg !9527

do.end34:                                         ; preds = %do.body33
  %14 = load i8*, i8** %__mptr31, align 8, !dbg !9526
  %add.ptr36 = getelementptr i8, i8* %14, i64 -200, !dbg !9526
  %15 = bitcast i8* %add.ptr36 to %struct.device*, !dbg !9526
  store %struct.device* %15, %struct.device** %tmp35, align 8, !dbg !9527
  %16 = load %struct.device*, %struct.device** %tmp35, align 8, !dbg !9526
  store %struct.device* %16, %struct.device** %tmp, align 8, !dbg !9523
  br label %for.cond, !dbg !9523

for.cond:                                         ; preds = %do.end49, %do.end34
  %17 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9529
  %links37 = getelementptr inbounds %struct.device, %struct.device* %17, i32 0, i32 10, !dbg !9529
  %defer_hook38 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links37, i32 0, i32 3, !dbg !9529
  %cmp = icmp eq %struct.list_head* %defer_hook38, @deferred_sync, !dbg !9529
  %lnot40 = xor i1 %cmp, true, !dbg !9529
  br i1 %lnot40, label %for.body, label %for.end, !dbg !9523

for.body:                                         ; preds = %for.cond
  %18 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9531
  %links42 = getelementptr inbounds %struct.device, %struct.device* %18, i32 0, i32 10, !dbg !9533
  %defer_hook43 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links42, i32 0, i32 3, !dbg !9534
  call void @list_del_init(%struct.list_head* %defer_hook43) #10, !dbg !9535
  %19 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9536
  call void @__device_links_queue_sync_state(%struct.device* %19, %struct.list_head* %sync_list) #10, !dbg !9537
  br label %for.inc, !dbg !9538

for.inc:                                          ; preds = %for.body
  %20 = load %struct.device*, %struct.device** %tmp, align 8, !dbg !9529
  store %struct.device* %20, %struct.device** %dev, align 8, !dbg !9529
  call void @llvm.dbg.declare(metadata i8** %__mptr44, metadata !9539, metadata !DIExpression()), !dbg !9541
  %21 = load %struct.device*, %struct.device** %tmp, align 8, !dbg !9541
  %links45 = getelementptr inbounds %struct.device, %struct.device* %21, i32 0, i32 10, !dbg !9541
  %defer_hook46 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links45, i32 0, i32 3, !dbg !9541
  %next47 = getelementptr inbounds %struct.list_head, %struct.list_head* %defer_hook46, i32 0, i32 0, !dbg !9541
  %22 = load %struct.list_head*, %struct.list_head** %next47, align 8, !dbg !9541
  %23 = bitcast %struct.list_head* %22 to i8*, !dbg !9541
  store i8* %23, i8** %__mptr44, align 8, !dbg !9541
  br label %do.body48, !dbg !9541

do.body48:                                        ; preds = %for.inc
  br label %do.end49, !dbg !9542

do.end49:                                         ; preds = %do.body48
  %24 = load i8*, i8** %__mptr44, align 8, !dbg !9541
  %add.ptr51 = getelementptr i8, i8* %24, i64 -200, !dbg !9541
  %25 = bitcast i8* %add.ptr51 to %struct.device*, !dbg !9541
  store %struct.device* %25, %struct.device** %tmp50, align 8, !dbg !9542
  %26 = load %struct.device*, %struct.device** %tmp50, align 8, !dbg !9541
  store %struct.device* %26, %struct.device** %tmp, align 8, !dbg !9529
  br label %for.cond, !dbg !9529, !llvm.loop !9544

for.end:                                          ; preds = %for.cond
  br label %out, !dbg !9545

out:                                              ; preds = %for.end, %if.then26, %if.end
  call void @llvm.dbg.label(metadata !9546), !dbg !9547
  call void @device_links_write_unlock() #10, !dbg !9548
  call void @device_links_flush_sync_list(%struct.list_head* %sync_list, %struct.device* null) #10, !dbg !9549
  ret void, !dbg !9550
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del_init(%struct.list_head* %entry1) #0 !dbg !9551 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !9552, metadata !DIExpression()), !dbg !9553
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9554
  call void @__list_del_entry(%struct.list_head* %0) #10, !dbg !9555
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9556
  call void @INIT_LIST_HEAD(%struct.list_head* %1) #10, !dbg !9557
  ret void, !dbg !9558
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__device_links_queue_sync_state(%struct.device* %dev, %struct.list_head* %list) #0 !dbg !9559 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %list.addr = alloca %struct.list_head*, align 8
  %link = alloca %struct.device_link*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_link*, align 8
  %__mptr11 = alloca i8*, align 8
  %tmp16 = alloca %struct.device_link*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp44 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9562, metadata !DIExpression()), !dbg !9563
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !9564, metadata !DIExpression()), !dbg !9565
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !9566, metadata !DIExpression()), !dbg !9567
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9568
  %call = call zeroext i1 @dev_has_sync_state(%struct.device* %0) #10, !dbg !9570
  br i1 %call, label %if.end, label %if.then, !dbg !9571

if.then:                                          ; preds = %entry
  br label %return, !dbg !9572

if.end:                                           ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9573
  %state_synced = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 34, !dbg !9575
  %bf.load = load i8, i8* %state_synced, align 8, !dbg !9575
  %bf.lshr = lshr i8 %bf.load, 3, !dbg !9575
  %bf.clear = and i8 %bf.lshr, 1, !dbg !9575
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !9575
  br i1 %bf.cast, label %if.then1, label %if.end2, !dbg !9576

if.then1:                                         ; preds = %if.end
  br label %return, !dbg !9577

if.end2:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9578, metadata !DIExpression()), !dbg !9581
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9581
  %links = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 10, !dbg !9581
  %consumers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 1, !dbg !9581
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %consumers, i32 0, i32 0, !dbg !9581
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9581
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !9581
  store i8* %4, i8** %__mptr, align 8, !dbg !9581
  br label %do.body, !dbg !9581

do.body:                                          ; preds = %if.end2
  br label %do.end, !dbg !9582

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !9581
  %add.ptr = getelementptr i8, i8* %5, i64 -8, !dbg !9581
  %6 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !9581
  store %struct.device_link* %6, %struct.device_link** %tmp, align 8, !dbg !9582
  %7 = load %struct.device_link*, %struct.device_link** %tmp, align 8, !dbg !9581
  store %struct.device_link* %7, %struct.device_link** %link, align 8, !dbg !9584
  br label %for.cond, !dbg !9584

for.cond:                                         ; preds = %do.end15, %do.end
  %8 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9585
  %s_node = getelementptr inbounds %struct.device_link, %struct.device_link* %8, i32 0, i32 1, !dbg !9585
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9585
  %links3 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 10, !dbg !9585
  %consumers4 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links3, i32 0, i32 1, !dbg !9585
  %cmp = icmp eq %struct.list_head* %s_node, %consumers4, !dbg !9585
  %lnot = xor i1 %cmp, true, !dbg !9585
  br i1 %lnot, label %for.body, label %for.end, !dbg !9584

for.body:                                         ; preds = %for.cond
  %10 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9587
  %flags = getelementptr inbounds %struct.device_link, %struct.device_link* %10, i32 0, i32 6, !dbg !9590
  %11 = load i32, i32* %flags, align 4, !dbg !9590
  %conv = zext i32 %11 to i64, !dbg !9587
  %and = and i64 %conv, 64, !dbg !9591
  %tobool = icmp ne i64 %and, 0, !dbg !9591
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !9592

if.then5:                                         ; preds = %for.body
  br label %for.inc, !dbg !9593

if.end6:                                          ; preds = %for.body
  %12 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9594
  %status = getelementptr inbounds %struct.device_link, %struct.device_link* %12, i32 0, i32 5, !dbg !9596
  %13 = load i32, i32* %status, align 8, !dbg !9596
  %cmp7 = icmp ne i32 %13, 3, !dbg !9597
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !9598

if.then9:                                         ; preds = %if.end6
  br label %return, !dbg !9599

if.end10:                                         ; preds = %if.end6
  br label %for.inc, !dbg !9600

for.inc:                                          ; preds = %if.end10, %if.then5
  call void @llvm.dbg.declare(metadata i8** %__mptr11, metadata !9601, metadata !DIExpression()), !dbg !9603
  %14 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9603
  %s_node12 = getelementptr inbounds %struct.device_link, %struct.device_link* %14, i32 0, i32 1, !dbg !9603
  %next13 = getelementptr inbounds %struct.list_head, %struct.list_head* %s_node12, i32 0, i32 0, !dbg !9603
  %15 = load %struct.list_head*, %struct.list_head** %next13, align 8, !dbg !9603
  %16 = bitcast %struct.list_head* %15 to i8*, !dbg !9603
  store i8* %16, i8** %__mptr11, align 8, !dbg !9603
  br label %do.body14, !dbg !9603

do.body14:                                        ; preds = %for.inc
  br label %do.end15, !dbg !9604

do.end15:                                         ; preds = %do.body14
  %17 = load i8*, i8** %__mptr11, align 8, !dbg !9603
  %add.ptr17 = getelementptr i8, i8* %17, i64 -8, !dbg !9603
  %18 = bitcast i8* %add.ptr17 to %struct.device_link*, !dbg !9603
  store %struct.device_link* %18, %struct.device_link** %tmp16, align 8, !dbg !9604
  %19 = load %struct.device_link*, %struct.device_link** %tmp16, align 8, !dbg !9603
  store %struct.device_link* %19, %struct.device_link** %link, align 8, !dbg !9585
  br label %for.cond, !dbg !9585, !llvm.loop !9606

for.end:                                          ; preds = %for.cond
  %20 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9608
  %state_synced18 = getelementptr inbounds %struct.device, %struct.device* %20, i32 0, i32 34, !dbg !9609
  %bf.load19 = load i8, i8* %state_synced18, align 8, !dbg !9610
  %bf.clear20 = and i8 %bf.load19, -9, !dbg !9610
  %bf.set = or i8 %bf.clear20, 8, !dbg !9610
  store i8 %bf.set, i8* %state_synced18, align 8, !dbg !9610
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9611, metadata !DIExpression()), !dbg !9614
  %21 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9614
  %links21 = getelementptr inbounds %struct.device, %struct.device* %21, i32 0, i32 10, !dbg !9614
  %defer_hook = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links21, i32 0, i32 3, !dbg !9614
  %call22 = call i32 @list_empty(%struct.list_head* %defer_hook) #10, !dbg !9614
  %tobool23 = icmp ne i32 %call22, 0, !dbg !9614
  %lnot24 = xor i1 %tobool23, true, !dbg !9614
  %lnot25 = xor i1 %lnot24, true, !dbg !9614
  %lnot26 = xor i1 %lnot25, true, !dbg !9614
  %lnot.ext = zext i1 %lnot26 to i32, !dbg !9614
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9614
  %22 = load i32, i32* %__ret_warn_on, align 4, !dbg !9615
  %tobool27 = icmp ne i32 %22, 0, !dbg !9615
  %lnot28 = xor i1 %tobool27, true, !dbg !9615
  %lnot30 = xor i1 %lnot28, true, !dbg !9615
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !9615
  %conv32 = sext i32 %lnot.ext31 to i64, !dbg !9615
  %tobool33 = icmp ne i64 %conv32, 0, !dbg !9615
  br i1 %tobool33, label %if.then34, label %if.end43, !dbg !9614

if.then34:                                        ; preds = %for.end
  br label %do.body35, !dbg !9615

do.body35:                                        ; preds = %if.then34
  br label %do.body36, !dbg !9617

do.body36:                                        ; preds = %do.body35
  br label %do.end37, !dbg !9619

do.end37:                                         ; preds = %do.body36
  br label %do.body38, !dbg !9617

do.body38:                                        ; preds = %do.end37
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 963, i32 2305, i64 12) #5, !dbg !9621, !srcloc !9623
  br label %do.end39, !dbg !9621

do.end39:                                         ; preds = %do.body38
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 361) #5, !dbg !9624, !srcloc !9626
  br label %do.body40, !dbg !9617

do.body40:                                        ; preds = %do.end39
  br label %do.end41, !dbg !9627

do.end41:                                         ; preds = %do.body40
  br label %do.end42, !dbg !9617

do.end42:                                         ; preds = %do.end41
  br label %if.end43, !dbg !9617

if.end43:                                         ; preds = %do.end42, %for.end
  %23 = load i32, i32* %__ret_warn_on, align 4, !dbg !9614
  %tobool45 = icmp ne i32 %23, 0, !dbg !9614
  %lnot46 = xor i1 %tobool45, true, !dbg !9614
  %lnot48 = xor i1 %lnot46, true, !dbg !9614
  %lnot.ext49 = zext i1 %lnot48 to i32, !dbg !9614
  %conv50 = sext i32 %lnot.ext49 to i64, !dbg !9614
  store i64 %conv50, i64* %tmp44, align 8, !dbg !9615
  %24 = load i64, i64* %tmp44, align 8, !dbg !9614
  %tobool51 = icmp ne i64 %24, 0, !dbg !9629
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !9630

if.then52:                                        ; preds = %if.end43
  br label %return, !dbg !9631

if.end53:                                         ; preds = %if.end43
  %25 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9632
  %call54 = call %struct.device* @get_device(%struct.device* %25) #10, !dbg !9633
  %26 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9634
  %links55 = getelementptr inbounds %struct.device, %struct.device* %26, i32 0, i32 10, !dbg !9635
  %defer_hook56 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links55, i32 0, i32 3, !dbg !9636
  %27 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9637
  call void @list_add_tail(%struct.list_head* %defer_hook56, %struct.list_head* %27) #10, !dbg !9638
  br label %return, !dbg !9639

return:                                           ; preds = %if.end53, %if.then52, %if.then9, %if.then1, %if.then
  ret void, !dbg !9639
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_links_flush_sync_list(%struct.list_head* %list, %struct.device* %dont_lock_dev) #0 !dbg !9640 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %dont_lock_dev.addr = alloca %struct.device*, align 8
  %dev = alloca %struct.device*, align 8
  %tmp = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.device*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp6 = alloca %struct.device*, align 8
  %__mptr28 = alloca i8*, align 8
  %tmp34 = alloca %struct.device*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !9643, metadata !DIExpression()), !dbg !9644
  store %struct.device* %dont_lock_dev, %struct.device** %dont_lock_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dont_lock_dev.addr, metadata !9645, metadata !DIExpression()), !dbg !9646
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !9647, metadata !DIExpression()), !dbg !9648
  call void @llvm.dbg.declare(metadata %struct.device** %tmp, metadata !9649, metadata !DIExpression()), !dbg !9650
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9651, metadata !DIExpression()), !dbg !9654
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9654
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !9654
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9654
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !9654
  store i8* %2, i8** %__mptr, align 8, !dbg !9654
  br label %do.body, !dbg !9654

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9655

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !9654
  %add.ptr = getelementptr i8, i8* %3, i64 -200, !dbg !9654
  %4 = bitcast i8* %add.ptr to %struct.device*, !dbg !9654
  store %struct.device* %4, %struct.device** %tmp1, align 8, !dbg !9655
  %5 = load %struct.device*, %struct.device** %tmp1, align 8, !dbg !9654
  store %struct.device* %5, %struct.device** %dev, align 8, !dbg !9657
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !9658, metadata !DIExpression()), !dbg !9660
  %6 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9660
  %links = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 10, !dbg !9660
  %defer_hook = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 3, !dbg !9660
  %next3 = getelementptr inbounds %struct.list_head, %struct.list_head* %defer_hook, i32 0, i32 0, !dbg !9660
  %7 = load %struct.list_head*, %struct.list_head** %next3, align 8, !dbg !9660
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !9660
  store i8* %8, i8** %__mptr2, align 8, !dbg !9660
  br label %do.body4, !dbg !9660

do.body4:                                         ; preds = %do.end
  br label %do.end5, !dbg !9661

do.end5:                                          ; preds = %do.body4
  %9 = load i8*, i8** %__mptr2, align 8, !dbg !9660
  %add.ptr7 = getelementptr i8, i8* %9, i64 -200, !dbg !9660
  %10 = bitcast i8* %add.ptr7 to %struct.device*, !dbg !9660
  store %struct.device* %10, %struct.device** %tmp6, align 8, !dbg !9661
  %11 = load %struct.device*, %struct.device** %tmp6, align 8, !dbg !9660
  store %struct.device* %11, %struct.device** %tmp, align 8, !dbg !9657
  br label %for.cond, !dbg !9657

for.cond:                                         ; preds = %do.end33, %do.end5
  %12 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9663
  %links8 = getelementptr inbounds %struct.device, %struct.device* %12, i32 0, i32 10, !dbg !9663
  %defer_hook9 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links8, i32 0, i32 3, !dbg !9663
  %13 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9663
  %cmp = icmp eq %struct.list_head* %defer_hook9, %13, !dbg !9663
  %lnot = xor i1 %cmp, true, !dbg !9663
  br i1 %lnot, label %for.body, label %for.end, !dbg !9657

for.body:                                         ; preds = %for.cond
  %14 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9665
  %links10 = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 10, !dbg !9667
  %defer_hook11 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links10, i32 0, i32 3, !dbg !9668
  call void @list_del_init(%struct.list_head* %defer_hook11) #10, !dbg !9669
  %15 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9670
  %16 = load %struct.device*, %struct.device** %dont_lock_dev.addr, align 8, !dbg !9672
  %cmp12 = icmp ne %struct.device* %15, %16, !dbg !9673
  br i1 %cmp12, label %if.then, label %if.end, !dbg !9674

if.then:                                          ; preds = %for.body
  %17 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9675
  call void @device_lock(%struct.device* %17) #10, !dbg !9676
  br label %if.end, !dbg !9676

if.end:                                           ; preds = %if.then, %for.body
  %18 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9677
  %bus = getelementptr inbounds %struct.device, %struct.device* %18, i32 0, i32 5, !dbg !9679
  %19 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !9679
  %sync_state = getelementptr inbounds %struct.bus_type, %struct.bus_type* %19, i32 0, i32 9, !dbg !9680
  %20 = load void (%struct.device*)*, void (%struct.device*)** %sync_state, align 8, !dbg !9680
  %tobool = icmp ne void (%struct.device*)* %20, null, !dbg !9677
  br i1 %tobool, label %if.then13, label %if.else, !dbg !9681

if.then13:                                        ; preds = %if.end
  %21 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9682
  %bus14 = getelementptr inbounds %struct.device, %struct.device* %21, i32 0, i32 5, !dbg !9683
  %22 = load %struct.bus_type*, %struct.bus_type** %bus14, align 8, !dbg !9683
  %sync_state15 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %22, i32 0, i32 9, !dbg !9684
  %23 = load void (%struct.device*)*, void (%struct.device*)** %sync_state15, align 8, !dbg !9684
  %24 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9685
  call void %23(%struct.device* %24) #10, !dbg !9682
  br label %if.end24, !dbg !9682

if.else:                                          ; preds = %if.end
  %25 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9686
  %driver = getelementptr inbounds %struct.device, %struct.device* %25, i32 0, i32 6, !dbg !9688
  %26 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !9688
  %tobool16 = icmp ne %struct.device_driver* %26, null, !dbg !9686
  br i1 %tobool16, label %land.lhs.true, label %if.end23, !dbg !9689

land.lhs.true:                                    ; preds = %if.else
  %27 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9690
  %driver17 = getelementptr inbounds %struct.device, %struct.device* %27, i32 0, i32 6, !dbg !9691
  %28 = load %struct.device_driver*, %struct.device_driver** %driver17, align 8, !dbg !9691
  %sync_state18 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %28, i32 0, i32 9, !dbg !9692
  %29 = load void (%struct.device*)*, void (%struct.device*)** %sync_state18, align 8, !dbg !9692
  %tobool19 = icmp ne void (%struct.device*)* %29, null, !dbg !9690
  br i1 %tobool19, label %if.then20, label %if.end23, !dbg !9693

if.then20:                                        ; preds = %land.lhs.true
  %30 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9694
  %driver21 = getelementptr inbounds %struct.device, %struct.device* %30, i32 0, i32 6, !dbg !9695
  %31 = load %struct.device_driver*, %struct.device_driver** %driver21, align 8, !dbg !9695
  %sync_state22 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %31, i32 0, i32 9, !dbg !9696
  %32 = load void (%struct.device*)*, void (%struct.device*)** %sync_state22, align 8, !dbg !9696
  %33 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9697
  call void %32(%struct.device* %33) #10, !dbg !9694
  br label %if.end23, !dbg !9694

if.end23:                                         ; preds = %if.then20, %land.lhs.true, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then13
  %34 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9698
  %35 = load %struct.device*, %struct.device** %dont_lock_dev.addr, align 8, !dbg !9700
  %cmp25 = icmp ne %struct.device* %34, %35, !dbg !9701
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !9702

if.then26:                                        ; preds = %if.end24
  %36 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9703
  call void @device_unlock(%struct.device* %36) #10, !dbg !9704
  br label %if.end27, !dbg !9704

if.end27:                                         ; preds = %if.then26, %if.end24
  %37 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9705
  call void @put_device(%struct.device* %37) #10, !dbg !9706
  br label %for.inc, !dbg !9707

for.inc:                                          ; preds = %if.end27
  %38 = load %struct.device*, %struct.device** %tmp, align 8, !dbg !9663
  store %struct.device* %38, %struct.device** %dev, align 8, !dbg !9663
  call void @llvm.dbg.declare(metadata i8** %__mptr28, metadata !9708, metadata !DIExpression()), !dbg !9710
  %39 = load %struct.device*, %struct.device** %tmp, align 8, !dbg !9710
  %links29 = getelementptr inbounds %struct.device, %struct.device* %39, i32 0, i32 10, !dbg !9710
  %defer_hook30 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links29, i32 0, i32 3, !dbg !9710
  %next31 = getelementptr inbounds %struct.list_head, %struct.list_head* %defer_hook30, i32 0, i32 0, !dbg !9710
  %40 = load %struct.list_head*, %struct.list_head** %next31, align 8, !dbg !9710
  %41 = bitcast %struct.list_head* %40 to i8*, !dbg !9710
  store i8* %41, i8** %__mptr28, align 8, !dbg !9710
  br label %do.body32, !dbg !9710

do.body32:                                        ; preds = %for.inc
  br label %do.end33, !dbg !9711

do.end33:                                         ; preds = %do.body32
  %42 = load i8*, i8** %__mptr28, align 8, !dbg !9710
  %add.ptr35 = getelementptr i8, i8* %42, i64 -200, !dbg !9710
  %43 = bitcast i8* %add.ptr35 to %struct.device*, !dbg !9710
  store %struct.device* %43, %struct.device** %tmp34, align 8, !dbg !9711
  %44 = load %struct.device*, %struct.device** %tmp34, align 8, !dbg !9710
  store %struct.device* %44, %struct.device** %tmp, align 8, !dbg !9663
  br label %for.cond, !dbg !9663, !llvm.loop !9713

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9715
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sync_state_resume_initcall() #0 !dbg !9716 {
entry:
  call void @device_links_supplier_sync_state_resume() #10, !dbg !9717
  ret i32 0, !dbg !9718
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @device_links_driver_bound(%struct.device* %dev) #0 !dbg !9719 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %link = alloca %struct.device_link*, align 8
  %ln = alloca %struct.device_link*, align 8
  %sync_list = alloca %struct.list_head, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_link*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp34 = alloca i64, align 8
  %__mptr54 = alloca i8*, align 8
  %tmp59 = alloca %struct.device_link*, align 8
  %__mptr64 = alloca i8*, align 8
  %tmp69 = alloca %struct.device_link*, align 8
  %__mptr71 = alloca i8*, align 8
  %tmp75 = alloca %struct.device_link*, align 8
  %supplier = alloca %struct.device*, align 8
  %__ret_warn_on99 = alloca i32, align 4
  %tmp124 = alloca i64, align 8
  %__mptr144 = alloca i8*, align 8
  %tmp149 = alloca %struct.device_link*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9720, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !9722, metadata !DIExpression()), !dbg !9723
  call void @llvm.dbg.declare(metadata %struct.device_link** %ln, metadata !9724, metadata !DIExpression()), !dbg !9725
  call void @llvm.dbg.declare(metadata %struct.list_head* %sync_list, metadata !9726, metadata !DIExpression()), !dbg !9727
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %sync_list, i32 0, i32 0, !dbg !9727
  store %struct.list_head* %sync_list, %struct.list_head** %next, align 8, !dbg !9727
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %sync_list, i32 0, i32 1, !dbg !9727
  store %struct.list_head* %sync_list, %struct.list_head** %prev, align 8, !dbg !9727
  call void @mutex_lock(%struct.mutex* @wfs_lock) #10, !dbg !9728
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9729
  %links = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 10, !dbg !9730
  %needs_suppliers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 2, !dbg !9731
  call void @list_del_init(%struct.list_head* %needs_suppliers) #10, !dbg !9732
  call void @mutex_unlock(%struct.mutex* @wfs_lock) #10, !dbg !9733
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9734
  call void @device_remove_file(%struct.device* %1, %struct.device_attribute* @dev_attr_waiting_for_supplier) #10, !dbg !9735
  call void @device_links_write_lock() #10, !dbg !9736
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9737, metadata !DIExpression()), !dbg !9740
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9740
  %links1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 10, !dbg !9740
  %consumers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links1, i32 0, i32 1, !dbg !9740
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %consumers, i32 0, i32 0, !dbg !9740
  %3 = load %struct.list_head*, %struct.list_head** %next2, align 8, !dbg !9740
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !9740
  store i8* %4, i8** %__mptr, align 8, !dbg !9740
  br label %do.body, !dbg !9740

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9741

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !9740
  %add.ptr = getelementptr i8, i8* %5, i64 -8, !dbg !9740
  %6 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !9740
  store %struct.device_link* %6, %struct.device_link** %tmp, align 8, !dbg !9741
  %7 = load %struct.device_link*, %struct.device_link** %tmp, align 8, !dbg !9740
  store %struct.device_link* %7, %struct.device_link** %link, align 8, !dbg !9743
  br label %for.cond, !dbg !9743

for.cond:                                         ; preds = %do.end58, %do.end
  %8 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9744
  %s_node = getelementptr inbounds %struct.device_link, %struct.device_link* %8, i32 0, i32 1, !dbg !9744
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9744
  %links3 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 10, !dbg !9744
  %consumers4 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links3, i32 0, i32 1, !dbg !9744
  %cmp = icmp eq %struct.list_head* %s_node, %consumers4, !dbg !9744
  %lnot = xor i1 %cmp, true, !dbg !9744
  br i1 %lnot, label %for.body, label %for.end, !dbg !9743

for.body:                                         ; preds = %for.cond
  %10 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9746
  %flags = getelementptr inbounds %struct.device_link, %struct.device_link* %10, i32 0, i32 6, !dbg !9749
  %11 = load i32, i32* %flags, align 4, !dbg !9749
  %conv = zext i32 %11 to i64, !dbg !9746
  %and = and i64 %conv, 64, !dbg !9750
  %tobool = icmp ne i64 %and, 0, !dbg !9750
  br i1 %tobool, label %if.end, label %if.then, !dbg !9751

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !9752

if.end:                                           ; preds = %for.body
  %12 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9753
  %status = getelementptr inbounds %struct.device_link, %struct.device_link* %12, i32 0, i32 5, !dbg !9755
  %13 = load i32, i32* %status, align 8, !dbg !9755
  %cmp5 = icmp eq i32 %13, 2, !dbg !9756
  br i1 %cmp5, label %if.then10, label %lor.lhs.false, !dbg !9757

lor.lhs.false:                                    ; preds = %if.end
  %14 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9758
  %status7 = getelementptr inbounds %struct.device_link, %struct.device_link* %14, i32 0, i32 5, !dbg !9759
  %15 = load i32, i32* %status7, align 8, !dbg !9759
  %cmp8 = icmp eq i32 %15, 3, !dbg !9760
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !9761

if.then10:                                        ; preds = %lor.lhs.false, %if.end
  br label %for.inc, !dbg !9762

if.end11:                                         ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9763, metadata !DIExpression()), !dbg !9765
  %16 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9765
  %status12 = getelementptr inbounds %struct.device_link, %struct.device_link* %16, i32 0, i32 5, !dbg !9765
  %17 = load i32, i32* %status12, align 8, !dbg !9765
  %cmp13 = icmp ne i32 %17, 0, !dbg !9765
  %lnot15 = xor i1 %cmp13, true, !dbg !9765
  %lnot16 = xor i1 %lnot15, true, !dbg !9765
  %lnot.ext = zext i1 %lnot16 to i32, !dbg !9765
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9765
  %18 = load i32, i32* %__ret_warn_on, align 4, !dbg !9766
  %tobool17 = icmp ne i32 %18, 0, !dbg !9766
  %lnot18 = xor i1 %tobool17, true, !dbg !9766
  %lnot20 = xor i1 %lnot18, true, !dbg !9766
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !9766
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !9766
  %tobool23 = icmp ne i64 %conv22, 0, !dbg !9766
  br i1 %tobool23, label %if.then24, label %if.end33, !dbg !9765

if.then24:                                        ; preds = %if.end11
  br label %do.body25, !dbg !9766

do.body25:                                        ; preds = %if.then24
  br label %do.body26, !dbg !9768

do.body26:                                        ; preds = %do.body25
  br label %do.end27, !dbg !9770

do.end27:                                         ; preds = %do.body26
  br label %do.body28, !dbg !9768

do.body28:                                        ; preds = %do.end27
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 1116, i32 2305, i64 12) #5, !dbg !9772, !srcloc !9774
  br label %do.end29, !dbg !9772

do.end29:                                         ; preds = %do.body28
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 373) #5, !dbg !9775, !srcloc !9777
  br label %do.body30, !dbg !9768

do.body30:                                        ; preds = %do.end29
  br label %do.end31, !dbg !9778

do.end31:                                         ; preds = %do.body30
  br label %do.end32, !dbg !9768

do.end32:                                         ; preds = %do.end31
  br label %if.end33, !dbg !9768

if.end33:                                         ; preds = %do.end32, %if.end11
  %19 = load i32, i32* %__ret_warn_on, align 4, !dbg !9765
  %tobool35 = icmp ne i32 %19, 0, !dbg !9765
  %lnot36 = xor i1 %tobool35, true, !dbg !9765
  %lnot38 = xor i1 %lnot36, true, !dbg !9765
  %lnot.ext39 = zext i1 %lnot38 to i32, !dbg !9765
  %conv40 = sext i32 %lnot.ext39 to i64, !dbg !9765
  store i64 %conv40, i64* %tmp34, align 8, !dbg !9766
  %20 = load i64, i64* %tmp34, align 8, !dbg !9765
  br label %do.body41, !dbg !9780

do.body41:                                        ; preds = %if.end33
  br label %do.body42, !dbg !9781

do.body42:                                        ; preds = %do.body41
  br label %do.end43, !dbg !9783

do.end43:                                         ; preds = %do.body42
  br label %do.body44, !dbg !9781

do.body44:                                        ; preds = %do.end43
  %21 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9785
  %status45 = getelementptr inbounds %struct.device_link, %struct.device_link* %21, i32 0, i32 5, !dbg !9785
  store volatile i32 1, i32* %status45, align 8, !dbg !9785
  br label %do.end46, !dbg !9785

do.end46:                                         ; preds = %do.body44
  br label %do.end47, !dbg !9781

do.end47:                                         ; preds = %do.end46
  %22 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9787
  %flags48 = getelementptr inbounds %struct.device_link, %struct.device_link* %22, i32 0, i32 6, !dbg !9789
  %23 = load i32, i32* %flags48, align 4, !dbg !9789
  %conv49 = zext i32 %23 to i64, !dbg !9787
  %and50 = and i64 %conv49, 32, !dbg !9790
  %tobool51 = icmp ne i64 %and50, 0, !dbg !9790
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !9791

if.then52:                                        ; preds = %do.end47
  %24 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9792
  %consumer = getelementptr inbounds %struct.device_link, %struct.device_link* %24, i32 0, i32 2, !dbg !9793
  %25 = load %struct.device*, %struct.device** %consumer, align 8, !dbg !9793
  call void @driver_deferred_probe_add(%struct.device* %25) #10, !dbg !9794
  br label %if.end53, !dbg !9794

if.end53:                                         ; preds = %if.then52, %do.end47
  br label %for.inc, !dbg !9795

for.inc:                                          ; preds = %if.end53, %if.then10, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr54, metadata !9796, metadata !DIExpression()), !dbg !9798
  %26 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9798
  %s_node55 = getelementptr inbounds %struct.device_link, %struct.device_link* %26, i32 0, i32 1, !dbg !9798
  %next56 = getelementptr inbounds %struct.list_head, %struct.list_head* %s_node55, i32 0, i32 0, !dbg !9798
  %27 = load %struct.list_head*, %struct.list_head** %next56, align 8, !dbg !9798
  %28 = bitcast %struct.list_head* %27 to i8*, !dbg !9798
  store i8* %28, i8** %__mptr54, align 8, !dbg !9798
  br label %do.body57, !dbg !9798

do.body57:                                        ; preds = %for.inc
  br label %do.end58, !dbg !9799

do.end58:                                         ; preds = %do.body57
  %29 = load i8*, i8** %__mptr54, align 8, !dbg !9798
  %add.ptr60 = getelementptr i8, i8* %29, i64 -8, !dbg !9798
  %30 = bitcast i8* %add.ptr60 to %struct.device_link*, !dbg !9798
  store %struct.device_link* %30, %struct.device_link** %tmp59, align 8, !dbg !9799
  %31 = load %struct.device_link*, %struct.device_link** %tmp59, align 8, !dbg !9798
  store %struct.device_link* %31, %struct.device_link** %link, align 8, !dbg !9744
  br label %for.cond, !dbg !9744, !llvm.loop !9801

for.end:                                          ; preds = %for.cond
  %32 = load i32, i32* @defer_sync_state_count, align 4, !dbg !9803
  %tobool61 = icmp ne i32 %32, 0, !dbg !9803
  br i1 %tobool61, label %if.then62, label %if.else, !dbg !9805

if.then62:                                        ; preds = %for.end
  %33 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9806
  call void @__device_links_supplier_defer_sync(%struct.device* %33) #10, !dbg !9807
  br label %if.end63, !dbg !9807

if.else:                                          ; preds = %for.end
  %34 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9808
  call void @__device_links_queue_sync_state(%struct.device* %34, %struct.list_head* %sync_list) #10, !dbg !9809
  br label %if.end63

if.end63:                                         ; preds = %if.else, %if.then62
  call void @llvm.dbg.declare(metadata i8** %__mptr64, metadata !9810, metadata !DIExpression()), !dbg !9813
  %35 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9813
  %links65 = getelementptr inbounds %struct.device, %struct.device* %35, i32 0, i32 10, !dbg !9813
  %suppliers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links65, i32 0, i32 0, !dbg !9813
  %next66 = getelementptr inbounds %struct.list_head, %struct.list_head* %suppliers, i32 0, i32 0, !dbg !9813
  %36 = load %struct.list_head*, %struct.list_head** %next66, align 8, !dbg !9813
  %37 = bitcast %struct.list_head* %36 to i8*, !dbg !9813
  store i8* %37, i8** %__mptr64, align 8, !dbg !9813
  br label %do.body67, !dbg !9813

do.body67:                                        ; preds = %if.end63
  br label %do.end68, !dbg !9814

do.end68:                                         ; preds = %do.body67
  %38 = load i8*, i8** %__mptr64, align 8, !dbg !9813
  %add.ptr70 = getelementptr i8, i8* %38, i64 -32, !dbg !9813
  %39 = bitcast i8* %add.ptr70 to %struct.device_link*, !dbg !9813
  store %struct.device_link* %39, %struct.device_link** %tmp69, align 8, !dbg !9814
  %40 = load %struct.device_link*, %struct.device_link** %tmp69, align 8, !dbg !9813
  store %struct.device_link* %40, %struct.device_link** %link, align 8, !dbg !9816
  call void @llvm.dbg.declare(metadata i8** %__mptr71, metadata !9817, metadata !DIExpression()), !dbg !9819
  %41 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9819
  %c_node = getelementptr inbounds %struct.device_link, %struct.device_link* %41, i32 0, i32 3, !dbg !9819
  %next72 = getelementptr inbounds %struct.list_head, %struct.list_head* %c_node, i32 0, i32 0, !dbg !9819
  %42 = load %struct.list_head*, %struct.list_head** %next72, align 8, !dbg !9819
  %43 = bitcast %struct.list_head* %42 to i8*, !dbg !9819
  store i8* %43, i8** %__mptr71, align 8, !dbg !9819
  br label %do.body73, !dbg !9819

do.body73:                                        ; preds = %do.end68
  br label %do.end74, !dbg !9820

do.end74:                                         ; preds = %do.body73
  %44 = load i8*, i8** %__mptr71, align 8, !dbg !9819
  %add.ptr76 = getelementptr i8, i8* %44, i64 -32, !dbg !9819
  %45 = bitcast i8* %add.ptr76 to %struct.device_link*, !dbg !9819
  store %struct.device_link* %45, %struct.device_link** %tmp75, align 8, !dbg !9820
  %46 = load %struct.device_link*, %struct.device_link** %tmp75, align 8, !dbg !9819
  store %struct.device_link* %46, %struct.device_link** %ln, align 8, !dbg !9816
  br label %for.cond77, !dbg !9816

for.cond77:                                       ; preds = %do.end148, %do.end74
  %47 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9822
  %c_node78 = getelementptr inbounds %struct.device_link, %struct.device_link* %47, i32 0, i32 3, !dbg !9822
  %48 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9822
  %links79 = getelementptr inbounds %struct.device, %struct.device* %48, i32 0, i32 10, !dbg !9822
  %suppliers80 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links79, i32 0, i32 0, !dbg !9822
  %cmp81 = icmp eq %struct.list_head* %c_node78, %suppliers80, !dbg !9822
  %lnot83 = xor i1 %cmp81, true, !dbg !9822
  br i1 %lnot83, label %for.body85, label %for.end151, !dbg !9816

for.body85:                                       ; preds = %for.cond77
  call void @llvm.dbg.declare(metadata %struct.device** %supplier, metadata !9824, metadata !DIExpression()), !dbg !9826
  %49 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9827
  %flags86 = getelementptr inbounds %struct.device_link, %struct.device_link* %49, i32 0, i32 6, !dbg !9829
  %50 = load i32, i32* %flags86, align 4, !dbg !9829
  %conv87 = zext i32 %50 to i64, !dbg !9827
  %and88 = and i64 %conv87, 64, !dbg !9830
  %tobool89 = icmp ne i64 %and88, 0, !dbg !9830
  br i1 %tobool89, label %if.end91, label %if.then90, !dbg !9831

if.then90:                                        ; preds = %for.body85
  br label %for.inc143, !dbg !9832

if.end91:                                         ; preds = %for.body85
  %51 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9833
  %supplier92 = getelementptr inbounds %struct.device_link, %struct.device_link* %51, i32 0, i32 0, !dbg !9834
  %52 = load %struct.device*, %struct.device** %supplier92, align 8, !dbg !9834
  store %struct.device* %52, %struct.device** %supplier, align 8, !dbg !9835
  %53 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9836
  %flags93 = getelementptr inbounds %struct.device_link, %struct.device_link* %53, i32 0, i32 6, !dbg !9838
  %54 = load i32, i32* %flags93, align 4, !dbg !9838
  %conv94 = zext i32 %54 to i64, !dbg !9836
  %and95 = and i64 %conv94, 128, !dbg !9839
  %tobool96 = icmp ne i64 %and95, 0, !dbg !9839
  br i1 %tobool96, label %if.then97, label %if.else98, !dbg !9840

if.then97:                                        ; preds = %if.end91
  %55 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9841
  call void @device_link_drop_managed(%struct.device_link* %55) #10, !dbg !9843
  br label %if.end138, !dbg !9844

if.else98:                                        ; preds = %if.end91
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on99, metadata !9845, metadata !DIExpression()), !dbg !9848
  %56 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9848
  %status100 = getelementptr inbounds %struct.device_link, %struct.device_link* %56, i32 0, i32 5, !dbg !9848
  %57 = load i32, i32* %status100, align 8, !dbg !9848
  %cmp101 = icmp ne i32 %57, 2, !dbg !9848
  %lnot103 = xor i1 %cmp101, true, !dbg !9848
  %lnot105 = xor i1 %lnot103, true, !dbg !9848
  %lnot.ext106 = zext i1 %lnot105 to i32, !dbg !9848
  store i32 %lnot.ext106, i32* %__ret_warn_on99, align 4, !dbg !9848
  %58 = load i32, i32* %__ret_warn_on99, align 4, !dbg !9849
  %tobool107 = icmp ne i32 %58, 0, !dbg !9849
  %lnot108 = xor i1 %tobool107, true, !dbg !9849
  %lnot110 = xor i1 %lnot108, true, !dbg !9849
  %lnot.ext111 = zext i1 %lnot110 to i32, !dbg !9849
  %conv112 = sext i32 %lnot.ext111 to i64, !dbg !9849
  %tobool113 = icmp ne i64 %conv112, 0, !dbg !9849
  br i1 %tobool113, label %if.then114, label %if.end123, !dbg !9848

if.then114:                                       ; preds = %if.else98
  br label %do.body115, !dbg !9849

do.body115:                                       ; preds = %if.then114
  br label %do.body116, !dbg !9851

do.body116:                                       ; preds = %do.body115
  br label %do.end117, !dbg !9853

do.end117:                                        ; preds = %do.body116
  br label %do.body118, !dbg !9851

do.body118:                                       ; preds = %do.end117
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 1143, i32 2305, i64 12) #5, !dbg !9855, !srcloc !9857
  br label %do.end119, !dbg !9855

do.end119:                                        ; preds = %do.body118
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 378) #5, !dbg !9858, !srcloc !9860
  br label %do.body120, !dbg !9851

do.body120:                                       ; preds = %do.end119
  br label %do.end121, !dbg !9861

do.end121:                                        ; preds = %do.body120
  br label %do.end122, !dbg !9851

do.end122:                                        ; preds = %do.end121
  br label %if.end123, !dbg !9851

if.end123:                                        ; preds = %do.end122, %if.else98
  %59 = load i32, i32* %__ret_warn_on99, align 4, !dbg !9848
  %tobool125 = icmp ne i32 %59, 0, !dbg !9848
  %lnot126 = xor i1 %tobool125, true, !dbg !9848
  %lnot128 = xor i1 %lnot126, true, !dbg !9848
  %lnot.ext129 = zext i1 %lnot128 to i32, !dbg !9848
  %conv130 = sext i32 %lnot.ext129 to i64, !dbg !9848
  store i64 %conv130, i64* %tmp124, align 8, !dbg !9849
  %60 = load i64, i64* %tmp124, align 8, !dbg !9848
  br label %do.body131, !dbg !9863

do.body131:                                       ; preds = %if.end123
  br label %do.body132, !dbg !9864

do.body132:                                       ; preds = %do.body131
  br label %do.end133, !dbg !9866

do.end133:                                        ; preds = %do.body132
  br label %do.body134, !dbg !9864

do.body134:                                       ; preds = %do.end133
  %61 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9868
  %status135 = getelementptr inbounds %struct.device_link, %struct.device_link* %61, i32 0, i32 5, !dbg !9868
  store volatile i32 3, i32* %status135, align 8, !dbg !9868
  br label %do.end136, !dbg !9868

do.end136:                                        ; preds = %do.body134
  br label %do.end137, !dbg !9864

do.end137:                                        ; preds = %do.end136
  br label %if.end138

if.end138:                                        ; preds = %do.end137, %if.then97
  %62 = load i32, i32* @defer_sync_state_count, align 4, !dbg !9870
  %tobool139 = icmp ne i32 %62, 0, !dbg !9870
  br i1 %tobool139, label %if.then140, label %if.else141, !dbg !9872

if.then140:                                       ; preds = %if.end138
  %63 = load %struct.device*, %struct.device** %supplier, align 8, !dbg !9873
  call void @__device_links_supplier_defer_sync(%struct.device* %63) #10, !dbg !9874
  br label %if.end142, !dbg !9874

if.else141:                                       ; preds = %if.end138
  %64 = load %struct.device*, %struct.device** %supplier, align 8, !dbg !9875
  call void @__device_links_queue_sync_state(%struct.device* %64, %struct.list_head* %sync_list) #10, !dbg !9876
  br label %if.end142

if.end142:                                        ; preds = %if.else141, %if.then140
  br label %for.inc143, !dbg !9877

for.inc143:                                       ; preds = %if.end142, %if.then90
  %65 = load %struct.device_link*, %struct.device_link** %ln, align 8, !dbg !9822
  store %struct.device_link* %65, %struct.device_link** %link, align 8, !dbg !9822
  call void @llvm.dbg.declare(metadata i8** %__mptr144, metadata !9878, metadata !DIExpression()), !dbg !9880
  %66 = load %struct.device_link*, %struct.device_link** %ln, align 8, !dbg !9880
  %c_node145 = getelementptr inbounds %struct.device_link, %struct.device_link* %66, i32 0, i32 3, !dbg !9880
  %next146 = getelementptr inbounds %struct.list_head, %struct.list_head* %c_node145, i32 0, i32 0, !dbg !9880
  %67 = load %struct.list_head*, %struct.list_head** %next146, align 8, !dbg !9880
  %68 = bitcast %struct.list_head* %67 to i8*, !dbg !9880
  store i8* %68, i8** %__mptr144, align 8, !dbg !9880
  br label %do.body147, !dbg !9880

do.body147:                                       ; preds = %for.inc143
  br label %do.end148, !dbg !9881

do.end148:                                        ; preds = %do.body147
  %69 = load i8*, i8** %__mptr144, align 8, !dbg !9880
  %add.ptr150 = getelementptr i8, i8* %69, i64 -32, !dbg !9880
  %70 = bitcast i8* %add.ptr150 to %struct.device_link*, !dbg !9880
  store %struct.device_link* %70, %struct.device_link** %tmp149, align 8, !dbg !9881
  %71 = load %struct.device_link*, %struct.device_link** %tmp149, align 8, !dbg !9880
  store %struct.device_link* %71, %struct.device_link** %ln, align 8, !dbg !9822
  br label %for.cond77, !dbg !9822, !llvm.loop !9883

for.end151:                                       ; preds = %for.cond77
  %72 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9885
  %links152 = getelementptr inbounds %struct.device, %struct.device* %72, i32 0, i32 10, !dbg !9886
  %status153 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links152, i32 0, i32 5, !dbg !9887
  store i32 2, i32* %status153, align 4, !dbg !9888
  call void @device_links_write_unlock() #10, !dbg !9889
  %73 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9890
  call void @device_links_flush_sync_list(%struct.list_head* %sync_list, %struct.device* %73) #10, !dbg !9891
  ret void, !dbg !9892
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @device_remove_file(%struct.device* %dev, %struct.device_attribute* %attr) #0 !dbg !9893 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9898, metadata !DIExpression()), !dbg !9899
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !9900, metadata !DIExpression()), !dbg !9901
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9902
  %tobool = icmp ne %struct.device* %0, null, !dbg !9902
  br i1 %tobool, label %if.then, label %if.end, !dbg !9904

if.then:                                          ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9905
  %kobj = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 0, !dbg !9906
  %2 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !9907
  %attr1 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %2, i32 0, i32 0, !dbg !9908
  call void @sysfs_remove_file(%struct.kobject* %kobj, %struct.attribute* %attr1) #10, !dbg !9909
  br label %if.end, !dbg !9909

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9910
}

; Function Attrs: noredzone
declare dso_local void @driver_deferred_probe_add(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__device_links_supplier_defer_sync(%struct.device* %sup) #0 !dbg !9911 {
entry:
  %sup.addr = alloca %struct.device*, align 8
  store %struct.device* %sup, %struct.device** %sup.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %sup.addr, metadata !9912, metadata !DIExpression()), !dbg !9913
  %0 = load %struct.device*, %struct.device** %sup.addr, align 8, !dbg !9914
  %links = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 10, !dbg !9916
  %defer_hook = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 3, !dbg !9917
  %call = call i32 @list_empty(%struct.list_head* %defer_hook) #10, !dbg !9918
  %tobool = icmp ne i32 %call, 0, !dbg !9918
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9919

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.device*, %struct.device** %sup.addr, align 8, !dbg !9920
  %call1 = call zeroext i1 @dev_has_sync_state(%struct.device* %1) #10, !dbg !9921
  br i1 %call1, label %if.then, label %if.end, !dbg !9922

if.then:                                          ; preds = %land.lhs.true
  %2 = load %struct.device*, %struct.device** %sup.addr, align 8, !dbg !9923
  %links2 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 10, !dbg !9924
  %defer_hook3 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links2, i32 0, i32 3, !dbg !9925
  call void @list_add_tail(%struct.list_head* %defer_hook3, %struct.list_head* @deferred_sync) #10, !dbg !9926
  br label %if.end, !dbg !9926

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !9927
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_link_drop_managed(%struct.device_link* %link) #0 !dbg !9928 {
entry:
  %link.addr = alloca %struct.device_link*, align 8
  store %struct.device_link* %link, %struct.device_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_link** %link.addr, metadata !9929, metadata !DIExpression()), !dbg !9930
  %0 = load %struct.device_link*, %struct.device_link** %link.addr, align 8, !dbg !9931
  %flags = getelementptr inbounds %struct.device_link, %struct.device_link* %0, i32 0, i32 6, !dbg !9932
  %1 = load i32, i32* %flags, align 4, !dbg !9933
  %conv = zext i32 %1 to i64, !dbg !9933
  %and = and i64 %conv, -65, !dbg !9933
  %conv1 = trunc i64 %and to i32, !dbg !9933
  store i32 %conv1, i32* %flags, align 4, !dbg !9933
  br label %do.body, !dbg !9934

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !9935

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !9937

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !9935

do.body3:                                         ; preds = %do.end
  %2 = load %struct.device_link*, %struct.device_link** %link.addr, align 8, !dbg !9939
  %status = getelementptr inbounds %struct.device_link, %struct.device_link* %2, i32 0, i32 5, !dbg !9939
  store volatile i32 -1, i32* %status, align 8, !dbg !9939
  br label %do.end4, !dbg !9939

do.end4:                                          ; preds = %do.body3
  br label %do.end5, !dbg !9935

do.end5:                                          ; preds = %do.end4
  %3 = load %struct.device_link*, %struct.device_link** %link.addr, align 8, !dbg !9941
  %kref = getelementptr inbounds %struct.device_link, %struct.device_link* %3, i32 0, i32 8, !dbg !9942
  %call = call i32 @kref_put(%struct.kref* %kref, void (%struct.kref*)* @__device_link_del) #10, !dbg !9943
  ret void, !dbg !9944
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @device_links_no_driver(%struct.device* %dev) #0 !dbg !9945 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %link = alloca %struct.device_link*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_link*, align 8
  %__mptr17 = alloca i8*, align 8
  %tmp22 = alloca %struct.device_link*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9946, metadata !DIExpression()), !dbg !9947
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !9948, metadata !DIExpression()), !dbg !9949
  call void @device_links_write_lock() #10, !dbg !9950
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9951, metadata !DIExpression()), !dbg !9954
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9954
  %links = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 10, !dbg !9954
  %consumers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 1, !dbg !9954
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %consumers, i32 0, i32 0, !dbg !9954
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9954
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !9954
  store i8* %2, i8** %__mptr, align 8, !dbg !9954
  br label %do.body, !dbg !9954

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9955

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !9954
  %add.ptr = getelementptr i8, i8* %3, i64 -8, !dbg !9954
  %4 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !9954
  store %struct.device_link* %4, %struct.device_link** %tmp, align 8, !dbg !9955
  %5 = load %struct.device_link*, %struct.device_link** %tmp, align 8, !dbg !9954
  store %struct.device_link* %5, %struct.device_link** %link, align 8, !dbg !9957
  br label %for.cond, !dbg !9957

for.cond:                                         ; preds = %do.end21, %do.end
  %6 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9958
  %s_node = getelementptr inbounds %struct.device_link, %struct.device_link* %6, i32 0, i32 1, !dbg !9958
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9958
  %links1 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 10, !dbg !9958
  %consumers2 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links1, i32 0, i32 1, !dbg !9958
  %cmp = icmp eq %struct.list_head* %s_node, %consumers2, !dbg !9958
  %lnot = xor i1 %cmp, true, !dbg !9958
  br i1 %lnot, label %for.body, label %for.end, !dbg !9957

for.body:                                         ; preds = %for.cond
  %8 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9960
  %flags = getelementptr inbounds %struct.device_link, %struct.device_link* %8, i32 0, i32 6, !dbg !9963
  %9 = load i32, i32* %flags, align 4, !dbg !9963
  %conv = zext i32 %9 to i64, !dbg !9960
  %and = and i64 %conv, 64, !dbg !9964
  %tobool = icmp ne i64 %and, 0, !dbg !9964
  br i1 %tobool, label %if.end, label %if.then, !dbg !9965

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !9966

if.end:                                           ; preds = %for.body
  %10 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9967
  %status = getelementptr inbounds %struct.device_link, %struct.device_link* %10, i32 0, i32 5, !dbg !9969
  %11 = load i32, i32* %status, align 8, !dbg !9969
  %cmp3 = icmp eq i32 %11, 2, !dbg !9970
  br i1 %cmp3, label %if.then8, label %lor.lhs.false, !dbg !9971

lor.lhs.false:                                    ; preds = %if.end
  %12 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9972
  %status5 = getelementptr inbounds %struct.device_link, %struct.device_link* %12, i32 0, i32 5, !dbg !9973
  %13 = load i32, i32* %status5, align 8, !dbg !9973
  %cmp6 = icmp eq i32 %13, 3, !dbg !9974
  br i1 %cmp6, label %if.then8, label %if.end16, !dbg !9975

if.then8:                                         ; preds = %lor.lhs.false, %if.end
  br label %do.body9, !dbg !9976

do.body9:                                         ; preds = %if.then8
  br label %do.body10, !dbg !9977

do.body10:                                        ; preds = %do.body9
  br label %do.end11, !dbg !9979

do.end11:                                         ; preds = %do.body10
  br label %do.body12, !dbg !9977

do.body12:                                        ; preds = %do.end11
  %14 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9981
  %status13 = getelementptr inbounds %struct.device_link, %struct.device_link* %14, i32 0, i32 5, !dbg !9981
  store volatile i32 0, i32* %status13, align 8, !dbg !9981
  br label %do.end14, !dbg !9981

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !9977

do.end15:                                         ; preds = %do.end14
  br label %if.end16, !dbg !9977

if.end16:                                         ; preds = %do.end15, %lor.lhs.false
  br label %for.inc, !dbg !9983

for.inc:                                          ; preds = %if.end16, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr17, metadata !9984, metadata !DIExpression()), !dbg !9986
  %15 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !9986
  %s_node18 = getelementptr inbounds %struct.device_link, %struct.device_link* %15, i32 0, i32 1, !dbg !9986
  %next19 = getelementptr inbounds %struct.list_head, %struct.list_head* %s_node18, i32 0, i32 0, !dbg !9986
  %16 = load %struct.list_head*, %struct.list_head** %next19, align 8, !dbg !9986
  %17 = bitcast %struct.list_head* %16 to i8*, !dbg !9986
  store i8* %17, i8** %__mptr17, align 8, !dbg !9986
  br label %do.body20, !dbg !9986

do.body20:                                        ; preds = %for.inc
  br label %do.end21, !dbg !9987

do.end21:                                         ; preds = %do.body20
  %18 = load i8*, i8** %__mptr17, align 8, !dbg !9986
  %add.ptr23 = getelementptr i8, i8* %18, i64 -8, !dbg !9986
  %19 = bitcast i8* %add.ptr23 to %struct.device_link*, !dbg !9986
  store %struct.device_link* %19, %struct.device_link** %tmp22, align 8, !dbg !9987
  %20 = load %struct.device_link*, %struct.device_link** %tmp22, align 8, !dbg !9986
  store %struct.device_link* %20, %struct.device_link** %link, align 8, !dbg !9958
  br label %for.cond, !dbg !9958, !llvm.loop !9989

for.end:                                          ; preds = %for.cond
  %21 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9991
  call void @__device_links_no_driver(%struct.device* %21) #10, !dbg !9992
  call void @device_links_write_unlock() #10, !dbg !9993
  ret void, !dbg !9994
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__device_links_no_driver(%struct.device* %dev) #0 !dbg !9995 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %link = alloca %struct.device_link*, align 8
  %ln = alloca %struct.device_link*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_link*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp5 = alloca %struct.device_link*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp59 = alloca i64, align 8
  %__mptr74 = alloca i8*, align 8
  %tmp79 = alloca %struct.device_link*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9996, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !9998, metadata !DIExpression()), !dbg !9999
  call void @llvm.dbg.declare(metadata %struct.device_link** %ln, metadata !10000, metadata !DIExpression()), !dbg !10001
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10002, metadata !DIExpression()), !dbg !10005
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10005
  %links = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 10, !dbg !10005
  %suppliers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 0, !dbg !10005
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %suppliers, i32 0, i32 1, !dbg !10005
  %1 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !10005
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !10005
  store i8* %2, i8** %__mptr, align 8, !dbg !10005
  br label %do.body, !dbg !10005

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10006

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !10005
  %add.ptr = getelementptr i8, i8* %3, i64 -32, !dbg !10005
  %4 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !10005
  store %struct.device_link* %4, %struct.device_link** %tmp, align 8, !dbg !10006
  %5 = load %struct.device_link*, %struct.device_link** %tmp, align 8, !dbg !10005
  store %struct.device_link* %5, %struct.device_link** %link, align 8, !dbg !10008
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !10009, metadata !DIExpression()), !dbg !10011
  %6 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10011
  %c_node = getelementptr inbounds %struct.device_link, %struct.device_link* %6, i32 0, i32 3, !dbg !10011
  %prev2 = getelementptr inbounds %struct.list_head, %struct.list_head* %c_node, i32 0, i32 1, !dbg !10011
  %7 = load %struct.list_head*, %struct.list_head** %prev2, align 8, !dbg !10011
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !10011
  store i8* %8, i8** %__mptr1, align 8, !dbg !10011
  br label %do.body3, !dbg !10011

do.body3:                                         ; preds = %do.end
  br label %do.end4, !dbg !10012

do.end4:                                          ; preds = %do.body3
  %9 = load i8*, i8** %__mptr1, align 8, !dbg !10011
  %add.ptr6 = getelementptr i8, i8* %9, i64 -32, !dbg !10011
  %10 = bitcast i8* %add.ptr6 to %struct.device_link*, !dbg !10011
  store %struct.device_link* %10, %struct.device_link** %tmp5, align 8, !dbg !10012
  %11 = load %struct.device_link*, %struct.device_link** %tmp5, align 8, !dbg !10011
  store %struct.device_link* %11, %struct.device_link** %ln, align 8, !dbg !10008
  br label %for.cond, !dbg !10008

for.cond:                                         ; preds = %do.end78, %do.end4
  %12 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10014
  %c_node7 = getelementptr inbounds %struct.device_link, %struct.device_link* %12, i32 0, i32 3, !dbg !10014
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10014
  %links8 = getelementptr inbounds %struct.device, %struct.device* %13, i32 0, i32 10, !dbg !10014
  %suppliers9 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links8, i32 0, i32 0, !dbg !10014
  %cmp = icmp eq %struct.list_head* %c_node7, %suppliers9, !dbg !10014
  %lnot = xor i1 %cmp, true, !dbg !10014
  br i1 %lnot, label %for.body, label %for.end, !dbg !10008

for.body:                                         ; preds = %for.cond
  %14 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10016
  %flags = getelementptr inbounds %struct.device_link, %struct.device_link* %14, i32 0, i32 6, !dbg !10019
  %15 = load i32, i32* %flags, align 4, !dbg !10019
  %conv = zext i32 %15 to i64, !dbg !10016
  %and = and i64 %conv, 64, !dbg !10020
  %tobool = icmp ne i64 %and, 0, !dbg !10020
  br i1 %tobool, label %if.end, label %if.then, !dbg !10021

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !10022

if.end:                                           ; preds = %for.body
  %16 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10023
  %flags10 = getelementptr inbounds %struct.device_link, %struct.device_link* %16, i32 0, i32 6, !dbg !10025
  %17 = load i32, i32* %flags10, align 4, !dbg !10025
  %conv11 = zext i32 %17 to i64, !dbg !10023
  %and12 = and i64 %conv11, 2, !dbg !10026
  %tobool13 = icmp ne i64 %and12, 0, !dbg !10026
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !10027

if.then14:                                        ; preds = %if.end
  %18 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10028
  call void @device_link_drop_managed(%struct.device_link* %18) #10, !dbg !10030
  br label %for.inc, !dbg !10031

if.end15:                                         ; preds = %if.end
  %19 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10032
  %status = getelementptr inbounds %struct.device_link, %struct.device_link* %19, i32 0, i32 5, !dbg !10034
  %20 = load i32, i32* %status, align 8, !dbg !10034
  %cmp16 = icmp ne i32 %20, 2, !dbg !10035
  br i1 %cmp16, label %land.lhs.true, label %if.end22, !dbg !10036

land.lhs.true:                                    ; preds = %if.end15
  %21 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10037
  %status18 = getelementptr inbounds %struct.device_link, %struct.device_link* %21, i32 0, i32 5, !dbg !10038
  %22 = load i32, i32* %status18, align 8, !dbg !10038
  %cmp19 = icmp ne i32 %22, 3, !dbg !10039
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !10040

if.then21:                                        ; preds = %land.lhs.true
  br label %for.inc, !dbg !10041

if.end22:                                         ; preds = %land.lhs.true, %if.end15
  %23 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10042
  %supplier = getelementptr inbounds %struct.device_link, %struct.device_link* %23, i32 0, i32 0, !dbg !10044
  %24 = load %struct.device*, %struct.device** %supplier, align 8, !dbg !10044
  %links23 = getelementptr inbounds %struct.device, %struct.device* %24, i32 0, i32 10, !dbg !10045
  %status24 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links23, i32 0, i32 5, !dbg !10046
  %25 = load i32, i32* %status24, align 4, !dbg !10046
  %cmp25 = icmp eq i32 %25, 2, !dbg !10047
  br i1 %cmp25, label %if.then27, label %if.else, !dbg !10048

if.then27:                                        ; preds = %if.end22
  br label %do.body28, !dbg !10049

do.body28:                                        ; preds = %if.then27
  br label %do.body29, !dbg !10051

do.body29:                                        ; preds = %do.body28
  br label %do.end30, !dbg !10053

do.end30:                                         ; preds = %do.body29
  br label %do.body31, !dbg !10051

do.body31:                                        ; preds = %do.end30
  %26 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10055
  %status32 = getelementptr inbounds %struct.device_link, %struct.device_link* %26, i32 0, i32 5, !dbg !10055
  store volatile i32 1, i32* %status32, align 8, !dbg !10055
  br label %do.end33, !dbg !10055

do.end33:                                         ; preds = %do.body31
  br label %do.end34, !dbg !10051

do.end34:                                         ; preds = %do.end33
  br label %if.end73, !dbg !10057

if.else:                                          ; preds = %if.end22
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10058, metadata !DIExpression()), !dbg !10061
  %27 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10061
  %flags35 = getelementptr inbounds %struct.device_link, %struct.device_link* %27, i32 0, i32 6, !dbg !10061
  %28 = load i32, i32* %flags35, align 4, !dbg !10061
  %conv36 = zext i32 %28 to i64, !dbg !10061
  %and37 = and i64 %conv36, 128, !dbg !10061
  %tobool38 = icmp ne i64 %and37, 0, !dbg !10061
  %lnot39 = xor i1 %tobool38, true, !dbg !10061
  %lnot40 = xor i1 %lnot39, true, !dbg !10061
  %lnot41 = xor i1 %lnot40, true, !dbg !10061
  %lnot.ext = zext i1 %lnot41 to i32, !dbg !10061
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !10061
  %29 = load i32, i32* %__ret_warn_on, align 4, !dbg !10062
  %tobool42 = icmp ne i32 %29, 0, !dbg !10062
  %lnot43 = xor i1 %tobool42, true, !dbg !10062
  %lnot45 = xor i1 %lnot43, true, !dbg !10062
  %lnot.ext46 = zext i1 %lnot45 to i32, !dbg !10062
  %conv47 = sext i32 %lnot.ext46 to i64, !dbg !10062
  %tobool48 = icmp ne i64 %conv47, 0, !dbg !10062
  br i1 %tobool48, label %if.then49, label %if.end58, !dbg !10061

if.then49:                                        ; preds = %if.else
  br label %do.body50, !dbg !10062

do.body50:                                        ; preds = %if.then49
  br label %do.body51, !dbg !10064

do.body51:                                        ; preds = %do.body50
  br label %do.end52, !dbg !10066

do.end52:                                         ; preds = %do.body51
  br label %do.body53, !dbg !10064

do.body53:                                        ; preds = %do.end52
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 1198, i32 2305, i64 12) #5, !dbg !10068, !srcloc !10070
  br label %do.end54, !dbg !10068

do.end54:                                         ; preds = %do.body53
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 384) #5, !dbg !10071, !srcloc !10073
  br label %do.body55, !dbg !10064

do.body55:                                        ; preds = %do.end54
  br label %do.end56, !dbg !10074

do.end56:                                         ; preds = %do.body55
  br label %do.end57, !dbg !10064

do.end57:                                         ; preds = %do.end56
  br label %if.end58, !dbg !10064

if.end58:                                         ; preds = %do.end57, %if.else
  %30 = load i32, i32* %__ret_warn_on, align 4, !dbg !10061
  %tobool60 = icmp ne i32 %30, 0, !dbg !10061
  %lnot61 = xor i1 %tobool60, true, !dbg !10061
  %lnot63 = xor i1 %lnot61, true, !dbg !10061
  %lnot.ext64 = zext i1 %lnot63 to i32, !dbg !10061
  %conv65 = sext i32 %lnot.ext64 to i64, !dbg !10061
  store i64 %conv65, i64* %tmp59, align 8, !dbg !10062
  %31 = load i64, i64* %tmp59, align 8, !dbg !10061
  br label %do.body66, !dbg !10076

do.body66:                                        ; preds = %if.end58
  br label %do.body67, !dbg !10077

do.body67:                                        ; preds = %do.body66
  br label %do.end68, !dbg !10079

do.end68:                                         ; preds = %do.body67
  br label %do.body69, !dbg !10077

do.body69:                                        ; preds = %do.end68
  %32 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10081
  %status70 = getelementptr inbounds %struct.device_link, %struct.device_link* %32, i32 0, i32 5, !dbg !10081
  store volatile i32 0, i32* %status70, align 8, !dbg !10081
  br label %do.end71, !dbg !10081

do.end71:                                         ; preds = %do.body69
  br label %do.end72, !dbg !10077

do.end72:                                         ; preds = %do.end71
  br label %if.end73

if.end73:                                         ; preds = %do.end72, %do.end34
  br label %for.inc, !dbg !10083

for.inc:                                          ; preds = %if.end73, %if.then21, %if.then14, %if.then
  %33 = load %struct.device_link*, %struct.device_link** %ln, align 8, !dbg !10014
  store %struct.device_link* %33, %struct.device_link** %link, align 8, !dbg !10014
  call void @llvm.dbg.declare(metadata i8** %__mptr74, metadata !10084, metadata !DIExpression()), !dbg !10086
  %34 = load %struct.device_link*, %struct.device_link** %ln, align 8, !dbg !10086
  %c_node75 = getelementptr inbounds %struct.device_link, %struct.device_link* %34, i32 0, i32 3, !dbg !10086
  %prev76 = getelementptr inbounds %struct.list_head, %struct.list_head* %c_node75, i32 0, i32 1, !dbg !10086
  %35 = load %struct.list_head*, %struct.list_head** %prev76, align 8, !dbg !10086
  %36 = bitcast %struct.list_head* %35 to i8*, !dbg !10086
  store i8* %36, i8** %__mptr74, align 8, !dbg !10086
  br label %do.body77, !dbg !10086

do.body77:                                        ; preds = %for.inc
  br label %do.end78, !dbg !10087

do.end78:                                         ; preds = %do.body77
  %37 = load i8*, i8** %__mptr74, align 8, !dbg !10086
  %add.ptr80 = getelementptr i8, i8* %37, i64 -32, !dbg !10086
  %38 = bitcast i8* %add.ptr80 to %struct.device_link*, !dbg !10086
  store %struct.device_link* %38, %struct.device_link** %tmp79, align 8, !dbg !10087
  %39 = load %struct.device_link*, %struct.device_link** %tmp79, align 8, !dbg !10086
  store %struct.device_link* %39, %struct.device_link** %ln, align 8, !dbg !10014
  br label %for.cond, !dbg !10014, !llvm.loop !10089

for.end:                                          ; preds = %for.cond
  %40 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10091
  %links81 = getelementptr inbounds %struct.device, %struct.device* %40, i32 0, i32 10, !dbg !10092
  %status82 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links81, i32 0, i32 5, !dbg !10093
  store i32 0, i32* %status82, align 4, !dbg !10094
  ret void, !dbg !10095
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @device_links_driver_cleanup(%struct.device* %dev) #0 !dbg !10096 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %link = alloca %struct.device_link*, align 8
  %ln = alloca %struct.device_link*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_link*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp5 = alloca %struct.device_link*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp33 = alloca i64, align 8
  %__ret_warn_on40 = alloca i32, align 4
  %tmp64 = alloca i64, align 8
  %__mptr87 = alloca i8*, align 8
  %tmp92 = alloca %struct.device_link*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10097, metadata !DIExpression()), !dbg !10098
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !10099, metadata !DIExpression()), !dbg !10100
  call void @llvm.dbg.declare(metadata %struct.device_link** %ln, metadata !10101, metadata !DIExpression()), !dbg !10102
  call void @device_links_write_lock() #10, !dbg !10103
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10104, metadata !DIExpression()), !dbg !10107
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10107
  %links = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 10, !dbg !10107
  %consumers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 1, !dbg !10107
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %consumers, i32 0, i32 0, !dbg !10107
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10107
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !10107
  store i8* %2, i8** %__mptr, align 8, !dbg !10107
  br label %do.body, !dbg !10107

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10108

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !10107
  %add.ptr = getelementptr i8, i8* %3, i64 -8, !dbg !10107
  %4 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !10107
  store %struct.device_link* %4, %struct.device_link** %tmp, align 8, !dbg !10108
  %5 = load %struct.device_link*, %struct.device_link** %tmp, align 8, !dbg !10107
  store %struct.device_link* %5, %struct.device_link** %link, align 8, !dbg !10110
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !10111, metadata !DIExpression()), !dbg !10113
  %6 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10113
  %s_node = getelementptr inbounds %struct.device_link, %struct.device_link* %6, i32 0, i32 1, !dbg !10113
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %s_node, i32 0, i32 0, !dbg !10113
  %7 = load %struct.list_head*, %struct.list_head** %next2, align 8, !dbg !10113
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !10113
  store i8* %8, i8** %__mptr1, align 8, !dbg !10113
  br label %do.body3, !dbg !10113

do.body3:                                         ; preds = %do.end
  br label %do.end4, !dbg !10114

do.end4:                                          ; preds = %do.body3
  %9 = load i8*, i8** %__mptr1, align 8, !dbg !10113
  %add.ptr6 = getelementptr i8, i8* %9, i64 -8, !dbg !10113
  %10 = bitcast i8* %add.ptr6 to %struct.device_link*, !dbg !10113
  store %struct.device_link* %10, %struct.device_link** %tmp5, align 8, !dbg !10114
  %11 = load %struct.device_link*, %struct.device_link** %tmp5, align 8, !dbg !10113
  store %struct.device_link* %11, %struct.device_link** %ln, align 8, !dbg !10110
  br label %for.cond, !dbg !10110

for.cond:                                         ; preds = %do.end91, %do.end4
  %12 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10116
  %s_node7 = getelementptr inbounds %struct.device_link, %struct.device_link* %12, i32 0, i32 1, !dbg !10116
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10116
  %links8 = getelementptr inbounds %struct.device, %struct.device* %13, i32 0, i32 10, !dbg !10116
  %consumers9 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links8, i32 0, i32 1, !dbg !10116
  %cmp = icmp eq %struct.list_head* %s_node7, %consumers9, !dbg !10116
  %lnot = xor i1 %cmp, true, !dbg !10116
  br i1 %lnot, label %for.body, label %for.end, !dbg !10110

for.body:                                         ; preds = %for.cond
  %14 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10118
  %flags = getelementptr inbounds %struct.device_link, %struct.device_link* %14, i32 0, i32 6, !dbg !10121
  %15 = load i32, i32* %flags, align 4, !dbg !10121
  %conv = zext i32 %15 to i64, !dbg !10118
  %and = and i64 %conv, 64, !dbg !10122
  %tobool = icmp ne i64 %and, 0, !dbg !10122
  br i1 %tobool, label %if.end, label %if.then, !dbg !10123

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !10124

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10125, metadata !DIExpression()), !dbg !10127
  %16 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10127
  %flags10 = getelementptr inbounds %struct.device_link, %struct.device_link* %16, i32 0, i32 6, !dbg !10127
  %17 = load i32, i32* %flags10, align 4, !dbg !10127
  %conv11 = zext i32 %17 to i64, !dbg !10127
  %and12 = and i64 %conv11, 2, !dbg !10127
  %tobool13 = icmp ne i64 %and12, 0, !dbg !10127
  %lnot14 = xor i1 %tobool13, true, !dbg !10127
  %lnot15 = xor i1 %lnot14, true, !dbg !10127
  %lnot.ext = zext i1 %lnot15 to i32, !dbg !10127
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !10127
  %18 = load i32, i32* %__ret_warn_on, align 4, !dbg !10128
  %tobool16 = icmp ne i32 %18, 0, !dbg !10128
  %lnot17 = xor i1 %tobool16, true, !dbg !10128
  %lnot19 = xor i1 %lnot17, true, !dbg !10128
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !10128
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !10128
  %tobool22 = icmp ne i64 %conv21, 0, !dbg !10128
  br i1 %tobool22, label %if.then23, label %if.end32, !dbg !10127

if.then23:                                        ; preds = %if.end
  br label %do.body24, !dbg !10128

do.body24:                                        ; preds = %if.then23
  br label %do.body25, !dbg !10130

do.body25:                                        ; preds = %do.body24
  br label %do.end26, !dbg !10132

do.end26:                                         ; preds = %do.body25
  br label %do.body27, !dbg !10130

do.body27:                                        ; preds = %do.end26
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 1263, i32 2305, i64 12) #5, !dbg !10134, !srcloc !10136
  br label %do.end28, !dbg !10134

do.end28:                                         ; preds = %do.body27
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 392) #5, !dbg !10137, !srcloc !10139
  br label %do.body29, !dbg !10130

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !10140

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !10130

do.end31:                                         ; preds = %do.end30
  br label %if.end32, !dbg !10130

if.end32:                                         ; preds = %do.end31, %if.end
  %19 = load i32, i32* %__ret_warn_on, align 4, !dbg !10127
  %tobool34 = icmp ne i32 %19, 0, !dbg !10127
  %lnot35 = xor i1 %tobool34, true, !dbg !10127
  %lnot37 = xor i1 %lnot35, true, !dbg !10127
  %lnot.ext38 = zext i1 %lnot37 to i32, !dbg !10127
  %conv39 = sext i32 %lnot.ext38 to i64, !dbg !10127
  store i64 %conv39, i64* %tmp33, align 8, !dbg !10128
  %20 = load i64, i64* %tmp33, align 8, !dbg !10127
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on40, metadata !10142, metadata !DIExpression()), !dbg !10144
  %21 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10144
  %status = getelementptr inbounds %struct.device_link, %struct.device_link* %21, i32 0, i32 5, !dbg !10144
  %22 = load i32, i32* %status, align 8, !dbg !10144
  %cmp41 = icmp ne i32 %22, 4, !dbg !10144
  %lnot43 = xor i1 %cmp41, true, !dbg !10144
  %lnot45 = xor i1 %lnot43, true, !dbg !10144
  %lnot.ext46 = zext i1 %lnot45 to i32, !dbg !10144
  store i32 %lnot.ext46, i32* %__ret_warn_on40, align 4, !dbg !10144
  %23 = load i32, i32* %__ret_warn_on40, align 4, !dbg !10145
  %tobool47 = icmp ne i32 %23, 0, !dbg !10145
  %lnot48 = xor i1 %tobool47, true, !dbg !10145
  %lnot50 = xor i1 %lnot48, true, !dbg !10145
  %lnot.ext51 = zext i1 %lnot50 to i32, !dbg !10145
  %conv52 = sext i32 %lnot.ext51 to i64, !dbg !10145
  %tobool53 = icmp ne i64 %conv52, 0, !dbg !10145
  br i1 %tobool53, label %if.then54, label %if.end63, !dbg !10144

if.then54:                                        ; preds = %if.end32
  br label %do.body55, !dbg !10145

do.body55:                                        ; preds = %if.then54
  br label %do.body56, !dbg !10147

do.body56:                                        ; preds = %do.body55
  br label %do.end57, !dbg !10149

do.end57:                                         ; preds = %do.body56
  br label %do.body58, !dbg !10147

do.body58:                                        ; preds = %do.end57
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 1264, i32 2305, i64 12) #5, !dbg !10151, !srcloc !10153
  br label %do.end59, !dbg !10151

do.end59:                                         ; preds = %do.body58
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 393) #5, !dbg !10154, !srcloc !10156
  br label %do.body60, !dbg !10147

do.body60:                                        ; preds = %do.end59
  br label %do.end61, !dbg !10157

do.end61:                                         ; preds = %do.body60
  br label %do.end62, !dbg !10147

do.end62:                                         ; preds = %do.end61
  br label %if.end63, !dbg !10147

if.end63:                                         ; preds = %do.end62, %if.end32
  %24 = load i32, i32* %__ret_warn_on40, align 4, !dbg !10144
  %tobool65 = icmp ne i32 %24, 0, !dbg !10144
  %lnot66 = xor i1 %tobool65, true, !dbg !10144
  %lnot68 = xor i1 %lnot66, true, !dbg !10144
  %lnot.ext69 = zext i1 %lnot68 to i32, !dbg !10144
  %conv70 = sext i32 %lnot.ext69 to i64, !dbg !10144
  store i64 %conv70, i64* %tmp64, align 8, !dbg !10145
  %25 = load i64, i64* %tmp64, align 8, !dbg !10144
  %26 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10159
  %status71 = getelementptr inbounds %struct.device_link, %struct.device_link* %26, i32 0, i32 5, !dbg !10161
  %27 = load i32, i32* %status71, align 8, !dbg !10161
  %cmp72 = icmp eq i32 %27, 4, !dbg !10162
  br i1 %cmp72, label %land.lhs.true, label %if.end79, !dbg !10163

land.lhs.true:                                    ; preds = %if.end63
  %28 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10164
  %flags74 = getelementptr inbounds %struct.device_link, %struct.device_link* %28, i32 0, i32 6, !dbg !10165
  %29 = load i32, i32* %flags74, align 4, !dbg !10165
  %conv75 = zext i32 %29 to i64, !dbg !10164
  %and76 = and i64 %conv75, 16, !dbg !10166
  %tobool77 = icmp ne i64 %and76, 0, !dbg !10166
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !10167

if.then78:                                        ; preds = %land.lhs.true
  %30 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10168
  call void @device_link_drop_managed(%struct.device_link* %30) #10, !dbg !10169
  br label %if.end79, !dbg !10169

if.end79:                                         ; preds = %if.then78, %land.lhs.true, %if.end63
  br label %do.body80, !dbg !10170

do.body80:                                        ; preds = %if.end79
  br label %do.body81, !dbg !10171

do.body81:                                        ; preds = %do.body80
  br label %do.end82, !dbg !10173

do.end82:                                         ; preds = %do.body81
  br label %do.body83, !dbg !10171

do.body83:                                        ; preds = %do.end82
  %31 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10175
  %status84 = getelementptr inbounds %struct.device_link, %struct.device_link* %31, i32 0, i32 5, !dbg !10175
  store volatile i32 0, i32* %status84, align 8, !dbg !10175
  br label %do.end85, !dbg !10175

do.end85:                                         ; preds = %do.body83
  br label %do.end86, !dbg !10171

do.end86:                                         ; preds = %do.end85
  br label %for.inc, !dbg !10177

for.inc:                                          ; preds = %do.end86, %if.then
  %32 = load %struct.device_link*, %struct.device_link** %ln, align 8, !dbg !10116
  store %struct.device_link* %32, %struct.device_link** %link, align 8, !dbg !10116
  call void @llvm.dbg.declare(metadata i8** %__mptr87, metadata !10178, metadata !DIExpression()), !dbg !10180
  %33 = load %struct.device_link*, %struct.device_link** %ln, align 8, !dbg !10180
  %s_node88 = getelementptr inbounds %struct.device_link, %struct.device_link* %33, i32 0, i32 1, !dbg !10180
  %next89 = getelementptr inbounds %struct.list_head, %struct.list_head* %s_node88, i32 0, i32 0, !dbg !10180
  %34 = load %struct.list_head*, %struct.list_head** %next89, align 8, !dbg !10180
  %35 = bitcast %struct.list_head* %34 to i8*, !dbg !10180
  store i8* %35, i8** %__mptr87, align 8, !dbg !10180
  br label %do.body90, !dbg !10180

do.body90:                                        ; preds = %for.inc
  br label %do.end91, !dbg !10181

do.end91:                                         ; preds = %do.body90
  %36 = load i8*, i8** %__mptr87, align 8, !dbg !10180
  %add.ptr93 = getelementptr i8, i8* %36, i64 -8, !dbg !10180
  %37 = bitcast i8* %add.ptr93 to %struct.device_link*, !dbg !10180
  store %struct.device_link* %37, %struct.device_link** %tmp92, align 8, !dbg !10181
  %38 = load %struct.device_link*, %struct.device_link** %tmp92, align 8, !dbg !10180
  store %struct.device_link* %38, %struct.device_link** %ln, align 8, !dbg !10116
  br label %for.cond, !dbg !10116, !llvm.loop !10183

for.end:                                          ; preds = %for.cond
  %39 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10185
  %links94 = getelementptr inbounds %struct.device, %struct.device* %39, i32 0, i32 10, !dbg !10186
  %defer_hook = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links94, i32 0, i32 3, !dbg !10187
  call void @list_del_init(%struct.list_head* %defer_hook) #10, !dbg !10188
  %40 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10189
  call void @__device_links_no_driver(%struct.device* %40) #10, !dbg !10190
  call void @device_links_write_unlock() #10, !dbg !10191
  ret void, !dbg !10192
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @device_links_busy(%struct.device* %dev) #0 !dbg !10193 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %link = alloca %struct.device_link*, align 8
  %ret = alloca i8, align 1
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_link*, align 8
  %__mptr17 = alloca i8*, align 8
  %tmp22 = alloca %struct.device_link*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10194, metadata !DIExpression()), !dbg !10195
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !10196, metadata !DIExpression()), !dbg !10197
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !10198, metadata !DIExpression()), !dbg !10199
  store i8 0, i8* %ret, align 1, !dbg !10199
  call void @device_links_write_lock() #10, !dbg !10200
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10201, metadata !DIExpression()), !dbg !10204
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10204
  %links = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 10, !dbg !10204
  %consumers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 1, !dbg !10204
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %consumers, i32 0, i32 0, !dbg !10204
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10204
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !10204
  store i8* %2, i8** %__mptr, align 8, !dbg !10204
  br label %do.body, !dbg !10204

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10205

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !10204
  %add.ptr = getelementptr i8, i8* %3, i64 -8, !dbg !10204
  %4 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !10204
  store %struct.device_link* %4, %struct.device_link** %tmp, align 8, !dbg !10205
  %5 = load %struct.device_link*, %struct.device_link** %tmp, align 8, !dbg !10204
  store %struct.device_link* %5, %struct.device_link** %link, align 8, !dbg !10207
  br label %for.cond, !dbg !10207

for.cond:                                         ; preds = %do.end21, %do.end
  %6 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10208
  %s_node = getelementptr inbounds %struct.device_link, %struct.device_link* %6, i32 0, i32 1, !dbg !10208
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10208
  %links1 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 10, !dbg !10208
  %consumers2 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links1, i32 0, i32 1, !dbg !10208
  %cmp = icmp eq %struct.list_head* %s_node, %consumers2, !dbg !10208
  %lnot = xor i1 %cmp, true, !dbg !10208
  br i1 %lnot, label %for.body, label %for.end, !dbg !10207

for.body:                                         ; preds = %for.cond
  %8 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10210
  %flags = getelementptr inbounds %struct.device_link, %struct.device_link* %8, i32 0, i32 6, !dbg !10213
  %9 = load i32, i32* %flags, align 4, !dbg !10213
  %conv = zext i32 %9 to i64, !dbg !10210
  %and = and i64 %conv, 64, !dbg !10214
  %tobool = icmp ne i64 %and, 0, !dbg !10214
  br i1 %tobool, label %if.end, label %if.then, !dbg !10215

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !10216

if.end:                                           ; preds = %for.body
  %10 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10217
  %status = getelementptr inbounds %struct.device_link, %struct.device_link* %10, i32 0, i32 5, !dbg !10219
  %11 = load i32, i32* %status, align 8, !dbg !10219
  %cmp3 = icmp eq i32 %11, 2, !dbg !10220
  br i1 %cmp3, label %if.then8, label %lor.lhs.false, !dbg !10221

lor.lhs.false:                                    ; preds = %if.end
  %12 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10222
  %status5 = getelementptr inbounds %struct.device_link, %struct.device_link* %12, i32 0, i32 5, !dbg !10223
  %13 = load i32, i32* %status5, align 8, !dbg !10223
  %cmp6 = icmp eq i32 %13, 3, !dbg !10224
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !10225

if.then8:                                         ; preds = %lor.lhs.false, %if.end
  store i8 1, i8* %ret, align 1, !dbg !10226
  br label %for.end, !dbg !10228

if.end9:                                          ; preds = %lor.lhs.false
  br label %do.body10, !dbg !10229

do.body10:                                        ; preds = %if.end9
  br label %do.body11, !dbg !10230

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !10232

do.end12:                                         ; preds = %do.body11
  br label %do.body13, !dbg !10230

do.body13:                                        ; preds = %do.end12
  %14 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10234
  %status14 = getelementptr inbounds %struct.device_link, %struct.device_link* %14, i32 0, i32 5, !dbg !10234
  store volatile i32 4, i32* %status14, align 8, !dbg !10234
  br label %do.end15, !dbg !10234

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !10230

do.end16:                                         ; preds = %do.end15
  br label %for.inc, !dbg !10236

for.inc:                                          ; preds = %do.end16, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr17, metadata !10237, metadata !DIExpression()), !dbg !10239
  %15 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10239
  %s_node18 = getelementptr inbounds %struct.device_link, %struct.device_link* %15, i32 0, i32 1, !dbg !10239
  %next19 = getelementptr inbounds %struct.list_head, %struct.list_head* %s_node18, i32 0, i32 0, !dbg !10239
  %16 = load %struct.list_head*, %struct.list_head** %next19, align 8, !dbg !10239
  %17 = bitcast %struct.list_head* %16 to i8*, !dbg !10239
  store i8* %17, i8** %__mptr17, align 8, !dbg !10239
  br label %do.body20, !dbg !10239

do.body20:                                        ; preds = %for.inc
  br label %do.end21, !dbg !10240

do.end21:                                         ; preds = %do.body20
  %18 = load i8*, i8** %__mptr17, align 8, !dbg !10239
  %add.ptr23 = getelementptr i8, i8* %18, i64 -8, !dbg !10239
  %19 = bitcast i8* %add.ptr23 to %struct.device_link*, !dbg !10239
  store %struct.device_link* %19, %struct.device_link** %tmp22, align 8, !dbg !10240
  %20 = load %struct.device_link*, %struct.device_link** %tmp22, align 8, !dbg !10239
  store %struct.device_link* %20, %struct.device_link** %link, align 8, !dbg !10208
  br label %for.cond, !dbg !10208, !llvm.loop !10242

for.end:                                          ; preds = %if.then8, %for.cond
  %21 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10244
  %links24 = getelementptr inbounds %struct.device, %struct.device* %21, i32 0, i32 10, !dbg !10245
  %status25 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links24, i32 0, i32 5, !dbg !10246
  store i32 3, i32* %status25, align 4, !dbg !10247
  call void @device_links_write_unlock() #10, !dbg !10248
  %22 = load i8, i8* %ret, align 1, !dbg !10249
  %tobool26 = trunc i8 %22 to i1, !dbg !10249
  ret i1 %tobool26, !dbg !10250
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @device_links_unbind_consumers(%struct.device* %dev) #0 !dbg !10251 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %link = alloca %struct.device_link*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_link*, align 8
  %status = alloca i32, align 4
  %consumer = alloca %struct.device*, align 8
  %__mptr24 = alloca i8*, align 8
  %tmp29 = alloca %struct.device_link*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10252, metadata !DIExpression()), !dbg !10253
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !10254, metadata !DIExpression()), !dbg !10255
  br label %start, !dbg !10256

start:                                            ; preds = %if.then21, %if.then10, %entry
  call void @llvm.dbg.label(metadata !10257), !dbg !10258
  call void @device_links_write_lock() #10, !dbg !10259
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10260, metadata !DIExpression()), !dbg !10263
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10263
  %links = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 10, !dbg !10263
  %consumers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 1, !dbg !10263
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %consumers, i32 0, i32 0, !dbg !10263
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10263
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !10263
  store i8* %2, i8** %__mptr, align 8, !dbg !10263
  br label %do.body, !dbg !10263

do.body:                                          ; preds = %start
  br label %do.end, !dbg !10264

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !10263
  %add.ptr = getelementptr i8, i8* %3, i64 -8, !dbg !10263
  %4 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !10263
  store %struct.device_link* %4, %struct.device_link** %tmp, align 8, !dbg !10264
  %5 = load %struct.device_link*, %struct.device_link** %tmp, align 8, !dbg !10263
  store %struct.device_link* %5, %struct.device_link** %link, align 8, !dbg !10266
  br label %for.cond, !dbg !10266

for.cond:                                         ; preds = %do.end28, %do.end
  %6 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10267
  %s_node = getelementptr inbounds %struct.device_link, %struct.device_link* %6, i32 0, i32 1, !dbg !10267
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10267
  %links1 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 10, !dbg !10267
  %consumers2 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links1, i32 0, i32 1, !dbg !10267
  %cmp = icmp eq %struct.list_head* %s_node, %consumers2, !dbg !10267
  %lnot = xor i1 %cmp, true, !dbg !10267
  br i1 %lnot, label %for.body, label %for.end, !dbg !10266

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10269, metadata !DIExpression()), !dbg !10271
  %8 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10272
  %flags = getelementptr inbounds %struct.device_link, %struct.device_link* %8, i32 0, i32 6, !dbg !10274
  %9 = load i32, i32* %flags, align 4, !dbg !10274
  %conv = zext i32 %9 to i64, !dbg !10272
  %and = and i64 %conv, 64, !dbg !10275
  %tobool = icmp ne i64 %and, 0, !dbg !10275
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !10276

lor.lhs.false:                                    ; preds = %for.body
  %10 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10277
  %flags3 = getelementptr inbounds %struct.device_link, %struct.device_link* %10, i32 0, i32 6, !dbg !10278
  %11 = load i32, i32* %flags3, align 4, !dbg !10278
  %conv4 = zext i32 %11 to i64, !dbg !10277
  %and5 = and i64 %conv4, 128, !dbg !10279
  %tobool6 = icmp ne i64 %and5, 0, !dbg !10279
  br i1 %tobool6, label %if.then, label %if.end, !dbg !10280

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !10281

if.end:                                           ; preds = %lor.lhs.false
  %12 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10282
  %status7 = getelementptr inbounds %struct.device_link, %struct.device_link* %12, i32 0, i32 5, !dbg !10283
  %13 = load i32, i32* %status7, align 8, !dbg !10283
  store i32 %13, i32* %status, align 4, !dbg !10284
  %14 = load i32, i32* %status, align 4, !dbg !10285
  %cmp8 = icmp eq i32 %14, 2, !dbg !10287
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !10288

if.then10:                                        ; preds = %if.end
  call void @device_links_write_unlock() #10, !dbg !10289
  call void @wait_for_device_probe() #10, !dbg !10291
  br label %start, !dbg !10292

if.end11:                                         ; preds = %if.end
  br label %do.body12, !dbg !10293

do.body12:                                        ; preds = %if.end11
  br label %do.body13, !dbg !10294

do.body13:                                        ; preds = %do.body12
  br label %do.end14, !dbg !10296

do.end14:                                         ; preds = %do.body13
  br label %do.body15, !dbg !10294

do.body15:                                        ; preds = %do.end14
  %15 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10298
  %status16 = getelementptr inbounds %struct.device_link, %struct.device_link* %15, i32 0, i32 5, !dbg !10298
  store volatile i32 4, i32* %status16, align 8, !dbg !10298
  br label %do.end17, !dbg !10298

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !10294

do.end18:                                         ; preds = %do.end17
  %16 = load i32, i32* %status, align 4, !dbg !10300
  %cmp19 = icmp eq i32 %16, 3, !dbg !10302
  br i1 %cmp19, label %if.then21, label %if.end23, !dbg !10303

if.then21:                                        ; preds = %do.end18
  call void @llvm.dbg.declare(metadata %struct.device** %consumer, metadata !10304, metadata !DIExpression()), !dbg !10306
  %17 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10307
  %consumer22 = getelementptr inbounds %struct.device_link, %struct.device_link* %17, i32 0, i32 2, !dbg !10308
  %18 = load %struct.device*, %struct.device** %consumer22, align 8, !dbg !10308
  store %struct.device* %18, %struct.device** %consumer, align 8, !dbg !10306
  %19 = load %struct.device*, %struct.device** %consumer, align 8, !dbg !10309
  %call = call %struct.device* @get_device(%struct.device* %19) #10, !dbg !10310
  call void @device_links_write_unlock() #10, !dbg !10311
  %20 = load %struct.device*, %struct.device** %consumer, align 8, !dbg !10312
  %21 = load %struct.device*, %struct.device** %consumer, align 8, !dbg !10313
  %parent = getelementptr inbounds %struct.device, %struct.device* %21, i32 0, i32 1, !dbg !10314
  %22 = load %struct.device*, %struct.device** %parent, align 8, !dbg !10314
  call void @device_release_driver_internal(%struct.device* %20, %struct.device_driver* null, %struct.device* %22) #10, !dbg !10315
  %23 = load %struct.device*, %struct.device** %consumer, align 8, !dbg !10316
  call void @put_device(%struct.device* %23) #10, !dbg !10317
  br label %start, !dbg !10318

if.end23:                                         ; preds = %do.end18
  br label %for.inc, !dbg !10319

for.inc:                                          ; preds = %if.end23, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr24, metadata !10320, metadata !DIExpression()), !dbg !10322
  %24 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !10322
  %s_node25 = getelementptr inbounds %struct.device_link, %struct.device_link* %24, i32 0, i32 1, !dbg !10322
  %next26 = getelementptr inbounds %struct.list_head, %struct.list_head* %s_node25, i32 0, i32 0, !dbg !10322
  %25 = load %struct.list_head*, %struct.list_head** %next26, align 8, !dbg !10322
  %26 = bitcast %struct.list_head* %25 to i8*, !dbg !10322
  store i8* %26, i8** %__mptr24, align 8, !dbg !10322
  br label %do.body27, !dbg !10322

do.body27:                                        ; preds = %for.inc
  br label %do.end28, !dbg !10323

do.end28:                                         ; preds = %do.body27
  %27 = load i8*, i8** %__mptr24, align 8, !dbg !10322
  %add.ptr30 = getelementptr i8, i8* %27, i64 -8, !dbg !10322
  %28 = bitcast i8* %add.ptr30 to %struct.device_link*, !dbg !10322
  store %struct.device_link* %28, %struct.device_link** %tmp29, align 8, !dbg !10323
  %29 = load %struct.device_link*, %struct.device_link** %tmp29, align 8, !dbg !10322
  store %struct.device_link* %29, %struct.device_link** %link, align 8, !dbg !10267
  br label %for.cond, !dbg !10267, !llvm.loop !10325

for.end:                                          ; preds = %for.cond
  call void @device_links_write_unlock() #10, !dbg !10327
  ret void, !dbg !10328
}

; Function Attrs: noredzone
declare dso_local void @wait_for_device_probe() #2

; Function Attrs: noredzone
declare dso_local void @device_release_driver_internal(%struct.device*, %struct.device_driver*, %struct.device*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @fw_devlink_setup(i8* %arg) #3 section ".init.text" !dbg !10329 {
entry:
  %retval = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !10330, metadata !DIExpression()), !dbg !10331
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !10332
  %tobool = icmp ne i8* %0, null, !dbg !10332
  br i1 %tobool, label %if.end, label %if.then, !dbg !10334

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10335
  br label %return, !dbg !10335

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !10336
  %call = call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0)) #10, !dbg !10338
  %cmp = icmp eq i32 %call, 0, !dbg !10339
  br i1 %cmp, label %if.then1, label %if.else, !dbg !10340

if.then1:                                         ; preds = %if.end
  store i32 0, i32* @fw_devlink_flags, align 4, !dbg !10341
  br label %if.end16, !dbg !10343

if.else:                                          ; preds = %if.end
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !10344
  %call2 = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.55, i64 0, i64 0)) #10, !dbg !10346
  %cmp3 = icmp eq i32 %call2, 0, !dbg !10347
  br i1 %cmp3, label %if.then4, label %if.else5, !dbg !10348

if.then4:                                         ; preds = %if.else
  store i32 128, i32* @fw_devlink_flags, align 4, !dbg !10349
  br label %if.end15, !dbg !10351

if.else5:                                         ; preds = %if.else
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !10352
  %call6 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0)) #10, !dbg !10354
  %cmp7 = icmp eq i32 %call6, 0, !dbg !10355
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !10356

if.then8:                                         ; preds = %if.else5
  store i32 32, i32* @fw_devlink_flags, align 4, !dbg !10357
  br label %if.end14, !dbg !10359

if.else9:                                         ; preds = %if.else5
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !10360
  %call10 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57, i64 0, i64 0)) #10, !dbg !10362
  %cmp11 = icmp eq i32 %call10, 0, !dbg !10363
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !10364

if.then12:                                        ; preds = %if.else9
  store i32 36, i32* @fw_devlink_flags, align 4, !dbg !10365
  br label %if.end13, !dbg !10367

if.end13:                                         ; preds = %if.then12, %if.else9
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then8
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then4
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then1
  store i32 0, i32* %retval, align 4, !dbg !10368
  br label %return, !dbg !10368

return:                                           ; preds = %if.end16, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !10369
  ret i32 %5, !dbg !10369
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @fw_devlink_get_flags() #0 !dbg !10370 {
entry:
  %0 = load i32, i32* @fw_devlink_flags, align 4, !dbg !10373
  ret i32 %0, !dbg !10374
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @fw_devlink_pause() #0 !dbg !10375 {
entry:
  call void @mutex_lock(%struct.mutex* @defer_fw_devlink_lock) #10, !dbg !10376
  %0 = load i32, i32* @defer_fw_devlink_count, align 4, !dbg !10377
  %inc = add i32 %0, 1, !dbg !10377
  store i32 %inc, i32* @defer_fw_devlink_count, align 4, !dbg !10377
  call void @mutex_unlock(%struct.mutex* @defer_fw_devlink_lock) #10, !dbg !10378
  ret void, !dbg !10379
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @fw_devlink_resume() #0 !dbg !10380 {
entry:
  %dev = alloca %struct.device*, align 8
  %tmp = alloca %struct.device*, align 8
  %probe_list = alloca %struct.list_head, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp17 = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp31 = alloca %struct.device*, align 8
  %__mptr32 = alloca i8*, align 8
  %tmp36 = alloca %struct.device*, align 8
  %__mptr45 = alloca i8*, align 8
  %tmp51 = alloca %struct.device*, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !10381, metadata !DIExpression()), !dbg !10382
  call void @llvm.dbg.declare(metadata %struct.device** %tmp, metadata !10383, metadata !DIExpression()), !dbg !10384
  call void @llvm.dbg.declare(metadata %struct.list_head* %probe_list, metadata !10385, metadata !DIExpression()), !dbg !10386
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %probe_list, i32 0, i32 0, !dbg !10386
  store %struct.list_head* %probe_list, %struct.list_head** %next, align 8, !dbg !10386
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %probe_list, i32 0, i32 1, !dbg !10386
  store %struct.list_head* %probe_list, %struct.list_head** %prev, align 8, !dbg !10386
  call void @mutex_lock(%struct.mutex* @defer_fw_devlink_lock) #10, !dbg !10387
  %0 = load i32, i32* @defer_fw_devlink_count, align 4, !dbg !10388
  %tobool = icmp ne i32 %0, 0, !dbg !10388
  br i1 %tobool, label %if.end24, label %if.then, !dbg !10390

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10391, metadata !DIExpression()), !dbg !10394
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !10394
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !10395
  %tobool1 = icmp ne i32 %1, 0, !dbg !10395
  %lnot = xor i1 %tobool1, true, !dbg !10395
  %lnot2 = xor i1 %lnot, true, !dbg !10395
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !10395
  %conv = sext i32 %lnot.ext to i64, !dbg !10395
  %tobool3 = icmp ne i64 %conv, 0, !dbg !10395
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !10394

if.then4:                                         ; preds = %if.then
  br label %do.body, !dbg !10395

do.body:                                          ; preds = %if.then4
  br label %do.body5, !dbg !10397

do.body5:                                         ; preds = %do.body
  br label %do.end, !dbg !10399

do.end:                                           ; preds = %do.body5
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !10397
  br label %do.body6, !dbg !10397

do.body6:                                         ; preds = %do.end
  br label %do.body7, !dbg !10401

do.body7:                                         ; preds = %do.body6
  br label %do.end8, !dbg !10403

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !10401

do.body9:                                         ; preds = %do.end8
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 1552, i32 2313, i64 12) #5, !dbg !10405, !srcloc !10407
  br label %do.end10, !dbg !10405

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 409) #5, !dbg !10408, !srcloc !10410
  br label %do.body11, !dbg !10401

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !10411

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !10401

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !10397

do.body14:                                        ; preds = %do.end13
  br label %do.end15, !dbg !10413

do.end15:                                         ; preds = %do.body14
  br label %do.end16, !dbg !10397

do.end16:                                         ; preds = %do.end15
  br label %if.end, !dbg !10397

if.end:                                           ; preds = %do.end16, %if.then
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !10394
  %tobool18 = icmp ne i32 %2, 0, !dbg !10394
  %lnot19 = xor i1 %tobool18, true, !dbg !10394
  %lnot21 = xor i1 %lnot19, true, !dbg !10394
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !10394
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !10394
  store i64 %conv23, i64* %tmp17, align 8, !dbg !10395
  %3 = load i64, i64* %tmp17, align 8, !dbg !10394
  br label %out, !dbg !10415

if.end24:                                         ; preds = %entry
  %4 = load i32, i32* @defer_fw_devlink_count, align 4, !dbg !10416
  %dec = add i32 %4, -1, !dbg !10416
  store i32 %dec, i32* @defer_fw_devlink_count, align 4, !dbg !10416
  %5 = load i32, i32* @defer_fw_devlink_count, align 4, !dbg !10417
  %tobool25 = icmp ne i32 %5, 0, !dbg !10417
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !10419

if.then26:                                        ; preds = %if.end24
  br label %out, !dbg !10420

if.end27:                                         ; preds = %if.end24
  call void @device_link_add_missing_supplier_links() #10, !dbg !10421
  call void @list_splice_tail_init(%struct.list_head* @deferred_fw_devlink, %struct.list_head* %probe_list) #10, !dbg !10422
  br label %out, !dbg !10422

out:                                              ; preds = %if.end27, %if.then26, %if.end
  call void @llvm.dbg.label(metadata !10423), !dbg !10424
  call void @mutex_unlock(%struct.mutex* @defer_fw_devlink_lock) #10, !dbg !10425
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10426, metadata !DIExpression()), !dbg !10429
  %next28 = getelementptr inbounds %struct.list_head, %struct.list_head* %probe_list, i32 0, i32 0, !dbg !10429
  %6 = load %struct.list_head*, %struct.list_head** %next28, align 8, !dbg !10429
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !10429
  store i8* %7, i8** %__mptr, align 8, !dbg !10429
  br label %do.body29, !dbg !10429

do.body29:                                        ; preds = %out
  br label %do.end30, !dbg !10430

do.end30:                                         ; preds = %do.body29
  %8 = load i8*, i8** %__mptr, align 8, !dbg !10429
  %add.ptr = getelementptr i8, i8* %8, i64 -200, !dbg !10429
  %9 = bitcast i8* %add.ptr to %struct.device*, !dbg !10429
  store %struct.device* %9, %struct.device** %tmp31, align 8, !dbg !10430
  %10 = load %struct.device*, %struct.device** %tmp31, align 8, !dbg !10429
  store %struct.device* %10, %struct.device** %dev, align 8, !dbg !10432
  call void @llvm.dbg.declare(metadata i8** %__mptr32, metadata !10433, metadata !DIExpression()), !dbg !10435
  %11 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10435
  %links = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 10, !dbg !10435
  %defer_hook = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 3, !dbg !10435
  %next33 = getelementptr inbounds %struct.list_head, %struct.list_head* %defer_hook, i32 0, i32 0, !dbg !10435
  %12 = load %struct.list_head*, %struct.list_head** %next33, align 8, !dbg !10435
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !10435
  store i8* %13, i8** %__mptr32, align 8, !dbg !10435
  br label %do.body34, !dbg !10435

do.body34:                                        ; preds = %do.end30
  br label %do.end35, !dbg !10436

do.end35:                                         ; preds = %do.body34
  %14 = load i8*, i8** %__mptr32, align 8, !dbg !10435
  %add.ptr37 = getelementptr i8, i8* %14, i64 -200, !dbg !10435
  %15 = bitcast i8* %add.ptr37 to %struct.device*, !dbg !10435
  store %struct.device* %15, %struct.device** %tmp36, align 8, !dbg !10436
  %16 = load %struct.device*, %struct.device** %tmp36, align 8, !dbg !10435
  store %struct.device* %16, %struct.device** %tmp, align 8, !dbg !10432
  br label %for.cond, !dbg !10432

for.cond:                                         ; preds = %do.end50, %do.end35
  %17 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10438
  %links38 = getelementptr inbounds %struct.device, %struct.device* %17, i32 0, i32 10, !dbg !10438
  %defer_hook39 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links38, i32 0, i32 3, !dbg !10438
  %cmp = icmp eq %struct.list_head* %defer_hook39, %probe_list, !dbg !10438
  %lnot41 = xor i1 %cmp, true, !dbg !10438
  br i1 %lnot41, label %for.body, label %for.end, !dbg !10432

for.body:                                         ; preds = %for.cond
  %18 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10440
  %links43 = getelementptr inbounds %struct.device, %struct.device* %18, i32 0, i32 10, !dbg !10442
  %defer_hook44 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links43, i32 0, i32 3, !dbg !10443
  call void @list_del_init(%struct.list_head* %defer_hook44) #10, !dbg !10444
  %19 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10445
  call void @bus_probe_device(%struct.device* %19) #10, !dbg !10446
  br label %for.inc, !dbg !10447

for.inc:                                          ; preds = %for.body
  %20 = load %struct.device*, %struct.device** %tmp, align 8, !dbg !10438
  store %struct.device* %20, %struct.device** %dev, align 8, !dbg !10438
  call void @llvm.dbg.declare(metadata i8** %__mptr45, metadata !10448, metadata !DIExpression()), !dbg !10450
  %21 = load %struct.device*, %struct.device** %tmp, align 8, !dbg !10450
  %links46 = getelementptr inbounds %struct.device, %struct.device* %21, i32 0, i32 10, !dbg !10450
  %defer_hook47 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links46, i32 0, i32 3, !dbg !10450
  %next48 = getelementptr inbounds %struct.list_head, %struct.list_head* %defer_hook47, i32 0, i32 0, !dbg !10450
  %22 = load %struct.list_head*, %struct.list_head** %next48, align 8, !dbg !10450
  %23 = bitcast %struct.list_head* %22 to i8*, !dbg !10450
  store i8* %23, i8** %__mptr45, align 8, !dbg !10450
  br label %do.body49, !dbg !10450

do.body49:                                        ; preds = %for.inc
  br label %do.end50, !dbg !10451

do.end50:                                         ; preds = %do.body49
  %24 = load i8*, i8** %__mptr45, align 8, !dbg !10450
  %add.ptr52 = getelementptr i8, i8* %24, i64 -200, !dbg !10450
  %25 = bitcast i8* %add.ptr52 to %struct.device*, !dbg !10450
  store %struct.device* %25, %struct.device** %tmp51, align 8, !dbg !10451
  %26 = load %struct.device*, %struct.device** %tmp51, align 8, !dbg !10450
  store %struct.device* %26, %struct.device** %tmp, align 8, !dbg !10438
  br label %for.cond, !dbg !10438, !llvm.loop !10453

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10455
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_link_add_missing_supplier_links() #0 !dbg !10456 {
entry:
  %dev = alloca %struct.device*, align 8
  %tmp = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.device*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp5 = alloca %struct.device*, align 8
  %ret = alloca i32, align 4
  %__mptr33 = alloca i8*, align 8
  %tmp39 = alloca %struct.device*, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !10457, metadata !DIExpression()), !dbg !10458
  call void @llvm.dbg.declare(metadata %struct.device** %tmp, metadata !10459, metadata !DIExpression()), !dbg !10460
  call void @mutex_lock(%struct.mutex* @wfs_lock) #10, !dbg !10461
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10462, metadata !DIExpression()), !dbg !10465
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @wait_for_suppliers, i32 0, i32 0), align 8, !dbg !10465
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !10465
  store i8* %1, i8** %__mptr, align 8, !dbg !10465
  br label %do.body, !dbg !10465

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10466

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10465
  %add.ptr = getelementptr i8, i8* %2, i64 -184, !dbg !10465
  %3 = bitcast i8* %add.ptr to %struct.device*, !dbg !10465
  store %struct.device* %3, %struct.device** %tmp1, align 8, !dbg !10466
  %4 = load %struct.device*, %struct.device** %tmp1, align 8, !dbg !10465
  store %struct.device* %4, %struct.device** %dev, align 8, !dbg !10468
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !10469, metadata !DIExpression()), !dbg !10471
  %5 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10471
  %links = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 10, !dbg !10471
  %needs_suppliers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 2, !dbg !10471
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %needs_suppliers, i32 0, i32 0, !dbg !10471
  %6 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10471
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !10471
  store i8* %7, i8** %__mptr2, align 8, !dbg !10471
  br label %do.body3, !dbg !10471

do.body3:                                         ; preds = %do.end
  br label %do.end4, !dbg !10472

do.end4:                                          ; preds = %do.body3
  %8 = load i8*, i8** %__mptr2, align 8, !dbg !10471
  %add.ptr6 = getelementptr i8, i8* %8, i64 -184, !dbg !10471
  %9 = bitcast i8* %add.ptr6 to %struct.device*, !dbg !10471
  store %struct.device* %9, %struct.device** %tmp5, align 8, !dbg !10472
  %10 = load %struct.device*, %struct.device** %tmp5, align 8, !dbg !10471
  store %struct.device* %10, %struct.device** %tmp, align 8, !dbg !10468
  br label %for.cond, !dbg !10468

for.cond:                                         ; preds = %do.end38, %do.end4
  %11 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10474
  %links7 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 10, !dbg !10474
  %needs_suppliers8 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links7, i32 0, i32 2, !dbg !10474
  %cmp = icmp eq %struct.list_head* %needs_suppliers8, @wait_for_suppliers, !dbg !10474
  %lnot = xor i1 %cmp, true, !dbg !10474
  br i1 %lnot, label %for.body, label %for.end, !dbg !10468

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10476, metadata !DIExpression()), !dbg !10478
  %12 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10479
  %fwnode = getelementptr inbounds %struct.device, %struct.device* %12, i32 0, i32 24, !dbg !10479
  %13 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !10479
  %tobool = icmp ne %struct.fwnode_handle* %13, null, !dbg !10479
  br i1 %tobool, label %cond.true, label %cond.false22, !dbg !10479

cond.true:                                        ; preds = %for.body
  %14 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10479
  %fwnode9 = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 24, !dbg !10479
  %15 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode9, align 8, !dbg !10479
  %tobool10 = icmp ne %struct.fwnode_handle* %15, null, !dbg !10479
  br i1 %tobool10, label %land.lhs.true, label %cond.false, !dbg !10479

land.lhs.true:                                    ; preds = %cond.true
  %16 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10479
  %fwnode11 = getelementptr inbounds %struct.device, %struct.device* %16, i32 0, i32 24, !dbg !10479
  %17 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode11, align 8, !dbg !10479
  %ops = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %17, i32 0, i32 1, !dbg !10479
  %18 = load %struct.fwnode_operations*, %struct.fwnode_operations** %ops, align 8, !dbg !10479
  %tobool12 = icmp ne %struct.fwnode_operations* %18, null, !dbg !10479
  br i1 %tobool12, label %land.lhs.true13, label %cond.false, !dbg !10479

land.lhs.true13:                                  ; preds = %land.lhs.true
  %19 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10479
  %fwnode14 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 24, !dbg !10479
  %20 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode14, align 8, !dbg !10479
  %ops15 = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %20, i32 0, i32 1, !dbg !10479
  %21 = load %struct.fwnode_operations*, %struct.fwnode_operations** %ops15, align 8, !dbg !10479
  %add_links = getelementptr inbounds %struct.fwnode_operations, %struct.fwnode_operations* %21, i32 0, i32 17, !dbg !10479
  %22 = load i32 (%struct.fwnode_handle*, %struct.device*)*, i32 (%struct.fwnode_handle*, %struct.device*)** %add_links, align 8, !dbg !10479
  %tobool16 = icmp ne i32 (%struct.fwnode_handle*, %struct.device*)* %22, null, !dbg !10479
  br i1 %tobool16, label %cond.true17, label %cond.false, !dbg !10479

cond.true17:                                      ; preds = %land.lhs.true13
  %23 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10479
  %fwnode18 = getelementptr inbounds %struct.device, %struct.device* %23, i32 0, i32 24, !dbg !10479
  %24 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode18, align 8, !dbg !10479
  %ops19 = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %24, i32 0, i32 1, !dbg !10479
  %25 = load %struct.fwnode_operations*, %struct.fwnode_operations** %ops19, align 8, !dbg !10479
  %add_links20 = getelementptr inbounds %struct.fwnode_operations, %struct.fwnode_operations* %25, i32 0, i32 17, !dbg !10479
  %26 = load i32 (%struct.fwnode_handle*, %struct.device*)*, i32 (%struct.fwnode_handle*, %struct.device*)** %add_links20, align 8, !dbg !10479
  %27 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10479
  %fwnode21 = getelementptr inbounds %struct.device, %struct.device* %27, i32 0, i32 24, !dbg !10479
  %28 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode21, align 8, !dbg !10479
  %29 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10479
  %call = call i32 %26(%struct.fwnode_handle* %28, %struct.device* %29) #10, !dbg !10479
  br label %cond.end, !dbg !10479

cond.false:                                       ; preds = %land.lhs.true13, %land.lhs.true, %cond.true
  br label %cond.end, !dbg !10479

cond.end:                                         ; preds = %cond.false, %cond.true17
  %cond = phi i32 [ %call, %cond.true17 ], [ -6, %cond.false ], !dbg !10479
  br label %cond.end23, !dbg !10479

cond.false22:                                     ; preds = %for.body
  br label %cond.end23, !dbg !10479

cond.end23:                                       ; preds = %cond.false22, %cond.end
  %cond24 = phi i32 [ %cond, %cond.end ], [ -22, %cond.false22 ], !dbg !10479
  store i32 %cond24, i32* %ret, align 4, !dbg !10478
  %30 = load i32, i32* %ret, align 4, !dbg !10480
  %tobool25 = icmp ne i32 %30, 0, !dbg !10480
  br i1 %tobool25, label %if.else, label %if.then, !dbg !10482

if.then:                                          ; preds = %cond.end23
  %31 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10483
  %links26 = getelementptr inbounds %struct.device, %struct.device* %31, i32 0, i32 10, !dbg !10484
  %needs_suppliers27 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links26, i32 0, i32 2, !dbg !10485
  call void @list_del_init(%struct.list_head* %needs_suppliers27) #10, !dbg !10486
  br label %if.end32, !dbg !10486

if.else:                                          ; preds = %cond.end23
  %32 = load i32, i32* %ret, align 4, !dbg !10487
  %cmp28 = icmp ne i32 %32, -19, !dbg !10489
  br i1 %cmp28, label %if.then30, label %lor.lhs.false, !dbg !10490

lor.lhs.false:                                    ; preds = %if.else
  %call29 = call zeroext i1 @fw_devlink_is_permissive() #10, !dbg !10491
  br i1 %call29, label %if.then30, label %if.end, !dbg !10492

if.then30:                                        ; preds = %lor.lhs.false, %if.else
  %33 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10493
  %links31 = getelementptr inbounds %struct.device, %struct.device* %33, i32 0, i32 10, !dbg !10494
  %need_for_probe = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links31, i32 0, i32 4, !dbg !10495
  store i8 0, i8* %need_for_probe, align 8, !dbg !10496
  br label %if.end, !dbg !10493

if.end:                                           ; preds = %if.then30, %lor.lhs.false
  br label %if.end32

if.end32:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !10497

for.inc:                                          ; preds = %if.end32
  %34 = load %struct.device*, %struct.device** %tmp, align 8, !dbg !10474
  store %struct.device* %34, %struct.device** %dev, align 8, !dbg !10474
  call void @llvm.dbg.declare(metadata i8** %__mptr33, metadata !10498, metadata !DIExpression()), !dbg !10500
  %35 = load %struct.device*, %struct.device** %tmp, align 8, !dbg !10500
  %links34 = getelementptr inbounds %struct.device, %struct.device* %35, i32 0, i32 10, !dbg !10500
  %needs_suppliers35 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links34, i32 0, i32 2, !dbg !10500
  %next36 = getelementptr inbounds %struct.list_head, %struct.list_head* %needs_suppliers35, i32 0, i32 0, !dbg !10500
  %36 = load %struct.list_head*, %struct.list_head** %next36, align 8, !dbg !10500
  %37 = bitcast %struct.list_head* %36 to i8*, !dbg !10500
  store i8* %37, i8** %__mptr33, align 8, !dbg !10500
  br label %do.body37, !dbg !10500

do.body37:                                        ; preds = %for.inc
  br label %do.end38, !dbg !10501

do.end38:                                         ; preds = %do.body37
  %38 = load i8*, i8** %__mptr33, align 8, !dbg !10500
  %add.ptr40 = getelementptr i8, i8* %38, i64 -184, !dbg !10500
  %39 = bitcast i8* %add.ptr40 to %struct.device*, !dbg !10500
  store %struct.device* %39, %struct.device** %tmp39, align 8, !dbg !10501
  %40 = load %struct.device*, %struct.device** %tmp39, align 8, !dbg !10500
  store %struct.device* %40, %struct.device** %tmp, align 8, !dbg !10474
  br label %for.cond, !dbg !10474, !llvm.loop !10503

for.end:                                          ; preds = %for.cond
  call void @mutex_unlock(%struct.mutex* @wfs_lock) #10, !dbg !10505
  ret void, !dbg !10506
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_splice_tail_init(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !10507 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !10508, metadata !DIExpression()), !dbg !10509
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !10510, metadata !DIExpression()), !dbg !10511
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10512
  %call = call i32 @list_empty(%struct.list_head* %0) #10, !dbg !10514
  %tobool = icmp ne i32 %call, 0, !dbg !10514
  br i1 %tobool, label %if.end, label %if.then, !dbg !10515

if.then:                                          ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10516
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10518
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !10519
  %3 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !10519
  %4 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10520
  call void @__list_splice(%struct.list_head* %1, %struct.list_head* %3, %struct.list_head* %4) #10, !dbg !10521
  %5 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10522
  call void @INIT_LIST_HEAD(%struct.list_head* %5) #10, !dbg !10523
  br label %if.end, !dbg !10524

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10525
}

; Function Attrs: noredzone
declare dso_local void @bus_probe_device(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @lock_device_hotplug() #0 !dbg !10526 {
entry:
  call void @mutex_lock(%struct.mutex* @device_hotplug_lock) #10, !dbg !10527
  ret void, !dbg !10528
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @unlock_device_hotplug() #0 !dbg !10529 {
entry:
  call void @mutex_unlock(%struct.mutex* @device_hotplug_lock) #10, !dbg !10530
  ret void, !dbg !10531
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @lock_device_hotplug_sysfs() #0 !dbg !10532 {
entry:
  %retval = alloca i32, align 4
  %call = call i32 @mutex_trylock(%struct.mutex* @device_hotplug_lock) #10, !dbg !10533
  %tobool = icmp ne i32 %call, 0, !dbg !10533
  br i1 %tobool, label %if.then, label %if.end, !dbg !10535

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10536
  br label %return, !dbg !10536

if.end:                                           ; preds = %entry
  call void @msleep(i32 5) #10, !dbg !10537
  %call1 = call i32 @restart_syscall() #10, !dbg !10538
  store i32 %call1, i32* %retval, align 4, !dbg !10539
  br label %return, !dbg !10539

return:                                           ; preds = %if.end, %if.then
  %0 = load i32, i32* %retval, align 4, !dbg !10540
  ret i32 %0, !dbg !10540
}

; Function Attrs: noredzone
declare dso_local i32 @mutex_trylock(%struct.mutex*) #2

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @restart_syscall() #0 !dbg !10541 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !10542, metadata !DIExpression()), !dbg !10548
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !10550, metadata !DIExpression()), !dbg !10552
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !10553, metadata !DIExpression()), !dbg !10555
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !10552
  %0 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !10552
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #13, !dbg !10555, !srcloc !10556
  store i64 %1, i64* %pfo_val__.i, align 8, !dbg !10555
  %2 = load i64, i64* %pfo_val__.i, align 8, !dbg !10555
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !10555
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i, align 8, !dbg !10555
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !10555
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !10548
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !10548
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i, align 8, !dbg !10548
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !10548
  call void @set_tsk_thread_flag(%struct.task_struct* %6, i32 2) #10, !dbg !10557
  ret i32 -513, !dbg !10558
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @dev_driver_string(%struct.device* %dev) #0 !dbg !10559 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %drv = alloca %struct.device_driver*, align 8
  %tmp = alloca %struct.device_driver*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10560, metadata !DIExpression()), !dbg !10561
  call void @llvm.dbg.declare(metadata %struct.device_driver** %drv, metadata !10562, metadata !DIExpression()), !dbg !10563
  br label %do.body, !dbg !10564

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10566

do.end:                                           ; preds = %do.body
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10564
  %driver = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 6, !dbg !10564
  %1 = load volatile %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !10564
  store %struct.device_driver* %1, %struct.device_driver** %tmp, align 8, !dbg !10566
  %2 = load %struct.device_driver*, %struct.device_driver** %tmp, align 8, !dbg !10564
  store %struct.device_driver* %2, %struct.device_driver** %drv, align 8, !dbg !10568
  %3 = load %struct.device_driver*, %struct.device_driver** %drv, align 8, !dbg !10569
  %tobool = icmp ne %struct.device_driver* %3, null, !dbg !10569
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10569

cond.true:                                        ; preds = %do.end
  %4 = load %struct.device_driver*, %struct.device_driver** %drv, align 8, !dbg !10570
  %name = getelementptr inbounds %struct.device_driver, %struct.device_driver* %4, i32 0, i32 0, !dbg !10571
  %5 = load i8*, i8** %name, align 8, !dbg !10571
  br label %cond.end13, !dbg !10569

cond.false:                                       ; preds = %do.end
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10572
  %bus = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 5, !dbg !10573
  %7 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !10573
  %tobool1 = icmp ne %struct.bus_type* %7, null, !dbg !10572
  br i1 %tobool1, label %cond.true2, label %cond.false5, !dbg !10572

cond.true2:                                       ; preds = %cond.false
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10574
  %bus3 = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 5, !dbg !10575
  %9 = load %struct.bus_type*, %struct.bus_type** %bus3, align 8, !dbg !10575
  %name4 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %9, i32 0, i32 0, !dbg !10576
  %10 = load i8*, i8** %name4, align 8, !dbg !10576
  br label %cond.end11, !dbg !10572

cond.false5:                                      ; preds = %cond.false
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10577
  %class = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 29, !dbg !10578
  %12 = load %struct.class*, %struct.class** %class, align 8, !dbg !10578
  %tobool6 = icmp ne %struct.class* %12, null, !dbg !10577
  br i1 %tobool6, label %cond.true7, label %cond.false10, !dbg !10577

cond.true7:                                       ; preds = %cond.false5
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10579
  %class8 = getelementptr inbounds %struct.device, %struct.device* %13, i32 0, i32 29, !dbg !10580
  %14 = load %struct.class*, %struct.class** %class8, align 8, !dbg !10580
  %name9 = getelementptr inbounds %struct.class, %struct.class* %14, i32 0, i32 0, !dbg !10581
  %15 = load i8*, i8** %name9, align 8, !dbg !10581
  br label %cond.end, !dbg !10577

cond.false10:                                     ; preds = %cond.false5
  br label %cond.end, !dbg !10577

cond.end:                                         ; preds = %cond.false10, %cond.true7
  %cond = phi i8* [ %15, %cond.true7 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), %cond.false10 ], !dbg !10577
  br label %cond.end11, !dbg !10572

cond.end11:                                       ; preds = %cond.end, %cond.true2
  %cond12 = phi i8* [ %10, %cond.true2 ], [ %cond, %cond.end ], !dbg !10572
  br label %cond.end13, !dbg !10569

cond.end13:                                       ; preds = %cond.end11, %cond.true
  %cond14 = phi i8* [ %5, %cond.true ], [ %cond12, %cond.end11 ], !dbg !10569
  ret i8* %cond14, !dbg !10582
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @device_store_ulong(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %size) #0 !dbg !10583 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %ea = alloca %struct.dev_ext_attribute*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_ext_attribute*, align 8
  %ret = alloca i32, align 4
  %new = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10584, metadata !DIExpression()), !dbg !10585
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10586, metadata !DIExpression()), !dbg !10587
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10588, metadata !DIExpression()), !dbg !10589
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10590, metadata !DIExpression()), !dbg !10591
  call void @llvm.dbg.declare(metadata %struct.dev_ext_attribute** %ea, metadata !10592, metadata !DIExpression()), !dbg !10593
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10594, metadata !DIExpression()), !dbg !10596
  %0 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !10596
  %1 = bitcast %struct.device_attribute* %0 to i8*, !dbg !10596
  store i8* %1, i8** %__mptr, align 8, !dbg !10596
  br label %do.body, !dbg !10596

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10597

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10596
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !10596
  %3 = bitcast i8* %add.ptr to %struct.dev_ext_attribute*, !dbg !10596
  store %struct.dev_ext_attribute* %3, %struct.dev_ext_attribute** %tmp, align 8, !dbg !10597
  %4 = load %struct.dev_ext_attribute*, %struct.dev_ext_attribute** %tmp, align 8, !dbg !10596
  store %struct.dev_ext_attribute* %4, %struct.dev_ext_attribute** %ea, align 8, !dbg !10593
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10599, metadata !DIExpression()), !dbg !10600
  call void @llvm.dbg.declare(metadata i64* %new, metadata !10601, metadata !DIExpression()), !dbg !10602
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !10603
  %call = call i32 @kstrtoul(i8* %5, i32 0, i64* %new) #10, !dbg !10604
  store i32 %call, i32* %ret, align 4, !dbg !10605
  %6 = load i32, i32* %ret, align 4, !dbg !10606
  %tobool = icmp ne i32 %6, 0, !dbg !10606
  br i1 %tobool, label %if.then, label %if.end, !dbg !10608

if.then:                                          ; preds = %do.end
  %7 = load i32, i32* %ret, align 4, !dbg !10609
  %conv = sext i32 %7 to i64, !dbg !10609
  store i64 %conv, i64* %retval, align 8, !dbg !10610
  br label %return, !dbg !10610

if.end:                                           ; preds = %do.end
  %8 = load i64, i64* %new, align 8, !dbg !10611
  %9 = load %struct.dev_ext_attribute*, %struct.dev_ext_attribute** %ea, align 8, !dbg !10612
  %var = getelementptr inbounds %struct.dev_ext_attribute, %struct.dev_ext_attribute* %9, i32 0, i32 1, !dbg !10613
  %10 = load i8*, i8** %var, align 8, !dbg !10613
  %11 = bitcast i8* %10 to i64*, !dbg !10614
  store i64 %8, i64* %11, align 8, !dbg !10615
  %12 = load i64, i64* %size.addr, align 8, !dbg !10616
  store i64 %12, i64* %retval, align 8, !dbg !10617
  br label %return, !dbg !10617

return:                                           ; preds = %if.end, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !10618
  ret i64 %13, !dbg !10618
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kstrtoul(i8* %s, i32 %base, i64* %res) #0 !dbg !10619 {
entry:
  %s.addr = alloca i8*, align 8
  %base.addr = alloca i32, align 4
  %res.addr = alloca i64*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !10623, metadata !DIExpression()), !dbg !10624
  store i32 %base, i32* %base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !10625, metadata !DIExpression()), !dbg !10626
  store i64* %res, i64** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %res.addr, metadata !10627, metadata !DIExpression()), !dbg !10628
  %0 = load i8*, i8** %s.addr, align 8, !dbg !10629
  %1 = load i32, i32* %base.addr, align 4, !dbg !10631
  %2 = load i64*, i64** %res.addr, align 8, !dbg !10632
  %call = call i32 @kstrtoull(i8* %0, i32 %1, i64* %2) #10, !dbg !10633
  ret i32 %call, !dbg !10634
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @device_show_ulong(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10635 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ea = alloca %struct.dev_ext_attribute*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_ext_attribute*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10636, metadata !DIExpression()), !dbg !10637
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10638, metadata !DIExpression()), !dbg !10639
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10640, metadata !DIExpression()), !dbg !10641
  call void @llvm.dbg.declare(metadata %struct.dev_ext_attribute** %ea, metadata !10642, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10644, metadata !DIExpression()), !dbg !10646
  %0 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !10646
  %1 = bitcast %struct.device_attribute* %0 to i8*, !dbg !10646
  store i8* %1, i8** %__mptr, align 8, !dbg !10646
  br label %do.body, !dbg !10646

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10647

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10646
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !10646
  %3 = bitcast i8* %add.ptr to %struct.dev_ext_attribute*, !dbg !10646
  store %struct.dev_ext_attribute* %3, %struct.dev_ext_attribute** %tmp, align 8, !dbg !10647
  %4 = load %struct.dev_ext_attribute*, %struct.dev_ext_attribute** %tmp, align 8, !dbg !10646
  store %struct.dev_ext_attribute* %4, %struct.dev_ext_attribute** %ea, align 8, !dbg !10643
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !10649
  %6 = load %struct.dev_ext_attribute*, %struct.dev_ext_attribute** %ea, align 8, !dbg !10650
  %var = getelementptr inbounds %struct.dev_ext_attribute, %struct.dev_ext_attribute* %6, i32 0, i32 1, !dbg !10651
  %7 = load i8*, i8** %var, align 8, !dbg !10651
  %8 = bitcast i8* %7 to i64*, !dbg !10652
  %9 = load i64, i64* %8, align 8, !dbg !10653
  %call = call i32 (i8*, i8*, ...) @sysfs_emit(i8* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i64 %9) #10, !dbg !10654
  %conv = sext i32 %call to i64, !dbg !10654
  ret i64 %conv, !dbg !10655
}

; Function Attrs: noredzone
declare dso_local i32 @sysfs_emit(i8*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @device_store_int(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %size) #0 !dbg !10656 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %ea = alloca %struct.dev_ext_attribute*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_ext_attribute*, align 8
  %ret = alloca i32, align 4
  %new = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10657, metadata !DIExpression()), !dbg !10658
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10659, metadata !DIExpression()), !dbg !10660
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10661, metadata !DIExpression()), !dbg !10662
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10663, metadata !DIExpression()), !dbg !10664
  call void @llvm.dbg.declare(metadata %struct.dev_ext_attribute** %ea, metadata !10665, metadata !DIExpression()), !dbg !10666
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10667, metadata !DIExpression()), !dbg !10669
  %0 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !10669
  %1 = bitcast %struct.device_attribute* %0 to i8*, !dbg !10669
  store i8* %1, i8** %__mptr, align 8, !dbg !10669
  br label %do.body, !dbg !10669

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10670

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10669
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !10669
  %3 = bitcast i8* %add.ptr to %struct.dev_ext_attribute*, !dbg !10669
  store %struct.dev_ext_attribute* %3, %struct.dev_ext_attribute** %tmp, align 8, !dbg !10670
  %4 = load %struct.dev_ext_attribute*, %struct.dev_ext_attribute** %tmp, align 8, !dbg !10669
  store %struct.dev_ext_attribute* %4, %struct.dev_ext_attribute** %ea, align 8, !dbg !10666
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10672, metadata !DIExpression()), !dbg !10673
  call void @llvm.dbg.declare(metadata i64* %new, metadata !10674, metadata !DIExpression()), !dbg !10675
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !10676
  %call = call i32 @kstrtol(i8* %5, i32 0, i64* %new) #10, !dbg !10677
  store i32 %call, i32* %ret, align 4, !dbg !10678
  %6 = load i32, i32* %ret, align 4, !dbg !10679
  %tobool = icmp ne i32 %6, 0, !dbg !10679
  br i1 %tobool, label %if.then, label %if.end, !dbg !10681

if.then:                                          ; preds = %do.end
  %7 = load i32, i32* %ret, align 4, !dbg !10682
  %conv = sext i32 %7 to i64, !dbg !10682
  store i64 %conv, i64* %retval, align 8, !dbg !10683
  br label %return, !dbg !10683

if.end:                                           ; preds = %do.end
  %8 = load i64, i64* %new, align 8, !dbg !10684
  %cmp = icmp sgt i64 %8, 2147483647, !dbg !10686
  br i1 %cmp, label %if.then4, label %lor.lhs.false, !dbg !10687

lor.lhs.false:                                    ; preds = %if.end
  %9 = load i64, i64* %new, align 8, !dbg !10688
  %cmp2 = icmp slt i64 %9, -2147483648, !dbg !10689
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !10690

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  store i64 -22, i64* %retval, align 8, !dbg !10691
  br label %return, !dbg !10691

if.end5:                                          ; preds = %lor.lhs.false
  %10 = load i64, i64* %new, align 8, !dbg !10692
  %conv6 = trunc i64 %10 to i32, !dbg !10692
  %11 = load %struct.dev_ext_attribute*, %struct.dev_ext_attribute** %ea, align 8, !dbg !10693
  %var = getelementptr inbounds %struct.dev_ext_attribute, %struct.dev_ext_attribute* %11, i32 0, i32 1, !dbg !10694
  %12 = load i8*, i8** %var, align 8, !dbg !10694
  %13 = bitcast i8* %12 to i32*, !dbg !10695
  store i32 %conv6, i32* %13, align 4, !dbg !10696
  %14 = load i64, i64* %size.addr, align 8, !dbg !10697
  store i64 %14, i64* %retval, align 8, !dbg !10698
  br label %return, !dbg !10698

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %15 = load i64, i64* %retval, align 8, !dbg !10699
  ret i64 %15, !dbg !10699
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kstrtol(i8* %s, i32 %base, i64* %res) #0 !dbg !10700 {
entry:
  %s.addr = alloca i8*, align 8
  %base.addr = alloca i32, align 4
  %res.addr = alloca i64*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !10704, metadata !DIExpression()), !dbg !10705
  store i32 %base, i32* %base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !10706, metadata !DIExpression()), !dbg !10707
  store i64* %res, i64** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %res.addr, metadata !10708, metadata !DIExpression()), !dbg !10709
  %0 = load i8*, i8** %s.addr, align 8, !dbg !10710
  %1 = load i32, i32* %base.addr, align 4, !dbg !10712
  %2 = load i64*, i64** %res.addr, align 8, !dbg !10713
  %call = call i32 @kstrtoll(i8* %0, i32 %1, i64* %2) #10, !dbg !10714
  ret i32 %call, !dbg !10715
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @device_show_int(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10716 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ea = alloca %struct.dev_ext_attribute*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_ext_attribute*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10717, metadata !DIExpression()), !dbg !10718
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10719, metadata !DIExpression()), !dbg !10720
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10721, metadata !DIExpression()), !dbg !10722
  call void @llvm.dbg.declare(metadata %struct.dev_ext_attribute** %ea, metadata !10723, metadata !DIExpression()), !dbg !10724
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10725, metadata !DIExpression()), !dbg !10727
  %0 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !10727
  %1 = bitcast %struct.device_attribute* %0 to i8*, !dbg !10727
  store i8* %1, i8** %__mptr, align 8, !dbg !10727
  br label %do.body, !dbg !10727

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10728

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10727
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !10727
  %3 = bitcast i8* %add.ptr to %struct.dev_ext_attribute*, !dbg !10727
  store %struct.dev_ext_attribute* %3, %struct.dev_ext_attribute** %tmp, align 8, !dbg !10728
  %4 = load %struct.dev_ext_attribute*, %struct.dev_ext_attribute** %tmp, align 8, !dbg !10727
  store %struct.dev_ext_attribute* %4, %struct.dev_ext_attribute** %ea, align 8, !dbg !10724
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !10730
  %6 = load %struct.dev_ext_attribute*, %struct.dev_ext_attribute** %ea, align 8, !dbg !10731
  %var = getelementptr inbounds %struct.dev_ext_attribute, %struct.dev_ext_attribute* %6, i32 0, i32 1, !dbg !10732
  %7 = load i8*, i8** %var, align 8, !dbg !10732
  %8 = bitcast i8* %7 to i32*, !dbg !10733
  %9 = load i32, i32* %8, align 4, !dbg !10734
  %call = call i32 (i8*, i8*, ...) @sysfs_emit(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i32 %9) #10, !dbg !10735
  %conv = sext i32 %call to i64, !dbg !10735
  ret i64 %conv, !dbg !10736
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @device_store_bool(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %size) #0 !dbg !10737 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %ea = alloca %struct.dev_ext_attribute*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_ext_attribute*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10738, metadata !DIExpression()), !dbg !10739
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10740, metadata !DIExpression()), !dbg !10741
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10742, metadata !DIExpression()), !dbg !10743
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10744, metadata !DIExpression()), !dbg !10745
  call void @llvm.dbg.declare(metadata %struct.dev_ext_attribute** %ea, metadata !10746, metadata !DIExpression()), !dbg !10747
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10748, metadata !DIExpression()), !dbg !10750
  %0 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !10750
  %1 = bitcast %struct.device_attribute* %0 to i8*, !dbg !10750
  store i8* %1, i8** %__mptr, align 8, !dbg !10750
  br label %do.body, !dbg !10750

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10751

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10750
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !10750
  %3 = bitcast i8* %add.ptr to %struct.dev_ext_attribute*, !dbg !10750
  store %struct.dev_ext_attribute* %3, %struct.dev_ext_attribute** %tmp, align 8, !dbg !10751
  %4 = load %struct.dev_ext_attribute*, %struct.dev_ext_attribute** %tmp, align 8, !dbg !10750
  store %struct.dev_ext_attribute* %4, %struct.dev_ext_attribute** %ea, align 8, !dbg !10747
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !10753
  %6 = load %struct.dev_ext_attribute*, %struct.dev_ext_attribute** %ea, align 8, !dbg !10755
  %var = getelementptr inbounds %struct.dev_ext_attribute, %struct.dev_ext_attribute* %6, i32 0, i32 1, !dbg !10756
  %7 = load i8*, i8** %var, align 8, !dbg !10756
  %call = call i32 @strtobool(i8* %5, i8* %7) #10, !dbg !10757
  %cmp = icmp slt i32 %call, 0, !dbg !10758
  br i1 %cmp, label %if.then, label %if.end, !dbg !10759

if.then:                                          ; preds = %do.end
  store i64 -22, i64* %retval, align 8, !dbg !10760
  br label %return, !dbg !10760

if.end:                                           ; preds = %do.end
  %8 = load i64, i64* %size.addr, align 8, !dbg !10761
  store i64 %8, i64* %retval, align 8, !dbg !10762
  br label %return, !dbg !10762

return:                                           ; preds = %if.end, %if.then
  %9 = load i64, i64* %retval, align 8, !dbg !10763
  ret i64 %9, !dbg !10763
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @strtobool(i8* %s, i8* %res) #0 !dbg !10764 {
entry:
  %s.addr = alloca i8*, align 8
  %res.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !10768, metadata !DIExpression()), !dbg !10769
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !10770, metadata !DIExpression()), !dbg !10771
  %0 = load i8*, i8** %s.addr, align 8, !dbg !10772
  %1 = load i8*, i8** %res.addr, align 8, !dbg !10773
  %call = call i32 @kstrtobool(i8* %0, i8* %1) #10, !dbg !10774
  ret i32 %call, !dbg !10775
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @device_show_bool(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10776 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ea = alloca %struct.dev_ext_attribute*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_ext_attribute*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10777, metadata !DIExpression()), !dbg !10778
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10779, metadata !DIExpression()), !dbg !10780
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10781, metadata !DIExpression()), !dbg !10782
  call void @llvm.dbg.declare(metadata %struct.dev_ext_attribute** %ea, metadata !10783, metadata !DIExpression()), !dbg !10784
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10785, metadata !DIExpression()), !dbg !10787
  %0 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !10787
  %1 = bitcast %struct.device_attribute* %0 to i8*, !dbg !10787
  store i8* %1, i8** %__mptr, align 8, !dbg !10787
  br label %do.body, !dbg !10787

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10788

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10787
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !10787
  %3 = bitcast i8* %add.ptr to %struct.dev_ext_attribute*, !dbg !10787
  store %struct.dev_ext_attribute* %3, %struct.dev_ext_attribute** %tmp, align 8, !dbg !10788
  %4 = load %struct.dev_ext_attribute*, %struct.dev_ext_attribute** %tmp, align 8, !dbg !10787
  store %struct.dev_ext_attribute* %4, %struct.dev_ext_attribute** %ea, align 8, !dbg !10784
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !10790
  %6 = load %struct.dev_ext_attribute*, %struct.dev_ext_attribute** %ea, align 8, !dbg !10791
  %var = getelementptr inbounds %struct.dev_ext_attribute, %struct.dev_ext_attribute* %6, i32 0, i32 1, !dbg !10792
  %7 = load i8*, i8** %var, align 8, !dbg !10792
  %8 = load i8, i8* %7, align 1, !dbg !10793
  %tobool = trunc i8 %8 to i1, !dbg !10793
  %conv = zext i1 %tobool to i32, !dbg !10793
  %call = call i32 (i8*, i8*, ...) @sysfs_emit(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i32 %conv) #10, !dbg !10794
  %conv1 = sext i32 %call to i64, !dbg !10794
  ret i64 %conv1, !dbg !10795
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @device_add_groups(%struct.device* %dev, %struct.attribute_group** %groups) #0 !dbg !10796 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %groups.addr = alloca %struct.attribute_group**, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10799, metadata !DIExpression()), !dbg !10800
  store %struct.attribute_group** %groups, %struct.attribute_group*** %groups.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute_group*** %groups.addr, metadata !10801, metadata !DIExpression()), !dbg !10802
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10803
  %kobj = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !10804
  %1 = load %struct.attribute_group**, %struct.attribute_group*** %groups.addr, align 8, !dbg !10805
  %call = call i32 @sysfs_create_groups(%struct.kobject* %kobj, %struct.attribute_group** %1) #10, !dbg !10806
  ret i32 %call, !dbg !10807
}

; Function Attrs: noredzone
declare dso_local i32 @sysfs_create_groups(%struct.kobject*, %struct.attribute_group**) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @device_remove_groups(%struct.device* %dev, %struct.attribute_group** %groups) #0 !dbg !10808 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %groups.addr = alloca %struct.attribute_group**, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10811, metadata !DIExpression()), !dbg !10812
  store %struct.attribute_group** %groups, %struct.attribute_group*** %groups.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute_group*** %groups.addr, metadata !10813, metadata !DIExpression()), !dbg !10814
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10815
  %kobj = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !10816
  %1 = load %struct.attribute_group**, %struct.attribute_group*** %groups.addr, align 8, !dbg !10817
  call void @sysfs_remove_groups(%struct.kobject* %kobj, %struct.attribute_group** %1) #10, !dbg !10818
  ret void, !dbg !10819
}

; Function Attrs: noredzone
declare dso_local void @sysfs_remove_groups(%struct.kobject*, %struct.attribute_group**) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @devm_device_add_group(%struct.device* %dev, %struct.attribute_group* %grp) #0 !dbg !10820 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %grp.addr = alloca %struct.attribute_group*, align 8
  %devres = alloca %union.device_attr_group_devres*, align 8
  %error = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10823, metadata !DIExpression()), !dbg !10824
  store %struct.attribute_group* %grp, %struct.attribute_group** %grp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute_group** %grp.addr, metadata !10825, metadata !DIExpression()), !dbg !10826
  call void @llvm.dbg.declare(metadata %union.device_attr_group_devres** %devres, metadata !10827, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.declare(metadata i32* %error, metadata !10829, metadata !DIExpression()), !dbg !10830
  %call = call i8* @devres_alloc(void (%struct.device*, i8*)* @devm_attr_group_remove, i64 8, i32 3264) #10, !dbg !10831
  %0 = bitcast i8* %call to %union.device_attr_group_devres*, !dbg !10831
  store %union.device_attr_group_devres* %0, %union.device_attr_group_devres** %devres, align 8, !dbg !10832
  %1 = load %union.device_attr_group_devres*, %union.device_attr_group_devres** %devres, align 8, !dbg !10833
  %tobool = icmp ne %union.device_attr_group_devres* %1, null, !dbg !10833
  br i1 %tobool, label %if.end, label %if.then, !dbg !10835

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !10836
  br label %return, !dbg !10836

if.end:                                           ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10837
  %kobj = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 0, !dbg !10838
  %3 = load %struct.attribute_group*, %struct.attribute_group** %grp.addr, align 8, !dbg !10839
  %call1 = call i32 @sysfs_create_group(%struct.kobject* %kobj, %struct.attribute_group* %3) #10, !dbg !10840
  store i32 %call1, i32* %error, align 4, !dbg !10841
  %4 = load i32, i32* %error, align 4, !dbg !10842
  %tobool2 = icmp ne i32 %4, 0, !dbg !10842
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !10844

if.then3:                                         ; preds = %if.end
  %5 = load %union.device_attr_group_devres*, %union.device_attr_group_devres** %devres, align 8, !dbg !10845
  %6 = bitcast %union.device_attr_group_devres* %5 to i8*, !dbg !10845
  call void @devres_free(i8* %6) #10, !dbg !10847
  %7 = load i32, i32* %error, align 4, !dbg !10848
  store i32 %7, i32* %retval, align 4, !dbg !10849
  br label %return, !dbg !10849

if.end4:                                          ; preds = %if.end
  %8 = load %struct.attribute_group*, %struct.attribute_group** %grp.addr, align 8, !dbg !10850
  %9 = load %union.device_attr_group_devres*, %union.device_attr_group_devres** %devres, align 8, !dbg !10851
  %group = bitcast %union.device_attr_group_devres* %9 to %struct.attribute_group**, !dbg !10852
  store %struct.attribute_group* %8, %struct.attribute_group** %group, align 8, !dbg !10853
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10854
  %11 = load %union.device_attr_group_devres*, %union.device_attr_group_devres** %devres, align 8, !dbg !10855
  %12 = bitcast %union.device_attr_group_devres* %11 to i8*, !dbg !10855
  call void @devres_add(%struct.device* %10, i8* %12) #10, !dbg !10856
  store i32 0, i32* %retval, align 4, !dbg !10857
  br label %return, !dbg !10857

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !10858
  ret i32 %13, !dbg !10858
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devres_alloc(void (%struct.device*, i8*)* %release, i64 %size, i32 %gfp) #0 !dbg !10859 {
entry:
  %release.addr = alloca void (%struct.device*, i8*)*, align 8
  %size.addr = alloca i64, align 8
  %gfp.addr = alloca i32, align 4
  store void (%struct.device*, i8*)* %release, void (%struct.device*, i8*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.device*, i8*)** %release.addr, metadata !10866, metadata !DIExpression()), !dbg !10867
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10868, metadata !DIExpression()), !dbg !10869
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !10870, metadata !DIExpression()), !dbg !10871
  %0 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %release.addr, align 8, !dbg !10872
  %1 = load i64, i64* %size.addr, align 8, !dbg !10873
  %2 = load i32, i32* %gfp.addr, align 4, !dbg !10874
  %call = call noalias i8* @devres_alloc_node(void (%struct.device*, i8*)* %0, i64 %1, i32 %2, i32 -1) #10, !dbg !10875
  ret i8* %call, !dbg !10876
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @devm_attr_group_remove(%struct.device* %dev, i8* %res) #0 !dbg !10877 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  %devres = alloca %union.device_attr_group_devres*, align 8
  %group = alloca %struct.attribute_group*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10878, metadata !DIExpression()), !dbg !10879
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !10880, metadata !DIExpression()), !dbg !10881
  call void @llvm.dbg.declare(metadata %union.device_attr_group_devres** %devres, metadata !10882, metadata !DIExpression()), !dbg !10883
  %0 = load i8*, i8** %res.addr, align 8, !dbg !10884
  %1 = bitcast i8* %0 to %union.device_attr_group_devres*, !dbg !10884
  store %union.device_attr_group_devres* %1, %union.device_attr_group_devres** %devres, align 8, !dbg !10883
  call void @llvm.dbg.declare(metadata %struct.attribute_group** %group, metadata !10885, metadata !DIExpression()), !dbg !10886
  %2 = load %union.device_attr_group_devres*, %union.device_attr_group_devres** %devres, align 8, !dbg !10887
  %group1 = bitcast %union.device_attr_group_devres* %2 to %struct.attribute_group**, !dbg !10888
  %3 = load %struct.attribute_group*, %struct.attribute_group** %group1, align 8, !dbg !10888
  store %struct.attribute_group* %3, %struct.attribute_group** %group, align 8, !dbg !10886
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10889
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !10890
  %5 = load %struct.attribute_group*, %struct.attribute_group** %group, align 8, !dbg !10891
  call void @sysfs_remove_group(%struct.kobject* %kobj, %struct.attribute_group* %5) #10, !dbg !10892
  ret void, !dbg !10893
}

; Function Attrs: noredzone
declare dso_local i32 @sysfs_create_group(%struct.kobject*, %struct.attribute_group*) #2

; Function Attrs: noredzone
declare dso_local void @devres_free(i8*) #2

; Function Attrs: noredzone
declare dso_local void @devres_add(%struct.device*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @devm_device_remove_group(%struct.device* %dev, %struct.attribute_group* %grp) #0 !dbg !10894 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %grp.addr = alloca %struct.attribute_group*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10897, metadata !DIExpression()), !dbg !10898
  store %struct.attribute_group* %grp, %struct.attribute_group** %grp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute_group** %grp.addr, metadata !10899, metadata !DIExpression()), !dbg !10900
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10901, metadata !DIExpression()), !dbg !10903
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10903
  %1 = load %struct.attribute_group*, %struct.attribute_group** %grp.addr, align 8, !dbg !10903
  %2 = bitcast %struct.attribute_group* %1 to i8*, !dbg !10903
  %call = call i32 @devres_release(%struct.device* %0, void (%struct.device*, i8*)* @devm_attr_group_remove, i32 (%struct.device*, i8*, i8*)* @devm_attr_group_match, i8* %2) #10, !dbg !10903
  %tobool = icmp ne i32 %call, 0, !dbg !10903
  %lnot = xor i1 %tobool, true, !dbg !10903
  %lnot1 = xor i1 %lnot, true, !dbg !10903
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10903
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !10903
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !10904
  %tobool2 = icmp ne i32 %3, 0, !dbg !10904
  %lnot3 = xor i1 %tobool2, true, !dbg !10904
  %lnot5 = xor i1 %lnot3, true, !dbg !10904
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !10904
  %conv = sext i32 %lnot.ext6 to i64, !dbg !10904
  %tobool7 = icmp ne i64 %conv, 0, !dbg !10904
  br i1 %tobool7, label %if.then, label %if.end, !dbg !10903

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !10904

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !10906

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !10908

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !10906

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 2114, i32 2305, i64 12) #5, !dbg !10910, !srcloc !10912
  br label %do.end10, !dbg !10910

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 423) #5, !dbg !10913, !srcloc !10915
  br label %do.body11, !dbg !10906

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !10916

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !10906

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !10906

if.end:                                           ; preds = %do.end13, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !10903
  %tobool14 = icmp ne i32 %4, 0, !dbg !10903
  %lnot15 = xor i1 %tobool14, true, !dbg !10903
  %lnot17 = xor i1 %lnot15, true, !dbg !10903
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !10903
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !10903
  store i64 %conv19, i64* %tmp, align 8, !dbg !10904
  %5 = load i64, i64* %tmp, align 8, !dbg !10903
  ret void, !dbg !10918
}

; Function Attrs: noredzone
declare dso_local i32 @devres_release(%struct.device*, void (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devm_attr_group_match(%struct.device* %dev, i8* %res, i8* %data) #0 !dbg !10919 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10922, metadata !DIExpression()), !dbg !10923
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !10924, metadata !DIExpression()), !dbg !10925
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10926, metadata !DIExpression()), !dbg !10927
  %0 = load i8*, i8** %res.addr, align 8, !dbg !10928
  %1 = bitcast i8* %0 to %union.device_attr_group_devres*, !dbg !10929
  %group = bitcast %union.device_attr_group_devres* %1 to %struct.attribute_group**, !dbg !10930
  %2 = load %struct.attribute_group*, %struct.attribute_group** %group, align 8, !dbg !10930
  %3 = load i8*, i8** %data.addr, align 8, !dbg !10931
  %4 = bitcast i8* %3 to %struct.attribute_group*, !dbg !10931
  %cmp = icmp eq %struct.attribute_group* %2, %4, !dbg !10932
  %conv = zext i1 %cmp to i32, !dbg !10932
  ret i32 %conv, !dbg !10933
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @devm_device_add_groups(%struct.device* %dev, %struct.attribute_group** %groups) #0 !dbg !10934 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %groups.addr = alloca %struct.attribute_group**, align 8
  %devres = alloca %union.device_attr_group_devres*, align 8
  %error = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10935, metadata !DIExpression()), !dbg !10936
  store %struct.attribute_group** %groups, %struct.attribute_group*** %groups.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute_group*** %groups.addr, metadata !10937, metadata !DIExpression()), !dbg !10938
  call void @llvm.dbg.declare(metadata %union.device_attr_group_devres** %devres, metadata !10939, metadata !DIExpression()), !dbg !10940
  call void @llvm.dbg.declare(metadata i32* %error, metadata !10941, metadata !DIExpression()), !dbg !10942
  %call = call i8* @devres_alloc(void (%struct.device*, i8*)* @devm_attr_groups_remove, i64 8, i32 3264) #10, !dbg !10943
  %0 = bitcast i8* %call to %union.device_attr_group_devres*, !dbg !10943
  store %union.device_attr_group_devres* %0, %union.device_attr_group_devres** %devres, align 8, !dbg !10944
  %1 = load %union.device_attr_group_devres*, %union.device_attr_group_devres** %devres, align 8, !dbg !10945
  %tobool = icmp ne %union.device_attr_group_devres* %1, null, !dbg !10945
  br i1 %tobool, label %if.end, label %if.then, !dbg !10947

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !10948
  br label %return, !dbg !10948

if.end:                                           ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10949
  %kobj = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 0, !dbg !10950
  %3 = load %struct.attribute_group**, %struct.attribute_group*** %groups.addr, align 8, !dbg !10951
  %call1 = call i32 @sysfs_create_groups(%struct.kobject* %kobj, %struct.attribute_group** %3) #10, !dbg !10952
  store i32 %call1, i32* %error, align 4, !dbg !10953
  %4 = load i32, i32* %error, align 4, !dbg !10954
  %tobool2 = icmp ne i32 %4, 0, !dbg !10954
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !10956

if.then3:                                         ; preds = %if.end
  %5 = load %union.device_attr_group_devres*, %union.device_attr_group_devres** %devres, align 8, !dbg !10957
  %6 = bitcast %union.device_attr_group_devres* %5 to i8*, !dbg !10957
  call void @devres_free(i8* %6) #10, !dbg !10959
  %7 = load i32, i32* %error, align 4, !dbg !10960
  store i32 %7, i32* %retval, align 4, !dbg !10961
  br label %return, !dbg !10961

if.end4:                                          ; preds = %if.end
  %8 = load %struct.attribute_group**, %struct.attribute_group*** %groups.addr, align 8, !dbg !10962
  %9 = load %union.device_attr_group_devres*, %union.device_attr_group_devres** %devres, align 8, !dbg !10963
  %groups5 = bitcast %union.device_attr_group_devres* %9 to %struct.attribute_group***, !dbg !10964
  store %struct.attribute_group** %8, %struct.attribute_group*** %groups5, align 8, !dbg !10965
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10966
  %11 = load %union.device_attr_group_devres*, %union.device_attr_group_devres** %devres, align 8, !dbg !10967
  %12 = bitcast %union.device_attr_group_devres* %11 to i8*, !dbg !10967
  call void @devres_add(%struct.device* %10, i8* %12) #10, !dbg !10968
  store i32 0, i32* %retval, align 4, !dbg !10969
  br label %return, !dbg !10969

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !10970
  ret i32 %13, !dbg !10970
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @devm_attr_groups_remove(%struct.device* %dev, i8* %res) #0 !dbg !10971 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  %devres = alloca %union.device_attr_group_devres*, align 8
  %groups = alloca %struct.attribute_group**, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10972, metadata !DIExpression()), !dbg !10973
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !10974, metadata !DIExpression()), !dbg !10975
  call void @llvm.dbg.declare(metadata %union.device_attr_group_devres** %devres, metadata !10976, metadata !DIExpression()), !dbg !10977
  %0 = load i8*, i8** %res.addr, align 8, !dbg !10978
  %1 = bitcast i8* %0 to %union.device_attr_group_devres*, !dbg !10978
  store %union.device_attr_group_devres* %1, %union.device_attr_group_devres** %devres, align 8, !dbg !10977
  call void @llvm.dbg.declare(metadata %struct.attribute_group*** %groups, metadata !10979, metadata !DIExpression()), !dbg !10980
  %2 = load %union.device_attr_group_devres*, %union.device_attr_group_devres** %devres, align 8, !dbg !10981
  %groups1 = bitcast %union.device_attr_group_devres* %2 to %struct.attribute_group***, !dbg !10982
  %3 = load %struct.attribute_group**, %struct.attribute_group*** %groups1, align 8, !dbg !10982
  store %struct.attribute_group** %3, %struct.attribute_group*** %groups, align 8, !dbg !10980
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10983
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !10984
  %5 = load %struct.attribute_group**, %struct.attribute_group*** %groups, align 8, !dbg !10985
  call void @sysfs_remove_groups(%struct.kobject* %kobj, %struct.attribute_group** %5) #10, !dbg !10986
  ret void, !dbg !10987
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @devm_device_remove_groups(%struct.device* %dev, %struct.attribute_group** %groups) #0 !dbg !10988 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %groups.addr = alloca %struct.attribute_group**, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10989, metadata !DIExpression()), !dbg !10990
  store %struct.attribute_group** %groups, %struct.attribute_group*** %groups.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute_group*** %groups.addr, metadata !10991, metadata !DIExpression()), !dbg !10992
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10993, metadata !DIExpression()), !dbg !10995
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10995
  %1 = load %struct.attribute_group**, %struct.attribute_group*** %groups.addr, align 8, !dbg !10995
  %2 = bitcast %struct.attribute_group** %1 to i8*, !dbg !10995
  %call = call i32 @devres_release(%struct.device* %0, void (%struct.device*, i8*)* @devm_attr_groups_remove, i32 (%struct.device*, i8*, i8*)* @devm_attr_group_match, i8* %2) #10, !dbg !10995
  %tobool = icmp ne i32 %call, 0, !dbg !10995
  %lnot = xor i1 %tobool, true, !dbg !10995
  %lnot1 = xor i1 %lnot, true, !dbg !10995
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10995
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !10995
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !10996
  %tobool2 = icmp ne i32 %3, 0, !dbg !10996
  %lnot3 = xor i1 %tobool2, true, !dbg !10996
  %lnot5 = xor i1 %lnot3, true, !dbg !10996
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !10996
  %conv = sext i32 %lnot.ext6 to i64, !dbg !10996
  %tobool7 = icmp ne i64 %conv, 0, !dbg !10996
  br i1 %tobool7, label %if.then, label %if.end, !dbg !10995

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !10996

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !10998

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !11000

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !10998

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 2167, i32 2305, i64 12) #5, !dbg !11002, !srcloc !11004
  br label %do.end10, !dbg !11002

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 424) #5, !dbg !11005, !srcloc !11007
  br label %do.body11, !dbg !10998

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !11008

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !10998

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !10998

if.end:                                           ; preds = %do.end13, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !10995
  %tobool14 = icmp ne i32 %4, 0, !dbg !10995
  %lnot15 = xor i1 %tobool14, true, !dbg !10995
  %lnot17 = xor i1 %lnot15, true, !dbg !10995
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !10995
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !10995
  store i64 %conv19, i64* %tmp, align 8, !dbg !10996
  %5 = load i64, i64* %tmp, align 8, !dbg !10995
  ret void, !dbg !11010
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @devices_kset_move_last(%struct.device* %dev) #0 !dbg !11011 {
entry:
  %lock.addr.i3 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i3, metadata !11012, metadata !DIExpression()), !dbg !11017
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11019, metadata !DIExpression()), !dbg !11021
  %dev.addr = alloca %struct.device*, align 8
  %tmp = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11023, metadata !DIExpression()), !dbg !11024
  %0 = load %struct.kset*, %struct.kset** @devices_kset, align 8, !dbg !11025
  %tobool = icmp ne %struct.kset* %0, null, !dbg !11025
  br i1 %tobool, label %if.end, label %if.then, !dbg !11027

if.then:                                          ; preds = %entry
  br label %return, !dbg !11028

if.end:                                           ; preds = %entry
  store i32 0, i32* %tmp, align 4, !dbg !11029
  %1 = load i32, i32* %tmp, align 4, !dbg !11032
  %2 = load %struct.kset*, %struct.kset** @devices_kset, align 8, !dbg !11033
  %list_lock = getelementptr inbounds %struct.kset, %struct.kset* %2, i32 0, i32 1, !dbg !11034
  store %struct.spinlock* %list_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !11035, !srcloc !11037
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11038
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !11038
  %rlock.i = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !11038
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11040
  %kobj = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 0, !dbg !11041
  %entry1 = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj, i32 0, i32 1, !dbg !11042
  %6 = load %struct.kset*, %struct.kset** @devices_kset, align 8, !dbg !11043
  %list = getelementptr inbounds %struct.kset, %struct.kset* %6, i32 0, i32 0, !dbg !11044
  call void @list_move_tail(%struct.list_head* %entry1, %struct.list_head* %list) #10, !dbg !11045
  %7 = load %struct.kset*, %struct.kset** @devices_kset, align 8, !dbg !11046
  %list_lock2 = getelementptr inbounds %struct.kset, %struct.kset* %7, i32 0, i32 1, !dbg !11047
  store %struct.spinlock* %list_lock2, %struct.spinlock** %lock.addr.i3, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !11048, !srcloc !11050
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i3, align 8, !dbg !11051
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !11051
  %rlock.i4 = bitcast %union.anon.1* %9 to %struct.raw_spinlock*, !dbg !11051
  br label %return, !dbg !11053

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !11053
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_move_tail(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !11054 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !11055, metadata !DIExpression()), !dbg !11056
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !11057, metadata !DIExpression()), !dbg !11058
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11059
  call void @__list_del_entry(%struct.list_head* %0) #10, !dbg !11060
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11061
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11062
  call void @list_add_tail(%struct.list_head* %1, %struct.list_head* %2) #10, !dbg !11063
  ret void, !dbg !11064
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @device_create_file(%struct.device* %dev, %struct.device_attribute* %attr) #0 !dbg !11065 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %error = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on33 = alloca i32, align 4
  %tmp73 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11068, metadata !DIExpression()), !dbg !11069
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11070, metadata !DIExpression()), !dbg !11071
  call void @llvm.dbg.declare(metadata i32* %error, metadata !11072, metadata !DIExpression()), !dbg !11073
  store i32 0, i32* %error, align 4, !dbg !11073
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11074
  %tobool = icmp ne %struct.device* %0, null, !dbg !11074
  br i1 %tobool, label %if.then, label %if.end81, !dbg !11076

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11077, metadata !DIExpression()), !dbg !11080
  %1 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !11080
  %attr1 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %1, i32 0, i32 0, !dbg !11080
  %mode = getelementptr inbounds %struct.attribute, %struct.attribute* %attr1, i32 0, i32 1, !dbg !11080
  %2 = load i16, i16* %mode, align 8, !dbg !11080
  %conv = zext i16 %2 to i32, !dbg !11080
  %and = and i32 %conv, 146, !dbg !11080
  %tobool2 = icmp ne i32 %and, 0, !dbg !11080
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !11080

land.rhs:                                         ; preds = %if.then
  %3 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !11080
  %store = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %3, i32 0, i32 2, !dbg !11080
  %4 = load i64 (%struct.device*, %struct.device_attribute*, i8*, i64)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store, align 8, !dbg !11080
  %tobool3 = icmp ne i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* %4, null, !dbg !11080
  %lnot = xor i1 %tobool3, true, !dbg !11080
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then
  %5 = phi i1 [ false, %if.then ], [ %lnot, %land.rhs ], !dbg !11081
  %lnot4 = xor i1 %5, true, !dbg !11080
  %lnot5 = xor i1 %lnot4, true, !dbg !11080
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !11080
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !11080
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !11082
  %tobool6 = icmp ne i32 %6, 0, !dbg !11082
  %lnot7 = xor i1 %tobool6, true, !dbg !11082
  %lnot9 = xor i1 %lnot7, true, !dbg !11082
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !11082
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !11082
  %tobool12 = icmp ne i64 %conv11, 0, !dbg !11082
  br i1 %tobool12, label %if.then13, label %if.end, !dbg !11080

if.then13:                                        ; preds = %land.end
  br label %do.body, !dbg !11082

do.body:                                          ; preds = %if.then13
  br label %do.body14, !dbg !11084

do.body14:                                        ; preds = %do.body
  br label %do.end, !dbg !11086

do.end:                                           ; preds = %do.body14
  %7 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !11084
  %attr15 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %7, i32 0, i32 0, !dbg !11084
  %name = getelementptr inbounds %struct.attribute, %struct.attribute* %attr15, i32 0, i32 0, !dbg !11084
  %8 = load i8*, i8** %name, align 8, !dbg !11084
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.7, i64 0, i64 0), i8* %8) #10, !dbg !11084
  br label %do.body16, !dbg !11084

do.body16:                                        ; preds = %do.end
  br label %do.body17, !dbg !11088

do.body17:                                        ; preds = %do.body16
  br label %do.end18, !dbg !11090

do.end18:                                         ; preds = %do.body17
  br label %do.body19, !dbg !11088

do.body19:                                        ; preds = %do.end18
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 2306, i32 2313, i64 12) #5, !dbg !11092, !srcloc !11094
  br label %do.end20, !dbg !11092

do.end20:                                         ; preds = %do.body19
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 425) #5, !dbg !11095, !srcloc !11097
  br label %do.body21, !dbg !11088

do.body21:                                        ; preds = %do.end20
  br label %do.end22, !dbg !11098

do.end22:                                         ; preds = %do.body21
  br label %do.end23, !dbg !11088

do.end23:                                         ; preds = %do.end22
  br label %do.body24, !dbg !11084

do.body24:                                        ; preds = %do.end23
  br label %do.end25, !dbg !11100

do.end25:                                         ; preds = %do.body24
  br label %do.end26, !dbg !11084

do.end26:                                         ; preds = %do.end25
  br label %if.end, !dbg !11084

if.end:                                           ; preds = %do.end26, %land.end
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !11080
  %tobool27 = icmp ne i32 %9, 0, !dbg !11080
  %lnot28 = xor i1 %tobool27, true, !dbg !11080
  %lnot30 = xor i1 %lnot28, true, !dbg !11080
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !11080
  %conv32 = sext i32 %lnot.ext31 to i64, !dbg !11080
  store i64 %conv32, i64* %tmp, align 8, !dbg !11082
  %10 = load i64, i64* %tmp, align 8, !dbg !11080
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on33, metadata !11102, metadata !DIExpression()), !dbg !11104
  %11 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !11104
  %attr34 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %11, i32 0, i32 0, !dbg !11104
  %mode35 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr34, i32 0, i32 1, !dbg !11104
  %12 = load i16, i16* %mode35, align 8, !dbg !11104
  %conv36 = zext i16 %12 to i32, !dbg !11104
  %and37 = and i32 %conv36, 292, !dbg !11104
  %tobool38 = icmp ne i32 %and37, 0, !dbg !11104
  br i1 %tobool38, label %land.rhs39, label %land.end43, !dbg !11104

land.rhs39:                                       ; preds = %if.end
  %13 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !11104
  %show = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %13, i32 0, i32 1, !dbg !11104
  %14 = load i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show, align 8, !dbg !11104
  %tobool40 = icmp ne i64 (%struct.device*, %struct.device_attribute*, i8*)* %14, null, !dbg !11104
  %lnot41 = xor i1 %tobool40, true, !dbg !11104
  br label %land.end43

land.end43:                                       ; preds = %land.rhs39, %if.end
  %15 = phi i1 [ false, %if.end ], [ %lnot41, %land.rhs39 ], !dbg !11105
  %lnot44 = xor i1 %15, true, !dbg !11104
  %lnot46 = xor i1 %lnot44, true, !dbg !11104
  %lnot.ext47 = zext i1 %lnot46 to i32, !dbg !11104
  store i32 %lnot.ext47, i32* %__ret_warn_on33, align 4, !dbg !11104
  %16 = load i32, i32* %__ret_warn_on33, align 4, !dbg !11106
  %tobool48 = icmp ne i32 %16, 0, !dbg !11106
  %lnot49 = xor i1 %tobool48, true, !dbg !11106
  %lnot51 = xor i1 %lnot49, true, !dbg !11106
  %lnot.ext52 = zext i1 %lnot51 to i32, !dbg !11106
  %conv53 = sext i32 %lnot.ext52 to i64, !dbg !11106
  %tobool54 = icmp ne i64 %conv53, 0, !dbg !11106
  br i1 %tobool54, label %if.then55, label %if.end72, !dbg !11104

if.then55:                                        ; preds = %land.end43
  br label %do.body56, !dbg !11106

do.body56:                                        ; preds = %if.then55
  br label %do.body57, !dbg !11108

do.body57:                                        ; preds = %do.body56
  br label %do.end58, !dbg !11110

do.end58:                                         ; preds = %do.body57
  %17 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !11108
  %attr59 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %17, i32 0, i32 0, !dbg !11108
  %name60 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr59, i32 0, i32 0, !dbg !11108
  %18 = load i8*, i8** %name60, align 8, !dbg !11108
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.8, i64 0, i64 0), i8* %18) #10, !dbg !11108
  br label %do.body61, !dbg !11108

do.body61:                                        ; preds = %do.end58
  br label %do.body62, !dbg !11112

do.body62:                                        ; preds = %do.body61
  br label %do.end63, !dbg !11114

do.end63:                                         ; preds = %do.body62
  br label %do.body64, !dbg !11112

do.body64:                                        ; preds = %do.end63
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 2309, i32 2313, i64 12) #5, !dbg !11116, !srcloc !11118
  br label %do.end65, !dbg !11116

do.end65:                                         ; preds = %do.body64
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 426) #5, !dbg !11119, !srcloc !11121
  br label %do.body66, !dbg !11112

do.body66:                                        ; preds = %do.end65
  br label %do.end67, !dbg !11122

do.end67:                                         ; preds = %do.body66
  br label %do.end68, !dbg !11112

do.end68:                                         ; preds = %do.end67
  br label %do.body69, !dbg !11108

do.body69:                                        ; preds = %do.end68
  br label %do.end70, !dbg !11124

do.end70:                                         ; preds = %do.body69
  br label %do.end71, !dbg !11108

do.end71:                                         ; preds = %do.end70
  br label %if.end72, !dbg !11108

if.end72:                                         ; preds = %do.end71, %land.end43
  %19 = load i32, i32* %__ret_warn_on33, align 4, !dbg !11104
  %tobool74 = icmp ne i32 %19, 0, !dbg !11104
  %lnot75 = xor i1 %tobool74, true, !dbg !11104
  %lnot77 = xor i1 %lnot75, true, !dbg !11104
  %lnot.ext78 = zext i1 %lnot77 to i32, !dbg !11104
  %conv79 = sext i32 %lnot.ext78 to i64, !dbg !11104
  store i64 %conv79, i64* %tmp73, align 8, !dbg !11106
  %20 = load i64, i64* %tmp73, align 8, !dbg !11104
  %21 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11126
  %kobj = getelementptr inbounds %struct.device, %struct.device* %21, i32 0, i32 0, !dbg !11127
  %22 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !11128
  %attr80 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %22, i32 0, i32 0, !dbg !11129
  %call = call i32 @sysfs_create_file(%struct.kobject* %kobj, %struct.attribute* %attr80) #10, !dbg !11130
  store i32 %call, i32* %error, align 4, !dbg !11131
  br label %if.end81, !dbg !11132

if.end81:                                         ; preds = %if.end72, %entry
  %23 = load i32, i32* %error, align 4, !dbg !11133
  ret i32 %23, !dbg !11134
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sysfs_create_file(%struct.kobject* %kobj, %struct.attribute* %attr) #0 !dbg !11135 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  %attr.addr = alloca %struct.attribute*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !11140, metadata !DIExpression()), !dbg !11141
  store %struct.attribute* %attr, %struct.attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute** %attr.addr, metadata !11142, metadata !DIExpression()), !dbg !11143
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !11144
  %1 = load %struct.attribute*, %struct.attribute** %attr.addr, align 8, !dbg !11145
  %call = call i32 @sysfs_create_file_ns(%struct.kobject* %0, %struct.attribute* %1, i8* null) #10, !dbg !11146
  ret i32 %call, !dbg !11147
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sysfs_remove_file(%struct.kobject* %kobj, %struct.attribute* %attr) #0 !dbg !11148 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  %attr.addr = alloca %struct.attribute*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !11151, metadata !DIExpression()), !dbg !11152
  store %struct.attribute* %attr, %struct.attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute** %attr.addr, metadata !11153, metadata !DIExpression()), !dbg !11154
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !11155
  %1 = load %struct.attribute*, %struct.attribute** %attr.addr, align 8, !dbg !11156
  call void @sysfs_remove_file_ns(%struct.kobject* %0, %struct.attribute* %1, i8* null) #10, !dbg !11157
  ret void, !dbg !11158
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @device_remove_file_self(%struct.device* %dev, %struct.device_attribute* %attr) #0 !dbg !11159 {
entry:
  %retval = alloca i1, align 1
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11162, metadata !DIExpression()), !dbg !11163
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11164, metadata !DIExpression()), !dbg !11165
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11166
  %tobool = icmp ne %struct.device* %0, null, !dbg !11166
  br i1 %tobool, label %if.then, label %if.else, !dbg !11168

if.then:                                          ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11169
  %kobj = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 0, !dbg !11170
  %2 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !11171
  %attr1 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %2, i32 0, i32 0, !dbg !11172
  %call = call zeroext i1 @sysfs_remove_file_self(%struct.kobject* %kobj, %struct.attribute* %attr1) #10, !dbg !11173
  store i1 %call, i1* %retval, align 1, !dbg !11174
  br label %return, !dbg !11174

if.else:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11175
  br label %return, !dbg !11175

return:                                           ; preds = %if.else, %if.then
  %3 = load i1, i1* %retval, align 1, !dbg !11176
  ret i1 %3, !dbg !11176
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @sysfs_remove_file_self(%struct.kobject*, %struct.attribute*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @device_create_bin_file(%struct.device* %dev, %struct.bin_attribute* %attr) #0 !dbg !11177 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.bin_attribute*, align 8
  %error = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11182, metadata !DIExpression()), !dbg !11183
  store %struct.bin_attribute* %attr, %struct.bin_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bin_attribute** %attr.addr, metadata !11184, metadata !DIExpression()), !dbg !11185
  call void @llvm.dbg.declare(metadata i32* %error, metadata !11186, metadata !DIExpression()), !dbg !11187
  store i32 -22, i32* %error, align 4, !dbg !11187
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11188
  %tobool = icmp ne %struct.device* %0, null, !dbg !11188
  br i1 %tobool, label %if.then, label %if.end, !dbg !11190

if.then:                                          ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11191
  %kobj = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 0, !dbg !11192
  %2 = load %struct.bin_attribute*, %struct.bin_attribute** %attr.addr, align 8, !dbg !11193
  %call = call i32 @sysfs_create_bin_file(%struct.kobject* %kobj, %struct.bin_attribute* %2) #10, !dbg !11194
  store i32 %call, i32* %error, align 4, !dbg !11195
  br label %if.end, !dbg !11196

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %error, align 4, !dbg !11197
  ret i32 %3, !dbg !11198
}

; Function Attrs: noredzone
declare dso_local i32 @sysfs_create_bin_file(%struct.kobject*, %struct.bin_attribute*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @device_remove_bin_file(%struct.device* %dev, %struct.bin_attribute* %attr) #0 !dbg !11199 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.bin_attribute*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11202, metadata !DIExpression()), !dbg !11203
  store %struct.bin_attribute* %attr, %struct.bin_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bin_attribute** %attr.addr, metadata !11204, metadata !DIExpression()), !dbg !11205
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11206
  %tobool = icmp ne %struct.device* %0, null, !dbg !11206
  br i1 %tobool, label %if.then, label %if.end, !dbg !11208

if.then:                                          ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11209
  %kobj = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 0, !dbg !11210
  %2 = load %struct.bin_attribute*, %struct.bin_attribute** %attr.addr, align 8, !dbg !11211
  call void @sysfs_remove_bin_file(%struct.kobject* %kobj, %struct.bin_attribute* %2) #10, !dbg !11212
  br label %if.end, !dbg !11212

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11213
}

; Function Attrs: noredzone
declare dso_local void @sysfs_remove_bin_file(%struct.kobject*, %struct.bin_attribute*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @device_initialize(%struct.device* %dev) #0 !dbg !7823 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11214, metadata !DIExpression()), !dbg !11219
  %dev.addr = alloca %struct.device*, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11222, metadata !DIExpression()), !dbg !11223
  %0 = load %struct.kset*, %struct.kset** @devices_kset, align 8, !dbg !11224
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11225
  %kobj = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 0, !dbg !11226
  %kset = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj, i32 0, i32 3, !dbg !11227
  store %struct.kset* %0, %struct.kset** %kset, align 8, !dbg !11228
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11229
  %kobj1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 0, !dbg !11230
  call void @kobject_init(%struct.kobject* %kobj1, %struct.kobj_type* @device_ktype) #10, !dbg !11231
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11232
  %dma_pools = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 21, !dbg !11233
  call void @INIT_LIST_HEAD(%struct.list_head* %dma_pools) #10, !dbg !11234
  br label %do.body, !dbg !11235

do.body:                                          ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11236
  %mutex = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 9, !dbg !11236
  call void @__mutex_init(%struct.mutex* %mutex, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), %struct.lock_class_key* @device_initialize.__key) #10, !dbg !11236
  br label %do.end, !dbg !11236

do.end:                                           ; preds = %do.body
  br label %do.body2, !dbg !11238

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !11239

do.end3:                                          ; preds = %do.body2
  br label %do.body4, !dbg !11241

do.body4:                                         ; preds = %do.end3
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11242
  %devres_lock = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 27, !dbg !11242
  store %struct.spinlock* %devres_lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11243
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !11244
  %rlock.i = bitcast %union.anon.1* %7 to %struct.raw_spinlock*, !dbg !11244
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11242
  %devres_lock5 = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 27, !dbg !11242
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !11242
  %rlock = bitcast %union.anon.1* %9 to %struct.raw_spinlock*, !dbg !11242
  %10 = bitcast %struct.spinlock* %devres_lock5 to i8*, !dbg !11242
  %11 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !11242
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 1 %11, i64 0, i1 false), !dbg !11242
  br label %do.end6, !dbg !11242

do.end6:                                          ; preds = %do.body4
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11245
  %devres_head = getelementptr inbounds %struct.device, %struct.device* %12, i32 0, i32 28, !dbg !11246
  call void @INIT_LIST_HEAD(%struct.list_head* %devres_head) #10, !dbg !11247
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11248
  call void @device_pm_init(%struct.device* %13) #10, !dbg !11249
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11250
  call void @set_dev_node(%struct.device* %14, i32 -1) #10, !dbg !11251
  %15 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11252
  %msi_list = getelementptr inbounds %struct.device, %struct.device* %15, i32 0, i32 14, !dbg !11253
  call void @INIT_LIST_HEAD(%struct.list_head* %msi_list) #10, !dbg !11254
  %16 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11255
  %links = getelementptr inbounds %struct.device, %struct.device* %16, i32 0, i32 10, !dbg !11256
  %consumers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 1, !dbg !11257
  call void @INIT_LIST_HEAD(%struct.list_head* %consumers) #10, !dbg !11258
  %17 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11259
  %links7 = getelementptr inbounds %struct.device, %struct.device* %17, i32 0, i32 10, !dbg !11260
  %suppliers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links7, i32 0, i32 0, !dbg !11261
  call void @INIT_LIST_HEAD(%struct.list_head* %suppliers) #10, !dbg !11262
  %18 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11263
  %links8 = getelementptr inbounds %struct.device, %struct.device* %18, i32 0, i32 10, !dbg !11264
  %needs_suppliers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links8, i32 0, i32 2, !dbg !11265
  call void @INIT_LIST_HEAD(%struct.list_head* %needs_suppliers) #10, !dbg !11266
  %19 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11267
  %links9 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 10, !dbg !11268
  %defer_hook = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links9, i32 0, i32 3, !dbg !11269
  call void @INIT_LIST_HEAD(%struct.list_head* %defer_hook) #10, !dbg !11270
  %20 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11271
  %links10 = getelementptr inbounds %struct.device, %struct.device* %20, i32 0, i32 10, !dbg !11272
  %status = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links10, i32 0, i32 5, !dbg !11273
  store i32 0, i32* %status, align 4, !dbg !11274
  ret void, !dbg !11275
}

; Function Attrs: noredzone
declare dso_local void @kobject_init(%struct.kobject*, %struct.kobj_type*) #2

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_pm_init(%struct.device* %dev) #0 !dbg !11276 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11277, metadata !DIExpression()), !dbg !11278
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11279
  call void @device_pm_init_common(%struct.device* %0) #10, !dbg !11280
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11281
  call void @device_pm_sleep_init(%struct.device* %1) #10, !dbg !11282
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11283
  call void @pm_runtime_init(%struct.device* %2) #10, !dbg !11284
  ret void, !dbg !11285
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_dev_node(%struct.device* %dev, i32 %node) #0 !dbg !11286 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %node.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11289, metadata !DIExpression()), !dbg !11290
  store i32 %node, i32* %node.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr, metadata !11291, metadata !DIExpression()), !dbg !11292
  ret void, !dbg !11293
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.kobject* @virtual_device_parent(%struct.device* %dev) #0 !dbg !7826 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11294, metadata !DIExpression()), !dbg !11295
  %0 = load %struct.kobject*, %struct.kobject** @virtual_device_parent.virtual_dir, align 8, !dbg !11296
  %tobool = icmp ne %struct.kobject* %0, null, !dbg !11296
  br i1 %tobool, label %if.end, label %if.then, !dbg !11298

if.then:                                          ; preds = %entry
  %1 = load %struct.kset*, %struct.kset** @devices_kset, align 8, !dbg !11299
  %kobj = getelementptr inbounds %struct.kset, %struct.kset* %1, i32 0, i32 2, !dbg !11300
  %call = call %struct.kobject* @kobject_create_and_add(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), %struct.kobject* %kobj) #10, !dbg !11301
  store %struct.kobject* %call, %struct.kobject** @virtual_device_parent.virtual_dir, align 8, !dbg !11302
  br label %if.end, !dbg !11303

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.kobject*, %struct.kobject** @virtual_device_parent.virtual_dir, align 8, !dbg !11304
  ret %struct.kobject* %2, !dbg !11305
}

; Function Attrs: noredzone
declare dso_local %struct.kobject* @kobject_create_and_add(i8*, %struct.kobject*) #2

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #5

; Function Attrs: noredzone
declare dso_local i32 @kobject_set_name_vargs(%struct.kobject*, i8*, %struct.__va_list_tag*) #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @device_add(%struct.device* %dev) #0 !dbg !11306 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %parent = alloca %struct.device*, align 8
  %kobj = alloca %struct.kobject*, align 8
  %class_intf = alloca %struct.class_interface*, align 8
  %error = alloca i32, align 4
  %glue_dir = alloca %struct.kobject*, align 8
  %tmp = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp124 = alloca %struct.class_interface*, align 8
  %__mptr135 = alloca i8*, align 8
  %tmp140 = alloca %struct.class_interface*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11307, metadata !DIExpression()), !dbg !11308
  call void @llvm.dbg.declare(metadata %struct.device** %parent, metadata !11309, metadata !DIExpression()), !dbg !11310
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj, metadata !11311, metadata !DIExpression()), !dbg !11312
  call void @llvm.dbg.declare(metadata %struct.class_interface** %class_intf, metadata !11313, metadata !DIExpression()), !dbg !11314
  call void @llvm.dbg.declare(metadata i32* %error, metadata !11315, metadata !DIExpression()), !dbg !11316
  store i32 -22, i32* %error, align 4, !dbg !11316
  call void @llvm.dbg.declare(metadata %struct.kobject** %glue_dir, metadata !11317, metadata !DIExpression()), !dbg !11318
  store %struct.kobject* null, %struct.kobject** %glue_dir, align 8, !dbg !11318
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11319
  %call = call %struct.device* @get_device(%struct.device* %0) #10, !dbg !11320
  store %struct.device* %call, %struct.device** %dev.addr, align 8, !dbg !11321
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11322
  %tobool = icmp ne %struct.device* %1, null, !dbg !11322
  br i1 %tobool, label %if.end, label %if.then, !dbg !11324

if.then:                                          ; preds = %entry
  br label %done, !dbg !11325

if.end:                                           ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11326
  %p = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 2, !dbg !11328
  %3 = load %struct.device_private*, %struct.device_private** %p, align 8, !dbg !11328
  %tobool1 = icmp ne %struct.device_private* %3, null, !dbg !11326
  br i1 %tobool1, label %if.end7, label %if.then2, !dbg !11329

if.then2:                                         ; preds = %if.end
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11330
  %call3 = call i32 @device_private_init(%struct.device* %4) #10, !dbg !11332
  store i32 %call3, i32* %error, align 4, !dbg !11333
  %5 = load i32, i32* %error, align 4, !dbg !11334
  %tobool4 = icmp ne i32 %5, 0, !dbg !11334
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !11336

if.then5:                                         ; preds = %if.then2
  br label %done, !dbg !11337

if.end6:                                          ; preds = %if.then2
  br label %if.end7, !dbg !11338

if.end7:                                          ; preds = %if.end6, %if.end
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11339
  %init_name = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 3, !dbg !11341
  %7 = load i8*, i8** %init_name, align 8, !dbg !11341
  %tobool8 = icmp ne i8* %7, null, !dbg !11339
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !11342

if.then9:                                         ; preds = %if.end7
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11343
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11345
  %init_name10 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 3, !dbg !11346
  %10 = load i8*, i8** %init_name10, align 8, !dbg !11346
  %call11 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i8* %10) #10, !dbg !11347
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11348
  %init_name12 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11349
  store i8* null, i8** %init_name12, align 8, !dbg !11350
  br label %if.end13, !dbg !11351

if.end13:                                         ; preds = %if.then9, %if.end7
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11352
  %call14 = call i8* @dev_name(%struct.device* %12) #10, !dbg !11354
  %tobool15 = icmp ne i8* %call14, null, !dbg !11354
  br i1 %tobool15, label %if.end24, label %land.lhs.true, !dbg !11355

land.lhs.true:                                    ; preds = %if.end13
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11356
  %bus = getelementptr inbounds %struct.device, %struct.device* %13, i32 0, i32 5, !dbg !11357
  %14 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !11357
  %tobool16 = icmp ne %struct.bus_type* %14, null, !dbg !11356
  br i1 %tobool16, label %land.lhs.true17, label %if.end24, !dbg !11358

land.lhs.true17:                                  ; preds = %land.lhs.true
  %15 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11359
  %bus18 = getelementptr inbounds %struct.device, %struct.device* %15, i32 0, i32 5, !dbg !11360
  %16 = load %struct.bus_type*, %struct.bus_type** %bus18, align 8, !dbg !11360
  %dev_name = getelementptr inbounds %struct.bus_type, %struct.bus_type* %16, i32 0, i32 1, !dbg !11361
  %17 = load i8*, i8** %dev_name, align 8, !dbg !11361
  %tobool19 = icmp ne i8* %17, null, !dbg !11359
  br i1 %tobool19, label %if.then20, label %if.end24, !dbg !11362

if.then20:                                        ; preds = %land.lhs.true17
  %18 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11363
  %19 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11364
  %bus21 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 5, !dbg !11365
  %20 = load %struct.bus_type*, %struct.bus_type** %bus21, align 8, !dbg !11365
  %dev_name22 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %20, i32 0, i32 1, !dbg !11366
  %21 = load i8*, i8** %dev_name22, align 8, !dbg !11366
  %22 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11367
  %id = getelementptr inbounds %struct.device, %struct.device* %22, i32 0, i32 26, !dbg !11368
  %23 = load i32, i32* %id, align 4, !dbg !11368
  %call23 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8* %21, i32 %23) #10, !dbg !11369
  br label %if.end24, !dbg !11369

if.end24:                                         ; preds = %if.then20, %land.lhs.true17, %land.lhs.true, %if.end13
  %24 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11370
  %call25 = call i8* @dev_name(%struct.device* %24) #10, !dbg !11372
  %tobool26 = icmp ne i8* %call25, null, !dbg !11372
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !11373

if.then27:                                        ; preds = %if.end24
  store i32 -22, i32* %error, align 4, !dbg !11374
  br label %name_error, !dbg !11376

if.end28:                                         ; preds = %if.end24
  store i32 0, i32* %tmp, align 4, !dbg !11377
  %25 = load i32, i32* %tmp, align 4, !dbg !11380
  %26 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11381
  %parent29 = getelementptr inbounds %struct.device, %struct.device* %26, i32 0, i32 1, !dbg !11382
  %27 = load %struct.device*, %struct.device** %parent29, align 8, !dbg !11382
  %call30 = call %struct.device* @get_device(%struct.device* %27) #10, !dbg !11383
  store %struct.device* %call30, %struct.device** %parent, align 8, !dbg !11384
  %28 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11385
  %29 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11386
  %call31 = call %struct.kobject* @get_device_parent(%struct.device* %28, %struct.device* %29) #10, !dbg !11387
  store %struct.kobject* %call31, %struct.kobject** %kobj, align 8, !dbg !11388
  %30 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !11389
  %31 = bitcast %struct.kobject* %30 to i8*, !dbg !11389
  %call32 = call zeroext i1 @IS_ERR(i8* %31) #10, !dbg !11391
  br i1 %call32, label %if.then33, label %if.end35, !dbg !11392

if.then33:                                        ; preds = %if.end28
  %32 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !11393
  %33 = bitcast %struct.kobject* %32 to i8*, !dbg !11393
  %call34 = call i64 @PTR_ERR(i8* %33) #10, !dbg !11395
  %conv = trunc i64 %call34 to i32, !dbg !11395
  store i32 %conv, i32* %error, align 4, !dbg !11396
  br label %parent_error, !dbg !11397

if.end35:                                         ; preds = %if.end28
  %34 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !11398
  %tobool36 = icmp ne %struct.kobject* %34, null, !dbg !11398
  br i1 %tobool36, label %if.then37, label %if.end40, !dbg !11400

if.then37:                                        ; preds = %if.end35
  %35 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !11401
  %36 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11402
  %kobj38 = getelementptr inbounds %struct.device, %struct.device* %36, i32 0, i32 0, !dbg !11403
  %parent39 = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj38, i32 0, i32 2, !dbg !11404
  store %struct.kobject* %35, %struct.kobject** %parent39, align 8, !dbg !11405
  br label %if.end40, !dbg !11402

if.end40:                                         ; preds = %if.then37, %if.end35
  %37 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11406
  %tobool41 = icmp ne %struct.device* %37, null, !dbg !11406
  br i1 %tobool41, label %land.lhs.true42, label %if.end47, !dbg !11408

land.lhs.true42:                                  ; preds = %if.end40
  %38 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11409
  %call43 = call i32 @dev_to_node(%struct.device* %38) #10, !dbg !11410
  %cmp = icmp eq i32 %call43, -1, !dbg !11411
  br i1 %cmp, label %if.then45, label %if.end47, !dbg !11412

if.then45:                                        ; preds = %land.lhs.true42
  %39 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11413
  %40 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11414
  %call46 = call i32 @dev_to_node(%struct.device* %40) #10, !dbg !11415
  call void @set_dev_node(%struct.device* %39, i32 %call46) #10, !dbg !11416
  br label %if.end47, !dbg !11416

if.end47:                                         ; preds = %if.then45, %land.lhs.true42, %if.end40
  %41 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11417
  %kobj48 = getelementptr inbounds %struct.device, %struct.device* %41, i32 0, i32 0, !dbg !11418
  %42 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11419
  %kobj49 = getelementptr inbounds %struct.device, %struct.device* %42, i32 0, i32 0, !dbg !11420
  %parent50 = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj49, i32 0, i32 2, !dbg !11421
  %43 = load %struct.kobject*, %struct.kobject** %parent50, align 8, !dbg !11421
  %call51 = call i32 (%struct.kobject*, %struct.kobject*, i8*, ...) @kobject_add(%struct.kobject* %kobj48, %struct.kobject* %43, i8* null) #10, !dbg !11422
  store i32 %call51, i32* %error, align 4, !dbg !11423
  %44 = load i32, i32* %error, align 4, !dbg !11424
  %tobool52 = icmp ne i32 %44, 0, !dbg !11424
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !11426

if.then53:                                        ; preds = %if.end47
  %45 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11427
  %call54 = call %struct.kobject* @get_glue_dir(%struct.device* %45) #10, !dbg !11429
  store %struct.kobject* %call54, %struct.kobject** %glue_dir, align 8, !dbg !11430
  br label %Error, !dbg !11431

if.end55:                                         ; preds = %if.end47
  %46 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11432
  %call56 = call i32 @device_platform_notify(%struct.device* %46, i32 0) #10, !dbg !11433
  store i32 %call56, i32* %error, align 4, !dbg !11434
  %47 = load i32, i32* %error, align 4, !dbg !11435
  %tobool57 = icmp ne i32 %47, 0, !dbg !11435
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !11437

if.then58:                                        ; preds = %if.end55
  br label %platform_error, !dbg !11438

if.end59:                                         ; preds = %if.end55
  %48 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11439
  %call60 = call i32 @device_create_file(%struct.device* %48, %struct.device_attribute* @dev_attr_uevent) #10, !dbg !11440
  store i32 %call60, i32* %error, align 4, !dbg !11441
  %49 = load i32, i32* %error, align 4, !dbg !11442
  %tobool61 = icmp ne i32 %49, 0, !dbg !11442
  br i1 %tobool61, label %if.then62, label %if.end63, !dbg !11444

if.then62:                                        ; preds = %if.end59
  br label %attrError, !dbg !11445

if.end63:                                         ; preds = %if.end59
  %50 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11446
  %call64 = call i32 @device_add_class_symlinks(%struct.device* %50) #10, !dbg !11447
  store i32 %call64, i32* %error, align 4, !dbg !11448
  %51 = load i32, i32* %error, align 4, !dbg !11449
  %tobool65 = icmp ne i32 %51, 0, !dbg !11449
  br i1 %tobool65, label %if.then66, label %if.end67, !dbg !11451

if.then66:                                        ; preds = %if.end63
  br label %SymlinkError, !dbg !11452

if.end67:                                         ; preds = %if.end63
  %52 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11453
  %call68 = call i32 @device_add_attrs(%struct.device* %52) #10, !dbg !11454
  store i32 %call68, i32* %error, align 4, !dbg !11455
  %53 = load i32, i32* %error, align 4, !dbg !11456
  %tobool69 = icmp ne i32 %53, 0, !dbg !11456
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !11458

if.then70:                                        ; preds = %if.end67
  br label %AttrsError, !dbg !11459

if.end71:                                         ; preds = %if.end67
  %54 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11460
  %call72 = call i32 @bus_add_device(%struct.device* %54) #10, !dbg !11461
  store i32 %call72, i32* %error, align 4, !dbg !11462
  %55 = load i32, i32* %error, align 4, !dbg !11463
  %tobool73 = icmp ne i32 %55, 0, !dbg !11463
  br i1 %tobool73, label %if.then74, label %if.end75, !dbg !11465

if.then74:                                        ; preds = %if.end71
  br label %BusError, !dbg !11466

if.end75:                                         ; preds = %if.end71
  %56 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11467
  %call76 = call i32 @dpm_sysfs_add(%struct.device* %56) #10, !dbg !11468
  store i32 %call76, i32* %error, align 4, !dbg !11469
  %57 = load i32, i32* %error, align 4, !dbg !11470
  %tobool77 = icmp ne i32 %57, 0, !dbg !11470
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !11472

if.then78:                                        ; preds = %if.end75
  br label %DPMError, !dbg !11473

if.end79:                                         ; preds = %if.end75
  %58 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11474
  call void @device_pm_add(%struct.device* %58) #10, !dbg !11475
  %59 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11476
  %devt = getelementptr inbounds %struct.device, %struct.device* %59, i32 0, i32 25, !dbg !11476
  %60 = load i32, i32* %devt, align 8, !dbg !11476
  %shr = lshr i32 %60, 20, !dbg !11476
  %tobool80 = icmp ne i32 %shr, 0, !dbg !11476
  br i1 %tobool80, label %if.then81, label %if.end91, !dbg !11478

if.then81:                                        ; preds = %if.end79
  %61 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11479
  %call82 = call i32 @device_create_file(%struct.device* %61, %struct.device_attribute* @dev_attr_dev) #10, !dbg !11481
  store i32 %call82, i32* %error, align 4, !dbg !11482
  %62 = load i32, i32* %error, align 4, !dbg !11483
  %tobool83 = icmp ne i32 %62, 0, !dbg !11483
  br i1 %tobool83, label %if.then84, label %if.end85, !dbg !11485

if.then84:                                        ; preds = %if.then81
  br label %DevAttrError, !dbg !11486

if.end85:                                         ; preds = %if.then81
  %63 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11487
  %call86 = call i32 @device_create_sys_dev_entry(%struct.device* %63) #10, !dbg !11488
  store i32 %call86, i32* %error, align 4, !dbg !11489
  %64 = load i32, i32* %error, align 4, !dbg !11490
  %tobool87 = icmp ne i32 %64, 0, !dbg !11490
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !11492

if.then88:                                        ; preds = %if.end85
  br label %SysEntryError, !dbg !11493

if.end89:                                         ; preds = %if.end85
  %65 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11494
  %call90 = call i32 @devtmpfs_create_node(%struct.device* %65) #10, !dbg !11495
  br label %if.end91, !dbg !11496

if.end91:                                         ; preds = %if.end89, %if.end79
  %66 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11497
  %bus92 = getelementptr inbounds %struct.device, %struct.device* %66, i32 0, i32 5, !dbg !11499
  %67 = load %struct.bus_type*, %struct.bus_type** %bus92, align 8, !dbg !11499
  %tobool93 = icmp ne %struct.bus_type* %67, null, !dbg !11497
  br i1 %tobool93, label %if.then94, label %if.end98, !dbg !11500

if.then94:                                        ; preds = %if.end91
  %68 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11501
  %bus95 = getelementptr inbounds %struct.device, %struct.device* %68, i32 0, i32 5, !dbg !11502
  %69 = load %struct.bus_type*, %struct.bus_type** %bus95, align 8, !dbg !11502
  %p96 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %69, i32 0, i32 20, !dbg !11503
  %70 = load %struct.subsys_private*, %struct.subsys_private** %p96, align 8, !dbg !11503
  %bus_notifier = getelementptr inbounds %struct.subsys_private, %struct.subsys_private* %70, i32 0, i32 7, !dbg !11504
  %71 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11505
  %72 = bitcast %struct.device* %71 to i8*, !dbg !11505
  %call97 = call i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head* %bus_notifier, i64 1, i8* %72) #10, !dbg !11506
  br label %if.end98, !dbg !11506

if.end98:                                         ; preds = %if.then94, %if.end91
  %73 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11507
  %kobj99 = getelementptr inbounds %struct.device, %struct.device* %73, i32 0, i32 0, !dbg !11508
  %call100 = call i32 @kobject_uevent(%struct.kobject* %kobj99, i32 0) #10, !dbg !11509
  %74 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11510
  %fwnode = getelementptr inbounds %struct.device, %struct.device* %74, i32 0, i32 24, !dbg !11512
  %75 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !11512
  %tobool101 = icmp ne %struct.fwnode_handle* %75, null, !dbg !11510
  br i1 %tobool101, label %land.lhs.true102, label %if.end109, !dbg !11513

land.lhs.true102:                                 ; preds = %if.end98
  %76 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11514
  %fwnode103 = getelementptr inbounds %struct.device, %struct.device* %76, i32 0, i32 24, !dbg !11515
  %77 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode103, align 8, !dbg !11515
  %dev104 = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %77, i32 0, i32 2, !dbg !11516
  %78 = load %struct.device*, %struct.device** %dev104, align 8, !dbg !11516
  %tobool105 = icmp ne %struct.device* %78, null, !dbg !11514
  br i1 %tobool105, label %if.end109, label %if.then106, !dbg !11517

if.then106:                                       ; preds = %land.lhs.true102
  %79 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11518
  %80 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11520
  %fwnode107 = getelementptr inbounds %struct.device, %struct.device* %80, i32 0, i32 24, !dbg !11521
  %81 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode107, align 8, !dbg !11521
  %dev108 = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %81, i32 0, i32 2, !dbg !11522
  store %struct.device* %79, %struct.device** %dev108, align 8, !dbg !11523
  %82 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11524
  call void @fw_devlink_link_device(%struct.device* %82) #10, !dbg !11525
  br label %if.end109, !dbg !11526

if.end109:                                        ; preds = %if.then106, %land.lhs.true102, %if.end98
  %83 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11527
  call void @bus_probe_device(%struct.device* %83) #10, !dbg !11528
  %84 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11529
  %tobool110 = icmp ne %struct.device* %84, null, !dbg !11529
  br i1 %tobool110, label %if.then111, label %if.end114, !dbg !11531

if.then111:                                       ; preds = %if.end109
  %85 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11532
  %p112 = getelementptr inbounds %struct.device, %struct.device* %85, i32 0, i32 2, !dbg !11533
  %86 = load %struct.device_private*, %struct.device_private** %p112, align 8, !dbg !11533
  %knode_parent = getelementptr inbounds %struct.device_private, %struct.device_private* %86, i32 0, i32 1, !dbg !11534
  %87 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11535
  %p113 = getelementptr inbounds %struct.device, %struct.device* %87, i32 0, i32 2, !dbg !11536
  %88 = load %struct.device_private*, %struct.device_private** %p113, align 8, !dbg !11536
  %klist_children = getelementptr inbounds %struct.device_private, %struct.device_private* %88, i32 0, i32 0, !dbg !11537
  call void @klist_add_tail(%struct.klist_node* %knode_parent, %struct.klist* %klist_children) #10, !dbg !11538
  br label %if.end114, !dbg !11538

if.end114:                                        ; preds = %if.then111, %if.end109
  %89 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11539
  %class = getelementptr inbounds %struct.device, %struct.device* %89, i32 0, i32 29, !dbg !11541
  %90 = load %struct.class*, %struct.class** %class, align 8, !dbg !11541
  %tobool115 = icmp ne %struct.class* %90, null, !dbg !11539
  br i1 %tobool115, label %if.then116, label %if.end145, !dbg !11542

if.then116:                                       ; preds = %if.end114
  %91 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11543
  %class117 = getelementptr inbounds %struct.device, %struct.device* %91, i32 0, i32 29, !dbg !11545
  %92 = load %struct.class*, %struct.class** %class117, align 8, !dbg !11545
  %p118 = getelementptr inbounds %struct.class, %struct.class* %92, i32 0, i32 14, !dbg !11546
  %93 = load %struct.subsys_private*, %struct.subsys_private** %p118, align 8, !dbg !11546
  %mutex = getelementptr inbounds %struct.subsys_private, %struct.subsys_private* %93, i32 0, i32 3, !dbg !11547
  call void @mutex_lock(%struct.mutex* %mutex) #10, !dbg !11548
  %94 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11549
  %p119 = getelementptr inbounds %struct.device, %struct.device* %94, i32 0, i32 2, !dbg !11550
  %95 = load %struct.device_private*, %struct.device_private** %p119, align 8, !dbg !11550
  %knode_class = getelementptr inbounds %struct.device_private, %struct.device_private* %95, i32 0, i32 4, !dbg !11551
  %96 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11552
  %class120 = getelementptr inbounds %struct.device, %struct.device* %96, i32 0, i32 29, !dbg !11553
  %97 = load %struct.class*, %struct.class** %class120, align 8, !dbg !11553
  %p121 = getelementptr inbounds %struct.class, %struct.class* %97, i32 0, i32 14, !dbg !11554
  %98 = load %struct.subsys_private*, %struct.subsys_private** %p121, align 8, !dbg !11554
  %klist_devices = getelementptr inbounds %struct.subsys_private, %struct.subsys_private* %98, i32 0, i32 5, !dbg !11555
  call void @klist_add_tail(%struct.klist_node* %knode_class, %struct.klist* %klist_devices) #10, !dbg !11556
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11557, metadata !DIExpression()), !dbg !11560
  %99 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11560
  %class122 = getelementptr inbounds %struct.device, %struct.device* %99, i32 0, i32 29, !dbg !11560
  %100 = load %struct.class*, %struct.class** %class122, align 8, !dbg !11560
  %p123 = getelementptr inbounds %struct.class, %struct.class* %100, i32 0, i32 14, !dbg !11560
  %101 = load %struct.subsys_private*, %struct.subsys_private** %p123, align 8, !dbg !11560
  %interfaces = getelementptr inbounds %struct.subsys_private, %struct.subsys_private* %101, i32 0, i32 2, !dbg !11560
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %interfaces, i32 0, i32 0, !dbg !11560
  %102 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11560
  %103 = bitcast %struct.list_head* %102 to i8*, !dbg !11560
  store i8* %103, i8** %__mptr, align 8, !dbg !11560
  br label %do.body, !dbg !11560

do.body:                                          ; preds = %if.then116
  br label %do.end, !dbg !11561

do.end:                                           ; preds = %do.body
  %104 = load i8*, i8** %__mptr, align 8, !dbg !11560
  %add.ptr = getelementptr i8, i8* %104, i64 0, !dbg !11560
  %105 = bitcast i8* %add.ptr to %struct.class_interface*, !dbg !11560
  store %struct.class_interface* %105, %struct.class_interface** %tmp124, align 8, !dbg !11561
  %106 = load %struct.class_interface*, %struct.class_interface** %tmp124, align 8, !dbg !11560
  store %struct.class_interface* %106, %struct.class_interface** %class_intf, align 8, !dbg !11563
  br label %for.cond, !dbg !11563

for.cond:                                         ; preds = %do.end139, %do.end
  %107 = load %struct.class_interface*, %struct.class_interface** %class_intf, align 8, !dbg !11564
  %node = getelementptr inbounds %struct.class_interface, %struct.class_interface* %107, i32 0, i32 0, !dbg !11564
  %108 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11564
  %class125 = getelementptr inbounds %struct.device, %struct.device* %108, i32 0, i32 29, !dbg !11564
  %109 = load %struct.class*, %struct.class** %class125, align 8, !dbg !11564
  %p126 = getelementptr inbounds %struct.class, %struct.class* %109, i32 0, i32 14, !dbg !11564
  %110 = load %struct.subsys_private*, %struct.subsys_private** %p126, align 8, !dbg !11564
  %interfaces127 = getelementptr inbounds %struct.subsys_private, %struct.subsys_private* %110, i32 0, i32 2, !dbg !11564
  %cmp128 = icmp eq %struct.list_head* %node, %interfaces127, !dbg !11564
  %lnot = xor i1 %cmp128, true, !dbg !11564
  br i1 %lnot, label %for.body, label %for.end, !dbg !11563

for.body:                                         ; preds = %for.cond
  %111 = load %struct.class_interface*, %struct.class_interface** %class_intf, align 8, !dbg !11566
  %add_dev = getelementptr inbounds %struct.class_interface, %struct.class_interface* %111, i32 0, i32 2, !dbg !11568
  %112 = load i32 (%struct.device*, %struct.class_interface*)*, i32 (%struct.device*, %struct.class_interface*)** %add_dev, align 8, !dbg !11568
  %tobool130 = icmp ne i32 (%struct.device*, %struct.class_interface*)* %112, null, !dbg !11566
  br i1 %tobool130, label %if.then131, label %if.end134, !dbg !11569

if.then131:                                       ; preds = %for.body
  %113 = load %struct.class_interface*, %struct.class_interface** %class_intf, align 8, !dbg !11570
  %add_dev132 = getelementptr inbounds %struct.class_interface, %struct.class_interface* %113, i32 0, i32 2, !dbg !11571
  %114 = load i32 (%struct.device*, %struct.class_interface*)*, i32 (%struct.device*, %struct.class_interface*)** %add_dev132, align 8, !dbg !11571
  %115 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11572
  %116 = load %struct.class_interface*, %struct.class_interface** %class_intf, align 8, !dbg !11573
  %call133 = call i32 %114(%struct.device* %115, %struct.class_interface* %116) #10, !dbg !11570
  br label %if.end134, !dbg !11570

if.end134:                                        ; preds = %if.then131, %for.body
  br label %for.inc, !dbg !11568

for.inc:                                          ; preds = %if.end134
  call void @llvm.dbg.declare(metadata i8** %__mptr135, metadata !11574, metadata !DIExpression()), !dbg !11576
  %117 = load %struct.class_interface*, %struct.class_interface** %class_intf, align 8, !dbg !11576
  %node136 = getelementptr inbounds %struct.class_interface, %struct.class_interface* %117, i32 0, i32 0, !dbg !11576
  %next137 = getelementptr inbounds %struct.list_head, %struct.list_head* %node136, i32 0, i32 0, !dbg !11576
  %118 = load %struct.list_head*, %struct.list_head** %next137, align 8, !dbg !11576
  %119 = bitcast %struct.list_head* %118 to i8*, !dbg !11576
  store i8* %119, i8** %__mptr135, align 8, !dbg !11576
  br label %do.body138, !dbg !11576

do.body138:                                       ; preds = %for.inc
  br label %do.end139, !dbg !11577

do.end139:                                        ; preds = %do.body138
  %120 = load i8*, i8** %__mptr135, align 8, !dbg !11576
  %add.ptr141 = getelementptr i8, i8* %120, i64 0, !dbg !11576
  %121 = bitcast i8* %add.ptr141 to %struct.class_interface*, !dbg !11576
  store %struct.class_interface* %121, %struct.class_interface** %tmp140, align 8, !dbg !11577
  %122 = load %struct.class_interface*, %struct.class_interface** %tmp140, align 8, !dbg !11576
  store %struct.class_interface* %122, %struct.class_interface** %class_intf, align 8, !dbg !11564
  br label %for.cond, !dbg !11564, !llvm.loop !11579

for.end:                                          ; preds = %for.cond
  %123 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11581
  %class142 = getelementptr inbounds %struct.device, %struct.device* %123, i32 0, i32 29, !dbg !11582
  %124 = load %struct.class*, %struct.class** %class142, align 8, !dbg !11582
  %p143 = getelementptr inbounds %struct.class, %struct.class* %124, i32 0, i32 14, !dbg !11583
  %125 = load %struct.subsys_private*, %struct.subsys_private** %p143, align 8, !dbg !11583
  %mutex144 = getelementptr inbounds %struct.subsys_private, %struct.subsys_private* %125, i32 0, i32 3, !dbg !11584
  call void @mutex_unlock(%struct.mutex* %mutex144) #10, !dbg !11585
  br label %if.end145, !dbg !11586

if.end145:                                        ; preds = %for.end, %if.end114
  br label %done, !dbg !11541

done:                                             ; preds = %name_error, %if.end145, %if.then5, %if.then
  call void @llvm.dbg.label(metadata !11587), !dbg !11588
  %126 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11589
  call void @put_device(%struct.device* %126) #10, !dbg !11590
  %127 = load i32, i32* %error, align 4, !dbg !11591
  ret i32 %127, !dbg !11592

SysEntryError:                                    ; preds = %if.then88
  call void @llvm.dbg.label(metadata !11593), !dbg !11594
  %128 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11595
  %devt146 = getelementptr inbounds %struct.device, %struct.device* %128, i32 0, i32 25, !dbg !11595
  %129 = load i32, i32* %devt146, align 8, !dbg !11595
  %shr147 = lshr i32 %129, 20, !dbg !11595
  %tobool148 = icmp ne i32 %shr147, 0, !dbg !11595
  br i1 %tobool148, label %if.then149, label %if.end150, !dbg !11597

if.then149:                                       ; preds = %SysEntryError
  %130 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11598
  call void @device_remove_file(%struct.device* %130, %struct.device_attribute* @dev_attr_dev) #10, !dbg !11599
  br label %if.end150, !dbg !11599

if.end150:                                        ; preds = %if.then149, %SysEntryError
  br label %DevAttrError, !dbg !11595

DevAttrError:                                     ; preds = %if.end150, %if.then84
  call void @llvm.dbg.label(metadata !11600), !dbg !11601
  %131 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11602
  call void @device_pm_remove(%struct.device* %131) #10, !dbg !11603
  %132 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11604
  call void @dpm_sysfs_remove(%struct.device* %132) #10, !dbg !11605
  br label %DPMError, !dbg !11605

DPMError:                                         ; preds = %DevAttrError, %if.then78
  call void @llvm.dbg.label(metadata !11606), !dbg !11607
  %133 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11608
  call void @bus_remove_device(%struct.device* %133) #10, !dbg !11609
  br label %BusError, !dbg !11609

BusError:                                         ; preds = %DPMError, %if.then74
  call void @llvm.dbg.label(metadata !11610), !dbg !11611
  %134 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11612
  call void @device_remove_attrs(%struct.device* %134) #10, !dbg !11613
  br label %AttrsError, !dbg !11613

AttrsError:                                       ; preds = %BusError, %if.then70
  call void @llvm.dbg.label(metadata !11614), !dbg !11615
  %135 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11616
  call void @device_remove_class_symlinks(%struct.device* %135) #10, !dbg !11617
  br label %SymlinkError, !dbg !11617

SymlinkError:                                     ; preds = %AttrsError, %if.then66
  call void @llvm.dbg.label(metadata !11618), !dbg !11619
  %136 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11620
  call void @device_remove_file(%struct.device* %136, %struct.device_attribute* @dev_attr_uevent) #10, !dbg !11621
  br label %attrError, !dbg !11621

attrError:                                        ; preds = %SymlinkError, %if.then62
  call void @llvm.dbg.label(metadata !11622), !dbg !11623
  %137 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11624
  %call151 = call i32 @device_platform_notify(%struct.device* %137, i32 1) #10, !dbg !11625
  br label %platform_error, !dbg !11625

platform_error:                                   ; preds = %attrError, %if.then58
  call void @llvm.dbg.label(metadata !11626), !dbg !11627
  %138 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11628
  %kobj152 = getelementptr inbounds %struct.device, %struct.device* %138, i32 0, i32 0, !dbg !11629
  %call153 = call i32 @kobject_uevent(%struct.kobject* %kobj152, i32 1) #10, !dbg !11630
  %139 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11631
  %call154 = call %struct.kobject* @get_glue_dir(%struct.device* %139) #10, !dbg !11632
  store %struct.kobject* %call154, %struct.kobject** %glue_dir, align 8, !dbg !11633
  %140 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11634
  %kobj155 = getelementptr inbounds %struct.device, %struct.device* %140, i32 0, i32 0, !dbg !11635
  call void @kobject_del(%struct.kobject* %kobj155) #10, !dbg !11636
  br label %Error, !dbg !11636

Error:                                            ; preds = %platform_error, %if.then53
  call void @llvm.dbg.label(metadata !11637), !dbg !11638
  %141 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11639
  %142 = load %struct.kobject*, %struct.kobject** %glue_dir, align 8, !dbg !11640
  call void @cleanup_glue_dir(%struct.device* %141, %struct.kobject* %142) #10, !dbg !11641
  br label %parent_error, !dbg !11641

parent_error:                                     ; preds = %Error, %if.then33
  call void @llvm.dbg.label(metadata !11642), !dbg !11643
  %143 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11644
  call void @put_device(%struct.device* %143) #10, !dbg !11645
  br label %name_error, !dbg !11645

name_error:                                       ; preds = %parent_error, %if.then27
  call void @llvm.dbg.label(metadata !11646), !dbg !11647
  %144 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11648
  %p156 = getelementptr inbounds %struct.device, %struct.device* %144, i32 0, i32 2, !dbg !11649
  %145 = load %struct.device_private*, %struct.device_private** %p156, align 8, !dbg !11649
  %146 = bitcast %struct.device_private* %145 to i8*, !dbg !11648
  call void @kfree(i8* %146) #10, !dbg !11650
  %147 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11651
  %p157 = getelementptr inbounds %struct.device, %struct.device* %147, i32 0, i32 2, !dbg !11652
  store %struct.device_private* null, %struct.device_private** %p157, align 8, !dbg !11653
  br label %done, !dbg !11654
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @device_private_init(%struct.device* %dev) #0 !dbg !11655 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11656, metadata !DIExpression()), !dbg !11657
  %call = call i8* @kzalloc(i64 208, i32 3264) #10, !dbg !11658
  %0 = bitcast i8* %call to %struct.device_private*, !dbg !11658
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11659
  %p = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 2, !dbg !11660
  store %struct.device_private* %0, %struct.device_private** %p, align 8, !dbg !11661
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11662
  %p1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 2, !dbg !11664
  %3 = load %struct.device_private*, %struct.device_private** %p1, align 8, !dbg !11664
  %tobool = icmp ne %struct.device_private* %3, null, !dbg !11662
  br i1 %tobool, label %if.end, label %if.then, !dbg !11665

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !11666
  br label %return, !dbg !11666

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11667
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11668
  %p2 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 2, !dbg !11669
  %6 = load %struct.device_private*, %struct.device_private** %p2, align 8, !dbg !11669
  %device = getelementptr inbounds %struct.device_private, %struct.device_private* %6, i32 0, i32 8, !dbg !11670
  store %struct.device* %4, %struct.device** %device, align 8, !dbg !11671
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11672
  %p3 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 2, !dbg !11673
  %8 = load %struct.device_private*, %struct.device_private** %p3, align 8, !dbg !11673
  %klist_children = getelementptr inbounds %struct.device_private, %struct.device_private* %8, i32 0, i32 0, !dbg !11674
  call void @klist_init(%struct.klist* %klist_children, void (%struct.klist_node*)* @klist_children_get, void (%struct.klist_node*)* @klist_children_put) #10, !dbg !11675
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11676
  %p4 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 2, !dbg !11677
  %10 = load %struct.device_private*, %struct.device_private** %p4, align 8, !dbg !11677
  %deferred_probe = getelementptr inbounds %struct.device_private, %struct.device_private* %10, i32 0, i32 5, !dbg !11678
  call void @INIT_LIST_HEAD(%struct.list_head* %deferred_probe) #10, !dbg !11679
  store i32 0, i32* %retval, align 4, !dbg !11680
  br label %return, !dbg !11680

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !11681
  ret i32 %11, !dbg !11681
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.kobject* @get_device_parent(%struct.device* %dev, %struct.device* %parent) #0 !dbg !11682 {
entry:
  %lock.addr.i58 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i58, metadata !11012, metadata !DIExpression()), !dbg !11685
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11019, metadata !DIExpression()), !dbg !11689
  %retval = alloca %struct.kobject*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %parent.addr = alloca %struct.device*, align 8
  %kobj = alloca %struct.kobject*, align 8
  %parent_kobj = alloca %struct.kobject*, align 8
  %k = alloca %struct.kobject*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.kobject*, align 8
  %__mptr26 = alloca i8*, align 8
  %tmp31 = alloca %struct.kobject*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11691, metadata !DIExpression()), !dbg !11692
  store %struct.device* %parent, %struct.device** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %parent.addr, metadata !11693, metadata !DIExpression()), !dbg !11694
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11695
  %class = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 29, !dbg !11696
  %1 = load %struct.class*, %struct.class** %class, align 8, !dbg !11696
  %tobool = icmp ne %struct.class* %1, null, !dbg !11695
  br i1 %tobool, label %if.then, label %if.end42, !dbg !11697

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj, metadata !11698, metadata !DIExpression()), !dbg !11699
  store %struct.kobject* null, %struct.kobject** %kobj, align 8, !dbg !11699
  call void @llvm.dbg.declare(metadata %struct.kobject** %parent_kobj, metadata !11700, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.declare(metadata %struct.kobject** %k, metadata !11702, metadata !DIExpression()), !dbg !11703
  %2 = load %struct.device*, %struct.device** %parent.addr, align 8, !dbg !11704
  %cmp = icmp eq %struct.device* %2, null, !dbg !11706
  br i1 %cmp, label %if.then1, label %if.else, !dbg !11707

if.then1:                                         ; preds = %if.then
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11708
  %call = call %struct.kobject* @virtual_device_parent(%struct.device* %3) #10, !dbg !11709
  store %struct.kobject* %call, %struct.kobject** %parent_kobj, align 8, !dbg !11710
  br label %if.end10, !dbg !11711

if.else:                                          ; preds = %if.then
  %4 = load %struct.device*, %struct.device** %parent.addr, align 8, !dbg !11712
  %class2 = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 29, !dbg !11714
  %5 = load %struct.class*, %struct.class** %class2, align 8, !dbg !11714
  %tobool3 = icmp ne %struct.class* %5, null, !dbg !11712
  br i1 %tobool3, label %land.lhs.true, label %if.else8, !dbg !11715

land.lhs.true:                                    ; preds = %if.else
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11716
  %class4 = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 29, !dbg !11717
  %7 = load %struct.class*, %struct.class** %class4, align 8, !dbg !11717
  %ns_type = getelementptr inbounds %struct.class, %struct.class* %7, i32 0, i32 10, !dbg !11718
  %8 = load %struct.kobj_ns_type_operations*, %struct.kobj_ns_type_operations** %ns_type, align 8, !dbg !11718
  %tobool5 = icmp ne %struct.kobj_ns_type_operations* %8, null, !dbg !11716
  br i1 %tobool5, label %if.else8, label %if.then6, !dbg !11719

if.then6:                                         ; preds = %land.lhs.true
  %9 = load %struct.device*, %struct.device** %parent.addr, align 8, !dbg !11720
  %kobj7 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11721
  store %struct.kobject* %kobj7, %struct.kobject** %retval, align 8, !dbg !11722
  br label %return, !dbg !11722

if.else8:                                         ; preds = %land.lhs.true, %if.else
  %10 = load %struct.device*, %struct.device** %parent.addr, align 8, !dbg !11723
  %kobj9 = getelementptr inbounds %struct.device, %struct.device* %10, i32 0, i32 0, !dbg !11724
  store %struct.kobject* %kobj9, %struct.kobject** %parent_kobj, align 8, !dbg !11725
  br label %if.end

if.end:                                           ; preds = %if.else8
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then1
  call void @mutex_lock(%struct.mutex* @gdp_mutex) #10, !dbg !11726
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11727
  %class11 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 29, !dbg !11728
  %12 = load %struct.class*, %struct.class** %class11, align 8, !dbg !11728
  %p = getelementptr inbounds %struct.class, %struct.class* %12, i32 0, i32 14, !dbg !11729
  %13 = load %struct.subsys_private*, %struct.subsys_private** %p, align 8, !dbg !11729
  %glue_dirs = getelementptr inbounds %struct.subsys_private, %struct.subsys_private* %13, i32 0, i32 10, !dbg !11730
  %list_lock = getelementptr inbounds %struct.kset, %struct.kset* %glue_dirs, i32 0, i32 1, !dbg !11731
  store %struct.spinlock* %list_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !11732, !srcloc !11037
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11733
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !11733
  %rlock.i = bitcast %union.anon.1* %15 to %struct.raw_spinlock*, !dbg !11733
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11734, metadata !DIExpression()), !dbg !11737
  %16 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11737
  %class12 = getelementptr inbounds %struct.device, %struct.device* %16, i32 0, i32 29, !dbg !11737
  %17 = load %struct.class*, %struct.class** %class12, align 8, !dbg !11737
  %p13 = getelementptr inbounds %struct.class, %struct.class* %17, i32 0, i32 14, !dbg !11737
  %18 = load %struct.subsys_private*, %struct.subsys_private** %p13, align 8, !dbg !11737
  %glue_dirs14 = getelementptr inbounds %struct.subsys_private, %struct.subsys_private* %18, i32 0, i32 10, !dbg !11737
  %list = getelementptr inbounds %struct.kset, %struct.kset* %glue_dirs14, i32 0, i32 0, !dbg !11737
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !11737
  %19 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11737
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !11737
  store i8* %20, i8** %__mptr, align 8, !dbg !11737
  br label %do.body, !dbg !11737

do.body:                                          ; preds = %if.end10
  br label %do.end, !dbg !11738

do.end:                                           ; preds = %do.body
  %21 = load i8*, i8** %__mptr, align 8, !dbg !11737
  %add.ptr = getelementptr i8, i8* %21, i64 -8, !dbg !11737
  %22 = bitcast i8* %add.ptr to %struct.kobject*, !dbg !11737
  store %struct.kobject* %22, %struct.kobject** %tmp, align 8, !dbg !11738
  %23 = load %struct.kobject*, %struct.kobject** %tmp, align 8, !dbg !11737
  store %struct.kobject* %23, %struct.kobject** %k, align 8, !dbg !11740
  br label %for.cond, !dbg !11740

for.cond:                                         ; preds = %do.end30, %do.end
  %24 = load %struct.kobject*, %struct.kobject** %k, align 8, !dbg !11741
  %entry15 = getelementptr inbounds %struct.kobject, %struct.kobject* %24, i32 0, i32 1, !dbg !11741
  %25 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11741
  %class16 = getelementptr inbounds %struct.device, %struct.device* %25, i32 0, i32 29, !dbg !11741
  %26 = load %struct.class*, %struct.class** %class16, align 8, !dbg !11741
  %p17 = getelementptr inbounds %struct.class, %struct.class* %26, i32 0, i32 14, !dbg !11741
  %27 = load %struct.subsys_private*, %struct.subsys_private** %p17, align 8, !dbg !11741
  %glue_dirs18 = getelementptr inbounds %struct.subsys_private, %struct.subsys_private* %27, i32 0, i32 10, !dbg !11741
  %list19 = getelementptr inbounds %struct.kset, %struct.kset* %glue_dirs18, i32 0, i32 0, !dbg !11741
  %cmp20 = icmp eq %struct.list_head* %entry15, %list19, !dbg !11741
  %lnot = xor i1 %cmp20, true, !dbg !11741
  br i1 %lnot, label %for.body, label %for.end, !dbg !11740

for.body:                                         ; preds = %for.cond
  %28 = load %struct.kobject*, %struct.kobject** %k, align 8, !dbg !11743
  %parent21 = getelementptr inbounds %struct.kobject, %struct.kobject* %28, i32 0, i32 2, !dbg !11745
  %29 = load %struct.kobject*, %struct.kobject** %parent21, align 8, !dbg !11745
  %30 = load %struct.kobject*, %struct.kobject** %parent_kobj, align 8, !dbg !11746
  %cmp22 = icmp eq %struct.kobject* %29, %30, !dbg !11747
  br i1 %cmp22, label %if.then23, label %if.end25, !dbg !11748

if.then23:                                        ; preds = %for.body
  %31 = load %struct.kobject*, %struct.kobject** %k, align 8, !dbg !11749
  %call24 = call %struct.kobject* @kobject_get(%struct.kobject* %31) #10, !dbg !11751
  store %struct.kobject* %call24, %struct.kobject** %kobj, align 8, !dbg !11752
  br label %for.end, !dbg !11753

if.end25:                                         ; preds = %for.body
  br label %for.inc, !dbg !11746

for.inc:                                          ; preds = %if.end25
  call void @llvm.dbg.declare(metadata i8** %__mptr26, metadata !11754, metadata !DIExpression()), !dbg !11756
  %32 = load %struct.kobject*, %struct.kobject** %k, align 8, !dbg !11756
  %entry27 = getelementptr inbounds %struct.kobject, %struct.kobject* %32, i32 0, i32 1, !dbg !11756
  %next28 = getelementptr inbounds %struct.list_head, %struct.list_head* %entry27, i32 0, i32 0, !dbg !11756
  %33 = load %struct.list_head*, %struct.list_head** %next28, align 8, !dbg !11756
  %34 = bitcast %struct.list_head* %33 to i8*, !dbg !11756
  store i8* %34, i8** %__mptr26, align 8, !dbg !11756
  br label %do.body29, !dbg !11756

do.body29:                                        ; preds = %for.inc
  br label %do.end30, !dbg !11757

do.end30:                                         ; preds = %do.body29
  %35 = load i8*, i8** %__mptr26, align 8, !dbg !11756
  %add.ptr32 = getelementptr i8, i8* %35, i64 -8, !dbg !11756
  %36 = bitcast i8* %add.ptr32 to %struct.kobject*, !dbg !11756
  store %struct.kobject* %36, %struct.kobject** %tmp31, align 8, !dbg !11757
  %37 = load %struct.kobject*, %struct.kobject** %tmp31, align 8, !dbg !11756
  store %struct.kobject* %37, %struct.kobject** %k, align 8, !dbg !11741
  br label %for.cond, !dbg !11741, !llvm.loop !11759

for.end:                                          ; preds = %if.then23, %for.cond
  %38 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11761
  %class33 = getelementptr inbounds %struct.device, %struct.device* %38, i32 0, i32 29, !dbg !11762
  %39 = load %struct.class*, %struct.class** %class33, align 8, !dbg !11762
  %p34 = getelementptr inbounds %struct.class, %struct.class* %39, i32 0, i32 14, !dbg !11763
  %40 = load %struct.subsys_private*, %struct.subsys_private** %p34, align 8, !dbg !11763
  %glue_dirs35 = getelementptr inbounds %struct.subsys_private, %struct.subsys_private* %40, i32 0, i32 10, !dbg !11764
  %list_lock36 = getelementptr inbounds %struct.kset, %struct.kset* %glue_dirs35, i32 0, i32 1, !dbg !11765
  store %struct.spinlock* %list_lock36, %struct.spinlock** %lock.addr.i58, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !11766, !srcloc !11050
  %41 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i58, align 8, !dbg !11767
  %42 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %41, i32 0, i32 0, !dbg !11767
  %rlock.i59 = bitcast %union.anon.1* %42 to %struct.raw_spinlock*, !dbg !11767
  %43 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !11768
  %tobool37 = icmp ne %struct.kobject* %43, null, !dbg !11768
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !11770

if.then38:                                        ; preds = %for.end
  call void @mutex_unlock(%struct.mutex* @gdp_mutex) #10, !dbg !11771
  %44 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !11773
  store %struct.kobject* %44, %struct.kobject** %retval, align 8, !dbg !11774
  br label %return, !dbg !11774

if.end39:                                         ; preds = %for.end
  %45 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11775
  %class40 = getelementptr inbounds %struct.device, %struct.device* %45, i32 0, i32 29, !dbg !11776
  %46 = load %struct.class*, %struct.class** %class40, align 8, !dbg !11776
  %47 = load %struct.kobject*, %struct.kobject** %parent_kobj, align 8, !dbg !11777
  %call41 = call %struct.kobject* @class_dir_create_and_add(%struct.class* %46, %struct.kobject* %47) #10, !dbg !11778
  store %struct.kobject* %call41, %struct.kobject** %k, align 8, !dbg !11779
  call void @mutex_unlock(%struct.mutex* @gdp_mutex) #10, !dbg !11780
  %48 = load %struct.kobject*, %struct.kobject** %k, align 8, !dbg !11781
  store %struct.kobject* %48, %struct.kobject** %retval, align 8, !dbg !11782
  br label %return, !dbg !11782

if.end42:                                         ; preds = %entry
  %49 = load %struct.device*, %struct.device** %parent.addr, align 8, !dbg !11783
  %tobool43 = icmp ne %struct.device* %49, null, !dbg !11783
  br i1 %tobool43, label %if.end53, label %land.lhs.true44, !dbg !11785

land.lhs.true44:                                  ; preds = %if.end42
  %50 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11786
  %bus = getelementptr inbounds %struct.device, %struct.device* %50, i32 0, i32 5, !dbg !11787
  %51 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !11787
  %tobool45 = icmp ne %struct.bus_type* %51, null, !dbg !11786
  br i1 %tobool45, label %land.lhs.true46, label %if.end53, !dbg !11788

land.lhs.true46:                                  ; preds = %land.lhs.true44
  %52 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11789
  %bus47 = getelementptr inbounds %struct.device, %struct.device* %52, i32 0, i32 5, !dbg !11790
  %53 = load %struct.bus_type*, %struct.bus_type** %bus47, align 8, !dbg !11790
  %dev_root = getelementptr inbounds %struct.bus_type, %struct.bus_type* %53, i32 0, i32 2, !dbg !11791
  %54 = load %struct.device*, %struct.device** %dev_root, align 8, !dbg !11791
  %tobool48 = icmp ne %struct.device* %54, null, !dbg !11789
  br i1 %tobool48, label %if.then49, label %if.end53, !dbg !11792

if.then49:                                        ; preds = %land.lhs.true46
  %55 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11793
  %bus50 = getelementptr inbounds %struct.device, %struct.device* %55, i32 0, i32 5, !dbg !11794
  %56 = load %struct.bus_type*, %struct.bus_type** %bus50, align 8, !dbg !11794
  %dev_root51 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %56, i32 0, i32 2, !dbg !11795
  %57 = load %struct.device*, %struct.device** %dev_root51, align 8, !dbg !11795
  %kobj52 = getelementptr inbounds %struct.device, %struct.device* %57, i32 0, i32 0, !dbg !11796
  store %struct.kobject* %kobj52, %struct.kobject** %retval, align 8, !dbg !11797
  br label %return, !dbg !11797

if.end53:                                         ; preds = %land.lhs.true46, %land.lhs.true44, %if.end42
  %58 = load %struct.device*, %struct.device** %parent.addr, align 8, !dbg !11798
  %tobool54 = icmp ne %struct.device* %58, null, !dbg !11798
  br i1 %tobool54, label %if.then55, label %if.end57, !dbg !11800

if.then55:                                        ; preds = %if.end53
  %59 = load %struct.device*, %struct.device** %parent.addr, align 8, !dbg !11801
  %kobj56 = getelementptr inbounds %struct.device, %struct.device* %59, i32 0, i32 0, !dbg !11802
  store %struct.kobject* %kobj56, %struct.kobject** %retval, align 8, !dbg !11803
  br label %return, !dbg !11803

if.end57:                                         ; preds = %if.end53
  store %struct.kobject* null, %struct.kobject** %retval, align 8, !dbg !11804
  br label %return, !dbg !11804

return:                                           ; preds = %if.end57, %if.then55, %if.then49, %if.end39, %if.then38, %if.then6
  %60 = load %struct.kobject*, %struct.kobject** %retval, align 8, !dbg !11805
  ret %struct.kobject* %60, !dbg !11805
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !11806 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11810, metadata !DIExpression()), !dbg !11811
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !11812
  %1 = ptrtoint i8* %0 to i64, !dbg !11812
  %2 = inttoptr i64 %1 to i8*, !dbg !11812
  %3 = ptrtoint i8* %2 to i64, !dbg !11812
  %cmp = icmp uge i64 %3, -4095, !dbg !11812
  %lnot = xor i1 %cmp, true, !dbg !11812
  %lnot1 = xor i1 %lnot, true, !dbg !11812
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11812
  %conv = sext i32 %lnot.ext to i64, !dbg !11812
  %tobool = icmp ne i64 %conv, 0, !dbg !11812
  ret i1 %tobool, !dbg !11813
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !11814 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11817, metadata !DIExpression()), !dbg !11818
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !11819
  %1 = ptrtoint i8* %0 to i64, !dbg !11820
  ret i64 %1, !dbg !11821
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dev_to_node(%struct.device* %dev) #0 !dbg !11822 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11823, metadata !DIExpression()), !dbg !11824
  ret i32 -1, !dbg !11825
}

; Function Attrs: noredzone
declare dso_local i32 @kobject_add(%struct.kobject*, %struct.kobject*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.kobject* @get_glue_dir(%struct.device* %dev) #0 !dbg !11826 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11827, metadata !DIExpression()), !dbg !11828
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11829
  %kobj = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !11830
  %parent = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj, i32 0, i32 2, !dbg !11831
  %1 = load %struct.kobject*, %struct.kobject** %parent, align 8, !dbg !11831
  ret %struct.kobject* %1, !dbg !11832
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @device_platform_notify(%struct.device* %dev, i32 %action) #0 !dbg !11833 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %action.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11836, metadata !DIExpression()), !dbg !11837
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !11838, metadata !DIExpression()), !dbg !11839
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11840, metadata !DIExpression()), !dbg !11841
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11842
  %1 = load i32, i32* %action.addr, align 4, !dbg !11843
  %call = call i32 @acpi_platform_notify(%struct.device* %0, i32 %1) #10, !dbg !11844
  store i32 %call, i32* %ret, align 4, !dbg !11845
  %2 = load i32, i32* %ret, align 4, !dbg !11846
  %tobool = icmp ne i32 %2, 0, !dbg !11846
  br i1 %tobool, label %if.then, label %if.end, !dbg !11848

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !11849
  store i32 %3, i32* %retval, align 4, !dbg !11850
  br label %return, !dbg !11850

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11851
  %5 = load i32, i32* %action.addr, align 4, !dbg !11852
  %conv = zext i32 %5 to i64, !dbg !11852
  %call1 = call i32 @software_node_notify(%struct.device* %4, i64 %conv) #10, !dbg !11853
  store i32 %call1, i32* %ret, align 4, !dbg !11854
  %6 = load i32, i32* %ret, align 4, !dbg !11855
  %tobool2 = icmp ne i32 %6, 0, !dbg !11855
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !11857

if.then3:                                         ; preds = %if.end
  %7 = load i32, i32* %ret, align 4, !dbg !11858
  store i32 %7, i32* %retval, align 4, !dbg !11859
  br label %return, !dbg !11859

if.end4:                                          ; preds = %if.end
  %8 = load i32 (%struct.device*)*, i32 (%struct.device*)** @platform_notify, align 8, !dbg !11860
  %tobool5 = icmp ne i32 (%struct.device*)* %8, null, !dbg !11860
  br i1 %tobool5, label %land.lhs.true, label %if.else, !dbg !11862

land.lhs.true:                                    ; preds = %if.end4
  %9 = load i32, i32* %action.addr, align 4, !dbg !11863
  %cmp = icmp eq i32 %9, 0, !dbg !11864
  br i1 %cmp, label %if.then7, label %if.else, !dbg !11865

if.then7:                                         ; preds = %land.lhs.true
  %10 = load i32 (%struct.device*)*, i32 (%struct.device*)** @platform_notify, align 8, !dbg !11866
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11867
  %call8 = call i32 %10(%struct.device* %11) #10, !dbg !11866
  br label %if.end16, !dbg !11866

if.else:                                          ; preds = %land.lhs.true, %if.end4
  %12 = load i32 (%struct.device*)*, i32 (%struct.device*)** @platform_notify_remove, align 8, !dbg !11868
  %tobool9 = icmp ne i32 (%struct.device*)* %12, null, !dbg !11868
  br i1 %tobool9, label %land.lhs.true10, label %if.end15, !dbg !11870

land.lhs.true10:                                  ; preds = %if.else
  %13 = load i32, i32* %action.addr, align 4, !dbg !11871
  %cmp11 = icmp eq i32 %13, 1, !dbg !11872
  br i1 %cmp11, label %if.then13, label %if.end15, !dbg !11873

if.then13:                                        ; preds = %land.lhs.true10
  %14 = load i32 (%struct.device*)*, i32 (%struct.device*)** @platform_notify_remove, align 8, !dbg !11874
  %15 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11875
  %call14 = call i32 %14(%struct.device* %15) #10, !dbg !11874
  br label %if.end15, !dbg !11874

if.end15:                                         ; preds = %if.then13, %land.lhs.true10, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then7
  store i32 0, i32* %retval, align 4, !dbg !11876
  br label %return, !dbg !11876

return:                                           ; preds = %if.end16, %if.then3, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !11877
  ret i32 %16, !dbg !11877
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @device_add_class_symlinks(%struct.device* %dev) #0 !dbg !11878 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %of_node = alloca %struct.device_node*, align 8
  %error = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11879, metadata !DIExpression()), !dbg !11880
  call void @llvm.dbg.declare(metadata %struct.device_node** %of_node, metadata !11881, metadata !DIExpression()), !dbg !11882
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11883
  %call = call %struct.device_node* @dev_of_node(%struct.device* %0) #10, !dbg !11884
  store %struct.device_node* %call, %struct.device_node** %of_node, align 8, !dbg !11882
  call void @llvm.dbg.declare(metadata i32* %error, metadata !11885, metadata !DIExpression()), !dbg !11886
  %1 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !11887
  %tobool = icmp ne %struct.device_node* %1, null, !dbg !11887
  br i1 %tobool, label %if.then, label %if.end5, !dbg !11889

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11890
  %kobj = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 0, !dbg !11892
  %3 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !11893
  %kobj1 = getelementptr inbounds %struct.device_node, %struct.device_node* %3, i32 0, i32 9, !dbg !11893
  %call2 = call i32 @sysfs_create_link(%struct.kobject* %kobj, %struct.kobject* %kobj1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.62, i64 0, i64 0)) #10, !dbg !11894
  store i32 %call2, i32* %error, align 4, !dbg !11895
  %4 = load i32, i32* %error, align 4, !dbg !11896
  %tobool3 = icmp ne i32 %4, 0, !dbg !11896
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !11898

if.then4:                                         ; preds = %if.then
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11899
  %6 = load i32, i32* %error, align 4, !dbg !11899
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.63, i64 0, i64 0), i32 %6) #14, !dbg !11899
  br label %if.end, !dbg !11899

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end5, !dbg !11900

if.end5:                                          ; preds = %if.end, %entry
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11901
  %class = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 29, !dbg !11903
  %8 = load %struct.class*, %struct.class** %class, align 8, !dbg !11903
  %tobool6 = icmp ne %struct.class* %8, null, !dbg !11901
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !11904

if.then7:                                         ; preds = %if.end5
  store i32 0, i32* %retval, align 4, !dbg !11905
  br label %return, !dbg !11905

if.end8:                                          ; preds = %if.end5
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11906
  %kobj9 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11907
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11908
  %class10 = getelementptr inbounds %struct.device, %struct.device* %10, i32 0, i32 29, !dbg !11909
  %11 = load %struct.class*, %struct.class** %class10, align 8, !dbg !11909
  %p = getelementptr inbounds %struct.class, %struct.class* %11, i32 0, i32 14, !dbg !11910
  %12 = load %struct.subsys_private*, %struct.subsys_private** %p, align 8, !dbg !11910
  %subsys = getelementptr inbounds %struct.subsys_private, %struct.subsys_private* %12, i32 0, i32 0, !dbg !11911
  %kobj11 = getelementptr inbounds %struct.kset, %struct.kset* %subsys, i32 0, i32 2, !dbg !11912
  %call12 = call i32 @sysfs_create_link(%struct.kobject* %kobj9, %struct.kobject* %kobj11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i64 0, i64 0)) #10, !dbg !11913
  store i32 %call12, i32* %error, align 4, !dbg !11914
  %13 = load i32, i32* %error, align 4, !dbg !11915
  %tobool13 = icmp ne i32 %13, 0, !dbg !11915
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !11917

if.then14:                                        ; preds = %if.end8
  br label %out_devnode, !dbg !11918

if.end15:                                         ; preds = %if.end8
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11919
  %parent = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 1, !dbg !11921
  %15 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11921
  %tobool16 = icmp ne %struct.device* %15, null, !dbg !11919
  br i1 %tobool16, label %land.lhs.true, label %if.end27, !dbg !11922

land.lhs.true:                                    ; preds = %if.end15
  %16 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11923
  %call17 = call i32 @device_is_not_partition(%struct.device* %16) #10, !dbg !11924
  %tobool18 = icmp ne i32 %call17, 0, !dbg !11924
  br i1 %tobool18, label %if.then19, label %if.end27, !dbg !11925

if.then19:                                        ; preds = %land.lhs.true
  %17 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11926
  %kobj20 = getelementptr inbounds %struct.device, %struct.device* %17, i32 0, i32 0, !dbg !11928
  %18 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11929
  %parent21 = getelementptr inbounds %struct.device, %struct.device* %18, i32 0, i32 1, !dbg !11930
  %19 = load %struct.device*, %struct.device** %parent21, align 8, !dbg !11930
  %kobj22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11931
  %call23 = call i32 @sysfs_create_link(%struct.kobject* %kobj20, %struct.kobject* %kobj22, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.65, i64 0, i64 0)) #10, !dbg !11932
  store i32 %call23, i32* %error, align 4, !dbg !11933
  %20 = load i32, i32* %error, align 4, !dbg !11934
  %tobool24 = icmp ne i32 %20, 0, !dbg !11934
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !11936

if.then25:                                        ; preds = %if.then19
  br label %out_subsys, !dbg !11937

if.end26:                                         ; preds = %if.then19
  br label %if.end27, !dbg !11938

if.end27:                                         ; preds = %if.end26, %land.lhs.true, %if.end15
  %21 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11939
  %class28 = getelementptr inbounds %struct.device, %struct.device* %21, i32 0, i32 29, !dbg !11940
  %22 = load %struct.class*, %struct.class** %class28, align 8, !dbg !11940
  %p29 = getelementptr inbounds %struct.class, %struct.class* %22, i32 0, i32 14, !dbg !11941
  %23 = load %struct.subsys_private*, %struct.subsys_private** %p29, align 8, !dbg !11941
  %subsys30 = getelementptr inbounds %struct.subsys_private, %struct.subsys_private* %23, i32 0, i32 0, !dbg !11942
  %kobj31 = getelementptr inbounds %struct.kset, %struct.kset* %subsys30, i32 0, i32 2, !dbg !11943
  %24 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11944
  %kobj32 = getelementptr inbounds %struct.device, %struct.device* %24, i32 0, i32 0, !dbg !11945
  %25 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11946
  %call33 = call i8* @dev_name(%struct.device* %25) #10, !dbg !11947
  %call34 = call i32 @sysfs_create_link(%struct.kobject* %kobj31, %struct.kobject* %kobj32, i8* %call33) #10, !dbg !11948
  store i32 %call34, i32* %error, align 4, !dbg !11949
  %26 = load i32, i32* %error, align 4, !dbg !11950
  %tobool35 = icmp ne i32 %26, 0, !dbg !11950
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !11952

if.then36:                                        ; preds = %if.end27
  br label %out_device, !dbg !11953

if.end37:                                         ; preds = %if.end27
  store i32 0, i32* %retval, align 4, !dbg !11954
  br label %return, !dbg !11954

out_device:                                       ; preds = %if.then36
  call void @llvm.dbg.label(metadata !11955), !dbg !11956
  %27 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11957
  %kobj38 = getelementptr inbounds %struct.device, %struct.device* %27, i32 0, i32 0, !dbg !11958
  call void @sysfs_remove_link(%struct.kobject* %kobj38, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.65, i64 0, i64 0)) #10, !dbg !11959
  br label %out_subsys, !dbg !11959

out_subsys:                                       ; preds = %out_device, %if.then25
  call void @llvm.dbg.label(metadata !11960), !dbg !11961
  %28 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11962
  %kobj39 = getelementptr inbounds %struct.device, %struct.device* %28, i32 0, i32 0, !dbg !11963
  call void @sysfs_remove_link(%struct.kobject* %kobj39, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i64 0, i64 0)) #10, !dbg !11964
  br label %out_devnode, !dbg !11964

out_devnode:                                      ; preds = %out_subsys, %if.then14
  call void @llvm.dbg.label(metadata !11965), !dbg !11966
  %29 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11967
  %kobj40 = getelementptr inbounds %struct.device, %struct.device* %29, i32 0, i32 0, !dbg !11968
  call void @sysfs_remove_link(%struct.kobject* %kobj40, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.62, i64 0, i64 0)) #10, !dbg !11969
  %30 = load i32, i32* %error, align 4, !dbg !11970
  store i32 %30, i32* %retval, align 4, !dbg !11971
  br label %return, !dbg !11971

return:                                           ; preds = %out_devnode, %if.end37, %if.then7
  %31 = load i32, i32* %retval, align 4, !dbg !11972
  ret i32 %31, !dbg !11972
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @device_add_attrs(%struct.device* %dev) #0 !dbg !11973 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %class = alloca %struct.class*, align 8
  %type = alloca %struct.device_type*, align 8
  %error = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11974, metadata !DIExpression()), !dbg !11975
  call void @llvm.dbg.declare(metadata %struct.class** %class, metadata !11976, metadata !DIExpression()), !dbg !11977
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11978
  %class1 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 29, !dbg !11979
  %1 = load %struct.class*, %struct.class** %class1, align 8, !dbg !11979
  store %struct.class* %1, %struct.class** %class, align 8, !dbg !11977
  call void @llvm.dbg.declare(metadata %struct.device_type** %type, metadata !11980, metadata !DIExpression()), !dbg !11981
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11982
  %type2 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !11983
  %3 = load %struct.device_type*, %struct.device_type** %type2, align 8, !dbg !11983
  store %struct.device_type* %3, %struct.device_type** %type, align 8, !dbg !11981
  call void @llvm.dbg.declare(metadata i32* %error, metadata !11984, metadata !DIExpression()), !dbg !11985
  %4 = load %struct.class*, %struct.class** %class, align 8, !dbg !11986
  %tobool = icmp ne %struct.class* %4, null, !dbg !11986
  br i1 %tobool, label %if.then, label %if.end5, !dbg !11988

if.then:                                          ; preds = %entry
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11989
  %6 = load %struct.class*, %struct.class** %class, align 8, !dbg !11991
  %dev_groups = getelementptr inbounds %struct.class, %struct.class* %6, i32 0, i32 3, !dbg !11992
  %7 = load %struct.attribute_group**, %struct.attribute_group*** %dev_groups, align 8, !dbg !11992
  %call = call i32 @device_add_groups(%struct.device* %5, %struct.attribute_group** %7) #10, !dbg !11993
  store i32 %call, i32* %error, align 4, !dbg !11994
  %8 = load i32, i32* %error, align 4, !dbg !11995
  %tobool3 = icmp ne i32 %8, 0, !dbg !11995
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !11997

if.then4:                                         ; preds = %if.then
  %9 = load i32, i32* %error, align 4, !dbg !11998
  store i32 %9, i32* %retval, align 4, !dbg !11999
  br label %return, !dbg !11999

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !12000

if.end5:                                          ; preds = %if.end, %entry
  %10 = load %struct.device_type*, %struct.device_type** %type, align 8, !dbg !12001
  %tobool6 = icmp ne %struct.device_type* %10, null, !dbg !12001
  br i1 %tobool6, label %if.then7, label %if.end12, !dbg !12003

if.then7:                                         ; preds = %if.end5
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12004
  %12 = load %struct.device_type*, %struct.device_type** %type, align 8, !dbg !12006
  %groups = getelementptr inbounds %struct.device_type, %struct.device_type* %12, i32 0, i32 1, !dbg !12007
  %13 = load %struct.attribute_group**, %struct.attribute_group*** %groups, align 8, !dbg !12007
  %call8 = call i32 @device_add_groups(%struct.device* %11, %struct.attribute_group** %13) #10, !dbg !12008
  store i32 %call8, i32* %error, align 4, !dbg !12009
  %14 = load i32, i32* %error, align 4, !dbg !12010
  %tobool9 = icmp ne i32 %14, 0, !dbg !12010
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !12012

if.then10:                                        ; preds = %if.then7
  br label %err_remove_class_groups, !dbg !12013

if.end11:                                         ; preds = %if.then7
  br label %if.end12, !dbg !12014

if.end12:                                         ; preds = %if.end11, %if.end5
  %15 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12015
  %16 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12016
  %groups13 = getelementptr inbounds %struct.device, %struct.device* %16, i32 0, i32 30, !dbg !12017
  %17 = load %struct.attribute_group**, %struct.attribute_group*** %groups13, align 8, !dbg !12017
  %call14 = call i32 @device_add_groups(%struct.device* %15, %struct.attribute_group** %17) #10, !dbg !12018
  store i32 %call14, i32* %error, align 4, !dbg !12019
  %18 = load i32, i32* %error, align 4, !dbg !12020
  %tobool15 = icmp ne i32 %18, 0, !dbg !12020
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !12022

if.then16:                                        ; preds = %if.end12
  br label %err_remove_type_groups, !dbg !12023

if.end17:                                         ; preds = %if.end12
  %19 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12024
  %call18 = call zeroext i1 @device_supports_offline(%struct.device* %19) #10, !dbg !12026
  br i1 %call18, label %land.lhs.true, label %if.end24, !dbg !12027

land.lhs.true:                                    ; preds = %if.end17
  %20 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12028
  %offline_disabled = getelementptr inbounds %struct.device, %struct.device* %20, i32 0, i32 34, !dbg !12029
  %bf.load = load i8, i8* %offline_disabled, align 8, !dbg !12029
  %bf.clear = and i8 %bf.load, 1, !dbg !12029
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !12029
  br i1 %bf.cast, label %if.end24, label %if.then19, !dbg !12030

if.then19:                                        ; preds = %land.lhs.true
  %21 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12031
  %call20 = call i32 @device_create_file(%struct.device* %21, %struct.device_attribute* @dev_attr_online) #10, !dbg !12033
  store i32 %call20, i32* %error, align 4, !dbg !12034
  %22 = load i32, i32* %error, align 4, !dbg !12035
  %tobool21 = icmp ne i32 %22, 0, !dbg !12035
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !12037

if.then22:                                        ; preds = %if.then19
  br label %err_remove_dev_groups, !dbg !12038

if.end23:                                         ; preds = %if.then19
  br label %if.end24, !dbg !12039

if.end24:                                         ; preds = %if.end23, %land.lhs.true, %if.end17
  %23 = load i32, i32* @fw_devlink_flags, align 4, !dbg !12040
  %tobool25 = icmp ne i32 %23, 0, !dbg !12040
  br i1 %tobool25, label %land.lhs.true26, label %if.end33, !dbg !12042

land.lhs.true26:                                  ; preds = %if.end24
  %call27 = call zeroext i1 @fw_devlink_is_permissive() #10, !dbg !12043
  br i1 %call27, label %if.end33, label %if.then28, !dbg !12044

if.then28:                                        ; preds = %land.lhs.true26
  %24 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12045
  %call29 = call i32 @device_create_file(%struct.device* %24, %struct.device_attribute* @dev_attr_waiting_for_supplier) #10, !dbg !12047
  store i32 %call29, i32* %error, align 4, !dbg !12048
  %25 = load i32, i32* %error, align 4, !dbg !12049
  %tobool30 = icmp ne i32 %25, 0, !dbg !12049
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !12051

if.then31:                                        ; preds = %if.then28
  br label %err_remove_dev_online, !dbg !12052

if.end32:                                         ; preds = %if.then28
  br label %if.end33, !dbg !12053

if.end33:                                         ; preds = %if.end32, %land.lhs.true26, %if.end24
  store i32 0, i32* %retval, align 4, !dbg !12054
  br label %return, !dbg !12054

err_remove_dev_online:                            ; preds = %if.then31
  call void @llvm.dbg.label(metadata !12055), !dbg !12056
  %26 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12057
  call void @device_remove_file(%struct.device* %26, %struct.device_attribute* @dev_attr_online) #10, !dbg !12058
  br label %err_remove_dev_groups, !dbg !12058

err_remove_dev_groups:                            ; preds = %err_remove_dev_online, %if.then22
  call void @llvm.dbg.label(metadata !12059), !dbg !12060
  %27 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12061
  %28 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12062
  %groups34 = getelementptr inbounds %struct.device, %struct.device* %28, i32 0, i32 30, !dbg !12063
  %29 = load %struct.attribute_group**, %struct.attribute_group*** %groups34, align 8, !dbg !12063
  call void @device_remove_groups(%struct.device* %27, %struct.attribute_group** %29) #10, !dbg !12064
  br label %err_remove_type_groups, !dbg !12064

err_remove_type_groups:                           ; preds = %err_remove_dev_groups, %if.then16
  call void @llvm.dbg.label(metadata !12065), !dbg !12066
  %30 = load %struct.device_type*, %struct.device_type** %type, align 8, !dbg !12067
  %tobool35 = icmp ne %struct.device_type* %30, null, !dbg !12067
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !12069

if.then36:                                        ; preds = %err_remove_type_groups
  %31 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12070
  %32 = load %struct.device_type*, %struct.device_type** %type, align 8, !dbg !12071
  %groups37 = getelementptr inbounds %struct.device_type, %struct.device_type* %32, i32 0, i32 1, !dbg !12072
  %33 = load %struct.attribute_group**, %struct.attribute_group*** %groups37, align 8, !dbg !12072
  call void @device_remove_groups(%struct.device* %31, %struct.attribute_group** %33) #10, !dbg !12073
  br label %if.end38, !dbg !12073

if.end38:                                         ; preds = %if.then36, %err_remove_type_groups
  br label %err_remove_class_groups, !dbg !12067

err_remove_class_groups:                          ; preds = %if.end38, %if.then10
  call void @llvm.dbg.label(metadata !12074), !dbg !12075
  %34 = load %struct.class*, %struct.class** %class, align 8, !dbg !12076
  %tobool39 = icmp ne %struct.class* %34, null, !dbg !12076
  br i1 %tobool39, label %if.then40, label %if.end42, !dbg !12078

if.then40:                                        ; preds = %err_remove_class_groups
  %35 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12079
  %36 = load %struct.class*, %struct.class** %class, align 8, !dbg !12080
  %dev_groups41 = getelementptr inbounds %struct.class, %struct.class* %36, i32 0, i32 3, !dbg !12081
  %37 = load %struct.attribute_group**, %struct.attribute_group*** %dev_groups41, align 8, !dbg !12081
  call void @device_remove_groups(%struct.device* %35, %struct.attribute_group** %37) #10, !dbg !12082
  br label %if.end42, !dbg !12082

if.end42:                                         ; preds = %if.then40, %err_remove_class_groups
  %38 = load i32, i32* %error, align 4, !dbg !12083
  store i32 %38, i32* %retval, align 4, !dbg !12084
  br label %return, !dbg !12084

return:                                           ; preds = %if.end42, %if.end33, %if.then4
  %39 = load i32, i32* %retval, align 4, !dbg !12085
  ret i32 %39, !dbg !12085
}

; Function Attrs: noredzone
declare dso_local i32 @bus_add_device(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local i32 @dpm_sysfs_add(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @device_pm_add(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @device_create_sys_dev_entry(%struct.device* %dev) #0 !dbg !12086 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %kobj = alloca %struct.kobject*, align 8
  %error = alloca i32, align 4
  %devt_str = alloca [15 x i8], align 1
  %tmp = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12087, metadata !DIExpression()), !dbg !12088
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj, metadata !12089, metadata !DIExpression()), !dbg !12090
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12091
  %call = call %struct.kobject* @device_to_dev_kobj(%struct.device* %0) #10, !dbg !12092
  store %struct.kobject* %call, %struct.kobject** %kobj, align 8, !dbg !12090
  call void @llvm.dbg.declare(metadata i32* %error, metadata !12093, metadata !DIExpression()), !dbg !12094
  store i32 0, i32* %error, align 4, !dbg !12094
  call void @llvm.dbg.declare(metadata [15 x i8]* %devt_str, metadata !12095, metadata !DIExpression()), !dbg !12099
  %1 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !12100
  %tobool = icmp ne %struct.kobject* %1, null, !dbg !12100
  br i1 %tobool, label %if.then, label %if.end, !dbg !12102

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [15 x i8], [15 x i8]* %devt_str, i64 0, i64 0, !dbg !12103
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12103
  %devt = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 25, !dbg !12103
  %3 = load i32, i32* %devt, align 8, !dbg !12103
  %shr = lshr i32 %3, 20, !dbg !12103
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12103
  %devt1 = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 25, !dbg !12103
  %5 = load i32, i32* %devt1, align 8, !dbg !12103
  %and = and i32 %5, 1048575, !dbg !12103
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.68, i64 0, i64 0), i32 %shr, i32 %and) #10, !dbg !12103
  %arraydecay3 = getelementptr inbounds [15 x i8], [15 x i8]* %devt_str, i64 0, i64 0, !dbg !12103
  store i8* %arraydecay3, i8** %tmp, align 8, !dbg !12103
  %6 = load i8*, i8** %tmp, align 8, !dbg !12103
  %7 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !12106
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12107
  %kobj4 = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 0, !dbg !12108
  %arraydecay5 = getelementptr inbounds [15 x i8], [15 x i8]* %devt_str, i64 0, i64 0, !dbg !12109
  %call6 = call i32 @sysfs_create_link(%struct.kobject* %7, %struct.kobject* %kobj4, i8* %arraydecay5) #10, !dbg !12110
  store i32 %call6, i32* %error, align 4, !dbg !12111
  br label %if.end, !dbg !12112

if.end:                                           ; preds = %if.then, %entry
  %9 = load i32, i32* %error, align 4, !dbg !12113
  ret i32 %9, !dbg !12114
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devtmpfs_create_node(%struct.device* %dev) #0 !dbg !12115 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12116, metadata !DIExpression()), !dbg !12117
  ret i32 0, !dbg !12118
}

; Function Attrs: noredzone
declare dso_local i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head*, i64, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @kobject_uevent(%struct.kobject*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fw_devlink_link_device(%struct.device* %dev) #0 !dbg !12119 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %fw_ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12120, metadata !DIExpression()), !dbg !12121
  call void @llvm.dbg.declare(metadata i32* %fw_ret, metadata !12122, metadata !DIExpression()), !dbg !12123
  %0 = load i32, i32* @fw_devlink_flags, align 4, !dbg !12124
  %tobool = icmp ne i32 %0, 0, !dbg !12124
  br i1 %tobool, label %if.end, label %if.then, !dbg !12126

if.then:                                          ; preds = %entry
  br label %return, !dbg !12127

if.end:                                           ; preds = %entry
  call void @mutex_lock(%struct.mutex* @defer_fw_devlink_lock) #10, !dbg !12128
  %1 = load i32, i32* @defer_fw_devlink_count, align 4, !dbg !12129
  %tobool1 = icmp ne i32 %1, 0, !dbg !12129
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !12131

if.then2:                                         ; preds = %if.end
  call void @device_link_add_missing_supplier_links() #10, !dbg !12132
  br label %if.end3, !dbg !12132

if.end3:                                          ; preds = %if.then2, %if.end
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12133
  %fwnode = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 24, !dbg !12133
  %3 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !12133
  %tobool4 = icmp ne %struct.fwnode_handle* %3, null, !dbg !12133
  br i1 %tobool4, label %land.lhs.true, label %if.then11, !dbg !12133

land.lhs.true:                                    ; preds = %if.end3
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12133
  %fwnode5 = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 24, !dbg !12133
  %5 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode5, align 8, !dbg !12133
  %ops = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %5, i32 0, i32 1, !dbg !12133
  %6 = load %struct.fwnode_operations*, %struct.fwnode_operations** %ops, align 8, !dbg !12133
  %tobool6 = icmp ne %struct.fwnode_operations* %6, null, !dbg !12133
  br i1 %tobool6, label %land.lhs.true7, label %if.then11, !dbg !12133

land.lhs.true7:                                   ; preds = %land.lhs.true
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12133
  %fwnode8 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 24, !dbg !12133
  %8 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode8, align 8, !dbg !12133
  %ops9 = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %8, i32 0, i32 1, !dbg !12133
  %9 = load %struct.fwnode_operations*, %struct.fwnode_operations** %ops9, align 8, !dbg !12133
  %add_links = getelementptr inbounds %struct.fwnode_operations, %struct.fwnode_operations* %9, i32 0, i32 17, !dbg !12133
  %10 = load i32 (%struct.fwnode_handle*, %struct.device*)*, i32 (%struct.fwnode_handle*, %struct.device*)** %add_links, align 8, !dbg !12133
  %tobool10 = icmp ne i32 (%struct.fwnode_handle*, %struct.device*)* %10, null, !dbg !12133
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !12135

if.then11:                                        ; preds = %land.lhs.true7, %land.lhs.true, %if.end3
  br label %out, !dbg !12136

if.end12:                                         ; preds = %land.lhs.true7
  %11 = load i32, i32* @defer_fw_devlink_count, align 4, !dbg !12137
  %tobool13 = icmp ne i32 %11, 0, !dbg !12137
  br i1 %tobool13, label %if.else, label %if.then14, !dbg !12139

if.then14:                                        ; preds = %if.end12
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12140
  %fwnode15 = getelementptr inbounds %struct.device, %struct.device* %12, i32 0, i32 24, !dbg !12140
  %13 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode15, align 8, !dbg !12140
  %tobool16 = icmp ne %struct.fwnode_handle* %13, null, !dbg !12140
  br i1 %tobool16, label %cond.true, label %cond.false33, !dbg !12140

cond.true:                                        ; preds = %if.then14
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12140
  %fwnode17 = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 24, !dbg !12140
  %15 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode17, align 8, !dbg !12140
  %tobool18 = icmp ne %struct.fwnode_handle* %15, null, !dbg !12140
  br i1 %tobool18, label %land.lhs.true19, label %cond.false, !dbg !12140

land.lhs.true19:                                  ; preds = %cond.true
  %16 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12140
  %fwnode20 = getelementptr inbounds %struct.device, %struct.device* %16, i32 0, i32 24, !dbg !12140
  %17 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode20, align 8, !dbg !12140
  %ops21 = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %17, i32 0, i32 1, !dbg !12140
  %18 = load %struct.fwnode_operations*, %struct.fwnode_operations** %ops21, align 8, !dbg !12140
  %tobool22 = icmp ne %struct.fwnode_operations* %18, null, !dbg !12140
  br i1 %tobool22, label %land.lhs.true23, label %cond.false, !dbg !12140

land.lhs.true23:                                  ; preds = %land.lhs.true19
  %19 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12140
  %fwnode24 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 24, !dbg !12140
  %20 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode24, align 8, !dbg !12140
  %ops25 = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %20, i32 0, i32 1, !dbg !12140
  %21 = load %struct.fwnode_operations*, %struct.fwnode_operations** %ops25, align 8, !dbg !12140
  %add_links26 = getelementptr inbounds %struct.fwnode_operations, %struct.fwnode_operations* %21, i32 0, i32 17, !dbg !12140
  %22 = load i32 (%struct.fwnode_handle*, %struct.device*)*, i32 (%struct.fwnode_handle*, %struct.device*)** %add_links26, align 8, !dbg !12140
  %tobool27 = icmp ne i32 (%struct.fwnode_handle*, %struct.device*)* %22, null, !dbg !12140
  br i1 %tobool27, label %cond.true28, label %cond.false, !dbg !12140

cond.true28:                                      ; preds = %land.lhs.true23
  %23 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12140
  %fwnode29 = getelementptr inbounds %struct.device, %struct.device* %23, i32 0, i32 24, !dbg !12140
  %24 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode29, align 8, !dbg !12140
  %ops30 = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %24, i32 0, i32 1, !dbg !12140
  %25 = load %struct.fwnode_operations*, %struct.fwnode_operations** %ops30, align 8, !dbg !12140
  %add_links31 = getelementptr inbounds %struct.fwnode_operations, %struct.fwnode_operations* %25, i32 0, i32 17, !dbg !12140
  %26 = load i32 (%struct.fwnode_handle*, %struct.device*)*, i32 (%struct.fwnode_handle*, %struct.device*)** %add_links31, align 8, !dbg !12140
  %27 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12140
  %fwnode32 = getelementptr inbounds %struct.device, %struct.device* %27, i32 0, i32 24, !dbg !12140
  %28 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode32, align 8, !dbg !12140
  %29 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12140
  %call = call i32 %26(%struct.fwnode_handle* %28, %struct.device* %29) #10, !dbg !12140
  br label %cond.end, !dbg !12140

cond.false:                                       ; preds = %land.lhs.true23, %land.lhs.true19, %cond.true
  br label %cond.end, !dbg !12140

cond.end:                                         ; preds = %cond.false, %cond.true28
  %cond = phi i32 [ %call, %cond.true28 ], [ -6, %cond.false ], !dbg !12140
  br label %cond.end34, !dbg !12140

cond.false33:                                     ; preds = %if.then14
  br label %cond.end34, !dbg !12140

cond.end34:                                       ; preds = %cond.false33, %cond.end
  %cond35 = phi i32 [ %cond, %cond.end ], [ -22, %cond.false33 ], !dbg !12140
  store i32 %cond35, i32* %fw_ret, align 4, !dbg !12142
  %30 = load i32, i32* %fw_ret, align 4, !dbg !12143
  %cmp = icmp eq i32 %30, -19, !dbg !12145
  br i1 %cmp, label %land.lhs.true36, label %if.end39, !dbg !12146

land.lhs.true36:                                  ; preds = %cond.end34
  %call37 = call zeroext i1 @fw_devlink_is_permissive() #10, !dbg !12147
  br i1 %call37, label %if.then38, label %if.end39, !dbg !12148

if.then38:                                        ; preds = %land.lhs.true36
  store i32 -11, i32* %fw_ret, align 4, !dbg !12149
  br label %if.end39, !dbg !12150

if.end39:                                         ; preds = %if.then38, %land.lhs.true36, %cond.end34
  br label %if.end40, !dbg !12151

if.else:                                          ; preds = %if.end12
  store i32 -19, i32* %fw_ret, align 4, !dbg !12152
  %31 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12154
  %links = getelementptr inbounds %struct.device, %struct.device* %31, i32 0, i32 10, !dbg !12155
  %defer_hook = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 3, !dbg !12156
  call void @list_add_tail(%struct.list_head* %defer_hook, %struct.list_head* @deferred_fw_devlink) #10, !dbg !12157
  br label %if.end40

if.end40:                                         ; preds = %if.else, %if.end39
  %32 = load i32, i32* %fw_ret, align 4, !dbg !12158
  %cmp41 = icmp eq i32 %32, -19, !dbg !12160
  br i1 %cmp41, label %if.then42, label %if.else43, !dbg !12161

if.then42:                                        ; preds = %if.end40
  %33 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12162
  call void @device_link_wait_for_mandatory_supplier(%struct.device* %33) #10, !dbg !12163
  br label %if.end47, !dbg !12163

if.else43:                                        ; preds = %if.end40
  %34 = load i32, i32* %fw_ret, align 4, !dbg !12164
  %tobool44 = icmp ne i32 %34, 0, !dbg !12164
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !12166

if.then45:                                        ; preds = %if.else43
  %35 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12167
  call void @device_link_wait_for_optional_supplier(%struct.device* %35) #10, !dbg !12168
  br label %if.end46, !dbg !12168

if.end46:                                         ; preds = %if.then45, %if.else43
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then42
  br label %out, !dbg !12169

out:                                              ; preds = %if.end47, %if.then11
  call void @llvm.dbg.label(metadata !12170), !dbg !12171
  call void @mutex_unlock(%struct.mutex* @defer_fw_devlink_lock) #10, !dbg !12172
  br label %return, !dbg !12173

return:                                           ; preds = %out, %if.then
  ret void, !dbg !12173
}

; Function Attrs: noredzone
declare dso_local void @klist_add_tail(%struct.klist_node*, %struct.klist*) #2

; Function Attrs: noredzone
declare dso_local void @device_pm_remove(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @dpm_sysfs_remove(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @bus_remove_device(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_remove_attrs(%struct.device* %dev) #0 !dbg !12174 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %class = alloca %struct.class*, align 8
  %type = alloca %struct.device_type*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12175, metadata !DIExpression()), !dbg !12176
  call void @llvm.dbg.declare(metadata %struct.class** %class, metadata !12177, metadata !DIExpression()), !dbg !12178
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12179
  %class1 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 29, !dbg !12180
  %1 = load %struct.class*, %struct.class** %class1, align 8, !dbg !12180
  store %struct.class* %1, %struct.class** %class, align 8, !dbg !12178
  call void @llvm.dbg.declare(metadata %struct.device_type** %type, metadata !12181, metadata !DIExpression()), !dbg !12182
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12183
  %type2 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !12184
  %3 = load %struct.device_type*, %struct.device_type** %type2, align 8, !dbg !12184
  store %struct.device_type* %3, %struct.device_type** %type, align 8, !dbg !12182
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12185
  call void @device_remove_file(%struct.device* %4, %struct.device_attribute* @dev_attr_waiting_for_supplier) #10, !dbg !12186
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12187
  call void @device_remove_file(%struct.device* %5, %struct.device_attribute* @dev_attr_online) #10, !dbg !12188
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12189
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12190
  %groups = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 30, !dbg !12191
  %8 = load %struct.attribute_group**, %struct.attribute_group*** %groups, align 8, !dbg !12191
  call void @device_remove_groups(%struct.device* %6, %struct.attribute_group** %8) #10, !dbg !12192
  %9 = load %struct.device_type*, %struct.device_type** %type, align 8, !dbg !12193
  %tobool = icmp ne %struct.device_type* %9, null, !dbg !12193
  br i1 %tobool, label %if.then, label %if.end, !dbg !12195

if.then:                                          ; preds = %entry
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12196
  %11 = load %struct.device_type*, %struct.device_type** %type, align 8, !dbg !12197
  %groups3 = getelementptr inbounds %struct.device_type, %struct.device_type* %11, i32 0, i32 1, !dbg !12198
  %12 = load %struct.attribute_group**, %struct.attribute_group*** %groups3, align 8, !dbg !12198
  call void @device_remove_groups(%struct.device* %10, %struct.attribute_group** %12) #10, !dbg !12199
  br label %if.end, !dbg !12199

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.class*, %struct.class** %class, align 8, !dbg !12200
  %tobool4 = icmp ne %struct.class* %13, null, !dbg !12200
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !12202

if.then5:                                         ; preds = %if.end
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12203
  %15 = load %struct.class*, %struct.class** %class, align 8, !dbg !12204
  %dev_groups = getelementptr inbounds %struct.class, %struct.class* %15, i32 0, i32 3, !dbg !12205
  %16 = load %struct.attribute_group**, %struct.attribute_group*** %dev_groups, align 8, !dbg !12205
  call void @device_remove_groups(%struct.device* %14, %struct.attribute_group** %16) #10, !dbg !12206
  br label %if.end6, !dbg !12206

if.end6:                                          ; preds = %if.then5, %if.end
  ret void, !dbg !12207
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_remove_class_symlinks(%struct.device* %dev) #0 !dbg !12208 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12209, metadata !DIExpression()), !dbg !12210
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12211
  %call = call %struct.device_node* @dev_of_node(%struct.device* %0) #10, !dbg !12213
  %tobool = icmp ne %struct.device_node* %call, null, !dbg !12213
  br i1 %tobool, label %if.then, label %if.end, !dbg !12214

if.then:                                          ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12215
  %kobj = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 0, !dbg !12216
  call void @sysfs_remove_link(%struct.kobject* %kobj, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.62, i64 0, i64 0)) #10, !dbg !12217
  br label %if.end, !dbg !12217

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12218
  %class = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 29, !dbg !12220
  %3 = load %struct.class*, %struct.class** %class, align 8, !dbg !12220
  %tobool1 = icmp ne %struct.class* %3, null, !dbg !12218
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !12221

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !12222

if.end3:                                          ; preds = %if.end
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12223
  %parent = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 1, !dbg !12225
  %5 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12225
  %tobool4 = icmp ne %struct.device* %5, null, !dbg !12223
  br i1 %tobool4, label %land.lhs.true, label %if.end9, !dbg !12226

land.lhs.true:                                    ; preds = %if.end3
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12227
  %call5 = call i32 @device_is_not_partition(%struct.device* %6) #10, !dbg !12228
  %tobool6 = icmp ne i32 %call5, 0, !dbg !12228
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !12229

if.then7:                                         ; preds = %land.lhs.true
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12230
  %kobj8 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 0, !dbg !12231
  call void @sysfs_remove_link(%struct.kobject* %kobj8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.65, i64 0, i64 0)) #10, !dbg !12232
  br label %if.end9, !dbg !12232

if.end9:                                          ; preds = %if.then7, %land.lhs.true, %if.end3
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12233
  %kobj10 = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 0, !dbg !12234
  call void @sysfs_remove_link(%struct.kobject* %kobj10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i64 0, i64 0)) #10, !dbg !12235
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12236
  %class11 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 29, !dbg !12237
  %10 = load %struct.class*, %struct.class** %class11, align 8, !dbg !12237
  %p = getelementptr inbounds %struct.class, %struct.class* %10, i32 0, i32 14, !dbg !12238
  %11 = load %struct.subsys_private*, %struct.subsys_private** %p, align 8, !dbg !12238
  %subsys = getelementptr inbounds %struct.subsys_private, %struct.subsys_private* %11, i32 0, i32 0, !dbg !12239
  %kobj12 = getelementptr inbounds %struct.kset, %struct.kset* %subsys, i32 0, i32 2, !dbg !12240
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12241
  %kobj13 = getelementptr inbounds %struct.device, %struct.device* %12, i32 0, i32 0, !dbg !12242
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12243
  %call14 = call i8* @dev_name(%struct.device* %13) #10, !dbg !12244
  call void @sysfs_delete_link(%struct.kobject* %kobj12, %struct.kobject* %kobj13, i8* %call14) #10, !dbg !12245
  br label %return, !dbg !12246

return:                                           ; preds = %if.end9, %if.then2
  ret void, !dbg !12246
}

; Function Attrs: noredzone
declare dso_local void @kobject_del(%struct.kobject*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cleanup_glue_dir(%struct.device* %dev, %struct.kobject* %glue_dir) #0 !dbg !12247 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %glue_dir.addr = alloca %struct.kobject*, align 8
  %ref = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12250, metadata !DIExpression()), !dbg !12251
  store %struct.kobject* %glue_dir, %struct.kobject** %glue_dir.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %glue_dir.addr, metadata !12252, metadata !DIExpression()), !dbg !12253
  call void @llvm.dbg.declare(metadata i32* %ref, metadata !12254, metadata !DIExpression()), !dbg !12255
  %0 = load %struct.kobject*, %struct.kobject** %glue_dir.addr, align 8, !dbg !12256
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12258
  %call = call zeroext i1 @live_in_glue_dir(%struct.kobject* %0, %struct.device* %1) #10, !dbg !12259
  br i1 %call, label %if.end, label %if.then, !dbg !12260

if.then:                                          ; preds = %entry
  br label %return, !dbg !12261

if.end:                                           ; preds = %entry
  call void @mutex_lock(%struct.mutex* @gdp_mutex) #10, !dbg !12262
  %2 = load %struct.kobject*, %struct.kobject** %glue_dir.addr, align 8, !dbg !12263
  %kref = getelementptr inbounds %struct.kobject, %struct.kobject* %2, i32 0, i32 6, !dbg !12264
  %call1 = call i32 @kref_read(%struct.kref* %kref) #10, !dbg !12265
  store i32 %call1, i32* %ref, align 4, !dbg !12266
  %3 = load %struct.kobject*, %struct.kobject** %glue_dir.addr, align 8, !dbg !12267
  %call2 = call zeroext i1 @kobject_has_children(%struct.kobject* %3) #10, !dbg !12269
  br i1 %call2, label %if.end4, label %land.lhs.true, !dbg !12270

land.lhs.true:                                    ; preds = %if.end
  %4 = load i32, i32* %ref, align 4, !dbg !12271
  %dec = add i32 %4, -1, !dbg !12271
  store i32 %dec, i32* %ref, align 4, !dbg !12271
  %tobool = icmp ne i32 %dec, 0, !dbg !12271
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !12272

if.then3:                                         ; preds = %land.lhs.true
  %5 = load %struct.kobject*, %struct.kobject** %glue_dir.addr, align 8, !dbg !12273
  call void @kobject_del(%struct.kobject* %5) #10, !dbg !12274
  br label %if.end4, !dbg !12274

if.end4:                                          ; preds = %if.then3, %land.lhs.true, %if.end
  %6 = load %struct.kobject*, %struct.kobject** %glue_dir.addr, align 8, !dbg !12275
  call void @kobject_put(%struct.kobject* %6) #10, !dbg !12276
  call void @mutex_unlock(%struct.mutex* @gdp_mutex) #10, !dbg !12277
  br label %return, !dbg !12278

return:                                           ; preds = %if.end4, %if.then
  ret void, !dbg !12278
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device* @kobj_to_dev(%struct.kobject* %kobj) #0 !dbg !12279 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !12282, metadata !DIExpression()), !dbg !12283
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12284, metadata !DIExpression()), !dbg !12286
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !12286
  %1 = bitcast %struct.kobject* %0 to i8*, !dbg !12286
  store i8* %1, i8** %__mptr, align 8, !dbg !12286
  br label %do.body, !dbg !12286

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12287

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12286
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !12286
  %3 = bitcast i8* %add.ptr to %struct.device*, !dbg !12286
  store %struct.device* %3, %struct.device** %tmp, align 8, !dbg !12287
  %4 = load %struct.device*, %struct.device** %tmp, align 8, !dbg !12286
  ret %struct.device* %4, !dbg !12289
}

; Function Attrs: noredzone
declare dso_local %struct.kobject* @kobject_get(%struct.kobject*) #2

; Function Attrs: noredzone
declare dso_local void @kobject_put(%struct.kobject*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @kill_device(%struct.device* %dev) #0 !dbg !12290 {
entry:
  %retval = alloca i1, align 1
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12291, metadata !DIExpression()), !dbg !12292
  br label %do.body, !dbg !12293

do.body:                                          ; preds = %entry
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12294
  %mutex = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 9, !dbg !12294
  br label %do.end, !dbg !12294

do.end:                                           ; preds = %do.body
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12296
  %p = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 2, !dbg !12298
  %2 = load %struct.device_private*, %struct.device_private** %p, align 8, !dbg !12298
  %dead = getelementptr inbounds %struct.device_private, %struct.device_private* %2, i32 0, i32 9, !dbg !12299
  %bf.load = load i8, i8* %dead, align 8, !dbg !12299
  %bf.clear = and i8 %bf.load, 1, !dbg !12299
  %tobool = icmp ne i8 %bf.clear, 0, !dbg !12296
  br i1 %tobool, label %if.then, label %if.end, !dbg !12300

if.then:                                          ; preds = %do.end
  store i1 false, i1* %retval, align 1, !dbg !12301
  br label %return, !dbg !12301

if.end:                                           ; preds = %do.end
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12302
  %p1 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 2, !dbg !12303
  %4 = load %struct.device_private*, %struct.device_private** %p1, align 8, !dbg !12303
  %dead2 = getelementptr inbounds %struct.device_private, %struct.device_private* %4, i32 0, i32 9, !dbg !12304
  %bf.load3 = load i8, i8* %dead2, align 8, !dbg !12305
  %bf.clear4 = and i8 %bf.load3, -2, !dbg !12305
  %bf.set = or i8 %bf.clear4, 1, !dbg !12305
  store i8 %bf.set, i8* %dead2, align 8, !dbg !12305
  store i1 true, i1* %retval, align 1, !dbg !12306
  br label %return, !dbg !12306

return:                                           ; preds = %if.end, %if.then
  %5 = load i1, i1* %retval, align 1, !dbg !12307
  ret i1 %5, !dbg !12307
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @device_del(%struct.device* %dev) #0 !dbg !12308 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %parent = alloca %struct.device*, align 8
  %glue_dir = alloca %struct.kobject*, align 8
  %class_intf = alloca %struct.class_interface*, align 8
  %noio_flag = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.class_interface*, align 8
  %__mptr34 = alloca i8*, align 8
  %tmp39 = alloca %struct.class_interface*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12309, metadata !DIExpression()), !dbg !12310
  call void @llvm.dbg.declare(metadata %struct.device** %parent, metadata !12311, metadata !DIExpression()), !dbg !12312
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12313
  %parent1 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12314
  %1 = load %struct.device*, %struct.device** %parent1, align 8, !dbg !12314
  store %struct.device* %1, %struct.device** %parent, align 8, !dbg !12312
  call void @llvm.dbg.declare(metadata %struct.kobject** %glue_dir, metadata !12315, metadata !DIExpression()), !dbg !12316
  store %struct.kobject* null, %struct.kobject** %glue_dir, align 8, !dbg !12316
  call void @llvm.dbg.declare(metadata %struct.class_interface** %class_intf, metadata !12317, metadata !DIExpression()), !dbg !12318
  call void @llvm.dbg.declare(metadata i32* %noio_flag, metadata !12319, metadata !DIExpression()), !dbg !12320
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12321
  call void @device_lock(%struct.device* %2) #10, !dbg !12322
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12323
  %call = call zeroext i1 @kill_device(%struct.device* %3) #10, !dbg !12324
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12325
  call void @device_unlock(%struct.device* %4) #10, !dbg !12326
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12327
  %fwnode = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 24, !dbg !12329
  %6 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !12329
  %tobool = icmp ne %struct.fwnode_handle* %6, null, !dbg !12327
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !12330

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12331
  %fwnode2 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 24, !dbg !12332
  %8 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode2, align 8, !dbg !12332
  %dev3 = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %8, i32 0, i32 2, !dbg !12333
  %9 = load %struct.device*, %struct.device** %dev3, align 8, !dbg !12333
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12334
  %cmp = icmp eq %struct.device* %9, %10, !dbg !12335
  br i1 %cmp, label %if.then, label %if.end, !dbg !12336

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12337
  %fwnode4 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 24, !dbg !12338
  %12 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode4, align 8, !dbg !12338
  %dev5 = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %12, i32 0, i32 2, !dbg !12339
  store %struct.device* null, %struct.device** %dev5, align 8, !dbg !12340
  br label %if.end, !dbg !12337

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %call6 = call i32 @memalloc_noio_save() #10, !dbg !12341
  store i32 %call6, i32* %noio_flag, align 4, !dbg !12342
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12343
  %bus = getelementptr inbounds %struct.device, %struct.device* %13, i32 0, i32 5, !dbg !12345
  %14 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !12345
  %tobool7 = icmp ne %struct.bus_type* %14, null, !dbg !12343
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !12346

if.then8:                                         ; preds = %if.end
  %15 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12347
  %bus9 = getelementptr inbounds %struct.device, %struct.device* %15, i32 0, i32 5, !dbg !12348
  %16 = load %struct.bus_type*, %struct.bus_type** %bus9, align 8, !dbg !12348
  %p = getelementptr inbounds %struct.bus_type, %struct.bus_type* %16, i32 0, i32 20, !dbg !12349
  %17 = load %struct.subsys_private*, %struct.subsys_private** %p, align 8, !dbg !12349
  %bus_notifier = getelementptr inbounds %struct.subsys_private, %struct.subsys_private* %17, i32 0, i32 7, !dbg !12350
  %18 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12351
  %19 = bitcast %struct.device* %18 to i8*, !dbg !12351
  %call10 = call i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head* %bus_notifier, i64 2, i8* %19) #10, !dbg !12352
  br label %if.end11, !dbg !12352

if.end11:                                         ; preds = %if.then8, %if.end
  %20 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12353
  call void @dpm_sysfs_remove(%struct.device* %20) #10, !dbg !12354
  %21 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12355
  %tobool12 = icmp ne %struct.device* %21, null, !dbg !12355
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !12357

if.then13:                                        ; preds = %if.end11
  %22 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12358
  %p14 = getelementptr inbounds %struct.device, %struct.device* %22, i32 0, i32 2, !dbg !12359
  %23 = load %struct.device_private*, %struct.device_private** %p14, align 8, !dbg !12359
  %knode_parent = getelementptr inbounds %struct.device_private, %struct.device_private* %23, i32 0, i32 1, !dbg !12360
  call void @klist_del(%struct.klist_node* %knode_parent) #10, !dbg !12361
  br label %if.end15, !dbg !12361

if.end15:                                         ; preds = %if.then13, %if.end11
  %24 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12362
  %devt = getelementptr inbounds %struct.device, %struct.device* %24, i32 0, i32 25, !dbg !12362
  %25 = load i32, i32* %devt, align 8, !dbg !12362
  %shr = lshr i32 %25, 20, !dbg !12362
  %tobool16 = icmp ne i32 %shr, 0, !dbg !12362
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !12364

if.then17:                                        ; preds = %if.end15
  %26 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12365
  %call18 = call i32 @devtmpfs_delete_node(%struct.device* %26) #10, !dbg !12367
  %27 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12368
  call void @device_remove_sys_dev_entry(%struct.device* %27) #10, !dbg !12369
  %28 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12370
  call void @device_remove_file(%struct.device* %28, %struct.device_attribute* @dev_attr_dev) #10, !dbg !12371
  br label %if.end19, !dbg !12372

if.end19:                                         ; preds = %if.then17, %if.end15
  %29 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12373
  %class = getelementptr inbounds %struct.device, %struct.device* %29, i32 0, i32 29, !dbg !12375
  %30 = load %struct.class*, %struct.class** %class, align 8, !dbg !12375
  %tobool20 = icmp ne %struct.class* %30, null, !dbg !12373
  br i1 %tobool20, label %if.then21, label %if.end45, !dbg !12376

if.then21:                                        ; preds = %if.end19
  %31 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12377
  call void @device_remove_class_symlinks(%struct.device* %31) #10, !dbg !12379
  %32 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12380
  %class22 = getelementptr inbounds %struct.device, %struct.device* %32, i32 0, i32 29, !dbg !12381
  %33 = load %struct.class*, %struct.class** %class22, align 8, !dbg !12381
  %p23 = getelementptr inbounds %struct.class, %struct.class* %33, i32 0, i32 14, !dbg !12382
  %34 = load %struct.subsys_private*, %struct.subsys_private** %p23, align 8, !dbg !12382
  %mutex = getelementptr inbounds %struct.subsys_private, %struct.subsys_private* %34, i32 0, i32 3, !dbg !12383
  call void @mutex_lock(%struct.mutex* %mutex) #10, !dbg !12384
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12385, metadata !DIExpression()), !dbg !12388
  %35 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12388
  %class24 = getelementptr inbounds %struct.device, %struct.device* %35, i32 0, i32 29, !dbg !12388
  %36 = load %struct.class*, %struct.class** %class24, align 8, !dbg !12388
  %p25 = getelementptr inbounds %struct.class, %struct.class* %36, i32 0, i32 14, !dbg !12388
  %37 = load %struct.subsys_private*, %struct.subsys_private** %p25, align 8, !dbg !12388
  %interfaces = getelementptr inbounds %struct.subsys_private, %struct.subsys_private* %37, i32 0, i32 2, !dbg !12388
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %interfaces, i32 0, i32 0, !dbg !12388
  %38 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !12388
  %39 = bitcast %struct.list_head* %38 to i8*, !dbg !12388
  store i8* %39, i8** %__mptr, align 8, !dbg !12388
  br label %do.body, !dbg !12388

do.body:                                          ; preds = %if.then21
  br label %do.end, !dbg !12389

do.end:                                           ; preds = %do.body
  %40 = load i8*, i8** %__mptr, align 8, !dbg !12388
  %add.ptr = getelementptr i8, i8* %40, i64 0, !dbg !12388
  %41 = bitcast i8* %add.ptr to %struct.class_interface*, !dbg !12388
  store %struct.class_interface* %41, %struct.class_interface** %tmp, align 8, !dbg !12389
  %42 = load %struct.class_interface*, %struct.class_interface** %tmp, align 8, !dbg !12388
  store %struct.class_interface* %42, %struct.class_interface** %class_intf, align 8, !dbg !12391
  br label %for.cond, !dbg !12391

for.cond:                                         ; preds = %do.end38, %do.end
  %43 = load %struct.class_interface*, %struct.class_interface** %class_intf, align 8, !dbg !12392
  %node = getelementptr inbounds %struct.class_interface, %struct.class_interface* %43, i32 0, i32 0, !dbg !12392
  %44 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12392
  %class26 = getelementptr inbounds %struct.device, %struct.device* %44, i32 0, i32 29, !dbg !12392
  %45 = load %struct.class*, %struct.class** %class26, align 8, !dbg !12392
  %p27 = getelementptr inbounds %struct.class, %struct.class* %45, i32 0, i32 14, !dbg !12392
  %46 = load %struct.subsys_private*, %struct.subsys_private** %p27, align 8, !dbg !12392
  %interfaces28 = getelementptr inbounds %struct.subsys_private, %struct.subsys_private* %46, i32 0, i32 2, !dbg !12392
  %cmp29 = icmp eq %struct.list_head* %node, %interfaces28, !dbg !12392
  %lnot = xor i1 %cmp29, true, !dbg !12392
  br i1 %lnot, label %for.body, label %for.end, !dbg !12391

for.body:                                         ; preds = %for.cond
  %47 = load %struct.class_interface*, %struct.class_interface** %class_intf, align 8, !dbg !12394
  %remove_dev = getelementptr inbounds %struct.class_interface, %struct.class_interface* %47, i32 0, i32 3, !dbg !12396
  %48 = load void (%struct.device*, %struct.class_interface*)*, void (%struct.device*, %struct.class_interface*)** %remove_dev, align 8, !dbg !12396
  %tobool30 = icmp ne void (%struct.device*, %struct.class_interface*)* %48, null, !dbg !12394
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !12397

if.then31:                                        ; preds = %for.body
  %49 = load %struct.class_interface*, %struct.class_interface** %class_intf, align 8, !dbg !12398
  %remove_dev32 = getelementptr inbounds %struct.class_interface, %struct.class_interface* %49, i32 0, i32 3, !dbg !12399
  %50 = load void (%struct.device*, %struct.class_interface*)*, void (%struct.device*, %struct.class_interface*)** %remove_dev32, align 8, !dbg !12399
  %51 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12400
  %52 = load %struct.class_interface*, %struct.class_interface** %class_intf, align 8, !dbg !12401
  call void %50(%struct.device* %51, %struct.class_interface* %52) #10, !dbg !12398
  br label %if.end33, !dbg !12398

if.end33:                                         ; preds = %if.then31, %for.body
  br label %for.inc, !dbg !12396

for.inc:                                          ; preds = %if.end33
  call void @llvm.dbg.declare(metadata i8** %__mptr34, metadata !12402, metadata !DIExpression()), !dbg !12404
  %53 = load %struct.class_interface*, %struct.class_interface** %class_intf, align 8, !dbg !12404
  %node35 = getelementptr inbounds %struct.class_interface, %struct.class_interface* %53, i32 0, i32 0, !dbg !12404
  %next36 = getelementptr inbounds %struct.list_head, %struct.list_head* %node35, i32 0, i32 0, !dbg !12404
  %54 = load %struct.list_head*, %struct.list_head** %next36, align 8, !dbg !12404
  %55 = bitcast %struct.list_head* %54 to i8*, !dbg !12404
  store i8* %55, i8** %__mptr34, align 8, !dbg !12404
  br label %do.body37, !dbg !12404

do.body37:                                        ; preds = %for.inc
  br label %do.end38, !dbg !12405

do.end38:                                         ; preds = %do.body37
  %56 = load i8*, i8** %__mptr34, align 8, !dbg !12404
  %add.ptr40 = getelementptr i8, i8* %56, i64 0, !dbg !12404
  %57 = bitcast i8* %add.ptr40 to %struct.class_interface*, !dbg !12404
  store %struct.class_interface* %57, %struct.class_interface** %tmp39, align 8, !dbg !12405
  %58 = load %struct.class_interface*, %struct.class_interface** %tmp39, align 8, !dbg !12404
  store %struct.class_interface* %58, %struct.class_interface** %class_intf, align 8, !dbg !12392
  br label %for.cond, !dbg !12392, !llvm.loop !12407

for.end:                                          ; preds = %for.cond
  %59 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12409
  %p41 = getelementptr inbounds %struct.device, %struct.device* %59, i32 0, i32 2, !dbg !12410
  %60 = load %struct.device_private*, %struct.device_private** %p41, align 8, !dbg !12410
  %knode_class = getelementptr inbounds %struct.device_private, %struct.device_private* %60, i32 0, i32 4, !dbg !12411
  call void @klist_del(%struct.klist_node* %knode_class) #10, !dbg !12412
  %61 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12413
  %class42 = getelementptr inbounds %struct.device, %struct.device* %61, i32 0, i32 29, !dbg !12414
  %62 = load %struct.class*, %struct.class** %class42, align 8, !dbg !12414
  %p43 = getelementptr inbounds %struct.class, %struct.class* %62, i32 0, i32 14, !dbg !12415
  %63 = load %struct.subsys_private*, %struct.subsys_private** %p43, align 8, !dbg !12415
  %mutex44 = getelementptr inbounds %struct.subsys_private, %struct.subsys_private* %63, i32 0, i32 3, !dbg !12416
  call void @mutex_unlock(%struct.mutex* %mutex44) #10, !dbg !12417
  br label %if.end45, !dbg !12418

if.end45:                                         ; preds = %for.end, %if.end19
  %64 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12419
  call void @device_remove_file(%struct.device* %64, %struct.device_attribute* @dev_attr_uevent) #10, !dbg !12420
  %65 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12421
  call void @device_remove_attrs(%struct.device* %65) #10, !dbg !12422
  %66 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12423
  call void @bus_remove_device(%struct.device* %66) #10, !dbg !12424
  %67 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12425
  call void @device_pm_remove(%struct.device* %67) #10, !dbg !12426
  %68 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12427
  call void @driver_deferred_probe_del(%struct.device* %68) #10, !dbg !12428
  %69 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12429
  %call46 = call i32 @device_platform_notify(%struct.device* %69, i32 1) #10, !dbg !12430
  %70 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12431
  call void @device_remove_properties(%struct.device* %70) #10, !dbg !12432
  %71 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12433
  call void @device_links_purge(%struct.device* %71) #10, !dbg !12434
  %72 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12435
  %bus47 = getelementptr inbounds %struct.device, %struct.device* %72, i32 0, i32 5, !dbg !12437
  %73 = load %struct.bus_type*, %struct.bus_type** %bus47, align 8, !dbg !12437
  %tobool48 = icmp ne %struct.bus_type* %73, null, !dbg !12435
  br i1 %tobool48, label %if.then49, label %if.end54, !dbg !12438

if.then49:                                        ; preds = %if.end45
  %74 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12439
  %bus50 = getelementptr inbounds %struct.device, %struct.device* %74, i32 0, i32 5, !dbg !12440
  %75 = load %struct.bus_type*, %struct.bus_type** %bus50, align 8, !dbg !12440
  %p51 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %75, i32 0, i32 20, !dbg !12441
  %76 = load %struct.subsys_private*, %struct.subsys_private** %p51, align 8, !dbg !12441
  %bus_notifier52 = getelementptr inbounds %struct.subsys_private, %struct.subsys_private* %76, i32 0, i32 7, !dbg !12442
  %77 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12443
  %78 = bitcast %struct.device* %77 to i8*, !dbg !12443
  %call53 = call i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head* %bus_notifier52, i64 3, i8* %78) #10, !dbg !12444
  br label %if.end54, !dbg !12444

if.end54:                                         ; preds = %if.then49, %if.end45
  %79 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12445
  %kobj = getelementptr inbounds %struct.device, %struct.device* %79, i32 0, i32 0, !dbg !12446
  %call55 = call i32 @kobject_uevent(%struct.kobject* %kobj, i32 1) #10, !dbg !12447
  %80 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12448
  %call56 = call %struct.kobject* @get_glue_dir(%struct.device* %80) #10, !dbg !12449
  store %struct.kobject* %call56, %struct.kobject** %glue_dir, align 8, !dbg !12450
  %81 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12451
  %kobj57 = getelementptr inbounds %struct.device, %struct.device* %81, i32 0, i32 0, !dbg !12452
  call void @kobject_del(%struct.kobject* %kobj57) #10, !dbg !12453
  %82 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12454
  %83 = load %struct.kobject*, %struct.kobject** %glue_dir, align 8, !dbg !12455
  call void @cleanup_glue_dir(%struct.device* %82, %struct.kobject* %83) #10, !dbg !12456
  %84 = load i32, i32* %noio_flag, align 4, !dbg !12457
  call void @memalloc_noio_restore(i32 %84) #10, !dbg !12458
  %85 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12459
  call void @put_device(%struct.device* %85) #10, !dbg !12460
  ret void, !dbg !12461
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_lock(%struct.device* %dev) #0 !dbg !12462 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12463, metadata !DIExpression()), !dbg !12464
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12465
  %mutex = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 9, !dbg !12466
  call void @mutex_lock(%struct.mutex* %mutex) #10, !dbg !12467
  ret void, !dbg !12468
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_unlock(%struct.device* %dev) #0 !dbg !12469 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12470, metadata !DIExpression()), !dbg !12471
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12472
  %mutex = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 9, !dbg !12473
  call void @mutex_unlock(%struct.mutex* %mutex) #10, !dbg !12474
  ret void, !dbg !12475
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @memalloc_noio_save() #0 !dbg !12476 {
entry:
  %pscr_ret__.i4 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i4, metadata !10542, metadata !DIExpression()), !dbg !12480
  %__vpp_verify.i5 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i5, metadata !10550, metadata !DIExpression()), !dbg !12482
  %pfo_val__.i6 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i6, metadata !10553, metadata !DIExpression()), !dbg !12483
  %tmp.i7 = alloca %struct.task_struct*, align 8
  %tmp1.i8 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !10542, metadata !DIExpression()), !dbg !12484
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !10550, metadata !DIExpression()), !dbg !12486
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !10553, metadata !DIExpression()), !dbg !12487
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %flags = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !12488, metadata !DIExpression()), !dbg !12489
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !12486
  %0 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !12486
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #13, !dbg !12487, !srcloc !10556
  store i64 %1, i64* %pfo_val__.i, align 8, !dbg !12487
  %2 = load i64, i64* %pfo_val__.i, align 8, !dbg !12487
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !12487
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i, align 8, !dbg !12487
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !12487
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !12484
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !12484
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i, align 8, !dbg !12484
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !12484
  %flags1 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %6, i32 0, i32 4, !dbg !12490
  %7 = load i32, i32* %flags1, align 4, !dbg !12490
  %and = and i32 %7, 524288, !dbg !12491
  store i32 %and, i32* %flags, align 4, !dbg !12489
  store i8* null, i8** %__vpp_verify.i5, align 8, !dbg !12482
  %8 = load i8*, i8** %__vpp_verify.i5, align 8, !dbg !12482
  %9 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #13, !dbg !12483, !srcloc !10556
  store i64 %9, i64* %pfo_val__.i6, align 8, !dbg !12483
  %10 = load i64, i64* %pfo_val__.i6, align 8, !dbg !12483
  %11 = inttoptr i64 %10 to %struct.task_struct*, !dbg !12483
  store %struct.task_struct* %11, %struct.task_struct** %tmp.i7, align 8, !dbg !12483
  %12 = load %struct.task_struct*, %struct.task_struct** %tmp.i7, align 8, !dbg !12483
  store %struct.task_struct* %12, %struct.task_struct** %pscr_ret__.i4, align 8, !dbg !12480
  %13 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i4, align 8, !dbg !12480
  store %struct.task_struct* %13, %struct.task_struct** %tmp1.i8, align 8, !dbg !12480
  %14 = load %struct.task_struct*, %struct.task_struct** %tmp1.i8, align 8, !dbg !12480
  %flags3 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %14, i32 0, i32 4, !dbg !12492
  %15 = load i32, i32* %flags3, align 4, !dbg !12493
  %or = or i32 %15, 524288, !dbg !12493
  store i32 %or, i32* %flags3, align 4, !dbg !12493
  %16 = load i32, i32* %flags, align 4, !dbg !12494
  ret i32 %16, !dbg !12495
}

; Function Attrs: noredzone
declare dso_local void @klist_del(%struct.klist_node*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devtmpfs_delete_node(%struct.device* %dev) #0 !dbg !12496 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12497, metadata !DIExpression()), !dbg !12498
  ret i32 0, !dbg !12499
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_remove_sys_dev_entry(%struct.device* %dev) #0 !dbg !12500 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %kobj = alloca %struct.kobject*, align 8
  %devt_str = alloca [15 x i8], align 1
  %tmp = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12501, metadata !DIExpression()), !dbg !12502
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj, metadata !12503, metadata !DIExpression()), !dbg !12504
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12505
  %call = call %struct.kobject* @device_to_dev_kobj(%struct.device* %0) #10, !dbg !12506
  store %struct.kobject* %call, %struct.kobject** %kobj, align 8, !dbg !12504
  call void @llvm.dbg.declare(metadata [15 x i8]* %devt_str, metadata !12507, metadata !DIExpression()), !dbg !12508
  %1 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !12509
  %tobool = icmp ne %struct.kobject* %1, null, !dbg !12509
  br i1 %tobool, label %if.then, label %if.end, !dbg !12511

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [15 x i8], [15 x i8]* %devt_str, i64 0, i64 0, !dbg !12512
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12512
  %devt = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 25, !dbg !12512
  %3 = load i32, i32* %devt, align 8, !dbg !12512
  %shr = lshr i32 %3, 20, !dbg !12512
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12512
  %devt1 = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 25, !dbg !12512
  %5 = load i32, i32* %devt1, align 8, !dbg !12512
  %and = and i32 %5, 1048575, !dbg !12512
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.68, i64 0, i64 0), i32 %shr, i32 %and) #10, !dbg !12512
  %arraydecay3 = getelementptr inbounds [15 x i8], [15 x i8]* %devt_str, i64 0, i64 0, !dbg !12512
  store i8* %arraydecay3, i8** %tmp, align 8, !dbg !12512
  %6 = load i8*, i8** %tmp, align 8, !dbg !12512
  %7 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !12515
  %arraydecay4 = getelementptr inbounds [15 x i8], [15 x i8]* %devt_str, i64 0, i64 0, !dbg !12516
  call void @sysfs_remove_link(%struct.kobject* %7, i8* %arraydecay4) #10, !dbg !12517
  br label %if.end, !dbg !12518

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12519
}

; Function Attrs: noredzone
declare dso_local void @driver_deferred_probe_del(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @device_remove_properties(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_links_purge(%struct.device* %dev) #0 !dbg !12520 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %link = alloca %struct.device_link*, align 8
  %ln = alloca %struct.device_link*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_link*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp6 = alloca %struct.device_link*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp30 = alloca i64, align 8
  %__mptr37 = alloca i8*, align 8
  %tmp42 = alloca %struct.device_link*, align 8
  %__mptr44 = alloca i8*, align 8
  %tmp49 = alloca %struct.device_link*, align 8
  %__mptr51 = alloca i8*, align 8
  %tmp55 = alloca %struct.device_link*, align 8
  %__ret_warn_on66 = alloca i32, align 4
  %tmp94 = alloca i64, align 8
  %__mptr103 = alloca i8*, align 8
  %tmp108 = alloca %struct.device_link*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12521, metadata !DIExpression()), !dbg !12522
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !12523, metadata !DIExpression()), !dbg !12524
  call void @llvm.dbg.declare(metadata %struct.device_link** %ln, metadata !12525, metadata !DIExpression()), !dbg !12526
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12527
  %class = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 29, !dbg !12529
  %1 = load %struct.class*, %struct.class** %class, align 8, !dbg !12529
  %cmp = icmp eq %struct.class* %1, @devlink_class, !dbg !12530
  br i1 %cmp, label %if.then, label %if.end, !dbg !12531

if.then:                                          ; preds = %entry
  br label %return, !dbg !12532

if.end:                                           ; preds = %entry
  call void @mutex_lock(%struct.mutex* @wfs_lock) #10, !dbg !12533
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12534
  %links = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 10, !dbg !12535
  %needs_suppliers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 2, !dbg !12536
  call void @list_del(%struct.list_head* %needs_suppliers) #10, !dbg !12537
  call void @mutex_unlock(%struct.mutex* @wfs_lock) #10, !dbg !12538
  call void @device_links_write_lock() #10, !dbg !12539
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12540, metadata !DIExpression()), !dbg !12543
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12543
  %links1 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 10, !dbg !12543
  %suppliers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links1, i32 0, i32 0, !dbg !12543
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %suppliers, i32 0, i32 1, !dbg !12543
  %4 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !12543
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !12543
  store i8* %5, i8** %__mptr, align 8, !dbg !12543
  br label %do.body, !dbg !12543

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !12544

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !12543
  %add.ptr = getelementptr i8, i8* %6, i64 -32, !dbg !12543
  %7 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !12543
  store %struct.device_link* %7, %struct.device_link** %tmp, align 8, !dbg !12544
  %8 = load %struct.device_link*, %struct.device_link** %tmp, align 8, !dbg !12543
  store %struct.device_link* %8, %struct.device_link** %link, align 8, !dbg !12546
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !12547, metadata !DIExpression()), !dbg !12549
  %9 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !12549
  %c_node = getelementptr inbounds %struct.device_link, %struct.device_link* %9, i32 0, i32 3, !dbg !12549
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %c_node, i32 0, i32 1, !dbg !12549
  %10 = load %struct.list_head*, %struct.list_head** %prev3, align 8, !dbg !12549
  %11 = bitcast %struct.list_head* %10 to i8*, !dbg !12549
  store i8* %11, i8** %__mptr2, align 8, !dbg !12549
  br label %do.body4, !dbg !12549

do.body4:                                         ; preds = %do.end
  br label %do.end5, !dbg !12550

do.end5:                                          ; preds = %do.body4
  %12 = load i8*, i8** %__mptr2, align 8, !dbg !12549
  %add.ptr7 = getelementptr i8, i8* %12, i64 -32, !dbg !12549
  %13 = bitcast i8* %add.ptr7 to %struct.device_link*, !dbg !12549
  store %struct.device_link* %13, %struct.device_link** %tmp6, align 8, !dbg !12550
  %14 = load %struct.device_link*, %struct.device_link** %tmp6, align 8, !dbg !12549
  store %struct.device_link* %14, %struct.device_link** %ln, align 8, !dbg !12546
  br label %for.cond, !dbg !12546

for.cond:                                         ; preds = %do.end41, %do.end5
  %15 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !12552
  %c_node8 = getelementptr inbounds %struct.device_link, %struct.device_link* %15, i32 0, i32 3, !dbg !12552
  %16 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12552
  %links9 = getelementptr inbounds %struct.device, %struct.device* %16, i32 0, i32 10, !dbg !12552
  %suppliers10 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links9, i32 0, i32 0, !dbg !12552
  %cmp11 = icmp eq %struct.list_head* %c_node8, %suppliers10, !dbg !12552
  %lnot = xor i1 %cmp11, true, !dbg !12552
  br i1 %lnot, label %for.body, label %for.end, !dbg !12546

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !12554, metadata !DIExpression()), !dbg !12557
  %17 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !12557
  %status = getelementptr inbounds %struct.device_link, %struct.device_link* %17, i32 0, i32 5, !dbg !12557
  %18 = load i32, i32* %status, align 8, !dbg !12557
  %cmp12 = icmp eq i32 %18, 3, !dbg !12557
  %lnot13 = xor i1 %cmp12, true, !dbg !12557
  %lnot14 = xor i1 %lnot13, true, !dbg !12557
  %lnot.ext = zext i1 %lnot14 to i32, !dbg !12557
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !12557
  %19 = load i32, i32* %__ret_warn_on, align 4, !dbg !12558
  %tobool = icmp ne i32 %19, 0, !dbg !12558
  %lnot15 = xor i1 %tobool, true, !dbg !12558
  %lnot17 = xor i1 %lnot15, true, !dbg !12558
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !12558
  %conv = sext i32 %lnot.ext18 to i64, !dbg !12558
  %tobool19 = icmp ne i64 %conv, 0, !dbg !12558
  br i1 %tobool19, label %if.then20, label %if.end29, !dbg !12557

if.then20:                                        ; preds = %for.body
  br label %do.body21, !dbg !12558

do.body21:                                        ; preds = %if.then20
  br label %do.body22, !dbg !12560

do.body22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !12562

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !12560

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 1399, i32 2305, i64 12) #5, !dbg !12564, !srcloc !12566
  br label %do.end25, !dbg !12564

do.end25:                                         ; preds = %do.body24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 404) #5, !dbg !12567, !srcloc !12569
  br label %do.body26, !dbg !12560

do.body26:                                        ; preds = %do.end25
  br label %do.end27, !dbg !12570

do.end27:                                         ; preds = %do.body26
  br label %do.end28, !dbg !12560

do.end28:                                         ; preds = %do.end27
  br label %if.end29, !dbg !12560

if.end29:                                         ; preds = %do.end28, %for.body
  %20 = load i32, i32* %__ret_warn_on, align 4, !dbg !12557
  %tobool31 = icmp ne i32 %20, 0, !dbg !12557
  %lnot32 = xor i1 %tobool31, true, !dbg !12557
  %lnot34 = xor i1 %lnot32, true, !dbg !12557
  %lnot.ext35 = zext i1 %lnot34 to i32, !dbg !12557
  %conv36 = sext i32 %lnot.ext35 to i64, !dbg !12557
  store i64 %conv36, i64* %tmp30, align 8, !dbg !12558
  %21 = load i64, i64* %tmp30, align 8, !dbg !12557
  %22 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !12572
  %kref = getelementptr inbounds %struct.device_link, %struct.device_link* %22, i32 0, i32 8, !dbg !12573
  call void @__device_link_del(%struct.kref* %kref) #10, !dbg !12574
  br label %for.inc, !dbg !12575

for.inc:                                          ; preds = %if.end29
  %23 = load %struct.device_link*, %struct.device_link** %ln, align 8, !dbg !12552
  store %struct.device_link* %23, %struct.device_link** %link, align 8, !dbg !12552
  call void @llvm.dbg.declare(metadata i8** %__mptr37, metadata !12576, metadata !DIExpression()), !dbg !12578
  %24 = load %struct.device_link*, %struct.device_link** %ln, align 8, !dbg !12578
  %c_node38 = getelementptr inbounds %struct.device_link, %struct.device_link* %24, i32 0, i32 3, !dbg !12578
  %prev39 = getelementptr inbounds %struct.list_head, %struct.list_head* %c_node38, i32 0, i32 1, !dbg !12578
  %25 = load %struct.list_head*, %struct.list_head** %prev39, align 8, !dbg !12578
  %26 = bitcast %struct.list_head* %25 to i8*, !dbg !12578
  store i8* %26, i8** %__mptr37, align 8, !dbg !12578
  br label %do.body40, !dbg !12578

do.body40:                                        ; preds = %for.inc
  br label %do.end41, !dbg !12579

do.end41:                                         ; preds = %do.body40
  %27 = load i8*, i8** %__mptr37, align 8, !dbg !12578
  %add.ptr43 = getelementptr i8, i8* %27, i64 -32, !dbg !12578
  %28 = bitcast i8* %add.ptr43 to %struct.device_link*, !dbg !12578
  store %struct.device_link* %28, %struct.device_link** %tmp42, align 8, !dbg !12579
  %29 = load %struct.device_link*, %struct.device_link** %tmp42, align 8, !dbg !12578
  store %struct.device_link* %29, %struct.device_link** %ln, align 8, !dbg !12552
  br label %for.cond, !dbg !12552, !llvm.loop !12581

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr44, metadata !12583, metadata !DIExpression()), !dbg !12586
  %30 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12586
  %links45 = getelementptr inbounds %struct.device, %struct.device* %30, i32 0, i32 10, !dbg !12586
  %consumers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links45, i32 0, i32 1, !dbg !12586
  %prev46 = getelementptr inbounds %struct.list_head, %struct.list_head* %consumers, i32 0, i32 1, !dbg !12586
  %31 = load %struct.list_head*, %struct.list_head** %prev46, align 8, !dbg !12586
  %32 = bitcast %struct.list_head* %31 to i8*, !dbg !12586
  store i8* %32, i8** %__mptr44, align 8, !dbg !12586
  br label %do.body47, !dbg !12586

do.body47:                                        ; preds = %for.end
  br label %do.end48, !dbg !12587

do.end48:                                         ; preds = %do.body47
  %33 = load i8*, i8** %__mptr44, align 8, !dbg !12586
  %add.ptr50 = getelementptr i8, i8* %33, i64 -8, !dbg !12586
  %34 = bitcast i8* %add.ptr50 to %struct.device_link*, !dbg !12586
  store %struct.device_link* %34, %struct.device_link** %tmp49, align 8, !dbg !12587
  %35 = load %struct.device_link*, %struct.device_link** %tmp49, align 8, !dbg !12586
  store %struct.device_link* %35, %struct.device_link** %link, align 8, !dbg !12589
  call void @llvm.dbg.declare(metadata i8** %__mptr51, metadata !12590, metadata !DIExpression()), !dbg !12592
  %36 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !12592
  %s_node = getelementptr inbounds %struct.device_link, %struct.device_link* %36, i32 0, i32 1, !dbg !12592
  %prev52 = getelementptr inbounds %struct.list_head, %struct.list_head* %s_node, i32 0, i32 1, !dbg !12592
  %37 = load %struct.list_head*, %struct.list_head** %prev52, align 8, !dbg !12592
  %38 = bitcast %struct.list_head* %37 to i8*, !dbg !12592
  store i8* %38, i8** %__mptr51, align 8, !dbg !12592
  br label %do.body53, !dbg !12592

do.body53:                                        ; preds = %do.end48
  br label %do.end54, !dbg !12593

do.end54:                                         ; preds = %do.body53
  %39 = load i8*, i8** %__mptr51, align 8, !dbg !12592
  %add.ptr56 = getelementptr i8, i8* %39, i64 -8, !dbg !12592
  %40 = bitcast i8* %add.ptr56 to %struct.device_link*, !dbg !12592
  store %struct.device_link* %40, %struct.device_link** %tmp55, align 8, !dbg !12593
  %41 = load %struct.device_link*, %struct.device_link** %tmp55, align 8, !dbg !12592
  store %struct.device_link* %41, %struct.device_link** %ln, align 8, !dbg !12589
  br label %for.cond57, !dbg !12589

for.cond57:                                       ; preds = %do.end107, %do.end54
  %42 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !12595
  %s_node58 = getelementptr inbounds %struct.device_link, %struct.device_link* %42, i32 0, i32 1, !dbg !12595
  %43 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12595
  %links59 = getelementptr inbounds %struct.device, %struct.device* %43, i32 0, i32 10, !dbg !12595
  %consumers60 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links59, i32 0, i32 1, !dbg !12595
  %cmp61 = icmp eq %struct.list_head* %s_node58, %consumers60, !dbg !12595
  %lnot63 = xor i1 %cmp61, true, !dbg !12595
  br i1 %lnot63, label %for.body65, label %for.end110, !dbg !12589

for.body65:                                       ; preds = %for.cond57
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on66, metadata !12597, metadata !DIExpression()), !dbg !12600
  %44 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !12600
  %status67 = getelementptr inbounds %struct.device_link, %struct.device_link* %44, i32 0, i32 5, !dbg !12600
  %45 = load i32, i32* %status67, align 8, !dbg !12600
  %cmp68 = icmp ne i32 %45, 0, !dbg !12600
  br i1 %cmp68, label %land.rhs, label %land.end, !dbg !12600

land.rhs:                                         ; preds = %for.body65
  %46 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !12600
  %status70 = getelementptr inbounds %struct.device_link, %struct.device_link* %46, i32 0, i32 5, !dbg !12600
  %47 = load i32, i32* %status70, align 8, !dbg !12600
  %cmp71 = icmp ne i32 %47, -1, !dbg !12600
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body65
  %48 = phi i1 [ false, %for.body65 ], [ %cmp71, %land.rhs ], !dbg !12601
  %lnot73 = xor i1 %48, true, !dbg !12600
  %lnot75 = xor i1 %lnot73, true, !dbg !12600
  %lnot.ext76 = zext i1 %lnot75 to i32, !dbg !12600
  store i32 %lnot.ext76, i32* %__ret_warn_on66, align 4, !dbg !12600
  %49 = load i32, i32* %__ret_warn_on66, align 4, !dbg !12602
  %tobool77 = icmp ne i32 %49, 0, !dbg !12602
  %lnot78 = xor i1 %tobool77, true, !dbg !12602
  %lnot80 = xor i1 %lnot78, true, !dbg !12602
  %lnot.ext81 = zext i1 %lnot80 to i32, !dbg !12602
  %conv82 = sext i32 %lnot.ext81 to i64, !dbg !12602
  %tobool83 = icmp ne i64 %conv82, 0, !dbg !12602
  br i1 %tobool83, label %if.then84, label %if.end93, !dbg !12600

if.then84:                                        ; preds = %land.end
  br label %do.body85, !dbg !12602

do.body85:                                        ; preds = %if.then84
  br label %do.body86, !dbg !12604

do.body86:                                        ; preds = %do.body85
  br label %do.end87, !dbg !12606

do.end87:                                         ; preds = %do.body86
  br label %do.body88, !dbg !12604

do.body88:                                        ; preds = %do.end87
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 1405, i32 2305, i64 12) #5, !dbg !12608, !srcloc !12610
  br label %do.end89, !dbg !12608

do.end89:                                         ; preds = %do.body88
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 408) #5, !dbg !12611, !srcloc !12613
  br label %do.body90, !dbg !12604

do.body90:                                        ; preds = %do.end89
  br label %do.end91, !dbg !12614

do.end91:                                         ; preds = %do.body90
  br label %do.end92, !dbg !12604

do.end92:                                         ; preds = %do.end91
  br label %if.end93, !dbg !12604

if.end93:                                         ; preds = %do.end92, %land.end
  %50 = load i32, i32* %__ret_warn_on66, align 4, !dbg !12600
  %tobool95 = icmp ne i32 %50, 0, !dbg !12600
  %lnot96 = xor i1 %tobool95, true, !dbg !12600
  %lnot98 = xor i1 %lnot96, true, !dbg !12600
  %lnot.ext99 = zext i1 %lnot98 to i32, !dbg !12600
  %conv100 = sext i32 %lnot.ext99 to i64, !dbg !12600
  store i64 %conv100, i64* %tmp94, align 8, !dbg !12602
  %51 = load i64, i64* %tmp94, align 8, !dbg !12600
  %52 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !12616
  %kref101 = getelementptr inbounds %struct.device_link, %struct.device_link* %52, i32 0, i32 8, !dbg !12617
  call void @__device_link_del(%struct.kref* %kref101) #10, !dbg !12618
  br label %for.inc102, !dbg !12619

for.inc102:                                       ; preds = %if.end93
  %53 = load %struct.device_link*, %struct.device_link** %ln, align 8, !dbg !12595
  store %struct.device_link* %53, %struct.device_link** %link, align 8, !dbg !12595
  call void @llvm.dbg.declare(metadata i8** %__mptr103, metadata !12620, metadata !DIExpression()), !dbg !12622
  %54 = load %struct.device_link*, %struct.device_link** %ln, align 8, !dbg !12622
  %s_node104 = getelementptr inbounds %struct.device_link, %struct.device_link* %54, i32 0, i32 1, !dbg !12622
  %prev105 = getelementptr inbounds %struct.list_head, %struct.list_head* %s_node104, i32 0, i32 1, !dbg !12622
  %55 = load %struct.list_head*, %struct.list_head** %prev105, align 8, !dbg !12622
  %56 = bitcast %struct.list_head* %55 to i8*, !dbg !12622
  store i8* %56, i8** %__mptr103, align 8, !dbg !12622
  br label %do.body106, !dbg !12622

do.body106:                                       ; preds = %for.inc102
  br label %do.end107, !dbg !12623

do.end107:                                        ; preds = %do.body106
  %57 = load i8*, i8** %__mptr103, align 8, !dbg !12622
  %add.ptr109 = getelementptr i8, i8* %57, i64 -8, !dbg !12622
  %58 = bitcast i8* %add.ptr109 to %struct.device_link*, !dbg !12622
  store %struct.device_link* %58, %struct.device_link** %tmp108, align 8, !dbg !12623
  %59 = load %struct.device_link*, %struct.device_link** %tmp108, align 8, !dbg !12622
  store %struct.device_link* %59, %struct.device_link** %ln, align 8, !dbg !12595
  br label %for.cond57, !dbg !12595, !llvm.loop !12625

for.end110:                                       ; preds = %for.cond57
  call void @device_links_write_unlock() #10, !dbg !12627
  br label %return, !dbg !12628

return:                                           ; preds = %for.end110, %if.then
  ret void, !dbg !12628
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @memalloc_noio_restore(i32 %flags) #0 !dbg !12629 {
entry:
  %pscr_ret__.i4 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i4, metadata !10542, metadata !DIExpression()), !dbg !12632
  %__vpp_verify.i5 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i5, metadata !10550, metadata !DIExpression()), !dbg !12634
  %pfo_val__.i6 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i6, metadata !10553, metadata !DIExpression()), !dbg !12635
  %tmp.i7 = alloca %struct.task_struct*, align 8
  %tmp1.i8 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !10542, metadata !DIExpression()), !dbg !12636
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !10550, metadata !DIExpression()), !dbg !12638
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !10553, metadata !DIExpression()), !dbg !12639
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %flags.addr = alloca i32, align 4
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12640, metadata !DIExpression()), !dbg !12641
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !12638
  %0 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !12638
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #13, !dbg !12639, !srcloc !10556
  store i64 %1, i64* %pfo_val__.i, align 8, !dbg !12639
  %2 = load i64, i64* %pfo_val__.i, align 8, !dbg !12639
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !12639
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i, align 8, !dbg !12639
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !12639
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !12636
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !12636
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i, align 8, !dbg !12636
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !12636
  %flags1 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %6, i32 0, i32 4, !dbg !12642
  %7 = load i32, i32* %flags1, align 4, !dbg !12642
  %and = and i32 %7, -524289, !dbg !12643
  %8 = load i32, i32* %flags.addr, align 4, !dbg !12644
  %or = or i32 %and, %8, !dbg !12645
  store i8* null, i8** %__vpp_verify.i5, align 8, !dbg !12634
  %9 = load i8*, i8** %__vpp_verify.i5, align 8, !dbg !12634
  %10 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #13, !dbg !12635, !srcloc !10556
  store i64 %10, i64* %pfo_val__.i6, align 8, !dbg !12635
  %11 = load i64, i64* %pfo_val__.i6, align 8, !dbg !12635
  %12 = inttoptr i64 %11 to %struct.task_struct*, !dbg !12635
  store %struct.task_struct* %12, %struct.task_struct** %tmp.i7, align 8, !dbg !12635
  %13 = load %struct.task_struct*, %struct.task_struct** %tmp.i7, align 8, !dbg !12635
  store %struct.task_struct* %13, %struct.task_struct** %pscr_ret__.i4, align 8, !dbg !12632
  %14 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i4, align 8, !dbg !12632
  store %struct.task_struct* %14, %struct.task_struct** %tmp1.i8, align 8, !dbg !12632
  %15 = load %struct.task_struct*, %struct.task_struct** %tmp1.i8, align 8, !dbg !12632
  %flags3 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %15, i32 0, i32 4, !dbg !12646
  store i32 %or, i32* %flags3, align 4, !dbg !12647
  ret void, !dbg !12648
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @device_unregister(%struct.device* %dev) #0 !dbg !12649 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %tmp = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12650, metadata !DIExpression()), !dbg !12651
  store i32 0, i32* %tmp, align 4, !dbg !12652
  %0 = load i32, i32* %tmp, align 4, !dbg !12655
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12656
  call void @device_del(%struct.device* %1) #10, !dbg !12657
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12658
  call void @put_device(%struct.device* %2) #10, !dbg !12659
  ret void, !dbg !12660
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @device_get_devnode(%struct.device* %dev, i16* %mode, %struct.kuid_t* %uid, %struct.kgid_t* %gid, i8** %tmp) #0 !dbg !12661 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %mode.addr = alloca i16*, align 8
  %uid.addr = alloca %struct.kuid_t*, align 8
  %gid.addr = alloca %struct.kgid_t*, align 8
  %tmp.addr = alloca i8**, align 8
  %s = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12664, metadata !DIExpression()), !dbg !12665
  store i16* %mode, i16** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %mode.addr, metadata !12666, metadata !DIExpression()), !dbg !12667
  store %struct.kuid_t* %uid, %struct.kuid_t** %uid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kuid_t** %uid.addr, metadata !12668, metadata !DIExpression()), !dbg !12669
  store %struct.kgid_t* %gid, %struct.kgid_t** %gid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kgid_t** %gid.addr, metadata !12670, metadata !DIExpression()), !dbg !12671
  store i8** %tmp, i8*** %tmp.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %tmp.addr, metadata !12672, metadata !DIExpression()), !dbg !12673
  call void @llvm.dbg.declare(metadata i8** %s, metadata !12674, metadata !DIExpression()), !dbg !12675
  %0 = load i8**, i8*** %tmp.addr, align 8, !dbg !12676
  store i8* null, i8** %0, align 8, !dbg !12677
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12678
  %type = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 4, !dbg !12680
  %2 = load %struct.device_type*, %struct.device_type** %type, align 8, !dbg !12680
  %tobool = icmp ne %struct.device_type* %2, null, !dbg !12678
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !12681

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12682
  %type1 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 4, !dbg !12683
  %4 = load %struct.device_type*, %struct.device_type** %type1, align 8, !dbg !12683
  %devnode = getelementptr inbounds %struct.device_type, %struct.device_type* %4, i32 0, i32 3, !dbg !12684
  %5 = load i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)** %devnode, align 8, !dbg !12684
  %tobool2 = icmp ne i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)* %5, null, !dbg !12682
  br i1 %tobool2, label %if.then, label %if.end, !dbg !12685

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12686
  %type3 = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 4, !dbg !12687
  %7 = load %struct.device_type*, %struct.device_type** %type3, align 8, !dbg !12687
  %devnode4 = getelementptr inbounds %struct.device_type, %struct.device_type* %7, i32 0, i32 3, !dbg !12688
  %8 = load i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)** %devnode4, align 8, !dbg !12688
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12689
  %10 = load i16*, i16** %mode.addr, align 8, !dbg !12690
  %11 = load %struct.kuid_t*, %struct.kuid_t** %uid.addr, align 8, !dbg !12691
  %12 = load %struct.kgid_t*, %struct.kgid_t** %gid.addr, align 8, !dbg !12692
  %call = call i8* %8(%struct.device* %9, i16* %10, %struct.kuid_t* %11, %struct.kgid_t* %12) #10, !dbg !12686
  %13 = load i8**, i8*** %tmp.addr, align 8, !dbg !12693
  store i8* %call, i8** %13, align 8, !dbg !12694
  br label %if.end, !dbg !12695

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %14 = load i8**, i8*** %tmp.addr, align 8, !dbg !12696
  %15 = load i8*, i8** %14, align 8, !dbg !12698
  %tobool5 = icmp ne i8* %15, null, !dbg !12698
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !12699

if.then6:                                         ; preds = %if.end
  %16 = load i8**, i8*** %tmp.addr, align 8, !dbg !12700
  %17 = load i8*, i8** %16, align 8, !dbg !12701
  store i8* %17, i8** %retval, align 8, !dbg !12702
  br label %return, !dbg !12702

if.end7:                                          ; preds = %if.end
  %18 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12703
  %class = getelementptr inbounds %struct.device, %struct.device* %18, i32 0, i32 29, !dbg !12705
  %19 = load %struct.class*, %struct.class** %class, align 8, !dbg !12705
  %tobool8 = icmp ne %struct.class* %19, null, !dbg !12703
  br i1 %tobool8, label %land.lhs.true9, label %if.end17, !dbg !12706

land.lhs.true9:                                   ; preds = %if.end7
  %20 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12707
  %class10 = getelementptr inbounds %struct.device, %struct.device* %20, i32 0, i32 29, !dbg !12708
  %21 = load %struct.class*, %struct.class** %class10, align 8, !dbg !12708
  %devnode11 = getelementptr inbounds %struct.class, %struct.class* %21, i32 0, i32 6, !dbg !12709
  %22 = load i8* (%struct.device*, i16*)*, i8* (%struct.device*, i16*)** %devnode11, align 8, !dbg !12709
  %tobool12 = icmp ne i8* (%struct.device*, i16*)* %22, null, !dbg !12707
  br i1 %tobool12, label %if.then13, label %if.end17, !dbg !12710

if.then13:                                        ; preds = %land.lhs.true9
  %23 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12711
  %class14 = getelementptr inbounds %struct.device, %struct.device* %23, i32 0, i32 29, !dbg !12712
  %24 = load %struct.class*, %struct.class** %class14, align 8, !dbg !12712
  %devnode15 = getelementptr inbounds %struct.class, %struct.class* %24, i32 0, i32 6, !dbg !12713
  %25 = load i8* (%struct.device*, i16*)*, i8* (%struct.device*, i16*)** %devnode15, align 8, !dbg !12713
  %26 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12714
  %27 = load i16*, i16** %mode.addr, align 8, !dbg !12715
  %call16 = call i8* %25(%struct.device* %26, i16* %27) #10, !dbg !12711
  %28 = load i8**, i8*** %tmp.addr, align 8, !dbg !12716
  store i8* %call16, i8** %28, align 8, !dbg !12717
  br label %if.end17, !dbg !12718

if.end17:                                         ; preds = %if.then13, %land.lhs.true9, %if.end7
  %29 = load i8**, i8*** %tmp.addr, align 8, !dbg !12719
  %30 = load i8*, i8** %29, align 8, !dbg !12721
  %tobool18 = icmp ne i8* %30, null, !dbg !12721
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !12722

if.then19:                                        ; preds = %if.end17
  %31 = load i8**, i8*** %tmp.addr, align 8, !dbg !12723
  %32 = load i8*, i8** %31, align 8, !dbg !12724
  store i8* %32, i8** %retval, align 8, !dbg !12725
  br label %return, !dbg !12725

if.end20:                                         ; preds = %if.end17
  %33 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12726
  %call21 = call i8* @dev_name(%struct.device* %33) #10, !dbg !12728
  %call22 = call i8* @strchr(i8* %call21, i32 33) #10, !dbg !12729
  %cmp = icmp eq i8* %call22, null, !dbg !12730
  br i1 %cmp, label %if.then23, label %if.end25, !dbg !12731

if.then23:                                        ; preds = %if.end20
  %34 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12732
  %call24 = call i8* @dev_name(%struct.device* %34) #10, !dbg !12733
  store i8* %call24, i8** %retval, align 8, !dbg !12734
  br label %return, !dbg !12734

if.end25:                                         ; preds = %if.end20
  %35 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12735
  %call26 = call i8* @dev_name(%struct.device* %35) #10, !dbg !12736
  %call27 = call noalias i8* @kstrdup(i8* %call26, i32 3264) #10, !dbg !12737
  store i8* %call27, i8** %s, align 8, !dbg !12738
  %36 = load i8*, i8** %s, align 8, !dbg !12739
  %tobool28 = icmp ne i8* %36, null, !dbg !12739
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !12741

if.then29:                                        ; preds = %if.end25
  store i8* null, i8** %retval, align 8, !dbg !12742
  br label %return, !dbg !12742

if.end30:                                         ; preds = %if.end25
  %37 = load i8*, i8** %s, align 8, !dbg !12743
  %call31 = call i8* @strreplace(i8* %37, i8 signext 33, i8 signext 47) #10, !dbg !12744
  %38 = load i8*, i8** %s, align 8, !dbg !12745
  %39 = load i8**, i8*** %tmp.addr, align 8, !dbg !12746
  store i8* %38, i8** %39, align 8, !dbg !12747
  store i8* %38, i8** %retval, align 8, !dbg !12748
  br label %return, !dbg !12748

return:                                           ; preds = %if.end30, %if.then29, %if.then23, %if.then19, %if.then6
  %40 = load i8*, i8** %retval, align 8, !dbg !12749
  ret i8* %40, !dbg !12749
}

; Function Attrs: noredzone
declare dso_local i8* @strchr(i8*, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kstrdup(i8*, i32) #2

; Function Attrs: noredzone
declare dso_local i8* @strreplace(i8*, i8 signext, i8 signext) #2

; Function Attrs: noredzone
declare dso_local void @klist_iter_init(%struct.klist*, %struct.klist_iter*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device* @next_device(%struct.klist_iter* %i) #0 !dbg !12750 {
entry:
  %i.addr = alloca %struct.klist_iter*, align 8
  %n = alloca %struct.klist_node*, align 8
  %dev = alloca %struct.device*, align 8
  %p = alloca %struct.device_private*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_private*, align 8
  store %struct.klist_iter* %i, %struct.klist_iter** %i.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.klist_iter** %i.addr, metadata !12754, metadata !DIExpression()), !dbg !12755
  call void @llvm.dbg.declare(metadata %struct.klist_node** %n, metadata !12756, metadata !DIExpression()), !dbg !12757
  %0 = load %struct.klist_iter*, %struct.klist_iter** %i.addr, align 8, !dbg !12758
  %call = call %struct.klist_node* @klist_next(%struct.klist_iter* %0) #10, !dbg !12759
  store %struct.klist_node* %call, %struct.klist_node** %n, align 8, !dbg !12757
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !12760, metadata !DIExpression()), !dbg !12761
  store %struct.device* null, %struct.device** %dev, align 8, !dbg !12761
  call void @llvm.dbg.declare(metadata %struct.device_private** %p, metadata !12762, metadata !DIExpression()), !dbg !12763
  %1 = load %struct.klist_node*, %struct.klist_node** %n, align 8, !dbg !12764
  %tobool = icmp ne %struct.klist_node* %1, null, !dbg !12764
  br i1 %tobool, label %if.then, label %if.end, !dbg !12766

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12767, metadata !DIExpression()), !dbg !12770
  %2 = load %struct.klist_node*, %struct.klist_node** %n, align 8, !dbg !12770
  %3 = bitcast %struct.klist_node* %2 to i8*, !dbg !12770
  store i8* %3, i8** %__mptr, align 8, !dbg !12770
  br label %do.body, !dbg !12770

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !12771

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !12770
  %add.ptr = getelementptr i8, i8* %4, i64 -32, !dbg !12770
  %5 = bitcast i8* %add.ptr to %struct.device_private*, !dbg !12770
  store %struct.device_private* %5, %struct.device_private** %tmp, align 8, !dbg !12771
  %6 = load %struct.device_private*, %struct.device_private** %tmp, align 8, !dbg !12770
  store %struct.device_private* %6, %struct.device_private** %p, align 8, !dbg !12773
  %7 = load %struct.device_private*, %struct.device_private** %p, align 8, !dbg !12774
  %device = getelementptr inbounds %struct.device_private, %struct.device_private* %7, i32 0, i32 8, !dbg !12775
  %8 = load %struct.device*, %struct.device** %device, align 8, !dbg !12775
  store %struct.device* %8, %struct.device** %dev, align 8, !dbg !12776
  br label %if.end, !dbg !12777

if.end:                                           ; preds = %do.end, %entry
  %9 = load %struct.device*, %struct.device** %dev, align 8, !dbg !12778
  ret %struct.device* %9, !dbg !12779
}

; Function Attrs: noredzone
declare dso_local void @klist_iter_exit(%struct.klist_iter*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @device_for_each_child_reverse(%struct.device* %parent, i8* %data, i32 (%struct.device*, i8*)* %fn) #0 !dbg !12780 {
entry:
  %retval = alloca i32, align 4
  %parent.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  %fn.addr = alloca i32 (%struct.device*, i8*)*, align 8
  %i = alloca %struct.klist_iter, align 8
  %child = alloca %struct.device*, align 8
  %error = alloca i32, align 4
  store %struct.device* %parent, %struct.device** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %parent.addr, metadata !12781, metadata !DIExpression()), !dbg !12782
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !12783, metadata !DIExpression()), !dbg !12784
  store i32 (%struct.device*, i8*)* %fn, i32 (%struct.device*, i8*)** %fn.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.device*, i8*)** %fn.addr, metadata !12785, metadata !DIExpression()), !dbg !12786
  call void @llvm.dbg.declare(metadata %struct.klist_iter* %i, metadata !12787, metadata !DIExpression()), !dbg !12788
  call void @llvm.dbg.declare(metadata %struct.device** %child, metadata !12789, metadata !DIExpression()), !dbg !12790
  call void @llvm.dbg.declare(metadata i32* %error, metadata !12791, metadata !DIExpression()), !dbg !12792
  store i32 0, i32* %error, align 4, !dbg !12792
  %0 = load %struct.device*, %struct.device** %parent.addr, align 8, !dbg !12793
  %p = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12795
  %1 = load %struct.device_private*, %struct.device_private** %p, align 8, !dbg !12795
  %tobool = icmp ne %struct.device_private* %1, null, !dbg !12793
  br i1 %tobool, label %if.end, label %if.then, !dbg !12796

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12797
  br label %return, !dbg !12797

if.end:                                           ; preds = %entry
  %2 = load %struct.device*, %struct.device** %parent.addr, align 8, !dbg !12798
  %p1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 2, !dbg !12799
  %3 = load %struct.device_private*, %struct.device_private** %p1, align 8, !dbg !12799
  %klist_children = getelementptr inbounds %struct.device_private, %struct.device_private* %3, i32 0, i32 0, !dbg !12800
  call void @klist_iter_init(%struct.klist* %klist_children, %struct.klist_iter* %i) #10, !dbg !12801
  br label %while.cond, !dbg !12802

while.cond:                                       ; preds = %while.body, %if.end
  %call = call %struct.device* @prev_device(%struct.klist_iter* %i) #10, !dbg !12803
  store %struct.device* %call, %struct.device** %child, align 8, !dbg !12804
  %tobool2 = icmp ne %struct.device* %call, null, !dbg !12804
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !12805

land.rhs:                                         ; preds = %while.cond
  %4 = load i32, i32* %error, align 4, !dbg !12806
  %tobool3 = icmp ne i32 %4, 0, !dbg !12807
  %lnot = xor i1 %tobool3, true, !dbg !12807
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %5 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !12808
  br i1 %5, label %while.body, label %while.end, !dbg !12802

while.body:                                       ; preds = %land.end
  %6 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %fn.addr, align 8, !dbg !12809
  %7 = load %struct.device*, %struct.device** %child, align 8, !dbg !12810
  %8 = load i8*, i8** %data.addr, align 8, !dbg !12811
  %call4 = call i32 %6(%struct.device* %7, i8* %8) #10, !dbg !12809
  store i32 %call4, i32* %error, align 4, !dbg !12812
  br label %while.cond, !dbg !12802, !llvm.loop !12813

while.end:                                        ; preds = %land.end
  call void @klist_iter_exit(%struct.klist_iter* %i) #10, !dbg !12815
  %9 = load i32, i32* %error, align 4, !dbg !12816
  store i32 %9, i32* %retval, align 4, !dbg !12817
  br label %return, !dbg !12817

return:                                           ; preds = %while.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !12818
  ret i32 %10, !dbg !12818
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device* @prev_device(%struct.klist_iter* %i) #0 !dbg !12819 {
entry:
  %i.addr = alloca %struct.klist_iter*, align 8
  %n = alloca %struct.klist_node*, align 8
  %dev = alloca %struct.device*, align 8
  %p = alloca %struct.device_private*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_private*, align 8
  store %struct.klist_iter* %i, %struct.klist_iter** %i.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.klist_iter** %i.addr, metadata !12820, metadata !DIExpression()), !dbg !12821
  call void @llvm.dbg.declare(metadata %struct.klist_node** %n, metadata !12822, metadata !DIExpression()), !dbg !12823
  %0 = load %struct.klist_iter*, %struct.klist_iter** %i.addr, align 8, !dbg !12824
  %call = call %struct.klist_node* @klist_prev(%struct.klist_iter* %0) #10, !dbg !12825
  store %struct.klist_node* %call, %struct.klist_node** %n, align 8, !dbg !12823
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !12826, metadata !DIExpression()), !dbg !12827
  store %struct.device* null, %struct.device** %dev, align 8, !dbg !12827
  call void @llvm.dbg.declare(metadata %struct.device_private** %p, metadata !12828, metadata !DIExpression()), !dbg !12829
  %1 = load %struct.klist_node*, %struct.klist_node** %n, align 8, !dbg !12830
  %tobool = icmp ne %struct.klist_node* %1, null, !dbg !12830
  br i1 %tobool, label %if.then, label %if.end, !dbg !12832

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12833, metadata !DIExpression()), !dbg !12836
  %2 = load %struct.klist_node*, %struct.klist_node** %n, align 8, !dbg !12836
  %3 = bitcast %struct.klist_node* %2 to i8*, !dbg !12836
  store i8* %3, i8** %__mptr, align 8, !dbg !12836
  br label %do.body, !dbg !12836

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !12837

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !12836
  %add.ptr = getelementptr i8, i8* %4, i64 -32, !dbg !12836
  %5 = bitcast i8* %add.ptr to %struct.device_private*, !dbg !12836
  store %struct.device_private* %5, %struct.device_private** %tmp, align 8, !dbg !12837
  %6 = load %struct.device_private*, %struct.device_private** %tmp, align 8, !dbg !12836
  store %struct.device_private* %6, %struct.device_private** %p, align 8, !dbg !12839
  %7 = load %struct.device_private*, %struct.device_private** %p, align 8, !dbg !12840
  %device = getelementptr inbounds %struct.device_private, %struct.device_private* %7, i32 0, i32 8, !dbg !12841
  %8 = load %struct.device*, %struct.device** %device, align 8, !dbg !12841
  store %struct.device* %8, %struct.device** %dev, align 8, !dbg !12842
  br label %if.end, !dbg !12843

if.end:                                           ; preds = %do.end, %entry
  %9 = load %struct.device*, %struct.device** %dev, align 8, !dbg !12844
  ret %struct.device* %9, !dbg !12845
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device* @device_find_child(%struct.device* %parent, i8* %data, i32 (%struct.device*, i8*)* %match) #0 !dbg !12846 {
entry:
  %retval = alloca %struct.device*, align 8
  %parent.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  %match.addr = alloca i32 (%struct.device*, i8*)*, align 8
  %i = alloca %struct.klist_iter, align 8
  %child = alloca %struct.device*, align 8
  store %struct.device* %parent, %struct.device** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %parent.addr, metadata !12849, metadata !DIExpression()), !dbg !12850
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !12851, metadata !DIExpression()), !dbg !12852
  store i32 (%struct.device*, i8*)* %match, i32 (%struct.device*, i8*)** %match.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.device*, i8*)** %match.addr, metadata !12853, metadata !DIExpression()), !dbg !12854
  call void @llvm.dbg.declare(metadata %struct.klist_iter* %i, metadata !12855, metadata !DIExpression()), !dbg !12856
  call void @llvm.dbg.declare(metadata %struct.device** %child, metadata !12857, metadata !DIExpression()), !dbg !12858
  %0 = load %struct.device*, %struct.device** %parent.addr, align 8, !dbg !12859
  %tobool = icmp ne %struct.device* %0, null, !dbg !12859
  br i1 %tobool, label %if.end, label %if.then, !dbg !12861

if.then:                                          ; preds = %entry
  store %struct.device* null, %struct.device** %retval, align 8, !dbg !12862
  br label %return, !dbg !12862

if.end:                                           ; preds = %entry
  %1 = load %struct.device*, %struct.device** %parent.addr, align 8, !dbg !12863
  %p = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 2, !dbg !12864
  %2 = load %struct.device_private*, %struct.device_private** %p, align 8, !dbg !12864
  %klist_children = getelementptr inbounds %struct.device_private, %struct.device_private* %2, i32 0, i32 0, !dbg !12865
  call void @klist_iter_init(%struct.klist* %klist_children, %struct.klist_iter* %i) #10, !dbg !12866
  br label %while.cond, !dbg !12867

while.cond:                                       ; preds = %if.end7, %if.end
  %call = call %struct.device* @next_device(%struct.klist_iter* %i) #10, !dbg !12868
  store %struct.device* %call, %struct.device** %child, align 8, !dbg !12869
  %tobool1 = icmp ne %struct.device* %call, null, !dbg !12867
  br i1 %tobool1, label %while.body, label %while.end, !dbg !12867

while.body:                                       ; preds = %while.cond
  %3 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %match.addr, align 8, !dbg !12870
  %4 = load %struct.device*, %struct.device** %child, align 8, !dbg !12872
  %5 = load i8*, i8** %data.addr, align 8, !dbg !12873
  %call2 = call i32 %3(%struct.device* %4, i8* %5) #10, !dbg !12870
  %tobool3 = icmp ne i32 %call2, 0, !dbg !12870
  br i1 %tobool3, label %land.lhs.true, label %if.end7, !dbg !12874

land.lhs.true:                                    ; preds = %while.body
  %6 = load %struct.device*, %struct.device** %child, align 8, !dbg !12875
  %call4 = call %struct.device* @get_device(%struct.device* %6) #10, !dbg !12876
  %tobool5 = icmp ne %struct.device* %call4, null, !dbg !12876
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !12877

if.then6:                                         ; preds = %land.lhs.true
  br label %while.end, !dbg !12878

if.end7:                                          ; preds = %land.lhs.true, %while.body
  br label %while.cond, !dbg !12867, !llvm.loop !12879

while.end:                                        ; preds = %if.then6, %while.cond
  call void @klist_iter_exit(%struct.klist_iter* %i) #10, !dbg !12881
  %7 = load %struct.device*, %struct.device** %child, align 8, !dbg !12882
  store %struct.device* %7, %struct.device** %retval, align 8, !dbg !12883
  br label %return, !dbg !12883

return:                                           ; preds = %while.end, %if.then
  %8 = load %struct.device*, %struct.device** %retval, align 8, !dbg !12884
  ret %struct.device* %8, !dbg !12884
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device* @device_find_child_by_name(%struct.device* %parent, i8* %name) #0 !dbg !12885 {
entry:
  %retval = alloca %struct.device*, align 8
  %parent.addr = alloca %struct.device*, align 8
  %name.addr = alloca i8*, align 8
  %i = alloca %struct.klist_iter, align 8
  %child = alloca %struct.device*, align 8
  store %struct.device* %parent, %struct.device** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %parent.addr, metadata !12888, metadata !DIExpression()), !dbg !12889
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12890, metadata !DIExpression()), !dbg !12891
  call void @llvm.dbg.declare(metadata %struct.klist_iter* %i, metadata !12892, metadata !DIExpression()), !dbg !12893
  call void @llvm.dbg.declare(metadata %struct.device** %child, metadata !12894, metadata !DIExpression()), !dbg !12895
  %0 = load %struct.device*, %struct.device** %parent.addr, align 8, !dbg !12896
  %tobool = icmp ne %struct.device* %0, null, !dbg !12896
  br i1 %tobool, label %if.end, label %if.then, !dbg !12898

if.then:                                          ; preds = %entry
  store %struct.device* null, %struct.device** %retval, align 8, !dbg !12899
  br label %return, !dbg !12899

if.end:                                           ; preds = %entry
  %1 = load %struct.device*, %struct.device** %parent.addr, align 8, !dbg !12900
  %p = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 2, !dbg !12901
  %2 = load %struct.device_private*, %struct.device_private** %p, align 8, !dbg !12901
  %klist_children = getelementptr inbounds %struct.device_private, %struct.device_private* %2, i32 0, i32 0, !dbg !12902
  call void @klist_iter_init(%struct.klist* %klist_children, %struct.klist_iter* %i) #10, !dbg !12903
  br label %while.cond, !dbg !12904

while.cond:                                       ; preds = %if.end7, %if.end
  %call = call %struct.device* @next_device(%struct.klist_iter* %i) #10, !dbg !12905
  store %struct.device* %call, %struct.device** %child, align 8, !dbg !12906
  %tobool1 = icmp ne %struct.device* %call, null, !dbg !12904
  br i1 %tobool1, label %while.body, label %while.end, !dbg !12904

while.body:                                       ; preds = %while.cond
  %3 = load %struct.device*, %struct.device** %child, align 8, !dbg !12907
  %call2 = call i8* @dev_name(%struct.device* %3) #10, !dbg !12909
  %4 = load i8*, i8** %name.addr, align 8, !dbg !12910
  %call3 = call zeroext i1 @sysfs_streq(i8* %call2, i8* %4) #10, !dbg !12911
  br i1 %call3, label %land.lhs.true, label %if.end7, !dbg !12912

land.lhs.true:                                    ; preds = %while.body
  %5 = load %struct.device*, %struct.device** %child, align 8, !dbg !12913
  %call4 = call %struct.device* @get_device(%struct.device* %5) #10, !dbg !12914
  %tobool5 = icmp ne %struct.device* %call4, null, !dbg !12914
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !12915

if.then6:                                         ; preds = %land.lhs.true
  br label %while.end, !dbg !12916

if.end7:                                          ; preds = %land.lhs.true, %while.body
  br label %while.cond, !dbg !12904, !llvm.loop !12917

while.end:                                        ; preds = %if.then6, %while.cond
  call void @klist_iter_exit(%struct.klist_iter* %i) #10, !dbg !12919
  %6 = load %struct.device*, %struct.device** %child, align 8, !dbg !12920
  store %struct.device* %6, %struct.device** %retval, align 8, !dbg !12921
  br label %return, !dbg !12921

return:                                           ; preds = %while.end, %if.then
  %7 = load %struct.device*, %struct.device** %retval, align 8, !dbg !12922
  ret %struct.device* %7, !dbg !12922
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @sysfs_streq(i8*, i8*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local i32 @devices_init() #3 section ".init.text" !dbg !12923 {
entry:
  %retval = alloca i32, align 4
  %call = call %struct.kset* @kset_create_and_add(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), %struct.kset_uevent_ops* @device_uevent_ops, %struct.kobject* null) #10, !dbg !12924
  store %struct.kset* %call, %struct.kset** @devices_kset, align 8, !dbg !12925
  %0 = load %struct.kset*, %struct.kset** @devices_kset, align 8, !dbg !12926
  %tobool = icmp ne %struct.kset* %0, null, !dbg !12926
  br i1 %tobool, label %if.end, label %if.then, !dbg !12928

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !12929
  br label %return, !dbg !12929

if.end:                                           ; preds = %entry
  %call1 = call %struct.kobject* @kobject_create_and_add(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), %struct.kobject* null) #10, !dbg !12930
  store %struct.kobject* %call1, %struct.kobject** @dev_kobj, align 8, !dbg !12931
  %1 = load %struct.kobject*, %struct.kobject** @dev_kobj, align 8, !dbg !12932
  %tobool2 = icmp ne %struct.kobject* %1, null, !dbg !12932
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !12934

if.then3:                                         ; preds = %if.end
  br label %dev_kobj_err, !dbg !12935

if.end4:                                          ; preds = %if.end
  %2 = load %struct.kobject*, %struct.kobject** @dev_kobj, align 8, !dbg !12936
  %call5 = call %struct.kobject* @kobject_create_and_add(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0), %struct.kobject* %2) #10, !dbg !12937
  store %struct.kobject* %call5, %struct.kobject** @sysfs_dev_block_kobj, align 8, !dbg !12938
  %3 = load %struct.kobject*, %struct.kobject** @sysfs_dev_block_kobj, align 8, !dbg !12939
  %tobool6 = icmp ne %struct.kobject* %3, null, !dbg !12939
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !12941

if.then7:                                         ; preds = %if.end4
  br label %block_kobj_err, !dbg !12942

if.end8:                                          ; preds = %if.end4
  %4 = load %struct.kobject*, %struct.kobject** @dev_kobj, align 8, !dbg !12943
  %call9 = call %struct.kobject* @kobject_create_and_add(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0), %struct.kobject* %4) #10, !dbg !12944
  store %struct.kobject* %call9, %struct.kobject** @sysfs_dev_char_kobj, align 8, !dbg !12945
  %5 = load %struct.kobject*, %struct.kobject** @sysfs_dev_char_kobj, align 8, !dbg !12946
  %tobool10 = icmp ne %struct.kobject* %5, null, !dbg !12946
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !12948

if.then11:                                        ; preds = %if.end8
  br label %char_kobj_err, !dbg !12949

if.end12:                                         ; preds = %if.end8
  store i32 0, i32* %retval, align 4, !dbg !12950
  br label %return, !dbg !12950

char_kobj_err:                                    ; preds = %if.then11
  call void @llvm.dbg.label(metadata !12951), !dbg !12952
  %6 = load %struct.kobject*, %struct.kobject** @sysfs_dev_block_kobj, align 8, !dbg !12953
  call void @kobject_put(%struct.kobject* %6) #10, !dbg !12954
  br label %block_kobj_err, !dbg !12954

block_kobj_err:                                   ; preds = %char_kobj_err, %if.then7
  call void @llvm.dbg.label(metadata !12955), !dbg !12956
  %7 = load %struct.kobject*, %struct.kobject** @dev_kobj, align 8, !dbg !12957
  call void @kobject_put(%struct.kobject* %7) #10, !dbg !12958
  br label %dev_kobj_err, !dbg !12958

dev_kobj_err:                                     ; preds = %block_kobj_err, %if.then3
  call void @llvm.dbg.label(metadata !12959), !dbg !12960
  %8 = load %struct.kset*, %struct.kset** @devices_kset, align 8, !dbg !12961
  call void @kset_unregister(%struct.kset* %8) #10, !dbg !12962
  store i32 -12, i32* %retval, align 4, !dbg !12963
  br label %return, !dbg !12963

return:                                           ; preds = %dev_kobj_err, %if.end12, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !12964
  ret i32 %9, !dbg !12964
}

; Function Attrs: noredzone
declare dso_local %struct.kset* @kset_create_and_add(i8*, %struct.kset_uevent_ops*, %struct.kobject*) #2

; Function Attrs: noredzone
declare dso_local void @kset_unregister(%struct.kset*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @device_offline(%struct.device* %dev) #0 !dbg !12965 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12966, metadata !DIExpression()), !dbg !12967
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12968, metadata !DIExpression()), !dbg !12969
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12970
  %offline_disabled = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 34, !dbg !12972
  %bf.load = load i8, i8* %offline_disabled, align 8, !dbg !12972
  %bf.clear = and i8 %bf.load, 1, !dbg !12972
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !12972
  br i1 %bf.cast, label %if.then, label %if.end, !dbg !12973

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !12974
  br label %return, !dbg !12974

if.end:                                           ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12975
  %call = call i32 @device_for_each_child(%struct.device* %1, i8* null, i32 (%struct.device*, i8*)* @device_check_offline) #10, !dbg !12976
  store i32 %call, i32* %ret, align 4, !dbg !12977
  %2 = load i32, i32* %ret, align 4, !dbg !12978
  %tobool = icmp ne i32 %2, 0, !dbg !12978
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !12980

if.then1:                                         ; preds = %if.end
  %3 = load i32, i32* %ret, align 4, !dbg !12981
  store i32 %3, i32* %retval, align 4, !dbg !12982
  br label %return, !dbg !12982

if.end2:                                          ; preds = %if.end
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12983
  call void @device_lock(%struct.device* %4) #10, !dbg !12984
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12985
  %call3 = call zeroext i1 @device_supports_offline(%struct.device* %5) #10, !dbg !12987
  br i1 %call3, label %if.then4, label %if.end19, !dbg !12988

if.then4:                                         ; preds = %if.end2
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12989
  %offline = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 34, !dbg !12992
  %bf.load5 = load i8, i8* %offline, align 8, !dbg !12992
  %bf.lshr = lshr i8 %bf.load5, 1, !dbg !12992
  %bf.clear6 = and i8 %bf.lshr, 1, !dbg !12992
  %bf.cast7 = trunc i8 %bf.clear6 to i1, !dbg !12992
  br i1 %bf.cast7, label %if.then8, label %if.else, !dbg !12993

if.then8:                                         ; preds = %if.then4
  store i32 1, i32* %ret, align 4, !dbg !12994
  br label %if.end18, !dbg !12996

if.else:                                          ; preds = %if.then4
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12997
  %bus = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 5, !dbg !12999
  %8 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !12999
  %offline9 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %8, i32 0, i32 13, !dbg !13000
  %9 = load i32 (%struct.device*)*, i32 (%struct.device*)** %offline9, align 8, !dbg !13000
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13001
  %call10 = call i32 %9(%struct.device* %10) #10, !dbg !12997
  store i32 %call10, i32* %ret, align 4, !dbg !13002
  %11 = load i32, i32* %ret, align 4, !dbg !13003
  %tobool11 = icmp ne i32 %11, 0, !dbg !13003
  br i1 %tobool11, label %if.end17, label %if.then12, !dbg !13005

if.then12:                                        ; preds = %if.else
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13006
  %kobj = getelementptr inbounds %struct.device, %struct.device* %12, i32 0, i32 0, !dbg !13008
  %call13 = call i32 @kobject_uevent(%struct.kobject* %kobj, i32 5) #10, !dbg !13009
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13010
  %offline14 = getelementptr inbounds %struct.device, %struct.device* %13, i32 0, i32 34, !dbg !13011
  %bf.load15 = load i8, i8* %offline14, align 8, !dbg !13012
  %bf.clear16 = and i8 %bf.load15, -3, !dbg !13012
  %bf.set = or i8 %bf.clear16, 2, !dbg !13012
  store i8 %bf.set, i8* %offline14, align 8, !dbg !13012
  br label %if.end17, !dbg !13013

if.end17:                                         ; preds = %if.then12, %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then8
  br label %if.end19, !dbg !13014

if.end19:                                         ; preds = %if.end18, %if.end2
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13015
  call void @device_unlock(%struct.device* %14) #10, !dbg !13016
  %15 = load i32, i32* %ret, align 4, !dbg !13017
  store i32 %15, i32* %retval, align 4, !dbg !13018
  br label %return, !dbg !13018

return:                                           ; preds = %if.end19, %if.then1, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !13019
  ret i32 %16, !dbg !13019
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @device_check_offline(%struct.device* %dev, i8* %not_used) #0 !dbg !13020 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %not_used.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13021, metadata !DIExpression()), !dbg !13022
  store i8* %not_used, i8** %not_used.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %not_used.addr, metadata !13023, metadata !DIExpression()), !dbg !13024
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13025, metadata !DIExpression()), !dbg !13026
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13027
  %call = call i32 @device_for_each_child(%struct.device* %0, i8* null, i32 (%struct.device*, i8*)* @device_check_offline) #10, !dbg !13028
  store i32 %call, i32* %ret, align 4, !dbg !13029
  %1 = load i32, i32* %ret, align 4, !dbg !13030
  %tobool = icmp ne i32 %1, 0, !dbg !13030
  br i1 %tobool, label %if.then, label %if.end, !dbg !13032

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !13033
  store i32 %2, i32* %retval, align 4, !dbg !13034
  br label %return, !dbg !13034

if.end:                                           ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13035
  %call1 = call zeroext i1 @device_supports_offline(%struct.device* %3) #10, !dbg !13036
  br i1 %call1, label %land.rhs, label %land.end, !dbg !13037

land.rhs:                                         ; preds = %if.end
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13038
  %offline = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 34, !dbg !13039
  %bf.load = load i8, i8* %offline, align 8, !dbg !13039
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !13039
  %bf.clear = and i8 %bf.lshr, 1, !dbg !13039
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !13039
  %lnot = xor i1 %bf.cast, true, !dbg !13040
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %5 = phi i1 [ false, %if.end ], [ %lnot, %land.rhs ], !dbg !13041
  %6 = zext i1 %5 to i64, !dbg !13036
  %cond = select i1 %5, i32 -16, i32 0, !dbg !13036
  store i32 %cond, i32* %retval, align 4, !dbg !13042
  br label %return, !dbg !13042

return:                                           ; preds = %land.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !13043
  ret i32 %7, !dbg !13043
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @device_supports_offline(%struct.device* %dev) #0 !dbg !13044 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13045, metadata !DIExpression()), !dbg !13046
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13047
  %bus = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13048
  %1 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !13048
  %tobool = icmp ne %struct.bus_type* %1, null, !dbg !13047
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !13049

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13050
  %bus1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 5, !dbg !13051
  %3 = load %struct.bus_type*, %struct.bus_type** %bus1, align 8, !dbg !13051
  %offline = getelementptr inbounds %struct.bus_type, %struct.bus_type* %3, i32 0, i32 13, !dbg !13052
  %4 = load i32 (%struct.device*)*, i32 (%struct.device*)** %offline, align 8, !dbg !13052
  %tobool2 = icmp ne i32 (%struct.device*)* %4, null, !dbg !13050
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !13053

land.rhs:                                         ; preds = %land.lhs.true
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13054
  %bus3 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 5, !dbg !13055
  %6 = load %struct.bus_type*, %struct.bus_type** %bus3, align 8, !dbg !13055
  %online = getelementptr inbounds %struct.bus_type, %struct.bus_type* %6, i32 0, i32 12, !dbg !13056
  %7 = load i32 (%struct.device*)*, i32 (%struct.device*)** %online, align 8, !dbg !13056
  %tobool4 = icmp ne i32 (%struct.device*)* %7, null, !dbg !13053
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %8 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %tobool4, %land.rhs ], !dbg !13057
  ret i1 %8, !dbg !13058
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @device_online(%struct.device* %dev) #0 !dbg !13059 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13060, metadata !DIExpression()), !dbg !13061
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13062, metadata !DIExpression()), !dbg !13063
  store i32 0, i32* %ret, align 4, !dbg !13063
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13064
  call void @device_lock(%struct.device* %0) #10, !dbg !13065
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13066
  %call = call zeroext i1 @device_supports_offline(%struct.device* %1) #10, !dbg !13068
  br i1 %call, label %if.then, label %if.end9, !dbg !13069

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13070
  %offline = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 34, !dbg !13073
  %bf.load = load i8, i8* %offline, align 8, !dbg !13073
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !13073
  %bf.clear = and i8 %bf.lshr, 1, !dbg !13073
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !13073
  br i1 %bf.cast, label %if.then1, label %if.else, !dbg !13074

if.then1:                                         ; preds = %if.then
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13075
  %bus = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 5, !dbg !13077
  %4 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !13077
  %online = getelementptr inbounds %struct.bus_type, %struct.bus_type* %4, i32 0, i32 12, !dbg !13078
  %5 = load i32 (%struct.device*)*, i32 (%struct.device*)** %online, align 8, !dbg !13078
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13079
  %call2 = call i32 %5(%struct.device* %6) #10, !dbg !13075
  store i32 %call2, i32* %ret, align 4, !dbg !13080
  %7 = load i32, i32* %ret, align 4, !dbg !13081
  %tobool = icmp ne i32 %7, 0, !dbg !13081
  br i1 %tobool, label %if.end, label %if.then3, !dbg !13083

if.then3:                                         ; preds = %if.then1
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13084
  %kobj = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 0, !dbg !13086
  %call4 = call i32 @kobject_uevent(%struct.kobject* %kobj, i32 4) #10, !dbg !13087
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13088
  %offline5 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 34, !dbg !13089
  %bf.load6 = load i8, i8* %offline5, align 8, !dbg !13090
  %bf.clear7 = and i8 %bf.load6, -3, !dbg !13090
  store i8 %bf.clear7, i8* %offline5, align 8, !dbg !13090
  br label %if.end, !dbg !13091

if.end:                                           ; preds = %if.then3, %if.then1
  br label %if.end8, !dbg !13092

if.else:                                          ; preds = %if.then
  store i32 1, i32* %ret, align 4, !dbg !13093
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.end
  br label %if.end9, !dbg !13095

if.end9:                                          ; preds = %if.end8, %entry
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13096
  call void @device_unlock(%struct.device* %10) #10, !dbg !13097
  %11 = load i32, i32* %ret, align 4, !dbg !13098
  ret i32 %11, !dbg !13099
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device* @__root_device_register(i8* %name, %struct.module* %owner) #0 !dbg !13100 {
entry:
  %retval = alloca %struct.device*, align 8
  %name.addr = alloca i8*, align 8
  %owner.addr = alloca %struct.module*, align 8
  %root = alloca %struct.root_device*, align 8
  %err = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13103, metadata !DIExpression()), !dbg !13104
  store %struct.module* %owner, %struct.module** %owner.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %owner.addr, metadata !13105, metadata !DIExpression()), !dbg !13106
  call void @llvm.dbg.declare(metadata %struct.root_device** %root, metadata !13107, metadata !DIExpression()), !dbg !13108
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13109, metadata !DIExpression()), !dbg !13110
  store i32 -12, i32* %err, align 4, !dbg !13110
  %call = call i8* @kzalloc(i64 704, i32 3264) #10, !dbg !13111
  %0 = bitcast i8* %call to %struct.root_device*, !dbg !13111
  store %struct.root_device* %0, %struct.root_device** %root, align 8, !dbg !13112
  %1 = load %struct.root_device*, %struct.root_device** %root, align 8, !dbg !13113
  %tobool = icmp ne %struct.root_device* %1, null, !dbg !13113
  br i1 %tobool, label %if.end, label %if.then, !dbg !13115

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %err, align 4, !dbg !13116
  %conv = sext i32 %2 to i64, !dbg !13116
  %call1 = call i8* @ERR_PTR(i64 %conv) #10, !dbg !13117
  %3 = bitcast i8* %call1 to %struct.device*, !dbg !13117
  store %struct.device* %3, %struct.device** %retval, align 8, !dbg !13118
  br label %return, !dbg !13118

if.end:                                           ; preds = %entry
  %4 = load %struct.root_device*, %struct.root_device** %root, align 8, !dbg !13119
  %dev = getelementptr inbounds %struct.root_device, %struct.root_device* %4, i32 0, i32 0, !dbg !13120
  %5 = load i8*, i8** %name.addr, align 8, !dbg !13121
  %call2 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %dev, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i8* %5) #10, !dbg !13122
  store i32 %call2, i32* %err, align 4, !dbg !13123
  %6 = load i32, i32* %err, align 4, !dbg !13124
  %tobool3 = icmp ne i32 %6, 0, !dbg !13124
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !13126

if.then4:                                         ; preds = %if.end
  %7 = load %struct.root_device*, %struct.root_device** %root, align 8, !dbg !13127
  %8 = bitcast %struct.root_device* %7 to i8*, !dbg !13127
  call void @kfree(i8* %8) #10, !dbg !13129
  %9 = load i32, i32* %err, align 4, !dbg !13130
  %conv5 = sext i32 %9 to i64, !dbg !13130
  %call6 = call i8* @ERR_PTR(i64 %conv5) #10, !dbg !13131
  %10 = bitcast i8* %call6 to %struct.device*, !dbg !13131
  store %struct.device* %10, %struct.device** %retval, align 8, !dbg !13132
  br label %return, !dbg !13132

if.end7:                                          ; preds = %if.end
  %11 = load %struct.root_device*, %struct.root_device** %root, align 8, !dbg !13133
  %dev8 = getelementptr inbounds %struct.root_device, %struct.root_device* %11, i32 0, i32 0, !dbg !13134
  %release = getelementptr inbounds %struct.device, %struct.device* %dev8, i32 0, i32 31, !dbg !13135
  store void (%struct.device*)* @root_device_release, void (%struct.device*)** %release, align 8, !dbg !13136
  %12 = load %struct.root_device*, %struct.root_device** %root, align 8, !dbg !13137
  %dev9 = getelementptr inbounds %struct.root_device, %struct.root_device* %12, i32 0, i32 0, !dbg !13138
  %call10 = call i32 @device_register(%struct.device* %dev9) #10, !dbg !13139
  store i32 %call10, i32* %err, align 4, !dbg !13140
  %13 = load i32, i32* %err, align 4, !dbg !13141
  %tobool11 = icmp ne i32 %13, 0, !dbg !13141
  br i1 %tobool11, label %if.then12, label %if.end16, !dbg !13143

if.then12:                                        ; preds = %if.end7
  %14 = load %struct.root_device*, %struct.root_device** %root, align 8, !dbg !13144
  %dev13 = getelementptr inbounds %struct.root_device, %struct.root_device* %14, i32 0, i32 0, !dbg !13146
  call void @put_device(%struct.device* %dev13) #10, !dbg !13147
  %15 = load i32, i32* %err, align 4, !dbg !13148
  %conv14 = sext i32 %15 to i64, !dbg !13148
  %call15 = call i8* @ERR_PTR(i64 %conv14) #10, !dbg !13149
  %16 = bitcast i8* %call15 to %struct.device*, !dbg !13149
  store %struct.device* %16, %struct.device** %retval, align 8, !dbg !13150
  br label %return, !dbg !13150

if.end16:                                         ; preds = %if.end7
  %17 = load %struct.root_device*, %struct.root_device** %root, align 8, !dbg !13151
  %dev17 = getelementptr inbounds %struct.root_device, %struct.root_device* %17, i32 0, i32 0, !dbg !13152
  store %struct.device* %dev17, %struct.device** %retval, align 8, !dbg !13153
  br label %return, !dbg !13153

return:                                           ; preds = %if.end16, %if.then12, %if.then4, %if.then
  %18 = load %struct.device*, %struct.device** %retval, align 8, !dbg !13154
  ret %struct.device* %18, !dbg !13154
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !13155 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !13158, metadata !DIExpression()), !dbg !13159
  %0 = load i64, i64* %error.addr, align 8, !dbg !13160
  %1 = inttoptr i64 %0 to i8*, !dbg !13161
  ret i8* %1, !dbg !13162
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @root_device_release(%struct.device* %dev) #0 !dbg !13163 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13164, metadata !DIExpression()), !dbg !13165
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13166
  %call = call %struct.root_device* @to_root_device(%struct.device* %0) #10, !dbg !13167
  %1 = bitcast %struct.root_device* %call to i8*, !dbg !13167
  call void @kfree(i8* %1) #10, !dbg !13168
  ret void, !dbg !13169
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @root_device_unregister(%struct.device* %dev) #0 !dbg !13170 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %root = alloca %struct.root_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13171, metadata !DIExpression()), !dbg !13172
  call void @llvm.dbg.declare(metadata %struct.root_device** %root, metadata !13173, metadata !DIExpression()), !dbg !13174
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13175
  %call = call %struct.root_device* @to_root_device(%struct.device* %0) #10, !dbg !13176
  store %struct.root_device* %call, %struct.root_device** %root, align 8, !dbg !13174
  %1 = load %struct.root_device*, %struct.root_device** %root, align 8, !dbg !13177
  %owner = getelementptr inbounds %struct.root_device, %struct.root_device* %1, i32 0, i32 1, !dbg !13179
  %2 = load %struct.module*, %struct.module** %owner, align 8, !dbg !13179
  %tobool = icmp ne %struct.module* %2, null, !dbg !13177
  br i1 %tobool, label %if.then, label %if.end, !dbg !13180

if.then:                                          ; preds = %entry
  %3 = load %struct.root_device*, %struct.root_device** %root, align 8, !dbg !13181
  %dev1 = getelementptr inbounds %struct.root_device, %struct.root_device* %3, i32 0, i32 0, !dbg !13182
  %kobj = getelementptr inbounds %struct.device, %struct.device* %dev1, i32 0, i32 0, !dbg !13183
  call void @sysfs_remove_link(%struct.kobject* %kobj, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0)) #10, !dbg !13184
  br label %if.end, !dbg !13184

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13185
  call void @device_unregister(%struct.device* %4) #10, !dbg !13186
  ret void, !dbg !13187
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.root_device* @to_root_device(%struct.device* %d) #0 !dbg !13188 {
entry:
  %d.addr = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.root_device*, align 8
  store %struct.device* %d, %struct.device** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %d.addr, metadata !13191, metadata !DIExpression()), !dbg !13192
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13193, metadata !DIExpression()), !dbg !13195
  %0 = load %struct.device*, %struct.device** %d.addr, align 8, !dbg !13195
  %1 = bitcast %struct.device* %0 to i8*, !dbg !13195
  store i8* %1, i8** %__mptr, align 8, !dbg !13195
  br label %do.body, !dbg !13195

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13196

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !13195
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !13195
  %3 = bitcast i8* %add.ptr to %struct.root_device*, !dbg !13195
  store %struct.root_device* %3, %struct.root_device** %tmp, align 8, !dbg !13196
  %4 = load %struct.root_device*, %struct.root_device** %tmp, align 8, !dbg !13195
  ret %struct.root_device* %4, !dbg !13198
}

; Function Attrs: noredzone
declare dso_local void @sysfs_remove_link(%struct.kobject*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device* @device_create(%struct.class* %class, %struct.device* %parent, i32 %devt, i8* %drvdata, i8* %fmt, ...) #0 !dbg !13199 {
entry:
  %class.addr = alloca %struct.class*, align 8
  %parent.addr = alloca %struct.device*, align 8
  %devt.addr = alloca i32, align 4
  %drvdata.addr = alloca i8*, align 8
  %fmt.addr = alloca i8*, align 8
  %vargs = alloca [1 x %struct.__va_list_tag], align 16
  %dev = alloca %struct.device*, align 8
  store %struct.class* %class, %struct.class** %class.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.class** %class.addr, metadata !13202, metadata !DIExpression()), !dbg !13203
  store %struct.device* %parent, %struct.device** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %parent.addr, metadata !13204, metadata !DIExpression()), !dbg !13205
  store i32 %devt, i32* %devt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devt.addr, metadata !13206, metadata !DIExpression()), !dbg !13207
  store i8* %drvdata, i8** %drvdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %drvdata.addr, metadata !13208, metadata !DIExpression()), !dbg !13209
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !13210, metadata !DIExpression()), !dbg !13211
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %vargs, metadata !13212, metadata !DIExpression()), !dbg !13213
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !13214, metadata !DIExpression()), !dbg !13215
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %vargs, i64 0, i64 0, !dbg !13216
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !13216
  call void @llvm.va_start(i8* %arraydecay1), !dbg !13216
  %0 = load %struct.class*, %struct.class** %class.addr, align 8, !dbg !13217
  %1 = load %struct.device*, %struct.device** %parent.addr, align 8, !dbg !13218
  %2 = load i32, i32* %devt.addr, align 4, !dbg !13219
  %3 = load i8*, i8** %drvdata.addr, align 8, !dbg !13220
  %4 = load i8*, i8** %fmt.addr, align 8, !dbg !13221
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %vargs, i64 0, i64 0, !dbg !13222
  %call = call %struct.device* @device_create_groups_vargs(%struct.class* %0, %struct.device* %1, i32 %2, i8* %3, %struct.attribute_group** null, i8* %4, %struct.__va_list_tag* %arraydecay2) #10, !dbg !13223
  store %struct.device* %call, %struct.device** %dev, align 8, !dbg !13224
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %vargs, i64 0, i64 0, !dbg !13225
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !13225
  call void @llvm.va_end(i8* %arraydecay34), !dbg !13225
  %5 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13226
  ret %struct.device* %5, !dbg !13227
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device* @device_create_groups_vargs(%struct.class* %class, %struct.device* %parent, i32 %devt, i8* %drvdata, %struct.attribute_group** %groups, i8* %fmt, %struct.__va_list_tag* %args) #0 !dbg !13228 {
entry:
  %retval = alloca %struct.device*, align 8
  %class.addr = alloca %struct.class*, align 8
  %parent.addr = alloca %struct.device*, align 8
  %devt.addr = alloca i32, align 4
  %drvdata.addr = alloca i8*, align 8
  %groups.addr = alloca %struct.attribute_group**, align 8
  %fmt.addr = alloca i8*, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  %dev = alloca %struct.device*, align 8
  %retval1 = alloca i32, align 4
  store %struct.class* %class, %struct.class** %class.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.class** %class.addr, metadata !13232, metadata !DIExpression()), !dbg !13233
  store %struct.device* %parent, %struct.device** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %parent.addr, metadata !13234, metadata !DIExpression()), !dbg !13235
  store i32 %devt, i32* %devt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devt.addr, metadata !13236, metadata !DIExpression()), !dbg !13237
  store i8* %drvdata, i8** %drvdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %drvdata.addr, metadata !13238, metadata !DIExpression()), !dbg !13239
  store %struct.attribute_group** %groups, %struct.attribute_group*** %groups.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute_group*** %groups.addr, metadata !13240, metadata !DIExpression()), !dbg !13241
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !13242, metadata !DIExpression()), !dbg !13243
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !13244, metadata !DIExpression()), !dbg !13245
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !13246, metadata !DIExpression()), !dbg !13247
  store %struct.device* null, %struct.device** %dev, align 8, !dbg !13247
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !13248, metadata !DIExpression()), !dbg !13249
  store i32 -19, i32* %retval1, align 4, !dbg !13249
  %0 = load %struct.class*, %struct.class** %class.addr, align 8, !dbg !13250
  %cmp = icmp eq %struct.class* %0, null, !dbg !13252
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !13253

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.class*, %struct.class** %class.addr, align 8, !dbg !13254
  %2 = bitcast %struct.class* %1 to i8*, !dbg !13254
  %call = call zeroext i1 @IS_ERR(i8* %2) #10, !dbg !13255
  br i1 %call, label %if.then, label %if.end, !dbg !13256

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %error, !dbg !13257

if.end:                                           ; preds = %lor.lhs.false
  %call2 = call i8* @kzalloc(i64 696, i32 3264) #10, !dbg !13258
  %3 = bitcast i8* %call2 to %struct.device*, !dbg !13258
  store %struct.device* %3, %struct.device** %dev, align 8, !dbg !13259
  %4 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13260
  %tobool = icmp ne %struct.device* %4, null, !dbg !13260
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !13262

if.then3:                                         ; preds = %if.end
  store i32 -12, i32* %retval1, align 4, !dbg !13263
  br label %error, !dbg !13265

if.end4:                                          ; preds = %if.end
  %5 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13266
  call void @device_initialize(%struct.device* %5) #10, !dbg !13267
  %6 = load i32, i32* %devt.addr, align 4, !dbg !13268
  %7 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13269
  %devt5 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 25, !dbg !13270
  store i32 %6, i32* %devt5, align 8, !dbg !13271
  %8 = load %struct.class*, %struct.class** %class.addr, align 8, !dbg !13272
  %9 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13273
  %class6 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 29, !dbg !13274
  store %struct.class* %8, %struct.class** %class6, align 8, !dbg !13275
  %10 = load %struct.device*, %struct.device** %parent.addr, align 8, !dbg !13276
  %11 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13277
  %parent7 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 1, !dbg !13278
  store %struct.device* %10, %struct.device** %parent7, align 8, !dbg !13279
  %12 = load %struct.attribute_group**, %struct.attribute_group*** %groups.addr, align 8, !dbg !13280
  %13 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13281
  %groups8 = getelementptr inbounds %struct.device, %struct.device* %13, i32 0, i32 30, !dbg !13282
  store %struct.attribute_group** %12, %struct.attribute_group*** %groups8, align 8, !dbg !13283
  %14 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13284
  %release = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 31, !dbg !13285
  store void (%struct.device*)* @device_create_release, void (%struct.device*)** %release, align 8, !dbg !13286
  %15 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13287
  %16 = load i8*, i8** %drvdata.addr, align 8, !dbg !13288
  call void @dev_set_drvdata(%struct.device* %15, i8* %16) #10, !dbg !13289
  %17 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13290
  %kobj = getelementptr inbounds %struct.device, %struct.device* %17, i32 0, i32 0, !dbg !13291
  %18 = load i8*, i8** %fmt.addr, align 8, !dbg !13292
  %19 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !13293
  %call9 = call i32 @kobject_set_name_vargs(%struct.kobject* %kobj, i8* %18, %struct.__va_list_tag* %19) #10, !dbg !13294
  store i32 %call9, i32* %retval1, align 4, !dbg !13295
  %20 = load i32, i32* %retval1, align 4, !dbg !13296
  %tobool10 = icmp ne i32 %20, 0, !dbg !13296
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !13298

if.then11:                                        ; preds = %if.end4
  br label %error, !dbg !13299

if.end12:                                         ; preds = %if.end4
  %21 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13300
  %call13 = call i32 @device_add(%struct.device* %21) #10, !dbg !13301
  store i32 %call13, i32* %retval1, align 4, !dbg !13302
  %22 = load i32, i32* %retval1, align 4, !dbg !13303
  %tobool14 = icmp ne i32 %22, 0, !dbg !13303
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !13305

if.then15:                                        ; preds = %if.end12
  br label %error, !dbg !13306

if.end16:                                         ; preds = %if.end12
  %23 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13307
  store %struct.device* %23, %struct.device** %retval, align 8, !dbg !13308
  br label %return, !dbg !13308

error:                                            ; preds = %if.then15, %if.then11, %if.then3, %if.then
  call void @llvm.dbg.label(metadata !13309), !dbg !13310
  %24 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13311
  call void @put_device(%struct.device* %24) #10, !dbg !13312
  %25 = load i32, i32* %retval1, align 4, !dbg !13313
  %conv = sext i32 %25 to i64, !dbg !13313
  %call17 = call i8* @ERR_PTR(i64 %conv) #10, !dbg !13314
  %26 = bitcast i8* %call17 to %struct.device*, !dbg !13314
  store %struct.device* %26, %struct.device** %retval, align 8, !dbg !13315
  br label %return, !dbg !13315

return:                                           ; preds = %error, %if.end16
  %27 = load %struct.device*, %struct.device** %retval, align 8, !dbg !13316
  ret %struct.device* %27, !dbg !13316
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device* @device_create_with_groups(%struct.class* %class, %struct.device* %parent, i32 %devt, i8* %drvdata, %struct.attribute_group** %groups, i8* %fmt, ...) #0 !dbg !13317 {
entry:
  %class.addr = alloca %struct.class*, align 8
  %parent.addr = alloca %struct.device*, align 8
  %devt.addr = alloca i32, align 4
  %drvdata.addr = alloca i8*, align 8
  %groups.addr = alloca %struct.attribute_group**, align 8
  %fmt.addr = alloca i8*, align 8
  %vargs = alloca [1 x %struct.__va_list_tag], align 16
  %dev = alloca %struct.device*, align 8
  store %struct.class* %class, %struct.class** %class.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.class** %class.addr, metadata !13320, metadata !DIExpression()), !dbg !13321
  store %struct.device* %parent, %struct.device** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %parent.addr, metadata !13322, metadata !DIExpression()), !dbg !13323
  store i32 %devt, i32* %devt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devt.addr, metadata !13324, metadata !DIExpression()), !dbg !13325
  store i8* %drvdata, i8** %drvdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %drvdata.addr, metadata !13326, metadata !DIExpression()), !dbg !13327
  store %struct.attribute_group** %groups, %struct.attribute_group*** %groups.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute_group*** %groups.addr, metadata !13328, metadata !DIExpression()), !dbg !13329
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !13330, metadata !DIExpression()), !dbg !13331
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %vargs, metadata !13332, metadata !DIExpression()), !dbg !13333
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !13334, metadata !DIExpression()), !dbg !13335
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %vargs, i64 0, i64 0, !dbg !13336
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !13336
  call void @llvm.va_start(i8* %arraydecay1), !dbg !13336
  %0 = load %struct.class*, %struct.class** %class.addr, align 8, !dbg !13337
  %1 = load %struct.device*, %struct.device** %parent.addr, align 8, !dbg !13338
  %2 = load i32, i32* %devt.addr, align 4, !dbg !13339
  %3 = load i8*, i8** %drvdata.addr, align 8, !dbg !13340
  %4 = load %struct.attribute_group**, %struct.attribute_group*** %groups.addr, align 8, !dbg !13341
  %5 = load i8*, i8** %fmt.addr, align 8, !dbg !13342
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %vargs, i64 0, i64 0, !dbg !13343
  %call = call %struct.device* @device_create_groups_vargs(%struct.class* %0, %struct.device* %1, i32 %2, i8* %3, %struct.attribute_group** %4, i8* %5, %struct.__va_list_tag* %arraydecay2) #10, !dbg !13344
  store %struct.device* %call, %struct.device** %dev, align 8, !dbg !13345
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %vargs, i64 0, i64 0, !dbg !13346
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !13346
  call void @llvm.va_end(i8* %arraydecay34), !dbg !13346
  %6 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13347
  ret %struct.device* %6, !dbg !13348
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @device_destroy(%struct.class* %class, i32 %devt) #0 !dbg !13349 {
entry:
  %class.addr = alloca %struct.class*, align 8
  %devt.addr = alloca i32, align 4
  %dev = alloca %struct.device*, align 8
  store %struct.class* %class, %struct.class** %class.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.class** %class.addr, metadata !13352, metadata !DIExpression()), !dbg !13353
  store i32 %devt, i32* %devt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devt.addr, metadata !13354, metadata !DIExpression()), !dbg !13355
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !13356, metadata !DIExpression()), !dbg !13357
  %0 = load %struct.class*, %struct.class** %class.addr, align 8, !dbg !13358
  %1 = load i32, i32* %devt.addr, align 4, !dbg !13359
  %call = call %struct.device* @class_find_device_by_devt(%struct.class* %0, i32 %1) #10, !dbg !13360
  store %struct.device* %call, %struct.device** %dev, align 8, !dbg !13361
  %2 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13362
  %tobool = icmp ne %struct.device* %2, null, !dbg !13362
  br i1 %tobool, label %if.then, label %if.end, !dbg !13364

if.then:                                          ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13365
  call void @put_device(%struct.device* %3) #10, !dbg !13367
  %4 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13368
  call void @device_unregister(%struct.device* %4) #10, !dbg !13369
  br label %if.end, !dbg !13370

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !13371
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device* @class_find_device_by_devt(%struct.class* %class, i32 %devt) #0 !dbg !13372 {
entry:
  %class.addr = alloca %struct.class*, align 8
  %devt.addr = alloca i32, align 4
  store %struct.class* %class, %struct.class** %class.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.class** %class.addr, metadata !13375, metadata !DIExpression()), !dbg !13376
  store i32 %devt, i32* %devt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devt.addr, metadata !13377, metadata !DIExpression()), !dbg !13378
  %0 = load %struct.class*, %struct.class** %class.addr, align 8, !dbg !13379
  %1 = bitcast i32* %devt.addr to i8*, !dbg !13380
  %call = call %struct.device* @class_find_device(%struct.class* %0, %struct.device* null, i8* %1, i32 (%struct.device*, i8*)* @device_match_devt) #10, !dbg !13381
  ret %struct.device* %call, !dbg !13382
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @device_rename(%struct.device* %dev, i8* %new_name) #0 !dbg !13383 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %new_name.addr = alloca i8*, align 8
  %kobj = alloca %struct.kobject*, align 8
  %old_device_name = alloca i8*, align 8
  %error = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13386, metadata !DIExpression()), !dbg !13387
  store i8* %new_name, i8** %new_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %new_name.addr, metadata !13388, metadata !DIExpression()), !dbg !13389
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj, metadata !13390, metadata !DIExpression()), !dbg !13391
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13392
  %kobj1 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !13393
  store %struct.kobject* %kobj1, %struct.kobject** %kobj, align 8, !dbg !13391
  call void @llvm.dbg.declare(metadata i8** %old_device_name, metadata !13394, metadata !DIExpression()), !dbg !13395
  store i8* null, i8** %old_device_name, align 8, !dbg !13395
  call void @llvm.dbg.declare(metadata i32* %error, metadata !13396, metadata !DIExpression()), !dbg !13397
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13398
  %call = call %struct.device* @get_device(%struct.device* %1) #10, !dbg !13399
  store %struct.device* %call, %struct.device** %dev.addr, align 8, !dbg !13400
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13401
  %tobool = icmp ne %struct.device* %2, null, !dbg !13401
  br i1 %tobool, label %if.end, label %if.then, !dbg !13403

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !13404
  br label %return, !dbg !13404

if.end:                                           ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13405
  %call2 = call i8* @dev_name(%struct.device* %3) #10, !dbg !13406
  %call3 = call noalias i8* @kstrdup(i8* %call2, i32 3264) #10, !dbg !13407
  store i8* %call3, i8** %old_device_name, align 8, !dbg !13408
  %4 = load i8*, i8** %old_device_name, align 8, !dbg !13409
  %tobool4 = icmp ne i8* %4, null, !dbg !13409
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !13411

if.then5:                                         ; preds = %if.end
  store i32 -12, i32* %error, align 4, !dbg !13412
  br label %out, !dbg !13414

if.end6:                                          ; preds = %if.end
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13415
  %class = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 29, !dbg !13417
  %6 = load %struct.class*, %struct.class** %class, align 8, !dbg !13417
  %tobool7 = icmp ne %struct.class* %6, null, !dbg !13415
  br i1 %tobool7, label %if.then8, label %if.end16, !dbg !13418

if.then8:                                         ; preds = %if.end6
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13419
  %class9 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 29, !dbg !13421
  %8 = load %struct.class*, %struct.class** %class9, align 8, !dbg !13421
  %p = getelementptr inbounds %struct.class, %struct.class* %8, i32 0, i32 14, !dbg !13422
  %9 = load %struct.subsys_private*, %struct.subsys_private** %p, align 8, !dbg !13422
  %subsys = getelementptr inbounds %struct.subsys_private, %struct.subsys_private* %9, i32 0, i32 0, !dbg !13423
  %kobj10 = getelementptr inbounds %struct.kset, %struct.kset* %subsys, i32 0, i32 2, !dbg !13424
  %10 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !13425
  %11 = load i8*, i8** %old_device_name, align 8, !dbg !13426
  %12 = load i8*, i8** %new_name.addr, align 8, !dbg !13427
  %13 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !13428
  %call11 = call i8* @kobject_namespace(%struct.kobject* %13) #10, !dbg !13429
  %call12 = call i32 @sysfs_rename_link_ns(%struct.kobject* %kobj10, %struct.kobject* %10, i8* %11, i8* %12, i8* %call11) #10, !dbg !13430
  store i32 %call12, i32* %error, align 4, !dbg !13431
  %14 = load i32, i32* %error, align 4, !dbg !13432
  %tobool13 = icmp ne i32 %14, 0, !dbg !13432
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !13434

if.then14:                                        ; preds = %if.then8
  br label %out, !dbg !13435

if.end15:                                         ; preds = %if.then8
  br label %if.end16, !dbg !13436

if.end16:                                         ; preds = %if.end15, %if.end6
  %15 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !13437
  %16 = load i8*, i8** %new_name.addr, align 8, !dbg !13438
  %call17 = call i32 @kobject_rename(%struct.kobject* %15, i8* %16) #10, !dbg !13439
  store i32 %call17, i32* %error, align 4, !dbg !13440
  %17 = load i32, i32* %error, align 4, !dbg !13441
  %tobool18 = icmp ne i32 %17, 0, !dbg !13441
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !13443

if.then19:                                        ; preds = %if.end16
  br label %out, !dbg !13444

if.end20:                                         ; preds = %if.end16
  br label %out, !dbg !13441

out:                                              ; preds = %if.end20, %if.then19, %if.then14, %if.then5
  call void @llvm.dbg.label(metadata !13445), !dbg !13446
  %18 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13447
  call void @put_device(%struct.device* %18) #10, !dbg !13448
  %19 = load i8*, i8** %old_device_name, align 8, !dbg !13449
  call void @kfree(i8* %19) #10, !dbg !13450
  %20 = load i32, i32* %error, align 4, !dbg !13451
  store i32 %20, i32* %retval, align 4, !dbg !13452
  br label %return, !dbg !13452

return:                                           ; preds = %out, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !13453
  ret i32 %21, !dbg !13453
}

; Function Attrs: noredzone
declare dso_local i32 @sysfs_rename_link_ns(%struct.kobject*, %struct.kobject*, i8*, i8*, i8*) #2

; Function Attrs: noredzone
declare dso_local i8* @kobject_namespace(%struct.kobject*) #2

; Function Attrs: noredzone
declare dso_local i32 @kobject_rename(%struct.kobject*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @device_move(%struct.device* %dev, %struct.device* %new_parent, i32 %dpm_order) #0 !dbg !13454 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %new_parent.addr = alloca %struct.device*, align 8
  %dpm_order.addr = alloca i32, align 4
  %error = alloca i32, align 4
  %old_parent = alloca %struct.device*, align 8
  %new_parent_kobj = alloca %struct.kobject*, align 8
  %tmp = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13457, metadata !DIExpression()), !dbg !13458
  store %struct.device* %new_parent, %struct.device** %new_parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %new_parent.addr, metadata !13459, metadata !DIExpression()), !dbg !13460
  store i32 %dpm_order, i32* %dpm_order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dpm_order.addr, metadata !13461, metadata !DIExpression()), !dbg !13462
  call void @llvm.dbg.declare(metadata i32* %error, metadata !13463, metadata !DIExpression()), !dbg !13464
  call void @llvm.dbg.declare(metadata %struct.device** %old_parent, metadata !13465, metadata !DIExpression()), !dbg !13466
  call void @llvm.dbg.declare(metadata %struct.kobject** %new_parent_kobj, metadata !13467, metadata !DIExpression()), !dbg !13468
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13469
  %call = call %struct.device* @get_device(%struct.device* %0) #10, !dbg !13470
  store %struct.device* %call, %struct.device** %dev.addr, align 8, !dbg !13471
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13472
  %tobool = icmp ne %struct.device* %1, null, !dbg !13472
  br i1 %tobool, label %if.end, label %if.then, !dbg !13474

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !13475
  br label %return, !dbg !13475

if.end:                                           ; preds = %entry
  call void @device_pm_lock() #10, !dbg !13476
  %2 = load %struct.device*, %struct.device** %new_parent.addr, align 8, !dbg !13477
  %call1 = call %struct.device* @get_device(%struct.device* %2) #10, !dbg !13478
  store %struct.device* %call1, %struct.device** %new_parent.addr, align 8, !dbg !13479
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13480
  %4 = load %struct.device*, %struct.device** %new_parent.addr, align 8, !dbg !13481
  %call2 = call %struct.kobject* @get_device_parent(%struct.device* %3, %struct.device* %4) #10, !dbg !13482
  store %struct.kobject* %call2, %struct.kobject** %new_parent_kobj, align 8, !dbg !13483
  %5 = load %struct.kobject*, %struct.kobject** %new_parent_kobj, align 8, !dbg !13484
  %6 = bitcast %struct.kobject* %5 to i8*, !dbg !13484
  %call3 = call zeroext i1 @IS_ERR(i8* %6) #10, !dbg !13486
  br i1 %call3, label %if.then4, label %if.end6, !dbg !13487

if.then4:                                         ; preds = %if.end
  %7 = load %struct.kobject*, %struct.kobject** %new_parent_kobj, align 8, !dbg !13488
  %8 = bitcast %struct.kobject* %7 to i8*, !dbg !13488
  %call5 = call i64 @PTR_ERR(i8* %8) #10, !dbg !13490
  %conv = trunc i64 %call5 to i32, !dbg !13490
  store i32 %conv, i32* %error, align 4, !dbg !13491
  %9 = load %struct.device*, %struct.device** %new_parent.addr, align 8, !dbg !13492
  call void @put_device(%struct.device* %9) #10, !dbg !13493
  br label %out, !dbg !13494

if.end6:                                          ; preds = %if.end
  store i32 0, i32* %tmp, align 4, !dbg !13495
  %10 = load i32, i32* %tmp, align 4, !dbg !13498
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13499
  %kobj = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 0, !dbg !13500
  %12 = load %struct.kobject*, %struct.kobject** %new_parent_kobj, align 8, !dbg !13501
  %call7 = call i32 @kobject_move(%struct.kobject* %kobj, %struct.kobject* %12) #10, !dbg !13502
  store i32 %call7, i32* %error, align 4, !dbg !13503
  %13 = load i32, i32* %error, align 4, !dbg !13504
  %tobool8 = icmp ne i32 %13, 0, !dbg !13504
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !13506

if.then9:                                         ; preds = %if.end6
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13507
  %15 = load %struct.kobject*, %struct.kobject** %new_parent_kobj, align 8, !dbg !13509
  call void @cleanup_glue_dir(%struct.device* %14, %struct.kobject* %15) #10, !dbg !13510
  %16 = load %struct.device*, %struct.device** %new_parent.addr, align 8, !dbg !13511
  call void @put_device(%struct.device* %16) #10, !dbg !13512
  br label %out, !dbg !13513

if.end10:                                         ; preds = %if.end6
  %17 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13514
  %parent = getelementptr inbounds %struct.device, %struct.device* %17, i32 0, i32 1, !dbg !13515
  %18 = load %struct.device*, %struct.device** %parent, align 8, !dbg !13515
  store %struct.device* %18, %struct.device** %old_parent, align 8, !dbg !13516
  %19 = load %struct.device*, %struct.device** %new_parent.addr, align 8, !dbg !13517
  %20 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13518
  %parent11 = getelementptr inbounds %struct.device, %struct.device* %20, i32 0, i32 1, !dbg !13519
  store %struct.device* %19, %struct.device** %parent11, align 8, !dbg !13520
  %21 = load %struct.device*, %struct.device** %old_parent, align 8, !dbg !13521
  %tobool12 = icmp ne %struct.device* %21, null, !dbg !13521
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !13523

if.then13:                                        ; preds = %if.end10
  %22 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13524
  %p = getelementptr inbounds %struct.device, %struct.device* %22, i32 0, i32 2, !dbg !13525
  %23 = load %struct.device_private*, %struct.device_private** %p, align 8, !dbg !13525
  %knode_parent = getelementptr inbounds %struct.device_private, %struct.device_private* %23, i32 0, i32 1, !dbg !13526
  call void @klist_remove(%struct.klist_node* %knode_parent) #10, !dbg !13527
  br label %if.end14, !dbg !13527

if.end14:                                         ; preds = %if.then13, %if.end10
  %24 = load %struct.device*, %struct.device** %new_parent.addr, align 8, !dbg !13528
  %tobool15 = icmp ne %struct.device* %24, null, !dbg !13528
  br i1 %tobool15, label %if.then16, label %if.end21, !dbg !13530

if.then16:                                        ; preds = %if.end14
  %25 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13531
  %p17 = getelementptr inbounds %struct.device, %struct.device* %25, i32 0, i32 2, !dbg !13533
  %26 = load %struct.device_private*, %struct.device_private** %p17, align 8, !dbg !13533
  %knode_parent18 = getelementptr inbounds %struct.device_private, %struct.device_private* %26, i32 0, i32 1, !dbg !13534
  %27 = load %struct.device*, %struct.device** %new_parent.addr, align 8, !dbg !13535
  %p19 = getelementptr inbounds %struct.device, %struct.device* %27, i32 0, i32 2, !dbg !13536
  %28 = load %struct.device_private*, %struct.device_private** %p19, align 8, !dbg !13536
  %klist_children = getelementptr inbounds %struct.device_private, %struct.device_private* %28, i32 0, i32 0, !dbg !13537
  call void @klist_add_tail(%struct.klist_node* %knode_parent18, %struct.klist* %klist_children) #10, !dbg !13538
  %29 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13539
  %30 = load %struct.device*, %struct.device** %new_parent.addr, align 8, !dbg !13540
  %call20 = call i32 @dev_to_node(%struct.device* %30) #10, !dbg !13541
  call void @set_dev_node(%struct.device* %29, i32 %call20) #10, !dbg !13542
  br label %if.end21, !dbg !13543

if.end21:                                         ; preds = %if.then16, %if.end14
  %31 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13544
  %class = getelementptr inbounds %struct.device, %struct.device* %31, i32 0, i32 29, !dbg !13546
  %32 = load %struct.class*, %struct.class** %class, align 8, !dbg !13546
  %tobool22 = icmp ne %struct.class* %32, null, !dbg !13544
  br i1 %tobool22, label %if.then23, label %if.end49, !dbg !13547

if.then23:                                        ; preds = %if.end21
  %33 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13548
  %34 = load %struct.device*, %struct.device** %old_parent, align 8, !dbg !13550
  %35 = load %struct.device*, %struct.device** %new_parent.addr, align 8, !dbg !13551
  %call24 = call i32 @device_move_class_links(%struct.device* %33, %struct.device* %34, %struct.device* %35) #10, !dbg !13552
  store i32 %call24, i32* %error, align 4, !dbg !13553
  %36 = load i32, i32* %error, align 4, !dbg !13554
  %tobool25 = icmp ne i32 %36, 0, !dbg !13554
  br i1 %tobool25, label %if.then26, label %if.end48, !dbg !13556

if.then26:                                        ; preds = %if.then23
  %37 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13557
  %38 = load %struct.device*, %struct.device** %new_parent.addr, align 8, !dbg !13559
  %39 = load %struct.device*, %struct.device** %old_parent, align 8, !dbg !13560
  %call27 = call i32 @device_move_class_links(%struct.device* %37, %struct.device* %38, %struct.device* %39) #10, !dbg !13561
  %40 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13562
  %kobj28 = getelementptr inbounds %struct.device, %struct.device* %40, i32 0, i32 0, !dbg !13564
  %41 = load %struct.device*, %struct.device** %old_parent, align 8, !dbg !13565
  %kobj29 = getelementptr inbounds %struct.device, %struct.device* %41, i32 0, i32 0, !dbg !13566
  %call30 = call i32 @kobject_move(%struct.kobject* %kobj28, %struct.kobject* %kobj29) #10, !dbg !13567
  %tobool31 = icmp ne i32 %call30, 0, !dbg !13567
  br i1 %tobool31, label %if.end47, label %if.then32, !dbg !13568

if.then32:                                        ; preds = %if.then26
  %42 = load %struct.device*, %struct.device** %new_parent.addr, align 8, !dbg !13569
  %tobool33 = icmp ne %struct.device* %42, null, !dbg !13569
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !13572

if.then34:                                        ; preds = %if.then32
  %43 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13573
  %p35 = getelementptr inbounds %struct.device, %struct.device* %43, i32 0, i32 2, !dbg !13574
  %44 = load %struct.device_private*, %struct.device_private** %p35, align 8, !dbg !13574
  %knode_parent36 = getelementptr inbounds %struct.device_private, %struct.device_private* %44, i32 0, i32 1, !dbg !13575
  call void @klist_remove(%struct.klist_node* %knode_parent36) #10, !dbg !13576
  br label %if.end37, !dbg !13576

if.end37:                                         ; preds = %if.then34, %if.then32
  %45 = load %struct.device*, %struct.device** %old_parent, align 8, !dbg !13577
  %46 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13578
  %parent38 = getelementptr inbounds %struct.device, %struct.device* %46, i32 0, i32 1, !dbg !13579
  store %struct.device* %45, %struct.device** %parent38, align 8, !dbg !13580
  %47 = load %struct.device*, %struct.device** %old_parent, align 8, !dbg !13581
  %tobool39 = icmp ne %struct.device* %47, null, !dbg !13581
  br i1 %tobool39, label %if.then40, label %if.end46, !dbg !13583

if.then40:                                        ; preds = %if.end37
  %48 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13584
  %p41 = getelementptr inbounds %struct.device, %struct.device* %48, i32 0, i32 2, !dbg !13586
  %49 = load %struct.device_private*, %struct.device_private** %p41, align 8, !dbg !13586
  %knode_parent42 = getelementptr inbounds %struct.device_private, %struct.device_private* %49, i32 0, i32 1, !dbg !13587
  %50 = load %struct.device*, %struct.device** %old_parent, align 8, !dbg !13588
  %p43 = getelementptr inbounds %struct.device, %struct.device* %50, i32 0, i32 2, !dbg !13589
  %51 = load %struct.device_private*, %struct.device_private** %p43, align 8, !dbg !13589
  %klist_children44 = getelementptr inbounds %struct.device_private, %struct.device_private* %51, i32 0, i32 0, !dbg !13590
  call void @klist_add_tail(%struct.klist_node* %knode_parent42, %struct.klist* %klist_children44) #10, !dbg !13591
  %52 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13592
  %53 = load %struct.device*, %struct.device** %old_parent, align 8, !dbg !13593
  %call45 = call i32 @dev_to_node(%struct.device* %53) #10, !dbg !13594
  call void @set_dev_node(%struct.device* %52, i32 %call45) #10, !dbg !13595
  br label %if.end46, !dbg !13596

if.end46:                                         ; preds = %if.then40, %if.end37
  br label %if.end47, !dbg !13597

if.end47:                                         ; preds = %if.end46, %if.then26
  %54 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13598
  %55 = load %struct.kobject*, %struct.kobject** %new_parent_kobj, align 8, !dbg !13599
  call void @cleanup_glue_dir(%struct.device* %54, %struct.kobject* %55) #10, !dbg !13600
  %56 = load %struct.device*, %struct.device** %new_parent.addr, align 8, !dbg !13601
  call void @put_device(%struct.device* %56) #10, !dbg !13602
  br label %out, !dbg !13603

if.end48:                                         ; preds = %if.then23
  br label %if.end49, !dbg !13604

if.end49:                                         ; preds = %if.end48, %if.end21
  %57 = load i32, i32* %dpm_order.addr, align 4, !dbg !13605
  switch i32 %57, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb50
    i32 2, label %sw.bb51
    i32 3, label %sw.bb52
  ], !dbg !13606

sw.bb:                                            ; preds = %if.end49
  br label %sw.epilog, !dbg !13607

sw.bb50:                                          ; preds = %if.end49
  %58 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13609
  %59 = load %struct.device*, %struct.device** %new_parent.addr, align 8, !dbg !13610
  call void @device_pm_move_after(%struct.device* %58, %struct.device* %59) #10, !dbg !13611
  %60 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13612
  %61 = load %struct.device*, %struct.device** %new_parent.addr, align 8, !dbg !13613
  call void @devices_kset_move_after(%struct.device* %60, %struct.device* %61) #10, !dbg !13614
  br label %sw.epilog, !dbg !13615

sw.bb51:                                          ; preds = %if.end49
  %62 = load %struct.device*, %struct.device** %new_parent.addr, align 8, !dbg !13616
  %63 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13617
  call void @device_pm_move_before(%struct.device* %62, %struct.device* %63) #10, !dbg !13618
  %64 = load %struct.device*, %struct.device** %new_parent.addr, align 8, !dbg !13619
  %65 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13620
  call void @devices_kset_move_before(%struct.device* %64, %struct.device* %65) #10, !dbg !13621
  br label %sw.epilog, !dbg !13622

sw.bb52:                                          ; preds = %if.end49
  %66 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13623
  call void @device_pm_move_last(%struct.device* %66) #10, !dbg !13624
  %67 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13625
  call void @devices_kset_move_last(%struct.device* %67) #10, !dbg !13626
  br label %sw.epilog, !dbg !13627

sw.epilog:                                        ; preds = %if.end49, %sw.bb52, %sw.bb51, %sw.bb50, %sw.bb
  %68 = load %struct.device*, %struct.device** %old_parent, align 8, !dbg !13628
  call void @put_device(%struct.device* %68) #10, !dbg !13629
  br label %out, !dbg !13629

out:                                              ; preds = %sw.epilog, %if.end47, %if.then9, %if.then4
  call void @llvm.dbg.label(metadata !13630), !dbg !13631
  call void @device_pm_unlock() #10, !dbg !13632
  %69 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13633
  call void @put_device(%struct.device* %69) #10, !dbg !13634
  %70 = load i32, i32* %error, align 4, !dbg !13635
  store i32 %70, i32* %retval, align 4, !dbg !13636
  br label %return, !dbg !13636

return:                                           ; preds = %out, %if.then
  %71 = load i32, i32* %retval, align 4, !dbg !13637
  ret i32 %71, !dbg !13637
}

; Function Attrs: noredzone
declare dso_local i32 @kobject_move(%struct.kobject*, %struct.kobject*) #2

; Function Attrs: noredzone
declare dso_local void @klist_remove(%struct.klist_node*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @device_move_class_links(%struct.device* %dev, %struct.device* %old_parent, %struct.device* %new_parent) #0 !dbg !13638 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %old_parent.addr = alloca %struct.device*, align 8
  %new_parent.addr = alloca %struct.device*, align 8
  %error = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13641, metadata !DIExpression()), !dbg !13642
  store %struct.device* %old_parent, %struct.device** %old_parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %old_parent.addr, metadata !13643, metadata !DIExpression()), !dbg !13644
  store %struct.device* %new_parent, %struct.device** %new_parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %new_parent.addr, metadata !13645, metadata !DIExpression()), !dbg !13646
  call void @llvm.dbg.declare(metadata i32* %error, metadata !13647, metadata !DIExpression()), !dbg !13648
  store i32 0, i32* %error, align 4, !dbg !13648
  %0 = load %struct.device*, %struct.device** %old_parent.addr, align 8, !dbg !13649
  %tobool = icmp ne %struct.device* %0, null, !dbg !13649
  br i1 %tobool, label %if.then, label %if.end, !dbg !13651

if.then:                                          ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13652
  %kobj = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 0, !dbg !13653
  call void @sysfs_remove_link(%struct.kobject* %kobj, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.65, i64 0, i64 0)) #10, !dbg !13654
  br label %if.end, !dbg !13654

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.device*, %struct.device** %new_parent.addr, align 8, !dbg !13655
  %tobool1 = icmp ne %struct.device* %2, null, !dbg !13655
  br i1 %tobool1, label %if.then2, label %if.end5, !dbg !13657

if.then2:                                         ; preds = %if.end
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13658
  %kobj3 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 0, !dbg !13659
  %4 = load %struct.device*, %struct.device** %new_parent.addr, align 8, !dbg !13660
  %kobj4 = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !13661
  %call = call i32 @sysfs_create_link(%struct.kobject* %kobj3, %struct.kobject* %kobj4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.65, i64 0, i64 0)) #10, !dbg !13662
  store i32 %call, i32* %error, align 4, !dbg !13663
  br label %if.end5, !dbg !13664

if.end5:                                          ; preds = %if.then2, %if.end
  %5 = load i32, i32* %error, align 4, !dbg !13665
  ret i32 %5, !dbg !13666
}

; Function Attrs: noredzone
declare dso_local void @device_pm_move_after(%struct.device*, %struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @devices_kset_move_after(%struct.device* %deva, %struct.device* %devb) #0 !dbg !13667 {
entry:
  %lock.addr.i5 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i5, metadata !11012, metadata !DIExpression()), !dbg !13670
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11019, metadata !DIExpression()), !dbg !13672
  %deva.addr = alloca %struct.device*, align 8
  %devb.addr = alloca %struct.device*, align 8
  %tmp = alloca i32, align 4
  store %struct.device* %deva, %struct.device** %deva.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %deva.addr, metadata !13674, metadata !DIExpression()), !dbg !13675
  store %struct.device* %devb, %struct.device** %devb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %devb.addr, metadata !13676, metadata !DIExpression()), !dbg !13677
  %0 = load %struct.kset*, %struct.kset** @devices_kset, align 8, !dbg !13678
  %tobool = icmp ne %struct.kset* %0, null, !dbg !13678
  br i1 %tobool, label %if.end, label %if.then, !dbg !13680

if.then:                                          ; preds = %entry
  br label %return, !dbg !13681

if.end:                                           ; preds = %entry
  store i32 0, i32* %tmp, align 4, !dbg !13682
  %1 = load i32, i32* %tmp, align 4, !dbg !13685
  %2 = load %struct.kset*, %struct.kset** @devices_kset, align 8, !dbg !13686
  %list_lock = getelementptr inbounds %struct.kset, %struct.kset* %2, i32 0, i32 1, !dbg !13687
  store %struct.spinlock* %list_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !13688, !srcloc !11037
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13689
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13689
  %rlock.i = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !13689
  %5 = load %struct.device*, %struct.device** %deva.addr, align 8, !dbg !13690
  %kobj = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 0, !dbg !13691
  %entry1 = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj, i32 0, i32 1, !dbg !13692
  %6 = load %struct.device*, %struct.device** %devb.addr, align 8, !dbg !13693
  %kobj2 = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 0, !dbg !13694
  %entry3 = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj2, i32 0, i32 1, !dbg !13695
  call void @list_move(%struct.list_head* %entry1, %struct.list_head* %entry3) #10, !dbg !13696
  %7 = load %struct.kset*, %struct.kset** @devices_kset, align 8, !dbg !13697
  %list_lock4 = getelementptr inbounds %struct.kset, %struct.kset* %7, i32 0, i32 1, !dbg !13698
  store %struct.spinlock* %list_lock4, %struct.spinlock** %lock.addr.i5, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !13699, !srcloc !11050
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i5, align 8, !dbg !13700
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !13700
  %rlock.i6 = bitcast %union.anon.1* %9 to %struct.raw_spinlock*, !dbg !13700
  br label %return, !dbg !13701

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13701
}

; Function Attrs: noredzone
declare dso_local void @device_pm_move_before(%struct.device*, %struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @devices_kset_move_before(%struct.device* %deva, %struct.device* %devb) #0 !dbg !13702 {
entry:
  %lock.addr.i5 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i5, metadata !11012, metadata !DIExpression()), !dbg !13703
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11019, metadata !DIExpression()), !dbg !13705
  %deva.addr = alloca %struct.device*, align 8
  %devb.addr = alloca %struct.device*, align 8
  %tmp = alloca i32, align 4
  store %struct.device* %deva, %struct.device** %deva.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %deva.addr, metadata !13707, metadata !DIExpression()), !dbg !13708
  store %struct.device* %devb, %struct.device** %devb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %devb.addr, metadata !13709, metadata !DIExpression()), !dbg !13710
  %0 = load %struct.kset*, %struct.kset** @devices_kset, align 8, !dbg !13711
  %tobool = icmp ne %struct.kset* %0, null, !dbg !13711
  br i1 %tobool, label %if.end, label %if.then, !dbg !13713

if.then:                                          ; preds = %entry
  br label %return, !dbg !13714

if.end:                                           ; preds = %entry
  store i32 0, i32* %tmp, align 4, !dbg !13715
  %1 = load i32, i32* %tmp, align 4, !dbg !13718
  %2 = load %struct.kset*, %struct.kset** @devices_kset, align 8, !dbg !13719
  %list_lock = getelementptr inbounds %struct.kset, %struct.kset* %2, i32 0, i32 1, !dbg !13720
  store %struct.spinlock* %list_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !13721, !srcloc !11037
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13722
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13722
  %rlock.i = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !13722
  %5 = load %struct.device*, %struct.device** %deva.addr, align 8, !dbg !13723
  %kobj = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 0, !dbg !13724
  %entry1 = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj, i32 0, i32 1, !dbg !13725
  %6 = load %struct.device*, %struct.device** %devb.addr, align 8, !dbg !13726
  %kobj2 = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 0, !dbg !13727
  %entry3 = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj2, i32 0, i32 1, !dbg !13728
  call void @list_move_tail(%struct.list_head* %entry1, %struct.list_head* %entry3) #10, !dbg !13729
  %7 = load %struct.kset*, %struct.kset** @devices_kset, align 8, !dbg !13730
  %list_lock4 = getelementptr inbounds %struct.kset, %struct.kset* %7, i32 0, i32 1, !dbg !13731
  store %struct.spinlock* %list_lock4, %struct.spinlock** %lock.addr.i5, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !13732, !srcloc !11050
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i5, align 8, !dbg !13733
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !13733
  %rlock.i6 = bitcast %union.anon.1* %9 to %struct.raw_spinlock*, !dbg !13733
  br label %return, !dbg !13734

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13734
}

; Function Attrs: noredzone
declare dso_local void @device_pm_move_last(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @device_change_owner(%struct.device* %dev, i32 %kuid.coerce, i32 %kgid.coerce) #0 !dbg !13735 {
entry:
  %retval = alloca i32, align 4
  %kuid = alloca %struct.kuid_t, align 4
  %kgid = alloca %struct.kgid_t, align 4
  %dev.addr = alloca %struct.device*, align 8
  %error = alloca i32, align 4
  %kobj = alloca %struct.kobject*, align 8
  %coerce.dive = getelementptr inbounds %struct.kuid_t, %struct.kuid_t* %kuid, i32 0, i32 0
  store i32 %kuid.coerce, i32* %coerce.dive, align 4
  %coerce.dive1 = getelementptr inbounds %struct.kgid_t, %struct.kgid_t* %kgid, i32 0, i32 0
  store i32 %kgid.coerce, i32* %coerce.dive1, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13738, metadata !DIExpression()), !dbg !13739
  call void @llvm.dbg.declare(metadata %struct.kuid_t* %kuid, metadata !13740, metadata !DIExpression()), !dbg !13741
  call void @llvm.dbg.declare(metadata %struct.kgid_t* %kgid, metadata !13742, metadata !DIExpression()), !dbg !13743
  call void @llvm.dbg.declare(metadata i32* %error, metadata !13744, metadata !DIExpression()), !dbg !13745
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj, metadata !13746, metadata !DIExpression()), !dbg !13747
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13748
  %kobj2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !13749
  store %struct.kobject* %kobj2, %struct.kobject** %kobj, align 8, !dbg !13747
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13750
  %call = call %struct.device* @get_device(%struct.device* %1) #10, !dbg !13751
  store %struct.device* %call, %struct.device** %dev.addr, align 8, !dbg !13752
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13753
  %tobool = icmp ne %struct.device* %2, null, !dbg !13753
  br i1 %tobool, label %if.end, label %if.then, !dbg !13755

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !13756
  br label %return, !dbg !13756

if.end:                                           ; preds = %entry
  %3 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !13757
  %coerce.dive3 = getelementptr inbounds %struct.kuid_t, %struct.kuid_t* %kuid, i32 0, i32 0, !dbg !13758
  %4 = load i32, i32* %coerce.dive3, align 4, !dbg !13758
  %coerce.dive4 = getelementptr inbounds %struct.kgid_t, %struct.kgid_t* %kgid, i32 0, i32 0, !dbg !13758
  %5 = load i32, i32* %coerce.dive4, align 4, !dbg !13758
  %call5 = call i32 @sysfs_change_owner(%struct.kobject* %3, i32 %4, i32 %5) #10, !dbg !13758
  store i32 %call5, i32* %error, align 4, !dbg !13759
  %6 = load i32, i32* %error, align 4, !dbg !13760
  %tobool6 = icmp ne i32 %6, 0, !dbg !13760
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !13762

if.then7:                                         ; preds = %if.end
  br label %out, !dbg !13763

if.end8:                                          ; preds = %if.end
  %7 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !13764
  %8 = load i8*, i8** getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_uevent, i32 0, i32 0, i32 0), align 8, !dbg !13765
  %coerce.dive9 = getelementptr inbounds %struct.kuid_t, %struct.kuid_t* %kuid, i32 0, i32 0, !dbg !13766
  %9 = load i32, i32* %coerce.dive9, align 4, !dbg !13766
  %coerce.dive10 = getelementptr inbounds %struct.kgid_t, %struct.kgid_t* %kgid, i32 0, i32 0, !dbg !13766
  %10 = load i32, i32* %coerce.dive10, align 4, !dbg !13766
  %call11 = call i32 @sysfs_file_change_owner(%struct.kobject* %7, i8* %8, i32 %9, i32 %10) #10, !dbg !13766
  store i32 %call11, i32* %error, align 4, !dbg !13767
  %11 = load i32, i32* %error, align 4, !dbg !13768
  %tobool12 = icmp ne i32 %11, 0, !dbg !13768
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !13770

if.then13:                                        ; preds = %if.end8
  br label %out, !dbg !13771

if.end14:                                         ; preds = %if.end8
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13772
  %coerce.dive15 = getelementptr inbounds %struct.kuid_t, %struct.kuid_t* %kuid, i32 0, i32 0, !dbg !13773
  %13 = load i32, i32* %coerce.dive15, align 4, !dbg !13773
  %coerce.dive16 = getelementptr inbounds %struct.kgid_t, %struct.kgid_t* %kgid, i32 0, i32 0, !dbg !13773
  %14 = load i32, i32* %coerce.dive16, align 4, !dbg !13773
  %call17 = call i32 @device_attrs_change_owner(%struct.device* %12, i32 %13, i32 %14) #10, !dbg !13773
  store i32 %call17, i32* %error, align 4, !dbg !13774
  %15 = load i32, i32* %error, align 4, !dbg !13775
  %tobool18 = icmp ne i32 %15, 0, !dbg !13775
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !13777

if.then19:                                        ; preds = %if.end14
  br label %out, !dbg !13778

if.end20:                                         ; preds = %if.end14
  %16 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13779
  %coerce.dive21 = getelementptr inbounds %struct.kuid_t, %struct.kuid_t* %kuid, i32 0, i32 0, !dbg !13780
  %17 = load i32, i32* %coerce.dive21, align 4, !dbg !13780
  %coerce.dive22 = getelementptr inbounds %struct.kgid_t, %struct.kgid_t* %kgid, i32 0, i32 0, !dbg !13780
  %18 = load i32, i32* %coerce.dive22, align 4, !dbg !13780
  %call23 = call i32 @dpm_sysfs_change_owner(%struct.device* %16, i32 %17, i32 %18) #10, !dbg !13780
  store i32 %call23, i32* %error, align 4, !dbg !13781
  %19 = load i32, i32* %error, align 4, !dbg !13782
  %tobool24 = icmp ne i32 %19, 0, !dbg !13782
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !13784

if.then25:                                        ; preds = %if.end20
  br label %out, !dbg !13785

if.end26:                                         ; preds = %if.end20
  %20 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13786
  %class = getelementptr inbounds %struct.device, %struct.device* %20, i32 0, i32 29, !dbg !13787
  %21 = load %struct.class*, %struct.class** %class, align 8, !dbg !13787
  %p = getelementptr inbounds %struct.class, %struct.class* %21, i32 0, i32 14, !dbg !13788
  %22 = load %struct.subsys_private*, %struct.subsys_private** %p, align 8, !dbg !13788
  %subsys = getelementptr inbounds %struct.subsys_private, %struct.subsys_private* %22, i32 0, i32 0, !dbg !13789
  %kobj27 = getelementptr inbounds %struct.kset, %struct.kset* %subsys, i32 0, i32 2, !dbg !13790
  %23 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13791
  %kobj28 = getelementptr inbounds %struct.device, %struct.device* %23, i32 0, i32 0, !dbg !13792
  %24 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13793
  %call29 = call i8* @dev_name(%struct.device* %24) #10, !dbg !13794
  %coerce.dive30 = getelementptr inbounds %struct.kuid_t, %struct.kuid_t* %kuid, i32 0, i32 0, !dbg !13795
  %25 = load i32, i32* %coerce.dive30, align 4, !dbg !13795
  %coerce.dive31 = getelementptr inbounds %struct.kgid_t, %struct.kgid_t* %kgid, i32 0, i32 0, !dbg !13795
  %26 = load i32, i32* %coerce.dive31, align 4, !dbg !13795
  %call32 = call i32 @sysfs_link_change_owner(%struct.kobject* %kobj27, %struct.kobject* %kobj28, i8* %call29, i32 %25, i32 %26) #10, !dbg !13795
  store i32 %call32, i32* %error, align 4, !dbg !13796
  %27 = load i32, i32* %error, align 4, !dbg !13797
  %tobool33 = icmp ne i32 %27, 0, !dbg !13797
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !13799

if.then34:                                        ; preds = %if.end26
  br label %out, !dbg !13800

if.end35:                                         ; preds = %if.end26
  br label %out, !dbg !13797

out:                                              ; preds = %if.end35, %if.then34, %if.then25, %if.then19, %if.then13, %if.then7
  call void @llvm.dbg.label(metadata !13801), !dbg !13802
  %28 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13803
  call void @put_device(%struct.device* %28) #10, !dbg !13804
  %29 = load i32, i32* %error, align 4, !dbg !13805
  store i32 %29, i32* %retval, align 4, !dbg !13806
  br label %return, !dbg !13806

return:                                           ; preds = %out, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !13807
  ret i32 %30, !dbg !13807
}

; Function Attrs: noredzone
declare dso_local i32 @sysfs_change_owner(%struct.kobject*, i32, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @sysfs_file_change_owner(%struct.kobject*, i8*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @device_attrs_change_owner(%struct.device* %dev, i32 %kuid.coerce, i32 %kgid.coerce) #0 !dbg !13808 {
entry:
  %retval = alloca i32, align 4
  %kuid = alloca %struct.kuid_t, align 4
  %kgid = alloca %struct.kgid_t, align 4
  %dev.addr = alloca %struct.device*, align 8
  %kobj = alloca %struct.kobject*, align 8
  %class = alloca %struct.class*, align 8
  %type = alloca %struct.device_type*, align 8
  %error = alloca i32, align 4
  %coerce.dive = getelementptr inbounds %struct.kuid_t, %struct.kuid_t* %kuid, i32 0, i32 0
  store i32 %kuid.coerce, i32* %coerce.dive, align 4
  %coerce.dive1 = getelementptr inbounds %struct.kgid_t, %struct.kgid_t* %kgid, i32 0, i32 0
  store i32 %kgid.coerce, i32* %coerce.dive1, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13809, metadata !DIExpression()), !dbg !13810
  call void @llvm.dbg.declare(metadata %struct.kuid_t* %kuid, metadata !13811, metadata !DIExpression()), !dbg !13812
  call void @llvm.dbg.declare(metadata %struct.kgid_t* %kgid, metadata !13813, metadata !DIExpression()), !dbg !13814
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj, metadata !13815, metadata !DIExpression()), !dbg !13816
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13817
  %kobj2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !13818
  store %struct.kobject* %kobj2, %struct.kobject** %kobj, align 8, !dbg !13816
  call void @llvm.dbg.declare(metadata %struct.class** %class, metadata !13819, metadata !DIExpression()), !dbg !13820
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13821
  %class3 = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 29, !dbg !13822
  %2 = load %struct.class*, %struct.class** %class3, align 8, !dbg !13822
  store %struct.class* %2, %struct.class** %class, align 8, !dbg !13820
  call void @llvm.dbg.declare(metadata %struct.device_type** %type, metadata !13823, metadata !DIExpression()), !dbg !13824
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13825
  %type4 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 4, !dbg !13826
  %4 = load %struct.device_type*, %struct.device_type** %type4, align 8, !dbg !13826
  store %struct.device_type* %4, %struct.device_type** %type, align 8, !dbg !13824
  call void @llvm.dbg.declare(metadata i32* %error, metadata !13827, metadata !DIExpression()), !dbg !13828
  %5 = load %struct.class*, %struct.class** %class, align 8, !dbg !13829
  %tobool = icmp ne %struct.class* %5, null, !dbg !13829
  br i1 %tobool, label %if.then, label %if.end9, !dbg !13831

if.then:                                          ; preds = %entry
  %6 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !13832
  %7 = load %struct.class*, %struct.class** %class, align 8, !dbg !13834
  %dev_groups = getelementptr inbounds %struct.class, %struct.class* %7, i32 0, i32 3, !dbg !13835
  %8 = load %struct.attribute_group**, %struct.attribute_group*** %dev_groups, align 8, !dbg !13835
  %coerce.dive5 = getelementptr inbounds %struct.kuid_t, %struct.kuid_t* %kuid, i32 0, i32 0, !dbg !13836
  %9 = load i32, i32* %coerce.dive5, align 4, !dbg !13836
  %coerce.dive6 = getelementptr inbounds %struct.kgid_t, %struct.kgid_t* %kgid, i32 0, i32 0, !dbg !13836
  %10 = load i32, i32* %coerce.dive6, align 4, !dbg !13836
  %call = call i32 @sysfs_groups_change_owner(%struct.kobject* %6, %struct.attribute_group** %8, i32 %9, i32 %10) #10, !dbg !13836
  store i32 %call, i32* %error, align 4, !dbg !13837
  %11 = load i32, i32* %error, align 4, !dbg !13838
  %tobool7 = icmp ne i32 %11, 0, !dbg !13838
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !13840

if.then8:                                         ; preds = %if.then
  %12 = load i32, i32* %error, align 4, !dbg !13841
  store i32 %12, i32* %retval, align 4, !dbg !13842
  br label %return, !dbg !13842

if.end:                                           ; preds = %if.then
  br label %if.end9, !dbg !13843

if.end9:                                          ; preds = %if.end, %entry
  %13 = load %struct.device_type*, %struct.device_type** %type, align 8, !dbg !13844
  %tobool10 = icmp ne %struct.device_type* %13, null, !dbg !13844
  br i1 %tobool10, label %if.then11, label %if.end18, !dbg !13846

if.then11:                                        ; preds = %if.end9
  %14 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !13847
  %15 = load %struct.device_type*, %struct.device_type** %type, align 8, !dbg !13849
  %groups = getelementptr inbounds %struct.device_type, %struct.device_type* %15, i32 0, i32 1, !dbg !13850
  %16 = load %struct.attribute_group**, %struct.attribute_group*** %groups, align 8, !dbg !13850
  %coerce.dive12 = getelementptr inbounds %struct.kuid_t, %struct.kuid_t* %kuid, i32 0, i32 0, !dbg !13851
  %17 = load i32, i32* %coerce.dive12, align 4, !dbg !13851
  %coerce.dive13 = getelementptr inbounds %struct.kgid_t, %struct.kgid_t* %kgid, i32 0, i32 0, !dbg !13851
  %18 = load i32, i32* %coerce.dive13, align 4, !dbg !13851
  %call14 = call i32 @sysfs_groups_change_owner(%struct.kobject* %14, %struct.attribute_group** %16, i32 %17, i32 %18) #10, !dbg !13851
  store i32 %call14, i32* %error, align 4, !dbg !13852
  %19 = load i32, i32* %error, align 4, !dbg !13853
  %tobool15 = icmp ne i32 %19, 0, !dbg !13853
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !13855

if.then16:                                        ; preds = %if.then11
  %20 = load i32, i32* %error, align 4, !dbg !13856
  store i32 %20, i32* %retval, align 4, !dbg !13857
  br label %return, !dbg !13857

if.end17:                                         ; preds = %if.then11
  br label %if.end18, !dbg !13858

if.end18:                                         ; preds = %if.end17, %if.end9
  %21 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !13859
  %22 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13860
  %groups19 = getelementptr inbounds %struct.device, %struct.device* %22, i32 0, i32 30, !dbg !13861
  %23 = load %struct.attribute_group**, %struct.attribute_group*** %groups19, align 8, !dbg !13861
  %coerce.dive20 = getelementptr inbounds %struct.kuid_t, %struct.kuid_t* %kuid, i32 0, i32 0, !dbg !13862
  %24 = load i32, i32* %coerce.dive20, align 4, !dbg !13862
  %coerce.dive21 = getelementptr inbounds %struct.kgid_t, %struct.kgid_t* %kgid, i32 0, i32 0, !dbg !13862
  %25 = load i32, i32* %coerce.dive21, align 4, !dbg !13862
  %call22 = call i32 @sysfs_groups_change_owner(%struct.kobject* %21, %struct.attribute_group** %23, i32 %24, i32 %25) #10, !dbg !13862
  store i32 %call22, i32* %error, align 4, !dbg !13863
  %26 = load i32, i32* %error, align 4, !dbg !13864
  %tobool23 = icmp ne i32 %26, 0, !dbg !13864
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !13866

if.then24:                                        ; preds = %if.end18
  %27 = load i32, i32* %error, align 4, !dbg !13867
  store i32 %27, i32* %retval, align 4, !dbg !13868
  br label %return, !dbg !13868

if.end25:                                         ; preds = %if.end18
  %28 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13869
  %call26 = call zeroext i1 @device_supports_offline(%struct.device* %28) #10, !dbg !13871
  br i1 %call26, label %land.lhs.true, label %if.end34, !dbg !13872

land.lhs.true:                                    ; preds = %if.end25
  %29 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13873
  %offline_disabled = getelementptr inbounds %struct.device, %struct.device* %29, i32 0, i32 34, !dbg !13874
  %bf.load = load i8, i8* %offline_disabled, align 8, !dbg !13874
  %bf.clear = and i8 %bf.load, 1, !dbg !13874
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !13874
  br i1 %bf.cast, label %if.end34, label %if.then27, !dbg !13875

if.then27:                                        ; preds = %land.lhs.true
  %30 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !13876
  %31 = load i8*, i8** getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_online, i32 0, i32 0, i32 0), align 8, !dbg !13878
  %coerce.dive28 = getelementptr inbounds %struct.kuid_t, %struct.kuid_t* %kuid, i32 0, i32 0, !dbg !13879
  %32 = load i32, i32* %coerce.dive28, align 4, !dbg !13879
  %coerce.dive29 = getelementptr inbounds %struct.kgid_t, %struct.kgid_t* %kgid, i32 0, i32 0, !dbg !13879
  %33 = load i32, i32* %coerce.dive29, align 4, !dbg !13879
  %call30 = call i32 @sysfs_file_change_owner(%struct.kobject* %30, i8* %31, i32 %32, i32 %33) #10, !dbg !13879
  store i32 %call30, i32* %error, align 4, !dbg !13880
  %34 = load i32, i32* %error, align 4, !dbg !13881
  %tobool31 = icmp ne i32 %34, 0, !dbg !13881
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !13883

if.then32:                                        ; preds = %if.then27
  %35 = load i32, i32* %error, align 4, !dbg !13884
  store i32 %35, i32* %retval, align 4, !dbg !13885
  br label %return, !dbg !13885

if.end33:                                         ; preds = %if.then27
  br label %if.end34, !dbg !13886

if.end34:                                         ; preds = %if.end33, %land.lhs.true, %if.end25
  store i32 0, i32* %retval, align 4, !dbg !13887
  br label %return, !dbg !13887

return:                                           ; preds = %if.end34, %if.then32, %if.then24, %if.then16, %if.then8
  %36 = load i32, i32* %retval, align 4, !dbg !13888
  ret i32 %36, !dbg !13888
}

; Function Attrs: noredzone
declare dso_local i32 @dpm_sysfs_change_owner(%struct.device*, i32, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @sysfs_link_change_owner(%struct.kobject*, %struct.kobject*, i8*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @device_shutdown() #0 !dbg !13889 {
entry:
  %lock.addr.i52 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i52, metadata !11012, metadata !DIExpression()), !dbg !13890
  %lock.addr.i50 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i50, metadata !11019, metadata !DIExpression()), !dbg !13892
  %lock.addr.i48 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i48, metadata !11012, metadata !DIExpression()), !dbg !13895
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11019, metadata !DIExpression()), !dbg !13897
  %dev = alloca %struct.device*, align 8
  %parent = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device*, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !13899, metadata !DIExpression()), !dbg !13900
  call void @llvm.dbg.declare(metadata %struct.device** %parent, metadata !13901, metadata !DIExpression()), !dbg !13902
  call void @wait_for_device_probe() #10, !dbg !13903
  call void @device_block_probing() #10, !dbg !13904
  call void @cpufreq_suspend() #10, !dbg !13905
  %0 = load %struct.kset*, %struct.kset** @devices_kset, align 8, !dbg !13906
  %list_lock = getelementptr inbounds %struct.kset, %struct.kset* %0, i32 0, i32 1, !dbg !13907
  store %struct.spinlock* %list_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !13908, !srcloc !11037
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13909
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !13909
  %rlock.i = bitcast %union.anon.1* %2 to %struct.raw_spinlock*, !dbg !13909
  br label %while.cond, !dbg !13910

while.cond:                                       ; preds = %if.end45, %entry
  %3 = load %struct.kset*, %struct.kset** @devices_kset, align 8, !dbg !13911
  %list = getelementptr inbounds %struct.kset, %struct.kset* %3, i32 0, i32 0, !dbg !13912
  %call = call i32 @list_empty(%struct.list_head* %list) #10, !dbg !13913
  %tobool = icmp ne i32 %call, 0, !dbg !13914
  %lnot = xor i1 %tobool, true, !dbg !13914
  br i1 %lnot, label %while.body, label %while.end, !dbg !13910

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13915, metadata !DIExpression()), !dbg !13917
  %4 = load %struct.kset*, %struct.kset** @devices_kset, align 8, !dbg !13917
  %list1 = getelementptr inbounds %struct.kset, %struct.kset* %4, i32 0, i32 0, !dbg !13917
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %list1, i32 0, i32 1, !dbg !13917
  %5 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !13917
  %6 = bitcast %struct.list_head* %5 to i8*, !dbg !13917
  store i8* %6, i8** %__mptr, align 8, !dbg !13917
  br label %do.body, !dbg !13917

do.body:                                          ; preds = %while.body
  br label %do.end, !dbg !13918

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !13917
  %add.ptr = getelementptr i8, i8* %7, i64 -8, !dbg !13917
  %8 = bitcast i8* %add.ptr to %struct.device*, !dbg !13917
  store %struct.device* %8, %struct.device** %tmp, align 8, !dbg !13918
  %9 = load %struct.device*, %struct.device** %tmp, align 8, !dbg !13917
  store %struct.device* %9, %struct.device** %dev, align 8, !dbg !13920
  %10 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13921
  %parent2 = getelementptr inbounds %struct.device, %struct.device* %10, i32 0, i32 1, !dbg !13922
  %11 = load %struct.device*, %struct.device** %parent2, align 8, !dbg !13922
  %call3 = call %struct.device* @get_device(%struct.device* %11) #10, !dbg !13923
  store %struct.device* %call3, %struct.device** %parent, align 8, !dbg !13924
  %12 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13925
  %call4 = call %struct.device* @get_device(%struct.device* %12) #10, !dbg !13926
  %13 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13927
  %kobj = getelementptr inbounds %struct.device, %struct.device* %13, i32 0, i32 0, !dbg !13928
  %entry5 = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj, i32 0, i32 1, !dbg !13929
  call void @list_del_init(%struct.list_head* %entry5) #10, !dbg !13930
  %14 = load %struct.kset*, %struct.kset** @devices_kset, align 8, !dbg !13931
  %list_lock6 = getelementptr inbounds %struct.kset, %struct.kset* %14, i32 0, i32 1, !dbg !13932
  store %struct.spinlock* %list_lock6, %struct.spinlock** %lock.addr.i48, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !13933, !srcloc !11050
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i48, align 8, !dbg !13934
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !13934
  %rlock.i49 = bitcast %union.anon.1* %16 to %struct.raw_spinlock*, !dbg !13934
  %17 = load %struct.device*, %struct.device** %parent, align 8, !dbg !13935
  %tobool7 = icmp ne %struct.device* %17, null, !dbg !13935
  br i1 %tobool7, label %if.then, label %if.end, !dbg !13937

if.then:                                          ; preds = %do.end
  %18 = load %struct.device*, %struct.device** %parent, align 8, !dbg !13938
  call void @device_lock(%struct.device* %18) #10, !dbg !13939
  br label %if.end, !dbg !13939

if.end:                                           ; preds = %if.then, %do.end
  %19 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13940
  call void @device_lock(%struct.device* %19) #10, !dbg !13941
  %20 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13942
  call void @pm_runtime_get_noresume(%struct.device* %20) #10, !dbg !13943
  %21 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13944
  %call8 = call i32 @pm_runtime_barrier(%struct.device* %21) #10, !dbg !13945
  %22 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13946
  %class = getelementptr inbounds %struct.device, %struct.device* %22, i32 0, i32 29, !dbg !13948
  %23 = load %struct.class*, %struct.class** %class, align 8, !dbg !13948
  %tobool9 = icmp ne %struct.class* %23, null, !dbg !13946
  br i1 %tobool9, label %land.lhs.true, label %if.end19, !dbg !13949

land.lhs.true:                                    ; preds = %if.end
  %24 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13950
  %class10 = getelementptr inbounds %struct.device, %struct.device* %24, i32 0, i32 29, !dbg !13951
  %25 = load %struct.class*, %struct.class** %class10, align 8, !dbg !13951
  %shutdown_pre = getelementptr inbounds %struct.class, %struct.class* %25, i32 0, i32 9, !dbg !13952
  %26 = load i32 (%struct.device*)*, i32 (%struct.device*)** %shutdown_pre, align 8, !dbg !13952
  %tobool11 = icmp ne i32 (%struct.device*)* %26, null, !dbg !13950
  br i1 %tobool11, label %if.then12, label %if.end19, !dbg !13953

if.then12:                                        ; preds = %land.lhs.true
  %27 = load i8, i8* @initcall_debug, align 1, !dbg !13954
  %tobool13 = trunc i8 %27 to i1, !dbg !13954
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !13957

if.then14:                                        ; preds = %if.then12
  %28 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13958
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %28, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0)) #14, !dbg !13958
  br label %if.end15, !dbg !13958

if.end15:                                         ; preds = %if.then14, %if.then12
  %29 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13959
  %class16 = getelementptr inbounds %struct.device, %struct.device* %29, i32 0, i32 29, !dbg !13960
  %30 = load %struct.class*, %struct.class** %class16, align 8, !dbg !13960
  %shutdown_pre17 = getelementptr inbounds %struct.class, %struct.class* %30, i32 0, i32 9, !dbg !13961
  %31 = load i32 (%struct.device*)*, i32 (%struct.device*)** %shutdown_pre17, align 8, !dbg !13961
  %32 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13962
  %call18 = call i32 %31(%struct.device* %32) #10, !dbg !13959
  br label %if.end19, !dbg !13963

if.end19:                                         ; preds = %if.end15, %land.lhs.true, %if.end
  %33 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13964
  %bus = getelementptr inbounds %struct.device, %struct.device* %33, i32 0, i32 5, !dbg !13966
  %34 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !13966
  %tobool20 = icmp ne %struct.bus_type* %34, null, !dbg !13964
  br i1 %tobool20, label %land.lhs.true21, label %if.else, !dbg !13967

land.lhs.true21:                                  ; preds = %if.end19
  %35 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13968
  %bus22 = getelementptr inbounds %struct.device, %struct.device* %35, i32 0, i32 5, !dbg !13969
  %36 = load %struct.bus_type*, %struct.bus_type** %bus22, align 8, !dbg !13969
  %shutdown = getelementptr inbounds %struct.bus_type, %struct.bus_type* %36, i32 0, i32 11, !dbg !13970
  %37 = load void (%struct.device*)*, void (%struct.device*)** %shutdown, align 8, !dbg !13970
  %tobool23 = icmp ne void (%struct.device*)* %37, null, !dbg !13968
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !13971

if.then24:                                        ; preds = %land.lhs.true21
  %38 = load i8, i8* @initcall_debug, align 1, !dbg !13972
  %tobool25 = trunc i8 %38 to i1, !dbg !13972
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !13975

if.then26:                                        ; preds = %if.then24
  %39 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13976
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %39, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0)) #14, !dbg !13976
  br label %if.end27, !dbg !13976

if.end27:                                         ; preds = %if.then26, %if.then24
  %40 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13977
  %bus28 = getelementptr inbounds %struct.device, %struct.device* %40, i32 0, i32 5, !dbg !13978
  %41 = load %struct.bus_type*, %struct.bus_type** %bus28, align 8, !dbg !13978
  %shutdown29 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %41, i32 0, i32 11, !dbg !13979
  %42 = load void (%struct.device*)*, void (%struct.device*)** %shutdown29, align 8, !dbg !13979
  %43 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13980
  call void %42(%struct.device* %43) #10, !dbg !13977
  br label %if.end42, !dbg !13981

if.else:                                          ; preds = %land.lhs.true21, %if.end19
  %44 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13982
  %driver = getelementptr inbounds %struct.device, %struct.device* %44, i32 0, i32 6, !dbg !13984
  %45 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !13984
  %tobool30 = icmp ne %struct.device_driver* %45, null, !dbg !13982
  br i1 %tobool30, label %land.lhs.true31, label %if.end41, !dbg !13985

land.lhs.true31:                                  ; preds = %if.else
  %46 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13986
  %driver32 = getelementptr inbounds %struct.device, %struct.device* %46, i32 0, i32 6, !dbg !13987
  %47 = load %struct.device_driver*, %struct.device_driver** %driver32, align 8, !dbg !13987
  %shutdown33 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %47, i32 0, i32 11, !dbg !13988
  %48 = load void (%struct.device*)*, void (%struct.device*)** %shutdown33, align 8, !dbg !13988
  %tobool34 = icmp ne void (%struct.device*)* %48, null, !dbg !13986
  br i1 %tobool34, label %if.then35, label %if.end41, !dbg !13989

if.then35:                                        ; preds = %land.lhs.true31
  %49 = load i8, i8* @initcall_debug, align 1, !dbg !13990
  %tobool36 = trunc i8 %49 to i1, !dbg !13990
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !13993

if.then37:                                        ; preds = %if.then35
  %50 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13994
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %50, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0)) #14, !dbg !13994
  br label %if.end38, !dbg !13994

if.end38:                                         ; preds = %if.then37, %if.then35
  %51 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13995
  %driver39 = getelementptr inbounds %struct.device, %struct.device* %51, i32 0, i32 6, !dbg !13996
  %52 = load %struct.device_driver*, %struct.device_driver** %driver39, align 8, !dbg !13996
  %shutdown40 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %52, i32 0, i32 11, !dbg !13997
  %53 = load void (%struct.device*)*, void (%struct.device*)** %shutdown40, align 8, !dbg !13997
  %54 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13998
  call void %53(%struct.device* %54) #10, !dbg !13995
  br label %if.end41, !dbg !13999

if.end41:                                         ; preds = %if.end38, %land.lhs.true31, %if.else
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end27
  %55 = load %struct.device*, %struct.device** %dev, align 8, !dbg !14000
  call void @device_unlock(%struct.device* %55) #10, !dbg !14001
  %56 = load %struct.device*, %struct.device** %parent, align 8, !dbg !14002
  %tobool43 = icmp ne %struct.device* %56, null, !dbg !14002
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !14004

if.then44:                                        ; preds = %if.end42
  %57 = load %struct.device*, %struct.device** %parent, align 8, !dbg !14005
  call void @device_unlock(%struct.device* %57) #10, !dbg !14006
  br label %if.end45, !dbg !14006

if.end45:                                         ; preds = %if.then44, %if.end42
  %58 = load %struct.device*, %struct.device** %dev, align 8, !dbg !14007
  call void @put_device(%struct.device* %58) #10, !dbg !14008
  %59 = load %struct.device*, %struct.device** %parent, align 8, !dbg !14009
  call void @put_device(%struct.device* %59) #10, !dbg !14010
  %60 = load %struct.kset*, %struct.kset** @devices_kset, align 8, !dbg !14011
  %list_lock46 = getelementptr inbounds %struct.kset, %struct.kset* %60, i32 0, i32 1, !dbg !14012
  store %struct.spinlock* %list_lock46, %struct.spinlock** %lock.addr.i50, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !14013, !srcloc !11037
  %61 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i50, align 8, !dbg !14014
  %62 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %61, i32 0, i32 0, !dbg !14014
  %rlock.i51 = bitcast %union.anon.1* %62 to %struct.raw_spinlock*, !dbg !14014
  br label %while.cond, !dbg !13910, !llvm.loop !14015

while.end:                                        ; preds = %while.cond
  %63 = load %struct.kset*, %struct.kset** @devices_kset, align 8, !dbg !14017
  %list_lock47 = getelementptr inbounds %struct.kset, %struct.kset* %63, i32 0, i32 1, !dbg !14018
  store %struct.spinlock* %list_lock47, %struct.spinlock** %lock.addr.i52, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !14019, !srcloc !11050
  %64 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i52, align 8, !dbg !14020
  %65 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %64, i32 0, i32 0, !dbg !14020
  %rlock.i53 = bitcast %union.anon.1* %65 to %struct.raw_spinlock*, !dbg !14020
  ret void, !dbg !14021
}

; Function Attrs: noredzone
declare dso_local void @device_block_probing() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cpufreq_suspend() #0 !dbg !14022 {
entry:
  ret void, !dbg !14024
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_get_noresume(%struct.device* %dev) #0 !dbg !14025 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !14026, metadata !DIExpression()), !dbg !14030
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !8608, metadata !DIExpression()), !dbg !14034
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8618, metadata !DIExpression()), !dbg !14036
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !14037, metadata !DIExpression()), !dbg !14038
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14039, metadata !DIExpression()), !dbg !14040
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14041
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !14042
  %usage_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 13, !dbg !14043
  store %struct.atomic_t* %usage_count, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !14044
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !14044
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !14045
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !14046
  %conv.i.i = trunc i64 %4 to i32, !dbg !14046
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #11, !dbg !14047
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !14048
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !14048
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #11, !dbg !14048
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !14049
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !14050
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !14051
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #5, !dbg !14052, !srcloc !14053
  ret void, !dbg !14054
}

; Function Attrs: noredzone
declare dso_local i32 @pm_runtime_barrier(%struct.device*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local void @_dev_info(%struct.device* %dev, i8* %fmt, ...) #3 !dbg !14055 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %fmt.addr = alloca i8*, align 8
  %vaf = alloca %struct.va_format, align 8
  %args = alloca [1 x %struct.__va_list_tag], align 16
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14058, metadata !DIExpression()), !dbg !14059
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !14060, metadata !DIExpression()), !dbg !14059
  call void @llvm.dbg.declare(metadata %struct.va_format* %vaf, metadata !14061, metadata !DIExpression()), !dbg !14059
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !14068, metadata !DIExpression()), !dbg !14059
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !14059
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !14059
  call void @llvm.va_start(i8* %arraydecay1), !dbg !14059
  %0 = load i8*, i8** %fmt.addr, align 8, !dbg !14059
  %fmt2 = getelementptr inbounds %struct.va_format, %struct.va_format* %vaf, i32 0, i32 0, !dbg !14059
  store i8* %0, i8** %fmt2, align 8, !dbg !14059
  %va = getelementptr inbounds %struct.va_format, %struct.va_format* %vaf, i32 0, i32 1, !dbg !14059
  store [1 x %struct.__va_list_tag]* %args, [1 x %struct.__va_list_tag]** %va, align 8, !dbg !14059
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14059
  call void @__dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0), %struct.device* %1, %struct.va_format* %vaf) #10, !dbg !14059
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !14059
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !14059
  call void @llvm.va_end(i8* %arraydecay34), !dbg !14059
  ret void, !dbg !14059
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dev_vprintk_emit(i32 %level, %struct.device* %dev, i8* %fmt, %struct.__va_list_tag* %args) #3 !dbg !14069 {
entry:
  %level.addr = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %fmt.addr = alloca i8*, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  %dev_info = alloca %struct.dev_printk_info, align 1
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !14072, metadata !DIExpression()), !dbg !14073
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14074, metadata !DIExpression()), !dbg !14075
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !14076, metadata !DIExpression()), !dbg !14077
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !14078, metadata !DIExpression()), !dbg !14079
  call void @llvm.dbg.declare(metadata %struct.dev_printk_info* %dev_info, metadata !14080, metadata !DIExpression()), !dbg !14086
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14087
  call void @set_dev_info(%struct.device* %0, %struct.dev_printk_info* %dev_info) #10, !dbg !14088
  %1 = load i32, i32* %level.addr, align 4, !dbg !14089
  %2 = load i8*, i8** %fmt.addr, align 8, !dbg !14090
  %3 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !14091
  %call = call i32 @vprintk_emit(i32 0, i32 %1, %struct.dev_printk_info* %dev_info, i8* %2, %struct.__va_list_tag* %3) #10, !dbg !14092
  ret i32 %call, !dbg !14093
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_dev_info(%struct.device* %dev, %struct.dev_printk_info* %dev_info) #0 !dbg !14094 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %dev_info.addr = alloca %struct.dev_printk_info*, align 8
  %subsys = alloca i8*, align 8
  %c = alloca i8, align 1
  %net = alloca %struct.net_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.net_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14098, metadata !DIExpression()), !dbg !14099
  store %struct.dev_printk_info* %dev_info, %struct.dev_printk_info** %dev_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_printk_info** %dev_info.addr, metadata !14100, metadata !DIExpression()), !dbg !14101
  call void @llvm.dbg.declare(metadata i8** %subsys, metadata !14102, metadata !DIExpression()), !dbg !14103
  %0 = load %struct.dev_printk_info*, %struct.dev_printk_info** %dev_info.addr, align 8, !dbg !14104
  %1 = bitcast %struct.dev_printk_info* %0 to i8*, !dbg !14105
  call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 0, i64 64, i1 false), !dbg !14105
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14106
  %class = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 29, !dbg !14108
  %3 = load %struct.class*, %struct.class** %class, align 8, !dbg !14108
  %tobool = icmp ne %struct.class* %3, null, !dbg !14106
  br i1 %tobool, label %if.then, label %if.else, !dbg !14109

if.then:                                          ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14110
  %class1 = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 29, !dbg !14111
  %5 = load %struct.class*, %struct.class** %class1, align 8, !dbg !14111
  %name = getelementptr inbounds %struct.class, %struct.class* %5, i32 0, i32 0, !dbg !14112
  %6 = load i8*, i8** %name, align 8, !dbg !14112
  store i8* %6, i8** %subsys, align 8, !dbg !14113
  br label %if.end7, !dbg !14114

if.else:                                          ; preds = %entry
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14115
  %bus = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 5, !dbg !14117
  %8 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !14117
  %tobool2 = icmp ne %struct.bus_type* %8, null, !dbg !14115
  br i1 %tobool2, label %if.then3, label %if.else6, !dbg !14118

if.then3:                                         ; preds = %if.else
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14119
  %bus4 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 5, !dbg !14120
  %10 = load %struct.bus_type*, %struct.bus_type** %bus4, align 8, !dbg !14120
  %name5 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %10, i32 0, i32 0, !dbg !14121
  %11 = load i8*, i8** %name5, align 8, !dbg !14121
  store i8* %11, i8** %subsys, align 8, !dbg !14122
  br label %if.end, !dbg !14123

if.else6:                                         ; preds = %if.else
  br label %if.end33, !dbg !14124

if.end:                                           ; preds = %if.then3
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  %12 = load %struct.dev_printk_info*, %struct.dev_printk_info** %dev_info.addr, align 8, !dbg !14125
  %subsystem = getelementptr inbounds %struct.dev_printk_info, %struct.dev_printk_info* %12, i32 0, i32 0, !dbg !14126
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %subsystem, i64 0, i64 0, !dbg !14125
  %13 = load i8*, i8** %subsys, align 8, !dbg !14127
  %call = call i64 @strscpy(i8* %arraydecay, i8* %13, i64 16) #10, !dbg !14128
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14129
  %devt = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 25, !dbg !14129
  %15 = load i32, i32* %devt, align 8, !dbg !14129
  %shr = lshr i32 %15, 20, !dbg !14129
  %tobool8 = icmp ne i32 %shr, 0, !dbg !14129
  br i1 %tobool8, label %if.then9, label %if.else19, !dbg !14131

if.then9:                                         ; preds = %if.end7
  call void @llvm.dbg.declare(metadata i8* %c, metadata !14132, metadata !DIExpression()), !dbg !14134
  %16 = load i8*, i8** %subsys, align 8, !dbg !14135
  %call10 = call i32 @strcmp(i8* %16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0)) #10, !dbg !14137
  %cmp = icmp eq i32 %call10, 0, !dbg !14138
  br i1 %cmp, label %if.then11, label %if.else12, !dbg !14139

if.then11:                                        ; preds = %if.then9
  store i8 98, i8* %c, align 1, !dbg !14140
  br label %if.end13, !dbg !14141

if.else12:                                        ; preds = %if.then9
  store i8 99, i8* %c, align 1, !dbg !14142
  br label %if.end13

if.end13:                                         ; preds = %if.else12, %if.then11
  %17 = load %struct.dev_printk_info*, %struct.dev_printk_info** %dev_info.addr, align 8, !dbg !14143
  %device = getelementptr inbounds %struct.dev_printk_info, %struct.dev_printk_info* %17, i32 0, i32 1, !dbg !14144
  %arraydecay14 = getelementptr inbounds [48 x i8], [48 x i8]* %device, i64 0, i64 0, !dbg !14143
  %18 = load i8, i8* %c, align 1, !dbg !14145
  %conv = sext i8 %18 to i32, !dbg !14145
  %19 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14146
  %devt15 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 25, !dbg !14146
  %20 = load i32, i32* %devt15, align 8, !dbg !14146
  %shr16 = lshr i32 %20, 20, !dbg !14146
  %21 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14147
  %devt17 = getelementptr inbounds %struct.device, %struct.device* %21, i32 0, i32 25, !dbg !14147
  %22 = load i32, i32* %devt17, align 8, !dbg !14147
  %and = and i32 %22, 1048575, !dbg !14147
  %call18 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay14, i64 48, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.78, i64 0, i64 0), i32 %conv, i32 %shr16, i32 %and) #10, !dbg !14148
  br label %if.end33, !dbg !14149

if.else19:                                        ; preds = %if.end7
  %23 = load i8*, i8** %subsys, align 8, !dbg !14150
  %call20 = call i32 @strcmp(i8* %23, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.79, i64 0, i64 0)) #10, !dbg !14152
  %cmp21 = icmp eq i32 %call20, 0, !dbg !14153
  br i1 %cmp21, label %if.then23, label %if.else27, !dbg !14154

if.then23:                                        ; preds = %if.else19
  call void @llvm.dbg.declare(metadata %struct.net_device** %net, metadata !14155, metadata !DIExpression()), !dbg !14157
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14158, metadata !DIExpression()), !dbg !14160
  %24 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14160
  %25 = bitcast %struct.device* %24 to i8*, !dbg !14160
  store i8* %25, i8** %__mptr, align 8, !dbg !14160
  br label %do.body, !dbg !14160

do.body:                                          ; preds = %if.then23
  br label %do.end, !dbg !14161

do.end:                                           ; preds = %do.body
  %26 = load i8*, i8** %__mptr, align 8, !dbg !14160
  %add.ptr = getelementptr i8, i8* %26, i64 -1024, !dbg !14160
  %27 = bitcast i8* %add.ptr to %struct.net_device*, !dbg !14160
  store %struct.net_device* %27, %struct.net_device** %tmp, align 8, !dbg !14161
  %28 = load %struct.net_device*, %struct.net_device** %tmp, align 8, !dbg !14160
  store %struct.net_device* %28, %struct.net_device** %net, align 8, !dbg !14157
  %29 = load %struct.dev_printk_info*, %struct.dev_printk_info** %dev_info.addr, align 8, !dbg !14163
  %device24 = getelementptr inbounds %struct.dev_printk_info, %struct.dev_printk_info* %29, i32 0, i32 1, !dbg !14164
  %arraydecay25 = getelementptr inbounds [48 x i8], [48 x i8]* %device24, i64 0, i64 0, !dbg !14163
  %30 = load %struct.net_device*, %struct.net_device** %net, align 8, !dbg !14165
  %ifindex = getelementptr inbounds %struct.net_device, %struct.net_device* %30, i32 0, i32 22, !dbg !14166
  %31 = load i32, i32* %ifindex, align 8, !dbg !14166
  %call26 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay25, i64 48, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.80, i64 0, i64 0), i32 %31) #10, !dbg !14167
  br label %if.end32, !dbg !14168

if.else27:                                        ; preds = %if.else19
  %32 = load %struct.dev_printk_info*, %struct.dev_printk_info** %dev_info.addr, align 8, !dbg !14169
  %device28 = getelementptr inbounds %struct.dev_printk_info, %struct.dev_printk_info* %32, i32 0, i32 1, !dbg !14171
  %arraydecay29 = getelementptr inbounds [48 x i8], [48 x i8]* %device28, i64 0, i64 0, !dbg !14169
  %33 = load i8*, i8** %subsys, align 8, !dbg !14172
  %34 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14173
  %call30 = call i8* @dev_name(%struct.device* %34) #10, !dbg !14174
  %call31 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay29, i64 48, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.81, i64 0, i64 0), i8* %33, i8* %call30) #10, !dbg !14175
  br label %if.end32

if.end32:                                         ; preds = %if.else27, %do.end
  br label %if.end33

if.end33:                                         ; preds = %if.else6, %if.end32, %if.end13
  ret void, !dbg !14176
}

; Function Attrs: noredzone
declare dso_local i32 @vprintk_emit(i32, i32, %struct.dev_printk_info*, i8*, %struct.__va_list_tag*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dev_printk_emit(i32 %level, %struct.device* %dev, i8* %fmt, ...) #3 !dbg !14177 {
entry:
  %level.addr = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %fmt.addr = alloca i8*, align 8
  %args = alloca [1 x %struct.__va_list_tag], align 16
  %r = alloca i32, align 4
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !14180, metadata !DIExpression()), !dbg !14181
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14182, metadata !DIExpression()), !dbg !14183
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !14184, metadata !DIExpression()), !dbg !14185
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !14186, metadata !DIExpression()), !dbg !14187
  call void @llvm.dbg.declare(metadata i32* %r, metadata !14188, metadata !DIExpression()), !dbg !14189
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !14190
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !14190
  call void @llvm.va_start(i8* %arraydecay1), !dbg !14190
  %0 = load i32, i32* %level.addr, align 4, !dbg !14191
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14192
  %2 = load i8*, i8** %fmt.addr, align 8, !dbg !14193
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !14194
  %call = call i32 @dev_vprintk_emit(i32 %0, %struct.device* %1, i8* %2, %struct.__va_list_tag* %arraydecay2) #14, !dbg !14195
  store i32 %call, i32* %r, align 4, !dbg !14196
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !14197
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !14197
  call void @llvm.va_end(i8* %arraydecay34), !dbg !14197
  %3 = load i32, i32* %r, align 4, !dbg !14198
  ret i32 %3, !dbg !14199
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local void @dev_printk(i8* %level, %struct.device* %dev, i8* %fmt, ...) #3 !dbg !14200 {
entry:
  %level.addr = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %fmt.addr = alloca i8*, align 8
  %vaf = alloca %struct.va_format, align 8
  %args = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %level, i8** %level.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %level.addr, metadata !14203, metadata !DIExpression()), !dbg !14204
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14205, metadata !DIExpression()), !dbg !14206
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !14207, metadata !DIExpression()), !dbg !14208
  call void @llvm.dbg.declare(metadata %struct.va_format* %vaf, metadata !14209, metadata !DIExpression()), !dbg !14210
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !14211, metadata !DIExpression()), !dbg !14212
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !14213
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !14213
  call void @llvm.va_start(i8* %arraydecay1), !dbg !14213
  %0 = load i8*, i8** %fmt.addr, align 8, !dbg !14214
  %fmt2 = getelementptr inbounds %struct.va_format, %struct.va_format* %vaf, i32 0, i32 0, !dbg !14215
  store i8* %0, i8** %fmt2, align 8, !dbg !14216
  %va = getelementptr inbounds %struct.va_format, %struct.va_format* %vaf, i32 0, i32 1, !dbg !14217
  store [1 x %struct.__va_list_tag]* %args, [1 x %struct.__va_list_tag]** %va, align 8, !dbg !14218
  %1 = load i8*, i8** %level.addr, align 8, !dbg !14219
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14220
  call void @__dev_printk(i8* %1, %struct.device* %2, %struct.va_format* %vaf) #10, !dbg !14221
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !14222
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !14222
  call void @llvm.va_end(i8* %arraydecay34), !dbg !14222
  ret void, !dbg !14223
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__dev_printk(i8* %level, %struct.device* %dev, %struct.va_format* %vaf) #0 !dbg !14224 {
entry:
  %level.addr = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %vaf.addr = alloca %struct.va_format*, align 8
  store i8* %level, i8** %level.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %level.addr, metadata !14228, metadata !DIExpression()), !dbg !14229
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14230, metadata !DIExpression()), !dbg !14231
  store %struct.va_format* %vaf, %struct.va_format** %vaf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.va_format** %vaf.addr, metadata !14232, metadata !DIExpression()), !dbg !14233
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14234
  %tobool = icmp ne %struct.device* %0, null, !dbg !14234
  br i1 %tobool, label %if.then, label %if.else, !dbg !14236

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %level.addr, align 8, !dbg !14237
  %arrayidx = getelementptr i8, i8* %1, i64 1, !dbg !14237
  %2 = load i8, i8* %arrayidx, align 1, !dbg !14237
  %conv = sext i8 %2 to i32, !dbg !14237
  %sub = sub i32 %conv, 48, !dbg !14238
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14239
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14240
  %call = call i8* @dev_driver_string(%struct.device* %4) #10, !dbg !14241
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14242
  %call1 = call i8* @dev_name(%struct.device* %5) #10, !dbg !14243
  %6 = load %struct.va_format*, %struct.va_format** %vaf.addr, align 8, !dbg !14244
  %call2 = call i32 (i32, %struct.device*, i8*, ...) @dev_printk_emit(i32 %sub, %struct.device* %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.82, i64 0, i64 0), i8* %call, i8* %call1, %struct.va_format* %6) #14, !dbg !14245
  br label %if.end, !dbg !14245

if.else:                                          ; preds = %entry
  %7 = load i8*, i8** %level.addr, align 8, !dbg !14246
  %8 = load %struct.va_format*, %struct.va_format** %vaf.addr, align 8, !dbg !14247
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.83, i64 0, i64 0), i8* %7, %struct.va_format* %8) #14, !dbg !14248
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !14249
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local void @_dev_emerg(%struct.device* %dev, i8* %fmt, ...) #3 !dbg !14250 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %fmt.addr = alloca i8*, align 8
  %vaf = alloca %struct.va_format, align 8
  %args = alloca [1 x %struct.__va_list_tag], align 16
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14251, metadata !DIExpression()), !dbg !14252
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !14253, metadata !DIExpression()), !dbg !14252
  call void @llvm.dbg.declare(metadata %struct.va_format* %vaf, metadata !14254, metadata !DIExpression()), !dbg !14252
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !14255, metadata !DIExpression()), !dbg !14252
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !14252
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !14252
  call void @llvm.va_start(i8* %arraydecay1), !dbg !14252
  %0 = load i8*, i8** %fmt.addr, align 8, !dbg !14252
  %fmt2 = getelementptr inbounds %struct.va_format, %struct.va_format* %vaf, i32 0, i32 0, !dbg !14252
  store i8* %0, i8** %fmt2, align 8, !dbg !14252
  %va = getelementptr inbounds %struct.va_format, %struct.va_format* %vaf, i32 0, i32 1, !dbg !14252
  store [1 x %struct.__va_list_tag]* %args, [1 x %struct.__va_list_tag]** %va, align 8, !dbg !14252
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14252
  call void @__dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), %struct.device* %1, %struct.va_format* %vaf) #10, !dbg !14252
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !14252
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !14252
  call void @llvm.va_end(i8* %arraydecay34), !dbg !14252
  ret void, !dbg !14252
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local void @_dev_alert(%struct.device* %dev, i8* %fmt, ...) #3 !dbg !14256 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %fmt.addr = alloca i8*, align 8
  %vaf = alloca %struct.va_format, align 8
  %args = alloca [1 x %struct.__va_list_tag], align 16
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14257, metadata !DIExpression()), !dbg !14258
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !14259, metadata !DIExpression()), !dbg !14258
  call void @llvm.dbg.declare(metadata %struct.va_format* %vaf, metadata !14260, metadata !DIExpression()), !dbg !14258
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !14261, metadata !DIExpression()), !dbg !14258
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !14258
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !14258
  call void @llvm.va_start(i8* %arraydecay1), !dbg !14258
  %0 = load i8*, i8** %fmt.addr, align 8, !dbg !14258
  %fmt2 = getelementptr inbounds %struct.va_format, %struct.va_format* %vaf, i32 0, i32 0, !dbg !14258
  store i8* %0, i8** %fmt2, align 8, !dbg !14258
  %va = getelementptr inbounds %struct.va_format, %struct.va_format* %vaf, i32 0, i32 1, !dbg !14258
  store [1 x %struct.__va_list_tag]* %args, [1 x %struct.__va_list_tag]** %va, align 8, !dbg !14258
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14258
  call void @__dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), %struct.device* %1, %struct.va_format* %vaf) #10, !dbg !14258
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !14258
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !14258
  call void @llvm.va_end(i8* %arraydecay34), !dbg !14258
  ret void, !dbg !14258
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local void @_dev_crit(%struct.device* %dev, i8* %fmt, ...) #3 !dbg !14262 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %fmt.addr = alloca i8*, align 8
  %vaf = alloca %struct.va_format, align 8
  %args = alloca [1 x %struct.__va_list_tag], align 16
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14263, metadata !DIExpression()), !dbg !14264
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !14265, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.declare(metadata %struct.va_format* %vaf, metadata !14266, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !14267, metadata !DIExpression()), !dbg !14264
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !14264
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !14264
  call void @llvm.va_start(i8* %arraydecay1), !dbg !14264
  %0 = load i8*, i8** %fmt.addr, align 8, !dbg !14264
  %fmt2 = getelementptr inbounds %struct.va_format, %struct.va_format* %vaf, i32 0, i32 0, !dbg !14264
  store i8* %0, i8** %fmt2, align 8, !dbg !14264
  %va = getelementptr inbounds %struct.va_format, %struct.va_format* %vaf, i32 0, i32 1, !dbg !14264
  store [1 x %struct.__va_list_tag]* %args, [1 x %struct.__va_list_tag]** %va, align 8, !dbg !14264
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14264
  call void @__dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), %struct.device* %1, %struct.va_format* %vaf) #10, !dbg !14264
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !14264
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !14264
  call void @llvm.va_end(i8* %arraydecay34), !dbg !14264
  ret void, !dbg !14264
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local void @_dev_err(%struct.device* %dev, i8* %fmt, ...) #3 !dbg !14268 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %fmt.addr = alloca i8*, align 8
  %vaf = alloca %struct.va_format, align 8
  %args = alloca [1 x %struct.__va_list_tag], align 16
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14269, metadata !DIExpression()), !dbg !14270
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !14271, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.declare(metadata %struct.va_format* %vaf, metadata !14272, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !14273, metadata !DIExpression()), !dbg !14270
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !14270
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !14270
  call void @llvm.va_start(i8* %arraydecay1), !dbg !14270
  %0 = load i8*, i8** %fmt.addr, align 8, !dbg !14270
  %fmt2 = getelementptr inbounds %struct.va_format, %struct.va_format* %vaf, i32 0, i32 0, !dbg !14270
  store i8* %0, i8** %fmt2, align 8, !dbg !14270
  %va = getelementptr inbounds %struct.va_format, %struct.va_format* %vaf, i32 0, i32 1, !dbg !14270
  store [1 x %struct.__va_list_tag]* %args, [1 x %struct.__va_list_tag]** %va, align 8, !dbg !14270
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14270
  call void @__dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i64 0, i64 0), %struct.device* %1, %struct.va_format* %vaf) #10, !dbg !14270
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !14270
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !14270
  call void @llvm.va_end(i8* %arraydecay34), !dbg !14270
  ret void, !dbg !14270
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local void @_dev_warn(%struct.device* %dev, i8* %fmt, ...) #3 !dbg !14274 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %fmt.addr = alloca i8*, align 8
  %vaf = alloca %struct.va_format, align 8
  %args = alloca [1 x %struct.__va_list_tag], align 16
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14275, metadata !DIExpression()), !dbg !14276
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !14277, metadata !DIExpression()), !dbg !14276
  call void @llvm.dbg.declare(metadata %struct.va_format* %vaf, metadata !14278, metadata !DIExpression()), !dbg !14276
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !14279, metadata !DIExpression()), !dbg !14276
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !14276
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !14276
  call void @llvm.va_start(i8* %arraydecay1), !dbg !14276
  %0 = load i8*, i8** %fmt.addr, align 8, !dbg !14276
  %fmt2 = getelementptr inbounds %struct.va_format, %struct.va_format* %vaf, i32 0, i32 0, !dbg !14276
  store i8* %0, i8** %fmt2, align 8, !dbg !14276
  %va = getelementptr inbounds %struct.va_format, %struct.va_format* %vaf, i32 0, i32 1, !dbg !14276
  store [1 x %struct.__va_list_tag]* %args, [1 x %struct.__va_list_tag]** %va, align 8, !dbg !14276
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14276
  call void @__dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0), %struct.device* %1, %struct.va_format* %vaf) #10, !dbg !14276
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !14276
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !14276
  call void @llvm.va_end(i8* %arraydecay34), !dbg !14276
  ret void, !dbg !14276
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local void @_dev_notice(%struct.device* %dev, i8* %fmt, ...) #3 !dbg !14280 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %fmt.addr = alloca i8*, align 8
  %vaf = alloca %struct.va_format, align 8
  %args = alloca [1 x %struct.__va_list_tag], align 16
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14281, metadata !DIExpression()), !dbg !14282
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !14283, metadata !DIExpression()), !dbg !14282
  call void @llvm.dbg.declare(metadata %struct.va_format* %vaf, metadata !14284, metadata !DIExpression()), !dbg !14282
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !14285, metadata !DIExpression()), !dbg !14282
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !14282
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !14282
  call void @llvm.va_start(i8* %arraydecay1), !dbg !14282
  %0 = load i8*, i8** %fmt.addr, align 8, !dbg !14282
  %fmt2 = getelementptr inbounds %struct.va_format, %struct.va_format* %vaf, i32 0, i32 0, !dbg !14282
  store i8* %0, i8** %fmt2, align 8, !dbg !14282
  %va = getelementptr inbounds %struct.va_format, %struct.va_format* %vaf, i32 0, i32 1, !dbg !14282
  store [1 x %struct.__va_list_tag]* %args, [1 x %struct.__va_list_tag]** %va, align 8, !dbg !14282
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14282
  call void @__dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), %struct.device* %1, %struct.va_format* %vaf) #10, !dbg !14282
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !14282
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !14282
  call void @llvm.va_end(i8* %arraydecay34), !dbg !14282
  ret void, !dbg !14282
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dev_err_probe(%struct.device* %dev, i32 %err, i8* %fmt, ...) #0 !dbg !14286 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %err.addr = alloca i32, align 4
  %fmt.addr = alloca i8*, align 8
  %vaf = alloca %struct.va_format, align 8
  %args = alloca [1 x %struct.__va_list_tag], align 16
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14289, metadata !DIExpression()), !dbg !14290
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !14291, metadata !DIExpression()), !dbg !14292
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !14293, metadata !DIExpression()), !dbg !14294
  call void @llvm.dbg.declare(metadata %struct.va_format* %vaf, metadata !14295, metadata !DIExpression()), !dbg !14296
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !14297, metadata !DIExpression()), !dbg !14298
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !14299
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !14299
  call void @llvm.va_start(i8* %arraydecay1), !dbg !14299
  %0 = load i8*, i8** %fmt.addr, align 8, !dbg !14300
  %fmt2 = getelementptr inbounds %struct.va_format, %struct.va_format* %vaf, i32 0, i32 0, !dbg !14301
  store i8* %0, i8** %fmt2, align 8, !dbg !14302
  %va = getelementptr inbounds %struct.va_format, %struct.va_format* %vaf, i32 0, i32 1, !dbg !14303
  store [1 x %struct.__va_list_tag]* %args, [1 x %struct.__va_list_tag]** %va, align 8, !dbg !14304
  %1 = load i32, i32* %err.addr, align 4, !dbg !14305
  %cmp = icmp ne i32 %1, -517, !dbg !14307
  br i1 %cmp, label %if.then, label %if.else, !dbg !14308

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14309
  %3 = load i32, i32* %err.addr, align 4, !dbg !14309
  %conv = sext i32 %3 to i64, !dbg !14309
  %call = call i8* @ERR_PTR(i64 %conv) #10, !dbg !14309
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0), i8* %call, %struct.va_format* %vaf) #14, !dbg !14309
  br label %if.end, !dbg !14311

if.else:                                          ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14312
  call void @device_set_deferred_probe_reason(%struct.device* %4, %struct.va_format* %vaf) #10, !dbg !14314
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !14315
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !14315
  call void @llvm.va_end(i8* %arraydecay34), !dbg !14315
  %5 = load i32, i32* %err.addr, align 4, !dbg !14316
  ret i32 %5, !dbg !14317
}

; Function Attrs: noredzone
declare dso_local void @device_set_deferred_probe_reason(%struct.device*, %struct.va_format*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @set_primary_fwnode(%struct.device* %dev, %struct.fwnode_handle* %fwnode) #0 !dbg !14318 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %fwnode.addr = alloca %struct.fwnode_handle*, align 8
  %parent = alloca %struct.device*, align 8
  %fn = alloca %struct.fwnode_handle*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14321, metadata !DIExpression()), !dbg !14322
  store %struct.fwnode_handle* %fwnode, %struct.fwnode_handle** %fwnode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %fwnode.addr, metadata !14323, metadata !DIExpression()), !dbg !14324
  call void @llvm.dbg.declare(metadata %struct.device** %parent, metadata !14325, metadata !DIExpression()), !dbg !14326
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14327
  %parent1 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !14328
  %1 = load %struct.device*, %struct.device** %parent1, align 8, !dbg !14328
  store %struct.device* %1, %struct.device** %parent, align 8, !dbg !14326
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %fn, metadata !14329, metadata !DIExpression()), !dbg !14330
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14331
  %fwnode2 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 24, !dbg !14332
  %3 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode2, align 8, !dbg !14332
  store %struct.fwnode_handle* %3, %struct.fwnode_handle** %fn, align 8, !dbg !14330
  %4 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !14333
  %tobool = icmp ne %struct.fwnode_handle* %4, null, !dbg !14333
  br i1 %tobool, label %if.then, label %if.else, !dbg !14335

if.then:                                          ; preds = %entry
  %5 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fn, align 8, !dbg !14336
  %call = call zeroext i1 @fwnode_is_primary(%struct.fwnode_handle* %5) #10, !dbg !14339
  br i1 %call, label %if.then3, label %if.end, !dbg !14340

if.then3:                                         ; preds = %if.then
  %6 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fn, align 8, !dbg !14341
  %secondary = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %6, i32 0, i32 0, !dbg !14342
  %7 = load %struct.fwnode_handle*, %struct.fwnode_handle** %secondary, align 8, !dbg !14342
  store %struct.fwnode_handle* %7, %struct.fwnode_handle** %fn, align 8, !dbg !14343
  br label %if.end, !dbg !14344

if.end:                                           ; preds = %if.then3, %if.then
  %8 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fn, align 8, !dbg !14345
  %tobool4 = icmp ne %struct.fwnode_handle* %8, null, !dbg !14345
  br i1 %tobool4, label %if.then5, label %if.end30, !dbg !14347

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !14348, metadata !DIExpression()), !dbg !14351
  %9 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !14351
  %secondary6 = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %9, i32 0, i32 0, !dbg !14351
  %10 = load %struct.fwnode_handle*, %struct.fwnode_handle** %secondary6, align 8, !dbg !14351
  %tobool7 = icmp ne %struct.fwnode_handle* %10, null, !dbg !14351
  %lnot = xor i1 %tobool7, true, !dbg !14351
  %lnot8 = xor i1 %lnot, true, !dbg !14351
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !14351
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !14351
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !14352
  %tobool9 = icmp ne i32 %11, 0, !dbg !14352
  %lnot10 = xor i1 %tobool9, true, !dbg !14352
  %lnot12 = xor i1 %lnot10, true, !dbg !14352
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !14352
  %conv = sext i32 %lnot.ext13 to i64, !dbg !14352
  %tobool14 = icmp ne i64 %conv, 0, !dbg !14352
  br i1 %tobool14, label %if.then15, label %if.end22, !dbg !14351

if.then15:                                        ; preds = %if.then5
  br label %do.body, !dbg !14352

do.body:                                          ; preds = %if.then15
  br label %do.body16, !dbg !14354

do.body16:                                        ; preds = %do.body
  br label %do.end, !dbg !14356

do.end:                                           ; preds = %do.body16
  br label %do.body17, !dbg !14354

do.body17:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 4273, i32 2305, i64 12) #5, !dbg !14358, !srcloc !14360
  br label %do.end18, !dbg !14358

do.end18:                                         ; preds = %do.body17
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 442) #5, !dbg !14361, !srcloc !14363
  br label %do.body19, !dbg !14354

do.body19:                                        ; preds = %do.end18
  br label %do.end20, !dbg !14364

do.end20:                                         ; preds = %do.body19
  br label %do.end21, !dbg !14354

do.end21:                                         ; preds = %do.end20
  br label %if.end22, !dbg !14354

if.end22:                                         ; preds = %do.end21, %if.then5
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !14351
  %tobool23 = icmp ne i32 %12, 0, !dbg !14351
  %lnot24 = xor i1 %tobool23, true, !dbg !14351
  %lnot26 = xor i1 %lnot24, true, !dbg !14351
  %lnot.ext27 = zext i1 %lnot26 to i32, !dbg !14351
  %conv28 = sext i32 %lnot.ext27 to i64, !dbg !14351
  store i64 %conv28, i64* %tmp, align 8, !dbg !14352
  %13 = load i64, i64* %tmp, align 8, !dbg !14351
  %14 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fn, align 8, !dbg !14366
  %15 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !14367
  %secondary29 = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %15, i32 0, i32 0, !dbg !14368
  store %struct.fwnode_handle* %14, %struct.fwnode_handle** %secondary29, align 8, !dbg !14369
  br label %if.end30, !dbg !14370

if.end30:                                         ; preds = %if.end22, %if.end
  %16 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !14371
  %17 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14372
  %fwnode31 = getelementptr inbounds %struct.device, %struct.device* %17, i32 0, i32 24, !dbg !14373
  store %struct.fwnode_handle* %16, %struct.fwnode_handle** %fwnode31, align 8, !dbg !14374
  br label %if.end46, !dbg !14375

if.else:                                          ; preds = %entry
  %18 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fn, align 8, !dbg !14376
  %call32 = call zeroext i1 @fwnode_is_primary(%struct.fwnode_handle* %18) #10, !dbg !14379
  br i1 %call32, label %if.then33, label %if.else43, !dbg !14380

if.then33:                                        ; preds = %if.else
  %19 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fn, align 8, !dbg !14381
  %secondary34 = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %19, i32 0, i32 0, !dbg !14383
  %20 = load %struct.fwnode_handle*, %struct.fwnode_handle** %secondary34, align 8, !dbg !14383
  %21 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14384
  %fwnode35 = getelementptr inbounds %struct.device, %struct.device* %21, i32 0, i32 24, !dbg !14385
  store %struct.fwnode_handle* %20, %struct.fwnode_handle** %fwnode35, align 8, !dbg !14386
  %22 = load %struct.device*, %struct.device** %parent, align 8, !dbg !14387
  %tobool36 = icmp ne %struct.device* %22, null, !dbg !14387
  br i1 %tobool36, label %land.lhs.true, label %if.then39, !dbg !14389

land.lhs.true:                                    ; preds = %if.then33
  %23 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fn, align 8, !dbg !14390
  %24 = load %struct.device*, %struct.device** %parent, align 8, !dbg !14391
  %fwnode37 = getelementptr inbounds %struct.device, %struct.device* %24, i32 0, i32 24, !dbg !14392
  %25 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode37, align 8, !dbg !14392
  %cmp = icmp eq %struct.fwnode_handle* %23, %25, !dbg !14393
  br i1 %cmp, label %if.end42, label %if.then39, !dbg !14394

if.then39:                                        ; preds = %land.lhs.true, %if.then33
  %call40 = call i8* @ERR_PTR(i64 -19) #10, !dbg !14395
  %26 = bitcast i8* %call40 to %struct.fwnode_handle*, !dbg !14395
  %27 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fn, align 8, !dbg !14396
  %secondary41 = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %27, i32 0, i32 0, !dbg !14397
  store %struct.fwnode_handle* %26, %struct.fwnode_handle** %secondary41, align 8, !dbg !14398
  br label %if.end42, !dbg !14396

if.end42:                                         ; preds = %if.then39, %land.lhs.true
  br label %if.end45, !dbg !14399

if.else43:                                        ; preds = %if.else
  %28 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14400
  %fwnode44 = getelementptr inbounds %struct.device, %struct.device* %28, i32 0, i32 24, !dbg !14402
  store %struct.fwnode_handle* null, %struct.fwnode_handle** %fwnode44, align 8, !dbg !14403
  br label %if.end45

if.end45:                                         ; preds = %if.else43, %if.end42
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.end30
  ret void, !dbg !14404
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @fwnode_is_primary(%struct.fwnode_handle* %fwnode) #0 !dbg !14405 {
entry:
  %fwnode.addr = alloca %struct.fwnode_handle*, align 8
  store %struct.fwnode_handle* %fwnode, %struct.fwnode_handle** %fwnode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %fwnode.addr, metadata !14408, metadata !DIExpression()), !dbg !14409
  %0 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !14410
  %tobool = icmp ne %struct.fwnode_handle* %0, null, !dbg !14410
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !14411

land.rhs:                                         ; preds = %entry
  %1 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !14412
  %secondary = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %1, i32 0, i32 0, !dbg !14413
  %2 = load %struct.fwnode_handle*, %struct.fwnode_handle** %secondary, align 8, !dbg !14413
  %3 = bitcast %struct.fwnode_handle* %2 to i8*, !dbg !14412
  %call = call zeroext i1 @IS_ERR(i8* %3) #10, !dbg !14414
  %lnot = xor i1 %call, true, !dbg !14415
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !14416
  ret i1 %4, !dbg !14417
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @set_secondary_fwnode(%struct.device* %dev, %struct.fwnode_handle* %fwnode) #0 !dbg !14418 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %fwnode.addr = alloca %struct.fwnode_handle*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14419, metadata !DIExpression()), !dbg !14420
  store %struct.fwnode_handle* %fwnode, %struct.fwnode_handle** %fwnode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %fwnode.addr, metadata !14421, metadata !DIExpression()), !dbg !14422
  %0 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !14423
  %tobool = icmp ne %struct.fwnode_handle* %0, null, !dbg !14423
  br i1 %tobool, label %if.then, label %if.end, !dbg !14425

if.then:                                          ; preds = %entry
  %call = call i8* @ERR_PTR(i64 -19) #10, !dbg !14426
  %1 = bitcast i8* %call to %struct.fwnode_handle*, !dbg !14426
  %2 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !14427
  %secondary = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %2, i32 0, i32 0, !dbg !14428
  store %struct.fwnode_handle* %1, %struct.fwnode_handle** %secondary, align 8, !dbg !14429
  br label %if.end, !dbg !14427

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14430
  %fwnode1 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 24, !dbg !14432
  %4 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode1, align 8, !dbg !14432
  %call2 = call zeroext i1 @fwnode_is_primary(%struct.fwnode_handle* %4) #10, !dbg !14433
  br i1 %call2, label %if.then3, label %if.else, !dbg !14434

if.then3:                                         ; preds = %if.end
  %5 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !14435
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14436
  %fwnode4 = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 24, !dbg !14437
  %7 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode4, align 8, !dbg !14437
  %secondary5 = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %7, i32 0, i32 0, !dbg !14438
  store %struct.fwnode_handle* %5, %struct.fwnode_handle** %secondary5, align 8, !dbg !14439
  br label %if.end7, !dbg !14436

if.else:                                          ; preds = %if.end
  %8 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !14440
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14441
  %fwnode6 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 24, !dbg !14442
  store %struct.fwnode_handle* %8, %struct.fwnode_handle** %fwnode6, align 8, !dbg !14443
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then3
  ret void, !dbg !14444
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @device_set_of_node_from_dev(%struct.device* %dev, %struct.device* %dev2) #0 !dbg !14445 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %dev2.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14448, metadata !DIExpression()), !dbg !14449
  store %struct.device* %dev2, %struct.device** %dev2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev2.addr, metadata !14450, metadata !DIExpression()), !dbg !14451
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14452
  %of_node = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 23, !dbg !14453
  %1 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !14453
  call void @of_node_put(%struct.device_node* %1) #10, !dbg !14454
  %2 = load %struct.device*, %struct.device** %dev2.addr, align 8, !dbg !14455
  %of_node1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 23, !dbg !14456
  %3 = load %struct.device_node*, %struct.device_node** %of_node1, align 8, !dbg !14456
  %call = call %struct.device_node* @of_node_get(%struct.device_node* %3) #10, !dbg !14457
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14458
  %of_node2 = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 23, !dbg !14459
  store %struct.device_node* %call, %struct.device_node** %of_node2, align 8, !dbg !14460
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14461
  %of_node_reused = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 34, !dbg !14462
  %bf.load = load i8, i8* %of_node_reused, align 8, !dbg !14463
  %bf.clear = and i8 %bf.load, -5, !dbg !14463
  %bf.set = or i8 %bf.clear, 4, !dbg !14463
  store i8 %bf.set, i8* %of_node_reused, align 8, !dbg !14463
  ret void, !dbg !14464
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @of_node_put(%struct.device_node* %node) #0 !dbg !14465 {
entry:
  %node.addr = alloca %struct.device_node*, align 8
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !14468, metadata !DIExpression()), !dbg !14469
  ret void, !dbg !14470
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device_node* @of_node_get(%struct.device_node* %node) #0 !dbg !14471 {
entry:
  %node.addr = alloca %struct.device_node*, align 8
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !14474, metadata !DIExpression()), !dbg !14475
  %0 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !14476
  ret %struct.device_node* %0, !dbg !14477
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @device_match_name(%struct.device* %dev, i8* %name) #0 !dbg !14478 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %name.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14481, metadata !DIExpression()), !dbg !14482
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !14483, metadata !DIExpression()), !dbg !14484
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14485
  %call = call i8* @dev_name(%struct.device* %0) #10, !dbg !14486
  %1 = load i8*, i8** %name.addr, align 8, !dbg !14487
  %call1 = call zeroext i1 @sysfs_streq(i8* %call, i8* %1) #10, !dbg !14488
  %conv = zext i1 %call1 to i32, !dbg !14488
  ret i32 %conv, !dbg !14489
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @device_match_of_node(%struct.device* %dev, i8* %np) #0 !dbg !14490 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %np.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14491, metadata !DIExpression()), !dbg !14492
  store i8* %np, i8** %np.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %np.addr, metadata !14493, metadata !DIExpression()), !dbg !14494
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14495
  %of_node = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 23, !dbg !14496
  %1 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !14496
  %2 = load i8*, i8** %np.addr, align 8, !dbg !14497
  %3 = bitcast i8* %2 to %struct.device_node*, !dbg !14497
  %cmp = icmp eq %struct.device_node* %1, %3, !dbg !14498
  %conv = zext i1 %cmp to i32, !dbg !14498
  ret i32 %conv, !dbg !14499
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @device_match_fwnode(%struct.device* %dev, i8* %fwnode) #0 !dbg !14500 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %fwnode.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14501, metadata !DIExpression()), !dbg !14502
  store i8* %fwnode, i8** %fwnode.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fwnode.addr, metadata !14503, metadata !DIExpression()), !dbg !14504
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14505
  %call = call %struct.fwnode_handle* @dev_fwnode(%struct.device* %0) #10, !dbg !14506
  %1 = load i8*, i8** %fwnode.addr, align 8, !dbg !14507
  %2 = bitcast i8* %1 to %struct.fwnode_handle*, !dbg !14507
  %cmp = icmp eq %struct.fwnode_handle* %call, %2, !dbg !14508
  %conv = zext i1 %cmp to i32, !dbg !14508
  ret i32 %conv, !dbg !14509
}

; Function Attrs: noredzone
declare dso_local %struct.fwnode_handle* @dev_fwnode(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @device_match_devt(%struct.device* %dev, i8* %pdevt) #0 !dbg !14510 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %pdevt.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14511, metadata !DIExpression()), !dbg !14512
  store i8* %pdevt, i8** %pdevt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pdevt.addr, metadata !14513, metadata !DIExpression()), !dbg !14514
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14515
  %devt = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 25, !dbg !14516
  %1 = load i32, i32* %devt, align 8, !dbg !14516
  %2 = load i8*, i8** %pdevt.addr, align 8, !dbg !14517
  %3 = bitcast i8* %2 to i32*, !dbg !14518
  %4 = load i32, i32* %3, align 4, !dbg !14519
  %cmp = icmp eq i32 %1, %4, !dbg !14520
  %conv = zext i1 %cmp to i32, !dbg !14520
  ret i32 %conv, !dbg !14521
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @device_match_acpi_dev(%struct.device* %dev, i8* %adev) #0 !dbg !14522 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %adev.addr = alloca i8*, align 8
  %__to_acpi_device_node_fwnode = alloca %struct.fwnode_handle*, align 8
  %tmp = alloca %struct.acpi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.acpi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14523, metadata !DIExpression()), !dbg !14524
  store i8* %adev, i8** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %adev.addr, metadata !14525, metadata !DIExpression()), !dbg !14526
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %__to_acpi_device_node_fwnode, metadata !14527, metadata !DIExpression()), !dbg !14529
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14529
  %fwnode = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 24, !dbg !14529
  %1 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !14529
  store %struct.fwnode_handle* %1, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !14529
  %2 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !14529
  %call = call zeroext i1 @is_acpi_device_node(%struct.fwnode_handle* %2) #10, !dbg !14529
  br i1 %call, label %cond.true, label %cond.false, !dbg !14529

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14530, metadata !DIExpression()), !dbg !14532
  %3 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !14532
  %4 = bitcast %struct.fwnode_handle* %3 to i8*, !dbg !14532
  store i8* %4, i8** %__mptr, align 8, !dbg !14532
  br label %do.body, !dbg !14532

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !14533

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !14532
  %add.ptr = getelementptr i8, i8* %5, i64 -16, !dbg !14532
  %6 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !14532
  store %struct.acpi_device* %6, %struct.acpi_device** %tmp1, align 8, !dbg !14533
  %7 = load %struct.acpi_device*, %struct.acpi_device** %tmp1, align 8, !dbg !14532
  br label %cond.end, !dbg !14529

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14529

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.acpi_device* [ %7, %do.end ], [ null, %cond.false ], !dbg !14529
  store %struct.acpi_device* %cond, %struct.acpi_device** %tmp, align 8, !dbg !14529
  %8 = load %struct.acpi_device*, %struct.acpi_device** %tmp, align 8, !dbg !14529
  %9 = load i8*, i8** %adev.addr, align 8, !dbg !14535
  %10 = bitcast i8* %9 to %struct.acpi_device*, !dbg !14535
  %cmp = icmp eq %struct.acpi_device* %8, %10, !dbg !14536
  %conv = zext i1 %cmp to i32, !dbg !14536
  ret i32 %conv, !dbg !14537
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_acpi_device_node(%struct.fwnode_handle*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @device_match_any(%struct.device* %dev, i8* %unused) #0 !dbg !14538 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %unused.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14539, metadata !DIExpression()), !dbg !14540
  store i8* %unused, i8** %unused.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %unused.addr, metadata !14541, metadata !DIExpression()), !dbg !14542
  ret i32 1, !dbg !14543
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__srcu_read_lock(%struct.srcu_struct* %ssp) #0 !dbg !14544 {
entry:
  %ssp.addr = alloca %struct.srcu_struct*, align 8
  %idx = alloca i32, align 4
  %tmp = alloca i16, align 2
  store %struct.srcu_struct* %ssp, %struct.srcu_struct** %ssp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.srcu_struct** %ssp.addr, metadata !14545, metadata !DIExpression()), !dbg !14546
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !14547, metadata !DIExpression()), !dbg !14548
  br label %do.body, !dbg !14549

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14551

do.end:                                           ; preds = %do.body
  %0 = load %struct.srcu_struct*, %struct.srcu_struct** %ssp.addr, align 8, !dbg !14549
  %srcu_idx = getelementptr inbounds %struct.srcu_struct, %struct.srcu_struct* %0, i32 0, i32 1, !dbg !14549
  %1 = load volatile i16, i16* %srcu_idx, align 4, !dbg !14549
  store i16 %1, i16* %tmp, align 2, !dbg !14551
  %2 = load i16, i16* %tmp, align 2, !dbg !14549
  %conv = sext i16 %2 to i32, !dbg !14553
  store i32 %conv, i32* %idx, align 4, !dbg !14554
  br label %do.body1, !dbg !14555

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !14556

do.body2:                                         ; preds = %do.body1
  br label %do.end3, !dbg !14558

do.end3:                                          ; preds = %do.body2
  br label %do.body4, !dbg !14556

do.body4:                                         ; preds = %do.end3
  %3 = load %struct.srcu_struct*, %struct.srcu_struct** %ssp.addr, align 8, !dbg !14560
  %srcu_lock_nesting = getelementptr inbounds %struct.srcu_struct, %struct.srcu_struct* %3, i32 0, i32 0, !dbg !14560
  %4 = load i32, i32* %idx, align 4, !dbg !14560
  %idxprom = sext i32 %4 to i64, !dbg !14560
  %arrayidx = getelementptr [2 x i16], [2 x i16]* %srcu_lock_nesting, i64 0, i64 %idxprom, !dbg !14560
  %5 = load i16, i16* %arrayidx, align 2, !dbg !14560
  %conv5 = sext i16 %5 to i32, !dbg !14560
  %add = add i32 %conv5, 1, !dbg !14560
  %conv6 = trunc i32 %add to i16, !dbg !14560
  %6 = load %struct.srcu_struct*, %struct.srcu_struct** %ssp.addr, align 8, !dbg !14560
  %srcu_lock_nesting7 = getelementptr inbounds %struct.srcu_struct, %struct.srcu_struct* %6, i32 0, i32 0, !dbg !14560
  %7 = load i32, i32* %idx, align 4, !dbg !14560
  %idxprom8 = sext i32 %7 to i64, !dbg !14560
  %arrayidx9 = getelementptr [2 x i16], [2 x i16]* %srcu_lock_nesting7, i64 0, i64 %idxprom8, !dbg !14560
  store volatile i16 %conv6, i16* %arrayidx9, align 2, !dbg !14560
  br label %do.end10, !dbg !14560

do.end10:                                         ; preds = %do.body4
  br label %do.end11, !dbg !14556

do.end11:                                         ; preds = %do.end10
  %8 = load i32, i32* %idx, align 4, !dbg !14562
  ret i32 %8, !dbg !14563
}

; Function Attrs: noredzone
declare dso_local void @srcu_drive_gp(%struct.work_struct*) #2

; Function Attrs: noredzone
declare dso_local void @__srcu_read_unlock(%struct.srcu_struct*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @device_is_registered(%struct.device* %dev) #0 !dbg !14564 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14565, metadata !DIExpression()), !dbg !14566
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14567
  %kobj = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !14568
  %state_in_sysfs = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj, i32 0, i32 7, !dbg !14569
  %bf.load = load i8, i8* %state_in_sysfs, align 4, !dbg !14569
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !14569
  %bf.clear = and i8 %bf.lshr, 1, !dbg !14569
  %bf.cast = zext i8 %bf.clear to i32, !dbg !14569
  ret i32 %bf.cast, !dbg !14570
}

; Function Attrs: noredzone
declare dso_local i32 @__class_register(%struct.class*, %struct.lock_class_key*) #2

; Function Attrs: noredzone
declare dso_local i32 @class_interface_register(%struct.class_interface*) #2

; Function Attrs: noredzone
declare dso_local void @class_unregister(%struct.class*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devlink_add_symlinks(%struct.device* %dev, %struct.class_interface* %class_intf) #0 !dbg !14571 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %class_intf.addr = alloca %struct.class_interface*, align 8
  %ret = alloca i32, align 4
  %len = alloca i64, align 8
  %link = alloca %struct.device_link*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_link*, align 8
  %sup = alloca %struct.device*, align 8
  %con = alloca %struct.device*, align 8
  %buf = alloca i8*, align 8
  %__UNIQUE_ID___x334 = alloca i64, align 8
  %__UNIQUE_ID___y335 = alloca i64, align 8
  %tmp4 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14572, metadata !DIExpression()), !dbg !14573
  store %struct.class_interface* %class_intf, %struct.class_interface** %class_intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.class_interface** %class_intf.addr, metadata !14574, metadata !DIExpression()), !dbg !14575
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14576, metadata !DIExpression()), !dbg !14577
  call void @llvm.dbg.declare(metadata i64* %len, metadata !14578, metadata !DIExpression()), !dbg !14579
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !14580, metadata !DIExpression()), !dbg !14581
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14582, metadata !DIExpression()), !dbg !14584
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14584
  %1 = bitcast %struct.device* %0 to i8*, !dbg !14584
  store i8* %1, i8** %__mptr, align 8, !dbg !14584
  br label %do.body, !dbg !14584

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14585

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14584
  %add.ptr = getelementptr i8, i8* %2, i64 -48, !dbg !14584
  %3 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !14584
  store %struct.device_link* %3, %struct.device_link** %tmp, align 8, !dbg !14585
  %4 = load %struct.device_link*, %struct.device_link** %tmp, align 8, !dbg !14584
  store %struct.device_link* %4, %struct.device_link** %link, align 8, !dbg !14581
  call void @llvm.dbg.declare(metadata %struct.device** %sup, metadata !14587, metadata !DIExpression()), !dbg !14588
  %5 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !14589
  %supplier = getelementptr inbounds %struct.device_link, %struct.device_link* %5, i32 0, i32 0, !dbg !14590
  %6 = load %struct.device*, %struct.device** %supplier, align 8, !dbg !14590
  store %struct.device* %6, %struct.device** %sup, align 8, !dbg !14588
  call void @llvm.dbg.declare(metadata %struct.device** %con, metadata !14591, metadata !DIExpression()), !dbg !14592
  %7 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !14593
  %consumer = getelementptr inbounds %struct.device_link, %struct.device_link* %7, i32 0, i32 2, !dbg !14594
  %8 = load %struct.device*, %struct.device** %consumer, align 8, !dbg !14594
  store %struct.device* %8, %struct.device** %con, align 8, !dbg !14592
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !14595, metadata !DIExpression()), !dbg !14596
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x334, metadata !14597, metadata !DIExpression()), !dbg !14599
  %9 = load %struct.device*, %struct.device** %sup, align 8, !dbg !14599
  %call = call i8* @dev_name(%struct.device* %9) #10, !dbg !14599
  %call1 = call i64 @strlen(i8* %call) #10, !dbg !14599
  store i64 %call1, i64* %__UNIQUE_ID___x334, align 8, !dbg !14599
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y335, metadata !14600, metadata !DIExpression()), !dbg !14599
  %10 = load %struct.device*, %struct.device** %con, align 8, !dbg !14599
  %call2 = call i8* @dev_name(%struct.device* %10) #10, !dbg !14599
  %call3 = call i64 @strlen(i8* %call2) #10, !dbg !14599
  store i64 %call3, i64* %__UNIQUE_ID___y335, align 8, !dbg !14599
  %11 = load i64, i64* %__UNIQUE_ID___x334, align 8, !dbg !14599
  %12 = load i64, i64* %__UNIQUE_ID___y335, align 8, !dbg !14599
  %cmp = icmp ugt i64 %11, %12, !dbg !14599
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14599

cond.true:                                        ; preds = %do.end
  %13 = load i64, i64* %__UNIQUE_ID___x334, align 8, !dbg !14599
  br label %cond.end, !dbg !14599

cond.false:                                       ; preds = %do.end
  %14 = load i64, i64* %__UNIQUE_ID___y335, align 8, !dbg !14599
  br label %cond.end, !dbg !14599

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %13, %cond.true ], [ %14, %cond.false ], !dbg !14599
  store i64 %cond, i64* %tmp4, align 8, !dbg !14599
  %15 = load i64, i64* %tmp4, align 8, !dbg !14599
  store i64 %15, i64* %len, align 8, !dbg !14601
  %16 = load i64, i64* %len, align 8, !dbg !14602
  %add = add i64 %16, 10, !dbg !14602
  store i64 %add, i64* %len, align 8, !dbg !14602
  %17 = load i64, i64* %len, align 8, !dbg !14603
  %call5 = call i8* @kzalloc(i64 %17, i32 3264) #10, !dbg !14604
  store i8* %call5, i8** %buf, align 8, !dbg !14605
  %18 = load i8*, i8** %buf, align 8, !dbg !14606
  %tobool = icmp ne i8* %18, null, !dbg !14606
  br i1 %tobool, label %if.end, label %if.then, !dbg !14608

if.then:                                          ; preds = %cond.end
  store i32 -12, i32* %retval, align 4, !dbg !14609
  br label %return, !dbg !14609

if.end:                                           ; preds = %cond.end
  %19 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !14610
  %link_dev = getelementptr inbounds %struct.device_link, %struct.device_link* %19, i32 0, i32 4, !dbg !14611
  %kobj = getelementptr inbounds %struct.device, %struct.device* %link_dev, i32 0, i32 0, !dbg !14612
  %20 = load %struct.device*, %struct.device** %sup, align 8, !dbg !14613
  %kobj6 = getelementptr inbounds %struct.device, %struct.device* %20, i32 0, i32 0, !dbg !14614
  %call7 = call i32 @sysfs_create_link(%struct.kobject* %kobj, %struct.kobject* %kobj6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0)) #10, !dbg !14615
  store i32 %call7, i32* %ret, align 4, !dbg !14616
  %21 = load i32, i32* %ret, align 4, !dbg !14617
  %tobool8 = icmp ne i32 %21, 0, !dbg !14617
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !14619

if.then9:                                         ; preds = %if.end
  br label %out, !dbg !14620

if.end10:                                         ; preds = %if.end
  %22 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !14621
  %link_dev11 = getelementptr inbounds %struct.device_link, %struct.device_link* %22, i32 0, i32 4, !dbg !14622
  %kobj12 = getelementptr inbounds %struct.device, %struct.device* %link_dev11, i32 0, i32 0, !dbg !14623
  %23 = load %struct.device*, %struct.device** %con, align 8, !dbg !14624
  %kobj13 = getelementptr inbounds %struct.device, %struct.device* %23, i32 0, i32 0, !dbg !14625
  %call14 = call i32 @sysfs_create_link(%struct.kobject* %kobj12, %struct.kobject* %kobj13, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i64 0, i64 0)) #10, !dbg !14626
  store i32 %call14, i32* %ret, align 4, !dbg !14627
  %24 = load i32, i32* %ret, align 4, !dbg !14628
  %tobool15 = icmp ne i32 %24, 0, !dbg !14628
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !14630

if.then16:                                        ; preds = %if.end10
  br label %err_con, !dbg !14631

if.end17:                                         ; preds = %if.end10
  %25 = load i8*, i8** %buf, align 8, !dbg !14632
  %26 = load i64, i64* %len, align 8, !dbg !14633
  %27 = load %struct.device*, %struct.device** %con, align 8, !dbg !14634
  %call18 = call i8* @dev_name(%struct.device* %27) #10, !dbg !14635
  %call19 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %25, i64 %26, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0), i8* %call18) #10, !dbg !14636
  %28 = load %struct.device*, %struct.device** %sup, align 8, !dbg !14637
  %kobj20 = getelementptr inbounds %struct.device, %struct.device* %28, i32 0, i32 0, !dbg !14638
  %29 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !14639
  %link_dev21 = getelementptr inbounds %struct.device_link, %struct.device_link* %29, i32 0, i32 4, !dbg !14640
  %kobj22 = getelementptr inbounds %struct.device, %struct.device* %link_dev21, i32 0, i32 0, !dbg !14641
  %30 = load i8*, i8** %buf, align 8, !dbg !14642
  %call23 = call i32 @sysfs_create_link(%struct.kobject* %kobj20, %struct.kobject* %kobj22, i8* %30) #10, !dbg !14643
  store i32 %call23, i32* %ret, align 4, !dbg !14644
  %31 = load i32, i32* %ret, align 4, !dbg !14645
  %tobool24 = icmp ne i32 %31, 0, !dbg !14645
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !14647

if.then25:                                        ; preds = %if.end17
  br label %err_con_dev, !dbg !14648

if.end26:                                         ; preds = %if.end17
  %32 = load i8*, i8** %buf, align 8, !dbg !14649
  %33 = load i64, i64* %len, align 8, !dbg !14650
  %34 = load %struct.device*, %struct.device** %sup, align 8, !dbg !14651
  %call27 = call i8* @dev_name(%struct.device* %34) #10, !dbg !14652
  %call28 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %32, i64 %33, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32, i64 0, i64 0), i8* %call27) #10, !dbg !14653
  %35 = load %struct.device*, %struct.device** %con, align 8, !dbg !14654
  %kobj29 = getelementptr inbounds %struct.device, %struct.device* %35, i32 0, i32 0, !dbg !14655
  %36 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !14656
  %link_dev30 = getelementptr inbounds %struct.device_link, %struct.device_link* %36, i32 0, i32 4, !dbg !14657
  %kobj31 = getelementptr inbounds %struct.device, %struct.device* %link_dev30, i32 0, i32 0, !dbg !14658
  %37 = load i8*, i8** %buf, align 8, !dbg !14659
  %call32 = call i32 @sysfs_create_link(%struct.kobject* %kobj29, %struct.kobject* %kobj31, i8* %37) #10, !dbg !14660
  store i32 %call32, i32* %ret, align 4, !dbg !14661
  %38 = load i32, i32* %ret, align 4, !dbg !14662
  %tobool33 = icmp ne i32 %38, 0, !dbg !14662
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !14664

if.then34:                                        ; preds = %if.end26
  br label %err_sup_dev, !dbg !14665

if.end35:                                         ; preds = %if.end26
  br label %out, !dbg !14666

err_sup_dev:                                      ; preds = %if.then34
  call void @llvm.dbg.label(metadata !14667), !dbg !14668
  %39 = load i8*, i8** %buf, align 8, !dbg !14669
  %40 = load i64, i64* %len, align 8, !dbg !14670
  %41 = load %struct.device*, %struct.device** %con, align 8, !dbg !14671
  %call36 = call i8* @dev_name(%struct.device* %41) #10, !dbg !14672
  %call37 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %39, i64 %40, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0), i8* %call36) #10, !dbg !14673
  %42 = load %struct.device*, %struct.device** %sup, align 8, !dbg !14674
  %kobj38 = getelementptr inbounds %struct.device, %struct.device* %42, i32 0, i32 0, !dbg !14675
  %43 = load i8*, i8** %buf, align 8, !dbg !14676
  call void @sysfs_remove_link(%struct.kobject* %kobj38, i8* %43) #10, !dbg !14677
  br label %err_con_dev, !dbg !14677

err_con_dev:                                      ; preds = %err_sup_dev, %if.then25
  call void @llvm.dbg.label(metadata !14678), !dbg !14679
  %44 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !14680
  %link_dev39 = getelementptr inbounds %struct.device_link, %struct.device_link* %44, i32 0, i32 4, !dbg !14681
  %kobj40 = getelementptr inbounds %struct.device, %struct.device* %link_dev39, i32 0, i32 0, !dbg !14682
  call void @sysfs_remove_link(%struct.kobject* %kobj40, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i64 0, i64 0)) #10, !dbg !14683
  br label %err_con, !dbg !14683

err_con:                                          ; preds = %err_con_dev, %if.then16
  call void @llvm.dbg.label(metadata !14684), !dbg !14685
  %45 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !14686
  %link_dev41 = getelementptr inbounds %struct.device_link, %struct.device_link* %45, i32 0, i32 4, !dbg !14687
  %kobj42 = getelementptr inbounds %struct.device, %struct.device* %link_dev41, i32 0, i32 0, !dbg !14688
  call void @sysfs_remove_link(%struct.kobject* %kobj42, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0)) #10, !dbg !14689
  br label %out, !dbg !14689

out:                                              ; preds = %err_con, %if.end35, %if.then9
  call void @llvm.dbg.label(metadata !14690), !dbg !14691
  %46 = load i8*, i8** %buf, align 8, !dbg !14692
  call void @kfree(i8* %46) #10, !dbg !14693
  %47 = load i32, i32* %ret, align 4, !dbg !14694
  store i32 %47, i32* %retval, align 4, !dbg !14695
  br label %return, !dbg !14695

return:                                           ; preds = %out, %if.then
  %48 = load i32, i32* %retval, align 4, !dbg !14696
  ret i32 %48, !dbg !14696
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @devlink_remove_symlinks(%struct.device* %dev, %struct.class_interface* %class_intf) #0 !dbg !14697 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %class_intf.addr = alloca %struct.class_interface*, align 8
  %link = alloca %struct.device_link*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_link*, align 8
  %len = alloca i64, align 8
  %sup = alloca %struct.device*, align 8
  %con = alloca %struct.device*, align 8
  %buf = alloca i8*, align 8
  %__UNIQUE_ID___x337 = alloca i64, align 8
  %__UNIQUE_ID___y338 = alloca i64, align 8
  %tmp6 = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp26 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14698, metadata !DIExpression()), !dbg !14699
  store %struct.class_interface* %class_intf, %struct.class_interface** %class_intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.class_interface** %class_intf.addr, metadata !14700, metadata !DIExpression()), !dbg !14701
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !14702, metadata !DIExpression()), !dbg !14703
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14704, metadata !DIExpression()), !dbg !14706
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14706
  %1 = bitcast %struct.device* %0 to i8*, !dbg !14706
  store i8* %1, i8** %__mptr, align 8, !dbg !14706
  br label %do.body, !dbg !14706

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14707

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14706
  %add.ptr = getelementptr i8, i8* %2, i64 -48, !dbg !14706
  %3 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !14706
  store %struct.device_link* %3, %struct.device_link** %tmp, align 8, !dbg !14707
  %4 = load %struct.device_link*, %struct.device_link** %tmp, align 8, !dbg !14706
  store %struct.device_link* %4, %struct.device_link** %link, align 8, !dbg !14703
  call void @llvm.dbg.declare(metadata i64* %len, metadata !14709, metadata !DIExpression()), !dbg !14710
  call void @llvm.dbg.declare(metadata %struct.device** %sup, metadata !14711, metadata !DIExpression()), !dbg !14712
  %5 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !14713
  %supplier = getelementptr inbounds %struct.device_link, %struct.device_link* %5, i32 0, i32 0, !dbg !14714
  %6 = load %struct.device*, %struct.device** %supplier, align 8, !dbg !14714
  store %struct.device* %6, %struct.device** %sup, align 8, !dbg !14712
  call void @llvm.dbg.declare(metadata %struct.device** %con, metadata !14715, metadata !DIExpression()), !dbg !14716
  %7 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !14717
  %consumer = getelementptr inbounds %struct.device_link, %struct.device_link* %7, i32 0, i32 2, !dbg !14718
  %8 = load %struct.device*, %struct.device** %consumer, align 8, !dbg !14718
  store %struct.device* %8, %struct.device** %con, align 8, !dbg !14716
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !14719, metadata !DIExpression()), !dbg !14720
  %9 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !14721
  %link_dev = getelementptr inbounds %struct.device_link, %struct.device_link* %9, i32 0, i32 4, !dbg !14722
  %kobj = getelementptr inbounds %struct.device, %struct.device* %link_dev, i32 0, i32 0, !dbg !14723
  call void @sysfs_remove_link(%struct.kobject* %kobj, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i64 0, i64 0)) #10, !dbg !14724
  %10 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !14725
  %link_dev1 = getelementptr inbounds %struct.device_link, %struct.device_link* %10, i32 0, i32 4, !dbg !14726
  %kobj2 = getelementptr inbounds %struct.device, %struct.device* %link_dev1, i32 0, i32 0, !dbg !14727
  call void @sysfs_remove_link(%struct.kobject* %kobj2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0)) #10, !dbg !14728
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x337, metadata !14729, metadata !DIExpression()), !dbg !14731
  %11 = load %struct.device*, %struct.device** %sup, align 8, !dbg !14731
  %call = call i8* @dev_name(%struct.device* %11) #10, !dbg !14731
  %call3 = call i64 @strlen(i8* %call) #10, !dbg !14731
  store i64 %call3, i64* %__UNIQUE_ID___x337, align 8, !dbg !14731
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y338, metadata !14732, metadata !DIExpression()), !dbg !14731
  %12 = load %struct.device*, %struct.device** %con, align 8, !dbg !14731
  %call4 = call i8* @dev_name(%struct.device* %12) #10, !dbg !14731
  %call5 = call i64 @strlen(i8* %call4) #10, !dbg !14731
  store i64 %call5, i64* %__UNIQUE_ID___y338, align 8, !dbg !14731
  %13 = load i64, i64* %__UNIQUE_ID___x337, align 8, !dbg !14731
  %14 = load i64, i64* %__UNIQUE_ID___y338, align 8, !dbg !14731
  %cmp = icmp ugt i64 %13, %14, !dbg !14731
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14731

cond.true:                                        ; preds = %do.end
  %15 = load i64, i64* %__UNIQUE_ID___x337, align 8, !dbg !14731
  br label %cond.end, !dbg !14731

cond.false:                                       ; preds = %do.end
  %16 = load i64, i64* %__UNIQUE_ID___y338, align 8, !dbg !14731
  br label %cond.end, !dbg !14731

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %15, %cond.true ], [ %16, %cond.false ], !dbg !14731
  store i64 %cond, i64* %tmp6, align 8, !dbg !14731
  %17 = load i64, i64* %tmp6, align 8, !dbg !14731
  store i64 %17, i64* %len, align 8, !dbg !14733
  %18 = load i64, i64* %len, align 8, !dbg !14734
  %add = add i64 %18, 10, !dbg !14734
  store i64 %add, i64* %len, align 8, !dbg !14734
  %19 = load i64, i64* %len, align 8, !dbg !14735
  %call7 = call i8* @kzalloc(i64 %19, i32 3264) #10, !dbg !14736
  store i8* %call7, i8** %buf, align 8, !dbg !14737
  %20 = load i8*, i8** %buf, align 8, !dbg !14738
  %tobool = icmp ne i8* %20, null, !dbg !14738
  br i1 %tobool, label %if.end33, label %if.then, !dbg !14740

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !14741, metadata !DIExpression()), !dbg !14744
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !14744
  %21 = load i32, i32* %__ret_warn_on, align 4, !dbg !14745
  %tobool8 = icmp ne i32 %21, 0, !dbg !14745
  %lnot = xor i1 %tobool8, true, !dbg !14745
  %lnot9 = xor i1 %lnot, true, !dbg !14745
  %lnot.ext = zext i1 %lnot9 to i32, !dbg !14745
  %conv = sext i32 %lnot.ext to i64, !dbg !14745
  %tobool10 = icmp ne i64 %conv, 0, !dbg !14745
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !14744

if.then11:                                        ; preds = %if.then
  br label %do.body12, !dbg !14745

do.body12:                                        ; preds = %if.then11
  br label %do.body13, !dbg !14747

do.body13:                                        ; preds = %do.body12
  br label %do.end14, !dbg !14749

do.end14:                                         ; preds = %do.body13
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.33, i64 0, i64 0)) #10, !dbg !14747
  br label %do.body15, !dbg !14747

do.body15:                                        ; preds = %do.end14
  br label %do.body16, !dbg !14751

do.body16:                                        ; preds = %do.body15
  br label %do.end17, !dbg !14753

do.end17:                                         ; preds = %do.body16
  br label %do.body18, !dbg !14751

do.body18:                                        ; preds = %do.end17
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 420, i32 2313, i64 12) #5, !dbg !14755, !srcloc !14757
  br label %do.end19, !dbg !14755

do.end19:                                         ; preds = %do.body18
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 339) #5, !dbg !14758, !srcloc !14760
  br label %do.body20, !dbg !14751

do.body20:                                        ; preds = %do.end19
  br label %do.end21, !dbg !14761

do.end21:                                         ; preds = %do.body20
  br label %do.end22, !dbg !14751

do.end22:                                         ; preds = %do.end21
  br label %do.body23, !dbg !14747

do.body23:                                        ; preds = %do.end22
  br label %do.end24, !dbg !14763

do.end24:                                         ; preds = %do.body23
  br label %do.end25, !dbg !14747

do.end25:                                         ; preds = %do.end24
  br label %if.end, !dbg !14747

if.end:                                           ; preds = %do.end25, %if.then
  %22 = load i32, i32* %__ret_warn_on, align 4, !dbg !14744
  %tobool27 = icmp ne i32 %22, 0, !dbg !14744
  %lnot28 = xor i1 %tobool27, true, !dbg !14744
  %lnot30 = xor i1 %lnot28, true, !dbg !14744
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !14744
  %conv32 = sext i32 %lnot.ext31 to i64, !dbg !14744
  store i64 %conv32, i64* %tmp26, align 8, !dbg !14745
  %23 = load i64, i64* %tmp26, align 8, !dbg !14744
  br label %return, !dbg !14765

if.end33:                                         ; preds = %cond.end
  %24 = load i8*, i8** %buf, align 8, !dbg !14766
  %25 = load i64, i64* %len, align 8, !dbg !14767
  %26 = load %struct.device*, %struct.device** %sup, align 8, !dbg !14768
  %call34 = call i8* @dev_name(%struct.device* %26) #10, !dbg !14769
  %call35 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %24, i64 %25, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32, i64 0, i64 0), i8* %call34) #10, !dbg !14770
  %27 = load %struct.device*, %struct.device** %con, align 8, !dbg !14771
  %kobj36 = getelementptr inbounds %struct.device, %struct.device* %27, i32 0, i32 0, !dbg !14772
  %28 = load i8*, i8** %buf, align 8, !dbg !14773
  call void @sysfs_remove_link(%struct.kobject* %kobj36, i8* %28) #10, !dbg !14774
  %29 = load i8*, i8** %buf, align 8, !dbg !14775
  %30 = load i64, i64* %len, align 8, !dbg !14776
  %31 = load %struct.device*, %struct.device** %con, align 8, !dbg !14777
  %call37 = call i8* @dev_name(%struct.device* %31) #10, !dbg !14778
  %call38 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %29, i64 %30, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0), i8* %call37) #10, !dbg !14779
  %32 = load %struct.device*, %struct.device** %sup, align 8, !dbg !14780
  %kobj39 = getelementptr inbounds %struct.device, %struct.device* %32, i32 0, i32 0, !dbg !14781
  %33 = load i8*, i8** %buf, align 8, !dbg !14782
  call void @sysfs_remove_link(%struct.kobject* %kobj39, i8* %33) #10, !dbg !14783
  %34 = load i8*, i8** %buf, align 8, !dbg !14784
  call void @kfree(i8* %34) #10, !dbg !14785
  br label %return, !dbg !14786

return:                                           ; preds = %if.end33, %if.end
  ret void, !dbg !14786
}

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @sysfs_create_link(%struct.kobject*, %struct.kobject*, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_resume(%struct.device*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !14787 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !14791, metadata !DIExpression()), !dbg !14792
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !14793, metadata !DIExpression()), !dbg !14794
  ret i1 true, !dbg !14795
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !14796 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !14800, metadata !DIExpression()), !dbg !14801
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14802, metadata !DIExpression()), !dbg !14803
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !14804, metadata !DIExpression()), !dbg !14805
  ret void, !dbg !14806
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_inc(%struct.refcount_struct* %r, i32* %oldp) #0 !dbg !14807 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !14810, metadata !DIExpression()), !dbg !14811
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !14812, metadata !DIExpression()), !dbg !14813
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !14814
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !14815
  call void @__refcount_add(i32 1, %struct.refcount_struct* %0, i32* %1) #10, !dbg !14816
  ret void, !dbg !14817
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_add(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #0 !dbg !14818 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !14821, metadata !DIExpression()), !dbg !14825
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !14829, metadata !DIExpression()), !dbg !14830
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !14831, metadata !DIExpression()), !dbg !14833
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !8608, metadata !DIExpression()), !dbg !14834
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8618, metadata !DIExpression()), !dbg !14836
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !14837, metadata !DIExpression()), !dbg !14838
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !14839, metadata !DIExpression()), !dbg !14840
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !14841, metadata !DIExpression()), !dbg !14842
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !14843, metadata !DIExpression()), !dbg !14844
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !14845, metadata !DIExpression()), !dbg !14846
  call void @llvm.dbg.declare(metadata i32* %old, metadata !14847, metadata !DIExpression()), !dbg !14848
  %0 = load i32, i32* %i.addr, align 4, !dbg !14849
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !14850
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !14851
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !14852
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !14852
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !14853
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !14854
  %conv.i.i = trunc i64 %5 to i32, !dbg !14854
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #11, !dbg !14855
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !14856
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !14856
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #11, !dbg !14856
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !14857
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !14858
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !14833
  store i32 %10, i32* %__ret.i.i, align 4, !dbg !14833
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !14833
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !14833
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !14833
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #5, !dbg !14833, !srcloc !14859
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !14833
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !14833
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !14833
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !14833
  store i32 %15, i32* %old, align 4, !dbg !14848
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !14860
  %tobool = icmp ne i32* %16, null, !dbg !14860
  br i1 %tobool, label %if.then, label %if.end, !dbg !14862

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !14863
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !14864
  store i32 %17, i32* %18, align 4, !dbg !14865
  br label %if.end, !dbg !14866

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !14867
  %tobool1 = icmp ne i32 %19, 0, !dbg !14867
  %lnot = xor i1 %tobool1, true, !dbg !14867
  %lnot2 = xor i1 %lnot, true, !dbg !14867
  %lnot3 = xor i1 %lnot2, true, !dbg !14867
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !14867
  %conv = sext i32 %lnot.ext to i64, !dbg !14867
  %tobool4 = icmp ne i64 %conv, 0, !dbg !14867
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !14869

if.then5:                                         ; preds = %if.end
  %20 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !14870
  call void @refcount_warn_saturate(%struct.refcount_struct* %20, i32 2) #10, !dbg !14871
  br label %if.end17, !dbg !14871

if.else:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !14872
  %cmp = icmp slt i32 %21, 0, !dbg !14872
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !14872

lor.rhs:                                          ; preds = %if.else
  %22 = load i32, i32* %old, align 4, !dbg !14872
  %23 = load i32, i32* %i.addr, align 4, !dbg !14872
  %add = add i32 %22, %23, !dbg !14872
  %cmp7 = icmp slt i32 %add, 0, !dbg !14872
  br label %lor.end, !dbg !14872

lor.end:                                          ; preds = %lor.rhs, %if.else
  %24 = phi i1 [ true, %if.else ], [ %cmp7, %lor.rhs ]
  %lnot9 = xor i1 %24, true, !dbg !14872
  %lnot11 = xor i1 %lnot9, true, !dbg !14872
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !14872
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !14872
  %tobool14 = icmp ne i64 %conv13, 0, !dbg !14872
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !14874

if.then15:                                        ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !14875
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 1) #10, !dbg !14876
  br label %if.end16, !dbg !14876

if.end16:                                         ; preds = %if.then15, %lor.end
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then5
  ret void, !dbg !14877
}

; Function Attrs: noredzone
declare dso_local void @refcount_warn_saturate(%struct.refcount_struct*, i32) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !14878 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !14882, metadata !DIExpression()), !dbg !14887
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !14889, metadata !DIExpression()), !dbg !14890
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14891, metadata !DIExpression()), !dbg !14892
  %0 = load i64, i64* %size.addr, align 8, !dbg !14893
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !14895
  br i1 %1, label %if.then, label %if.end447, !dbg !14896

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !14897
  %tobool = icmp ne i64 %2, 0, !dbg !14897
  br i1 %tobool, label %if.end, label %if.then1, !dbg !14900

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !14901
  br label %return, !dbg !14901

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !14902
  %cmp = icmp ult i64 %3, 4096, !dbg !14904
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !14905

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !14906
  br label %return, !dbg !14906

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub = sub i64 %4, 1, !dbg !14907
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !14907
  br i1 %5, label %cond.true, label %cond.false442, !dbg !14907

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub4 = sub i64 %6, 1, !dbg !14907
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !14907
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !14907

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub6 = sub i64 %8, 1, !dbg !14907
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !14907
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !14907

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !14907

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub9 = sub i64 %9, 1, !dbg !14907
  %and = and i64 %sub9, -9223372036854775808, !dbg !14907
  %tobool10 = icmp ne i64 %and, 0, !dbg !14907
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !14907

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !14907

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub13 = sub i64 %10, 1, !dbg !14907
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !14907
  %tobool15 = icmp ne i64 %and14, 0, !dbg !14907
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !14907

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !14907

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub18 = sub i64 %11, 1, !dbg !14907
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !14907
  %tobool20 = icmp ne i64 %and19, 0, !dbg !14907
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !14907

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !14907

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub23 = sub i64 %12, 1, !dbg !14907
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !14907
  %tobool25 = icmp ne i64 %and24, 0, !dbg !14907
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !14907

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !14907

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub28 = sub i64 %13, 1, !dbg !14907
  %and29 = and i64 %sub28, 576460752303423488, !dbg !14907
  %tobool30 = icmp ne i64 %and29, 0, !dbg !14907
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !14907

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !14907

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub33 = sub i64 %14, 1, !dbg !14907
  %and34 = and i64 %sub33, 288230376151711744, !dbg !14907
  %tobool35 = icmp ne i64 %and34, 0, !dbg !14907
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !14907

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !14907

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub38 = sub i64 %15, 1, !dbg !14907
  %and39 = and i64 %sub38, 144115188075855872, !dbg !14907
  %tobool40 = icmp ne i64 %and39, 0, !dbg !14907
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !14907

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !14907

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub43 = sub i64 %16, 1, !dbg !14907
  %and44 = and i64 %sub43, 72057594037927936, !dbg !14907
  %tobool45 = icmp ne i64 %and44, 0, !dbg !14907
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !14907

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !14907

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub48 = sub i64 %17, 1, !dbg !14907
  %and49 = and i64 %sub48, 36028797018963968, !dbg !14907
  %tobool50 = icmp ne i64 %and49, 0, !dbg !14907
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !14907

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !14907

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub53 = sub i64 %18, 1, !dbg !14907
  %and54 = and i64 %sub53, 18014398509481984, !dbg !14907
  %tobool55 = icmp ne i64 %and54, 0, !dbg !14907
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !14907

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !14907

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub58 = sub i64 %19, 1, !dbg !14907
  %and59 = and i64 %sub58, 9007199254740992, !dbg !14907
  %tobool60 = icmp ne i64 %and59, 0, !dbg !14907
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !14907

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !14907

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub63 = sub i64 %20, 1, !dbg !14907
  %and64 = and i64 %sub63, 4503599627370496, !dbg !14907
  %tobool65 = icmp ne i64 %and64, 0, !dbg !14907
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !14907

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !14907

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub68 = sub i64 %21, 1, !dbg !14907
  %and69 = and i64 %sub68, 2251799813685248, !dbg !14907
  %tobool70 = icmp ne i64 %and69, 0, !dbg !14907
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !14907

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !14907

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub73 = sub i64 %22, 1, !dbg !14907
  %and74 = and i64 %sub73, 1125899906842624, !dbg !14907
  %tobool75 = icmp ne i64 %and74, 0, !dbg !14907
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !14907

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !14907

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub78 = sub i64 %23, 1, !dbg !14907
  %and79 = and i64 %sub78, 562949953421312, !dbg !14907
  %tobool80 = icmp ne i64 %and79, 0, !dbg !14907
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !14907

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !14907

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub83 = sub i64 %24, 1, !dbg !14907
  %and84 = and i64 %sub83, 281474976710656, !dbg !14907
  %tobool85 = icmp ne i64 %and84, 0, !dbg !14907
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !14907

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !14907

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub88 = sub i64 %25, 1, !dbg !14907
  %and89 = and i64 %sub88, 140737488355328, !dbg !14907
  %tobool90 = icmp ne i64 %and89, 0, !dbg !14907
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !14907

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !14907

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub93 = sub i64 %26, 1, !dbg !14907
  %and94 = and i64 %sub93, 70368744177664, !dbg !14907
  %tobool95 = icmp ne i64 %and94, 0, !dbg !14907
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !14907

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !14907

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub98 = sub i64 %27, 1, !dbg !14907
  %and99 = and i64 %sub98, 35184372088832, !dbg !14907
  %tobool100 = icmp ne i64 %and99, 0, !dbg !14907
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !14907

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !14907

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub103 = sub i64 %28, 1, !dbg !14907
  %and104 = and i64 %sub103, 17592186044416, !dbg !14907
  %tobool105 = icmp ne i64 %and104, 0, !dbg !14907
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !14907

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !14907

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub108 = sub i64 %29, 1, !dbg !14907
  %and109 = and i64 %sub108, 8796093022208, !dbg !14907
  %tobool110 = icmp ne i64 %and109, 0, !dbg !14907
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !14907

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !14907

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub113 = sub i64 %30, 1, !dbg !14907
  %and114 = and i64 %sub113, 4398046511104, !dbg !14907
  %tobool115 = icmp ne i64 %and114, 0, !dbg !14907
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !14907

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !14907

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub118 = sub i64 %31, 1, !dbg !14907
  %and119 = and i64 %sub118, 2199023255552, !dbg !14907
  %tobool120 = icmp ne i64 %and119, 0, !dbg !14907
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !14907

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !14907

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub123 = sub i64 %32, 1, !dbg !14907
  %and124 = and i64 %sub123, 1099511627776, !dbg !14907
  %tobool125 = icmp ne i64 %and124, 0, !dbg !14907
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !14907

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !14907

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub128 = sub i64 %33, 1, !dbg !14907
  %and129 = and i64 %sub128, 549755813888, !dbg !14907
  %tobool130 = icmp ne i64 %and129, 0, !dbg !14907
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !14907

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !14907

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub133 = sub i64 %34, 1, !dbg !14907
  %and134 = and i64 %sub133, 274877906944, !dbg !14907
  %tobool135 = icmp ne i64 %and134, 0, !dbg !14907
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !14907

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !14907

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub138 = sub i64 %35, 1, !dbg !14907
  %and139 = and i64 %sub138, 137438953472, !dbg !14907
  %tobool140 = icmp ne i64 %and139, 0, !dbg !14907
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !14907

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !14907

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub143 = sub i64 %36, 1, !dbg !14907
  %and144 = and i64 %sub143, 68719476736, !dbg !14907
  %tobool145 = icmp ne i64 %and144, 0, !dbg !14907
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !14907

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !14907

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub148 = sub i64 %37, 1, !dbg !14907
  %and149 = and i64 %sub148, 34359738368, !dbg !14907
  %tobool150 = icmp ne i64 %and149, 0, !dbg !14907
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !14907

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !14907

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub153 = sub i64 %38, 1, !dbg !14907
  %and154 = and i64 %sub153, 17179869184, !dbg !14907
  %tobool155 = icmp ne i64 %and154, 0, !dbg !14907
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !14907

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !14907

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub158 = sub i64 %39, 1, !dbg !14907
  %and159 = and i64 %sub158, 8589934592, !dbg !14907
  %tobool160 = icmp ne i64 %and159, 0, !dbg !14907
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !14907

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !14907

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub163 = sub i64 %40, 1, !dbg !14907
  %and164 = and i64 %sub163, 4294967296, !dbg !14907
  %tobool165 = icmp ne i64 %and164, 0, !dbg !14907
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !14907

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !14907

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub168 = sub i64 %41, 1, !dbg !14907
  %and169 = and i64 %sub168, 2147483648, !dbg !14907
  %tobool170 = icmp ne i64 %and169, 0, !dbg !14907
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !14907

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !14907

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub173 = sub i64 %42, 1, !dbg !14907
  %and174 = and i64 %sub173, 1073741824, !dbg !14907
  %tobool175 = icmp ne i64 %and174, 0, !dbg !14907
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !14907

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !14907

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub178 = sub i64 %43, 1, !dbg !14907
  %and179 = and i64 %sub178, 536870912, !dbg !14907
  %tobool180 = icmp ne i64 %and179, 0, !dbg !14907
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !14907

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !14907

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub183 = sub i64 %44, 1, !dbg !14907
  %and184 = and i64 %sub183, 268435456, !dbg !14907
  %tobool185 = icmp ne i64 %and184, 0, !dbg !14907
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !14907

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !14907

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub188 = sub i64 %45, 1, !dbg !14907
  %and189 = and i64 %sub188, 134217728, !dbg !14907
  %tobool190 = icmp ne i64 %and189, 0, !dbg !14907
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !14907

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !14907

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub193 = sub i64 %46, 1, !dbg !14907
  %and194 = and i64 %sub193, 67108864, !dbg !14907
  %tobool195 = icmp ne i64 %and194, 0, !dbg !14907
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !14907

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !14907

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub198 = sub i64 %47, 1, !dbg !14907
  %and199 = and i64 %sub198, 33554432, !dbg !14907
  %tobool200 = icmp ne i64 %and199, 0, !dbg !14907
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !14907

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !14907

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub203 = sub i64 %48, 1, !dbg !14907
  %and204 = and i64 %sub203, 16777216, !dbg !14907
  %tobool205 = icmp ne i64 %and204, 0, !dbg !14907
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !14907

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !14907

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub208 = sub i64 %49, 1, !dbg !14907
  %and209 = and i64 %sub208, 8388608, !dbg !14907
  %tobool210 = icmp ne i64 %and209, 0, !dbg !14907
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !14907

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !14907

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub213 = sub i64 %50, 1, !dbg !14907
  %and214 = and i64 %sub213, 4194304, !dbg !14907
  %tobool215 = icmp ne i64 %and214, 0, !dbg !14907
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !14907

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !14907

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub218 = sub i64 %51, 1, !dbg !14907
  %and219 = and i64 %sub218, 2097152, !dbg !14907
  %tobool220 = icmp ne i64 %and219, 0, !dbg !14907
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !14907

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !14907

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub223 = sub i64 %52, 1, !dbg !14907
  %and224 = and i64 %sub223, 1048576, !dbg !14907
  %tobool225 = icmp ne i64 %and224, 0, !dbg !14907
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !14907

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !14907

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub228 = sub i64 %53, 1, !dbg !14907
  %and229 = and i64 %sub228, 524288, !dbg !14907
  %tobool230 = icmp ne i64 %and229, 0, !dbg !14907
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !14907

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !14907

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub233 = sub i64 %54, 1, !dbg !14907
  %and234 = and i64 %sub233, 262144, !dbg !14907
  %tobool235 = icmp ne i64 %and234, 0, !dbg !14907
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !14907

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !14907

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub238 = sub i64 %55, 1, !dbg !14907
  %and239 = and i64 %sub238, 131072, !dbg !14907
  %tobool240 = icmp ne i64 %and239, 0, !dbg !14907
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !14907

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !14907

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub243 = sub i64 %56, 1, !dbg !14907
  %and244 = and i64 %sub243, 65536, !dbg !14907
  %tobool245 = icmp ne i64 %and244, 0, !dbg !14907
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !14907

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !14907

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub248 = sub i64 %57, 1, !dbg !14907
  %and249 = and i64 %sub248, 32768, !dbg !14907
  %tobool250 = icmp ne i64 %and249, 0, !dbg !14907
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !14907

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !14907

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub253 = sub i64 %58, 1, !dbg !14907
  %and254 = and i64 %sub253, 16384, !dbg !14907
  %tobool255 = icmp ne i64 %and254, 0, !dbg !14907
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !14907

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !14907

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub258 = sub i64 %59, 1, !dbg !14907
  %and259 = and i64 %sub258, 8192, !dbg !14907
  %tobool260 = icmp ne i64 %and259, 0, !dbg !14907
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !14907

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !14907

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub263 = sub i64 %60, 1, !dbg !14907
  %and264 = and i64 %sub263, 4096, !dbg !14907
  %tobool265 = icmp ne i64 %and264, 0, !dbg !14907
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !14907

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !14907

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub268 = sub i64 %61, 1, !dbg !14907
  %and269 = and i64 %sub268, 2048, !dbg !14907
  %tobool270 = icmp ne i64 %and269, 0, !dbg !14907
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !14907

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !14907

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub273 = sub i64 %62, 1, !dbg !14907
  %and274 = and i64 %sub273, 1024, !dbg !14907
  %tobool275 = icmp ne i64 %and274, 0, !dbg !14907
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !14907

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !14907

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub278 = sub i64 %63, 1, !dbg !14907
  %and279 = and i64 %sub278, 512, !dbg !14907
  %tobool280 = icmp ne i64 %and279, 0, !dbg !14907
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !14907

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !14907

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub283 = sub i64 %64, 1, !dbg !14907
  %and284 = and i64 %sub283, 256, !dbg !14907
  %tobool285 = icmp ne i64 %and284, 0, !dbg !14907
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !14907

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !14907

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub288 = sub i64 %65, 1, !dbg !14907
  %and289 = and i64 %sub288, 128, !dbg !14907
  %tobool290 = icmp ne i64 %and289, 0, !dbg !14907
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !14907

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !14907

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub293 = sub i64 %66, 1, !dbg !14907
  %and294 = and i64 %sub293, 64, !dbg !14907
  %tobool295 = icmp ne i64 %and294, 0, !dbg !14907
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !14907

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !14907

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub298 = sub i64 %67, 1, !dbg !14907
  %and299 = and i64 %sub298, 32, !dbg !14907
  %tobool300 = icmp ne i64 %and299, 0, !dbg !14907
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !14907

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !14907

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub303 = sub i64 %68, 1, !dbg !14907
  %and304 = and i64 %sub303, 16, !dbg !14907
  %tobool305 = icmp ne i64 %and304, 0, !dbg !14907
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !14907

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !14907

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub308 = sub i64 %69, 1, !dbg !14907
  %and309 = and i64 %sub308, 8, !dbg !14907
  %tobool310 = icmp ne i64 %and309, 0, !dbg !14907
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !14907

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !14907

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub313 = sub i64 %70, 1, !dbg !14907
  %and314 = and i64 %sub313, 4, !dbg !14907
  %tobool315 = icmp ne i64 %and314, 0, !dbg !14907
  %71 = zext i1 %tobool315 to i64, !dbg !14907
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !14907
  br label %cond.end, !dbg !14907

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !14907
  br label %cond.end317, !dbg !14907

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !14907
  br label %cond.end319, !dbg !14907

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !14907
  br label %cond.end321, !dbg !14907

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !14907
  br label %cond.end323, !dbg !14907

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !14907
  br label %cond.end325, !dbg !14907

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !14907
  br label %cond.end327, !dbg !14907

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !14907
  br label %cond.end329, !dbg !14907

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !14907
  br label %cond.end331, !dbg !14907

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !14907
  br label %cond.end333, !dbg !14907

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !14907
  br label %cond.end335, !dbg !14907

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !14907
  br label %cond.end337, !dbg !14907

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !14907
  br label %cond.end339, !dbg !14907

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !14907
  br label %cond.end341, !dbg !14907

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !14907
  br label %cond.end343, !dbg !14907

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !14907
  br label %cond.end345, !dbg !14907

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !14907
  br label %cond.end347, !dbg !14907

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !14907
  br label %cond.end349, !dbg !14907

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !14907
  br label %cond.end351, !dbg !14907

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !14907
  br label %cond.end353, !dbg !14907

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !14907
  br label %cond.end355, !dbg !14907

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !14907
  br label %cond.end357, !dbg !14907

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !14907
  br label %cond.end359, !dbg !14907

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !14907
  br label %cond.end361, !dbg !14907

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !14907
  br label %cond.end363, !dbg !14907

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !14907
  br label %cond.end365, !dbg !14907

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !14907
  br label %cond.end367, !dbg !14907

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !14907
  br label %cond.end369, !dbg !14907

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !14907
  br label %cond.end371, !dbg !14907

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !14907
  br label %cond.end373, !dbg !14907

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !14907
  br label %cond.end375, !dbg !14907

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !14907
  br label %cond.end377, !dbg !14907

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !14907
  br label %cond.end379, !dbg !14907

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !14907
  br label %cond.end381, !dbg !14907

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !14907
  br label %cond.end383, !dbg !14907

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !14907
  br label %cond.end385, !dbg !14907

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !14907
  br label %cond.end387, !dbg !14907

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !14907
  br label %cond.end389, !dbg !14907

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !14907
  br label %cond.end391, !dbg !14907

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !14907
  br label %cond.end393, !dbg !14907

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !14907
  br label %cond.end395, !dbg !14907

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !14907
  br label %cond.end397, !dbg !14907

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !14907
  br label %cond.end399, !dbg !14907

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !14907
  br label %cond.end401, !dbg !14907

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !14907
  br label %cond.end403, !dbg !14907

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !14907
  br label %cond.end405, !dbg !14907

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !14907
  br label %cond.end407, !dbg !14907

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !14907
  br label %cond.end409, !dbg !14907

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !14907
  br label %cond.end411, !dbg !14907

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !14907
  br label %cond.end413, !dbg !14907

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !14907
  br label %cond.end415, !dbg !14907

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !14907
  br label %cond.end417, !dbg !14907

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !14907
  br label %cond.end419, !dbg !14907

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !14907
  br label %cond.end421, !dbg !14907

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !14907
  br label %cond.end423, !dbg !14907

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !14907
  br label %cond.end425, !dbg !14907

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !14907
  br label %cond.end427, !dbg !14907

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !14907
  br label %cond.end429, !dbg !14907

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !14907
  br label %cond.end431, !dbg !14907

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !14907
  br label %cond.end433, !dbg !14907

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !14907
  br label %cond.end435, !dbg !14907

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !14907
  br label %cond.end437, !dbg !14907

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !14907
  br label %cond.end440, !dbg !14907

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !14907

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !14907
  br label %cond.end444, !dbg !14907

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !14907
  %sub443 = sub i64 %72, 1, !dbg !14907
  %call = call i32 @__ilog2_u64(i64 %sub443) #12, !dbg !14907
  br label %cond.end444, !dbg !14907

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !14907
  %sub446 = sub i32 %cond445, 12, !dbg !14908
  %add = add i32 %sub446, 1, !dbg !14909
  store i32 %add, i32* %retval, align 4, !dbg !14910
  br label %return, !dbg !14910

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !14911
  %dec = add i64 %73, -1, !dbg !14911
  store i64 %dec, i64* %size.addr, align 8, !dbg !14911
  %74 = load i64, i64* %size.addr, align 8, !dbg !14912
  %shr = lshr i64 %74, 12, !dbg !14912
  store i64 %shr, i64* %size.addr, align 8, !dbg !14912
  %75 = load i64, i64* %size.addr, align 8, !dbg !14913
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !14890
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !14914
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !14915
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #15, !dbg !14914, !srcloc !14916
  store i32 %78, i32* %bitpos.i, align 4, !dbg !14914
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !14917
  %add.i = add i32 %79, 1, !dbg !14918
  store i32 %add.i, i32* %retval, align 4, !dbg !14919
  br label %return, !dbg !14919

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !14920
  ret i32 %80, !dbg !14920
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !14921 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !14882, metadata !DIExpression()), !dbg !14925
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !14889, metadata !DIExpression()), !dbg !14927
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !14928, metadata !DIExpression()), !dbg !14929
  %0 = load i64, i64* %n.addr, align 8, !dbg !14930
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !14927
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !14931
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !14932
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #15, !dbg !14931, !srcloc !14916
  store i32 %3, i32* %bitpos.i, align 4, !dbg !14931
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !14933
  %add.i = add i32 %4, 1, !dbg !14934
  %sub = sub i32 %add.i, 1, !dbg !14935
  ret i32 %sub, !dbg !14936
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !14937 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !14941, metadata !DIExpression()), !dbg !14942
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !14943, metadata !DIExpression()), !dbg !14944
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14945, metadata !DIExpression()), !dbg !14946
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14947, metadata !DIExpression()), !dbg !14948
  %0 = load i8*, i8** %object.addr, align 8, !dbg !14949
  ret i8* %0, !dbg !14950
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @devlink_dev_release(%struct.device* %dev) #0 !dbg !14951 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %link = alloca %struct.device_link*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_link*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14952, metadata !DIExpression()), !dbg !14953
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !14954, metadata !DIExpression()), !dbg !14955
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14956, metadata !DIExpression()), !dbg !14958
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14958
  %1 = bitcast %struct.device* %0 to i8*, !dbg !14958
  store i8* %1, i8** %__mptr, align 8, !dbg !14958
  br label %do.body, !dbg !14958

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14959

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14958
  %add.ptr = getelementptr i8, i8* %2, i64 -48, !dbg !14958
  %3 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !14958
  store %struct.device_link* %3, %struct.device_link** %tmp, align 8, !dbg !14959
  %4 = load %struct.device_link*, %struct.device_link** %tmp, align 8, !dbg !14958
  store %struct.device_link* %4, %struct.device_link** %link, align 8, !dbg !14955
  %5 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !14961
  %callback_head = getelementptr inbounds %struct.device_link, %struct.device_link* %5, i32 0, i32 9, !dbg !14962
  call void @call_srcu(%struct.srcu_struct* @device_links_srcu, %struct.callback_head* %callback_head, void (%struct.callback_head*)* @__device_link_free_srcu) #10, !dbg !14963
  ret void, !dbg !14964
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @status_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !14965 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %output = alloca i8*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_link*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14966, metadata !DIExpression()), !dbg !14967
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !14968, metadata !DIExpression()), !dbg !14969
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14970, metadata !DIExpression()), !dbg !14971
  call void @llvm.dbg.declare(metadata i8** %output, metadata !14972, metadata !DIExpression()), !dbg !14973
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14974, metadata !DIExpression()), !dbg !14976
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14976
  %1 = bitcast %struct.device* %0 to i8*, !dbg !14976
  store i8* %1, i8** %__mptr, align 8, !dbg !14976
  br label %do.body, !dbg !14976

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14977

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14976
  %add.ptr = getelementptr i8, i8* %2, i64 -48, !dbg !14976
  %3 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !14976
  store %struct.device_link* %3, %struct.device_link** %tmp, align 8, !dbg !14977
  %4 = load %struct.device_link*, %struct.device_link** %tmp, align 8, !dbg !14976
  %status = getelementptr inbounds %struct.device_link, %struct.device_link* %4, i32 0, i32 5, !dbg !14979
  %5 = load i32, i32* %status, align 8, !dbg !14979
  switch i32 %5, label %sw.default [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb1
    i32 1, label %sw.bb2
    i32 2, label %sw.bb3
    i32 3, label %sw.bb4
    i32 4, label %sw.bb5
  ], !dbg !14980

sw.bb:                                            ; preds = %do.end
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.37, i64 0, i64 0), i8** %output, align 8, !dbg !14981
  br label %sw.epilog, !dbg !14983

sw.bb1:                                           ; preds = %do.end
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38, i64 0, i64 0), i8** %output, align 8, !dbg !14984
  br label %sw.epilog, !dbg !14985

sw.bb2:                                           ; preds = %do.end
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.39, i64 0, i64 0), i8** %output, align 8, !dbg !14986
  br label %sw.epilog, !dbg !14987

sw.bb3:                                           ; preds = %do.end
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i64 0, i64 0), i8** %output, align 8, !dbg !14988
  br label %sw.epilog, !dbg !14989

sw.bb4:                                           ; preds = %do.end
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i64 0, i64 0), i8** %output, align 8, !dbg !14990
  br label %sw.epilog, !dbg !14991

sw.bb5:                                           ; preds = %do.end
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.42, i64 0, i64 0), i8** %output, align 8, !dbg !14992
  br label %sw.epilog, !dbg !14993

sw.default:                                       ; preds = %do.end
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i64 0, i64 0), i8** %output, align 8, !dbg !14994
  br label %sw.epilog, !dbg !14995

sw.epilog:                                        ; preds = %sw.default, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !14996
  %7 = load i8*, i8** %output, align 8, !dbg !14997
  %call = call i32 (i8*, i8*, ...) @sysfs_emit(i8* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), i8* %7) #10, !dbg !14998
  %conv = sext i32 %call to i64, !dbg !14998
  ret i64 %conv, !dbg !14999
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @auto_remove_on_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15000 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %link = alloca %struct.device_link*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_link*, align 8
  %output = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15001, metadata !DIExpression()), !dbg !15002
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15003, metadata !DIExpression()), !dbg !15004
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15005, metadata !DIExpression()), !dbg !15006
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !15007, metadata !DIExpression()), !dbg !15008
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15009, metadata !DIExpression()), !dbg !15011
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15011
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15011
  store i8* %1, i8** %__mptr, align 8, !dbg !15011
  br label %do.body, !dbg !15011

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15012

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15011
  %add.ptr = getelementptr i8, i8* %2, i64 -48, !dbg !15011
  %3 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !15011
  store %struct.device_link* %3, %struct.device_link** %tmp, align 8, !dbg !15012
  %4 = load %struct.device_link*, %struct.device_link** %tmp, align 8, !dbg !15011
  store %struct.device_link* %4, %struct.device_link** %link, align 8, !dbg !15008
  call void @llvm.dbg.declare(metadata i8** %output, metadata !15014, metadata !DIExpression()), !dbg !15015
  %5 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !15016
  %flags = getelementptr inbounds %struct.device_link, %struct.device_link* %5, i32 0, i32 6, !dbg !15018
  %6 = load i32, i32* %flags, align 4, !dbg !15018
  %conv = zext i32 %6 to i64, !dbg !15016
  %and = and i64 %conv, 16, !dbg !15019
  %tobool = icmp ne i64 %and, 0, !dbg !15019
  br i1 %tobool, label %if.then, label %if.else, !dbg !15020

if.then:                                          ; preds = %do.end
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.46, i64 0, i64 0), i8** %output, align 8, !dbg !15021
  br label %if.end7, !dbg !15022

if.else:                                          ; preds = %do.end
  %7 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !15023
  %flags1 = getelementptr inbounds %struct.device_link, %struct.device_link* %7, i32 0, i32 6, !dbg !15025
  %8 = load i32, i32* %flags1, align 4, !dbg !15025
  %conv2 = zext i32 %8 to i64, !dbg !15023
  %and3 = and i64 %conv2, 2, !dbg !15026
  %tobool4 = icmp ne i64 %and3, 0, !dbg !15026
  br i1 %tobool4, label %if.then5, label %if.else6, !dbg !15027

if.then5:                                         ; preds = %if.else
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.47, i64 0, i64 0), i8** %output, align 8, !dbg !15028
  br label %if.end, !dbg !15029

if.else6:                                         ; preds = %if.else
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i64 0, i64 0), i8** %output, align 8, !dbg !15030
  br label %if.end

if.end:                                           ; preds = %if.else6, %if.then5
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !15031
  %10 = load i8*, i8** %output, align 8, !dbg !15032
  %call = call i32 (i8*, i8*, ...) @sysfs_emit(i8* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), i8* %10) #10, !dbg !15033
  %conv8 = sext i32 %call to i64, !dbg !15033
  ret i64 %conv8, !dbg !15034
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @runtime_pm_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15035 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %link = alloca %struct.device_link*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_link*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15036, metadata !DIExpression()), !dbg !15037
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15038, metadata !DIExpression()), !dbg !15039
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15040, metadata !DIExpression()), !dbg !15041
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !15042, metadata !DIExpression()), !dbg !15043
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15044, metadata !DIExpression()), !dbg !15046
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15046
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15046
  store i8* %1, i8** %__mptr, align 8, !dbg !15046
  br label %do.body, !dbg !15046

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15047

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15046
  %add.ptr = getelementptr i8, i8* %2, i64 -48, !dbg !15046
  %3 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !15046
  store %struct.device_link* %3, %struct.device_link** %tmp, align 8, !dbg !15047
  %4 = load %struct.device_link*, %struct.device_link** %tmp, align 8, !dbg !15046
  store %struct.device_link* %4, %struct.device_link** %link, align 8, !dbg !15043
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !15049
  %6 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !15050
  %flags = getelementptr inbounds %struct.device_link, %struct.device_link* %6, i32 0, i32 6, !dbg !15051
  %7 = load i32, i32* %flags, align 4, !dbg !15051
  %conv = zext i32 %7 to i64, !dbg !15050
  %and = and i64 %conv, 4, !dbg !15052
  %tobool = icmp ne i64 %and, 0, !dbg !15053
  %lnot = xor i1 %tobool, true, !dbg !15053
  %lnot1 = xor i1 %lnot, true, !dbg !15054
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !15054
  %call = call i32 (i8*, i8*, ...) @sysfs_emit(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i32 %lnot.ext) #10, !dbg !15055
  %conv2 = sext i32 %call to i64, !dbg !15055
  ret i64 %conv2, !dbg !15056
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sync_state_only_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15057 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %link = alloca %struct.device_link*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_link*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15058, metadata !DIExpression()), !dbg !15059
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15060, metadata !DIExpression()), !dbg !15061
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15062, metadata !DIExpression()), !dbg !15063
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !15064, metadata !DIExpression()), !dbg !15065
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15066, metadata !DIExpression()), !dbg !15068
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15068
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15068
  store i8* %1, i8** %__mptr, align 8, !dbg !15068
  br label %do.body, !dbg !15068

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15069

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15068
  %add.ptr = getelementptr i8, i8* %2, i64 -48, !dbg !15068
  %3 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !15068
  store %struct.device_link* %3, %struct.device_link** %tmp, align 8, !dbg !15069
  %4 = load %struct.device_link*, %struct.device_link** %tmp, align 8, !dbg !15068
  store %struct.device_link* %4, %struct.device_link** %link, align 8, !dbg !15065
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !15071
  %6 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !15072
  %flags = getelementptr inbounds %struct.device_link, %struct.device_link* %6, i32 0, i32 6, !dbg !15073
  %7 = load i32, i32* %flags, align 4, !dbg !15073
  %conv = zext i32 %7 to i64, !dbg !15072
  %and = and i64 %conv, 128, !dbg !15074
  %tobool = icmp ne i64 %and, 0, !dbg !15075
  %lnot = xor i1 %tobool, true, !dbg !15075
  %lnot1 = xor i1 %lnot, true, !dbg !15076
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !15076
  %call = call i32 (i8*, i8*, ...) @sysfs_emit(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i32 %lnot.ext) #10, !dbg !15077
  %conv2 = sext i32 %call to i64, !dbg !15077
  ret i64 %conv2, !dbg !15078
}

; Function Attrs: noredzone
declare dso_local void @call_srcu(%struct.srcu_struct*, %struct.callback_head*, void (%struct.callback_head*)*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__device_link_free_srcu(%struct.callback_head* %rhead) #0 !dbg !15079 {
entry:
  %rhead.addr = alloca %struct.callback_head*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_link*, align 8
  store %struct.callback_head* %rhead, %struct.callback_head** %rhead.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.callback_head** %rhead.addr, metadata !15080, metadata !DIExpression()), !dbg !15081
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15082, metadata !DIExpression()), !dbg !15084
  %0 = load %struct.callback_head*, %struct.callback_head** %rhead.addr, align 8, !dbg !15084
  %1 = bitcast %struct.callback_head* %0 to i8*, !dbg !15084
  store i8* %1, i8** %__mptr, align 8, !dbg !15084
  br label %do.body, !dbg !15084

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15085

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15084
  %add.ptr = getelementptr i8, i8* %2, i64 -760, !dbg !15084
  %3 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !15084
  store %struct.device_link* %3, %struct.device_link** %tmp, align 8, !dbg !15085
  %4 = load %struct.device_link*, %struct.device_link** %tmp, align 8, !dbg !15084
  call void @device_link_free(%struct.device_link* %4) #10, !dbg !15087
  ret void, !dbg !15088
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_link_free(%struct.device_link* %link) #0 !dbg !15089 {
entry:
  %link.addr = alloca %struct.device_link*, align 8
  store %struct.device_link* %link, %struct.device_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_link** %link.addr, metadata !15090, metadata !DIExpression()), !dbg !15091
  br label %while.cond, !dbg !15092

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.device_link*, %struct.device_link** %link.addr, align 8, !dbg !15093
  %rpm_active = getelementptr inbounds %struct.device_link, %struct.device_link* %0, i32 0, i32 7, !dbg !15094
  %call = call zeroext i1 @refcount_dec_not_one(%struct.refcount_struct* %rpm_active) #10, !dbg !15095
  br i1 %call, label %while.body, label %while.end, !dbg !15092

while.body:                                       ; preds = %while.cond
  %1 = load %struct.device_link*, %struct.device_link** %link.addr, align 8, !dbg !15096
  %supplier = getelementptr inbounds %struct.device_link, %struct.device_link* %1, i32 0, i32 0, !dbg !15097
  %2 = load %struct.device*, %struct.device** %supplier, align 8, !dbg !15097
  %call1 = call i32 @pm_runtime_put(%struct.device* %2) #10, !dbg !15098
  br label %while.cond, !dbg !15092, !llvm.loop !15099

while.end:                                        ; preds = %while.cond
  %3 = load %struct.device_link*, %struct.device_link** %link.addr, align 8, !dbg !15101
  %consumer = getelementptr inbounds %struct.device_link, %struct.device_link* %3, i32 0, i32 2, !dbg !15102
  %4 = load %struct.device*, %struct.device** %consumer, align 8, !dbg !15102
  call void @put_device(%struct.device* %4) #10, !dbg !15103
  %5 = load %struct.device_link*, %struct.device_link** %link.addr, align 8, !dbg !15104
  %supplier2 = getelementptr inbounds %struct.device_link, %struct.device_link* %5, i32 0, i32 0, !dbg !15105
  %6 = load %struct.device*, %struct.device** %supplier2, align 8, !dbg !15105
  call void @put_device(%struct.device* %6) #10, !dbg !15106
  %7 = load %struct.device_link*, %struct.device_link** %link.addr, align 8, !dbg !15107
  %8 = bitcast %struct.device_link* %7 to i8*, !dbg !15107
  call void @kfree(i8* %8) #10, !dbg !15108
  ret void, !dbg !15109
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @refcount_dec_not_one(%struct.refcount_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !15110 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !15115, metadata !DIExpression()), !dbg !15116
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !15117
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !15118
  %1 = load i8*, i8** %name, align 8, !dbg !15118
  ret i8* %1, !dbg !15119
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add_rcu(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !15120 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  %_r_a_p__v = alloca i64, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !15123, metadata !DIExpression()), !dbg !15124
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !15125, metadata !DIExpression()), !dbg !15126
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !15127, metadata !DIExpression()), !dbg !15128
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15129
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15131
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15132
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #10, !dbg !15133
  br i1 %call, label %if.end, label %if.then, !dbg !15134

if.then:                                          ; preds = %entry
  br label %return, !dbg !15135

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15136
  %4 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15137
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 0, !dbg !15138
  store %struct.list_head* %3, %struct.list_head** %next1, align 8, !dbg !15139
  %5 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15140
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15141
  %prev2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 1, !dbg !15142
  store %struct.list_head* %5, %struct.list_head** %prev2, align 8, !dbg !15143
  br label %do.body, !dbg !15144

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %_r_a_p__v, metadata !15145, metadata !DIExpression()), !dbg !15147
  %7 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15147
  %8 = ptrtoint %struct.list_head* %7 to i64, !dbg !15147
  store i64 %8, i64* %_r_a_p__v, align 8, !dbg !15147
  br i1 false, label %land.lhs.true, label %if.else, !dbg !15148

land.lhs.true:                                    ; preds = %do.body
  %9 = load i64, i64* %_r_a_p__v, align 8, !dbg !15148
  %cmp = icmp eq i64 %9, 0, !dbg !15148
  br i1 %cmp, label %if.then3, label %if.else, !dbg !15147

if.then3:                                         ; preds = %land.lhs.true
  br label %do.body4, !dbg !15148

do.body4:                                         ; preds = %if.then3
  br label %do.body5, !dbg !15150

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !15152

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !15150

do.body6:                                         ; preds = %do.end
  %10 = load i64, i64* %_r_a_p__v, align 8, !dbg !15154
  %11 = inttoptr i64 %10 to %struct.list_head*, !dbg !15154
  %12 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15154
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %12, i32 0, i32 0, !dbg !15154
  store volatile %struct.list_head* %11, %struct.list_head** %next7, align 8, !dbg !15154
  br label %do.end8, !dbg !15154

do.end8:                                          ; preds = %do.body6
  br label %do.end9, !dbg !15150

do.end9:                                          ; preds = %do.end8
  br label %if.end21, !dbg !15150

if.else:                                          ; preds = %land.lhs.true, %do.body
  br label %do.body10, !dbg !15148

do.body10:                                        ; preds = %if.else
  br label %do.body11, !dbg !15156

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !15158

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !15156, !srcloc !15160
  br label %do.body13, !dbg !15156

do.body13:                                        ; preds = %do.end12
  br label %do.body14, !dbg !15161

do.body14:                                        ; preds = %do.body13
  br label %do.end15, !dbg !15163

do.end15:                                         ; preds = %do.body14
  br label %do.body16, !dbg !15161

do.body16:                                        ; preds = %do.end15
  %13 = load i64, i64* %_r_a_p__v, align 8, !dbg !15165
  %14 = inttoptr i64 %13 to %struct.list_head*, !dbg !15165
  %15 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15165
  %next17 = getelementptr inbounds %struct.list_head, %struct.list_head* %15, i32 0, i32 0, !dbg !15165
  store volatile %struct.list_head* %14, %struct.list_head** %next17, align 8, !dbg !15165
  br label %do.end18, !dbg !15165

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !15161

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !15156

do.end20:                                         ; preds = %do.end19
  br label %if.end21

if.end21:                                         ; preds = %do.end20, %do.end9
  br label %do.end22, !dbg !15147

do.end22:                                         ; preds = %if.end21
  %16 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15167
  %17 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15168
  %prev23 = getelementptr inbounds %struct.list_head, %struct.list_head* %17, i32 0, i32 1, !dbg !15169
  store %struct.list_head* %16, %struct.list_head** %prev23, align 8, !dbg !15170
  br label %return, !dbg !15171

return:                                           ; preds = %do.end22, %if.then
  ret void, !dbg !15171
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !15172 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !15175, metadata !DIExpression()), !dbg !15176
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !15177, metadata !DIExpression()), !dbg !15178
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !15179, metadata !DIExpression()), !dbg !15180
  ret i1 true, !dbg !15181
}

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_idle(%struct.device*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kref_put(%struct.kref* %kref, void (%struct.kref*)* %release) #0 !dbg !15182 {
entry:
  %retval = alloca i32, align 4
  %kref.addr = alloca %struct.kref*, align 8
  %release.addr = alloca void (%struct.kref*)*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !15186, metadata !DIExpression()), !dbg !15187
  store void (%struct.kref*)* %release, void (%struct.kref*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.kref*)** %release.addr, metadata !15188, metadata !DIExpression()), !dbg !15189
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !15190
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !15192
  %call = call zeroext i1 @refcount_dec_and_test(%struct.refcount_struct* %refcount) #10, !dbg !15193
  br i1 %call, label %if.then, label %if.end, !dbg !15194

if.then:                                          ; preds = %entry
  %1 = load void (%struct.kref*)*, void (%struct.kref*)** %release.addr, align 8, !dbg !15195
  %2 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !15197
  call void %1(%struct.kref* %2) #10, !dbg !15195
  store i32 1, i32* %retval, align 4, !dbg !15198
  br label %return, !dbg !15198

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !15199
  br label %return, !dbg !15199

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !15200
  ret i32 %3, !dbg !15200
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__device_link_del(%struct.kref* %kref) #0 !dbg !15201 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  %link = alloca %struct.device_link*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_link*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !15202, metadata !DIExpression()), !dbg !15203
  call void @llvm.dbg.declare(metadata %struct.device_link** %link, metadata !15204, metadata !DIExpression()), !dbg !15205
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15206, metadata !DIExpression()), !dbg !15208
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !15208
  %1 = bitcast %struct.kref* %0 to i8*, !dbg !15208
  store i8* %1, i8** %__mptr, align 8, !dbg !15208
  br label %do.body, !dbg !15208

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15209

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15208
  %add.ptr = getelementptr i8, i8* %2, i64 -756, !dbg !15208
  %3 = bitcast i8* %add.ptr to %struct.device_link*, !dbg !15208
  store %struct.device_link* %3, %struct.device_link** %tmp, align 8, !dbg !15209
  %4 = load %struct.device_link*, %struct.device_link** %tmp, align 8, !dbg !15208
  store %struct.device_link* %4, %struct.device_link** %link, align 8, !dbg !15205
  %5 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !15211
  call void @pm_runtime_drop_link(%struct.device_link* %5) #10, !dbg !15212
  %6 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !15213
  %s_node = getelementptr inbounds %struct.device_link, %struct.device_link* %6, i32 0, i32 1, !dbg !15214
  call void @list_del_rcu(%struct.list_head* %s_node) #10, !dbg !15215
  %7 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !15216
  %c_node = getelementptr inbounds %struct.device_link, %struct.device_link* %7, i32 0, i32 3, !dbg !15217
  call void @list_del_rcu(%struct.list_head* %c_node) #10, !dbg !15218
  %8 = load %struct.device_link*, %struct.device_link** %link, align 8, !dbg !15219
  %link_dev = getelementptr inbounds %struct.device_link, %struct.device_link* %8, i32 0, i32 4, !dbg !15220
  call void @device_unregister(%struct.device* %link_dev) #10, !dbg !15221
  ret void, !dbg !15222
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @refcount_dec_and_test(%struct.refcount_struct* %r) #0 !dbg !15223 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !15226, metadata !DIExpression()), !dbg !15227
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !15228
  %call = call zeroext i1 @__refcount_dec_and_test(%struct.refcount_struct* %0, i32* null) #10, !dbg !15229
  ret i1 %call, !dbg !15230
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_dec_and_test(%struct.refcount_struct* %r, i32* %oldp) #0 !dbg !15231 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !15234, metadata !DIExpression()), !dbg !15235
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !15236, metadata !DIExpression()), !dbg !15237
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !15238
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !15239
  %call = call zeroext i1 @__refcount_sub_and_test(i32 1, %struct.refcount_struct* %0, i32* %1) #10, !dbg !15240
  ret i1 %call, !dbg !15241
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_sub_and_test(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #0 !dbg !15242 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !15245, metadata !DIExpression()), !dbg !15247
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !15251, metadata !DIExpression()), !dbg !15252
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !15253, metadata !DIExpression()), !dbg !15255
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !8608, metadata !DIExpression()), !dbg !15256
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8618, metadata !DIExpression()), !dbg !15258
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !15259, metadata !DIExpression()), !dbg !15260
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !15261, metadata !DIExpression()), !dbg !15262
  %retval = alloca i1, align 1
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !15263, metadata !DIExpression()), !dbg !15264
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !15265, metadata !DIExpression()), !dbg !15266
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !15267, metadata !DIExpression()), !dbg !15268
  call void @llvm.dbg.declare(metadata i32* %old, metadata !15269, metadata !DIExpression()), !dbg !15270
  %0 = load i32, i32* %i.addr, align 4, !dbg !15271
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !15272
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !15273
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !15274
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !15274
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !15275
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !15276
  %conv.i.i = trunc i64 %5 to i32, !dbg !15276
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #11, !dbg !15277
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !15278
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !15278
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #11, !dbg !15278
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !15279
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !15280
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !15255
  %sub.i.i = sub i32 0, %10, !dbg !15255
  store i32 %sub.i.i, i32* %__ret.i.i, align 4, !dbg !15255
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !15255
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !15255
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !15255
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #5, !dbg !15255, !srcloc !15281
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !15255
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !15255
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !15255
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !15255
  store i32 %15, i32* %old, align 4, !dbg !15270
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !15282
  %tobool = icmp ne i32* %16, null, !dbg !15282
  br i1 %tobool, label %if.then, label %if.end, !dbg !15284

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !15285
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !15286
  store i32 %17, i32* %18, align 4, !dbg !15287
  br label %if.end, !dbg !15288

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !15289
  %20 = load i32, i32* %i.addr, align 4, !dbg !15291
  %cmp = icmp eq i32 %19, %20, !dbg !15292
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !15293

if.then1:                                         ; preds = %if.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !15294, !srcloc !15296
  store i1 true, i1* %retval, align 1, !dbg !15297
  br label %return, !dbg !15297

if.end2:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !15298
  %cmp3 = icmp slt i32 %21, 0, !dbg !15298
  br i1 %cmp3, label %lor.end, label %lor.rhs, !dbg !15298

lor.rhs:                                          ; preds = %if.end2
  %22 = load i32, i32* %old, align 4, !dbg !15298
  %23 = load i32, i32* %i.addr, align 4, !dbg !15298
  %sub = sub i32 %22, %23, !dbg !15298
  %cmp4 = icmp slt i32 %sub, 0, !dbg !15298
  br label %lor.end, !dbg !15298

lor.end:                                          ; preds = %lor.rhs, %if.end2
  %24 = phi i1 [ true, %if.end2 ], [ %cmp4, %lor.rhs ]
  %lnot = xor i1 %24, true, !dbg !15298
  %lnot5 = xor i1 %lnot, true, !dbg !15298
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !15298
  %conv = sext i32 %lnot.ext to i64, !dbg !15298
  %tobool6 = icmp ne i64 %conv, 0, !dbg !15298
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !15300

if.then7:                                         ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !15301
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 3) #10, !dbg !15302
  br label %if.end8, !dbg !15302

if.end8:                                          ; preds = %if.then7, %lor.end
  store i1 false, i1* %retval, align 1, !dbg !15303
  br label %return, !dbg !15303

return:                                           ; preds = %if.end8, %if.then1
  %26 = load i1, i1* %retval, align 1, !dbg !15304
  ret i1 %26, !dbg !15304
}

; Function Attrs: noredzone
declare dso_local void @pm_runtime_drop_link(%struct.device_link*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del_rcu(%struct.list_head* %entry1) #0 !dbg !15305 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !15306, metadata !DIExpression()), !dbg !15307
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !15308
  call void @__list_del_entry(%struct.list_head* %0) #10, !dbg !15309
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !15310
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !15311
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !15312
  ret void, !dbg !15313
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !15314 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !15315, metadata !DIExpression()), !dbg !15316
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !15317
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #10, !dbg !15319
  br i1 %call, label %if.end, label %if.then, !dbg !15320

if.then:                                          ; preds = %entry
  br label %return, !dbg !15321

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !15322
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !15323
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !15323
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !15324
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !15325
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15325
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #10, !dbg !15326
  br label %return, !dbg !15327

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !15327
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !15328 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !15331, metadata !DIExpression()), !dbg !15332
  ret i1 true, !dbg !15333
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !15334 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !15335, metadata !DIExpression()), !dbg !15336
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !15337, metadata !DIExpression()), !dbg !15338
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15339
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15340
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !15341
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !15342
  br label %do.body, !dbg !15343

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !15344

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !15346

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !15344

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15348
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15348
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !15348
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !15348
  br label %do.end5, !dbg !15348

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !15344

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !15350
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @dev_has_sync_state(%struct.device* %dev) #0 !dbg !15351 {
entry:
  %retval = alloca i1, align 1
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15352, metadata !DIExpression()), !dbg !15353
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15354
  %tobool = icmp ne %struct.device* %0, null, !dbg !15354
  br i1 %tobool, label %if.end, label %if.then, !dbg !15356

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !15357
  br label %return, !dbg !15357

if.end:                                           ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15358
  %driver = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 6, !dbg !15360
  %2 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !15360
  %tobool1 = icmp ne %struct.device_driver* %2, null, !dbg !15358
  br i1 %tobool1, label %land.lhs.true, label %if.end5, !dbg !15361

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15362
  %driver2 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 6, !dbg !15363
  %4 = load %struct.device_driver*, %struct.device_driver** %driver2, align 8, !dbg !15363
  %sync_state = getelementptr inbounds %struct.device_driver, %struct.device_driver* %4, i32 0, i32 9, !dbg !15364
  %5 = load void (%struct.device*)*, void (%struct.device*)** %sync_state, align 8, !dbg !15364
  %tobool3 = icmp ne void (%struct.device*)* %5, null, !dbg !15362
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !15365

if.then4:                                         ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !15366
  br label %return, !dbg !15366

if.end5:                                          ; preds = %land.lhs.true, %if.end
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15367
  %bus = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 5, !dbg !15369
  %7 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !15369
  %tobool6 = icmp ne %struct.bus_type* %7, null, !dbg !15367
  br i1 %tobool6, label %land.lhs.true7, label %if.end12, !dbg !15370

land.lhs.true7:                                   ; preds = %if.end5
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15371
  %bus8 = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 5, !dbg !15372
  %9 = load %struct.bus_type*, %struct.bus_type** %bus8, align 8, !dbg !15372
  %sync_state9 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %9, i32 0, i32 9, !dbg !15373
  %10 = load void (%struct.device*)*, void (%struct.device*)** %sync_state9, align 8, !dbg !15373
  %tobool10 = icmp ne void (%struct.device*)* %10, null, !dbg !15371
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !15374

if.then11:                                        ; preds = %land.lhs.true7
  store i1 true, i1* %retval, align 1, !dbg !15375
  br label %return, !dbg !15375

if.end12:                                         ; preds = %land.lhs.true7, %if.end5
  store i1 false, i1* %retval, align 1, !dbg !15376
  br label %return, !dbg !15376

return:                                           ; preds = %if.end12, %if.then11, %if.then4, %if.then
  %11 = load i1, i1* %retval, align 1, !dbg !15377
  ret i1 %11, !dbg !15377
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !15378 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !15379, metadata !DIExpression()), !dbg !15380
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !15381, metadata !DIExpression()), !dbg !15382
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15383
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !15384
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !15385
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !15385
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !15386
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #10, !dbg !15387
  ret void, !dbg !15388
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !15389 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !15390, metadata !DIExpression()), !dbg !15391
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !15392, metadata !DIExpression()), !dbg !15393
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !15394, metadata !DIExpression()), !dbg !15395
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15396
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15398
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15399
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #10, !dbg !15400
  br i1 %call, label %if.end, label %if.then, !dbg !15401

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !15402

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15403
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15404
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !15405
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !15406
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15407
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15408
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !15409
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !15410
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15411
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15412
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !15413
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !15414
  br label %do.body, !dbg !15415

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !15416

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !15418

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !15416

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15420
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15420
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !15420
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !15420
  br label %do.end7, !dbg !15420

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !15416

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !15422
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @waiting_for_supplier_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15423 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %val = alloca i8, align 1
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15424, metadata !DIExpression()), !dbg !15425
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15426, metadata !DIExpression()), !dbg !15427
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15428, metadata !DIExpression()), !dbg !15429
  call void @llvm.dbg.declare(metadata i8* %val, metadata !15430, metadata !DIExpression()), !dbg !15431
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15432
  call void @device_lock(%struct.device* %0) #10, !dbg !15433
  call void @mutex_lock(%struct.mutex* @wfs_lock) #10, !dbg !15434
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15435
  %links = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 10, !dbg !15436
  %needs_suppliers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 2, !dbg !15437
  %call = call i32 @list_empty(%struct.list_head* %needs_suppliers) #10, !dbg !15438
  %tobool = icmp ne i32 %call, 0, !dbg !15438
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !15439

land.rhs:                                         ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15440
  %links1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 10, !dbg !15441
  %need_for_probe = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links1, i32 0, i32 4, !dbg !15442
  %3 = load i8, i8* %need_for_probe, align 8, !dbg !15442
  %tobool2 = trunc i8 %3 to i1, !dbg !15442
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !15443
  %frombool = zext i1 %4 to i8, !dbg !15444
  store i8 %frombool, i8* %val, align 1, !dbg !15444
  call void @mutex_unlock(%struct.mutex* @wfs_lock) #10, !dbg !15445
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15446
  call void @device_unlock(%struct.device* %5) #10, !dbg !15447
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15448
  %7 = load i8, i8* %val, align 1, !dbg !15449
  %tobool3 = trunc i8 %7 to i1, !dbg !15449
  %conv = zext i1 %tobool3 to i32, !dbg !15449
  %call4 = call i32 (i8*, i8*, ...) @sysfs_emit(i8* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0), i32 %conv) #10, !dbg !15450
  %conv5 = sext i32 %call4 to i64, !dbg !15450
  ret i64 %conv5, !dbg !15451
}

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @fw_devlink_is_permissive() #0 !dbg !15452 {
entry:
  %0 = load i32, i32* @fw_devlink_flags, align 4, !dbg !15453
  %conv = zext i32 %0 to i64, !dbg !15453
  %cmp = icmp eq i64 %conv, 128, !dbg !15454
  ret i1 %cmp, !dbg !15455
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_splice(%struct.list_head* %list, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !15456 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  %first = alloca %struct.list_head*, align 8
  %last = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !15459, metadata !DIExpression()), !dbg !15460
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !15461, metadata !DIExpression()), !dbg !15462
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !15463, metadata !DIExpression()), !dbg !15464
  call void @llvm.dbg.declare(metadata %struct.list_head** %first, metadata !15465, metadata !DIExpression()), !dbg !15466
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !15467
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !15468
  %1 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !15468
  store %struct.list_head* %1, %struct.list_head** %first, align 8, !dbg !15466
  call void @llvm.dbg.declare(metadata %struct.list_head** %last, metadata !15469, metadata !DIExpression()), !dbg !15470
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !15471
  %prev2 = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !15472
  %3 = load %struct.list_head*, %struct.list_head** %prev2, align 8, !dbg !15472
  store %struct.list_head* %3, %struct.list_head** %last, align 8, !dbg !15470
  %4 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15473
  %5 = load %struct.list_head*, %struct.list_head** %first, align 8, !dbg !15474
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %5, i32 0, i32 1, !dbg !15475
  store %struct.list_head* %4, %struct.list_head** %prev3, align 8, !dbg !15476
  %6 = load %struct.list_head*, %struct.list_head** %first, align 8, !dbg !15477
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15478
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %7, i32 0, i32 0, !dbg !15479
  store %struct.list_head* %6, %struct.list_head** %next4, align 8, !dbg !15480
  %8 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15481
  %9 = load %struct.list_head*, %struct.list_head** %last, align 8, !dbg !15482
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %9, i32 0, i32 0, !dbg !15483
  store %struct.list_head* %8, %struct.list_head** %next5, align 8, !dbg !15484
  %10 = load %struct.list_head*, %struct.list_head** %last, align 8, !dbg !15485
  %11 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15486
  %prev6 = getelementptr inbounds %struct.list_head, %struct.list_head* %11, i32 0, i32 1, !dbg !15487
  store %struct.list_head* %10, %struct.list_head** %prev6, align 8, !dbg !15488
  ret void, !dbg !15489
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_tsk_thread_flag(%struct.task_struct* %tsk, i32 %flag) #0 !dbg !15490 {
entry:
  %tsk.addr = alloca %struct.task_struct*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.task_struct* %tsk, %struct.task_struct** %tsk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %tsk.addr, metadata !15493, metadata !DIExpression()), !dbg !15494
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !15495, metadata !DIExpression()), !dbg !15496
  %0 = load %struct.task_struct*, %struct.task_struct** %tsk.addr, align 8, !dbg !15497
  %call = call %struct.thread_info* @task_thread_info(%struct.task_struct* %0) #10, !dbg !15498
  %1 = load i32, i32* %flag.addr, align 4, !dbg !15499
  call void @set_ti_thread_flag(%struct.thread_info* %call, i32 %1) #10, !dbg !15500
  ret void, !dbg !15501
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_ti_thread_flag(%struct.thread_info* %ti, i32 %flag) #0 !dbg !15502 {
entry:
  %ti.addr = alloca %struct.thread_info*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.thread_info* %ti, %struct.thread_info** %ti.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.thread_info** %ti.addr, metadata !15507, metadata !DIExpression()), !dbg !15508
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !15509, metadata !DIExpression()), !dbg !15510
  %0 = load i32, i32* %flag.addr, align 4, !dbg !15511
  %conv = sext i32 %0 to i64, !dbg !15511
  %1 = load %struct.thread_info*, %struct.thread_info** %ti.addr, align 8, !dbg !15512
  %flags = getelementptr inbounds %struct.thread_info, %struct.thread_info* %1, i32 0, i32 0, !dbg !15513
  call void @set_bit(i64 %conv, i64* %flags) #10, !dbg !15514
  ret void, !dbg !15515
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.thread_info* @task_thread_info(%struct.task_struct* %task) #0 !dbg !15516 {
entry:
  %task.addr = alloca %struct.task_struct*, align 8
  store %struct.task_struct* %task, %struct.task_struct** %task.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %task.addr, metadata !15519, metadata !DIExpression()), !dbg !15520
  %0 = load %struct.task_struct*, %struct.task_struct** %task.addr, align 8, !dbg !15521
  %thread_info = getelementptr inbounds %struct.task_struct, %struct.task_struct* %0, i32 0, i32 0, !dbg !15522
  ret %struct.thread_info* %thread_info, !dbg !15523
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !15524 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !15530, metadata !DIExpression()), !dbg !15532
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !15534, metadata !DIExpression()), !dbg !15535
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !9037, metadata !DIExpression()), !dbg !15536
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9041, metadata !DIExpression()), !dbg !15538
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !15539, metadata !DIExpression()), !dbg !15540
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !15541, metadata !DIExpression()), !dbg !15542
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !15543
  %1 = load i64, i64* %nr.addr, align 8, !dbg !15544
  %div = sdiv i64 %1, 64, !dbg !15544
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !15545
  %2 = bitcast i64* %add.ptr to i8*, !dbg !15543
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !15546
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !15547
  %conv.i = trunc i64 %4 to i32, !dbg !15547
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #11, !dbg !15548
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !15549
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !15549
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #11, !dbg !15549
  %7 = load i64, i64* %nr.addr, align 8, !dbg !15550
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !15551
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !15552
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #5, !dbg !15554
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !15555

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !15556
  %12 = bitcast i64* %11 to i8*, !dbg !15556
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !15556
  %shr.i = ashr i64 %13, 3, !dbg !15556
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !15556
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !15558
  %and.i = and i64 %14, 7, !dbg !15558
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !15558
  %shl.i = shl i32 1, %sh_prom.i, !dbg !15558
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #5, !dbg !15559, !srcloc !15560
  br label %arch_set_bit.exit, !dbg !15561

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !15562
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !15564
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #5, !dbg !15565, !srcloc !15566
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !15567
}

; Function Attrs: noredzone
declare dso_local i32 @kstrtoull(i8*, i32, i64*) #2

; Function Attrs: noredzone
declare dso_local i32 @kstrtoll(i8*, i32, i64*) #2

; Function Attrs: noredzone
declare dso_local i32 @kstrtobool(i8*, i8*) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @devres_alloc_node(void (%struct.device*, i8*)*, i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local void @sysfs_remove_group(%struct.kobject*, %struct.attribute_group*) #2

; Function Attrs: noredzone
declare dso_local i32 @sysfs_create_file_ns(%struct.kobject*, %struct.attribute*, i8*) #2

; Function Attrs: noredzone
declare dso_local void @sysfs_remove_file_ns(%struct.kobject*, %struct.attribute*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_release(%struct.kobject* %kobj) #0 !dbg !15568 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  %dev = alloca %struct.device*, align 8
  %p = alloca %struct.device_private*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !15569, metadata !DIExpression()), !dbg !15570
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !15571, metadata !DIExpression()), !dbg !15572
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !15573
  %call = call %struct.device* @kobj_to_dev(%struct.kobject* %0) #10, !dbg !15574
  store %struct.device* %call, %struct.device** %dev, align 8, !dbg !15572
  call void @llvm.dbg.declare(metadata %struct.device_private** %p, metadata !15575, metadata !DIExpression()), !dbg !15576
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15577
  %p1 = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 2, !dbg !15578
  %2 = load %struct.device_private*, %struct.device_private** %p1, align 8, !dbg !15578
  store %struct.device_private* %2, %struct.device_private** %p, align 8, !dbg !15576
  %3 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15579
  %call2 = call i32 @devres_release_all(%struct.device* %3) #10, !dbg !15580
  %4 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15581
  %dma_range_map = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 19, !dbg !15582
  %5 = load %struct.bus_dma_region*, %struct.bus_dma_region** %dma_range_map, align 8, !dbg !15582
  %6 = bitcast %struct.bus_dma_region* %5 to i8*, !dbg !15581
  call void @kfree(i8* %6) #10, !dbg !15583
  %7 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15584
  %release = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 31, !dbg !15586
  %8 = load void (%struct.device*)*, void (%struct.device*)** %release, align 8, !dbg !15586
  %tobool = icmp ne void (%struct.device*)* %8, null, !dbg !15584
  br i1 %tobool, label %if.then, label %if.else, !dbg !15587

if.then:                                          ; preds = %entry
  %9 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15588
  %release3 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 31, !dbg !15589
  %10 = load void (%struct.device*)*, void (%struct.device*)** %release3, align 8, !dbg !15589
  %11 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15590
  call void %10(%struct.device* %11) #10, !dbg !15588
  br label %if.end45, !dbg !15588

if.else:                                          ; preds = %entry
  %12 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15591
  %type = getelementptr inbounds %struct.device, %struct.device* %12, i32 0, i32 4, !dbg !15593
  %13 = load %struct.device_type*, %struct.device_type** %type, align 8, !dbg !15593
  %tobool4 = icmp ne %struct.device_type* %13, null, !dbg !15591
  br i1 %tobool4, label %land.lhs.true, label %if.else11, !dbg !15594

land.lhs.true:                                    ; preds = %if.else
  %14 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15595
  %type5 = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 4, !dbg !15596
  %15 = load %struct.device_type*, %struct.device_type** %type5, align 8, !dbg !15596
  %release6 = getelementptr inbounds %struct.device_type, %struct.device_type* %15, i32 0, i32 4, !dbg !15597
  %16 = load void (%struct.device*)*, void (%struct.device*)** %release6, align 8, !dbg !15597
  %tobool7 = icmp ne void (%struct.device*)* %16, null, !dbg !15595
  br i1 %tobool7, label %if.then8, label %if.else11, !dbg !15598

if.then8:                                         ; preds = %land.lhs.true
  %17 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15599
  %type9 = getelementptr inbounds %struct.device, %struct.device* %17, i32 0, i32 4, !dbg !15600
  %18 = load %struct.device_type*, %struct.device_type** %type9, align 8, !dbg !15600
  %release10 = getelementptr inbounds %struct.device_type, %struct.device_type* %18, i32 0, i32 4, !dbg !15601
  %19 = load void (%struct.device*)*, void (%struct.device*)** %release10, align 8, !dbg !15601
  %20 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15602
  call void %19(%struct.device* %20) #10, !dbg !15599
  br label %if.end44, !dbg !15599

if.else11:                                        ; preds = %land.lhs.true, %if.else
  %21 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15603
  %class = getelementptr inbounds %struct.device, %struct.device* %21, i32 0, i32 29, !dbg !15605
  %22 = load %struct.class*, %struct.class** %class, align 8, !dbg !15605
  %tobool12 = icmp ne %struct.class* %22, null, !dbg !15603
  br i1 %tobool12, label %land.lhs.true13, label %if.else19, !dbg !15606

land.lhs.true13:                                  ; preds = %if.else11
  %23 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15607
  %class14 = getelementptr inbounds %struct.device, %struct.device* %23, i32 0, i32 29, !dbg !15608
  %24 = load %struct.class*, %struct.class** %class14, align 8, !dbg !15608
  %dev_release = getelementptr inbounds %struct.class, %struct.class* %24, i32 0, i32 8, !dbg !15609
  %25 = load void (%struct.device*)*, void (%struct.device*)** %dev_release, align 8, !dbg !15609
  %tobool15 = icmp ne void (%struct.device*)* %25, null, !dbg !15607
  br i1 %tobool15, label %if.then16, label %if.else19, !dbg !15610

if.then16:                                        ; preds = %land.lhs.true13
  %26 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15611
  %class17 = getelementptr inbounds %struct.device, %struct.device* %26, i32 0, i32 29, !dbg !15612
  %27 = load %struct.class*, %struct.class** %class17, align 8, !dbg !15612
  %dev_release18 = getelementptr inbounds %struct.class, %struct.class* %27, i32 0, i32 8, !dbg !15613
  %28 = load void (%struct.device*)*, void (%struct.device*)** %dev_release18, align 8, !dbg !15613
  %29 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15614
  call void %28(%struct.device* %29) #10, !dbg !15611
  br label %if.end43, !dbg !15611

if.else19:                                        ; preds = %land.lhs.true13, %if.else11
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !15615, metadata !DIExpression()), !dbg !15617
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !15617
  %30 = load i32, i32* %__ret_warn_on, align 4, !dbg !15618
  %tobool20 = icmp ne i32 %30, 0, !dbg !15618
  %lnot = xor i1 %tobool20, true, !dbg !15618
  %lnot21 = xor i1 %lnot, true, !dbg !15618
  %lnot.ext = zext i1 %lnot21 to i32, !dbg !15618
  %conv = sext i32 %lnot.ext to i64, !dbg !15618
  %tobool22 = icmp ne i64 %conv, 0, !dbg !15618
  br i1 %tobool22, label %if.then23, label %if.end, !dbg !15617

if.then23:                                        ; preds = %if.else19
  br label %do.body, !dbg !15618

do.body:                                          ; preds = %if.then23
  br label %do.body24, !dbg !15620

do.body24:                                        ; preds = %do.body
  br label %do.end, !dbg !15622

do.end:                                           ; preds = %do.body24
  %31 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15620
  %call25 = call i8* @dev_name(%struct.device* %31) #10, !dbg !15620
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([123 x i8], [123 x i8]* @.str.58, i64 0, i64 0), i8* %call25) #10, !dbg !15620
  br label %do.body26, !dbg !15620

do.body26:                                        ; preds = %do.end
  br label %do.body27, !dbg !15624

do.body27:                                        ; preds = %do.body26
  br label %do.end28, !dbg !15626

do.end28:                                         ; preds = %do.body27
  br label %do.body29, !dbg !15624

do.body29:                                        ; preds = %do.end28
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 1809, i32 2313, i64 12) #5, !dbg !15628, !srcloc !15630
  br label %do.end30, !dbg !15628

do.end30:                                         ; preds = %do.body29
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 422) #5, !dbg !15631, !srcloc !15633
  br label %do.body31, !dbg !15624

do.body31:                                        ; preds = %do.end30
  br label %do.end32, !dbg !15634

do.end32:                                         ; preds = %do.body31
  br label %do.end33, !dbg !15624

do.end33:                                         ; preds = %do.end32
  br label %do.body34, !dbg !15620

do.body34:                                        ; preds = %do.end33
  br label %do.end35, !dbg !15636

do.end35:                                         ; preds = %do.body34
  br label %do.end36, !dbg !15620

do.end36:                                         ; preds = %do.end35
  br label %if.end, !dbg !15620

if.end:                                           ; preds = %do.end36, %if.else19
  %32 = load i32, i32* %__ret_warn_on, align 4, !dbg !15617
  %tobool37 = icmp ne i32 %32, 0, !dbg !15617
  %lnot38 = xor i1 %tobool37, true, !dbg !15617
  %lnot40 = xor i1 %lnot38, true, !dbg !15617
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !15617
  %conv42 = sext i32 %lnot.ext41 to i64, !dbg !15617
  store i64 %conv42, i64* %tmp, align 8, !dbg !15618
  %33 = load i64, i64* %tmp, align 8, !dbg !15617
  br label %if.end43

if.end43:                                         ; preds = %if.end, %if.then16
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then8
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then
  %34 = load %struct.device_private*, %struct.device_private** %p, align 8, !dbg !15638
  %35 = bitcast %struct.device_private* %34 to i8*, !dbg !15638
  call void @kfree(i8* %35) #10, !dbg !15639
  ret void, !dbg !15640
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @device_namespace(%struct.kobject* %kobj) #0 !dbg !15641 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  %dev = alloca %struct.device*, align 8
  %ns = alloca i8*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !15642, metadata !DIExpression()), !dbg !15643
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !15644, metadata !DIExpression()), !dbg !15645
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !15646
  %call = call %struct.device* @kobj_to_dev(%struct.kobject* %0) #10, !dbg !15647
  store %struct.device* %call, %struct.device** %dev, align 8, !dbg !15645
  call void @llvm.dbg.declare(metadata i8** %ns, metadata !15648, metadata !DIExpression()), !dbg !15649
  store i8* null, i8** %ns, align 8, !dbg !15649
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15650
  %class = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 29, !dbg !15652
  %2 = load %struct.class*, %struct.class** %class, align 8, !dbg !15652
  %tobool = icmp ne %struct.class* %2, null, !dbg !15650
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !15653

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15654
  %class1 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 29, !dbg !15655
  %4 = load %struct.class*, %struct.class** %class1, align 8, !dbg !15655
  %ns_type = getelementptr inbounds %struct.class, %struct.class* %4, i32 0, i32 10, !dbg !15656
  %5 = load %struct.kobj_ns_type_operations*, %struct.kobj_ns_type_operations** %ns_type, align 8, !dbg !15656
  %tobool2 = icmp ne %struct.kobj_ns_type_operations* %5, null, !dbg !15654
  br i1 %tobool2, label %if.then, label %if.end, !dbg !15657

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15658
  %class3 = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 29, !dbg !15659
  %7 = load %struct.class*, %struct.class** %class3, align 8, !dbg !15659
  %namespace = getelementptr inbounds %struct.class, %struct.class* %7, i32 0, i32 11, !dbg !15660
  %8 = load i8* (%struct.device*)*, i8* (%struct.device*)** %namespace, align 8, !dbg !15660
  %9 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15661
  %call4 = call i8* %8(%struct.device* %9) #10, !dbg !15658
  store i8* %call4, i8** %ns, align 8, !dbg !15662
  br label %if.end, !dbg !15663

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %10 = load i8*, i8** %ns, align 8, !dbg !15664
  ret i8* %10, !dbg !15665
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_get_ownership(%struct.kobject* %kobj, %struct.kuid_t* %uid, %struct.kgid_t* %gid) #0 !dbg !15666 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  %uid.addr = alloca %struct.kuid_t*, align 8
  %gid.addr = alloca %struct.kgid_t*, align 8
  %dev = alloca %struct.device*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !15667, metadata !DIExpression()), !dbg !15668
  store %struct.kuid_t* %uid, %struct.kuid_t** %uid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kuid_t** %uid.addr, metadata !15669, metadata !DIExpression()), !dbg !15670
  store %struct.kgid_t* %gid, %struct.kgid_t** %gid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kgid_t** %gid.addr, metadata !15671, metadata !DIExpression()), !dbg !15672
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !15673, metadata !DIExpression()), !dbg !15674
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !15675
  %call = call %struct.device* @kobj_to_dev(%struct.kobject* %0) #10, !dbg !15676
  store %struct.device* %call, %struct.device** %dev, align 8, !dbg !15674
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15677
  %class = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 29, !dbg !15679
  %2 = load %struct.class*, %struct.class** %class, align 8, !dbg !15679
  %tobool = icmp ne %struct.class* %2, null, !dbg !15677
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !15680

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15681
  %class1 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 29, !dbg !15682
  %4 = load %struct.class*, %struct.class** %class1, align 8, !dbg !15682
  %get_ownership = getelementptr inbounds %struct.class, %struct.class* %4, i32 0, i32 12, !dbg !15683
  %5 = load void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)** %get_ownership, align 8, !dbg !15683
  %tobool2 = icmp ne void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)* %5, null, !dbg !15681
  br i1 %tobool2, label %if.then, label %if.end, !dbg !15684

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15685
  %class3 = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 29, !dbg !15686
  %7 = load %struct.class*, %struct.class** %class3, align 8, !dbg !15686
  %get_ownership4 = getelementptr inbounds %struct.class, %struct.class* %7, i32 0, i32 12, !dbg !15687
  %8 = load void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)** %get_ownership4, align 8, !dbg !15687
  %9 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15688
  %10 = load %struct.kuid_t*, %struct.kuid_t** %uid.addr, align 8, !dbg !15689
  %11 = load %struct.kgid_t*, %struct.kgid_t** %gid.addr, align 8, !dbg !15690
  call void %8(%struct.device* %9, %struct.kuid_t* %10, %struct.kgid_t* %11) #10, !dbg !15685
  br label %if.end, !dbg !15685

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !15691
}

; Function Attrs: noredzone
declare dso_local i32 @devres_release_all(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dev_attr_show(%struct.kobject* %kobj, %struct.attribute* %attr, i8* %buf) #0 !dbg !15692 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  %attr.addr = alloca %struct.attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %dev_attr = alloca %struct.device_attribute*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_attribute*, align 8
  %dev = alloca %struct.device*, align 8
  %ret = alloca i64, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !15693, metadata !DIExpression()), !dbg !15694
  store %struct.attribute* %attr, %struct.attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute** %attr.addr, metadata !15695, metadata !DIExpression()), !dbg !15696
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15697, metadata !DIExpression()), !dbg !15698
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %dev_attr, metadata !15699, metadata !DIExpression()), !dbg !15700
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15701, metadata !DIExpression()), !dbg !15703
  %0 = load %struct.attribute*, %struct.attribute** %attr.addr, align 8, !dbg !15703
  %1 = bitcast %struct.attribute* %0 to i8*, !dbg !15703
  store i8* %1, i8** %__mptr, align 8, !dbg !15703
  br label %do.body, !dbg !15703

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15704

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15703
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15703
  %3 = bitcast i8* %add.ptr to %struct.device_attribute*, !dbg !15703
  store %struct.device_attribute* %3, %struct.device_attribute** %tmp, align 8, !dbg !15704
  %4 = load %struct.device_attribute*, %struct.device_attribute** %tmp, align 8, !dbg !15703
  store %struct.device_attribute* %4, %struct.device_attribute** %dev_attr, align 8, !dbg !15700
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !15706, metadata !DIExpression()), !dbg !15707
  %5 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !15708
  %call = call %struct.device* @kobj_to_dev(%struct.kobject* %5) #10, !dbg !15709
  store %struct.device* %call, %struct.device** %dev, align 8, !dbg !15707
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !15710, metadata !DIExpression()), !dbg !15711
  store i64 -5, i64* %ret, align 8, !dbg !15711
  %6 = load %struct.device_attribute*, %struct.device_attribute** %dev_attr, align 8, !dbg !15712
  %show = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %6, i32 0, i32 1, !dbg !15714
  %7 = load i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show, align 8, !dbg !15714
  %tobool = icmp ne i64 (%struct.device*, %struct.device_attribute*, i8*)* %7, null, !dbg !15712
  br i1 %tobool, label %if.then, label %if.end, !dbg !15715

if.then:                                          ; preds = %do.end
  %8 = load %struct.device_attribute*, %struct.device_attribute** %dev_attr, align 8, !dbg !15716
  %show1 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %8, i32 0, i32 1, !dbg !15717
  %9 = load i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show1, align 8, !dbg !15717
  %10 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15718
  %11 = load %struct.device_attribute*, %struct.device_attribute** %dev_attr, align 8, !dbg !15719
  %12 = load i8*, i8** %buf.addr, align 8, !dbg !15720
  %call2 = call i64 %9(%struct.device* %10, %struct.device_attribute* %11, i8* %12) #10, !dbg !15716
  store i64 %call2, i64* %ret, align 8, !dbg !15721
  br label %if.end, !dbg !15722

if.end:                                           ; preds = %if.then, %do.end
  %13 = load i64, i64* %ret, align 8, !dbg !15723
  %cmp = icmp sge i64 %13, 4096, !dbg !15725
  br i1 %cmp, label %if.then3, label %if.end6, !dbg !15726

if.then3:                                         ; preds = %if.end
  %14 = load %struct.device_attribute*, %struct.device_attribute** %dev_attr, align 8, !dbg !15727
  %show4 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %14, i32 0, i32 1, !dbg !15729
  %15 = load i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show4, align 8, !dbg !15729
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.59, i64 0, i64 0), i64 (%struct.device*, %struct.device_attribute*, i8*)* %15) #14, !dbg !15730
  br label %if.end6, !dbg !15731

if.end6:                                          ; preds = %if.then3, %if.end
  %16 = load i64, i64* %ret, align 8, !dbg !15732
  ret i64 %16, !dbg !15733
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dev_attr_store(%struct.kobject* %kobj, %struct.attribute* %attr, i8* %buf, i64 %count) #0 !dbg !15734 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  %attr.addr = alloca %struct.attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %dev_attr = alloca %struct.device_attribute*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_attribute*, align 8
  %dev = alloca %struct.device*, align 8
  %ret = alloca i64, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !15735, metadata !DIExpression()), !dbg !15736
  store %struct.attribute* %attr, %struct.attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute** %attr.addr, metadata !15737, metadata !DIExpression()), !dbg !15738
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15739, metadata !DIExpression()), !dbg !15740
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !15741, metadata !DIExpression()), !dbg !15742
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %dev_attr, metadata !15743, metadata !DIExpression()), !dbg !15744
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15745, metadata !DIExpression()), !dbg !15747
  %0 = load %struct.attribute*, %struct.attribute** %attr.addr, align 8, !dbg !15747
  %1 = bitcast %struct.attribute* %0 to i8*, !dbg !15747
  store i8* %1, i8** %__mptr, align 8, !dbg !15747
  br label %do.body, !dbg !15747

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15748

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15747
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15747
  %3 = bitcast i8* %add.ptr to %struct.device_attribute*, !dbg !15747
  store %struct.device_attribute* %3, %struct.device_attribute** %tmp, align 8, !dbg !15748
  %4 = load %struct.device_attribute*, %struct.device_attribute** %tmp, align 8, !dbg !15747
  store %struct.device_attribute* %4, %struct.device_attribute** %dev_attr, align 8, !dbg !15744
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !15750, metadata !DIExpression()), !dbg !15751
  %5 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !15752
  %call = call %struct.device* @kobj_to_dev(%struct.kobject* %5) #10, !dbg !15753
  store %struct.device* %call, %struct.device** %dev, align 8, !dbg !15751
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !15754, metadata !DIExpression()), !dbg !15755
  store i64 -5, i64* %ret, align 8, !dbg !15755
  %6 = load %struct.device_attribute*, %struct.device_attribute** %dev_attr, align 8, !dbg !15756
  %store = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %6, i32 0, i32 2, !dbg !15758
  %7 = load i64 (%struct.device*, %struct.device_attribute*, i8*, i64)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store, align 8, !dbg !15758
  %tobool = icmp ne i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* %7, null, !dbg !15756
  br i1 %tobool, label %if.then, label %if.end, !dbg !15759

if.then:                                          ; preds = %do.end
  %8 = load %struct.device_attribute*, %struct.device_attribute** %dev_attr, align 8, !dbg !15760
  %store1 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %8, i32 0, i32 2, !dbg !15761
  %9 = load i64 (%struct.device*, %struct.device_attribute*, i8*, i64)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store1, align 8, !dbg !15761
  %10 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15762
  %11 = load %struct.device_attribute*, %struct.device_attribute** %dev_attr, align 8, !dbg !15763
  %12 = load i8*, i8** %buf.addr, align 8, !dbg !15764
  %13 = load i64, i64* %count.addr, align 8, !dbg !15765
  %call2 = call i64 %9(%struct.device* %10, %struct.device_attribute* %11, i8* %12, i64 %13) #10, !dbg !15760
  store i64 %call2, i64* %ret, align 8, !dbg !15766
  br label %if.end, !dbg !15767

if.end:                                           ; preds = %if.then, %do.end
  %14 = load i64, i64* %ret, align 8, !dbg !15768
  ret i64 %14, !dbg !15769
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #9

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_pm_init_common(%struct.device* %dev) #0 !dbg !15770 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11214, metadata !DIExpression()), !dbg !15771
  %dev.addr = alloca %struct.device*, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15776, metadata !DIExpression()), !dbg !15777
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15778
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !15779
  %early_init = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 1, !dbg !15780
  %bf.load = load i16, i16* %early_init, align 4, !dbg !15780
  %bf.lshr = lshr i16 %bf.load, 8, !dbg !15780
  %bf.clear = and i16 %bf.lshr, 1, !dbg !15780
  %bf.cast = trunc i16 %bf.clear to i1, !dbg !15780
  br i1 %bf.cast, label %if.end, label %if.then, !dbg !15781

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !15782

do.body:                                          ; preds = %if.then
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15783
  %power1 = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !15783
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 3, !dbg !15783
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15784
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !15785
  %rlock.i = bitcast %union.anon.1* %3 to %struct.raw_spinlock*, !dbg !15785
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15783
  %power2 = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 11, !dbg !15783
  %lock3 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power2, i32 0, i32 3, !dbg !15783
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !15783
  %rlock = bitcast %union.anon.1* %5 to %struct.raw_spinlock*, !dbg !15783
  %6 = bitcast %struct.spinlock* %lock3 to i8*, !dbg !15783
  %7 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !15783
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 1 %7, i64 0, i1 false), !dbg !15783
  br label %do.end, !dbg !15783

do.end:                                           ; preds = %do.body
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15786
  %power4 = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 11, !dbg !15787
  %qos = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power4, i32 0, i32 27, !dbg !15788
  store %struct.dev_pm_qos* null, %struct.dev_pm_qos** %qos, align 8, !dbg !15789
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15790
  %power5 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 11, !dbg !15791
  %early_init6 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power5, i32 0, i32 1, !dbg !15792
  %bf.load7 = load i16, i16* %early_init6, align 4, !dbg !15793
  %bf.clear8 = and i16 %bf.load7, -257, !dbg !15793
  %bf.set = or i16 %bf.clear8, 256, !dbg !15793
  store i16 %bf.set, i16* %early_init6, align 4, !dbg !15793
  br label %if.end, !dbg !15794

if.end:                                           ; preds = %do.end, %entry
  ret void, !dbg !15795
}

; Function Attrs: noredzone
declare dso_local void @device_pm_sleep_init(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @pm_runtime_init(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @klist_init(%struct.klist*, void (%struct.klist_node*)*, void (%struct.klist_node*)*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @klist_children_get(%struct.klist_node* %n) #0 !dbg !15796 {
entry:
  %n.addr = alloca %struct.klist_node*, align 8
  %p = alloca %struct.device_private*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_private*, align 8
  %dev = alloca %struct.device*, align 8
  store %struct.klist_node* %n, %struct.klist_node** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.klist_node** %n.addr, metadata !15797, metadata !DIExpression()), !dbg !15798
  call void @llvm.dbg.declare(metadata %struct.device_private** %p, metadata !15799, metadata !DIExpression()), !dbg !15800
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15801, metadata !DIExpression()), !dbg !15803
  %0 = load %struct.klist_node*, %struct.klist_node** %n.addr, align 8, !dbg !15803
  %1 = bitcast %struct.klist_node* %0 to i8*, !dbg !15803
  store i8* %1, i8** %__mptr, align 8, !dbg !15803
  br label %do.body, !dbg !15803

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15804

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15803
  %add.ptr = getelementptr i8, i8* %2, i64 -32, !dbg !15803
  %3 = bitcast i8* %add.ptr to %struct.device_private*, !dbg !15803
  store %struct.device_private* %3, %struct.device_private** %tmp, align 8, !dbg !15804
  %4 = load %struct.device_private*, %struct.device_private** %tmp, align 8, !dbg !15803
  store %struct.device_private* %4, %struct.device_private** %p, align 8, !dbg !15800
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !15806, metadata !DIExpression()), !dbg !15807
  %5 = load %struct.device_private*, %struct.device_private** %p, align 8, !dbg !15808
  %device = getelementptr inbounds %struct.device_private, %struct.device_private* %5, i32 0, i32 8, !dbg !15809
  %6 = load %struct.device*, %struct.device** %device, align 8, !dbg !15809
  store %struct.device* %6, %struct.device** %dev, align 8, !dbg !15807
  %7 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15810
  %call = call %struct.device* @get_device(%struct.device* %7) #10, !dbg !15811
  ret void, !dbg !15812
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @klist_children_put(%struct.klist_node* %n) #0 !dbg !15813 {
entry:
  %n.addr = alloca %struct.klist_node*, align 8
  %p = alloca %struct.device_private*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device_private*, align 8
  %dev = alloca %struct.device*, align 8
  store %struct.klist_node* %n, %struct.klist_node** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.klist_node** %n.addr, metadata !15814, metadata !DIExpression()), !dbg !15815
  call void @llvm.dbg.declare(metadata %struct.device_private** %p, metadata !15816, metadata !DIExpression()), !dbg !15817
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15818, metadata !DIExpression()), !dbg !15820
  %0 = load %struct.klist_node*, %struct.klist_node** %n.addr, align 8, !dbg !15820
  %1 = bitcast %struct.klist_node* %0 to i8*, !dbg !15820
  store i8* %1, i8** %__mptr, align 8, !dbg !15820
  br label %do.body, !dbg !15820

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15821

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15820
  %add.ptr = getelementptr i8, i8* %2, i64 -32, !dbg !15820
  %3 = bitcast i8* %add.ptr to %struct.device_private*, !dbg !15820
  store %struct.device_private* %3, %struct.device_private** %tmp, align 8, !dbg !15821
  %4 = load %struct.device_private*, %struct.device_private** %tmp, align 8, !dbg !15820
  store %struct.device_private* %4, %struct.device_private** %p, align 8, !dbg !15817
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !15823, metadata !DIExpression()), !dbg !15824
  %5 = load %struct.device_private*, %struct.device_private** %p, align 8, !dbg !15825
  %device = getelementptr inbounds %struct.device_private, %struct.device_private* %5, i32 0, i32 8, !dbg !15826
  %6 = load %struct.device*, %struct.device** %device, align 8, !dbg !15826
  store %struct.device* %6, %struct.device** %dev, align 8, !dbg !15824
  %7 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15827
  call void @put_device(%struct.device* %7) #10, !dbg !15828
  ret void, !dbg !15829
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.kobject* @class_dir_create_and_add(%struct.class* %class, %struct.kobject* %parent_kobj) #0 !dbg !15830 {
entry:
  %retval = alloca %struct.kobject*, align 8
  %class.addr = alloca %struct.class*, align 8
  %parent_kobj.addr = alloca %struct.kobject*, align 8
  %dir = alloca %struct.class_dir*, align 8
  %retval1 = alloca i32, align 4
  store %struct.class* %class, %struct.class** %class.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.class** %class.addr, metadata !15833, metadata !DIExpression()), !dbg !15834
  store %struct.kobject* %parent_kobj, %struct.kobject** %parent_kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %parent_kobj.addr, metadata !15835, metadata !DIExpression()), !dbg !15836
  call void @llvm.dbg.declare(metadata %struct.class_dir** %dir, metadata !15837, metadata !DIExpression()), !dbg !15838
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !15839, metadata !DIExpression()), !dbg !15840
  %call = call i8* @kzalloc(i64 72, i32 3264) #10, !dbg !15841
  %0 = bitcast i8* %call to %struct.class_dir*, !dbg !15841
  store %struct.class_dir* %0, %struct.class_dir** %dir, align 8, !dbg !15842
  %1 = load %struct.class_dir*, %struct.class_dir** %dir, align 8, !dbg !15843
  %tobool = icmp ne %struct.class_dir* %1, null, !dbg !15843
  br i1 %tobool, label %if.end, label %if.then, !dbg !15845

if.then:                                          ; preds = %entry
  %call2 = call i8* @ERR_PTR(i64 -12) #10, !dbg !15846
  %2 = bitcast i8* %call2 to %struct.kobject*, !dbg !15846
  store %struct.kobject* %2, %struct.kobject** %retval, align 8, !dbg !15847
  br label %return, !dbg !15847

if.end:                                           ; preds = %entry
  %3 = load %struct.class*, %struct.class** %class.addr, align 8, !dbg !15848
  %4 = load %struct.class_dir*, %struct.class_dir** %dir, align 8, !dbg !15849
  %class3 = getelementptr inbounds %struct.class_dir, %struct.class_dir* %4, i32 0, i32 1, !dbg !15850
  store %struct.class* %3, %struct.class** %class3, align 8, !dbg !15851
  %5 = load %struct.class_dir*, %struct.class_dir** %dir, align 8, !dbg !15852
  %kobj = getelementptr inbounds %struct.class_dir, %struct.class_dir* %5, i32 0, i32 0, !dbg !15853
  call void @kobject_init(%struct.kobject* %kobj, %struct.kobj_type* @class_dir_ktype) #10, !dbg !15854
  %6 = load %struct.class*, %struct.class** %class.addr, align 8, !dbg !15855
  %p = getelementptr inbounds %struct.class, %struct.class* %6, i32 0, i32 14, !dbg !15856
  %7 = load %struct.subsys_private*, %struct.subsys_private** %p, align 8, !dbg !15856
  %glue_dirs = getelementptr inbounds %struct.subsys_private, %struct.subsys_private* %7, i32 0, i32 10, !dbg !15857
  %8 = load %struct.class_dir*, %struct.class_dir** %dir, align 8, !dbg !15858
  %kobj4 = getelementptr inbounds %struct.class_dir, %struct.class_dir* %8, i32 0, i32 0, !dbg !15859
  %kset = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj4, i32 0, i32 3, !dbg !15860
  store %struct.kset* %glue_dirs, %struct.kset** %kset, align 8, !dbg !15861
  %9 = load %struct.class_dir*, %struct.class_dir** %dir, align 8, !dbg !15862
  %kobj5 = getelementptr inbounds %struct.class_dir, %struct.class_dir* %9, i32 0, i32 0, !dbg !15863
  %10 = load %struct.kobject*, %struct.kobject** %parent_kobj.addr, align 8, !dbg !15864
  %11 = load %struct.class*, %struct.class** %class.addr, align 8, !dbg !15865
  %name = getelementptr inbounds %struct.class, %struct.class* %11, i32 0, i32 0, !dbg !15866
  %12 = load i8*, i8** %name, align 8, !dbg !15866
  %call6 = call i32 (%struct.kobject*, %struct.kobject*, i8*, ...) @kobject_add(%struct.kobject* %kobj5, %struct.kobject* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i8* %12) #10, !dbg !15867
  store i32 %call6, i32* %retval1, align 4, !dbg !15868
  %13 = load i32, i32* %retval1, align 4, !dbg !15869
  %cmp = icmp slt i32 %13, 0, !dbg !15871
  br i1 %cmp, label %if.then7, label %if.end10, !dbg !15872

if.then7:                                         ; preds = %if.end
  %14 = load %struct.class_dir*, %struct.class_dir** %dir, align 8, !dbg !15873
  %kobj8 = getelementptr inbounds %struct.class_dir, %struct.class_dir* %14, i32 0, i32 0, !dbg !15875
  call void @kobject_put(%struct.kobject* %kobj8) #10, !dbg !15876
  %15 = load i32, i32* %retval1, align 4, !dbg !15877
  %conv = sext i32 %15 to i64, !dbg !15877
  %call9 = call i8* @ERR_PTR(i64 %conv) #10, !dbg !15878
  %16 = bitcast i8* %call9 to %struct.kobject*, !dbg !15878
  store %struct.kobject* %16, %struct.kobject** %retval, align 8, !dbg !15879
  br label %return, !dbg !15879

if.end10:                                         ; preds = %if.end
  %17 = load %struct.class_dir*, %struct.class_dir** %dir, align 8, !dbg !15880
  %kobj11 = getelementptr inbounds %struct.class_dir, %struct.class_dir* %17, i32 0, i32 0, !dbg !15881
  store %struct.kobject* %kobj11, %struct.kobject** %retval, align 8, !dbg !15882
  br label %return, !dbg !15882

return:                                           ; preds = %if.end10, %if.then7, %if.then
  %18 = load %struct.kobject*, %struct.kobject** %retval, align 8, !dbg !15883
  ret %struct.kobject* %18, !dbg !15883
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @class_dir_release(%struct.kobject* %kobj) #0 !dbg !15884 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  %dir = alloca %struct.class_dir*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.class_dir*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !15885, metadata !DIExpression()), !dbg !15886
  call void @llvm.dbg.declare(metadata %struct.class_dir** %dir, metadata !15887, metadata !DIExpression()), !dbg !15888
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15889, metadata !DIExpression()), !dbg !15891
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !15891
  %1 = bitcast %struct.kobject* %0 to i8*, !dbg !15891
  store i8* %1, i8** %__mptr, align 8, !dbg !15891
  br label %do.body, !dbg !15891

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15892

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15891
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15891
  %3 = bitcast i8* %add.ptr to %struct.class_dir*, !dbg !15891
  store %struct.class_dir* %3, %struct.class_dir** %tmp, align 8, !dbg !15892
  %4 = load %struct.class_dir*, %struct.class_dir** %tmp, align 8, !dbg !15891
  store %struct.class_dir* %4, %struct.class_dir** %dir, align 8, !dbg !15888
  %5 = load %struct.class_dir*, %struct.class_dir** %dir, align 8, !dbg !15894
  %6 = bitcast %struct.class_dir* %5 to i8*, !dbg !15894
  call void @kfree(i8* %6) #10, !dbg !15895
  ret void, !dbg !15896
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.kobj_ns_type_operations* @class_dir_child_ns_type(%struct.kobject* %kobj) #0 !dbg !15897 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  %dir = alloca %struct.class_dir*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.class_dir*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !15898, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.declare(metadata %struct.class_dir** %dir, metadata !15900, metadata !DIExpression()), !dbg !15901
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15902, metadata !DIExpression()), !dbg !15904
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !15904
  %1 = bitcast %struct.kobject* %0 to i8*, !dbg !15904
  store i8* %1, i8** %__mptr, align 8, !dbg !15904
  br label %do.body, !dbg !15904

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15905

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15904
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15904
  %3 = bitcast i8* %add.ptr to %struct.class_dir*, !dbg !15904
  store %struct.class_dir* %3, %struct.class_dir** %tmp, align 8, !dbg !15905
  %4 = load %struct.class_dir*, %struct.class_dir** %tmp, align 8, !dbg !15904
  store %struct.class_dir* %4, %struct.class_dir** %dir, align 8, !dbg !15901
  %5 = load %struct.class_dir*, %struct.class_dir** %dir, align 8, !dbg !15907
  %class = getelementptr inbounds %struct.class_dir, %struct.class_dir* %5, i32 0, i32 1, !dbg !15908
  %6 = load %struct.class*, %struct.class** %class, align 8, !dbg !15908
  %ns_type = getelementptr inbounds %struct.class, %struct.class* %6, i32 0, i32 10, !dbg !15909
  %7 = load %struct.kobj_ns_type_operations*, %struct.kobj_ns_type_operations** %ns_type, align 8, !dbg !15909
  ret %struct.kobj_ns_type_operations* %7, !dbg !15910
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_platform_notify(%struct.device*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @software_node_notify(%struct.device*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @uevent_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15911 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %top_kobj = alloca %struct.kobject*, align 8
  %kset = alloca %struct.kset*, align 8
  %env = alloca %struct.kobj_uevent_env*, align 8
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  %retval1 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15912, metadata !DIExpression()), !dbg !15913
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15914, metadata !DIExpression()), !dbg !15915
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15916, metadata !DIExpression()), !dbg !15917
  call void @llvm.dbg.declare(metadata %struct.kobject** %top_kobj, metadata !15918, metadata !DIExpression()), !dbg !15919
  call void @llvm.dbg.declare(metadata %struct.kset** %kset, metadata !15920, metadata !DIExpression()), !dbg !15921
  call void @llvm.dbg.declare(metadata %struct.kobj_uevent_env** %env, metadata !15922, metadata !DIExpression()), !dbg !15923
  store %struct.kobj_uevent_env* null, %struct.kobj_uevent_env** %env, align 8, !dbg !15923
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15924, metadata !DIExpression()), !dbg !15925
  call void @llvm.dbg.declare(metadata i32* %len, metadata !15926, metadata !DIExpression()), !dbg !15927
  store i32 0, i32* %len, align 4, !dbg !15927
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !15928, metadata !DIExpression()), !dbg !15929
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15930
  %kobj = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !15931
  store %struct.kobject* %kobj, %struct.kobject** %top_kobj, align 8, !dbg !15932
  br label %while.cond, !dbg !15933

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct.kobject*, %struct.kobject** %top_kobj, align 8, !dbg !15934
  %kset2 = getelementptr inbounds %struct.kobject, %struct.kobject* %1, i32 0, i32 3, !dbg !15935
  %2 = load %struct.kset*, %struct.kset** %kset2, align 8, !dbg !15935
  %tobool = icmp ne %struct.kset* %2, null, !dbg !15934
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !15936

land.rhs:                                         ; preds = %while.cond
  %3 = load %struct.kobject*, %struct.kobject** %top_kobj, align 8, !dbg !15937
  %parent = getelementptr inbounds %struct.kobject, %struct.kobject* %3, i32 0, i32 2, !dbg !15938
  %4 = load %struct.kobject*, %struct.kobject** %parent, align 8, !dbg !15938
  %tobool3 = icmp ne %struct.kobject* %4, null, !dbg !15936
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %5 = phi i1 [ false, %while.cond ], [ %tobool3, %land.rhs ], !dbg !15939
  br i1 %5, label %while.body, label %while.end, !dbg !15933

while.body:                                       ; preds = %land.end
  %6 = load %struct.kobject*, %struct.kobject** %top_kobj, align 8, !dbg !15940
  %parent4 = getelementptr inbounds %struct.kobject, %struct.kobject* %6, i32 0, i32 2, !dbg !15941
  %7 = load %struct.kobject*, %struct.kobject** %parent4, align 8, !dbg !15941
  store %struct.kobject* %7, %struct.kobject** %top_kobj, align 8, !dbg !15942
  br label %while.cond, !dbg !15933, !llvm.loop !15943

while.end:                                        ; preds = %land.end
  %8 = load %struct.kobject*, %struct.kobject** %top_kobj, align 8, !dbg !15944
  %kset5 = getelementptr inbounds %struct.kobject, %struct.kobject* %8, i32 0, i32 3, !dbg !15946
  %9 = load %struct.kset*, %struct.kset** %kset5, align 8, !dbg !15946
  %tobool6 = icmp ne %struct.kset* %9, null, !dbg !15944
  br i1 %tobool6, label %if.end, label %if.then, !dbg !15947

if.then:                                          ; preds = %while.end
  br label %out, !dbg !15948

if.end:                                           ; preds = %while.end
  %10 = load %struct.kobject*, %struct.kobject** %top_kobj, align 8, !dbg !15949
  %kset7 = getelementptr inbounds %struct.kobject, %struct.kobject* %10, i32 0, i32 3, !dbg !15950
  %11 = load %struct.kset*, %struct.kset** %kset7, align 8, !dbg !15950
  store %struct.kset* %11, %struct.kset** %kset, align 8, !dbg !15951
  %12 = load %struct.kset*, %struct.kset** %kset, align 8, !dbg !15952
  %uevent_ops = getelementptr inbounds %struct.kset, %struct.kset* %12, i32 0, i32 3, !dbg !15954
  %13 = load %struct.kset_uevent_ops*, %struct.kset_uevent_ops** %uevent_ops, align 8, !dbg !15954
  %tobool8 = icmp ne %struct.kset_uevent_ops* %13, null, !dbg !15952
  br i1 %tobool8, label %lor.lhs.false, label %if.then11, !dbg !15955

lor.lhs.false:                                    ; preds = %if.end
  %14 = load %struct.kset*, %struct.kset** %kset, align 8, !dbg !15956
  %uevent_ops9 = getelementptr inbounds %struct.kset, %struct.kset* %14, i32 0, i32 3, !dbg !15957
  %15 = load %struct.kset_uevent_ops*, %struct.kset_uevent_ops** %uevent_ops9, align 8, !dbg !15957
  %uevent = getelementptr inbounds %struct.kset_uevent_ops, %struct.kset_uevent_ops* %15, i32 0, i32 2, !dbg !15958
  %16 = load i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)** %uevent, align 8, !dbg !15958
  %tobool10 = icmp ne i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* %16, null, !dbg !15956
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !15959

if.then11:                                        ; preds = %lor.lhs.false, %if.end
  br label %out, !dbg !15960

if.end12:                                         ; preds = %lor.lhs.false
  %17 = load %struct.kset*, %struct.kset** %kset, align 8, !dbg !15961
  %uevent_ops13 = getelementptr inbounds %struct.kset, %struct.kset* %17, i32 0, i32 3, !dbg !15963
  %18 = load %struct.kset_uevent_ops*, %struct.kset_uevent_ops** %uevent_ops13, align 8, !dbg !15963
  %tobool14 = icmp ne %struct.kset_uevent_ops* %18, null, !dbg !15961
  br i1 %tobool14, label %land.lhs.true, label %if.end24, !dbg !15964

land.lhs.true:                                    ; preds = %if.end12
  %19 = load %struct.kset*, %struct.kset** %kset, align 8, !dbg !15965
  %uevent_ops15 = getelementptr inbounds %struct.kset, %struct.kset* %19, i32 0, i32 3, !dbg !15966
  %20 = load %struct.kset_uevent_ops*, %struct.kset_uevent_ops** %uevent_ops15, align 8, !dbg !15966
  %filter = getelementptr inbounds %struct.kset_uevent_ops, %struct.kset_uevent_ops* %20, i32 0, i32 0, !dbg !15967
  %21 = load i32 (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*)** %filter, align 8, !dbg !15967
  %tobool16 = icmp ne i32 (%struct.kset*, %struct.kobject*)* %21, null, !dbg !15965
  br i1 %tobool16, label %if.then17, label %if.end24, !dbg !15968

if.then17:                                        ; preds = %land.lhs.true
  %22 = load %struct.kset*, %struct.kset** %kset, align 8, !dbg !15969
  %uevent_ops18 = getelementptr inbounds %struct.kset, %struct.kset* %22, i32 0, i32 3, !dbg !15971
  %23 = load %struct.kset_uevent_ops*, %struct.kset_uevent_ops** %uevent_ops18, align 8, !dbg !15971
  %filter19 = getelementptr inbounds %struct.kset_uevent_ops, %struct.kset_uevent_ops* %23, i32 0, i32 0, !dbg !15972
  %24 = load i32 (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*)** %filter19, align 8, !dbg !15972
  %25 = load %struct.kset*, %struct.kset** %kset, align 8, !dbg !15973
  %26 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15974
  %kobj20 = getelementptr inbounds %struct.device, %struct.device* %26, i32 0, i32 0, !dbg !15975
  %call = call i32 %24(%struct.kset* %25, %struct.kobject* %kobj20) #10, !dbg !15969
  %tobool21 = icmp ne i32 %call, 0, !dbg !15969
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !15976

if.then22:                                        ; preds = %if.then17
  br label %out, !dbg !15977

if.end23:                                         ; preds = %if.then17
  br label %if.end24, !dbg !15978

if.end24:                                         ; preds = %if.end23, %land.lhs.true, %if.end12
  %call25 = call i8* @kzalloc(i64 2592, i32 3264) #10, !dbg !15979
  %27 = bitcast i8* %call25 to %struct.kobj_uevent_env*, !dbg !15979
  store %struct.kobj_uevent_env* %27, %struct.kobj_uevent_env** %env, align 8, !dbg !15980
  %28 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env, align 8, !dbg !15981
  %tobool26 = icmp ne %struct.kobj_uevent_env* %28, null, !dbg !15981
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !15983

if.then27:                                        ; preds = %if.end24
  store i64 -12, i64* %retval, align 8, !dbg !15984
  br label %return, !dbg !15984

if.end28:                                         ; preds = %if.end24
  %29 = load %struct.kset*, %struct.kset** %kset, align 8, !dbg !15985
  %uevent_ops29 = getelementptr inbounds %struct.kset, %struct.kset* %29, i32 0, i32 3, !dbg !15986
  %30 = load %struct.kset_uevent_ops*, %struct.kset_uevent_ops** %uevent_ops29, align 8, !dbg !15986
  %uevent30 = getelementptr inbounds %struct.kset_uevent_ops, %struct.kset_uevent_ops* %30, i32 0, i32 2, !dbg !15987
  %31 = load i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)** %uevent30, align 8, !dbg !15987
  %32 = load %struct.kset*, %struct.kset** %kset, align 8, !dbg !15988
  %33 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15989
  %kobj31 = getelementptr inbounds %struct.device, %struct.device* %33, i32 0, i32 0, !dbg !15990
  %34 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env, align 8, !dbg !15991
  %call32 = call i32 %31(%struct.kset* %32, %struct.kobject* %kobj31, %struct.kobj_uevent_env* %34) #10, !dbg !15985
  store i32 %call32, i32* %retval1, align 4, !dbg !15992
  %35 = load i32, i32* %retval1, align 4, !dbg !15993
  %tobool33 = icmp ne i32 %35, 0, !dbg !15993
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !15995

if.then34:                                        ; preds = %if.end28
  br label %out, !dbg !15996

if.end35:                                         ; preds = %if.end28
  store i32 0, i32* %i, align 4, !dbg !15997
  br label %for.cond, !dbg !15999

for.cond:                                         ; preds = %for.inc, %if.end35
  %36 = load i32, i32* %i, align 4, !dbg !16000
  %37 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env, align 8, !dbg !16002
  %envp_idx = getelementptr inbounds %struct.kobj_uevent_env, %struct.kobj_uevent_env* %37, i32 0, i32 2, !dbg !16003
  %38 = load i32, i32* %envp_idx, align 8, !dbg !16003
  %cmp = icmp slt i32 %36, %38, !dbg !16004
  br i1 %cmp, label %for.body, label %for.end, !dbg !16005

for.body:                                         ; preds = %for.cond
  %39 = load i8*, i8** %buf.addr, align 8, !dbg !16006
  %40 = load i32, i32* %len, align 4, !dbg !16007
  %41 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env, align 8, !dbg !16008
  %envp = getelementptr inbounds %struct.kobj_uevent_env, %struct.kobj_uevent_env* %41, i32 0, i32 1, !dbg !16009
  %42 = load i32, i32* %i, align 4, !dbg !16010
  %idxprom = sext i32 %42 to i64, !dbg !16008
  %arrayidx = getelementptr [64 x i8*], [64 x i8*]* %envp, i64 0, i64 %idxprom, !dbg !16008
  %43 = load i8*, i8** %arrayidx, align 8, !dbg !16008
  %call36 = call i32 (i8*, i32, i8*, ...) @sysfs_emit_at(i8* %39, i32 %40, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), i8* %43) #10, !dbg !16011
  %44 = load i32, i32* %len, align 4, !dbg !16012
  %add = add i32 %44, %call36, !dbg !16012
  store i32 %add, i32* %len, align 4, !dbg !16012
  br label %for.inc, !dbg !16013

for.inc:                                          ; preds = %for.body
  %45 = load i32, i32* %i, align 4, !dbg !16014
  %inc = add i32 %45, 1, !dbg !16014
  store i32 %inc, i32* %i, align 4, !dbg !16014
  br label %for.cond, !dbg !16015, !llvm.loop !16016

for.end:                                          ; preds = %for.cond
  br label %out, !dbg !16017

out:                                              ; preds = %for.end, %if.then34, %if.then22, %if.then11, %if.then
  call void @llvm.dbg.label(metadata !16018), !dbg !16019
  %46 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env, align 8, !dbg !16020
  %47 = bitcast %struct.kobj_uevent_env* %46 to i8*, !dbg !16020
  call void @kfree(i8* %47) #10, !dbg !16021
  %48 = load i32, i32* %len, align 4, !dbg !16022
  %conv = sext i32 %48 to i64, !dbg !16022
  store i64 %conv, i64* %retval, align 8, !dbg !16023
  br label %return, !dbg !16023

return:                                           ; preds = %out, %if.then27
  %49 = load i64, i64* %retval, align 8, !dbg !16024
  ret i64 %49, !dbg !16024
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @uevent_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !16025 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %rc = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16026, metadata !DIExpression()), !dbg !16027
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !16028, metadata !DIExpression()), !dbg !16029
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16030, metadata !DIExpression()), !dbg !16031
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !16032, metadata !DIExpression()), !dbg !16033
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !16034, metadata !DIExpression()), !dbg !16035
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16036
  %kobj = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !16037
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !16038
  %2 = load i64, i64* %count.addr, align 8, !dbg !16039
  %call = call i32 @kobject_synth_uevent(%struct.kobject* %kobj, i8* %1, i64 %2) #10, !dbg !16040
  store i32 %call, i32* %rc, align 4, !dbg !16041
  %3 = load i32, i32* %rc, align 4, !dbg !16042
  %tobool = icmp ne i32 %3, 0, !dbg !16042
  br i1 %tobool, label %if.then, label %if.end, !dbg !16044

if.then:                                          ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16045
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.61, i64 0, i64 0)) #14, !dbg !16045
  %5 = load i32, i32* %rc, align 4, !dbg !16047
  %conv = sext i32 %5 to i64, !dbg !16047
  store i64 %conv, i64* %retval, align 8, !dbg !16048
  br label %return, !dbg !16048

if.end:                                           ; preds = %entry
  %6 = load i64, i64* %count.addr, align 8, !dbg !16049
  store i64 %6, i64* %retval, align 8, !dbg !16050
  br label %return, !dbg !16050

return:                                           ; preds = %if.end, %if.then
  %7 = load i64, i64* %retval, align 8, !dbg !16051
  ret i64 %7, !dbg !16051
}

; Function Attrs: noredzone
declare dso_local i32 @sysfs_emit_at(i8*, i32, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i32 @kobject_synth_uevent(%struct.kobject*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device_node* @dev_of_node(%struct.device* %dev) #0 !dbg !16052 {
entry:
  %retval = alloca %struct.device_node*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16055, metadata !DIExpression()), !dbg !16056
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16057
  %tobool = icmp ne %struct.device* %0, null, !dbg !16057
  br i1 %tobool, label %if.end, label %if.then, !dbg !16059

if.then:                                          ; preds = %entry
  store %struct.device_node* null, %struct.device_node** %retval, align 8, !dbg !16060
  br label %return, !dbg !16060

if.end:                                           ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16061
  %of_node = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 23, !dbg !16062
  %2 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !16062
  store %struct.device_node* %2, %struct.device_node** %retval, align 8, !dbg !16063
  br label %return, !dbg !16063

return:                                           ; preds = %if.end, %if.then
  %3 = load %struct.device_node*, %struct.device_node** %retval, align 8, !dbg !16064
  ret %struct.device_node* %3, !dbg !16064
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @device_is_not_partition(%struct.device* %dev) #0 !dbg !16065 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16066, metadata !DIExpression()), !dbg !16067
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16068
  %type = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !16069
  %1 = load %struct.device_type*, %struct.device_type** %type, align 8, !dbg !16069
  %cmp = icmp eq %struct.device_type* %1, @part_type, !dbg !16070
  %lnot = xor i1 %cmp, true, !dbg !16071
  %lnot.ext = zext i1 %lnot to i32, !dbg !16071
  ret i32 %lnot.ext, !dbg !16072
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @online_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !16073 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %val = alloca i8, align 1
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16074, metadata !DIExpression()), !dbg !16075
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !16076, metadata !DIExpression()), !dbg !16077
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16078, metadata !DIExpression()), !dbg !16079
  call void @llvm.dbg.declare(metadata i8* %val, metadata !16080, metadata !DIExpression()), !dbg !16081
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16082
  call void @device_lock(%struct.device* %0) #10, !dbg !16083
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16084
  %offline = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 34, !dbg !16085
  %bf.load = load i8, i8* %offline, align 8, !dbg !16085
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !16085
  %bf.clear = and i8 %bf.lshr, 1, !dbg !16085
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !16085
  %lnot = xor i1 %bf.cast, true, !dbg !16086
  %frombool = zext i1 %lnot to i8, !dbg !16087
  store i8 %frombool, i8* %val, align 1, !dbg !16087
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16088
  call void @device_unlock(%struct.device* %2) #10, !dbg !16089
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !16090
  %4 = load i8, i8* %val, align 1, !dbg !16091
  %tobool = trunc i8 %4 to i1, !dbg !16091
  %conv = zext i1 %tobool to i32, !dbg !16091
  %call = call i32 (i8*, i8*, ...) @sysfs_emit(i8* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0), i32 %conv) #10, !dbg !16092
  %conv1 = sext i32 %call to i64, !dbg !16092
  ret i64 %conv1, !dbg !16093
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @online_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !16094 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %val = alloca i8, align 1
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16095, metadata !DIExpression()), !dbg !16096
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !16097, metadata !DIExpression()), !dbg !16098
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16099, metadata !DIExpression()), !dbg !16100
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !16101, metadata !DIExpression()), !dbg !16102
  call void @llvm.dbg.declare(metadata i8* %val, metadata !16103, metadata !DIExpression()), !dbg !16104
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16105, metadata !DIExpression()), !dbg !16106
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16107
  %call = call i32 @strtobool(i8* %0, i8* %val) #10, !dbg !16108
  store i32 %call, i32* %ret, align 4, !dbg !16109
  %1 = load i32, i32* %ret, align 4, !dbg !16110
  %cmp = icmp slt i32 %1, 0, !dbg !16112
  br i1 %cmp, label %if.then, label %if.end, !dbg !16113

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !16114
  %conv = sext i32 %2 to i64, !dbg !16114
  store i64 %conv, i64* %retval, align 8, !dbg !16115
  br label %return, !dbg !16115

if.end:                                           ; preds = %entry
  %call1 = call i32 @lock_device_hotplug_sysfs() #10, !dbg !16116
  store i32 %call1, i32* %ret, align 4, !dbg !16117
  %3 = load i32, i32* %ret, align 4, !dbg !16118
  %tobool = icmp ne i32 %3, 0, !dbg !16118
  br i1 %tobool, label %if.then2, label %if.end4, !dbg !16120

if.then2:                                         ; preds = %if.end
  %4 = load i32, i32* %ret, align 4, !dbg !16121
  %conv3 = sext i32 %4 to i64, !dbg !16121
  store i64 %conv3, i64* %retval, align 8, !dbg !16122
  br label %return, !dbg !16122

if.end4:                                          ; preds = %if.end
  %5 = load i8, i8* %val, align 1, !dbg !16123
  %tobool5 = trunc i8 %5 to i1, !dbg !16123
  br i1 %tobool5, label %cond.true, label %cond.false, !dbg !16123

cond.true:                                        ; preds = %if.end4
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16124
  %call7 = call i32 @device_online(%struct.device* %6) #10, !dbg !16125
  br label %cond.end, !dbg !16123

cond.false:                                       ; preds = %if.end4
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16126
  %call8 = call i32 @device_offline(%struct.device* %7) #10, !dbg !16127
  br label %cond.end, !dbg !16123

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call7, %cond.true ], [ %call8, %cond.false ], !dbg !16123
  store i32 %cond, i32* %ret, align 4, !dbg !16128
  call void @unlock_device_hotplug() #10, !dbg !16129
  %8 = load i32, i32* %ret, align 4, !dbg !16130
  %cmp9 = icmp slt i32 %8, 0, !dbg !16131
  br i1 %cmp9, label %cond.true11, label %cond.false13, !dbg !16130

cond.true11:                                      ; preds = %cond.end
  %9 = load i32, i32* %ret, align 4, !dbg !16132
  %conv12 = sext i32 %9 to i64, !dbg !16132
  br label %cond.end14, !dbg !16130

cond.false13:                                     ; preds = %cond.end
  %10 = load i64, i64* %count.addr, align 8, !dbg !16133
  br label %cond.end14, !dbg !16130

cond.end14:                                       ; preds = %cond.false13, %cond.true11
  %cond15 = phi i64 [ %conv12, %cond.true11 ], [ %10, %cond.false13 ], !dbg !16130
  store i64 %cond15, i64* %retval, align 8, !dbg !16134
  br label %return, !dbg !16134

return:                                           ; preds = %cond.end14, %if.then2, %if.then
  %11 = load i64, i64* %retval, align 8, !dbg !16135
  ret i64 %11, !dbg !16135
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dev_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !16136 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16137, metadata !DIExpression()), !dbg !16138
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !16139, metadata !DIExpression()), !dbg !16140
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16141, metadata !DIExpression()), !dbg !16142
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16143
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16143
  %devt = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 25, !dbg !16143
  %2 = load i32, i32* %devt, align 8, !dbg !16143
  %shr = lshr i32 %2, 20, !dbg !16143
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16143
  %devt1 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 25, !dbg !16143
  %4 = load i32, i32* %devt1, align 8, !dbg !16143
  %and = and i32 %4, 1048575, !dbg !16143
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.67, i64 0, i64 0), i32 %shr, i32 %and) #10, !dbg !16143
  %conv = sext i32 %call to i64, !dbg !16143
  ret i64 %conv, !dbg !16144
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.kobject* @device_to_dev_kobj(%struct.device* %dev) #0 !dbg !16145 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %kobj = alloca %struct.kobject*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16146, metadata !DIExpression()), !dbg !16147
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj, metadata !16148, metadata !DIExpression()), !dbg !16149
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16150
  %class = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 29, !dbg !16152
  %1 = load %struct.class*, %struct.class** %class, align 8, !dbg !16152
  %tobool = icmp ne %struct.class* %1, null, !dbg !16150
  br i1 %tobool, label %if.then, label %if.else, !dbg !16153

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16154
  %class1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 29, !dbg !16155
  %3 = load %struct.class*, %struct.class** %class1, align 8, !dbg !16155
  %dev_kobj = getelementptr inbounds %struct.class, %struct.class* %3, i32 0, i32 4, !dbg !16156
  %4 = load %struct.kobject*, %struct.kobject** %dev_kobj, align 8, !dbg !16156
  store %struct.kobject* %4, %struct.kobject** %kobj, align 8, !dbg !16157
  br label %if.end, !dbg !16158

if.else:                                          ; preds = %entry
  %5 = load %struct.kobject*, %struct.kobject** @sysfs_dev_char_kobj, align 8, !dbg !16159
  store %struct.kobject* %5, %struct.kobject** %kobj, align 8, !dbg !16160
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !16161
  ret %struct.kobject* %6, !dbg !16162
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_link_wait_for_mandatory_supplier(%struct.device* %consumer) #0 !dbg !16163 {
entry:
  %consumer.addr = alloca %struct.device*, align 8
  store %struct.device* %consumer, %struct.device** %consumer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %consumer.addr, metadata !16164, metadata !DIExpression()), !dbg !16165
  %0 = load %struct.device*, %struct.device** %consumer.addr, align 8, !dbg !16166
  call void @device_link_wait_for_supplier(%struct.device* %0, i1 zeroext true) #10, !dbg !16167
  ret void, !dbg !16168
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_link_wait_for_optional_supplier(%struct.device* %consumer) #0 !dbg !16169 {
entry:
  %consumer.addr = alloca %struct.device*, align 8
  store %struct.device* %consumer, %struct.device** %consumer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %consumer.addr, metadata !16170, metadata !DIExpression()), !dbg !16171
  %0 = load %struct.device*, %struct.device** %consumer.addr, align 8, !dbg !16172
  call void @device_link_wait_for_supplier(%struct.device* %0, i1 zeroext false) #10, !dbg !16173
  ret void, !dbg !16174
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_link_wait_for_supplier(%struct.device* %consumer, i1 zeroext %need_for_probe) #0 !dbg !16175 {
entry:
  %consumer.addr = alloca %struct.device*, align 8
  %need_for_probe.addr = alloca i8, align 1
  store %struct.device* %consumer, %struct.device** %consumer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %consumer.addr, metadata !16176, metadata !DIExpression()), !dbg !16177
  %frombool = zext i1 %need_for_probe to i8
  store i8 %frombool, i8* %need_for_probe.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %need_for_probe.addr, metadata !16178, metadata !DIExpression()), !dbg !16179
  call void @mutex_lock(%struct.mutex* @wfs_lock) #10, !dbg !16180
  %0 = load %struct.device*, %struct.device** %consumer.addr, align 8, !dbg !16181
  %links = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 10, !dbg !16182
  %needs_suppliers = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links, i32 0, i32 2, !dbg !16183
  call void @list_add_tail(%struct.list_head* %needs_suppliers, %struct.list_head* @wait_for_suppliers) #10, !dbg !16184
  %1 = load i8, i8* %need_for_probe.addr, align 1, !dbg !16185
  %tobool = trunc i8 %1 to i1, !dbg !16185
  %2 = load %struct.device*, %struct.device** %consumer.addr, align 8, !dbg !16186
  %links1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 10, !dbg !16187
  %need_for_probe2 = getelementptr inbounds %struct.dev_links_info, %struct.dev_links_info* %links1, i32 0, i32 4, !dbg !16188
  %frombool3 = zext i1 %tobool to i8, !dbg !16189
  store i8 %frombool3, i8* %need_for_probe2, align 8, !dbg !16189
  call void @mutex_unlock(%struct.mutex* @wfs_lock) #10, !dbg !16190
  ret void, !dbg !16191
}

; Function Attrs: noredzone
declare dso_local void @sysfs_delete_link(%struct.kobject*, %struct.kobject*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @live_in_glue_dir(%struct.kobject* %kobj, %struct.device* %dev) #0 !dbg !16192 {
entry:
  %retval = alloca i1, align 1
  %kobj.addr = alloca %struct.kobject*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !16195, metadata !DIExpression()), !dbg !16196
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16197, metadata !DIExpression()), !dbg !16198
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !16199
  %tobool = icmp ne %struct.kobject* %0, null, !dbg !16199
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !16201

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16202
  %class = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 29, !dbg !16203
  %2 = load %struct.class*, %struct.class** %class, align 8, !dbg !16203
  %tobool1 = icmp ne %struct.class* %2, null, !dbg !16202
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !16204

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %3 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !16205
  %kset = getelementptr inbounds %struct.kobject, %struct.kobject* %3, i32 0, i32 3, !dbg !16206
  %4 = load %struct.kset*, %struct.kset** %kset, align 8, !dbg !16206
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16207
  %class3 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 29, !dbg !16208
  %6 = load %struct.class*, %struct.class** %class3, align 8, !dbg !16208
  %p = getelementptr inbounds %struct.class, %struct.class* %6, i32 0, i32 14, !dbg !16209
  %7 = load %struct.subsys_private*, %struct.subsys_private** %p, align 8, !dbg !16209
  %glue_dirs = getelementptr inbounds %struct.subsys_private, %struct.subsys_private* %7, i32 0, i32 10, !dbg !16210
  %cmp = icmp ne %struct.kset* %4, %glue_dirs, !dbg !16211
  br i1 %cmp, label %if.then, label %if.end, !dbg !16212

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !16213
  br label %return, !dbg !16213

if.end:                                           ; preds = %lor.lhs.false2
  store i1 true, i1* %retval, align 1, !dbg !16214
  br label %return, !dbg !16214

return:                                           ; preds = %if.end, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !16215
  ret i1 %8, !dbg !16215
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kref_read(%struct.kref* %kref) #0 !dbg !16216 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !16221, metadata !DIExpression()), !dbg !16222
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !16223
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !16224
  %call = call i32 @refcount_read(%struct.refcount_struct* %refcount) #10, !dbg !16225
  ret i32 %call, !dbg !16226
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kobject_has_children(%struct.kobject* %kobj) #0 !dbg !16227 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !16230, metadata !DIExpression()), !dbg !16231
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !16232, metadata !DIExpression()), !dbg !16234
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !16234
  %kref = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 6, !dbg !16234
  %call = call i32 @kref_read(%struct.kref* %kref) #10, !dbg !16234
  %cmp = icmp eq i32 %call, 0, !dbg !16234
  %lnot = xor i1 %cmp, true, !dbg !16234
  %lnot1 = xor i1 %lnot, true, !dbg !16234
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !16234
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !16234
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !16235
  %tobool = icmp ne i32 %1, 0, !dbg !16235
  %lnot2 = xor i1 %tobool, true, !dbg !16235
  %lnot4 = xor i1 %lnot2, true, !dbg !16235
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !16235
  %conv = sext i32 %lnot.ext5 to i64, !dbg !16235
  %tobool6 = icmp ne i64 %conv, 0, !dbg !16235
  br i1 %tobool6, label %if.then, label %if.end, !dbg !16234

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !16235

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !16237

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !16239

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !16237

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.69, i64 0, i64 0), i32 133, i32 2307, i64 12) #5, !dbg !16241, !srcloc !16243
  br label %do.end9, !dbg !16241

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 98) #5, !dbg !16244, !srcloc !16246
  br label %do.body10, !dbg !16237

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !16247

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !16237

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !16237

if.end:                                           ; preds = %do.end12, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !16234
  %tobool13 = icmp ne i32 %2, 0, !dbg !16234
  %lnot14 = xor i1 %tobool13, true, !dbg !16234
  %lnot16 = xor i1 %lnot14, true, !dbg !16234
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !16234
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !16234
  store i64 %conv18, i64* %tmp, align 8, !dbg !16235
  %3 = load i64, i64* %tmp, align 8, !dbg !16234
  %4 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !16249
  %sd = getelementptr inbounds %struct.kobject, %struct.kobject* %4, i32 0, i32 5, !dbg !16250
  %5 = load %struct.kernfs_node*, %struct.kernfs_node** %sd, align 8, !dbg !16250
  %tobool19 = icmp ne %struct.kernfs_node* %5, null, !dbg !16249
  br i1 %tobool19, label %land.rhs, label %land.end, !dbg !16251

land.rhs:                                         ; preds = %if.end
  %6 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !16252
  %sd20 = getelementptr inbounds %struct.kobject, %struct.kobject* %6, i32 0, i32 5, !dbg !16253
  %7 = load %struct.kernfs_node*, %struct.kernfs_node** %sd20, align 8, !dbg !16253
  %8 = getelementptr inbounds %struct.kernfs_node, %struct.kernfs_node* %7, i32 0, i32 7, !dbg !16254
  %dir = bitcast %union.anon.86* %8 to %struct.kernfs_elem_dir*, !dbg !16254
  %subdirs = getelementptr inbounds %struct.kernfs_elem_dir, %struct.kernfs_elem_dir* %dir, i32 0, i32 0, !dbg !16255
  %9 = load i64, i64* %subdirs, align 8, !dbg !16255
  %tobool21 = icmp ne i64 %9, 0, !dbg !16251
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %10 = phi i1 [ false, %if.end ], [ %tobool21, %land.rhs ], !dbg !16256
  ret i1 %10, !dbg !16257
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @refcount_read(%struct.refcount_struct* %r) #0 !dbg !16258 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !8586, metadata !DIExpression()), !dbg !16263
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !16267, metadata !DIExpression()), !dbg !16269
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !16271, metadata !DIExpression()), !dbg !16272
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !16273, metadata !DIExpression()), !dbg !16274
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !16275, metadata !DIExpression()), !dbg !16276
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !16277
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %0, i32 0, i32 0, !dbg !16278
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !16279
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !16279
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !16280
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !16281
  %conv.i.i = trunc i64 %4 to i32, !dbg !16281
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i.i) #11, !dbg !16282
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !16283
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !16283
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #11, !dbg !16283
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !16284
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !16285
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !16285
  %9 = load volatile i32, i32* %counter.i.i, align 4, !dbg !16285
  ret i32 %9, !dbg !16286
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !16287 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !16288, metadata !DIExpression()), !dbg !16289
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !16290, metadata !DIExpression()), !dbg !16291
  ret i1 true, !dbg !16292
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !16293 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !16294, metadata !DIExpression()), !dbg !16295
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !16296
  call void @__list_del_entry(%struct.list_head* %0) #10, !dbg !16297
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !16298
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !16299
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !16300
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !16301
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !16302
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !16303
  ret void, !dbg !16304
}

; Function Attrs: noredzone
declare dso_local %struct.klist_node* @klist_next(%struct.klist_iter*) #2

; Function Attrs: noredzone
declare dso_local %struct.klist_node* @klist_prev(%struct.klist_iter*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dev_uevent_filter(%struct.kset* %kset, %struct.kobject* %kobj) #0 !dbg !16305 {
entry:
  %retval = alloca i32, align 4
  %kset.addr = alloca %struct.kset*, align 8
  %kobj.addr = alloca %struct.kobject*, align 8
  %ktype = alloca %struct.kobj_type*, align 8
  %dev = alloca %struct.device*, align 8
  store %struct.kset* %kset, %struct.kset** %kset.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kset** %kset.addr, metadata !16306, metadata !DIExpression()), !dbg !16307
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !16308, metadata !DIExpression()), !dbg !16309
  call void @llvm.dbg.declare(metadata %struct.kobj_type** %ktype, metadata !16310, metadata !DIExpression()), !dbg !16311
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !16312
  %call = call %struct.kobj_type* @get_ktype(%struct.kobject* %0) #10, !dbg !16313
  store %struct.kobj_type* %call, %struct.kobj_type** %ktype, align 8, !dbg !16311
  %1 = load %struct.kobj_type*, %struct.kobj_type** %ktype, align 8, !dbg !16314
  %cmp = icmp eq %struct.kobj_type* %1, @device_ktype, !dbg !16316
  br i1 %cmp, label %if.then, label %if.end6, !dbg !16317

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !16318, metadata !DIExpression()), !dbg !16320
  %2 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !16321
  %call1 = call %struct.device* @kobj_to_dev(%struct.kobject* %2) #10, !dbg !16322
  store %struct.device* %call1, %struct.device** %dev, align 8, !dbg !16320
  %3 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16323
  %bus = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 5, !dbg !16325
  %4 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !16325
  %tobool = icmp ne %struct.bus_type* %4, null, !dbg !16323
  br i1 %tobool, label %if.then2, label %if.end, !dbg !16326

if.then2:                                         ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !16327
  br label %return, !dbg !16327

if.end:                                           ; preds = %if.then
  %5 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16328
  %class = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 29, !dbg !16330
  %6 = load %struct.class*, %struct.class** %class, align 8, !dbg !16330
  %tobool3 = icmp ne %struct.class* %6, null, !dbg !16328
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !16331

if.then4:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !16332
  br label %return, !dbg !16332

if.end5:                                          ; preds = %if.end
  br label %if.end6, !dbg !16333

if.end6:                                          ; preds = %if.end5, %entry
  store i32 0, i32* %retval, align 4, !dbg !16334
  br label %return, !dbg !16334

return:                                           ; preds = %if.end6, %if.then4, %if.then2
  %7 = load i32, i32* %retval, align 4, !dbg !16335
  ret i32 %7, !dbg !16335
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_uevent_name(%struct.kset* %kset, %struct.kobject* %kobj) #0 !dbg !16336 {
entry:
  %retval = alloca i8*, align 8
  %kset.addr = alloca %struct.kset*, align 8
  %kobj.addr = alloca %struct.kobject*, align 8
  %dev = alloca %struct.device*, align 8
  store %struct.kset* %kset, %struct.kset** %kset.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kset** %kset.addr, metadata !16337, metadata !DIExpression()), !dbg !16338
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !16339, metadata !DIExpression()), !dbg !16340
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !16341, metadata !DIExpression()), !dbg !16342
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !16343
  %call = call %struct.device* @kobj_to_dev(%struct.kobject* %0) #10, !dbg !16344
  store %struct.device* %call, %struct.device** %dev, align 8, !dbg !16342
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16345
  %bus = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 5, !dbg !16347
  %2 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !16347
  %tobool = icmp ne %struct.bus_type* %2, null, !dbg !16345
  br i1 %tobool, label %if.then, label %if.end, !dbg !16348

if.then:                                          ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16349
  %bus1 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 5, !dbg !16350
  %4 = load %struct.bus_type*, %struct.bus_type** %bus1, align 8, !dbg !16350
  %name = getelementptr inbounds %struct.bus_type, %struct.bus_type* %4, i32 0, i32 0, !dbg !16351
  %5 = load i8*, i8** %name, align 8, !dbg !16351
  store i8* %5, i8** %retval, align 8, !dbg !16352
  br label %return, !dbg !16352

if.end:                                           ; preds = %entry
  %6 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16353
  %class = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 29, !dbg !16355
  %7 = load %struct.class*, %struct.class** %class, align 8, !dbg !16355
  %tobool2 = icmp ne %struct.class* %7, null, !dbg !16353
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !16356

if.then3:                                         ; preds = %if.end
  %8 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16357
  %class4 = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 29, !dbg !16358
  %9 = load %struct.class*, %struct.class** %class4, align 8, !dbg !16358
  %name5 = getelementptr inbounds %struct.class, %struct.class* %9, i32 0, i32 0, !dbg !16359
  %10 = load i8*, i8** %name5, align 8, !dbg !16359
  store i8* %10, i8** %retval, align 8, !dbg !16360
  br label %return, !dbg !16360

if.end6:                                          ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !16361
  br label %return, !dbg !16361

return:                                           ; preds = %if.end6, %if.then3, %if.then
  %11 = load i8*, i8** %retval, align 8, !dbg !16362
  ret i8* %11, !dbg !16362
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dev_uevent(%struct.kset* %kset, %struct.kobject* %kobj, %struct.kobj_uevent_env* %env) #0 !dbg !16363 {
entry:
  %kset.addr = alloca %struct.kset*, align 8
  %kobj.addr = alloca %struct.kobject*, align 8
  %env.addr = alloca %struct.kobj_uevent_env*, align 8
  %dev = alloca %struct.device*, align 8
  %retval1 = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %name = alloca i8*, align 8
  %mode = alloca i16, align 2
  %uid = alloca %struct.kuid_t, align 4
  %gid = alloca %struct.kgid_t, align 4
  %.compoundliteral = alloca %struct.kuid_t, align 4
  %.compoundliteral22 = alloca %struct.kgid_t, align 4
  %tmp59 = alloca i32, align 4
  %tmp72 = alloca i32, align 4
  %tmp87 = alloca i32, align 4
  store %struct.kset* %kset, %struct.kset** %kset.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kset** %kset.addr, metadata !16364, metadata !DIExpression()), !dbg !16365
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !16366, metadata !DIExpression()), !dbg !16367
  store %struct.kobj_uevent_env* %env, %struct.kobj_uevent_env** %env.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobj_uevent_env** %env.addr, metadata !16368, metadata !DIExpression()), !dbg !16369
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !16370, metadata !DIExpression()), !dbg !16371
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !16372
  %call = call %struct.device* @kobj_to_dev(%struct.kobject* %0) #10, !dbg !16373
  store %struct.device* %call, %struct.device** %dev, align 8, !dbg !16371
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !16374, metadata !DIExpression()), !dbg !16375
  store i32 0, i32* %retval1, align 4, !dbg !16375
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16376
  %devt = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 25, !dbg !16376
  %2 = load i32, i32* %devt, align 8, !dbg !16376
  %shr = lshr i32 %2, 20, !dbg !16376
  %tobool = icmp ne i32 %shr, 0, !dbg !16376
  br i1 %tobool, label %if.then, label %if.end33, !dbg !16378

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !16379, metadata !DIExpression()), !dbg !16381
  call void @llvm.dbg.declare(metadata i8** %name, metadata !16382, metadata !DIExpression()), !dbg !16383
  call void @llvm.dbg.declare(metadata i16* %mode, metadata !16384, metadata !DIExpression()), !dbg !16385
  store i16 0, i16* %mode, align 2, !dbg !16385
  call void @llvm.dbg.declare(metadata %struct.kuid_t* %uid, metadata !16386, metadata !DIExpression()), !dbg !16387
  %3 = bitcast %struct.kuid_t* %uid to i8*, !dbg !16387
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 4, i1 false), !dbg !16387
  call void @llvm.dbg.declare(metadata %struct.kgid_t* %gid, metadata !16388, metadata !DIExpression()), !dbg !16389
  %4 = bitcast %struct.kgid_t* %gid to i8*, !dbg !16389
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 4, i1 false), !dbg !16389
  %5 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !16390
  %6 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16391
  %devt2 = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 25, !dbg !16391
  %7 = load i32, i32* %devt2, align 8, !dbg !16391
  %shr3 = lshr i32 %7, 20, !dbg !16391
  %call4 = call i32 (%struct.kobj_uevent_env*, i8*, ...) @add_uevent_var(%struct.kobj_uevent_env* %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.70, i64 0, i64 0), i32 %shr3) #10, !dbg !16392
  %8 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !16393
  %9 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16394
  %devt5 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 25, !dbg !16394
  %10 = load i32, i32* %devt5, align 8, !dbg !16394
  %and = and i32 %10, 1048575, !dbg !16394
  %call6 = call i32 (%struct.kobj_uevent_env*, i8*, ...) @add_uevent_var(%struct.kobj_uevent_env* %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.71, i64 0, i64 0), i32 %and) #10, !dbg !16395
  %11 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16396
  %call7 = call i8* @device_get_devnode(%struct.device* %11, i16* %mode, %struct.kuid_t* %uid, %struct.kgid_t* %gid, i8** %tmp) #10, !dbg !16397
  store i8* %call7, i8** %name, align 8, !dbg !16398
  %12 = load i8*, i8** %name, align 8, !dbg !16399
  %tobool8 = icmp ne i8* %12, null, !dbg !16399
  br i1 %tobool8, label %if.then9, label %if.end32, !dbg !16401

if.then9:                                         ; preds = %if.then
  %13 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !16402
  %14 = load i8*, i8** %name, align 8, !dbg !16404
  %call10 = call i32 (%struct.kobj_uevent_env*, i8*, ...) @add_uevent_var(%struct.kobj_uevent_env* %13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.72, i64 0, i64 0), i8* %14) #10, !dbg !16405
  %15 = load i16, i16* %mode, align 2, !dbg !16406
  %tobool11 = icmp ne i16 %15, 0, !dbg !16406
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !16408

if.then12:                                        ; preds = %if.then9
  %16 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !16409
  %17 = load i16, i16* %mode, align 2, !dbg !16410
  %conv = zext i16 %17 to i32, !dbg !16410
  %and13 = and i32 %conv, 511, !dbg !16411
  %call14 = call i32 (%struct.kobj_uevent_env*, i8*, ...) @add_uevent_var(%struct.kobj_uevent_env* %16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.73, i64 0, i64 0), i32 %and13) #10, !dbg !16412
  br label %if.end, !dbg !16412

if.end:                                           ; preds = %if.then12, %if.then9
  %val = getelementptr inbounds %struct.kuid_t, %struct.kuid_t* %.compoundliteral, i32 0, i32 0, !dbg !16413
  store i32 0, i32* %val, align 4, !dbg !16413
  %coerce.dive = getelementptr inbounds %struct.kuid_t, %struct.kuid_t* %uid, i32 0, i32 0, !dbg !16415
  %18 = load i32, i32* %coerce.dive, align 4, !dbg !16415
  %coerce.dive15 = getelementptr inbounds %struct.kuid_t, %struct.kuid_t* %.compoundliteral, i32 0, i32 0, !dbg !16415
  %19 = load i32, i32* %coerce.dive15, align 4, !dbg !16415
  %call16 = call zeroext i1 @uid_eq(i32 %18, i32 %19) #10, !dbg !16415
  br i1 %call16, label %if.end21, label %if.then17, !dbg !16416

if.then17:                                        ; preds = %if.end
  %20 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !16417
  %coerce.dive18 = getelementptr inbounds %struct.kuid_t, %struct.kuid_t* %uid, i32 0, i32 0, !dbg !16418
  %21 = load i32, i32* %coerce.dive18, align 4, !dbg !16418
  %call19 = call i32 @from_kuid(%struct.user_namespace* @init_user_ns, i32 %21) #10, !dbg !16418
  %call20 = call i32 (%struct.kobj_uevent_env*, i8*, ...) @add_uevent_var(%struct.kobj_uevent_env* %20, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.74, i64 0, i64 0), i32 %call19) #10, !dbg !16419
  br label %if.end21, !dbg !16419

if.end21:                                         ; preds = %if.then17, %if.end
  %val23 = getelementptr inbounds %struct.kgid_t, %struct.kgid_t* %.compoundliteral22, i32 0, i32 0, !dbg !16420
  store i32 0, i32* %val23, align 4, !dbg !16420
  %coerce.dive24 = getelementptr inbounds %struct.kgid_t, %struct.kgid_t* %gid, i32 0, i32 0, !dbg !16422
  %22 = load i32, i32* %coerce.dive24, align 4, !dbg !16422
  %coerce.dive25 = getelementptr inbounds %struct.kgid_t, %struct.kgid_t* %.compoundliteral22, i32 0, i32 0, !dbg !16422
  %23 = load i32, i32* %coerce.dive25, align 4, !dbg !16422
  %call26 = call zeroext i1 @gid_eq(i32 %22, i32 %23) #10, !dbg !16422
  br i1 %call26, label %if.end31, label %if.then27, !dbg !16423

if.then27:                                        ; preds = %if.end21
  %24 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !16424
  %coerce.dive28 = getelementptr inbounds %struct.kgid_t, %struct.kgid_t* %gid, i32 0, i32 0, !dbg !16425
  %25 = load i32, i32* %coerce.dive28, align 4, !dbg !16425
  %call29 = call i32 @from_kgid(%struct.user_namespace* @init_user_ns, i32 %25) #10, !dbg !16425
  %call30 = call i32 (%struct.kobj_uevent_env*, i8*, ...) @add_uevent_var(%struct.kobj_uevent_env* %24, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.75, i64 0, i64 0), i32 %call29) #10, !dbg !16426
  br label %if.end31, !dbg !16426

if.end31:                                         ; preds = %if.then27, %if.end21
  %26 = load i8*, i8** %tmp, align 8, !dbg !16427
  call void @kfree(i8* %26) #10, !dbg !16428
  br label %if.end32, !dbg !16429

if.end32:                                         ; preds = %if.end31, %if.then
  br label %if.end33, !dbg !16430

if.end33:                                         ; preds = %if.end32, %entry
  %27 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16431
  %type = getelementptr inbounds %struct.device, %struct.device* %27, i32 0, i32 4, !dbg !16433
  %28 = load %struct.device_type*, %struct.device_type** %type, align 8, !dbg !16433
  %tobool34 = icmp ne %struct.device_type* %28, null, !dbg !16431
  br i1 %tobool34, label %land.lhs.true, label %if.end42, !dbg !16434

land.lhs.true:                                    ; preds = %if.end33
  %29 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16435
  %type35 = getelementptr inbounds %struct.device, %struct.device* %29, i32 0, i32 4, !dbg !16436
  %30 = load %struct.device_type*, %struct.device_type** %type35, align 8, !dbg !16436
  %name36 = getelementptr inbounds %struct.device_type, %struct.device_type* %30, i32 0, i32 0, !dbg !16437
  %31 = load i8*, i8** %name36, align 8, !dbg !16437
  %tobool37 = icmp ne i8* %31, null, !dbg !16435
  br i1 %tobool37, label %if.then38, label %if.end42, !dbg !16438

if.then38:                                        ; preds = %land.lhs.true
  %32 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !16439
  %33 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16440
  %type39 = getelementptr inbounds %struct.device, %struct.device* %33, i32 0, i32 4, !dbg !16441
  %34 = load %struct.device_type*, %struct.device_type** %type39, align 8, !dbg !16441
  %name40 = getelementptr inbounds %struct.device_type, %struct.device_type* %34, i32 0, i32 0, !dbg !16442
  %35 = load i8*, i8** %name40, align 8, !dbg !16442
  %call41 = call i32 (%struct.kobj_uevent_env*, i8*, ...) @add_uevent_var(%struct.kobj_uevent_env* %32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.76, i64 0, i64 0), i8* %35) #10, !dbg !16443
  br label %if.end42, !dbg !16443

if.end42:                                         ; preds = %if.then38, %land.lhs.true, %if.end33
  %36 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16444
  %driver = getelementptr inbounds %struct.device, %struct.device* %36, i32 0, i32 6, !dbg !16446
  %37 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !16446
  %tobool43 = icmp ne %struct.device_driver* %37, null, !dbg !16444
  br i1 %tobool43, label %if.then44, label %if.end48, !dbg !16447

if.then44:                                        ; preds = %if.end42
  %38 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !16448
  %39 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16449
  %driver45 = getelementptr inbounds %struct.device, %struct.device* %39, i32 0, i32 6, !dbg !16450
  %40 = load %struct.device_driver*, %struct.device_driver** %driver45, align 8, !dbg !16450
  %name46 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %40, i32 0, i32 0, !dbg !16451
  %41 = load i8*, i8** %name46, align 8, !dbg !16451
  %call47 = call i32 (%struct.kobj_uevent_env*, i8*, ...) @add_uevent_var(%struct.kobj_uevent_env* %38, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.77, i64 0, i64 0), i8* %41) #10, !dbg !16452
  br label %if.end48, !dbg !16452

if.end48:                                         ; preds = %if.then44, %if.end42
  %42 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16453
  %43 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !16454
  call void @of_device_uevent(%struct.device* %42, %struct.kobj_uevent_env* %43) #10, !dbg !16455
  %44 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16456
  %bus = getelementptr inbounds %struct.device, %struct.device* %44, i32 0, i32 5, !dbg !16458
  %45 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !16458
  %tobool49 = icmp ne %struct.bus_type* %45, null, !dbg !16456
  br i1 %tobool49, label %land.lhs.true50, label %if.end61, !dbg !16459

land.lhs.true50:                                  ; preds = %if.end48
  %46 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16460
  %bus51 = getelementptr inbounds %struct.device, %struct.device* %46, i32 0, i32 5, !dbg !16461
  %47 = load %struct.bus_type*, %struct.bus_type** %bus51, align 8, !dbg !16461
  %uevent = getelementptr inbounds %struct.bus_type, %struct.bus_type* %47, i32 0, i32 7, !dbg !16462
  %48 = load i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)** %uevent, align 8, !dbg !16462
  %tobool52 = icmp ne i32 (%struct.device*, %struct.kobj_uevent_env*)* %48, null, !dbg !16460
  br i1 %tobool52, label %if.then53, label %if.end61, !dbg !16463

if.then53:                                        ; preds = %land.lhs.true50
  %49 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16464
  %bus54 = getelementptr inbounds %struct.device, %struct.device* %49, i32 0, i32 5, !dbg !16466
  %50 = load %struct.bus_type*, %struct.bus_type** %bus54, align 8, !dbg !16466
  %uevent55 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %50, i32 0, i32 7, !dbg !16467
  %51 = load i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)** %uevent55, align 8, !dbg !16467
  %52 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16468
  %53 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !16469
  %call56 = call i32 %51(%struct.device* %52, %struct.kobj_uevent_env* %53) #10, !dbg !16464
  store i32 %call56, i32* %retval1, align 4, !dbg !16470
  %54 = load i32, i32* %retval1, align 4, !dbg !16471
  %tobool57 = icmp ne i32 %54, 0, !dbg !16471
  br i1 %tobool57, label %if.then58, label %if.end60, !dbg !16473

if.then58:                                        ; preds = %if.then53
  store i32 0, i32* %tmp59, align 4, !dbg !16474
  %55 = load i32, i32* %tmp59, align 4, !dbg !16477
  br label %if.end60, !dbg !16478

if.end60:                                         ; preds = %if.then58, %if.then53
  br label %if.end61, !dbg !16479

if.end61:                                         ; preds = %if.end60, %land.lhs.true50, %if.end48
  %56 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16480
  %class = getelementptr inbounds %struct.device, %struct.device* %56, i32 0, i32 29, !dbg !16482
  %57 = load %struct.class*, %struct.class** %class, align 8, !dbg !16482
  %tobool62 = icmp ne %struct.class* %57, null, !dbg !16480
  br i1 %tobool62, label %land.lhs.true63, label %if.end74, !dbg !16483

land.lhs.true63:                                  ; preds = %if.end61
  %58 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16484
  %class64 = getelementptr inbounds %struct.device, %struct.device* %58, i32 0, i32 29, !dbg !16485
  %59 = load %struct.class*, %struct.class** %class64, align 8, !dbg !16485
  %dev_uevent = getelementptr inbounds %struct.class, %struct.class* %59, i32 0, i32 5, !dbg !16486
  %60 = load i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)** %dev_uevent, align 8, !dbg !16486
  %tobool65 = icmp ne i32 (%struct.device*, %struct.kobj_uevent_env*)* %60, null, !dbg !16484
  br i1 %tobool65, label %if.then66, label %if.end74, !dbg !16487

if.then66:                                        ; preds = %land.lhs.true63
  %61 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16488
  %class67 = getelementptr inbounds %struct.device, %struct.device* %61, i32 0, i32 29, !dbg !16490
  %62 = load %struct.class*, %struct.class** %class67, align 8, !dbg !16490
  %dev_uevent68 = getelementptr inbounds %struct.class, %struct.class* %62, i32 0, i32 5, !dbg !16491
  %63 = load i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)** %dev_uevent68, align 8, !dbg !16491
  %64 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16492
  %65 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !16493
  %call69 = call i32 %63(%struct.device* %64, %struct.kobj_uevent_env* %65) #10, !dbg !16488
  store i32 %call69, i32* %retval1, align 4, !dbg !16494
  %66 = load i32, i32* %retval1, align 4, !dbg !16495
  %tobool70 = icmp ne i32 %66, 0, !dbg !16495
  br i1 %tobool70, label %if.then71, label %if.end73, !dbg !16497

if.then71:                                        ; preds = %if.then66
  store i32 0, i32* %tmp72, align 4, !dbg !16498
  %67 = load i32, i32* %tmp72, align 4, !dbg !16501
  br label %if.end73, !dbg !16502

if.end73:                                         ; preds = %if.then71, %if.then66
  br label %if.end74, !dbg !16503

if.end74:                                         ; preds = %if.end73, %land.lhs.true63, %if.end61
  %68 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16504
  %type75 = getelementptr inbounds %struct.device, %struct.device* %68, i32 0, i32 4, !dbg !16506
  %69 = load %struct.device_type*, %struct.device_type** %type75, align 8, !dbg !16506
  %tobool76 = icmp ne %struct.device_type* %69, null, !dbg !16504
  br i1 %tobool76, label %land.lhs.true77, label %if.end89, !dbg !16507

land.lhs.true77:                                  ; preds = %if.end74
  %70 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16508
  %type78 = getelementptr inbounds %struct.device, %struct.device* %70, i32 0, i32 4, !dbg !16509
  %71 = load %struct.device_type*, %struct.device_type** %type78, align 8, !dbg !16509
  %uevent79 = getelementptr inbounds %struct.device_type, %struct.device_type* %71, i32 0, i32 2, !dbg !16510
  %72 = load i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)** %uevent79, align 8, !dbg !16510
  %tobool80 = icmp ne i32 (%struct.device*, %struct.kobj_uevent_env*)* %72, null, !dbg !16508
  br i1 %tobool80, label %if.then81, label %if.end89, !dbg !16511

if.then81:                                        ; preds = %land.lhs.true77
  %73 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16512
  %type82 = getelementptr inbounds %struct.device, %struct.device* %73, i32 0, i32 4, !dbg !16514
  %74 = load %struct.device_type*, %struct.device_type** %type82, align 8, !dbg !16514
  %uevent83 = getelementptr inbounds %struct.device_type, %struct.device_type* %74, i32 0, i32 2, !dbg !16515
  %75 = load i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)** %uevent83, align 8, !dbg !16515
  %76 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16516
  %77 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !16517
  %call84 = call i32 %75(%struct.device* %76, %struct.kobj_uevent_env* %77) #10, !dbg !16512
  store i32 %call84, i32* %retval1, align 4, !dbg !16518
  %78 = load i32, i32* %retval1, align 4, !dbg !16519
  %tobool85 = icmp ne i32 %78, 0, !dbg !16519
  br i1 %tobool85, label %if.then86, label %if.end88, !dbg !16521

if.then86:                                        ; preds = %if.then81
  store i32 0, i32* %tmp87, align 4, !dbg !16522
  %79 = load i32, i32* %tmp87, align 4, !dbg !16525
  br label %if.end88, !dbg !16526

if.end88:                                         ; preds = %if.then86, %if.then81
  br label %if.end89, !dbg !16527

if.end89:                                         ; preds = %if.end88, %land.lhs.true77, %if.end74
  %80 = load i32, i32* %retval1, align 4, !dbg !16528
  ret i32 %80, !dbg !16529
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.kobj_type* @get_ktype(%struct.kobject* %kobj) #0 !dbg !16530 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !16533, metadata !DIExpression()), !dbg !16534
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !16535
  %ktype = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 4, !dbg !16536
  %1 = load %struct.kobj_type*, %struct.kobj_type** %ktype, align 8, !dbg !16536
  ret %struct.kobj_type* %1, !dbg !16537
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noredzone
declare dso_local i32 @add_uevent_var(%struct.kobj_uevent_env*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @uid_eq(i32 %left.coerce, i32 %right.coerce) #0 !dbg !16538 {
entry:
  %left = alloca %struct.kuid_t, align 4
  %right = alloca %struct.kuid_t, align 4
  %coerce.dive = getelementptr inbounds %struct.kuid_t, %struct.kuid_t* %left, i32 0, i32 0
  store i32 %left.coerce, i32* %coerce.dive, align 4
  %coerce.dive1 = getelementptr inbounds %struct.kuid_t, %struct.kuid_t* %right, i32 0, i32 0
  store i32 %right.coerce, i32* %coerce.dive1, align 4
  call void @llvm.dbg.declare(metadata %struct.kuid_t* %left, metadata !16541, metadata !DIExpression()), !dbg !16542
  call void @llvm.dbg.declare(metadata %struct.kuid_t* %right, metadata !16543, metadata !DIExpression()), !dbg !16544
  %coerce.dive2 = getelementptr inbounds %struct.kuid_t, %struct.kuid_t* %left, i32 0, i32 0, !dbg !16545
  %0 = load i32, i32* %coerce.dive2, align 4, !dbg !16545
  %call = call i32 @__kuid_val(i32 %0) #10, !dbg !16545
  %coerce.dive3 = getelementptr inbounds %struct.kuid_t, %struct.kuid_t* %right, i32 0, i32 0, !dbg !16546
  %1 = load i32, i32* %coerce.dive3, align 4, !dbg !16546
  %call4 = call i32 @__kuid_val(i32 %1) #10, !dbg !16546
  %cmp = icmp eq i32 %call, %call4, !dbg !16547
  ret i1 %cmp, !dbg !16548
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @from_kuid(%struct.user_namespace* %to, i32 %kuid.coerce) #0 !dbg !16549 {
entry:
  %kuid = alloca %struct.kuid_t, align 4
  %to.addr = alloca %struct.user_namespace*, align 8
  %coerce.dive = getelementptr inbounds %struct.kuid_t, %struct.kuid_t* %kuid, i32 0, i32 0
  store i32 %kuid.coerce, i32* %coerce.dive, align 4
  store %struct.user_namespace* %to, %struct.user_namespace** %to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.user_namespace** %to.addr, metadata !16552, metadata !DIExpression()), !dbg !16553
  call void @llvm.dbg.declare(metadata %struct.kuid_t* %kuid, metadata !16554, metadata !DIExpression()), !dbg !16555
  %coerce.dive1 = getelementptr inbounds %struct.kuid_t, %struct.kuid_t* %kuid, i32 0, i32 0, !dbg !16556
  %0 = load i32, i32* %coerce.dive1, align 4, !dbg !16556
  %call = call i32 @__kuid_val(i32 %0) #10, !dbg !16556
  ret i32 %call, !dbg !16557
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @gid_eq(i32 %left.coerce, i32 %right.coerce) #0 !dbg !16558 {
entry:
  %left = alloca %struct.kgid_t, align 4
  %right = alloca %struct.kgid_t, align 4
  %coerce.dive = getelementptr inbounds %struct.kgid_t, %struct.kgid_t* %left, i32 0, i32 0
  store i32 %left.coerce, i32* %coerce.dive, align 4
  %coerce.dive1 = getelementptr inbounds %struct.kgid_t, %struct.kgid_t* %right, i32 0, i32 0
  store i32 %right.coerce, i32* %coerce.dive1, align 4
  call void @llvm.dbg.declare(metadata %struct.kgid_t* %left, metadata !16561, metadata !DIExpression()), !dbg !16562
  call void @llvm.dbg.declare(metadata %struct.kgid_t* %right, metadata !16563, metadata !DIExpression()), !dbg !16564
  %coerce.dive2 = getelementptr inbounds %struct.kgid_t, %struct.kgid_t* %left, i32 0, i32 0, !dbg !16565
  %0 = load i32, i32* %coerce.dive2, align 4, !dbg !16565
  %call = call i32 @__kgid_val(i32 %0) #10, !dbg !16565
  %coerce.dive3 = getelementptr inbounds %struct.kgid_t, %struct.kgid_t* %right, i32 0, i32 0, !dbg !16566
  %1 = load i32, i32* %coerce.dive3, align 4, !dbg !16566
  %call4 = call i32 @__kgid_val(i32 %1) #10, !dbg !16566
  %cmp = icmp eq i32 %call, %call4, !dbg !16567
  ret i1 %cmp, !dbg !16568
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @from_kgid(%struct.user_namespace* %to, i32 %kgid.coerce) #0 !dbg !16569 {
entry:
  %kgid = alloca %struct.kgid_t, align 4
  %to.addr = alloca %struct.user_namespace*, align 8
  %coerce.dive = getelementptr inbounds %struct.kgid_t, %struct.kgid_t* %kgid, i32 0, i32 0
  store i32 %kgid.coerce, i32* %coerce.dive, align 4
  store %struct.user_namespace* %to, %struct.user_namespace** %to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.user_namespace** %to.addr, metadata !16572, metadata !DIExpression()), !dbg !16573
  call void @llvm.dbg.declare(metadata %struct.kgid_t* %kgid, metadata !16574, metadata !DIExpression()), !dbg !16575
  %coerce.dive1 = getelementptr inbounds %struct.kgid_t, %struct.kgid_t* %kgid, i32 0, i32 0, !dbg !16576
  %0 = load i32, i32* %coerce.dive1, align 4, !dbg !16576
  %call = call i32 @__kgid_val(i32 %0) #10, !dbg !16576
  ret i32 %call, !dbg !16577
}

; Function Attrs: noredzone
declare dso_local void @of_device_uevent(%struct.device*, %struct.kobj_uevent_env*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__kuid_val(i32 %uid.coerce) #0 !dbg !16578 {
entry:
  %uid = alloca %struct.kuid_t, align 4
  %coerce.dive = getelementptr inbounds %struct.kuid_t, %struct.kuid_t* %uid, i32 0, i32 0
  store i32 %uid.coerce, i32* %coerce.dive, align 4
  call void @llvm.dbg.declare(metadata %struct.kuid_t* %uid, metadata !16581, metadata !DIExpression()), !dbg !16582
  %val = getelementptr inbounds %struct.kuid_t, %struct.kuid_t* %uid, i32 0, i32 0, !dbg !16583
  %0 = load i32, i32* %val, align 4, !dbg !16583
  ret i32 %0, !dbg !16584
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__kgid_val(i32 %gid.coerce) #0 !dbg !16585 {
entry:
  %gid = alloca %struct.kgid_t, align 4
  %coerce.dive = getelementptr inbounds %struct.kgid_t, %struct.kgid_t* %gid, i32 0, i32 0
  store i32 %gid.coerce, i32* %coerce.dive, align 4
  call void @llvm.dbg.declare(metadata %struct.kgid_t* %gid, metadata !16588, metadata !DIExpression()), !dbg !16589
  %val = getelementptr inbounds %struct.kgid_t, %struct.kgid_t* %gid, i32 0, i32 0, !dbg !16590
  %0 = load i32, i32* %val, align 4, !dbg !16590
  ret i32 %0, !dbg !16591
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_create_release(%struct.device* %dev) #0 !dbg !16592 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %tmp = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16593, metadata !DIExpression()), !dbg !16594
  store i32 0, i32* %tmp, align 4, !dbg !16595
  %0 = load i32, i32* %tmp, align 4, !dbg !16598
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16599
  %2 = bitcast %struct.device* %1 to i8*, !dbg !16599
  call void @kfree(i8* %2) #10, !dbg !16600
  ret void, !dbg !16601
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #0 !dbg !16602 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16603, metadata !DIExpression()), !dbg !16604
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !16605, metadata !DIExpression()), !dbg !16606
  %0 = load i8*, i8** %data.addr, align 8, !dbg !16607
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16608
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !16609
  store i8* %0, i8** %driver_data, align 8, !dbg !16610
  ret void, !dbg !16611
}

; Function Attrs: noredzone
declare dso_local %struct.device* @class_find_device(%struct.class*, %struct.device*, i8*, i32 (%struct.device*, i8*)*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_move(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !16612 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !16613, metadata !DIExpression()), !dbg !16614
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !16615, metadata !DIExpression()), !dbg !16616
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !16617
  call void @__list_del_entry(%struct.list_head* %0) #10, !dbg !16618
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !16619
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !16620
  call void @list_add(%struct.list_head* %1, %struct.list_head* %2) #10, !dbg !16621
  ret void, !dbg !16622
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !16623 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !16624, metadata !DIExpression()), !dbg !16625
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !16626, metadata !DIExpression()), !dbg !16627
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !16628
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !16629
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !16630
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !16631
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !16631
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #10, !dbg !16632
  ret void, !dbg !16633
}

; Function Attrs: noredzone
declare dso_local i32 @sysfs_groups_change_owner(%struct.kobject*, %struct.attribute_group**, i32, i32) #2

; Function Attrs: noredzone
declare dso_local i64 @strscpy(i8*, i8*, i64) #2

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noredzone }
attributes #11 = { noredzone nounwind }
attributes #12 = { noredzone nounwind readnone }
attributes #13 = { nounwind readnone }
attributes #14 = { cold noredzone }
attributes #15 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!7918, !7919, !7920, !7921}
!llvm.ident = !{!7922}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "device_links_srcu", scope: !2, file: !3, line: 60, type: !7905, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !7437, globals: !7801, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/base/core.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !57, !64, !95, !129, !170, !177, !208, !221, !229, !235, !242, !246, !250, !257, !263, !7293, !4289, !4384, !6138, !6157, !4691, !5019, !5111, !5193, !5201, !5244, !5269, !5294, !5447, !7394, !7402, !7407, !7417, !7423, !7430}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !31, line: 115, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!32 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!33 = !{!34, !35, !36}
!34 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!35 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!36 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !31, line: 836, baseType: !7, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56}
!39 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!42 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!43 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!44 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!45 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!46 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!47 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!48 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!49 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!50 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!51 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!52 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!53 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!54 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!55 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!56 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !31, line: 860, baseType: !7, size: 32, elements: !58)
!58 = !{!59, !60, !61, !62, !63}
!59 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!60 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!61 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!62 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!63 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !65, line: 369, baseType: !7, size: 32, elements: !66)
!65 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!66 = !{!67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94}
!67 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!68 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!69 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!70 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!71 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!72 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!73 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!74 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!75 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!76 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!77 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!78 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!79 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!80 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!81 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!82 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!83 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!84 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!85 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!86 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!87 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!88 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!89 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!90 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!91 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!92 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!93 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!94 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !96, line: 170, baseType: !7, size: 32, elements: !97)
!96 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128}
!98 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!101 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!102 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!103 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!104 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!105 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!106 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!107 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!108 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!109 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!110 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!111 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!112 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!113 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!114 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!115 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!116 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!117 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!118 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!119 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!120 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!121 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!122 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!123 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!124 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!125 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!126 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!127 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!128 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !96, line: 204, baseType: !7, size: 32, elements: !130)
!130 = !{!131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169}
!131 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!133 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!134 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!135 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!136 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!137 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!138 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!139 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!140 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!141 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!142 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!143 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!144 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!145 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!146 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!147 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!148 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!149 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!150 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!151 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!152 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!153 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!154 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!155 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!156 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!157 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!158 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!159 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!160 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!161 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!162 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!163 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!164 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!165 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!166 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!167 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!168 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!169 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !65, line: 578, baseType: !7, size: 32, elements: !171)
!171 = !{!172, !173, !174, !175, !176}
!172 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!173 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!174 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!175 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!176 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!177 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !96, line: 130, baseType: !7, size: 32, elements: !178)
!178 = !{!179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207}
!179 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!180 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!181 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!182 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!183 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!184 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!185 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!186 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!187 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!188 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!189 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!190 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!191 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!192 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!193 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!194 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!195 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!196 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!197 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!198 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!199 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!200 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!201 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!202 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!203 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!204 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!205 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!206 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!207 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!208 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !209, line: 585, baseType: !7, size: 32, elements: !210)
!209 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!210 = !{!211, !212, !213, !214, !215, !216, !217, !218, !219, !220}
!211 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!212 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!213 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!214 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!215 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!216 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!217 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!218 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!219 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!220 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!221 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !209, line: 602, baseType: !7, size: 32, elements: !222)
!222 = !{!223, !224, !225, !226, !227, !228}
!223 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!224 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!225 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!226 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!227 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!228 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!229 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !209, line: 615, baseType: !7, size: 32, elements: !230)
!230 = !{!231, !232, !233, !234}
!231 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!232 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!233 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!234 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!235 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !209, line: 626, baseType: !7, size: 32, elements: !236)
!236 = !{!237, !238, !239, !240, !241}
!237 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!238 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!239 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!240 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!241 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!242 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !209, line: 638, baseType: !7, size: 32, elements: !243)
!243 = !{!244, !245}
!244 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!245 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!246 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !209, line: 647, baseType: !7, size: 32, elements: !247)
!247 = !{!248, !249}
!248 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!249 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!250 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !251, line: 54, baseType: !7, size: 32, elements: !252)
!251 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!252 = !{!253, !254, !255, !256}
!253 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!254 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!255 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!256 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!257 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !31, line: 423, baseType: !7, size: 32, elements: !258)
!258 = !{!259, !260, !261, !262}
!259 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!260 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!261 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!262 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!263 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !264, file: !31, line: 2085, baseType: !7, size: 32, elements: !7387)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !31, line: 1858, size: 15808, elements: !265)
!265 = !{!266, !271, !294, !311, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !328, !336, !337, !338, !339, !340, !341, !342, !343, !344, !370, !380, !381, !382, !387, !388, !392, !395, !6602, !7116, !7120, !7160, !7161, !7162, !7163, !7164, !7165, !7166, !7167, !7168, !7169, !7170, !7171, !7172, !7173, !7174, !7175, !7176, !7177, !7178, !7179, !7180, !7181, !7182, !7183, !7184, !7185, !7186, !7191, !7192, !7193, !7194, !7195, !7196, !7197, !7200, !7203, !7206, !7209, !7212, !7213, !7226, !7227, !7228, !7229, !7230, !7231, !7238, !7239, !7273, !7274, !7275, !7276, !7277, !7278, !7279, !7280, !7281, !7284, !7285, !7286, !7287, !7288, !7289, !7290, !7291, !7292, !7297, !7298, !7299, !7304, !7341, !7342, !7344, !7345, !7349, !7350, !7351, !7352, !7358, !7360, !7363, !7366, !7368, !7369, !7370, !7371, !7372, !7376, !7379}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !264, file: !31, line: 1859, baseType: !267, size: 128)
!267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 128, elements: !269)
!268 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!269 = !{!270}
!270 = !DISubrange(count: 16)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !264, file: !31, line: 1860, baseType: !272, size: 64, offset: 128)
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !31, line: 938, size: 384, elements: !274)
!274 = !{!275, !283, !289, !291}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !273, file: !31, line: 939, baseType: !276, size: 128)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !277, line: 186, size: 128, elements: !278)
!277 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!278 = !{!279, !281}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !276, file: !277, line: 187, baseType: !280, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !276, file: !277, line: 187, baseType: !282, size: 64, offset: 64)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !273, file: !31, line: 940, baseType: !284, size: 128, offset: 128)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !277, line: 178, size: 128, elements: !285)
!285 = !{!286, !288}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !284, file: !277, line: 179, baseType: !287, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !284, file: !277, line: 179, baseType: !287, size: 64, offset: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !273, file: !31, line: 941, baseType: !290, size: 64, offset: 256)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !273, file: !31, line: 942, baseType: !292, size: 64, offset: 320)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !268)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !264, file: !31, line: 1861, baseType: !295, size: 64, offset: 192)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !31, line: 930, size: 128, elements: !297)
!297 = !{!298, !307}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !296, file: !31, line: 931, baseType: !299, size: 128, align: 64)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !277, line: 216, size: 128, align: 64, elements: !300)
!300 = !{!301, !303}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !299, file: !277, line: 217, baseType: !302, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !299, file: !277, line: 218, baseType: !304, size: 64, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = !DISubroutineType(types: !306)
!306 = !{null, !302}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !296, file: !31, line: 932, baseType: !308, offset: 128)
!308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, elements: !309)
!309 = !{!310}
!310 = !DISubrange(count: -1)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !264, file: !31, line: 1866, baseType: !312, size: 64, offset: 256)
!312 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !264, file: !31, line: 1867, baseType: !312, size: 64, offset: 320)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !264, file: !31, line: 1868, baseType: !312, size: 64, offset: 384)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !264, file: !31, line: 1869, baseType: !32, size: 32, offset: 448)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !264, file: !31, line: 1877, baseType: !312, size: 64, offset: 512)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !264, file: !31, line: 1879, baseType: !284, size: 128, offset: 576)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !264, file: !31, line: 1880, baseType: !284, size: 128, offset: 704)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !264, file: !31, line: 1881, baseType: !284, size: 128, offset: 832)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !264, file: !31, line: 1882, baseType: !284, size: 128, offset: 960)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !264, file: !31, line: 1883, baseType: !284, size: 128, offset: 1088)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !264, file: !31, line: 1884, baseType: !284, size: 128, offset: 1216)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !264, file: !31, line: 1889, baseType: !324, size: 256, offset: 1344)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !264, file: !31, line: 1886, size: 256, elements: !325)
!325 = !{!326, !327}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !324, file: !31, line: 1887, baseType: !284, size: 128)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !324, file: !31, line: 1888, baseType: !284, size: 128, offset: 128)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !264, file: !31, line: 1891, baseType: !329, size: 64, offset: 1600)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !330, line: 12, baseType: !331)
!330 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !332, line: 23, baseType: !333)
!332 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !334, line: 31, baseType: !335)
!334 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!335 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !264, file: !31, line: 1892, baseType: !329, size: 64, offset: 1664)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !264, file: !31, line: 1893, baseType: !329, size: 64, offset: 1728)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !264, file: !31, line: 1894, baseType: !329, size: 64, offset: 1792)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !264, file: !31, line: 1895, baseType: !329, size: 64, offset: 1856)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !264, file: !31, line: 1896, baseType: !329, size: 64, offset: 1920)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !264, file: !31, line: 1897, baseType: !329, size: 64, offset: 1984)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !264, file: !31, line: 1899, baseType: !32, size: 32, offset: 2048)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !264, file: !31, line: 1900, baseType: !32, size: 32, offset: 2080)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !264, file: !31, line: 1902, baseType: !345, size: 1472, offset: 2112)
!345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !31, line: 169, size: 1472, elements: !346)
!346 = !{!347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !345, file: !31, line: 170, baseType: !312, size: 64)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !345, file: !31, line: 171, baseType: !312, size: 64, offset: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !345, file: !31, line: 172, baseType: !312, size: 64, offset: 128)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !345, file: !31, line: 173, baseType: !312, size: 64, offset: 192)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !345, file: !31, line: 174, baseType: !312, size: 64, offset: 256)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !345, file: !31, line: 175, baseType: !312, size: 64, offset: 320)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !345, file: !31, line: 176, baseType: !312, size: 64, offset: 384)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !345, file: !31, line: 177, baseType: !312, size: 64, offset: 448)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !345, file: !31, line: 178, baseType: !312, size: 64, offset: 512)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !345, file: !31, line: 179, baseType: !312, size: 64, offset: 576)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !345, file: !31, line: 180, baseType: !312, size: 64, offset: 640)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !345, file: !31, line: 181, baseType: !312, size: 64, offset: 704)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !345, file: !31, line: 182, baseType: !312, size: 64, offset: 768)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !345, file: !31, line: 183, baseType: !312, size: 64, offset: 832)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !345, file: !31, line: 184, baseType: !312, size: 64, offset: 896)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !345, file: !31, line: 185, baseType: !312, size: 64, offset: 960)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !345, file: !31, line: 186, baseType: !312, size: 64, offset: 1024)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !345, file: !31, line: 187, baseType: !312, size: 64, offset: 1088)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !345, file: !31, line: 188, baseType: !312, size: 64, offset: 1152)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !345, file: !31, line: 189, baseType: !312, size: 64, offset: 1216)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !345, file: !31, line: 190, baseType: !312, size: 64, offset: 1280)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !345, file: !31, line: 191, baseType: !312, size: 64, offset: 1344)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !345, file: !31, line: 192, baseType: !312, size: 64, offset: 1408)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !264, file: !31, line: 1904, baseType: !371, size: 64, offset: 3584)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !372, line: 13, baseType: !373)
!372 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !277, line: 175, baseType: !374)
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !277, line: 173, size: 64, elements: !375)
!375 = !{!376}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !374, file: !277, line: 174, baseType: !377, size: 64)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !332, line: 22, baseType: !378)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !334, line: 30, baseType: !379)
!379 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !264, file: !31, line: 1905, baseType: !371, size: 64, offset: 3648)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !264, file: !31, line: 1906, baseType: !371, size: 64, offset: 3712)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !264, file: !31, line: 1909, baseType: !383, size: 32, offset: 3776)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !277, line: 168, baseType: !384)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !277, line: 166, size: 32, elements: !385)
!385 = !{!386}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !384, file: !277, line: 167, baseType: !32, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !264, file: !31, line: 1910, baseType: !383, size: 32, offset: 3808)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !264, file: !31, line: 1913, baseType: !389, size: 64, offset: 3840)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !391)
!391 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !31, line: 1913, flags: DIFlagFwdDecl)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !264, file: !31, line: 1914, baseType: !393, size: 64, offset: 3904)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !31, line: 1914, flags: DIFlagFwdDecl)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !264, file: !31, line: 1916, baseType: !396, size: 64, offset: 3968)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !398)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !31, line: 1283, size: 4416, elements: !399)
!399 = !{!400, !404, !408, !409, !410, !573, !577, !582, !586, !587, !592, !593, !716, !721, !725, !731, !735, !767, !775, !779, !784, !788, !789, !795, !799, !803, !807, !808, !830, !834, !849, !860, !864, !873, !877, !878, !882, !903, !907, !911, !915, !919, !926, !930, !948, !952, !1002, !1006, !1011, !1015, !1019, !1023, !1033, !1034, !1043, !1049, !1050, !1054, !1058, !1062, !1066, !1067, !1071, !1072, !6562, !6582, !6586, !6592, !6598}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !398, file: !31, line: 1284, baseType: !401, size: 64)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!402 = !DISubroutineType(types: !403)
!403 = !{!32, !290}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !398, file: !31, line: 1285, baseType: !405, size: 64, offset: 64)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = !DISubroutineType(types: !407)
!407 = !{null, !290}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !398, file: !31, line: 1286, baseType: !401, size: 64, offset: 128)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !398, file: !31, line: 1287, baseType: !401, size: 64, offset: 192)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !398, file: !31, line: 1288, baseType: !411, size: 64, offset: 256)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!412 = !DISubroutineType(types: !413)
!413 = !{!414, !415, !290}
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !31, line: 120, baseType: !30)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !417, line: 713, size: 1600, elements: !418)
!417 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!418 = !{!419, !441, !449, !456, !460, !472, !473, !474, !477, !478, !479, !485, !486, !487, !488, !489, !490, !491, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !531, !532, !533, !534, !536, !537, !542, !547, !552, !553, !554, !555, !556, !557, !558, !559, !560, !562, !563, !565, !566, !567}
!419 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 714, baseType: !420, size: 192)
!420 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 714, size: 192, elements: !421)
!421 = !{!422, !432, !440}
!422 = !DIDerivedType(tag: DW_TAG_member, scope: !420, file: !417, line: 715, baseType: !423, size: 192)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !420, file: !417, line: 715, size: 192, elements: !424)
!424 = !{!425, !426, !427}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !423, file: !417, line: 717, baseType: !415, size: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !423, file: !417, line: 718, baseType: !415, size: 64, offset: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, scope: !423, file: !417, line: 720, baseType: !428, size: 64, offset: 128)
!428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !423, file: !417, line: 720, size: 64, elements: !429)
!429 = !{!430, !431}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !428, file: !417, line: 721, baseType: !290, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !428, file: !417, line: 726, baseType: !312, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !420, file: !417, line: 729, baseType: !433, size: 192, align: 64)
!433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !434, line: 24, size: 192, align: 64, elements: !435)
!434 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!435 = !{!436, !437, !439}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !433, file: !434, line: 25, baseType: !312, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !433, file: !434, line: 26, baseType: !438, size: 64, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !433, file: !434, line: 27, baseType: !438, size: 64, offset: 128)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !420, file: !417, line: 730, baseType: !284, size: 128)
!441 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 733, baseType: !442, size: 64, offset: 192)
!442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 733, size: 64, elements: !443)
!443 = !{!444, !448}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !442, file: !417, line: 734, baseType: !445, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !447, line: 19, flags: DIFlagFwdDecl)
!447 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!448 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !442, file: !417, line: 735, baseType: !32, size: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 738, baseType: !450, size: 64, offset: 256)
!450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 738, size: 64, elements: !451)
!451 = !{!452, !455}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !450, file: !417, line: 739, baseType: !453, size: 64)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !454, line: 29, baseType: !377)
!454 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!455 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !450, file: !417, line: 740, baseType: !331, size: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !416, file: !417, line: 748, baseType: !457, size: 384, align: 64, offset: 320)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 384, elements: !458)
!458 = !{!459}
!459 = !DISubrange(count: 48)
!460 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 750, baseType: !461, size: 128, offset: 704)
!461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 750, size: 128, elements: !462)
!462 = !{!463, !471}
!463 = !DIDerivedType(tag: DW_TAG_member, scope: !461, file: !417, line: 751, baseType: !464, size: 128)
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !461, file: !417, line: 751, size: 128, elements: !465)
!465 = !{!466, !467}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !464, file: !417, line: 752, baseType: !312, size: 64)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !464, file: !417, line: 753, baseType: !468, size: 64, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!469 = !DISubroutineType(types: !470)
!470 = !{null, !415}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !461, file: !417, line: 755, baseType: !284, size: 128)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !416, file: !417, line: 761, baseType: !7, size: 32, offset: 832)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !416, file: !417, line: 762, baseType: !7, size: 32, offset: 864)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !416, file: !417, line: 763, baseType: !475, size: 16, offset: 896)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !334, line: 24, baseType: !476)
!476 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !416, file: !417, line: 764, baseType: !475, size: 16, offset: 912)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !416, file: !417, line: 769, baseType: !475, size: 16, offset: 928)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !416, file: !417, line: 780, baseType: !480, offset: 944)
!480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, elements: !483)
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !334, line: 21, baseType: !482)
!482 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!483 = !{!484}
!484 = !DISubrange(count: 0)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !416, file: !417, line: 782, baseType: !481, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !416, file: !417, line: 783, baseType: !481, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !416, file: !417, line: 784, baseType: !481, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !416, file: !417, line: 785, baseType: !481, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !416, file: !417, line: 786, baseType: !481, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !416, file: !417, line: 787, baseType: !481, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !416, file: !417, line: 795, baseType: !492, offset: 960)
!492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, elements: !483)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !334, line: 27, baseType: !7)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !416, file: !417, line: 807, baseType: !480, offset: 960)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !416, file: !417, line: 809, baseType: !481, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !416, file: !417, line: 810, baseType: !481, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !416, file: !417, line: 811, baseType: !481, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !416, file: !417, line: 812, baseType: !481, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !416, file: !417, line: 813, baseType: !481, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !416, file: !417, line: 815, baseType: !481, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !416, file: !417, line: 816, baseType: !481, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !416, file: !417, line: 817, baseType: !481, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !416, file: !417, line: 818, baseType: !481, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !416, file: !417, line: 819, baseType: !481, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !416, file: !417, line: 821, baseType: !481, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !416, file: !417, line: 822, baseType: !481, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !416, file: !417, line: 823, baseType: !481, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !416, file: !417, line: 832, baseType: !480, offset: 976)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !416, file: !417, line: 834, baseType: !481, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !416, file: !417, line: 835, baseType: !481, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !416, file: !417, line: 836, baseType: !481, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !416, file: !417, line: 837, baseType: !481, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !416, file: !417, line: 838, baseType: !481, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !416, file: !417, line: 840, baseType: !481, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !416, file: !417, line: 843, baseType: !481, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !416, file: !417, line: 844, baseType: !481, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !416, file: !417, line: 845, baseType: !481, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !416, file: !417, line: 847, baseType: !481, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !416, file: !417, line: 848, baseType: !481, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!520 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 866, baseType: !521, size: 32, offset: 992)
!521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 866, size: 32, elements: !522)
!522 = !{!523, !526}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !521, file: !417, line: 867, baseType: !524, size: 32)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !525, line: 37, baseType: !493)
!525 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!526 = !DIDerivedType(tag: DW_TAG_member, scope: !521, file: !417, line: 868, baseType: !527, size: 32)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !521, file: !417, line: 868, size: 32, elements: !528)
!528 = !{!529, !530}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !527, file: !417, line: 869, baseType: !475, size: 16)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !527, file: !417, line: 870, baseType: !475, size: 16, offset: 16)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !416, file: !417, line: 873, baseType: !493, size: 32, offset: 1024)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !416, file: !417, line: 874, baseType: !32, size: 32, offset: 1056)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !416, file: !417, line: 875, baseType: !493, size: 32, offset: 1088)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !416, file: !417, line: 876, baseType: !535, size: 16, offset: 1120)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !525, line: 30, baseType: !475)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !416, file: !417, line: 877, baseType: !475, size: 16, offset: 1136)
!537 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 879, baseType: !538, size: 32, offset: 1152)
!538 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 879, size: 32, elements: !539)
!539 = !{!540, !541}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !538, file: !417, line: 880, baseType: !7, size: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !538, file: !417, line: 881, baseType: !7, size: 32)
!542 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 888, baseType: !543, size: 32, offset: 1184)
!543 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 888, size: 32, elements: !544)
!544 = !{!545, !546}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !543, file: !417, line: 889, baseType: !493, size: 32)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !543, file: !417, line: 890, baseType: !493, size: 32)
!547 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 893, baseType: !548, size: 16, offset: 1216)
!548 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 893, size: 16, elements: !549)
!549 = !{!550, !551}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !548, file: !417, line: 894, baseType: !535, size: 16)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !548, file: !417, line: 895, baseType: !481, size: 8)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !416, file: !417, line: 898, baseType: !475, size: 16, offset: 1232)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !416, file: !417, line: 899, baseType: !475, size: 16, offset: 1248)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !416, file: !417, line: 900, baseType: !475, size: 16, offset: 1264)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !416, file: !417, line: 902, baseType: !535, size: 16, offset: 1280)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !416, file: !417, line: 903, baseType: !475, size: 16, offset: 1296)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !416, file: !417, line: 904, baseType: !475, size: 16, offset: 1312)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !416, file: !417, line: 905, baseType: !475, size: 16, offset: 1328)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !416, file: !417, line: 908, baseType: !492, offset: 1344)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !416, file: !417, line: 912, baseType: !561, size: 32, offset: 1344)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !417, line: 606, baseType: !7)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !416, file: !417, line: 913, baseType: !561, size: 32, offset: 1376)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !416, file: !417, line: 914, baseType: !564, size: 64, offset: 1408)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !416, file: !417, line: 915, baseType: !564, size: 64, offset: 1472)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !416, file: !417, line: 916, baseType: !7, size: 32, offset: 1536)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !416, file: !417, line: 917, baseType: !568, size: 32, offset: 1568)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !569, line: 113, baseType: !570)
!569 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !569, line: 111, size: 32, elements: !571)
!571 = !{!572}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !570, file: !569, line: 112, baseType: !383, size: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !398, file: !31, line: 1290, baseType: !574, size: 64, offset: 320)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DISubroutineType(types: !576)
!576 = !{!329, !415, !290, !329}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !398, file: !31, line: 1293, baseType: !578, size: 64, offset: 384)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!579 = !DISubroutineType(types: !580)
!580 = !{!581, !290, !415, !290}
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !332, line: 19, baseType: !475)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !398, file: !31, line: 1296, baseType: !583, size: 64, offset: 448)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = !DISubroutineType(types: !585)
!585 = !{null, !290, !32}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !398, file: !31, line: 1298, baseType: !405, size: 64, offset: 512)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !398, file: !31, line: 1299, baseType: !588, size: 64, offset: 576)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!589 = !DISubroutineType(types: !590)
!590 = !{!32, !290, !591}
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !398, file: !31, line: 1301, baseType: !401, size: 64, offset: 640)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !398, file: !31, line: 1302, baseType: !594, size: 64, offset: 704)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DISubroutineType(types: !596)
!596 = !{!32, !290, !597, !32}
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !599, line: 234, size: 320, elements: !600)
!599 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!600 = !{!601, !605}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !598, file: !599, line: 239, baseType: !602, size: 128)
!602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !598, file: !599, line: 236, size: 128, elements: !603)
!603 = !{!604}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !602, file: !599, line: 238, baseType: !267, size: 128)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !598, file: !599, line: 255, baseType: !606, size: 192, offset: 128)
!606 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !598, file: !599, line: 241, size: 192, elements: !607)
!607 = !{!608, !620, !621, !622, !623, !624, !626, !627, !628, !637, !638, !639, !640}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !606, file: !599, line: 242, baseType: !609, size: 128)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !610, line: 32, size: 128, elements: !611)
!610 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!611 = !{!612, !616}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !609, file: !610, line: 33, baseType: !613, size: 16)
!613 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !610, line: 26, baseType: !614)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !615, line: 10, baseType: !476)
!615 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!616 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !609, file: !610, line: 34, baseType: !617, size: 112, offset: 16)
!617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 112, elements: !618)
!618 = !{!619}
!619 = !DISubrange(count: 14)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !606, file: !599, line: 243, baseType: !609, size: 128)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !606, file: !599, line: 244, baseType: !609, size: 128)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !606, file: !599, line: 245, baseType: !609, size: 128)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !606, file: !599, line: 246, baseType: !609, size: 128)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !606, file: !599, line: 247, baseType: !625, size: 16)
!625 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !606, file: !599, line: 248, baseType: !32, size: 32)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !606, file: !599, line: 249, baseType: !32, size: 32)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !606, file: !599, line: 250, baseType: !629, size: 192)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !599, line: 196, size: 192, elements: !630)
!630 = !{!631, !632, !633, !634, !635, !636}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !629, file: !599, line: 197, baseType: !312, size: 64)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !629, file: !599, line: 198, baseType: !312, size: 64, offset: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !629, file: !599, line: 199, baseType: !476, size: 16, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !629, file: !599, line: 200, baseType: !482, size: 8, offset: 144)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !629, file: !599, line: 201, baseType: !482, size: 8, offset: 152)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !629, file: !599, line: 202, baseType: !482, size: 8, offset: 160)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !606, file: !599, line: 251, baseType: !267, size: 128)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !606, file: !599, line: 252, baseType: !267, size: 128)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !606, file: !599, line: 253, baseType: !591, size: 64)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !606, file: !599, line: 254, baseType: !641, size: 128)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !599, line: 207, size: 128, elements: !642)
!642 = !{!643, !644, !645}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !641, file: !599, line: 208, baseType: !7, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !641, file: !599, line: 209, baseType: !7, size: 32, offset: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !641, file: !599, line: 222, baseType: !646, size: 64, offset: 64)
!646 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !641, file: !599, line: 210, size: 64, elements: !647)
!647 = !{!648, !656, !663, !675, !681, !688, !699, !707}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !646, file: !599, line: 212, baseType: !649, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !651, line: 56, baseType: !652)
!651 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!652 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 53, size: 32, elements: !653)
!653 = !{!654, !655}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !652, file: !651, line: 54, baseType: !476, size: 16)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !652, file: !651, line: 55, baseType: !476, size: 16, offset: 16)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !646, file: !599, line: 213, baseType: !657, size: 64)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !651, line: 80, baseType: !659)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 77, size: 64, elements: !660)
!660 = !{!661, !662}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !659, file: !651, line: 78, baseType: !7, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !659, file: !651, line: 79, baseType: !7, size: 32, offset: 32)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !646, file: !599, line: 214, baseType: !664, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !651, line: 66, baseType: !666)
!666 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 58, size: 192, elements: !667)
!667 = !{!668, !669, !670, !671, !672, !673, !674}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !666, file: !651, line: 59, baseType: !7, size: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !666, file: !651, line: 60, baseType: !7, size: 32, offset: 32)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !666, file: !651, line: 61, baseType: !7, size: 32, offset: 64)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !666, file: !651, line: 62, baseType: !7, size: 32, offset: 96)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !666, file: !651, line: 63, baseType: !7, size: 32, offset: 128)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !666, file: !651, line: 64, baseType: !476, size: 16, offset: 160)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !666, file: !651, line: 65, baseType: !476, size: 16, offset: 176)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !646, file: !599, line: 215, baseType: !676, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !651, line: 70, baseType: !678)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 68, size: 32, elements: !679)
!679 = !{!680}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !678, file: !651, line: 69, baseType: !7, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !646, file: !599, line: 216, baseType: !682, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !651, line: 75, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 72, size: 160, elements: !685)
!685 = !{!686, !687}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !684, file: !651, line: 73, baseType: !7, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !684, file: !651, line: 74, baseType: !267, size: 128, offset: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !646, file: !599, line: 217, baseType: !689, size: 64)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !651, line: 89, baseType: !691)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 82, size: 192, elements: !692)
!692 = !{!693, !694, !695, !696, !697, !698}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !691, file: !651, line: 83, baseType: !476, size: 16)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !691, file: !651, line: 84, baseType: !7, size: 32, offset: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !691, file: !651, line: 85, baseType: !7, size: 32, offset: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !691, file: !651, line: 86, baseType: !7, size: 32, offset: 96)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !691, file: !651, line: 87, baseType: !7, size: 32, offset: 128)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !691, file: !651, line: 88, baseType: !7, size: 32, offset: 160)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !646, file: !599, line: 220, baseType: !700, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !651, line: 44, baseType: !702)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 40, size: 96, elements: !703)
!703 = !{!704, !705, !706}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !702, file: !651, line: 41, baseType: !7, size: 32)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !702, file: !651, line: 42, baseType: !7, size: 32, offset: 32)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !702, file: !651, line: 43, baseType: !476, size: 16, offset: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !646, file: !599, line: 221, baseType: !708, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !651, line: 51, baseType: !710)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 46, size: 128, elements: !711)
!711 = !{!712, !713, !714, !715}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !710, file: !651, line: 47, baseType: !7, size: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !710, file: !651, line: 48, baseType: !7, size: 32, offset: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !710, file: !651, line: 49, baseType: !476, size: 16, offset: 64)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !710, file: !651, line: 50, baseType: !7, size: 32, offset: 96)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !398, file: !31, line: 1304, baseType: !717, size: 64, offset: 768)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DISubroutineType(types: !719)
!719 = !{!32, !290, !720}
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !398, file: !31, line: 1306, baseType: !722, size: 64, offset: 832)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = !DISubroutineType(types: !724)
!724 = !{!32, !290, !32}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !398, file: !31, line: 1308, baseType: !726, size: 64, offset: 896)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!727 = !DISubroutineType(types: !728)
!728 = !{!32, !290, !729}
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !31, line: 206, flags: DIFlagFwdDecl)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !398, file: !31, line: 1310, baseType: !732, size: 64, offset: 960)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = !DISubroutineType(types: !734)
!734 = !{null, !290, !7}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !398, file: !31, line: 1313, baseType: !736, size: 64, offset: 1024)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DISubroutineType(types: !738)
!738 = !{null, !290, !739}
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !741, line: 214, size: 1536, elements: !742)
!741 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!742 = !{!743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !740, file: !741, line: 215, baseType: !333, size: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !740, file: !741, line: 216, baseType: !333, size: 64, offset: 64)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !740, file: !741, line: 217, baseType: !333, size: 64, offset: 128)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !740, file: !741, line: 218, baseType: !333, size: 64, offset: 192)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !740, file: !741, line: 219, baseType: !333, size: 64, offset: 256)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !740, file: !741, line: 220, baseType: !333, size: 64, offset: 320)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !740, file: !741, line: 221, baseType: !333, size: 64, offset: 384)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !740, file: !741, line: 222, baseType: !333, size: 64, offset: 448)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !740, file: !741, line: 223, baseType: !333, size: 64, offset: 512)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !740, file: !741, line: 224, baseType: !333, size: 64, offset: 576)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !740, file: !741, line: 227, baseType: !333, size: 64, offset: 640)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !740, file: !741, line: 228, baseType: !333, size: 64, offset: 704)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !740, file: !741, line: 229, baseType: !333, size: 64, offset: 768)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !740, file: !741, line: 230, baseType: !333, size: 64, offset: 832)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !740, file: !741, line: 231, baseType: !333, size: 64, offset: 896)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !740, file: !741, line: 232, baseType: !333, size: 64, offset: 960)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !740, file: !741, line: 235, baseType: !333, size: 64, offset: 1024)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !740, file: !741, line: 236, baseType: !333, size: 64, offset: 1088)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !740, file: !741, line: 237, baseType: !333, size: 64, offset: 1152)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !740, file: !741, line: 238, baseType: !333, size: 64, offset: 1216)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !740, file: !741, line: 239, baseType: !333, size: 64, offset: 1280)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !740, file: !741, line: 242, baseType: !333, size: 64, offset: 1344)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !740, file: !741, line: 243, baseType: !333, size: 64, offset: 1408)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !740, file: !741, line: 244, baseType: !333, size: 64, offset: 1472)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !398, file: !31, line: 1315, baseType: !768, size: 64, offset: 1088)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DISubroutineType(types: !770)
!770 = !{!771, !773, !32}
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !277, line: 30, baseType: !772)
!772 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !264)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !398, file: !31, line: 1316, baseType: !776, size: 64, offset: 1152)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DISubroutineType(types: !778)
!778 = !{!32, !32, !773, !591}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !398, file: !31, line: 1319, baseType: !780, size: 64, offset: 1216)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DISubroutineType(types: !782)
!782 = !{!783, !290}
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !398, file: !31, line: 1321, baseType: !785, size: 64, offset: 1280)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = !DISubroutineType(types: !787)
!787 = !{!32, !290, !535, !581}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !398, file: !31, line: 1323, baseType: !785, size: 64, offset: 1344)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !398, file: !31, line: 1331, baseType: !790, size: 64, offset: 1408)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DISubroutineType(types: !792)
!792 = !{!32, !290, !32, !793}
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !332, line: 17, baseType: !481)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !398, file: !31, line: 1333, baseType: !796, size: 64, offset: 1472)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DISubroutineType(types: !798)
!798 = !{!32, !290, !32, !581, !794, !535}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !398, file: !31, line: 1336, baseType: !800, size: 64, offset: 1536)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DISubroutineType(types: !802)
!802 = !{!32, !290, !32, !32, !32}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !398, file: !31, line: 1339, baseType: !804, size: 64, offset: 1600)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = !DISubroutineType(types: !806)
!806 = !{!32, !290, !32, !771}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !398, file: !31, line: 1341, baseType: !804, size: 64, offset: 1664)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !398, file: !31, line: 1343, baseType: !809, size: 64, offset: 1728)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DISubroutineType(types: !811)
!811 = !{!32, !290, !32, !812}
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !814, line: 20, size: 576, elements: !815)
!814 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!815 = !{!816, !817, !821, !822, !823, !824, !825, !826, !827, !828, !829}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !813, file: !814, line: 21, baseType: !493, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !813, file: !814, line: 22, baseType: !818, size: 256, offset: 32)
!818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 256, elements: !819)
!819 = !{!820}
!820 = !DISubrange(count: 32)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !813, file: !814, line: 23, baseType: !493, size: 32, offset: 288)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !813, file: !814, line: 24, baseType: !493, size: 32, offset: 320)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !813, file: !814, line: 25, baseType: !493, size: 32, offset: 352)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !813, file: !814, line: 26, baseType: !493, size: 32, offset: 384)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !813, file: !814, line: 27, baseType: !493, size: 32, offset: 416)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !813, file: !814, line: 28, baseType: !493, size: 32, offset: 448)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !813, file: !814, line: 29, baseType: !493, size: 32, offset: 480)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !813, file: !814, line: 30, baseType: !493, size: 32, offset: 512)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !813, file: !814, line: 31, baseType: !535, size: 16, offset: 544)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !398, file: !31, line: 1346, baseType: !831, size: 64, offset: 1792)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DISubroutineType(types: !833)
!833 = !{!32, !290, !32, !32}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !398, file: !31, line: 1348, baseType: !835, size: 64, offset: 1856)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DISubroutineType(types: !837)
!837 = !{!32, !290, !32, !838}
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !814, line: 9, size: 512, elements: !840)
!840 = !{!841, !842, !843, !844, !845, !846, !847, !848}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !839, file: !814, line: 10, baseType: !333, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !839, file: !814, line: 11, baseType: !333, size: 64, offset: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !839, file: !814, line: 12, baseType: !333, size: 64, offset: 128)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !839, file: !814, line: 13, baseType: !333, size: 64, offset: 192)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !839, file: !814, line: 14, baseType: !333, size: 64, offset: 256)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !839, file: !814, line: 15, baseType: !333, size: 64, offset: 320)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !839, file: !814, line: 16, baseType: !333, size: 64, offset: 384)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !839, file: !814, line: 17, baseType: !333, size: 64, offset: 448)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !398, file: !31, line: 1352, baseType: !850, size: 64, offset: 1920)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{!32, !290, !32, !853}
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !856, line: 213, size: 32, elements: !857)
!856 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!857 = !{!858, !859}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !855, file: !856, line: 214, baseType: !475, size: 16)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !855, file: !856, line: 215, baseType: !475, size: 16, offset: 16)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !398, file: !31, line: 1355, baseType: !861, size: 64, offset: 1984)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = !DISubroutineType(types: !863)
!863 = !{!32, !290, !32, !415}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !398, file: !31, line: 1357, baseType: !865, size: 64, offset: 2048)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{!32, !290, !32, !868, !868}
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !741, line: 956, size: 128, elements: !870)
!870 = !{!871, !872}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !869, file: !741, line: 957, baseType: !493, size: 32)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !869, file: !741, line: 958, baseType: !333, size: 64, offset: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !398, file: !31, line: 1361, baseType: !874, size: 64, offset: 2112)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = !DISubroutineType(types: !876)
!876 = !{!32, !290, !32, !331, !32}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !398, file: !31, line: 1364, baseType: !804, size: 64, offset: 2176)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !398, file: !31, line: 1367, baseType: !879, size: 64, offset: 2240)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DISubroutineType(types: !881)
!881 = !{!32, !290, !37, !591}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !398, file: !31, line: 1400, baseType: !883, size: 64, offset: 2304)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!884 = !DISubroutineType(types: !885)
!885 = !{!32, !290, !290, !886}
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !888, line: 75, size: 384, elements: !889)
!888 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!889 = !{!890, !891, !894, !898, !902}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !887, file: !888, line: 76, baseType: !292, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !887, file: !888, line: 77, baseType: !892, size: 64, offset: 64)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !855)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !887, file: !888, line: 78, baseType: !895, size: 64, offset: 128)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !897)
!897 = !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !888, line: 78, flags: DIFlagFwdDecl)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !887, file: !888, line: 79, baseType: !899, size: 160, offset: 192)
!899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 160, elements: !900)
!900 = !{!901}
!901 = !DISubrange(count: 20)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !887, file: !888, line: 80, baseType: !794, size: 8, offset: 352)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !398, file: !31, line: 1403, baseType: !904, size: 64, offset: 2368)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DISubroutineType(types: !906)
!906 = !{!32, !290, !290}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !398, file: !31, line: 1405, baseType: !908, size: 64, offset: 2432)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DISubroutineType(types: !910)
!910 = !{!290, !290, !415, !771}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !398, file: !31, line: 1408, baseType: !912, size: 64, offset: 2496)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64)
!913 = !DISubroutineType(types: !914)
!914 = !{!329, !290, !329}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !398, file: !31, line: 1410, baseType: !916, size: 64, offset: 2560)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DISubroutineType(types: !918)
!918 = !{!32, !290, !329}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !398, file: !31, line: 1412, baseType: !920, size: 64, offset: 2624)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DISubroutineType(types: !922)
!922 = !{!32, !290, !923}
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !925, line: 35, flags: DIFlagFwdDecl)
!925 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!926 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !398, file: !31, line: 1414, baseType: !927, size: 64, offset: 2688)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = !DISubroutineType(types: !929)
!929 = !{null, !290, !923}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !398, file: !31, line: 1417, baseType: !931, size: 64, offset: 2752)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DISubroutineType(types: !933)
!933 = !{!32, !934, !853, !290, !946, !581, !581, !886}
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !936, line: 8, size: 96, elements: !937)
!936 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!937 = !{!938, !939, !940, !941, !943, !944, !945}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !935, file: !936, line: 9, baseType: !481, size: 8)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !935, file: !936, line: 10, baseType: !481, size: 8, offset: 8)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !935, file: !936, line: 11, baseType: !475, size: 16, offset: 16)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !935, file: !936, line: 12, baseType: !942, size: 32, offset: 32)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !334, line: 26, baseType: !32)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !935, file: !936, line: 13, baseType: !475, size: 16, offset: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !935, file: !936, line: 14, baseType: !481, size: 8, offset: 80)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !935, file: !936, line: 15, baseType: !481, size: 8, offset: 88)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !482)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !398, file: !31, line: 1424, baseType: !949, size: 64, offset: 2816)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = !DISubroutineType(types: !951)
!951 = !{!32, !934, !853, !290, !946, !581}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !398, file: !31, line: 1429, baseType: !953, size: 64, offset: 2880)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = !DISubroutineType(types: !955)
!955 = !{!32, !415, !956, !290, !290, !1001}
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !888, line: 203, size: 1024, elements: !958)
!958 = !{!959, !960, !970, !974, !978, !979, !983, !984, !985, !986, !988, !989, !990, !991}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !957, file: !888, line: 204, baseType: !415, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !957, file: !888, line: 205, baseType: !961, size: 64, offset: 64)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !963)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !856, line: 44, size: 128, elements: !964)
!964 = !{!965, !966, !967, !968, !969}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !963, file: !856, line: 45, baseType: !493, size: 32)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !963, file: !856, line: 46, baseType: !475, size: 16, offset: 32)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !963, file: !856, line: 47, baseType: !475, size: 16, offset: 48)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !963, file: !856, line: 48, baseType: !493, size: 32, offset: 64)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !963, file: !856, line: 49, baseType: !493, size: 32, offset: 96)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !957, file: !888, line: 206, baseType: !971, size: 64, offset: 128)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{!32, !415, !956}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !957, file: !888, line: 208, baseType: !975, size: 64, offset: 192)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!32, !956}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !957, file: !888, line: 209, baseType: !591, size: 64, offset: 256)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !957, file: !888, line: 211, baseType: !980, size: 64, offset: 320)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !982, line: 76, flags: DIFlagFwdDecl)
!982 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!983 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !957, file: !888, line: 212, baseType: !886, size: 64, offset: 384)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !957, file: !888, line: 213, baseType: !581, size: 16, offset: 448)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !957, file: !888, line: 214, baseType: !581, size: 16, offset: 464)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !957, file: !888, line: 215, baseType: !987, size: 32, offset: 480)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !332, line: 21, baseType: !493)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !957, file: !888, line: 216, baseType: !7, size: 32, offset: 512)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !957, file: !888, line: 216, baseType: !7, size: 32, offset: 544)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !957, file: !888, line: 217, baseType: !771, size: 8, offset: 576)
!991 = !DIDerivedType(tag: DW_TAG_member, scope: !957, file: !888, line: 218, baseType: !992, size: 384, offset: 640)
!992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !957, file: !888, line: 218, size: 384, elements: !993)
!993 = !{!994, !996}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !992, file: !888, line: 219, baseType: !995, size: 384)
!995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 384, elements: !458)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !992, file: !888, line: 224, baseType: !997, size: 384)
!997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !998, size: 384, elements: !999)
!998 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!999 = !{!1000}
!1000 = !DISubrange(count: 6)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !398, file: !31, line: 1434, baseType: !1003, size: 64, offset: 2944)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!32, !415, !853, !290, !946, !581, !987, !987, !886}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !398, file: !31, line: 1440, baseType: !1007, size: 64, offset: 3008)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!32, !290, !1010, !581, !886}
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !398, file: !31, line: 1444, baseType: !1012, size: 64, offset: 3072)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!32, !415, !987, !987, !290, !987, !32}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !398, file: !31, line: 1449, baseType: !1016, size: 64, offset: 3136)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!32, !290, !1010, !581}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !398, file: !31, line: 1452, baseType: !1020, size: 64, offset: 3200)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{!32, !290, !771}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !398, file: !31, line: 1454, baseType: !1024, size: 64, offset: 3264)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DISubroutineType(types: !1026)
!1026 = !{!32, !290, !1027}
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !31, line: 820, size: 264, elements: !1029)
!1029 = !{!1030, !1032}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1028, file: !31, line: 821, baseType: !1031, size: 256)
!1031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 256, elements: !819)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !1028, file: !31, line: 822, baseType: !482, size: 8, offset: 256)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !398, file: !31, line: 1456, baseType: !1024, size: 64, offset: 3328)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !398, file: !31, line: 1458, baseType: !1035, size: 64, offset: 3392)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{!32, !290, !1038, !1039}
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !277, line: 55, baseType: !1040)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !1041, line: 72, baseType: !1042)
!1041 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !1041, line: 16, baseType: !312)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !398, file: !31, line: 1460, baseType: !1044, size: 64, offset: 3456)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{null, !290, !1047}
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !31, line: 67, flags: DIFlagFwdDecl)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !398, file: !31, line: 1462, baseType: !1044, size: 64, offset: 3520)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !398, file: !31, line: 1464, baseType: !1051, size: 64, offset: 3584)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!591, !290, !290}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !398, file: !31, line: 1466, baseType: !1055, size: 64, offset: 3648)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{null, !290, !591}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !398, file: !31, line: 1469, baseType: !1059, size: 64, offset: 3712)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!32, !290, !32, !987}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !398, file: !31, line: 1472, baseType: !1063, size: 64, offset: 3776)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!32, !773}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !398, file: !31, line: 1473, baseType: !1020, size: 64, offset: 3840)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !398, file: !31, line: 1475, baseType: !1068, size: 64, offset: 3904)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!32, !290, !415}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !398, file: !31, line: 1477, baseType: !583, size: 64, offset: 3968)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !398, file: !31, line: 1479, baseType: !1073, size: 64, offset: 4032)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!32, !290, !1076}
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !31, line: 894, size: 256, elements: !1078)
!1078 = !{!1079, !1080}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !1077, file: !31, line: 895, baseType: !57, size: 32)
!1080 = !DIDerivedType(tag: DW_TAG_member, scope: !1077, file: !31, line: 896, baseType: !1081, size: 192, offset: 64)
!1081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1077, file: !31, line: 896, size: 192, elements: !1082)
!1082 = !{!1083, !1092, !6555}
!1083 = !DIDerivedType(tag: DW_TAG_member, scope: !1081, file: !31, line: 898, baseType: !1084, size: 192)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1081, file: !31, line: 898, size: 192, elements: !1085)
!1085 = !{!1086, !1087, !1091}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1084, file: !31, line: 899, baseType: !987, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !1084, file: !31, line: 900, baseType: !1088, size: 64, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !1090, line: 11, flags: DIFlagFwdDecl)
!1090 = !DIFile(filename: "./include/net/flow_dissector.h", directory: "/home/lizy2001/genbc/linux")
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !1084, file: !31, line: 901, baseType: !886, size: 64, offset: 128)
!1092 = !DIDerivedType(tag: DW_TAG_member, scope: !1081, file: !31, line: 904, baseType: !1093, size: 64)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1081, file: !31, line: 904, size: 64, elements: !1094)
!1094 = !{!1095}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !1093, file: !31, line: 905, baseType: !1096, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !65, line: 222, size: 2560, elements: !1098)
!1098 = !{!1099, !6534, !6535, !6553, !6554}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !1097, file: !65, line: 223, baseType: !1100, size: 2048)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !65, line: 141, size: 2048, elements: !1101)
!1101 = !{!1102, !6508, !6509, !6510, !6511, !6512, !6513, !6514, !6515, !6516, !6517, !6518, !6519, !6520, !6525, !6526, !6527, !6528, !6529, !6530, !6531, !6532, !6533}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1100, file: !65, line: 145, baseType: !1103, size: 64, align: 512)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1105)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !65, line: 54, size: 2368, elements: !1106)
!1106 = !{!1107, !1306, !1311, !6184, !6188, !6192, !6193, !6197, !6203, !6204, !6205, !6206, !6207, !6211, !6215, !6219, !6220, !6221, !6225, !6226, !6238, !6242, !6246, !6258, !6444, !6448, !6452, !6456, !6460, !6464, !6468, !6474, !6478, !6485, !6489, !6491, !6492}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !1105, file: !65, line: 56, baseType: !1108, size: 64)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1109 = !DISubroutineType(types: !1110)
!1110 = !{!32, !1111}
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !96, line: 483, size: 960, align: 64, elements: !1113)
!1113 = !{!1114, !1130, !1141, !1152, !1176, !1182, !1190, !1207, !1220, !1226, !1235, !1240, !1248, !1260, !1280, !1287, !1291, !1295, !1300}
!1114 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 484, baseType: !1115, size: 512)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 484, size: 512, elements: !1116)
!1116 = !{!1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1115, file: !96, line: 485, baseType: !493, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1115, file: !96, line: 486, baseType: !493, size: 32, offset: 32)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1115, file: !96, line: 487, baseType: !493, size: 32, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1115, file: !96, line: 488, baseType: !493, size: 32, offset: 96)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1115, file: !96, line: 489, baseType: !493, size: 32, offset: 128)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !1115, file: !96, line: 492, baseType: !493, size: 32, offset: 160)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1115, file: !96, line: 493, baseType: !493, size: 32, offset: 192)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !1115, file: !96, line: 496, baseType: !267, size: 128, offset: 224)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !1115, file: !96, line: 497, baseType: !493, size: 32, offset: 352)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !1115, file: !96, line: 498, baseType: !493, size: 32, offset: 384)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1115, file: !96, line: 499, baseType: !493, size: 32, offset: 416)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1115, file: !96, line: 500, baseType: !493, size: 32, offset: 448)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1115, file: !96, line: 501, baseType: !493, size: 32, offset: 480)
!1130 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 507, baseType: !1131, size: 256)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 507, size: 256, elements: !1132)
!1132 = !{!1133, !1134, !1135, !1140}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1131, file: !96, line: 508, baseType: !493, size: 32)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1131, file: !96, line: 509, baseType: !333, size: 64, align: 64, offset: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, scope: !1131, file: !96, line: 510, baseType: !1136, size: 64, offset: 128)
!1136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1131, file: !96, line: 510, size: 64, elements: !1137)
!1137 = !{!1138, !1139}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1136, file: !96, line: 511, baseType: !333, size: 64, align: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !1136, file: !96, line: 512, baseType: !333, size: 64, align: 64)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1131, file: !96, line: 514, baseType: !333, size: 64, offset: 192)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !1112, file: !96, line: 532, baseType: !1142, size: 448)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 517, size: 448, elements: !1143)
!1143 = !{!1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !1142, file: !96, line: 518, baseType: !333, size: 64, align: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !1142, file: !96, line: 521, baseType: !333, size: 64, align: 64, offset: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1142, file: !96, line: 522, baseType: !333, size: 64, align: 64, offset: 128)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1142, file: !96, line: 523, baseType: !333, size: 64, align: 64, offset: 192)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1142, file: !96, line: 524, baseType: !493, size: 32, offset: 256)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1142, file: !96, line: 529, baseType: !493, size: 32, offset: 288)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !1142, file: !96, line: 530, baseType: !333, size: 64, offset: 320)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1142, file: !96, line: 531, baseType: !333, size: 64, offset: 384)
!1152 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 534, baseType: !1153, size: 960)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 534, size: 960, elements: !1154)
!1154 = !{!1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !1153, file: !96, line: 535, baseType: !493, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !1153, file: !96, line: 536, baseType: !493, size: 32, offset: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1153, file: !96, line: 537, baseType: !333, size: 64, align: 64, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !1153, file: !96, line: 538, baseType: !333, size: 64, align: 64, offset: 128)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !1153, file: !96, line: 539, baseType: !493, size: 32, offset: 192)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !1153, file: !96, line: 540, baseType: !493, size: 32, offset: 224)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !1153, file: !96, line: 541, baseType: !333, size: 64, align: 64, offset: 256)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !1153, file: !96, line: 542, baseType: !493, size: 32, offset: 320)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !1153, file: !96, line: 543, baseType: !493, size: 32, offset: 352)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !1153, file: !96, line: 544, baseType: !267, size: 128, offset: 384)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !1153, file: !96, line: 545, baseType: !493, size: 32, offset: 512)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !1153, file: !96, line: 550, baseType: !493, size: 32, offset: 544)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !1153, file: !96, line: 551, baseType: !493, size: 32, offset: 576)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !1153, file: !96, line: 552, baseType: !493, size: 32, offset: 608)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !1153, file: !96, line: 553, baseType: !333, size: 64, align: 64, offset: 640)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !1153, file: !96, line: 554, baseType: !493, size: 32, offset: 704)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !1153, file: !96, line: 555, baseType: !493, size: 32, offset: 736)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !1153, file: !96, line: 556, baseType: !333, size: 64, align: 64, offset: 768)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !1153, file: !96, line: 557, baseType: !493, size: 32, offset: 832)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !1153, file: !96, line: 558, baseType: !493, size: 32, offset: 864)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !1153, file: !96, line: 559, baseType: !493, size: 32, offset: 896)
!1176 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 562, baseType: !1177, size: 128)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 562, size: 128, elements: !1178)
!1178 = !{!1179, !1180, !1181}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !1177, file: !96, line: 563, baseType: !333, size: 64, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1177, file: !96, line: 564, baseType: !493, size: 32, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !1177, file: !96, line: 565, baseType: !493, size: 32, offset: 96)
!1182 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 568, baseType: !1183, size: 160)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 568, size: 160, elements: !1184)
!1184 = !{!1185, !1186, !1187, !1188, !1189}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1183, file: !96, line: 569, baseType: !493, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !1183, file: !96, line: 570, baseType: !493, size: 32, offset: 32)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1183, file: !96, line: 571, baseType: !493, size: 32, offset: 64)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1183, file: !96, line: 572, baseType: !493, size: 32, offset: 96)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !1183, file: !96, line: 573, baseType: !493, size: 32, offset: 128)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !1112, file: !96, line: 600, baseType: !1191, size: 576)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 579, size: 576, elements: !1192)
!1192 = !{!1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1191, file: !96, line: 580, baseType: !493, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !1191, file: !96, line: 581, baseType: !493, size: 32, offset: 32)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !1191, file: !96, line: 582, baseType: !493, size: 32, offset: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !1191, file: !96, line: 583, baseType: !493, size: 32, offset: 96)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !1191, file: !96, line: 587, baseType: !333, size: 64, align: 64, offset: 128)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !1191, file: !96, line: 588, baseType: !333, size: 64, align: 64, offset: 192)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !1191, file: !96, line: 589, baseType: !493, size: 32, offset: 256)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1191, file: !96, line: 590, baseType: !493, size: 32, offset: 288)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !1191, file: !96, line: 591, baseType: !493, size: 32, offset: 320)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !1191, file: !96, line: 592, baseType: !493, size: 32, offset: 352)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !1191, file: !96, line: 596, baseType: !333, size: 64, align: 64, offset: 384)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !1191, file: !96, line: 597, baseType: !333, size: 64, align: 64, offset: 448)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1191, file: !96, line: 598, baseType: !493, size: 32, offset: 512)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1191, file: !96, line: 599, baseType: !493, size: 32, offset: 544)
!1207 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 602, baseType: !1208, size: 96)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 602, size: 96, elements: !1209)
!1209 = !{!1210, !1218, !1219}
!1210 = !DIDerivedType(tag: DW_TAG_member, scope: !1208, file: !96, line: 603, baseType: !1211, size: 32)
!1211 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1208, file: !96, line: 603, size: 32, elements: !1212)
!1212 = !{!1213, !1214, !1215, !1216, !1217}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !1211, file: !96, line: 604, baseType: !493, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1211, file: !96, line: 605, baseType: !493, size: 32)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !1211, file: !96, line: 606, baseType: !493, size: 32)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !1211, file: !96, line: 607, baseType: !493, size: 32)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !1211, file: !96, line: 608, baseType: !493, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !1208, file: !96, line: 610, baseType: !493, size: 32, offset: 32)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !1208, file: !96, line: 611, baseType: !493, size: 32, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1112, file: !96, line: 618, baseType: !1221, size: 128)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 614, size: 128, elements: !1222)
!1222 = !{!1223, !1224, !1225}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1221, file: !96, line: 615, baseType: !493, size: 32)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !1221, file: !96, line: 616, baseType: !493, size: 32, offset: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1221, file: !96, line: 617, baseType: !333, size: 64, align: 64, offset: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !1112, file: !96, line: 627, baseType: !1227, size: 256)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 620, size: 256, elements: !1228)
!1228 = !{!1229, !1230, !1231, !1232, !1233, !1234}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1227, file: !96, line: 621, baseType: !493, size: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1227, file: !96, line: 622, baseType: !493, size: 32, offset: 32)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !1227, file: !96, line: 623, baseType: !493, size: 32, offset: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1227, file: !96, line: 624, baseType: !493, size: 32, offset: 96)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !1227, file: !96, line: 625, baseType: !333, size: 64, align: 64, offset: 128)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !1227, file: !96, line: 626, baseType: !493, size: 32, offset: 192)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !1112, file: !96, line: 632, baseType: !1236, size: 128)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 629, size: 128, elements: !1237)
!1237 = !{!1238, !1239}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1236, file: !96, line: 630, baseType: !333, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1236, file: !96, line: 631, baseType: !493, size: 32, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 634, baseType: !1241, size: 256)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 634, size: 256, elements: !1242)
!1242 = !{!1243, !1244, !1245, !1246, !1247}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1241, file: !96, line: 635, baseType: !333, size: 64, align: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !1241, file: !96, line: 636, baseType: !333, size: 64, align: 64, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !1241, file: !96, line: 637, baseType: !493, size: 32, offset: 128)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !1241, file: !96, line: 638, baseType: !493, size: 32, offset: 160)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !1241, file: !96, line: 639, baseType: !493, size: 32, offset: 192)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !1112, file: !96, line: 656, baseType: !1249, size: 384)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 642, size: 384, elements: !1250)
!1250 = !{!1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1249, file: !96, line: 643, baseType: !493, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1249, file: !96, line: 644, baseType: !493, size: 32, offset: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1249, file: !96, line: 645, baseType: !493, size: 32, offset: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !1249, file: !96, line: 646, baseType: !493, size: 32, offset: 96)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1249, file: !96, line: 647, baseType: !333, size: 64, align: 64, offset: 128)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1249, file: !96, line: 652, baseType: !493, size: 32, offset: 192)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !1249, file: !96, line: 653, baseType: !493, size: 32, offset: 224)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !1249, file: !96, line: 654, baseType: !333, size: 64, offset: 256)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !1249, file: !96, line: 655, baseType: !333, size: 64, offset: 320)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !1112, file: !96, line: 673, baseType: !1261, size: 256)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 658, size: 256, elements: !1262)
!1262 = !{!1263, !1264, !1269, !1270, !1271}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1261, file: !96, line: 659, baseType: !493, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, scope: !1261, file: !96, line: 660, baseType: !1265, size: 32, offset: 32)
!1265 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1261, file: !96, line: 660, size: 32, elements: !1266)
!1266 = !{!1267, !1268}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1265, file: !96, line: 661, baseType: !493, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !1265, file: !96, line: 662, baseType: !493, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1261, file: !96, line: 664, baseType: !493, size: 32, offset: 64)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1261, file: !96, line: 665, baseType: !493, size: 32, offset: 96)
!1271 = !DIDerivedType(tag: DW_TAG_member, scope: !1261, file: !96, line: 666, baseType: !1272, size: 128, offset: 128)
!1272 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1261, file: !96, line: 666, size: 128, elements: !1273)
!1273 = !{!1274, !1275}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !1272, file: !96, line: 667, baseType: !493, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, scope: !1272, file: !96, line: 668, baseType: !1276, size: 128)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1272, file: !96, line: 668, size: 128, elements: !1277)
!1277 = !{!1278, !1279}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !1276, file: !96, line: 669, baseType: !333, size: 64, align: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !1276, file: !96, line: 670, baseType: !493, size: 32, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !1112, file: !96, line: 683, baseType: !1281, size: 128)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 675, size: 128, elements: !1282)
!1282 = !{!1283, !1284, !1285, !1286}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1281, file: !96, line: 676, baseType: !493, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !1281, file: !96, line: 678, baseType: !493, size: 32, offset: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1281, file: !96, line: 679, baseType: !493, size: 32, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !1281, file: !96, line: 682, baseType: !493, size: 32, offset: 96)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !1112, file: !96, line: 687, baseType: !1288, size: 32)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 685, size: 32, elements: !1289)
!1289 = !{!1290}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1288, file: !96, line: 686, baseType: !493, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !1112, file: !96, line: 691, baseType: !1292, size: 32)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 689, size: 32, elements: !1293)
!1293 = !{!1294}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1292, file: !96, line: 690, baseType: !493, size: 32)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !1112, file: !96, line: 696, baseType: !1296, size: 64)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 693, size: 64, elements: !1297)
!1297 = !{!1298, !1299}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1296, file: !96, line: 694, baseType: !493, size: 32)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1296, file: !96, line: 695, baseType: !493, size: 32, offset: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !1112, file: !96, line: 702, baseType: !1301, size: 96)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 698, size: 96, elements: !1302)
!1302 = !{!1303, !1304, !1305}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1301, file: !96, line: 699, baseType: !493, size: 32)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1301, file: !96, line: 700, baseType: !493, size: 32, offset: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1301, file: !96, line: 701, baseType: !493, size: 32, offset: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !1105, file: !65, line: 57, baseType: !1307, size: 64, offset: 64)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{!1310, !1111}
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !1105, file: !65, line: 58, baseType: !1312, size: 64, offset: 128)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{null, !1310, !1315}
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !1317, line: 916, size: 1856, align: 32, elements: !1318)
!1317 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!1318 = !{!1319, !1329, !6134, !6135, !6136, !6137, !6146, !6147, !6148, !6149, !6150, !6151, !6167, !6168, !6177, !6178, !6179, !6180, !6181, !6182, !6183}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1316, file: !1317, line: 920, baseType: !1320, size: 128)
!1320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1316, file: !1317, line: 917, size: 128, elements: !1321)
!1321 = !{!1322, !1328}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1320, file: !1317, line: 918, baseType: !1323, size: 64)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1324, line: 58, size: 64, elements: !1325)
!1324 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1325 = !{!1326}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1323, file: !1324, line: 59, baseType: !1327, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1320, file: !1317, line: 919, baseType: !299, size: 128, align: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1316, file: !1317, line: 921, baseType: !1330, size: 128, offset: 128)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !1331, line: 8, size: 128, elements: !1332)
!1331 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!1332 = !{!1333, !1337}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !1330, file: !1331, line: 9, baseType: !1334, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1335 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !1336, line: 18, flags: DIFlagFwdDecl)
!1336 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !1330, file: !1331, line: 10, baseType: !1338, size: 64, offset: 64)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !1336, line: 89, size: 1536, elements: !1340)
!1340 = !{!1341, !1342, !1352, !1360, !1361, !1374, !6103, !6104, !6116, !6117, !6118, !6119, !6120, !6126, !6127, !6128}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !1339, file: !1336, line: 91, baseType: !7, size: 32)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !1339, file: !1336, line: 92, baseType: !1343, size: 32, offset: 32)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !1344, line: 277, baseType: !1345)
!1344 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !1344, line: 277, size: 32, elements: !1346)
!1346 = !{!1347}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1345, file: !1344, line: 277, baseType: !1348, size: 32)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !1344, line: 70, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !1344, line: 65, size: 32, elements: !1350)
!1350 = !{!1351}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !1349, file: !1344, line: 66, baseType: !7, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !1339, file: !1336, line: 93, baseType: !1353, size: 128, offset: 64)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !1354, line: 38, size: 128, elements: !1355)
!1354 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!1355 = !{!1356, !1358}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1353, file: !1354, line: 39, baseType: !1357, size: 64)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1353, file: !1354, line: 39, baseType: !1359, size: 64, offset: 64)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !1339, file: !1336, line: 94, baseType: !1338, size: 64, offset: 192)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1339, file: !1336, line: 95, baseType: !1362, size: 128, offset: 256)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !1336, line: 47, size: 128, elements: !1363)
!1363 = !{!1364, !1373}
!1364 = !DIDerivedType(tag: DW_TAG_member, scope: !1362, file: !1336, line: 48, baseType: !1365, size: 64)
!1365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1362, file: !1336, line: 48, size: 64, elements: !1366)
!1366 = !{!1367, !1372}
!1367 = !DIDerivedType(tag: DW_TAG_member, scope: !1365, file: !1336, line: 49, baseType: !1368, size: 64)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1365, file: !1336, line: 49, size: 64, elements: !1369)
!1369 = !{!1370, !1371}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1368, file: !1336, line: 50, baseType: !987, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1368, file: !1336, line: 50, baseType: !987, size: 32, offset: 32)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !1365, file: !1336, line: 52, baseType: !331, size: 64)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1362, file: !1336, line: 54, baseType: !946, size: 64, offset: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !1339, file: !1336, line: 96, baseType: !1375, size: 64, offset: 384)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !1317, line: 610, size: 4224, elements: !1377)
!1377 = !{!1378, !1380, !1381, !1389, !1396, !1397, !1544, !5835, !5836, !5837, !5843, !5844, !5845, !5846, !5847, !5848, !5849, !5850, !5851, !5852, !5853, !5854, !5855, !5856, !5857, !5858, !5859, !5860, !5861, !5862, !5867, !5868, !5869, !5870, !5871, !5872, !5873, !6079, !6087, !6088, !6089, !6099, !6100, !6101, !6102}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !1376, file: !1317, line: 611, baseType: !1379, size: 16)
!1379 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !277, line: 19, baseType: !476)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !1376, file: !1317, line: 612, baseType: !476, size: 16, offset: 16)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !1376, file: !1317, line: 613, baseType: !1382, size: 32, offset: 32)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1383, line: 23, baseType: !1384)
!1383 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1383, line: 21, size: 32, elements: !1385)
!1385 = !{!1386}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1384, file: !1383, line: 22, baseType: !1387, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !277, line: 32, baseType: !1388)
!1388 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !1041, line: 49, baseType: !7)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !1376, file: !1317, line: 614, baseType: !1390, size: 32, offset: 64)
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1383, line: 28, baseType: !1391)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1383, line: 26, size: 32, elements: !1392)
!1392 = !{!1393}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1391, file: !1383, line: 27, baseType: !1394, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !277, line: 33, baseType: !1395)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !1041, line: 50, baseType: !7)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1376, file: !1317, line: 615, baseType: !7, size: 32, offset: 96)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !1376, file: !1317, line: 622, baseType: !1398, size: 64, offset: 128)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1400)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !1317, line: 1864, size: 1536, align: 512, elements: !1401)
!1401 = !{!1402, !1406, !1419, !1423, !1429, !1433, !1437, !1441, !1445, !1449, !1453, !1454, !1460, !1464, !1488, !1517, !1524, !1530, !1535, !1539, !1540}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1400, file: !1317, line: 1865, baseType: !1403, size: 64)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DISubroutineType(types: !1405)
!1405 = !{!1338, !1375, !1338, !7}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !1400, file: !1317, line: 1866, baseType: !1407, size: 64, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1408 = !DISubroutineType(types: !1409)
!1409 = !{!292, !1338, !1375, !1410}
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1412, line: 10, size: 128, elements: !1413)
!1412 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1413 = !{!1414, !1418}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1411, file: !1412, line: 11, baseType: !1415, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = !DISubroutineType(types: !1417)
!1417 = !{null, !591}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1411, file: !1412, line: 12, baseType: !591, size: 64, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !1400, file: !1317, line: 1867, baseType: !1420, size: 64, offset: 128)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 64)
!1421 = !DISubroutineType(types: !1422)
!1422 = !{!32, !1375, !32}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !1400, file: !1317, line: 1868, baseType: !1424, size: 64, offset: 192)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{!1427, !1375, !32}
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !1317, line: 581, flags: DIFlagFwdDecl)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !1400, file: !1317, line: 1870, baseType: !1430, size: 64, offset: 256)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1431 = !DISubroutineType(types: !1432)
!1432 = !{!32, !1338, !1038, !32}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1400, file: !1317, line: 1872, baseType: !1434, size: 64, offset: 320)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!32, !1375, !1338, !1379, !771}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1400, file: !1317, line: 1873, baseType: !1438, size: 64, offset: 384)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = !DISubroutineType(types: !1440)
!1440 = !{!32, !1338, !1375, !1338}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !1400, file: !1317, line: 1874, baseType: !1442, size: 64, offset: 448)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{!32, !1375, !1338}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1400, file: !1317, line: 1875, baseType: !1446, size: 64, offset: 512)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{!32, !1375, !1338, !292}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1400, file: !1317, line: 1876, baseType: !1450, size: 64, offset: 576)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 64)
!1451 = !DISubroutineType(types: !1452)
!1452 = !{!32, !1375, !1338, !1379}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1400, file: !1317, line: 1877, baseType: !1442, size: 64, offset: 640)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !1400, file: !1317, line: 1878, baseType: !1455, size: 64, offset: 704)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{!32, !1375, !1338, !1379, !1458}
!1458 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !277, line: 16, baseType: !1459)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !277, line: 13, baseType: !987)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1400, file: !1317, line: 1879, baseType: !1461, size: 64, offset: 768)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!32, !1375, !1338, !1375, !1338, !7}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !1400, file: !1317, line: 1881, baseType: !1465, size: 64, offset: 832)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!32, !1338, !1468}
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !1317, line: 219, size: 640, elements: !1470)
!1470 = !{!1471, !1472, !1473, !1474, !1475, !1478, !1485, !1486, !1487}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1469, file: !1317, line: 220, baseType: !7, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1469, file: !1317, line: 221, baseType: !1379, size: 16, offset: 32)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1469, file: !1317, line: 222, baseType: !1382, size: 32, offset: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1469, file: !1317, line: 223, baseType: !1390, size: 32, offset: 96)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1469, file: !1317, line: 224, baseType: !1476, size: 64, offset: 128)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !277, line: 46, baseType: !1477)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !1041, line: 88, baseType: !379)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1469, file: !1317, line: 225, baseType: !1479, size: 128, offset: 192)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1480, line: 13, size: 128, elements: !1481)
!1480 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1481 = !{!1482, !1484}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1479, file: !1480, line: 14, baseType: !1483, size: 64)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1480, line: 8, baseType: !378)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1479, file: !1480, line: 15, baseType: !998, size: 64, offset: 64)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1469, file: !1317, line: 226, baseType: !1479, size: 128, offset: 320)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1469, file: !1317, line: 227, baseType: !1479, size: 128, offset: 448)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1469, file: !1317, line: 234, baseType: !1315, size: 64, offset: 576)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !1400, file: !1317, line: 1882, baseType: !1489, size: 64, offset: 896)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = !DISubroutineType(types: !1491)
!1491 = !{!32, !1492, !1494, !987, !7}
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!1493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1330)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !1496, line: 22, size: 1152, elements: !1497)
!1496 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!1497 = !{!1498, !1499, !1500, !1501, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !1495, file: !1496, line: 23, baseType: !987, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1495, file: !1496, line: 24, baseType: !1379, size: 16, offset: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !1495, file: !1496, line: 25, baseType: !7, size: 32, offset: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !1495, file: !1496, line: 26, baseType: !1502, size: 32, offset: 96)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !277, line: 104, baseType: !987)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1495, file: !1496, line: 27, baseType: !331, size: 64, offset: 128)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !1495, file: !1496, line: 28, baseType: !331, size: 64, offset: 192)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1495, file: !1496, line: 37, baseType: !331, size: 64, offset: 256)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1495, file: !1496, line: 38, baseType: !1458, size: 32, offset: 320)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !1495, file: !1496, line: 39, baseType: !1458, size: 32, offset: 352)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1495, file: !1496, line: 40, baseType: !1382, size: 32, offset: 384)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1495, file: !1496, line: 41, baseType: !1390, size: 32, offset: 416)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1495, file: !1496, line: 42, baseType: !1476, size: 64, offset: 448)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !1495, file: !1496, line: 43, baseType: !1479, size: 128, offset: 512)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !1495, file: !1496, line: 44, baseType: !1479, size: 128, offset: 640)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1495, file: !1496, line: 45, baseType: !1479, size: 128, offset: 768)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !1495, file: !1496, line: 46, baseType: !1479, size: 128, offset: 896)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1495, file: !1496, line: 47, baseType: !331, size: 64, offset: 1024)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !1495, file: !1496, line: 48, baseType: !331, size: 64, offset: 1088)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !1400, file: !1317, line: 1883, baseType: !1518, size: 64, offset: 960)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!1521, !1338, !1038, !1039}
!1521 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !277, line: 60, baseType: !1522)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !1041, line: 73, baseType: !1523)
!1523 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !1041, line: 15, baseType: !998)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !1400, file: !1317, line: 1884, baseType: !1525, size: 64, offset: 1024)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{!32, !1375, !1528, !331, !331}
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64)
!1529 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !1317, line: 50, flags: DIFlagFwdDecl)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !1400, file: !1317, line: 1886, baseType: !1531, size: 64, offset: 1088)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64)
!1532 = !DISubroutineType(types: !1533)
!1533 = !{!32, !1375, !1534, !32}
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !1400, file: !1317, line: 1887, baseType: !1536, size: 64, offset: 1152)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!32, !1375, !1338, !1315, !7, !1379}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !1400, file: !1317, line: 1890, baseType: !1450, size: 64, offset: 1216)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !1400, file: !1317, line: 1891, baseType: !1541, size: 64, offset: 1280)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!32, !1375, !1427, !32}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !1376, file: !1317, line: 623, baseType: !1545, size: 64, offset: 192)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !1317, line: 1416, size: 9472, elements: !1547)
!1547 = !{!1548, !1549, !1550, !1551, !1552, !1553, !1597, !4347, !4435, !4518, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4534, !4538, !4539, !5636, !5637, !5640, !5641, !5642, !5683, !5709, !5710, !5711, !5712, !5713, !5714, !5717, !5718, !5724, !5725, !5727, !5728, !5729, !5788, !5789, !5804, !5805, !5806, !5807, !5808, !5809, !5810, !5811, !5826, !5827, !5828, !5829, !5830, !5831, !5832, !5833, !5834}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !1546, file: !1317, line: 1417, baseType: !284, size: 128)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !1546, file: !1317, line: 1418, baseType: !1458, size: 32, offset: 128)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !1546, file: !1317, line: 1419, baseType: !482, size: 8, offset: 160)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !1546, file: !1317, line: 1420, baseType: !312, size: 64, offset: 192)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !1546, file: !1317, line: 1421, baseType: !1476, size: 64, offset: 256)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !1546, file: !1317, line: 1422, baseType: !1554, size: 64, offset: 320)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !1317, line: 2228, size: 576, elements: !1556)
!1556 = !{!1557, !1558, !1559, !1566, !1570, !1574, !1578, !1579, !1580, !1584, !1588, !1589, !1590, !1594, !1595, !1596}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1555, file: !1317, line: 2229, baseType: !292, size: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1555, file: !1317, line: 2230, baseType: !32, size: 32, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1555, file: !1317, line: 2238, baseType: !1560, size: 64, offset: 128)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!32, !1563}
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64)
!1564 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !1565, line: 28, flags: DIFlagFwdDecl)
!1565 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1555, file: !1317, line: 2239, baseType: !1567, size: 64, offset: 192)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64)
!1568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1569)
!1569 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !1317, line: 70, flags: DIFlagFwdDecl)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1555, file: !1317, line: 2240, baseType: !1571, size: 64, offset: 256)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!1338, !1554, !32, !292, !591}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1555, file: !1317, line: 2242, baseType: !1575, size: 64, offset: 320)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64)
!1576 = !DISubroutineType(types: !1577)
!1577 = !{null, !1545}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1555, file: !1317, line: 2243, baseType: !980, size: 64, offset: 384)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1555, file: !1317, line: 2244, baseType: !1554, size: 64, offset: 448)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1555, file: !1317, line: 2245, baseType: !1581, size: 64, offset: 512)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !277, line: 182, size: 64, elements: !1582)
!1582 = !{!1583}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1581, file: !277, line: 183, baseType: !280, size: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1555, file: !1317, line: 2247, baseType: !1585, offset: 576)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1586, line: 187, elements: !1587)
!1586 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1587 = !{}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1555, file: !1317, line: 2248, baseType: !1585, offset: 576)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1555, file: !1317, line: 2249, baseType: !1585, offset: 576)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1555, file: !1317, line: 2250, baseType: !1591, offset: 576)
!1591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1585, elements: !1592)
!1592 = !{!1593}
!1593 = !DISubrange(count: 3)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1555, file: !1317, line: 2252, baseType: !1585, offset: 576)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1555, file: !1317, line: 2253, baseType: !1585, offset: 576)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1555, file: !1317, line: 2254, baseType: !1585, offset: 576)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !1546, file: !1317, line: 1423, baseType: !1598, size: 64, offset: 384)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1600)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !1317, line: 1935, size: 1472, elements: !1601)
!1601 = !{!1602, !1606, !1610, !1611, !1615, !1621, !1625, !1626, !1627, !1631, !1635, !1636, !1637, !1638, !1644, !1648, !1649, !1712, !1713, !1714, !1715, !4331, !4346}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1600, file: !1317, line: 1936, baseType: !1603, size: 64)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!1375, !1545}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1600, file: !1317, line: 1937, baseType: !1607, size: 64, offset: 64)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{null, !1375}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1600, file: !1317, line: 1938, baseType: !1607, size: 64, offset: 128)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1600, file: !1317, line: 1940, baseType: !1612, size: 64, offset: 192)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1613 = !DISubroutineType(types: !1614)
!1614 = !{null, !1375, !32}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1600, file: !1317, line: 1941, baseType: !1616, size: 64, offset: 256)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{!32, !1375, !1619}
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1600, file: !1317, line: 1942, baseType: !1622, size: 64, offset: 320)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64)
!1623 = !DISubroutineType(types: !1624)
!1624 = !{!32, !1375}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1600, file: !1317, line: 1943, baseType: !1607, size: 64, offset: 384)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1600, file: !1317, line: 1944, baseType: !1575, size: 64, offset: 448)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1600, file: !1317, line: 1945, baseType: !1628, size: 64, offset: 512)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = !DISubroutineType(types: !1630)
!1630 = !{!32, !1545, !32}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1600, file: !1317, line: 1946, baseType: !1632, size: 64, offset: 576)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64)
!1633 = !DISubroutineType(types: !1634)
!1634 = !{!32, !1545}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1600, file: !1317, line: 1947, baseType: !1632, size: 64, offset: 640)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1600, file: !1317, line: 1948, baseType: !1632, size: 64, offset: 704)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1600, file: !1317, line: 1949, baseType: !1632, size: 64, offset: 768)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1600, file: !1317, line: 1950, baseType: !1639, size: 64, offset: 832)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{!32, !1338, !1642}
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !1317, line: 57, flags: DIFlagFwdDecl)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1600, file: !1317, line: 1951, baseType: !1645, size: 64, offset: 896)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64)
!1646 = !DISubroutineType(types: !1647)
!1647 = !{!32, !1545, !1001, !1038}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1600, file: !1317, line: 1952, baseType: !1575, size: 64, offset: 960)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1600, file: !1317, line: 1954, baseType: !1650, size: 64, offset: 1024)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64)
!1651 = !DISubroutineType(types: !1652)
!1652 = !{!32, !1653, !1338}
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1655, line: 16, size: 896, elements: !1656)
!1655 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1656 = !{!1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1685, !1707, !1708, !1711}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1654, file: !1655, line: 17, baseType: !1038, size: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1654, file: !1655, line: 18, baseType: !1039, size: 64, offset: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1654, file: !1655, line: 19, baseType: !1039, size: 64, offset: 128)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1654, file: !1655, line: 20, baseType: !1039, size: 64, offset: 192)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1654, file: !1655, line: 21, baseType: !1039, size: 64, offset: 256)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1654, file: !1655, line: 22, baseType: !1476, size: 64, offset: 320)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1654, file: !1655, line: 23, baseType: !1476, size: 64, offset: 384)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1654, file: !1655, line: 24, baseType: !1665, size: 192, offset: 448)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1666, line: 53, size: 192, elements: !1667)
!1666 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1667 = !{!1668, !1669, !1684}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1665, file: !1666, line: 54, baseType: !371, size: 64)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1665, file: !1666, line: 55, baseType: !1670, offset: 64)
!1670 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !1671, line: 83, baseType: !1672)
!1671 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !1671, line: 71, elements: !1673)
!1673 = !{!1674}
!1674 = !DIDerivedType(tag: DW_TAG_member, scope: !1672, file: !1671, line: 72, baseType: !1675)
!1675 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1672, file: !1671, line: 72, elements: !1676)
!1676 = !{!1677}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !1675, file: !1671, line: 73, baseType: !1678)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !1671, line: 20, elements: !1679)
!1679 = !{!1680}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1678, file: !1671, line: 21, baseType: !1681)
!1681 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !1682, line: 25, baseType: !1683)
!1682 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1682, line: 25, elements: !1587)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1665, file: !1666, line: 59, baseType: !284, size: 128, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1654, file: !1655, line: 25, baseType: !1686, size: 64, offset: 640)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1688)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1655, line: 31, size: 256, elements: !1689)
!1689 = !{!1690, !1695, !1699, !1703}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1688, file: !1655, line: 32, baseType: !1691, size: 64)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{!591, !1653, !1694}
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1688, file: !1655, line: 33, baseType: !1696, size: 64, offset: 64)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64)
!1697 = !DISubroutineType(types: !1698)
!1698 = !{null, !1653, !591}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1688, file: !1655, line: 34, baseType: !1700, size: 64, offset: 128)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64)
!1701 = !DISubroutineType(types: !1702)
!1702 = !{!591, !1653, !591, !1694}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1688, file: !1655, line: 35, baseType: !1704, size: 64, offset: 192)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64)
!1705 = !DISubroutineType(types: !1706)
!1706 = !{!32, !1653, !591}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1654, file: !1655, line: 26, baseType: !32, size: 32, offset: 704)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1654, file: !1655, line: 27, baseType: !1709, size: 64, offset: 768)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64)
!1710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1316)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1654, file: !1655, line: 28, baseType: !591, size: 64, offset: 832)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1600, file: !1317, line: 1955, baseType: !1650, size: 64, offset: 1088)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1600, file: !1317, line: 1956, baseType: !1650, size: 64, offset: 1152)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1600, file: !1317, line: 1957, baseType: !1650, size: 64, offset: 1216)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1600, file: !1317, line: 1963, baseType: !1716, size: 64, offset: 1280)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{!32, !1545, !1719, !1742}
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1721, line: 68, size: 512, align: 128, elements: !1722)
!1721 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1722 = !{!1723, !1724, !4323, !4330}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1720, file: !1721, line: 69, baseType: !312, size: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, scope: !1720, file: !1721, line: 77, baseType: !1725, size: 320, offset: 64)
!1725 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1720, file: !1721, line: 77, size: 320, elements: !1726)
!1726 = !{!1727, !2032, !2037, !2065, !2073, !2079, !4247, !4322}
!1727 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 78, baseType: !1728, size: 320)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 78, size: 320, elements: !1729)
!1729 = !{!1730, !1731, !2030, !2031}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1728, file: !1721, line: 84, baseType: !284, size: 128)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1728, file: !1721, line: 86, baseType: !1732, size: 64, offset: 128)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !1317, line: 451, size: 1216, align: 64, elements: !1734)
!1734 = !{!1735, !1736, !1744, !1745, !1746, !1754, !1763, !1764, !1765, !1766, !2023, !2024, !2027, !2028, !2029}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1733, file: !1317, line: 452, baseType: !1375, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1733, file: !1317, line: 453, baseType: !1737, size: 128, offset: 64)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1738, line: 292, size: 128, elements: !1739)
!1738 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1739 = !{!1740, !1741, !1743}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1737, file: !1738, line: 293, baseType: !1670)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1737, file: !1738, line: 295, baseType: !1742, size: 32)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !277, line: 148, baseType: !7)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1737, file: !1738, line: 296, baseType: !591, size: 64, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1733, file: !1317, line: 454, baseType: !1742, size: 32, offset: 192)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1733, file: !1317, line: 455, baseType: !383, size: 32, offset: 224)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1733, file: !1317, line: 460, baseType: !1747, size: 128, offset: 256)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !434, line: 125, size: 128, elements: !1748)
!1748 = !{!1749, !1753}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1747, file: !434, line: 126, baseType: !1750, size: 64)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !434, line: 31, size: 64, elements: !1751)
!1751 = !{!1752}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1750, file: !434, line: 32, baseType: !438, size: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1747, file: !434, line: 127, baseType: !438, size: 64, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1733, file: !1317, line: 461, baseType: !1755, size: 256, offset: 384)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1756, line: 35, size: 256, elements: !1757)
!1756 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1757 = !{!1758, !1759, !1760, !1762}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1755, file: !1756, line: 36, baseType: !371, size: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1755, file: !1756, line: 42, baseType: !371, size: 64, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1755, file: !1756, line: 46, baseType: !1761, offset: 128)
!1761 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !1671, line: 29, baseType: !1678)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1755, file: !1756, line: 47, baseType: !284, size: 128, offset: 128)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1733, file: !1317, line: 462, baseType: !312, size: 64, offset: 640)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1733, file: !1317, line: 463, baseType: !312, size: 64, offset: 704)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1733, file: !1317, line: 464, baseType: !312, size: 64, offset: 768)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1733, file: !1317, line: 465, baseType: !1767, size: 64, offset: 832)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1769)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !1317, line: 367, size: 1408, elements: !1770)
!1770 = !{!1771, !1775, !1779, !1783, !1787, !1791, !1797, !1803, !1807, !1812, !1816, !1820, !1824, !1987, !1991, !1997, !1998, !1999, !2003, !2008, !2012, !2019}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1769, file: !1317, line: 368, baseType: !1772, size: 64)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = !DISubroutineType(types: !1774)
!1774 = !{!32, !1719, !1619}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1769, file: !1317, line: 369, baseType: !1776, size: 64, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64)
!1777 = !DISubroutineType(types: !1778)
!1778 = !{!32, !1315, !1719}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1769, file: !1317, line: 372, baseType: !1780, size: 64, offset: 128)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64)
!1781 = !DISubroutineType(types: !1782)
!1782 = !{!32, !1732, !1619}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1769, file: !1317, line: 375, baseType: !1784, size: 64, offset: 192)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{!32, !1719}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1769, file: !1317, line: 381, baseType: !1788, size: 64, offset: 256)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 64)
!1789 = !DISubroutineType(types: !1790)
!1790 = !{!32, !1315, !1732, !287, !7}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1769, file: !1317, line: 383, baseType: !1792, size: 64, offset: 320)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = !DISubroutineType(types: !1794)
!1794 = !{null, !1795}
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64)
!1796 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1317, line: 290, flags: DIFlagFwdDecl)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1769, file: !1317, line: 385, baseType: !1798, size: 64, offset: 384)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{!32, !1315, !1732, !1476, !7, !7, !1801, !1802}
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1769, file: !1317, line: 388, baseType: !1804, size: 64, offset: 448)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64)
!1805 = !DISubroutineType(types: !1806)
!1806 = !{!32, !1315, !1732, !1476, !7, !7, !1719, !591}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1769, file: !1317, line: 393, baseType: !1808, size: 64, offset: 512)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!1811, !1732, !1811}
!1811 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !277, line: 125, baseType: !331)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1769, file: !1317, line: 394, baseType: !1813, size: 64, offset: 576)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{null, !1719, !7, !7}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1769, file: !1317, line: 395, baseType: !1817, size: 64, offset: 640)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 64)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{!32, !1719, !1742}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1769, file: !1317, line: 396, baseType: !1821, size: 64, offset: 704)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 64)
!1822 = !DISubroutineType(types: !1823)
!1823 = !{null, !1719}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1769, file: !1317, line: 397, baseType: !1825, size: 64, offset: 768)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1826 = !DISubroutineType(types: !1827)
!1827 = !{!1521, !1828, !1848}
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !1317, line: 320, size: 384, elements: !1830)
!1830 = !{!1831, !1832, !1833, !1837, !1838, !1839, !1840, !1841}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1829, file: !1317, line: 321, baseType: !1315, size: 64)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1829, file: !1317, line: 326, baseType: !1476, size: 64, offset: 64)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1829, file: !1317, line: 327, baseType: !1834, size: 64, offset: 128)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64)
!1835 = !DISubroutineType(types: !1836)
!1836 = !{null, !1828, !998, !998}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1829, file: !1317, line: 328, baseType: !591, size: 64, offset: 192)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1829, file: !1317, line: 329, baseType: !32, size: 32, offset: 256)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1829, file: !1317, line: 330, baseType: !581, size: 16, offset: 288)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1829, file: !1317, line: 331, baseType: !581, size: 16, offset: 304)
!1841 = !DIDerivedType(tag: DW_TAG_member, scope: !1829, file: !1317, line: 332, baseType: !1842, size: 64, offset: 320)
!1842 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1829, file: !1317, line: 332, size: 64, elements: !1843)
!1843 = !{!1844, !1845}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1842, file: !1317, line: 333, baseType: !7, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1842, file: !1317, line: 334, baseType: !1846, size: 64)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64)
!1847 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1317, line: 334, flags: DIFlagFwdDecl)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !1850, line: 29, size: 320, elements: !1851)
!1850 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1851 = !{!1852, !1853, !1854, !1855, !1978}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1849, file: !1850, line: 35, baseType: !7, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !1849, file: !1850, line: 36, baseType: !1039, size: 64, offset: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1849, file: !1850, line: 37, baseType: !1039, size: 64, offset: 128)
!1855 = !DIDerivedType(tag: DW_TAG_member, scope: !1849, file: !1850, line: 38, baseType: !1856, size: 64, offset: 192)
!1856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1849, file: !1850, line: 38, size: 64, elements: !1857)
!1857 = !{!1858, !1866, !1873, !1882}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !1856, file: !1850, line: 39, baseType: !1859, size: 64)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1861)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !1862, line: 17, size: 128, elements: !1863)
!1862 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1863 = !{!1864, !1865}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1861, file: !1862, line: 19, baseType: !591, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1861, file: !1862, line: 20, baseType: !1040, size: 64, offset: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !1856, file: !1850, line: 40, baseType: !1867, size: 64)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1869)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !1850, line: 15, size: 128, elements: !1870)
!1870 = !{!1871, !1872}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1869, file: !1850, line: 16, baseType: !591, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1869, file: !1850, line: 17, baseType: !1039, size: 64, offset: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !1856, file: !1850, line: 41, baseType: !1874, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1876)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !1877, line: 31, size: 128, elements: !1878)
!1877 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!1878 = !{!1879, !1880, !1881}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !1876, file: !1877, line: 32, baseType: !1719, size: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !1876, file: !1877, line: 33, baseType: !7, size: 32, offset: 64)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !1876, file: !1877, line: 34, baseType: !7, size: 32, offset: 96)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !1856, file: !1850, line: 42, baseType: !1883, size: 64)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1885, line: 57, size: 1088, elements: !1886)
!1885 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1886 = !{!1887, !1888, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1924, !1925, !1952}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1884, file: !1885, line: 58, baseType: !1665, size: 192)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !1884, file: !1885, line: 59, baseType: !1889, size: 128, offset: 192)
!1889 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1890, line: 40, baseType: !1891)
!1890 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1890, line: 36, size: 128, elements: !1892)
!1892 = !{!1893, !1894}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1891, file: !1890, line: 37, baseType: !1670)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1891, file: !1890, line: 38, baseType: !284, size: 128)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !1884, file: !1885, line: 59, baseType: !1889, size: 128, offset: 320)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1884, file: !1885, line: 60, baseType: !7, size: 32, offset: 448)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1884, file: !1885, line: 61, baseType: !7, size: 32, offset: 480)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !1884, file: !1885, line: 62, baseType: !7, size: 32, offset: 512)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !1884, file: !1885, line: 63, baseType: !7, size: 32, offset: 544)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !1884, file: !1885, line: 67, baseType: !7, size: 32, offset: 576)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !1884, file: !1885, line: 68, baseType: !7, size: 32, offset: 608)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !1884, file: !1885, line: 69, baseType: !7, size: 32, offset: 640)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1884, file: !1885, line: 70, baseType: !7, size: 32, offset: 672)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !1884, file: !1885, line: 71, baseType: !7, size: 32, offset: 704)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !1884, file: !1885, line: 72, baseType: !7, size: 32, offset: 736)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !1884, file: !1885, line: 73, baseType: !1719, size: 64, offset: 768)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !1884, file: !1885, line: 74, baseType: !1908, size: 64, offset: 832)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !1317, line: 1314, size: 320, elements: !1910)
!1910 = !{!1911, !1919, !1920, !1921, !1922, !1923}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1909, file: !1317, line: 1315, baseType: !1912)
!1912 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1913, line: 20, baseType: !1914)
!1913 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1913, line: 11, elements: !1915)
!1915 = !{!1916}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1914, file: !1913, line: 12, baseType: !1917)
!1917 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !1682, line: 33, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1682, line: 31, elements: !1587)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1909, file: !1317, line: 1316, baseType: !32, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1909, file: !1317, line: 1317, baseType: !32, size: 32, offset: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1909, file: !1317, line: 1318, baseType: !1908, size: 64, offset: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1909, file: !1317, line: 1319, baseType: !1315, size: 64, offset: 128)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1909, file: !1317, line: 1320, baseType: !299, size: 128, align: 64, offset: 192)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !1884, file: !1885, line: 75, baseType: !1908, size: 64, offset: 896)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !1884, file: !1885, line: 76, baseType: !1926, size: 64, offset: 960)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !1885, line: 26, size: 320, elements: !1928)
!1928 = !{!1929, !1930, !1931, !1932, !1950, !1951}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1927, file: !1885, line: 27, baseType: !1719, size: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1927, file: !1885, line: 28, baseType: !7, size: 32, offset: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1927, file: !1885, line: 28, baseType: !7, size: 32, offset: 96)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1927, file: !1885, line: 29, baseType: !1933, size: 64, offset: 128)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1935)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !1885, line: 93, size: 256, elements: !1936)
!1936 = !{!1937, !1941, !1945, !1949}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !1935, file: !1885, line: 101, baseType: !1938, size: 64)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = !DISubroutineType(types: !1940)
!1940 = !{!32, !1883, !1926}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1935, file: !1885, line: 107, baseType: !1942, size: 64, offset: 64)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!1943 = !DISubroutineType(types: !1944)
!1944 = !{null, !1883, !1926}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !1935, file: !1885, line: 117, baseType: !1946, size: 64, offset: 128)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{!771, !1883, !1926}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !1935, file: !1885, line: 122, baseType: !1946, size: 64, offset: 192)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1927, file: !1885, line: 30, baseType: !7, size: 32, offset: 192)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1927, file: !1885, line: 31, baseType: !312, size: 64, offset: 256)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1884, file: !1885, line: 77, baseType: !1953, size: 64, offset: 1024)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1955, line: 13, size: 896, elements: !1956)
!1955 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1956 = !{!1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1954, file: !1955, line: 14, baseType: !568, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1954, file: !1955, line: 15, baseType: !383, size: 32, offset: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1954, file: !1955, line: 16, baseType: !383, size: 32, offset: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1954, file: !1955, line: 21, baseType: !371, size: 64, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1954, file: !1955, line: 27, baseType: !312, size: 64, offset: 192)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1954, file: !1955, line: 28, baseType: !312, size: 64, offset: 256)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1954, file: !1955, line: 29, baseType: !371, size: 64, offset: 320)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1954, file: !1955, line: 32, baseType: !276, size: 128, offset: 384)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1954, file: !1955, line: 33, baseType: !1382, size: 32, offset: 512)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1954, file: !1955, line: 37, baseType: !371, size: 64, offset: 576)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1954, file: !1955, line: 44, baseType: !1968, size: 256, offset: 640)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1969, line: 15, size: 256, elements: !1970)
!1969 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1970 = !{!1971, !1972, !1973, !1974, !1975, !1976, !1977}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1968, file: !1969, line: 16, baseType: !1761)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1968, file: !1969, line: 18, baseType: !32, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1968, file: !1969, line: 19, baseType: !32, size: 32, offset: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1968, file: !1969, line: 20, baseType: !32, size: 32, offset: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1968, file: !1969, line: 21, baseType: !32, size: 32, offset: 96)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1968, file: !1969, line: 22, baseType: !312, size: 64, offset: 128)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1968, file: !1969, line: 23, baseType: !312, size: 64, offset: 192)
!1978 = !DIDerivedType(tag: DW_TAG_member, scope: !1849, file: !1850, line: 44, baseType: !1979, size: 64, offset: 256)
!1979 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1849, file: !1850, line: 44, size: 64, elements: !1980)
!1980 = !{!1981, !1982}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !1979, file: !1850, line: 45, baseType: !312, size: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, scope: !1979, file: !1850, line: 46, baseType: !1983, size: 64)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1979, file: !1850, line: 46, size: 64, elements: !1984)
!1984 = !{!1985, !1986}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1983, file: !1850, line: 47, baseType: !7, size: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !1983, file: !1850, line: 48, baseType: !7, size: 32, offset: 32)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1769, file: !1317, line: 402, baseType: !1988, size: 64, offset: 832)
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!1989 = !DISubroutineType(types: !1990)
!1990 = !{!32, !1732, !1719, !1719, !5}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1769, file: !1317, line: 404, baseType: !1992, size: 64, offset: 896)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = !DISubroutineType(types: !1994)
!1994 = !{!771, !1719, !1995}
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1996, line: 305, baseType: !7)
!1996 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1769, file: !1317, line: 405, baseType: !1821, size: 64, offset: 960)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1769, file: !1317, line: 406, baseType: !1784, size: 64, offset: 1024)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1769, file: !1317, line: 407, baseType: !2000, size: 64, offset: 1088)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = !DISubroutineType(types: !2002)
!2002 = !{!32, !1719, !312, !312}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1769, file: !1317, line: 409, baseType: !2004, size: 64, offset: 1152)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = !DISubroutineType(types: !2006)
!2006 = !{null, !1719, !2007, !2007}
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1769, file: !1317, line: 410, baseType: !2009, size: 64, offset: 1216)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{!32, !1732, !1719}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1769, file: !1317, line: 413, baseType: !2013, size: 64, offset: 1280)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{!32, !2016, !1315, !2018}
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64)
!2017 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !1317, line: 61, flags: DIFlagFwdDecl)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1769, file: !1317, line: 415, baseType: !2020, size: 64, offset: 1344)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!2021 = !DISubroutineType(types: !2022)
!2022 = !{null, !1315}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1733, file: !1317, line: 466, baseType: !312, size: 64, offset: 896)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1733, file: !1317, line: 467, baseType: !2025, size: 32, offset: 960)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !2026, line: 8, baseType: !987)
!2026 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1733, file: !1317, line: 468, baseType: !1670, offset: 992)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1733, file: !1317, line: 469, baseType: !284, size: 128, offset: 1024)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1733, file: !1317, line: 470, baseType: !591, size: 64, offset: 1152)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1728, file: !1721, line: 87, baseType: !312, size: 64, offset: 192)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1728, file: !1721, line: 94, baseType: !312, size: 64, offset: 256)
!2032 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 96, baseType: !2033, size: 64)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 96, size: 64, elements: !2034)
!2034 = !{!2035}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !2033, file: !1721, line: 101, baseType: !2036, size: 64)
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !277, line: 143, baseType: !331)
!2037 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 103, baseType: !2038, size: 320)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 103, size: 320, elements: !2039)
!2039 = !{!2040, !2050, !2053, !2054}
!2040 = !DIDerivedType(tag: DW_TAG_member, scope: !2038, file: !1721, line: 104, baseType: !2041, size: 128)
!2041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2038, file: !1721, line: 104, size: 128, elements: !2042)
!2042 = !{!2043, !2044}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !2041, file: !1721, line: 105, baseType: !284, size: 128)
!2044 = !DIDerivedType(tag: DW_TAG_member, scope: !2041, file: !1721, line: 106, baseType: !2045, size: 128)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2041, file: !1721, line: 106, size: 128, elements: !2046)
!2046 = !{!2047, !2048, !2049}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2045, file: !1721, line: 107, baseType: !1719, size: 64)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2045, file: !1721, line: 109, baseType: !32, size: 32, offset: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !2045, file: !1721, line: 110, baseType: !32, size: 32, offset: 96)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !2038, file: !1721, line: 117, baseType: !2051, size: 64, offset: 128)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1721, line: 117, flags: DIFlagFwdDecl)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !2038, file: !1721, line: 119, baseType: !591, size: 64, offset: 192)
!2054 = !DIDerivedType(tag: DW_TAG_member, scope: !2038, file: !1721, line: 120, baseType: !2055, size: 64, offset: 256)
!2055 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2038, file: !1721, line: 120, size: 64, elements: !2056)
!2056 = !{!2057, !2058, !2059}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !2055, file: !1721, line: 121, baseType: !591, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !2055, file: !1721, line: 122, baseType: !312, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, scope: !2055, file: !1721, line: 123, baseType: !2060, size: 32)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2055, file: !1721, line: 123, size: 32, elements: !2061)
!2061 = !{!2062, !2063, !2064}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !2060, file: !1721, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2060, file: !1721, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2060, file: !1721, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2065 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 130, baseType: !2066, size: 192)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 130, size: 192, elements: !2067)
!2067 = !{!2068, !2069, !2070, !2071, !2072}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !2066, file: !1721, line: 131, baseType: !312, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !2066, file: !1721, line: 134, baseType: !482, size: 8, offset: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !2066, file: !1721, line: 135, baseType: !482, size: 8, offset: 72)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !2066, file: !1721, line: 136, baseType: !383, size: 32, offset: 96)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !2066, file: !1721, line: 137, baseType: !7, size: 32, offset: 128)
!2073 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 139, baseType: !2074, size: 256)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 139, size: 256, elements: !2075)
!2075 = !{!2076, !2077, !2078}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !2074, file: !1721, line: 140, baseType: !312, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !2074, file: !1721, line: 141, baseType: !383, size: 32, offset: 64)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !2074, file: !1721, line: 143, baseType: !284, size: 128, offset: 128)
!2079 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 145, baseType: !2080, size: 256)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 145, size: 256, elements: !2081)
!2081 = !{!2082, !2083, !2086, !2087, !4246}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !2080, file: !1721, line: 146, baseType: !312, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !2080, file: !1721, line: 147, baseType: !2084, size: 64, offset: 64)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !2085, line: 509, baseType: !1719)
!2085 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !2080, file: !1721, line: 148, baseType: !312, size: 64, offset: 128)
!2087 = !DIDerivedType(tag: DW_TAG_member, scope: !2080, file: !1721, line: 149, baseType: !2088, size: 64, offset: 192)
!2088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2080, file: !1721, line: 149, size: 64, elements: !2089)
!2089 = !{!2090, !4245}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !2088, file: !1721, line: 150, baseType: !2091, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1721, line: 388, size: 7296, elements: !2093)
!2093 = !{!2094, !4243}
!2094 = !DIDerivedType(tag: DW_TAG_member, scope: !2092, file: !1721, line: 389, baseType: !2095, size: 7296)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2092, file: !1721, line: 389, size: 7296, elements: !2096)
!2096 = !{!2097, !2215, !2216, !2217, !2221, !2222, !2223, !2224, !2225, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2266, !2274, !2277, !2316, !2317, !4227, !4228, !4231, !4232, !4233, !4236, !4237, !4238, !4241, !4242}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2095, file: !1721, line: 390, baseType: !2098, size: 64)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1721, line: 305, size: 1472, elements: !2100)
!2100 = !{!2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2115, !2116, !2121, !2122, !2125, !2209, !2210, !2211, !2212, !2213}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !2099, file: !1721, line: 308, baseType: !312, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !2099, file: !1721, line: 309, baseType: !312, size: 64, offset: 64)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !2099, file: !1721, line: 313, baseType: !2098, size: 64, offset: 128)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !2099, file: !1721, line: 313, baseType: !2098, size: 64, offset: 192)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !2099, file: !1721, line: 315, baseType: !433, size: 192, align: 64, offset: 256)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !2099, file: !1721, line: 323, baseType: !312, size: 64, offset: 448)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !2099, file: !1721, line: 327, baseType: !2091, size: 64, offset: 512)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !2099, file: !1721, line: 333, baseType: !2109, size: 64, offset: 576)
!2109 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !2085, line: 284, baseType: !2110)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !2085, line: 284, size: 64, elements: !2111)
!2111 = !{!2112}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !2110, file: !2085, line: 284, baseType: !2113, size: 64)
!2113 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !2114, line: 19, baseType: !312)
!2114 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !2099, file: !1721, line: 334, baseType: !312, size: 64, offset: 640)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !2099, file: !1721, line: 343, baseType: !2117, size: 256, offset: 704)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2099, file: !1721, line: 340, size: 256, elements: !2118)
!2118 = !{!2119, !2120}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2117, file: !1721, line: 341, baseType: !433, size: 192, align: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !2117, file: !1721, line: 342, baseType: !312, size: 64, offset: 192)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !2099, file: !1721, line: 351, baseType: !284, size: 128, offset: 960)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !2099, file: !1721, line: 353, baseType: !2123, size: 64, offset: 1088)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64)
!2124 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1721, line: 353, flags: DIFlagFwdDecl)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2099, file: !1721, line: 356, baseType: !2126, size: 64, offset: 1152)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2128)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !2129)
!2129 = !{!2130, !2134, !2135, !2139, !2143, !2183, !2187, !2191, !2195, !2196, !2197, !2201, !2205}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2128, file: !14, line: 558, baseType: !2131, size: 64)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64)
!2132 = !DISubroutineType(types: !2133)
!2133 = !{null, !2098}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2128, file: !14, line: 559, baseType: !2131, size: 64, offset: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2128, file: !14, line: 560, baseType: !2136, size: 64, offset: 128)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 64)
!2137 = !DISubroutineType(types: !2138)
!2138 = !{!32, !2098, !312}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !2128, file: !14, line: 561, baseType: !2140, size: 64, offset: 192)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64)
!2141 = !DISubroutineType(types: !2142)
!2142 = !{!32, !2098}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !2128, file: !14, line: 562, baseType: !2144, size: 64, offset: 256)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = !DISubroutineType(types: !2146)
!2146 = !{!2147, !2148}
!2147 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !1721, line: 682, baseType: !7)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !2150)
!2150 = !{!2151, !2152, !2153, !2154, !2155, !2156, !2163, !2170, !2176, !2177, !2178, !2180, !2182}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !2149, file: !14, line: 509, baseType: !2098, size: 64)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2149, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2149, file: !14, line: 511, baseType: !1742, size: 32, offset: 96)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !2149, file: !14, line: 512, baseType: !312, size: 64, offset: 128)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2149, file: !14, line: 513, baseType: !312, size: 64, offset: 192)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2149, file: !14, line: 514, baseType: !2157, size: 64, offset: 256)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!2158 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !2085, line: 385, baseType: !2159)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2085, line: 385, size: 64, elements: !2160)
!2160 = !{!2161}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2159, file: !2085, line: 385, baseType: !2162, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !2114, line: 15, baseType: !312)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2149, file: !14, line: 516, baseType: !2164, size: 64, offset: 320)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !2085, line: 359, baseType: !2166)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2085, line: 359, size: 64, elements: !2167)
!2167 = !{!2168}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2166, file: !2085, line: 359, baseType: !2169, size: 64)
!2169 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !2114, line: 16, baseType: !312)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !2149, file: !14, line: 519, baseType: !2171, size: 64, offset: 384)
!2171 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !2114, line: 21, baseType: !2172)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2114, line: 21, size: 64, elements: !2173)
!2173 = !{!2174}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2172, file: !2114, line: 21, baseType: !2175, size: 64)
!2175 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !2114, line: 14, baseType: !312)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !2149, file: !14, line: 521, baseType: !1719, size: 64, offset: 448)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2149, file: !14, line: 522, baseType: !1719, size: 64, offset: 512)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2149, file: !14, line: 528, baseType: !2179, size: 64, offset: 576)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2149, file: !14, line: 532, baseType: !2181, size: 64, offset: 640)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !2149, file: !14, line: 536, baseType: !2084, size: 64, offset: 704)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !2128, file: !14, line: 563, baseType: !2184, size: 64, offset: 320)
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 64)
!2185 = !DISubroutineType(types: !2186)
!2186 = !{!2147, !2148, !13}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !2128, file: !14, line: 565, baseType: !2188, size: 64, offset: 384)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 64)
!2189 = !DISubroutineType(types: !2190)
!2190 = !{null, !2148, !312, !312}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !2128, file: !14, line: 567, baseType: !2192, size: 64, offset: 448)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 64)
!2193 = !DISubroutineType(types: !2194)
!2194 = !{!312, !2098}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !2128, file: !14, line: 571, baseType: !2144, size: 64, offset: 512)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !2128, file: !14, line: 574, baseType: !2144, size: 64, offset: 576)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !2128, file: !14, line: 579, baseType: !2198, size: 64, offset: 640)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = !DISubroutineType(types: !2200)
!2200 = !{!32, !2098, !312, !591, !32, !32}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2128, file: !14, line: 585, baseType: !2202, size: 64, offset: 704)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2203 = !DISubroutineType(types: !2204)
!2204 = !{!292, !2098}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !2128, file: !14, line: 615, baseType: !2206, size: 64, offset: 768)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{!1719, !2098, !312}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !2099, file: !1721, line: 359, baseType: !312, size: 64, offset: 1216)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !2099, file: !1721, line: 361, baseType: !1315, size: 64, offset: 1280)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !2099, file: !1721, line: 362, baseType: !591, size: 64, offset: 1344)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !2099, file: !1721, line: 365, baseType: !371, size: 64, offset: 1408)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !2099, file: !1721, line: 373, baseType: !2214, offset: 1472)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1721, line: 296, elements: !1587)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !2095, file: !1721, line: 391, baseType: !1750, size: 64, offset: 64)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !2095, file: !1721, line: 392, baseType: !331, size: 64, offset: 128)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2095, file: !1721, line: 394, baseType: !2218, size: 64, offset: 192)
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64)
!2219 = !DISubroutineType(types: !2220)
!2220 = !{!312, !1315, !312, !312, !312, !312}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !2095, file: !1721, line: 398, baseType: !312, size: 64, offset: 256)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !2095, file: !1721, line: 399, baseType: !312, size: 64, offset: 320)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !2095, file: !1721, line: 405, baseType: !312, size: 64, offset: 384)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !2095, file: !1721, line: 406, baseType: !312, size: 64, offset: 448)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2095, file: !1721, line: 407, baseType: !2226, size: 64, offset: 512)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64)
!2227 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !2085, line: 286, baseType: !2228)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2085, line: 286, size: 64, elements: !2229)
!2229 = !{!2230}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2228, file: !2085, line: 286, baseType: !2231, size: 64)
!2231 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !2114, line: 18, baseType: !312)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !2095, file: !1721, line: 416, baseType: !383, size: 32, offset: 576)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !2095, file: !1721, line: 428, baseType: !383, size: 32, offset: 608)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !2095, file: !1721, line: 437, baseType: !383, size: 32, offset: 640)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !2095, file: !1721, line: 447, baseType: !383, size: 32, offset: 672)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !2095, file: !1721, line: 450, baseType: !371, size: 64, offset: 704)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !2095, file: !1721, line: 452, baseType: !32, size: 32, offset: 768)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !2095, file: !1721, line: 454, baseType: !1670, offset: 800)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !2095, file: !1721, line: 457, baseType: !1755, size: 256, offset: 832)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !2095, file: !1721, line: 459, baseType: !284, size: 128, offset: 1088)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !2095, file: !1721, line: 466, baseType: !312, size: 64, offset: 1216)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !2095, file: !1721, line: 467, baseType: !312, size: 64, offset: 1280)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !2095, file: !1721, line: 469, baseType: !312, size: 64, offset: 1344)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2095, file: !1721, line: 470, baseType: !312, size: 64, offset: 1408)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !2095, file: !1721, line: 471, baseType: !373, size: 64, offset: 1472)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !2095, file: !1721, line: 472, baseType: !312, size: 64, offset: 1536)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !2095, file: !1721, line: 473, baseType: !312, size: 64, offset: 1600)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !2095, file: !1721, line: 474, baseType: !312, size: 64, offset: 1664)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !2095, file: !1721, line: 475, baseType: !312, size: 64, offset: 1728)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !2095, file: !1721, line: 477, baseType: !1670, offset: 1792)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1792)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1856)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1920)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1984)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !2095, file: !1721, line: 479, baseType: !312, size: 64, offset: 2048)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !2095, file: !1721, line: 479, baseType: !312, size: 64, offset: 2112)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !2095, file: !1721, line: 479, baseType: !312, size: 64, offset: 2176)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2240)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2304)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2368)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2432)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !2095, file: !1721, line: 482, baseType: !2263, size: 2816, offset: 2496)
!2263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 2816, elements: !2264)
!2264 = !{!2265}
!2265 = !DISubrange(count: 44)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !2095, file: !1721, line: 488, baseType: !2267, size: 256, offset: 5312)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2268, line: 60, size: 256, elements: !2269)
!2268 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2269 = !{!2270}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2267, file: !2268, line: 61, baseType: !2271, size: 256)
!2271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 256, elements: !2272)
!2272 = !{!2273}
!2273 = !DISubrange(count: 4)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !2095, file: !1721, line: 490, baseType: !2275, size: 64, offset: 5568)
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 64)
!2276 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1721, line: 490, flags: DIFlagFwdDecl)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2095, file: !1721, line: 493, baseType: !2278, size: 896, offset: 5632)
!2278 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2279, line: 53, baseType: !2280)
!2279 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2279, line: 13, size: 896, elements: !2281)
!2281 = !{!2282, !2283, !2284, !2285, !2288, !2289, !2290, !2291, !2311, !2312, !2313}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2280, file: !2279, line: 18, baseType: !331, size: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2280, file: !2279, line: 28, baseType: !373, size: 64, offset: 64)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2280, file: !2279, line: 31, baseType: !1755, size: 256, offset: 128)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2280, file: !2279, line: 32, baseType: !2286, size: 64, offset: 384)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 64)
!2287 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2279, line: 32, flags: DIFlagFwdDecl)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2280, file: !2279, line: 37, baseType: !476, size: 16, offset: 448)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2280, file: !2279, line: 40, baseType: !1665, size: 192, offset: 512)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2280, file: !2279, line: 41, baseType: !591, size: 64, offset: 704)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2280, file: !2279, line: 42, baseType: !2292, size: 64, offset: 768)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 64)
!2293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2294)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2295, line: 13, size: 896, elements: !2296)
!2295 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2296 = !{!2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2294, file: !2295, line: 14, baseType: !591, size: 64)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2294, file: !2295, line: 15, baseType: !312, size: 64, offset: 64)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2294, file: !2295, line: 17, baseType: !312, size: 64, offset: 128)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2294, file: !2295, line: 17, baseType: !312, size: 64, offset: 192)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2294, file: !2295, line: 19, baseType: !998, size: 64, offset: 256)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2294, file: !2295, line: 21, baseType: !998, size: 64, offset: 320)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2294, file: !2295, line: 22, baseType: !998, size: 64, offset: 384)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2294, file: !2295, line: 23, baseType: !998, size: 64, offset: 448)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2294, file: !2295, line: 24, baseType: !998, size: 64, offset: 512)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2294, file: !2295, line: 25, baseType: !998, size: 64, offset: 576)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2294, file: !2295, line: 26, baseType: !998, size: 64, offset: 640)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2294, file: !2295, line: 27, baseType: !998, size: 64, offset: 704)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2294, file: !2295, line: 28, baseType: !998, size: 64, offset: 768)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2294, file: !2295, line: 29, baseType: !998, size: 64, offset: 832)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2280, file: !2279, line: 44, baseType: !383, size: 32, offset: 832)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2280, file: !2279, line: 50, baseType: !581, size: 16, offset: 864)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2280, file: !2279, line: 51, baseType: !2314, size: 16, offset: 880)
!2314 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !332, line: 18, baseType: !2315)
!2315 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !334, line: 23, baseType: !625)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2095, file: !1721, line: 495, baseType: !312, size: 64, offset: 6528)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !2095, file: !1721, line: 497, baseType: !2318, size: 64, offset: 6592)
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 64)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1721, line: 381, size: 384, elements: !2320)
!2320 = !{!2321, !2322, !4226}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2319, file: !1721, line: 382, baseType: !383, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2319, file: !1721, line: 383, baseType: !2323, size: 128, offset: 64)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1721, line: 376, size: 128, elements: !2324)
!2324 = !{!2325, !4224}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2323, file: !1721, line: 377, baseType: !2326, size: 64)
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 64)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !2328, line: 640, size: 48640, elements: !2329)
!2328 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!2329 = !{!2330, !2336, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2351, !2369, !2380, !2461, !2462, !2463, !2474, !2475, !2477, !2478, !2479, !2480, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2558, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2591, !2593, !2594, !2595, !2607, !2608, !2609, !2610, !2611, !2612, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2636, !2641, !2949, !2950, !2951, !2952, !2953, !2956, !2959, !2962, !2965, !3687, !3783, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3821, !3822, !3831, !3832, !3833, !3834, !3835, !3840, !3841, !3842, !3845, !3846, !3849, !3852, !3855, !3858, !3890, !3893, !3894, !3973, !3974, !3977, !3978, !3981, !3982, !3983, !3987, !3988, !3989, !4002, !4003, !4004, !4014, !4019, !4020, !4026, !4027, !4028, !4029, !4030, !4031, !4032, !4033, !4047, !4048, !4049, !4050, !4051, !4052, !4053, !4054, !4055}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !2327, file: !2328, line: 646, baseType: !2331, size: 128)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !2332, line: 56, size: 128, elements: !2333)
!2332 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!2333 = !{!2334, !2335}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2331, file: !2332, line: 57, baseType: !312, size: 64)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2331, file: !2332, line: 58, baseType: !987, size: 32, offset: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2327, file: !2328, line: 649, baseType: !2337, size: 64, offset: 128)
!2337 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !998)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2327, file: !2328, line: 657, baseType: !591, size: 64, offset: 192)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2327, file: !2328, line: 658, baseType: !568, size: 32, offset: 256)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2327, file: !2328, line: 660, baseType: !7, size: 32, offset: 288)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !2327, file: !2328, line: 661, baseType: !7, size: 32, offset: 320)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2327, file: !2328, line: 684, baseType: !32, size: 32, offset: 352)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2327, file: !2328, line: 686, baseType: !32, size: 32, offset: 384)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !2327, file: !2328, line: 687, baseType: !32, size: 32, offset: 416)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !2327, file: !2328, line: 688, baseType: !32, size: 32, offset: 448)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !2327, file: !2328, line: 689, baseType: !7, size: 32, offset: 480)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !2327, file: !2328, line: 691, baseType: !2348, size: 64, offset: 512)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64)
!2349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2350)
!2350 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !2328, line: 691, flags: DIFlagFwdDecl)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !2327, file: !2328, line: 692, baseType: !2352, size: 832, offset: 576)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !2328, line: 451, size: 832, elements: !2353)
!2353 = !{!2354, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !2352, file: !2328, line: 453, baseType: !2355, size: 128)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !2328, line: 325, size: 128, elements: !2356)
!2356 = !{!2357, !2358}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2355, file: !2328, line: 326, baseType: !312, size: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !2355, file: !2328, line: 327, baseType: !987, size: 32, offset: 64)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !2352, file: !2328, line: 454, baseType: !433, size: 192, align: 64, offset: 128)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !2352, file: !2328, line: 455, baseType: !284, size: 128, offset: 320)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2352, file: !2328, line: 456, baseType: !7, size: 32, offset: 448)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !2352, file: !2328, line: 458, baseType: !331, size: 64, offset: 512)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2352, file: !2328, line: 459, baseType: !331, size: 64, offset: 576)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !2352, file: !2328, line: 460, baseType: !331, size: 64, offset: 640)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !2352, file: !2328, line: 461, baseType: !331, size: 64, offset: 704)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !2352, file: !2328, line: 463, baseType: !331, size: 64, offset: 768)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !2352, file: !2328, line: 465, baseType: !2368, offset: 832)
!2368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !2328, line: 415, elements: !1587)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2327, file: !2328, line: 693, baseType: !2370, size: 384, offset: 1408)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !2328, line: 489, size: 384, elements: !2371)
!2371 = !{!2372, !2373, !2374, !2375, !2376, !2377, !2378}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !2370, file: !2328, line: 490, baseType: !284, size: 128)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2370, file: !2328, line: 491, baseType: !312, size: 64, offset: 128)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !2370, file: !2328, line: 492, baseType: !312, size: 64, offset: 192)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !2370, file: !2328, line: 493, baseType: !7, size: 32, offset: 256)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2370, file: !2328, line: 494, baseType: !476, size: 16, offset: 288)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !2370, file: !2328, line: 495, baseType: !476, size: 16, offset: 304)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2370, file: !2328, line: 497, baseType: !2379, size: 64, offset: 320)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !2327, file: !2328, line: 697, baseType: !2381, size: 1792, offset: 1792)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !2328, line: 507, size: 1792, elements: !2382)
!2382 = !{!2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2458, !2459}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2381, file: !2328, line: 508, baseType: !433, size: 192, align: 64)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !2381, file: !2328, line: 515, baseType: !331, size: 64, offset: 192)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !2381, file: !2328, line: 516, baseType: !331, size: 64, offset: 256)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !2381, file: !2328, line: 517, baseType: !331, size: 64, offset: 320)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !2381, file: !2328, line: 518, baseType: !331, size: 64, offset: 384)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !2381, file: !2328, line: 519, baseType: !331, size: 64, offset: 448)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !2381, file: !2328, line: 526, baseType: !377, size: 64, offset: 512)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2381, file: !2328, line: 527, baseType: !331, size: 64, offset: 576)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2381, file: !2328, line: 528, baseType: !7, size: 32, offset: 640)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !2381, file: !2328, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !2381, file: !2328, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !2381, file: !2328, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !2381, file: !2328, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !2381, file: !2328, line: 563, baseType: !2397, size: 512, offset: 704)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !2398)
!2398 = !{!2399, !2405, !2406, !2411, !2454, !2455, !2456, !2457}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2397, file: !20, line: 119, baseType: !2400, size: 256)
!2400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !2401, line: 9, size: 256, elements: !2402)
!2401 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!2402 = !{!2403, !2404}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2400, file: !2401, line: 10, baseType: !433, size: 192, align: 64)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2400, file: !2401, line: 11, baseType: !453, size: 64, offset: 192)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !2397, file: !20, line: 120, baseType: !453, size: 64, offset: 256)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2397, file: !20, line: 121, baseType: !2407, size: 64, offset: 320)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 64)
!2408 = !DISubroutineType(types: !2409)
!2409 = !{!19, !2410}
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 64)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2397, file: !20, line: 122, baseType: !2412, size: 64, offset: 384)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 64)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !2414)
!2414 = !{!2415, !2435, !2436, !2439, !2444, !2445, !2449, !2453}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !2413, file: !20, line: 160, baseType: !2416, size: 64)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 64)
!2417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !2418)
!2418 = !{!2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2417, file: !20, line: 215, baseType: !1761)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2417, file: !20, line: 216, baseType: !7, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !2417, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !2417, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !2417, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !2417, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !2417, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !2417, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !2417, file: !20, line: 233, baseType: !453, size: 64, offset: 128)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !2417, file: !20, line: 234, baseType: !2410, size: 64, offset: 192)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !2417, file: !20, line: 235, baseType: !453, size: 64, offset: 256)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !2417, file: !20, line: 236, baseType: !2410, size: 64, offset: 320)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !2417, file: !20, line: 237, baseType: !2432, size: 4096, offset: 512)
!2432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2413, size: 4096, elements: !2433)
!2433 = !{!2434}
!2434 = !DISubrange(count: 8)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2413, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2413, file: !20, line: 162, baseType: !2437, size: 32, offset: 96)
!2437 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !277, line: 27, baseType: !2438)
!2438 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !1041, line: 96, baseType: !32)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2413, file: !20, line: 163, baseType: !2440, size: 32, offset: 128)
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !1344, line: 276, baseType: !2441)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !1344, line: 276, size: 32, elements: !2442)
!2442 = !{!2443}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2441, file: !1344, line: 276, baseType: !1348, size: 32)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !2413, file: !20, line: 164, baseType: !2410, size: 64, offset: 192)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2413, file: !20, line: 165, baseType: !2446, size: 128, offset: 256)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !2401, line: 14, size: 128, elements: !2447)
!2447 = !{!2448}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2446, file: !2401, line: 15, baseType: !1747, size: 128)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !2413, file: !20, line: 166, baseType: !2450, size: 64, offset: 384)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = !DISubroutineType(types: !2452)
!2452 = !{!453}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2413, file: !20, line: 167, baseType: !453, size: 64, offset: 448)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2397, file: !20, line: 123, baseType: !794, size: 8, offset: 448)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !2397, file: !20, line: 124, baseType: !794, size: 8, offset: 456)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !2397, file: !20, line: 125, baseType: !794, size: 8, offset: 464)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !2397, file: !20, line: 126, baseType: !794, size: 8, offset: 472)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !2381, file: !2328, line: 572, baseType: !2397, size: 512, offset: 1216)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !2381, file: !2328, line: 580, baseType: !2460, size: 64, offset: 1728)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2327, file: !2328, line: 721, baseType: !7, size: 32, offset: 3584)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !2327, file: !2328, line: 722, baseType: !32, size: 32, offset: 3616)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !2327, file: !2328, line: 723, baseType: !2464, size: 64, offset: 3648)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 64)
!2465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2466)
!2466 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !2467, line: 17, baseType: !2468)
!2467 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !2467, line: 17, size: 64, elements: !2469)
!2469 = !{!2470}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2468, file: !2467, line: 17, baseType: !2471, size: 64)
!2471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 64, elements: !2472)
!2472 = !{!2473}
!2473 = !DISubrange(count: 1)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !2327, file: !2328, line: 724, baseType: !2466, size: 64, offset: 3712)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !2327, file: !2328, line: 749, baseType: !2476, offset: 3776)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !2328, line: 290, elements: !1587)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2327, file: !2328, line: 751, baseType: !284, size: 128, offset: 3776)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !2327, file: !2328, line: 757, baseType: !2091, size: 64, offset: 3904)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !2327, file: !2328, line: 758, baseType: !2091, size: 64, offset: 3968)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !2327, file: !2328, line: 761, baseType: !2481, size: 320, offset: 4032)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2268, line: 34, size: 320, elements: !2482)
!2482 = !{!2483, !2484}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2481, file: !2268, line: 35, baseType: !331, size: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2481, file: !2268, line: 36, baseType: !2485, size: 256, offset: 64)
!2485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2098, size: 256, elements: !2272)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !2327, file: !2328, line: 766, baseType: !32, size: 32, offset: 4352)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !2327, file: !2328, line: 767, baseType: !32, size: 32, offset: 4384)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !2327, file: !2328, line: 768, baseType: !32, size: 32, offset: 4416)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !2327, file: !2328, line: 770, baseType: !32, size: 32, offset: 4448)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !2327, file: !2328, line: 772, baseType: !312, size: 64, offset: 4480)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2327, file: !2328, line: 775, baseType: !7, size: 32, offset: 4544)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !2327, file: !2328, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !2327, file: !2328, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !2327, file: !2328, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !2327, file: !2328, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !2327, file: !2328, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !2327, file: !2328, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !2327, file: !2328, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !2327, file: !2328, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !2327, file: !2328, line: 831, baseType: !312, size: 64, offset: 4672)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !2327, file: !2328, line: 833, baseType: !2502, size: 384, offset: 4736)
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !2503)
!2503 = !{!2504, !2509}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2502, file: !25, line: 26, baseType: !2505, size: 64)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 64)
!2506 = !DISubroutineType(types: !2507)
!2507 = !{!998, !2508}
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 64)
!2509 = !DIDerivedType(tag: DW_TAG_member, scope: !2502, file: !25, line: 27, baseType: !2510, size: 320, offset: 64)
!2510 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2502, file: !25, line: 27, size: 320, elements: !2511)
!2511 = !{!2512, !2522, !2548}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2510, file: !25, line: 36, baseType: !2513, size: 320)
!2513 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2510, file: !25, line: 29, size: 320, elements: !2514)
!2514 = !{!2515, !2517, !2518, !2519, !2520, !2521}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2513, file: !25, line: 30, baseType: !2516, size: 64)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2513, file: !25, line: 31, baseType: !987, size: 32, offset: 64)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2513, file: !25, line: 32, baseType: !987, size: 32, offset: 96)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2513, file: !25, line: 33, baseType: !987, size: 32, offset: 128)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2513, file: !25, line: 34, baseType: !331, size: 64, offset: 192)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2513, file: !25, line: 35, baseType: !2516, size: 64, offset: 256)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2510, file: !25, line: 46, baseType: !2523, size: 192)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2510, file: !25, line: 38, size: 192, elements: !2524)
!2524 = !{!2525, !2526, !2527, !2547}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2523, file: !25, line: 39, baseType: !2437, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2523, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, scope: !2523, file: !25, line: 41, baseType: !2528, size: 64, offset: 64)
!2528 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2523, file: !25, line: 41, size: 64, elements: !2529)
!2529 = !{!2530, !2538}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2528, file: !25, line: 42, baseType: !2531, size: 64)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!2532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2533, line: 7, size: 128, elements: !2534)
!2533 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2534 = !{!2535, !2537}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2532, file: !2533, line: 8, baseType: !2536, size: 64)
!2536 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !1041, line: 93, baseType: !379)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2532, file: !2533, line: 9, baseType: !379, size: 64, offset: 64)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2528, file: !25, line: 43, baseType: !2539, size: 64)
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 64)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2541, line: 7, size: 64, elements: !2542)
!2541 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2542 = !{!2543, !2546}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2540, file: !2541, line: 8, baseType: !2544, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2541, line: 5, baseType: !2545)
!2545 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !332, line: 20, baseType: !942)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2540, file: !2541, line: 9, baseType: !2545, size: 32, offset: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2523, file: !25, line: 45, baseType: !331, size: 64, offset: 128)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2510, file: !25, line: 54, baseType: !2549, size: 256)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2510, file: !25, line: 48, size: 256, elements: !2550)
!2550 = !{!2551, !2554, !2555, !2556, !2557}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2549, file: !25, line: 49, baseType: !2552, size: 64)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 64)
!2553 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2549, file: !25, line: 50, baseType: !32, size: 32, offset: 64)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2549, file: !25, line: 51, baseType: !32, size: 32, offset: 96)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2549, file: !25, line: 52, baseType: !312, size: 64, offset: 128)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2549, file: !25, line: 53, baseType: !312, size: 64, offset: 192)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2327, file: !2328, line: 835, baseType: !2559, size: 32, offset: 5120)
!2559 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !277, line: 22, baseType: !2560)
!2560 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !1041, line: 28, baseType: !32)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !2327, file: !2328, line: 836, baseType: !2559, size: 32, offset: 5152)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !2327, file: !2328, line: 840, baseType: !312, size: 64, offset: 5184)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !2327, file: !2328, line: 849, baseType: !2326, size: 64, offset: 5248)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2327, file: !2328, line: 852, baseType: !2326, size: 64, offset: 5312)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2327, file: !2328, line: 857, baseType: !284, size: 128, offset: 5376)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2327, file: !2328, line: 858, baseType: !284, size: 128, offset: 5504)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !2327, file: !2328, line: 859, baseType: !2326, size: 64, offset: 5632)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !2327, file: !2328, line: 867, baseType: !284, size: 128, offset: 5696)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !2327, file: !2328, line: 868, baseType: !284, size: 128, offset: 5824)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !2327, file: !2328, line: 871, baseType: !2571, size: 64, offset: 5952)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 64)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !2573, line: 59, size: 768, elements: !2574)
!2573 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!2574 = !{!2575, !2576, !2577, !2578, !2580, !2581, !2582, !2583}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2572, file: !2573, line: 61, baseType: !568, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2572, file: !2573, line: 62, baseType: !7, size: 32, offset: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2572, file: !2573, line: 63, baseType: !1670, offset: 64)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2572, file: !2573, line: 65, baseType: !2579, size: 256, offset: 64)
!2579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1581, size: 256, elements: !2272)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2572, file: !2573, line: 66, baseType: !1581, size: 64, offset: 320)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2572, file: !2573, line: 68, baseType: !1889, size: 128, offset: 384)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2572, file: !2573, line: 69, baseType: !299, size: 128, align: 64, offset: 512)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2572, file: !2573, line: 70, baseType: !2584, size: 128, offset: 640)
!2584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2585, size: 128, elements: !2472)
!2585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !2573, line: 54, size: 128, elements: !2586)
!2586 = !{!2587, !2588}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2585, file: !2573, line: 55, baseType: !32, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2585, file: !2573, line: 56, baseType: !2589, size: 64, offset: 64)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64)
!2590 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !2573, line: 56, flags: DIFlagFwdDecl)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !2327, file: !2328, line: 872, baseType: !2592, size: 512, offset: 6016)
!2592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !276, size: 512, elements: !2272)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !2327, file: !2328, line: 873, baseType: !284, size: 128, offset: 6528)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !2327, file: !2328, line: 874, baseType: !284, size: 128, offset: 6656)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !2327, file: !2328, line: 876, baseType: !2596, size: 64, offset: 6784)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 64)
!2597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2598, line: 26, size: 192, elements: !2599)
!2598 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2599 = !{!2600, !2601}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2597, file: !2598, line: 27, baseType: !7, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2597, file: !2598, line: 28, baseType: !2602, size: 128, offset: 64)
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2603, line: 43, size: 128, elements: !2604)
!2603 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2604 = !{!2605, !2606}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2602, file: !2603, line: 44, baseType: !1761)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2602, file: !2603, line: 45, baseType: !284, size: 128)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !2327, file: !2328, line: 879, baseType: !1001, size: 64, offset: 6848)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !2327, file: !2328, line: 882, baseType: !1001, size: 64, offset: 6912)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2327, file: !2328, line: 884, baseType: !331, size: 64, offset: 6976)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2327, file: !2328, line: 885, baseType: !331, size: 64, offset: 7040)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2327, file: !2328, line: 890, baseType: !331, size: 64, offset: 7104)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2327, file: !2328, line: 891, baseType: !2613, size: 128, offset: 7168)
!2613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !2328, line: 242, size: 128, elements: !2614)
!2614 = !{!2615, !2616, !2617}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2613, file: !2328, line: 244, baseType: !331, size: 64)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2613, file: !2328, line: 245, baseType: !331, size: 64, offset: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2613, file: !2328, line: 246, baseType: !1761, offset: 128)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2327, file: !2328, line: 900, baseType: !312, size: 64, offset: 7296)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2327, file: !2328, line: 901, baseType: !312, size: 64, offset: 7360)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2327, file: !2328, line: 904, baseType: !331, size: 64, offset: 7424)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !2327, file: !2328, line: 907, baseType: !331, size: 64, offset: 7488)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2327, file: !2328, line: 910, baseType: !312, size: 64, offset: 7552)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2327, file: !2328, line: 911, baseType: !312, size: 64, offset: 7616)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2327, file: !2328, line: 914, baseType: !2625, size: 640, offset: 7680)
!2625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2626, line: 123, size: 640, elements: !2627)
!2626 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2627 = !{!2628, !2634, !2635}
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2625, file: !2626, line: 124, baseType: !2629, size: 576)
!2629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2630, size: 576, elements: !1592)
!2630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2626, line: 108, size: 192, elements: !2631)
!2631 = !{!2632, !2633}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2630, file: !2626, line: 109, baseType: !331, size: 64)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2630, file: !2626, line: 110, baseType: !2446, size: 128, offset: 64)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2625, file: !2626, line: 125, baseType: !7, size: 32, offset: 576)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2625, file: !2626, line: 126, baseType: !7, size: 32, offset: 608)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !2327, file: !2328, line: 917, baseType: !2637, size: 192, offset: 8320)
!2637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2626, line: 134, size: 192, elements: !2638)
!2638 = !{!2639, !2640}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2637, file: !2626, line: 135, baseType: !299, size: 128, align: 64)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2637, file: !2626, line: 136, baseType: !7, size: 32, offset: 128)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !2327, file: !2328, line: 923, baseType: !2642, size: 64, offset: 8512)
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 64)
!2643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2644)
!2644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2645, line: 111, size: 1280, elements: !2646)
!2645 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2646 = !{!2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2666, !2667, !2668, !2669, !2670, !2671, !2776, !2777, !2778, !2779, !2780, !2936, !2944}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2644, file: !2645, line: 112, baseType: !383, size: 32)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2644, file: !2645, line: 120, baseType: !1382, size: 32, offset: 32)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2644, file: !2645, line: 121, baseType: !1390, size: 32, offset: 64)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2644, file: !2645, line: 122, baseType: !1382, size: 32, offset: 96)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2644, file: !2645, line: 123, baseType: !1390, size: 32, offset: 128)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2644, file: !2645, line: 124, baseType: !1382, size: 32, offset: 160)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2644, file: !2645, line: 125, baseType: !1390, size: 32, offset: 192)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2644, file: !2645, line: 126, baseType: !1382, size: 32, offset: 224)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2644, file: !2645, line: 127, baseType: !1390, size: 32, offset: 256)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2644, file: !2645, line: 128, baseType: !7, size: 32, offset: 288)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2644, file: !2645, line: 129, baseType: !2658, size: 64, offset: 320)
!2658 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2659, line: 26, baseType: !2660)
!2659 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2659, line: 24, size: 64, elements: !2661)
!2661 = !{!2662}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2660, file: !2659, line: 25, baseType: !2663, size: 64)
!2663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 64, elements: !2664)
!2664 = !{!2665}
!2665 = !DISubrange(count: 2)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2644, file: !2645, line: 130, baseType: !2658, size: 64, offset: 384)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2644, file: !2645, line: 131, baseType: !2658, size: 64, offset: 448)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2644, file: !2645, line: 132, baseType: !2658, size: 64, offset: 512)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2644, file: !2645, line: 133, baseType: !2658, size: 64, offset: 576)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2644, file: !2645, line: 135, baseType: !482, size: 8, offset: 640)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2644, file: !2645, line: 137, baseType: !2672, size: 64, offset: 704)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 64)
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2674, line: 189, size: 1664, elements: !2675)
!2674 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2675 = !{!2676, !2677, !2680, !2685, !2686, !2689, !2690, !2695, !2696, !2697, !2698, !2700, !2701, !2702, !2703, !2704, !2740, !2761}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2673, file: !2674, line: 190, baseType: !568, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2673, file: !2674, line: 191, baseType: !2678, size: 32, offset: 32)
!2678 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2674, line: 28, baseType: !2679)
!2679 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !277, line: 98, baseType: !2545)
!2680 = !DIDerivedType(tag: DW_TAG_member, scope: !2673, file: !2674, line: 192, baseType: !2681, size: 192, offset: 64)
!2681 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2673, file: !2674, line: 192, size: 192, elements: !2682)
!2682 = !{!2683, !2684}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2681, file: !2674, line: 193, baseType: !284, size: 128)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2681, file: !2674, line: 194, baseType: !433, size: 192, align: 64)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2673, file: !2674, line: 199, baseType: !1755, size: 256, offset: 256)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2673, file: !2674, line: 200, baseType: !2687, size: 64, offset: 512)
!2687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2688, size: 64)
!2688 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2674, line: 200, flags: DIFlagFwdDecl)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2673, file: !2674, line: 201, baseType: !591, size: 64, offset: 576)
!2690 = !DIDerivedType(tag: DW_TAG_member, scope: !2673, file: !2674, line: 202, baseType: !2691, size: 64, offset: 640)
!2691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2673, file: !2674, line: 202, size: 64, elements: !2692)
!2692 = !{!2693, !2694}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2691, file: !2674, line: 203, baseType: !1483, size: 64)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2691, file: !2674, line: 204, baseType: !1483, size: 64)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2673, file: !2674, line: 206, baseType: !1483, size: 64, offset: 704)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2673, file: !2674, line: 207, baseType: !1382, size: 32, offset: 768)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2673, file: !2674, line: 208, baseType: !1390, size: 32, offset: 800)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2673, file: !2674, line: 209, baseType: !2699, size: 32, offset: 832)
!2699 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2674, line: 31, baseType: !1502)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2673, file: !2674, line: 210, baseType: !476, size: 16, offset: 864)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2673, file: !2674, line: 211, baseType: !476, size: 16, offset: 880)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2673, file: !2674, line: 215, baseType: !625, size: 16, offset: 896)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2673, file: !2674, line: 222, baseType: !312, size: 64, offset: 960)
!2704 = !DIDerivedType(tag: DW_TAG_member, scope: !2673, file: !2674, line: 239, baseType: !2705, size: 320, offset: 1024)
!2705 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2673, file: !2674, line: 239, size: 320, elements: !2706)
!2706 = !{!2707, !2732}
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2705, file: !2674, line: 240, baseType: !2708, size: 320)
!2708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2674, line: 108, size: 320, elements: !2709)
!2709 = !{!2710, !2711, !2721, !2724, !2731}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2708, file: !2674, line: 110, baseType: !312, size: 64)
!2711 = !DIDerivedType(tag: DW_TAG_member, scope: !2708, file: !2674, line: 111, baseType: !2712, size: 64, offset: 64)
!2712 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2708, file: !2674, line: 111, size: 64, elements: !2713)
!2713 = !{!2714, !2720}
!2714 = !DIDerivedType(tag: DW_TAG_member, scope: !2712, file: !2674, line: 112, baseType: !2715, size: 64)
!2715 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2712, file: !2674, line: 112, size: 64, elements: !2716)
!2716 = !{!2717, !2718}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2715, file: !2674, line: 114, baseType: !581, size: 16)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2715, file: !2674, line: 115, baseType: !2719, size: 48, offset: 16)
!2719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 48, elements: !999)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2712, file: !2674, line: 121, baseType: !312, size: 64)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2708, file: !2674, line: 123, baseType: !2722, size: 64, offset: 128)
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 64)
!2723 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2674, line: 96, flags: DIFlagFwdDecl)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2708, file: !2674, line: 124, baseType: !2725, size: 64, offset: 192)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64)
!2726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2674, line: 102, size: 192, elements: !2727)
!2727 = !{!2728, !2729, !2730}
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2726, file: !2674, line: 103, baseType: !299, size: 128, align: 64)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2726, file: !2674, line: 104, baseType: !568, size: 32, offset: 128)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2726, file: !2674, line: 105, baseType: !771, size: 8, offset: 160)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2708, file: !2674, line: 125, baseType: !292, size: 64, offset: 256)
!2732 = !DIDerivedType(tag: DW_TAG_member, scope: !2705, file: !2674, line: 241, baseType: !2733, size: 320)
!2733 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2705, file: !2674, line: 241, size: 320, elements: !2734)
!2734 = !{!2735, !2736, !2737, !2738, !2739}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2733, file: !2674, line: 242, baseType: !312, size: 64)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2733, file: !2674, line: 243, baseType: !312, size: 64, offset: 64)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2733, file: !2674, line: 244, baseType: !2722, size: 64, offset: 128)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2733, file: !2674, line: 245, baseType: !2725, size: 64, offset: 192)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2733, file: !2674, line: 246, baseType: !1038, size: 64, offset: 256)
!2740 = !DIDerivedType(tag: DW_TAG_member, scope: !2673, file: !2674, line: 254, baseType: !2741, size: 256, offset: 1344)
!2741 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2673, file: !2674, line: 254, size: 256, elements: !2742)
!2742 = !{!2743, !2749}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2741, file: !2674, line: 255, baseType: !2744, size: 256)
!2744 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2674, line: 128, size: 256, elements: !2745)
!2745 = !{!2746, !2747}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2744, file: !2674, line: 129, baseType: !591, size: 64)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2744, file: !2674, line: 130, baseType: !2748, size: 256)
!2748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !591, size: 256, elements: !2272)
!2749 = !DIDerivedType(tag: DW_TAG_member, scope: !2741, file: !2674, line: 256, baseType: !2750, size: 256)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2741, file: !2674, line: 256, size: 256, elements: !2751)
!2751 = !{!2752, !2753}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2750, file: !2674, line: 258, baseType: !284, size: 128)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2750, file: !2674, line: 259, baseType: !2754, size: 128, offset: 128)
!2754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2755, line: 22, size: 128, elements: !2756)
!2755 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2756 = !{!2757, !2760}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2754, file: !2755, line: 23, baseType: !2758, size: 64)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2755, line: 23, flags: DIFlagFwdDecl)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2754, file: !2755, line: 24, baseType: !312, size: 64, offset: 64)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2673, file: !2674, line: 274, baseType: !2762, size: 64, offset: 1600)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 64)
!2763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2674, line: 170, size: 192, elements: !2764)
!2764 = !{!2765, !2774, !2775}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2763, file: !2674, line: 171, baseType: !2766, size: 64)
!2766 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2674, line: 165, baseType: !2767)
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2768, size: 64)
!2768 = !DISubroutineType(types: !2769)
!2769 = !{!32, !2672, !2770, !2772, !2672}
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2771, size: 64)
!2771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2723)
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 64)
!2773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2744)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2763, file: !2674, line: 172, baseType: !2672, size: 64, offset: 64)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2763, file: !2674, line: 173, baseType: !2722, size: 64, offset: 128)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2644, file: !2645, line: 138, baseType: !2672, size: 64, offset: 768)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2644, file: !2645, line: 139, baseType: !2672, size: 64, offset: 832)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2644, file: !2645, line: 140, baseType: !2672, size: 64, offset: 896)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2644, file: !2645, line: 145, baseType: !1953, size: 64, offset: 960)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2644, file: !2645, line: 146, baseType: !2781, size: 64, offset: 1024)
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 64)
!2782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !2783, line: 56, size: 4160, elements: !2784)
!2783 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2784 = !{!2785, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2824, !2825, !2826, !2827, !2828, !2840, !2921, !2922, !2934}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !2782, file: !2783, line: 57, baseType: !2786, size: 576)
!2786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !2783, line: 23, size: 576, elements: !2787)
!2787 = !{!2788, !2789}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !2786, file: !2783, line: 24, baseType: !987, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, scope: !2786, file: !2783, line: 25, baseType: !2790, size: 512, offset: 64)
!2790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2786, file: !2783, line: 25, size: 512, elements: !2791)
!2791 = !{!2792, !2801}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !2790, file: !2783, line: 26, baseType: !2793, size: 480)
!2793 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2794, size: 480, elements: !2799)
!2794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !2783, line: 17, size: 96, elements: !2795)
!2795 = !{!2796, !2797, !2798}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2794, file: !2783, line: 18, baseType: !987, size: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !2794, file: !2783, line: 19, baseType: !987, size: 32, offset: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2794, file: !2783, line: 20, baseType: !987, size: 32, offset: 64)
!2799 = !{!2800}
!2800 = !DISubrange(count: 5)
!2801 = !DIDerivedType(tag: DW_TAG_member, scope: !2790, file: !2783, line: 27, baseType: !2802, size: 128)
!2802 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2790, file: !2783, line: 27, size: 128, elements: !2803)
!2803 = !{!2804, !2806}
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !2802, file: !2783, line: 28, baseType: !2805, size: 64)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2794, size: 64)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !2802, file: !2783, line: 29, baseType: !2805, size: 64, offset: 64)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !2782, file: !2783, line: 58, baseType: !2786, size: 576, offset: 576)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !2782, file: !2783, line: 59, baseType: !2786, size: 576, offset: 1152)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2782, file: !2783, line: 60, baseType: !383, size: 32, offset: 1728)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2782, file: !2783, line: 61, baseType: !2781, size: 64, offset: 1792)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2782, file: !2783, line: 62, baseType: !32, size: 32, offset: 1856)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2782, file: !2783, line: 63, baseType: !1382, size: 32, offset: 1888)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2782, file: !2783, line: 64, baseType: !1390, size: 32, offset: 1920)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2782, file: !2783, line: 65, baseType: !2815, size: 192, offset: 1984)
!2815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !2816, line: 7, size: 192, elements: !2817)
!2816 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!2817 = !{!2818, !2819, !2823}
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !2815, file: !2816, line: 8, baseType: !371, size: 64)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2815, file: !2816, line: 9, baseType: !2820, size: 64, offset: 64)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64)
!2821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2822)
!2822 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !2816, line: 5, flags: DIFlagFwdDecl)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !2815, file: !2816, line: 10, baseType: !7, size: 32, offset: 128)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2782, file: !2783, line: 66, baseType: !312, size: 64, offset: 2176)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !2782, file: !2783, line: 74, baseType: !284, size: 128, offset: 2240)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !2782, file: !2783, line: 75, baseType: !2672, size: 64, offset: 2368)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !2782, file: !2783, line: 76, baseType: !1755, size: 256, offset: 2432)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2782, file: !2783, line: 83, baseType: !2829, size: 256, offset: 2688)
!2829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2830, line: 102, size: 256, elements: !2831)
!2830 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2831 = !{!2832, !2833, !2834}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2829, file: !2830, line: 103, baseType: !371, size: 64)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2829, file: !2830, line: 104, baseType: !284, size: 128, offset: 64)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2829, file: !2830, line: 105, baseType: !2835, size: 64, offset: 192)
!2835 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2830, line: 21, baseType: !2836)
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 64)
!2837 = !DISubroutineType(types: !2838)
!2838 = !{null, !2839}
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 64)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2782, file: !2783, line: 85, baseType: !2841, size: 768, offset: 2944)
!2841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !2842, line: 156, size: 768, elements: !2843)
!2842 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2843 = !{!2844, !2849}
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !2841, file: !2842, line: 157, baseType: !2845, size: 64)
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2846, size: 64)
!2846 = !DISubroutineType(types: !2847)
!2847 = !{!32, !2848}
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2841, file: !2842, line: 158, baseType: !2850, size: 704, offset: 64)
!2850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !2842, line: 150, size: 704, elements: !2851)
!2851 = !{!2852, !2920}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2850, file: !2842, line: 152, baseType: !2853, size: 640)
!2853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !2842, line: 131, size: 640, elements: !2854)
!2854 = !{!2855, !2888, !2889, !2890, !2910, !2911, !2913, !2919}
!2855 = !DIDerivedType(tag: DW_TAG_member, scope: !2853, file: !2842, line: 132, baseType: !2856, size: 192)
!2856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2853, file: !2842, line: 132, size: 192, elements: !2857)
!2857 = !{!2858, !2887}
!2858 = !DIDerivedType(tag: DW_TAG_member, scope: !2856, file: !2842, line: 133, baseType: !2859, size: 192)
!2859 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2856, file: !2842, line: 133, size: 192, elements: !2860)
!2860 = !{!2861, !2884, !2885, !2886}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !2859, file: !2842, line: 134, baseType: !2862, size: 64)
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 64)
!2863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !2842, line: 112, size: 512, elements: !2864)
!2864 = !{!2865, !2866, !2867, !2868, !2869, !2870, !2876, !2882, !2883}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !2863, file: !2842, line: 113, baseType: !292, size: 64)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2863, file: !2842, line: 114, baseType: !591, size: 64, offset: 64)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !2863, file: !2842, line: 115, baseType: !32, size: 32, offset: 128)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2863, file: !2842, line: 116, baseType: !1379, size: 16, offset: 160)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2863, file: !2842, line: 117, baseType: !2862, size: 64, offset: 192)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !2863, file: !2842, line: 118, baseType: !2871, size: 64, offset: 256)
!2871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2872, size: 64)
!2872 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !2842, line: 47, baseType: !2873)
!2873 = !DISubroutineType(types: !2874)
!2874 = !{!32, !2862, !32, !591, !2875, !1694}
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2863, file: !2842, line: 119, baseType: !2877, size: 64, offset: 320)
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 64)
!2878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !2842, line: 94, size: 192, elements: !2879)
!2879 = !{!2880, !2881}
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2878, file: !2842, line: 95, baseType: !383, size: 32)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2878, file: !2842, line: 96, baseType: !1889, size: 128, offset: 64)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !2863, file: !2842, line: 120, baseType: !591, size: 64, offset: 384)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !2863, file: !2842, line: 121, baseType: !591, size: 64, offset: 448)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2859, file: !2842, line: 135, baseType: !32, size: 32, offset: 64)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2859, file: !2842, line: 136, baseType: !32, size: 32, offset: 96)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !2859, file: !2842, line: 137, baseType: !32, size: 32, offset: 128)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2856, file: !2842, line: 139, baseType: !299, size: 128, align: 64)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !2853, file: !2842, line: 141, baseType: !2596, size: 64, offset: 192)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !2853, file: !2842, line: 142, baseType: !2862, size: 64, offset: 256)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2853, file: !2842, line: 143, baseType: !2891, size: 64, offset: 320)
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 64)
!2892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !2842, line: 161, size: 960, elements: !2893)
!2893 = !{!2894, !2895, !2899, !2906}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !2892, file: !2842, line: 162, baseType: !2841, size: 768)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2892, file: !2842, line: 163, baseType: !2896, size: 64, offset: 768)
!2896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2897, size: 64)
!2897 = !DISubroutineType(types: !2898)
!2898 = !{!2848, !2891}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !2892, file: !2842, line: 164, baseType: !2900, size: 64, offset: 832)
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 64)
!2901 = !DISubroutineType(types: !2902)
!2902 = !{null, !2903, !2862, !2904, !2905}
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !2892, file: !2842, line: 167, baseType: !2907, size: 64, offset: 896)
!2907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2908, size: 64)
!2908 = !DISubroutineType(types: !2909)
!2909 = !{!32, !2903, !2862}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2853, file: !2842, line: 144, baseType: !2848, size: 64, offset: 384)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2853, file: !2842, line: 145, baseType: !2912, size: 64, offset: 448)
!2912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2850, size: 64)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2853, file: !2842, line: 146, baseType: !2914, size: 64, offset: 512)
!2914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2915, size: 64)
!2915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !2842, line: 124, size: 256, elements: !2916)
!2916 = !{!2917, !2918}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2915, file: !2842, line: 125, baseType: !433, size: 192, align: 64)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2915, file: !2842, line: 126, baseType: !2903, size: 64, offset: 192)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2853, file: !2842, line: 147, baseType: !1581, size: 64, offset: 576)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2850, file: !2842, line: 153, baseType: !1750, size: 64, offset: 640)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2782, file: !2783, line: 86, baseType: !2903, size: 64, offset: 3712)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2782, file: !2783, line: 88, baseType: !2923, size: 64, offset: 3776)
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2924, size: 64)
!2924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !2783, line: 92, size: 576, elements: !2925)
!2925 = !{!2926, !2927, !2928, !2929, !2930}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2924, file: !2783, line: 93, baseType: !276, size: 128)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2924, file: !2783, line: 94, baseType: !2781, size: 64, offset: 128)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2924, file: !2783, line: 95, baseType: !1382, size: 32, offset: 192)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2924, file: !2783, line: 96, baseType: !32, size: 32, offset: 224)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !2924, file: !2783, line: 97, baseType: !2931, size: 320, offset: 256)
!2931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !383, size: 320, elements: !2932)
!2932 = !{!2933}
!2933 = !DISubrange(count: 10)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !2782, file: !2783, line: 89, baseType: !2935, size: 320, offset: 3840)
!2935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 320, elements: !2932)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2644, file: !2645, line: 147, baseType: !2937, size: 64, offset: 1088)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 64)
!2938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2645, line: 25, size: 64, elements: !2939)
!2939 = !{!2940, !2941, !2942}
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2938, file: !2645, line: 26, baseType: !383, size: 32)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2938, file: !2645, line: 27, baseType: !32, size: 32, offset: 32)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2938, file: !2645, line: 28, baseType: !2943, offset: 64)
!2943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1390, elements: !483)
!2944 = !DIDerivedType(tag: DW_TAG_member, scope: !2644, file: !2645, line: 149, baseType: !2945, size: 128, offset: 1152)
!2945 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2644, file: !2645, line: 149, size: 128, elements: !2946)
!2946 = !{!2947, !2948}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2945, file: !2645, line: 150, baseType: !32, size: 32)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2945, file: !2645, line: 151, baseType: !299, size: 128, align: 64)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !2327, file: !2328, line: 926, baseType: !2642, size: 64, offset: 8576)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !2327, file: !2328, line: 929, baseType: !2642, size: 64, offset: 8640)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !2327, file: !2328, line: 933, baseType: !2672, size: 64, offset: 8704)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !2327, file: !2328, line: 943, baseType: !267, size: 128, offset: 8768)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !2327, file: !2328, line: 945, baseType: !2954, size: 64, offset: 8896)
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 64)
!2955 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !2328, line: 49, flags: DIFlagFwdDecl)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !2327, file: !2328, line: 956, baseType: !2957, size: 64, offset: 8960)
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2958, size: 64)
!2958 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !2328, line: 45, flags: DIFlagFwdDecl)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2327, file: !2328, line: 959, baseType: !2960, size: 64, offset: 9024)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!2961 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !2328, line: 959, flags: DIFlagFwdDecl)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !2327, file: !2328, line: 962, baseType: !2963, size: 64, offset: 9088)
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 64)
!2964 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !2328, line: 66, flags: DIFlagFwdDecl)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !2327, file: !2328, line: 966, baseType: !2966, size: 64, offset: 9152)
!2966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 64)
!2967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2968, line: 31, size: 576, elements: !2969)
!2968 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!2969 = !{!2970, !2971, !2974, !2977, !2980, !2981, !3670, !3673, !3674}
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2967, file: !2968, line: 32, baseType: !383, size: 32)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !2967, file: !2968, line: 33, baseType: !2972, size: 64, offset: 64)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 64)
!2973 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !2968, line: 9, flags: DIFlagFwdDecl)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !2967, file: !2968, line: 34, baseType: !2975, size: 64, offset: 128)
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 64)
!2976 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !2968, line: 10, flags: DIFlagFwdDecl)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !2967, file: !2968, line: 35, baseType: !2978, size: 64, offset: 192)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 64)
!2979 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !2968, line: 8, flags: DIFlagFwdDecl)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !2967, file: !2968, line: 36, baseType: !2589, size: 64, offset: 256)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !2967, file: !2968, line: 37, baseType: !2982, size: 64, offset: 320)
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2983, size: 64)
!2983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !2984, line: 56, size: 16896, elements: !2985)
!2984 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2985 = !{!2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3007, !3008, !3009, !3013, !3014, !3015, !3016, !3017, !3020, !3022, !3023, !3038, !3039, !3040, !3041, !3051, !3121, !3127, !3133, !3146, !3455, !3609, !3616, !3619, !3642, !3643, !3669}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !2983, file: !2984, line: 60, baseType: !568, size: 32)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2983, file: !2984, line: 63, baseType: !568, size: 32, offset: 32)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !2983, file: !2984, line: 66, baseType: !1670, offset: 64)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !2983, file: !2984, line: 68, baseType: !7, size: 32, offset: 64)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !2983, file: !2984, line: 70, baseType: !7, size: 32, offset: 96)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !2983, file: !2984, line: 71, baseType: !32, size: 32, offset: 128)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !2983, file: !2984, line: 73, baseType: !1670, offset: 160)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !2983, file: !2984, line: 74, baseType: !383, size: 32, offset: 160)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2983, file: !2984, line: 76, baseType: !284, size: 128, offset: 192)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !2983, file: !2984, line: 77, baseType: !284, size: 128, offset: 320)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !2983, file: !2984, line: 83, baseType: !1323, size: 64, offset: 448)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !2983, file: !2984, line: 86, baseType: !2725, size: 64, offset: 512)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2983, file: !2984, line: 88, baseType: !2781, size: 64, offset: 576)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2983, file: !2984, line: 89, baseType: !2923, size: 64, offset: 640)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !2983, file: !2984, line: 90, baseType: !3001, size: 192, offset: 704)
!3001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3002, line: 19, size: 192, elements: !3003)
!3002 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3003 = !{!3004, !3005, !3006}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3001, file: !3002, line: 20, baseType: !1737, size: 128)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3001, file: !3002, line: 21, baseType: !7, size: 32, offset: 128)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3001, file: !3002, line: 22, baseType: !7, size: 32, offset: 160)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2983, file: !2984, line: 92, baseType: !2815, size: 192, offset: 896)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !2983, file: !2984, line: 94, baseType: !284, size: 128, offset: 1088)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !2983, file: !2984, line: 95, baseType: !3010, size: 64, offset: 1216)
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 64)
!3011 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !3012, line: 84, flags: DIFlagFwdDecl)
!3012 = !DIFile(filename: "./include/acpi/acpi_bus.h", directory: "/home/lizy2001/genbc/linux")
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !2983, file: !2984, line: 96, baseType: !3010, size: 64, offset: 1280)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2983, file: !2984, line: 99, baseType: !2841, size: 768, offset: 1344)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !2983, file: !2984, line: 102, baseType: !445, size: 64, offset: 2112)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !2983, file: !2984, line: 103, baseType: !445, size: 64, offset: 2176)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !2983, file: !2984, line: 105, baseType: !3018, size: 64, offset: 2240)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 64)
!3019 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !2984, line: 48, flags: DIFlagFwdDecl)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !2983, file: !2984, line: 107, baseType: !3021, size: 64, offset: 2304)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !2983, file: !2984, line: 108, baseType: !3021, size: 64, offset: 2368)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !2983, file: !2984, line: 109, baseType: !3024, size: 64, offset: 2432)
!3024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !3025, line: 70, size: 64, elements: !3026)
!3025 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!3026 = !{!3027}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3024, file: !3025, line: 71, baseType: !3028, size: 64)
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !3025, line: 54, size: 192, elements: !3030)
!3030 = !{!3031, !3036, !3037}
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !3029, file: !3025, line: 55, baseType: !3032, size: 64)
!3032 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !3025, line: 51, baseType: !3033)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 64)
!3034 = !DISubroutineType(types: !3035)
!3035 = !{!32, !3028, !312, !591}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3029, file: !3025, line: 56, baseType: !3028, size: 64, offset: 64)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !3029, file: !3025, line: 57, baseType: !32, size: 32, offset: 128)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !2983, file: !2984, line: 114, baseType: !987, size: 32, offset: 2496)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !2983, file: !2984, line: 116, baseType: !290, size: 64, offset: 2560)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !2983, file: !2984, line: 119, baseType: !284, size: 128, offset: 2624)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !2983, file: !2984, line: 121, baseType: !3042, size: 256, offset: 2752)
!3042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !3043, line: 8, size: 256, elements: !3044)
!3043 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!3044 = !{!3045, !3046, !3047, !3048}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !3042, file: !3043, line: 10, baseType: !2903, size: 64)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !3042, file: !3043, line: 12, baseType: !32, size: 32, offset: 64)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !3042, file: !3043, line: 15, baseType: !1001, size: 64, offset: 128)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !3042, file: !3043, line: 16, baseType: !3049, size: 64, offset: 192)
!3049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3050, size: 64)
!3050 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !3043, line: 6, flags: DIFlagFwdDecl)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !2983, file: !2984, line: 122, baseType: !3052, size: 832, offset: 3008)
!3052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !3053, line: 7, size: 832, elements: !3054)
!3053 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!3054 = !{!3055, !3062, !3073, !3081, !3089, !3090, !3098, !3106, !3107, !3108, !3109, !3110, !3116}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !3052, file: !3053, line: 8, baseType: !3056, size: 64)
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 64)
!3057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !3058, line: 92, size: 1024, elements: !3059)
!3058 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!3059 = !{!3060}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3057, file: !3058, line: 93, baseType: !3061, size: 1024)
!3061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 1024, elements: !269)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !3052, file: !3053, line: 9, baseType: !3063, size: 64, offset: 64)
!3063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 64)
!3064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !3058, line: 51, size: 2368, elements: !3065)
!3065 = !{!3066, !3070}
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3064, file: !3058, line: 53, baseType: !3067, size: 2368)
!3067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 2368, elements: !3068)
!3068 = !{!3069}
!3069 = !DISubrange(count: 37)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !3064, file: !3058, line: 54, baseType: !3071, offset: 2368)
!3071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !3072, line: 68, elements: !1587)
!3072 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !3052, file: !3053, line: 10, baseType: !3074, size: 64, offset: 128)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !3058, line: 104, size: 7936, elements: !3076)
!3076 = !{!3077}
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3075, file: !3058, line: 105, baseType: !3078, size: 7936)
!3078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 7936, elements: !3079)
!3079 = !{!3080}
!3080 = !DISubrange(count: 124)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !3052, file: !3053, line: 11, baseType: !3082, size: 64, offset: 192)
!3082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3083, size: 64)
!3083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !3058, line: 98, size: 576, elements: !3084)
!3084 = !{!3085}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3083, file: !3058, line: 99, baseType: !3086, size: 576)
!3086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 576, elements: !3087)
!3087 = !{!3088}
!3088 = !DISubrange(count: 9)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !3052, file: !3053, line: 12, baseType: !3082, size: 64, offset: 256)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !3052, file: !3053, line: 13, baseType: !3091, size: 64, offset: 320)
!3091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3092, size: 64)
!3092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !3058, line: 59, size: 1792, elements: !3093)
!3093 = !{!3094}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3092, file: !3058, line: 60, baseType: !3095, size: 1792)
!3095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 1792, elements: !3096)
!3096 = !{!3097}
!3097 = !DISubrange(count: 28)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !3052, file: !3053, line: 14, baseType: !3099, size: 64, offset: 384)
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3100, size: 64)
!3100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !3058, line: 64, size: 32768, elements: !3101)
!3101 = !{!3102}
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3100, file: !3058, line: 65, baseType: !3103, size: 32768)
!3103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 32768, elements: !3104)
!3104 = !{!3105}
!3105 = !DISubrange(count: 512)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !3052, file: !3053, line: 17, baseType: !3010, size: 64, offset: 448)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !3052, file: !3053, line: 18, baseType: !3082, size: 64, offset: 512)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !3052, file: !3053, line: 19, baseType: !3082, size: 64, offset: 576)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !3052, file: !3053, line: 20, baseType: !3063, size: 64, offset: 640)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !3052, file: !3053, line: 21, baseType: !3111, size: 64, offset: 704)
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3112, size: 64)
!3112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !3058, line: 71, size: 384, elements: !3113)
!3113 = !{!3114}
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3112, file: !3058, line: 72, baseType: !3115, size: 384)
!3115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 384, elements: !999)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !3052, file: !3053, line: 22, baseType: !3117, size: 64, offset: 768)
!3117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3118, size: 64)
!3118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !3058, line: 81, size: 32768, elements: !3119)
!3119 = !{!3120}
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3118, file: !3058, line: 82, baseType: !3103, size: 32768)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !2983, file: !2984, line: 123, baseType: !3122, size: 256, offset: 3840)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !3123, line: 11, size: 256, elements: !3124)
!3123 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!3124 = !{!3125, !3126}
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !3122, file: !3123, line: 12, baseType: !1665, size: 192)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !3122, file: !3123, line: 13, baseType: !1581, size: 64, offset: 192)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !2983, file: !2984, line: 124, baseType: !3128, size: 128, offset: 4096)
!3128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !3129, line: 9, size: 128, elements: !3130)
!3129 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!3130 = !{!3131, !3132}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !3128, file: !3129, line: 10, baseType: !32, size: 32)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !3128, file: !3129, line: 11, baseType: !2903, size: 64, offset: 64)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !2983, file: !2984, line: 125, baseType: !3134, size: 512, offset: 4224)
!3134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !3135, line: 11, size: 512, elements: !3136)
!3135 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!3136 = !{!3137, !3138, !3139, !3140, !3141}
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !3134, file: !3135, line: 12, baseType: !1750, size: 64)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !3134, file: !3135, line: 13, baseType: !3021, size: 64, offset: 64)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3134, file: !3135, line: 15, baseType: !7, size: 32, offset: 128)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !3134, file: !3135, line: 16, baseType: !987, size: 32, offset: 160)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !3134, file: !3135, line: 17, baseType: !3142, size: 320, offset: 192)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !3025, line: 65, size: 320, elements: !3143)
!3143 = !{!3144, !3145}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !3142, file: !3025, line: 66, baseType: !1755, size: 256)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3142, file: !3025, line: 67, baseType: !3028, size: 64, offset: 256)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !2983, file: !2984, line: 126, baseType: !3147, size: 5440, offset: 4736)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !3148, line: 43, size: 5440, elements: !3149)
!3148 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!3149 = !{!3150, !3151, !3152, !3153, !3154, !3155, !3158, !3159, !3162, !3163, !3164, !3165, !3166, !3167, !3169, !3170, !3173, !3174, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3399, !3400, !3401, !3402, !3403, !3411, !3412, !3413, !3417, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3437, !3438, !3440, !3441, !3444, !3445, !3446, !3447, !3448}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !3147, file: !3148, line: 45, baseType: !2903, size: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3147, file: !3148, line: 46, baseType: !2903, size: 64, offset: 64)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !3147, file: !3148, line: 47, baseType: !2903, size: 64, offset: 128)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3147, file: !3148, line: 48, baseType: !2903, size: 64, offset: 192)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !3147, file: !3148, line: 49, baseType: !2903, size: 64, offset: 256)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3147, file: !3148, line: 51, baseType: !3156, size: 64, offset: 320)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 64)
!3157 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !3148, line: 16, flags: DIFlagFwdDecl)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3147, file: !3148, line: 52, baseType: !3156, size: 64, offset: 384)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !3147, file: !3148, line: 53, baseType: !3160, size: 64, offset: 448)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3161, size: 64)
!3161 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !3148, line: 53, flags: DIFlagFwdDecl)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !3147, file: !3148, line: 54, baseType: !1665, size: 192, offset: 512)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !3147, file: !3148, line: 62, baseType: !771, size: 8, offset: 704)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3147, file: !3148, line: 66, baseType: !3021, size: 64, offset: 768)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !3147, file: !3148, line: 67, baseType: !771, size: 8, offset: 832)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !3147, file: !3148, line: 68, baseType: !445, size: 64, offset: 896)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3147, file: !3148, line: 70, baseType: !3168, size: 64, offset: 960)
!3168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3147, file: !3148, line: 71, baseType: !445, size: 64, offset: 1024)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3147, file: !3148, line: 73, baseType: !3171, size: 64, offset: 1088)
!3171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3172, size: 64)
!3172 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !3148, line: 73, flags: DIFlagFwdDecl)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3147, file: !3148, line: 74, baseType: !3168, size: 64, offset: 1152)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3147, file: !3148, line: 75, baseType: !3175, size: 64, offset: 1216)
!3175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3176, size: 64)
!3176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !3177, line: 9, size: 1728, elements: !3178)
!3177 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!3178 = !{!3179, !3180, !3181, !3182, !3183, !3310, !3311, !3312, !3313, !3314}
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !3176, file: !3177, line: 11, baseType: !998, size: 64)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !3176, file: !3177, line: 12, baseType: !998, size: 64, offset: 64)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3176, file: !3177, line: 13, baseType: !32, size: 32, offset: 128)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !3176, file: !3177, line: 14, baseType: !32, size: 32, offset: 160)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3176, file: !3177, line: 15, baseType: !3184, size: 64, offset: 192)
!3184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3185, size: 64)
!3185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !3177, line: 98, size: 960, elements: !3186)
!3186 = !{!3187, !3188, !3260, !3264, !3265, !3266, !3267, !3308, !3309}
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !3185, file: !3177, line: 99, baseType: !7, size: 32)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !3185, file: !3177, line: 101, baseType: !3189, size: 64, offset: 64)
!3189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3190, size: 64)
!3190 = !DISubroutineType(types: !3191)
!3191 = !{null, !3192, !3258}
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64)
!3193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !3177, line: 77, size: 1408, elements: !3194)
!3194 = !{!3195, !3201, !3234, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3193, file: !3177, line: 78, baseType: !3196, size: 64)
!3196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !3197, line: 17, size: 64, elements: !3198)
!3197 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!3198 = !{!3199}
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3196, file: !3197, line: 18, baseType: !3200, size: 64)
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3196, size: 64)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3193, file: !3177, line: 82, baseType: !3202, size: 352, offset: 64)
!3202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3193, file: !3177, line: 79, size: 352, elements: !3203)
!3203 = !{!3204, !3214}
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3202, file: !3177, line: 80, baseType: !3205, size: 160)
!3205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !3177, line: 41, size: 160, elements: !3206)
!3206 = !{!3207, !3209, !3210, !3211, !3212, !3213}
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3205, file: !3177, line: 42, baseType: !3208, size: 32)
!3208 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !525, line: 32, baseType: !493)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3205, file: !3177, line: 43, baseType: !3208, size: 32, offset: 32)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3205, file: !3177, line: 44, baseType: !987, size: 32, offset: 64)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !3205, file: !3177, line: 45, baseType: !987, size: 32, offset: 96)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3205, file: !3177, line: 46, baseType: !535, size: 16, offset: 128)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3205, file: !3177, line: 47, baseType: !581, size: 16, offset: 144)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3202, file: !3177, line: 81, baseType: !3215, size: 352)
!3215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !3177, line: 50, size: 352, elements: !3216)
!3216 = !{!3217, !3230, !3231, !3232, !3233}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3215, file: !3177, line: 51, baseType: !3218, size: 128)
!3218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !3219, line: 33, size: 128, elements: !3220)
!3219 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!3220 = !{!3221}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !3218, file: !3219, line: 40, baseType: !3222, size: 128)
!3222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3218, file: !3219, line: 34, size: 128, elements: !3223)
!3223 = !{!3224, !3226, !3228}
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !3222, file: !3219, line: 35, baseType: !3225, size: 128)
!3225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 128, elements: !269)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !3222, file: !3219, line: 37, baseType: !3227, size: 128)
!3227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !535, size: 128, elements: !2433)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !3222, file: !3219, line: 38, baseType: !3229, size: 128)
!3229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3208, size: 128, elements: !2272)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3215, file: !3177, line: 52, baseType: !3218, size: 128, offset: 128)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3215, file: !3177, line: 53, baseType: !987, size: 32, offset: 256)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3215, file: !3177, line: 54, baseType: !3208, size: 32, offset: 288)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !3215, file: !3177, line: 55, baseType: !987, size: 32, offset: 320)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3193, file: !3177, line: 83, baseType: !3235, size: 320, offset: 448)
!3235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3236, line: 11, size: 320, elements: !3237)
!3236 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3237 = !{!3238, !3239, !3240, !3245}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3235, file: !3236, line: 16, baseType: !276, size: 128)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3235, file: !3236, line: 17, baseType: !312, size: 64, offset: 128)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3235, file: !3236, line: 18, baseType: !3241, size: 64, offset: 192)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3242, size: 64)
!3242 = !DISubroutineType(types: !3243)
!3243 = !{null, !3244}
!3244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3235, size: 64)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3235, file: !3236, line: 19, baseType: !987, size: 32, offset: 256)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3193, file: !3177, line: 84, baseType: !1670, offset: 768)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3193, file: !3177, line: 85, baseType: !568, size: 32, offset: 768)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !3193, file: !3177, line: 86, baseType: !1750, size: 64, offset: 832)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !3193, file: !3177, line: 87, baseType: !415, size: 64, offset: 896)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !3193, file: !3177, line: 88, baseType: !415, size: 64, offset: 960)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !3193, file: !3177, line: 89, baseType: !453, size: 64, offset: 1024)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3193, file: !3177, line: 90, baseType: !32, size: 32, offset: 1088)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !3193, file: !3177, line: 91, baseType: !32, size: 32, offset: 1120)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3193, file: !3177, line: 92, baseType: !481, size: 8, offset: 1152)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3193, file: !3177, line: 93, baseType: !581, size: 16, offset: 1168)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3193, file: !3177, line: 94, baseType: !3175, size: 64, offset: 1216)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3193, file: !3177, line: 95, baseType: !299, size: 128, align: 64, offset: 1280)
!3258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3259, size: 64)
!3259 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !3185, file: !3177, line: 103, baseType: !3261, size: 64, offset: 128)
!3261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3262, size: 64)
!3262 = !DISubroutineType(types: !3263)
!3263 = !{null, !3192}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !3185, file: !3177, line: 104, baseType: !3241, size: 64, offset: 192)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !3185, file: !3177, line: 105, baseType: !2051, size: 64, offset: 256)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !3185, file: !3177, line: 106, baseType: !292, size: 64, offset: 320)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !3185, file: !3177, line: 107, baseType: !3268, size: 320, offset: 384)
!3268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !3197, line: 56, size: 320, elements: !3269)
!3269 = !{!3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3282, !3284}
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !3268, file: !3197, line: 57, baseType: !581, size: 16)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3268, file: !3197, line: 58, baseType: !581, size: 16, offset: 16)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !3268, file: !3197, line: 59, baseType: !581, size: 16, offset: 32)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !3268, file: !3197, line: 60, baseType: !581, size: 16, offset: 48)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3268, file: !3197, line: 61, baseType: !7, size: 32, offset: 64)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !3268, file: !3197, line: 62, baseType: !581, size: 16, offset: 96)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !3268, file: !3197, line: 63, baseType: !771, size: 8, offset: 112)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !3268, file: !3197, line: 64, baseType: !3278, size: 64, offset: 128)
!3278 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !3197, line: 38, baseType: !3279)
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 64)
!3280 = !DISubroutineType(types: !3281)
!3281 = !{!987, !3258, !987, !987}
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !3268, file: !3197, line: 65, baseType: !3283, size: 64, offset: 192)
!3283 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !3197, line: 39, baseType: !3279)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !3268, file: !3197, line: 66, baseType: !3285, size: 64, offset: 256)
!3285 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !3197, line: 40, baseType: !3286)
!3286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3287, size: 64)
!3287 = !DISubroutineType(types: !3288)
!3288 = !{!32, !3289, !3258}
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3290, size: 64)
!3290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !3197, line: 33, size: 128, elements: !3291)
!3291 = !{!3292, !3307}
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !3290, file: !3197, line: 34, baseType: !3293, size: 64)
!3293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3294, size: 64)
!3294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !3197, line: 81, size: 1024, elements: !3295)
!3295 = !{!3296, !3299, !3300, !3301, !3302, !3303, !3304, !3305, !3306}
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !3294, file: !3197, line: 82, baseType: !3297, size: 64)
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 64)
!3298 = !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !3197, line: 26, flags: DIFlagFwdDecl)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3294, file: !3197, line: 83, baseType: !7, size: 32, offset: 64)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !3294, file: !3197, line: 84, baseType: !7, size: 32, offset: 96)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3294, file: !3197, line: 85, baseType: !3268, size: 320, offset: 128)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !3294, file: !3197, line: 86, baseType: !771, size: 8, offset: 448)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !3294, file: !3197, line: 87, baseType: !2829, size: 256, offset: 512)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3294, file: !3197, line: 88, baseType: !1665, size: 192, offset: 768)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3294, file: !3197, line: 89, baseType: !1670, offset: 960)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !3294, file: !3197, line: 90, baseType: !383, size: 32, offset: 960)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3290, file: !3197, line: 35, baseType: !3258, size: 64, offset: 64)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3185, file: !3177, line: 108, baseType: !568, size: 32, offset: 704)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3185, file: !3177, line: 109, baseType: !2597, size: 192, offset: 768)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !3176, file: !3177, line: 16, baseType: !2982, size: 64, offset: 256)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !3176, file: !3177, line: 17, baseType: !771, size: 8, offset: 320)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !3176, file: !3177, line: 19, baseType: !3294, size: 1024, offset: 384)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !3176, file: !3177, line: 22, baseType: !371, size: 64, offset: 1408)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !3176, file: !3177, line: 23, baseType: !2829, size: 256, offset: 1472)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !3147, file: !3148, line: 87, baseType: !32, size: 32, offset: 1280)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !3147, file: !3148, line: 88, baseType: !32, size: 32, offset: 1312)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !3147, file: !3148, line: 89, baseType: !32, size: 32, offset: 1344)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !3147, file: !3148, line: 90, baseType: !32, size: 32, offset: 1376)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !3147, file: !3148, line: 91, baseType: !32, size: 32, offset: 1408)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !3147, file: !3148, line: 92, baseType: !32, size: 32, offset: 1440)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !3147, file: !3148, line: 94, baseType: !3322, size: 128, offset: 1472)
!3322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !3148, line: 21, size: 128, elements: !3323)
!3323 = !{!3324, !3330, !3332}
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3322, file: !3148, line: 22, baseType: !3325, size: 32)
!3325 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !1344, line: 805, baseType: !3326)
!3326 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1344, line: 798, size: 32, elements: !3327)
!3327 = !{!3328, !3329}
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !3326, file: !1344, line: 803, baseType: !1343, size: 32)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3326, file: !1344, line: 804, baseType: !1670, offset: 32)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3322, file: !3148, line: 23, baseType: !3331, size: 64, offset: 32)
!3331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 64, elements: !2664)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !3322, file: !3148, line: 24, baseType: !771, size: 8, offset: 96)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !3147, file: !3148, line: 96, baseType: !32, size: 32, offset: 1600)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !3147, file: !3148, line: 97, baseType: !32, size: 32, offset: 1632)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !3147, file: !3148, line: 99, baseType: !32, size: 32, offset: 1664)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !3147, file: !3148, line: 100, baseType: !32, size: 32, offset: 1696)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !3147, file: !3148, line: 101, baseType: !32, size: 32, offset: 1728)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !3147, file: !3148, line: 102, baseType: !32, size: 32, offset: 1760)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !3147, file: !3148, line: 103, baseType: !32, size: 32, offset: 1792)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !3147, file: !3148, line: 104, baseType: !32, size: 32, offset: 1824)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !3147, file: !3148, line: 106, baseType: !32, size: 32, offset: 1856)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !3147, file: !3148, line: 107, baseType: !32, size: 32, offset: 1888)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !3147, file: !3148, line: 111, baseType: !32, size: 32, offset: 1920)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !3147, file: !3148, line: 112, baseType: !32, size: 32, offset: 1952)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !3147, file: !3148, line: 114, baseType: !32, size: 32, offset: 1984)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !3147, file: !3148, line: 116, baseType: !32, size: 32, offset: 2016)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !3147, file: !3148, line: 117, baseType: !32, size: 32, offset: 2048)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !3147, file: !3148, line: 121, baseType: !32, size: 32, offset: 2080)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !3147, file: !3148, line: 122, baseType: !32, size: 32, offset: 2112)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !3147, file: !3148, line: 123, baseType: !32, size: 32, offset: 2144)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !3147, file: !3148, line: 124, baseType: !32, size: 32, offset: 2176)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !3147, file: !3148, line: 125, baseType: !32, size: 32, offset: 2208)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !3147, file: !3148, line: 126, baseType: !987, size: 32, offset: 2240)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !3147, file: !3148, line: 128, baseType: !32, size: 32, offset: 2272)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !3147, file: !3148, line: 129, baseType: !32, size: 32, offset: 2304)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !3147, file: !3148, line: 130, baseType: !32, size: 32, offset: 2336)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !3147, file: !3148, line: 132, baseType: !32, size: 32, offset: 2368)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !3147, file: !3148, line: 133, baseType: !32, size: 32, offset: 2400)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !3147, file: !3148, line: 134, baseType: !32, size: 32, offset: 2432)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !3147, file: !3148, line: 135, baseType: !32, size: 32, offset: 2464)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !3147, file: !3148, line: 136, baseType: !32, size: 32, offset: 2496)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !3147, file: !3148, line: 137, baseType: !32, size: 32, offset: 2528)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !3147, file: !3148, line: 138, baseType: !32, size: 32, offset: 2560)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !3147, file: !3148, line: 139, baseType: !32, size: 32, offset: 2592)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !3147, file: !3148, line: 140, baseType: !7, size: 32, offset: 2624)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !3147, file: !3148, line: 141, baseType: !32, size: 32, offset: 2656)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !3147, file: !3148, line: 142, baseType: !32, size: 32, offset: 2688)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !3147, file: !3148, line: 143, baseType: !32, size: 32, offset: 2720)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !3147, file: !3148, line: 144, baseType: !32, size: 32, offset: 2752)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !3147, file: !3148, line: 145, baseType: !32, size: 32, offset: 2784)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !3147, file: !3148, line: 146, baseType: !32, size: 32, offset: 2816)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !3147, file: !3148, line: 147, baseType: !32, size: 32, offset: 2848)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !3147, file: !3148, line: 148, baseType: !32, size: 32, offset: 2880)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !3147, file: !3148, line: 149, baseType: !32, size: 32, offset: 2912)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !3147, file: !3148, line: 150, baseType: !32, size: 32, offset: 2944)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !3147, file: !3148, line: 151, baseType: !32, size: 32, offset: 2976)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !3147, file: !3148, line: 152, baseType: !32, size: 32, offset: 3008)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !3147, file: !3148, line: 153, baseType: !32, size: 32, offset: 3040)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !3147, file: !3148, line: 154, baseType: !32, size: 32, offset: 3072)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !3147, file: !3148, line: 155, baseType: !32, size: 32, offset: 3104)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !3147, file: !3148, line: 156, baseType: !32, size: 32, offset: 3136)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !3147, file: !3148, line: 157, baseType: !32, size: 32, offset: 3168)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !3147, file: !3148, line: 158, baseType: !32, size: 32, offset: 3200)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !3147, file: !3148, line: 159, baseType: !32, size: 32, offset: 3232)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !3147, file: !3148, line: 160, baseType: !32, size: 32, offset: 3264)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !3147, file: !3148, line: 161, baseType: !32, size: 32, offset: 3296)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !3147, file: !3148, line: 162, baseType: !32, size: 32, offset: 3328)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !3147, file: !3148, line: 163, baseType: !32, size: 32, offset: 3360)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !3147, file: !3148, line: 164, baseType: !32, size: 32, offset: 3392)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !3147, file: !3148, line: 165, baseType: !32, size: 32, offset: 3424)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !3147, file: !3148, line: 166, baseType: !32, size: 32, offset: 3456)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !3147, file: !3148, line: 167, baseType: !32, size: 32, offset: 3488)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !3147, file: !3148, line: 168, baseType: !32, size: 32, offset: 3520)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !3147, file: !3148, line: 169, baseType: !32, size: 32, offset: 3552)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !3147, file: !3148, line: 170, baseType: !32, size: 32, offset: 3584)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !3147, file: !3148, line: 171, baseType: !32, size: 32, offset: 3616)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !3147, file: !3148, line: 172, baseType: !3398, size: 96, offset: 3648)
!3398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 96, elements: !1592)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !3147, file: !3148, line: 173, baseType: !3398, size: 96, offset: 3744)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !3147, file: !3148, line: 174, baseType: !32, size: 32, offset: 3840)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !3147, file: !3148, line: 175, baseType: !312, size: 64, offset: 3904)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !3147, file: !3148, line: 176, baseType: !312, size: 64, offset: 3968)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !3147, file: !3148, line: 177, baseType: !3404, size: 192, offset: 4032)
!3404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !3148, line: 34, size: 192, elements: !3405)
!3405 = !{!3406, !3407, !3410}
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !3404, file: !3148, line: 35, baseType: !383, size: 32)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !3404, file: !3148, line: 37, baseType: !3408, size: 64, offset: 64)
!3408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3409, size: 64)
!3409 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !3148, line: 32, flags: DIFlagFwdDecl)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !3404, file: !3148, line: 38, baseType: !32, size: 32, offset: 128)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !3147, file: !3148, line: 178, baseType: !32, size: 32, offset: 4224)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !3147, file: !3148, line: 179, baseType: !32, size: 32, offset: 4256)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !3147, file: !3148, line: 180, baseType: !3414, size: 64, offset: 4288)
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3416)
!3416 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !3148, line: 180, flags: DIFlagFwdDecl)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !3147, file: !3148, line: 181, baseType: !3418, size: 64, offset: 4352)
!3418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3419, size: 64)
!3419 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !3148, line: 41, flags: DIFlagFwdDecl)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !3147, file: !3148, line: 182, baseType: !1670, offset: 4416)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !3147, file: !3148, line: 183, baseType: !7, size: 32, offset: 4416)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !3147, file: !3148, line: 184, baseType: !383, size: 32, offset: 4448)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !3147, file: !3148, line: 185, baseType: !312, size: 64, offset: 4480)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !3147, file: !3148, line: 186, baseType: !32, size: 32, offset: 4544)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !3147, file: !3148, line: 188, baseType: !32, size: 32, offset: 4576)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !3147, file: !3148, line: 189, baseType: !32, size: 32, offset: 4608)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !3147, file: !3148, line: 195, baseType: !32, size: 32, offset: 4640)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !3147, file: !3148, line: 196, baseType: !32, size: 32, offset: 4672)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !3147, file: !3148, line: 197, baseType: !32, size: 32, offset: 4704)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !3147, file: !3148, line: 198, baseType: !32, size: 32, offset: 4736)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !3147, file: !3148, line: 200, baseType: !3432, size: 96, offset: 4768)
!3432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !3148, line: 27, size: 96, elements: !3433)
!3433 = !{!3434, !3435}
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3432, file: !3148, line: 28, baseType: !3325, size: 32)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3432, file: !3148, line: 29, baseType: !3436, size: 64, offset: 32)
!3436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1390, size: 64, elements: !2664)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3147, file: !3148, line: 202, baseType: !383, size: 32, offset: 4864)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !3147, file: !3148, line: 205, baseType: !3439, size: 64, offset: 4928)
!3439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !3147, file: !3148, line: 206, baseType: !32, size: 32, offset: 4992)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3147, file: !3148, line: 222, baseType: !3442, size: 64, offset: 5056)
!3442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3443, size: 64)
!3443 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !3148, line: 222, flags: DIFlagFwdDecl)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !3147, file: !3148, line: 223, baseType: !7, size: 32, offset: 5120)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !3147, file: !3148, line: 225, baseType: !3442, size: 64, offset: 5184)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3147, file: !3148, line: 226, baseType: !7, size: 32, offset: 5248)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !3147, file: !3148, line: 228, baseType: !383, size: 32, offset: 5280)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !3147, file: !3148, line: 229, baseType: !3449, size: 128, offset: 5312)
!3449 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !3450, line: 22, baseType: !3451)
!3450 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!3451 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3450, line: 20, size: 128, elements: !3452)
!3452 = !{!3453}
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3451, file: !3450, line: 21, baseType: !3454, size: 128)
!3454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 128, elements: !2664)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !2983, file: !2984, line: 128, baseType: !3456, size: 4608, offset: 10176)
!3456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !3457, line: 56, size: 4608, elements: !3458)
!3457 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!3458 = !{!3459, !3499, !3502, !3503, !3504, !3505, !3508, !3511, !3514, !3515, !3516, !3519, !3520, !3586, !3587, !3588, !3589, !3590, !3591, !3592, !3593, !3594, !3595, !3596, !3597, !3600, !3601, !3602, !3603}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !3456, file: !3457, line: 57, baseType: !3460, size: 1600)
!3460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !3457, line: 15, size: 1600, elements: !3461)
!3461 = !{!3462, !3463, !3464, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498}
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3460, file: !3457, line: 17, baseType: !2903, size: 64)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3460, file: !3457, line: 18, baseType: !2903, size: 64, offset: 64)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !3460, file: !3457, line: 19, baseType: !2903, size: 64, offset: 128)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3460, file: !3457, line: 20, baseType: !2903, size: 64, offset: 192)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !3460, file: !3457, line: 21, baseType: !2903, size: 64, offset: 256)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !3460, file: !3457, line: 23, baseType: !32, size: 32, offset: 320)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !3460, file: !3457, line: 24, baseType: !32, size: 32, offset: 352)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !3460, file: !3457, line: 25, baseType: !32, size: 32, offset: 384)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !3460, file: !3457, line: 26, baseType: !32, size: 32, offset: 416)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !3460, file: !3457, line: 27, baseType: !32, size: 32, offset: 448)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !3460, file: !3457, line: 28, baseType: !32, size: 32, offset: 480)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !3460, file: !3457, line: 29, baseType: !32, size: 32, offset: 512)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !3460, file: !3457, line: 30, baseType: !32, size: 32, offset: 544)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !3460, file: !3457, line: 31, baseType: !32, size: 32, offset: 576)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !3460, file: !3457, line: 32, baseType: !32, size: 32, offset: 608)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !3460, file: !3457, line: 33, baseType: !32, size: 32, offset: 640)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !3460, file: !3457, line: 34, baseType: !32, size: 32, offset: 672)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !3460, file: !3457, line: 35, baseType: !32, size: 32, offset: 704)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !3460, file: !3457, line: 36, baseType: !32, size: 32, offset: 736)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !3460, file: !3457, line: 37, baseType: !32, size: 32, offset: 768)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !3460, file: !3457, line: 38, baseType: !32, size: 32, offset: 800)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !3460, file: !3457, line: 39, baseType: !3484, size: 256, offset: 832)
!3484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 256, elements: !2272)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !3460, file: !3457, line: 40, baseType: !3439, size: 64, offset: 1088)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !3460, file: !3457, line: 41, baseType: !32, size: 32, offset: 1152)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !3460, file: !3457, line: 42, baseType: !32, size: 32, offset: 1184)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !3460, file: !3457, line: 43, baseType: !32, size: 32, offset: 1216)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !3460, file: !3457, line: 44, baseType: !32, size: 32, offset: 1248)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !3460, file: !3457, line: 45, baseType: !32, size: 32, offset: 1280)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !3460, file: !3457, line: 46, baseType: !32, size: 32, offset: 1312)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !3460, file: !3457, line: 47, baseType: !32, size: 32, offset: 1344)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !3460, file: !3457, line: 48, baseType: !32, size: 32, offset: 1376)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !3460, file: !3457, line: 49, baseType: !32, size: 32, offset: 1408)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !3460, file: !3457, line: 50, baseType: !32, size: 32, offset: 1440)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !3460, file: !3457, line: 51, baseType: !32, size: 32, offset: 1472)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !3460, file: !3457, line: 52, baseType: !32, size: 32, offset: 1504)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !3460, file: !3457, line: 53, baseType: !771, size: 8, offset: 1536)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3456, file: !3457, line: 58, baseType: !3500, size: 64, offset: 1600)
!3500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3501, size: 64)
!3501 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !3457, line: 58, flags: DIFlagFwdDecl)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3456, file: !3457, line: 59, baseType: !3500, size: 64, offset: 1664)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3456, file: !3457, line: 60, baseType: !3171, size: 64, offset: 1728)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3456, file: !3457, line: 61, baseType: !3175, size: 64, offset: 1792)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !3456, file: !3457, line: 71, baseType: !3506, size: 64, offset: 1856)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3507 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !3457, line: 71, flags: DIFlagFwdDecl)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !3456, file: !3457, line: 72, baseType: !3509, size: 64, offset: 1920)
!3509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3510, size: 64)
!3510 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !3457, line: 72, flags: DIFlagFwdDecl)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !3456, file: !3457, line: 73, baseType: !3512, size: 64, offset: 1984)
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3513, size: 64)
!3513 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !3457, line: 73, flags: DIFlagFwdDecl)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !3456, file: !3457, line: 74, baseType: !3235, size: 320, offset: 2048)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3456, file: !3457, line: 75, baseType: !3021, size: 64, offset: 2368)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !3456, file: !3457, line: 76, baseType: !3517, size: 64, offset: 2432)
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 64)
!3518 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !3457, line: 76, flags: DIFlagFwdDecl)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !3456, file: !3457, line: 77, baseType: !284, size: 128, offset: 2496)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !3456, file: !3457, line: 78, baseType: !3521, size: 1088, offset: 2624)
!3521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !925, line: 15, size: 1088, elements: !3522)
!3522 = !{!3523, !3524, !3525, !3530, !3536, !3542, !3543, !3547, !3551, !3555, !3559, !3560, !3564, !3568, !3572, !3576, !3580, !3581}
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !3521, file: !925, line: 16, baseType: !476, size: 16)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !3521, file: !925, line: 17, baseType: !7, size: 32, offset: 32)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3521, file: !925, line: 19, baseType: !3526, size: 64, offset: 64)
!3526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3527, size: 64)
!3527 = !DISubroutineType(types: !3528)
!3528 = !{!32, !3529}
!3529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3521, size: 64)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3521, file: !925, line: 20, baseType: !3531, size: 64, offset: 128)
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3532, size: 64)
!3532 = !DISubroutineType(types: !3533)
!3533 = !{!3534, !3534, !493}
!3534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3535, size: 64)
!3535 = !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !417, line: 956, flags: DIFlagFwdDecl)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !3521, file: !925, line: 21, baseType: !3537, size: 64, offset: 192)
!3537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3538, size: 64)
!3538 = !DISubroutineType(types: !3539)
!3539 = !{!7, !3540}
!3540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3541, size: 64)
!3541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3535)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !3521, file: !925, line: 22, baseType: !3537, size: 64, offset: 256)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !3521, file: !925, line: 23, baseType: !3544, size: 64, offset: 320)
!3544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3545, size: 64)
!3545 = !DISubroutineType(types: !3546)
!3546 = !{!2516, !3534, !312}
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !3521, file: !925, line: 24, baseType: !3548, size: 64, offset: 384)
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3549, size: 64)
!3549 = !DISubroutineType(types: !3550)
!3550 = !{null, !3534}
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !3521, file: !925, line: 25, baseType: !3552, size: 64, offset: 448)
!3552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3553, size: 64)
!3553 = !DISubroutineType(types: !3554)
!3554 = !{null, !3534, !290, !32}
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !3521, file: !925, line: 27, baseType: !3556, size: 64, offset: 512)
!3556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3557, size: 64)
!3557 = !DISubroutineType(types: !3558)
!3558 = !{!3534, !3534}
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !3521, file: !925, line: 28, baseType: !468, size: 64, offset: 576)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !3521, file: !925, line: 29, baseType: !3561, size: 64, offset: 640)
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3562, size: 64)
!3562 = !DISubroutineType(types: !3563)
!3563 = !{null, !3534, !445, !415, !987, !771}
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !3521, file: !925, line: 32, baseType: !3565, size: 64, offset: 704)
!3565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3566, size: 64)
!3566 = !DISubroutineType(types: !3567)
!3567 = !{null, !3534, !445, !415}
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !3521, file: !925, line: 34, baseType: !3569, size: 64, offset: 768)
!3569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3570, size: 64)
!3570 = !DISubroutineType(types: !3571)
!3571 = !{!32, !2982, !445, !415}
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !3521, file: !925, line: 35, baseType: !3573, size: 64, offset: 832)
!3573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3574, size: 64)
!3574 = !DISubroutineType(types: !3575)
!3575 = !{!923, !3540, !415, !3258}
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !3521, file: !925, line: 38, baseType: !3577, size: 64, offset: 896)
!3577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3578, size: 64)
!3578 = !DISubroutineType(types: !3579)
!3579 = !{null, !3540, !3258}
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !3521, file: !925, line: 41, baseType: !2051, size: 64, offset: 960)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !3521, file: !925, line: 43, baseType: !3582, size: 64, offset: 1024)
!3582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3583, line: 97, size: 64, elements: !3584)
!3583 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3584 = !{!3585}
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3582, file: !3583, line: 98, baseType: !377, size: 64)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !3456, file: !3457, line: 79, baseType: !1912, offset: 3712)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !3456, file: !3457, line: 80, baseType: !1670, offset: 3712)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !3456, file: !3457, line: 81, baseType: !7, size: 32, offset: 3712)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !3456, file: !3457, line: 82, baseType: !312, size: 64, offset: 3776)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3456, file: !3457, line: 94, baseType: !3168, size: 64, offset: 3840)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !3456, file: !3457, line: 95, baseType: !445, size: 64, offset: 3904)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3456, file: !3457, line: 96, baseType: !445, size: 64, offset: 3968)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !3456, file: !3457, line: 97, baseType: !445, size: 64, offset: 4032)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3456, file: !3457, line: 98, baseType: !445, size: 64, offset: 4096)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3456, file: !3457, line: 107, baseType: !383, size: 32, offset: 4160)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !3456, file: !3457, line: 108, baseType: !383, size: 32, offset: 4192)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !3456, file: !3457, line: 109, baseType: !3598, size: 64, offset: 4224)
!3598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3599, size: 64)
!3599 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !3457, line: 109, flags: DIFlagFwdDecl)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3456, file: !3457, line: 110, baseType: !3442, size: 64, offset: 4288)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !3456, file: !3457, line: 111, baseType: !3442, size: 64, offset: 4352)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3456, file: !3457, line: 112, baseType: !7, size: 32, offset: 4416)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !3456, file: !3457, line: 117, baseType: !3604, size: 128, offset: 4480)
!3604 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3456, file: !3457, line: 113, size: 128, elements: !3605)
!3605 = !{!3606, !3607, !3608}
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3604, file: !3457, line: 114, baseType: !1581, size: 64)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3604, file: !3457, line: 115, baseType: !1670, offset: 64)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3604, file: !3457, line: 116, baseType: !987, size: 32, offset: 64)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !2983, file: !2984, line: 162, baseType: !3610, size: 192, offset: 14784)
!3610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !417, line: 291, size: 192, elements: !3611)
!3611 = !{!3612, !3613, !3614, !3615}
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3610, file: !417, line: 293, baseType: !415, size: 64)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3610, file: !417, line: 294, baseType: !415, size: 64, offset: 64)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !3610, file: !417, line: 296, baseType: !493, size: 32, offset: 128)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3610, file: !417, line: 297, baseType: !1670, offset: 160)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !2983, file: !2984, line: 164, baseType: !3617, size: 64, offset: 14976)
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 64)
!3618 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !2984, line: 47, flags: DIFlagFwdDecl)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !2983, file: !2984, line: 167, baseType: !3620, size: 512, offset: 15040)
!3620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !3621, line: 14, size: 512, elements: !3622)
!3621 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!3622 = !{!3623, !3638, !3640}
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !3620, file: !3621, line: 16, baseType: !3624, size: 128)
!3624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3625, size: 128, elements: !2664)
!3625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3626, size: 64)
!3626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !65, line: 1037, size: 128, elements: !3627)
!3627 = !{!3628, !3629}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3626, file: !65, line: 1038, baseType: !299, size: 128, align: 64)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3626, file: !65, line: 1039, baseType: !3630, offset: 128)
!3630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3631, elements: !309)
!3631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !65, line: 1032, size: 192, elements: !3632)
!3632 = !{!3633, !3634}
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3631, file: !65, line: 1033, baseType: !1088, size: 64)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3631, file: !65, line: 1034, baseType: !3635, size: 128, offset: 64)
!3635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3636, size: 128, elements: !2664)
!3636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3637, size: 64)
!3637 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !65, line: 1034, flags: DIFlagFwdDecl)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !3620, file: !3621, line: 17, baseType: !3639, size: 128, offset: 128)
!3639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1088, size: 128, elements: !2664)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3620, file: !3621, line: 18, baseType: !3641, size: 256, offset: 256)
!3641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !284, size: 256, elements: !2664)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !2983, file: !2984, line: 174, baseType: !373, size: 64, offset: 15552)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !2983, file: !2984, line: 183, baseType: !3644, size: 1216, offset: 15616)
!3644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !3645, line: 15, size: 1216, elements: !3646)
!3645 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!3646 = !{!3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3660, !3661, !3662, !3665, !3668}
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !3644, file: !3645, line: 17, baseType: !3010, size: 64)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !3644, file: !3645, line: 18, baseType: !3010, size: 64, offset: 64)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !3644, file: !3645, line: 19, baseType: !3010, size: 64, offset: 128)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !3644, file: !3645, line: 20, baseType: !3010, size: 64, offset: 192)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !3644, file: !3645, line: 21, baseType: !3010, size: 64, offset: 256)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !3644, file: !3645, line: 22, baseType: !3010, size: 64, offset: 320)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !3644, file: !3645, line: 23, baseType: !3010, size: 64, offset: 384)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !3644, file: !3645, line: 24, baseType: !3010, size: 64, offset: 448)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !3644, file: !3645, line: 25, baseType: !3010, size: 64, offset: 512)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !3644, file: !3645, line: 26, baseType: !3010, size: 64, offset: 576)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !3644, file: !3645, line: 30, baseType: !3658, size: 64, offset: 640)
!3658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3659, size: 64)
!3659 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !3645, line: 11, flags: DIFlagFwdDecl)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !3644, file: !3645, line: 31, baseType: !1670, offset: 704)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !3644, file: !3645, line: 32, baseType: !3235, size: 320, offset: 704)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !3644, file: !3645, line: 33, baseType: !3663, size: 64, offset: 1024)
!3663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3664, size: 64)
!3664 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !3645, line: 12, flags: DIFlagFwdDecl)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !3644, file: !3645, line: 34, baseType: !3666, size: 64, offset: 1088)
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 64)
!3667 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !3645, line: 13, flags: DIFlagFwdDecl)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !3644, file: !3645, line: 37, baseType: !1581, size: 64, offset: 1152)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !2983, file: !2984, line: 191, baseType: !445, size: 64, offset: 16832)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !2967, file: !2968, line: 38, baseType: !3671, size: 64, offset: 384)
!3671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3672, size: 64)
!3672 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !2968, line: 38, flags: DIFlagFwdDecl)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !2967, file: !2968, line: 39, baseType: !3671, size: 64, offset: 448)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !2967, file: !2968, line: 40, baseType: !3675, size: 64, offset: 512)
!3675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3676, size: 64)
!3676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !3677, line: 856, size: 448, elements: !3678)
!3677 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!3678 = !{!3679, !3680, !3681, !3682, !3683}
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3676, file: !3677, line: 857, baseType: !568, size: 32)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3676, file: !3677, line: 858, baseType: !2815, size: 192, offset: 64)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3676, file: !3677, line: 859, baseType: !2781, size: 64, offset: 256)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3676, file: !3677, line: 860, baseType: !2923, size: 64, offset: 320)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !3676, file: !3677, line: 861, baseType: !3684, size: 64, offset: 384)
!3684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3685, size: 64)
!3685 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !3686, line: 16, flags: DIFlagFwdDecl)
!3686 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2327, file: !2328, line: 969, baseType: !3688, size: 64, offset: 9216)
!3688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3689, size: 64)
!3689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !3690, line: 82, size: 7296, elements: !3691)
!3690 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!3691 = !{!3692, !3693, !3694, !3695, !3696, !3697, !3698, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3727, !3736, !3737, !3739, !3740, !3741, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766, !3769, !3770, !3777, !3778, !3779, !3780, !3781, !3782}
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !3689, file: !3690, line: 83, baseType: !568, size: 32)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !3689, file: !3690, line: 84, baseType: !383, size: 32, offset: 32)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3689, file: !3690, line: 85, baseType: !32, size: 32, offset: 64)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !3689, file: !3690, line: 86, baseType: !284, size: 128, offset: 128)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !3689, file: !3690, line: 88, baseType: !1889, size: 128, offset: 256)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !3689, file: !3690, line: 91, baseType: !2326, size: 64, offset: 384)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !3689, file: !3690, line: 94, baseType: !3699, size: 192, offset: 448)
!3699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !3700, line: 30, size: 192, elements: !3701)
!3700 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!3701 = !{!3702, !3703}
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3699, file: !3700, line: 31, baseType: !284, size: 128)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !3699, file: !3700, line: 32, baseType: !3704, size: 64, offset: 128)
!3704 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !3705, line: 25, baseType: !3706)
!3705 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!3706 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3705, line: 23, size: 64, elements: !3707)
!3707 = !{!3708}
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !3706, file: !3705, line: 24, baseType: !2471, size: 64)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !3689, file: !3690, line: 97, baseType: !1581, size: 64, offset: 640)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !3689, file: !3690, line: 100, baseType: !32, size: 32, offset: 704)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !3689, file: !3690, line: 106, baseType: !32, size: 32, offset: 736)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !3689, file: !3690, line: 107, baseType: !2326, size: 64, offset: 768)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !3689, file: !3690, line: 110, baseType: !32, size: 32, offset: 832)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3689, file: !3690, line: 111, baseType: !7, size: 32, offset: 864)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !3689, file: !3690, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !3689, file: !3690, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !3689, file: !3690, line: 128, baseType: !32, size: 32, offset: 928)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !3689, file: !3690, line: 129, baseType: !284, size: 128, offset: 960)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !3689, file: !3690, line: 132, baseType: !2397, size: 512, offset: 1088)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !3689, file: !3690, line: 133, baseType: !453, size: 64, offset: 1600)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !3689, file: !3690, line: 140, baseType: !3722, size: 256, offset: 1664)
!3722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3723, size: 256, elements: !2664)
!3723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !3690, line: 38, size: 128, elements: !3724)
!3724 = !{!3725, !3726}
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3723, file: !3690, line: 39, baseType: !331, size: 64)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3723, file: !3690, line: 40, baseType: !331, size: 64, offset: 64)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !3689, file: !3690, line: 146, baseType: !3728, size: 192, offset: 1920)
!3728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !3690, line: 66, size: 192, elements: !3729)
!3729 = !{!3730}
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3728, file: !3690, line: 67, baseType: !3731, size: 192)
!3731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !3690, line: 47, size: 192, elements: !3732)
!3732 = !{!3733, !3734, !3735}
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3731, file: !3690, line: 48, baseType: !373, size: 64)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3731, file: !3690, line: 49, baseType: !373, size: 64, offset: 64)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3731, file: !3690, line: 50, baseType: !373, size: 64, offset: 128)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !3689, file: !3690, line: 150, baseType: !2625, size: 640, offset: 2112)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !3689, file: !3690, line: 153, baseType: !3738, size: 256, offset: 2752)
!3738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2571, size: 256, elements: !2272)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !3689, file: !3690, line: 159, baseType: !2571, size: 64, offset: 3008)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !3689, file: !3690, line: 162, baseType: !32, size: 32, offset: 3072)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !3689, file: !3690, line: 164, baseType: !3742, size: 64, offset: 3136)
!3742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3743, size: 64)
!3743 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !3690, line: 164, flags: DIFlagFwdDecl)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !3689, file: !3690, line: 175, baseType: !3325, size: 32, offset: 3200)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3689, file: !3690, line: 176, baseType: !331, size: 64, offset: 3264)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3689, file: !3690, line: 176, baseType: !331, size: 64, offset: 3328)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !3689, file: !3690, line: 176, baseType: !331, size: 64, offset: 3392)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !3689, file: !3690, line: 176, baseType: !331, size: 64, offset: 3456)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !3689, file: !3690, line: 177, baseType: !331, size: 64, offset: 3520)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !3689, file: !3690, line: 178, baseType: !331, size: 64, offset: 3584)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !3689, file: !3690, line: 179, baseType: !2613, size: 128, offset: 3648)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !3689, file: !3690, line: 180, baseType: !312, size: 64, offset: 3776)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !3689, file: !3690, line: 180, baseType: !312, size: 64, offset: 3840)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !3689, file: !3690, line: 180, baseType: !312, size: 64, offset: 3904)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !3689, file: !3690, line: 180, baseType: !312, size: 64, offset: 3968)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !3689, file: !3690, line: 181, baseType: !312, size: 64, offset: 4032)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !3689, file: !3690, line: 181, baseType: !312, size: 64, offset: 4096)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !3689, file: !3690, line: 181, baseType: !312, size: 64, offset: 4160)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !3689, file: !3690, line: 181, baseType: !312, size: 64, offset: 4224)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !3689, file: !3690, line: 182, baseType: !312, size: 64, offset: 4288)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !3689, file: !3690, line: 182, baseType: !312, size: 64, offset: 4352)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !3689, file: !3690, line: 182, baseType: !312, size: 64, offset: 4416)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !3689, file: !3690, line: 182, baseType: !312, size: 64, offset: 4480)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !3689, file: !3690, line: 183, baseType: !312, size: 64, offset: 4544)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !3689, file: !3690, line: 183, baseType: !312, size: 64, offset: 4608)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !3689, file: !3690, line: 184, baseType: !3767, offset: 4672)
!3767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3768, line: 12, elements: !1587)
!3768 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !3689, file: !3690, line: 192, baseType: !335, size: 64, offset: 4672)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !3689, file: !3690, line: 203, baseType: !3771, size: 2048, offset: 4736)
!3771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3772, size: 2048, elements: !269)
!3772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3773, line: 43, size: 128, elements: !3774)
!3773 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3774 = !{!3775, !3776}
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3772, file: !3773, line: 44, baseType: !1042, size: 64)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3772, file: !3773, line: 45, baseType: !1042, size: 64, offset: 64)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !3689, file: !3690, line: 220, baseType: !771, size: 8, offset: 6784)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !3689, file: !3690, line: 221, baseType: !625, size: 16, offset: 6800)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !3689, file: !3690, line: 222, baseType: !625, size: 16, offset: 6816)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !3689, file: !3690, line: 224, baseType: !2091, size: 64, offset: 6848)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !3689, file: !3690, line: 227, baseType: !1665, size: 192, offset: 6912)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !3689, file: !3690, line: 233, baseType: !1665, size: 192, offset: 7104)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !2327, file: !2328, line: 970, baseType: !3784, size: 64, offset: 9280)
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 64)
!3785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !3690, line: 20, size: 16576, elements: !3786)
!3786 = !{!3787, !3788, !3789, !3790}
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3785, file: !3690, line: 21, baseType: !1670)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3785, file: !3690, line: 22, baseType: !568, size: 32)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3785, file: !3690, line: 23, baseType: !1889, size: 128, offset: 64)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3785, file: !3690, line: 24, baseType: !3791, size: 16384, offset: 192)
!3791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3792, size: 16384, elements: !3812)
!3792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !3700, line: 49, size: 256, elements: !3793)
!3793 = !{!3794}
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3792, file: !3700, line: 50, baseType: !3795, size: 256)
!3795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !3700, line: 35, size: 256, elements: !3796)
!3796 = !{!3797, !3804, !3805, !3811}
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3795, file: !3700, line: 37, baseType: !3798, size: 64)
!3798 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3799, line: 19, baseType: !3800)
!3799 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3801, size: 64)
!3801 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3799, line: 18, baseType: !3802)
!3802 = !DISubroutineType(types: !3803)
!3803 = !{null, !32}
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3795, file: !3700, line: 38, baseType: !312, size: 64, offset: 64)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3795, file: !3700, line: 44, baseType: !3806, size: 64, offset: 128)
!3806 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3799, line: 22, baseType: !3807)
!3807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3808, size: 64)
!3808 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3799, line: 21, baseType: !3809)
!3809 = !DISubroutineType(types: !3810)
!3810 = !{null}
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3795, file: !3700, line: 46, baseType: !3704, size: 64, offset: 192)
!3812 = !{!3813}
!3813 = !DISubrange(count: 64)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !2327, file: !2328, line: 971, baseType: !3704, size: 64, offset: 9344)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !2327, file: !2328, line: 972, baseType: !3704, size: 64, offset: 9408)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !2327, file: !2328, line: 974, baseType: !3704, size: 64, offset: 9472)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2327, file: !2328, line: 975, baseType: !3699, size: 192, offset: 9536)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !2327, file: !2328, line: 976, baseType: !312, size: 64, offset: 9728)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !2327, file: !2328, line: 977, baseType: !1039, size: 64, offset: 9792)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !2327, file: !2328, line: 978, baseType: !7, size: 32, offset: 9856)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !2327, file: !2328, line: 980, baseType: !302, size: 64, offset: 9920)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !2327, file: !2328, line: 989, baseType: !3823, size: 128, offset: 9984)
!3823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3824, line: 35, size: 128, elements: !3825)
!3824 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3825 = !{!3826, !3827, !3828}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3823, file: !3824, line: 36, baseType: !32, size: 32)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3823, file: !3824, line: 37, baseType: !383, size: 32, offset: 32)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3823, file: !3824, line: 38, baseType: !3829, size: 64, offset: 64)
!3829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3830, size: 64)
!3830 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3824, line: 23, flags: DIFlagFwdDecl)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !2327, file: !2328, line: 992, baseType: !331, size: 64, offset: 10112)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !2327, file: !2328, line: 993, baseType: !331, size: 64, offset: 10176)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !2327, file: !2328, line: 996, baseType: !1670, offset: 10240)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !2327, file: !2328, line: 999, baseType: !1761, offset: 10240)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !2327, file: !2328, line: 1001, baseType: !3836, size: 64, offset: 10240)
!3836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !2328, line: 636, size: 64, elements: !3837)
!3837 = !{!3838}
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3836, file: !2328, line: 637, baseType: !3839, size: 64)
!3839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3836, size: 64)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !2327, file: !2328, line: 1005, baseType: !1747, size: 128, offset: 10304)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !2327, file: !2328, line: 1007, baseType: !2326, size: 64, offset: 10432)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !2327, file: !2328, line: 1009, baseType: !3843, size: 64, offset: 10496)
!3843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3844, size: 64)
!3844 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !2328, line: 1009, flags: DIFlagFwdDecl)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !2327, file: !2328, line: 1043, baseType: !591, size: 64, offset: 10560)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !2327, file: !2328, line: 1046, baseType: !3847, size: 64, offset: 10624)
!3847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3848, size: 64)
!3848 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2328, line: 41, flags: DIFlagFwdDecl)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !2327, file: !2328, line: 1050, baseType: !3850, size: 64, offset: 10688)
!3850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3851, size: 64)
!3851 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !2328, line: 42, flags: DIFlagFwdDecl)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !2327, file: !2328, line: 1054, baseType: !3853, size: 64, offset: 10752)
!3853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3854, size: 64)
!3854 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !2328, line: 55, flags: DIFlagFwdDecl)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2327, file: !2328, line: 1056, baseType: !3856, size: 64, offset: 10816)
!3856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3857, size: 64)
!3857 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !2328, line: 40, flags: DIFlagFwdDecl)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !2327, file: !2328, line: 1058, baseType: !3859, size: 64, offset: 10880)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 64)
!3860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !3861, line: 99, size: 704, elements: !3862)
!3861 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!3862 = !{!3863, !3864, !3865, !3866, !3867, !3868, !3869, !3888, !3889}
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3860, file: !3861, line: 100, baseType: !371, size: 64)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !3860, file: !3861, line: 101, baseType: !383, size: 32, offset: 64)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !3860, file: !3861, line: 102, baseType: !383, size: 32, offset: 96)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3860, file: !3861, line: 105, baseType: !1670, offset: 128)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3860, file: !3861, line: 107, baseType: !476, size: 16, offset: 128)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !3860, file: !3861, line: 109, baseType: !1737, size: 128, offset: 192)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !3860, file: !3861, line: 110, baseType: !3870, size: 64, offset: 320)
!3870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3871, size: 64)
!3871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !3861, line: 73, size: 448, elements: !3872)
!3872 = !{!3873, !3876, !3877, !3882, !3887}
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3871, file: !3861, line: 74, baseType: !3874, size: 64)
!3874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3875, size: 64)
!3875 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !3861, line: 74, flags: DIFlagFwdDecl)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !3871, file: !3861, line: 75, baseType: !3859, size: 64, offset: 64)
!3877 = !DIDerivedType(tag: DW_TAG_member, scope: !3871, file: !3861, line: 83, baseType: !3878, size: 128, offset: 128)
!3878 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3871, file: !3861, line: 83, size: 128, elements: !3879)
!3879 = !{!3880, !3881}
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !3878, file: !3861, line: 84, baseType: !284, size: 128)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !3878, file: !3861, line: 85, baseType: !2051, size: 64)
!3882 = !DIDerivedType(tag: DW_TAG_member, scope: !3871, file: !3861, line: 87, baseType: !3883, size: 128, offset: 256)
!3883 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3871, file: !3861, line: 87, size: 128, elements: !3884)
!3884 = !{!3885, !3886}
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !3883, file: !3861, line: 88, baseType: !276, size: 128)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !3883, file: !3861, line: 89, baseType: !299, size: 128, align: 64)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3871, file: !3861, line: 92, baseType: !7, size: 32, offset: 384)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3860, file: !3861, line: 111, baseType: !1581, size: 64, offset: 384)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !3860, file: !3861, line: 113, baseType: !2829, size: 256, offset: 448)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !2327, file: !2328, line: 1061, baseType: !3891, size: 64, offset: 10944)
!3891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3892, size: 64)
!3892 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !2328, line: 43, flags: DIFlagFwdDecl)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !2327, file: !2328, line: 1064, baseType: !312, size: 64, offset: 11008)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !2327, file: !2328, line: 1065, baseType: !3895, size: 64, offset: 11072)
!3895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3896, size: 64)
!3896 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !3700, line: 14, baseType: !3897)
!3897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !3700, line: 12, size: 384, elements: !3898)
!3898 = !{!3899}
!3899 = !DIDerivedType(tag: DW_TAG_member, scope: !3897, file: !3700, line: 13, baseType: !3900, size: 384)
!3900 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3897, file: !3700, line: 13, size: 384, elements: !3901)
!3901 = !{!3902, !3903, !3904, !3905}
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3900, file: !3700, line: 13, baseType: !32, size: 32)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3900, file: !3700, line: 13, baseType: !32, size: 32, offset: 32)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3900, file: !3700, line: 13, baseType: !32, size: 32, offset: 64)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3900, file: !3700, line: 13, baseType: !3906, size: 256, offset: 128)
!3906 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3907, line: 32, size: 256, elements: !3908)
!3907 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3908 = !{!3909, !3914, !3927, !3933, !3942, !3962, !3967}
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3906, file: !3907, line: 37, baseType: !3910, size: 64)
!3910 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 34, size: 64, elements: !3911)
!3911 = !{!3912, !3913}
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3910, file: !3907, line: 35, baseType: !2560, size: 32)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3910, file: !3907, line: 36, baseType: !1388, size: 32, offset: 32)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3906, file: !3907, line: 45, baseType: !3915, size: 192)
!3915 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 40, size: 192, elements: !3916)
!3916 = !{!3917, !3919, !3920, !3926}
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3915, file: !3907, line: 41, baseType: !3918, size: 32)
!3918 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !1041, line: 95, baseType: !32)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3915, file: !3907, line: 42, baseType: !32, size: 32, offset: 32)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3915, file: !3907, line: 43, baseType: !3921, size: 64, offset: 64)
!3921 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3907, line: 11, baseType: !3922)
!3922 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3907, line: 8, size: 64, elements: !3923)
!3923 = !{!3924, !3925}
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3922, file: !3907, line: 9, baseType: !32, size: 32)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3922, file: !3907, line: 10, baseType: !591, size: 64)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3915, file: !3907, line: 44, baseType: !32, size: 32, offset: 128)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3906, file: !3907, line: 52, baseType: !3928, size: 128)
!3928 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 48, size: 128, elements: !3929)
!3929 = !{!3930, !3931, !3932}
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3928, file: !3907, line: 49, baseType: !2560, size: 32)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3928, file: !3907, line: 50, baseType: !1388, size: 32, offset: 32)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3928, file: !3907, line: 51, baseType: !3921, size: 64, offset: 64)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3906, file: !3907, line: 61, baseType: !3934, size: 256)
!3934 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 55, size: 256, elements: !3935)
!3935 = !{!3936, !3937, !3938, !3939, !3941}
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3934, file: !3907, line: 56, baseType: !2560, size: 32)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3934, file: !3907, line: 57, baseType: !1388, size: 32, offset: 32)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3934, file: !3907, line: 58, baseType: !32, size: 32, offset: 64)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3934, file: !3907, line: 59, baseType: !3940, size: 64, offset: 128)
!3940 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !1041, line: 94, baseType: !1523)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3934, file: !3907, line: 60, baseType: !3940, size: 64, offset: 192)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3906, file: !3907, line: 95, baseType: !3943, size: 256)
!3943 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 64, size: 256, elements: !3944)
!3944 = !{!3945, !3946}
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3943, file: !3907, line: 65, baseType: !591, size: 64)
!3946 = !DIDerivedType(tag: DW_TAG_member, scope: !3943, file: !3907, line: 77, baseType: !3947, size: 192, offset: 64)
!3947 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3943, file: !3907, line: 77, size: 192, elements: !3948)
!3948 = !{!3949, !3950, !3957}
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3947, file: !3907, line: 82, baseType: !625, size: 16)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3947, file: !3907, line: 88, baseType: !3951, size: 192)
!3951 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3947, file: !3907, line: 84, size: 192, elements: !3952)
!3952 = !{!3953, !3955, !3956}
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3951, file: !3907, line: 85, baseType: !3954, size: 64)
!3954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 64, elements: !2433)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3951, file: !3907, line: 86, baseType: !591, size: 64, offset: 64)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3951, file: !3907, line: 87, baseType: !591, size: 64, offset: 128)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3947, file: !3907, line: 93, baseType: !3958, size: 96)
!3958 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3947, file: !3907, line: 90, size: 96, elements: !3959)
!3959 = !{!3960, !3961}
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3958, file: !3907, line: 91, baseType: !3954, size: 64)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3958, file: !3907, line: 92, baseType: !493, size: 32, offset: 64)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3906, file: !3907, line: 101, baseType: !3963, size: 128)
!3963 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 98, size: 128, elements: !3964)
!3964 = !{!3965, !3966}
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3963, file: !3907, line: 99, baseType: !998, size: 64)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3963, file: !3907, line: 100, baseType: !32, size: 32, offset: 64)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3906, file: !3907, line: 108, baseType: !3968, size: 128)
!3968 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 104, size: 128, elements: !3969)
!3969 = !{!3970, !3971, !3972}
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3968, file: !3907, line: 105, baseType: !591, size: 64)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3968, file: !3907, line: 106, baseType: !32, size: 32, offset: 64)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3968, file: !3907, line: 107, baseType: !7, size: 32, offset: 96)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2327, file: !2328, line: 1067, baseType: !3767, offset: 11136)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !2327, file: !2328, line: 1099, baseType: !3975, size: 64, offset: 11136)
!3975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3976, size: 64)
!3976 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !2328, line: 56, flags: DIFlagFwdDecl)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !2327, file: !2328, line: 1103, baseType: !284, size: 128, offset: 11200)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !2327, file: !2328, line: 1104, baseType: !3979, size: 64, offset: 11328)
!3979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3980, size: 64)
!3980 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !2328, line: 46, flags: DIFlagFwdDecl)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !2327, file: !2328, line: 1105, baseType: !1665, size: 192, offset: 11392)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !2327, file: !2328, line: 1106, baseType: !7, size: 32, offset: 11584)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !2327, file: !2328, line: 1109, baseType: !3984, size: 128, offset: 11648)
!3984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3985, size: 128, elements: !2664)
!3985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3986, size: 64)
!3986 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !2328, line: 51, flags: DIFlagFwdDecl)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !2327, file: !2328, line: 1110, baseType: !1665, size: 192, offset: 11776)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !2327, file: !2328, line: 1111, baseType: !284, size: 128, offset: 11968)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !2327, file: !2328, line: 1173, baseType: !3990, size: 64, offset: 12096)
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3991, size: 64)
!3991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3992, line: 62, size: 256, align: 256, elements: !3993)
!3992 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3993 = !{!3994, !3995, !3996, !4001}
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3991, file: !3992, line: 75, baseType: !493, size: 32)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3991, file: !3992, line: 90, baseType: !493, size: 32, offset: 32)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3991, file: !3992, line: 124, baseType: !3997, size: 64, offset: 64)
!3997 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3991, file: !3992, line: 109, size: 64, elements: !3998)
!3998 = !{!3999, !4000}
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3997, file: !3992, line: 110, baseType: !333, size: 64)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3997, file: !3992, line: 112, baseType: !333, size: 64)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3991, file: !3992, line: 144, baseType: !493, size: 32, offset: 128)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !2327, file: !2328, line: 1174, baseType: !987, size: 32, offset: 12160)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !2327, file: !2328, line: 1179, baseType: !312, size: 64, offset: 12224)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !2327, file: !2328, line: 1182, baseType: !4005, size: 128, offset: 12288)
!4005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2268, line: 76, size: 128, elements: !4006)
!4006 = !{!4007, !4012, !4013}
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4005, file: !2268, line: 85, baseType: !4008, size: 64)
!4008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !4009, line: 7, size: 64, elements: !4010)
!4009 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!4010 = !{!4011}
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !4008, file: !4009, line: 12, baseType: !2468, size: 64)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !4005, file: !2268, line: 88, baseType: !771, size: 8, offset: 64)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !4005, file: !2268, line: 95, baseType: !771, size: 8, offset: 72)
!4014 = !DIDerivedType(tag: DW_TAG_member, scope: !2327, file: !2328, line: 1184, baseType: !4015, size: 128, offset: 12416)
!4015 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2327, file: !2328, line: 1184, size: 128, elements: !4016)
!4016 = !{!4017, !4018}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !4015, file: !2328, line: 1185, baseType: !568, size: 32)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4015, file: !2328, line: 1186, baseType: !299, size: 128, align: 64)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !2327, file: !2328, line: 1190, baseType: !1883, size: 64, offset: 12544)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !2327, file: !2328, line: 1192, baseType: !4021, size: 128, offset: 12608)
!4021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2268, line: 64, size: 128, elements: !4022)
!4022 = !{!4023, !4024, !4025}
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4021, file: !2268, line: 65, baseType: !1719, size: 64)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4021, file: !2268, line: 67, baseType: !493, size: 32, offset: 64)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4021, file: !2268, line: 68, baseType: !493, size: 32, offset: 96)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !2327, file: !2328, line: 1206, baseType: !32, size: 32, offset: 12736)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !2327, file: !2328, line: 1207, baseType: !32, size: 32, offset: 12768)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !2327, file: !2328, line: 1209, baseType: !312, size: 64, offset: 12800)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !2327, file: !2328, line: 1219, baseType: !331, size: 64, offset: 12864)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !2327, file: !2328, line: 1220, baseType: !331, size: 64, offset: 12928)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !2327, file: !2328, line: 1317, baseType: !32, size: 32, offset: 12992)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !2327, file: !2328, line: 1319, baseType: !2326, size: 64, offset: 13056)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !2327, file: !2328, line: 1322, baseType: !4034, size: 64, offset: 13120)
!4034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4035, size: 64)
!4035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !4036, line: 56, size: 512, elements: !4037)
!4036 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!4037 = !{!4038, !4039, !4040, !4041, !4042, !4043, !4044, !4046}
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4035, file: !4036, line: 57, baseType: !4034, size: 64)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4035, file: !4036, line: 58, baseType: !591, size: 64, offset: 64)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4035, file: !4036, line: 59, baseType: !312, size: 64, offset: 128)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4035, file: !4036, line: 60, baseType: !312, size: 64, offset: 192)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4035, file: !4036, line: 61, baseType: !1801, size: 64, offset: 256)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !4035, file: !4036, line: 62, baseType: !7, size: 32, offset: 320)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !4035, file: !4036, line: 63, baseType: !4045, size: 64, offset: 384)
!4045 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !277, line: 153, baseType: !331)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !4035, file: !4036, line: 64, baseType: !3258, size: 64, offset: 448)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !2327, file: !2328, line: 1326, baseType: !568, size: 32, offset: 13184)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !2327, file: !2328, line: 1342, baseType: !591, size: 64, offset: 13248)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !2327, file: !2328, line: 1343, baseType: !333, size: 64, offset: 13312)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !2327, file: !2328, line: 1344, baseType: !331, size: 64, offset: 13376)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !2327, file: !2328, line: 1345, baseType: !333, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !2327, file: !2328, line: 1346, baseType: !333, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !2327, file: !2328, line: 1347, baseType: !333, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !2327, file: !2328, line: 1348, baseType: !299, size: 128, align: 64, offset: 13504)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2327, file: !2328, line: 1358, baseType: !4056, size: 34816, offset: 13824)
!4056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !4057, line: 485, size: 34816, elements: !4058)
!4057 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!4058 = !{!4059, !4077, !4078, !4079, !4080, !4081, !4082, !4083, !4084, !4088, !4089, !4090, !4091, !4092, !4093, !4096, !4097, !4098}
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !4056, file: !4057, line: 487, baseType: !4060, size: 192)
!4060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4061, size: 192, elements: !1592)
!4061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !4062, line: 16, size: 64, elements: !4063)
!4062 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!4063 = !{!4064, !4065, !4066, !4067, !4068, !4069, !4070, !4071, !4072, !4073, !4074, !4075, !4076}
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !4061, file: !4062, line: 17, baseType: !581, size: 16)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !4061, file: !4062, line: 18, baseType: !581, size: 16, offset: 16)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !4061, file: !4062, line: 19, baseType: !581, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4061, file: !4062, line: 19, baseType: !581, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4061, file: !4062, line: 19, baseType: !581, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !4061, file: !4062, line: 19, baseType: !581, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4061, file: !4062, line: 19, baseType: !581, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !4061, file: !4062, line: 20, baseType: !581, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !4061, file: !4062, line: 20, baseType: !581, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !4061, file: !4062, line: 20, baseType: !581, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4061, file: !4062, line: 20, baseType: !581, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4061, file: !4062, line: 20, baseType: !581, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !4061, file: !4062, line: 20, baseType: !581, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4056, file: !4057, line: 491, baseType: !312, size: 64, offset: 192)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !4056, file: !4057, line: 495, baseType: !476, size: 16, offset: 256)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !4056, file: !4057, line: 496, baseType: !476, size: 16, offset: 272)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !4056, file: !4057, line: 497, baseType: !476, size: 16, offset: 288)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !4056, file: !4057, line: 498, baseType: !476, size: 16, offset: 304)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !4056, file: !4057, line: 502, baseType: !312, size: 64, offset: 320)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !4056, file: !4057, line: 503, baseType: !312, size: 64, offset: 384)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !4056, file: !4057, line: 514, baseType: !4085, size: 256, offset: 448)
!4085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4086, size: 256, elements: !2272)
!4086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4087, size: 64)
!4087 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !4057, line: 483, flags: DIFlagFwdDecl)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !4056, file: !4057, line: 516, baseType: !312, size: 64, offset: 704)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !4056, file: !4057, line: 518, baseType: !312, size: 64, offset: 768)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !4056, file: !4057, line: 520, baseType: !312, size: 64, offset: 832)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !4056, file: !4057, line: 521, baseType: !312, size: 64, offset: 896)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !4056, file: !4057, line: 522, baseType: !312, size: 64, offset: 960)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !4056, file: !4057, line: 528, baseType: !4094, size: 64, offset: 1024)
!4094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4095, size: 64)
!4095 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !4057, line: 10, flags: DIFlagFwdDecl)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !4056, file: !4057, line: 535, baseType: !312, size: 64, offset: 1088)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !4056, file: !4057, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !4056, file: !4057, line: 540, baseType: !4099, size: 33280, offset: 1536)
!4099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !4100, line: 317, size: 33280, elements: !4101)
!4100 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!4101 = !{!4102, !4103, !4104}
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !4099, file: !4100, line: 330, baseType: !7, size: 32)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !4099, file: !4100, line: 337, baseType: !312, size: 64, offset: 64)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4099, file: !4100, line: 348, baseType: !4105, size: 32768, offset: 512)
!4105 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !4100, line: 304, size: 32768, elements: !4106)
!4106 = !{!4107, !4120, !4157, !4207, !4220}
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !4105, file: !4100, line: 305, baseType: !4108, size: 896)
!4108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !4100, line: 12, size: 896, elements: !4109)
!4109 = !{!4110, !4111, !4112, !4113, !4114, !4115, !4116, !4117, !4119}
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4108, file: !4100, line: 13, baseType: !987, size: 32)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4108, file: !4100, line: 14, baseType: !987, size: 32, offset: 32)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4108, file: !4100, line: 15, baseType: !987, size: 32, offset: 64)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4108, file: !4100, line: 16, baseType: !987, size: 32, offset: 96)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4108, file: !4100, line: 17, baseType: !987, size: 32, offset: 128)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4108, file: !4100, line: 18, baseType: !987, size: 32, offset: 160)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4108, file: !4100, line: 19, baseType: !987, size: 32, offset: 192)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4108, file: !4100, line: 22, baseType: !4118, size: 640, offset: 224)
!4118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 640, elements: !900)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4108, file: !4100, line: 25, baseType: !987, size: 32, offset: 864)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !4105, file: !4100, line: 306, baseType: !4121, size: 4096, align: 128)
!4121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !4100, line: 34, size: 4096, align: 128, elements: !4122)
!4122 = !{!4123, !4124, !4125, !4126, !4127, !4142, !4143, !4144, !4146, !4148, !4152}
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4121, file: !4100, line: 35, baseType: !581, size: 16)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4121, file: !4100, line: 36, baseType: !581, size: 16, offset: 16)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4121, file: !4100, line: 37, baseType: !581, size: 16, offset: 32)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !4121, file: !4100, line: 38, baseType: !581, size: 16, offset: 48)
!4127 = !DIDerivedType(tag: DW_TAG_member, scope: !4121, file: !4100, line: 39, baseType: !4128, size: 128, offset: 64)
!4128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4121, file: !4100, line: 39, size: 128, elements: !4129)
!4129 = !{!4130, !4135}
!4130 = !DIDerivedType(tag: DW_TAG_member, scope: !4128, file: !4100, line: 40, baseType: !4131, size: 128)
!4131 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4128, file: !4100, line: 40, size: 128, elements: !4132)
!4132 = !{!4133, !4134}
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !4131, file: !4100, line: 41, baseType: !331, size: 64)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !4131, file: !4100, line: 42, baseType: !331, size: 64, offset: 64)
!4135 = !DIDerivedType(tag: DW_TAG_member, scope: !4128, file: !4100, line: 44, baseType: !4136, size: 128)
!4136 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4128, file: !4100, line: 44, size: 128, elements: !4137)
!4137 = !{!4138, !4139, !4140, !4141}
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4136, file: !4100, line: 45, baseType: !987, size: 32)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4136, file: !4100, line: 46, baseType: !987, size: 32, offset: 32)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4136, file: !4100, line: 47, baseType: !987, size: 32, offset: 64)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4136, file: !4100, line: 48, baseType: !987, size: 32, offset: 96)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !4121, file: !4100, line: 51, baseType: !987, size: 32, offset: 192)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !4121, file: !4100, line: 52, baseType: !987, size: 32, offset: 224)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4121, file: !4100, line: 55, baseType: !4145, size: 1024, offset: 256)
!4145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 1024, elements: !819)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !4121, file: !4100, line: 58, baseType: !4147, size: 2048, offset: 1280)
!4147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 2048, elements: !3812)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4121, file: !4100, line: 60, baseType: !4149, size: 384, offset: 3328)
!4149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 384, elements: !4150)
!4150 = !{!4151}
!4151 = !DISubrange(count: 12)
!4152 = !DIDerivedType(tag: DW_TAG_member, scope: !4121, file: !4100, line: 62, baseType: !4153, size: 384, offset: 3712)
!4153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4121, file: !4100, line: 62, size: 384, elements: !4154)
!4154 = !{!4155, !4156}
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !4153, file: !4100, line: 63, baseType: !4149, size: 384)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !4153, file: !4100, line: 64, baseType: !4149, size: 384)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4105, file: !4100, line: 307, baseType: !4158, size: 1088)
!4158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !4100, line: 79, size: 1088, elements: !4159)
!4159 = !{!4160, !4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4206}
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4158, file: !4100, line: 80, baseType: !987, size: 32)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4158, file: !4100, line: 81, baseType: !987, size: 32, offset: 32)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4158, file: !4100, line: 82, baseType: !987, size: 32, offset: 64)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4158, file: !4100, line: 83, baseType: !987, size: 32, offset: 96)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4158, file: !4100, line: 84, baseType: !987, size: 32, offset: 128)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4158, file: !4100, line: 85, baseType: !987, size: 32, offset: 160)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4158, file: !4100, line: 86, baseType: !987, size: 32, offset: 192)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4158, file: !4100, line: 88, baseType: !4118, size: 640, offset: 224)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !4158, file: !4100, line: 89, baseType: !794, size: 8, offset: 864)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4158, file: !4100, line: 90, baseType: !794, size: 8, offset: 872)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !4158, file: !4100, line: 91, baseType: !794, size: 8, offset: 880)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !4158, file: !4100, line: 92, baseType: !794, size: 8, offset: 888)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !4158, file: !4100, line: 93, baseType: !794, size: 8, offset: 896)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !4158, file: !4100, line: 94, baseType: !794, size: 8, offset: 904)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4158, file: !4100, line: 95, baseType: !4175, size: 64, offset: 960)
!4175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4176, size: 64)
!4176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !4177, line: 11, size: 128, elements: !4178)
!4177 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!4178 = !{!4179, !4180}
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !4176, file: !4177, line: 12, baseType: !998, size: 64)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4176, file: !4177, line: 13, baseType: !4181, size: 64, offset: 64)
!4181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4182, size: 64)
!4182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !4183, line: 56, size: 1344, elements: !4184)
!4183 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!4184 = !{!4185, !4186, !4187, !4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4205}
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4182, file: !4183, line: 61, baseType: !312, size: 64)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4182, file: !4183, line: 62, baseType: !312, size: 64, offset: 64)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !4182, file: !4183, line: 63, baseType: !312, size: 64, offset: 128)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4182, file: !4183, line: 64, baseType: !312, size: 64, offset: 192)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !4182, file: !4183, line: 65, baseType: !312, size: 64, offset: 256)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !4182, file: !4183, line: 66, baseType: !312, size: 64, offset: 320)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !4182, file: !4183, line: 68, baseType: !312, size: 64, offset: 384)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !4182, file: !4183, line: 69, baseType: !312, size: 64, offset: 448)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !4182, file: !4183, line: 70, baseType: !312, size: 64, offset: 512)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !4182, file: !4183, line: 71, baseType: !312, size: 64, offset: 576)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !4182, file: !4183, line: 72, baseType: !312, size: 64, offset: 640)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !4182, file: !4183, line: 73, baseType: !312, size: 64, offset: 704)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4182, file: !4183, line: 74, baseType: !312, size: 64, offset: 768)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !4182, file: !4183, line: 75, baseType: !312, size: 64, offset: 832)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !4182, file: !4183, line: 76, baseType: !312, size: 64, offset: 896)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !4182, file: !4183, line: 81, baseType: !312, size: 64, offset: 960)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4182, file: !4183, line: 83, baseType: !312, size: 64, offset: 1024)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !4182, file: !4183, line: 84, baseType: !312, size: 64, offset: 1088)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4182, file: !4183, line: 85, baseType: !312, size: 64, offset: 1152)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4182, file: !4183, line: 86, baseType: !312, size: 64, offset: 1216)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !4182, file: !4183, line: 87, baseType: !312, size: 64, offset: 1280)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !4158, file: !4100, line: 96, baseType: !987, size: 32, offset: 1024)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !4105, file: !4100, line: 308, baseType: !4208, size: 4608, align: 512)
!4208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !4100, line: 289, size: 4608, align: 512, elements: !4209)
!4209 = !{!4210, !4211, !4218}
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !4208, file: !4100, line: 290, baseType: !4121, size: 4096, align: 128)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4208, file: !4100, line: 291, baseType: !4212, size: 512, offset: 4096)
!4212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !4100, line: 268, size: 512, elements: !4213)
!4213 = !{!4214, !4215, !4216}
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !4212, file: !4100, line: 269, baseType: !331, size: 64)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !4212, file: !4100, line: 270, baseType: !331, size: 64, offset: 64)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4212, file: !4100, line: 271, baseType: !4217, size: 384, offset: 128)
!4217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 384, elements: !999)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !4208, file: !4100, line: 292, baseType: !4219, offset: 4608)
!4219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, elements: !483)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !4105, file: !4100, line: 309, baseType: !4221, size: 32768)
!4221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 32768, elements: !4222)
!4222 = !{!4223}
!4223 = !DISubrange(count: 4096)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2323, file: !1721, line: 378, baseType: !4225, size: 64, offset: 64)
!4225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 64)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2319, file: !1721, line: 384, baseType: !2597, size: 192, offset: 192)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !2095, file: !1721, line: 500, baseType: !1670, offset: 6656)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !2095, file: !1721, line: 501, baseType: !4229, size: 64, offset: 6656)
!4229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4230, size: 64)
!4230 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1721, line: 387, flags: DIFlagFwdDecl)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2095, file: !1721, line: 516, baseType: !2781, size: 64, offset: 6720)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !2095, file: !1721, line: 519, baseType: !1315, size: 64, offset: 6784)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !2095, file: !1721, line: 521, baseType: !4234, size: 64, offset: 6848)
!4234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4235, size: 64)
!4235 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1721, line: 521, flags: DIFlagFwdDecl)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !2095, file: !1721, line: 545, baseType: !383, size: 32, offset: 6912)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !2095, file: !1721, line: 548, baseType: !771, size: 8, offset: 6944)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !2095, file: !1721, line: 550, baseType: !4239, offset: 6952)
!4239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !4240, line: 142, elements: !1587)
!4240 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !2095, file: !1721, line: 554, baseType: !2829, size: 256, offset: 6976)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !2095, file: !1721, line: 557, baseType: !987, size: 32, offset: 7232)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !2092, file: !1721, line: 565, baseType: !4244, offset: 7296)
!4244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, elements: !309)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !2088, file: !1721, line: 151, baseType: !383, size: 32)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2080, file: !1721, line: 156, baseType: !1670, offset: 256)
!4247 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 159, baseType: !4248, size: 128)
!4248 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 159, size: 128, elements: !4249)
!4249 = !{!4250, !4321}
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !4248, file: !1721, line: 161, baseType: !4251, size: 64)
!4251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4252, size: 64)
!4252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !4253, line: 110, size: 1152, elements: !4254)
!4253 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!4254 = !{!4255, !4265, !4286, !4287, !4288, !4295, !4296, !4308, !4309, !4310}
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !4252, file: !4253, line: 111, baseType: !4256, size: 384)
!4256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !4253, line: 19, size: 384, elements: !4257)
!4257 = !{!4258, !4260, !4261, !4262, !4263, !4264}
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !4256, file: !4253, line: 20, baseType: !4259, size: 64)
!4259 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !312)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !4256, file: !4253, line: 21, baseType: !4259, size: 64, offset: 64)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !4256, file: !4253, line: 22, baseType: !4259, size: 64, offset: 128)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4256, file: !4253, line: 23, baseType: !312, size: 64, offset: 192)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !4256, file: !4253, line: 24, baseType: !312, size: 64, offset: 256)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4256, file: !4253, line: 25, baseType: !312, size: 64, offset: 320)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4252, file: !4253, line: 112, baseType: !4266, size: 64, offset: 384)
!4266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4267, size: 64)
!4267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !4268, line: 105, size: 128, elements: !4269)
!4268 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!4269 = !{!4270, !4271}
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !4267, file: !4268, line: 110, baseType: !312, size: 64)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4267, file: !4268, line: 118, baseType: !4272, size: 64, offset: 64)
!4272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4273, size: 64)
!4273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !4268, line: 95, size: 448, elements: !4274)
!4274 = !{!4275, !4276, !4281, !4282, !4283, !4284, !4285}
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4273, file: !4268, line: 96, baseType: !371, size: 64)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4273, file: !4268, line: 97, baseType: !4277, size: 64, offset: 64)
!4277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4278, size: 64)
!4278 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !4268, line: 60, baseType: !4279)
!4279 = !DISubroutineType(types: !4280)
!4280 = !{null, !4266}
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !4273, file: !4268, line: 98, baseType: !4277, size: 64, offset: 128)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !4273, file: !4268, line: 99, baseType: !771, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !4273, file: !4268, line: 100, baseType: !771, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4273, file: !4268, line: 101, baseType: !299, size: 128, align: 64, offset: 256)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4273, file: !4268, line: 102, baseType: !4266, size: 64, offset: 384)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !4252, file: !4253, line: 113, baseType: !4267, size: 128, offset: 448)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4252, file: !4253, line: 114, baseType: !2597, size: 192, offset: 576)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4252, file: !4253, line: 115, baseType: !4289, size: 32, offset: 768)
!4289 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !4253, line: 59, baseType: !7, size: 32, elements: !4290)
!4290 = !{!4291, !4292, !4293, !4294}
!4291 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!4292 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!4293 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!4294 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4252, file: !4253, line: 116, baseType: !7, size: 32, offset: 800)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4252, file: !4253, line: 117, baseType: !4297, size: 64, offset: 832)
!4297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4298, size: 64)
!4298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4299)
!4299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !4253, line: 67, size: 256, elements: !4300)
!4300 = !{!4301, !4302, !4306, !4307}
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !4299, file: !4253, line: 73, baseType: !1821, size: 64)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !4299, file: !4253, line: 78, baseType: !4303, size: 64, offset: 64)
!4303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4304, size: 64)
!4304 = !DISubroutineType(types: !4305)
!4305 = !{null, !4251}
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !4299, file: !4253, line: 83, baseType: !4303, size: 64, offset: 128)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !4299, file: !4253, line: 89, baseType: !2144, size: 64, offset: 192)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4252, file: !4253, line: 118, baseType: !591, size: 64, offset: 896)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !4252, file: !4253, line: 119, baseType: !32, size: 32, offset: 960)
!4310 = !DIDerivedType(tag: DW_TAG_member, scope: !4252, file: !4253, line: 120, baseType: !4311, size: 128, offset: 1024)
!4311 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4252, file: !4253, line: 120, size: 128, elements: !4312)
!4312 = !{!4313, !4319}
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !4311, file: !4253, line: 121, baseType: !4314, size: 128)
!4314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !4315, line: 6, size: 128, elements: !4316)
!4315 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!4316 = !{!4317, !4318}
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4314, file: !4315, line: 7, baseType: !331, size: 64)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4314, file: !4315, line: 8, baseType: !331, size: 64, offset: 64)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !4311, file: !4253, line: 122, baseType: !4320)
!4320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4314, elements: !483)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !4248, file: !1721, line: 162, baseType: !591, size: 64, offset: 64)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1725, file: !1721, line: 176, baseType: !299, size: 128, align: 64)
!4323 = !DIDerivedType(tag: DW_TAG_member, scope: !1720, file: !1721, line: 179, baseType: !4324, size: 32, offset: 384)
!4324 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1720, file: !1721, line: 179, size: 32, elements: !4325)
!4325 = !{!4326, !4327, !4328, !4329}
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !4324, file: !1721, line: 184, baseType: !383, size: 32)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !4324, file: !1721, line: 192, baseType: !7, size: 32)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4324, file: !1721, line: 194, baseType: !7, size: 32)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !4324, file: !1721, line: 195, baseType: !32, size: 32)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1720, file: !1721, line: 199, baseType: !383, size: 32, offset: 416)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1600, file: !1317, line: 1964, baseType: !4332, size: 64, offset: 1344)
!4332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4333, size: 64)
!4333 = !DISubroutineType(types: !4334)
!4334 = !{!998, !1545, !4335}
!4335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4336, size: 64)
!4336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !4337, line: 12, size: 256, elements: !4338)
!4337 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!4338 = !{!4339, !4340, !4341, !4342, !4343}
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4336, file: !4337, line: 13, baseType: !1742, size: 32)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !4336, file: !4337, line: 16, baseType: !32, size: 32, offset: 32)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !4336, file: !4337, line: 23, baseType: !312, size: 64, offset: 64)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !4336, file: !4337, line: 30, baseType: !312, size: 64, offset: 128)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !4336, file: !4337, line: 33, baseType: !4344, size: 64, offset: 192)
!4344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4345, size: 64)
!4345 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1721, line: 27, flags: DIFlagFwdDecl)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1600, file: !1317, line: 1966, baseType: !4332, size: 64, offset: 1408)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !1546, file: !1317, line: 1424, baseType: !4348, size: 64, offset: 448)
!4348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4349, size: 64)
!4349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4350)
!4350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !4351, line: 322, size: 704, elements: !4352)
!4351 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!4352 = !{!4353, !4404, !4408, !4412, !4413, !4414, !4415, !4416, !4421, !4426, !4430}
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !4350, file: !4351, line: 323, baseType: !4354, size: 64)
!4354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4355, size: 64)
!4355 = !DISubroutineType(types: !4356)
!4356 = !{!32, !4357}
!4357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4358, size: 64)
!4358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !4351, line: 294, size: 1600, elements: !4359)
!4359 = !{!4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368, !4389, !4390, !4391}
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !4358, file: !4351, line: 295, baseType: !276, size: 128)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !4358, file: !4351, line: 296, baseType: !284, size: 128, offset: 128)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !4358, file: !4351, line: 297, baseType: !284, size: 128, offset: 256)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !4358, file: !4351, line: 298, baseType: !284, size: 128, offset: 384)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !4358, file: !4351, line: 299, baseType: !1665, size: 192, offset: 512)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !4358, file: !4351, line: 300, baseType: !1670, offset: 704)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !4358, file: !4351, line: 301, baseType: !383, size: 32, offset: 704)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !4358, file: !4351, line: 302, baseType: !1545, size: 64, offset: 768)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !4358, file: !4351, line: 303, baseType: !4369, size: 64, offset: 832)
!4369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !4351, line: 68, size: 64, elements: !4370)
!4370 = !{!4371, !4383}
!4371 = !DIDerivedType(tag: DW_TAG_member, scope: !4369, file: !4351, line: 69, baseType: !4372, size: 32)
!4372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4369, file: !4351, line: 69, size: 32, elements: !4373)
!4373 = !{!4374, !4375, !4376}
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4372, file: !4351, line: 70, baseType: !1382, size: 32)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !4372, file: !4351, line: 71, baseType: !1390, size: 32)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !4372, file: !4351, line: 72, baseType: !4377, size: 32)
!4377 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !4378, line: 24, baseType: !4379)
!4378 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!4379 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4378, line: 22, size: 32, elements: !4380)
!4380 = !{!4381}
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4379, file: !4378, line: 23, baseType: !4382, size: 32)
!4382 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !4378, line: 20, baseType: !1388)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4369, file: !4351, line: 74, baseType: !4384, size: 32, offset: 32)
!4384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !4351, line: 54, baseType: !7, size: 32, elements: !4385)
!4385 = !{!4386, !4387, !4388}
!4386 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!4387 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!4388 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !4358, file: !4351, line: 304, baseType: !1476, size: 64, offset: 896)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !4358, file: !4351, line: 305, baseType: !312, size: 64, offset: 960)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !4358, file: !4351, line: 306, baseType: !4392, size: 576, offset: 1024)
!4392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !4351, line: 205, size: 576, elements: !4393)
!4393 = !{!4394, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403}
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !4392, file: !4351, line: 206, baseType: !4395, size: 64)
!4395 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !4351, line: 66, baseType: !379)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !4392, file: !4351, line: 207, baseType: !4395, size: 64, offset: 64)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !4392, file: !4351, line: 208, baseType: !4395, size: 64, offset: 128)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !4392, file: !4351, line: 209, baseType: !4395, size: 64, offset: 192)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !4392, file: !4351, line: 210, baseType: !4395, size: 64, offset: 256)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !4392, file: !4351, line: 211, baseType: !4395, size: 64, offset: 320)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !4392, file: !4351, line: 212, baseType: !4395, size: 64, offset: 384)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !4392, file: !4351, line: 213, baseType: !1483, size: 64, offset: 448)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !4392, file: !4351, line: 214, baseType: !1483, size: 64, offset: 512)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !4350, file: !4351, line: 324, baseType: !4405, size: 64, offset: 64)
!4405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4406, size: 64)
!4406 = !DISubroutineType(types: !4407)
!4407 = !{!4357, !1545, !32}
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !4350, file: !4351, line: 325, baseType: !4409, size: 64, offset: 128)
!4409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4410, size: 64)
!4410 = !DISubroutineType(types: !4411)
!4411 = !{null, !4357}
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !4350, file: !4351, line: 326, baseType: !4354, size: 64, offset: 192)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !4350, file: !4351, line: 327, baseType: !4354, size: 64, offset: 256)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !4350, file: !4351, line: 328, baseType: !4354, size: 64, offset: 320)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !4350, file: !4351, line: 329, baseType: !1628, size: 64, offset: 384)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !4350, file: !4351, line: 332, baseType: !4417, size: 64, offset: 448)
!4417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4418, size: 64)
!4418 = !DISubroutineType(types: !4419)
!4419 = !{!4420, !1375}
!4420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4395, size: 64)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !4350, file: !4351, line: 333, baseType: !4422, size: 64, offset: 512)
!4422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4423, size: 64)
!4423 = !DISubroutineType(types: !4424)
!4424 = !{!32, !1375, !4425}
!4425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4377, size: 64)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !4350, file: !4351, line: 335, baseType: !4427, size: 64, offset: 576)
!4427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4428, size: 64)
!4428 = !DISubroutineType(types: !4429)
!4429 = !{!32, !1375, !4420}
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4350, file: !4351, line: 337, baseType: !4431, size: 64, offset: 640)
!4431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4432, size: 64)
!4432 = !DISubroutineType(types: !4433)
!4433 = !{!32, !1545, !4434}
!4434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4369, size: 64)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !1546, file: !1317, line: 1425, baseType: !4436, size: 64, offset: 512)
!4436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4437, size: 64)
!4437 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4438)
!4438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !4351, line: 428, size: 704, elements: !4439)
!4439 = !{!4440, !4444, !4445, !4449, !4450, !4451, !4466, !4489, !4493, !4494, !4517}
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !4438, file: !4351, line: 429, baseType: !4441, size: 64)
!4441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4442, size: 64)
!4442 = !DISubroutineType(types: !4443)
!4443 = !{!32, !1545, !32, !32, !1492}
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !4438, file: !4351, line: 430, baseType: !1628, size: 64, offset: 64)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !4438, file: !4351, line: 431, baseType: !4446, size: 64, offset: 128)
!4446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4447, size: 64)
!4447 = !DISubroutineType(types: !4448)
!4448 = !{!32, !1545, !7}
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !4438, file: !4351, line: 432, baseType: !4446, size: 64, offset: 192)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !4438, file: !4351, line: 433, baseType: !1628, size: 64, offset: 256)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !4438, file: !4351, line: 434, baseType: !4452, size: 64, offset: 320)
!4452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4453, size: 64)
!4453 = !DISubroutineType(types: !4454)
!4454 = !{!32, !1545, !32, !4455}
!4455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4456, size: 64)
!4456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !4351, line: 415, size: 256, elements: !4457)
!4457 = !{!4458, !4459, !4460, !4461, !4462, !4463, !4464, !4465}
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !4456, file: !4351, line: 416, baseType: !32, size: 32)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !4456, file: !4351, line: 417, baseType: !7, size: 32, offset: 32)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !4456, file: !4351, line: 418, baseType: !7, size: 32, offset: 64)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !4456, file: !4351, line: 420, baseType: !7, size: 32, offset: 96)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !4456, file: !4351, line: 421, baseType: !7, size: 32, offset: 128)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !4456, file: !4351, line: 422, baseType: !7, size: 32, offset: 160)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !4456, file: !4351, line: 423, baseType: !7, size: 32, offset: 192)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !4456, file: !4351, line: 424, baseType: !7, size: 32, offset: 224)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !4438, file: !4351, line: 435, baseType: !4467, size: 64, offset: 384)
!4467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4468, size: 64)
!4468 = !DISubroutineType(types: !4469)
!4469 = !{!32, !1545, !4369, !4470}
!4470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4471, size: 64)
!4471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !4351, line: 343, size: 960, elements: !4472)
!4472 = !{!4473, !4474, !4475, !4476, !4477, !4478, !4479, !4480, !4481, !4482, !4483, !4484, !4485, !4486, !4487, !4488}
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !4471, file: !4351, line: 344, baseType: !32, size: 32)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !4471, file: !4351, line: 345, baseType: !331, size: 64, offset: 64)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !4471, file: !4351, line: 346, baseType: !331, size: 64, offset: 128)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !4471, file: !4351, line: 347, baseType: !331, size: 64, offset: 192)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !4471, file: !4351, line: 348, baseType: !331, size: 64, offset: 256)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !4471, file: !4351, line: 349, baseType: !331, size: 64, offset: 320)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !4471, file: !4351, line: 350, baseType: !331, size: 64, offset: 384)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !4471, file: !4351, line: 351, baseType: !377, size: 64, offset: 448)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !4471, file: !4351, line: 353, baseType: !377, size: 64, offset: 512)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !4471, file: !4351, line: 354, baseType: !32, size: 32, offset: 576)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !4471, file: !4351, line: 355, baseType: !32, size: 32, offset: 608)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !4471, file: !4351, line: 356, baseType: !331, size: 64, offset: 640)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !4471, file: !4351, line: 357, baseType: !331, size: 64, offset: 704)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !4471, file: !4351, line: 358, baseType: !331, size: 64, offset: 768)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !4471, file: !4351, line: 359, baseType: !377, size: 64, offset: 832)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !4471, file: !4351, line: 360, baseType: !32, size: 32, offset: 896)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !4438, file: !4351, line: 436, baseType: !4490, size: 64, offset: 448)
!4490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4491, size: 64)
!4491 = !DISubroutineType(types: !4492)
!4492 = !{!32, !1545, !4434, !4470}
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !4438, file: !4351, line: 438, baseType: !4467, size: 64, offset: 512)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !4438, file: !4351, line: 439, baseType: !4495, size: 64, offset: 576)
!4495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4496, size: 64)
!4496 = !DISubroutineType(types: !4497)
!4497 = !{!32, !1545, !4498}
!4498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4499, size: 64)
!4499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !4351, line: 409, size: 1408, elements: !4500)
!4500 = !{!4501, !4502}
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !4499, file: !4351, line: 410, baseType: !7, size: 32)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !4499, file: !4351, line: 411, baseType: !4503, size: 1344, offset: 64)
!4503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4504, size: 1344, elements: !1592)
!4504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !4351, line: 395, size: 448, elements: !4505)
!4505 = !{!4506, !4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514, !4516}
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4504, file: !4351, line: 396, baseType: !7, size: 32)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !4504, file: !4351, line: 397, baseType: !7, size: 32, offset: 32)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !4504, file: !4351, line: 399, baseType: !7, size: 32, offset: 64)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !4504, file: !4351, line: 400, baseType: !7, size: 32, offset: 96)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !4504, file: !4351, line: 401, baseType: !7, size: 32, offset: 128)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !4504, file: !4351, line: 402, baseType: !7, size: 32, offset: 160)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !4504, file: !4351, line: 403, baseType: !7, size: 32, offset: 192)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !4504, file: !4351, line: 404, baseType: !335, size: 64, offset: 256)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4504, file: !4351, line: 405, baseType: !4515, size: 64, offset: 320)
!4515 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !277, line: 126, baseType: !331)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !4504, file: !4351, line: 406, baseType: !4515, size: 64, offset: 384)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !4438, file: !4351, line: 440, baseType: !4446, size: 64, offset: 640)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !1546, file: !1317, line: 1426, baseType: !4519, size: 64, offset: 576)
!4519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4520, size: 64)
!4520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4521)
!4521 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !1317, line: 49, flags: DIFlagFwdDecl)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !1546, file: !1317, line: 1427, baseType: !312, size: 64, offset: 640)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !1546, file: !1317, line: 1428, baseType: !312, size: 64, offset: 704)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !1546, file: !1317, line: 1429, baseType: !312, size: 64, offset: 768)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !1546, file: !1317, line: 1430, baseType: !1338, size: 64, offset: 832)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !1546, file: !1317, line: 1431, baseType: !1755, size: 256, offset: 896)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !1546, file: !1317, line: 1432, baseType: !32, size: 32, offset: 1152)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !1546, file: !1317, line: 1433, baseType: !383, size: 32, offset: 1184)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !1546, file: !1317, line: 1437, baseType: !4530, size: 64, offset: 1216)
!4530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4531, size: 64)
!4531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4532, size: 64)
!4532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4533)
!4533 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !1317, line: 1437, flags: DIFlagFwdDecl)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !1546, file: !1317, line: 1449, baseType: !4535, size: 64, offset: 1280)
!4535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !1354, line: 34, size: 64, elements: !4536)
!4536 = !{!4537}
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4535, file: !1354, line: 35, baseType: !1357, size: 64)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !1546, file: !1317, line: 1450, baseType: !284, size: 128, offset: 1344)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !1546, file: !1317, line: 1451, baseType: !4540, size: 64, offset: 1472)
!4540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4541, size: 64)
!4541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !4542, line: 22, size: 1344, elements: !4543)
!4542 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!4543 = !{!4544, !4545, !4546, !4547, !4548, !4549, !4550, !4551, !4552, !4553, !4554, !4555, !4556, !5587, !5588, !5589, !5633, !5634, !5635}
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !4541, file: !4542, line: 23, baseType: !1458, size: 32)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !4541, file: !4542, line: 24, baseType: !32, size: 32, offset: 32)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !4541, file: !4542, line: 25, baseType: !1375, size: 64, offset: 64)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !4541, file: !4542, line: 26, baseType: !1545, size: 64, offset: 128)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !4541, file: !4542, line: 27, baseType: !1665, size: 192, offset: 192)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !4541, file: !4542, line: 28, baseType: !591, size: 64, offset: 384)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !4541, file: !4542, line: 29, baseType: !591, size: 64, offset: 448)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !4541, file: !4542, line: 30, baseType: !32, size: 32, offset: 512)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !4541, file: !4542, line: 31, baseType: !771, size: 8, offset: 544)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !4541, file: !4542, line: 33, baseType: !284, size: 128, offset: 576)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !4541, file: !4542, line: 35, baseType: !4540, size: 64, offset: 704)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !4541, file: !4542, line: 36, baseType: !794, size: 8, offset: 768)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !4541, file: !4542, line: 37, baseType: !4557, size: 64, offset: 832)
!4557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4558, size: 64)
!4558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !4559, line: 53, size: 6592, elements: !4560)
!4559 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!4560 = !{!4561, !4562, !4563, !4564, !4567, !4568, !5568, !5569, !5570, !5571, !5579}
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !4558, file: !4559, line: 54, baseType: !1811, size: 64)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !4558, file: !4559, line: 60, baseType: !1811, size: 64, offset: 64)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !4558, file: !4559, line: 64, baseType: !312, size: 64, offset: 128)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !4558, file: !4559, line: 65, baseType: !4565, size: 64, offset: 192)
!4565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4566, size: 64)
!4566 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !4559, line: 65, flags: DIFlagFwdDecl)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4558, file: !4559, line: 66, baseType: !4267, size: 128, offset: 256)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !4558, file: !4559, line: 68, baseType: !4569, size: 5568, offset: 384)
!4569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !4570, line: 461, size: 5568, elements: !4571)
!4570 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!4571 = !{!4572, !4855, !4857, !5082, !5083, !5097, !5098, !5099, !5100, !5101, !5102, !5117, !5304, !5317, !5526, !5527, !5531, !5533, !5534, !5535, !5539, !5545, !5546, !5549, !5550, !5551, !5552, !5553, !5554, !5555, !5556, !5557, !5558, !5561, !5564, !5565, !5566, !5567}
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4569, file: !4570, line: 462, baseType: !4573, size: 512)
!4573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !4574, line: 64, size: 512, elements: !4575)
!4574 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!4575 = !{!4576, !4577, !4578, !4580, !4620, !4721, !4845, !4850, !4851, !4852, !4853, !4854}
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4573, file: !4574, line: 65, baseType: !292, size: 64)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4573, file: !4574, line: 66, baseType: !284, size: 128, offset: 64)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4573, file: !4574, line: 67, baseType: !4579, size: 64, offset: 192)
!4579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4573, size: 64)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !4573, file: !4574, line: 68, baseType: !4581, size: 64, offset: 256)
!4581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4582, size: 64)
!4582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !4574, line: 192, size: 704, elements: !4583)
!4583 = !{!4584, !4585, !4586, !4587}
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4582, file: !4574, line: 193, baseType: !284, size: 128)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !4582, file: !4574, line: 194, baseType: !1670, offset: 128)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4582, file: !4574, line: 195, baseType: !4573, size: 512, offset: 128)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !4582, file: !4574, line: 196, baseType: !4588, size: 64, offset: 640)
!4588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4589, size: 64)
!4589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4590)
!4590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !4574, line: 156, size: 192, elements: !4591)
!4591 = !{!4592, !4597, !4602}
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4590, file: !4574, line: 157, baseType: !4593, size: 64)
!4593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4594)
!4594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4595, size: 64)
!4595 = !DISubroutineType(types: !4596)
!4596 = !{!32, !4581, !4579}
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4590, file: !4574, line: 158, baseType: !4598, size: 64, offset: 64)
!4598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4599)
!4599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4600, size: 64)
!4600 = !DISubroutineType(types: !4601)
!4601 = !{!292, !4581, !4579}
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4590, file: !4574, line: 159, baseType: !4603, size: 64, offset: 128)
!4603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4604)
!4604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4605, size: 64)
!4605 = !DISubroutineType(types: !4606)
!4606 = !{!32, !4581, !4579, !4607}
!4607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4608, size: 64)
!4608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !4574, line: 148, size: 20736, elements: !4609)
!4609 = !{!4610, !4612, !4614, !4615, !4619}
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !4608, file: !4574, line: 149, baseType: !4611, size: 192)
!4611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, size: 192, elements: !1592)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !4608, file: !4574, line: 150, baseType: !4613, size: 4096, offset: 192)
!4613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, size: 4096, elements: !3812)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !4608, file: !4574, line: 151, baseType: !32, size: 32, offset: 4288)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4608, file: !4574, line: 152, baseType: !4616, size: 16384, offset: 4320)
!4616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 16384, elements: !4617)
!4617 = !{!4618}
!4618 = !DISubrange(count: 2048)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !4608, file: !4574, line: 153, baseType: !32, size: 32, offset: 20704)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !4573, file: !4574, line: 69, baseType: !4621, size: 64, offset: 320)
!4621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4622, size: 64)
!4622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !4574, line: 138, size: 448, elements: !4623)
!4623 = !{!4624, !4628, !4647, !4649, !4682, !4713, !4717}
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4622, file: !4574, line: 139, baseType: !4625, size: 64)
!4625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4626, size: 64)
!4626 = !DISubroutineType(types: !4627)
!4627 = !{null, !4579}
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !4622, file: !4574, line: 140, baseType: !4629, size: 64, offset: 64)
!4629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4630, size: 64)
!4630 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4631)
!4631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !4632, line: 230, size: 128, elements: !4633)
!4632 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!4633 = !{!4634, !4643}
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4631, file: !4632, line: 231, baseType: !4635, size: 64)
!4635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4636, size: 64)
!4636 = !DISubroutineType(types: !4637)
!4637 = !{!1521, !4579, !4638, !1038}
!4638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4639, size: 64)
!4639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !4632, line: 30, size: 128, elements: !4640)
!4640 = !{!4641, !4642}
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4639, file: !4632, line: 31, baseType: !292, size: 64)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4639, file: !4632, line: 32, baseType: !1379, size: 16, offset: 64)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4631, file: !4632, line: 232, baseType: !4644, size: 64, offset: 64)
!4644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4645, size: 64)
!4645 = !DISubroutineType(types: !4646)
!4646 = !{!1521, !4579, !4638, !292, !1039}
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !4622, file: !4574, line: 141, baseType: !4648, size: 64, offset: 128)
!4648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4638, size: 64)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !4622, file: !4574, line: 142, baseType: !4650, size: 64, offset: 192)
!4650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4651, size: 64)
!4651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4652, size: 64)
!4652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4653)
!4653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !4632, line: 84, size: 320, elements: !4654)
!4654 = !{!4655, !4656, !4660, !4679, !4680}
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4653, file: !4632, line: 85, baseType: !292, size: 64)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !4653, file: !4632, line: 86, baseType: !4657, size: 64, offset: 64)
!4657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4658, size: 64)
!4658 = !DISubroutineType(types: !4659)
!4659 = !{!1379, !4579, !4638, !32}
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !4653, file: !4632, line: 88, baseType: !4661, size: 64, offset: 128)
!4661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4662, size: 64)
!4662 = !DISubroutineType(types: !4663)
!4663 = !{!1379, !4579, !4664, !32}
!4664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4665, size: 64)
!4665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !4632, line: 168, size: 448, elements: !4666)
!4666 = !{!4667, !4668, !4669, !4670, !4674, !4675}
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4665, file: !4632, line: 169, baseType: !4639, size: 128)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4665, file: !4632, line: 170, baseType: !1039, size: 64, offset: 128)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !4665, file: !4632, line: 171, baseType: !591, size: 64, offset: 192)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4665, file: !4632, line: 172, baseType: !4671, size: 64, offset: 256)
!4671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4672, size: 64)
!4672 = !DISubroutineType(types: !4673)
!4673 = !{!1521, !1315, !4579, !4664, !1038, !1476, !1039}
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4665, file: !4632, line: 174, baseType: !4671, size: 64, offset: 320)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4665, file: !4632, line: 176, baseType: !4676, size: 64, offset: 384)
!4676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4677, size: 64)
!4677 = !DISubroutineType(types: !4678)
!4678 = !{!32, !1315, !4579, !4664, !2098}
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !4653, file: !4632, line: 90, baseType: !4648, size: 64, offset: 192)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !4653, file: !4632, line: 91, baseType: !4681, size: 64, offset: 256)
!4681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4664, size: 64)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !4622, file: !4574, line: 143, baseType: !4683, size: 64, offset: 256)
!4683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4684, size: 64)
!4684 = !DISubroutineType(types: !4685)
!4685 = !{!4686, !4579}
!4686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4687, size: 64)
!4687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4688)
!4688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !447, line: 39, size: 384, elements: !4689)
!4689 = !{!4690, !4696, !4700, !4704, !4708, !4712}
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4688, file: !447, line: 40, baseType: !4691, size: 32)
!4691 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !447, line: 26, baseType: !7, size: 32, elements: !4692)
!4692 = !{!4693, !4694, !4695}
!4693 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!4694 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!4695 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !4688, file: !447, line: 41, baseType: !4697, size: 64, offset: 64)
!4697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4698, size: 64)
!4698 = !DISubroutineType(types: !4699)
!4699 = !{!771}
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !4688, file: !447, line: 42, baseType: !4701, size: 64, offset: 128)
!4701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4702, size: 64)
!4702 = !DISubroutineType(types: !4703)
!4703 = !{!591}
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !4688, file: !447, line: 43, baseType: !4705, size: 64, offset: 192)
!4705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4706, size: 64)
!4706 = !DISubroutineType(types: !4707)
!4707 = !{!3258, !445}
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !4688, file: !447, line: 44, baseType: !4709, size: 64, offset: 256)
!4709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4710, size: 64)
!4710 = !DISubroutineType(types: !4711)
!4711 = !{!3258}
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !4688, file: !447, line: 45, baseType: !1415, size: 64, offset: 320)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4622, file: !4574, line: 144, baseType: !4714, size: 64, offset: 320)
!4714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4715, size: 64)
!4715 = !DISubroutineType(types: !4716)
!4716 = !{!3258, !4579}
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4622, file: !4574, line: 145, baseType: !4718, size: 64, offset: 384)
!4718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4719, size: 64)
!4719 = !DISubroutineType(types: !4720)
!4720 = !{null, !4579, !2904, !2905}
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !4573, file: !4574, line: 70, baseType: !4722, size: 64, offset: 384)
!4722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4723, size: 64)
!4723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1565, line: 123, size: 1024, elements: !4724)
!4724 = !{!4725, !4726, !4727, !4728, !4729, !4730, !4731, !4732, !4838, !4839, !4840, !4841, !4842}
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4723, file: !1565, line: 124, baseType: !383, size: 32)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4723, file: !1565, line: 125, baseType: !383, size: 32, offset: 32)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4723, file: !1565, line: 135, baseType: !4722, size: 64, offset: 64)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4723, file: !1565, line: 136, baseType: !292, size: 64, offset: 128)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !4723, file: !1565, line: 138, baseType: !433, size: 192, align: 64, offset: 192)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4723, file: !1565, line: 140, baseType: !3258, size: 64, offset: 384)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4723, file: !1565, line: 141, baseType: !7, size: 32, offset: 448)
!4732 = !DIDerivedType(tag: DW_TAG_member, scope: !4723, file: !1565, line: 142, baseType: !4733, size: 256, offset: 512)
!4733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4723, file: !1565, line: 142, size: 256, elements: !4734)
!4734 = !{!4735, !4775, !4779}
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4733, file: !1565, line: 143, baseType: !4736, size: 192)
!4736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1565, line: 91, size: 192, elements: !4737)
!4737 = !{!4738, !4739, !4740}
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !4736, file: !1565, line: 92, baseType: !312, size: 64)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4736, file: !1565, line: 94, baseType: !1750, size: 64, offset: 64)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !4736, file: !1565, line: 100, baseType: !4741, size: 64, offset: 128)
!4741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4742, size: 64)
!4742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1565, line: 180, size: 704, elements: !4743)
!4743 = !{!4744, !4745, !4746, !4747, !4748, !4749, !4773, !4774}
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4742, file: !1565, line: 182, baseType: !4722, size: 64)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4742, file: !1565, line: 183, baseType: !7, size: 32, offset: 64)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !4742, file: !1565, line: 186, baseType: !3001, size: 192, offset: 128)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !4742, file: !1565, line: 187, baseType: !987, size: 32, offset: 320)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !4742, file: !1565, line: 188, baseType: !987, size: 32, offset: 352)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !4742, file: !1565, line: 189, baseType: !4750, size: 64, offset: 384)
!4750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4751, size: 64)
!4751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1565, line: 168, size: 320, elements: !4752)
!4752 = !{!4753, !4757, !4761, !4765, !4769}
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !4751, file: !1565, line: 169, baseType: !4754, size: 64)
!4754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4755, size: 64)
!4755 = !DISubroutineType(types: !4756)
!4756 = !{!32, !1653, !4741}
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !4751, file: !1565, line: 171, baseType: !4758, size: 64, offset: 64)
!4758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4759, size: 64)
!4759 = !DISubroutineType(types: !4760)
!4760 = !{!32, !4722, !292, !1379}
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !4751, file: !1565, line: 173, baseType: !4762, size: 64, offset: 128)
!4762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4763, size: 64)
!4763 = !DISubroutineType(types: !4764)
!4764 = !{!32, !4722}
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !4751, file: !1565, line: 174, baseType: !4766, size: 64, offset: 192)
!4766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4767, size: 64)
!4767 = !DISubroutineType(types: !4768)
!4768 = !{!32, !4722, !4722, !292}
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !4751, file: !1565, line: 176, baseType: !4770, size: 64, offset: 256)
!4770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4771, size: 64)
!4771 = !DISubroutineType(types: !4772)
!4772 = !{!32, !1653, !4722, !4741}
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !4742, file: !1565, line: 192, baseType: !284, size: 128, offset: 448)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !4742, file: !1565, line: 194, baseType: !1889, size: 128, offset: 576)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !4733, file: !1565, line: 144, baseType: !4776, size: 64)
!4776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1565, line: 103, size: 64, elements: !4777)
!4777 = !{!4778}
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !4776, file: !1565, line: 104, baseType: !4722, size: 64)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4733, file: !1565, line: 145, baseType: !4780, size: 256)
!4780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1565, line: 107, size: 256, elements: !4781)
!4781 = !{!4782, !4833, !4836, !4837}
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4780, file: !1565, line: 108, baseType: !4783, size: 64)
!4783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4784, size: 64)
!4784 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4785)
!4785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1565, line: 217, size: 768, elements: !4786)
!4786 = !{!4787, !4807, !4811, !4812, !4813, !4814, !4815, !4819, !4820, !4821, !4822, !4829}
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4785, file: !1565, line: 222, baseType: !4788, size: 64)
!4788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4789, size: 64)
!4789 = !DISubroutineType(types: !4790)
!4790 = !{!32, !4791}
!4791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4792, size: 64)
!4792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1565, line: 197, size: 1088, elements: !4793)
!4793 = !{!4794, !4795, !4796, !4797, !4798, !4799, !4800, !4801, !4802, !4803, !4804, !4805, !4806}
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4792, file: !1565, line: 199, baseType: !4722, size: 64)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4792, file: !1565, line: 200, baseType: !1315, size: 64, offset: 64)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !4792, file: !1565, line: 201, baseType: !1653, size: 64, offset: 128)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4792, file: !1565, line: 202, baseType: !591, size: 64, offset: 192)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4792, file: !1565, line: 205, baseType: !1665, size: 192, offset: 256)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !4792, file: !1565, line: 206, baseType: !1665, size: 192, offset: 448)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4792, file: !1565, line: 207, baseType: !32, size: 32, offset: 640)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4792, file: !1565, line: 208, baseType: !284, size: 128, offset: 704)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !4792, file: !1565, line: 209, baseType: !1038, size: 64, offset: 832)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4792, file: !1565, line: 211, baseType: !1039, size: 64, offset: 896)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !4792, file: !1565, line: 212, baseType: !771, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !4792, file: !1565, line: 213, baseType: !771, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !4792, file: !1565, line: 214, baseType: !2126, size: 64, offset: 1024)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4785, file: !1565, line: 223, baseType: !4808, size: 64, offset: 64)
!4808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4809, size: 64)
!4809 = !DISubroutineType(types: !4810)
!4810 = !{null, !4791}
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !4785, file: !1565, line: 236, baseType: !1704, size: 64, offset: 128)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !4785, file: !1565, line: 238, baseType: !1691, size: 64, offset: 192)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !4785, file: !1565, line: 239, baseType: !1700, size: 64, offset: 256)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !4785, file: !1565, line: 240, baseType: !1696, size: 64, offset: 320)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4785, file: !1565, line: 242, baseType: !4816, size: 64, offset: 384)
!4816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4817, size: 64)
!4817 = !DISubroutineType(types: !4818)
!4818 = !{!1521, !4791, !1038, !1039, !1476}
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4785, file: !1565, line: 252, baseType: !1039, size: 64, offset: 448)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !4785, file: !1565, line: 259, baseType: !771, size: 8, offset: 512)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4785, file: !1565, line: 260, baseType: !4816, size: 64, offset: 576)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4785, file: !1565, line: 263, baseType: !4823, size: 64, offset: 640)
!4823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4824, size: 64)
!4824 = !DISubroutineType(types: !4825)
!4825 = !{!4826, !4791, !4827}
!4826 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !525, line: 52, baseType: !7)
!4827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4828, size: 64)
!4828 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1565, line: 27, flags: DIFlagFwdDecl)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4785, file: !1565, line: 266, baseType: !4830, size: 64, offset: 704)
!4830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4831, size: 64)
!4831 = !DISubroutineType(types: !4832)
!4832 = !{!32, !4791, !2098}
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4780, file: !1565, line: 109, baseType: !4834, size: 64, offset: 64)
!4834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4835, size: 64)
!4835 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1565, line: 31, flags: DIFlagFwdDecl)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4780, file: !1565, line: 110, baseType: !1476, size: 64, offset: 128)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !4780, file: !1565, line: 111, baseType: !4722, size: 64, offset: 192)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4723, file: !1565, line: 148, baseType: !591, size: 64, offset: 768)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4723, file: !1565, line: 154, baseType: !331, size: 64, offset: 832)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4723, file: !1565, line: 156, baseType: !476, size: 16, offset: 896)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4723, file: !1565, line: 157, baseType: !1379, size: 16, offset: 912)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !4723, file: !1565, line: 158, baseType: !4843, size: 64, offset: 960)
!4843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4844, size: 64)
!4844 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1565, line: 32, flags: DIFlagFwdDecl)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4573, file: !4574, line: 71, baseType: !4846, size: 32, offset: 448)
!4846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !4847, line: 19, size: 32, elements: !4848)
!4847 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!4848 = !{!4849}
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4846, file: !4847, line: 20, baseType: !568, size: 32)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !4573, file: !4574, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !4573, file: !4574, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !4573, file: !4574, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !4573, file: !4574, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !4573, file: !4574, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4569, file: !4570, line: 463, baseType: !4856, size: 64, offset: 512)
!4856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4569, size: 64)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4569, file: !4570, line: 465, baseType: !4858, size: 64, offset: 576)
!4858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4859, size: 64)
!4859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !4860, line: 88, size: 1664, elements: !4861)
!4860 = !DIFile(filename: "drivers/base/base.h", directory: "/home/lizy2001/genbc/linux")
!4861 = !{!4862, !4879, !4880, !4881, !4882, !4883, !4884, !5079, !5080, !5081}
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "klist_children", scope: !4859, file: !4860, line: 89, baseType: !4863, size: 256, align: 64)
!4863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "klist", file: !4864, line: 18, size: 256, align: 64, elements: !4865)
!4864 = !DIFile(filename: "./include/linux/klist.h", directory: "/home/lizy2001/genbc/linux")
!4865 = !{!4866, !4867, !4868, !4878}
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "k_lock", scope: !4863, file: !4864, line: 19, baseType: !1670)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "k_list", scope: !4863, file: !4864, line: 20, baseType: !284, size: 128)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4863, file: !4864, line: 21, baseType: !4869, size: 64, offset: 128)
!4869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4870, size: 64)
!4870 = !DISubroutineType(types: !4871)
!4871 = !{null, !4872}
!4872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4873, size: 64)
!4873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "klist_node", file: !4864, line: 37, size: 256, elements: !4874)
!4874 = !{!4875, !4876, !4877}
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "n_klist", scope: !4873, file: !4864, line: 38, baseType: !591, size: 64)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "n_node", scope: !4873, file: !4864, line: 39, baseType: !284, size: 128, offset: 64)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "n_ref", scope: !4873, file: !4864, line: 40, baseType: !4846, size: 32, offset: 192)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !4863, file: !4864, line: 22, baseType: !4869, size: 64, offset: 192)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "knode_parent", scope: !4859, file: !4860, line: 90, baseType: !4873, size: 256, offset: 256)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "knode_driver", scope: !4859, file: !4860, line: 91, baseType: !4873, size: 256, offset: 512)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "knode_bus", scope: !4859, file: !4860, line: 92, baseType: !4873, size: 256, offset: 768)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "knode_class", scope: !4859, file: !4860, line: 93, baseType: !4873, size: 256, offset: 1024)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_probe", scope: !4859, file: !4860, line: 94, baseType: !284, size: 128, offset: 1280)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "async_driver", scope: !4859, file: !4860, line: 95, baseType: !4885, size: 64, offset: 1408)
!4885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4886, size: 64)
!4886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !4887, line: 95, size: 1152, elements: !4888)
!4887 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!4888 = !{!4889, !4890, !5015, !5016, !5017, !5018, !5024, !5038, !5049, !5050, !5051, !5052, !5053, !5054, !5055, !5056, !5057, !5058, !5059}
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4886, file: !4887, line: 96, baseType: !292, size: 64)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4886, file: !4887, line: 97, baseType: !4891, size: 64, offset: 64)
!4891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4892, size: 64)
!4892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !4893, line: 82, size: 1408, elements: !4894)
!4893 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!4894 = !{!4895, !4896, !4897, !4898, !4899, !4900, !4901, !4905, !4909, !4913, !4917, !4918, !4919, !4920, !4921, !4930, !4931, !4932, !4933, !4961, !4965, !5013, !5014}
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4892, file: !4893, line: 83, baseType: !292, size: 64)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4892, file: !4893, line: 84, baseType: !292, size: 64, offset: 64)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !4892, file: !4893, line: 85, baseType: !4856, size: 64, offset: 128)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !4892, file: !4893, line: 86, baseType: !4650, size: 64, offset: 192)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4892, file: !4893, line: 87, baseType: !4650, size: 64, offset: 256)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !4892, file: !4893, line: 88, baseType: !4650, size: 64, offset: 320)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4892, file: !4893, line: 90, baseType: !4902, size: 64, offset: 384)
!4902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4903, size: 64)
!4903 = !DISubroutineType(types: !4904)
!4904 = !{!32, !4856, !4885}
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4892, file: !4893, line: 91, baseType: !4906, size: 64, offset: 448)
!4906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4907, size: 64)
!4907 = !DISubroutineType(types: !4908)
!4908 = !{!32, !4856, !4607}
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4892, file: !4893, line: 92, baseType: !4910, size: 64, offset: 512)
!4910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4911, size: 64)
!4911 = !DISubroutineType(types: !4912)
!4912 = !{!32, !4856}
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4892, file: !4893, line: 93, baseType: !4914, size: 64, offset: 576)
!4914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4915, size: 64)
!4915 = !DISubroutineType(types: !4916)
!4916 = !{null, !4856}
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4892, file: !4893, line: 94, baseType: !4910, size: 64, offset: 640)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4892, file: !4893, line: 95, baseType: !4914, size: 64, offset: 704)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4892, file: !4893, line: 97, baseType: !4910, size: 64, offset: 768)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4892, file: !4893, line: 98, baseType: !4910, size: 64, offset: 832)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4892, file: !4893, line: 100, baseType: !4922, size: 64, offset: 896)
!4922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4923, size: 64)
!4923 = !DISubroutineType(types: !4924)
!4924 = !{!32, !4856, !4925}
!4925 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !4926, line: 52, baseType: !4927)
!4926 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!4927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !4926, line: 50, size: 32, elements: !4928)
!4928 = !{!4929}
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4927, file: !4926, line: 51, baseType: !32, size: 32)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4892, file: !4893, line: 101, baseType: !4910, size: 64, offset: 960)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !4892, file: !4893, line: 103, baseType: !4910, size: 64, offset: 1024)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !4892, file: !4893, line: 105, baseType: !4910, size: 64, offset: 1088)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4892, file: !4893, line: 107, baseType: !4934, size: 64, offset: 1152)
!4934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4935, size: 64)
!4935 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4936)
!4936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !4926, line: 278, size: 1472, elements: !4937)
!4937 = !{!4938, !4939, !4940, !4941, !4942, !4943, !4944, !4945, !4946, !4947, !4948, !4949, !4950, !4951, !4952, !4953, !4954, !4955, !4956, !4957, !4958, !4959, !4960}
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4936, file: !4926, line: 279, baseType: !4910, size: 64)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4936, file: !4926, line: 280, baseType: !4914, size: 64, offset: 64)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4936, file: !4926, line: 281, baseType: !4910, size: 64, offset: 128)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4936, file: !4926, line: 282, baseType: !4910, size: 64, offset: 192)
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !4936, file: !4926, line: 283, baseType: !4910, size: 64, offset: 256)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !4936, file: !4926, line: 284, baseType: !4910, size: 64, offset: 320)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !4936, file: !4926, line: 285, baseType: !4910, size: 64, offset: 384)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !4936, file: !4926, line: 286, baseType: !4910, size: 64, offset: 448)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !4936, file: !4926, line: 287, baseType: !4910, size: 64, offset: 512)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !4936, file: !4926, line: 288, baseType: !4910, size: 64, offset: 576)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !4936, file: !4926, line: 289, baseType: !4910, size: 64, offset: 640)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !4936, file: !4926, line: 290, baseType: !4910, size: 64, offset: 704)
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !4936, file: !4926, line: 291, baseType: !4910, size: 64, offset: 768)
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !4936, file: !4926, line: 292, baseType: !4910, size: 64, offset: 832)
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !4936, file: !4926, line: 293, baseType: !4910, size: 64, offset: 896)
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !4936, file: !4926, line: 294, baseType: !4910, size: 64, offset: 960)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !4936, file: !4926, line: 295, baseType: !4910, size: 64, offset: 1024)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !4936, file: !4926, line: 296, baseType: !4910, size: 64, offset: 1088)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !4936, file: !4926, line: 297, baseType: !4910, size: 64, offset: 1152)
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !4936, file: !4926, line: 298, baseType: !4910, size: 64, offset: 1216)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !4936, file: !4926, line: 299, baseType: !4910, size: 64, offset: 1280)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !4936, file: !4926, line: 300, baseType: !4910, size: 64, offset: 1344)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !4936, file: !4926, line: 301, baseType: !4910, size: 64, offset: 1408)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !4892, file: !4893, line: 109, baseType: !4962, size: 64, offset: 1216)
!4962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4963, size: 64)
!4963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4964)
!4964 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !4893, line: 109, flags: DIFlagFwdDecl)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4892, file: !4893, line: 111, baseType: !4966, size: 64, offset: 1280)
!4966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4967, size: 64)
!4967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !4860, line: 40, size: 2880, elements: !4968)
!4968 = !{!4969, !4970, !4971, !4972, !4973, !4974, !4975, !4976, !4977, !4978, !4979, !4980}
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "subsys", scope: !4967, file: !4860, line: 41, baseType: !4582, size: 704)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "devices_kset", scope: !4967, file: !4860, line: 42, baseType: !4581, size: 64, offset: 704)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "interfaces", scope: !4967, file: !4860, line: 43, baseType: !284, size: 128, offset: 768)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4967, file: !4860, line: 44, baseType: !1665, size: 192, offset: 896)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "drivers_kset", scope: !4967, file: !4860, line: 46, baseType: !4581, size: 64, offset: 1088)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "klist_devices", scope: !4967, file: !4860, line: 47, baseType: !4863, size: 256, align: 64, offset: 1152)
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "klist_drivers", scope: !4967, file: !4860, line: 48, baseType: !4863, size: 256, align: 64, offset: 1408)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "bus_notifier", scope: !4967, file: !4860, line: 49, baseType: !3142, size: 320, offset: 1664)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "drivers_autoprobe", scope: !4967, file: !4860, line: 50, baseType: !7, size: 1, offset: 1984, flags: DIFlagBitField, extraData: i64 1984)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4967, file: !4860, line: 51, baseType: !4891, size: 64, offset: 2048)
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "glue_dirs", scope: !4967, file: !4860, line: 53, baseType: !4582, size: 704, offset: 2112)
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4967, file: !4860, line: 54, baseType: !4981, size: 64, offset: 2816)
!4981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4982, size: 64)
!4982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4983, line: 54, size: 960, elements: !4984)
!4983 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4984 = !{!4985, !4986, !4987, !4988, !4989, !4990, !4991, !4996, !5000, !5001, !5002, !5003, !5007, !5011, !5012}
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4982, file: !4983, line: 55, baseType: !292, size: 64)
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4982, file: !4983, line: 56, baseType: !980, size: 64, offset: 64)
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4982, file: !4983, line: 58, baseType: !4650, size: 64, offset: 128)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4982, file: !4983, line: 59, baseType: !4650, size: 64, offset: 192)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4982, file: !4983, line: 60, baseType: !4579, size: 64, offset: 256)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4982, file: !4983, line: 62, baseType: !4906, size: 64, offset: 320)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4982, file: !4983, line: 63, baseType: !4992, size: 64, offset: 384)
!4992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4993, size: 64)
!4993 = !DISubroutineType(types: !4994)
!4994 = !{!1038, !4856, !4995}
!4995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4982, file: !4983, line: 65, baseType: !4997, size: 64, offset: 448)
!4997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4998, size: 64)
!4998 = !DISubroutineType(types: !4999)
!4999 = !{null, !4981}
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4982, file: !4983, line: 66, baseType: !4914, size: 64, offset: 512)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4982, file: !4983, line: 68, baseType: !4910, size: 64, offset: 576)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4982, file: !4983, line: 70, baseType: !4686, size: 64, offset: 640)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4982, file: !4983, line: 71, baseType: !5004, size: 64, offset: 704)
!5004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5005, size: 64)
!5005 = !DISubroutineType(types: !5006)
!5006 = !{!3258, !4856}
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4982, file: !4983, line: 73, baseType: !5008, size: 64, offset: 768)
!5008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5009, size: 64)
!5009 = !DISubroutineType(types: !5010)
!5010 = !{null, !4856, !2904, !2905}
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4982, file: !4983, line: 75, baseType: !4934, size: 64, offset: 832)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4982, file: !4983, line: 77, baseType: !4966, size: 64, offset: 896)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4892, file: !4893, line: 112, baseType: !1585, offset: 1344)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !4892, file: !4893, line: 114, baseType: !771, size: 8, offset: 1344)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4886, file: !4887, line: 99, baseType: !980, size: 64, offset: 128)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !4886, file: !4887, line: 100, baseType: !292, size: 64, offset: 192)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !4886, file: !4887, line: 102, baseType: !771, size: 8, offset: 256)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !4886, file: !4887, line: 103, baseType: !5019, size: 32, offset: 288)
!5019 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !4887, line: 44, baseType: !7, size: 32, elements: !5020)
!5020 = !{!5021, !5022, !5023}
!5021 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!5022 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!5023 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !4886, file: !4887, line: 105, baseType: !5025, size: 64, offset: 320)
!5025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5026, size: 64)
!5026 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5027)
!5027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !5028, line: 262, size: 1600, elements: !5029)
!5028 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!5029 = !{!5030, !5032, !5033, !5037}
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5027, file: !5028, line: 263, baseType: !5031, size: 256)
!5031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 256, elements: !819)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5027, file: !5028, line: 264, baseType: !5031, size: 256, offset: 256)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !5027, file: !5028, line: 265, baseType: !5034, size: 1024, offset: 512)
!5034 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 1024, elements: !5035)
!5035 = !{!5036}
!5036 = !DISubrange(count: 128)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5027, file: !5028, line: 266, baseType: !3258, size: 64, offset: 1536)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !4886, file: !4887, line: 106, baseType: !5039, size: 64, offset: 384)
!5039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5040, size: 64)
!5040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5041)
!5041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !5028, line: 210, size: 256, elements: !5042)
!5042 = !{!5043, !5045, !5047, !5048}
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5041, file: !5028, line: 211, baseType: !5044, size: 72)
!5044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 72, elements: !3087)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !5041, file: !5028, line: 212, baseType: !5046, size: 64, offset: 128)
!5046 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !5028, line: 14, baseType: !312)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !5041, file: !5028, line: 213, baseType: !493, size: 32, offset: 192)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !5041, file: !5028, line: 214, baseType: !493, size: 32, offset: 224)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4886, file: !4887, line: 108, baseType: !4910, size: 64, offset: 448)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4886, file: !4887, line: 109, baseType: !4914, size: 64, offset: 512)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4886, file: !4887, line: 110, baseType: !4910, size: 64, offset: 576)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4886, file: !4887, line: 111, baseType: !4914, size: 64, offset: 640)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4886, file: !4887, line: 112, baseType: !4922, size: 64, offset: 704)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4886, file: !4887, line: 113, baseType: !4910, size: 64, offset: 768)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4886, file: !4887, line: 114, baseType: !4650, size: 64, offset: 832)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4886, file: !4887, line: 115, baseType: !4650, size: 64, offset: 896)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4886, file: !4887, line: 117, baseType: !4934, size: 64, offset: 960)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !4886, file: !4887, line: 118, baseType: !4914, size: 64, offset: 1024)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4886, file: !4887, line: 120, baseType: !5060, size: 64, offset: 1088)
!5060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5061, size: 64)
!5061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !4860, line: 58, size: 1152, elements: !5062)
!5062 = !{!5063, !5064, !5065, !5066, !5078}
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5061, file: !4860, line: 59, baseType: !4573, size: 512)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "klist_devices", scope: !5061, file: !4860, line: 60, baseType: !4863, size: 256, align: 64, offset: 512)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "knode_bus", scope: !5061, file: !4860, line: 61, baseType: !4873, size: 256, offset: 768)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "mkobj", scope: !5061, file: !4860, line: 62, baseType: !5067, size: 64, offset: 1024)
!5067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5068, size: 64)
!5068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_kobject", file: !5069, line: 46, size: 768, elements: !5070)
!5069 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!5070 = !{!5071, !5072, !5073, !5074, !5077}
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5068, file: !5069, line: 47, baseType: !4573, size: 512)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !5068, file: !5069, line: 48, baseType: !980, size: 64, offset: 512)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "drivers_dir", scope: !5068, file: !5069, line: 49, baseType: !4579, size: 64, offset: 576)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "mp", scope: !5068, file: !5069, line: 50, baseType: !5075, size: 64, offset: 640)
!5075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5076, size: 64)
!5076 = !DICompositeType(tag: DW_TAG_structure_type, name: "module_param_attrs", file: !5069, line: 50, flags: DIFlagFwdDecl)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "kobj_completion", scope: !5068, file: !5069, line: 51, baseType: !2596, size: 64, offset: 704)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !5061, file: !4860, line: 63, baseType: !4885, size: 64, offset: 1088)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_probe_reason", scope: !4859, file: !4860, line: 96, baseType: !1038, size: 64, offset: 1472)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4859, file: !4860, line: 97, baseType: !4856, size: 64, offset: 1536)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !4859, file: !4860, line: 98, baseType: !794, size: 1, offset: 1600, flags: DIFlagBitField, extraData: i64 1600)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !4569, file: !4570, line: 467, baseType: !292, size: 64, offset: 640)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4569, file: !4570, line: 468, baseType: !5084, size: 64, offset: 704)
!5084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5085, size: 64)
!5085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5086)
!5086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !4570, line: 87, size: 384, elements: !5087)
!5087 = !{!5088, !5089, !5090, !5091, !5095, !5096}
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5086, file: !4570, line: 88, baseType: !292, size: 64)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !5086, file: !4570, line: 89, baseType: !4650, size: 64, offset: 64)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !5086, file: !4570, line: 90, baseType: !4906, size: 64, offset: 128)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !5086, file: !4570, line: 91, baseType: !5092, size: 64, offset: 192)
!5092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5093, size: 64)
!5093 = !DISubroutineType(types: !5094)
!5094 = !{!1038, !4856, !4995, !2904, !2905}
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5086, file: !4570, line: 93, baseType: !4914, size: 64, offset: 256)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5086, file: !4570, line: 95, baseType: !4934, size: 64, offset: 320)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4569, file: !4570, line: 470, baseType: !4891, size: 64, offset: 768)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4569, file: !4570, line: 471, baseType: !4885, size: 64, offset: 832)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !4569, file: !4570, line: 473, baseType: !591, size: 64, offset: 896)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4569, file: !4570, line: 475, baseType: !591, size: 64, offset: 960)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4569, file: !4570, line: 480, baseType: !1665, size: 192, offset: 1024)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !4569, file: !4570, line: 484, baseType: !5103, size: 576, offset: 1216)
!5103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !4570, line: 361, size: 576, elements: !5104)
!5104 = !{!5105, !5106, !5107, !5108, !5109, !5110}
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !5103, file: !4570, line: 362, baseType: !284, size: 128)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !5103, file: !4570, line: 363, baseType: !284, size: 128, offset: 128)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !5103, file: !4570, line: 364, baseType: !284, size: 128, offset: 256)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !5103, file: !4570, line: 365, baseType: !284, size: 128, offset: 384)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !5103, file: !4570, line: 366, baseType: !771, size: 8, offset: 512)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5103, file: !4570, line: 367, baseType: !5111, size: 32, offset: 544)
!5111 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !4570, line: 343, baseType: !7, size: 32, elements: !5112)
!5112 = !{!5113, !5114, !5115, !5116}
!5113 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!5114 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!5115 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!5116 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4569, file: !4570, line: 485, baseType: !5118, size: 2304, offset: 1792)
!5118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !4926, line: 565, size: 2304, elements: !5119)
!5119 = !{!5120, !5121, !5122, !5123, !5124, !5125, !5126, !5127, !5128, !5129, !5130, !5131, !5132, !5133, !5134, !5135, !5168, !5169, !5170, !5171, !5172, !5173, !5174, !5175, !5176, !5177, !5178, !5179, !5180, !5181, !5182, !5183, !5184, !5185, !5186, !5187, !5188, !5189, !5190, !5191, !5192, !5200, !5207, !5208, !5209, !5210, !5211, !5212, !5213, !5223, !5227}
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !5118, file: !4926, line: 566, baseType: !4925, size: 32)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !5118, file: !4926, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !5118, file: !4926, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !5118, file: !4926, line: 569, baseType: !771, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !5118, file: !4926, line: 570, baseType: !771, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !5118, file: !4926, line: 571, baseType: !771, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !5118, file: !4926, line: 572, baseType: !771, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !5118, file: !4926, line: 573, baseType: !771, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !5118, file: !4926, line: 574, baseType: !771, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !5118, file: !4926, line: 575, baseType: !771, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !5118, file: !4926, line: 576, baseType: !771, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !5118, file: !4926, line: 577, baseType: !987, size: 32, offset: 64)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5118, file: !4926, line: 578, baseType: !1670, offset: 96)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5118, file: !4926, line: 580, baseType: !284, size: 128, offset: 128)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !5118, file: !4926, line: 581, baseType: !2597, size: 192, offset: 256)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !5118, file: !4926, line: 582, baseType: !5136, size: 64, offset: 448)
!5136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5137, size: 64)
!5137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !5138, line: 43, size: 1472, elements: !5139)
!5138 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!5139 = !{!5140, !5141, !5142, !5143, !5144, !5153, !5154, !5155, !5156, !5157, !5158, !5159, !5160, !5161, !5162, !5163, !5164, !5165, !5166, !5167}
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5137, file: !5138, line: 44, baseType: !292, size: 64)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5137, file: !5138, line: 45, baseType: !32, size: 32, offset: 64)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5137, file: !5138, line: 46, baseType: !284, size: 128, offset: 128)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5137, file: !5138, line: 47, baseType: !1670, offset: 256)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !5137, file: !5138, line: 48, baseType: !5145, size: 64, offset: 256)
!5145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5146, size: 64)
!5146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !5147, line: 31, size: 192, elements: !5148)
!5147 = !DIFile(filename: "drivers/base/power/power.h", directory: "/home/lizy2001/genbc/linux")
!5148 = !{!5149, !5150, !5151, !5152}
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5146, file: !5147, line: 32, baseType: !4856, size: 64)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5146, file: !5147, line: 33, baseType: !7, size: 32, offset: 64)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !5146, file: !5147, line: 34, baseType: !32, size: 32, offset: 96)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5146, file: !5147, line: 35, baseType: !292, size: 64, offset: 128)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !5137, file: !5138, line: 49, baseType: !3235, size: 320, offset: 320)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !5137, file: !5138, line: 50, baseType: !312, size: 64, offset: 640)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !5137, file: !5138, line: 51, baseType: !453, size: 64, offset: 704)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !5137, file: !5138, line: 52, baseType: !453, size: 64, offset: 768)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !5137, file: !5138, line: 53, baseType: !453, size: 64, offset: 832)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !5137, file: !5138, line: 54, baseType: !453, size: 64, offset: 896)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !5137, file: !5138, line: 55, baseType: !453, size: 64, offset: 960)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !5137, file: !5138, line: 56, baseType: !312, size: 64, offset: 1024)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !5137, file: !5138, line: 57, baseType: !312, size: 64, offset: 1088)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !5137, file: !5138, line: 58, baseType: !312, size: 64, offset: 1152)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !5137, file: !5138, line: 59, baseType: !312, size: 64, offset: 1216)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !5137, file: !5138, line: 60, baseType: !312, size: 64, offset: 1280)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5137, file: !5138, line: 61, baseType: !4856, size: 64, offset: 1344)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !5137, file: !5138, line: 62, baseType: !771, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !5137, file: !5138, line: 63, baseType: !771, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !5118, file: !4926, line: 583, baseType: !771, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !5118, file: !4926, line: 584, baseType: !771, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !5118, file: !4926, line: 585, baseType: !771, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !5118, file: !4926, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !5118, file: !4926, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !5118, file: !4926, line: 592, baseType: !2397, size: 512, offset: 576)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !5118, file: !4926, line: 593, baseType: !331, size: 64, offset: 1088)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5118, file: !4926, line: 594, baseType: !2829, size: 256, offset: 1152)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !5118, file: !4926, line: 595, baseType: !1889, size: 128, offset: 1408)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !5118, file: !4926, line: 596, baseType: !5145, size: 64, offset: 1536)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !5118, file: !4926, line: 597, baseType: !383, size: 32, offset: 1600)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !5118, file: !4926, line: 598, baseType: !383, size: 32, offset: 1632)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !5118, file: !4926, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !5118, file: !4926, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !5118, file: !4926, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !5118, file: !4926, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !5118, file: !4926, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !5118, file: !4926, line: 604, baseType: !771, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !5118, file: !4926, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !5118, file: !4926, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !5118, file: !4926, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !5118, file: !4926, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !5118, file: !4926, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !5118, file: !4926, line: 610, baseType: !7, size: 32, offset: 1696)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5118, file: !4926, line: 611, baseType: !5193, size: 32, offset: 1728)
!5193 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !4926, line: 524, baseType: !7, size: 32, elements: !5194)
!5194 = !{!5195, !5196, !5197, !5198, !5199}
!5195 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!5196 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!5197 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!5198 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!5199 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !5118, file: !4926, line: 612, baseType: !5201, size: 32, offset: 1760)
!5201 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !4926, line: 502, baseType: !7, size: 32, elements: !5202)
!5202 = !{!5203, !5204, !5205, !5206}
!5203 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!5204 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!5205 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!5206 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !5118, file: !4926, line: 613, baseType: !32, size: 32, offset: 1792)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !5118, file: !4926, line: 614, baseType: !32, size: 32, offset: 1824)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !5118, file: !4926, line: 615, baseType: !331, size: 64, offset: 1856)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !5118, file: !4926, line: 616, baseType: !331, size: 64, offset: 1920)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !5118, file: !4926, line: 617, baseType: !331, size: 64, offset: 1984)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !5118, file: !4926, line: 618, baseType: !331, size: 64, offset: 2048)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !5118, file: !4926, line: 620, baseType: !5214, size: 64, offset: 2112)
!5214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5215, size: 64)
!5215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !4926, line: 536, size: 256, elements: !5216)
!5216 = !{!5217, !5218, !5219, !5220}
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5215, file: !4926, line: 537, baseType: !1670)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !5215, file: !4926, line: 538, baseType: !7, size: 32)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !5215, file: !4926, line: 540, baseType: !284, size: 128, offset: 64)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !5215, file: !4926, line: 543, baseType: !5221, size: 64, offset: 192)
!5221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5222, size: 64)
!5222 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !4926, line: 534, flags: DIFlagFwdDecl)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !5118, file: !4926, line: 621, baseType: !5224, size: 64, offset: 2176)
!5224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5225, size: 64)
!5225 = !DISubroutineType(types: !5226)
!5226 = !{null, !4856, !2545}
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !5118, file: !4926, line: 622, baseType: !5228, size: 64, offset: 2240)
!5228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5229, size: 64)
!5229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !5230, line: 117, size: 2304, elements: !5231)
!5230 = !DIFile(filename: "./include/linux/pm_qos.h", directory: "/home/lizy2001/genbc/linux")
!5231 = !{!5232, !5251, !5252, !5259, !5264, !5302, !5303}
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "resume_latency", scope: !5229, file: !5230, line: 118, baseType: !5233, size: 320)
!5233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_qos_constraints", file: !5230, line: 52, size: 320, elements: !5234)
!5234 = !{!5235, !5240, !5241, !5242, !5243, !5249}
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5233, file: !5230, line: 53, baseType: !5236, size: 128)
!5236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plist_head", file: !5237, line: 79, size: 128, elements: !5238)
!5237 = !DIFile(filename: "./include/linux/plist.h", directory: "/home/lizy2001/genbc/linux")
!5238 = !{!5239}
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "node_list", scope: !5236, file: !5237, line: 80, baseType: !284, size: 128)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "target_value", scope: !5233, file: !5230, line: 54, baseType: !2545, size: 32, offset: 128)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "default_value", scope: !5233, file: !5230, line: 55, baseType: !2545, size: 32, offset: 160)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "no_constraint_value", scope: !5233, file: !5230, line: 56, baseType: !2545, size: 32, offset: 192)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5233, file: !5230, line: 57, baseType: !5244, size: 32, offset: 224)
!5244 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pm_qos_type", file: !5230, line: 41, baseType: !7, size: 32, elements: !5245)
!5245 = !{!5246, !5247, !5248}
!5246 = !DIEnumerator(name: "PM_QOS_UNITIALIZED", value: 0, isUnsigned: true)
!5247 = !DIEnumerator(name: "PM_QOS_MAX", value: 1, isUnsigned: true)
!5248 = !DIEnumerator(name: "PM_QOS_MIN", value: 2, isUnsigned: true)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "notifiers", scope: !5233, file: !5230, line: 58, baseType: !5250, size: 64, offset: 256)
!5250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 64)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "latency_tolerance", scope: !5229, file: !5230, line: 119, baseType: !5233, size: 320, offset: 320)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !5229, file: !5230, line: 120, baseType: !5253, size: 1280, offset: 640)
!5253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "freq_constraints", file: !5230, line: 85, size: 1280, elements: !5254)
!5254 = !{!5255, !5256, !5257, !5258}
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "min_freq", scope: !5253, file: !5230, line: 86, baseType: !5233, size: 320)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "min_freq_notifiers", scope: !5253, file: !5230, line: 87, baseType: !3142, size: 320, offset: 320)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "max_freq", scope: !5253, file: !5230, line: 88, baseType: !5233, size: 320, offset: 640)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "max_freq_notifiers", scope: !5253, file: !5230, line: 89, baseType: !3142, size: 320, offset: 960)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5229, file: !5230, line: 121, baseType: !5260, size: 192, offset: 1920)
!5260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_qos_flags", file: !5230, line: 71, size: 192, elements: !5261)
!5261 = !{!5262, !5263}
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5260, file: !5230, line: 72, baseType: !284, size: 128)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "effective_flags", scope: !5260, file: !5230, line: 73, baseType: !2545, size: 32, offset: 128)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "resume_latency_req", scope: !5229, file: !5230, line: 122, baseType: !5265, size: 64, offset: 2112)
!5265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5266, size: 64)
!5266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos_request", file: !5230, line: 107, size: 576, elements: !5267)
!5267 = !{!5268, !5276, !5301}
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5266, file: !5230, line: 108, baseType: !5269, size: 32)
!5269 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dev_pm_qos_req_type", file: !5230, line: 99, baseType: !7, size: 32, elements: !5270)
!5270 = !{!5271, !5272, !5273, !5274, !5275}
!5271 = !DIEnumerator(name: "DEV_PM_QOS_RESUME_LATENCY", value: 1, isUnsigned: true)
!5272 = !DIEnumerator(name: "DEV_PM_QOS_LATENCY_TOLERANCE", value: 2, isUnsigned: true)
!5273 = !DIEnumerator(name: "DEV_PM_QOS_MIN_FREQUENCY", value: 3, isUnsigned: true)
!5274 = !DIEnumerator(name: "DEV_PM_QOS_MAX_FREQUENCY", value: 4, isUnsigned: true)
!5275 = !DIEnumerator(name: "DEV_PM_QOS_FLAGS", value: 5, isUnsigned: true)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5266, file: !5230, line: 113, baseType: !5277, size: 448, offset: 64)
!5277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5266, file: !5230, line: 109, size: 448, elements: !5278)
!5278 = !{!5279, !5285, !5290}
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "pnode", scope: !5277, file: !5230, line: 110, baseType: !5280, size: 320)
!5280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plist_node", file: !5237, line: 83, size: 320, elements: !5281)
!5281 = !{!5282, !5283, !5284}
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5280, file: !5237, line: 84, baseType: !32, size: 32)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "prio_list", scope: !5280, file: !5237, line: 85, baseType: !284, size: 128, offset: 64)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "node_list", scope: !5280, file: !5237, line: 86, baseType: !284, size: 128, offset: 192)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "flr", scope: !5277, file: !5230, line: 111, baseType: !5286, size: 192)
!5286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_qos_flags_request", file: !5230, line: 66, size: 192, elements: !5287)
!5287 = !{!5288, !5289}
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5286, file: !5230, line: 67, baseType: !284, size: 128)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5286, file: !5230, line: 68, baseType: !2545, size: 32, offset: 128)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !5277, file: !5230, line: 112, baseType: !5291, size: 448)
!5291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "freq_qos_request", file: !5230, line: 92, size: 448, elements: !5292)
!5292 = !{!5293, !5298, !5299}
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5291, file: !5230, line: 93, baseType: !5294, size: 32)
!5294 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "freq_qos_req_type", file: !5230, line: 80, baseType: !7, size: 32, elements: !5295)
!5295 = !{!5296, !5297}
!5296 = !DIEnumerator(name: "FREQ_QOS_MIN", value: 1, isUnsigned: true)
!5297 = !DIEnumerator(name: "FREQ_QOS_MAX", value: 2, isUnsigned: true)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "pnode", scope: !5291, file: !5230, line: 94, baseType: !5280, size: 320, offset: 64)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !5291, file: !5230, line: 95, baseType: !5300, size: 64, offset: 384)
!5300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5253, size: 64)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5266, file: !5230, line: 114, baseType: !4856, size: 64, offset: 512)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "latency_tolerance_req", scope: !5229, file: !5230, line: 123, baseType: !5265, size: 64, offset: 2176)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "flags_req", scope: !5229, file: !5230, line: 124, baseType: !5265, size: 64, offset: 2240)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !4569, file: !4570, line: 486, baseType: !5305, size: 64, offset: 4096)
!5305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5306, size: 64)
!5306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !4926, line: 642, size: 1792, elements: !5307)
!5307 = !{!5308, !5309, !5310, !5314, !5315, !5316}
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5306, file: !4926, line: 643, baseType: !4936, size: 1472)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5306, file: !4926, line: 644, baseType: !4910, size: 64, offset: 1472)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !5306, file: !4926, line: 645, baseType: !5311, size: 64, offset: 1536)
!5311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5312, size: 64)
!5312 = !DISubroutineType(types: !5313)
!5313 = !{null, !4856, !771}
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !5306, file: !4926, line: 646, baseType: !4910, size: 64, offset: 1600)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !5306, file: !4926, line: 647, baseType: !4914, size: 64, offset: 1664)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !5306, file: !4926, line: 648, baseType: !4914, size: 64, offset: 1728)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !4569, file: !4570, line: 493, baseType: !5318, size: 64, offset: 4160)
!5318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5319, size: 64)
!5319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !5320, line: 162, size: 1088, elements: !5321)
!5320 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!5321 = !{!5322, !5323, !5324, !5510, !5511, !5512, !5513, !5514, !5515, !5518, !5519, !5520, !5521, !5522, !5523, !5524}
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !5319, file: !5320, line: 163, baseType: !284, size: 128)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5319, file: !5320, line: 164, baseType: !292, size: 64, offset: 128)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5319, file: !5320, line: 165, baseType: !5325, size: 64, offset: 192)
!5325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5326, size: 64)
!5326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5327)
!5327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !5320, line: 105, size: 640, elements: !5328)
!5328 = !{!5329, !5460, !5471, !5476, !5480, !5487, !5491, !5495, !5502, !5506}
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !5327, file: !5320, line: 106, baseType: !5330, size: 64)
!5330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5331, size: 64)
!5331 = !DISubroutineType(types: !5332)
!5332 = !{!32, !5318, !5333, !5447}
!5333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5334, size: 64)
!5334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !5335, line: 51, size: 1344, elements: !5336)
!5335 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!5336 = !{!5337, !5338, !5340, !5341, !5431, !5440, !5441, !5442, !5443, !5444, !5445, !5446}
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5334, file: !5335, line: 52, baseType: !292, size: 64)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !5334, file: !5335, line: 53, baseType: !5339, size: 32, offset: 64)
!5339 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !5335, line: 28, baseType: !987)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !5334, file: !5335, line: 54, baseType: !292, size: 64, offset: 128)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5334, file: !5335, line: 55, baseType: !5342, size: 192, offset: 192)
!5342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !5343, line: 17, size: 192, elements: !5344)
!5343 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!5344 = !{!5345, !5347, !5430}
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !5342, file: !5343, line: 18, baseType: !5346, size: 64)
!5346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5342, size: 64)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5342, file: !5343, line: 19, baseType: !5348, size: 64, offset: 64)
!5348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5349, size: 64)
!5349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5350)
!5350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !5343, line: 110, size: 1152, elements: !5351)
!5351 = !{!5352, !5356, !5360, !5366, !5372, !5376, !5380, !5385, !5389, !5390, !5394, !5398, !5402, !5413, !5414, !5415, !5416, !5426}
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5350, file: !5343, line: 111, baseType: !5353, size: 64)
!5353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5354, size: 64)
!5354 = !DISubroutineType(types: !5355)
!5355 = !{!5346, !5346}
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !5350, file: !5343, line: 112, baseType: !5357, size: 64, offset: 64)
!5357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5358, size: 64)
!5358 = !DISubroutineType(types: !5359)
!5359 = !{null, !5346}
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !5350, file: !5343, line: 113, baseType: !5361, size: 64, offset: 128)
!5361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5362, size: 64)
!5362 = !DISubroutineType(types: !5363)
!5363 = !{!771, !5364}
!5364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5365, size: 64)
!5365 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5342)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !5350, file: !5343, line: 114, baseType: !5367, size: 64, offset: 192)
!5367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5368, size: 64)
!5368 = !DISubroutineType(types: !5369)
!5369 = !{!3258, !5364, !5370}
!5370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5371, size: 64)
!5371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4569)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !5350, file: !5343, line: 116, baseType: !5373, size: 64, offset: 256)
!5373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5374, size: 64)
!5374 = !DISubroutineType(types: !5375)
!5375 = !{!771, !5364, !292}
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !5350, file: !5343, line: 118, baseType: !5377, size: 64, offset: 320)
!5377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5378, size: 64)
!5378 = !DISubroutineType(types: !5379)
!5379 = !{!32, !5364, !292, !7, !591, !1039}
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !5350, file: !5343, line: 123, baseType: !5381, size: 64, offset: 384)
!5381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5382, size: 64)
!5382 = !DISubroutineType(types: !5383)
!5383 = !{!32, !5364, !292, !5384, !1039}
!5384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !5350, file: !5343, line: 126, baseType: !5386, size: 64, offset: 448)
!5386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5387, size: 64)
!5387 = !DISubroutineType(types: !5388)
!5388 = !{!292, !5364}
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !5350, file: !5343, line: 127, baseType: !5386, size: 64, offset: 512)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !5350, file: !5343, line: 128, baseType: !5391, size: 64, offset: 576)
!5391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5392, size: 64)
!5392 = !DISubroutineType(types: !5393)
!5393 = !{!5346, !5364}
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !5350, file: !5343, line: 130, baseType: !5395, size: 64, offset: 640)
!5395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5396, size: 64)
!5396 = !DISubroutineType(types: !5397)
!5397 = !{!5346, !5364, !5346}
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !5350, file: !5343, line: 133, baseType: !5399, size: 64, offset: 704)
!5399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5400, size: 64)
!5400 = !DISubroutineType(types: !5401)
!5401 = !{!5346, !5364, !292}
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !5350, file: !5343, line: 135, baseType: !5403, size: 64, offset: 768)
!5403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5404, size: 64)
!5404 = !DISubroutineType(types: !5405)
!5405 = !{!32, !5364, !292, !292, !7, !7, !5406}
!5406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5407, size: 64)
!5407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !5343, line: 43, size: 640, elements: !5408)
!5408 = !{!5409, !5410, !5411}
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5407, file: !5343, line: 44, baseType: !5346, size: 64)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !5407, file: !5343, line: 45, baseType: !7, size: 32, offset: 64)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !5407, file: !5343, line: 46, baseType: !5412, size: 512, offset: 128)
!5412 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 512, elements: !2433)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !5350, file: !5343, line: 140, baseType: !5395, size: 64, offset: 832)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !5350, file: !5343, line: 143, baseType: !5391, size: 64, offset: 896)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !5350, file: !5343, line: 145, baseType: !5353, size: 64, offset: 960)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !5350, file: !5343, line: 146, baseType: !5417, size: 64, offset: 1024)
!5417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5418, size: 64)
!5418 = !DISubroutineType(types: !5419)
!5419 = !{!32, !5364, !5420}
!5420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5421, size: 64)
!5421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !5343, line: 29, size: 128, elements: !5422)
!5422 = !{!5423, !5424, !5425}
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !5421, file: !5343, line: 30, baseType: !7, size: 32)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5421, file: !5343, line: 31, baseType: !7, size: 32, offset: 32)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !5421, file: !5343, line: 32, baseType: !5364, size: 64, offset: 64)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !5350, file: !5343, line: 148, baseType: !5427, size: 64, offset: 1088)
!5427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5428, size: 64)
!5428 = !DISubroutineType(types: !5429)
!5429 = !{!32, !5364, !4856}
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5342, file: !5343, line: 20, baseType: !4856, size: 64, offset: 128)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !5334, file: !5335, line: 57, baseType: !5432, size: 64, offset: 384)
!5432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5433, size: 64)
!5433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !5335, line: 31, size: 704, elements: !5434)
!5434 = !{!5435, !5436, !5437, !5438, !5439}
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5433, file: !5335, line: 32, baseType: !1038, size: 64)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5433, file: !5335, line: 33, baseType: !32, size: 32, offset: 64)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5433, file: !5335, line: 34, baseType: !591, size: 64, offset: 128)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5433, file: !5335, line: 35, baseType: !5432, size: 64, offset: 192)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5433, file: !5335, line: 43, baseType: !4665, size: 448, offset: 256)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !5334, file: !5335, line: 58, baseType: !5432, size: 64, offset: 448)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5334, file: !5335, line: 59, baseType: !5333, size: 64, offset: 512)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !5334, file: !5335, line: 60, baseType: !5333, size: 64, offset: 576)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !5334, file: !5335, line: 61, baseType: !5333, size: 64, offset: 640)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5334, file: !5335, line: 63, baseType: !4573, size: 512, offset: 704)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5334, file: !5335, line: 65, baseType: !312, size: 64, offset: 1216)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5334, file: !5335, line: 66, baseType: !591, size: 64, offset: 1280)
!5447 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !5320, line: 76, baseType: !7, size: 32, elements: !5448)
!5448 = !{!5449, !5450, !5451, !5452, !5453, !5454, !5455, !5456, !5457, !5458, !5459}
!5449 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!5450 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!5451 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!5452 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!5453 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!5454 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!5455 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!5456 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!5457 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!5458 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!5459 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !5327, file: !5320, line: 108, baseType: !5461, size: 64, offset: 64)
!5461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5462, size: 64)
!5462 = !DISubroutineType(types: !5463)
!5463 = !{!32, !5318, !5464, !5447}
!5464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5465, size: 64)
!5465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !5320, line: 63, size: 640, elements: !5466)
!5466 = !{!5467, !5468, !5469}
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5465, file: !5320, line: 64, baseType: !5346, size: 64)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !5465, file: !5320, line: 65, baseType: !32, size: 32, offset: 64)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !5465, file: !5320, line: 66, baseType: !5470, size: 512, offset: 96)
!5470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 512, elements: !269)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !5327, file: !5320, line: 110, baseType: !5472, size: 64, offset: 128)
!5472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5473, size: 64)
!5473 = !DISubroutineType(types: !5474)
!5474 = !{!32, !5318, !7, !5475}
!5475 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !277, line: 164, baseType: !312)
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !5327, file: !5320, line: 111, baseType: !5477, size: 64, offset: 192)
!5477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5478, size: 64)
!5478 = !DISubroutineType(types: !5479)
!5479 = !{null, !5318, !7}
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !5327, file: !5320, line: 112, baseType: !5481, size: 64, offset: 256)
!5481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5482, size: 64)
!5482 = !DISubroutineType(types: !5483)
!5483 = !{!32, !5318, !5333, !5484, !7, !3439, !5486}
!5484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5485, size: 64)
!5485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !987)
!5486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5327, file: !5320, line: 117, baseType: !5488, size: 64, offset: 320)
!5488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5489, size: 64)
!5489 = !DISubroutineType(types: !5490)
!5490 = !{!32, !5318, !7, !7, !591}
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5327, file: !5320, line: 119, baseType: !5492, size: 64, offset: 384)
!5492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5493, size: 64)
!5493 = !DISubroutineType(types: !5494)
!5494 = !{null, !5318, !7, !7}
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !5327, file: !5320, line: 121, baseType: !5496, size: 64, offset: 448)
!5496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5497, size: 64)
!5497 = !DISubroutineType(types: !5498)
!5498 = !{!32, !5318, !5499, !771}
!5499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5500, size: 64)
!5500 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !5501, line: 11, flags: DIFlagFwdDecl)
!5501 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !5327, file: !5320, line: 122, baseType: !5503, size: 64, offset: 512)
!5503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5504, size: 64)
!5504 = !DISubroutineType(types: !5505)
!5505 = !{null, !5318, !5499}
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !5327, file: !5320, line: 123, baseType: !5507, size: 64, offset: 576)
!5507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5508, size: 64)
!5508 = !DISubroutineType(types: !5509)
!5509 = !{!32, !5318, !5464, !3439, !5486}
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !5319, file: !5320, line: 166, baseType: !591, size: 64, offset: 256)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5319, file: !5320, line: 167, baseType: !7, size: 32, offset: 320)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !5319, file: !5320, line: 168, baseType: !7, size: 32, offset: 352)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5319, file: !5320, line: 171, baseType: !5346, size: 64, offset: 384)
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !5319, file: !5320, line: 172, baseType: !5447, size: 32, offset: 448)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !5319, file: !5320, line: 173, baseType: !5516, size: 64, offset: 512)
!5516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5517, size: 64)
!5517 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !5320, line: 134, flags: DIFlagFwdDecl)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5319, file: !5320, line: 175, baseType: !5318, size: 64, offset: 576)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !5319, file: !5320, line: 182, baseType: !5475, size: 64, offset: 640)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !5319, file: !5320, line: 183, baseType: !7, size: 32, offset: 704)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !5319, file: !5320, line: 184, baseType: !7, size: 32, offset: 736)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !5319, file: !5320, line: 185, baseType: !1737, size: 128, offset: 768)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !5319, file: !5320, line: 186, baseType: !1665, size: 192, offset: 896)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !5319, file: !5320, line: 187, baseType: !5525, offset: 1088)
!5525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !309)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !4569, file: !4570, line: 499, baseType: !284, size: 128, offset: 4224)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !4569, file: !4570, line: 502, baseType: !5528, size: 64, offset: 4352)
!5528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5529, size: 64)
!5529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5530)
!5530 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !4570, line: 502, flags: DIFlagFwdDecl)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !4569, file: !4570, line: 504, baseType: !5532, size: 64, offset: 4416)
!5532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !4569, file: !4570, line: 505, baseType: !331, size: 64, offset: 4480)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !4569, file: !4570, line: 510, baseType: !331, size: 64, offset: 4544)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !4569, file: !4570, line: 511, baseType: !5536, size: 64, offset: 4608)
!5536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5537, size: 64)
!5537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5538)
!5538 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !4570, line: 511, flags: DIFlagFwdDecl)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !4569, file: !4570, line: 513, baseType: !5540, size: 64, offset: 4672)
!5540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5541, size: 64)
!5541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !4570, line: 288, size: 128, elements: !5542)
!5542 = !{!5543, !5544}
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5541, file: !4570, line: 293, baseType: !7, size: 32)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !5541, file: !4570, line: 294, baseType: !312, size: 64, offset: 64)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !4569, file: !4570, line: 515, baseType: !284, size: 128, offset: 4736)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !4569, file: !4570, line: 526, baseType: !5547, offset: 4864)
!5547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !5548, line: 5, elements: !1587)
!5548 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !4569, file: !4570, line: 528, baseType: !5333, size: 64, offset: 4864)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4569, file: !4570, line: 529, baseType: !5346, size: 64, offset: 4928)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !4569, file: !4570, line: 534, baseType: !1458, size: 32, offset: 4992)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4569, file: !4570, line: 535, baseType: !987, size: 32, offset: 5024)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !4569, file: !4570, line: 537, baseType: !1670, offset: 5056)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !4569, file: !4570, line: 538, baseType: !284, size: 128, offset: 5056)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4569, file: !4570, line: 540, baseType: !4981, size: 64, offset: 5184)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4569, file: !4570, line: 541, baseType: !4650, size: 64, offset: 5248)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4569, file: !4570, line: 543, baseType: !4914, size: 64, offset: 5312)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !4569, file: !4570, line: 544, baseType: !5559, size: 64, offset: 5376)
!5559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5560, size: 64)
!5560 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !4570, line: 45, flags: DIFlagFwdDecl)
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !4569, file: !4570, line: 545, baseType: !5562, size: 64, offset: 5440)
!5562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5563, size: 64)
!5563 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !4570, line: 47, flags: DIFlagFwdDecl)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !4569, file: !4570, line: 547, baseType: !771, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4569, file: !4570, line: 548, baseType: !771, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !4569, file: !4570, line: 549, baseType: !771, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !4569, file: !4570, line: 550, baseType: !771, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !4558, file: !4559, line: 69, baseType: !4579, size: 64, offset: 5952)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !4558, file: !4559, line: 70, baseType: !32, size: 32, offset: 6016)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !4558, file: !4559, line: 70, baseType: !32, size: 32, offset: 6048)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4558, file: !4559, line: 71, baseType: !5572, size: 64, offset: 6080)
!5572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5573, size: 64)
!5573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !4559, line: 48, size: 808, elements: !5574)
!5574 = !{!5575, !5577}
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !5573, file: !4559, line: 49, baseType: !5576, size: 296)
!5576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 296, elements: !3068)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !5573, file: !4559, line: 50, baseType: !5578, size: 512, offset: 296)
!5578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 512, elements: !3812)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !4558, file: !4559, line: 75, baseType: !5580, size: 448, offset: 6144)
!5580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !2830, line: 124, size: 448, elements: !5581)
!5581 = !{!5582, !5583, !5584}
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5580, file: !2830, line: 125, baseType: !2829, size: 256)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5580, file: !2830, line: 126, baseType: !299, size: 128, align: 64, offset: 256)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !5580, file: !2830, line: 129, baseType: !5585, size: 64, offset: 384)
!5585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5586, size: 64)
!5586 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2830, line: 18, flags: DIFlagFwdDecl)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !4541, file: !4542, line: 39, baseType: !7, size: 32, offset: 896)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !4541, file: !4542, line: 41, baseType: !1670, offset: 928)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !4541, file: !4542, line: 42, baseType: !5590, size: 64, offset: 960)
!5590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5591, size: 64)
!5591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !4559, line: 167, size: 8512, elements: !5592)
!5592 = !{!5593, !5594, !5595, !5596, !5597, !5598, !5599, !5608, !5609, !5613, !5614, !5615, !5616, !5617, !5618, !5619, !5622, !5623, !5626, !5627, !5628, !5631}
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !5591, file: !4559, line: 171, baseType: !32, size: 32)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !5591, file: !4559, line: 172, baseType: !32, size: 32, offset: 32)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !5591, file: !4559, line: 173, baseType: !32, size: 32, offset: 64)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !5591, file: !4559, line: 176, baseType: !5031, size: 256, offset: 96)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !5591, file: !4559, line: 178, baseType: !476, size: 16, offset: 352)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !5591, file: !4559, line: 179, baseType: !476, size: 16, offset: 368)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !5591, file: !4559, line: 186, baseType: !5600, size: 64, offset: 384)
!5600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5601, size: 64)
!5601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !4559, line: 149, size: 256, elements: !5602)
!5602 = !{!5603, !5604, !5605, !5606}
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !5601, file: !4559, line: 150, baseType: !299, size: 128, align: 64)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5601, file: !4559, line: 151, baseType: !32, size: 32, offset: 128)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !5601, file: !4559, line: 152, baseType: !4557, size: 64, offset: 192)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !5601, file: !4559, line: 153, baseType: !5607, offset: 256)
!5607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4557, elements: !309)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !5591, file: !4559, line: 187, baseType: !4558, size: 6592, offset: 448)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !5591, file: !4559, line: 189, baseType: !5610, size: 64, offset: 7040)
!5610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5611, size: 64)
!5611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5612)
!5612 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !4559, line: 189, flags: DIFlagFwdDecl)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !5591, file: !4559, line: 190, baseType: !3874, size: 64, offset: 7104)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !5591, file: !4559, line: 191, baseType: !591, size: 64, offset: 7168)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5591, file: !4559, line: 193, baseType: !32, size: 32, offset: 7232)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5591, file: !4559, line: 194, baseType: !312, size: 64, offset: 7296)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !5591, file: !4559, line: 196, baseType: !1755, size: 256, offset: 7360)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !5591, file: !4559, line: 197, baseType: !4579, size: 64, offset: 7616)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !5591, file: !4559, line: 199, baseType: !5620, size: 64, offset: 7680)
!5620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5621, size: 64)
!5621 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !4559, line: 199, flags: DIFlagFwdDecl)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !5591, file: !4559, line: 200, baseType: !383, size: 32, offset: 7744)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !5591, file: !4559, line: 201, baseType: !5624, size: 64, offset: 7808)
!5624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5625, size: 64)
!5625 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !4559, line: 156, flags: DIFlagFwdDecl)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !5591, file: !4559, line: 203, baseType: !4573, size: 512, offset: 7872)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !5591, file: !4559, line: 208, baseType: !32, size: 32, offset: 8384)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !5591, file: !4559, line: 209, baseType: !5629, size: 64, offset: 8448)
!5629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5630, size: 64)
!5630 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !4559, line: 157, flags: DIFlagFwdDecl)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !5591, file: !4559, line: 210, baseType: !5632, offset: 8512)
!5632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !1586, line: 192, elements: !1587)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !4541, file: !4542, line: 43, baseType: !3856, size: 64, offset: 1024)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !4541, file: !4542, line: 46, baseType: !32, size: 32, offset: 1088)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !4541, file: !4542, line: 48, baseType: !1665, size: 192, offset: 1152)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !1546, file: !1317, line: 1452, baseType: !3856, size: 64, offset: 1536)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !1546, file: !1317, line: 1453, baseType: !5638, size: 64, offset: 1600)
!5638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5639, size: 64)
!5639 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !1317, line: 1453, flags: DIFlagFwdDecl)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !1546, file: !1317, line: 1454, baseType: !276, size: 128, offset: 1664)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !1546, file: !1317, line: 1455, baseType: !7, size: 32, offset: 1792)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !1546, file: !1317, line: 1456, baseType: !5643, size: 2432, offset: 1856)
!5643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !4351, line: 518, size: 2432, elements: !5644)
!5644 = !{!5645, !5646, !5647, !5649, !5681}
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5643, file: !4351, line: 519, baseType: !7, size: 32)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !5643, file: !4351, line: 520, baseType: !1755, size: 256, offset: 64)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !5643, file: !4351, line: 521, baseType: !5648, size: 192, offset: 320)
!5648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1375, size: 192, elements: !1592)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5643, file: !4351, line: 522, baseType: !5650, size: 1728, offset: 512)
!5650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5651, size: 1728, elements: !1592)
!5651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !4351, line: 222, size: 576, elements: !5652)
!5652 = !{!5653, !5673, !5674, !5675, !5676, !5677, !5678, !5679, !5680}
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !5651, file: !4351, line: 223, baseType: !5654, size: 64)
!5654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5655, size: 64)
!5655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !4351, line: 443, size: 256, elements: !5656)
!5656 = !{!5657, !5658, !5671, !5672}
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !5655, file: !4351, line: 444, baseType: !32, size: 32)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !5655, file: !4351, line: 445, baseType: !5659, size: 64, offset: 64)
!5659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5660, size: 64)
!5660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5661)
!5661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !4351, line: 310, size: 512, elements: !5662)
!5662 = !{!5663, !5664, !5665, !5666, !5667, !5668, !5669, !5670}
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !5661, file: !4351, line: 311, baseType: !1628, size: 64)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !5661, file: !4351, line: 312, baseType: !1628, size: 64, offset: 64)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !5661, file: !4351, line: 313, baseType: !1628, size: 64, offset: 128)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !5661, file: !4351, line: 314, baseType: !1628, size: 64, offset: 192)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !5661, file: !4351, line: 315, baseType: !4354, size: 64, offset: 256)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !5661, file: !4351, line: 316, baseType: !4354, size: 64, offset: 320)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !5661, file: !4351, line: 317, baseType: !4354, size: 64, offset: 384)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !5661, file: !4351, line: 318, baseType: !4431, size: 64, offset: 448)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !5655, file: !4351, line: 446, baseType: !980, size: 64, offset: 128)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !5655, file: !4351, line: 447, baseType: !5654, size: 64, offset: 192)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !5651, file: !4351, line: 224, baseType: !32, size: 32, offset: 64)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !5651, file: !4351, line: 226, baseType: !284, size: 128, offset: 128)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !5651, file: !4351, line: 227, baseType: !312, size: 64, offset: 256)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !5651, file: !4351, line: 228, baseType: !7, size: 32, offset: 320)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !5651, file: !4351, line: 229, baseType: !7, size: 32, offset: 352)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !5651, file: !4351, line: 230, baseType: !4395, size: 64, offset: 384)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !5651, file: !4351, line: 231, baseType: !4395, size: 64, offset: 448)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !5651, file: !4351, line: 232, baseType: !591, size: 64, offset: 512)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5643, file: !4351, line: 523, baseType: !5682, size: 192, offset: 2240)
!5682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5659, size: 192, elements: !1592)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !1546, file: !1317, line: 1458, baseType: !5684, size: 2112, offset: 4288)
!5684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !1317, line: 1410, size: 2112, elements: !5685)
!5685 = !{!5686, !5687, !5688}
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !5684, file: !1317, line: 1411, baseType: !32, size: 32)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !5684, file: !1317, line: 1412, baseType: !1889, size: 128, offset: 64)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !5684, file: !1317, line: 1413, baseType: !5689, size: 1920, offset: 192)
!5689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5690, size: 1920, elements: !1592)
!5690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !5691, line: 12, size: 640, elements: !5692)
!5691 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!5692 = !{!5693, !5701, !5702, !5707, !5708}
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !5690, file: !5691, line: 13, baseType: !5694, size: 320)
!5694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !5695, line: 17, size: 320, elements: !5696)
!5695 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!5696 = !{!5697, !5698, !5699, !5700}
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !5694, file: !5695, line: 18, baseType: !32, size: 32)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !5694, file: !5695, line: 19, baseType: !32, size: 32, offset: 32)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !5694, file: !5695, line: 20, baseType: !1889, size: 128, offset: 64)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !5694, file: !5695, line: 22, baseType: !299, size: 128, align: 64, offset: 192)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !5690, file: !5691, line: 14, baseType: !5486, size: 64, offset: 320)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !5690, file: !5691, line: 15, baseType: !5703, size: 64, offset: 384)
!5703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !5704, line: 16, size: 64, elements: !5705)
!5704 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!5705 = !{!5706}
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !5703, file: !5704, line: 17, baseType: !2326, size: 64)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !5690, file: !5691, line: 16, baseType: !1889, size: 128, offset: 448)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !5690, file: !5691, line: 17, baseType: !383, size: 32, offset: 576)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !1546, file: !1317, line: 1465, baseType: !591, size: 64, offset: 6400)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !1546, file: !1317, line: 1468, baseType: !987, size: 32, offset: 6464)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !1546, file: !1317, line: 1470, baseType: !1483, size: 64, offset: 6528)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !1546, file: !1317, line: 1471, baseType: !1483, size: 64, offset: 6592)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !1546, file: !1317, line: 1473, baseType: !493, size: 32, offset: 6656)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !1546, file: !1317, line: 1474, baseType: !5715, size: 64, offset: 6720)
!5715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5716, size: 64)
!5716 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !1317, line: 603, flags: DIFlagFwdDecl)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !1546, file: !1317, line: 1477, baseType: !5031, size: 256, offset: 6784)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !1546, file: !1317, line: 1478, baseType: !5719, size: 128, offset: 7040)
!5719 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !5720, line: 18, baseType: !5721)
!5720 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!5721 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5720, line: 16, size: 128, elements: !5722)
!5722 = !{!5723}
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !5721, file: !5720, line: 17, baseType: !3225, size: 128)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !1546, file: !1317, line: 1480, baseType: !7, size: 32, offset: 7168)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !1546, file: !1317, line: 1481, baseType: !5726, size: 32, offset: 7200)
!5726 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !277, line: 150, baseType: !7)
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !1546, file: !1317, line: 1487, baseType: !1665, size: 192, offset: 7232)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !1546, file: !1317, line: 1493, baseType: !292, size: 64, offset: 7424)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !1546, file: !1317, line: 1495, baseType: !5730, size: 64, offset: 7488)
!5730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5731, size: 64)
!5731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5732)
!5732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !1336, line: 135, size: 1024, align: 512, elements: !5733)
!5733 = !{!5734, !5738, !5739, !5746, !5752, !5756, !5760, !5764, !5765, !5769, !5773, !5778, !5782}
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !5732, file: !1336, line: 136, baseType: !5735, size: 64)
!5735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5736, size: 64)
!5736 = !DISubroutineType(types: !5737)
!5737 = !{!32, !1338, !7}
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !5732, file: !1336, line: 137, baseType: !5735, size: 64, offset: 64)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !5732, file: !1336, line: 138, baseType: !5740, size: 64, offset: 128)
!5740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5741, size: 64)
!5741 = !DISubroutineType(types: !5742)
!5742 = !{!32, !5743, !5745}
!5743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5744, size: 64)
!5744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1339)
!5745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !5732, file: !1336, line: 139, baseType: !5747, size: 64, offset: 192)
!5747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5748, size: 64)
!5748 = !DISubroutineType(types: !5749)
!5749 = !{!32, !5743, !7, !292, !5750}
!5750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5751, size: 64)
!5751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1362)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !5732, file: !1336, line: 141, baseType: !5753, size: 64, offset: 256)
!5753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5754, size: 64)
!5754 = !DISubroutineType(types: !5755)
!5755 = !{!32, !5743}
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !5732, file: !1336, line: 142, baseType: !5757, size: 64, offset: 320)
!5757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5758, size: 64)
!5758 = !DISubroutineType(types: !5759)
!5759 = !{!32, !1338}
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !5732, file: !1336, line: 143, baseType: !5761, size: 64, offset: 384)
!5761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5762, size: 64)
!5762 = !DISubroutineType(types: !5763)
!5763 = !{null, !1338}
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !5732, file: !1336, line: 144, baseType: !5761, size: 64, offset: 448)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !5732, file: !1336, line: 145, baseType: !5766, size: 64, offset: 512)
!5766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5767, size: 64)
!5767 = !DISubroutineType(types: !5768)
!5768 = !{null, !1338, !1375}
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !5732, file: !1336, line: 146, baseType: !5770, size: 64, offset: 576)
!5770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5771, size: 64)
!5771 = !DISubroutineType(types: !5772)
!5772 = !{!1038, !1338, !1038, !32}
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !5732, file: !1336, line: 147, baseType: !5774, size: 64, offset: 640)
!5774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5775, size: 64)
!5775 = !DISubroutineType(types: !5776)
!5776 = !{!1334, !5777}
!5777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !5732, file: !1336, line: 148, baseType: !5779, size: 64, offset: 704)
!5779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5780, size: 64)
!5780 = !DISubroutineType(types: !5781)
!5781 = !{!32, !1492, !771}
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !5732, file: !1336, line: 149, baseType: !5783, size: 64, offset: 768)
!5783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5784, size: 64)
!5784 = !DISubroutineType(types: !5785)
!5785 = !{!1338, !1338, !5786}
!5786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5787, size: 64)
!5787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1376)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !1546, file: !1317, line: 1500, baseType: !32, size: 32, offset: 7552)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !1546, file: !1317, line: 1502, baseType: !5790, size: 448, offset: 7616)
!5790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !4337, line: 60, size: 448, elements: !5791)
!5791 = !{!5792, !5797, !5798, !5799, !5800, !5801, !5802}
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !5790, file: !4337, line: 61, baseType: !5793, size: 64)
!5793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5794, size: 64)
!5794 = !DISubroutineType(types: !5795)
!5795 = !{!312, !5796, !4335}
!5796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5790, size: 64)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !5790, file: !4337, line: 63, baseType: !5793, size: 64, offset: 64)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !5790, file: !4337, line: 66, baseType: !998, size: 64, offset: 128)
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !5790, file: !4337, line: 67, baseType: !32, size: 32, offset: 192)
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5790, file: !4337, line: 68, baseType: !7, size: 32, offset: 224)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5790, file: !4337, line: 71, baseType: !284, size: 128, offset: 256)
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !5790, file: !4337, line: 77, baseType: !5803, size: 64, offset: 384)
!5803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !1546, file: !1317, line: 1505, baseType: !371, size: 64, offset: 8064)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !1546, file: !1317, line: 1508, baseType: !371, size: 64, offset: 8128)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !1546, file: !1317, line: 1511, baseType: !32, size: 32, offset: 8192)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !1546, file: !1317, line: 1514, baseType: !2025, size: 32, offset: 8224)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !1546, file: !1317, line: 1517, baseType: !5585, size: 64, offset: 8256)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !1546, file: !1317, line: 1518, baseType: !1581, size: 64, offset: 8320)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !1546, file: !1317, line: 1525, baseType: !2781, size: 64, offset: 8384)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !1546, file: !1317, line: 1532, baseType: !5812, size: 64, offset: 8448)
!5812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !5813, line: 52, size: 64, elements: !5814)
!5813 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!5814 = !{!5815}
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5812, file: !5813, line: 53, baseType: !5816, size: 64)
!5816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5817, size: 64)
!5817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !5813, line: 40, size: 256, elements: !5818)
!5818 = !{!5819, !5820, !5825}
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5817, file: !5813, line: 42, baseType: !1670)
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !5817, file: !5813, line: 44, baseType: !5821, size: 192)
!5821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !5813, line: 28, size: 192, elements: !5822)
!5822 = !{!5823, !5824}
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5821, file: !5813, line: 29, baseType: !284, size: 128)
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !5821, file: !5813, line: 31, baseType: !998, size: 64, offset: 128)
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !5817, file: !5813, line: 49, baseType: !998, size: 64, offset: 192)
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !1546, file: !1317, line: 1533, baseType: !5812, size: 64, offset: 8512)
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1546, file: !1317, line: 1534, baseType: !299, size: 128, align: 64, offset: 8576)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !1546, file: !1317, line: 1535, baseType: !2829, size: 256, offset: 8704)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !1546, file: !1317, line: 1537, baseType: !1665, size: 192, offset: 8960)
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !1546, file: !1317, line: 1542, baseType: !32, size: 32, offset: 9152)
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !1546, file: !1317, line: 1545, baseType: !1670, offset: 9184)
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !1546, file: !1317, line: 1546, baseType: !284, size: 128, offset: 9216)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !1546, file: !1317, line: 1548, baseType: !1670, offset: 9344)
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !1546, file: !1317, line: 1549, baseType: !284, size: 128, offset: 9344)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !1376, file: !1317, line: 624, baseType: !1732, size: 64, offset: 256)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !1376, file: !1317, line: 631, baseType: !312, size: 64, offset: 320)
!5837 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 639, baseType: !5838, size: 32, offset: 384)
!5838 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 639, size: 32, elements: !5839)
!5839 = !{!5840, !5842}
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !5838, file: !1317, line: 640, baseType: !5841, size: 32)
!5841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !5838, file: !1317, line: 641, baseType: !7, size: 32)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !1376, file: !1317, line: 643, baseType: !1458, size: 32, offset: 416)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1376, file: !1317, line: 644, baseType: !1476, size: 64, offset: 448)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !1376, file: !1317, line: 645, baseType: !1479, size: 128, offset: 512)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !1376, file: !1317, line: 646, baseType: !1479, size: 128, offset: 640)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !1376, file: !1317, line: 647, baseType: !1479, size: 128, offset: 768)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !1376, file: !1317, line: 648, baseType: !1670, offset: 896)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !1376, file: !1317, line: 649, baseType: !476, size: 16, offset: 896)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !1376, file: !1317, line: 650, baseType: !794, size: 8, offset: 912)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !1376, file: !1317, line: 651, baseType: !794, size: 8, offset: 920)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !1376, file: !1317, line: 652, baseType: !4515, size: 64, offset: 960)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !1376, file: !1317, line: 659, baseType: !312, size: 64, offset: 1024)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !1376, file: !1317, line: 660, baseType: !1755, size: 256, offset: 1088)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !1376, file: !1317, line: 662, baseType: !312, size: 64, offset: 1344)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !1376, file: !1317, line: 663, baseType: !312, size: 64, offset: 1408)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !1376, file: !1317, line: 665, baseType: !276, size: 128, offset: 1472)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !1376, file: !1317, line: 666, baseType: !284, size: 128, offset: 1600)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !1376, file: !1317, line: 675, baseType: !284, size: 128, offset: 1728)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !1376, file: !1317, line: 676, baseType: !284, size: 128, offset: 1856)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !1376, file: !1317, line: 677, baseType: !284, size: 128, offset: 1984)
!5862 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 678, baseType: !5863, size: 128, offset: 2112)
!5863 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 678, size: 128, elements: !5864)
!5864 = !{!5865, !5866}
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !5863, file: !1317, line: 679, baseType: !1581, size: 64)
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !5863, file: !1317, line: 680, baseType: !299, size: 128, align: 64)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !1376, file: !1317, line: 682, baseType: !373, size: 64, offset: 2240)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !1376, file: !1317, line: 683, baseType: !373, size: 64, offset: 2304)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1376, file: !1317, line: 684, baseType: !383, size: 32, offset: 2368)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !1376, file: !1317, line: 685, baseType: !383, size: 32, offset: 2400)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !1376, file: !1317, line: 686, baseType: !383, size: 32, offset: 2432)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !1376, file: !1317, line: 688, baseType: !383, size: 32, offset: 2464)
!5873 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 690, baseType: !5874, size: 64, offset: 2496)
!5874 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 690, size: 64, elements: !5875)
!5875 = !{!5876, !6078}
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !5874, file: !1317, line: 691, baseType: !5877, size: 64)
!5877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5878, size: 64)
!5878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5879)
!5879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !1317, line: 1822, size: 2048, elements: !5880)
!5880 = !{!5881, !5882, !5886, !5890, !5894, !5895, !5896, !5900, !5913, !5914, !5918, !5922, !5923, !5927, !5928, !5932, !5937, !5938, !5942, !5946, !6038, !6042, !6043, !6047, !6048, !6052, !6056, !6061, !6065, !6069, !6073, !6077}
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5879, file: !1317, line: 1823, baseType: !980, size: 64)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !5879, file: !1317, line: 1824, baseType: !5883, size: 64, offset: 64)
!5883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5884, size: 64)
!5884 = !DISubroutineType(types: !5885)
!5885 = !{!1476, !1315, !1476, !32}
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !5879, file: !1317, line: 1825, baseType: !5887, size: 64, offset: 128)
!5887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5888, size: 64)
!5888 = !DISubroutineType(types: !5889)
!5889 = !{!1521, !1315, !1038, !1039, !1694}
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !5879, file: !1317, line: 1826, baseType: !5891, size: 64, offset: 192)
!5891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5892, size: 64)
!5892 = !DISubroutineType(types: !5893)
!5893 = !{!1521, !1315, !292, !1039, !1694}
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !5879, file: !1317, line: 1827, baseType: !1825, size: 64, offset: 256)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !5879, file: !1317, line: 1828, baseType: !1825, size: 64, offset: 320)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !5879, file: !1317, line: 1829, baseType: !5897, size: 64, offset: 384)
!5897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5898, size: 64)
!5898 = !DISubroutineType(types: !5899)
!5899 = !{!32, !1828, !771}
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !5879, file: !1317, line: 1830, baseType: !5901, size: 64, offset: 448)
!5901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5902, size: 64)
!5902 = !DISubroutineType(types: !5903)
!5903 = !{!32, !1315, !5904}
!5904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5905, size: 64)
!5905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !1317, line: 1776, size: 128, elements: !5906)
!5906 = !{!5907, !5912}
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !5905, file: !1317, line: 1777, baseType: !5908, size: 64)
!5908 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !1317, line: 1773, baseType: !5909)
!5909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5910, size: 64)
!5910 = !DISubroutineType(types: !5911)
!5911 = !{!32, !5904, !292, !32, !1476, !331, !7}
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !5905, file: !1317, line: 1778, baseType: !1476, size: 64, offset: 64)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !5879, file: !1317, line: 1831, baseType: !5901, size: 64, offset: 512)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !5879, file: !1317, line: 1832, baseType: !5915, size: 64, offset: 576)
!5915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5916, size: 64)
!5916 = !DISubroutineType(types: !5917)
!5917 = !{!4826, !1315, !4827}
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !5879, file: !1317, line: 1833, baseType: !5919, size: 64, offset: 640)
!5919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5920, size: 64)
!5920 = !DISubroutineType(types: !5921)
!5921 = !{!998, !1315, !7, !312}
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !5879, file: !1317, line: 1834, baseType: !5919, size: 64, offset: 704)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !5879, file: !1317, line: 1835, baseType: !5924, size: 64, offset: 768)
!5924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5925, size: 64)
!5925 = !DISubroutineType(types: !5926)
!5926 = !{!32, !1315, !2098}
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !5879, file: !1317, line: 1836, baseType: !312, size: 64, offset: 832)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5879, file: !1317, line: 1837, baseType: !5929, size: 64, offset: 896)
!5929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5930, size: 64)
!5930 = !DISubroutineType(types: !5931)
!5931 = !{!32, !1375, !1315}
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !5879, file: !1317, line: 1838, baseType: !5933, size: 64, offset: 960)
!5933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5934, size: 64)
!5934 = !DISubroutineType(types: !5935)
!5935 = !{!32, !1315, !5936}
!5936 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !1317, line: 1007, baseType: !591)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5879, file: !1317, line: 1839, baseType: !5929, size: 64, offset: 1024)
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !5879, file: !1317, line: 1840, baseType: !5939, size: 64, offset: 1088)
!5939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5940, size: 64)
!5940 = !DISubroutineType(types: !5941)
!5941 = !{!32, !1315, !1476, !1476, !32}
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !5879, file: !1317, line: 1841, baseType: !5943, size: 64, offset: 1152)
!5943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5944, size: 64)
!5944 = !DISubroutineType(types: !5945)
!5945 = !{!32, !32, !1315, !32}
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5879, file: !1317, line: 1842, baseType: !5947, size: 64, offset: 1216)
!5947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5948, size: 64)
!5948 = !DISubroutineType(types: !5949)
!5949 = !{!32, !1315, !32, !5950}
!5950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5951, size: 64)
!5951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !1317, line: 1062, size: 1664, elements: !5952)
!5952 = !{!5953, !5954, !5955, !5956, !5957, !5958, !5959, !5960, !5961, !5962, !5963, !5964, !5965, !5966, !5967, !5968, !5969, !5970, !5983, !6014}
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !5951, file: !1317, line: 1063, baseType: !5950, size: 64)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !5951, file: !1317, line: 1064, baseType: !284, size: 128, offset: 64)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !5951, file: !1317, line: 1065, baseType: !276, size: 128, offset: 192)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !5951, file: !1317, line: 1066, baseType: !284, size: 128, offset: 320)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !5951, file: !1317, line: 1069, baseType: !284, size: 128, offset: 448)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !5951, file: !1317, line: 1072, baseType: !5936, size: 64, offset: 576)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !5951, file: !1317, line: 1073, baseType: !7, size: 32, offset: 640)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !5951, file: !1317, line: 1074, baseType: !482, size: 8, offset: 672)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !5951, file: !1317, line: 1075, baseType: !7, size: 32, offset: 704)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !5951, file: !1317, line: 1076, baseType: !32, size: 32, offset: 736)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !5951, file: !1317, line: 1077, baseType: !1889, size: 128, offset: 768)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !5951, file: !1317, line: 1078, baseType: !1315, size: 64, offset: 896)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !5951, file: !1317, line: 1079, baseType: !1476, size: 64, offset: 960)
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !5951, file: !1317, line: 1080, baseType: !1476, size: 64, offset: 1024)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !5951, file: !1317, line: 1082, baseType: !1908, size: 64, offset: 1088)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !5951, file: !1317, line: 1084, baseType: !312, size: 64, offset: 1152)
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !5951, file: !1317, line: 1085, baseType: !312, size: 64, offset: 1216)
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !5951, file: !1317, line: 1087, baseType: !5971, size: 64, offset: 1280)
!5971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5972, size: 64)
!5972 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5973)
!5973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !1317, line: 1011, size: 128, elements: !5974)
!5974 = !{!5975, !5979}
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !5973, file: !1317, line: 1012, baseType: !5976, size: 64)
!5976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5977, size: 64)
!5977 = !DISubroutineType(types: !5978)
!5978 = !{null, !5950, !5950}
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !5973, file: !1317, line: 1013, baseType: !5980, size: 64, offset: 64)
!5980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5981, size: 64)
!5981 = !DISubroutineType(types: !5982)
!5982 = !{null, !5950}
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !5951, file: !1317, line: 1088, baseType: !5984, size: 64, offset: 1344)
!5984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5985, size: 64)
!5985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5986)
!5986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !1317, line: 1016, size: 512, elements: !5987)
!5987 = !{!5988, !5992, !5996, !5997, !6001, !6005, !6009, !6013}
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !5986, file: !1317, line: 1017, baseType: !5989, size: 64)
!5989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5990, size: 64)
!5990 = !DISubroutineType(types: !5991)
!5991 = !{!5936, !5936}
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !5986, file: !1317, line: 1018, baseType: !5993, size: 64, offset: 64)
!5993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5994, size: 64)
!5994 = !DISubroutineType(types: !5995)
!5995 = !{null, !5936}
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !5986, file: !1317, line: 1019, baseType: !5980, size: 64, offset: 128)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !5986, file: !1317, line: 1020, baseType: !5998, size: 64, offset: 192)
!5998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5999, size: 64)
!5999 = !DISubroutineType(types: !6000)
!6000 = !{!32, !5950, !32}
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !5986, file: !1317, line: 1021, baseType: !6002, size: 64, offset: 256)
!6002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6003, size: 64)
!6003 = !DISubroutineType(types: !6004)
!6004 = !{!771, !5950}
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !5986, file: !1317, line: 1022, baseType: !6006, size: 64, offset: 320)
!6006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6007, size: 64)
!6007 = !DISubroutineType(types: !6008)
!6008 = !{!32, !5950, !32, !287}
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !5986, file: !1317, line: 1023, baseType: !6010, size: 64, offset: 384)
!6010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6011, size: 64)
!6011 = !DISubroutineType(types: !6012)
!6012 = !{null, !5950, !1802}
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !5986, file: !1317, line: 1024, baseType: !6002, size: 64, offset: 448)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !5951, file: !1317, line: 1097, baseType: !6015, size: 256, offset: 1408)
!6015 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5951, file: !1317, line: 1089, size: 256, elements: !6016)
!6016 = !{!6017, !6026, !6032}
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !6015, file: !1317, line: 1090, baseType: !6018, size: 256)
!6018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !6019, line: 10, size: 256, elements: !6020)
!6019 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!6020 = !{!6021, !6022, !6025}
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6018, file: !6019, line: 11, baseType: !987, size: 32)
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6018, file: !6019, line: 12, baseType: !6023, size: 64, offset: 64)
!6023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6024, size: 64)
!6024 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !6019, line: 5, flags: DIFlagFwdDecl)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6018, file: !6019, line: 13, baseType: !284, size: 128, offset: 128)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !6015, file: !1317, line: 1091, baseType: !6027, size: 64)
!6027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !6019, line: 17, size: 64, elements: !6028)
!6028 = !{!6029}
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6027, file: !6019, line: 18, baseType: !6030, size: 64)
!6030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6031, size: 64)
!6031 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !6019, line: 16, flags: DIFlagFwdDecl)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !6015, file: !1317, line: 1096, baseType: !6033, size: 192)
!6033 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6015, file: !1317, line: 1092, size: 192, elements: !6034)
!6034 = !{!6035, !6036, !6037}
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !6033, file: !1317, line: 1093, baseType: !284, size: 128)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6033, file: !1317, line: 1094, baseType: !32, size: 32, offset: 128)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !6033, file: !1317, line: 1095, baseType: !7, size: 32, offset: 160)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !5879, file: !1317, line: 1843, baseType: !6039, size: 64, offset: 1280)
!6039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6040, size: 64)
!6040 = !DISubroutineType(types: !6041)
!6041 = !{!1521, !1315, !1719, !32, !1039, !1694, !32}
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !5879, file: !1317, line: 1844, baseType: !2218, size: 64, offset: 1344)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !5879, file: !1317, line: 1845, baseType: !6044, size: 64, offset: 1408)
!6044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6045, size: 64)
!6045 = !DISubroutineType(types: !6046)
!6046 = !{!32, !32}
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !5879, file: !1317, line: 1846, baseType: !5947, size: 64, offset: 1472)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !5879, file: !1317, line: 1847, baseType: !6049, size: 64, offset: 1536)
!6049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6050, size: 64)
!6050 = !DISubroutineType(types: !6051)
!6051 = !{!1521, !1883, !1315, !1694, !1039, !7}
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !5879, file: !1317, line: 1848, baseType: !6053, size: 64, offset: 1600)
!6053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6054, size: 64)
!6054 = !DISubroutineType(types: !6055)
!6055 = !{!1521, !1315, !1694, !1883, !1039, !7}
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !5879, file: !1317, line: 1849, baseType: !6057, size: 64, offset: 1664)
!6057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6058, size: 64)
!6058 = !DISubroutineType(types: !6059)
!6059 = !{!32, !1315, !998, !6060, !1802}
!6060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5950, size: 64)
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !5879, file: !1317, line: 1850, baseType: !6062, size: 64, offset: 1728)
!6062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6063, size: 64)
!6063 = !DISubroutineType(types: !6064)
!6064 = !{!998, !1315, !32, !1476, !1476}
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !5879, file: !1317, line: 1852, baseType: !6066, size: 64, offset: 1792)
!6066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6067, size: 64)
!6067 = !DISubroutineType(types: !6068)
!6068 = !{null, !1653, !1315}
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !5879, file: !1317, line: 1856, baseType: !6070, size: 64, offset: 1856)
!6070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6071, size: 64)
!6071 = !DISubroutineType(types: !6072)
!6072 = !{!1521, !1315, !1476, !1315, !1476, !1039, !7}
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !5879, file: !1317, line: 1858, baseType: !6074, size: 64, offset: 1920)
!6074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6075, size: 64)
!6075 = !DISubroutineType(types: !6076)
!6076 = !{!1476, !1315, !1476, !1315, !1476, !1476, !7}
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !5879, file: !1317, line: 1861, baseType: !5939, size: 64, offset: 1984)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !5874, file: !1317, line: 692, baseType: !1607, size: 64)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !1376, file: !1317, line: 694, baseType: !6080, size: 64, offset: 2560)
!6080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6081, size: 64)
!6081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !1317, line: 1100, size: 384, elements: !6082)
!6082 = !{!6083, !6084, !6085, !6086}
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !6081, file: !1317, line: 1101, baseType: !1670)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !6081, file: !1317, line: 1102, baseType: !284, size: 128)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !6081, file: !1317, line: 1103, baseType: !284, size: 128, offset: 128)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !6081, file: !1317, line: 1104, baseType: !284, size: 128, offset: 256)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !1376, file: !1317, line: 695, baseType: !1733, size: 1216, align: 64, offset: 2624)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !1376, file: !1317, line: 696, baseType: !284, size: 128, offset: 3840)
!6089 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 697, baseType: !6090, size: 64, offset: 3968)
!6090 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 697, size: 64, elements: !6091)
!6091 = !{!6092, !6093, !6094, !6097, !6098}
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !6090, file: !1317, line: 698, baseType: !1883, size: 64)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !6090, file: !1317, line: 699, baseType: !4540, size: 64)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !6090, file: !1317, line: 700, baseType: !6095, size: 64)
!6095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6096, size: 64)
!6096 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !1317, line: 700, flags: DIFlagFwdDecl)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !6090, file: !1317, line: 701, baseType: !1038, size: 64)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !6090, file: !1317, line: 702, baseType: !7, size: 32)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !1376, file: !1317, line: 705, baseType: !493, size: 32, offset: 4032)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !1376, file: !1317, line: 708, baseType: !493, size: 32, offset: 4064)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !1376, file: !1317, line: 709, baseType: !5715, size: 64, offset: 4096)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !1376, file: !1317, line: 720, baseType: !591, size: 64, offset: 4160)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !1339, file: !1336, line: 98, baseType: !1031, size: 256, offset: 448)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !1339, file: !1336, line: 101, baseType: !6105, size: 32, offset: 704)
!6105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !6106, line: 25, size: 32, elements: !6107)
!6106 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!6107 = !{!6108}
!6108 = !DIDerivedType(tag: DW_TAG_member, scope: !6105, file: !6106, line: 26, baseType: !6109, size: 32)
!6109 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6105, file: !6106, line: 26, size: 32, elements: !6110)
!6110 = !{!6111}
!6111 = !DIDerivedType(tag: DW_TAG_member, scope: !6109, file: !6106, line: 30, baseType: !6112, size: 32)
!6112 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6109, file: !6106, line: 30, size: 32, elements: !6113)
!6113 = !{!6114, !6115}
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6112, file: !6106, line: 31, baseType: !1670)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6112, file: !6106, line: 32, baseType: !32, size: 32)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !1339, file: !1336, line: 102, baseType: !5730, size: 64, offset: 768)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !1339, file: !1336, line: 103, baseType: !1545, size: 64, offset: 832)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !1339, file: !1336, line: 104, baseType: !312, size: 64, offset: 896)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !1339, file: !1336, line: 105, baseType: !591, size: 64, offset: 960)
!6120 = !DIDerivedType(tag: DW_TAG_member, scope: !1339, file: !1336, line: 107, baseType: !6121, size: 128, offset: 1024)
!6121 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1339, file: !1336, line: 107, size: 128, elements: !6122)
!6122 = !{!6123, !6124}
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !6121, file: !1336, line: 108, baseType: !284, size: 128)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !6121, file: !1336, line: 109, baseType: !6125, size: 64)
!6125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !1339, file: !1336, line: 111, baseType: !284, size: 128, offset: 1152)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !1339, file: !1336, line: 112, baseType: !284, size: 128, offset: 1280)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !1339, file: !1336, line: 120, baseType: !6129, size: 128, offset: 1408)
!6129 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1339, file: !1336, line: 116, size: 128, elements: !6130)
!6130 = !{!6131, !6132, !6133}
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !6129, file: !1336, line: 117, baseType: !276, size: 128)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !6129, file: !1336, line: 118, baseType: !1353, size: 128)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !6129, file: !1336, line: 119, baseType: !299, size: 128, align: 64)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1316, file: !1317, line: 922, baseType: !1375, size: 64, offset: 256)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1316, file: !1317, line: 923, baseType: !5877, size: 64, offset: 320)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1316, file: !1317, line: 929, baseType: !1670, offset: 384)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1316, file: !1317, line: 930, baseType: !6138, size: 32, offset: 384)
!6138 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !1317, line: 296, baseType: !7, size: 32, elements: !6139)
!6139 = !{!6140, !6141, !6142, !6143, !6144, !6145}
!6140 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!6141 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!6142 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!6143 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!6144 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!6145 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1316, file: !1317, line: 931, baseType: !371, size: 64, offset: 448)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1316, file: !1317, line: 932, baseType: !7, size: 32, offset: 512)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1316, file: !1317, line: 933, baseType: !5726, size: 32, offset: 544)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1316, file: !1317, line: 934, baseType: !1665, size: 192, offset: 576)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1316, file: !1317, line: 935, baseType: !1476, size: 64, offset: 768)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1316, file: !1317, line: 936, baseType: !6152, size: 192, offset: 832)
!6152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !1317, line: 885, size: 192, elements: !6153)
!6153 = !{!6154, !6155, !6156, !6164, !6165, !6166}
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6152, file: !1317, line: 886, baseType: !1912)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !6152, file: !1317, line: 887, baseType: !2571, size: 64)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !6152, file: !1317, line: 888, baseType: !6157, size: 32, offset: 64)
!6157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !2573, line: 9, baseType: !7, size: 32, elements: !6158)
!6158 = !{!6159, !6160, !6161, !6162, !6163}
!6159 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!6160 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!6161 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!6162 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!6163 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6152, file: !1317, line: 889, baseType: !1382, size: 32, offset: 96)
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !6152, file: !1317, line: 889, baseType: !1382, size: 32, offset: 128)
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !6152, file: !1317, line: 890, baseType: !32, size: 32, offset: 160)
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1316, file: !1317, line: 937, baseType: !2642, size: 64, offset: 1024)
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1316, file: !1317, line: 938, baseType: !6169, size: 256, offset: 1088)
!6169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !1317, line: 896, size: 256, elements: !6170)
!6170 = !{!6171, !6172, !6173, !6174, !6175, !6176}
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6169, file: !1317, line: 897, baseType: !312, size: 64)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6169, file: !1317, line: 898, baseType: !7, size: 32, offset: 64)
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !6169, file: !1317, line: 899, baseType: !7, size: 32, offset: 96)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !6169, file: !1317, line: 902, baseType: !7, size: 32, offset: 128)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !6169, file: !1317, line: 903, baseType: !7, size: 32, offset: 160)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !6169, file: !1317, line: 904, baseType: !1476, size: 64, offset: 192)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1316, file: !1317, line: 940, baseType: !331, size: 64, offset: 1344)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1316, file: !1317, line: 945, baseType: !591, size: 64, offset: 1408)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1316, file: !1317, line: 949, baseType: !284, size: 128, offset: 1472)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1316, file: !1317, line: 950, baseType: !284, size: 128, offset: 1600)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1316, file: !1317, line: 952, baseType: !1732, size: 64, offset: 1728)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1316, file: !1317, line: 953, baseType: !2025, size: 32, offset: 1792)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1316, file: !1317, line: 954, baseType: !2025, size: 32, offset: 1824)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !1105, file: !65, line: 59, baseType: !6185, size: 64, offset: 192)
!6185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6186, size: 64)
!6186 = !DISubroutineType(types: !6187)
!6187 = !{null, !1310}
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !1105, file: !65, line: 60, baseType: !6189, size: 64, offset: 256)
!6189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6190, size: 64)
!6190 = !DISubroutineType(types: !6191)
!6191 = !{!32, !1310, !591, !591}
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !1105, file: !65, line: 61, baseType: !6185, size: 64, offset: 320)
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !1105, file: !65, line: 62, baseType: !6194, size: 64, offset: 384)
!6194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6195, size: 64)
!6195 = !DISubroutineType(types: !6196)
!6196 = !{!591, !1310, !591}
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !1105, file: !65, line: 63, baseType: !6198, size: 64, offset: 448)
!6198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6199, size: 64)
!6199 = !DISubroutineType(types: !6200)
!6200 = !{!32, !1310, !6201, !1111}
!6201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6202, size: 64)
!6202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1112)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !1105, file: !65, line: 65, baseType: !6198, size: 64, offset: 512)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !1105, file: !65, line: 68, baseType: !6198, size: 64, offset: 576)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !1105, file: !65, line: 70, baseType: !6198, size: 64, offset: 640)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !1105, file: !65, line: 74, baseType: !6194, size: 64, offset: 704)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !1105, file: !65, line: 75, baseType: !6208, size: 64, offset: 768)
!6208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6209, size: 64)
!6209 = !DISubroutineType(types: !6210)
!6210 = !{!32, !1310, !591, !591, !331}
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !1105, file: !65, line: 76, baseType: !6212, size: 64, offset: 832)
!6212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6213, size: 64)
!6213 = !DISubroutineType(types: !6214)
!6214 = !{!32, !1310, !591}
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !1105, file: !65, line: 77, baseType: !6216, size: 64, offset: 896)
!6216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6217, size: 64)
!6217 = !DISubroutineType(types: !6218)
!6218 = !{!32, !1310, !591, !331}
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !1105, file: !65, line: 78, baseType: !6212, size: 64, offset: 960)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !1105, file: !65, line: 79, baseType: !6212, size: 64, offset: 1024)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !1105, file: !65, line: 82, baseType: !6222, size: 64, offset: 1088)
!6222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6223, size: 64)
!6223 = !DISubroutineType(types: !6224)
!6224 = !{!591, !1310, !1315, !32}
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !1105, file: !65, line: 84, baseType: !1415, size: 64, offset: 1152)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !1105, file: !65, line: 85, baseType: !6227, size: 64, offset: 1216)
!6227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6228, size: 64)
!6228 = !DISubroutineType(types: !6229)
!6229 = !{!32, !1310, !6230}
!6230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6231, size: 64)
!6231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !96, line: 65, size: 64, elements: !6232)
!6232 = !{!6233, !6234, !6235, !6236, !6237}
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !6231, file: !96, line: 66, baseType: !481, size: 8)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !6231, file: !96, line: 67, baseType: !481, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !6231, file: !96, line: 68, baseType: !481, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !6231, file: !96, line: 69, baseType: !2315, size: 16, offset: 16)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !6231, file: !96, line: 70, baseType: !942, size: 32, offset: 32)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !1105, file: !65, line: 86, baseType: !6239, size: 64, offset: 1280)
!6239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6240, size: 64)
!6240 = !DISubroutineType(types: !6241)
!6241 = !{!987, !591}
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !1105, file: !65, line: 87, baseType: !6243, size: 64, offset: 1344)
!6243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6244, size: 64)
!6244 = !DISubroutineType(types: !6245)
!6245 = !{null, !1310, !591, !1653}
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !1105, file: !65, line: 89, baseType: !6247, size: 64, offset: 1408)
!6247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6248, size: 64)
!6248 = !DISubroutineType(types: !6249)
!6249 = !{!32, !6250, !6252, !6255, !6255}
!6250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6251, size: 64)
!6251 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1100)
!6252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6253, size: 64)
!6253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6254)
!6254 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !65, line: 32, flags: DIFlagFwdDecl)
!6255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6256, size: 64)
!6256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6257)
!6257 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !65, line: 33, flags: DIFlagFwdDecl)
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !1105, file: !65, line: 95, baseType: !6259, size: 64, offset: 1472)
!6259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6260, size: 64)
!6260 = !DISubroutineType(types: !6261)
!6261 = !{!32, !1310, !6262}
!6262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6263, size: 64)
!6263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !65, line: 757, size: 4928, elements: !6264)
!6264 = !{!6265, !6266, !6267, !6268, !6269, !6270, !6271, !6272, !6273, !6274, !6275, !6276, !6277, !6278, !6286, !6287, !6288, !6328, !6329, !6330, !6331, !6332, !6333, !6334, !6335, !6336, !6337, !6338, !6339, !6340, !6342, !6343, !6362, !6363, !6364, !6373, !6375, !6376, !6377, !6378, !6379, !6381, !6382, !6397, !6399, !6405, !6411, !6419, !6420, !6421, !6422, !6423, !6424, !6432, !6439}
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !6263, file: !65, line: 758, baseType: !373, size: 64)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !6263, file: !65, line: 759, baseType: !987, size: 32, offset: 64)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !6263, file: !65, line: 760, baseType: !987, size: 32, offset: 96)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !6263, file: !65, line: 761, baseType: !987, size: 32, offset: 128)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !6263, file: !65, line: 762, baseType: !987, size: 32, offset: 160)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !6263, file: !65, line: 763, baseType: !987, size: 32, offset: 192)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6263, file: !65, line: 764, baseType: !987, size: 32, offset: 224)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !6263, file: !65, line: 765, baseType: !987, size: 32, offset: 256)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !6263, file: !65, line: 766, baseType: !987, size: 32, offset: 288)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !6263, file: !65, line: 767, baseType: !987, size: 32, offset: 320)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !6263, file: !65, line: 768, baseType: !987, size: 32, offset: 352)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !6263, file: !65, line: 769, baseType: !987, size: 32, offset: 384)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !6263, file: !65, line: 770, baseType: !987, size: 32, offset: 416)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !6263, file: !65, line: 771, baseType: !6279, size: 64, offset: 448)
!6279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6280, size: 64)
!6280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6281)
!6281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !65, line: 751, size: 96, elements: !6282)
!6282 = !{!6283, !6284, !6285}
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6281, file: !65, line: 752, baseType: !987, size: 32)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !6281, file: !65, line: 753, baseType: !64, size: 32, offset: 32)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !6281, file: !65, line: 754, baseType: !987, size: 32, offset: 64)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !6263, file: !65, line: 772, baseType: !1665, size: 192, offset: 512)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !6263, file: !65, line: 773, baseType: !1088, size: 64, offset: 704)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !6263, file: !65, line: 774, baseType: !6289, size: 64, offset: 768)
!6289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6290, size: 64)
!6290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !65, line: 586, size: 2944, elements: !6291)
!6291 = !{!6292, !6293, !6294, !6295, !6296, !6308, !6309, !6311, !6312, !6313, !6314}
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !6290, file: !65, line: 588, baseType: !276, size: 128)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6290, file: !65, line: 590, baseType: !1665, size: 192, offset: 128)
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !6290, file: !65, line: 591, baseType: !568, size: 32, offset: 320)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !6290, file: !65, line: 592, baseType: !331, size: 64, offset: 384)
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !6290, file: !65, line: 597, baseType: !6297, size: 256, offset: 448)
!6297 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6290, file: !65, line: 593, size: 256, elements: !6298)
!6298 = !{!6299, !6306, !6307}
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !6297, file: !65, line: 594, baseType: !6300, size: 112)
!6300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !65, line: 509, size: 112, elements: !6301)
!6301 = !{!6302, !6303, !6304}
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !6300, file: !65, line: 510, baseType: !794, size: 8)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !6300, file: !65, line: 511, baseType: !794, size: 8, offset: 8)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !6300, file: !65, line: 512, baseType: !6305, size: 96, offset: 16)
!6305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 96, elements: !4150)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !6297, file: !65, line: 595, baseType: !591, size: 64, offset: 128)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !6297, file: !65, line: 596, baseType: !771, size: 8, offset: 192)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !6290, file: !65, line: 602, baseType: !1088, size: 64, offset: 704)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !6290, file: !65, line: 604, baseType: !6310, size: 192, offset: 768)
!6310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1581, size: 192, elements: !1592)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !6290, file: !65, line: 606, baseType: !3398, size: 96, offset: 960)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !6290, file: !65, line: 608, baseType: !591, size: 64, offset: 1088)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !6290, file: !65, line: 609, baseType: !331, size: 64, offset: 1152)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !6290, file: !65, line: 610, baseType: !6315, size: 1728, offset: 1216)
!6315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !65, line: 569, size: 1728, elements: !6316)
!6316 = !{!6317, !6318, !6319, !6320, !6321, !6327}
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6315, file: !65, line: 570, baseType: !312, size: 64)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !6315, file: !65, line: 571, baseType: !312, size: 64, offset: 64)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6315, file: !65, line: 572, baseType: !5034, size: 1024, offset: 128)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !6315, file: !65, line: 573, baseType: !284, size: 128, offset: 1152)
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !6315, file: !65, line: 574, baseType: !6322, size: 384, offset: 1280)
!6322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !6323, line: 40, size: 384, elements: !6324)
!6323 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!6324 = !{!6325}
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6322, file: !6323, line: 41, baseType: !6326, size: 384)
!6326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !433, size: 384, elements: !2664)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !6315, file: !65, line: 575, baseType: !771, size: 8, offset: 1664)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !6263, file: !65, line: 775, baseType: !95, size: 32, offset: 832)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !6263, file: !65, line: 776, baseType: !129, size: 32, offset: 864)
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !6263, file: !65, line: 777, baseType: !771, size: 8, offset: 896)
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !6263, file: !65, line: 778, baseType: !771, size: 8, offset: 904)
!6332 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !6263, file: !65, line: 779, baseType: !771, size: 8, offset: 912)
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !6263, file: !65, line: 780, baseType: !771, size: 8, offset: 920)
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !6263, file: !65, line: 781, baseType: !771, size: 8, offset: 928)
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !6263, file: !65, line: 782, baseType: !771, size: 8, offset: 936)
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !6263, file: !65, line: 783, baseType: !170, size: 32, offset: 960)
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !6263, file: !65, line: 784, baseType: !276, size: 128, offset: 1024)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !6263, file: !65, line: 786, baseType: !6255, size: 64, offset: 1152)
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !6263, file: !65, line: 788, baseType: !292, size: 64, offset: 1216)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !6263, file: !65, line: 789, baseType: !6341, size: 64, offset: 1280)
!6341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !6263, file: !65, line: 790, baseType: !591, size: 64, offset: 1344)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !6263, file: !65, line: 791, baseType: !6344, size: 64, offset: 1408)
!6344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6345, size: 64)
!6345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !65, line: 734, size: 384, elements: !6346)
!6346 = !{!6347, !6348, !6349, !6350, !6358, !6359, !6360, !6361}
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !6345, file: !65, line: 735, baseType: !591, size: 64)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !6345, file: !65, line: 736, baseType: !591, size: 64, offset: 64)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !6345, file: !65, line: 737, baseType: !591, size: 64, offset: 128)
!6350 = !DIDerivedType(tag: DW_TAG_member, scope: !6345, file: !65, line: 738, baseType: !6351, size: 128, offset: 192)
!6351 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6345, file: !65, line: 738, size: 128, elements: !6352)
!6352 = !{!6353}
!6353 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !6351, file: !65, line: 742, baseType: !6354, size: 128)
!6354 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6351, file: !65, line: 739, size: 128, elements: !6355)
!6355 = !{!6356, !6357}
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !6354, file: !65, line: 740, baseType: !1310, size: 64)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !6354, file: !65, line: 741, baseType: !987, size: 32, offset: 64)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !6345, file: !65, line: 744, baseType: !771, size: 8, offset: 320)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !6345, file: !65, line: 745, baseType: !794, size: 8, offset: 328)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !6345, file: !65, line: 746, baseType: !581, size: 16, offset: 336)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !6345, file: !65, line: 747, baseType: !987, size: 32, offset: 352)
!6362 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !6263, file: !65, line: 792, baseType: !987, size: 32, offset: 1472)
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !6263, file: !65, line: 793, baseType: !6315, size: 1728, offset: 1536)
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6263, file: !65, line: 794, baseType: !6365, size: 64, offset: 3264)
!6365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6366, size: 64)
!6366 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6367)
!6367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !65, line: 432, size: 64, elements: !6368)
!6368 = !{!6369}
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !6367, file: !65, line: 433, baseType: !6370, size: 64)
!6370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6371, size: 64)
!6371 = !DISubroutineType(types: !6372)
!6372 = !{!32, !1088, !6201, !1111}
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !6263, file: !65, line: 795, baseType: !6374, size: 64, offset: 3328)
!6374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64)
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !6263, file: !65, line: 796, baseType: !1665, size: 192, offset: 3392)
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !6263, file: !65, line: 797, baseType: !1088, size: 64, offset: 3584)
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !6263, file: !65, line: 798, baseType: !1953, size: 64, offset: 3648)
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !6263, file: !65, line: 799, baseType: !331, size: 64, offset: 3712)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !6263, file: !65, line: 800, baseType: !6380, size: 128, offset: 3776)
!6380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1310, size: 128, elements: !2664)
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6263, file: !65, line: 801, baseType: !267, size: 128, offset: 3904)
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !6263, file: !65, line: 805, baseType: !6383, size: 64, offset: 4032)
!6383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6384, size: 64)
!6384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !65, line: 478, size: 576, elements: !6385)
!6385 = !{!6386, !6387, !6388, !6391, !6392, !6393, !6394, !6395, !6396}
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !6384, file: !65, line: 479, baseType: !1088, size: 64)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !6384, file: !65, line: 480, baseType: !290, size: 64, offset: 64)
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !6384, file: !65, line: 481, baseType: !6389, size: 64, offset: 128)
!6389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6390, size: 64)
!6390 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !65, line: 209, flags: DIFlagFwdDecl)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !6384, file: !65, line: 482, baseType: !591, size: 64, offset: 192)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !6384, file: !65, line: 483, baseType: !284, size: 128, offset: 256)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !6384, file: !65, line: 484, baseType: !771, size: 8, offset: 384)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !6384, file: !65, line: 485, baseType: !771, size: 8, offset: 392)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !6384, file: !65, line: 486, baseType: !591, size: 64, offset: 448)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !6384, file: !65, line: 487, baseType: !987, size: 32, offset: 512)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !6263, file: !65, line: 806, baseType: !6398, size: 64, offset: 4096)
!6398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6254, size: 64)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !6263, file: !65, line: 807, baseType: !6400, size: 64, offset: 4160)
!6400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6401, size: 64)
!6401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !96, line: 4963, size: 64, elements: !6402)
!6402 = !{!6403, !6404}
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !6401, file: !96, line: 4964, baseType: !493, size: 32)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !6401, file: !96, line: 4965, baseType: !493, size: 32, offset: 32)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !6263, file: !65, line: 808, baseType: !6406, size: 64, offset: 4224)
!6406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6407, size: 64)
!6407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !65, line: 724, size: 32, elements: !6408)
!6408 = !{!6409, !6410}
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !6407, file: !65, line: 725, baseType: !581, size: 16)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !6407, file: !65, line: 726, baseType: !771, size: 8, offset: 16)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !6263, file: !65, line: 815, baseType: !6412, size: 64, offset: 4288)
!6412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6413, size: 64)
!6413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !96, line: 4971, size: 128, elements: !6414)
!6414 = !{!6415, !6416, !6417, !6418}
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !6413, file: !96, line: 4972, baseType: !493, size: 32)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !6413, file: !96, line: 4973, baseType: !493, size: 32, offset: 32)
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !6413, file: !96, line: 4974, baseType: !493, size: 32, offset: 64)
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !6413, file: !96, line: 4975, baseType: !493, size: 32, offset: 96)
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !6263, file: !65, line: 823, baseType: !1802, size: 64, offset: 4352)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !6263, file: !65, line: 824, baseType: !987, size: 32, offset: 4416)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !6263, file: !65, line: 825, baseType: !987, size: 32, offset: 4448)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !6263, file: !65, line: 830, baseType: !987, size: 32, offset: 4480)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !6263, file: !65, line: 831, baseType: !987, size: 32, offset: 4512)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !6263, file: !65, line: 832, baseType: !6425, size: 64, offset: 4544)
!6425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6426, size: 64)
!6426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !6427, line: 17, size: 96, elements: !6428)
!6427 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!6428 = !{!6429, !6430, !6431}
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !6426, file: !6427, line: 18, baseType: !32, size: 32)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !6426, file: !6427, line: 18, baseType: !32, size: 32, offset: 32)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !6426, file: !6427, line: 18, baseType: !32, size: 32, offset: 64)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !6263, file: !65, line: 833, baseType: !6433, size: 64, offset: 4608)
!6433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6434, size: 64)
!6434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !65, line: 503, size: 128, align: 128, elements: !6435)
!6435 = !{!6436, !6437, !6438}
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !6434, file: !65, line: 504, baseType: !331, size: 64)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !6434, file: !65, line: 505, baseType: !331, size: 64, offset: 64)
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !6434, file: !65, line: 506, baseType: !3071, offset: 128)
!6439 = !DIDerivedType(tag: DW_TAG_member, scope: !6263, file: !65, line: 834, baseType: !6440, size: 256, offset: 4672)
!6440 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6263, file: !65, line: 834, size: 256, elements: !6441)
!6441 = !{!6442, !6443}
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !6440, file: !65, line: 835, baseType: !2829, size: 256)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !6440, file: !65, line: 836, baseType: !299, size: 128, align: 64)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !1105, file: !65, line: 96, baseType: !6445, size: 64, offset: 1536)
!6445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6446, size: 64)
!6446 = !DISubroutineType(types: !6447)
!6447 = !{null, !1310, !6262}
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !1105, file: !65, line: 97, baseType: !6449, size: 64, offset: 1600)
!6449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6450, size: 64)
!6450 = !DISubroutineType(types: !6451)
!6451 = !{null, !1310, !987, !1088, !1088}
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !1105, file: !65, line: 101, baseType: !6453, size: 64, offset: 1664)
!6453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6454, size: 64)
!6454 = !DISubroutineType(types: !6455)
!6455 = !{!32, !6250, !5532, !987}
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !1105, file: !65, line: 103, baseType: !6457, size: 64, offset: 1728)
!6457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6458, size: 64)
!6458 = !DISubroutineType(types: !6459)
!6459 = !{!32, !6250, !331, !2516}
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !1105, file: !65, line: 105, baseType: !6461, size: 64, offset: 1792)
!6461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6462, size: 64)
!6462 = !DISubroutineType(types: !6463)
!6463 = !{!32, !1310, !2098}
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !1105, file: !65, line: 106, baseType: !6465, size: 64, offset: 1856)
!6465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6466, size: 64)
!6466 = !DISubroutineType(types: !6467)
!6467 = !{!4826, !1310, !1315, !4827}
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !1105, file: !65, line: 110, baseType: !6469, size: 64, offset: 1920)
!6469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6470, size: 64)
!6470 = !DISubroutineType(types: !6471)
!6471 = !{!32, !6472, !591, !987}
!6472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6473, size: 64)
!6473 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !65, line: 38, flags: DIFlagFwdDecl)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !1105, file: !65, line: 112, baseType: !6475, size: 64, offset: 1984)
!6475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6476, size: 64)
!6476 = !DISubroutineType(types: !6477)
!6477 = !{null, !6472, !591, !987}
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !1105, file: !65, line: 114, baseType: !6479, size: 64, offset: 2048)
!6479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6480, size: 64)
!6480 = !DISubroutineType(types: !6481)
!6481 = !{!6482, !591}
!6482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6483, size: 64)
!6483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6484, size: 64)
!6484 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !65, line: 37, flags: DIFlagFwdDecl)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !1105, file: !65, line: 125, baseType: !6486, size: 64, offset: 2112)
!6486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6487, size: 64)
!6487 = !DISubroutineType(types: !6488)
!6488 = !{!771, !6250, !6250}
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !1105, file: !65, line: 129, baseType: !6490, size: 64, offset: 2176)
!6490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !292)
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !1105, file: !65, line: 130, baseType: !1001, size: 64, offset: 2240)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !1105, file: !65, line: 133, baseType: !6493, size: 64, offset: 2304)
!6493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6494, size: 64)
!6494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6495)
!6495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !65, line: 46, size: 256, elements: !6496)
!6496 = !{!6497, !6498, !6505, !6507}
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !6495, file: !65, line: 47, baseType: !1686, size: 64)
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !6495, file: !65, line: 48, baseType: !6499, size: 64, offset: 64)
!6499 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !65, line: 43, baseType: !6500)
!6500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6501, size: 64)
!6501 = !DISubroutineType(types: !6502)
!6502 = !{!32, !591, !6503}
!6503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6504, size: 64)
!6504 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !65, line: 36, flags: DIFlagFwdDecl)
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !6495, file: !65, line: 49, baseType: !6506, size: 64, offset: 128)
!6506 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !65, line: 45, baseType: !1415)
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !6495, file: !65, line: 50, baseType: !987, size: 32, offset: 192)
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !1100, file: !65, line: 146, baseType: !1310, size: 64, offset: 64)
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1100, file: !65, line: 150, baseType: !177, size: 32, offset: 128)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1100, file: !65, line: 151, baseType: !987, size: 32, offset: 160)
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1100, file: !65, line: 152, baseType: !987, size: 32, offset: 192)
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1100, file: !65, line: 153, baseType: !987, size: 32, offset: 224)
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1100, file: !65, line: 154, baseType: !987, size: 32, offset: 256)
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !1100, file: !65, line: 155, baseType: !32, size: 32, offset: 288)
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1100, file: !65, line: 156, baseType: !987, size: 32, offset: 320)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1100, file: !65, line: 157, baseType: !32, size: 32, offset: 352)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1100, file: !65, line: 158, baseType: !987, size: 32, offset: 384)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1100, file: !65, line: 159, baseType: !987, size: 32, offset: 416)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1100, file: !65, line: 160, baseType: !6398, size: 64, offset: 448)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !1100, file: !65, line: 161, baseType: !6521, size: 128, offset: 512)
!6521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !65, line: 136, size: 128, elements: !6522)
!6522 = !{!6523, !6524}
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !6521, file: !65, line: 137, baseType: !987, size: 32)
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !6521, file: !65, line: 138, baseType: !1953, size: 64, offset: 64)
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1100, file: !65, line: 162, baseType: !267, size: 128, offset: 640)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1100, file: !65, line: 163, baseType: !987, size: 32, offset: 768)
!6527 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !1100, file: !65, line: 164, baseType: !771, size: 8, offset: 800)
!6528 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1100, file: !65, line: 165, baseType: !771, size: 8, offset: 808)
!6529 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !1100, file: !65, line: 171, baseType: !373, size: 64, align: 512, offset: 1024)
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !1100, file: !65, line: 172, baseType: !373, size: 64, offset: 1088)
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1100, file: !65, line: 173, baseType: !2829, size: 256, offset: 1152)
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !1100, file: !65, line: 174, baseType: !1665, size: 192, offset: 1408)
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !1100, file: !65, line: 175, baseType: !331, size: 64, offset: 1600)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !1097, file: !65, line: 224, baseType: !290, size: 64, offset: 2048)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !1097, file: !65, line: 225, baseType: !6536, size: 64, offset: 2112)
!6536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6537, size: 64)
!6537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6538)
!6538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !65, line: 212, size: 256, elements: !6539)
!6539 = !{!6540, !6544, !6545, !6549}
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !6538, file: !65, line: 213, baseType: !6541, size: 64)
!6541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6542, size: 64)
!6542 = !DISubroutineType(types: !6543)
!6543 = !{!32, !1096, !591, !591}
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !6538, file: !65, line: 215, baseType: !6541, size: 64, offset: 64)
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !6538, file: !65, line: 217, baseType: !6546, size: 64, offset: 128)
!6546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6547, size: 64)
!6547 = !DISubroutineType(types: !6548)
!6548 = !{!32, !1096, !591, !591, !331}
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !6538, file: !65, line: 219, baseType: !6550, size: 64, offset: 192)
!6550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6551, size: 64)
!6551 = !DISubroutineType(types: !6552)
!6552 = !{!32, !1096, !591}
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !1097, file: !65, line: 226, baseType: !591, size: 64, offset: 2176)
!6554 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !1097, file: !65, line: 227, baseType: !284, size: 128, offset: 2240)
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !1081, file: !31, line: 911, baseType: !6556, size: 128)
!6556 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1081, file: !31, line: 908, size: 128, elements: !6557)
!6557 = !{!6558, !6561}
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !6556, file: !31, line: 909, baseType: !6559, size: 64)
!6559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6560, size: 64)
!6560 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !31, line: 909, flags: DIFlagFwdDecl)
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !6556, file: !31, line: 910, baseType: !581, size: 16, offset: 64)
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !398, file: !31, line: 1481, baseType: !6563, size: 64, offset: 4096)
!6563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6564, size: 64)
!6564 = !DISubroutineType(types: !6565)
!6565 = !{!32, !290, !32, !6566, !987}
!6566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6567, size: 64)
!6567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6568, size: 64)
!6568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !6569, line: 94, size: 256, elements: !6570)
!6569 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!6570 = !{!6571, !6572, !6573, !6574, !6575, !6576, !6581}
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6568, file: !6569, line: 95, baseType: !591, size: 64)
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6568, file: !6569, line: 96, baseType: !581, size: 16, offset: 64)
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !6568, file: !6569, line: 97, baseType: !581, size: 16, offset: 80)
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !6568, file: !6569, line: 98, baseType: !987, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!6575 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !6568, file: !6569, line: 99, baseType: !987, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !6568, file: !6569, line: 103, baseType: !6577, size: 64, offset: 128)
!6577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !6569, line: 50, size: 64, elements: !6578)
!6578 = !{!6579, !6580}
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6577, file: !6569, line: 51, baseType: !987, size: 32)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6577, file: !6569, line: 52, baseType: !987, size: 32, offset: 32)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !6568, file: !6569, line: 104, baseType: !290, size: 64, offset: 192)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !398, file: !31, line: 1484, baseType: !6583, size: 64, offset: 4160)
!6583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6584, size: 64)
!6584 = !DISubroutineType(types: !6585)
!6585 = !{!32, !290, !987, !987}
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !398, file: !31, line: 1486, baseType: !6587, size: 64, offset: 4224)
!6587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6588, size: 64)
!6588 = !DISubroutineType(types: !6589)
!6589 = !{!6590, !290}
!6590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6591, size: 64)
!6591 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !31, line: 1486, flags: DIFlagFwdDecl)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !398, file: !31, line: 1487, baseType: !6593, size: 64, offset: 4288)
!6593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6594, size: 64)
!6594 = !DISubroutineType(types: !6595)
!6595 = !{!32, !290, !6596, !32}
!6596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6597, size: 64)
!6597 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !31, line: 56, flags: DIFlagFwdDecl)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !398, file: !31, line: 1489, baseType: !6599, size: 64, offset: 4352)
!6599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6600, size: 64)
!6600 = !DISubroutineType(types: !6601)
!6601 = !{!290, !290}
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !264, file: !31, line: 1917, baseType: !6603, size: 64, offset: 4032)
!6603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6604, size: 64)
!6604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6605)
!6605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !251, line: 421, size: 3904, elements: !6606)
!6606 = !{!6607, !6608, !6628, !6629, !6640, !6652, !6656, !6660, !6664, !6665, !6666, !6683, !6684, !6696, !6697, !6727, !6728, !6744, !6748, !6757, !6768, !6772, !6785, !6789, !6793, !6803, !6804, !6805, !6806, !6810, !6811, !6913, !6917, !6927, !6931, !6932, !6933, !6937, !6943, !6947, !6951, !6967, !6971, !6983, !6987, !6988, !7003, !7015, !7016, !7032, !7033, !7047, !7051, !7055, !7056, !7095, !7101, !7112, !7113, !7114, !7115}
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !6605, file: !251, line: 422, baseType: !987, size: 32)
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !6605, file: !251, line: 423, baseType: !6609, size: 64, offset: 64)
!6609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6610, size: 64)
!6610 = !DISubroutineType(types: !6611)
!6611 = !{null, !290, !6612}
!6612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6613, size: 64)
!6613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !209, line: 177, size: 1568, elements: !6614)
!6614 = !{!6615, !6616, !6617, !6618, !6619, !6620, !6621, !6623, !6624, !6625, !6626, !6627}
!6615 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6613, file: !209, line: 178, baseType: !493, size: 32)
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !6613, file: !209, line: 179, baseType: !5031, size: 256, offset: 32)
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !6613, file: !209, line: 180, baseType: !5031, size: 256, offset: 288)
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !6613, file: !209, line: 181, baseType: !5031, size: 256, offset: 544)
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !6613, file: !209, line: 182, baseType: !5031, size: 256, offset: 800)
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !6613, file: !209, line: 183, baseType: !5031, size: 256, offset: 1056)
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !6613, file: !209, line: 184, baseType: !6622, size: 96, offset: 1312)
!6622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 96, elements: !4150)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !6613, file: !209, line: 185, baseType: !493, size: 32, offset: 1408)
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !6613, file: !209, line: 186, baseType: !493, size: 32, offset: 1440)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !6613, file: !209, line: 187, baseType: !493, size: 32, offset: 1472)
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !6613, file: !209, line: 188, baseType: !493, size: 32, offset: 1504)
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !6613, file: !209, line: 189, baseType: !493, size: 32, offset: 1536)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !6605, file: !251, line: 424, baseType: !401, size: 64, offset: 128)
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !6605, file: !251, line: 425, baseType: !6630, size: 64, offset: 192)
!6630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6631, size: 64)
!6631 = !DISubroutineType(types: !6632)
!6632 = !{null, !290, !6633, !591}
!6633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6634, size: 64)
!6634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !209, line: 310, size: 96, elements: !6635)
!6635 = !{!6636, !6637, !6638, !6639}
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6634, file: !209, line: 311, baseType: !493, size: 32)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !6634, file: !209, line: 312, baseType: !493, size: 32, offset: 32)
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6634, file: !209, line: 313, baseType: !493, size: 32, offset: 64)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6634, file: !209, line: 314, baseType: !480, offset: 96)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !6605, file: !251, line: 426, baseType: !6641, size: 64, offset: 256)
!6641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6642, size: 64)
!6642 = !DISubroutineType(types: !6643)
!6643 = !{null, !290, !6644}
!6644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6645, size: 64)
!6645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !209, line: 203, size: 160, elements: !6646)
!6646 = !{!6647, !6648, !6649, !6650}
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6645, file: !209, line: 204, baseType: !493, size: 32)
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !6645, file: !209, line: 205, baseType: !493, size: 32, offset: 32)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !6645, file: !209, line: 206, baseType: !493, size: 32, offset: 64)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !6645, file: !209, line: 207, baseType: !6651, size: 48, offset: 96)
!6651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 48, elements: !999)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !6605, file: !251, line: 427, baseType: !6653, size: 64, offset: 320)
!6653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6654, size: 64)
!6654 = !DISubroutineType(types: !6655)
!6655 = !{!32, !290, !6644}
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !6605, file: !251, line: 428, baseType: !6657, size: 64, offset: 384)
!6657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6658, size: 64)
!6658 = !DISubroutineType(types: !6659)
!6659 = !{!987, !290}
!6660 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !6605, file: !251, line: 429, baseType: !6661, size: 64, offset: 448)
!6661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6662, size: 64)
!6662 = !DISubroutineType(types: !6663)
!6663 = !{null, !290, !987}
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !6605, file: !251, line: 430, baseType: !401, size: 64, offset: 512)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !6605, file: !251, line: 431, baseType: !6657, size: 64, offset: 576)
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !6605, file: !251, line: 432, baseType: !6667, size: 64, offset: 640)
!6667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6668, size: 64)
!6668 = !DISubroutineType(types: !6669)
!6669 = !{!32, !290, !6670}
!6670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6671, size: 64)
!6671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !251, line: 93, size: 64, elements: !6672)
!6672 = !{!6673, !6674}
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !6671, file: !251, line: 94, baseType: !208, size: 32)
!6674 = !DIDerivedType(tag: DW_TAG_member, scope: !6671, file: !251, line: 95, baseType: !6675, size: 32, offset: 32)
!6675 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6671, file: !251, line: 95, size: 32, elements: !6676)
!6676 = !{!6677, !6678, !6679, !6680, !6681, !6682}
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !6675, file: !251, line: 96, baseType: !221, size: 32)
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !6675, file: !251, line: 97, baseType: !229, size: 32)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !6675, file: !251, line: 98, baseType: !235, size: 32)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !6675, file: !251, line: 99, baseType: !242, size: 32)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !6675, file: !251, line: 100, baseType: !246, size: 32)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !6675, file: !251, line: 101, baseType: !794, size: 8)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !6605, file: !251, line: 434, baseType: !401, size: 64, offset: 704)
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !6605, file: !251, line: 435, baseType: !6685, size: 64, offset: 768)
!6685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6686, size: 64)
!6686 = !DISubroutineType(types: !6687)
!6687 = !{!32, !290, !6688, !793}
!6688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6689, size: 64)
!6689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !209, line: 335, size: 128, elements: !6690)
!6690 = !{!6691, !6692, !6693, !6694, !6695}
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6689, file: !209, line: 336, baseType: !493, size: 32)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !6689, file: !209, line: 337, baseType: !493, size: 32, offset: 32)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6689, file: !209, line: 338, baseType: !493, size: 32, offset: 64)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6689, file: !209, line: 339, baseType: !493, size: 32, offset: 96)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6689, file: !209, line: 340, baseType: !480, offset: 128)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !6605, file: !251, line: 437, baseType: !6685, size: 64, offset: 832)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !6605, file: !251, line: 439, baseType: !6698, size: 64, offset: 896)
!6698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6699, size: 64)
!6699 = !DISubroutineType(types: !6700)
!6700 = !{!32, !290, !6701}
!6701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6702, size: 64)
!6702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !209, line: 462, size: 736, elements: !6703)
!6703 = !{!6704, !6705, !6706, !6707, !6708, !6709, !6710, !6711, !6712, !6713, !6714, !6715, !6716, !6717, !6718, !6719, !6720, !6721, !6722, !6723, !6724, !6725, !6726}
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6702, file: !209, line: 463, baseType: !493, size: 32)
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !6702, file: !209, line: 464, baseType: !493, size: 32, offset: 32)
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !6702, file: !209, line: 465, baseType: !493, size: 32, offset: 64)
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !6702, file: !209, line: 466, baseType: !493, size: 32, offset: 96)
!6708 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !6702, file: !209, line: 467, baseType: !493, size: 32, offset: 128)
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !6702, file: !209, line: 468, baseType: !493, size: 32, offset: 160)
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !6702, file: !209, line: 469, baseType: !493, size: 32, offset: 192)
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !6702, file: !209, line: 470, baseType: !493, size: 32, offset: 224)
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !6702, file: !209, line: 471, baseType: !493, size: 32, offset: 256)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !6702, file: !209, line: 472, baseType: !493, size: 32, offset: 288)
!6714 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !6702, file: !209, line: 473, baseType: !493, size: 32, offset: 320)
!6715 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !6702, file: !209, line: 474, baseType: !493, size: 32, offset: 352)
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !6702, file: !209, line: 475, baseType: !493, size: 32, offset: 384)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !6702, file: !209, line: 476, baseType: !493, size: 32, offset: 416)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !6702, file: !209, line: 477, baseType: !493, size: 32, offset: 448)
!6719 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !6702, file: !209, line: 478, baseType: !493, size: 32, offset: 480)
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !6702, file: !209, line: 479, baseType: !493, size: 32, offset: 512)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !6702, file: !209, line: 480, baseType: !493, size: 32, offset: 544)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !6702, file: !209, line: 481, baseType: !493, size: 32, offset: 576)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !6702, file: !209, line: 482, baseType: !493, size: 32, offset: 608)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !6702, file: !209, line: 483, baseType: !493, size: 32, offset: 640)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !6702, file: !209, line: 484, baseType: !493, size: 32, offset: 672)
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !6702, file: !209, line: 485, baseType: !493, size: 32, offset: 704)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !6605, file: !251, line: 440, baseType: !6698, size: 64, offset: 960)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !6605, file: !251, line: 441, baseType: !6729, size: 64, offset: 1024)
!6729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6730, size: 64)
!6730 = !DISubroutineType(types: !6731)
!6731 = !{null, !290, !6732}
!6732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6733, size: 64)
!6733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !209, line: 513, size: 288, elements: !6734)
!6734 = !{!6735, !6736, !6737, !6738, !6739, !6740, !6741, !6742, !6743}
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6733, file: !209, line: 514, baseType: !493, size: 32)
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !6733, file: !209, line: 515, baseType: !493, size: 32, offset: 32)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !6733, file: !209, line: 516, baseType: !493, size: 32, offset: 64)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !6733, file: !209, line: 517, baseType: !493, size: 32, offset: 96)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !6733, file: !209, line: 518, baseType: !493, size: 32, offset: 128)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !6733, file: !209, line: 519, baseType: !493, size: 32, offset: 160)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !6733, file: !209, line: 520, baseType: !493, size: 32, offset: 192)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !6733, file: !209, line: 521, baseType: !493, size: 32, offset: 224)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !6733, file: !209, line: 522, baseType: !493, size: 32, offset: 256)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !6605, file: !251, line: 443, baseType: !6745, size: 64, offset: 1088)
!6745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6746, size: 64)
!6746 = !DISubroutineType(types: !6747)
!6747 = !{!32, !290, !6732}
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !6605, file: !251, line: 445, baseType: !6749, size: 64, offset: 1152)
!6749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6750, size: 64)
!6750 = !DISubroutineType(types: !6751)
!6751 = !{null, !290, !6752}
!6752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6753, size: 64)
!6753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !251, line: 260, size: 128, elements: !6754)
!6754 = !{!6755, !6756}
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !6753, file: !251, line: 261, baseType: !331, size: 64)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !6753, file: !251, line: 262, baseType: !331, size: 64, offset: 64)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !6605, file: !251, line: 447, baseType: !6758, size: 64, offset: 1216)
!6758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6759, size: 64)
!6759 = !DISubroutineType(types: !6760)
!6760 = !{null, !290, !6761}
!6761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6762, size: 64)
!6762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !209, line: 575, size: 128, elements: !6763)
!6763 = !{!6764, !6765, !6766, !6767}
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6762, file: !209, line: 576, baseType: !493, size: 32)
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !6762, file: !209, line: 577, baseType: !493, size: 32, offset: 32)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !6762, file: !209, line: 578, baseType: !493, size: 32, offset: 64)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !6762, file: !209, line: 579, baseType: !493, size: 32, offset: 96)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !6605, file: !251, line: 449, baseType: !6769, size: 64, offset: 1280)
!6769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6770, size: 64)
!6770 = !DISubroutineType(types: !6771)
!6771 = !{!32, !290, !6761}
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !6605, file: !251, line: 451, baseType: !6773, size: 64, offset: 1344)
!6773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6774, size: 64)
!6774 = !DISubroutineType(types: !6775)
!6775 = !{null, !290, !6776, !5532}
!6776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6777, size: 64)
!6777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !209, line: 770, size: 128, elements: !6778)
!6778 = !{!6779, !6780, !6781, !6782, !6783}
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6777, file: !209, line: 771, baseType: !493, size: 32)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6777, file: !209, line: 772, baseType: !493, size: 32, offset: 32)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6777, file: !209, line: 773, baseType: !493, size: 32, offset: 64)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6777, file: !209, line: 774, baseType: !493, size: 32, offset: 96)
!6783 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6777, file: !209, line: 775, baseType: !6784, offset: 128)
!6784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, elements: !483)
!6785 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !6605, file: !251, line: 452, baseType: !6786, size: 64, offset: 1408)
!6786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6787, size: 64)
!6787 = !DISubroutineType(types: !6788)
!6788 = !{null, !290, !987, !793}
!6789 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !6605, file: !251, line: 453, baseType: !6790, size: 64, offset: 1472)
!6790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6791, size: 64)
!6791 = !DISubroutineType(types: !6792)
!6792 = !{!32, !290, !250}
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !6605, file: !251, line: 454, baseType: !6794, size: 64, offset: 1536)
!6794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6795, size: 64)
!6795 = !DISubroutineType(types: !6796)
!6796 = !{null, !290, !6797, !5532}
!6797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6798, size: 64)
!6798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !209, line: 789, size: 64, elements: !6799)
!6799 = !{!6800, !6801, !6802}
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6798, file: !209, line: 790, baseType: !493, size: 32)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !6798, file: !209, line: 791, baseType: !493, size: 32, offset: 32)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6798, file: !209, line: 792, baseType: !6784, offset: 64)
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !6605, file: !251, line: 456, baseType: !401, size: 64, offset: 1600)
!6804 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !6605, file: !251, line: 457, baseType: !405, size: 64, offset: 1664)
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !6605, file: !251, line: 458, baseType: !6657, size: 64, offset: 1728)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !6605, file: !251, line: 459, baseType: !6807, size: 64, offset: 1792)
!6807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6808, size: 64)
!6808 = !DISubroutineType(types: !6809)
!6809 = !{!32, !290, !987}
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !6605, file: !251, line: 460, baseType: !722, size: 64, offset: 1856)
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !6605, file: !251, line: 461, baseType: !6812, size: 64, offset: 1920)
!6812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6813, size: 64)
!6813 = !DISubroutineType(types: !6814)
!6814 = !{!32, !290, !6815, !2516}
!6815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6816, size: 64)
!6816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !209, line: 1088, size: 1536, elements: !6817)
!6817 = !{!6818, !6819, !6820, !6821, !6907, !6912}
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6816, file: !209, line: 1089, baseType: !493, size: 32)
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !6816, file: !209, line: 1090, baseType: !493, size: 32, offset: 32)
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6816, file: !209, line: 1091, baseType: !333, size: 64, offset: 64)
!6821 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !6816, file: !209, line: 1092, baseType: !6822, size: 1344, offset: 128)
!6822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !209, line: 992, size: 1344, elements: !6823)
!6823 = !{!6824, !6825, !6893, !6903, !6904, !6905, !6906}
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !6822, file: !209, line: 993, baseType: !493, size: 32)
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !6822, file: !209, line: 994, baseType: !6826, size: 416, offset: 32)
!6826 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !209, line: 939, size: 416, elements: !6827)
!6827 = !{!6828, !6836, !6837, !6838, !6845, !6846, !6855, !6863, !6864, !6865, !6872, !6873, !6881, !6889}
!6828 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !6826, file: !209, line: 940, baseType: !6829, size: 128)
!6829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !209, line: 845, size: 128, elements: !6830)
!6830 = !{!6831, !6832, !6833, !6834, !6835}
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !6829, file: !209, line: 846, baseType: !3208, size: 32)
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !6829, file: !209, line: 847, baseType: !3208, size: 32, offset: 32)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !6829, file: !209, line: 848, baseType: !535, size: 16, offset: 64)
!6834 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !6829, file: !209, line: 849, baseType: !535, size: 16, offset: 80)
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !6829, file: !209, line: 850, baseType: !481, size: 8, offset: 96)
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !6826, file: !209, line: 941, baseType: !6829, size: 128)
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !6826, file: !209, line: 942, baseType: !6829, size: 128)
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !6826, file: !209, line: 943, baseType: !6839, size: 128)
!6839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !209, line: 862, size: 128, elements: !6840)
!6840 = !{!6841, !6842, !6843, !6844}
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !6839, file: !209, line: 863, baseType: !3208, size: 32)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !6839, file: !209, line: 864, baseType: !3208, size: 32, offset: 32)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !6839, file: !209, line: 865, baseType: !3208, size: 32, offset: 64)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !6839, file: !209, line: 866, baseType: !481, size: 8, offset: 96)
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !6826, file: !209, line: 944, baseType: !6839, size: 128)
!6846 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !6826, file: !209, line: 945, baseType: !6847, size: 128)
!6847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !209, line: 880, size: 128, elements: !6848)
!6848 = !{!6849, !6850, !6851, !6852, !6853, !6854}
!6849 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !6847, file: !209, line: 881, baseType: !3208, size: 32)
!6850 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !6847, file: !209, line: 882, baseType: !3208, size: 32, offset: 32)
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !6847, file: !209, line: 883, baseType: !3208, size: 32, offset: 64)
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !6847, file: !209, line: 884, baseType: !481, size: 8, offset: 96)
!6853 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !6847, file: !209, line: 885, baseType: !481, size: 8, offset: 104)
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !6847, file: !209, line: 886, baseType: !481, size: 8, offset: 112)
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !6826, file: !209, line: 946, baseType: !6856, size: 320)
!6856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !209, line: 899, size: 320, elements: !6857)
!6857 = !{!6858, !6859, !6860, !6861, !6862}
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !6856, file: !209, line: 900, baseType: !3229, size: 128)
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !6856, file: !209, line: 901, baseType: !3229, size: 128, offset: 128)
!6860 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !6856, file: !209, line: 902, baseType: !535, size: 16, offset: 256)
!6861 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !6856, file: !209, line: 903, baseType: !535, size: 16, offset: 272)
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !6856, file: !209, line: 904, baseType: !481, size: 8, offset: 288)
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !6826, file: !209, line: 947, baseType: !6856, size: 320)
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !6826, file: !209, line: 948, baseType: !6856, size: 320)
!6865 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !6826, file: !209, line: 949, baseType: !6866, size: 320)
!6866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !209, line: 916, size: 320, elements: !6867)
!6867 = !{!6868, !6869, !6870, !6871}
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !6866, file: !209, line: 917, baseType: !3229, size: 128)
!6869 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !6866, file: !209, line: 918, baseType: !3229, size: 128, offset: 128)
!6870 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !6866, file: !209, line: 919, baseType: !3208, size: 32, offset: 256)
!6871 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !6866, file: !209, line: 920, baseType: !481, size: 8, offset: 288)
!6872 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !6826, file: !209, line: 950, baseType: !6866, size: 320)
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !6826, file: !209, line: 951, baseType: !6874, size: 320)
!6874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !209, line: 931, size: 320, elements: !6875)
!6875 = !{!6876, !6877, !6878, !6879, !6880}
!6876 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !6874, file: !209, line: 932, baseType: !3229, size: 128)
!6877 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !6874, file: !209, line: 933, baseType: !3229, size: 128, offset: 128)
!6878 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !6874, file: !209, line: 934, baseType: !3208, size: 32, offset: 256)
!6879 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !6874, file: !209, line: 935, baseType: !481, size: 8, offset: 288)
!6880 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !6874, file: !209, line: 936, baseType: !481, size: 8, offset: 296)
!6881 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !6826, file: !209, line: 952, baseType: !6882, size: 112)
!6882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !6883, line: 164, size: 112, elements: !6884)
!6883 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!6884 = !{!6885, !6887, !6888}
!6885 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !6882, file: !6883, line: 165, baseType: !6886, size: 48)
!6886 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 48, elements: !999)
!6887 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !6882, file: !6883, line: 166, baseType: !6886, size: 48, offset: 48)
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !6882, file: !6883, line: 167, baseType: !535, size: 16, offset: 96)
!6889 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !6826, file: !209, line: 953, baseType: !6890, size: 416)
!6890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 416, elements: !6891)
!6891 = !{!6892}
!6892 = !DISubrange(count: 52)
!6893 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !6822, file: !209, line: 995, baseType: !6894, size: 160, offset: 448)
!6894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !209, line: 967, size: 160, elements: !6895)
!6895 = !{!6896, !6898, !6899, !6900, !6901}
!6896 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !6894, file: !209, line: 968, baseType: !6897, size: 16)
!6897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 16, elements: !2664)
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !6894, file: !209, line: 969, baseType: !6886, size: 48, offset: 16)
!6899 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !6894, file: !209, line: 970, baseType: !535, size: 16, offset: 64)
!6900 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !6894, file: !209, line: 971, baseType: !535, size: 16, offset: 80)
!6901 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6894, file: !209, line: 972, baseType: !6902, size: 64, offset: 96)
!6902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3208, size: 64, elements: !2664)
!6903 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !6822, file: !209, line: 996, baseType: !6826, size: 416, offset: 608)
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !6822, file: !209, line: 997, baseType: !6894, size: 160, offset: 1024)
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !6822, file: !209, line: 998, baseType: !333, size: 64, offset: 1216)
!6906 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !6822, file: !209, line: 999, baseType: !493, size: 32, offset: 1280)
!6907 = !DIDerivedType(tag: DW_TAG_member, scope: !6816, file: !209, line: 1093, baseType: !6908, size: 32, offset: 1472)
!6908 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6816, file: !209, line: 1093, size: 32, elements: !6909)
!6909 = !{!6910, !6911}
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !6908, file: !209, line: 1094, baseType: !493, size: 32)
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !6908, file: !209, line: 1095, baseType: !493, size: 32)
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !6816, file: !209, line: 1097, baseType: !492, offset: 1504)
!6913 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !6605, file: !251, line: 463, baseType: !6914, size: 64, offset: 1984)
!6914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6915, size: 64)
!6915 = !DISubroutineType(types: !6916)
!6916 = !{!32, !290, !6815}
!6917 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !6605, file: !251, line: 464, baseType: !6918, size: 64, offset: 2048)
!6918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6919, size: 64)
!6919 = !DISubroutineType(types: !6920)
!6920 = !{!32, !290, !6921}
!6921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6922, size: 64)
!6922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !209, line: 1217, size: 1088, elements: !6923)
!6923 = !{!6924, !6925, !6926}
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6922, file: !209, line: 1218, baseType: !493, size: 32)
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !6922, file: !209, line: 1219, baseType: !493, size: 32, offset: 32)
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6922, file: !209, line: 1220, baseType: !5034, size: 1024, offset: 64)
!6927 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !6605, file: !251, line: 465, baseType: !6928, size: 64, offset: 2112)
!6928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6929, size: 64)
!6929 = !DISubroutineType(types: !6930)
!6930 = !{!32, !290, !2516}
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !6605, file: !251, line: 466, baseType: !6657, size: 64, offset: 2176)
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !6605, file: !251, line: 467, baseType: !6657, size: 64, offset: 2240)
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !6605, file: !251, line: 468, baseType: !6934, size: 64, offset: 2304)
!6934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6935, size: 64)
!6935 = !DISubroutineType(types: !6936)
!6936 = !{!32, !290, !2516, !793, !793}
!6937 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !6605, file: !251, line: 470, baseType: !6938, size: 64, offset: 2368)
!6938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6939, size: 64)
!6939 = !DISubroutineType(types: !6940)
!6940 = !{!32, !290, !5484, !6941, !6942}
!6941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6942, size: 64)
!6942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !794)
!6943 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !6605, file: !251, line: 472, baseType: !6944, size: 64, offset: 2432)
!6944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6945, size: 64)
!6945 = !DISubroutineType(types: !6946)
!6946 = !{!32, !290, !2516, !793, !793, !987}
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !6605, file: !251, line: 474, baseType: !6948, size: 64, offset: 2496)
!6948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6949, size: 64)
!6949 = !DISubroutineType(types: !6950)
!6950 = !{!32, !290, !5484, !6941, !6942, !2516, !771}
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !6605, file: !251, line: 477, baseType: !6952, size: 64, offset: 2560)
!6952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6953, size: 64)
!6953 = !DISubroutineType(types: !6954)
!6954 = !{null, !290, !6955}
!6955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6956, size: 64)
!6956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !209, line: 541, size: 288, elements: !6957)
!6957 = !{!6958, !6959, !6960, !6961, !6962, !6963, !6964, !6965, !6966}
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6956, file: !209, line: 542, baseType: !493, size: 32)
!6959 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !6956, file: !209, line: 543, baseType: !493, size: 32, offset: 32)
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !6956, file: !209, line: 544, baseType: !493, size: 32, offset: 64)
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !6956, file: !209, line: 545, baseType: !493, size: 32, offset: 96)
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !6956, file: !209, line: 546, baseType: !493, size: 32, offset: 128)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !6956, file: !209, line: 547, baseType: !493, size: 32, offset: 160)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !6956, file: !209, line: 548, baseType: !493, size: 32, offset: 192)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !6956, file: !209, line: 549, baseType: !493, size: 32, offset: 224)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !6956, file: !209, line: 550, baseType: !493, size: 32, offset: 256)
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !6605, file: !251, line: 478, baseType: !6968, size: 64, offset: 2624)
!6968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6969, size: 64)
!6969 = !DISubroutineType(types: !6970)
!6970 = !{!32, !290, !6955}
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !6605, file: !251, line: 479, baseType: !6972, size: 64, offset: 2688)
!6972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6973, size: 64)
!6973 = !DISubroutineType(types: !6974)
!6974 = !{!32, !290, !6975}
!6975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6976, size: 64)
!6976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !209, line: 1237, size: 128, elements: !6977)
!6977 = !{!6978, !6979, !6980, !6981, !6982}
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6976, file: !209, line: 1238, baseType: !493, size: 32)
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !6976, file: !209, line: 1239, baseType: !493, size: 32, offset: 32)
!6980 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6976, file: !209, line: 1240, baseType: !493, size: 32, offset: 64)
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6976, file: !209, line: 1241, baseType: !493, size: 32, offset: 96)
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6976, file: !209, line: 1242, baseType: !480, offset: 128)
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !6605, file: !251, line: 480, baseType: !6984, size: 64, offset: 2752)
!6984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6985, size: 64)
!6985 = !DISubroutineType(types: !6986)
!6986 = !{!32, !290, !6975, !591}
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !6605, file: !251, line: 482, baseType: !6972, size: 64, offset: 2816)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !6605, file: !251, line: 483, baseType: !6989, size: 64, offset: 2880)
!6989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6990, size: 64)
!6990 = !DISubroutineType(types: !6991)
!6991 = !{!32, !290, !6992}
!6992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6993, size: 64)
!6993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !209, line: 1317, size: 352, elements: !6994)
!6994 = !{!6995, !6996, !6997, !6998, !6999, !7001, !7002}
!6995 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6993, file: !209, line: 1318, baseType: !493, size: 32)
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !6993, file: !209, line: 1319, baseType: !493, size: 32, offset: 32)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !6993, file: !209, line: 1320, baseType: !942, size: 32, offset: 64)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !6993, file: !209, line: 1321, baseType: !493, size: 32, offset: 96)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !6993, file: !209, line: 1322, baseType: !7000, size: 96, offset: 128)
!7000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 96, elements: !1592)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !6993, file: !209, line: 1323, baseType: !493, size: 32, offset: 224)
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !6993, file: !209, line: 1324, baseType: !7000, size: 96, offset: 256)
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !6605, file: !251, line: 484, baseType: !7004, size: 64, offset: 2944)
!7004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7005, size: 64)
!7005 = !DISubroutineType(types: !7006)
!7006 = !{!32, !290, !7007}
!7007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7008, size: 64)
!7008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !209, line: 382, size: 352, elements: !7009)
!7009 = !{!7010, !7011, !7012, !7013}
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7008, file: !209, line: 383, baseType: !493, size: 32)
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7008, file: !209, line: 384, baseType: !493, size: 32, offset: 32)
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !7008, file: !209, line: 385, baseType: !493, size: 32, offset: 64)
!7013 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7008, file: !209, line: 386, baseType: !7014, size: 256, offset: 96)
!7014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 256, elements: !2433)
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !6605, file: !251, line: 486, baseType: !6685, size: 64, offset: 3008)
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !6605, file: !251, line: 488, baseType: !7017, size: 64, offset: 3072)
!7017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7018, size: 64)
!7018 = !DISubroutineType(types: !7019)
!7019 = !{!32, !290, !7020}
!7020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7021, size: 64)
!7021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !209, line: 360, size: 320, elements: !7022)
!7022 = !{!7023, !7024, !7025, !7026, !7027, !7028, !7029, !7030, !7031}
!7023 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7021, file: !209, line: 361, baseType: !493, size: 32)
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !7021, file: !209, line: 362, baseType: !493, size: 32, offset: 32)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !7021, file: !209, line: 363, baseType: !493, size: 32, offset: 64)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !7021, file: !209, line: 364, baseType: !493, size: 32, offset: 96)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !7021, file: !209, line: 365, baseType: !493, size: 32, offset: 128)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !7021, file: !209, line: 366, baseType: !493, size: 32, offset: 160)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !7021, file: !209, line: 367, baseType: !493, size: 32, offset: 192)
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !7021, file: !209, line: 368, baseType: !493, size: 32, offset: 224)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7021, file: !209, line: 369, baseType: !2663, size: 64, offset: 256)
!7032 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !6605, file: !251, line: 489, baseType: !7017, size: 64, offset: 3136)
!7033 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !6605, file: !251, line: 490, baseType: !7034, size: 64, offset: 3200)
!7034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7035, size: 64)
!7035 = !DISubroutineType(types: !7036)
!7036 = !{!32, !290, !7037, !591}
!7037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7038, size: 64)
!7038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7039)
!7039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !209, line: 244, size: 128, elements: !7040)
!7040 = !{!7041, !7042, !7043, !7044, !7045}
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7039, file: !209, line: 245, baseType: !493, size: 32)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7039, file: !209, line: 246, baseType: !493, size: 32, offset: 32)
!7043 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !7039, file: !209, line: 247, baseType: !493, size: 32, offset: 64)
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7039, file: !209, line: 248, baseType: !493, size: 32, offset: 96)
!7045 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7039, file: !209, line: 249, baseType: !7046, offset: 128)
!7046 = !DICompositeType(tag: DW_TAG_array_type, baseType: !591, elements: !483)
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !6605, file: !251, line: 492, baseType: !7048, size: 64, offset: 3264)
!7048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7049, size: 64)
!7049 = !DISubroutineType(types: !7050)
!7050 = !{!32, !290, !7037, !3258}
!7051 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !6605, file: !251, line: 494, baseType: !7052, size: 64, offset: 3328)
!7052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7053, size: 64)
!7053 = !DISubroutineType(types: !7054)
!7054 = !{!32, !290, !987, !6701}
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !6605, file: !251, line: 496, baseType: !7052, size: 64, offset: 3392)
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !6605, file: !251, line: 498, baseType: !7057, size: 64, offset: 3456)
!7057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7058, size: 64)
!7058 = !DISubroutineType(types: !7059)
!7059 = !{!32, !290, !7060}
!7060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7061, size: 64)
!7061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !251, line: 124, size: 768, elements: !7062)
!7062 = !{!7063, !7088}
!7063 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7061, file: !251, line: 125, baseType: !7064, size: 384)
!7064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !209, line: 1996, size: 384, elements: !7065)
!7065 = !{!7066, !7067, !7068, !7069, !7070, !7071, !7072, !7073, !7074, !7075, !7078, !7079, !7080, !7081, !7083, !7087}
!7066 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7064, file: !209, line: 1997, baseType: !493, size: 32)
!7067 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !7064, file: !209, line: 1998, baseType: !493, size: 32, offset: 32)
!7068 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !7064, file: !209, line: 1999, baseType: !481, size: 8, offset: 64)
!7069 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7064, file: !209, line: 2000, baseType: !481, size: 8, offset: 72)
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !7064, file: !209, line: 2001, baseType: !481, size: 8, offset: 80)
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !7064, file: !209, line: 2002, baseType: !481, size: 8, offset: 88)
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !7064, file: !209, line: 2003, baseType: !481, size: 8, offset: 96)
!7073 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !7064, file: !209, line: 2004, baseType: !481, size: 8, offset: 104)
!7074 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !7064, file: !209, line: 2005, baseType: !481, size: 8, offset: 112)
!7075 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !7064, file: !209, line: 2006, baseType: !7076, size: 8, offset: 120)
!7076 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !334, line: 20, baseType: !7077)
!7077 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!7078 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !7064, file: !209, line: 2007, baseType: !481, size: 8, offset: 128)
!7079 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !7064, file: !209, line: 2008, baseType: !481, size: 8, offset: 136)
!7080 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !7064, file: !209, line: 2009, baseType: !481, size: 8, offset: 144)
!7081 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !7064, file: !209, line: 2010, baseType: !7082, size: 8, offset: 152)
!7082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 8, elements: !2472)
!7083 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7064, file: !209, line: 2011, baseType: !7084, size: 224, offset: 160)
!7084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 224, elements: !7085)
!7085 = !{!7086}
!7086 = !DISubrange(count: 7)
!7087 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !7064, file: !209, line: 2012, baseType: !492, offset: 384)
!7088 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !7061, file: !251, line: 130, baseType: !7089, size: 384, offset: 384)
!7089 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7061, file: !251, line: 126, size: 384, elements: !7090)
!7090 = !{!7091, !7093, !7094}
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !7089, file: !251, line: 127, baseType: !7092, size: 128)
!7092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 128, elements: !2664)
!7093 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !7089, file: !251, line: 128, baseType: !7092, size: 128, offset: 128)
!7094 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !7089, file: !251, line: 129, baseType: !7092, size: 128, offset: 256)
!7095 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !6605, file: !251, line: 500, baseType: !7096, size: 64, offset: 3520)
!7096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7097, size: 64)
!7097 = !DISubroutineType(types: !7098)
!7098 = !{!32, !290, !7099}
!7099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7100, size: 64)
!7100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7061)
!7101 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !6605, file: !251, line: 502, baseType: !7102, size: 64, offset: 3584)
!7102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7103, size: 64)
!7103 = !DISubroutineType(types: !7104)
!7104 = !{!32, !290, !7105}
!7105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7106, size: 64)
!7106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !209, line: 1389, size: 128, elements: !7107)
!7107 = !{!7108, !7109, !7110, !7111}
!7108 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7106, file: !209, line: 1390, baseType: !493, size: 32)
!7109 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !7106, file: !209, line: 1392, baseType: !493, size: 32, offset: 32)
!7110 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !7106, file: !209, line: 1393, baseType: !493, size: 32, offset: 64)
!7111 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7106, file: !209, line: 1394, baseType: !493, size: 32, offset: 96)
!7112 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !6605, file: !251, line: 504, baseType: !7102, size: 64, offset: 3648)
!7113 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !6605, file: !251, line: 506, baseType: !6794, size: 64, offset: 3712)
!7114 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !6605, file: !251, line: 508, baseType: !7034, size: 64, offset: 3776)
!7115 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !6605, file: !251, line: 510, baseType: !7048, size: 64, offset: 3840)
!7116 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !264, file: !31, line: 1922, baseType: !7117, size: 64, offset: 4096)
!7117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7118, size: 64)
!7118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7119)
!7119 = !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !31, line: 1922, flags: DIFlagFwdDecl)
!7120 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !264, file: !31, line: 1933, baseType: !7121, size: 64, offset: 4160)
!7121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7122, size: 64)
!7122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7123)
!7123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !31, line: 270, size: 384, elements: !7124)
!7124 = !{!7125, !7129, !7135, !7148, !7152, !7156}
!7125 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !7123, file: !31, line: 271, baseType: !7126, size: 64)
!7126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7127, size: 64)
!7127 = !DISubroutineType(types: !7128)
!7128 = !{!32, !415, !290, !476, !3258, !3258, !7}
!7129 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !7123, file: !31, line: 274, baseType: !7130, size: 64, offset: 64)
!7130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7131, size: 64)
!7131 = !DISubroutineType(types: !7132)
!7132 = !{!32, !7133, !564}
!7133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7134, size: 64)
!7134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !416)
!7135 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !7123, file: !31, line: 275, baseType: !7136, size: 64, offset: 128)
!7136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7137, size: 64)
!7137 = !DISubroutineType(types: !7138)
!7138 = !{!32, !7139, !7141, !535}
!7139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7140, size: 64)
!7140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !924)
!7141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7142, size: 64)
!7142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !31, line: 244, size: 832, elements: !7143)
!7143 = !{!7144, !7145, !7146}
!7144 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !7142, file: !31, line: 245, baseType: !7, size: 32)
!7145 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !7142, file: !31, line: 246, baseType: !3325, size: 32, offset: 32)
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !7142, file: !31, line: 254, baseType: !7147, size: 768, offset: 64)
!7147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 768, elements: !4150)
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !7123, file: !31, line: 276, baseType: !7149, size: 64, offset: 192)
!7149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7150, size: 64)
!7150 = !DISubroutineType(types: !7151)
!7151 = !{null, !7141, !773, !946}
!7152 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !7123, file: !31, line: 279, baseType: !7153, size: 64, offset: 256)
!7153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7154, size: 64)
!7154 = !DISubroutineType(types: !7155)
!7155 = !{!771, !292, !7}
!7156 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !7123, file: !31, line: 280, baseType: !7157, size: 64, offset: 320)
!7157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7158, size: 64)
!7158 = !DISubroutineType(types: !7159)
!7159 = !{!535, !7133}
!7160 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !264, file: !31, line: 1935, baseType: !7, size: 32, offset: 4224)
!7161 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !264, file: !31, line: 1936, baseType: !7, size: 32, offset: 4256)
!7162 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !264, file: !31, line: 1938, baseType: !476, size: 16, offset: 4288)
!7163 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !264, file: !31, line: 1939, baseType: !476, size: 16, offset: 4304)
!7164 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !264, file: !31, line: 1941, baseType: !482, size: 8, offset: 4320)
!7165 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !264, file: !31, line: 1942, baseType: !482, size: 8, offset: 4328)
!7166 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !264, file: !31, line: 1944, baseType: !482, size: 8, offset: 4336)
!7167 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !264, file: !31, line: 1945, baseType: !482, size: 8, offset: 4344)
!7168 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !264, file: !31, line: 1952, baseType: !7, size: 32, offset: 4352)
!7169 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !264, file: !31, line: 1953, baseType: !7, size: 32, offset: 4384)
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !264, file: !31, line: 1954, baseType: !7, size: 32, offset: 4416)
!7171 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !264, file: !31, line: 1955, baseType: !476, size: 16, offset: 4448)
!7172 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !264, file: !31, line: 1956, baseType: !476, size: 16, offset: 4464)
!7173 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !264, file: !31, line: 1957, baseType: !482, size: 8, offset: 4480)
!7174 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !264, file: !31, line: 1958, baseType: !482, size: 8, offset: 4488)
!7175 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !264, file: !31, line: 1960, baseType: !476, size: 16, offset: 4496)
!7176 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !264, file: !31, line: 1961, baseType: !476, size: 16, offset: 4512)
!7177 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !264, file: !31, line: 1964, baseType: !1031, size: 256, offset: 4528)
!7178 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !264, file: !31, line: 1965, baseType: !482, size: 8, offset: 4784)
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !264, file: !31, line: 1966, baseType: !482, size: 8, offset: 4792)
!7180 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !264, file: !31, line: 1967, baseType: !482, size: 8, offset: 4800)
!7181 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !264, file: !31, line: 1968, baseType: !482, size: 8, offset: 4808)
!7182 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !264, file: !31, line: 1970, baseType: !476, size: 16, offset: 4816)
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !264, file: !31, line: 1971, baseType: !476, size: 16, offset: 4832)
!7184 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !264, file: !31, line: 1972, baseType: !476, size: 16, offset: 4848)
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !264, file: !31, line: 1973, baseType: !1670, offset: 4864)
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !264, file: !31, line: 1975, baseType: !7187, size: 192, offset: 4864)
!7187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !31, line: 224, size: 192, elements: !7188)
!7188 = !{!7189, !7190}
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7187, file: !31, line: 225, baseType: !284, size: 128)
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7187, file: !31, line: 226, baseType: !32, size: 32, offset: 128)
!7191 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !264, file: !31, line: 1976, baseType: !7187, size: 192, offset: 5056)
!7192 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !264, file: !31, line: 1977, baseType: !7187, size: 192, offset: 5248)
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !264, file: !31, line: 1980, baseType: !4581, size: 64, offset: 5440)
!7194 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !264, file: !31, line: 1985, baseType: !7, size: 32, offset: 5504)
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !264, file: !31, line: 1986, baseType: !7, size: 32, offset: 5536)
!7196 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !264, file: !31, line: 1987, baseType: !771, size: 8, offset: 5568)
!7197 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !264, file: !31, line: 1996, baseType: !7198, size: 64, offset: 5632)
!7198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7199, size: 64)
!7199 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !31, line: 1996, flags: DIFlagFwdDecl)
!7200 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !264, file: !31, line: 2007, baseType: !7201, size: 64, offset: 5696)
!7201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7202, size: 64)
!7202 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !31, line: 2007, flags: DIFlagFwdDecl)
!7203 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !264, file: !31, line: 2011, baseType: !7204, size: 64, offset: 5760)
!7204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7205, size: 64)
!7205 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !31, line: 2011, flags: DIFlagFwdDecl)
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !264, file: !31, line: 2015, baseType: !7207, size: 64, offset: 5824)
!7207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7208, size: 64)
!7208 = !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !31, line: 62, flags: DIFlagFwdDecl)
!7209 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !264, file: !31, line: 2016, baseType: !7210, size: 64, offset: 5888)
!7210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7211, size: 64)
!7211 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !31, line: 64, flags: DIFlagFwdDecl)
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !264, file: !31, line: 2025, baseType: !564, size: 64, offset: 5952)
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !264, file: !31, line: 2027, baseType: !7214, size: 64, offset: 6016)
!7214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7215, size: 64)
!7215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !31, line: 736, size: 1536, elements: !7216)
!7216 = !{!7217, !7218, !7219}
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7215, file: !31, line: 741, baseType: !4573, size: 512)
!7218 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7215, file: !31, line: 742, baseType: !290, size: 64, offset: 512)
!7219 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !7215, file: !31, line: 743, baseType: !7220, size: 512, align: 512, offset: 1024)
!7220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !6569, line: 57, size: 512, align: 512, elements: !7221)
!7221 = !{!7222, !7223, !7224, !7225}
!7222 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7220, file: !6569, line: 58, baseType: !290, size: 64)
!7223 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !7220, file: !6569, line: 59, baseType: !987, size: 32, offset: 64)
!7224 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !7220, file: !6569, line: 60, baseType: !987, size: 32, offset: 96)
!7225 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !7220, file: !6569, line: 61, baseType: !6577, size: 64, offset: 128)
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !264, file: !31, line: 2028, baseType: !7, size: 32, offset: 6080)
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !264, file: !31, line: 2029, baseType: !7, size: 32, offset: 6112)
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !264, file: !31, line: 2031, baseType: !1088, size: 64, offset: 6144)
!7229 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !264, file: !31, line: 2032, baseType: !312, size: 64, offset: 6208)
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !264, file: !31, line: 2033, baseType: !32, size: 32, offset: 6272)
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !264, file: !31, line: 2034, baseType: !7232, size: 64, offset: 6336)
!7232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7233, size: 64)
!7233 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !31, line: 430, baseType: !7234)
!7234 = !DISubroutineType(types: !7235)
!7235 = !{!7236, !7237}
!7236 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !31, line: 429, baseType: !257)
!7237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !264, file: !31, line: 2035, baseType: !591, size: 64, offset: 6400)
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !264, file: !31, line: 2040, baseType: !7240, size: 64, offset: 6464)
!7240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7241, size: 64)
!7241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !31, line: 584, size: 1600, elements: !7242)
!7242 = !{!7243, !7244, !7247, !7248, !7249, !7250, !7251, !7252, !7253, !7254, !7255, !7256}
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7241, file: !31, line: 588, baseType: !290, size: 64)
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !7241, file: !31, line: 589, baseType: !7245, size: 64, offset: 64)
!7245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7246, size: 64)
!7246 = !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !31, line: 589, flags: DIFlagFwdDecl)
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !7241, file: !31, line: 590, baseType: !7245, size: 64, offset: 128)
!7248 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7241, file: !31, line: 592, baseType: !4573, size: 512, offset: 192)
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !7241, file: !31, line: 597, baseType: !312, size: 64, offset: 704)
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !7241, file: !31, line: 602, baseType: !312, size: 64, offset: 768)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !7241, file: !31, line: 605, baseType: !290, size: 64, offset: 832)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !7241, file: !31, line: 612, baseType: !1670, offset: 896)
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !7241, file: !31, line: 613, baseType: !32, size: 32, offset: 896)
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !7241, file: !31, line: 617, baseType: !312, size: 64, offset: 960)
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7241, file: !31, line: 619, baseType: !312, size: 64, offset: 1024)
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !7241, file: !31, line: 622, baseType: !7257, size: 512, offset: 1088)
!7257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !7258, line: 43, size: 512, elements: !7259)
!7258 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!7259 = !{!7260, !7261, !7262, !7263, !7264, !7265, !7266, !7267, !7268, !7269, !7270, !7271, !7272}
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !7257, file: !7258, line: 45, baseType: !7, size: 32)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !7257, file: !7258, line: 46, baseType: !7, size: 32, offset: 32)
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !7257, file: !7258, line: 47, baseType: !7, size: 32, offset: 64)
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !7257, file: !7258, line: 51, baseType: !7, size: 32, offset: 96)
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !7257, file: !7258, line: 52, baseType: !7, size: 32, offset: 128)
!7265 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !7257, file: !7258, line: 54, baseType: !7, size: 32, offset: 160)
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !7257, file: !7258, line: 55, baseType: !7, size: 32, offset: 192)
!7267 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !7257, file: !7258, line: 56, baseType: !7, size: 32, offset: 224)
!7268 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !7257, file: !7258, line: 58, baseType: !7, size: 32, offset: 256)
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !7257, file: !7258, line: 59, baseType: !312, size: 64, offset: 320)
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !7257, file: !7258, line: 62, baseType: !7, size: 32, offset: 384)
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !7257, file: !7258, line: 63, baseType: !7, size: 32, offset: 416)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !7257, file: !7258, line: 64, baseType: !7, size: 32, offset: 448)
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !264, file: !31, line: 2045, baseType: !1031, size: 256, offset: 6528)
!7274 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !264, file: !31, line: 2049, baseType: !276, size: 128, offset: 6784)
!7275 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !264, file: !31, line: 2054, baseType: !7240, size: 64, offset: 6912)
!7276 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !264, file: !31, line: 2055, baseType: !7, size: 32, offset: 6976)
!7277 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !264, file: !31, line: 2056, baseType: !7, size: 32, offset: 7008)
!7278 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !264, file: !31, line: 2057, baseType: !7245, size: 64, offset: 7040)
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !264, file: !31, line: 2058, baseType: !7, size: 32, offset: 7104)
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !264, file: !31, line: 2059, baseType: !1670, offset: 7136)
!7281 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !264, file: !31, line: 2061, baseType: !7282, size: 64, offset: 7168)
!7282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7283, size: 64)
!7283 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !31, line: 879, flags: DIFlagFwdDecl)
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !264, file: !31, line: 2075, baseType: !3235, size: 320, offset: 7232)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !264, file: !31, line: 2076, baseType: !32, size: 32, offset: 7552)
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !264, file: !31, line: 2078, baseType: !987, size: 32, offset: 7584)
!7287 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !264, file: !31, line: 2080, baseType: !284, size: 128, offset: 7616)
!7288 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !264, file: !31, line: 2081, baseType: !1001, size: 64, offset: 7744)
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !264, file: !31, line: 2083, baseType: !284, size: 128, offset: 7808)
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !264, file: !31, line: 2091, baseType: !263, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !264, file: !31, line: 2093, baseType: !771, size: 8, offset: 7944)
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !264, file: !31, line: 2098, baseType: !7293, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!7293 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !264, file: !31, line: 2095, baseType: !7, size: 32, elements: !7294)
!7294 = !{!7295, !7296}
!7295 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!7296 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !264, file: !31, line: 2100, baseType: !771, size: 8, offset: 7968)
!7298 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !264, file: !31, line: 2101, baseType: !405, size: 64, offset: 8000)
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !264, file: !31, line: 2107, baseType: !7300, size: 64, offset: 8064)
!7300 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !2984, line: 318, baseType: !7301)
!7301 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2984, line: 314, size: 64, elements: !7302)
!7302 = !{!7303}
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !7301, file: !2984, line: 316, baseType: !2982, size: 64)
!7304 = !DIDerivedType(tag: DW_TAG_member, scope: !264, file: !31, line: 2110, baseType: !7305, size: 64, offset: 8128)
!7305 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !264, file: !31, line: 2110, size: 64, elements: !7306)
!7306 = !{!7307, !7308, !7329, !7338}
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !7305, file: !31, line: 2111, baseType: !591, size: 64)
!7308 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !7305, file: !31, line: 2112, baseType: !7309, size: 64)
!7309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7310, size: 64)
!7310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !31, line: 2542, size: 128, align: 128, elements: !7311)
!7311 = !{!7312, !7327, !7328}
!7312 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !7310, file: !31, line: 2543, baseType: !7313, size: 64)
!7313 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !3072, line: 79, baseType: !7314)
!7314 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3072, line: 77, size: 64, elements: !7315)
!7315 = !{!7316}
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !7314, file: !3072, line: 78, baseType: !7317, size: 64)
!7317 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !7318, line: 26, baseType: !7319)
!7318 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!7319 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7318, line: 24, size: 64, elements: !7320)
!7320 = !{!7321}
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !7319, file: !7318, line: 25, baseType: !7322, size: 64)
!7322 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !7323, line: 12, baseType: !7324)
!7323 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!7324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7323, line: 10, size: 64, elements: !7325)
!7325 = !{!7326}
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !7324, file: !7323, line: 11, baseType: !371, size: 64)
!7327 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !7310, file: !31, line: 2544, baseType: !7313, size: 64, offset: 64)
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !7310, file: !31, line: 2545, baseType: !3071, offset: 128)
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !7305, file: !31, line: 2113, baseType: !7330, size: 64)
!7330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7331, size: 64)
!7331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !31, line: 2534, size: 256, align: 256, elements: !7332)
!7332 = !{!7333, !7334, !7335, !7336, !7337}
!7333 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !7331, file: !31, line: 2535, baseType: !331, size: 64)
!7334 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !7331, file: !31, line: 2536, baseType: !331, size: 64, offset: 64)
!7335 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !7331, file: !31, line: 2537, baseType: !331, size: 64, offset: 128)
!7336 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !7331, file: !31, line: 2538, baseType: !331, size: 64, offset: 192)
!7337 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !7331, file: !31, line: 2539, baseType: !3071, offset: 256)
!7338 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !7305, file: !31, line: 2114, baseType: !7339, size: 64)
!7339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7340, size: 64)
!7340 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !31, line: 2114, flags: DIFlagFwdDecl)
!7341 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !264, file: !31, line: 2124, baseType: !4569, size: 5568, offset: 8192)
!7342 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !264, file: !31, line: 2125, baseType: !7343, size: 256, offset: 13760)
!7343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4651, size: 256, elements: !2272)
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !264, file: !31, line: 2126, baseType: !4651, size: 64, offset: 14016)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !264, file: !31, line: 2128, baseType: !7346, size: 64, offset: 14080)
!7346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7347, size: 64)
!7347 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7348)
!7348 = !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !31, line: 2128, flags: DIFlagFwdDecl)
!7349 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !264, file: !31, line: 2132, baseType: !7, size: 32, offset: 14144)
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !264, file: !31, line: 2134, baseType: !581, size: 16, offset: 14176)
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !264, file: !31, line: 2139, baseType: !2314, size: 16, offset: 14192)
!7352 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !264, file: !31, line: 2140, baseType: !7353, size: 512, offset: 14208)
!7353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7354, size: 512, elements: !269)
!7354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !31, line: 793, size: 32, elements: !7355)
!7355 = !{!7356, !7357}
!7356 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7354, file: !31, line: 794, baseType: !581, size: 16)
!7357 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !7354, file: !31, line: 795, baseType: !581, size: 16, offset: 16)
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !264, file: !31, line: 2141, baseType: !7359, size: 128, offset: 14720)
!7359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 128, elements: !269)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !264, file: !31, line: 2149, baseType: !7361, size: 64, offset: 14848)
!7361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7362, size: 64)
!7362 = !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !251, line: 536, flags: DIFlagFwdDecl)
!7363 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !264, file: !31, line: 2150, baseType: !7364, size: 64, offset: 14912)
!7364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7365, size: 64)
!7365 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !31, line: 60, flags: DIFlagFwdDecl)
!7366 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !264, file: !31, line: 2151, baseType: !7367, size: 64, offset: 14976)
!7367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64)
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !264, file: !31, line: 2152, baseType: !7367, size: 64, offset: 15040)
!7369 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !264, file: !31, line: 2153, baseType: !771, size: 8, offset: 15104)
!7370 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !264, file: !31, line: 2154, baseType: !7, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !264, file: !31, line: 2156, baseType: !284, size: 128, offset: 15168)
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !264, file: !31, line: 2162, baseType: !7373, size: 64, offset: 15296)
!7373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7374, size: 64)
!7374 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7375)
!7375 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !31, line: 68, flags: DIFlagFwdDecl)
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !264, file: !31, line: 2163, baseType: !7377, size: 64, offset: 15360)
!7377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7378, size: 64)
!7378 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !31, line: 69, flags: DIFlagFwdDecl)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !264, file: !31, line: 2166, baseType: !7380, size: 384, offset: 15424)
!7380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7381, size: 384, elements: !1592)
!7381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !31, line: 889, size: 128, elements: !7382)
!7382 = !{!7383, !7384}
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7381, file: !31, line: 890, baseType: !1088, size: 64)
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !7381, file: !31, line: 891, baseType: !7385, size: 64, offset: 64)
!7385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7386, size: 64)
!7386 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !31, line: 880, flags: DIFlagFwdDecl)
!7387 = !{!7388, !7389, !7390, !7391, !7392, !7393}
!7388 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!7389 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!7390 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!7391 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!7392 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!7393 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!7394 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "device_link_state", file: !4570, line: 306, baseType: !32, size: 32, elements: !7395)
!7395 = !{!7396, !7397, !7398, !7399, !7400, !7401}
!7396 = !DIEnumerator(name: "DL_STATE_NONE", value: -1)
!7397 = !DIEnumerator(name: "DL_STATE_DORMANT", value: 0)
!7398 = !DIEnumerator(name: "DL_STATE_AVAILABLE", value: 1)
!7399 = !DIEnumerator(name: "DL_STATE_CONSUMER_PROBE", value: 2)
!7400 = !DIEnumerator(name: "DL_STATE_ACTIVE", value: 3)
!7401 = !DIEnumerator(name: "DL_STATE_SUPPLIER_UNBIND", value: 4)
!7402 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7403, line: 10, baseType: !7, size: 32, elements: !7404)
!7403 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!7404 = !{!7405, !7406}
!7405 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!7406 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!7407 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobject_action", file: !4574, line: 53, baseType: !7, size: 32, elements: !7408)
!7408 = !{!7409, !7410, !7411, !7412, !7413, !7414, !7415, !7416}
!7409 = !DIEnumerator(name: "KOBJ_ADD", value: 0, isUnsigned: true)
!7410 = !DIEnumerator(name: "KOBJ_REMOVE", value: 1, isUnsigned: true)
!7411 = !DIEnumerator(name: "KOBJ_CHANGE", value: 2, isUnsigned: true)
!7412 = !DIEnumerator(name: "KOBJ_MOVE", value: 3, isUnsigned: true)
!7413 = !DIEnumerator(name: "KOBJ_ONLINE", value: 4, isUnsigned: true)
!7414 = !DIEnumerator(name: "KOBJ_OFFLINE", value: 5, isUnsigned: true)
!7415 = !DIEnumerator(name: "KOBJ_BIND", value: 6, isUnsigned: true)
!7416 = !DIEnumerator(name: "KOBJ_UNBIND", value: 7, isUnsigned: true)
!7417 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dpm_order", file: !4926, line: 800, baseType: !7, size: 32, elements: !7418)
!7418 = !{!7419, !7420, !7421, !7422}
!7419 = !DIEnumerator(name: "DPM_ORDER_NONE", value: 0, isUnsigned: true)
!7420 = !DIEnumerator(name: "DPM_ORDER_DEV_AFTER_PARENT", value: 1, isUnsigned: true)
!7421 = !DIEnumerator(name: "DPM_ORDER_PARENT_BEFORE_DEV", value: 2, isUnsigned: true)
!7422 = !DIEnumerator(name: "DPM_ORDER_DEV_LAST", value: 3, isUnsigned: true)
!7423 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "refcount_saturation_type", file: !569, line: 119, baseType: !7, size: 32, elements: !7424)
!7424 = !{!7425, !7426, !7427, !7428, !7429}
!7425 = !DIEnumerator(name: "REFCOUNT_ADD_NOT_ZERO_OVF", value: 0, isUnsigned: true)
!7426 = !DIEnumerator(name: "REFCOUNT_ADD_OVF", value: 1, isUnsigned: true)
!7427 = !DIEnumerator(name: "REFCOUNT_ADD_UAF", value: 2, isUnsigned: true)
!7428 = !DIEnumerator(name: "REFCOUNT_SUB_UAF", value: 3, isUnsigned: true)
!7429 = !DIEnumerator(name: "REFCOUNT_DEC_LEAK", value: 4, isUnsigned: true)
!7430 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !7431, line: 305, baseType: !7, size: 32, elements: !7432)
!7431 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!7432 = !{!7433, !7434, !7435, !7436}
!7433 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!7434 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!7435 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!7436 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!7437 = !{!591, !7438, !1742, !7452, !4856, !7454, !7457, !3439, !32, !1001, !2007, !7, !7474, !7487, !7488, !7764, !7767, !7768, !7771, !7773, !7774, !7776, !287, !7777, !7778, !7780, !7782, !7783, !2326, !312, !7784, !7785, !7786, !7468, !1521, !4858, !4579, !7791, !998, !7796, !290}
!7438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7439, size: 64)
!7439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_link", file: !4570, line: 575, size: 6272, elements: !7440)
!7440 = !{!7441, !7442, !7443, !7444, !7445, !7446, !7447, !7448, !7449, !7450, !7451}
!7441 = !DIDerivedType(tag: DW_TAG_member, name: "supplier", scope: !7439, file: !4570, line: 576, baseType: !4856, size: 64)
!7442 = !DIDerivedType(tag: DW_TAG_member, name: "s_node", scope: !7439, file: !4570, line: 577, baseType: !284, size: 128, offset: 64)
!7443 = !DIDerivedType(tag: DW_TAG_member, name: "consumer", scope: !7439, file: !4570, line: 578, baseType: !4856, size: 64, offset: 192)
!7444 = !DIDerivedType(tag: DW_TAG_member, name: "c_node", scope: !7439, file: !4570, line: 579, baseType: !284, size: 128, offset: 256)
!7445 = !DIDerivedType(tag: DW_TAG_member, name: "link_dev", scope: !7439, file: !4570, line: 580, baseType: !4569, size: 5568, offset: 384)
!7446 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !7439, file: !4570, line: 581, baseType: !7394, size: 32, offset: 5952)
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7439, file: !4570, line: 582, baseType: !987, size: 32, offset: 5984)
!7448 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_active", scope: !7439, file: !4570, line: 583, baseType: !568, size: 32, offset: 6016)
!7449 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !7439, file: !4570, line: 584, baseType: !4846, size: 32, offset: 6048)
!7450 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !7439, file: !4570, line: 586, baseType: !299, size: 128, align: 64, offset: 6080)
!7451 = !DIDerivedType(tag: DW_TAG_member, name: "supplier_preactivated", scope: !7439, file: !4570, line: 588, baseType: !771, size: 8, offset: 6208)
!7452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7453, size: 64)
!7453 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7394)
!7454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7455, size: 64)
!7455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7456)
!7456 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !4885)
!7457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7458, size: 64)
!7458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ext_attribute", file: !4570, line: 107, size: 320, elements: !7459)
!7459 = !{!7460, !7473}
!7460 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7458, file: !4570, line: 108, baseType: !7461, size: 256)
!7461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !4570, line: 99, size: 256, elements: !7462)
!7462 = !{!7463, !7464, !7469}
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7461, file: !4570, line: 100, baseType: !4639, size: 128)
!7464 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !7461, file: !4570, line: 101, baseType: !7465, size: 64, offset: 128)
!7465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7466, size: 64)
!7466 = !DISubroutineType(types: !7467)
!7467 = !{!1521, !4856, !7468, !1038}
!7468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7461, size: 64)
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !7461, file: !4570, line: 103, baseType: !7470, size: 64, offset: 192)
!7470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7471, size: 64)
!7471 = !DISubroutineType(types: !7472)
!7472 = !{!1521, !4856, !7468, !292, !1039}
!7473 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !7458, file: !4570, line: 109, baseType: !591, size: 64, offset: 256)
!7474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7475, size: 64)
!7475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class_interface", file: !4983, line: 241, size: 320, elements: !7476)
!7476 = !{!7477, !7478, !7479, !7483}
!7477 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7475, file: !4983, line: 242, baseType: !284, size: 128)
!7478 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !7475, file: !4983, line: 243, baseType: !4981, size: 64, offset: 128)
!7479 = !DIDerivedType(tag: DW_TAG_member, name: "add_dev", scope: !7475, file: !4983, line: 245, baseType: !7480, size: 64, offset: 192)
!7480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7481, size: 64)
!7481 = !DISubroutineType(types: !7482)
!7482 = !{!32, !4856, !7474}
!7483 = !DIDerivedType(tag: DW_TAG_member, name: "remove_dev", scope: !7475, file: !4983, line: 246, baseType: !7484, size: 64, offset: 256)
!7484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7485, size: 64)
!7485 = !DISubroutineType(types: !7486)
!7486 = !{null, !4856, !7474}
!7487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64)
!7488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7489, size: 64)
!7489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device", file: !3012, line: 351, size: 10880, elements: !7490)
!7490 = !{!7491, !7492, !7495, !7496, !7497, !7498, !7499, !7500, !7501, !7510, !7527, !7600, !7627, !7651, !7672, !7676, !7685, !7717, !7731, !7753, !7757, !7758, !7759, !7760, !7761, !7762, !7763}
!7491 = !DIDerivedType(tag: DW_TAG_member, name: "device_type", scope: !7489, file: !3012, line: 352, baseType: !32, size: 32)
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !7489, file: !3012, line: 353, baseType: !7493, size: 64, offset: 64)
!7493 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_handle", file: !7494, line: 424, baseType: !591)
!7494 = !DIFile(filename: "./include/acpi/actypes.h", directory: "/home/lizy2001/genbc/linux")
!7495 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !7489, file: !3012, line: 354, baseType: !5342, size: 192, offset: 128)
!7496 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !7489, file: !3012, line: 355, baseType: !7488, size: 64, offset: 320)
!7497 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7489, file: !3012, line: 356, baseType: !284, size: 128, offset: 384)
!7498 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7489, file: !3012, line: 357, baseType: !284, size: 128, offset: 512)
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_list", scope: !7489, file: !3012, line: 358, baseType: !284, size: 128, offset: 640)
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "del_list", scope: !7489, file: !3012, line: 359, baseType: !284, size: 128, offset: 768)
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !7489, file: !3012, line: 360, baseType: !7502, size: 32, offset: 896)
!7502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_status", file: !3012, line: 179, size: 32, elements: !7503)
!7503 = !{!7504, !7505, !7506, !7507, !7508, !7509}
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !7502, file: !3012, line: 180, baseType: !987, size: 1, flags: DIFlagBitField, extraData: i64 0)
!7505 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !7502, file: !3012, line: 181, baseType: !987, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!7506 = !DIDerivedType(tag: DW_TAG_member, name: "show_in_ui", scope: !7502, file: !3012, line: 182, baseType: !987, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!7507 = !DIDerivedType(tag: DW_TAG_member, name: "functional", scope: !7502, file: !3012, line: 183, baseType: !987, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "battery_present", scope: !7502, file: !3012, line: 184, baseType: !987, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7502, file: !3012, line: 185, baseType: !987, size: 27, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!7510 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7489, file: !3012, line: 361, baseType: !7511, size: 32, offset: 928)
!7511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_flags", file: !3012, line: 190, size: 32, elements: !7512)
!7512 = !{!7513, !7514, !7515, !7516, !7517, !7518, !7519, !7520, !7521, !7522, !7523, !7524, !7525, !7526}
!7513 = !DIDerivedType(tag: DW_TAG_member, name: "dynamic_status", scope: !7511, file: !3012, line: 191, baseType: !987, size: 1, flags: DIFlagBitField, extraData: i64 0)
!7514 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !7511, file: !3012, line: 192, baseType: !987, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!7515 = !DIDerivedType(tag: DW_TAG_member, name: "ejectable", scope: !7511, file: !3012, line: 193, baseType: !987, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!7516 = !DIDerivedType(tag: DW_TAG_member, name: "power_manageable", scope: !7511, file: !3012, line: 194, baseType: !987, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!7517 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !7511, file: !3012, line: 195, baseType: !987, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!7518 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !7511, file: !3012, line: 196, baseType: !987, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !7511, file: !3012, line: 197, baseType: !987, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_notify", scope: !7511, file: !3012, line: 198, baseType: !987, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!7521 = !DIDerivedType(tag: DW_TAG_member, name: "is_dock_station", scope: !7511, file: !3012, line: 199, baseType: !987, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "of_compatible_ok", scope: !7511, file: !3012, line: 200, baseType: !987, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma", scope: !7511, file: !3012, line: 201, baseType: !987, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!7524 = !DIDerivedType(tag: DW_TAG_member, name: "cca_seen", scope: !7511, file: !3012, line: 202, baseType: !987, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "enumeration_by_parent", scope: !7511, file: !3012, line: 203, baseType: !987, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!7526 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7511, file: !3012, line: 204, baseType: !987, size: 19, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "pnp", scope: !7489, file: !3012, line: 362, baseType: !7528, size: 960, offset: 960)
!7528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_pnp", file: !3012, line: 234, size: 960, elements: !7529)
!7529 = !{!7530, !7532, !7539, !7541, !7542, !7543, !7548, !7551}
!7530 = !DIDerivedType(tag: DW_TAG_member, name: "bus_id", scope: !7528, file: !3012, line: 235, baseType: !7531, size: 64)
!7531 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_bus_id", file: !3012, line: 217, baseType: !3954)
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7528, file: !3012, line: 236, baseType: !7533, size: 32, offset: 64)
!7533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_pnp_type", file: !3012, line: 227, size: 32, elements: !7534)
!7534 = !{!7535, !7536, !7537, !7538}
!7535 = !DIDerivedType(tag: DW_TAG_member, name: "hardware_id", scope: !7533, file: !3012, line: 228, baseType: !987, size: 1, flags: DIFlagBitField, extraData: i64 0)
!7536 = !DIDerivedType(tag: DW_TAG_member, name: "bus_address", scope: !7533, file: !3012, line: 229, baseType: !987, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!7537 = !DIDerivedType(tag: DW_TAG_member, name: "platform_id", scope: !7533, file: !3012, line: 230, baseType: !987, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!7538 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7533, file: !3012, line: 231, baseType: !987, size: 29, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!7539 = !DIDerivedType(tag: DW_TAG_member, name: "bus_address", scope: !7528, file: !3012, line: 237, baseType: !7540, size: 64, offset: 128)
!7540 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_bus_address", file: !3012, line: 218, baseType: !331)
!7541 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !7528, file: !3012, line: 238, baseType: !1038, size: 64, offset: 192)
!7542 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !7528, file: !3012, line: 239, baseType: !284, size: 128, offset: 256)
!7543 = !DIDerivedType(tag: DW_TAG_member, name: "device_name", scope: !7528, file: !3012, line: 240, baseType: !7544, size: 320, offset: 384)
!7544 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_device_name", file: !3012, line: 219, baseType: !7545)
!7545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 320, elements: !7546)
!7546 = !{!7547}
!7547 = !DISubrange(count: 40)
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "device_class", scope: !7528, file: !3012, line: 241, baseType: !7549, size: 160, offset: 704)
!7549 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_device_class", file: !3012, line: 220, baseType: !7550)
!7550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 160, elements: !900)
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "str_obj", scope: !7528, file: !3012, line: 242, baseType: !7552, size: 64, offset: 896)
!7552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7553, size: 64)
!7553 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_object", file: !7494, line: 899, size: 192, elements: !7554)
!7554 = !{!7555, !7557, !7562, !7568, !7574, !7580, !7586, !7594}
!7555 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7553, file: !7494, line: 900, baseType: !7556, size: 32)
!7556 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_object_type", file: !7494, line: 635, baseType: !987)
!7557 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !7553, file: !7494, line: 904, baseType: !7558, size: 128)
!7558 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7553, file: !7494, line: 901, size: 128, elements: !7559)
!7559 = !{!7560, !7561}
!7560 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7558, file: !7494, line: 902, baseType: !7556, size: 32)
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !7558, file: !7494, line: 903, baseType: !331, size: 64, offset: 64)
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !7553, file: !7494, line: 910, baseType: !7563, size: 128)
!7563 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7553, file: !7494, line: 906, size: 128, elements: !7564)
!7564 = !{!7565, !7566, !7567}
!7565 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7563, file: !7494, line: 907, baseType: !7556, size: 32)
!7566 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !7563, file: !7494, line: 908, baseType: !987, size: 32, offset: 32)
!7567 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !7563, file: !7494, line: 909, baseType: !1038, size: 64, offset: 64)
!7568 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !7553, file: !7494, line: 916, baseType: !7569, size: 128)
!7569 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7553, file: !7494, line: 912, size: 128, elements: !7570)
!7570 = !{!7571, !7572, !7573}
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7569, file: !7494, line: 913, baseType: !7556, size: 32)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !7569, file: !7494, line: 914, baseType: !987, size: 32, offset: 32)
!7573 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !7569, file: !7494, line: 915, baseType: !793, size: 64, offset: 64)
!7574 = !DIDerivedType(tag: DW_TAG_member, name: "package", scope: !7553, file: !7494, line: 922, baseType: !7575, size: 128)
!7575 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7553, file: !7494, line: 918, size: 128, elements: !7576)
!7576 = !{!7577, !7578, !7579}
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7575, file: !7494, line: 919, baseType: !7556, size: 32)
!7578 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7575, file: !7494, line: 920, baseType: !987, size: 32, offset: 32)
!7579 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !7575, file: !7494, line: 921, baseType: !7552, size: 64, offset: 64)
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !7553, file: !7494, line: 928, baseType: !7581, size: 128)
!7581 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7553, file: !7494, line: 924, size: 128, elements: !7582)
!7582 = !{!7583, !7584, !7585}
!7583 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7581, file: !7494, line: 925, baseType: !7556, size: 32)
!7584 = !DIDerivedType(tag: DW_TAG_member, name: "actual_type", scope: !7581, file: !7494, line: 926, baseType: !7556, size: 32, offset: 32)
!7585 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !7581, file: !7494, line: 927, baseType: !7493, size: 64, offset: 64)
!7586 = !DIDerivedType(tag: DW_TAG_member, name: "processor", scope: !7553, file: !7494, line: 935, baseType: !7587, size: 192)
!7587 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7553, file: !7494, line: 930, size: 192, elements: !7588)
!7588 = !{!7589, !7590, !7591, !7593}
!7589 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7587, file: !7494, line: 931, baseType: !7556, size: 32)
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "proc_id", scope: !7587, file: !7494, line: 932, baseType: !987, size: 32, offset: 32)
!7591 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_address", scope: !7587, file: !7494, line: 933, baseType: !7592, size: 64, offset: 64)
!7592 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_io_address", file: !7494, line: 128, baseType: !331)
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_length", scope: !7587, file: !7494, line: 934, baseType: !987, size: 32, offset: 128)
!7594 = !DIDerivedType(tag: DW_TAG_member, name: "power_resource", scope: !7553, file: !7494, line: 941, baseType: !7595, size: 96)
!7595 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7553, file: !7494, line: 937, size: 96, elements: !7596)
!7596 = !{!7597, !7598, !7599}
!7597 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7595, file: !7494, line: 938, baseType: !7556, size: 32)
!7598 = !DIDerivedType(tag: DW_TAG_member, name: "system_level", scope: !7595, file: !7494, line: 939, baseType: !987, size: 32, offset: 32)
!7599 = !DIDerivedType(tag: DW_TAG_member, name: "resource_order", scope: !7595, file: !7494, line: 940, baseType: !987, size: 32, offset: 64)
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !7489, file: !3012, line: 363, baseType: !7601, size: 1344, offset: 1920)
!7601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power", file: !3012, line: 275, size: 1344, elements: !7602)
!7602 = !{!7603, !7604, !7614}
!7603 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7601, file: !3012, line: 276, baseType: !32, size: 32)
!7604 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7601, file: !3012, line: 277, baseType: !7605, size: 32, offset: 32)
!7605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power_flags", file: !3012, line: 254, size: 32, elements: !7606)
!7606 = !{!7607, !7608, !7609, !7610, !7611, !7612, !7613}
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_get", scope: !7605, file: !3012, line: 255, baseType: !987, size: 1, flags: DIFlagBitField, extraData: i64 0)
!7608 = !DIDerivedType(tag: DW_TAG_member, name: "power_resources", scope: !7605, file: !3012, line: 256, baseType: !987, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!7609 = !DIDerivedType(tag: DW_TAG_member, name: "inrush_current", scope: !7605, file: !3012, line: 257, baseType: !987, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!7610 = !DIDerivedType(tag: DW_TAG_member, name: "power_removed", scope: !7605, file: !3012, line: 258, baseType: !987, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_parent", scope: !7605, file: !3012, line: 259, baseType: !987, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "dsw_present", scope: !7605, file: !3012, line: 260, baseType: !987, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!7613 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7605, file: !3012, line: 261, baseType: !987, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!7614 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !7601, file: !3012, line: 278, baseType: !7615, size: 1280, offset: 64)
!7615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7616, size: 1280, elements: !2799)
!7616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power_state", file: !3012, line: 264, size: 256, elements: !7617)
!7617 = !{!7618, !7624, !7625, !7626}
!7618 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7616, file: !3012, line: 269, baseType: !7619, size: 8)
!7619 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7616, file: !3012, line: 265, size: 8, elements: !7620)
!7620 = !{!7621, !7622, !7623}
!7621 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !7619, file: !3012, line: 266, baseType: !794, size: 1, flags: DIFlagBitField, extraData: i64 0)
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_set", scope: !7619, file: !3012, line: 267, baseType: !794, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7619, file: !3012, line: 268, baseType: !794, size: 6, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !7616, file: !3012, line: 270, baseType: !32, size: 32, offset: 32)
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "latency", scope: !7616, file: !3012, line: 271, baseType: !32, size: 32, offset: 64)
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !7616, file: !3012, line: 272, baseType: !284, size: 128, offset: 128)
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !7489, file: !3012, line: 364, baseType: !7628, size: 640, offset: 3264)
!7628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup", file: !3012, line: 315, size: 640, elements: !7629)
!7629 = !{!7630, !7631, !7632, !7633, !7634, !7639, !7648, !7649, !7650}
!7630 = !DIDerivedType(tag: DW_TAG_member, name: "gpe_device", scope: !7628, file: !3012, line: 316, baseType: !7493, size: 64)
!7631 = !DIDerivedType(tag: DW_TAG_member, name: "gpe_number", scope: !7628, file: !3012, line: 317, baseType: !331, size: 64, offset: 64)
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "sleep_state", scope: !7628, file: !3012, line: 318, baseType: !331, size: 64, offset: 128)
!7633 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !7628, file: !3012, line: 319, baseType: !284, size: 128, offset: 192)
!7634 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7628, file: !3012, line: 320, baseType: !7635, size: 8, offset: 320)
!7635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup_flags", file: !3012, line: 305, size: 8, elements: !7636)
!7636 = !{!7637, !7638}
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !7635, file: !3012, line: 306, baseType: !794, size: 1, flags: DIFlagBitField, extraData: i64 0)
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_present", scope: !7635, file: !3012, line: 307, baseType: !794, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !7628, file: !3012, line: 321, baseType: !7640, size: 128, offset: 384)
!7640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup_context", file: !3012, line: 310, size: 128, elements: !7641)
!7641 = !{!7642, !7647}
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !7640, file: !3012, line: 311, baseType: !7643, size: 64)
!7643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7644, size: 64)
!7644 = !DISubroutineType(types: !7645)
!7645 = !{null, !7646}
!7646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7640, size: 64)
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7640, file: !3012, line: 312, baseType: !4856, size: 64, offset: 64)
!7648 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !7628, file: !3012, line: 322, baseType: !5136, size: 64, offset: 512)
!7649 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_count", scope: !7628, file: !3012, line: 323, baseType: !32, size: 32, offset: 576)
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "enable_count", scope: !7628, file: !3012, line: 324, baseType: !32, size: 32, offset: 608)
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "performance", scope: !7489, file: !3012, line: 365, baseType: !7652, size: 192, offset: 3904)
!7652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf", file: !3012, line: 297, size: 192, elements: !7653)
!7653 = !{!7654, !7655, !7659, !7660}
!7654 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7652, file: !3012, line: 298, baseType: !32, size: 32)
!7655 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7652, file: !3012, line: 299, baseType: !7656, size: 8, offset: 32)
!7656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf_flags", file: !3012, line: 283, size: 8, elements: !7657)
!7657 = !{!7658}
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7656, file: !3012, line: 284, baseType: !794, size: 8, flags: DIFlagBitField, extraData: i64 0)
!7659 = !DIDerivedType(tag: DW_TAG_member, name: "state_count", scope: !7652, file: !3012, line: 300, baseType: !32, size: 32, offset: 64)
!7660 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !7652, file: !3012, line: 301, baseType: !7661, size: 64, offset: 128)
!7661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7662, size: 64)
!7662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf_state", file: !3012, line: 287, size: 64, elements: !7663)
!7663 = !{!7664, !7669, !7670, !7671}
!7664 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7662, file: !3012, line: 291, baseType: !7665, size: 8)
!7665 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7662, file: !3012, line: 288, size: 8, elements: !7666)
!7666 = !{!7667, !7668}
!7667 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !7665, file: !3012, line: 289, baseType: !794, size: 1, flags: DIFlagBitField, extraData: i64 0)
!7668 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7665, file: !3012, line: 290, baseType: !794, size: 7, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!7669 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !7662, file: !3012, line: 292, baseType: !794, size: 8, offset: 8)
!7670 = !DIDerivedType(tag: DW_TAG_member, name: "performance", scope: !7662, file: !3012, line: 293, baseType: !794, size: 8, offset: 16)
!7671 = !DIDerivedType(tag: DW_TAG_member, name: "latency", scope: !7662, file: !3012, line: 294, baseType: !32, size: 32, offset: 32)
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !7489, file: !3012, line: 366, baseType: !7673, size: 64, offset: 4096)
!7673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_dir", file: !3012, line: 209, size: 64, elements: !7674)
!7674 = !{!7675}
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !7673, file: !3012, line: 210, baseType: !3010, size: 64)
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7489, file: !3012, line: 367, baseType: !7677, size: 384, offset: 4160)
!7677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_data", file: !3012, line: 341, size: 384, elements: !7678)
!7678 = !{!7679, !7682, !7683, !7684}
!7679 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !7677, file: !3012, line: 342, baseType: !7680, size: 64)
!7680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7681, size: 64)
!7681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7553)
!7682 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !7677, file: !3012, line: 343, baseType: !284, size: 128, offset: 64)
!7683 = !DIDerivedType(tag: DW_TAG_member, name: "of_compatible", scope: !7677, file: !3012, line: 344, baseType: !7680, size: 64, offset: 192)
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "subnodes", scope: !7677, file: !3012, line: 345, baseType: !284, size: 128, offset: 256)
!7685 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !7489, file: !3012, line: 368, baseType: !7686, size: 64, offset: 4544)
!7686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7687, size: 64)
!7687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_scan_handler", file: !3012, line: 122, size: 1216, elements: !7688)
!7688 = !{!7689, !7690, !7691, !7696, !7700, !7704, !7705, !7706}
!7689 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !7687, file: !3012, line: 123, baseType: !5039, size: 64)
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "list_node", scope: !7687, file: !3012, line: 124, baseType: !284, size: 128, offset: 64)
!7691 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !7687, file: !3012, line: 125, baseType: !7692, size: 64, offset: 192)
!7692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7693, size: 64)
!7693 = !DISubroutineType(types: !7694)
!7694 = !{!771, !292, !7695}
!7695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5039, size: 64)
!7696 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !7687, file: !3012, line: 126, baseType: !7697, size: 64, offset: 256)
!7697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7698, size: 64)
!7698 = !DISubroutineType(types: !7699)
!7699 = !{!32, !7488, !5039}
!7700 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !7687, file: !3012, line: 127, baseType: !7701, size: 64, offset: 320)
!7701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7702, size: 64)
!7702 = !DISubroutineType(types: !7703)
!7703 = !{null, !7488}
!7704 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !7687, file: !3012, line: 128, baseType: !4914, size: 64, offset: 384)
!7705 = !DIDerivedType(tag: DW_TAG_member, name: "unbind", scope: !7687, file: !3012, line: 129, baseType: !4914, size: 64, offset: 448)
!7706 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !7687, file: !3012, line: 130, baseType: !7707, size: 704, offset: 512)
!7707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_hotplug_profile", file: !3012, line: 108, size: 704, elements: !7708)
!7708 = !{!7709, !7710, !7714, !7715, !7716}
!7709 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7707, file: !3012, line: 109, baseType: !4573, size: 512)
!7710 = !DIDerivedType(tag: DW_TAG_member, name: "scan_dependent", scope: !7707, file: !3012, line: 110, baseType: !7711, size: 64, offset: 512)
!7711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7712, size: 64)
!7712 = !DISubroutineType(types: !7713)
!7713 = !{!32, !7488}
!7714 = !DIDerivedType(tag: DW_TAG_member, name: "notify_online", scope: !7707, file: !3012, line: 111, baseType: !7701, size: 64, offset: 576)
!7715 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !7707, file: !3012, line: 112, baseType: !771, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!7716 = !DIDerivedType(tag: DW_TAG_member, name: "demand_offline", scope: !7707, file: !3012, line: 113, baseType: !771, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!7717 = !DIDerivedType(tag: DW_TAG_member, name: "hp", scope: !7489, file: !3012, line: 369, baseType: !7718, size: 64, offset: 4608)
!7718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7719, size: 64)
!7719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_hotplug_context", file: !3012, line: 138, size: 256, elements: !7720)
!7720 = !{!7721, !7722, !7726, !7730}
!7721 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !7719, file: !3012, line: 139, baseType: !7488, size: 64)
!7722 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !7719, file: !3012, line: 140, baseType: !7723, size: 64, offset: 64)
!7723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7724, size: 64)
!7724 = !DISubroutineType(types: !7725)
!7725 = !{!32, !7488, !987}
!7726 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !7719, file: !3012, line: 141, baseType: !7727, size: 64, offset: 128)
!7727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7728, size: 64)
!7728 = !DISubroutineType(types: !7729)
!7729 = !{null, !7488, !987}
!7730 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !7719, file: !3012, line: 142, baseType: !7701, size: 64, offset: 192)
!7731 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !7489, file: !3012, line: 370, baseType: !7732, size: 64, offset: 4672)
!7732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7733, size: 64)
!7733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_driver", file: !3012, line: 162, size: 2816, elements: !7734)
!7734 = !{!7735, !7739, !7740, !7741, !7742, !7751, !7752}
!7735 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7733, file: !3012, line: 163, baseType: !7736, size: 640)
!7736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 640, elements: !7737)
!7737 = !{!7738}
!7738 = !DISubrange(count: 80)
!7739 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !7733, file: !3012, line: 164, baseType: !7736, size: 640, offset: 640)
!7740 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !7733, file: !3012, line: 165, baseType: !5039, size: 64, offset: 1280)
!7741 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7733, file: !3012, line: 166, baseType: !7, size: 32, offset: 1344)
!7742 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7733, file: !3012, line: 167, baseType: !7743, size: 192, offset: 1408)
!7743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_ops", file: !3012, line: 154, size: 192, elements: !7744)
!7744 = !{!7745, !7747, !7749}
!7745 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !7743, file: !3012, line: 155, baseType: !7746, size: 64)
!7746 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_add", file: !3012, line: 150, baseType: !7711)
!7747 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !7743, file: !3012, line: 156, baseType: !7748, size: 64, offset: 64)
!7748 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_remove", file: !3012, line: 151, baseType: !7711)
!7749 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !7743, file: !3012, line: 157, baseType: !7750, size: 64, offset: 128)
!7750 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_notify", file: !3012, line: 152, baseType: !7727)
!7751 = !DIDerivedType(tag: DW_TAG_member, name: "drv", scope: !7733, file: !3012, line: 168, baseType: !4886, size: 1152, offset: 1600)
!7752 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7733, file: !3012, line: 169, baseType: !980, size: 64, offset: 2752)
!7753 = !DIDerivedType(tag: DW_TAG_member, name: "driver_gpios", scope: !7489, file: !3012, line: 371, baseType: !7754, size: 64, offset: 4736)
!7754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7755, size: 64)
!7755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7756)
!7756 = !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_gpio_mapping", file: !3012, line: 348, flags: DIFlagFwdDecl)
!7757 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !7489, file: !3012, line: 372, baseType: !591, size: 64, offset: 4800)
!7758 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7489, file: !3012, line: 373, baseType: !4569, size: 5568, offset: 4864)
!7759 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_count", scope: !7489, file: !3012, line: 374, baseType: !7, size: 32, offset: 10432)
!7760 = !DIDerivedType(tag: DW_TAG_member, name: "dep_unmet", scope: !7489, file: !3012, line: 375, baseType: !7, size: 32, offset: 10464)
!7761 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_list", scope: !7489, file: !3012, line: 376, baseType: !284, size: 128, offset: 10496)
!7762 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_lock", scope: !7489, file: !3012, line: 377, baseType: !1665, size: 192, offset: 10624)
!7763 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !7489, file: !3012, line: 378, baseType: !7701, size: 64, offset: 10816)
!7764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7765, size: 64)
!7765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7766)
!7766 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !625)
!7767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7766, size: 64)
!7768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7769, size: 64)
!7769 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7770)
!7770 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !32)
!7771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7772, size: 64)
!7772 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !987)
!7773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7770, size: 64)
!7774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7775, size: 64)
!7775 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !287)
!7776 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !277, line: 37, baseType: !312)
!7777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64)
!7778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7779, size: 64)
!7779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7775)
!7780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7781, size: 64)
!7781 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !268)
!7782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64)
!7783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 64)
!7784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64)
!7785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!7786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7787, size: 64)
!7787 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "device_attr_group_devres", file: !3, line: 2041, size: 64, elements: !7788)
!7788 = !{!7789, !7790}
!7789 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !7787, file: !3, line: 2042, baseType: !4651, size: 64)
!7790 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !7787, file: !3, line: 2043, baseType: !4650, size: 64)
!7791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7792, size: 64)
!7792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class_dir", file: !3, line: 2447, size: 576, elements: !7793)
!7793 = !{!7794, !7795}
!7794 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7792, file: !3, line: 2448, baseType: !4573, size: 512)
!7795 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !7792, file: !3, line: 2449, baseType: !4981, size: 64, offset: 512)
!7796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7797, size: 64)
!7797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "root_device", file: !3, line: 3454, size: 5632, elements: !7798)
!7798 = !{!7799, !7800}
!7799 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7797, file: !3, line: 3455, baseType: !4569, size: 5568)
!7800 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7797, file: !3, line: 3456, baseType: !980, size: 64, offset: 5568)
!7801 = !{!7802, !7804, !7806, !7817, !7819, !7821, !7824, !7829, !7831, !7833, !7835, !7837, !0, !7839, !7844, !7846, !7848, !7850, !7853, !7855, !7858, !7860, !7862, !7864, !7866, !7868, !7870, !7872, !7874, !7879, !7881, !7883, !7885, !7887, !7889, !7891, !7893, !7895, !7897, !7899, !7901, !7903}
!7802 = !DIGlobalVariableExpression(var: !7803, expr: !DIExpression())
!7803 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_devlink_class_init340", scope: !2, file: !3, line: 451, type: !591, isLocal: true, isDefinition: true)
!7804 = !DIGlobalVariableExpression(var: !7805, expr: !DIExpression())
!7805 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_sync_state_resume_initcall369", scope: !2, file: !3, line: 1043, type: !591, isLocal: true, isDefinition: true)
!7806 = !DIGlobalVariableExpression(var: !7807, expr: !DIExpression())
!7807 = distinct !DIGlobalVariable(name: "__setup_fw_devlink_setup", scope: !2, file: !3, line: 1430, type: !7808, isLocal: true, isDefinition: true, align: 64)
!7808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obs_kernel_param", file: !7809, line: 241, size: 192, elements: !7810)
!7809 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!7810 = !{!7811, !7812, !7816}
!7811 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !7808, file: !7809, line: 242, baseType: !292, size: 64)
!7812 = !DIDerivedType(tag: DW_TAG_member, name: "setup_func", scope: !7808, file: !7809, line: 243, baseType: !7813, size: 64, offset: 64)
!7813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7814, size: 64)
!7814 = !DISubroutineType(types: !7815)
!7815 = !{!32, !1038}
!7816 = !DIDerivedType(tag: DW_TAG_member, name: "early", scope: !7808, file: !7809, line: 244, baseType: !32, size: 32, offset: 128)
!7817 = !DIGlobalVariableExpression(var: !7818, expr: !DIExpression())
!7818 = distinct !DIGlobalVariable(name: "platform_notify", scope: !2, file: !3, line: 1577, type: !4910, isLocal: false, isDefinition: true)
!7819 = !DIGlobalVariableExpression(var: !7820, expr: !DIExpression())
!7820 = distinct !DIGlobalVariable(name: "platform_notify_remove", scope: !2, file: !3, line: 1578, type: !4910, isLocal: false, isDefinition: true)
!7821 = !DIGlobalVariableExpression(var: !7822, expr: !DIExpression())
!7822 = distinct !DIGlobalVariable(name: "__key", scope: !7823, file: !3, line: 2416, type: !1585, isLocal: true, isDefinition: true)
!7823 = distinct !DISubprogram(name: "device_initialize", scope: !3, file: !3, line: 2411, type: !4915, scopeLine: 2412, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!7824 = !DIGlobalVariableExpression(var: !7825, expr: !DIExpression())
!7825 = distinct !DIGlobalVariable(name: "virtual_dir", scope: !7826, file: !3, line: 2438, type: !4579, isLocal: true, isDefinition: true)
!7826 = distinct !DISubprogram(name: "virtual_device_parent", scope: !3, file: !3, line: 2436, type: !7827, scopeLine: 2437, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!7827 = !DISubroutineType(types: !7828)
!7828 = !{!4579, !4856}
!7829 = !DIGlobalVariableExpression(var: !7830, expr: !DIExpression())
!7830 = distinct !DIGlobalVariable(name: "defer_fw_devlink_count", scope: !2, file: !3, line: 53, type: !7, isLocal: true, isDefinition: true)
!7831 = !DIGlobalVariableExpression(var: !7832, expr: !DIExpression())
!7832 = distinct !DIGlobalVariable(name: "dev_kobj", scope: !2, file: !3, line: 1579, type: !4579, isLocal: true, isDefinition: true)
!7833 = !DIGlobalVariableExpression(var: !7834, expr: !DIExpression())
!7834 = distinct !DIGlobalVariable(name: "sysfs_dev_char_kobj", scope: !2, file: !3, line: 1580, type: !4579, isLocal: false, isDefinition: true)
!7835 = !DIGlobalVariableExpression(var: !7836, expr: !DIExpression())
!7836 = distinct !DIGlobalVariable(name: "sysfs_dev_block_kobj", scope: !2, file: !3, line: 1581, type: !4579, isLocal: false, isDefinition: true)
!7837 = !DIGlobalVariableExpression(var: !7838, expr: !DIExpression())
!7838 = distinct !DIGlobalVariable(name: "devices_kset", scope: !2, file: !3, line: 2245, type: !4581, isLocal: false, isDefinition: true)
!7839 = !DIGlobalVariableExpression(var: !7840, expr: !DIExpression())
!7840 = distinct !DIGlobalVariable(name: "__key", scope: !7841, file: !3, line: 441, type: !1585, isLocal: true, isDefinition: true)
!7841 = distinct !DISubprogram(name: "devlink_class_init", scope: !3, file: !3, line: 437, type: !7842, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!7842 = !DISubroutineType(types: !7843)
!7843 = !{!32}
!7844 = !DIGlobalVariableExpression(var: !7845, expr: !DIExpression())
!7845 = distinct !DIGlobalVariable(name: "devlink_class_intf", scope: !2, file: !3, line: 431, type: !7475, isLocal: true, isDefinition: true)
!7846 = !DIGlobalVariableExpression(var: !7847, expr: !DIExpression())
!7847 = distinct !DIGlobalVariable(name: "device_links_lock", scope: !2, file: !3, line: 59, type: !1665, isLocal: true, isDefinition: true)
!7848 = !DIGlobalVariableExpression(var: !7849, expr: !DIExpression())
!7849 = distinct !DIGlobalVariable(name: "devlink_class", scope: !2, file: !3, line: 349, type: !4982, isLocal: true, isDefinition: true)
!7850 = !DIGlobalVariableExpression(var: !7851, expr: !DIExpression())
!7851 = distinct !DIGlobalVariable(name: "devlink_groups", scope: !2, file: !3, line: 318, type: !7852, isLocal: true, isDefinition: true)
!7852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4651, size: 128, elements: !2664)
!7853 = !DIGlobalVariableExpression(var: !7854, expr: !DIExpression())
!7854 = distinct !DIGlobalVariable(name: "devlink_group", scope: !2, file: !3, line: 318, type: !4652, isLocal: true, isDefinition: true)
!7855 = !DIGlobalVariableExpression(var: !7856, expr: !DIExpression())
!7856 = distinct !DIGlobalVariable(name: "devlink_attrs", scope: !2, file: !3, line: 311, type: !7857, isLocal: true, isDefinition: true)
!7857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4638, size: 320, elements: !2799)
!7858 = !DIGlobalVariableExpression(var: !7859, expr: !DIExpression())
!7859 = distinct !DIGlobalVariable(name: "dev_attr_status", scope: !2, file: !3, line: 273, type: !7461, isLocal: true, isDefinition: true)
!7860 = !DIGlobalVariableExpression(var: !7861, expr: !DIExpression())
!7861 = distinct !DIGlobalVariable(name: "dev_attr_auto_remove_on", scope: !2, file: !3, line: 290, type: !7461, isLocal: true, isDefinition: true)
!7862 = !DIGlobalVariableExpression(var: !7863, expr: !DIExpression())
!7863 = distinct !DIGlobalVariable(name: "dev_attr_runtime_pm", scope: !2, file: !3, line: 299, type: !7461, isLocal: true, isDefinition: true)
!7864 = !DIGlobalVariableExpression(var: !7865, expr: !DIExpression())
!7865 = distinct !DIGlobalVariable(name: "dev_attr_sync_state_only", scope: !2, file: !3, line: 309, type: !7461, isLocal: true, isDefinition: true)
!7866 = !DIGlobalVariableExpression(var: !7867, expr: !DIExpression())
!7867 = distinct !DIGlobalVariable(name: "wfs_lock", scope: !2, file: !3, line: 50, type: !1665, isLocal: true, isDefinition: true)
!7868 = !DIGlobalVariableExpression(var: !7869, expr: !DIExpression())
!7869 = distinct !DIGlobalVariable(name: "defer_sync_state_count", scope: !2, file: !3, line: 52, type: !7, isLocal: true, isDefinition: true)
!7870 = !DIGlobalVariableExpression(var: !7871, expr: !DIExpression())
!7871 = distinct !DIGlobalVariable(name: "deferred_sync", scope: !2, file: !3, line: 51, type: !284, isLocal: true, isDefinition: true)
!7872 = !DIGlobalVariableExpression(var: !7873, expr: !DIExpression())
!7873 = distinct !DIGlobalVariable(name: "dev_attr_waiting_for_supplier", scope: !2, file: !3, line: 1072, type: !7461, isLocal: true, isDefinition: true)
!7874 = !DIGlobalVariableExpression(var: !7875, expr: !DIExpression())
!7875 = distinct !DIGlobalVariable(name: "__setup_str_fw_devlink_setup", scope: !2, file: !3, line: 1430, type: !7876, isLocal: true, isDefinition: true, align: 8)
!7876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 88, elements: !7877)
!7877 = !{!7878}
!7878 = !DISubrange(count: 11)
!7879 = !DIGlobalVariableExpression(var: !7880, expr: !DIExpression())
!7880 = distinct !DIGlobalVariable(name: "fw_devlink_flags", scope: !2, file: !3, line: 1412, type: !987, isLocal: true, isDefinition: true)
!7881 = !DIGlobalVariableExpression(var: !7882, expr: !DIExpression())
!7882 = distinct !DIGlobalVariable(name: "defer_fw_devlink_lock", scope: !2, file: !3, line: 55, type: !1665, isLocal: true, isDefinition: true)
!7883 = !DIGlobalVariableExpression(var: !7884, expr: !DIExpression())
!7884 = distinct !DIGlobalVariable(name: "wait_for_suppliers", scope: !2, file: !3, line: 49, type: !284, isLocal: true, isDefinition: true)
!7885 = !DIGlobalVariableExpression(var: !7886, expr: !DIExpression())
!7886 = distinct !DIGlobalVariable(name: "deferred_fw_devlink", scope: !2, file: !3, line: 54, type: !284, isLocal: true, isDefinition: true)
!7887 = !DIGlobalVariableExpression(var: !7888, expr: !DIExpression())
!7888 = distinct !DIGlobalVariable(name: "device_hotplug_lock", scope: !2, file: !3, line: 1583, type: !1665, isLocal: true, isDefinition: true)
!7889 = !DIGlobalVariableExpression(var: !7890, expr: !DIExpression())
!7890 = distinct !DIGlobalVariable(name: "device_ktype", scope: !2, file: !3, line: 1832, type: !4622, isLocal: true, isDefinition: true)
!7891 = !DIGlobalVariableExpression(var: !7892, expr: !DIExpression())
!7892 = distinct !DIGlobalVariable(name: "dev_sysfs_ops", scope: !2, file: !3, line: 1691, type: !4630, isLocal: true, isDefinition: true)
!7893 = !DIGlobalVariableExpression(var: !7894, expr: !DIExpression())
!7894 = distinct !DIGlobalVariable(name: "gdp_mutex", scope: !2, file: !3, line: 2496, type: !1665, isLocal: true, isDefinition: true)
!7895 = !DIGlobalVariableExpression(var: !7896, expr: !DIExpression())
!7896 = distinct !DIGlobalVariable(name: "class_dir_ktype", scope: !2, file: !3, line: 2467, type: !4622, isLocal: true, isDefinition: true)
!7897 = !DIGlobalVariableExpression(var: !7898, expr: !DIExpression())
!7898 = distinct !DIGlobalVariable(name: "dev_attr_uevent", scope: !2, file: !3, line: 1995, type: !7461, isLocal: true, isDefinition: true)
!7899 = !DIGlobalVariableExpression(var: !7900, expr: !DIExpression())
!7900 = distinct !DIGlobalVariable(name: "dev_attr_online", scope: !2, file: !3, line: 2026, type: !7461, isLocal: true, isDefinition: true)
!7901 = !DIGlobalVariableExpression(var: !7902, expr: !DIExpression())
!7902 = distinct !DIGlobalVariable(name: "dev_attr_dev", scope: !2, file: !3, line: 2242, type: !7461, isLocal: true, isDefinition: true)
!7903 = !DIGlobalVariableExpression(var: !7904, expr: !DIExpression())
!7904 = distinct !DIGlobalVariable(name: "device_uevent_ops", scope: !2, file: !3, line: 1932, type: !4589, isLocal: true, isDefinition: true)
!7905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "srcu_struct", file: !7906, line: 16, size: 576, elements: !7907)
!7906 = !DIFile(filename: "./include/linux/srcutiny.h", directory: "/home/lizy2001/genbc/linux")
!7907 = !{!7908, !7910, !7911, !7912, !7913, !7914, !7915, !7917}
!7908 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_lock_nesting", scope: !7905, file: !7906, line: 17, baseType: !7909, size: 32)
!7909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !625, size: 32, elements: !2664)
!7910 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_idx", scope: !7905, file: !7906, line: 18, baseType: !625, size: 16, offset: 32)
!7911 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_running", scope: !7905, file: !7906, line: 19, baseType: !794, size: 8, offset: 48)
!7912 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_waiting", scope: !7905, file: !7906, line: 20, baseType: !794, size: 8, offset: 56)
!7913 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_wq", scope: !7905, file: !7906, line: 21, baseType: !2602, size: 128, offset: 64)
!7914 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_head", scope: !7905, file: !7906, line: 23, baseType: !302, size: 64, offset: 192)
!7915 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_tail", scope: !7905, file: !7906, line: 24, baseType: !7916, size: 64, offset: 256)
!7916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64)
!7917 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_work", scope: !7905, file: !7906, line: 25, baseType: !2829, size: 256, offset: 320)
!7918 = !{i32 7, !"Dwarf Version", i32 4}
!7919 = !{i32 2, !"Debug Info Version", i32 3}
!7920 = !{i32 1, !"wchar_size", i32 2}
!7921 = !{i32 1, !"Code Model", i32 2}
!7922 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!7923 = distinct !DISubprogram(name: "device_links_read_lock", scope: !3, file: !3, line: 72, type: !7842, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!7924 = !DILocation(line: 74, column: 9, scope: !7923)
!7925 = !DILocation(line: 74, column: 2, scope: !7923)
!7926 = distinct !DISubprogram(name: "srcu_read_lock", scope: !7927, file: !7927, line: 150, type: !7928, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!7927 = !DIFile(filename: "./include/linux/srcu.h", directory: "/home/lizy2001/genbc/linux")
!7928 = !DISubroutineType(types: !7929)
!7929 = !{!32, !7930}
!7930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7905, size: 64)
!7931 = !DILocalVariable(name: "ssp", arg: 1, scope: !7926, file: !7927, line: 150, type: !7930)
!7932 = !DILocation(line: 150, column: 54, scope: !7926)
!7933 = !DILocalVariable(name: "retval", scope: !7926, file: !7927, line: 152, type: !32)
!7934 = !DILocation(line: 152, column: 6, scope: !7926)
!7935 = !DILocation(line: 154, column: 28, scope: !7926)
!7936 = !DILocation(line: 154, column: 11, scope: !7926)
!7937 = !DILocation(line: 154, column: 9, scope: !7926)
!7938 = !DILocation(line: 155, column: 2, scope: !7926)
!7939 = !DILocation(line: 155, column: 2, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7926, file: !7927, line: 155, column: 2)
!7941 = !DILocation(line: 156, column: 9, scope: !7926)
!7942 = !DILocation(line: 156, column: 2, scope: !7926)
!7943 = distinct !DISubprogram(name: "device_links_read_unlock", scope: !3, file: !3, line: 77, type: !3802, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!7944 = !DILocalVariable(name: "idx", arg: 1, scope: !7943, file: !3, line: 77, type: !32)
!7945 = !DILocation(line: 77, column: 35, scope: !7943)
!7946 = !DILocation(line: 79, column: 39, scope: !7943)
!7947 = !DILocation(line: 79, column: 2, scope: !7943)
!7948 = !DILocation(line: 80, column: 1, scope: !7943)
!7949 = distinct !DISubprogram(name: "srcu_read_unlock", scope: !7927, file: !7927, line: 176, type: !7950, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!7950 = !DISubroutineType(types: !7951)
!7951 = !{null, !7930, !32}
!7952 = !DILocalVariable(name: "ssp", arg: 1, scope: !7949, file: !7927, line: 176, type: !7930)
!7953 = !DILocation(line: 176, column: 57, scope: !7949)
!7954 = !DILocalVariable(name: "idx", arg: 2, scope: !7949, file: !7927, line: 176, type: !32)
!7955 = !DILocation(line: 176, column: 66, scope: !7949)
!7956 = !DILocalVariable(name: "__ret_warn_on", scope: !7957, file: !7927, line: 179, type: !32)
!7957 = distinct !DILexicalBlock(scope: !7949, file: !7927, line: 179, column: 2)
!7958 = !DILocation(line: 179, column: 2, scope: !7957)
!7959 = !DILocation(line: 179, column: 2, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7957, file: !7927, line: 179, column: 2)
!7961 = !DILocation(line: 179, column: 2, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7960, file: !7927, line: 179, column: 2)
!7963 = !DILocation(line: 179, column: 2, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7962, file: !7927, line: 179, column: 2)
!7965 = !DILocation(line: 179, column: 2, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7962, file: !7927, line: 179, column: 2)
!7967 = !{i32 -2144461449, i32 -2144461420, i32 -2144461374, i32 -2144461316, i32 -2144461262, i32 -2144461208, i32 -2144461153, i32 -2144461122}
!7968 = !DILocation(line: 179, column: 2, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7962, file: !7927, line: 179, column: 2)
!7970 = !{i32 -2144460709, i32 -2144460702, i32 -2144460650, i32 -2144460619, i32 -2144460589}
!7971 = !DILocation(line: 179, column: 2, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7962, file: !7927, line: 179, column: 2)
!7973 = !DILocation(line: 180, column: 2, scope: !7949)
!7974 = !DILocation(line: 180, column: 2, scope: !7975)
!7975 = distinct !DILexicalBlock(scope: !7949, file: !7927, line: 180, column: 2)
!7976 = !DILocation(line: 181, column: 21, scope: !7949)
!7977 = !DILocation(line: 181, column: 26, scope: !7949)
!7978 = !DILocation(line: 181, column: 2, scope: !7949)
!7979 = !DILocation(line: 182, column: 1, scope: !7949)
!7980 = distinct !DISubprogram(name: "device_links_read_lock_held", scope: !3, file: !3, line: 82, type: !7842, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!7981 = !DILocation(line: 84, column: 9, scope: !7980)
!7982 = !DILocation(line: 84, column: 2, scope: !7980)
!7983 = distinct !DISubprogram(name: "srcu_read_lock_held", scope: !7927, file: !7927, line: 91, type: !7984, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!7984 = !DISubroutineType(types: !7985)
!7985 = !{!32, !7986}
!7986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7987, size: 64)
!7987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7905)
!7988 = !DILocalVariable(name: "ssp", arg: 1, scope: !7983, file: !7927, line: 91, type: !7986)
!7989 = !DILocation(line: 91, column: 65, scope: !7983)
!7990 = !DILocation(line: 93, column: 2, scope: !7983)
!7991 = distinct !DISubprogram(name: "device_is_dependent", scope: !3, file: !3, line: 126, type: !7992, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!7992 = !DISubroutineType(types: !7993)
!7993 = !{!32, !4856, !591}
!7994 = !DILocalVariable(name: "dev", arg: 1, scope: !7991, file: !3, line: 126, type: !4856)
!7995 = !DILocation(line: 126, column: 40, scope: !7991)
!7996 = !DILocalVariable(name: "target", arg: 2, scope: !7991, file: !3, line: 126, type: !591)
!7997 = !DILocation(line: 126, column: 51, scope: !7991)
!7998 = !DILocalVariable(name: "link", scope: !7991, file: !3, line: 128, type: !7438)
!7999 = !DILocation(line: 128, column: 22, scope: !7991)
!8000 = !DILocalVariable(name: "ret", scope: !7991, file: !3, line: 129, type: !32)
!8001 = !DILocation(line: 129, column: 6, scope: !7991)
!8002 = !DILocation(line: 131, column: 6, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 131, column: 6)
!8004 = !DILocation(line: 131, column: 13, scope: !8003)
!8005 = !DILocation(line: 131, column: 10, scope: !8003)
!8006 = !DILocation(line: 131, column: 6, scope: !7991)
!8007 = !DILocation(line: 132, column: 3, scope: !8003)
!8008 = !DILocation(line: 134, column: 30, scope: !7991)
!8009 = !DILocation(line: 134, column: 35, scope: !7991)
!8010 = !DILocation(line: 134, column: 8, scope: !7991)
!8011 = !DILocation(line: 134, column: 6, scope: !7991)
!8012 = !DILocation(line: 135, column: 6, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 135, column: 6)
!8014 = !DILocation(line: 135, column: 6, scope: !7991)
!8015 = !DILocation(line: 136, column: 10, scope: !8013)
!8016 = !DILocation(line: 136, column: 3, scope: !8013)
!8017 = !DILocalVariable(name: "__mptr", scope: !8018, file: !3, line: 138, type: !591)
!8018 = distinct !DILexicalBlock(scope: !8019, file: !3, line: 138, column: 2)
!8019 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 138, column: 2)
!8020 = !DILocation(line: 138, column: 2, scope: !8018)
!8021 = !DILocation(line: 138, column: 2, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8018, file: !3, line: 138, column: 2)
!8023 = !DILocation(line: 138, column: 2, scope: !8019)
!8024 = !DILocation(line: 138, column: 2, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8019, file: !3, line: 138, column: 2)
!8026 = !DILocation(line: 139, column: 7, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8028, file: !3, line: 139, column: 7)
!8028 = distinct !DILexicalBlock(scope: !8025, file: !3, line: 138, column: 59)
!8029 = !DILocation(line: 139, column: 13, scope: !8027)
!8030 = !DILocation(line: 139, column: 19, scope: !8027)
!8031 = !DILocation(line: 139, column: 7, scope: !8028)
!8032 = !DILocation(line: 140, column: 4, scope: !8027)
!8033 = !DILocation(line: 142, column: 7, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8028, file: !3, line: 142, column: 7)
!8035 = !DILocation(line: 142, column: 13, scope: !8034)
!8036 = !DILocation(line: 142, column: 25, scope: !8034)
!8037 = !DILocation(line: 142, column: 22, scope: !8034)
!8038 = !DILocation(line: 142, column: 7, scope: !8028)
!8039 = !DILocation(line: 143, column: 4, scope: !8034)
!8040 = !DILocation(line: 145, column: 29, scope: !8028)
!8041 = !DILocation(line: 145, column: 35, scope: !8028)
!8042 = !DILocation(line: 145, column: 45, scope: !8028)
!8043 = !DILocation(line: 145, column: 9, scope: !8028)
!8044 = !DILocation(line: 145, column: 7, scope: !8028)
!8045 = !DILocation(line: 146, column: 7, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8028, file: !3, line: 146, column: 7)
!8047 = !DILocation(line: 146, column: 7, scope: !8028)
!8048 = !DILocation(line: 147, column: 4, scope: !8046)
!8049 = !DILocation(line: 148, column: 2, scope: !8028)
!8050 = !DILocalVariable(name: "__mptr", scope: !8051, file: !3, line: 138, type: !591)
!8051 = distinct !DILexicalBlock(scope: !8025, file: !3, line: 138, column: 2)
!8052 = !DILocation(line: 138, column: 2, scope: !8051)
!8053 = !DILocation(line: 138, column: 2, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8051, file: !3, line: 138, column: 2)
!8055 = distinct !{!8055, !8023, !8056}
!8056 = !DILocation(line: 148, column: 2, scope: !8019)
!8057 = !DILocation(line: 149, column: 9, scope: !7991)
!8058 = !DILocation(line: 149, column: 2, scope: !7991)
!8059 = !DILocation(line: 150, column: 1, scope: !7991)
!8060 = distinct !DISubprogram(name: "device_for_each_child", scope: !3, file: !3, line: 3236, type: !8061, scopeLine: 3238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8061 = !DISubroutineType(types: !8062)
!8062 = !{!32, !4856, !591, !8063}
!8063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7992, size: 64)
!8064 = !DILocalVariable(name: "parent", arg: 1, scope: !8060, file: !3, line: 3236, type: !4856)
!8065 = !DILocation(line: 3236, column: 42, scope: !8060)
!8066 = !DILocalVariable(name: "data", arg: 2, scope: !8060, file: !3, line: 3236, type: !591)
!8067 = !DILocation(line: 3236, column: 56, scope: !8060)
!8068 = !DILocalVariable(name: "fn", arg: 3, scope: !8060, file: !3, line: 3237, type: !8063)
!8069 = !DILocation(line: 3237, column: 12, scope: !8060)
!8070 = !DILocalVariable(name: "i", scope: !8060, file: !3, line: 3239, type: !8071)
!8071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "klist_iter", file: !4864, line: 54, size: 128, elements: !8072)
!8072 = !{!8073, !8075}
!8073 = !DIDerivedType(tag: DW_TAG_member, name: "i_klist", scope: !8071, file: !4864, line: 55, baseType: !8074, size: 64)
!8074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4863, size: 64)
!8075 = !DIDerivedType(tag: DW_TAG_member, name: "i_cur", scope: !8071, file: !4864, line: 56, baseType: !4872, size: 64, offset: 64)
!8076 = !DILocation(line: 3239, column: 20, scope: !8060)
!8077 = !DILocalVariable(name: "child", scope: !8060, file: !3, line: 3240, type: !4856)
!8078 = !DILocation(line: 3240, column: 17, scope: !8060)
!8079 = !DILocalVariable(name: "error", scope: !8060, file: !3, line: 3241, type: !32)
!8080 = !DILocation(line: 3241, column: 6, scope: !8060)
!8081 = !DILocation(line: 3243, column: 7, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8060, file: !3, line: 3243, column: 6)
!8083 = !DILocation(line: 3243, column: 15, scope: !8082)
!8084 = !DILocation(line: 3243, column: 6, scope: !8060)
!8085 = !DILocation(line: 3244, column: 3, scope: !8082)
!8086 = !DILocation(line: 3246, column: 19, scope: !8060)
!8087 = !DILocation(line: 3246, column: 27, scope: !8060)
!8088 = !DILocation(line: 3246, column: 30, scope: !8060)
!8089 = !DILocation(line: 3246, column: 2, scope: !8060)
!8090 = !DILocation(line: 3247, column: 2, scope: !8060)
!8091 = !DILocation(line: 3247, column: 10, scope: !8060)
!8092 = !DILocation(line: 3247, column: 16, scope: !8060)
!8093 = !DILocation(line: 3247, column: 28, scope: !8060)
!8094 = !DILocation(line: 3247, column: 26, scope: !8060)
!8095 = !DILocation(line: 0, scope: !8060)
!8096 = !DILocation(line: 3248, column: 11, scope: !8060)
!8097 = !DILocation(line: 3248, column: 14, scope: !8060)
!8098 = !DILocation(line: 3248, column: 21, scope: !8060)
!8099 = !DILocation(line: 3248, column: 9, scope: !8060)
!8100 = distinct !{!8100, !8090, !8101}
!8101 = !DILocation(line: 3248, column: 25, scope: !8060)
!8102 = !DILocation(line: 3249, column: 2, scope: !8060)
!8103 = !DILocation(line: 3250, column: 9, scope: !8060)
!8104 = !DILocation(line: 3250, column: 2, scope: !8060)
!8105 = !DILocation(line: 3251, column: 1, scope: !8060)
!8106 = distinct !DISubprogram(name: "device_pm_move_to_tail", scope: !3, file: !3, line: 229, type: !4915, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8107 = !DILocalVariable(name: "dev", arg: 1, scope: !8106, file: !3, line: 229, type: !4856)
!8108 = !DILocation(line: 229, column: 44, scope: !8106)
!8109 = !DILocalVariable(name: "idx", scope: !8106, file: !3, line: 231, type: !32)
!8110 = !DILocation(line: 231, column: 6, scope: !8106)
!8111 = !DILocation(line: 233, column: 8, scope: !8106)
!8112 = !DILocation(line: 233, column: 6, scope: !8106)
!8113 = !DILocation(line: 234, column: 2, scope: !8106)
!8114 = !DILocation(line: 235, column: 25, scope: !8106)
!8115 = !DILocation(line: 235, column: 2, scope: !8106)
!8116 = !DILocation(line: 236, column: 2, scope: !8106)
!8117 = !DILocation(line: 237, column: 27, scope: !8106)
!8118 = !DILocation(line: 237, column: 2, scope: !8106)
!8119 = !DILocation(line: 238, column: 1, scope: !8106)
!8120 = distinct !DISubprogram(name: "device_reorder_to_tail", scope: !3, file: !3, line: 196, type: !7992, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8121 = !DILocalVariable(name: "dev", arg: 1, scope: !8120, file: !3, line: 196, type: !4856)
!8122 = !DILocation(line: 196, column: 50, scope: !8120)
!8123 = !DILocalVariable(name: "not_used", arg: 2, scope: !8120, file: !3, line: 196, type: !591)
!8124 = !DILocation(line: 196, column: 61, scope: !8120)
!8125 = !DILocalVariable(name: "link", scope: !8120, file: !3, line: 198, type: !7438)
!8126 = !DILocation(line: 198, column: 22, scope: !8120)
!8127 = !DILocation(line: 204, column: 27, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8120, file: !3, line: 204, column: 6)
!8129 = !DILocation(line: 204, column: 6, scope: !8128)
!8130 = !DILocation(line: 204, column: 6, scope: !8120)
!8131 = !DILocation(line: 205, column: 26, scope: !8128)
!8132 = !DILocation(line: 205, column: 3, scope: !8128)
!8133 = !DILocation(line: 207, column: 28, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8120, file: !3, line: 207, column: 6)
!8135 = !DILocation(line: 207, column: 6, scope: !8134)
!8136 = !DILocation(line: 207, column: 6, scope: !8120)
!8137 = !DILocation(line: 208, column: 23, scope: !8134)
!8138 = !DILocation(line: 208, column: 3, scope: !8134)
!8139 = !DILocation(line: 210, column: 24, scope: !8120)
!8140 = !DILocation(line: 210, column: 2, scope: !8120)
!8141 = !DILocalVariable(name: "__mptr", scope: !8142, file: !3, line: 211, type: !591)
!8142 = distinct !DILexicalBlock(scope: !8143, file: !3, line: 211, column: 2)
!8143 = distinct !DILexicalBlock(scope: !8120, file: !3, line: 211, column: 2)
!8144 = !DILocation(line: 211, column: 2, scope: !8142)
!8145 = !DILocation(line: 211, column: 2, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 211, column: 2)
!8147 = !DILocation(line: 211, column: 2, scope: !8143)
!8148 = !DILocation(line: 211, column: 2, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8143, file: !3, line: 211, column: 2)
!8150 = !DILocation(line: 212, column: 7, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8152, file: !3, line: 212, column: 7)
!8152 = distinct !DILexicalBlock(scope: !8149, file: !3, line: 211, column: 59)
!8153 = !DILocation(line: 212, column: 13, scope: !8151)
!8154 = !DILocation(line: 212, column: 19, scope: !8151)
!8155 = !DILocation(line: 212, column: 7, scope: !8152)
!8156 = !DILocation(line: 213, column: 4, scope: !8151)
!8157 = !DILocation(line: 214, column: 26, scope: !8152)
!8158 = !DILocation(line: 214, column: 32, scope: !8152)
!8159 = !DILocation(line: 214, column: 3, scope: !8152)
!8160 = !DILocation(line: 215, column: 2, scope: !8152)
!8161 = !DILocalVariable(name: "__mptr", scope: !8162, file: !3, line: 211, type: !591)
!8162 = distinct !DILexicalBlock(scope: !8149, file: !3, line: 211, column: 2)
!8163 = !DILocation(line: 211, column: 2, scope: !8162)
!8164 = !DILocation(line: 211, column: 2, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8162, file: !3, line: 211, column: 2)
!8166 = distinct !{!8166, !8147, !8167}
!8167 = !DILocation(line: 215, column: 2, scope: !8143)
!8168 = !DILocation(line: 217, column: 2, scope: !8120)
!8169 = !DILocalVariable(name: "ret", scope: !7841, file: !3, line: 439, type: !32)
!8170 = !DILocation(line: 439, column: 6, scope: !7841)
!8171 = !DILocation(line: 441, column: 8, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !7841, file: !3, line: 441, column: 8)
!8173 = !DILocation(line: 441, column: 6, scope: !7841)
!8174 = !DILocation(line: 442, column: 6, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !7841, file: !3, line: 442, column: 6)
!8176 = !DILocation(line: 442, column: 6, scope: !7841)
!8177 = !DILocation(line: 443, column: 10, scope: !8175)
!8178 = !DILocation(line: 443, column: 3, scope: !8175)
!8179 = !DILocation(line: 445, column: 8, scope: !7841)
!8180 = !DILocation(line: 445, column: 6, scope: !7841)
!8181 = !DILocation(line: 446, column: 6, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !7841, file: !3, line: 446, column: 6)
!8183 = !DILocation(line: 446, column: 6, scope: !7841)
!8184 = !DILocation(line: 447, column: 3, scope: !8182)
!8185 = !DILocation(line: 449, column: 9, scope: !7841)
!8186 = !DILocation(line: 449, column: 2, scope: !7841)
!8187 = !DILocation(line: 450, column: 1, scope: !7841)
!8188 = distinct !DISubprogram(name: "device_link_add", scope: !3, file: !3, line: 517, type: !8189, scopeLine: 519, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8189 = !DISubroutineType(types: !8190)
!8190 = !{!7438, !4856, !4856, !987}
!8191 = !DILocalVariable(name: "consumer", arg: 1, scope: !8188, file: !3, line: 517, type: !4856)
!8192 = !DILocation(line: 517, column: 52, scope: !8188)
!8193 = !DILocalVariable(name: "supplier", arg: 2, scope: !8188, file: !3, line: 518, type: !4856)
!8194 = !DILocation(line: 518, column: 24, scope: !8188)
!8195 = !DILocalVariable(name: "flags", arg: 3, scope: !8188, file: !3, line: 518, type: !987)
!8196 = !DILocation(line: 518, column: 38, scope: !8188)
!8197 = !DILocalVariable(name: "link", scope: !8188, file: !3, line: 520, type: !7438)
!8198 = !DILocation(line: 520, column: 22, scope: !8188)
!8199 = !DILocation(line: 522, column: 7, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 522, column: 6)
!8201 = !DILocation(line: 522, column: 16, scope: !8200)
!8202 = !DILocation(line: 522, column: 20, scope: !8200)
!8203 = !DILocation(line: 522, column: 29, scope: !8200)
!8204 = !DILocation(line: 522, column: 32, scope: !8200)
!8205 = !DILocation(line: 522, column: 38, scope: !8200)
!8206 = !DILocation(line: 522, column: 60, scope: !8200)
!8207 = !DILocation(line: 523, column: 7, scope: !8200)
!8208 = !DILocation(line: 523, column: 13, scope: !8200)
!8209 = !DILocation(line: 523, column: 33, scope: !8200)
!8210 = !DILocation(line: 523, column: 36, scope: !8200)
!8211 = !DILocation(line: 523, column: 42, scope: !8200)
!8212 = !DILocation(line: 523, column: 67, scope: !8200)
!8213 = !DILocation(line: 524, column: 7, scope: !8200)
!8214 = !DILocation(line: 524, column: 13, scope: !8200)
!8215 = !DILocation(line: 524, column: 39, scope: !8200)
!8216 = !DILocation(line: 525, column: 7, scope: !8200)
!8217 = !DILocation(line: 525, column: 13, scope: !8200)
!8218 = !DILocation(line: 525, column: 41, scope: !8200)
!8219 = !DILocation(line: 526, column: 7, scope: !8200)
!8220 = !DILocation(line: 526, column: 13, scope: !8200)
!8221 = !DILocation(line: 526, column: 42, scope: !8200)
!8222 = !DILocation(line: 527, column: 7, scope: !8200)
!8223 = !DILocation(line: 527, column: 13, scope: !8200)
!8224 = !DILocation(line: 522, column: 6, scope: !8188)
!8225 = !DILocation(line: 529, column: 3, scope: !8200)
!8226 = !DILocation(line: 531, column: 6, scope: !8227)
!8227 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 531, column: 6)
!8228 = !DILocation(line: 531, column: 12, scope: !8227)
!8229 = !DILocation(line: 531, column: 33, scope: !8227)
!8230 = !DILocation(line: 531, column: 36, scope: !8227)
!8231 = !DILocation(line: 531, column: 42, scope: !8227)
!8232 = !DILocation(line: 531, column: 6, scope: !8188)
!8233 = !DILocation(line: 532, column: 27, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8235, file: !3, line: 532, column: 7)
!8235 = distinct !DILexicalBlock(scope: !8227, file: !3, line: 531, column: 64)
!8236 = !DILocation(line: 532, column: 7, scope: !8234)
!8237 = !DILocation(line: 532, column: 37, scope: !8234)
!8238 = !DILocation(line: 532, column: 7, scope: !8235)
!8239 = !DILocation(line: 533, column: 26, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8234, file: !3, line: 532, column: 42)
!8241 = !DILocation(line: 533, column: 4, scope: !8240)
!8242 = !DILocation(line: 534, column: 4, scope: !8240)
!8243 = !DILocation(line: 536, column: 2, scope: !8235)
!8244 = !DILocation(line: 538, column: 8, scope: !8245)
!8245 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 538, column: 6)
!8246 = !DILocation(line: 538, column: 14, scope: !8245)
!8247 = !DILocation(line: 538, column: 6, scope: !8188)
!8248 = !DILocation(line: 539, column: 9, scope: !8245)
!8249 = !DILocation(line: 539, column: 3, scope: !8245)
!8250 = !DILocation(line: 541, column: 2, scope: !8188)
!8251 = !DILocation(line: 542, column: 2, scope: !8188)
!8252 = !DILocation(line: 551, column: 29, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 551, column: 6)
!8254 = !DILocation(line: 551, column: 7, scope: !8253)
!8255 = !DILocation(line: 552, column: 6, scope: !8253)
!8256 = !DILocation(line: 552, column: 12, scope: !8253)
!8257 = !DILocation(line: 552, column: 18, scope: !8253)
!8258 = !DILocation(line: 552, column: 45, scope: !8253)
!8259 = !DILocation(line: 553, column: 25, scope: !8253)
!8260 = !DILocation(line: 553, column: 35, scope: !8253)
!8261 = !DILocation(line: 553, column: 5, scope: !8253)
!8262 = !DILocation(line: 551, column: 6, scope: !8188)
!8263 = !DILocation(line: 554, column: 8, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8253, file: !3, line: 553, column: 47)
!8265 = !DILocation(line: 555, column: 3, scope: !8264)
!8266 = !DILocation(line: 563, column: 6, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 563, column: 6)
!8268 = !DILocation(line: 563, column: 12, scope: !8267)
!8269 = !DILocation(line: 563, column: 6, scope: !8188)
!8270 = !DILocation(line: 564, column: 9, scope: !8267)
!8271 = !DILocation(line: 564, column: 3, scope: !8267)
!8272 = !DILocalVariable(name: "__mptr", scope: !8273, file: !3, line: 566, type: !591)
!8273 = distinct !DILexicalBlock(scope: !8274, file: !3, line: 566, column: 2)
!8274 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 566, column: 2)
!8275 = !DILocation(line: 566, column: 2, scope: !8273)
!8276 = !DILocation(line: 566, column: 2, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8273, file: !3, line: 566, column: 2)
!8278 = !DILocation(line: 566, column: 2, scope: !8274)
!8279 = !DILocation(line: 566, column: 2, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8274, file: !3, line: 566, column: 2)
!8281 = !DILocation(line: 567, column: 7, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8283, file: !3, line: 567, column: 7)
!8283 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 566, column: 64)
!8284 = !DILocation(line: 567, column: 13, scope: !8282)
!8285 = !DILocation(line: 567, column: 25, scope: !8282)
!8286 = !DILocation(line: 567, column: 22, scope: !8282)
!8287 = !DILocation(line: 567, column: 7, scope: !8283)
!8288 = !DILocation(line: 568, column: 4, scope: !8282)
!8289 = !DILocation(line: 570, column: 7, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8283, file: !3, line: 570, column: 7)
!8291 = !DILocation(line: 570, column: 13, scope: !8290)
!8292 = !DILocation(line: 570, column: 7, scope: !8283)
!8293 = !DILocation(line: 571, column: 10, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8295, file: !3, line: 571, column: 8)
!8295 = distinct !DILexicalBlock(scope: !8290, file: !3, line: 570, column: 35)
!8296 = !DILocation(line: 571, column: 16, scope: !8294)
!8297 = !DILocation(line: 571, column: 22, scope: !8294)
!8298 = !DILocation(line: 571, column: 8, scope: !8295)
!8299 = !DILocation(line: 572, column: 25, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8294, file: !3, line: 571, column: 45)
!8301 = !DILocation(line: 572, column: 5, scope: !8300)
!8302 = !DILocation(line: 573, column: 5, scope: !8300)
!8303 = !DILocation(line: 573, column: 11, scope: !8300)
!8304 = !DILocation(line: 573, column: 17, scope: !8300)
!8305 = !DILocation(line: 574, column: 4, scope: !8300)
!8306 = !DILocation(line: 575, column: 8, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8295, file: !3, line: 575, column: 8)
!8308 = !DILocation(line: 575, column: 14, scope: !8307)
!8309 = !DILocation(line: 575, column: 8, scope: !8295)
!8310 = !DILocation(line: 576, column: 19, scope: !8307)
!8311 = !DILocation(line: 576, column: 25, scope: !8307)
!8312 = !DILocation(line: 576, column: 5, scope: !8307)
!8313 = !DILocation(line: 577, column: 3, scope: !8295)
!8314 = !DILocation(line: 579, column: 7, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8283, file: !3, line: 579, column: 7)
!8316 = !DILocation(line: 579, column: 13, scope: !8315)
!8317 = !DILocation(line: 579, column: 7, scope: !8283)
!8318 = !DILocation(line: 580, column: 14, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8315, file: !3, line: 579, column: 34)
!8320 = !DILocation(line: 580, column: 20, scope: !8319)
!8321 = !DILocation(line: 580, column: 4, scope: !8319)
!8322 = !DILocation(line: 581, column: 8, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8319, file: !3, line: 581, column: 8)
!8324 = !DILocation(line: 581, column: 14, scope: !8323)
!8325 = !DILocation(line: 581, column: 20, scope: !8323)
!8326 = !DILocation(line: 581, column: 46, scope: !8323)
!8327 = !DILocation(line: 582, column: 10, scope: !8323)
!8328 = !DILocation(line: 582, column: 16, scope: !8323)
!8329 = !DILocation(line: 582, column: 22, scope: !8323)
!8330 = !DILocation(line: 581, column: 8, scope: !8319)
!8331 = !DILocation(line: 583, column: 5, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8323, file: !3, line: 582, column: 44)
!8333 = !DILocation(line: 583, column: 11, scope: !8332)
!8334 = !DILocation(line: 583, column: 17, scope: !8332)
!8335 = !DILocation(line: 584, column: 5, scope: !8332)
!8336 = !DILocation(line: 586, column: 5, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8323, file: !3, line: 585, column: 11)
!8338 = !DILocation(line: 586, column: 11, scope: !8337)
!8339 = !DILocation(line: 586, column: 17, scope: !8337)
!8340 = !DILocation(line: 587, column: 5, scope: !8337)
!8341 = !DILocation(line: 596, column: 7, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8283, file: !3, line: 596, column: 7)
!8343 = !DILocation(line: 596, column: 13, scope: !8342)
!8344 = !DILocation(line: 596, column: 7, scope: !8283)
!8345 = !DILocation(line: 597, column: 8, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8347, file: !3, line: 597, column: 8)
!8347 = distinct !DILexicalBlock(scope: !8342, file: !3, line: 596, column: 44)
!8348 = !DILocation(line: 597, column: 14, scope: !8346)
!8349 = !DILocation(line: 597, column: 20, scope: !8346)
!8350 = !DILocation(line: 597, column: 8, scope: !8347)
!8351 = !DILocation(line: 598, column: 5, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8346, file: !3, line: 597, column: 51)
!8353 = !DILocation(line: 598, column: 11, scope: !8352)
!8354 = !DILocation(line: 598, column: 17, scope: !8352)
!8355 = !DILocation(line: 599, column: 5, scope: !8352)
!8356 = !DILocation(line: 599, column: 11, scope: !8352)
!8357 = !DILocation(line: 599, column: 17, scope: !8352)
!8358 = !DILocation(line: 600, column: 4, scope: !8352)
!8359 = !DILocation(line: 601, column: 3, scope: !8347)
!8360 = !DILocation(line: 601, column: 16, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8342, file: !3, line: 601, column: 14)
!8362 = !DILocation(line: 601, column: 22, scope: !8361)
!8363 = !DILocation(line: 601, column: 14, scope: !8342)
!8364 = !DILocation(line: 602, column: 4, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8361, file: !3, line: 601, column: 54)
!8366 = !DILocation(line: 602, column: 10, scope: !8365)
!8367 = !DILocation(line: 602, column: 16, scope: !8365)
!8368 = !DILocation(line: 604, column: 3, scope: !8365)
!8369 = !DILocation(line: 605, column: 9, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8283, file: !3, line: 605, column: 7)
!8371 = !DILocation(line: 605, column: 15, scope: !8370)
!8372 = !DILocation(line: 605, column: 21, scope: !8370)
!8373 = !DILocation(line: 605, column: 7, scope: !8283)
!8374 = !DILocation(line: 606, column: 14, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8370, file: !3, line: 605, column: 41)
!8376 = !DILocation(line: 606, column: 20, scope: !8375)
!8377 = !DILocation(line: 606, column: 4, scope: !8375)
!8378 = !DILocation(line: 607, column: 4, scope: !8375)
!8379 = !DILocation(line: 607, column: 10, scope: !8375)
!8380 = !DILocation(line: 607, column: 16, scope: !8375)
!8381 = !DILocation(line: 608, column: 28, scope: !8375)
!8382 = !DILocation(line: 608, column: 34, scope: !8375)
!8383 = !DILocation(line: 608, column: 44, scope: !8375)
!8384 = !DILocation(line: 608, column: 4, scope: !8375)
!8385 = !DILocation(line: 609, column: 3, scope: !8375)
!8386 = !DILocation(line: 610, column: 7, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8283, file: !3, line: 610, column: 7)
!8388 = !DILocation(line: 610, column: 13, scope: !8387)
!8389 = !DILocation(line: 610, column: 19, scope: !8387)
!8390 = !DILocation(line: 610, column: 45, scope: !8387)
!8391 = !DILocation(line: 611, column: 9, scope: !8387)
!8392 = !DILocation(line: 611, column: 15, scope: !8387)
!8393 = !DILocation(line: 610, column: 7, scope: !8283)
!8394 = !DILocation(line: 612, column: 4, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8387, file: !3, line: 611, column: 43)
!8396 = !DILocation(line: 612, column: 10, scope: !8395)
!8397 = !DILocation(line: 612, column: 16, scope: !8395)
!8398 = !DILocation(line: 613, column: 4, scope: !8395)
!8399 = !DILocation(line: 616, column: 3, scope: !8283)
!8400 = !DILocalVariable(name: "__mptr", scope: !8401, file: !3, line: 566, type: !591)
!8401 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 566, column: 2)
!8402 = !DILocation(line: 566, column: 2, scope: !8401)
!8403 = !DILocation(line: 566, column: 2, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8401, file: !3, line: 566, column: 2)
!8405 = distinct !{!8405, !8278, !8406}
!8406 = !DILocation(line: 617, column: 2, scope: !8274)
!8407 = !DILocation(line: 619, column: 9, scope: !8188)
!8408 = !DILocation(line: 619, column: 7, scope: !8188)
!8409 = !DILocation(line: 620, column: 7, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 620, column: 6)
!8411 = !DILocation(line: 620, column: 6, scope: !8188)
!8412 = !DILocation(line: 621, column: 3, scope: !8410)
!8413 = !DILocation(line: 623, column: 16, scope: !8188)
!8414 = !DILocation(line: 623, column: 22, scope: !8188)
!8415 = !DILocation(line: 623, column: 2, scope: !8188)
!8416 = !DILocation(line: 625, column: 13, scope: !8188)
!8417 = !DILocation(line: 625, column: 2, scope: !8188)
!8418 = !DILocation(line: 626, column: 19, scope: !8188)
!8419 = !DILocation(line: 626, column: 2, scope: !8188)
!8420 = !DILocation(line: 626, column: 8, scope: !8188)
!8421 = !DILocation(line: 626, column: 17, scope: !8188)
!8422 = !DILocation(line: 627, column: 18, scope: !8188)
!8423 = !DILocation(line: 627, column: 24, scope: !8188)
!8424 = !DILocation(line: 627, column: 2, scope: !8188)
!8425 = !DILocation(line: 628, column: 13, scope: !8188)
!8426 = !DILocation(line: 628, column: 2, scope: !8188)
!8427 = !DILocation(line: 629, column: 19, scope: !8188)
!8428 = !DILocation(line: 629, column: 2, scope: !8188)
!8429 = !DILocation(line: 629, column: 8, scope: !8188)
!8430 = !DILocation(line: 629, column: 17, scope: !8188)
!8431 = !DILocation(line: 630, column: 18, scope: !8188)
!8432 = !DILocation(line: 630, column: 24, scope: !8188)
!8433 = !DILocation(line: 630, column: 2, scope: !8188)
!8434 = !DILocation(line: 631, column: 16, scope: !8188)
!8435 = !DILocation(line: 631, column: 2, scope: !8188)
!8436 = !DILocation(line: 631, column: 8, scope: !8188)
!8437 = !DILocation(line: 631, column: 14, scope: !8188)
!8438 = !DILocation(line: 632, column: 13, scope: !8188)
!8439 = !DILocation(line: 632, column: 19, scope: !8188)
!8440 = !DILocation(line: 632, column: 2, scope: !8188)
!8441 = !DILocation(line: 634, column: 2, scope: !8188)
!8442 = !DILocation(line: 634, column: 8, scope: !8188)
!8443 = !DILocation(line: 634, column: 17, scope: !8188)
!8444 = !DILocation(line: 634, column: 23, scope: !8188)
!8445 = !DILocation(line: 635, column: 30, scope: !8188)
!8446 = !DILocation(line: 635, column: 36, scope: !8188)
!8447 = !DILocation(line: 635, column: 2, scope: !8188)
!8448 = !DILocation(line: 636, column: 16, scope: !8188)
!8449 = !DILocation(line: 636, column: 22, scope: !8188)
!8450 = !DILocation(line: 637, column: 17, scope: !8188)
!8451 = !DILocation(line: 637, column: 8, scope: !8188)
!8452 = !DILocation(line: 637, column: 37, scope: !8188)
!8453 = !DILocation(line: 637, column: 28, scope: !8188)
!8454 = !DILocation(line: 636, column: 2, scope: !8188)
!8455 = !DILocation(line: 638, column: 23, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 638, column: 6)
!8457 = !DILocation(line: 638, column: 29, scope: !8456)
!8458 = !DILocation(line: 638, column: 6, scope: !8456)
!8459 = !DILocation(line: 638, column: 6, scope: !8188)
!8460 = !DILocation(line: 639, column: 14, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8456, file: !3, line: 638, column: 40)
!8462 = !DILocation(line: 639, column: 3, scope: !8461)
!8463 = !DILocation(line: 640, column: 14, scope: !8461)
!8464 = !DILocation(line: 640, column: 3, scope: !8461)
!8465 = !DILocation(line: 641, column: 9, scope: !8461)
!8466 = !DILocation(line: 641, column: 3, scope: !8461)
!8467 = !DILocation(line: 642, column: 8, scope: !8461)
!8468 = !DILocation(line: 643, column: 3, scope: !8461)
!8469 = !DILocation(line: 646, column: 6, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 646, column: 6)
!8471 = !DILocation(line: 646, column: 12, scope: !8470)
!8472 = !DILocation(line: 646, column: 6, scope: !8188)
!8473 = !DILocation(line: 647, column: 7, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8475, file: !3, line: 647, column: 7)
!8475 = distinct !DILexicalBlock(scope: !8470, file: !3, line: 646, column: 34)
!8476 = !DILocation(line: 647, column: 13, scope: !8474)
!8477 = !DILocation(line: 647, column: 7, scope: !8475)
!8478 = !DILocation(line: 648, column: 18, scope: !8474)
!8479 = !DILocation(line: 648, column: 24, scope: !8474)
!8480 = !DILocation(line: 648, column: 4, scope: !8474)
!8481 = !DILocation(line: 650, column: 23, scope: !8475)
!8482 = !DILocation(line: 650, column: 3, scope: !8475)
!8483 = !DILocation(line: 651, column: 2, scope: !8475)
!8484 = !DILocation(line: 654, column: 6, scope: !8485)
!8485 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 654, column: 6)
!8486 = !DILocation(line: 654, column: 12, scope: !8485)
!8487 = !DILocation(line: 654, column: 6, scope: !8188)
!8488 = !DILocation(line: 655, column: 3, scope: !8485)
!8489 = !DILocation(line: 655, column: 9, scope: !8485)
!8490 = !DILocation(line: 655, column: 16, scope: !8485)
!8491 = !DILocation(line: 657, column: 27, scope: !8485)
!8492 = !DILocation(line: 657, column: 33, scope: !8485)
!8493 = !DILocation(line: 657, column: 43, scope: !8485)
!8494 = !DILocation(line: 657, column: 3, scope: !8485)
!8495 = !DILocation(line: 663, column: 6, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 663, column: 6)
!8497 = !DILocation(line: 663, column: 12, scope: !8496)
!8498 = !DILocation(line: 663, column: 19, scope: !8496)
!8499 = !DILocation(line: 663, column: 46, scope: !8496)
!8500 = !DILocation(line: 664, column: 6, scope: !8496)
!8501 = !DILocation(line: 664, column: 12, scope: !8496)
!8502 = !DILocation(line: 663, column: 6, scope: !8188)
!8503 = !DILocation(line: 665, column: 21, scope: !8496)
!8504 = !DILocation(line: 665, column: 3, scope: !8496)
!8505 = !DILocation(line: 667, column: 21, scope: !8188)
!8506 = !DILocation(line: 667, column: 27, scope: !8188)
!8507 = !DILocation(line: 667, column: 36, scope: !8188)
!8508 = !DILocation(line: 667, column: 46, scope: !8188)
!8509 = !DILocation(line: 667, column: 52, scope: !8188)
!8510 = !DILocation(line: 667, column: 2, scope: !8188)
!8511 = !DILocation(line: 668, column: 21, scope: !8188)
!8512 = !DILocation(line: 668, column: 27, scope: !8188)
!8513 = !DILocation(line: 668, column: 36, scope: !8188)
!8514 = !DILocation(line: 668, column: 46, scope: !8188)
!8515 = !DILocation(line: 668, column: 52, scope: !8188)
!8516 = !DILocation(line: 668, column: 2, scope: !8188)
!8517 = !DILocation(line: 670, column: 6, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 670, column: 6)
!8519 = !DILocation(line: 670, column: 12, scope: !8518)
!8520 = !DILocation(line: 670, column: 6, scope: !8188)
!8521 = !DILocation(line: 674, column: 3, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8518, file: !3, line: 670, column: 39)
!8523 = !DILocation(line: 670, column: 14, scope: !8518)
!8524 = !DILabel(scope: !8188, name: "reorder", file: !3, line: 677)
!8525 = !DILocation(line: 677, column: 1, scope: !8188)
!8526 = !DILocation(line: 685, column: 25, scope: !8188)
!8527 = !DILocation(line: 685, column: 2, scope: !8188)
!8528 = !DILocation(line: 687, column: 2, scope: !8188)
!8529 = !DILabel(scope: !8188, name: "out", file: !3, line: 689)
!8530 = !DILocation(line: 689, column: 1, scope: !8188)
!8531 = !DILocation(line: 690, column: 2, scope: !8188)
!8532 = !DILocation(line: 691, column: 2, scope: !8188)
!8533 = !DILocation(line: 693, column: 7, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 693, column: 6)
!8535 = !DILocation(line: 693, column: 13, scope: !8534)
!8536 = !DILocation(line: 693, column: 34, scope: !8534)
!8537 = !DILocation(line: 693, column: 37, scope: !8534)
!8538 = !DILocation(line: 693, column: 43, scope: !8534)
!8539 = !DILocation(line: 693, column: 65, scope: !8534)
!8540 = !DILocation(line: 693, column: 69, scope: !8534)
!8541 = !DILocation(line: 693, column: 6, scope: !8188)
!8542 = !DILocation(line: 694, column: 18, scope: !8534)
!8543 = !DILocation(line: 694, column: 3, scope: !8534)
!8544 = !DILocation(line: 696, column: 9, scope: !8188)
!8545 = !DILocation(line: 696, column: 2, scope: !8188)
!8546 = !DILocation(line: 697, column: 1, scope: !8188)
!8547 = distinct !DISubprogram(name: "pm_runtime_get_sync", scope: !8548, file: !8548, line: 384, type: !4911, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8548 = !DIFile(filename: "./include/linux/pm_runtime.h", directory: "/home/lizy2001/genbc/linux")
!8549 = !DILocalVariable(name: "dev", arg: 1, scope: !8547, file: !8548, line: 384, type: !4856)
!8550 = !DILocation(line: 384, column: 54, scope: !8547)
!8551 = !DILocation(line: 386, column: 29, scope: !8547)
!8552 = !DILocation(line: 386, column: 9, scope: !8547)
!8553 = !DILocation(line: 386, column: 2, scope: !8547)
!8554 = distinct !DISubprogram(name: "pm_runtime_put_noidle", scope: !8548, file: !8548, line: 103, type: !4915, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8555 = !DILocalVariable(name: "v", arg: 1, scope: !8556, file: !8557, line: 200, type: !8560)
!8556 = distinct !DISubprogram(name: "arch_atomic_try_cmpxchg", scope: !8557, file: !8557, line: 200, type: !8558, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8557 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!8558 = !DISubroutineType(types: !8559)
!8559 = !{!771, !8560, !1001, !32}
!8560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64)
!8561 = !DILocation(line: 200, column: 63, scope: !8556, inlinedAt: !8562)
!8562 = distinct !DILocation(line: 1093, column: 12, scope: !8563, inlinedAt: !8567)
!8563 = distinct !DISubprogram(name: "arch_atomic_fetch_add_unless", scope: !8564, file: !8564, line: 1086, type: !8565, scopeLine: 1087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8564 = !DIFile(filename: "./include/linux/atomic-arch-fallback.h", directory: "/home/lizy2001/genbc/linux")
!8565 = !DISubroutineType(types: !8566)
!8566 = !{!32, !8560, !32, !32}
!8567 = distinct !DILocation(line: 1113, column: 9, scope: !8568, inlinedAt: !8571)
!8568 = distinct !DISubprogram(name: "arch_atomic_add_unless", scope: !8564, file: !8564, line: 1111, type: !8569, scopeLine: 1112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8569 = !DISubroutineType(types: !8570)
!8570 = !{!771, !8560, !32, !32}
!8571 = distinct !DILocation(line: 789, column: 9, scope: !8572, inlinedAt: !8574)
!8572 = distinct !DISubprogram(name: "atomic_add_unless", scope: !8573, file: !8573, line: 786, type: !8569, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8573 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!8574 = distinct !DILocation(line: 105, column: 2, scope: !8554)
!8575 = !DILocalVariable(name: "old", arg: 2, scope: !8556, file: !8557, line: 200, type: !1001)
!8576 = !DILocation(line: 200, column: 71, scope: !8556, inlinedAt: !8562)
!8577 = !DILocalVariable(name: "new", arg: 3, scope: !8556, file: !8557, line: 200, type: !32)
!8578 = !DILocation(line: 200, column: 80, scope: !8556, inlinedAt: !8562)
!8579 = !DILocalVariable(name: "success", scope: !8580, file: !8557, line: 202, type: !771)
!8580 = distinct !DILexicalBlock(scope: !8556, file: !8557, line: 202, column: 9)
!8581 = !DILocation(line: 202, column: 9, scope: !8580, inlinedAt: !8562)
!8582 = !DILocalVariable(name: "_old", scope: !8580, file: !8557, line: 202, type: !1001)
!8583 = !DILocalVariable(name: "__old", scope: !8580, file: !8557, line: 202, type: !32)
!8584 = !DILocalVariable(name: "__new", scope: !8580, file: !8557, line: 202, type: !32)
!8585 = !DILocalVariable(name: "__ptr", scope: !8580, file: !8557, line: 202, type: !7771)
!8586 = !DILocalVariable(name: "v", arg: 1, scope: !8587, file: !8557, line: 23, type: !8590)
!8587 = distinct !DISubprogram(name: "arch_atomic_read", scope: !8557, file: !8557, line: 23, type: !8588, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8588 = !DISubroutineType(types: !8589)
!8589 = !{!32, !8590}
!8590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8591, size: 64)
!8591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !383)
!8592 = !DILocation(line: 23, column: 61, scope: !8587, inlinedAt: !8593)
!8593 = distinct !DILocation(line: 1088, column: 10, scope: !8563, inlinedAt: !8567)
!8594 = !DILocalVariable(name: "v", arg: 1, scope: !8563, file: !8564, line: 1086, type: !8560)
!8595 = !DILocation(line: 1086, column: 40, scope: !8563, inlinedAt: !8567)
!8596 = !DILocalVariable(name: "a", arg: 2, scope: !8563, file: !8564, line: 1086, type: !32)
!8597 = !DILocation(line: 1086, column: 47, scope: !8563, inlinedAt: !8567)
!8598 = !DILocalVariable(name: "u", arg: 3, scope: !8563, file: !8564, line: 1086, type: !32)
!8599 = !DILocation(line: 1086, column: 54, scope: !8563, inlinedAt: !8567)
!8600 = !DILocalVariable(name: "c", scope: !8563, file: !8564, line: 1088, type: !32)
!8601 = !DILocation(line: 1088, column: 6, scope: !8563, inlinedAt: !8567)
!8602 = !DILocalVariable(name: "v", arg: 1, scope: !8568, file: !8564, line: 1111, type: !8560)
!8603 = !DILocation(line: 1111, column: 34, scope: !8568, inlinedAt: !8571)
!8604 = !DILocalVariable(name: "a", arg: 2, scope: !8568, file: !8564, line: 1111, type: !32)
!8605 = !DILocation(line: 1111, column: 41, scope: !8568, inlinedAt: !8571)
!8606 = !DILocalVariable(name: "u", arg: 3, scope: !8568, file: !8564, line: 1111, type: !32)
!8607 = !DILocation(line: 1111, column: 48, scope: !8568, inlinedAt: !8571)
!8608 = !DILocalVariable(name: "v", arg: 1, scope: !8609, file: !8610, line: 99, type: !8613)
!8609 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !8610, file: !8610, line: 99, type: !8611, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8610 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!8611 = !DISubroutineType(types: !8612)
!8612 = !{null, !8613, !1039}
!8613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8614, size: 64)
!8614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8615)
!8615 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!8616 = !DILocation(line: 99, column: 79, scope: !8609, inlinedAt: !8617)
!8617 = distinct !DILocation(line: 788, column: 2, scope: !8572, inlinedAt: !8574)
!8618 = !DILocalVariable(name: "size", arg: 2, scope: !8609, file: !8610, line: 99, type: !1039)
!8619 = !DILocation(line: 99, column: 89, scope: !8609, inlinedAt: !8617)
!8620 = !DILocalVariable(name: "v", arg: 1, scope: !8572, file: !8573, line: 786, type: !8560)
!8621 = !DILocation(line: 786, column: 29, scope: !8572, inlinedAt: !8574)
!8622 = !DILocalVariable(name: "a", arg: 2, scope: !8572, file: !8573, line: 786, type: !32)
!8623 = !DILocation(line: 786, column: 36, scope: !8572, inlinedAt: !8574)
!8624 = !DILocalVariable(name: "u", arg: 3, scope: !8572, file: !8573, line: 786, type: !32)
!8625 = !DILocation(line: 786, column: 43, scope: !8572, inlinedAt: !8574)
!8626 = !DILocalVariable(name: "dev", arg: 1, scope: !8554, file: !8548, line: 103, type: !4856)
!8627 = !DILocation(line: 103, column: 57, scope: !8554)
!8628 = !DILocation(line: 105, column: 21, scope: !8554)
!8629 = !DILocation(line: 105, column: 26, scope: !8554)
!8630 = !DILocation(line: 105, column: 32, scope: !8554)
!8631 = !DILocation(line: 788, column: 31, scope: !8572, inlinedAt: !8574)
!8632 = !DILocation(line: 101, column: 20, scope: !8609, inlinedAt: !8617)
!8633 = !DILocation(line: 101, column: 23, scope: !8609, inlinedAt: !8617)
!8634 = !DILocation(line: 101, column: 2, scope: !8609, inlinedAt: !8617)
!8635 = !DILocation(line: 102, column: 2, scope: !8609, inlinedAt: !8617)
!8636 = !DILocation(line: 789, column: 32, scope: !8572, inlinedAt: !8574)
!8637 = !DILocation(line: 789, column: 35, scope: !8572, inlinedAt: !8574)
!8638 = !DILocation(line: 789, column: 38, scope: !8572, inlinedAt: !8574)
!8639 = !DILocation(line: 1113, column: 38, scope: !8568, inlinedAt: !8571)
!8640 = !DILocation(line: 1113, column: 41, scope: !8568, inlinedAt: !8571)
!8641 = !DILocation(line: 1113, column: 44, scope: !8568, inlinedAt: !8571)
!8642 = !DILocation(line: 1088, column: 27, scope: !8563, inlinedAt: !8567)
!8643 = !DILocation(line: 29, column: 9, scope: !8587, inlinedAt: !8593)
!8644 = !DILocation(line: 1090, column: 2, scope: !8563, inlinedAt: !8567)
!8645 = !DILocation(line: 1091, column: 7, scope: !8646, inlinedAt: !8567)
!8646 = distinct !DILexicalBlock(scope: !8647, file: !8564, line: 1091, column: 7)
!8647 = distinct !DILexicalBlock(scope: !8563, file: !8564, line: 1090, column: 5)
!8648 = !DILocation(line: 1091, column: 7, scope: !8647, inlinedAt: !8567)
!8649 = !DILocation(line: 1092, column: 4, scope: !8646, inlinedAt: !8567)
!8650 = !DILocation(line: 1093, column: 36, scope: !8563, inlinedAt: !8567)
!8651 = !DILocation(line: 1093, column: 43, scope: !8563, inlinedAt: !8567)
!8652 = !DILocation(line: 1093, column: 47, scope: !8563, inlinedAt: !8567)
!8653 = !DILocation(line: 1093, column: 45, scope: !8563, inlinedAt: !8567)
!8654 = !{i32 -2146416659, i32 -2146416504}
!8655 = !DILocation(line: 202, column: 9, scope: !8656, inlinedAt: !8562)
!8656 = distinct !DILexicalBlock(scope: !8580, file: !8557, line: 202, column: 9)
!8657 = !DILocation(line: 202, column: 9, scope: !8556, inlinedAt: !8562)
!8658 = !DILocation(line: 1093, column: 11, scope: !8563, inlinedAt: !8567)
!8659 = !DILocation(line: 1093, column: 2, scope: !8647, inlinedAt: !8567)
!8660 = distinct !{!8660, !8644, !8661}
!8661 = !DILocation(line: 1093, column: 49, scope: !8563, inlinedAt: !8567)
!8662 = !DILocation(line: 1095, column: 9, scope: !8563, inlinedAt: !8567)
!8663 = !DILocation(line: 1113, column: 50, scope: !8568, inlinedAt: !8571)
!8664 = !DILocation(line: 1113, column: 47, scope: !8568, inlinedAt: !8571)
!8665 = !DILocation(line: 106, column: 1, scope: !8554)
!8666 = distinct !DISubprogram(name: "device_links_write_lock", scope: !3, file: !3, line: 62, type: !3809, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8667 = !DILocation(line: 64, column: 2, scope: !8666)
!8668 = !DILocation(line: 65, column: 1, scope: !8666)
!8669 = distinct !DISubprogram(name: "device_pm_initialized", scope: !5147, file: !5147, line: 118, type: !8670, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8670 = !DISubroutineType(types: !8671)
!8671 = !{!771, !4856}
!8672 = !DILocalVariable(name: "dev", arg: 1, scope: !8669, file: !5147, line: 118, type: !4856)
!8673 = !DILocation(line: 118, column: 57, scope: !8669)
!8674 = !DILocation(line: 120, column: 9, scope: !8669)
!8675 = !DILocation(line: 120, column: 14, scope: !8669)
!8676 = !DILocation(line: 120, column: 20, scope: !8669)
!8677 = !DILocation(line: 120, column: 2, scope: !8669)
!8678 = distinct !DISubprogram(name: "refcount_inc", scope: !569, file: !569, line: 265, type: !8679, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8679 = !DISubroutineType(types: !8680)
!8680 = !{null, !8681}
!8681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!8682 = !DILocalVariable(name: "r", arg: 1, scope: !8678, file: !569, line: 265, type: !8681)
!8683 = !DILocation(line: 265, column: 45, scope: !8678)
!8684 = !DILocation(line: 267, column: 17, scope: !8678)
!8685 = !DILocation(line: 267, column: 2, scope: !8678)
!8686 = !DILocation(line: 268, column: 1, scope: !8678)
!8687 = distinct !DISubprogram(name: "kref_get", scope: !4847, file: !4847, line: 43, type: !8688, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8688 = !DISubroutineType(types: !8689)
!8689 = !{null, !8690}
!8690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4846, size: 64)
!8691 = !DILocalVariable(name: "kref", arg: 1, scope: !8687, file: !4847, line: 43, type: !8690)
!8692 = !DILocation(line: 43, column: 42, scope: !8687)
!8693 = !DILocation(line: 45, column: 16, scope: !8687)
!8694 = !DILocation(line: 45, column: 22, scope: !8687)
!8695 = !DILocation(line: 45, column: 2, scope: !8687)
!8696 = !DILocation(line: 46, column: 1, scope: !8687)
!8697 = distinct !DISubprogram(name: "device_link_init_status", scope: !3, file: !3, line: 152, type: !8698, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8698 = !DISubroutineType(types: !8699)
!8699 = !{null, !7438, !4856, !4856}
!8700 = !DILocalVariable(name: "link", arg: 1, scope: !8697, file: !3, line: 152, type: !7438)
!8701 = !DILocation(line: 152, column: 57, scope: !8697)
!8702 = !DILocalVariable(name: "consumer", arg: 2, scope: !8697, file: !3, line: 153, type: !4856)
!8703 = !DILocation(line: 153, column: 24, scope: !8697)
!8704 = !DILocalVariable(name: "supplier", arg: 3, scope: !8697, file: !3, line: 154, type: !4856)
!8705 = !DILocation(line: 154, column: 24, scope: !8697)
!8706 = !DILocation(line: 156, column: 10, scope: !8697)
!8707 = !DILocation(line: 156, column: 20, scope: !8697)
!8708 = !DILocation(line: 156, column: 26, scope: !8697)
!8709 = !DILocation(line: 156, column: 2, scope: !8697)
!8710 = !DILocation(line: 158, column: 11, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8697, file: !3, line: 156, column: 34)
!8712 = !DILocation(line: 158, column: 21, scope: !8711)
!8713 = !DILocation(line: 158, column: 27, scope: !8711)
!8714 = !DILocation(line: 158, column: 3, scope: !8711)
!8715 = !DILocation(line: 167, column: 4, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8711, file: !3, line: 158, column: 35)
!8717 = !DILocation(line: 167, column: 10, scope: !8716)
!8718 = !DILocation(line: 167, column: 17, scope: !8716)
!8719 = !DILocation(line: 168, column: 4, scope: !8716)
!8720 = !DILocation(line: 170, column: 4, scope: !8716)
!8721 = !DILocation(line: 170, column: 10, scope: !8716)
!8722 = !DILocation(line: 170, column: 17, scope: !8716)
!8723 = !DILocation(line: 171, column: 4, scope: !8716)
!8724 = !DILocation(line: 173, column: 3, scope: !8711)
!8725 = !DILocation(line: 175, column: 11, scope: !8711)
!8726 = !DILocation(line: 175, column: 21, scope: !8711)
!8727 = !DILocation(line: 175, column: 27, scope: !8711)
!8728 = !DILocation(line: 175, column: 3, scope: !8711)
!8729 = !DILocation(line: 177, column: 4, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8711, file: !3, line: 175, column: 35)
!8731 = !DILocation(line: 177, column: 10, scope: !8730)
!8732 = !DILocation(line: 177, column: 17, scope: !8730)
!8733 = !DILocation(line: 178, column: 4, scope: !8730)
!8734 = !DILocation(line: 180, column: 4, scope: !8730)
!8735 = !DILocation(line: 180, column: 10, scope: !8730)
!8736 = !DILocation(line: 180, column: 17, scope: !8730)
!8737 = !DILocation(line: 181, column: 4, scope: !8730)
!8738 = !DILocation(line: 183, column: 4, scope: !8730)
!8739 = !DILocation(line: 183, column: 10, scope: !8730)
!8740 = !DILocation(line: 183, column: 17, scope: !8730)
!8741 = !DILocation(line: 184, column: 4, scope: !8730)
!8742 = !DILocation(line: 186, column: 3, scope: !8711)
!8743 = !DILocation(line: 188, column: 3, scope: !8711)
!8744 = !DILocation(line: 188, column: 9, scope: !8711)
!8745 = !DILocation(line: 188, column: 16, scope: !8711)
!8746 = !DILocation(line: 189, column: 3, scope: !8711)
!8747 = !DILocation(line: 191, column: 3, scope: !8711)
!8748 = !DILocation(line: 191, column: 9, scope: !8711)
!8749 = !DILocation(line: 191, column: 16, scope: !8711)
!8750 = !DILocation(line: 192, column: 3, scope: !8711)
!8751 = !DILocation(line: 194, column: 1, scope: !8697)
!8752 = distinct !DISubprogram(name: "kzalloc", scope: !7431, file: !7431, line: 662, type: !8753, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8753 = !DISubroutineType(types: !8754)
!8754 = !{!591, !1039, !1742}
!8755 = !DILocalVariable(name: "s", arg: 1, scope: !8756, file: !7431, line: 445, type: !2051)
!8756 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !7431, file: !7431, line: 445, type: !8757, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8757 = !DISubroutineType(types: !8758)
!8758 = !{!591, !2051, !1742, !1039}
!8759 = !DILocation(line: 445, column: 72, scope: !8756, inlinedAt: !8760)
!8760 = distinct !DILocation(line: 552, column: 10, scope: !8761, inlinedAt: !8764)
!8761 = distinct !DILexicalBlock(scope: !8762, file: !7431, line: 540, column: 34)
!8762 = distinct !DILexicalBlock(scope: !8763, file: !7431, line: 540, column: 6)
!8763 = distinct !DISubprogram(name: "kmalloc", scope: !7431, file: !7431, line: 538, type: !8753, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8764 = distinct !DILocation(line: 664, column: 9, scope: !8752)
!8765 = !DILocalVariable(name: "flags", arg: 2, scope: !8756, file: !7431, line: 446, type: !1742)
!8766 = !DILocation(line: 446, column: 9, scope: !8756, inlinedAt: !8760)
!8767 = !DILocalVariable(name: "size", arg: 3, scope: !8756, file: !7431, line: 446, type: !1039)
!8768 = !DILocation(line: 446, column: 23, scope: !8756, inlinedAt: !8760)
!8769 = !DILocalVariable(name: "ret", scope: !8756, file: !7431, line: 448, type: !591)
!8770 = !DILocation(line: 448, column: 8, scope: !8756, inlinedAt: !8760)
!8771 = !DILocalVariable(name: "flags", arg: 1, scope: !8772, file: !7431, line: 318, type: !1742)
!8772 = distinct !DISubprogram(name: "kmalloc_type", scope: !7431, file: !7431, line: 318, type: !8773, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8773 = !DISubroutineType(types: !8774)
!8774 = !{!7430, !1742}
!8775 = !DILocation(line: 318, column: 67, scope: !8772, inlinedAt: !8776)
!8776 = distinct !DILocation(line: 553, column: 20, scope: !8761, inlinedAt: !8764)
!8777 = !DILocalVariable(name: "size", arg: 1, scope: !8778, file: !7431, line: 346, type: !1039)
!8778 = distinct !DISubprogram(name: "kmalloc_index", scope: !7431, file: !7431, line: 346, type: !8779, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8779 = !DISubroutineType(types: !8780)
!8780 = !{!7, !1039}
!8781 = !DILocation(line: 346, column: 58, scope: !8778, inlinedAt: !8782)
!8782 = distinct !DILocation(line: 547, column: 11, scope: !8761, inlinedAt: !8764)
!8783 = !DILocalVariable(name: "size", arg: 1, scope: !8784, file: !7431, line: 472, type: !1039)
!8784 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !7431, file: !7431, line: 472, type: !8785, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8785 = !DISubroutineType(types: !8786)
!8786 = !{!591, !1039, !1742, !7}
!8787 = !DILocation(line: 472, column: 28, scope: !8784, inlinedAt: !8788)
!8788 = distinct !DILocation(line: 481, column: 9, scope: !8789, inlinedAt: !8790)
!8789 = distinct !DISubprogram(name: "kmalloc_large", scope: !7431, file: !7431, line: 478, type: !8753, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8790 = distinct !DILocation(line: 545, column: 11, scope: !8791, inlinedAt: !8764)
!8791 = distinct !DILexicalBlock(scope: !8761, file: !7431, line: 544, column: 7)
!8792 = !DILocalVariable(name: "flags", arg: 2, scope: !8784, file: !7431, line: 472, type: !1742)
!8793 = !DILocation(line: 472, column: 40, scope: !8784, inlinedAt: !8788)
!8794 = !DILocalVariable(name: "order", arg: 3, scope: !8784, file: !7431, line: 472, type: !7)
!8795 = !DILocation(line: 472, column: 60, scope: !8784, inlinedAt: !8788)
!8796 = !DILocalVariable(name: "size", arg: 1, scope: !8789, file: !7431, line: 478, type: !1039)
!8797 = !DILocation(line: 478, column: 51, scope: !8789, inlinedAt: !8790)
!8798 = !DILocalVariable(name: "flags", arg: 2, scope: !8789, file: !7431, line: 478, type: !1742)
!8799 = !DILocation(line: 478, column: 63, scope: !8789, inlinedAt: !8790)
!8800 = !DILocalVariable(name: "order", scope: !8789, file: !7431, line: 480, type: !7)
!8801 = !DILocation(line: 480, column: 15, scope: !8789, inlinedAt: !8790)
!8802 = !DILocalVariable(name: "size", arg: 1, scope: !8763, file: !7431, line: 538, type: !1039)
!8803 = !DILocation(line: 538, column: 45, scope: !8763, inlinedAt: !8764)
!8804 = !DILocalVariable(name: "flags", arg: 2, scope: !8763, file: !7431, line: 538, type: !1742)
!8805 = !DILocation(line: 538, column: 57, scope: !8763, inlinedAt: !8764)
!8806 = !DILocalVariable(name: "index", scope: !8761, file: !7431, line: 542, type: !7)
!8807 = !DILocation(line: 542, column: 16, scope: !8761, inlinedAt: !8764)
!8808 = !DILocalVariable(name: "size", arg: 1, scope: !8752, file: !7431, line: 662, type: !1039)
!8809 = !DILocation(line: 662, column: 36, scope: !8752)
!8810 = !DILocalVariable(name: "flags", arg: 2, scope: !8752, file: !7431, line: 662, type: !1742)
!8811 = !DILocation(line: 662, column: 48, scope: !8752)
!8812 = !DILocation(line: 664, column: 17, scope: !8752)
!8813 = !DILocation(line: 664, column: 23, scope: !8752)
!8814 = !DILocation(line: 664, column: 29, scope: !8752)
!8815 = !DILocation(line: 540, column: 27, scope: !8762, inlinedAt: !8764)
!8816 = !DILocation(line: 540, column: 6, scope: !8762, inlinedAt: !8764)
!8817 = !DILocation(line: 540, column: 6, scope: !8763, inlinedAt: !8764)
!8818 = !DILocation(line: 544, column: 7, scope: !8791, inlinedAt: !8764)
!8819 = !DILocation(line: 544, column: 12, scope: !8791, inlinedAt: !8764)
!8820 = !DILocation(line: 544, column: 7, scope: !8761, inlinedAt: !8764)
!8821 = !DILocation(line: 545, column: 25, scope: !8791, inlinedAt: !8764)
!8822 = !DILocation(line: 545, column: 31, scope: !8791, inlinedAt: !8764)
!8823 = !DILocation(line: 480, column: 33, scope: !8789, inlinedAt: !8790)
!8824 = !DILocation(line: 480, column: 23, scope: !8789, inlinedAt: !8790)
!8825 = !DILocation(line: 481, column: 29, scope: !8789, inlinedAt: !8790)
!8826 = !DILocation(line: 481, column: 35, scope: !8789, inlinedAt: !8790)
!8827 = !DILocation(line: 481, column: 42, scope: !8789, inlinedAt: !8790)
!8828 = !DILocation(line: 474, column: 23, scope: !8784, inlinedAt: !8788)
!8829 = !DILocation(line: 474, column: 29, scope: !8784, inlinedAt: !8788)
!8830 = !DILocation(line: 474, column: 36, scope: !8784, inlinedAt: !8788)
!8831 = !DILocation(line: 474, column: 9, scope: !8784, inlinedAt: !8788)
!8832 = !DILocation(line: 545, column: 4, scope: !8791, inlinedAt: !8764)
!8833 = !DILocation(line: 547, column: 25, scope: !8761, inlinedAt: !8764)
!8834 = !DILocation(line: 348, column: 7, scope: !8835, inlinedAt: !8782)
!8835 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 348, column: 6)
!8836 = !DILocation(line: 348, column: 6, scope: !8778, inlinedAt: !8782)
!8837 = !DILocation(line: 349, column: 3, scope: !8835, inlinedAt: !8782)
!8838 = !DILocation(line: 351, column: 6, scope: !8839, inlinedAt: !8782)
!8839 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 351, column: 6)
!8840 = !DILocation(line: 351, column: 11, scope: !8839, inlinedAt: !8782)
!8841 = !DILocation(line: 351, column: 6, scope: !8778, inlinedAt: !8782)
!8842 = !DILocation(line: 352, column: 3, scope: !8839, inlinedAt: !8782)
!8843 = !DILocation(line: 354, column: 32, scope: !8844, inlinedAt: !8782)
!8844 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 354, column: 6)
!8845 = !DILocation(line: 354, column: 37, scope: !8844, inlinedAt: !8782)
!8846 = !DILocation(line: 354, column: 42, scope: !8844, inlinedAt: !8782)
!8847 = !DILocation(line: 354, column: 45, scope: !8844, inlinedAt: !8782)
!8848 = !DILocation(line: 354, column: 50, scope: !8844, inlinedAt: !8782)
!8849 = !DILocation(line: 354, column: 6, scope: !8778, inlinedAt: !8782)
!8850 = !DILocation(line: 355, column: 3, scope: !8844, inlinedAt: !8782)
!8851 = !DILocation(line: 356, column: 32, scope: !8852, inlinedAt: !8782)
!8852 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 356, column: 6)
!8853 = !DILocation(line: 356, column: 37, scope: !8852, inlinedAt: !8782)
!8854 = !DILocation(line: 356, column: 43, scope: !8852, inlinedAt: !8782)
!8855 = !DILocation(line: 356, column: 46, scope: !8852, inlinedAt: !8782)
!8856 = !DILocation(line: 356, column: 51, scope: !8852, inlinedAt: !8782)
!8857 = !DILocation(line: 356, column: 6, scope: !8778, inlinedAt: !8782)
!8858 = !DILocation(line: 357, column: 3, scope: !8852, inlinedAt: !8782)
!8859 = !DILocation(line: 358, column: 6, scope: !8860, inlinedAt: !8782)
!8860 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 358, column: 6)
!8861 = !DILocation(line: 358, column: 11, scope: !8860, inlinedAt: !8782)
!8862 = !DILocation(line: 358, column: 6, scope: !8778, inlinedAt: !8782)
!8863 = !DILocation(line: 358, column: 26, scope: !8860, inlinedAt: !8782)
!8864 = !DILocation(line: 359, column: 6, scope: !8865, inlinedAt: !8782)
!8865 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 359, column: 6)
!8866 = !DILocation(line: 359, column: 11, scope: !8865, inlinedAt: !8782)
!8867 = !DILocation(line: 359, column: 6, scope: !8778, inlinedAt: !8782)
!8868 = !DILocation(line: 359, column: 26, scope: !8865, inlinedAt: !8782)
!8869 = !DILocation(line: 360, column: 6, scope: !8870, inlinedAt: !8782)
!8870 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 360, column: 6)
!8871 = !DILocation(line: 360, column: 11, scope: !8870, inlinedAt: !8782)
!8872 = !DILocation(line: 360, column: 6, scope: !8778, inlinedAt: !8782)
!8873 = !DILocation(line: 360, column: 26, scope: !8870, inlinedAt: !8782)
!8874 = !DILocation(line: 361, column: 6, scope: !8875, inlinedAt: !8782)
!8875 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 361, column: 6)
!8876 = !DILocation(line: 361, column: 11, scope: !8875, inlinedAt: !8782)
!8877 = !DILocation(line: 361, column: 6, scope: !8778, inlinedAt: !8782)
!8878 = !DILocation(line: 361, column: 26, scope: !8875, inlinedAt: !8782)
!8879 = !DILocation(line: 362, column: 6, scope: !8880, inlinedAt: !8782)
!8880 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 362, column: 6)
!8881 = !DILocation(line: 362, column: 11, scope: !8880, inlinedAt: !8782)
!8882 = !DILocation(line: 362, column: 6, scope: !8778, inlinedAt: !8782)
!8883 = !DILocation(line: 362, column: 26, scope: !8880, inlinedAt: !8782)
!8884 = !DILocation(line: 363, column: 6, scope: !8885, inlinedAt: !8782)
!8885 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 363, column: 6)
!8886 = !DILocation(line: 363, column: 11, scope: !8885, inlinedAt: !8782)
!8887 = !DILocation(line: 363, column: 6, scope: !8778, inlinedAt: !8782)
!8888 = !DILocation(line: 363, column: 26, scope: !8885, inlinedAt: !8782)
!8889 = !DILocation(line: 364, column: 6, scope: !8890, inlinedAt: !8782)
!8890 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 364, column: 6)
!8891 = !DILocation(line: 364, column: 11, scope: !8890, inlinedAt: !8782)
!8892 = !DILocation(line: 364, column: 6, scope: !8778, inlinedAt: !8782)
!8893 = !DILocation(line: 364, column: 26, scope: !8890, inlinedAt: !8782)
!8894 = !DILocation(line: 365, column: 6, scope: !8895, inlinedAt: !8782)
!8895 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 365, column: 6)
!8896 = !DILocation(line: 365, column: 11, scope: !8895, inlinedAt: !8782)
!8897 = !DILocation(line: 365, column: 6, scope: !8778, inlinedAt: !8782)
!8898 = !DILocation(line: 365, column: 26, scope: !8895, inlinedAt: !8782)
!8899 = !DILocation(line: 366, column: 6, scope: !8900, inlinedAt: !8782)
!8900 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 366, column: 6)
!8901 = !DILocation(line: 366, column: 11, scope: !8900, inlinedAt: !8782)
!8902 = !DILocation(line: 366, column: 6, scope: !8778, inlinedAt: !8782)
!8903 = !DILocation(line: 366, column: 26, scope: !8900, inlinedAt: !8782)
!8904 = !DILocation(line: 367, column: 6, scope: !8905, inlinedAt: !8782)
!8905 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 367, column: 6)
!8906 = !DILocation(line: 367, column: 11, scope: !8905, inlinedAt: !8782)
!8907 = !DILocation(line: 367, column: 6, scope: !8778, inlinedAt: !8782)
!8908 = !DILocation(line: 367, column: 26, scope: !8905, inlinedAt: !8782)
!8909 = !DILocation(line: 368, column: 6, scope: !8910, inlinedAt: !8782)
!8910 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 368, column: 6)
!8911 = !DILocation(line: 368, column: 11, scope: !8910, inlinedAt: !8782)
!8912 = !DILocation(line: 368, column: 6, scope: !8778, inlinedAt: !8782)
!8913 = !DILocation(line: 368, column: 26, scope: !8910, inlinedAt: !8782)
!8914 = !DILocation(line: 369, column: 6, scope: !8915, inlinedAt: !8782)
!8915 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 369, column: 6)
!8916 = !DILocation(line: 369, column: 11, scope: !8915, inlinedAt: !8782)
!8917 = !DILocation(line: 369, column: 6, scope: !8778, inlinedAt: !8782)
!8918 = !DILocation(line: 369, column: 26, scope: !8915, inlinedAt: !8782)
!8919 = !DILocation(line: 370, column: 6, scope: !8920, inlinedAt: !8782)
!8920 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 370, column: 6)
!8921 = !DILocation(line: 370, column: 11, scope: !8920, inlinedAt: !8782)
!8922 = !DILocation(line: 370, column: 6, scope: !8778, inlinedAt: !8782)
!8923 = !DILocation(line: 370, column: 26, scope: !8920, inlinedAt: !8782)
!8924 = !DILocation(line: 371, column: 6, scope: !8925, inlinedAt: !8782)
!8925 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 371, column: 6)
!8926 = !DILocation(line: 371, column: 11, scope: !8925, inlinedAt: !8782)
!8927 = !DILocation(line: 371, column: 6, scope: !8778, inlinedAt: !8782)
!8928 = !DILocation(line: 371, column: 26, scope: !8925, inlinedAt: !8782)
!8929 = !DILocation(line: 372, column: 6, scope: !8930, inlinedAt: !8782)
!8930 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 372, column: 6)
!8931 = !DILocation(line: 372, column: 11, scope: !8930, inlinedAt: !8782)
!8932 = !DILocation(line: 372, column: 6, scope: !8778, inlinedAt: !8782)
!8933 = !DILocation(line: 372, column: 26, scope: !8930, inlinedAt: !8782)
!8934 = !DILocation(line: 373, column: 6, scope: !8935, inlinedAt: !8782)
!8935 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 373, column: 6)
!8936 = !DILocation(line: 373, column: 11, scope: !8935, inlinedAt: !8782)
!8937 = !DILocation(line: 373, column: 6, scope: !8778, inlinedAt: !8782)
!8938 = !DILocation(line: 373, column: 26, scope: !8935, inlinedAt: !8782)
!8939 = !DILocation(line: 374, column: 6, scope: !8940, inlinedAt: !8782)
!8940 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 374, column: 6)
!8941 = !DILocation(line: 374, column: 11, scope: !8940, inlinedAt: !8782)
!8942 = !DILocation(line: 374, column: 6, scope: !8778, inlinedAt: !8782)
!8943 = !DILocation(line: 374, column: 26, scope: !8940, inlinedAt: !8782)
!8944 = !DILocation(line: 375, column: 6, scope: !8945, inlinedAt: !8782)
!8945 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 375, column: 6)
!8946 = !DILocation(line: 375, column: 11, scope: !8945, inlinedAt: !8782)
!8947 = !DILocation(line: 375, column: 6, scope: !8778, inlinedAt: !8782)
!8948 = !DILocation(line: 375, column: 27, scope: !8945, inlinedAt: !8782)
!8949 = !DILocation(line: 376, column: 6, scope: !8950, inlinedAt: !8782)
!8950 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 376, column: 6)
!8951 = !DILocation(line: 376, column: 11, scope: !8950, inlinedAt: !8782)
!8952 = !DILocation(line: 376, column: 6, scope: !8778, inlinedAt: !8782)
!8953 = !DILocation(line: 376, column: 32, scope: !8950, inlinedAt: !8782)
!8954 = !DILocation(line: 377, column: 6, scope: !8955, inlinedAt: !8782)
!8955 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 377, column: 6)
!8956 = !DILocation(line: 377, column: 11, scope: !8955, inlinedAt: !8782)
!8957 = !DILocation(line: 377, column: 6, scope: !8778, inlinedAt: !8782)
!8958 = !DILocation(line: 377, column: 32, scope: !8955, inlinedAt: !8782)
!8959 = !DILocation(line: 378, column: 6, scope: !8960, inlinedAt: !8782)
!8960 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 378, column: 6)
!8961 = !DILocation(line: 378, column: 11, scope: !8960, inlinedAt: !8782)
!8962 = !DILocation(line: 378, column: 6, scope: !8778, inlinedAt: !8782)
!8963 = !DILocation(line: 378, column: 32, scope: !8960, inlinedAt: !8782)
!8964 = !DILocation(line: 379, column: 6, scope: !8965, inlinedAt: !8782)
!8965 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 379, column: 6)
!8966 = !DILocation(line: 379, column: 11, scope: !8965, inlinedAt: !8782)
!8967 = !DILocation(line: 379, column: 6, scope: !8778, inlinedAt: !8782)
!8968 = !DILocation(line: 379, column: 33, scope: !8965, inlinedAt: !8782)
!8969 = !DILocation(line: 380, column: 6, scope: !8970, inlinedAt: !8782)
!8970 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 380, column: 6)
!8971 = !DILocation(line: 380, column: 11, scope: !8970, inlinedAt: !8782)
!8972 = !DILocation(line: 380, column: 6, scope: !8778, inlinedAt: !8782)
!8973 = !DILocation(line: 380, column: 33, scope: !8970, inlinedAt: !8782)
!8974 = !DILocation(line: 381, column: 6, scope: !8975, inlinedAt: !8782)
!8975 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 381, column: 6)
!8976 = !DILocation(line: 381, column: 11, scope: !8975, inlinedAt: !8782)
!8977 = !DILocation(line: 381, column: 6, scope: !8778, inlinedAt: !8782)
!8978 = !DILocation(line: 381, column: 33, scope: !8975, inlinedAt: !8782)
!8979 = !DILocation(line: 382, column: 2, scope: !8980, inlinedAt: !8782)
!8980 = distinct !DILexicalBlock(scope: !8981, file: !7431, line: 382, column: 2)
!8981 = distinct !DILexicalBlock(scope: !8778, file: !7431, line: 382, column: 2)
!8982 = !{i32 -2144105064, i32 -2144105035, i32 -2144104989, i32 -2144104931, i32 -2144104877, i32 -2144104823, i32 -2144104768, i32 -2144104737}
!8983 = !DILocation(line: 382, column: 2, scope: !8984, inlinedAt: !8782)
!8984 = distinct !DILexicalBlock(scope: !8985, file: !7431, line: 382, column: 2)
!8985 = distinct !DILexicalBlock(scope: !8981, file: !7431, line: 382, column: 2)
!8986 = !{i32 -2144104294, i32 -2144104287, i32 -2144104233, i32 -2144104202, i32 -2144104172}
!8987 = !DILocation(line: 382, column: 2, scope: !8985, inlinedAt: !8782)
!8988 = !DILocation(line: 386, column: 1, scope: !8778, inlinedAt: !8782)
!8989 = !DILocation(line: 547, column: 9, scope: !8761, inlinedAt: !8764)
!8990 = !DILocation(line: 549, column: 8, scope: !8991, inlinedAt: !8764)
!8991 = distinct !DILexicalBlock(scope: !8761, file: !7431, line: 549, column: 7)
!8992 = !DILocation(line: 549, column: 7, scope: !8761, inlinedAt: !8764)
!8993 = !DILocation(line: 550, column: 4, scope: !8991, inlinedAt: !8764)
!8994 = !DILocation(line: 553, column: 33, scope: !8761, inlinedAt: !8764)
!8995 = !DILocation(line: 325, column: 6, scope: !8996, inlinedAt: !8776)
!8996 = distinct !DILexicalBlock(scope: !8772, file: !7431, line: 325, column: 6)
!8997 = !DILocation(line: 325, column: 6, scope: !8772, inlinedAt: !8776)
!8998 = !DILocation(line: 326, column: 3, scope: !8996, inlinedAt: !8776)
!8999 = !DILocation(line: 332, column: 9, scope: !8772, inlinedAt: !8776)
!9000 = !DILocation(line: 332, column: 15, scope: !8772, inlinedAt: !8776)
!9001 = !DILocation(line: 332, column: 2, scope: !8772, inlinedAt: !8776)
!9002 = !DILocation(line: 336, column: 1, scope: !8772, inlinedAt: !8776)
!9003 = !DILocation(line: 553, column: 5, scope: !8761, inlinedAt: !8764)
!9004 = !DILocation(line: 553, column: 41, scope: !8761, inlinedAt: !8764)
!9005 = !DILocation(line: 554, column: 5, scope: !8761, inlinedAt: !8764)
!9006 = !DILocation(line: 554, column: 12, scope: !8761, inlinedAt: !8764)
!9007 = !DILocation(line: 448, column: 31, scope: !8756, inlinedAt: !8760)
!9008 = !DILocation(line: 448, column: 34, scope: !8756, inlinedAt: !8760)
!9009 = !DILocation(line: 448, column: 14, scope: !8756, inlinedAt: !8760)
!9010 = !DILocation(line: 450, column: 22, scope: !8756, inlinedAt: !8760)
!9011 = !DILocation(line: 450, column: 25, scope: !8756, inlinedAt: !8760)
!9012 = !DILocation(line: 450, column: 30, scope: !8756, inlinedAt: !8760)
!9013 = !DILocation(line: 450, column: 36, scope: !8756, inlinedAt: !8760)
!9014 = !DILocation(line: 450, column: 8, scope: !8756, inlinedAt: !8760)
!9015 = !DILocation(line: 450, column: 6, scope: !8756, inlinedAt: !8760)
!9016 = !DILocation(line: 451, column: 9, scope: !8756, inlinedAt: !8760)
!9017 = !DILocation(line: 552, column: 3, scope: !8761, inlinedAt: !8764)
!9018 = !DILocation(line: 557, column: 19, scope: !8763, inlinedAt: !8764)
!9019 = !DILocation(line: 557, column: 25, scope: !8763, inlinedAt: !8764)
!9020 = !DILocation(line: 557, column: 9, scope: !8763, inlinedAt: !8764)
!9021 = !DILocation(line: 557, column: 2, scope: !8763, inlinedAt: !8764)
!9022 = !DILocation(line: 558, column: 1, scope: !8763, inlinedAt: !8764)
!9023 = !DILocation(line: 664, column: 2, scope: !8752)
!9024 = distinct !DISubprogram(name: "refcount_set", scope: !569, file: !569, line: 134, type: !9025, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9025 = !DISubroutineType(types: !9026)
!9026 = !{null, !8681, !32}
!9027 = !DILocalVariable(name: "v", arg: 1, scope: !9028, file: !8557, line: 39, type: !8560)
!9028 = distinct !DISubprogram(name: "arch_atomic_set", scope: !8557, file: !8557, line: 39, type: !9029, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9029 = !DISubroutineType(types: !9030)
!9030 = !{null, !8560, !32}
!9031 = !DILocation(line: 39, column: 55, scope: !9028, inlinedAt: !9032)
!9032 = distinct !DILocation(line: 46, column: 2, scope: !9033, inlinedAt: !9034)
!9033 = distinct !DISubprogram(name: "atomic_set", scope: !8573, file: !8573, line: 43, type: !9029, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9034 = distinct !DILocation(line: 136, column: 2, scope: !9024)
!9035 = !DILocalVariable(name: "i", arg: 2, scope: !9028, file: !8557, line: 39, type: !32)
!9036 = !DILocation(line: 39, column: 62, scope: !9028, inlinedAt: !9032)
!9037 = !DILocalVariable(name: "v", arg: 1, scope: !9038, file: !8610, line: 84, type: !8613)
!9038 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !8610, file: !8610, line: 84, type: !8611, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9039 = !DILocation(line: 84, column: 74, scope: !9038, inlinedAt: !9040)
!9040 = distinct !DILocation(line: 45, column: 2, scope: !9033, inlinedAt: !9034)
!9041 = !DILocalVariable(name: "size", arg: 2, scope: !9038, file: !8610, line: 84, type: !1039)
!9042 = !DILocation(line: 84, column: 84, scope: !9038, inlinedAt: !9040)
!9043 = !DILocalVariable(name: "v", arg: 1, scope: !9033, file: !8573, line: 43, type: !8560)
!9044 = !DILocation(line: 43, column: 22, scope: !9033, inlinedAt: !9034)
!9045 = !DILocalVariable(name: "i", arg: 2, scope: !9033, file: !8573, line: 43, type: !32)
!9046 = !DILocation(line: 43, column: 29, scope: !9033, inlinedAt: !9034)
!9047 = !DILocalVariable(name: "r", arg: 1, scope: !9024, file: !569, line: 134, type: !8681)
!9048 = !DILocation(line: 134, column: 45, scope: !9024)
!9049 = !DILocalVariable(name: "n", arg: 2, scope: !9024, file: !569, line: 134, type: !32)
!9050 = !DILocation(line: 134, column: 52, scope: !9024)
!9051 = !DILocation(line: 136, column: 14, scope: !9024)
!9052 = !DILocation(line: 136, column: 17, scope: !9024)
!9053 = !DILocation(line: 136, column: 23, scope: !9024)
!9054 = !DILocation(line: 45, column: 26, scope: !9033, inlinedAt: !9034)
!9055 = !DILocation(line: 86, column: 20, scope: !9038, inlinedAt: !9040)
!9056 = !DILocation(line: 86, column: 23, scope: !9038, inlinedAt: !9040)
!9057 = !DILocation(line: 86, column: 2, scope: !9038, inlinedAt: !9040)
!9058 = !DILocation(line: 87, column: 2, scope: !9038, inlinedAt: !9040)
!9059 = !DILocation(line: 46, column: 18, scope: !9033, inlinedAt: !9034)
!9060 = !DILocation(line: 46, column: 21, scope: !9033, inlinedAt: !9034)
!9061 = !DILocation(line: 41, column: 2, scope: !9062, inlinedAt: !9032)
!9062 = distinct !DILexicalBlock(scope: !9028, file: !8557, line: 41, column: 2)
!9063 = !DILocation(line: 137, column: 1, scope: !9024)
!9064 = distinct !DISubprogram(name: "get_device", scope: !3, file: !3, line: 3021, type: !9065, scopeLine: 3022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9065 = !DISubroutineType(types: !9066)
!9066 = !{!4856, !4856}
!9067 = !DILocalVariable(name: "dev", arg: 1, scope: !9064, file: !3, line: 3021, type: !4856)
!9068 = !DILocation(line: 3021, column: 42, scope: !9064)
!9069 = !DILocation(line: 3023, column: 9, scope: !9064)
!9070 = !DILocation(line: 3023, column: 40, scope: !9064)
!9071 = !DILocation(line: 3023, column: 45, scope: !9064)
!9072 = !DILocation(line: 3023, column: 27, scope: !9064)
!9073 = !DILocation(line: 3023, column: 15, scope: !9064)
!9074 = !DILocation(line: 3023, column: 2, scope: !9064)
!9075 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !9076, file: !9076, line: 33, type: !9077, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9076 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!9077 = !DISubroutineType(types: !9078)
!9078 = !{null, !287}
!9079 = !DILocalVariable(name: "list", arg: 1, scope: !9075, file: !9076, line: 33, type: !287)
!9080 = !DILocation(line: 33, column: 53, scope: !9075)
!9081 = !DILocation(line: 35, column: 2, scope: !9075)
!9082 = !DILocation(line: 35, column: 2, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9075, file: !9076, line: 35, column: 2)
!9084 = !DILocation(line: 35, column: 2, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9083, file: !9076, line: 35, column: 2)
!9086 = !DILocation(line: 35, column: 2, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9083, file: !9076, line: 35, column: 2)
!9088 = !DILocation(line: 36, column: 15, scope: !9075)
!9089 = !DILocation(line: 36, column: 2, scope: !9075)
!9090 = !DILocation(line: 36, column: 8, scope: !9075)
!9091 = !DILocation(line: 36, column: 13, scope: !9075)
!9092 = !DILocation(line: 37, column: 1, scope: !9075)
!9093 = distinct !DISubprogram(name: "kref_init", scope: !4847, file: !4847, line: 29, type: !8688, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9094 = !DILocalVariable(name: "kref", arg: 1, scope: !9093, file: !4847, line: 29, type: !8690)
!9095 = !DILocation(line: 29, column: 43, scope: !9093)
!9096 = !DILocation(line: 31, column: 16, scope: !9093)
!9097 = !DILocation(line: 31, column: 22, scope: !9093)
!9098 = !DILocation(line: 31, column: 2, scope: !9093)
!9099 = !DILocation(line: 32, column: 1, scope: !9093)
!9100 = distinct !DISubprogram(name: "device_set_pm_not_required", scope: !4570, file: !4570, line: 707, type: !4915, scopeLine: 708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9101 = !DILocalVariable(name: "dev", arg: 1, scope: !9100, file: !4570, line: 707, type: !4856)
!9102 = !DILocation(line: 707, column: 62, scope: !9100)
!9103 = !DILocation(line: 709, column: 2, scope: !9100)
!9104 = !DILocation(line: 709, column: 7, scope: !9100)
!9105 = !DILocation(line: 709, column: 13, scope: !9100)
!9106 = !DILocation(line: 709, column: 19, scope: !9100)
!9107 = !DILocation(line: 710, column: 1, scope: !9100)
!9108 = distinct !DISubprogram(name: "dev_set_name", scope: !3, file: !3, line: 2716, type: !9109, scopeLine: 2717, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9109 = !DISubroutineType(types: !9110)
!9110 = !{!32, !4856, !292, null}
!9111 = !DILocalVariable(name: "dev", arg: 1, scope: !9108, file: !3, line: 2716, type: !4856)
!9112 = !DILocation(line: 2716, column: 33, scope: !9108)
!9113 = !DILocalVariable(name: "fmt", arg: 2, scope: !9108, file: !3, line: 2716, type: !292)
!9114 = !DILocation(line: 2716, column: 50, scope: !9108)
!9115 = !DILocalVariable(name: "vargs", scope: !9108, file: !3, line: 2718, type: !9116)
!9116 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !9117, line: 99, baseType: !9118)
!9117 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h", directory: "")
!9118 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !9117, line: 40, baseType: !9119)
!9119 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 2718, baseType: !9120)
!9120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9121, size: 192, elements: !2472)
!9121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, line: 2718, size: 192, elements: !9122)
!9122 = !{!9123, !9124, !9125, !9126}
!9123 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !9121, file: !3, line: 2718, baseType: !7, size: 32)
!9124 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !9121, file: !3, line: 2718, baseType: !7, size: 32, offset: 32)
!9125 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !9121, file: !3, line: 2718, baseType: !591, size: 64, offset: 64)
!9126 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !9121, file: !3, line: 2718, baseType: !591, size: 64, offset: 128)
!9127 = !DILocation(line: 2718, column: 10, scope: !9108)
!9128 = !DILocalVariable(name: "err", scope: !9108, file: !3, line: 2719, type: !32)
!9129 = !DILocation(line: 2719, column: 6, scope: !9108)
!9130 = !DILocation(line: 2721, column: 2, scope: !9108)
!9131 = !DILocation(line: 2722, column: 32, scope: !9108)
!9132 = !DILocation(line: 2722, column: 37, scope: !9108)
!9133 = !DILocation(line: 2722, column: 43, scope: !9108)
!9134 = !DILocation(line: 2722, column: 48, scope: !9108)
!9135 = !DILocation(line: 2722, column: 8, scope: !9108)
!9136 = !DILocation(line: 2722, column: 6, scope: !9108)
!9137 = !DILocation(line: 2723, column: 2, scope: !9108)
!9138 = !DILocation(line: 2724, column: 9, scope: !9108)
!9139 = !DILocation(line: 2724, column: 2, scope: !9108)
!9140 = distinct !DISubprogram(name: "dev_name", scope: !4570, file: !4570, line: 609, type: !9141, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9141 = !DISubroutineType(types: !9142)
!9142 = !{!292, !5370}
!9143 = !DILocalVariable(name: "dev", arg: 1, scope: !9140, file: !4570, line: 609, type: !5370)
!9144 = !DILocation(line: 609, column: 57, scope: !9140)
!9145 = !DILocation(line: 612, column: 6, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9140, file: !4570, line: 612, column: 6)
!9147 = !DILocation(line: 612, column: 11, scope: !9146)
!9148 = !DILocation(line: 612, column: 6, scope: !9140)
!9149 = !DILocation(line: 613, column: 10, scope: !9146)
!9150 = !DILocation(line: 613, column: 15, scope: !9146)
!9151 = !DILocation(line: 613, column: 3, scope: !9146)
!9152 = !DILocation(line: 615, column: 23, scope: !9140)
!9153 = !DILocation(line: 615, column: 28, scope: !9140)
!9154 = !DILocation(line: 615, column: 9, scope: !9140)
!9155 = !DILocation(line: 615, column: 2, scope: !9140)
!9156 = !DILocation(line: 616, column: 1, scope: !9140)
!9157 = distinct !DISubprogram(name: "device_register", scope: !3, file: !3, line: 3006, type: !4911, scopeLine: 3007, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9158 = !DILocalVariable(name: "dev", arg: 1, scope: !9157, file: !3, line: 3006, type: !4856)
!9159 = !DILocation(line: 3006, column: 36, scope: !9157)
!9160 = !DILocation(line: 3008, column: 20, scope: !9157)
!9161 = !DILocation(line: 3008, column: 2, scope: !9157)
!9162 = !DILocation(line: 3009, column: 20, scope: !9157)
!9163 = !DILocation(line: 3009, column: 9, scope: !9157)
!9164 = !DILocation(line: 3009, column: 2, scope: !9157)
!9165 = distinct !DISubprogram(name: "put_device", scope: !3, file: !3, line: 3031, type: !4915, scopeLine: 3032, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9166 = !DILocalVariable(name: "dev", arg: 1, scope: !9165, file: !3, line: 3031, type: !4856)
!9167 = !DILocation(line: 3031, column: 32, scope: !9165)
!9168 = !DILocation(line: 3034, column: 6, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9165, file: !3, line: 3034, column: 6)
!9170 = !DILocation(line: 3034, column: 6, scope: !9165)
!9171 = !DILocation(line: 3035, column: 16, scope: !9169)
!9172 = !DILocation(line: 3035, column: 21, scope: !9169)
!9173 = !DILocation(line: 3035, column: 3, scope: !9169)
!9174 = !DILocation(line: 3036, column: 1, scope: !9165)
!9175 = distinct !DISubprogram(name: "pm_runtime_resume", scope: !8548, file: !8548, line: 323, type: !4911, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9176 = !DILocalVariable(name: "dev", arg: 1, scope: !9175, file: !8548, line: 323, type: !4856)
!9177 = !DILocation(line: 323, column: 52, scope: !9175)
!9178 = !DILocation(line: 325, column: 29, scope: !9175)
!9179 = !DILocation(line: 325, column: 9, scope: !9175)
!9180 = !DILocation(line: 325, column: 2, scope: !9175)
!9181 = distinct !DISubprogram(name: "list_add_tail_rcu", scope: !9182, file: !9182, line: 134, type: !9183, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9182 = !DIFile(filename: "./include/linux/rculist.h", directory: "/home/lizy2001/genbc/linux")
!9183 = !DISubroutineType(types: !9184)
!9184 = !{null, !287, !287}
!9185 = !DILocalVariable(name: "new", arg: 1, scope: !9181, file: !9182, line: 134, type: !287)
!9186 = !DILocation(line: 134, column: 56, scope: !9181)
!9187 = !DILocalVariable(name: "head", arg: 2, scope: !9181, file: !9182, line: 135, type: !287)
!9188 = !DILocation(line: 135, column: 24, scope: !9181)
!9189 = !DILocation(line: 137, column: 17, scope: !9181)
!9190 = !DILocation(line: 137, column: 22, scope: !9181)
!9191 = !DILocation(line: 137, column: 28, scope: !9181)
!9192 = !DILocation(line: 137, column: 34, scope: !9181)
!9193 = !DILocation(line: 137, column: 2, scope: !9181)
!9194 = !DILocation(line: 138, column: 1, scope: !9181)
!9195 = distinct !DISubprogram(name: "device_links_write_unlock", scope: !3, file: !3, line: 67, type: !3809, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9196 = !DILocation(line: 69, column: 2, scope: !9195)
!9197 = !DILocation(line: 70, column: 1, scope: !9195)
!9198 = distinct !DISubprogram(name: "pm_runtime_put", scope: !8548, file: !8548, line: 417, type: !4911, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9199 = !DILocalVariable(name: "dev", arg: 1, scope: !9198, file: !8548, line: 417, type: !4856)
!9200 = !DILocation(line: 417, column: 49, scope: !9198)
!9201 = !DILocation(line: 419, column: 27, scope: !9198)
!9202 = !DILocation(line: 419, column: 9, scope: !9198)
!9203 = !DILocation(line: 419, column: 2, scope: !9198)
!9204 = distinct !DISubprogram(name: "device_link_del", scope: !3, file: !3, line: 815, type: !9205, scopeLine: 816, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9205 = !DISubroutineType(types: !9206)
!9206 = !{null, !7438}
!9207 = !DILocalVariable(name: "link", arg: 1, scope: !9204, file: !3, line: 815, type: !7438)
!9208 = !DILocation(line: 815, column: 42, scope: !9204)
!9209 = !DILocation(line: 817, column: 2, scope: !9204)
!9210 = !DILocation(line: 818, column: 23, scope: !9204)
!9211 = !DILocation(line: 818, column: 2, scope: !9204)
!9212 = !DILocation(line: 819, column: 2, scope: !9204)
!9213 = !DILocation(line: 820, column: 1, scope: !9204)
!9214 = distinct !DISubprogram(name: "device_link_put_kref", scope: !3, file: !3, line: 798, type: !9205, scopeLine: 799, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9215 = !DILocalVariable(name: "link", arg: 1, scope: !9214, file: !3, line: 798, type: !7438)
!9216 = !DILocation(line: 798, column: 54, scope: !9214)
!9217 = !DILocation(line: 800, column: 6, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9214, file: !3, line: 800, column: 6)
!9219 = !DILocation(line: 800, column: 12, scope: !9218)
!9220 = !DILocation(line: 800, column: 18, scope: !9218)
!9221 = !DILocation(line: 800, column: 6, scope: !9214)
!9222 = !DILocation(line: 801, column: 13, scope: !9218)
!9223 = !DILocation(line: 801, column: 19, scope: !9218)
!9224 = !DILocation(line: 801, column: 3, scope: !9218)
!9225 = !DILocalVariable(name: "__ret_warn_on", scope: !9226, file: !3, line: 803, type: !32)
!9226 = distinct !DILexicalBlock(scope: !9218, file: !3, line: 803, column: 3)
!9227 = !DILocation(line: 803, column: 3, scope: !9226)
!9228 = !DILocation(line: 803, column: 3, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9226, file: !3, line: 803, column: 3)
!9230 = !DILocation(line: 803, column: 3, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9229, file: !3, line: 803, column: 3)
!9232 = !DILocation(line: 803, column: 3, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9231, file: !3, line: 803, column: 3)
!9234 = !DILocation(line: 803, column: 3, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9231, file: !3, line: 803, column: 3)
!9236 = !DILocation(line: 803, column: 3, scope: !9237)
!9237 = distinct !DILexicalBlock(scope: !9235, file: !3, line: 803, column: 3)
!9238 = !DILocation(line: 803, column: 3, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9235, file: !3, line: 803, column: 3)
!9240 = !{i32 -2139174867, i32 -2139174838, i32 -2139174792, i32 -2139174734, i32 -2139174680, i32 -2139174626, i32 -2139174571, i32 -2139174540}
!9241 = !DILocation(line: 803, column: 3, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9235, file: !3, line: 803, column: 3)
!9243 = !{i32 -2139174128, i32 -2139174121, i32 -2139174069, i32 -2139174038, i32 -2139174008}
!9244 = !DILocation(line: 803, column: 3, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !9235, file: !3, line: 803, column: 3)
!9246 = !DILocation(line: 803, column: 3, scope: !9247)
!9247 = distinct !DILexicalBlock(scope: !9231, file: !3, line: 803, column: 3)
!9248 = !DILocation(line: 804, column: 1, scope: !9214)
!9249 = distinct !DISubprogram(name: "device_link_remove", scope: !3, file: !3, line: 831, type: !9250, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9250 = !DISubroutineType(types: !9251)
!9251 = !{null, !591, !4856}
!9252 = !DILocalVariable(name: "consumer", arg: 1, scope: !9249, file: !3, line: 831, type: !591)
!9253 = !DILocation(line: 831, column: 31, scope: !9249)
!9254 = !DILocalVariable(name: "supplier", arg: 2, scope: !9249, file: !3, line: 831, type: !4856)
!9255 = !DILocation(line: 831, column: 56, scope: !9249)
!9256 = !DILocalVariable(name: "link", scope: !9249, file: !3, line: 833, type: !7438)
!9257 = !DILocation(line: 833, column: 22, scope: !9249)
!9258 = !DILocalVariable(name: "__ret_warn_on", scope: !9259, file: !3, line: 835, type: !32)
!9259 = distinct !DILexicalBlock(scope: !9260, file: !3, line: 835, column: 6)
!9260 = distinct !DILexicalBlock(scope: !9249, file: !3, line: 835, column: 6)
!9261 = !DILocation(line: 835, column: 6, scope: !9259)
!9262 = !DILocation(line: 835, column: 6, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9259, file: !3, line: 835, column: 6)
!9264 = !DILocation(line: 835, column: 6, scope: !9265)
!9265 = distinct !DILexicalBlock(scope: !9263, file: !3, line: 835, column: 6)
!9266 = !DILocation(line: 835, column: 6, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !9265, file: !3, line: 835, column: 6)
!9268 = !DILocation(line: 835, column: 6, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9265, file: !3, line: 835, column: 6)
!9270 = !{i32 -2139173303, i32 -2139173274, i32 -2139173228, i32 -2139173170, i32 -2139173116, i32 -2139173062, i32 -2139173007, i32 -2139172976}
!9271 = !DILocation(line: 835, column: 6, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9265, file: !3, line: 835, column: 6)
!9273 = !{i32 -2139172575, i32 -2139172568, i32 -2139172516, i32 -2139172485, i32 -2139172455}
!9274 = !DILocation(line: 835, column: 6, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9265, file: !3, line: 835, column: 6)
!9276 = !DILocation(line: 835, column: 6, scope: !9260)
!9277 = !DILocation(line: 835, column: 6, scope: !9249)
!9278 = !DILocation(line: 836, column: 3, scope: !9260)
!9279 = !DILocation(line: 838, column: 2, scope: !9249)
!9280 = !DILocalVariable(name: "__mptr", scope: !9281, file: !3, line: 840, type: !591)
!9281 = distinct !DILexicalBlock(scope: !9282, file: !3, line: 840, column: 2)
!9282 = distinct !DILexicalBlock(scope: !9249, file: !3, line: 840, column: 2)
!9283 = !DILocation(line: 840, column: 2, scope: !9281)
!9284 = !DILocation(line: 840, column: 2, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9281, file: !3, line: 840, column: 2)
!9286 = !DILocation(line: 840, column: 2, scope: !9282)
!9287 = !DILocation(line: 840, column: 2, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9282, file: !3, line: 840, column: 2)
!9289 = !DILocation(line: 841, column: 7, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 841, column: 7)
!9291 = distinct !DILexicalBlock(scope: !9288, file: !3, line: 840, column: 64)
!9292 = !DILocation(line: 841, column: 13, scope: !9290)
!9293 = !DILocation(line: 841, column: 25, scope: !9290)
!9294 = !DILocation(line: 841, column: 22, scope: !9290)
!9295 = !DILocation(line: 841, column: 7, scope: !9291)
!9296 = !DILocation(line: 842, column: 25, scope: !9297)
!9297 = distinct !DILexicalBlock(scope: !9290, file: !3, line: 841, column: 35)
!9298 = !DILocation(line: 842, column: 4, scope: !9297)
!9299 = !DILocation(line: 843, column: 4, scope: !9297)
!9300 = !DILocation(line: 845, column: 2, scope: !9291)
!9301 = !DILocalVariable(name: "__mptr", scope: !9302, file: !3, line: 840, type: !591)
!9302 = distinct !DILexicalBlock(scope: !9288, file: !3, line: 840, column: 2)
!9303 = !DILocation(line: 840, column: 2, scope: !9302)
!9304 = !DILocation(line: 840, column: 2, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9302, file: !3, line: 840, column: 2)
!9306 = distinct !{!9306, !9286, !9307}
!9307 = !DILocation(line: 845, column: 2, scope: !9282)
!9308 = !DILocation(line: 847, column: 2, scope: !9249)
!9309 = !DILocation(line: 848, column: 1, scope: !9249)
!9310 = distinct !DISubprogram(name: "device_links_check_suppliers", scope: !3, file: !3, line: 884, type: !4911, scopeLine: 885, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9311 = !DILocalVariable(name: "dev", arg: 1, scope: !9310, file: !3, line: 884, type: !4856)
!9312 = !DILocation(line: 884, column: 49, scope: !9310)
!9313 = !DILocalVariable(name: "link", scope: !9310, file: !3, line: 886, type: !7438)
!9314 = !DILocation(line: 886, column: 22, scope: !9310)
!9315 = !DILocalVariable(name: "ret", scope: !9310, file: !3, line: 887, type: !32)
!9316 = !DILocation(line: 887, column: 6, scope: !9310)
!9317 = !DILocation(line: 893, column: 2, scope: !9310)
!9318 = !DILocation(line: 894, column: 19, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9310, file: !3, line: 894, column: 6)
!9320 = !DILocation(line: 894, column: 24, scope: !9319)
!9321 = !DILocation(line: 894, column: 30, scope: !9319)
!9322 = !DILocation(line: 894, column: 7, scope: !9319)
!9323 = !DILocation(line: 894, column: 47, scope: !9319)
!9324 = !DILocation(line: 895, column: 6, scope: !9319)
!9325 = !DILocation(line: 895, column: 11, scope: !9319)
!9326 = !DILocation(line: 895, column: 17, scope: !9319)
!9327 = !DILocation(line: 894, column: 6, scope: !9310)
!9328 = !DILocation(line: 896, column: 3, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9319, file: !3, line: 895, column: 33)
!9330 = !DILocation(line: 897, column: 3, scope: !9329)
!9331 = !DILocation(line: 899, column: 2, scope: !9310)
!9332 = !DILocation(line: 901, column: 2, scope: !9310)
!9333 = !DILocalVariable(name: "__mptr", scope: !9334, file: !3, line: 903, type: !591)
!9334 = distinct !DILexicalBlock(scope: !9335, file: !3, line: 903, column: 2)
!9335 = distinct !DILexicalBlock(scope: !9310, file: !3, line: 903, column: 2)
!9336 = !DILocation(line: 903, column: 2, scope: !9334)
!9337 = !DILocation(line: 903, column: 2, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9334, file: !3, line: 903, column: 2)
!9339 = !DILocation(line: 903, column: 2, scope: !9335)
!9340 = !DILocation(line: 903, column: 2, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9335, file: !3, line: 903, column: 2)
!9342 = !DILocation(line: 904, column: 9, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 904, column: 7)
!9344 = distinct !DILexicalBlock(scope: !9341, file: !3, line: 903, column: 59)
!9345 = !DILocation(line: 904, column: 15, scope: !9343)
!9346 = !DILocation(line: 904, column: 21, scope: !9343)
!9347 = !DILocation(line: 904, column: 7, scope: !9344)
!9348 = !DILocation(line: 905, column: 4, scope: !9343)
!9349 = !DILocation(line: 907, column: 7, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 907, column: 7)
!9351 = !DILocation(line: 907, column: 13, scope: !9350)
!9352 = !DILocation(line: 907, column: 20, scope: !9350)
!9353 = !DILocation(line: 907, column: 42, scope: !9350)
!9354 = !DILocation(line: 908, column: 9, scope: !9350)
!9355 = !DILocation(line: 908, column: 15, scope: !9350)
!9356 = !DILocation(line: 908, column: 21, scope: !9350)
!9357 = !DILocation(line: 907, column: 7, scope: !9344)
!9358 = !DILocation(line: 909, column: 34, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9350, file: !3, line: 908, column: 49)
!9360 = !DILocation(line: 909, column: 4, scope: !9359)
!9361 = !DILocation(line: 910, column: 8, scope: !9359)
!9362 = !DILocation(line: 911, column: 4, scope: !9359)
!9363 = !DILocation(line: 913, column: 3, scope: !9344)
!9364 = !DILocation(line: 913, column: 3, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 913, column: 3)
!9366 = !DILocation(line: 913, column: 3, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 913, column: 3)
!9368 = !DILocation(line: 913, column: 3, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 913, column: 3)
!9370 = !DILocation(line: 914, column: 2, scope: !9344)
!9371 = !DILocalVariable(name: "__mptr", scope: !9372, file: !3, line: 903, type: !591)
!9372 = distinct !DILexicalBlock(scope: !9341, file: !3, line: 903, column: 2)
!9373 = !DILocation(line: 903, column: 2, scope: !9372)
!9374 = !DILocation(line: 903, column: 2, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9372, file: !3, line: 903, column: 2)
!9376 = distinct !{!9376, !9339, !9377}
!9377 = !DILocation(line: 914, column: 2, scope: !9335)
!9378 = !DILocation(line: 915, column: 2, scope: !9310)
!9379 = !DILocation(line: 915, column: 7, scope: !9310)
!9380 = !DILocation(line: 915, column: 13, scope: !9310)
!9381 = !DILocation(line: 915, column: 20, scope: !9310)
!9382 = !DILocation(line: 917, column: 2, scope: !9310)
!9383 = !DILocation(line: 918, column: 9, scope: !9310)
!9384 = !DILocation(line: 918, column: 2, scope: !9310)
!9385 = !DILocation(line: 919, column: 1, scope: !9310)
!9386 = distinct !DISubprogram(name: "list_empty", scope: !9076, file: !9076, line: 280, type: !9387, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9387 = !DISubroutineType(types: !9388)
!9388 = !{!32, !9389}
!9389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9390, size: 64)
!9390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !284)
!9391 = !DILocalVariable(name: "head", arg: 1, scope: !9386, file: !9076, line: 280, type: !9389)
!9392 = !DILocation(line: 280, column: 54, scope: !9386)
!9393 = !DILocation(line: 282, column: 9, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !9386, file: !9076, line: 282, column: 9)
!9395 = !DILocation(line: 282, column: 9, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9394, file: !9076, line: 282, column: 9)
!9397 = !DILocation(line: 282, column: 34, scope: !9386)
!9398 = !DILocation(line: 282, column: 31, scope: !9386)
!9399 = !DILocation(line: 282, column: 2, scope: !9386)
!9400 = distinct !DISubprogram(name: "device_links_missing_supplier", scope: !3, file: !3, line: 851, type: !4915, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9401 = !DILocalVariable(name: "dev", arg: 1, scope: !9400, file: !3, line: 851, type: !4856)
!9402 = !DILocation(line: 851, column: 58, scope: !9400)
!9403 = !DILocalVariable(name: "link", scope: !9400, file: !3, line: 853, type: !7438)
!9404 = !DILocation(line: 853, column: 22, scope: !9400)
!9405 = !DILocalVariable(name: "__mptr", scope: !9406, file: !3, line: 855, type: !591)
!9406 = distinct !DILexicalBlock(scope: !9407, file: !3, line: 855, column: 2)
!9407 = distinct !DILexicalBlock(scope: !9400, file: !3, line: 855, column: 2)
!9408 = !DILocation(line: 855, column: 2, scope: !9406)
!9409 = !DILocation(line: 855, column: 2, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9406, file: !3, line: 855, column: 2)
!9411 = !DILocation(line: 855, column: 2, scope: !9407)
!9412 = !DILocation(line: 855, column: 2, scope: !9413)
!9413 = distinct !DILexicalBlock(scope: !9407, file: !3, line: 855, column: 2)
!9414 = !DILocation(line: 856, column: 7, scope: !9415)
!9415 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 856, column: 7)
!9416 = distinct !DILexicalBlock(scope: !9413, file: !3, line: 855, column: 59)
!9417 = !DILocation(line: 856, column: 13, scope: !9415)
!9418 = !DILocation(line: 856, column: 20, scope: !9415)
!9419 = !DILocation(line: 856, column: 7, scope: !9416)
!9420 = !DILocation(line: 857, column: 4, scope: !9415)
!9421 = !DILocation(line: 859, column: 7, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 859, column: 7)
!9423 = !DILocation(line: 859, column: 13, scope: !9422)
!9424 = !DILocation(line: 859, column: 23, scope: !9422)
!9425 = !DILocation(line: 859, column: 29, scope: !9422)
!9426 = !DILocation(line: 859, column: 36, scope: !9422)
!9427 = !DILocation(line: 859, column: 7, scope: !9416)
!9428 = !DILocation(line: 860, column: 4, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !9422, file: !3, line: 859, column: 60)
!9430 = !DILocation(line: 860, column: 4, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9429, file: !3, line: 860, column: 4)
!9432 = !DILocation(line: 860, column: 4, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9431, file: !3, line: 860, column: 4)
!9434 = !DILocation(line: 860, column: 4, scope: !9435)
!9435 = distinct !DILexicalBlock(scope: !9431, file: !3, line: 860, column: 4)
!9436 = !DILocation(line: 861, column: 3, scope: !9429)
!9437 = !DILocalVariable(name: "__ret_warn_on", scope: !9438, file: !3, line: 862, type: !32)
!9438 = distinct !DILexicalBlock(scope: !9439, file: !3, line: 862, column: 4)
!9439 = distinct !DILexicalBlock(scope: !9422, file: !3, line: 861, column: 10)
!9440 = !DILocation(line: 862, column: 4, scope: !9438)
!9441 = !DILocation(line: 862, column: 4, scope: !9442)
!9442 = distinct !DILexicalBlock(scope: !9438, file: !3, line: 862, column: 4)
!9443 = !DILocation(line: 862, column: 4, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9442, file: !3, line: 862, column: 4)
!9445 = !DILocation(line: 862, column: 4, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !9444, file: !3, line: 862, column: 4)
!9447 = !DILocation(line: 862, column: 4, scope: !9448)
!9448 = distinct !DILexicalBlock(scope: !9444, file: !3, line: 862, column: 4)
!9449 = !{i32 -2139162181, i32 -2139162152, i32 -2139162106, i32 -2139162048, i32 -2139161994, i32 -2139161940, i32 -2139161885, i32 -2139161854}
!9450 = !DILocation(line: 862, column: 4, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9444, file: !3, line: 862, column: 4)
!9452 = !{i32 -2139161453, i32 -2139161446, i32 -2139161394, i32 -2139161363, i32 -2139161333}
!9453 = !DILocation(line: 862, column: 4, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9444, file: !3, line: 862, column: 4)
!9455 = !DILocation(line: 863, column: 4, scope: !9439)
!9456 = !DILocation(line: 863, column: 4, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9439, file: !3, line: 863, column: 4)
!9458 = !DILocation(line: 863, column: 4, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9457, file: !3, line: 863, column: 4)
!9460 = !DILocation(line: 863, column: 4, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9457, file: !3, line: 863, column: 4)
!9462 = !DILocation(line: 865, column: 2, scope: !9416)
!9463 = !DILocalVariable(name: "__mptr", scope: !9464, file: !3, line: 855, type: !591)
!9464 = distinct !DILexicalBlock(scope: !9413, file: !3, line: 855, column: 2)
!9465 = !DILocation(line: 855, column: 2, scope: !9464)
!9466 = !DILocation(line: 855, column: 2, scope: !9467)
!9467 = distinct !DILexicalBlock(scope: !9464, file: !3, line: 855, column: 2)
!9468 = distinct !{!9468, !9411, !9469}
!9469 = !DILocation(line: 865, column: 2, scope: !9407)
!9470 = !DILocation(line: 866, column: 1, scope: !9400)
!9471 = distinct !DISubprogram(name: "device_links_supplier_sync_state_pause", scope: !3, file: !3, line: 1003, type: !3809, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9472 = !DILocation(line: 1005, column: 2, scope: !9471)
!9473 = !DILocation(line: 1006, column: 24, scope: !9471)
!9474 = !DILocation(line: 1007, column: 2, scope: !9471)
!9475 = !DILocation(line: 1008, column: 1, scope: !9471)
!9476 = distinct !DISubprogram(name: "device_links_supplier_sync_state_resume", scope: !3, file: !3, line: 1010, type: !3809, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9477 = !DILocalVariable(name: "dev", scope: !9476, file: !3, line: 1012, type: !4856)
!9478 = !DILocation(line: 1012, column: 17, scope: !9476)
!9479 = !DILocalVariable(name: "tmp", scope: !9476, file: !3, line: 1012, type: !4856)
!9480 = !DILocation(line: 1012, column: 23, scope: !9476)
!9481 = !DILocalVariable(name: "sync_list", scope: !9476, file: !3, line: 1013, type: !284)
!9482 = !DILocation(line: 1013, column: 2, scope: !9476)
!9483 = !DILocation(line: 1015, column: 2, scope: !9476)
!9484 = !DILocation(line: 1016, column: 7, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9476, file: !3, line: 1016, column: 6)
!9486 = !DILocation(line: 1016, column: 6, scope: !9476)
!9487 = !DILocalVariable(name: "__ret_warn_on", scope: !9488, file: !3, line: 1017, type: !32)
!9488 = distinct !DILexicalBlock(scope: !9489, file: !3, line: 1017, column: 3)
!9489 = distinct !DILexicalBlock(scope: !9485, file: !3, line: 1016, column: 31)
!9490 = !DILocation(line: 1017, column: 3, scope: !9488)
!9491 = !DILocation(line: 1017, column: 3, scope: !9492)
!9492 = distinct !DILexicalBlock(scope: !9488, file: !3, line: 1017, column: 3)
!9493 = !DILocation(line: 1017, column: 3, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9492, file: !3, line: 1017, column: 3)
!9495 = !DILocation(line: 1017, column: 3, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !9494, file: !3, line: 1017, column: 3)
!9497 = !DILocation(line: 1017, column: 3, scope: !9498)
!9498 = distinct !DILexicalBlock(scope: !9494, file: !3, line: 1017, column: 3)
!9499 = !DILocation(line: 1017, column: 3, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9498, file: !3, line: 1017, column: 3)
!9501 = !DILocation(line: 1017, column: 3, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9498, file: !3, line: 1017, column: 3)
!9503 = !{i32 -2139141756, i32 -2139141727, i32 -2139141681, i32 -2139141623, i32 -2139141569, i32 -2139141515, i32 -2139141460, i32 -2139141429}
!9504 = !DILocation(line: 1017, column: 3, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9498, file: !3, line: 1017, column: 3)
!9506 = !{i32 -2139141016, i32 -2139141009, i32 -2139140957, i32 -2139140926, i32 -2139140896}
!9507 = !DILocation(line: 1017, column: 3, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9498, file: !3, line: 1017, column: 3)
!9509 = !DILocation(line: 1017, column: 3, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9494, file: !3, line: 1017, column: 3)
!9511 = !DILocation(line: 1018, column: 3, scope: !9489)
!9512 = !DILocation(line: 1020, column: 24, scope: !9476)
!9513 = !DILocation(line: 1021, column: 6, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9476, file: !3, line: 1021, column: 6)
!9515 = !DILocation(line: 1021, column: 6, scope: !9476)
!9516 = !DILocation(line: 1022, column: 3, scope: !9514)
!9517 = !DILocalVariable(name: "__mptr", scope: !9518, file: !3, line: 1024, type: !591)
!9518 = distinct !DILexicalBlock(scope: !9519, file: !3, line: 1024, column: 2)
!9519 = distinct !DILexicalBlock(scope: !9476, file: !3, line: 1024, column: 2)
!9520 = !DILocation(line: 1024, column: 2, scope: !9518)
!9521 = !DILocation(line: 1024, column: 2, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9518, file: !3, line: 1024, column: 2)
!9523 = !DILocation(line: 1024, column: 2, scope: !9519)
!9524 = !DILocalVariable(name: "__mptr", scope: !9525, file: !3, line: 1024, type: !591)
!9525 = distinct !DILexicalBlock(scope: !9519, file: !3, line: 1024, column: 2)
!9526 = !DILocation(line: 1024, column: 2, scope: !9525)
!9527 = !DILocation(line: 1024, column: 2, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9525, file: !3, line: 1024, column: 2)
!9529 = !DILocation(line: 1024, column: 2, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9519, file: !3, line: 1024, column: 2)
!9531 = !DILocation(line: 1029, column: 18, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9530, file: !3, line: 1024, column: 71)
!9533 = !DILocation(line: 1029, column: 23, scope: !9532)
!9534 = !DILocation(line: 1029, column: 29, scope: !9532)
!9535 = !DILocation(line: 1029, column: 3, scope: !9532)
!9536 = !DILocation(line: 1030, column: 35, scope: !9532)
!9537 = !DILocation(line: 1030, column: 3, scope: !9532)
!9538 = !DILocation(line: 1031, column: 2, scope: !9532)
!9539 = !DILocalVariable(name: "__mptr", scope: !9540, file: !3, line: 1024, type: !591)
!9540 = distinct !DILexicalBlock(scope: !9530, file: !3, line: 1024, column: 2)
!9541 = !DILocation(line: 1024, column: 2, scope: !9540)
!9542 = !DILocation(line: 1024, column: 2, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9540, file: !3, line: 1024, column: 2)
!9544 = distinct !{!9544, !9523, !9545}
!9545 = !DILocation(line: 1031, column: 2, scope: !9519)
!9546 = !DILabel(scope: !9476, name: "out", file: !3, line: 1032)
!9547 = !DILocation(line: 1032, column: 1, scope: !9476)
!9548 = !DILocation(line: 1033, column: 2, scope: !9476)
!9549 = !DILocation(line: 1035, column: 2, scope: !9476)
!9550 = !DILocation(line: 1036, column: 1, scope: !9476)
!9551 = distinct !DISubprogram(name: "list_del_init", scope: !9076, file: !9076, line: 202, type: !9077, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9552 = !DILocalVariable(name: "entry", arg: 1, scope: !9551, file: !9076, line: 202, type: !287)
!9553 = !DILocation(line: 202, column: 52, scope: !9551)
!9554 = !DILocation(line: 204, column: 19, scope: !9551)
!9555 = !DILocation(line: 204, column: 2, scope: !9551)
!9556 = !DILocation(line: 205, column: 17, scope: !9551)
!9557 = !DILocation(line: 205, column: 2, scope: !9551)
!9558 = !DILocation(line: 206, column: 1, scope: !9551)
!9559 = distinct !DISubprogram(name: "__device_links_queue_sync_state", scope: !3, file: !3, line: 939, type: !9560, scopeLine: 941, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9560 = !DISubroutineType(types: !9561)
!9561 = !{null, !4856, !287}
!9562 = !DILocalVariable(name: "dev", arg: 1, scope: !9559, file: !3, line: 939, type: !4856)
!9563 = !DILocation(line: 939, column: 60, scope: !9559)
!9564 = !DILocalVariable(name: "list", arg: 2, scope: !9559, file: !3, line: 940, type: !287)
!9565 = !DILocation(line: 940, column: 28, scope: !9559)
!9566 = !DILocalVariable(name: "link", scope: !9559, file: !3, line: 942, type: !7438)
!9567 = !DILocation(line: 942, column: 22, scope: !9559)
!9568 = !DILocation(line: 944, column: 26, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9559, file: !3, line: 944, column: 6)
!9570 = !DILocation(line: 944, column: 7, scope: !9569)
!9571 = !DILocation(line: 944, column: 6, scope: !9559)
!9572 = !DILocation(line: 945, column: 3, scope: !9569)
!9573 = !DILocation(line: 946, column: 6, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9559, file: !3, line: 946, column: 6)
!9575 = !DILocation(line: 946, column: 11, scope: !9574)
!9576 = !DILocation(line: 946, column: 6, scope: !9559)
!9577 = !DILocation(line: 947, column: 3, scope: !9574)
!9578 = !DILocalVariable(name: "__mptr", scope: !9579, file: !3, line: 949, type: !591)
!9579 = distinct !DILexicalBlock(scope: !9580, file: !3, line: 949, column: 2)
!9580 = distinct !DILexicalBlock(scope: !9559, file: !3, line: 949, column: 2)
!9581 = !DILocation(line: 949, column: 2, scope: !9579)
!9582 = !DILocation(line: 949, column: 2, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9579, file: !3, line: 949, column: 2)
!9584 = !DILocation(line: 949, column: 2, scope: !9580)
!9585 = !DILocation(line: 949, column: 2, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9580, file: !3, line: 949, column: 2)
!9587 = !DILocation(line: 950, column: 9, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9589, file: !3, line: 950, column: 7)
!9589 = distinct !DILexicalBlock(scope: !9586, file: !3, line: 949, column: 59)
!9590 = !DILocation(line: 950, column: 15, scope: !9588)
!9591 = !DILocation(line: 950, column: 21, scope: !9588)
!9592 = !DILocation(line: 950, column: 7, scope: !9589)
!9593 = !DILocation(line: 951, column: 4, scope: !9588)
!9594 = !DILocation(line: 952, column: 7, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9589, file: !3, line: 952, column: 7)
!9596 = !DILocation(line: 952, column: 13, scope: !9595)
!9597 = !DILocation(line: 952, column: 20, scope: !9595)
!9598 = !DILocation(line: 952, column: 7, scope: !9589)
!9599 = !DILocation(line: 953, column: 4, scope: !9595)
!9600 = !DILocation(line: 954, column: 2, scope: !9589)
!9601 = !DILocalVariable(name: "__mptr", scope: !9602, file: !3, line: 949, type: !591)
!9602 = distinct !DILexicalBlock(scope: !9586, file: !3, line: 949, column: 2)
!9603 = !DILocation(line: 949, column: 2, scope: !9602)
!9604 = !DILocation(line: 949, column: 2, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9602, file: !3, line: 949, column: 2)
!9606 = distinct !{!9606, !9584, !9607}
!9607 = !DILocation(line: 954, column: 2, scope: !9580)
!9608 = !DILocation(line: 961, column: 2, scope: !9559)
!9609 = !DILocation(line: 961, column: 7, scope: !9559)
!9610 = !DILocation(line: 961, column: 20, scope: !9559)
!9611 = !DILocalVariable(name: "__ret_warn_on", scope: !9612, file: !3, line: 963, type: !32)
!9612 = distinct !DILexicalBlock(scope: !9613, file: !3, line: 963, column: 6)
!9613 = distinct !DILexicalBlock(scope: !9559, file: !3, line: 963, column: 6)
!9614 = !DILocation(line: 963, column: 6, scope: !9612)
!9615 = !DILocation(line: 963, column: 6, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9612, file: !3, line: 963, column: 6)
!9617 = !DILocation(line: 963, column: 6, scope: !9618)
!9618 = distinct !DILexicalBlock(scope: !9616, file: !3, line: 963, column: 6)
!9619 = !DILocation(line: 963, column: 6, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9618, file: !3, line: 963, column: 6)
!9621 = !DILocation(line: 963, column: 6, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9618, file: !3, line: 963, column: 6)
!9623 = !{i32 -2139149778, i32 -2139149749, i32 -2139149703, i32 -2139149645, i32 -2139149591, i32 -2139149537, i32 -2139149482, i32 -2139149451}
!9624 = !DILocation(line: 963, column: 6, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9618, file: !3, line: 963, column: 6)
!9626 = !{i32 -2139149050, i32 -2139149043, i32 -2139148991, i32 -2139148960, i32 -2139148930}
!9627 = !DILocation(line: 963, column: 6, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9618, file: !3, line: 963, column: 6)
!9629 = !DILocation(line: 963, column: 6, scope: !9613)
!9630 = !DILocation(line: 963, column: 6, scope: !9559)
!9631 = !DILocation(line: 964, column: 3, scope: !9613)
!9632 = !DILocation(line: 966, column: 13, scope: !9559)
!9633 = !DILocation(line: 966, column: 2, scope: !9559)
!9634 = !DILocation(line: 967, column: 17, scope: !9559)
!9635 = !DILocation(line: 967, column: 22, scope: !9559)
!9636 = !DILocation(line: 967, column: 28, scope: !9559)
!9637 = !DILocation(line: 967, column: 40, scope: !9559)
!9638 = !DILocation(line: 967, column: 2, scope: !9559)
!9639 = !DILocation(line: 968, column: 1, scope: !9559)
!9640 = distinct !DISubprogram(name: "device_links_flush_sync_list", scope: !3, file: !3, line: 980, type: !9641, scopeLine: 982, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9641 = !DISubroutineType(types: !9642)
!9642 = !{null, !287, !4856}
!9643 = !DILocalVariable(name: "list", arg: 1, scope: !9640, file: !3, line: 980, type: !287)
!9644 = !DILocation(line: 980, column: 60, scope: !9640)
!9645 = !DILocalVariable(name: "dont_lock_dev", arg: 2, scope: !9640, file: !3, line: 981, type: !4856)
!9646 = !DILocation(line: 981, column: 22, scope: !9640)
!9647 = !DILocalVariable(name: "dev", scope: !9640, file: !3, line: 983, type: !4856)
!9648 = !DILocation(line: 983, column: 17, scope: !9640)
!9649 = !DILocalVariable(name: "tmp", scope: !9640, file: !3, line: 983, type: !4856)
!9650 = !DILocation(line: 983, column: 23, scope: !9640)
!9651 = !DILocalVariable(name: "__mptr", scope: !9652, file: !3, line: 985, type: !591)
!9652 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 985, column: 2)
!9653 = distinct !DILexicalBlock(scope: !9640, file: !3, line: 985, column: 2)
!9654 = !DILocation(line: 985, column: 2, scope: !9652)
!9655 = !DILocation(line: 985, column: 2, scope: !9656)
!9656 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 985, column: 2)
!9657 = !DILocation(line: 985, column: 2, scope: !9653)
!9658 = !DILocalVariable(name: "__mptr", scope: !9659, file: !3, line: 985, type: !591)
!9659 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 985, column: 2)
!9660 = !DILocation(line: 985, column: 2, scope: !9659)
!9661 = !DILocation(line: 985, column: 2, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9659, file: !3, line: 985, column: 2)
!9663 = !DILocation(line: 985, column: 2, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 985, column: 2)
!9665 = !DILocation(line: 986, column: 18, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 985, column: 61)
!9667 = !DILocation(line: 986, column: 23, scope: !9666)
!9668 = !DILocation(line: 986, column: 29, scope: !9666)
!9669 = !DILocation(line: 986, column: 3, scope: !9666)
!9670 = !DILocation(line: 988, column: 7, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9666, file: !3, line: 988, column: 7)
!9672 = !DILocation(line: 988, column: 14, scope: !9671)
!9673 = !DILocation(line: 988, column: 11, scope: !9671)
!9674 = !DILocation(line: 988, column: 7, scope: !9666)
!9675 = !DILocation(line: 989, column: 16, scope: !9671)
!9676 = !DILocation(line: 989, column: 4, scope: !9671)
!9677 = !DILocation(line: 991, column: 7, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9666, file: !3, line: 991, column: 7)
!9679 = !DILocation(line: 991, column: 12, scope: !9678)
!9680 = !DILocation(line: 991, column: 17, scope: !9678)
!9681 = !DILocation(line: 991, column: 7, scope: !9666)
!9682 = !DILocation(line: 992, column: 4, scope: !9678)
!9683 = !DILocation(line: 992, column: 9, scope: !9678)
!9684 = !DILocation(line: 992, column: 14, scope: !9678)
!9685 = !DILocation(line: 992, column: 25, scope: !9678)
!9686 = !DILocation(line: 993, column: 12, scope: !9687)
!9687 = distinct !DILexicalBlock(scope: !9678, file: !3, line: 993, column: 12)
!9688 = !DILocation(line: 993, column: 17, scope: !9687)
!9689 = !DILocation(line: 993, column: 24, scope: !9687)
!9690 = !DILocation(line: 993, column: 27, scope: !9687)
!9691 = !DILocation(line: 993, column: 32, scope: !9687)
!9692 = !DILocation(line: 993, column: 40, scope: !9687)
!9693 = !DILocation(line: 993, column: 12, scope: !9678)
!9694 = !DILocation(line: 994, column: 4, scope: !9687)
!9695 = !DILocation(line: 994, column: 9, scope: !9687)
!9696 = !DILocation(line: 994, column: 17, scope: !9687)
!9697 = !DILocation(line: 994, column: 28, scope: !9687)
!9698 = !DILocation(line: 996, column: 7, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9666, file: !3, line: 996, column: 7)
!9700 = !DILocation(line: 996, column: 14, scope: !9699)
!9701 = !DILocation(line: 996, column: 11, scope: !9699)
!9702 = !DILocation(line: 996, column: 7, scope: !9666)
!9703 = !DILocation(line: 997, column: 18, scope: !9699)
!9704 = !DILocation(line: 997, column: 4, scope: !9699)
!9705 = !DILocation(line: 999, column: 14, scope: !9666)
!9706 = !DILocation(line: 999, column: 3, scope: !9666)
!9707 = !DILocation(line: 1000, column: 2, scope: !9666)
!9708 = !DILocalVariable(name: "__mptr", scope: !9709, file: !3, line: 985, type: !591)
!9709 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 985, column: 2)
!9710 = !DILocation(line: 985, column: 2, scope: !9709)
!9711 = !DILocation(line: 985, column: 2, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9709, file: !3, line: 985, column: 2)
!9713 = distinct !{!9713, !9657, !9714}
!9714 = !DILocation(line: 1000, column: 2, scope: !9653)
!9715 = !DILocation(line: 1001, column: 1, scope: !9640)
!9716 = distinct !DISubprogram(name: "sync_state_resume_initcall", scope: !3, file: !3, line: 1038, type: !7842, scopeLine: 1039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9717 = !DILocation(line: 1040, column: 2, scope: !9716)
!9718 = !DILocation(line: 1041, column: 2, scope: !9716)
!9719 = distinct !DISubprogram(name: "device_links_driver_bound", scope: !3, file: !3, line: 1085, type: !4915, scopeLine: 1086, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9720 = !DILocalVariable(name: "dev", arg: 1, scope: !9719, file: !3, line: 1085, type: !4856)
!9721 = !DILocation(line: 1085, column: 47, scope: !9719)
!9722 = !DILocalVariable(name: "link", scope: !9719, file: !3, line: 1087, type: !7438)
!9723 = !DILocation(line: 1087, column: 22, scope: !9719)
!9724 = !DILocalVariable(name: "ln", scope: !9719, file: !3, line: 1087, type: !7438)
!9725 = !DILocation(line: 1087, column: 29, scope: !9719)
!9726 = !DILocalVariable(name: "sync_list", scope: !9719, file: !3, line: 1088, type: !284)
!9727 = !DILocation(line: 1088, column: 2, scope: !9719)
!9728 = !DILocation(line: 1095, column: 2, scope: !9719)
!9729 = !DILocation(line: 1096, column: 17, scope: !9719)
!9730 = !DILocation(line: 1096, column: 22, scope: !9719)
!9731 = !DILocation(line: 1096, column: 28, scope: !9719)
!9732 = !DILocation(line: 1096, column: 2, scope: !9719)
!9733 = !DILocation(line: 1097, column: 2, scope: !9719)
!9734 = !DILocation(line: 1098, column: 21, scope: !9719)
!9735 = !DILocation(line: 1098, column: 2, scope: !9719)
!9736 = !DILocation(line: 1100, column: 2, scope: !9719)
!9737 = !DILocalVariable(name: "__mptr", scope: !9738, file: !3, line: 1102, type: !591)
!9738 = distinct !DILexicalBlock(scope: !9739, file: !3, line: 1102, column: 2)
!9739 = distinct !DILexicalBlock(scope: !9719, file: !3, line: 1102, column: 2)
!9740 = !DILocation(line: 1102, column: 2, scope: !9738)
!9741 = !DILocation(line: 1102, column: 2, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9738, file: !3, line: 1102, column: 2)
!9743 = !DILocation(line: 1102, column: 2, scope: !9739)
!9744 = !DILocation(line: 1102, column: 2, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9739, file: !3, line: 1102, column: 2)
!9746 = !DILocation(line: 1103, column: 9, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9748, file: !3, line: 1103, column: 7)
!9748 = distinct !DILexicalBlock(scope: !9745, file: !3, line: 1102, column: 59)
!9749 = !DILocation(line: 1103, column: 15, scope: !9747)
!9750 = !DILocation(line: 1103, column: 21, scope: !9747)
!9751 = !DILocation(line: 1103, column: 7, scope: !9748)
!9752 = !DILocation(line: 1104, column: 4, scope: !9747)
!9753 = !DILocation(line: 1112, column: 7, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9748, file: !3, line: 1112, column: 7)
!9755 = !DILocation(line: 1112, column: 13, scope: !9754)
!9756 = !DILocation(line: 1112, column: 20, scope: !9754)
!9757 = !DILocation(line: 1112, column: 47, scope: !9754)
!9758 = !DILocation(line: 1113, column: 7, scope: !9754)
!9759 = !DILocation(line: 1113, column: 13, scope: !9754)
!9760 = !DILocation(line: 1113, column: 20, scope: !9754)
!9761 = !DILocation(line: 1112, column: 7, scope: !9748)
!9762 = !DILocation(line: 1114, column: 4, scope: !9754)
!9763 = !DILocalVariable(name: "__ret_warn_on", scope: !9764, file: !3, line: 1116, type: !32)
!9764 = distinct !DILexicalBlock(scope: !9748, file: !3, line: 1116, column: 3)
!9765 = !DILocation(line: 1116, column: 3, scope: !9764)
!9766 = !DILocation(line: 1116, column: 3, scope: !9767)
!9767 = distinct !DILexicalBlock(scope: !9764, file: !3, line: 1116, column: 3)
!9768 = !DILocation(line: 1116, column: 3, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9767, file: !3, line: 1116, column: 3)
!9770 = !DILocation(line: 1116, column: 3, scope: !9771)
!9771 = distinct !DILexicalBlock(scope: !9769, file: !3, line: 1116, column: 3)
!9772 = !DILocation(line: 1116, column: 3, scope: !9773)
!9773 = distinct !DILexicalBlock(scope: !9769, file: !3, line: 1116, column: 3)
!9774 = !{i32 -2139126645, i32 -2139126616, i32 -2139126570, i32 -2139126512, i32 -2139126458, i32 -2139126404, i32 -2139126349, i32 -2139126318}
!9775 = !DILocation(line: 1116, column: 3, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9769, file: !3, line: 1116, column: 3)
!9777 = !{i32 -2139125916, i32 -2139125909, i32 -2139125857, i32 -2139125826, i32 -2139125796}
!9778 = !DILocation(line: 1116, column: 3, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9769, file: !3, line: 1116, column: 3)
!9780 = !DILocation(line: 1117, column: 3, scope: !9748)
!9781 = !DILocation(line: 1117, column: 3, scope: !9782)
!9782 = distinct !DILexicalBlock(scope: !9748, file: !3, line: 1117, column: 3)
!9783 = !DILocation(line: 1117, column: 3, scope: !9784)
!9784 = distinct !DILexicalBlock(scope: !9782, file: !3, line: 1117, column: 3)
!9785 = !DILocation(line: 1117, column: 3, scope: !9786)
!9786 = distinct !DILexicalBlock(scope: !9782, file: !3, line: 1117, column: 3)
!9787 = !DILocation(line: 1119, column: 7, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9748, file: !3, line: 1119, column: 7)
!9789 = !DILocation(line: 1119, column: 13, scope: !9788)
!9790 = !DILocation(line: 1119, column: 19, scope: !9788)
!9791 = !DILocation(line: 1119, column: 7, scope: !9748)
!9792 = !DILocation(line: 1120, column: 30, scope: !9788)
!9793 = !DILocation(line: 1120, column: 36, scope: !9788)
!9794 = !DILocation(line: 1120, column: 4, scope: !9788)
!9795 = !DILocation(line: 1121, column: 2, scope: !9748)
!9796 = !DILocalVariable(name: "__mptr", scope: !9797, file: !3, line: 1102, type: !591)
!9797 = distinct !DILexicalBlock(scope: !9745, file: !3, line: 1102, column: 2)
!9798 = !DILocation(line: 1102, column: 2, scope: !9797)
!9799 = !DILocation(line: 1102, column: 2, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 1102, column: 2)
!9801 = distinct !{!9801, !9743, !9802}
!9802 = !DILocation(line: 1121, column: 2, scope: !9739)
!9803 = !DILocation(line: 1123, column: 6, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9719, file: !3, line: 1123, column: 6)
!9805 = !DILocation(line: 1123, column: 6, scope: !9719)
!9806 = !DILocation(line: 1124, column: 38, scope: !9804)
!9807 = !DILocation(line: 1124, column: 3, scope: !9804)
!9808 = !DILocation(line: 1126, column: 35, scope: !9804)
!9809 = !DILocation(line: 1126, column: 3, scope: !9804)
!9810 = !DILocalVariable(name: "__mptr", scope: !9811, file: !3, line: 1128, type: !591)
!9811 = distinct !DILexicalBlock(scope: !9812, file: !3, line: 1128, column: 2)
!9812 = distinct !DILexicalBlock(scope: !9719, file: !3, line: 1128, column: 2)
!9813 = !DILocation(line: 1128, column: 2, scope: !9811)
!9814 = !DILocation(line: 1128, column: 2, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9811, file: !3, line: 1128, column: 2)
!9816 = !DILocation(line: 1128, column: 2, scope: !9812)
!9817 = !DILocalVariable(name: "__mptr", scope: !9818, file: !3, line: 1128, type: !591)
!9818 = distinct !DILexicalBlock(scope: !9812, file: !3, line: 1128, column: 2)
!9819 = !DILocation(line: 1128, column: 2, scope: !9818)
!9820 = !DILocation(line: 1128, column: 2, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9818, file: !3, line: 1128, column: 2)
!9822 = !DILocation(line: 1128, column: 2, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9812, file: !3, line: 1128, column: 2)
!9824 = !DILocalVariable(name: "supplier", scope: !9825, file: !3, line: 1129, type: !4856)
!9825 = distinct !DILexicalBlock(scope: !9823, file: !3, line: 1128, column: 68)
!9826 = !DILocation(line: 1129, column: 18, scope: !9825)
!9827 = !DILocation(line: 1131, column: 9, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9825, file: !3, line: 1131, column: 7)
!9829 = !DILocation(line: 1131, column: 15, scope: !9828)
!9830 = !DILocation(line: 1131, column: 21, scope: !9828)
!9831 = !DILocation(line: 1131, column: 7, scope: !9825)
!9832 = !DILocation(line: 1132, column: 4, scope: !9828)
!9833 = !DILocation(line: 1134, column: 14, scope: !9825)
!9834 = !DILocation(line: 1134, column: 20, scope: !9825)
!9835 = !DILocation(line: 1134, column: 12, scope: !9825)
!9836 = !DILocation(line: 1135, column: 7, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9825, file: !3, line: 1135, column: 7)
!9838 = !DILocation(line: 1135, column: 13, scope: !9837)
!9839 = !DILocation(line: 1135, column: 19, scope: !9837)
!9840 = !DILocation(line: 1135, column: 7, scope: !9825)
!9841 = !DILocation(line: 1141, column: 29, scope: !9842)
!9842 = distinct !DILexicalBlock(scope: !9837, file: !3, line: 1135, column: 46)
!9843 = !DILocation(line: 1141, column: 4, scope: !9842)
!9844 = !DILocation(line: 1142, column: 3, scope: !9842)
!9845 = !DILocalVariable(name: "__ret_warn_on", scope: !9846, file: !3, line: 1143, type: !32)
!9846 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 1143, column: 4)
!9847 = distinct !DILexicalBlock(scope: !9837, file: !3, line: 1142, column: 10)
!9848 = !DILocation(line: 1143, column: 4, scope: !9846)
!9849 = !DILocation(line: 1143, column: 4, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9846, file: !3, line: 1143, column: 4)
!9851 = !DILocation(line: 1143, column: 4, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9850, file: !3, line: 1143, column: 4)
!9853 = !DILocation(line: 1143, column: 4, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9852, file: !3, line: 1143, column: 4)
!9855 = !DILocation(line: 1143, column: 4, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9852, file: !3, line: 1143, column: 4)
!9857 = !{i32 -2139117744, i32 -2139117715, i32 -2139117669, i32 -2139117611, i32 -2139117557, i32 -2139117503, i32 -2139117448, i32 -2139117417}
!9858 = !DILocation(line: 1143, column: 4, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9852, file: !3, line: 1143, column: 4)
!9860 = !{i32 -2139117015, i32 -2139117008, i32 -2139116956, i32 -2139116925, i32 -2139116895}
!9861 = !DILocation(line: 1143, column: 4, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9852, file: !3, line: 1143, column: 4)
!9863 = !DILocation(line: 1144, column: 4, scope: !9847)
!9864 = !DILocation(line: 1144, column: 4, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 1144, column: 4)
!9866 = !DILocation(line: 1144, column: 4, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9865, file: !3, line: 1144, column: 4)
!9868 = !DILocation(line: 1144, column: 4, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9865, file: !3, line: 1144, column: 4)
!9870 = !DILocation(line: 1153, column: 7, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9825, file: !3, line: 1153, column: 7)
!9872 = !DILocation(line: 1153, column: 7, scope: !9825)
!9873 = !DILocation(line: 1154, column: 39, scope: !9871)
!9874 = !DILocation(line: 1154, column: 4, scope: !9871)
!9875 = !DILocation(line: 1156, column: 36, scope: !9871)
!9876 = !DILocation(line: 1156, column: 4, scope: !9871)
!9877 = !DILocation(line: 1157, column: 2, scope: !9825)
!9878 = !DILocalVariable(name: "__mptr", scope: !9879, file: !3, line: 1128, type: !591)
!9879 = distinct !DILexicalBlock(scope: !9823, file: !3, line: 1128, column: 2)
!9880 = !DILocation(line: 1128, column: 2, scope: !9879)
!9881 = !DILocation(line: 1128, column: 2, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9879, file: !3, line: 1128, column: 2)
!9883 = distinct !{!9883, !9816, !9884}
!9884 = !DILocation(line: 1157, column: 2, scope: !9812)
!9885 = !DILocation(line: 1159, column: 2, scope: !9719)
!9886 = !DILocation(line: 1159, column: 7, scope: !9719)
!9887 = !DILocation(line: 1159, column: 13, scope: !9719)
!9888 = !DILocation(line: 1159, column: 20, scope: !9719)
!9889 = !DILocation(line: 1161, column: 2, scope: !9719)
!9890 = !DILocation(line: 1163, column: 43, scope: !9719)
!9891 = !DILocation(line: 1163, column: 2, scope: !9719)
!9892 = !DILocation(line: 1164, column: 1, scope: !9719)
!9893 = distinct !DISubprogram(name: "device_remove_file", scope: !3, file: !3, line: 2322, type: !9894, scopeLine: 2324, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9894 = !DISubroutineType(types: !9895)
!9895 = !{null, !4856, !9896}
!9896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9897, size: 64)
!9897 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7461)
!9898 = !DILocalVariable(name: "dev", arg: 1, scope: !9893, file: !3, line: 2322, type: !4856)
!9899 = !DILocation(line: 2322, column: 40, scope: !9893)
!9900 = !DILocalVariable(name: "attr", arg: 2, scope: !9893, file: !3, line: 2323, type: !9896)
!9901 = !DILocation(line: 2323, column: 35, scope: !9893)
!9902 = !DILocation(line: 2325, column: 6, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9893, file: !3, line: 2325, column: 6)
!9904 = !DILocation(line: 2325, column: 6, scope: !9893)
!9905 = !DILocation(line: 2326, column: 22, scope: !9903)
!9906 = !DILocation(line: 2326, column: 27, scope: !9903)
!9907 = !DILocation(line: 2326, column: 34, scope: !9903)
!9908 = !DILocation(line: 2326, column: 40, scope: !9903)
!9909 = !DILocation(line: 2326, column: 3, scope: !9903)
!9910 = !DILocation(line: 2327, column: 1, scope: !9893)
!9911 = distinct !DISubprogram(name: "__device_links_supplier_defer_sync", scope: !3, file: !3, line: 1045, type: !4915, scopeLine: 1046, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9912 = !DILocalVariable(name: "sup", arg: 1, scope: !9911, file: !3, line: 1045, type: !4856)
!9913 = !DILocation(line: 1045, column: 63, scope: !9911)
!9914 = !DILocation(line: 1047, column: 18, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !9911, file: !3, line: 1047, column: 6)
!9916 = !DILocation(line: 1047, column: 23, scope: !9915)
!9917 = !DILocation(line: 1047, column: 29, scope: !9915)
!9918 = !DILocation(line: 1047, column: 6, scope: !9915)
!9919 = !DILocation(line: 1047, column: 41, scope: !9915)
!9920 = !DILocation(line: 1047, column: 63, scope: !9915)
!9921 = !DILocation(line: 1047, column: 44, scope: !9915)
!9922 = !DILocation(line: 1047, column: 6, scope: !9911)
!9923 = !DILocation(line: 1048, column: 18, scope: !9915)
!9924 = !DILocation(line: 1048, column: 23, scope: !9915)
!9925 = !DILocation(line: 1048, column: 29, scope: !9915)
!9926 = !DILocation(line: 1048, column: 3, scope: !9915)
!9927 = !DILocation(line: 1049, column: 1, scope: !9911)
!9928 = distinct !DISubprogram(name: "device_link_drop_managed", scope: !3, file: !3, line: 1051, type: !9205, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9929 = !DILocalVariable(name: "link", arg: 1, scope: !9928, file: !3, line: 1051, type: !7438)
!9930 = !DILocation(line: 1051, column: 58, scope: !9928)
!9931 = !DILocation(line: 1053, column: 2, scope: !9928)
!9932 = !DILocation(line: 1053, column: 8, scope: !9928)
!9933 = !DILocation(line: 1053, column: 14, scope: !9928)
!9934 = !DILocation(line: 1054, column: 2, scope: !9928)
!9935 = !DILocation(line: 1054, column: 2, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !9928, file: !3, line: 1054, column: 2)
!9937 = !DILocation(line: 1054, column: 2, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9936, file: !3, line: 1054, column: 2)
!9939 = !DILocation(line: 1054, column: 2, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9936, file: !3, line: 1054, column: 2)
!9941 = !DILocation(line: 1055, column: 12, scope: !9928)
!9942 = !DILocation(line: 1055, column: 18, scope: !9928)
!9943 = !DILocation(line: 1055, column: 2, scope: !9928)
!9944 = !DILocation(line: 1056, column: 1, scope: !9928)
!9945 = distinct !DISubprogram(name: "device_links_no_driver", scope: !3, file: !3, line: 1216, type: !4915, scopeLine: 1217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9946 = !DILocalVariable(name: "dev", arg: 1, scope: !9945, file: !3, line: 1216, type: !4856)
!9947 = !DILocation(line: 1216, column: 44, scope: !9945)
!9948 = !DILocalVariable(name: "link", scope: !9945, file: !3, line: 1218, type: !7438)
!9949 = !DILocation(line: 1218, column: 22, scope: !9945)
!9950 = !DILocation(line: 1220, column: 2, scope: !9945)
!9951 = !DILocalVariable(name: "__mptr", scope: !9952, file: !3, line: 1222, type: !591)
!9952 = distinct !DILexicalBlock(scope: !9953, file: !3, line: 1222, column: 2)
!9953 = distinct !DILexicalBlock(scope: !9945, file: !3, line: 1222, column: 2)
!9954 = !DILocation(line: 1222, column: 2, scope: !9952)
!9955 = !DILocation(line: 1222, column: 2, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9952, file: !3, line: 1222, column: 2)
!9957 = !DILocation(line: 1222, column: 2, scope: !9953)
!9958 = !DILocation(line: 1222, column: 2, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9953, file: !3, line: 1222, column: 2)
!9960 = !DILocation(line: 1223, column: 9, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9962, file: !3, line: 1223, column: 7)
!9962 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 1222, column: 59)
!9963 = !DILocation(line: 1223, column: 15, scope: !9961)
!9964 = !DILocation(line: 1223, column: 21, scope: !9961)
!9965 = !DILocation(line: 1223, column: 7, scope: !9962)
!9966 = !DILocation(line: 1224, column: 4, scope: !9961)
!9967 = !DILocation(line: 1233, column: 7, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9962, file: !3, line: 1233, column: 7)
!9969 = !DILocation(line: 1233, column: 13, scope: !9968)
!9970 = !DILocation(line: 1233, column: 20, scope: !9968)
!9971 = !DILocation(line: 1233, column: 47, scope: !9968)
!9972 = !DILocation(line: 1234, column: 7, scope: !9968)
!9973 = !DILocation(line: 1234, column: 13, scope: !9968)
!9974 = !DILocation(line: 1234, column: 20, scope: !9968)
!9975 = !DILocation(line: 1233, column: 7, scope: !9962)
!9976 = !DILocation(line: 1235, column: 4, scope: !9968)
!9977 = !DILocation(line: 1235, column: 4, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9968, file: !3, line: 1235, column: 4)
!9979 = !DILocation(line: 1235, column: 4, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9978, file: !3, line: 1235, column: 4)
!9981 = !DILocation(line: 1235, column: 4, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9978, file: !3, line: 1235, column: 4)
!9983 = !DILocation(line: 1236, column: 2, scope: !9962)
!9984 = !DILocalVariable(name: "__mptr", scope: !9985, file: !3, line: 1222, type: !591)
!9985 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 1222, column: 2)
!9986 = !DILocation(line: 1222, column: 2, scope: !9985)
!9987 = !DILocation(line: 1222, column: 2, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9985, file: !3, line: 1222, column: 2)
!9989 = distinct !{!9989, !9957, !9990}
!9990 = !DILocation(line: 1236, column: 2, scope: !9953)
!9991 = !DILocation(line: 1238, column: 27, scope: !9945)
!9992 = !DILocation(line: 1238, column: 2, scope: !9945)
!9993 = !DILocation(line: 1240, column: 2, scope: !9945)
!9994 = !DILocation(line: 1241, column: 1, scope: !9945)
!9995 = distinct !DISubprogram(name: "__device_links_no_driver", scope: !3, file: !3, line: 1178, type: !4915, scopeLine: 1179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9996 = !DILocalVariable(name: "dev", arg: 1, scope: !9995, file: !3, line: 1178, type: !4856)
!9997 = !DILocation(line: 1178, column: 53, scope: !9995)
!9998 = !DILocalVariable(name: "link", scope: !9995, file: !3, line: 1180, type: !7438)
!9999 = !DILocation(line: 1180, column: 22, scope: !9995)
!10000 = !DILocalVariable(name: "ln", scope: !9995, file: !3, line: 1180, type: !7438)
!10001 = !DILocation(line: 1180, column: 29, scope: !9995)
!10002 = !DILocalVariable(name: "__mptr", scope: !10003, file: !3, line: 1182, type: !591)
!10003 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 1182, column: 2)
!10004 = distinct !DILexicalBlock(scope: !9995, file: !3, line: 1182, column: 2)
!10005 = !DILocation(line: 1182, column: 2, scope: !10003)
!10006 = !DILocation(line: 1182, column: 2, scope: !10007)
!10007 = distinct !DILexicalBlock(scope: !10003, file: !3, line: 1182, column: 2)
!10008 = !DILocation(line: 1182, column: 2, scope: !10004)
!10009 = !DILocalVariable(name: "__mptr", scope: !10010, file: !3, line: 1182, type: !591)
!10010 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 1182, column: 2)
!10011 = !DILocation(line: 1182, column: 2, scope: !10010)
!10012 = !DILocation(line: 1182, column: 2, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !10010, file: !3, line: 1182, column: 2)
!10014 = !DILocation(line: 1182, column: 2, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 1182, column: 2)
!10016 = !DILocation(line: 1183, column: 9, scope: !10017)
!10017 = distinct !DILexicalBlock(scope: !10018, file: !3, line: 1183, column: 7)
!10018 = distinct !DILexicalBlock(scope: !10015, file: !3, line: 1182, column: 76)
!10019 = !DILocation(line: 1183, column: 15, scope: !10017)
!10020 = !DILocation(line: 1183, column: 21, scope: !10017)
!10021 = !DILocation(line: 1183, column: 7, scope: !10018)
!10022 = !DILocation(line: 1184, column: 4, scope: !10017)
!10023 = !DILocation(line: 1186, column: 7, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10018, file: !3, line: 1186, column: 7)
!10025 = !DILocation(line: 1186, column: 13, scope: !10024)
!10026 = !DILocation(line: 1186, column: 19, scope: !10024)
!10027 = !DILocation(line: 1186, column: 7, scope: !10018)
!10028 = !DILocation(line: 1187, column: 29, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10024, file: !3, line: 1186, column: 50)
!10030 = !DILocation(line: 1187, column: 4, scope: !10029)
!10031 = !DILocation(line: 1188, column: 4, scope: !10029)
!10032 = !DILocation(line: 1191, column: 7, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10018, file: !3, line: 1191, column: 7)
!10034 = !DILocation(line: 1191, column: 13, scope: !10033)
!10035 = !DILocation(line: 1191, column: 20, scope: !10033)
!10036 = !DILocation(line: 1191, column: 47, scope: !10033)
!10037 = !DILocation(line: 1192, column: 7, scope: !10033)
!10038 = !DILocation(line: 1192, column: 13, scope: !10033)
!10039 = !DILocation(line: 1192, column: 20, scope: !10033)
!10040 = !DILocation(line: 1191, column: 7, scope: !10018)
!10041 = !DILocation(line: 1193, column: 4, scope: !10033)
!10042 = !DILocation(line: 1195, column: 7, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10018, file: !3, line: 1195, column: 7)
!10044 = !DILocation(line: 1195, column: 13, scope: !10043)
!10045 = !DILocation(line: 1195, column: 23, scope: !10043)
!10046 = !DILocation(line: 1195, column: 29, scope: !10043)
!10047 = !DILocation(line: 1195, column: 36, scope: !10043)
!10048 = !DILocation(line: 1195, column: 7, scope: !10018)
!10049 = !DILocation(line: 1196, column: 4, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !10043, file: !3, line: 1195, column: 60)
!10051 = !DILocation(line: 1196, column: 4, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !10050, file: !3, line: 1196, column: 4)
!10053 = !DILocation(line: 1196, column: 4, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10052, file: !3, line: 1196, column: 4)
!10055 = !DILocation(line: 1196, column: 4, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10052, file: !3, line: 1196, column: 4)
!10057 = !DILocation(line: 1197, column: 3, scope: !10050)
!10058 = !DILocalVariable(name: "__ret_warn_on", scope: !10059, file: !3, line: 1198, type: !32)
!10059 = distinct !DILexicalBlock(scope: !10060, file: !3, line: 1198, column: 4)
!10060 = distinct !DILexicalBlock(scope: !10043, file: !3, line: 1197, column: 10)
!10061 = !DILocation(line: 1198, column: 4, scope: !10059)
!10062 = !DILocation(line: 1198, column: 4, scope: !10063)
!10063 = distinct !DILexicalBlock(scope: !10059, file: !3, line: 1198, column: 4)
!10064 = !DILocation(line: 1198, column: 4, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10063, file: !3, line: 1198, column: 4)
!10066 = !DILocation(line: 1198, column: 4, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !10065, file: !3, line: 1198, column: 4)
!10068 = !DILocation(line: 1198, column: 4, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10065, file: !3, line: 1198, column: 4)
!10070 = !{i32 -2139107547, i32 -2139107518, i32 -2139107472, i32 -2139107414, i32 -2139107360, i32 -2139107306, i32 -2139107251, i32 -2139107220}
!10071 = !DILocation(line: 1198, column: 4, scope: !10072)
!10072 = distinct !DILexicalBlock(scope: !10065, file: !3, line: 1198, column: 4)
!10073 = !{i32 -2139106818, i32 -2139106811, i32 -2139106759, i32 -2139106728, i32 -2139106698}
!10074 = !DILocation(line: 1198, column: 4, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10065, file: !3, line: 1198, column: 4)
!10076 = !DILocation(line: 1199, column: 4, scope: !10060)
!10077 = !DILocation(line: 1199, column: 4, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10060, file: !3, line: 1199, column: 4)
!10079 = !DILocation(line: 1199, column: 4, scope: !10080)
!10080 = distinct !DILexicalBlock(scope: !10078, file: !3, line: 1199, column: 4)
!10081 = !DILocation(line: 1199, column: 4, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !10078, file: !3, line: 1199, column: 4)
!10083 = !DILocation(line: 1201, column: 2, scope: !10018)
!10084 = !DILocalVariable(name: "__mptr", scope: !10085, file: !3, line: 1182, type: !591)
!10085 = distinct !DILexicalBlock(scope: !10015, file: !3, line: 1182, column: 2)
!10086 = !DILocation(line: 1182, column: 2, scope: !10085)
!10087 = !DILocation(line: 1182, column: 2, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10085, file: !3, line: 1182, column: 2)
!10089 = distinct !{!10089, !10008, !10090}
!10090 = !DILocation(line: 1201, column: 2, scope: !10004)
!10091 = !DILocation(line: 1203, column: 2, scope: !9995)
!10092 = !DILocation(line: 1203, column: 7, scope: !9995)
!10093 = !DILocation(line: 1203, column: 13, scope: !9995)
!10094 = !DILocation(line: 1203, column: 20, scope: !9995)
!10095 = !DILocation(line: 1204, column: 1, scope: !9995)
!10096 = distinct !DISubprogram(name: "device_links_driver_cleanup", scope: !3, file: !3, line: 1253, type: !4915, scopeLine: 1254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10097 = !DILocalVariable(name: "dev", arg: 1, scope: !10096, file: !3, line: 1253, type: !4856)
!10098 = !DILocation(line: 1253, column: 49, scope: !10096)
!10099 = !DILocalVariable(name: "link", scope: !10096, file: !3, line: 1255, type: !7438)
!10100 = !DILocation(line: 1255, column: 22, scope: !10096)
!10101 = !DILocalVariable(name: "ln", scope: !10096, file: !3, line: 1255, type: !7438)
!10102 = !DILocation(line: 1255, column: 29, scope: !10096)
!10103 = !DILocation(line: 1257, column: 2, scope: !10096)
!10104 = !DILocalVariable(name: "__mptr", scope: !10105, file: !3, line: 1259, type: !591)
!10105 = distinct !DILexicalBlock(scope: !10106, file: !3, line: 1259, column: 2)
!10106 = distinct !DILexicalBlock(scope: !10096, file: !3, line: 1259, column: 2)
!10107 = !DILocation(line: 1259, column: 2, scope: !10105)
!10108 = !DILocation(line: 1259, column: 2, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10105, file: !3, line: 1259, column: 2)
!10110 = !DILocation(line: 1259, column: 2, scope: !10106)
!10111 = !DILocalVariable(name: "__mptr", scope: !10112, file: !3, line: 1259, type: !591)
!10112 = distinct !DILexicalBlock(scope: !10106, file: !3, line: 1259, column: 2)
!10113 = !DILocation(line: 1259, column: 2, scope: !10112)
!10114 = !DILocation(line: 1259, column: 2, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !10112, file: !3, line: 1259, column: 2)
!10116 = !DILocation(line: 1259, column: 2, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10106, file: !3, line: 1259, column: 2)
!10118 = !DILocation(line: 1260, column: 9, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10120, file: !3, line: 1260, column: 7)
!10120 = distinct !DILexicalBlock(scope: !10117, file: !3, line: 1259, column: 68)
!10121 = !DILocation(line: 1260, column: 15, scope: !10119)
!10122 = !DILocation(line: 1260, column: 21, scope: !10119)
!10123 = !DILocation(line: 1260, column: 7, scope: !10120)
!10124 = !DILocation(line: 1261, column: 4, scope: !10119)
!10125 = !DILocalVariable(name: "__ret_warn_on", scope: !10126, file: !3, line: 1263, type: !32)
!10126 = distinct !DILexicalBlock(scope: !10120, file: !3, line: 1263, column: 3)
!10127 = !DILocation(line: 1263, column: 3, scope: !10126)
!10128 = !DILocation(line: 1263, column: 3, scope: !10129)
!10129 = distinct !DILexicalBlock(scope: !10126, file: !3, line: 1263, column: 3)
!10130 = !DILocation(line: 1263, column: 3, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10129, file: !3, line: 1263, column: 3)
!10132 = !DILocation(line: 1263, column: 3, scope: !10133)
!10133 = distinct !DILexicalBlock(scope: !10131, file: !3, line: 1263, column: 3)
!10134 = !DILocation(line: 1263, column: 3, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10131, file: !3, line: 1263, column: 3)
!10136 = !{i32 -2139093308, i32 -2139093279, i32 -2139093233, i32 -2139093175, i32 -2139093121, i32 -2139093067, i32 -2139093012, i32 -2139092981}
!10137 = !DILocation(line: 1263, column: 3, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10131, file: !3, line: 1263, column: 3)
!10139 = !{i32 -2139092579, i32 -2139092572, i32 -2139092520, i32 -2139092489, i32 -2139092459}
!10140 = !DILocation(line: 1263, column: 3, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10131, file: !3, line: 1263, column: 3)
!10142 = !DILocalVariable(name: "__ret_warn_on", scope: !10143, file: !3, line: 1264, type: !32)
!10143 = distinct !DILexicalBlock(scope: !10120, file: !3, line: 1264, column: 3)
!10144 = !DILocation(line: 1264, column: 3, scope: !10143)
!10145 = !DILocation(line: 1264, column: 3, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10143, file: !3, line: 1264, column: 3)
!10147 = !DILocation(line: 1264, column: 3, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !10146, file: !3, line: 1264, column: 3)
!10149 = !DILocation(line: 1264, column: 3, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10148, file: !3, line: 1264, column: 3)
!10151 = !DILocation(line: 1264, column: 3, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10148, file: !3, line: 1264, column: 3)
!10153 = !{i32 -2139091847, i32 -2139091818, i32 -2139091772, i32 -2139091714, i32 -2139091660, i32 -2139091606, i32 -2139091551, i32 -2139091520}
!10154 = !DILocation(line: 1264, column: 3, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10148, file: !3, line: 1264, column: 3)
!10156 = !{i32 -2139091118, i32 -2139091111, i32 -2139091059, i32 -2139091028, i32 -2139090998}
!10157 = !DILocation(line: 1264, column: 3, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10148, file: !3, line: 1264, column: 3)
!10159 = !DILocation(line: 1271, column: 7, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10120, file: !3, line: 1271, column: 7)
!10161 = !DILocation(line: 1271, column: 13, scope: !10160)
!10162 = !DILocation(line: 1271, column: 20, scope: !10160)
!10163 = !DILocation(line: 1271, column: 48, scope: !10160)
!10164 = !DILocation(line: 1272, column: 7, scope: !10160)
!10165 = !DILocation(line: 1272, column: 13, scope: !10160)
!10166 = !DILocation(line: 1272, column: 19, scope: !10160)
!10167 = !DILocation(line: 1271, column: 7, scope: !10120)
!10168 = !DILocation(line: 1273, column: 29, scope: !10160)
!10169 = !DILocation(line: 1273, column: 4, scope: !10160)
!10170 = !DILocation(line: 1275, column: 3, scope: !10120)
!10171 = !DILocation(line: 1275, column: 3, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10120, file: !3, line: 1275, column: 3)
!10173 = !DILocation(line: 1275, column: 3, scope: !10174)
!10174 = distinct !DILexicalBlock(scope: !10172, file: !3, line: 1275, column: 3)
!10175 = !DILocation(line: 1275, column: 3, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10172, file: !3, line: 1275, column: 3)
!10177 = !DILocation(line: 1276, column: 2, scope: !10120)
!10178 = !DILocalVariable(name: "__mptr", scope: !10179, file: !3, line: 1259, type: !591)
!10179 = distinct !DILexicalBlock(scope: !10117, file: !3, line: 1259, column: 2)
!10180 = !DILocation(line: 1259, column: 2, scope: !10179)
!10181 = !DILocation(line: 1259, column: 2, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10179, file: !3, line: 1259, column: 2)
!10183 = distinct !{!10183, !10110, !10184}
!10184 = !DILocation(line: 1276, column: 2, scope: !10106)
!10185 = !DILocation(line: 1278, column: 17, scope: !10096)
!10186 = !DILocation(line: 1278, column: 22, scope: !10096)
!10187 = !DILocation(line: 1278, column: 28, scope: !10096)
!10188 = !DILocation(line: 1278, column: 2, scope: !10096)
!10189 = !DILocation(line: 1279, column: 27, scope: !10096)
!10190 = !DILocation(line: 1279, column: 2, scope: !10096)
!10191 = !DILocation(line: 1281, column: 2, scope: !10096)
!10192 = !DILocation(line: 1282, column: 1, scope: !10096)
!10193 = distinct !DISubprogram(name: "device_links_busy", scope: !3, file: !3, line: 1298, type: !8670, scopeLine: 1299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10194 = !DILocalVariable(name: "dev", arg: 1, scope: !10193, file: !3, line: 1298, type: !4856)
!10195 = !DILocation(line: 1298, column: 39, scope: !10193)
!10196 = !DILocalVariable(name: "link", scope: !10193, file: !3, line: 1300, type: !7438)
!10197 = !DILocation(line: 1300, column: 22, scope: !10193)
!10198 = !DILocalVariable(name: "ret", scope: !10193, file: !3, line: 1301, type: !771)
!10199 = !DILocation(line: 1301, column: 7, scope: !10193)
!10200 = !DILocation(line: 1303, column: 2, scope: !10193)
!10201 = !DILocalVariable(name: "__mptr", scope: !10202, file: !3, line: 1305, type: !591)
!10202 = distinct !DILexicalBlock(scope: !10203, file: !3, line: 1305, column: 2)
!10203 = distinct !DILexicalBlock(scope: !10193, file: !3, line: 1305, column: 2)
!10204 = !DILocation(line: 1305, column: 2, scope: !10202)
!10205 = !DILocation(line: 1305, column: 2, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !10202, file: !3, line: 1305, column: 2)
!10207 = !DILocation(line: 1305, column: 2, scope: !10203)
!10208 = !DILocation(line: 1305, column: 2, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10203, file: !3, line: 1305, column: 2)
!10210 = !DILocation(line: 1306, column: 9, scope: !10211)
!10211 = distinct !DILexicalBlock(scope: !10212, file: !3, line: 1306, column: 7)
!10212 = distinct !DILexicalBlock(scope: !10209, file: !3, line: 1305, column: 59)
!10213 = !DILocation(line: 1306, column: 15, scope: !10211)
!10214 = !DILocation(line: 1306, column: 21, scope: !10211)
!10215 = !DILocation(line: 1306, column: 7, scope: !10212)
!10216 = !DILocation(line: 1307, column: 4, scope: !10211)
!10217 = !DILocation(line: 1309, column: 7, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10212, file: !3, line: 1309, column: 7)
!10219 = !DILocation(line: 1309, column: 13, scope: !10218)
!10220 = !DILocation(line: 1309, column: 20, scope: !10218)
!10221 = !DILocation(line: 1310, column: 7, scope: !10218)
!10222 = !DILocation(line: 1310, column: 10, scope: !10218)
!10223 = !DILocation(line: 1310, column: 16, scope: !10218)
!10224 = !DILocation(line: 1310, column: 23, scope: !10218)
!10225 = !DILocation(line: 1309, column: 7, scope: !10212)
!10226 = !DILocation(line: 1311, column: 8, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10218, file: !3, line: 1310, column: 43)
!10228 = !DILocation(line: 1312, column: 4, scope: !10227)
!10229 = !DILocation(line: 1314, column: 3, scope: !10212)
!10230 = !DILocation(line: 1314, column: 3, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10212, file: !3, line: 1314, column: 3)
!10232 = !DILocation(line: 1314, column: 3, scope: !10233)
!10233 = distinct !DILexicalBlock(scope: !10231, file: !3, line: 1314, column: 3)
!10234 = !DILocation(line: 1314, column: 3, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10231, file: !3, line: 1314, column: 3)
!10236 = !DILocation(line: 1315, column: 2, scope: !10212)
!10237 = !DILocalVariable(name: "__mptr", scope: !10238, file: !3, line: 1305, type: !591)
!10238 = distinct !DILexicalBlock(scope: !10209, file: !3, line: 1305, column: 2)
!10239 = !DILocation(line: 1305, column: 2, scope: !10238)
!10240 = !DILocation(line: 1305, column: 2, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10238, file: !3, line: 1305, column: 2)
!10242 = distinct !{!10242, !10207, !10243}
!10243 = !DILocation(line: 1315, column: 2, scope: !10203)
!10244 = !DILocation(line: 1317, column: 2, scope: !10193)
!10245 = !DILocation(line: 1317, column: 7, scope: !10193)
!10246 = !DILocation(line: 1317, column: 13, scope: !10193)
!10247 = !DILocation(line: 1317, column: 20, scope: !10193)
!10248 = !DILocation(line: 1319, column: 2, scope: !10193)
!10249 = !DILocation(line: 1320, column: 9, scope: !10193)
!10250 = !DILocation(line: 1320, column: 2, scope: !10193)
!10251 = distinct !DISubprogram(name: "device_links_unbind_consumers", scope: !3, file: !3, line: 1338, type: !4915, scopeLine: 1339, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10252 = !DILocalVariable(name: "dev", arg: 1, scope: !10251, file: !3, line: 1338, type: !4856)
!10253 = !DILocation(line: 1338, column: 51, scope: !10251)
!10254 = !DILocalVariable(name: "link", scope: !10251, file: !3, line: 1340, type: !7438)
!10255 = !DILocation(line: 1340, column: 22, scope: !10251)
!10256 = !DILocation(line: 1340, column: 2, scope: !10251)
!10257 = !DILabel(scope: !10251, name: "start", file: !3, line: 1342)
!10258 = !DILocation(line: 1342, column: 2, scope: !10251)
!10259 = !DILocation(line: 1343, column: 2, scope: !10251)
!10260 = !DILocalVariable(name: "__mptr", scope: !10261, file: !3, line: 1345, type: !591)
!10261 = distinct !DILexicalBlock(scope: !10262, file: !3, line: 1345, column: 2)
!10262 = distinct !DILexicalBlock(scope: !10251, file: !3, line: 1345, column: 2)
!10263 = !DILocation(line: 1345, column: 2, scope: !10261)
!10264 = !DILocation(line: 1345, column: 2, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !10261, file: !3, line: 1345, column: 2)
!10266 = !DILocation(line: 1345, column: 2, scope: !10262)
!10267 = !DILocation(line: 1345, column: 2, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10262, file: !3, line: 1345, column: 2)
!10269 = !DILocalVariable(name: "status", scope: !10270, file: !3, line: 1346, type: !7394)
!10270 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 1345, column: 59)
!10271 = !DILocation(line: 1346, column: 26, scope: !10270)
!10272 = !DILocation(line: 1348, column: 9, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10270, file: !3, line: 1348, column: 7)
!10274 = !DILocation(line: 1348, column: 15, scope: !10273)
!10275 = !DILocation(line: 1348, column: 21, scope: !10273)
!10276 = !DILocation(line: 1348, column: 40, scope: !10273)
!10277 = !DILocation(line: 1349, column: 7, scope: !10273)
!10278 = !DILocation(line: 1349, column: 13, scope: !10273)
!10279 = !DILocation(line: 1349, column: 19, scope: !10273)
!10280 = !DILocation(line: 1348, column: 7, scope: !10270)
!10281 = !DILocation(line: 1350, column: 4, scope: !10273)
!10282 = !DILocation(line: 1352, column: 12, scope: !10270)
!10283 = !DILocation(line: 1352, column: 18, scope: !10270)
!10284 = !DILocation(line: 1352, column: 10, scope: !10270)
!10285 = !DILocation(line: 1353, column: 7, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !10270, file: !3, line: 1353, column: 7)
!10287 = !DILocation(line: 1353, column: 14, scope: !10286)
!10288 = !DILocation(line: 1353, column: 7, scope: !10270)
!10289 = !DILocation(line: 1354, column: 4, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10286, file: !3, line: 1353, column: 42)
!10291 = !DILocation(line: 1356, column: 4, scope: !10290)
!10292 = !DILocation(line: 1357, column: 4, scope: !10290)
!10293 = !DILocation(line: 1359, column: 3, scope: !10270)
!10294 = !DILocation(line: 1359, column: 3, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10270, file: !3, line: 1359, column: 3)
!10296 = !DILocation(line: 1359, column: 3, scope: !10297)
!10297 = distinct !DILexicalBlock(scope: !10295, file: !3, line: 1359, column: 3)
!10298 = !DILocation(line: 1359, column: 3, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !10295, file: !3, line: 1359, column: 3)
!10300 = !DILocation(line: 1360, column: 7, scope: !10301)
!10301 = distinct !DILexicalBlock(scope: !10270, file: !3, line: 1360, column: 7)
!10302 = !DILocation(line: 1360, column: 14, scope: !10301)
!10303 = !DILocation(line: 1360, column: 7, scope: !10270)
!10304 = !DILocalVariable(name: "consumer", scope: !10305, file: !3, line: 1361, type: !4856)
!10305 = distinct !DILexicalBlock(scope: !10301, file: !3, line: 1360, column: 34)
!10306 = !DILocation(line: 1361, column: 19, scope: !10305)
!10307 = !DILocation(line: 1361, column: 30, scope: !10305)
!10308 = !DILocation(line: 1361, column: 36, scope: !10305)
!10309 = !DILocation(line: 1363, column: 15, scope: !10305)
!10310 = !DILocation(line: 1363, column: 4, scope: !10305)
!10311 = !DILocation(line: 1365, column: 4, scope: !10305)
!10312 = !DILocation(line: 1367, column: 35, scope: !10305)
!10313 = !DILocation(line: 1368, column: 14, scope: !10305)
!10314 = !DILocation(line: 1368, column: 24, scope: !10305)
!10315 = !DILocation(line: 1367, column: 4, scope: !10305)
!10316 = !DILocation(line: 1369, column: 15, scope: !10305)
!10317 = !DILocation(line: 1369, column: 4, scope: !10305)
!10318 = !DILocation(line: 1370, column: 4, scope: !10305)
!10319 = !DILocation(line: 1372, column: 2, scope: !10270)
!10320 = !DILocalVariable(name: "__mptr", scope: !10321, file: !3, line: 1345, type: !591)
!10321 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 1345, column: 2)
!10322 = !DILocation(line: 1345, column: 2, scope: !10321)
!10323 = !DILocation(line: 1345, column: 2, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10321, file: !3, line: 1345, column: 2)
!10325 = distinct !{!10325, !10266, !10326}
!10326 = !DILocation(line: 1372, column: 2, scope: !10262)
!10327 = !DILocation(line: 1374, column: 2, scope: !10251)
!10328 = !DILocation(line: 1375, column: 1, scope: !10251)
!10329 = distinct !DISubprogram(name: "fw_devlink_setup", scope: !3, file: !3, line: 1413, type: !7814, scopeLine: 1414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10330 = !DILocalVariable(name: "arg", arg: 1, scope: !10329, file: !3, line: 1413, type: !1038)
!10331 = !DILocation(line: 1413, column: 42, scope: !10329)
!10332 = !DILocation(line: 1415, column: 7, scope: !10333)
!10333 = distinct !DILexicalBlock(scope: !10329, file: !3, line: 1415, column: 6)
!10334 = !DILocation(line: 1415, column: 6, scope: !10329)
!10335 = !DILocation(line: 1416, column: 3, scope: !10333)
!10336 = !DILocation(line: 1418, column: 13, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10329, file: !3, line: 1418, column: 6)
!10338 = !DILocation(line: 1418, column: 6, scope: !10337)
!10339 = !DILocation(line: 1418, column: 25, scope: !10337)
!10340 = !DILocation(line: 1418, column: 6, scope: !10329)
!10341 = !DILocation(line: 1419, column: 20, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10337, file: !3, line: 1418, column: 31)
!10343 = !DILocation(line: 1420, column: 2, scope: !10342)
!10344 = !DILocation(line: 1420, column: 20, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10337, file: !3, line: 1420, column: 13)
!10346 = !DILocation(line: 1420, column: 13, scope: !10345)
!10347 = !DILocation(line: 1420, column: 39, scope: !10345)
!10348 = !DILocation(line: 1420, column: 13, scope: !10337)
!10349 = !DILocation(line: 1421, column: 20, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10345, file: !3, line: 1420, column: 45)
!10351 = !DILocation(line: 1422, column: 2, scope: !10350)
!10352 = !DILocation(line: 1422, column: 20, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10345, file: !3, line: 1422, column: 13)
!10354 = !DILocation(line: 1422, column: 13, scope: !10353)
!10355 = !DILocation(line: 1422, column: 31, scope: !10353)
!10356 = !DILocation(line: 1422, column: 13, scope: !10345)
!10357 = !DILocation(line: 1423, column: 20, scope: !10358)
!10358 = distinct !DILexicalBlock(scope: !10353, file: !3, line: 1422, column: 37)
!10359 = !DILocation(line: 1424, column: 2, scope: !10358)
!10360 = !DILocation(line: 1424, column: 20, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10353, file: !3, line: 1424, column: 13)
!10362 = !DILocation(line: 1424, column: 13, scope: !10361)
!10363 = !DILocation(line: 1424, column: 32, scope: !10361)
!10364 = !DILocation(line: 1424, column: 13, scope: !10353)
!10365 = !DILocation(line: 1425, column: 20, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10361, file: !3, line: 1424, column: 38)
!10367 = !DILocation(line: 1427, column: 2, scope: !10366)
!10368 = !DILocation(line: 1428, column: 2, scope: !10329)
!10369 = !DILocation(line: 1429, column: 1, scope: !10329)
!10370 = distinct !DISubprogram(name: "fw_devlink_get_flags", scope: !3, file: !3, line: 1432, type: !10371, scopeLine: 1433, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10371 = !DISubroutineType(types: !10372)
!10372 = !{!987}
!10373 = !DILocation(line: 1434, column: 9, scope: !10370)
!10374 = !DILocation(line: 1434, column: 2, scope: !10370)
!10375 = distinct !DISubprogram(name: "fw_devlink_pause", scope: !3, file: !3, line: 1533, type: !3809, scopeLine: 1534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10376 = !DILocation(line: 1535, column: 2, scope: !10375)
!10377 = !DILocation(line: 1536, column: 24, scope: !10375)
!10378 = !DILocation(line: 1537, column: 2, scope: !10375)
!10379 = !DILocation(line: 1538, column: 1, scope: !10375)
!10380 = distinct !DISubprogram(name: "fw_devlink_resume", scope: !3, file: !3, line: 1545, type: !3809, scopeLine: 1546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10381 = !DILocalVariable(name: "dev", scope: !10380, file: !3, line: 1547, type: !4856)
!10382 = !DILocation(line: 1547, column: 17, scope: !10380)
!10383 = !DILocalVariable(name: "tmp", scope: !10380, file: !3, line: 1547, type: !4856)
!10384 = !DILocation(line: 1547, column: 23, scope: !10380)
!10385 = !DILocalVariable(name: "probe_list", scope: !10380, file: !3, line: 1548, type: !284)
!10386 = !DILocation(line: 1548, column: 2, scope: !10380)
!10387 = !DILocation(line: 1550, column: 2, scope: !10380)
!10388 = !DILocation(line: 1551, column: 7, scope: !10389)
!10389 = distinct !DILexicalBlock(scope: !10380, file: !3, line: 1551, column: 6)
!10390 = !DILocation(line: 1551, column: 6, scope: !10380)
!10391 = !DILocalVariable(name: "__ret_warn_on", scope: !10392, file: !3, line: 1552, type: !32)
!10392 = distinct !DILexicalBlock(scope: !10393, file: !3, line: 1552, column: 3)
!10393 = distinct !DILexicalBlock(scope: !10389, file: !3, line: 1551, column: 31)
!10394 = !DILocation(line: 1552, column: 3, scope: !10392)
!10395 = !DILocation(line: 1552, column: 3, scope: !10396)
!10396 = distinct !DILexicalBlock(scope: !10392, file: !3, line: 1552, column: 3)
!10397 = !DILocation(line: 1552, column: 3, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !10396, file: !3, line: 1552, column: 3)
!10399 = !DILocation(line: 1552, column: 3, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10398, file: !3, line: 1552, column: 3)
!10401 = !DILocation(line: 1552, column: 3, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !10398, file: !3, line: 1552, column: 3)
!10403 = !DILocation(line: 1552, column: 3, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10402, file: !3, line: 1552, column: 3)
!10405 = !DILocation(line: 1552, column: 3, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10402, file: !3, line: 1552, column: 3)
!10407 = !{i32 -2139061222, i32 -2139061193, i32 -2139061147, i32 -2139061089, i32 -2139061035, i32 -2139060981, i32 -2139060926, i32 -2139060895}
!10408 = !DILocation(line: 1552, column: 3, scope: !10409)
!10409 = distinct !DILexicalBlock(scope: !10402, file: !3, line: 1552, column: 3)
!10410 = !{i32 -2139060482, i32 -2139060475, i32 -2139060423, i32 -2139060392, i32 -2139060362}
!10411 = !DILocation(line: 1552, column: 3, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10402, file: !3, line: 1552, column: 3)
!10413 = !DILocation(line: 1552, column: 3, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10398, file: !3, line: 1552, column: 3)
!10415 = !DILocation(line: 1553, column: 3, scope: !10393)
!10416 = !DILocation(line: 1556, column: 24, scope: !10380)
!10417 = !DILocation(line: 1557, column: 6, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10380, file: !3, line: 1557, column: 6)
!10419 = !DILocation(line: 1557, column: 6, scope: !10380)
!10420 = !DILocation(line: 1558, column: 3, scope: !10418)
!10421 = !DILocation(line: 1560, column: 2, scope: !10380)
!10422 = !DILocation(line: 1561, column: 2, scope: !10380)
!10423 = !DILabel(scope: !10380, name: "out", file: !3, line: 1562)
!10424 = !DILocation(line: 1562, column: 1, scope: !10380)
!10425 = !DILocation(line: 1563, column: 2, scope: !10380)
!10426 = !DILocalVariable(name: "__mptr", scope: !10427, file: !3, line: 1570, type: !591)
!10427 = distinct !DILexicalBlock(scope: !10428, file: !3, line: 1570, column: 2)
!10428 = distinct !DILexicalBlock(scope: !10380, file: !3, line: 1570, column: 2)
!10429 = !DILocation(line: 1570, column: 2, scope: !10427)
!10430 = !DILocation(line: 1570, column: 2, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10427, file: !3, line: 1570, column: 2)
!10432 = !DILocation(line: 1570, column: 2, scope: !10428)
!10433 = !DILocalVariable(name: "__mptr", scope: !10434, file: !3, line: 1570, type: !591)
!10434 = distinct !DILexicalBlock(scope: !10428, file: !3, line: 1570, column: 2)
!10435 = !DILocation(line: 1570, column: 2, scope: !10434)
!10436 = !DILocation(line: 1570, column: 2, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10434, file: !3, line: 1570, column: 2)
!10438 = !DILocation(line: 1570, column: 2, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10428, file: !3, line: 1570, column: 2)
!10440 = !DILocation(line: 1571, column: 18, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10439, file: !3, line: 1570, column: 68)
!10442 = !DILocation(line: 1571, column: 23, scope: !10441)
!10443 = !DILocation(line: 1571, column: 29, scope: !10441)
!10444 = !DILocation(line: 1571, column: 3, scope: !10441)
!10445 = !DILocation(line: 1572, column: 20, scope: !10441)
!10446 = !DILocation(line: 1572, column: 3, scope: !10441)
!10447 = !DILocation(line: 1573, column: 2, scope: !10441)
!10448 = !DILocalVariable(name: "__mptr", scope: !10449, file: !3, line: 1570, type: !591)
!10449 = distinct !DILexicalBlock(scope: !10439, file: !3, line: 1570, column: 2)
!10450 = !DILocation(line: 1570, column: 2, scope: !10449)
!10451 = !DILocation(line: 1570, column: 2, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10449, file: !3, line: 1570, column: 2)
!10453 = distinct !{!10453, !10432, !10454}
!10454 = !DILocation(line: 1573, column: 2, scope: !10428)
!10455 = !DILocation(line: 1574, column: 1, scope: !10380)
!10456 = distinct !DISubprogram(name: "device_link_add_missing_supplier_links", scope: !3, file: !3, line: 752, type: !3809, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10457 = !DILocalVariable(name: "dev", scope: !10456, file: !3, line: 754, type: !4856)
!10458 = !DILocation(line: 754, column: 17, scope: !10456)
!10459 = !DILocalVariable(name: "tmp", scope: !10456, file: !3, line: 754, type: !4856)
!10460 = !DILocation(line: 754, column: 23, scope: !10456)
!10461 = !DILocation(line: 756, column: 2, scope: !10456)
!10462 = !DILocalVariable(name: "__mptr", scope: !10463, file: !3, line: 757, type: !591)
!10463 = distinct !DILexicalBlock(scope: !10464, file: !3, line: 757, column: 2)
!10464 = distinct !DILexicalBlock(scope: !10456, file: !3, line: 757, column: 2)
!10465 = !DILocation(line: 757, column: 2, scope: !10463)
!10466 = !DILocation(line: 757, column: 2, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10463, file: !3, line: 757, column: 2)
!10468 = !DILocation(line: 757, column: 2, scope: !10464)
!10469 = !DILocalVariable(name: "__mptr", scope: !10470, file: !3, line: 757, type: !591)
!10470 = distinct !DILexicalBlock(scope: !10464, file: !3, line: 757, column: 2)
!10471 = !DILocation(line: 757, column: 2, scope: !10470)
!10472 = !DILocation(line: 757, column: 2, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10470, file: !3, line: 757, column: 2)
!10474 = !DILocation(line: 757, column: 2, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10464, file: !3, line: 757, column: 2)
!10476 = !DILocalVariable(name: "ret", scope: !10477, file: !3, line: 759, type: !32)
!10477 = distinct !DILexicalBlock(scope: !10475, file: !3, line: 758, column: 29)
!10478 = !DILocation(line: 759, column: 7, scope: !10477)
!10479 = !DILocation(line: 759, column: 13, scope: !10477)
!10480 = !DILocation(line: 760, column: 8, scope: !10481)
!10481 = distinct !DILexicalBlock(scope: !10477, file: !3, line: 760, column: 7)
!10482 = !DILocation(line: 760, column: 7, scope: !10477)
!10483 = !DILocation(line: 761, column: 19, scope: !10481)
!10484 = !DILocation(line: 761, column: 24, scope: !10481)
!10485 = !DILocation(line: 761, column: 30, scope: !10481)
!10486 = !DILocation(line: 761, column: 4, scope: !10481)
!10487 = !DILocation(line: 762, column: 12, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10481, file: !3, line: 762, column: 12)
!10489 = !DILocation(line: 762, column: 16, scope: !10488)
!10490 = !DILocation(line: 762, column: 27, scope: !10488)
!10491 = !DILocation(line: 762, column: 30, scope: !10488)
!10492 = !DILocation(line: 762, column: 12, scope: !10481)
!10493 = !DILocation(line: 763, column: 4, scope: !10488)
!10494 = !DILocation(line: 763, column: 9, scope: !10488)
!10495 = !DILocation(line: 763, column: 15, scope: !10488)
!10496 = !DILocation(line: 763, column: 30, scope: !10488)
!10497 = !DILocation(line: 764, column: 2, scope: !10477)
!10498 = !DILocalVariable(name: "__mptr", scope: !10499, file: !3, line: 757, type: !591)
!10499 = distinct !DILexicalBlock(scope: !10475, file: !3, line: 757, column: 2)
!10500 = !DILocation(line: 757, column: 2, scope: !10499)
!10501 = !DILocation(line: 757, column: 2, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !10499, file: !3, line: 757, column: 2)
!10503 = distinct !{!10503, !10468, !10504}
!10504 = !DILocation(line: 764, column: 2, scope: !10464)
!10505 = !DILocation(line: 765, column: 2, scope: !10456)
!10506 = !DILocation(line: 766, column: 1, scope: !10456)
!10507 = distinct !DISubprogram(name: "list_splice_tail_init", scope: !9076, file: !9076, line: 495, type: !9183, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10508 = !DILocalVariable(name: "list", arg: 1, scope: !10507, file: !9076, line: 495, type: !287)
!10509 = !DILocation(line: 495, column: 60, scope: !10507)
!10510 = !DILocalVariable(name: "head", arg: 2, scope: !10507, file: !9076, line: 496, type: !287)
!10511 = !DILocation(line: 496, column: 25, scope: !10507)
!10512 = !DILocation(line: 498, column: 18, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10507, file: !9076, line: 498, column: 6)
!10514 = !DILocation(line: 498, column: 7, scope: !10513)
!10515 = !DILocation(line: 498, column: 6, scope: !10507)
!10516 = !DILocation(line: 499, column: 17, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10513, file: !9076, line: 498, column: 25)
!10518 = !DILocation(line: 499, column: 23, scope: !10517)
!10519 = !DILocation(line: 499, column: 29, scope: !10517)
!10520 = !DILocation(line: 499, column: 35, scope: !10517)
!10521 = !DILocation(line: 499, column: 3, scope: !10517)
!10522 = !DILocation(line: 500, column: 18, scope: !10517)
!10523 = !DILocation(line: 500, column: 3, scope: !10517)
!10524 = !DILocation(line: 501, column: 2, scope: !10517)
!10525 = !DILocation(line: 502, column: 1, scope: !10507)
!10526 = distinct !DISubprogram(name: "lock_device_hotplug", scope: !3, file: !3, line: 1585, type: !3809, scopeLine: 1586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10527 = !DILocation(line: 1587, column: 2, scope: !10526)
!10528 = !DILocation(line: 1588, column: 1, scope: !10526)
!10529 = distinct !DISubprogram(name: "unlock_device_hotplug", scope: !3, file: !3, line: 1590, type: !3809, scopeLine: 1591, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10530 = !DILocation(line: 1592, column: 2, scope: !10529)
!10531 = !DILocation(line: 1593, column: 1, scope: !10529)
!10532 = distinct !DISubprogram(name: "lock_device_hotplug_sysfs", scope: !3, file: !3, line: 1595, type: !7842, scopeLine: 1596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10533 = !DILocation(line: 1597, column: 6, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 1597, column: 6)
!10535 = !DILocation(line: 1597, column: 6, scope: !10532)
!10536 = !DILocation(line: 1598, column: 3, scope: !10534)
!10537 = !DILocation(line: 1601, column: 2, scope: !10532)
!10538 = !DILocation(line: 1602, column: 9, scope: !10532)
!10539 = !DILocation(line: 1602, column: 2, scope: !10532)
!10540 = !DILocation(line: 1603, column: 1, scope: !10532)
!10541 = distinct !DISubprogram(name: "restart_syscall", scope: !3690, file: !3690, line: 350, type: !7842, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10542 = !DILocalVariable(name: "pscr_ret__", scope: !10543, file: !10544, line: 15, type: !2326)
!10543 = distinct !DILexicalBlock(scope: !10545, file: !10544, line: 15, column: 9)
!10544 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!10545 = distinct !DISubprogram(name: "get_current", scope: !10544, file: !10544, line: 13, type: !10546, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10546 = !DISubroutineType(types: !10547)
!10547 = !{!2326}
!10548 = !DILocation(line: 15, column: 9, scope: !10543, inlinedAt: !10549)
!10549 = distinct !DILocation(line: 352, column: 22, scope: !10541)
!10550 = !DILocalVariable(name: "__vpp_verify", scope: !10551, file: !10544, line: 15, type: !3258)
!10551 = distinct !DILexicalBlock(scope: !10543, file: !10544, line: 15, column: 9)
!10552 = !DILocation(line: 15, column: 9, scope: !10551, inlinedAt: !10549)
!10553 = !DILocalVariable(name: "pfo_val__", scope: !10554, file: !10544, line: 15, type: !331)
!10554 = distinct !DILexicalBlock(scope: !10543, file: !10544, line: 15, column: 9)
!10555 = !DILocation(line: 15, column: 9, scope: !10554, inlinedAt: !10549)
!10556 = !{i32 -2146561180}
!10557 = !DILocation(line: 352, column: 2, scope: !10541)
!10558 = !DILocation(line: 353, column: 2, scope: !10541)
!10559 = distinct !DISubprogram(name: "dev_driver_string", scope: !3, file: !3, line: 1646, type: !9141, scopeLine: 1647, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10560 = !DILocalVariable(name: "dev", arg: 1, scope: !10559, file: !3, line: 1646, type: !5370)
!10561 = !DILocation(line: 1646, column: 52, scope: !10559)
!10562 = !DILocalVariable(name: "drv", scope: !10559, file: !3, line: 1648, type: !4885)
!10563 = !DILocation(line: 1648, column: 24, scope: !10559)
!10564 = !DILocation(line: 1654, column: 8, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10559, file: !3, line: 1654, column: 8)
!10566 = !DILocation(line: 1654, column: 8, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 1654, column: 8)
!10568 = !DILocation(line: 1654, column: 6, scope: !10559)
!10569 = !DILocation(line: 1655, column: 9, scope: !10559)
!10570 = !DILocation(line: 1655, column: 15, scope: !10559)
!10571 = !DILocation(line: 1655, column: 20, scope: !10559)
!10572 = !DILocation(line: 1656, column: 5, scope: !10559)
!10573 = !DILocation(line: 1656, column: 10, scope: !10559)
!10574 = !DILocation(line: 1656, column: 16, scope: !10559)
!10575 = !DILocation(line: 1656, column: 21, scope: !10559)
!10576 = !DILocation(line: 1656, column: 26, scope: !10559)
!10577 = !DILocation(line: 1657, column: 5, scope: !10559)
!10578 = !DILocation(line: 1657, column: 10, scope: !10559)
!10579 = !DILocation(line: 1657, column: 18, scope: !10559)
!10580 = !DILocation(line: 1657, column: 23, scope: !10559)
!10581 = !DILocation(line: 1657, column: 30, scope: !10559)
!10582 = !DILocation(line: 1655, column: 2, scope: !10559)
!10583 = distinct !DISubprogram(name: "device_store_ulong", scope: !3, file: !3, line: 1698, type: !7471, scopeLine: 1701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10584 = !DILocalVariable(name: "dev", arg: 1, scope: !10583, file: !3, line: 1698, type: !4856)
!10585 = !DILocation(line: 1698, column: 43, scope: !10583)
!10586 = !DILocalVariable(name: "attr", arg: 2, scope: !10583, file: !3, line: 1699, type: !7468)
!10587 = !DILocation(line: 1699, column: 32, scope: !10583)
!10588 = !DILocalVariable(name: "buf", arg: 3, scope: !10583, file: !3, line: 1700, type: !292)
!10589 = !DILocation(line: 1700, column: 19, scope: !10583)
!10590 = !DILocalVariable(name: "size", arg: 4, scope: !10583, file: !3, line: 1700, type: !1039)
!10591 = !DILocation(line: 1700, column: 31, scope: !10583)
!10592 = !DILocalVariable(name: "ea", scope: !10583, file: !3, line: 1702, type: !7457)
!10593 = !DILocation(line: 1702, column: 28, scope: !10583)
!10594 = !DILocalVariable(name: "__mptr", scope: !10595, file: !3, line: 1702, type: !591)
!10595 = distinct !DILexicalBlock(scope: !10583, file: !3, line: 1702, column: 33)
!10596 = !DILocation(line: 1702, column: 33, scope: !10595)
!10597 = !DILocation(line: 1702, column: 33, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10595, file: !3, line: 1702, column: 33)
!10599 = !DILocalVariable(name: "ret", scope: !10583, file: !3, line: 1703, type: !32)
!10600 = !DILocation(line: 1703, column: 6, scope: !10583)
!10601 = !DILocalVariable(name: "new", scope: !10583, file: !3, line: 1704, type: !312)
!10602 = !DILocation(line: 1704, column: 16, scope: !10583)
!10603 = !DILocation(line: 1706, column: 17, scope: !10583)
!10604 = !DILocation(line: 1706, column: 8, scope: !10583)
!10605 = !DILocation(line: 1706, column: 6, scope: !10583)
!10606 = !DILocation(line: 1707, column: 6, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10583, file: !3, line: 1707, column: 6)
!10608 = !DILocation(line: 1707, column: 6, scope: !10583)
!10609 = !DILocation(line: 1708, column: 10, scope: !10607)
!10610 = !DILocation(line: 1708, column: 3, scope: !10607)
!10611 = !DILocation(line: 1709, column: 32, scope: !10583)
!10612 = !DILocation(line: 1709, column: 21, scope: !10583)
!10613 = !DILocation(line: 1709, column: 25, scope: !10583)
!10614 = !DILocation(line: 1709, column: 3, scope: !10583)
!10615 = !DILocation(line: 1709, column: 30, scope: !10583)
!10616 = !DILocation(line: 1711, column: 9, scope: !10583)
!10617 = !DILocation(line: 1711, column: 2, scope: !10583)
!10618 = !DILocation(line: 1712, column: 1, scope: !10583)
!10619 = distinct !DISubprogram(name: "kstrtoul", scope: !10620, file: !10620, line: 351, type: !10621, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10620 = !DIFile(filename: "./include/linux/kernel.h", directory: "/home/lizy2001/genbc/linux")
!10621 = !DISubroutineType(types: !10622)
!10622 = !{!32, !292, !7, !3439}
!10623 = !DILocalVariable(name: "s", arg: 1, scope: !10619, file: !10620, line: 351, type: !292)
!10624 = !DILocation(line: 351, column: 53, scope: !10619)
!10625 = !DILocalVariable(name: "base", arg: 2, scope: !10619, file: !10620, line: 351, type: !7)
!10626 = !DILocation(line: 351, column: 69, scope: !10619)
!10627 = !DILocalVariable(name: "res", arg: 3, scope: !10619, file: !10620, line: 351, type: !3439)
!10628 = !DILocation(line: 351, column: 90, scope: !10619)
!10629 = !DILocation(line: 359, column: 20, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10619, file: !10620, line: 357, column: 6)
!10631 = !DILocation(line: 359, column: 23, scope: !10630)
!10632 = !DILocation(line: 359, column: 51, scope: !10630)
!10633 = !DILocation(line: 359, column: 10, scope: !10630)
!10634 = !DILocation(line: 359, column: 3, scope: !10630)
!10635 = distinct !DISubprogram(name: "device_show_ulong", scope: !3, file: !3, line: 1715, type: !7466, scopeLine: 1718, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10636 = !DILocalVariable(name: "dev", arg: 1, scope: !10635, file: !3, line: 1715, type: !4856)
!10637 = !DILocation(line: 1715, column: 42, scope: !10635)
!10638 = !DILocalVariable(name: "attr", arg: 2, scope: !10635, file: !3, line: 1716, type: !7468)
!10639 = !DILocation(line: 1716, column: 31, scope: !10635)
!10640 = !DILocalVariable(name: "buf", arg: 3, scope: !10635, file: !3, line: 1717, type: !1038)
!10641 = !DILocation(line: 1717, column: 12, scope: !10635)
!10642 = !DILocalVariable(name: "ea", scope: !10635, file: !3, line: 1719, type: !7457)
!10643 = !DILocation(line: 1719, column: 28, scope: !10635)
!10644 = !DILocalVariable(name: "__mptr", scope: !10645, file: !3, line: 1719, type: !591)
!10645 = distinct !DILexicalBlock(scope: !10635, file: !3, line: 1719, column: 33)
!10646 = !DILocation(line: 1719, column: 33, scope: !10645)
!10647 = !DILocation(line: 1719, column: 33, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10645, file: !3, line: 1719, column: 33)
!10649 = !DILocation(line: 1720, column: 20, scope: !10635)
!10650 = !DILocation(line: 1720, column: 53, scope: !10635)
!10651 = !DILocation(line: 1720, column: 57, scope: !10635)
!10652 = !DILocation(line: 1720, column: 35, scope: !10635)
!10653 = !DILocation(line: 1720, column: 34, scope: !10635)
!10654 = !DILocation(line: 1720, column: 9, scope: !10635)
!10655 = !DILocation(line: 1720, column: 2, scope: !10635)
!10656 = distinct !DISubprogram(name: "device_store_int", scope: !3, file: !3, line: 1724, type: !7471, scopeLine: 1727, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10657 = !DILocalVariable(name: "dev", arg: 1, scope: !10656, file: !3, line: 1724, type: !4856)
!10658 = !DILocation(line: 1724, column: 41, scope: !10656)
!10659 = !DILocalVariable(name: "attr", arg: 2, scope: !10656, file: !3, line: 1725, type: !7468)
!10660 = !DILocation(line: 1725, column: 30, scope: !10656)
!10661 = !DILocalVariable(name: "buf", arg: 3, scope: !10656, file: !3, line: 1726, type: !292)
!10662 = !DILocation(line: 1726, column: 17, scope: !10656)
!10663 = !DILocalVariable(name: "size", arg: 4, scope: !10656, file: !3, line: 1726, type: !1039)
!10664 = !DILocation(line: 1726, column: 29, scope: !10656)
!10665 = !DILocalVariable(name: "ea", scope: !10656, file: !3, line: 1728, type: !7457)
!10666 = !DILocation(line: 1728, column: 28, scope: !10656)
!10667 = !DILocalVariable(name: "__mptr", scope: !10668, file: !3, line: 1728, type: !591)
!10668 = distinct !DILexicalBlock(scope: !10656, file: !3, line: 1728, column: 33)
!10669 = !DILocation(line: 1728, column: 33, scope: !10668)
!10670 = !DILocation(line: 1728, column: 33, scope: !10671)
!10671 = distinct !DILexicalBlock(scope: !10668, file: !3, line: 1728, column: 33)
!10672 = !DILocalVariable(name: "ret", scope: !10656, file: !3, line: 1729, type: !32)
!10673 = !DILocation(line: 1729, column: 6, scope: !10656)
!10674 = !DILocalVariable(name: "new", scope: !10656, file: !3, line: 1730, type: !998)
!10675 = !DILocation(line: 1730, column: 7, scope: !10656)
!10676 = !DILocation(line: 1732, column: 16, scope: !10656)
!10677 = !DILocation(line: 1732, column: 8, scope: !10656)
!10678 = !DILocation(line: 1732, column: 6, scope: !10656)
!10679 = !DILocation(line: 1733, column: 6, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10656, file: !3, line: 1733, column: 6)
!10681 = !DILocation(line: 1733, column: 6, scope: !10656)
!10682 = !DILocation(line: 1734, column: 10, scope: !10680)
!10683 = !DILocation(line: 1734, column: 3, scope: !10680)
!10684 = !DILocation(line: 1736, column: 6, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10656, file: !3, line: 1736, column: 6)
!10686 = !DILocation(line: 1736, column: 10, scope: !10685)
!10687 = !DILocation(line: 1736, column: 20, scope: !10685)
!10688 = !DILocation(line: 1736, column: 23, scope: !10685)
!10689 = !DILocation(line: 1736, column: 27, scope: !10685)
!10690 = !DILocation(line: 1736, column: 6, scope: !10656)
!10691 = !DILocation(line: 1737, column: 3, scope: !10685)
!10692 = !DILocation(line: 1738, column: 22, scope: !10656)
!10693 = !DILocation(line: 1738, column: 11, scope: !10656)
!10694 = !DILocation(line: 1738, column: 15, scope: !10656)
!10695 = !DILocation(line: 1738, column: 3, scope: !10656)
!10696 = !DILocation(line: 1738, column: 20, scope: !10656)
!10697 = !DILocation(line: 1740, column: 9, scope: !10656)
!10698 = !DILocation(line: 1740, column: 2, scope: !10656)
!10699 = !DILocation(line: 1741, column: 1, scope: !10656)
!10700 = distinct !DISubprogram(name: "kstrtol", scope: !10620, file: !10620, line: 379, type: !10701, scopeLine: 380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10701 = !DISubroutineType(types: !10702)
!10702 = !{!32, !292, !7, !10703}
!10703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!10704 = !DILocalVariable(name: "s", arg: 1, scope: !10700, file: !10620, line: 379, type: !292)
!10705 = !DILocation(line: 379, column: 52, scope: !10700)
!10706 = !DILocalVariable(name: "base", arg: 2, scope: !10700, file: !10620, line: 379, type: !7)
!10707 = !DILocation(line: 379, column: 68, scope: !10700)
!10708 = !DILocalVariable(name: "res", arg: 3, scope: !10700, file: !10620, line: 379, type: !10703)
!10709 = !DILocation(line: 379, column: 80, scope: !10700)
!10710 = !DILocation(line: 387, column: 19, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10700, file: !10620, line: 385, column: 6)
!10712 = !DILocation(line: 387, column: 22, scope: !10711)
!10713 = !DILocation(line: 387, column: 41, scope: !10711)
!10714 = !DILocation(line: 387, column: 10, scope: !10711)
!10715 = !DILocation(line: 387, column: 3, scope: !10711)
!10716 = distinct !DISubprogram(name: "device_show_int", scope: !3, file: !3, line: 1744, type: !7466, scopeLine: 1747, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10717 = !DILocalVariable(name: "dev", arg: 1, scope: !10716, file: !3, line: 1744, type: !4856)
!10718 = !DILocation(line: 1744, column: 40, scope: !10716)
!10719 = !DILocalVariable(name: "attr", arg: 2, scope: !10716, file: !3, line: 1745, type: !7468)
!10720 = !DILocation(line: 1745, column: 29, scope: !10716)
!10721 = !DILocalVariable(name: "buf", arg: 3, scope: !10716, file: !3, line: 1746, type: !1038)
!10722 = !DILocation(line: 1746, column: 10, scope: !10716)
!10723 = !DILocalVariable(name: "ea", scope: !10716, file: !3, line: 1748, type: !7457)
!10724 = !DILocation(line: 1748, column: 28, scope: !10716)
!10725 = !DILocalVariable(name: "__mptr", scope: !10726, file: !3, line: 1748, type: !591)
!10726 = distinct !DILexicalBlock(scope: !10716, file: !3, line: 1748, column: 33)
!10727 = !DILocation(line: 1748, column: 33, scope: !10726)
!10728 = !DILocation(line: 1748, column: 33, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10726, file: !3, line: 1748, column: 33)
!10730 = !DILocation(line: 1750, column: 20, scope: !10716)
!10731 = !DILocation(line: 1750, column: 42, scope: !10716)
!10732 = !DILocation(line: 1750, column: 46, scope: !10716)
!10733 = !DILocation(line: 1750, column: 34, scope: !10716)
!10734 = !DILocation(line: 1750, column: 33, scope: !10716)
!10735 = !DILocation(line: 1750, column: 9, scope: !10716)
!10736 = !DILocation(line: 1750, column: 2, scope: !10716)
!10737 = distinct !DISubprogram(name: "device_store_bool", scope: !3, file: !3, line: 1754, type: !7471, scopeLine: 1756, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10738 = !DILocalVariable(name: "dev", arg: 1, scope: !10737, file: !3, line: 1754, type: !4856)
!10739 = !DILocation(line: 1754, column: 42, scope: !10737)
!10740 = !DILocalVariable(name: "attr", arg: 2, scope: !10737, file: !3, line: 1754, type: !7468)
!10741 = !DILocation(line: 1754, column: 72, scope: !10737)
!10742 = !DILocalVariable(name: "buf", arg: 3, scope: !10737, file: !3, line: 1755, type: !292)
!10743 = !DILocation(line: 1755, column: 18, scope: !10737)
!10744 = !DILocalVariable(name: "size", arg: 4, scope: !10737, file: !3, line: 1755, type: !1039)
!10745 = !DILocation(line: 1755, column: 30, scope: !10737)
!10746 = !DILocalVariable(name: "ea", scope: !10737, file: !3, line: 1757, type: !7457)
!10747 = !DILocation(line: 1757, column: 28, scope: !10737)
!10748 = !DILocalVariable(name: "__mptr", scope: !10749, file: !3, line: 1757, type: !591)
!10749 = distinct !DILexicalBlock(scope: !10737, file: !3, line: 1757, column: 33)
!10750 = !DILocation(line: 1757, column: 33, scope: !10749)
!10751 = !DILocation(line: 1757, column: 33, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10749, file: !3, line: 1757, column: 33)
!10753 = !DILocation(line: 1759, column: 16, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10737, file: !3, line: 1759, column: 6)
!10755 = !DILocation(line: 1759, column: 21, scope: !10754)
!10756 = !DILocation(line: 1759, column: 25, scope: !10754)
!10757 = !DILocation(line: 1759, column: 6, scope: !10754)
!10758 = !DILocation(line: 1759, column: 30, scope: !10754)
!10759 = !DILocation(line: 1759, column: 6, scope: !10737)
!10760 = !DILocation(line: 1760, column: 3, scope: !10754)
!10761 = !DILocation(line: 1762, column: 9, scope: !10737)
!10762 = !DILocation(line: 1762, column: 2, scope: !10737)
!10763 = !DILocation(line: 1763, column: 1, scope: !10737)
!10764 = distinct !DISubprogram(name: "strtobool", scope: !10765, file: !10765, line: 187, type: !10766, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10765 = !DIFile(filename: "./include/linux/string.h", directory: "/home/lizy2001/genbc/linux")
!10766 = !DISubroutineType(types: !10767)
!10767 = !{!32, !292, !2007}
!10768 = !DILocalVariable(name: "s", arg: 1, scope: !10764, file: !10765, line: 187, type: !292)
!10769 = !DILocation(line: 187, column: 41, scope: !10764)
!10770 = !DILocalVariable(name: "res", arg: 2, scope: !10764, file: !10765, line: 187, type: !2007)
!10771 = !DILocation(line: 187, column: 50, scope: !10764)
!10772 = !DILocation(line: 189, column: 20, scope: !10764)
!10773 = !DILocation(line: 189, column: 23, scope: !10764)
!10774 = !DILocation(line: 189, column: 9, scope: !10764)
!10775 = !DILocation(line: 189, column: 2, scope: !10764)
!10776 = distinct !DISubprogram(name: "device_show_bool", scope: !3, file: !3, line: 1766, type: !7466, scopeLine: 1768, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10777 = !DILocalVariable(name: "dev", arg: 1, scope: !10776, file: !3, line: 1766, type: !4856)
!10778 = !DILocation(line: 1766, column: 41, scope: !10776)
!10779 = !DILocalVariable(name: "attr", arg: 2, scope: !10776, file: !3, line: 1766, type: !7468)
!10780 = !DILocation(line: 1766, column: 71, scope: !10776)
!10781 = !DILocalVariable(name: "buf", arg: 3, scope: !10776, file: !3, line: 1767, type: !1038)
!10782 = !DILocation(line: 1767, column: 11, scope: !10776)
!10783 = !DILocalVariable(name: "ea", scope: !10776, file: !3, line: 1769, type: !7457)
!10784 = !DILocation(line: 1769, column: 28, scope: !10776)
!10785 = !DILocalVariable(name: "__mptr", scope: !10786, file: !3, line: 1769, type: !591)
!10786 = distinct !DILexicalBlock(scope: !10776, file: !3, line: 1769, column: 33)
!10787 = !DILocation(line: 1769, column: 33, scope: !10786)
!10788 = !DILocation(line: 1769, column: 33, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10786, file: !3, line: 1769, column: 33)
!10790 = !DILocation(line: 1771, column: 20, scope: !10776)
!10791 = !DILocation(line: 1771, column: 43, scope: !10776)
!10792 = !DILocation(line: 1771, column: 47, scope: !10776)
!10793 = !DILocation(line: 1771, column: 33, scope: !10776)
!10794 = !DILocation(line: 1771, column: 9, scope: !10776)
!10795 = !DILocation(line: 1771, column: 2, scope: !10776)
!10796 = distinct !DISubprogram(name: "device_add_groups", scope: !3, file: !3, line: 2028, type: !10797, scopeLine: 2029, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10797 = !DISubroutineType(types: !10798)
!10798 = !{!32, !4856, !4650}
!10799 = !DILocalVariable(name: "dev", arg: 1, scope: !10796, file: !3, line: 2028, type: !4856)
!10800 = !DILocation(line: 2028, column: 38, scope: !10796)
!10801 = !DILocalVariable(name: "groups", arg: 2, scope: !10796, file: !3, line: 2028, type: !4650)
!10802 = !DILocation(line: 2028, column: 74, scope: !10796)
!10803 = !DILocation(line: 2030, column: 30, scope: !10796)
!10804 = !DILocation(line: 2030, column: 35, scope: !10796)
!10805 = !DILocation(line: 2030, column: 41, scope: !10796)
!10806 = !DILocation(line: 2030, column: 9, scope: !10796)
!10807 = !DILocation(line: 2030, column: 2, scope: !10796)
!10808 = distinct !DISubprogram(name: "device_remove_groups", scope: !3, file: !3, line: 2034, type: !10809, scopeLine: 2036, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10809 = !DISubroutineType(types: !10810)
!10810 = !{null, !4856, !4650}
!10811 = !DILocalVariable(name: "dev", arg: 1, scope: !10808, file: !3, line: 2034, type: !4856)
!10812 = !DILocation(line: 2034, column: 42, scope: !10808)
!10813 = !DILocalVariable(name: "groups", arg: 2, scope: !10808, file: !3, line: 2035, type: !4650)
!10814 = !DILocation(line: 2035, column: 37, scope: !10808)
!10815 = !DILocation(line: 2037, column: 23, scope: !10808)
!10816 = !DILocation(line: 2037, column: 28, scope: !10808)
!10817 = !DILocation(line: 2037, column: 34, scope: !10808)
!10818 = !DILocation(line: 2037, column: 2, scope: !10808)
!10819 = !DILocation(line: 2038, column: 1, scope: !10808)
!10820 = distinct !DISubprogram(name: "devm_device_add_group", scope: !3, file: !3, line: 2079, type: !10821, scopeLine: 2080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10821 = !DISubroutineType(types: !10822)
!10822 = !{!32, !4856, !4651}
!10823 = !DILocalVariable(name: "dev", arg: 1, scope: !10820, file: !3, line: 2079, type: !4856)
!10824 = !DILocation(line: 2079, column: 42, scope: !10820)
!10825 = !DILocalVariable(name: "grp", arg: 2, scope: !10820, file: !3, line: 2079, type: !4651)
!10826 = !DILocation(line: 2079, column: 77, scope: !10820)
!10827 = !DILocalVariable(name: "devres", scope: !10820, file: !3, line: 2081, type: !7786)
!10828 = !DILocation(line: 2081, column: 34, scope: !10820)
!10829 = !DILocalVariable(name: "error", scope: !10820, file: !3, line: 2082, type: !32)
!10830 = !DILocation(line: 2082, column: 6, scope: !10820)
!10831 = !DILocation(line: 2084, column: 11, scope: !10820)
!10832 = !DILocation(line: 2084, column: 9, scope: !10820)
!10833 = !DILocation(line: 2086, column: 7, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10820, file: !3, line: 2086, column: 6)
!10835 = !DILocation(line: 2086, column: 6, scope: !10820)
!10836 = !DILocation(line: 2087, column: 3, scope: !10834)
!10837 = !DILocation(line: 2089, column: 30, scope: !10820)
!10838 = !DILocation(line: 2089, column: 35, scope: !10820)
!10839 = !DILocation(line: 2089, column: 41, scope: !10820)
!10840 = !DILocation(line: 2089, column: 10, scope: !10820)
!10841 = !DILocation(line: 2089, column: 8, scope: !10820)
!10842 = !DILocation(line: 2090, column: 6, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10820, file: !3, line: 2090, column: 6)
!10844 = !DILocation(line: 2090, column: 6, scope: !10820)
!10845 = !DILocation(line: 2091, column: 15, scope: !10846)
!10846 = distinct !DILexicalBlock(scope: !10843, file: !3, line: 2090, column: 13)
!10847 = !DILocation(line: 2091, column: 3, scope: !10846)
!10848 = !DILocation(line: 2092, column: 10, scope: !10846)
!10849 = !DILocation(line: 2092, column: 3, scope: !10846)
!10850 = !DILocation(line: 2095, column: 18, scope: !10820)
!10851 = !DILocation(line: 2095, column: 2, scope: !10820)
!10852 = !DILocation(line: 2095, column: 10, scope: !10820)
!10853 = !DILocation(line: 2095, column: 16, scope: !10820)
!10854 = !DILocation(line: 2096, column: 13, scope: !10820)
!10855 = !DILocation(line: 2096, column: 18, scope: !10820)
!10856 = !DILocation(line: 2096, column: 2, scope: !10820)
!10857 = !DILocation(line: 2097, column: 2, scope: !10820)
!10858 = !DILocation(line: 2098, column: 1, scope: !10820)
!10859 = distinct !DISubprogram(name: "devres_alloc", scope: !4570, file: !4570, line: 178, type: !10860, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10860 = !DISubroutineType(types: !10861)
!10861 = !{!591, !10862, !1039, !1742}
!10862 = !DIDerivedType(tag: DW_TAG_typedef, name: "dr_release_t", file: !4570, line: 165, baseType: !10863)
!10863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10864, size: 64)
!10864 = !DISubroutineType(types: !10865)
!10865 = !{null, !4856, !591}
!10866 = !DILocalVariable(name: "release", arg: 1, scope: !10859, file: !4570, line: 178, type: !10862)
!10867 = !DILocation(line: 178, column: 47, scope: !10859)
!10868 = !DILocalVariable(name: "size", arg: 2, scope: !10859, file: !4570, line: 178, type: !1039)
!10869 = !DILocation(line: 178, column: 63, scope: !10859)
!10870 = !DILocalVariable(name: "gfp", arg: 3, scope: !10859, file: !4570, line: 178, type: !1742)
!10871 = !DILocation(line: 178, column: 75, scope: !10859)
!10872 = !DILocation(line: 180, column: 27, scope: !10859)
!10873 = !DILocation(line: 180, column: 36, scope: !10859)
!10874 = !DILocation(line: 180, column: 42, scope: !10859)
!10875 = !DILocation(line: 180, column: 9, scope: !10859)
!10876 = !DILocation(line: 180, column: 2, scope: !10859)
!10877 = distinct !DISubprogram(name: "devm_attr_group_remove", scope: !3, file: !3, line: 2051, type: !10864, scopeLine: 2052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10878 = !DILocalVariable(name: "dev", arg: 1, scope: !10877, file: !3, line: 2051, type: !4856)
!10879 = !DILocation(line: 2051, column: 51, scope: !10877)
!10880 = !DILocalVariable(name: "res", arg: 2, scope: !10877, file: !3, line: 2051, type: !591)
!10881 = !DILocation(line: 2051, column: 62, scope: !10877)
!10882 = !DILocalVariable(name: "devres", scope: !10877, file: !3, line: 2053, type: !7786)
!10883 = !DILocation(line: 2053, column: 34, scope: !10877)
!10884 = !DILocation(line: 2053, column: 43, scope: !10877)
!10885 = !DILocalVariable(name: "group", scope: !10877, file: !3, line: 2054, type: !4651)
!10886 = !DILocation(line: 2054, column: 32, scope: !10877)
!10887 = !DILocation(line: 2054, column: 40, scope: !10877)
!10888 = !DILocation(line: 2054, column: 48, scope: !10877)
!10889 = !DILocation(line: 2057, column: 22, scope: !10877)
!10890 = !DILocation(line: 2057, column: 27, scope: !10877)
!10891 = !DILocation(line: 2057, column: 33, scope: !10877)
!10892 = !DILocation(line: 2057, column: 2, scope: !10877)
!10893 = !DILocation(line: 2058, column: 1, scope: !10877)
!10894 = distinct !DISubprogram(name: "devm_device_remove_group", scope: !3, file: !3, line: 2109, type: !10895, scopeLine: 2111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10895 = !DISubroutineType(types: !10896)
!10896 = !{null, !4856, !4651}
!10897 = !DILocalVariable(name: "dev", arg: 1, scope: !10894, file: !3, line: 2109, type: !4856)
!10898 = !DILocation(line: 2109, column: 46, scope: !10894)
!10899 = !DILocalVariable(name: "grp", arg: 2, scope: !10894, file: !3, line: 2110, type: !4651)
!10900 = !DILocation(line: 2110, column: 40, scope: !10894)
!10901 = !DILocalVariable(name: "__ret_warn_on", scope: !10902, file: !3, line: 2112, type: !32)
!10902 = distinct !DILexicalBlock(scope: !10894, file: !3, line: 2112, column: 2)
!10903 = !DILocation(line: 2112, column: 2, scope: !10902)
!10904 = !DILocation(line: 2112, column: 2, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10902, file: !3, line: 2112, column: 2)
!10906 = !DILocation(line: 2112, column: 2, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !10905, file: !3, line: 2112, column: 2)
!10908 = !DILocation(line: 2112, column: 2, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 2112, column: 2)
!10910 = !DILocation(line: 2112, column: 2, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 2112, column: 2)
!10912 = !{i32 -2139029490, i32 -2139029461, i32 -2139029415, i32 -2139029357, i32 -2139029303, i32 -2139029249, i32 -2139029194, i32 -2139029163}
!10913 = !DILocation(line: 2112, column: 2, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 2112, column: 2)
!10915 = !{i32 -2139028761, i32 -2139028754, i32 -2139028702, i32 -2139028671, i32 -2139028641}
!10916 = !DILocation(line: 2112, column: 2, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 2112, column: 2)
!10918 = !DILocation(line: 2115, column: 1, scope: !10894)
!10919 = distinct !DISubprogram(name: "devm_attr_group_match", scope: !3, file: !3, line: 2046, type: !10920, scopeLine: 2047, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10920 = !DISubroutineType(types: !10921)
!10921 = !{!32, !4856, !591, !591}
!10922 = !DILocalVariable(name: "dev", arg: 1, scope: !10919, file: !3, line: 2046, type: !4856)
!10923 = !DILocation(line: 2046, column: 49, scope: !10919)
!10924 = !DILocalVariable(name: "res", arg: 2, scope: !10919, file: !3, line: 2046, type: !591)
!10925 = !DILocation(line: 2046, column: 60, scope: !10919)
!10926 = !DILocalVariable(name: "data", arg: 3, scope: !10919, file: !3, line: 2046, type: !591)
!10927 = !DILocation(line: 2046, column: 71, scope: !10919)
!10928 = !DILocation(line: 2048, column: 44, scope: !10919)
!10929 = !DILocation(line: 2048, column: 10, scope: !10919)
!10930 = !DILocation(line: 2048, column: 50, scope: !10919)
!10931 = !DILocation(line: 2048, column: 59, scope: !10919)
!10932 = !DILocation(line: 2048, column: 56, scope: !10919)
!10933 = !DILocation(line: 2048, column: 2, scope: !10919)
!10934 = distinct !DISubprogram(name: "devm_device_add_groups", scope: !3, file: !3, line: 2131, type: !10797, scopeLine: 2133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10935 = !DILocalVariable(name: "dev", arg: 1, scope: !10934, file: !3, line: 2131, type: !4856)
!10936 = !DILocation(line: 2131, column: 43, scope: !10934)
!10937 = !DILocalVariable(name: "groups", arg: 2, scope: !10934, file: !3, line: 2132, type: !4650)
!10938 = !DILocation(line: 2132, column: 38, scope: !10934)
!10939 = !DILocalVariable(name: "devres", scope: !10934, file: !3, line: 2134, type: !7786)
!10940 = !DILocation(line: 2134, column: 34, scope: !10934)
!10941 = !DILocalVariable(name: "error", scope: !10934, file: !3, line: 2135, type: !32)
!10942 = !DILocation(line: 2135, column: 6, scope: !10934)
!10943 = !DILocation(line: 2137, column: 11, scope: !10934)
!10944 = !DILocation(line: 2137, column: 9, scope: !10934)
!10945 = !DILocation(line: 2139, column: 7, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10934, file: !3, line: 2139, column: 6)
!10947 = !DILocation(line: 2139, column: 6, scope: !10934)
!10948 = !DILocation(line: 2140, column: 3, scope: !10946)
!10949 = !DILocation(line: 2142, column: 31, scope: !10934)
!10950 = !DILocation(line: 2142, column: 36, scope: !10934)
!10951 = !DILocation(line: 2142, column: 42, scope: !10934)
!10952 = !DILocation(line: 2142, column: 10, scope: !10934)
!10953 = !DILocation(line: 2142, column: 8, scope: !10934)
!10954 = !DILocation(line: 2143, column: 6, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10934, file: !3, line: 2143, column: 6)
!10956 = !DILocation(line: 2143, column: 6, scope: !10934)
!10957 = !DILocation(line: 2144, column: 15, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10955, file: !3, line: 2143, column: 13)
!10959 = !DILocation(line: 2144, column: 3, scope: !10958)
!10960 = !DILocation(line: 2145, column: 10, scope: !10958)
!10961 = !DILocation(line: 2145, column: 3, scope: !10958)
!10962 = !DILocation(line: 2148, column: 19, scope: !10934)
!10963 = !DILocation(line: 2148, column: 2, scope: !10934)
!10964 = !DILocation(line: 2148, column: 10, scope: !10934)
!10965 = !DILocation(line: 2148, column: 17, scope: !10934)
!10966 = !DILocation(line: 2149, column: 13, scope: !10934)
!10967 = !DILocation(line: 2149, column: 18, scope: !10934)
!10968 = !DILocation(line: 2149, column: 2, scope: !10934)
!10969 = !DILocation(line: 2150, column: 2, scope: !10934)
!10970 = !DILocation(line: 2151, column: 1, scope: !10934)
!10971 = distinct !DISubprogram(name: "devm_attr_groups_remove", scope: !3, file: !3, line: 2060, type: !10864, scopeLine: 2061, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10972 = !DILocalVariable(name: "dev", arg: 1, scope: !10971, file: !3, line: 2060, type: !4856)
!10973 = !DILocation(line: 2060, column: 52, scope: !10971)
!10974 = !DILocalVariable(name: "res", arg: 2, scope: !10971, file: !3, line: 2060, type: !591)
!10975 = !DILocation(line: 2060, column: 63, scope: !10971)
!10976 = !DILocalVariable(name: "devres", scope: !10971, file: !3, line: 2062, type: !7786)
!10977 = !DILocation(line: 2062, column: 34, scope: !10971)
!10978 = !DILocation(line: 2062, column: 43, scope: !10971)
!10979 = !DILocalVariable(name: "groups", scope: !10971, file: !3, line: 2063, type: !4650)
!10980 = !DILocation(line: 2063, column: 33, scope: !10971)
!10981 = !DILocation(line: 2063, column: 42, scope: !10971)
!10982 = !DILocation(line: 2063, column: 50, scope: !10971)
!10983 = !DILocation(line: 2066, column: 23, scope: !10971)
!10984 = !DILocation(line: 2066, column: 28, scope: !10971)
!10985 = !DILocation(line: 2066, column: 34, scope: !10971)
!10986 = !DILocation(line: 2066, column: 2, scope: !10971)
!10987 = !DILocation(line: 2067, column: 1, scope: !10971)
!10988 = distinct !DISubprogram(name: "devm_device_remove_groups", scope: !3, file: !3, line: 2162, type: !10809, scopeLine: 2164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10989 = !DILocalVariable(name: "dev", arg: 1, scope: !10988, file: !3, line: 2162, type: !4856)
!10990 = !DILocation(line: 2162, column: 47, scope: !10988)
!10991 = !DILocalVariable(name: "groups", arg: 2, scope: !10988, file: !3, line: 2163, type: !4650)
!10992 = !DILocation(line: 2163, column: 42, scope: !10988)
!10993 = !DILocalVariable(name: "__ret_warn_on", scope: !10994, file: !3, line: 2165, type: !32)
!10994 = distinct !DILexicalBlock(scope: !10988, file: !3, line: 2165, column: 2)
!10995 = !DILocation(line: 2165, column: 2, scope: !10994)
!10996 = !DILocation(line: 2165, column: 2, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10994, file: !3, line: 2165, column: 2)
!10998 = !DILocation(line: 2165, column: 2, scope: !10999)
!10999 = distinct !DILexicalBlock(scope: !10997, file: !3, line: 2165, column: 2)
!11000 = !DILocation(line: 2165, column: 2, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10999, file: !3, line: 2165, column: 2)
!11002 = !DILocation(line: 2165, column: 2, scope: !11003)
!11003 = distinct !DILexicalBlock(scope: !10999, file: !3, line: 2165, column: 2)
!11004 = !{i32 -2139027534, i32 -2139027505, i32 -2139027459, i32 -2139027401, i32 -2139027347, i32 -2139027293, i32 -2139027238, i32 -2139027207}
!11005 = !DILocation(line: 2165, column: 2, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !10999, file: !3, line: 2165, column: 2)
!11007 = !{i32 -2139026805, i32 -2139026798, i32 -2139026746, i32 -2139026715, i32 -2139026685}
!11008 = !DILocation(line: 2165, column: 2, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !10999, file: !3, line: 2165, column: 2)
!11010 = !DILocation(line: 2168, column: 1, scope: !10988)
!11011 = distinct !DISubprogram(name: "devices_kset_move_last", scope: !3, file: !3, line: 2283, type: !4915, scopeLine: 2284, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11012 = !DILocalVariable(name: "lock", arg: 1, scope: !11013, file: !11014, line: 392, type: !2181)
!11013 = distinct !DISubprogram(name: "spin_unlock", scope: !11014, file: !11014, line: 392, type: !11015, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11014 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!11015 = !DISubroutineType(types: !11016)
!11016 = !{null, !2181}
!11017 = !DILocation(line: 392, column: 53, scope: !11013, inlinedAt: !11018)
!11018 = distinct !DILocation(line: 2290, column: 2, scope: !11011)
!11019 = !DILocalVariable(name: "lock", arg: 1, scope: !11020, file: !11014, line: 352, type: !2181)
!11020 = distinct !DISubprogram(name: "spin_lock", scope: !11014, file: !11014, line: 352, type: !11015, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11021 = !DILocation(line: 352, column: 51, scope: !11020, inlinedAt: !11022)
!11022 = distinct !DILocation(line: 2288, column: 2, scope: !11011)
!11023 = !DILocalVariable(name: "dev", arg: 1, scope: !11011, file: !3, line: 2283, type: !4856)
!11024 = !DILocation(line: 2283, column: 44, scope: !11011)
!11025 = !DILocation(line: 2285, column: 7, scope: !11026)
!11026 = distinct !DILexicalBlock(scope: !11011, file: !3, line: 2285, column: 6)
!11027 = !DILocation(line: 2285, column: 6, scope: !11011)
!11028 = !DILocation(line: 2286, column: 3, scope: !11026)
!11029 = !DILocation(line: 2287, column: 2, scope: !11030)
!11030 = distinct !DILexicalBlock(scope: !11031, file: !3, line: 2287, column: 2)
!11031 = distinct !DILexicalBlock(scope: !11011, file: !3, line: 2287, column: 2)
!11032 = !DILocation(line: 2287, column: 2, scope: !11031)
!11033 = !DILocation(line: 2288, column: 13, scope: !11011)
!11034 = !DILocation(line: 2288, column: 27, scope: !11011)
!11035 = !DILocation(line: 354, column: 2, scope: !11036, inlinedAt: !11022)
!11036 = distinct !DILexicalBlock(scope: !11020, file: !11014, line: 354, column: 2)
!11037 = !{i32 -2145252616}
!11038 = !DILocation(line: 354, column: 2, scope: !11039, inlinedAt: !11022)
!11039 = distinct !DILexicalBlock(scope: !11036, file: !11014, line: 354, column: 2)
!11040 = !DILocation(line: 2289, column: 18, scope: !11011)
!11041 = !DILocation(line: 2289, column: 23, scope: !11011)
!11042 = !DILocation(line: 2289, column: 28, scope: !11011)
!11043 = !DILocation(line: 2289, column: 36, scope: !11011)
!11044 = !DILocation(line: 2289, column: 50, scope: !11011)
!11045 = !DILocation(line: 2289, column: 2, scope: !11011)
!11046 = !DILocation(line: 2290, column: 15, scope: !11011)
!11047 = !DILocation(line: 2290, column: 29, scope: !11011)
!11048 = !DILocation(line: 394, column: 2, scope: !11049, inlinedAt: !11018)
!11049 = distinct !DILexicalBlock(scope: !11013, file: !11014, line: 394, column: 2)
!11050 = !{i32 -2145250255}
!11051 = !DILocation(line: 394, column: 2, scope: !11052, inlinedAt: !11018)
!11052 = distinct !DILexicalBlock(scope: !11049, file: !11014, line: 394, column: 2)
!11053 = !DILocation(line: 2291, column: 1, scope: !11011)
!11054 = distinct !DISubprogram(name: "list_move_tail", scope: !9076, file: !9076, line: 224, type: !9183, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11055 = !DILocalVariable(name: "list", arg: 1, scope: !11054, file: !9076, line: 224, type: !287)
!11056 = !DILocation(line: 224, column: 53, scope: !11054)
!11057 = !DILocalVariable(name: "head", arg: 2, scope: !11054, file: !9076, line: 225, type: !287)
!11058 = !DILocation(line: 225, column: 25, scope: !11054)
!11059 = !DILocation(line: 227, column: 19, scope: !11054)
!11060 = !DILocation(line: 227, column: 2, scope: !11054)
!11061 = !DILocation(line: 228, column: 16, scope: !11054)
!11062 = !DILocation(line: 228, column: 22, scope: !11054)
!11063 = !DILocation(line: 228, column: 2, scope: !11054)
!11064 = !DILocation(line: 229, column: 1, scope: !11054)
!11065 = distinct !DISubprogram(name: "device_create_file", scope: !3, file: !3, line: 2298, type: !11066, scopeLine: 2300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11066 = !DISubroutineType(types: !11067)
!11067 = !{!32, !4856, !9896}
!11068 = !DILocalVariable(name: "dev", arg: 1, scope: !11065, file: !3, line: 2298, type: !4856)
!11069 = !DILocation(line: 2298, column: 39, scope: !11065)
!11070 = !DILocalVariable(name: "attr", arg: 2, scope: !11065, file: !3, line: 2299, type: !9896)
!11071 = !DILocation(line: 2299, column: 41, scope: !11065)
!11072 = !DILocalVariable(name: "error", scope: !11065, file: !3, line: 2301, type: !32)
!11073 = !DILocation(line: 2301, column: 6, scope: !11065)
!11074 = !DILocation(line: 2303, column: 6, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11065, file: !3, line: 2303, column: 6)
!11076 = !DILocation(line: 2303, column: 6, scope: !11065)
!11077 = !DILocalVariable(name: "__ret_warn_on", scope: !11078, file: !3, line: 2304, type: !32)
!11078 = distinct !DILexicalBlock(scope: !11079, file: !3, line: 2304, column: 3)
!11079 = distinct !DILexicalBlock(scope: !11075, file: !3, line: 2303, column: 11)
!11080 = !DILocation(line: 2304, column: 3, scope: !11078)
!11081 = !DILocation(line: 0, scope: !11078)
!11082 = !DILocation(line: 2304, column: 3, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11078, file: !3, line: 2304, column: 3)
!11084 = !DILocation(line: 2304, column: 3, scope: !11085)
!11085 = distinct !DILexicalBlock(scope: !11083, file: !3, line: 2304, column: 3)
!11086 = !DILocation(line: 2304, column: 3, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11085, file: !3, line: 2304, column: 3)
!11088 = !DILocation(line: 2304, column: 3, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11085, file: !3, line: 2304, column: 3)
!11090 = !DILocation(line: 2304, column: 3, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11089, file: !3, line: 2304, column: 3)
!11092 = !DILocation(line: 2304, column: 3, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11089, file: !3, line: 2304, column: 3)
!11094 = !{i32 -2139024140, i32 -2139024111, i32 -2139024065, i32 -2139024007, i32 -2139023953, i32 -2139023899, i32 -2139023844, i32 -2139023813}
!11095 = !DILocation(line: 2304, column: 3, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11089, file: !3, line: 2304, column: 3)
!11097 = !{i32 -2139023400, i32 -2139023393, i32 -2139023341, i32 -2139023310, i32 -2139023280}
!11098 = !DILocation(line: 2304, column: 3, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !11089, file: !3, line: 2304, column: 3)
!11100 = !DILocation(line: 2304, column: 3, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11085, file: !3, line: 2304, column: 3)
!11102 = !DILocalVariable(name: "__ret_warn_on", scope: !11103, file: !3, line: 2307, type: !32)
!11103 = distinct !DILexicalBlock(scope: !11079, file: !3, line: 2307, column: 3)
!11104 = !DILocation(line: 2307, column: 3, scope: !11103)
!11105 = !DILocation(line: 0, scope: !11103)
!11106 = !DILocation(line: 2307, column: 3, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11103, file: !3, line: 2307, column: 3)
!11108 = !DILocation(line: 2307, column: 3, scope: !11109)
!11109 = distinct !DILexicalBlock(scope: !11107, file: !3, line: 2307, column: 3)
!11110 = !DILocation(line: 2307, column: 3, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11109, file: !3, line: 2307, column: 3)
!11112 = !DILocation(line: 2307, column: 3, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11109, file: !3, line: 2307, column: 3)
!11114 = !DILocation(line: 2307, column: 3, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11113, file: !3, line: 2307, column: 3)
!11116 = !DILocation(line: 2307, column: 3, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11113, file: !3, line: 2307, column: 3)
!11118 = !{i32 -2139022253, i32 -2139022224, i32 -2139022178, i32 -2139022120, i32 -2139022066, i32 -2139022012, i32 -2139021957, i32 -2139021926}
!11119 = !DILocation(line: 2307, column: 3, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11113, file: !3, line: 2307, column: 3)
!11121 = !{i32 -2139021513, i32 -2139021506, i32 -2139021454, i32 -2139021423, i32 -2139021393}
!11122 = !DILocation(line: 2307, column: 3, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !11113, file: !3, line: 2307, column: 3)
!11124 = !DILocation(line: 2307, column: 3, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11109, file: !3, line: 2307, column: 3)
!11126 = !DILocation(line: 2310, column: 30, scope: !11079)
!11127 = !DILocation(line: 2310, column: 35, scope: !11079)
!11128 = !DILocation(line: 2310, column: 42, scope: !11079)
!11129 = !DILocation(line: 2310, column: 48, scope: !11079)
!11130 = !DILocation(line: 2310, column: 11, scope: !11079)
!11131 = !DILocation(line: 2310, column: 9, scope: !11079)
!11132 = !DILocation(line: 2311, column: 2, scope: !11079)
!11133 = !DILocation(line: 2313, column: 9, scope: !11065)
!11134 = !DILocation(line: 2313, column: 2, scope: !11065)
!11135 = distinct !DISubprogram(name: "sysfs_create_file", scope: !4632, file: !4632, line: 596, type: !11136, scopeLine: 598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11136 = !DISubroutineType(types: !11137)
!11137 = !{!32, !4579, !11138}
!11138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11139, size: 64)
!11139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4639)
!11140 = !DILocalVariable(name: "kobj", arg: 1, scope: !11135, file: !4632, line: 596, type: !4579)
!11141 = !DILocation(line: 596, column: 66, scope: !11135)
!11142 = !DILocalVariable(name: "attr", arg: 2, scope: !11135, file: !4632, line: 597, type: !11138)
!11143 = !DILocation(line: 597, column: 32, scope: !11135)
!11144 = !DILocation(line: 599, column: 30, scope: !11135)
!11145 = !DILocation(line: 599, column: 36, scope: !11135)
!11146 = !DILocation(line: 599, column: 9, scope: !11135)
!11147 = !DILocation(line: 599, column: 2, scope: !11135)
!11148 = distinct !DISubprogram(name: "sysfs_remove_file", scope: !4632, file: !4632, line: 602, type: !11149, scopeLine: 604, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11149 = !DISubroutineType(types: !11150)
!11150 = !{null, !4579, !11138}
!11151 = !DILocalVariable(name: "kobj", arg: 1, scope: !11148, file: !4632, line: 602, type: !4579)
!11152 = !DILocation(line: 602, column: 54, scope: !11148)
!11153 = !DILocalVariable(name: "attr", arg: 2, scope: !11148, file: !4632, line: 603, type: !11138)
!11154 = !DILocation(line: 603, column: 34, scope: !11148)
!11155 = !DILocation(line: 605, column: 23, scope: !11148)
!11156 = !DILocation(line: 605, column: 29, scope: !11148)
!11157 = !DILocation(line: 605, column: 2, scope: !11148)
!11158 = !DILocation(line: 606, column: 1, scope: !11148)
!11159 = distinct !DISubprogram(name: "device_remove_file_self", scope: !3, file: !3, line: 2337, type: !11160, scopeLine: 2339, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11160 = !DISubroutineType(types: !11161)
!11161 = !{!771, !4856, !9896}
!11162 = !DILocalVariable(name: "dev", arg: 1, scope: !11159, file: !3, line: 2337, type: !4856)
!11163 = !DILocation(line: 2337, column: 45, scope: !11159)
!11164 = !DILocalVariable(name: "attr", arg: 2, scope: !11159, file: !3, line: 2338, type: !9896)
!11165 = !DILocation(line: 2338, column: 40, scope: !11159)
!11166 = !DILocation(line: 2340, column: 6, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11159, file: !3, line: 2340, column: 6)
!11168 = !DILocation(line: 2340, column: 6, scope: !11159)
!11169 = !DILocation(line: 2341, column: 34, scope: !11167)
!11170 = !DILocation(line: 2341, column: 39, scope: !11167)
!11171 = !DILocation(line: 2341, column: 46, scope: !11167)
!11172 = !DILocation(line: 2341, column: 52, scope: !11167)
!11173 = !DILocation(line: 2341, column: 10, scope: !11167)
!11174 = !DILocation(line: 2341, column: 3, scope: !11167)
!11175 = !DILocation(line: 2343, column: 3, scope: !11167)
!11176 = !DILocation(line: 2344, column: 1, scope: !11159)
!11177 = distinct !DISubprogram(name: "device_create_bin_file", scope: !3, file: !3, line: 2352, type: !11178, scopeLine: 2354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11178 = !DISubroutineType(types: !11179)
!11179 = !{!32, !4856, !11180}
!11180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11181, size: 64)
!11181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4665)
!11182 = !DILocalVariable(name: "dev", arg: 1, scope: !11177, file: !3, line: 2352, type: !4856)
!11183 = !DILocation(line: 2352, column: 43, scope: !11177)
!11184 = !DILocalVariable(name: "attr", arg: 2, scope: !11177, file: !3, line: 2353, type: !11180)
!11185 = !DILocation(line: 2353, column: 35, scope: !11177)
!11186 = !DILocalVariable(name: "error", scope: !11177, file: !3, line: 2355, type: !32)
!11187 = !DILocation(line: 2355, column: 6, scope: !11177)
!11188 = !DILocation(line: 2356, column: 6, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11177, file: !3, line: 2356, column: 6)
!11190 = !DILocation(line: 2356, column: 6, scope: !11177)
!11191 = !DILocation(line: 2357, column: 34, scope: !11189)
!11192 = !DILocation(line: 2357, column: 39, scope: !11189)
!11193 = !DILocation(line: 2357, column: 45, scope: !11189)
!11194 = !DILocation(line: 2357, column: 11, scope: !11189)
!11195 = !DILocation(line: 2357, column: 9, scope: !11189)
!11196 = !DILocation(line: 2357, column: 3, scope: !11189)
!11197 = !DILocation(line: 2358, column: 9, scope: !11177)
!11198 = !DILocation(line: 2358, column: 2, scope: !11177)
!11199 = distinct !DISubprogram(name: "device_remove_bin_file", scope: !3, file: !3, line: 2367, type: !11200, scopeLine: 2369, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11200 = !DISubroutineType(types: !11201)
!11201 = !{null, !4856, !11180}
!11202 = !DILocalVariable(name: "dev", arg: 1, scope: !11199, file: !3, line: 2367, type: !4856)
!11203 = !DILocation(line: 2367, column: 44, scope: !11199)
!11204 = !DILocalVariable(name: "attr", arg: 2, scope: !11199, file: !3, line: 2368, type: !11180)
!11205 = !DILocation(line: 2368, column: 36, scope: !11199)
!11206 = !DILocation(line: 2370, column: 6, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11199, file: !3, line: 2370, column: 6)
!11208 = !DILocation(line: 2370, column: 6, scope: !11199)
!11209 = !DILocation(line: 2371, column: 26, scope: !11207)
!11210 = !DILocation(line: 2371, column: 31, scope: !11207)
!11211 = !DILocation(line: 2371, column: 37, scope: !11207)
!11212 = !DILocation(line: 2371, column: 3, scope: !11207)
!11213 = !DILocation(line: 2372, column: 1, scope: !11199)
!11214 = !DILocalVariable(name: "lock", arg: 1, scope: !11215, file: !11014, line: 327, type: !2181)
!11215 = distinct !DISubprogram(name: "spinlock_check", scope: !11014, file: !11014, line: 327, type: !11216, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11216 = !DISubroutineType(types: !11217)
!11217 = !{!11218, !2181}
!11218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 64)
!11219 = !DILocation(line: 327, column: 67, scope: !11215, inlinedAt: !11220)
!11220 = distinct !DILocation(line: 2421, column: 2, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !7823, file: !3, line: 2421, column: 2)
!11222 = !DILocalVariable(name: "dev", arg: 1, scope: !7823, file: !3, line: 2411, type: !4856)
!11223 = !DILocation(line: 2411, column: 39, scope: !7823)
!11224 = !DILocation(line: 2413, column: 19, scope: !7823)
!11225 = !DILocation(line: 2413, column: 2, scope: !7823)
!11226 = !DILocation(line: 2413, column: 7, scope: !7823)
!11227 = !DILocation(line: 2413, column: 12, scope: !7823)
!11228 = !DILocation(line: 2413, column: 17, scope: !7823)
!11229 = !DILocation(line: 2414, column: 16, scope: !7823)
!11230 = !DILocation(line: 2414, column: 21, scope: !7823)
!11231 = !DILocation(line: 2414, column: 2, scope: !7823)
!11232 = !DILocation(line: 2415, column: 18, scope: !7823)
!11233 = !DILocation(line: 2415, column: 23, scope: !7823)
!11234 = !DILocation(line: 2415, column: 2, scope: !7823)
!11235 = !DILocation(line: 2416, column: 2, scope: !7823)
!11236 = !DILocation(line: 2416, column: 2, scope: !11237)
!11237 = distinct !DILexicalBlock(scope: !7823, file: !3, line: 2416, column: 2)
!11238 = !DILocation(line: 2420, column: 2, scope: !7823)
!11239 = !DILocation(line: 2420, column: 2, scope: !11240)
!11240 = distinct !DILexicalBlock(scope: !7823, file: !3, line: 2420, column: 2)
!11241 = !DILocation(line: 2421, column: 2, scope: !7823)
!11242 = !DILocation(line: 2421, column: 2, scope: !11221)
!11243 = !DILocation(line: 329, column: 10, scope: !11215, inlinedAt: !11220)
!11244 = !DILocation(line: 329, column: 16, scope: !11215, inlinedAt: !11220)
!11245 = !DILocation(line: 2422, column: 18, scope: !7823)
!11246 = !DILocation(line: 2422, column: 23, scope: !7823)
!11247 = !DILocation(line: 2422, column: 2, scope: !7823)
!11248 = !DILocation(line: 2423, column: 17, scope: !7823)
!11249 = !DILocation(line: 2423, column: 2, scope: !7823)
!11250 = !DILocation(line: 2424, column: 15, scope: !7823)
!11251 = !DILocation(line: 2424, column: 2, scope: !7823)
!11252 = !DILocation(line: 2426, column: 18, scope: !7823)
!11253 = !DILocation(line: 2426, column: 23, scope: !7823)
!11254 = !DILocation(line: 2426, column: 2, scope: !7823)
!11255 = !DILocation(line: 2428, column: 18, scope: !7823)
!11256 = !DILocation(line: 2428, column: 23, scope: !7823)
!11257 = !DILocation(line: 2428, column: 29, scope: !7823)
!11258 = !DILocation(line: 2428, column: 2, scope: !7823)
!11259 = !DILocation(line: 2429, column: 18, scope: !7823)
!11260 = !DILocation(line: 2429, column: 23, scope: !7823)
!11261 = !DILocation(line: 2429, column: 29, scope: !7823)
!11262 = !DILocation(line: 2429, column: 2, scope: !7823)
!11263 = !DILocation(line: 2430, column: 18, scope: !7823)
!11264 = !DILocation(line: 2430, column: 23, scope: !7823)
!11265 = !DILocation(line: 2430, column: 29, scope: !7823)
!11266 = !DILocation(line: 2430, column: 2, scope: !7823)
!11267 = !DILocation(line: 2431, column: 18, scope: !7823)
!11268 = !DILocation(line: 2431, column: 23, scope: !7823)
!11269 = !DILocation(line: 2431, column: 29, scope: !7823)
!11270 = !DILocation(line: 2431, column: 2, scope: !7823)
!11271 = !DILocation(line: 2432, column: 2, scope: !7823)
!11272 = !DILocation(line: 2432, column: 7, scope: !7823)
!11273 = !DILocation(line: 2432, column: 13, scope: !7823)
!11274 = !DILocation(line: 2432, column: 20, scope: !7823)
!11275 = !DILocation(line: 2433, column: 1, scope: !7823)
!11276 = distinct !DISubprogram(name: "device_pm_init", scope: !5147, file: !5147, line: 161, type: !4915, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11277 = !DILocalVariable(name: "dev", arg: 1, scope: !11276, file: !5147, line: 161, type: !4856)
!11278 = !DILocation(line: 161, column: 50, scope: !11276)
!11279 = !DILocation(line: 163, column: 24, scope: !11276)
!11280 = !DILocation(line: 163, column: 2, scope: !11276)
!11281 = !DILocation(line: 164, column: 23, scope: !11276)
!11282 = !DILocation(line: 164, column: 2, scope: !11276)
!11283 = !DILocation(line: 165, column: 18, scope: !11276)
!11284 = !DILocation(line: 165, column: 2, scope: !11276)
!11285 = !DILocation(line: 166, column: 1, scope: !11276)
!11286 = distinct !DISubprogram(name: "set_dev_node", scope: !4570, file: !4570, line: 634, type: !11287, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11287 = !DISubroutineType(types: !11288)
!11288 = !{null, !4856, !32}
!11289 = !DILocalVariable(name: "dev", arg: 1, scope: !11286, file: !4570, line: 634, type: !4856)
!11290 = !DILocation(line: 634, column: 48, scope: !11286)
!11291 = !DILocalVariable(name: "node", arg: 2, scope: !11286, file: !4570, line: 634, type: !32)
!11292 = !DILocation(line: 634, column: 57, scope: !11286)
!11293 = !DILocation(line: 636, column: 1, scope: !11286)
!11294 = !DILocalVariable(name: "dev", arg: 1, scope: !7826, file: !3, line: 2436, type: !4856)
!11295 = !DILocation(line: 2436, column: 54, scope: !7826)
!11296 = !DILocation(line: 2440, column: 7, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !7826, file: !3, line: 2440, column: 6)
!11298 = !DILocation(line: 2440, column: 6, scope: !7826)
!11299 = !DILocation(line: 2442, column: 13, scope: !11297)
!11300 = !DILocation(line: 2442, column: 27, scope: !11297)
!11301 = !DILocation(line: 2441, column: 17, scope: !11297)
!11302 = !DILocation(line: 2441, column: 15, scope: !11297)
!11303 = !DILocation(line: 2441, column: 3, scope: !11297)
!11304 = !DILocation(line: 2444, column: 9, scope: !7826)
!11305 = !DILocation(line: 2444, column: 2, scope: !7826)
!11306 = distinct !DISubprogram(name: "device_add", scope: !3, file: !3, line: 2815, type: !4911, scopeLine: 2816, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11307 = !DILocalVariable(name: "dev", arg: 1, scope: !11306, file: !3, line: 2815, type: !4856)
!11308 = !DILocation(line: 2815, column: 31, scope: !11306)
!11309 = !DILocalVariable(name: "parent", scope: !11306, file: !3, line: 2817, type: !4856)
!11310 = !DILocation(line: 2817, column: 17, scope: !11306)
!11311 = !DILocalVariable(name: "kobj", scope: !11306, file: !3, line: 2818, type: !4579)
!11312 = !DILocation(line: 2818, column: 18, scope: !11306)
!11313 = !DILocalVariable(name: "class_intf", scope: !11306, file: !3, line: 2819, type: !7474)
!11314 = !DILocation(line: 2819, column: 26, scope: !11306)
!11315 = !DILocalVariable(name: "error", scope: !11306, file: !3, line: 2820, type: !32)
!11316 = !DILocation(line: 2820, column: 6, scope: !11306)
!11317 = !DILocalVariable(name: "glue_dir", scope: !11306, file: !3, line: 2821, type: !4579)
!11318 = !DILocation(line: 2821, column: 18, scope: !11306)
!11319 = !DILocation(line: 2823, column: 19, scope: !11306)
!11320 = !DILocation(line: 2823, column: 8, scope: !11306)
!11321 = !DILocation(line: 2823, column: 6, scope: !11306)
!11322 = !DILocation(line: 2824, column: 7, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 2824, column: 6)
!11324 = !DILocation(line: 2824, column: 6, scope: !11306)
!11325 = !DILocation(line: 2825, column: 3, scope: !11323)
!11326 = !DILocation(line: 2827, column: 7, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 2827, column: 6)
!11328 = !DILocation(line: 2827, column: 12, scope: !11327)
!11329 = !DILocation(line: 2827, column: 6, scope: !11306)
!11330 = !DILocation(line: 2828, column: 31, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11327, file: !3, line: 2827, column: 15)
!11332 = !DILocation(line: 2828, column: 11, scope: !11331)
!11333 = !DILocation(line: 2828, column: 9, scope: !11331)
!11334 = !DILocation(line: 2829, column: 7, scope: !11335)
!11335 = distinct !DILexicalBlock(scope: !11331, file: !3, line: 2829, column: 7)
!11336 = !DILocation(line: 2829, column: 7, scope: !11331)
!11337 = !DILocation(line: 2830, column: 4, scope: !11335)
!11338 = !DILocation(line: 2831, column: 2, scope: !11331)
!11339 = !DILocation(line: 2838, column: 6, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 2838, column: 6)
!11341 = !DILocation(line: 2838, column: 11, scope: !11340)
!11342 = !DILocation(line: 2838, column: 6, scope: !11306)
!11343 = !DILocation(line: 2839, column: 16, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11340, file: !3, line: 2838, column: 22)
!11345 = !DILocation(line: 2839, column: 27, scope: !11344)
!11346 = !DILocation(line: 2839, column: 32, scope: !11344)
!11347 = !DILocation(line: 2839, column: 3, scope: !11344)
!11348 = !DILocation(line: 2840, column: 3, scope: !11344)
!11349 = !DILocation(line: 2840, column: 8, scope: !11344)
!11350 = !DILocation(line: 2840, column: 18, scope: !11344)
!11351 = !DILocation(line: 2841, column: 2, scope: !11344)
!11352 = !DILocation(line: 2844, column: 16, scope: !11353)
!11353 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 2844, column: 6)
!11354 = !DILocation(line: 2844, column: 7, scope: !11353)
!11355 = !DILocation(line: 2844, column: 21, scope: !11353)
!11356 = !DILocation(line: 2844, column: 24, scope: !11353)
!11357 = !DILocation(line: 2844, column: 29, scope: !11353)
!11358 = !DILocation(line: 2844, column: 33, scope: !11353)
!11359 = !DILocation(line: 2844, column: 36, scope: !11353)
!11360 = !DILocation(line: 2844, column: 41, scope: !11353)
!11361 = !DILocation(line: 2844, column: 46, scope: !11353)
!11362 = !DILocation(line: 2844, column: 6, scope: !11306)
!11363 = !DILocation(line: 2845, column: 16, scope: !11353)
!11364 = !DILocation(line: 2845, column: 29, scope: !11353)
!11365 = !DILocation(line: 2845, column: 34, scope: !11353)
!11366 = !DILocation(line: 2845, column: 39, scope: !11353)
!11367 = !DILocation(line: 2845, column: 49, scope: !11353)
!11368 = !DILocation(line: 2845, column: 54, scope: !11353)
!11369 = !DILocation(line: 2845, column: 3, scope: !11353)
!11370 = !DILocation(line: 2847, column: 16, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 2847, column: 6)
!11372 = !DILocation(line: 2847, column: 7, scope: !11371)
!11373 = !DILocation(line: 2847, column: 6, scope: !11306)
!11374 = !DILocation(line: 2848, column: 9, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11371, file: !3, line: 2847, column: 22)
!11376 = !DILocation(line: 2849, column: 3, scope: !11375)
!11377 = !DILocation(line: 2852, column: 2, scope: !11378)
!11378 = distinct !DILexicalBlock(scope: !11379, file: !3, line: 2852, column: 2)
!11379 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 2852, column: 2)
!11380 = !DILocation(line: 2852, column: 2, scope: !11379)
!11381 = !DILocation(line: 2854, column: 22, scope: !11306)
!11382 = !DILocation(line: 2854, column: 27, scope: !11306)
!11383 = !DILocation(line: 2854, column: 11, scope: !11306)
!11384 = !DILocation(line: 2854, column: 9, scope: !11306)
!11385 = !DILocation(line: 2855, column: 27, scope: !11306)
!11386 = !DILocation(line: 2855, column: 32, scope: !11306)
!11387 = !DILocation(line: 2855, column: 9, scope: !11306)
!11388 = !DILocation(line: 2855, column: 7, scope: !11306)
!11389 = !DILocation(line: 2856, column: 13, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 2856, column: 6)
!11391 = !DILocation(line: 2856, column: 6, scope: !11390)
!11392 = !DILocation(line: 2856, column: 6, scope: !11306)
!11393 = !DILocation(line: 2857, column: 19, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11390, file: !3, line: 2856, column: 20)
!11395 = !DILocation(line: 2857, column: 11, scope: !11394)
!11396 = !DILocation(line: 2857, column: 9, scope: !11394)
!11397 = !DILocation(line: 2858, column: 3, scope: !11394)
!11398 = !DILocation(line: 2860, column: 6, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 2860, column: 6)
!11400 = !DILocation(line: 2860, column: 6, scope: !11306)
!11401 = !DILocation(line: 2861, column: 22, scope: !11399)
!11402 = !DILocation(line: 2861, column: 3, scope: !11399)
!11403 = !DILocation(line: 2861, column: 8, scope: !11399)
!11404 = !DILocation(line: 2861, column: 13, scope: !11399)
!11405 = !DILocation(line: 2861, column: 20, scope: !11399)
!11406 = !DILocation(line: 2864, column: 6, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 2864, column: 6)
!11408 = !DILocation(line: 2864, column: 13, scope: !11407)
!11409 = !DILocation(line: 2864, column: 29, scope: !11407)
!11410 = !DILocation(line: 2864, column: 17, scope: !11407)
!11411 = !DILocation(line: 2864, column: 34, scope: !11407)
!11412 = !DILocation(line: 2864, column: 6, scope: !11306)
!11413 = !DILocation(line: 2865, column: 16, scope: !11407)
!11414 = !DILocation(line: 2865, column: 33, scope: !11407)
!11415 = !DILocation(line: 2865, column: 21, scope: !11407)
!11416 = !DILocation(line: 2865, column: 3, scope: !11407)
!11417 = !DILocation(line: 2869, column: 23, scope: !11306)
!11418 = !DILocation(line: 2869, column: 28, scope: !11306)
!11419 = !DILocation(line: 2869, column: 34, scope: !11306)
!11420 = !DILocation(line: 2869, column: 39, scope: !11306)
!11421 = !DILocation(line: 2869, column: 44, scope: !11306)
!11422 = !DILocation(line: 2869, column: 10, scope: !11306)
!11423 = !DILocation(line: 2869, column: 8, scope: !11306)
!11424 = !DILocation(line: 2870, column: 6, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 2870, column: 6)
!11426 = !DILocation(line: 2870, column: 6, scope: !11306)
!11427 = !DILocation(line: 2871, column: 27, scope: !11428)
!11428 = distinct !DILexicalBlock(scope: !11425, file: !3, line: 2870, column: 13)
!11429 = !DILocation(line: 2871, column: 14, scope: !11428)
!11430 = !DILocation(line: 2871, column: 12, scope: !11428)
!11431 = !DILocation(line: 2872, column: 3, scope: !11428)
!11432 = !DILocation(line: 2876, column: 33, scope: !11306)
!11433 = !DILocation(line: 2876, column: 10, scope: !11306)
!11434 = !DILocation(line: 2876, column: 8, scope: !11306)
!11435 = !DILocation(line: 2877, column: 6, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 2877, column: 6)
!11437 = !DILocation(line: 2877, column: 6, scope: !11306)
!11438 = !DILocation(line: 2878, column: 3, scope: !11436)
!11439 = !DILocation(line: 2880, column: 29, scope: !11306)
!11440 = !DILocation(line: 2880, column: 10, scope: !11306)
!11441 = !DILocation(line: 2880, column: 8, scope: !11306)
!11442 = !DILocation(line: 2881, column: 6, scope: !11443)
!11443 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 2881, column: 6)
!11444 = !DILocation(line: 2881, column: 6, scope: !11306)
!11445 = !DILocation(line: 2882, column: 3, scope: !11443)
!11446 = !DILocation(line: 2884, column: 36, scope: !11306)
!11447 = !DILocation(line: 2884, column: 10, scope: !11306)
!11448 = !DILocation(line: 2884, column: 8, scope: !11306)
!11449 = !DILocation(line: 2885, column: 6, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 2885, column: 6)
!11451 = !DILocation(line: 2885, column: 6, scope: !11306)
!11452 = !DILocation(line: 2886, column: 3, scope: !11450)
!11453 = !DILocation(line: 2887, column: 27, scope: !11306)
!11454 = !DILocation(line: 2887, column: 10, scope: !11306)
!11455 = !DILocation(line: 2887, column: 8, scope: !11306)
!11456 = !DILocation(line: 2888, column: 6, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 2888, column: 6)
!11458 = !DILocation(line: 2888, column: 6, scope: !11306)
!11459 = !DILocation(line: 2889, column: 3, scope: !11457)
!11460 = !DILocation(line: 2890, column: 25, scope: !11306)
!11461 = !DILocation(line: 2890, column: 10, scope: !11306)
!11462 = !DILocation(line: 2890, column: 8, scope: !11306)
!11463 = !DILocation(line: 2891, column: 6, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 2891, column: 6)
!11465 = !DILocation(line: 2891, column: 6, scope: !11306)
!11466 = !DILocation(line: 2892, column: 3, scope: !11464)
!11467 = !DILocation(line: 2893, column: 24, scope: !11306)
!11468 = !DILocation(line: 2893, column: 10, scope: !11306)
!11469 = !DILocation(line: 2893, column: 8, scope: !11306)
!11470 = !DILocation(line: 2894, column: 6, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 2894, column: 6)
!11472 = !DILocation(line: 2894, column: 6, scope: !11306)
!11473 = !DILocation(line: 2895, column: 3, scope: !11471)
!11474 = !DILocation(line: 2896, column: 16, scope: !11306)
!11475 = !DILocation(line: 2896, column: 2, scope: !11306)
!11476 = !DILocation(line: 2898, column: 6, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 2898, column: 6)
!11478 = !DILocation(line: 2898, column: 6, scope: !11306)
!11479 = !DILocation(line: 2899, column: 30, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !11477, file: !3, line: 2898, column: 24)
!11481 = !DILocation(line: 2899, column: 11, scope: !11480)
!11482 = !DILocation(line: 2899, column: 9, scope: !11480)
!11483 = !DILocation(line: 2900, column: 7, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11480, file: !3, line: 2900, column: 7)
!11485 = !DILocation(line: 2900, column: 7, scope: !11480)
!11486 = !DILocation(line: 2901, column: 4, scope: !11484)
!11487 = !DILocation(line: 2903, column: 39, scope: !11480)
!11488 = !DILocation(line: 2903, column: 11, scope: !11480)
!11489 = !DILocation(line: 2903, column: 9, scope: !11480)
!11490 = !DILocation(line: 2904, column: 7, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11480, file: !3, line: 2904, column: 7)
!11492 = !DILocation(line: 2904, column: 7, scope: !11480)
!11493 = !DILocation(line: 2905, column: 4, scope: !11491)
!11494 = !DILocation(line: 2907, column: 24, scope: !11480)
!11495 = !DILocation(line: 2907, column: 3, scope: !11480)
!11496 = !DILocation(line: 2908, column: 2, scope: !11480)
!11497 = !DILocation(line: 2913, column: 6, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 2913, column: 6)
!11499 = !DILocation(line: 2913, column: 11, scope: !11498)
!11500 = !DILocation(line: 2913, column: 6, scope: !11306)
!11501 = !DILocation(line: 2914, column: 33, scope: !11498)
!11502 = !DILocation(line: 2914, column: 38, scope: !11498)
!11503 = !DILocation(line: 2914, column: 43, scope: !11498)
!11504 = !DILocation(line: 2914, column: 46, scope: !11498)
!11505 = !DILocation(line: 2915, column: 34, scope: !11498)
!11506 = !DILocation(line: 2914, column: 3, scope: !11498)
!11507 = !DILocation(line: 2917, column: 18, scope: !11306)
!11508 = !DILocation(line: 2917, column: 23, scope: !11306)
!11509 = !DILocation(line: 2917, column: 2, scope: !11306)
!11510 = !DILocation(line: 2931, column: 6, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 2931, column: 6)
!11512 = !DILocation(line: 2931, column: 11, scope: !11511)
!11513 = !DILocation(line: 2931, column: 18, scope: !11511)
!11514 = !DILocation(line: 2931, column: 22, scope: !11511)
!11515 = !DILocation(line: 2931, column: 27, scope: !11511)
!11516 = !DILocation(line: 2931, column: 35, scope: !11511)
!11517 = !DILocation(line: 2931, column: 6, scope: !11306)
!11518 = !DILocation(line: 2932, column: 22, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !11511, file: !3, line: 2931, column: 40)
!11520 = !DILocation(line: 2932, column: 3, scope: !11519)
!11521 = !DILocation(line: 2932, column: 8, scope: !11519)
!11522 = !DILocation(line: 2932, column: 16, scope: !11519)
!11523 = !DILocation(line: 2932, column: 20, scope: !11519)
!11524 = !DILocation(line: 2933, column: 26, scope: !11519)
!11525 = !DILocation(line: 2933, column: 3, scope: !11519)
!11526 = !DILocation(line: 2934, column: 2, scope: !11519)
!11527 = !DILocation(line: 2936, column: 19, scope: !11306)
!11528 = !DILocation(line: 2936, column: 2, scope: !11306)
!11529 = !DILocation(line: 2937, column: 6, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 2937, column: 6)
!11531 = !DILocation(line: 2937, column: 6, scope: !11306)
!11532 = !DILocation(line: 2938, column: 19, scope: !11530)
!11533 = !DILocation(line: 2938, column: 24, scope: !11530)
!11534 = !DILocation(line: 2938, column: 27, scope: !11530)
!11535 = !DILocation(line: 2939, column: 12, scope: !11530)
!11536 = !DILocation(line: 2939, column: 20, scope: !11530)
!11537 = !DILocation(line: 2939, column: 23, scope: !11530)
!11538 = !DILocation(line: 2938, column: 3, scope: !11530)
!11539 = !DILocation(line: 2941, column: 6, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 2941, column: 6)
!11541 = !DILocation(line: 2941, column: 11, scope: !11540)
!11542 = !DILocation(line: 2941, column: 6, scope: !11306)
!11543 = !DILocation(line: 2942, column: 15, scope: !11544)
!11544 = distinct !DILexicalBlock(scope: !11540, file: !3, line: 2941, column: 18)
!11545 = !DILocation(line: 2942, column: 20, scope: !11544)
!11546 = !DILocation(line: 2942, column: 27, scope: !11544)
!11547 = !DILocation(line: 2942, column: 30, scope: !11544)
!11548 = !DILocation(line: 2942, column: 3, scope: !11544)
!11549 = !DILocation(line: 2944, column: 19, scope: !11544)
!11550 = !DILocation(line: 2944, column: 24, scope: !11544)
!11551 = !DILocation(line: 2944, column: 27, scope: !11544)
!11552 = !DILocation(line: 2945, column: 12, scope: !11544)
!11553 = !DILocation(line: 2945, column: 17, scope: !11544)
!11554 = !DILocation(line: 2945, column: 24, scope: !11544)
!11555 = !DILocation(line: 2945, column: 27, scope: !11544)
!11556 = !DILocation(line: 2944, column: 3, scope: !11544)
!11557 = !DILocalVariable(name: "__mptr", scope: !11558, file: !3, line: 2948, type: !591)
!11558 = distinct !DILexicalBlock(scope: !11559, file: !3, line: 2948, column: 3)
!11559 = distinct !DILexicalBlock(scope: !11544, file: !3, line: 2948, column: 3)
!11560 = !DILocation(line: 2948, column: 3, scope: !11558)
!11561 = !DILocation(line: 2948, column: 3, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11558, file: !3, line: 2948, column: 3)
!11563 = !DILocation(line: 2948, column: 3, scope: !11559)
!11564 = !DILocation(line: 2948, column: 3, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11559, file: !3, line: 2948, column: 3)
!11566 = !DILocation(line: 2950, column: 8, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11565, file: !3, line: 2950, column: 8)
!11568 = !DILocation(line: 2950, column: 20, scope: !11567)
!11569 = !DILocation(line: 2950, column: 8, scope: !11565)
!11570 = !DILocation(line: 2951, column: 5, scope: !11567)
!11571 = !DILocation(line: 2951, column: 17, scope: !11567)
!11572 = !DILocation(line: 2951, column: 25, scope: !11567)
!11573 = !DILocation(line: 2951, column: 30, scope: !11567)
!11574 = !DILocalVariable(name: "__mptr", scope: !11575, file: !3, line: 2948, type: !591)
!11575 = distinct !DILexicalBlock(scope: !11565, file: !3, line: 2948, column: 3)
!11576 = !DILocation(line: 2948, column: 3, scope: !11575)
!11577 = !DILocation(line: 2948, column: 3, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11575, file: !3, line: 2948, column: 3)
!11579 = distinct !{!11579, !11563, !11580}
!11580 = !DILocation(line: 2951, column: 40, scope: !11559)
!11581 = !DILocation(line: 2952, column: 17, scope: !11544)
!11582 = !DILocation(line: 2952, column: 22, scope: !11544)
!11583 = !DILocation(line: 2952, column: 29, scope: !11544)
!11584 = !DILocation(line: 2952, column: 32, scope: !11544)
!11585 = !DILocation(line: 2952, column: 3, scope: !11544)
!11586 = !DILocation(line: 2953, column: 2, scope: !11544)
!11587 = !DILabel(scope: !11306, name: "done", file: !3, line: 2954)
!11588 = !DILocation(line: 2954, column: 1, scope: !11306)
!11589 = !DILocation(line: 2955, column: 13, scope: !11306)
!11590 = !DILocation(line: 2955, column: 2, scope: !11306)
!11591 = !DILocation(line: 2956, column: 9, scope: !11306)
!11592 = !DILocation(line: 2956, column: 2, scope: !11306)
!11593 = !DILabel(scope: !11306, name: "SysEntryError", file: !3, line: 2957)
!11594 = !DILocation(line: 2957, column: 2, scope: !11306)
!11595 = !DILocation(line: 2958, column: 6, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 2958, column: 6)
!11597 = !DILocation(line: 2958, column: 6, scope: !11306)
!11598 = !DILocation(line: 2959, column: 22, scope: !11596)
!11599 = !DILocation(line: 2959, column: 3, scope: !11596)
!11600 = !DILabel(scope: !11306, name: "DevAttrError", file: !3, line: 2960)
!11601 = !DILocation(line: 2960, column: 2, scope: !11306)
!11602 = !DILocation(line: 2961, column: 19, scope: !11306)
!11603 = !DILocation(line: 2961, column: 2, scope: !11306)
!11604 = !DILocation(line: 2962, column: 19, scope: !11306)
!11605 = !DILocation(line: 2962, column: 2, scope: !11306)
!11606 = !DILabel(scope: !11306, name: "DPMError", file: !3, line: 2963)
!11607 = !DILocation(line: 2963, column: 2, scope: !11306)
!11608 = !DILocation(line: 2964, column: 20, scope: !11306)
!11609 = !DILocation(line: 2964, column: 2, scope: !11306)
!11610 = !DILabel(scope: !11306, name: "BusError", file: !3, line: 2965)
!11611 = !DILocation(line: 2965, column: 2, scope: !11306)
!11612 = !DILocation(line: 2966, column: 22, scope: !11306)
!11613 = !DILocation(line: 2966, column: 2, scope: !11306)
!11614 = !DILabel(scope: !11306, name: "AttrsError", file: !3, line: 2967)
!11615 = !DILocation(line: 2967, column: 2, scope: !11306)
!11616 = !DILocation(line: 2968, column: 31, scope: !11306)
!11617 = !DILocation(line: 2968, column: 2, scope: !11306)
!11618 = !DILabel(scope: !11306, name: "SymlinkError", file: !3, line: 2969)
!11619 = !DILocation(line: 2969, column: 2, scope: !11306)
!11620 = !DILocation(line: 2970, column: 21, scope: !11306)
!11621 = !DILocation(line: 2970, column: 2, scope: !11306)
!11622 = !DILabel(scope: !11306, name: "attrError", file: !3, line: 2971)
!11623 = !DILocation(line: 2971, column: 2, scope: !11306)
!11624 = !DILocation(line: 2972, column: 25, scope: !11306)
!11625 = !DILocation(line: 2972, column: 2, scope: !11306)
!11626 = !DILabel(scope: !11306, name: "platform_error", file: !3, line: 2973)
!11627 = !DILocation(line: 2973, column: 1, scope: !11306)
!11628 = !DILocation(line: 2974, column: 18, scope: !11306)
!11629 = !DILocation(line: 2974, column: 23, scope: !11306)
!11630 = !DILocation(line: 2974, column: 2, scope: !11306)
!11631 = !DILocation(line: 2975, column: 26, scope: !11306)
!11632 = !DILocation(line: 2975, column: 13, scope: !11306)
!11633 = !DILocation(line: 2975, column: 11, scope: !11306)
!11634 = !DILocation(line: 2976, column: 15, scope: !11306)
!11635 = !DILocation(line: 2976, column: 20, scope: !11306)
!11636 = !DILocation(line: 2976, column: 2, scope: !11306)
!11637 = !DILabel(scope: !11306, name: "Error", file: !3, line: 2977)
!11638 = !DILocation(line: 2977, column: 2, scope: !11306)
!11639 = !DILocation(line: 2978, column: 19, scope: !11306)
!11640 = !DILocation(line: 2978, column: 24, scope: !11306)
!11641 = !DILocation(line: 2978, column: 2, scope: !11306)
!11642 = !DILabel(scope: !11306, name: "parent_error", file: !3, line: 2979)
!11643 = !DILocation(line: 2979, column: 1, scope: !11306)
!11644 = !DILocation(line: 2980, column: 13, scope: !11306)
!11645 = !DILocation(line: 2980, column: 2, scope: !11306)
!11646 = !DILabel(scope: !11306, name: "name_error", file: !3, line: 2981)
!11647 = !DILocation(line: 2981, column: 1, scope: !11306)
!11648 = !DILocation(line: 2982, column: 8, scope: !11306)
!11649 = !DILocation(line: 2982, column: 13, scope: !11306)
!11650 = !DILocation(line: 2982, column: 2, scope: !11306)
!11651 = !DILocation(line: 2983, column: 2, scope: !11306)
!11652 = !DILocation(line: 2983, column: 7, scope: !11306)
!11653 = !DILocation(line: 2983, column: 9, scope: !11306)
!11654 = !DILocation(line: 2984, column: 2, scope: !11306)
!11655 = distinct !DISubprogram(name: "device_private_init", scope: !3, file: !3, line: 2776, type: !4911, scopeLine: 2777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11656 = !DILocalVariable(name: "dev", arg: 1, scope: !11655, file: !3, line: 2776, type: !4856)
!11657 = !DILocation(line: 2776, column: 47, scope: !11655)
!11658 = !DILocation(line: 2778, column: 11, scope: !11655)
!11659 = !DILocation(line: 2778, column: 2, scope: !11655)
!11660 = !DILocation(line: 2778, column: 7, scope: !11655)
!11661 = !DILocation(line: 2778, column: 9, scope: !11655)
!11662 = !DILocation(line: 2779, column: 7, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11655, file: !3, line: 2779, column: 6)
!11664 = !DILocation(line: 2779, column: 12, scope: !11663)
!11665 = !DILocation(line: 2779, column: 6, scope: !11655)
!11666 = !DILocation(line: 2780, column: 3, scope: !11663)
!11667 = !DILocation(line: 2781, column: 19, scope: !11655)
!11668 = !DILocation(line: 2781, column: 2, scope: !11655)
!11669 = !DILocation(line: 2781, column: 7, scope: !11655)
!11670 = !DILocation(line: 2781, column: 10, scope: !11655)
!11671 = !DILocation(line: 2781, column: 17, scope: !11655)
!11672 = !DILocation(line: 2782, column: 14, scope: !11655)
!11673 = !DILocation(line: 2782, column: 19, scope: !11655)
!11674 = !DILocation(line: 2782, column: 22, scope: !11655)
!11675 = !DILocation(line: 2782, column: 2, scope: !11655)
!11676 = !DILocation(line: 2784, column: 18, scope: !11655)
!11677 = !DILocation(line: 2784, column: 23, scope: !11655)
!11678 = !DILocation(line: 2784, column: 26, scope: !11655)
!11679 = !DILocation(line: 2784, column: 2, scope: !11655)
!11680 = !DILocation(line: 2785, column: 2, scope: !11655)
!11681 = !DILocation(line: 2786, column: 1, scope: !11655)
!11682 = distinct !DISubprogram(name: "get_device_parent", scope: !3, file: !3, line: 2498, type: !11683, scopeLine: 2500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11683 = !DISubroutineType(types: !11684)
!11684 = !{!4579, !4856, !4856}
!11685 = !DILocation(line: 392, column: 53, scope: !11013, inlinedAt: !11686)
!11686 = distinct !DILocation(line: 2536, column: 3, scope: !11687)
!11687 = distinct !DILexicalBlock(scope: !11688, file: !3, line: 2501, column: 18)
!11688 = distinct !DILexicalBlock(scope: !11682, file: !3, line: 2501, column: 6)
!11689 = !DILocation(line: 352, column: 51, scope: !11020, inlinedAt: !11690)
!11690 = distinct !DILocation(line: 2530, column: 3, scope: !11687)
!11691 = !DILocalVariable(name: "dev", arg: 1, scope: !11682, file: !3, line: 2498, type: !4856)
!11692 = !DILocation(line: 2498, column: 57, scope: !11682)
!11693 = !DILocalVariable(name: "parent", arg: 2, scope: !11682, file: !3, line: 2499, type: !4856)
!11694 = !DILocation(line: 2499, column: 22, scope: !11682)
!11695 = !DILocation(line: 2501, column: 6, scope: !11688)
!11696 = !DILocation(line: 2501, column: 11, scope: !11688)
!11697 = !DILocation(line: 2501, column: 6, scope: !11682)
!11698 = !DILocalVariable(name: "kobj", scope: !11687, file: !3, line: 2502, type: !4579)
!11699 = !DILocation(line: 2502, column: 19, scope: !11687)
!11700 = !DILocalVariable(name: "parent_kobj", scope: !11687, file: !3, line: 2503, type: !4579)
!11701 = !DILocation(line: 2503, column: 19, scope: !11687)
!11702 = !DILocalVariable(name: "k", scope: !11687, file: !3, line: 2504, type: !4579)
!11703 = !DILocation(line: 2504, column: 19, scope: !11687)
!11704 = !DILocation(line: 2520, column: 7, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11687, file: !3, line: 2520, column: 7)
!11706 = !DILocation(line: 2520, column: 14, scope: !11705)
!11707 = !DILocation(line: 2520, column: 7, scope: !11687)
!11708 = !DILocation(line: 2521, column: 40, scope: !11705)
!11709 = !DILocation(line: 2521, column: 18, scope: !11705)
!11710 = !DILocation(line: 2521, column: 16, scope: !11705)
!11711 = !DILocation(line: 2521, column: 4, scope: !11705)
!11712 = !DILocation(line: 2522, column: 12, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11705, file: !3, line: 2522, column: 12)
!11714 = !DILocation(line: 2522, column: 20, scope: !11713)
!11715 = !DILocation(line: 2522, column: 26, scope: !11713)
!11716 = !DILocation(line: 2522, column: 30, scope: !11713)
!11717 = !DILocation(line: 2522, column: 35, scope: !11713)
!11718 = !DILocation(line: 2522, column: 42, scope: !11713)
!11719 = !DILocation(line: 2522, column: 12, scope: !11705)
!11720 = !DILocation(line: 2523, column: 12, scope: !11713)
!11721 = !DILocation(line: 2523, column: 20, scope: !11713)
!11722 = !DILocation(line: 2523, column: 4, scope: !11713)
!11723 = !DILocation(line: 2525, column: 19, scope: !11713)
!11724 = !DILocation(line: 2525, column: 27, scope: !11713)
!11725 = !DILocation(line: 2525, column: 16, scope: !11713)
!11726 = !DILocation(line: 2527, column: 3, scope: !11687)
!11727 = !DILocation(line: 2530, column: 14, scope: !11687)
!11728 = !DILocation(line: 2530, column: 19, scope: !11687)
!11729 = !DILocation(line: 2530, column: 26, scope: !11687)
!11730 = !DILocation(line: 2530, column: 29, scope: !11687)
!11731 = !DILocation(line: 2530, column: 39, scope: !11687)
!11732 = !DILocation(line: 354, column: 2, scope: !11036, inlinedAt: !11690)
!11733 = !DILocation(line: 354, column: 2, scope: !11039, inlinedAt: !11690)
!11734 = !DILocalVariable(name: "__mptr", scope: !11735, file: !3, line: 2531, type: !591)
!11735 = distinct !DILexicalBlock(scope: !11736, file: !3, line: 2531, column: 3)
!11736 = distinct !DILexicalBlock(scope: !11687, file: !3, line: 2531, column: 3)
!11737 = !DILocation(line: 2531, column: 3, scope: !11735)
!11738 = !DILocation(line: 2531, column: 3, scope: !11739)
!11739 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 2531, column: 3)
!11740 = !DILocation(line: 2531, column: 3, scope: !11736)
!11741 = !DILocation(line: 2531, column: 3, scope: !11742)
!11742 = distinct !DILexicalBlock(scope: !11736, file: !3, line: 2531, column: 3)
!11743 = !DILocation(line: 2532, column: 8, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11742, file: !3, line: 2532, column: 8)
!11745 = !DILocation(line: 2532, column: 11, scope: !11744)
!11746 = !DILocation(line: 2532, column: 21, scope: !11744)
!11747 = !DILocation(line: 2532, column: 18, scope: !11744)
!11748 = !DILocation(line: 2532, column: 8, scope: !11742)
!11749 = !DILocation(line: 2533, column: 24, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11744, file: !3, line: 2532, column: 34)
!11751 = !DILocation(line: 2533, column: 12, scope: !11750)
!11752 = !DILocation(line: 2533, column: 10, scope: !11750)
!11753 = !DILocation(line: 2534, column: 5, scope: !11750)
!11754 = !DILocalVariable(name: "__mptr", scope: !11755, file: !3, line: 2531, type: !591)
!11755 = distinct !DILexicalBlock(scope: !11742, file: !3, line: 2531, column: 3)
!11756 = !DILocation(line: 2531, column: 3, scope: !11755)
!11757 = !DILocation(line: 2531, column: 3, scope: !11758)
!11758 = distinct !DILexicalBlock(scope: !11755, file: !3, line: 2531, column: 3)
!11759 = distinct !{!11759, !11740, !11760}
!11760 = !DILocation(line: 2535, column: 4, scope: !11736)
!11761 = !DILocation(line: 2536, column: 16, scope: !11687)
!11762 = !DILocation(line: 2536, column: 21, scope: !11687)
!11763 = !DILocation(line: 2536, column: 28, scope: !11687)
!11764 = !DILocation(line: 2536, column: 31, scope: !11687)
!11765 = !DILocation(line: 2536, column: 41, scope: !11687)
!11766 = !DILocation(line: 394, column: 2, scope: !11049, inlinedAt: !11686)
!11767 = !DILocation(line: 394, column: 2, scope: !11052, inlinedAt: !11686)
!11768 = !DILocation(line: 2537, column: 7, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11687, file: !3, line: 2537, column: 7)
!11770 = !DILocation(line: 2537, column: 7, scope: !11687)
!11771 = !DILocation(line: 2538, column: 4, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !11769, file: !3, line: 2537, column: 13)
!11773 = !DILocation(line: 2539, column: 11, scope: !11772)
!11774 = !DILocation(line: 2539, column: 4, scope: !11772)
!11775 = !DILocation(line: 2543, column: 32, scope: !11687)
!11776 = !DILocation(line: 2543, column: 37, scope: !11687)
!11777 = !DILocation(line: 2543, column: 44, scope: !11687)
!11778 = !DILocation(line: 2543, column: 7, scope: !11687)
!11779 = !DILocation(line: 2543, column: 5, scope: !11687)
!11780 = !DILocation(line: 2545, column: 3, scope: !11687)
!11781 = !DILocation(line: 2546, column: 10, scope: !11687)
!11782 = !DILocation(line: 2546, column: 3, scope: !11687)
!11783 = !DILocation(line: 2550, column: 7, scope: !11784)
!11784 = distinct !DILexicalBlock(scope: !11682, file: !3, line: 2550, column: 6)
!11785 = !DILocation(line: 2550, column: 14, scope: !11784)
!11786 = !DILocation(line: 2550, column: 17, scope: !11784)
!11787 = !DILocation(line: 2550, column: 22, scope: !11784)
!11788 = !DILocation(line: 2550, column: 26, scope: !11784)
!11789 = !DILocation(line: 2550, column: 29, scope: !11784)
!11790 = !DILocation(line: 2550, column: 34, scope: !11784)
!11791 = !DILocation(line: 2550, column: 39, scope: !11784)
!11792 = !DILocation(line: 2550, column: 6, scope: !11682)
!11793 = !DILocation(line: 2551, column: 11, scope: !11784)
!11794 = !DILocation(line: 2551, column: 16, scope: !11784)
!11795 = !DILocation(line: 2551, column: 21, scope: !11784)
!11796 = !DILocation(line: 2551, column: 31, scope: !11784)
!11797 = !DILocation(line: 2551, column: 3, scope: !11784)
!11798 = !DILocation(line: 2553, column: 6, scope: !11799)
!11799 = distinct !DILexicalBlock(scope: !11682, file: !3, line: 2553, column: 6)
!11800 = !DILocation(line: 2553, column: 6, scope: !11682)
!11801 = !DILocation(line: 2554, column: 11, scope: !11799)
!11802 = !DILocation(line: 2554, column: 19, scope: !11799)
!11803 = !DILocation(line: 2554, column: 3, scope: !11799)
!11804 = !DILocation(line: 2555, column: 2, scope: !11682)
!11805 = !DILocation(line: 2556, column: 1, scope: !11682)
!11806 = distinct !DISubprogram(name: "IS_ERR", scope: !11807, file: !11807, line: 34, type: !11808, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11807 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!11808 = !DISubroutineType(types: !11809)
!11809 = !{!771, !3258}
!11810 = !DILocalVariable(name: "ptr", arg: 1, scope: !11806, file: !11807, line: 34, type: !3258)
!11811 = !DILocation(line: 34, column: 60, scope: !11806)
!11812 = !DILocation(line: 36, column: 9, scope: !11806)
!11813 = !DILocation(line: 36, column: 2, scope: !11806)
!11814 = distinct !DISubprogram(name: "PTR_ERR", scope: !11807, file: !11807, line: 29, type: !11815, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11815 = !DISubroutineType(types: !11816)
!11816 = !{!998, !3258}
!11817 = !DILocalVariable(name: "ptr", arg: 1, scope: !11814, file: !11807, line: 29, type: !3258)
!11818 = !DILocation(line: 29, column: 61, scope: !11814)
!11819 = !DILocation(line: 31, column: 16, scope: !11814)
!11820 = !DILocation(line: 31, column: 9, scope: !11814)
!11821 = !DILocation(line: 31, column: 2, scope: !11814)
!11822 = distinct !DISubprogram(name: "dev_to_node", scope: !4570, file: !4570, line: 630, type: !4911, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11823 = !DILocalVariable(name: "dev", arg: 1, scope: !11822, file: !4570, line: 630, type: !4856)
!11824 = !DILocation(line: 630, column: 46, scope: !11822)
!11825 = !DILocation(line: 632, column: 2, scope: !11822)
!11826 = distinct !DISubprogram(name: "get_glue_dir", scope: !3, file: !3, line: 2567, type: !7827, scopeLine: 2568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11827 = !DILocalVariable(name: "dev", arg: 1, scope: !11826, file: !3, line: 2567, type: !4856)
!11828 = !DILocation(line: 2567, column: 59, scope: !11826)
!11829 = !DILocation(line: 2569, column: 9, scope: !11826)
!11830 = !DILocation(line: 2569, column: 14, scope: !11826)
!11831 = !DILocation(line: 2569, column: 19, scope: !11826)
!11832 = !DILocation(line: 2569, column: 2, scope: !11826)
!11833 = distinct !DISubprogram(name: "device_platform_notify", scope: !3, file: !3, line: 1618, type: !11834, scopeLine: 1619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11834 = !DISubroutineType(types: !11835)
!11835 = !{!32, !4856, !7407}
!11836 = !DILocalVariable(name: "dev", arg: 1, scope: !11833, file: !3, line: 1618, type: !4856)
!11837 = !DILocation(line: 1618, column: 39, scope: !11833)
!11838 = !DILocalVariable(name: "action", arg: 2, scope: !11833, file: !3, line: 1618, type: !7407)
!11839 = !DILocation(line: 1618, column: 64, scope: !11833)
!11840 = !DILocalVariable(name: "ret", scope: !11833, file: !3, line: 1620, type: !32)
!11841 = !DILocation(line: 1620, column: 6, scope: !11833)
!11842 = !DILocation(line: 1622, column: 29, scope: !11833)
!11843 = !DILocation(line: 1622, column: 34, scope: !11833)
!11844 = !DILocation(line: 1622, column: 8, scope: !11833)
!11845 = !DILocation(line: 1622, column: 6, scope: !11833)
!11846 = !DILocation(line: 1623, column: 6, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11833, file: !3, line: 1623, column: 6)
!11848 = !DILocation(line: 1623, column: 6, scope: !11833)
!11849 = !DILocation(line: 1624, column: 10, scope: !11847)
!11850 = !DILocation(line: 1624, column: 3, scope: !11847)
!11851 = !DILocation(line: 1626, column: 29, scope: !11833)
!11852 = !DILocation(line: 1626, column: 34, scope: !11833)
!11853 = !DILocation(line: 1626, column: 8, scope: !11833)
!11854 = !DILocation(line: 1626, column: 6, scope: !11833)
!11855 = !DILocation(line: 1627, column: 6, scope: !11856)
!11856 = distinct !DILexicalBlock(scope: !11833, file: !3, line: 1627, column: 6)
!11857 = !DILocation(line: 1627, column: 6, scope: !11833)
!11858 = !DILocation(line: 1628, column: 10, scope: !11856)
!11859 = !DILocation(line: 1628, column: 3, scope: !11856)
!11860 = !DILocation(line: 1630, column: 6, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11833, file: !3, line: 1630, column: 6)
!11862 = !DILocation(line: 1630, column: 22, scope: !11861)
!11863 = !DILocation(line: 1630, column: 25, scope: !11861)
!11864 = !DILocation(line: 1630, column: 32, scope: !11861)
!11865 = !DILocation(line: 1630, column: 6, scope: !11833)
!11866 = !DILocation(line: 1631, column: 3, scope: !11861)
!11867 = !DILocation(line: 1631, column: 19, scope: !11861)
!11868 = !DILocation(line: 1632, column: 11, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11861, file: !3, line: 1632, column: 11)
!11870 = !DILocation(line: 1632, column: 34, scope: !11869)
!11871 = !DILocation(line: 1632, column: 37, scope: !11869)
!11872 = !DILocation(line: 1632, column: 44, scope: !11869)
!11873 = !DILocation(line: 1632, column: 11, scope: !11861)
!11874 = !DILocation(line: 1633, column: 3, scope: !11869)
!11875 = !DILocation(line: 1633, column: 26, scope: !11869)
!11876 = !DILocation(line: 1634, column: 2, scope: !11833)
!11877 = !DILocation(line: 1635, column: 1, scope: !11833)
!11878 = distinct !DISubprogram(name: "device_add_class_symlinks", scope: !3, file: !3, line: 2641, type: !4911, scopeLine: 2642, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11879 = !DILocalVariable(name: "dev", arg: 1, scope: !11878, file: !3, line: 2641, type: !4856)
!11880 = !DILocation(line: 2641, column: 53, scope: !11878)
!11881 = !DILocalVariable(name: "of_node", scope: !11878, file: !3, line: 2643, type: !5333)
!11882 = !DILocation(line: 2643, column: 22, scope: !11878)
!11883 = !DILocation(line: 2643, column: 44, scope: !11878)
!11884 = !DILocation(line: 2643, column: 32, scope: !11878)
!11885 = !DILocalVariable(name: "error", scope: !11878, file: !3, line: 2644, type: !32)
!11886 = !DILocation(line: 2644, column: 6, scope: !11878)
!11887 = !DILocation(line: 2646, column: 6, scope: !11888)
!11888 = distinct !DILexicalBlock(scope: !11878, file: !3, line: 2646, column: 6)
!11889 = !DILocation(line: 2646, column: 6, scope: !11878)
!11890 = !DILocation(line: 2647, column: 30, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11888, file: !3, line: 2646, column: 15)
!11892 = !DILocation(line: 2647, column: 35, scope: !11891)
!11893 = !DILocation(line: 2647, column: 41, scope: !11891)
!11894 = !DILocation(line: 2647, column: 11, scope: !11891)
!11895 = !DILocation(line: 2647, column: 9, scope: !11891)
!11896 = !DILocation(line: 2648, column: 7, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11891, file: !3, line: 2648, column: 7)
!11898 = !DILocation(line: 2648, column: 7, scope: !11891)
!11899 = !DILocation(line: 2649, column: 4, scope: !11897)
!11900 = !DILocation(line: 2651, column: 2, scope: !11891)
!11901 = !DILocation(line: 2653, column: 7, scope: !11902)
!11902 = distinct !DILexicalBlock(scope: !11878, file: !3, line: 2653, column: 6)
!11903 = !DILocation(line: 2653, column: 12, scope: !11902)
!11904 = !DILocation(line: 2653, column: 6, scope: !11878)
!11905 = !DILocation(line: 2654, column: 3, scope: !11902)
!11906 = !DILocation(line: 2656, column: 29, scope: !11878)
!11907 = !DILocation(line: 2656, column: 34, scope: !11878)
!11908 = !DILocation(line: 2657, column: 8, scope: !11878)
!11909 = !DILocation(line: 2657, column: 13, scope: !11878)
!11910 = !DILocation(line: 2657, column: 20, scope: !11878)
!11911 = !DILocation(line: 2657, column: 23, scope: !11878)
!11912 = !DILocation(line: 2657, column: 30, scope: !11878)
!11913 = !DILocation(line: 2656, column: 10, scope: !11878)
!11914 = !DILocation(line: 2656, column: 8, scope: !11878)
!11915 = !DILocation(line: 2659, column: 6, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11878, file: !3, line: 2659, column: 6)
!11917 = !DILocation(line: 2659, column: 6, scope: !11878)
!11918 = !DILocation(line: 2660, column: 3, scope: !11916)
!11919 = !DILocation(line: 2662, column: 6, scope: !11920)
!11920 = distinct !DILexicalBlock(scope: !11878, file: !3, line: 2662, column: 6)
!11921 = !DILocation(line: 2662, column: 11, scope: !11920)
!11922 = !DILocation(line: 2662, column: 18, scope: !11920)
!11923 = !DILocation(line: 2662, column: 45, scope: !11920)
!11924 = !DILocation(line: 2662, column: 21, scope: !11920)
!11925 = !DILocation(line: 2662, column: 6, scope: !11878)
!11926 = !DILocation(line: 2663, column: 30, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !11920, file: !3, line: 2662, column: 51)
!11928 = !DILocation(line: 2663, column: 35, scope: !11927)
!11929 = !DILocation(line: 2663, column: 42, scope: !11927)
!11930 = !DILocation(line: 2663, column: 47, scope: !11927)
!11931 = !DILocation(line: 2663, column: 55, scope: !11927)
!11932 = !DILocation(line: 2663, column: 11, scope: !11927)
!11933 = !DILocation(line: 2663, column: 9, scope: !11927)
!11934 = !DILocation(line: 2665, column: 7, scope: !11935)
!11935 = distinct !DILexicalBlock(scope: !11927, file: !3, line: 2665, column: 7)
!11936 = !DILocation(line: 2665, column: 7, scope: !11927)
!11937 = !DILocation(line: 2666, column: 4, scope: !11935)
!11938 = !DILocation(line: 2667, column: 2, scope: !11927)
!11939 = !DILocation(line: 2676, column: 29, scope: !11878)
!11940 = !DILocation(line: 2676, column: 34, scope: !11878)
!11941 = !DILocation(line: 2676, column: 41, scope: !11878)
!11942 = !DILocation(line: 2676, column: 44, scope: !11878)
!11943 = !DILocation(line: 2676, column: 51, scope: !11878)
!11944 = !DILocation(line: 2677, column: 8, scope: !11878)
!11945 = !DILocation(line: 2677, column: 13, scope: !11878)
!11946 = !DILocation(line: 2677, column: 28, scope: !11878)
!11947 = !DILocation(line: 2677, column: 19, scope: !11878)
!11948 = !DILocation(line: 2676, column: 10, scope: !11878)
!11949 = !DILocation(line: 2676, column: 8, scope: !11878)
!11950 = !DILocation(line: 2678, column: 6, scope: !11951)
!11951 = distinct !DILexicalBlock(scope: !11878, file: !3, line: 2678, column: 6)
!11952 = !DILocation(line: 2678, column: 6, scope: !11878)
!11953 = !DILocation(line: 2679, column: 3, scope: !11951)
!11954 = !DILocation(line: 2681, column: 2, scope: !11878)
!11955 = !DILabel(scope: !11878, name: "out_device", file: !3, line: 2683)
!11956 = !DILocation(line: 2683, column: 1, scope: !11878)
!11957 = !DILocation(line: 2684, column: 21, scope: !11878)
!11958 = !DILocation(line: 2684, column: 26, scope: !11878)
!11959 = !DILocation(line: 2684, column: 2, scope: !11878)
!11960 = !DILabel(scope: !11878, name: "out_subsys", file: !3, line: 2686)
!11961 = !DILocation(line: 2686, column: 1, scope: !11878)
!11962 = !DILocation(line: 2687, column: 21, scope: !11878)
!11963 = !DILocation(line: 2687, column: 26, scope: !11878)
!11964 = !DILocation(line: 2687, column: 2, scope: !11878)
!11965 = !DILabel(scope: !11878, name: "out_devnode", file: !3, line: 2688)
!11966 = !DILocation(line: 2688, column: 1, scope: !11878)
!11967 = !DILocation(line: 2689, column: 21, scope: !11878)
!11968 = !DILocation(line: 2689, column: 26, scope: !11878)
!11969 = !DILocation(line: 2689, column: 2, scope: !11878)
!11970 = !DILocation(line: 2690, column: 9, scope: !11878)
!11971 = !DILocation(line: 2690, column: 2, scope: !11878)
!11972 = !DILocation(line: 2691, column: 1, scope: !11878)
!11973 = distinct !DISubprogram(name: "device_add_attrs", scope: !3, file: !3, line: 2171, type: !4911, scopeLine: 2172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11974 = !DILocalVariable(name: "dev", arg: 1, scope: !11973, file: !3, line: 2171, type: !4856)
!11975 = !DILocation(line: 2171, column: 44, scope: !11973)
!11976 = !DILocalVariable(name: "class", scope: !11973, file: !3, line: 2173, type: !4981)
!11977 = !DILocation(line: 2173, column: 16, scope: !11973)
!11978 = !DILocation(line: 2173, column: 24, scope: !11973)
!11979 = !DILocation(line: 2173, column: 29, scope: !11973)
!11980 = !DILocalVariable(name: "type", scope: !11973, file: !3, line: 2174, type: !5084)
!11981 = !DILocation(line: 2174, column: 28, scope: !11973)
!11982 = !DILocation(line: 2174, column: 35, scope: !11973)
!11983 = !DILocation(line: 2174, column: 40, scope: !11973)
!11984 = !DILocalVariable(name: "error", scope: !11973, file: !3, line: 2175, type: !32)
!11985 = !DILocation(line: 2175, column: 6, scope: !11973)
!11986 = !DILocation(line: 2177, column: 6, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11973, file: !3, line: 2177, column: 6)
!11988 = !DILocation(line: 2177, column: 6, scope: !11973)
!11989 = !DILocation(line: 2178, column: 29, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11987, file: !3, line: 2177, column: 13)
!11991 = !DILocation(line: 2178, column: 34, scope: !11990)
!11992 = !DILocation(line: 2178, column: 41, scope: !11990)
!11993 = !DILocation(line: 2178, column: 11, scope: !11990)
!11994 = !DILocation(line: 2178, column: 9, scope: !11990)
!11995 = !DILocation(line: 2179, column: 7, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11990, file: !3, line: 2179, column: 7)
!11997 = !DILocation(line: 2179, column: 7, scope: !11990)
!11998 = !DILocation(line: 2180, column: 11, scope: !11996)
!11999 = !DILocation(line: 2180, column: 4, scope: !11996)
!12000 = !DILocation(line: 2181, column: 2, scope: !11990)
!12001 = !DILocation(line: 2183, column: 6, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !11973, file: !3, line: 2183, column: 6)
!12003 = !DILocation(line: 2183, column: 6, scope: !11973)
!12004 = !DILocation(line: 2184, column: 29, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !12002, file: !3, line: 2183, column: 12)
!12006 = !DILocation(line: 2184, column: 34, scope: !12005)
!12007 = !DILocation(line: 2184, column: 40, scope: !12005)
!12008 = !DILocation(line: 2184, column: 11, scope: !12005)
!12009 = !DILocation(line: 2184, column: 9, scope: !12005)
!12010 = !DILocation(line: 2185, column: 7, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !12005, file: !3, line: 2185, column: 7)
!12012 = !DILocation(line: 2185, column: 7, scope: !12005)
!12013 = !DILocation(line: 2186, column: 4, scope: !12011)
!12014 = !DILocation(line: 2187, column: 2, scope: !12005)
!12015 = !DILocation(line: 2189, column: 28, scope: !11973)
!12016 = !DILocation(line: 2189, column: 33, scope: !11973)
!12017 = !DILocation(line: 2189, column: 38, scope: !11973)
!12018 = !DILocation(line: 2189, column: 10, scope: !11973)
!12019 = !DILocation(line: 2189, column: 8, scope: !11973)
!12020 = !DILocation(line: 2190, column: 6, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !11973, file: !3, line: 2190, column: 6)
!12022 = !DILocation(line: 2190, column: 6, scope: !11973)
!12023 = !DILocation(line: 2191, column: 3, scope: !12021)
!12024 = !DILocation(line: 2193, column: 30, scope: !12025)
!12025 = distinct !DILexicalBlock(scope: !11973, file: !3, line: 2193, column: 6)
!12026 = !DILocation(line: 2193, column: 6, scope: !12025)
!12027 = !DILocation(line: 2193, column: 35, scope: !12025)
!12028 = !DILocation(line: 2193, column: 39, scope: !12025)
!12029 = !DILocation(line: 2193, column: 44, scope: !12025)
!12030 = !DILocation(line: 2193, column: 6, scope: !11973)
!12031 = !DILocation(line: 2194, column: 30, scope: !12032)
!12032 = distinct !DILexicalBlock(scope: !12025, file: !3, line: 2193, column: 62)
!12033 = !DILocation(line: 2194, column: 11, scope: !12032)
!12034 = !DILocation(line: 2194, column: 9, scope: !12032)
!12035 = !DILocation(line: 2195, column: 7, scope: !12036)
!12036 = distinct !DILexicalBlock(scope: !12032, file: !3, line: 2195, column: 7)
!12037 = !DILocation(line: 2195, column: 7, scope: !12032)
!12038 = !DILocation(line: 2196, column: 4, scope: !12036)
!12039 = !DILocation(line: 2197, column: 2, scope: !12032)
!12040 = !DILocation(line: 2199, column: 6, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !11973, file: !3, line: 2199, column: 6)
!12042 = !DILocation(line: 2199, column: 23, scope: !12041)
!12043 = !DILocation(line: 2199, column: 27, scope: !12041)
!12044 = !DILocation(line: 2199, column: 6, scope: !11973)
!12045 = !DILocation(line: 2200, column: 30, scope: !12046)
!12046 = distinct !DILexicalBlock(scope: !12041, file: !3, line: 2199, column: 55)
!12047 = !DILocation(line: 2200, column: 11, scope: !12046)
!12048 = !DILocation(line: 2200, column: 9, scope: !12046)
!12049 = !DILocation(line: 2201, column: 7, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !12046, file: !3, line: 2201, column: 7)
!12051 = !DILocation(line: 2201, column: 7, scope: !12046)
!12052 = !DILocation(line: 2202, column: 4, scope: !12050)
!12053 = !DILocation(line: 2203, column: 2, scope: !12046)
!12054 = !DILocation(line: 2205, column: 2, scope: !11973)
!12055 = !DILabel(scope: !11973, name: "err_remove_dev_online", file: !3, line: 2207)
!12056 = !DILocation(line: 2207, column: 2, scope: !11973)
!12057 = !DILocation(line: 2208, column: 21, scope: !11973)
!12058 = !DILocation(line: 2208, column: 2, scope: !11973)
!12059 = !DILabel(scope: !11973, name: "err_remove_dev_groups", file: !3, line: 2209)
!12060 = !DILocation(line: 2209, column: 2, scope: !11973)
!12061 = !DILocation(line: 2210, column: 23, scope: !11973)
!12062 = !DILocation(line: 2210, column: 28, scope: !11973)
!12063 = !DILocation(line: 2210, column: 33, scope: !11973)
!12064 = !DILocation(line: 2210, column: 2, scope: !11973)
!12065 = !DILabel(scope: !11973, name: "err_remove_type_groups", file: !3, line: 2211)
!12066 = !DILocation(line: 2211, column: 2, scope: !11973)
!12067 = !DILocation(line: 2212, column: 6, scope: !12068)
!12068 = distinct !DILexicalBlock(scope: !11973, file: !3, line: 2212, column: 6)
!12069 = !DILocation(line: 2212, column: 6, scope: !11973)
!12070 = !DILocation(line: 2213, column: 24, scope: !12068)
!12071 = !DILocation(line: 2213, column: 29, scope: !12068)
!12072 = !DILocation(line: 2213, column: 35, scope: !12068)
!12073 = !DILocation(line: 2213, column: 3, scope: !12068)
!12074 = !DILabel(scope: !11973, name: "err_remove_class_groups", file: !3, line: 2214)
!12075 = !DILocation(line: 2214, column: 2, scope: !11973)
!12076 = !DILocation(line: 2215, column: 6, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !11973, file: !3, line: 2215, column: 6)
!12078 = !DILocation(line: 2215, column: 6, scope: !11973)
!12079 = !DILocation(line: 2216, column: 24, scope: !12077)
!12080 = !DILocation(line: 2216, column: 29, scope: !12077)
!12081 = !DILocation(line: 2216, column: 36, scope: !12077)
!12082 = !DILocation(line: 2216, column: 3, scope: !12077)
!12083 = !DILocation(line: 2218, column: 9, scope: !11973)
!12084 = !DILocation(line: 2218, column: 2, scope: !11973)
!12085 = !DILocation(line: 2219, column: 1, scope: !11973)
!12086 = distinct !DISubprogram(name: "device_create_sys_dev_entry", scope: !3, file: !3, line: 2751, type: !4911, scopeLine: 2752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12087 = !DILocalVariable(name: "dev", arg: 1, scope: !12086, file: !3, line: 2751, type: !4856)
!12088 = !DILocation(line: 2751, column: 55, scope: !12086)
!12089 = !DILocalVariable(name: "kobj", scope: !12086, file: !3, line: 2753, type: !4579)
!12090 = !DILocation(line: 2753, column: 18, scope: !12086)
!12091 = !DILocation(line: 2753, column: 44, scope: !12086)
!12092 = !DILocation(line: 2753, column: 25, scope: !12086)
!12093 = !DILocalVariable(name: "error", scope: !12086, file: !3, line: 2754, type: !32)
!12094 = !DILocation(line: 2754, column: 6, scope: !12086)
!12095 = !DILocalVariable(name: "devt_str", scope: !12086, file: !3, line: 2755, type: !12096)
!12096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 120, elements: !12097)
!12097 = !{!12098}
!12098 = !DISubrange(count: 15)
!12099 = !DILocation(line: 2755, column: 7, scope: !12086)
!12100 = !DILocation(line: 2757, column: 6, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !12086, file: !3, line: 2757, column: 6)
!12102 = !DILocation(line: 2757, column: 6, scope: !12086)
!12103 = !DILocation(line: 2758, column: 3, scope: !12104)
!12104 = distinct !DILexicalBlock(scope: !12105, file: !3, line: 2758, column: 3)
!12105 = distinct !DILexicalBlock(scope: !12101, file: !3, line: 2757, column: 12)
!12106 = !DILocation(line: 2759, column: 29, scope: !12105)
!12107 = !DILocation(line: 2759, column: 36, scope: !12105)
!12108 = !DILocation(line: 2759, column: 41, scope: !12105)
!12109 = !DILocation(line: 2759, column: 47, scope: !12105)
!12110 = !DILocation(line: 2759, column: 11, scope: !12105)
!12111 = !DILocation(line: 2759, column: 9, scope: !12105)
!12112 = !DILocation(line: 2760, column: 2, scope: !12105)
!12113 = !DILocation(line: 2762, column: 9, scope: !12086)
!12114 = !DILocation(line: 2762, column: 2, scope: !12086)
!12115 = distinct !DISubprogram(name: "devtmpfs_create_node", scope: !4860, file: !4860, line: 197, type: !4911, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12116 = !DILocalVariable(name: "dev", arg: 1, scope: !12115, file: !4860, line: 197, type: !4856)
!12117 = !DILocation(line: 197, column: 55, scope: !12115)
!12118 = !DILocation(line: 197, column: 62, scope: !12115)
!12119 = distinct !DISubprogram(name: "fw_devlink_link_device", scope: !3, file: !3, line: 1442, type: !4915, scopeLine: 1443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12120 = !DILocalVariable(name: "dev", arg: 1, scope: !12119, file: !3, line: 1442, type: !4856)
!12121 = !DILocation(line: 1442, column: 51, scope: !12119)
!12122 = !DILocalVariable(name: "fw_ret", scope: !12119, file: !3, line: 1444, type: !32)
!12123 = !DILocation(line: 1444, column: 6, scope: !12119)
!12124 = !DILocation(line: 1446, column: 7, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12119, file: !3, line: 1446, column: 6)
!12126 = !DILocation(line: 1446, column: 6, scope: !12119)
!12127 = !DILocation(line: 1447, column: 3, scope: !12125)
!12128 = !DILocation(line: 1449, column: 2, scope: !12119)
!12129 = !DILocation(line: 1450, column: 7, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !12119, file: !3, line: 1450, column: 6)
!12131 = !DILocation(line: 1450, column: 6, scope: !12119)
!12132 = !DILocation(line: 1451, column: 3, scope: !12130)
!12133 = !DILocation(line: 1458, column: 7, scope: !12134)
!12134 = distinct !DILexicalBlock(scope: !12119, file: !3, line: 1458, column: 6)
!12135 = !DILocation(line: 1458, column: 6, scope: !12119)
!12136 = !DILocation(line: 1459, column: 3, scope: !12134)
!12137 = !DILocation(line: 1467, column: 7, scope: !12138)
!12138 = distinct !DILexicalBlock(scope: !12119, file: !3, line: 1467, column: 6)
!12139 = !DILocation(line: 1467, column: 6, scope: !12119)
!12140 = !DILocation(line: 1468, column: 12, scope: !12141)
!12141 = distinct !DILexicalBlock(scope: !12138, file: !3, line: 1467, column: 31)
!12142 = !DILocation(line: 1468, column: 10, scope: !12141)
!12143 = !DILocation(line: 1469, column: 7, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !12141, file: !3, line: 1469, column: 7)
!12145 = !DILocation(line: 1469, column: 14, scope: !12144)
!12146 = !DILocation(line: 1469, column: 25, scope: !12144)
!12147 = !DILocation(line: 1469, column: 28, scope: !12144)
!12148 = !DILocation(line: 1469, column: 7, scope: !12141)
!12149 = !DILocation(line: 1470, column: 11, scope: !12144)
!12150 = !DILocation(line: 1470, column: 4, scope: !12144)
!12151 = !DILocation(line: 1471, column: 2, scope: !12141)
!12152 = !DILocation(line: 1472, column: 10, scope: !12153)
!12153 = distinct !DILexicalBlock(scope: !12138, file: !3, line: 1471, column: 9)
!12154 = !DILocation(line: 1478, column: 18, scope: !12153)
!12155 = !DILocation(line: 1478, column: 23, scope: !12153)
!12156 = !DILocation(line: 1478, column: 29, scope: !12153)
!12157 = !DILocation(line: 1478, column: 3, scope: !12153)
!12158 = !DILocation(line: 1481, column: 6, scope: !12159)
!12159 = distinct !DILexicalBlock(scope: !12119, file: !3, line: 1481, column: 6)
!12160 = !DILocation(line: 1481, column: 13, scope: !12159)
!12161 = !DILocation(line: 1481, column: 6, scope: !12119)
!12162 = !DILocation(line: 1482, column: 43, scope: !12159)
!12163 = !DILocation(line: 1482, column: 3, scope: !12159)
!12164 = !DILocation(line: 1483, column: 11, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12159, file: !3, line: 1483, column: 11)
!12166 = !DILocation(line: 1483, column: 11, scope: !12159)
!12167 = !DILocation(line: 1484, column: 42, scope: !12165)
!12168 = !DILocation(line: 1484, column: 3, scope: !12165)
!12169 = !DILocation(line: 1481, column: 17, scope: !12159)
!12170 = !DILabel(scope: !12119, name: "out", file: !3, line: 1486)
!12171 = !DILocation(line: 1486, column: 1, scope: !12119)
!12172 = !DILocation(line: 1487, column: 2, scope: !12119)
!12173 = !DILocation(line: 1488, column: 1, scope: !12119)
!12174 = distinct !DISubprogram(name: "device_remove_attrs", scope: !3, file: !3, line: 2221, type: !4915, scopeLine: 2222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12175 = !DILocalVariable(name: "dev", arg: 1, scope: !12174, file: !3, line: 2221, type: !4856)
!12176 = !DILocation(line: 2221, column: 48, scope: !12174)
!12177 = !DILocalVariable(name: "class", scope: !12174, file: !3, line: 2223, type: !4981)
!12178 = !DILocation(line: 2223, column: 16, scope: !12174)
!12179 = !DILocation(line: 2223, column: 24, scope: !12174)
!12180 = !DILocation(line: 2223, column: 29, scope: !12174)
!12181 = !DILocalVariable(name: "type", scope: !12174, file: !3, line: 2224, type: !5084)
!12182 = !DILocation(line: 2224, column: 28, scope: !12174)
!12183 = !DILocation(line: 2224, column: 35, scope: !12174)
!12184 = !DILocation(line: 2224, column: 40, scope: !12174)
!12185 = !DILocation(line: 2226, column: 21, scope: !12174)
!12186 = !DILocation(line: 2226, column: 2, scope: !12174)
!12187 = !DILocation(line: 2227, column: 21, scope: !12174)
!12188 = !DILocation(line: 2227, column: 2, scope: !12174)
!12189 = !DILocation(line: 2228, column: 23, scope: !12174)
!12190 = !DILocation(line: 2228, column: 28, scope: !12174)
!12191 = !DILocation(line: 2228, column: 33, scope: !12174)
!12192 = !DILocation(line: 2228, column: 2, scope: !12174)
!12193 = !DILocation(line: 2230, column: 6, scope: !12194)
!12194 = distinct !DILexicalBlock(scope: !12174, file: !3, line: 2230, column: 6)
!12195 = !DILocation(line: 2230, column: 6, scope: !12174)
!12196 = !DILocation(line: 2231, column: 24, scope: !12194)
!12197 = !DILocation(line: 2231, column: 29, scope: !12194)
!12198 = !DILocation(line: 2231, column: 35, scope: !12194)
!12199 = !DILocation(line: 2231, column: 3, scope: !12194)
!12200 = !DILocation(line: 2233, column: 6, scope: !12201)
!12201 = distinct !DILexicalBlock(scope: !12174, file: !3, line: 2233, column: 6)
!12202 = !DILocation(line: 2233, column: 6, scope: !12174)
!12203 = !DILocation(line: 2234, column: 24, scope: !12201)
!12204 = !DILocation(line: 2234, column: 29, scope: !12201)
!12205 = !DILocation(line: 2234, column: 36, scope: !12201)
!12206 = !DILocation(line: 2234, column: 3, scope: !12201)
!12207 = !DILocation(line: 2235, column: 1, scope: !12174)
!12208 = distinct !DISubprogram(name: "device_remove_class_symlinks", scope: !3, file: !3, line: 2693, type: !4915, scopeLine: 2694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12209 = !DILocalVariable(name: "dev", arg: 1, scope: !12208, file: !3, line: 2693, type: !4856)
!12210 = !DILocation(line: 2693, column: 57, scope: !12208)
!12211 = !DILocation(line: 2695, column: 18, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12208, file: !3, line: 2695, column: 6)
!12213 = !DILocation(line: 2695, column: 6, scope: !12212)
!12214 = !DILocation(line: 2695, column: 6, scope: !12208)
!12215 = !DILocation(line: 2696, column: 22, scope: !12212)
!12216 = !DILocation(line: 2696, column: 27, scope: !12212)
!12217 = !DILocation(line: 2696, column: 3, scope: !12212)
!12218 = !DILocation(line: 2698, column: 7, scope: !12219)
!12219 = distinct !DILexicalBlock(scope: !12208, file: !3, line: 2698, column: 6)
!12220 = !DILocation(line: 2698, column: 12, scope: !12219)
!12221 = !DILocation(line: 2698, column: 6, scope: !12208)
!12222 = !DILocation(line: 2699, column: 3, scope: !12219)
!12223 = !DILocation(line: 2701, column: 6, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12208, file: !3, line: 2701, column: 6)
!12225 = !DILocation(line: 2701, column: 11, scope: !12224)
!12226 = !DILocation(line: 2701, column: 18, scope: !12224)
!12227 = !DILocation(line: 2701, column: 45, scope: !12224)
!12228 = !DILocation(line: 2701, column: 21, scope: !12224)
!12229 = !DILocation(line: 2701, column: 6, scope: !12208)
!12230 = !DILocation(line: 2702, column: 22, scope: !12224)
!12231 = !DILocation(line: 2702, column: 27, scope: !12224)
!12232 = !DILocation(line: 2702, column: 3, scope: !12224)
!12233 = !DILocation(line: 2703, column: 21, scope: !12208)
!12234 = !DILocation(line: 2703, column: 26, scope: !12208)
!12235 = !DILocation(line: 2703, column: 2, scope: !12208)
!12236 = !DILocation(line: 2708, column: 21, scope: !12208)
!12237 = !DILocation(line: 2708, column: 26, scope: !12208)
!12238 = !DILocation(line: 2708, column: 33, scope: !12208)
!12239 = !DILocation(line: 2708, column: 36, scope: !12208)
!12240 = !DILocation(line: 2708, column: 43, scope: !12208)
!12241 = !DILocation(line: 2708, column: 50, scope: !12208)
!12242 = !DILocation(line: 2708, column: 55, scope: !12208)
!12243 = !DILocation(line: 2708, column: 70, scope: !12208)
!12244 = !DILocation(line: 2708, column: 61, scope: !12208)
!12245 = !DILocation(line: 2708, column: 2, scope: !12208)
!12246 = !DILocation(line: 2709, column: 1, scope: !12208)
!12247 = distinct !DISubprogram(name: "cleanup_glue_dir", scope: !3, file: !3, line: 2577, type: !12248, scopeLine: 2578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12248 = !DISubroutineType(types: !12249)
!12249 = !{null, !4856, !4579}
!12250 = !DILocalVariable(name: "dev", arg: 1, scope: !12247, file: !3, line: 2577, type: !4856)
!12251 = !DILocation(line: 2577, column: 45, scope: !12247)
!12252 = !DILocalVariable(name: "glue_dir", arg: 2, scope: !12247, file: !3, line: 2577, type: !4579)
!12253 = !DILocation(line: 2577, column: 66, scope: !12247)
!12254 = !DILocalVariable(name: "ref", scope: !12247, file: !3, line: 2579, type: !7)
!12255 = !DILocation(line: 2579, column: 15, scope: !12247)
!12256 = !DILocation(line: 2582, column: 24, scope: !12257)
!12257 = distinct !DILexicalBlock(scope: !12247, file: !3, line: 2582, column: 6)
!12258 = !DILocation(line: 2582, column: 34, scope: !12257)
!12259 = !DILocation(line: 2582, column: 7, scope: !12257)
!12260 = !DILocation(line: 2582, column: 6, scope: !12247)
!12261 = !DILocation(line: 2583, column: 3, scope: !12257)
!12262 = !DILocation(line: 2585, column: 2, scope: !12247)
!12263 = !DILocation(line: 2634, column: 19, scope: !12247)
!12264 = !DILocation(line: 2634, column: 29, scope: !12247)
!12265 = !DILocation(line: 2634, column: 8, scope: !12247)
!12266 = !DILocation(line: 2634, column: 6, scope: !12247)
!12267 = !DILocation(line: 2635, column: 28, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12247, file: !3, line: 2635, column: 6)
!12269 = !DILocation(line: 2635, column: 7, scope: !12268)
!12270 = !DILocation(line: 2635, column: 38, scope: !12268)
!12271 = !DILocation(line: 2635, column: 42, scope: !12268)
!12272 = !DILocation(line: 2635, column: 6, scope: !12247)
!12273 = !DILocation(line: 2636, column: 15, scope: !12268)
!12274 = !DILocation(line: 2636, column: 3, scope: !12268)
!12275 = !DILocation(line: 2637, column: 14, scope: !12247)
!12276 = !DILocation(line: 2637, column: 2, scope: !12247)
!12277 = !DILocation(line: 2638, column: 2, scope: !12247)
!12278 = !DILocation(line: 2639, column: 1, scope: !12247)
!12279 = distinct !DISubprogram(name: "kobj_to_dev", scope: !4570, file: !4570, line: 591, type: !12280, scopeLine: 592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12280 = !DISubroutineType(types: !12281)
!12281 = !{!4856, !4579}
!12282 = !DILocalVariable(name: "kobj", arg: 1, scope: !12279, file: !4570, line: 591, type: !4579)
!12283 = !DILocation(line: 591, column: 58, scope: !12279)
!12284 = !DILocalVariable(name: "__mptr", scope: !12285, file: !4570, line: 593, type: !591)
!12285 = distinct !DILexicalBlock(scope: !12279, file: !4570, line: 593, column: 9)
!12286 = !DILocation(line: 593, column: 9, scope: !12285)
!12287 = !DILocation(line: 593, column: 9, scope: !12288)
!12288 = distinct !DILexicalBlock(scope: !12285, file: !4570, line: 593, column: 9)
!12289 = !DILocation(line: 593, column: 2, scope: !12279)
!12290 = distinct !DISubprogram(name: "kill_device", scope: !3, file: !3, line: 3039, type: !8670, scopeLine: 3040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12291 = !DILocalVariable(name: "dev", arg: 1, scope: !12290, file: !3, line: 3039, type: !4856)
!12292 = !DILocation(line: 3039, column: 33, scope: !12290)
!12293 = !DILocation(line: 3048, column: 2, scope: !12290)
!12294 = !DILocation(line: 3048, column: 2, scope: !12295)
!12295 = distinct !DILexicalBlock(scope: !12290, file: !3, line: 3048, column: 2)
!12296 = !DILocation(line: 3050, column: 6, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12290, file: !3, line: 3050, column: 6)
!12298 = !DILocation(line: 3050, column: 11, scope: !12297)
!12299 = !DILocation(line: 3050, column: 14, scope: !12297)
!12300 = !DILocation(line: 3050, column: 6, scope: !12290)
!12301 = !DILocation(line: 3051, column: 3, scope: !12297)
!12302 = !DILocation(line: 3052, column: 2, scope: !12290)
!12303 = !DILocation(line: 3052, column: 7, scope: !12290)
!12304 = !DILocation(line: 3052, column: 10, scope: !12290)
!12305 = !DILocation(line: 3052, column: 15, scope: !12290)
!12306 = !DILocation(line: 3053, column: 2, scope: !12290)
!12307 = !DILocation(line: 3054, column: 1, scope: !12290)
!12308 = distinct !DISubprogram(name: "device_del", scope: !3, file: !3, line: 3070, type: !4915, scopeLine: 3071, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12309 = !DILocalVariable(name: "dev", arg: 1, scope: !12308, file: !3, line: 3070, type: !4856)
!12310 = !DILocation(line: 3070, column: 32, scope: !12308)
!12311 = !DILocalVariable(name: "parent", scope: !12308, file: !3, line: 3072, type: !4856)
!12312 = !DILocation(line: 3072, column: 17, scope: !12308)
!12313 = !DILocation(line: 3072, column: 26, scope: !12308)
!12314 = !DILocation(line: 3072, column: 31, scope: !12308)
!12315 = !DILocalVariable(name: "glue_dir", scope: !12308, file: !3, line: 3073, type: !4579)
!12316 = !DILocation(line: 3073, column: 18, scope: !12308)
!12317 = !DILocalVariable(name: "class_intf", scope: !12308, file: !3, line: 3074, type: !7474)
!12318 = !DILocation(line: 3074, column: 26, scope: !12308)
!12319 = !DILocalVariable(name: "noio_flag", scope: !12308, file: !3, line: 3075, type: !7)
!12320 = !DILocation(line: 3075, column: 15, scope: !12308)
!12321 = !DILocation(line: 3077, column: 14, scope: !12308)
!12322 = !DILocation(line: 3077, column: 2, scope: !12308)
!12323 = !DILocation(line: 3078, column: 14, scope: !12308)
!12324 = !DILocation(line: 3078, column: 2, scope: !12308)
!12325 = !DILocation(line: 3079, column: 16, scope: !12308)
!12326 = !DILocation(line: 3079, column: 2, scope: !12308)
!12327 = !DILocation(line: 3081, column: 6, scope: !12328)
!12328 = distinct !DILexicalBlock(scope: !12308, file: !3, line: 3081, column: 6)
!12329 = !DILocation(line: 3081, column: 11, scope: !12328)
!12330 = !DILocation(line: 3081, column: 18, scope: !12328)
!12331 = !DILocation(line: 3081, column: 21, scope: !12328)
!12332 = !DILocation(line: 3081, column: 26, scope: !12328)
!12333 = !DILocation(line: 3081, column: 34, scope: !12328)
!12334 = !DILocation(line: 3081, column: 41, scope: !12328)
!12335 = !DILocation(line: 3081, column: 38, scope: !12328)
!12336 = !DILocation(line: 3081, column: 6, scope: !12308)
!12337 = !DILocation(line: 3082, column: 3, scope: !12328)
!12338 = !DILocation(line: 3082, column: 8, scope: !12328)
!12339 = !DILocation(line: 3082, column: 16, scope: !12328)
!12340 = !DILocation(line: 3082, column: 20, scope: !12328)
!12341 = !DILocation(line: 3087, column: 14, scope: !12308)
!12342 = !DILocation(line: 3087, column: 12, scope: !12308)
!12343 = !DILocation(line: 3088, column: 6, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12308, file: !3, line: 3088, column: 6)
!12345 = !DILocation(line: 3088, column: 11, scope: !12344)
!12346 = !DILocation(line: 3088, column: 6, scope: !12308)
!12347 = !DILocation(line: 3089, column: 33, scope: !12344)
!12348 = !DILocation(line: 3089, column: 38, scope: !12344)
!12349 = !DILocation(line: 3089, column: 43, scope: !12344)
!12350 = !DILocation(line: 3089, column: 46, scope: !12344)
!12351 = !DILocation(line: 3090, column: 34, scope: !12344)
!12352 = !DILocation(line: 3089, column: 3, scope: !12344)
!12353 = !DILocation(line: 3092, column: 19, scope: !12308)
!12354 = !DILocation(line: 3092, column: 2, scope: !12308)
!12355 = !DILocation(line: 3093, column: 6, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12308, file: !3, line: 3093, column: 6)
!12357 = !DILocation(line: 3093, column: 6, scope: !12308)
!12358 = !DILocation(line: 3094, column: 14, scope: !12356)
!12359 = !DILocation(line: 3094, column: 19, scope: !12356)
!12360 = !DILocation(line: 3094, column: 22, scope: !12356)
!12361 = !DILocation(line: 3094, column: 3, scope: !12356)
!12362 = !DILocation(line: 3095, column: 6, scope: !12363)
!12363 = distinct !DILexicalBlock(scope: !12308, file: !3, line: 3095, column: 6)
!12364 = !DILocation(line: 3095, column: 6, scope: !12308)
!12365 = !DILocation(line: 3096, column: 24, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12363, file: !3, line: 3095, column: 24)
!12367 = !DILocation(line: 3096, column: 3, scope: !12366)
!12368 = !DILocation(line: 3097, column: 31, scope: !12366)
!12369 = !DILocation(line: 3097, column: 3, scope: !12366)
!12370 = !DILocation(line: 3098, column: 22, scope: !12366)
!12371 = !DILocation(line: 3098, column: 3, scope: !12366)
!12372 = !DILocation(line: 3099, column: 2, scope: !12366)
!12373 = !DILocation(line: 3100, column: 6, scope: !12374)
!12374 = distinct !DILexicalBlock(scope: !12308, file: !3, line: 3100, column: 6)
!12375 = !DILocation(line: 3100, column: 11, scope: !12374)
!12376 = !DILocation(line: 3100, column: 6, scope: !12308)
!12377 = !DILocation(line: 3101, column: 32, scope: !12378)
!12378 = distinct !DILexicalBlock(scope: !12374, file: !3, line: 3100, column: 18)
!12379 = !DILocation(line: 3101, column: 3, scope: !12378)
!12380 = !DILocation(line: 3103, column: 15, scope: !12378)
!12381 = !DILocation(line: 3103, column: 20, scope: !12378)
!12382 = !DILocation(line: 3103, column: 27, scope: !12378)
!12383 = !DILocation(line: 3103, column: 30, scope: !12378)
!12384 = !DILocation(line: 3103, column: 3, scope: !12378)
!12385 = !DILocalVariable(name: "__mptr", scope: !12386, file: !3, line: 3105, type: !591)
!12386 = distinct !DILexicalBlock(scope: !12387, file: !3, line: 3105, column: 3)
!12387 = distinct !DILexicalBlock(scope: !12378, file: !3, line: 3105, column: 3)
!12388 = !DILocation(line: 3105, column: 3, scope: !12386)
!12389 = !DILocation(line: 3105, column: 3, scope: !12390)
!12390 = distinct !DILexicalBlock(scope: !12386, file: !3, line: 3105, column: 3)
!12391 = !DILocation(line: 3105, column: 3, scope: !12387)
!12392 = !DILocation(line: 3105, column: 3, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !12387, file: !3, line: 3105, column: 3)
!12394 = !DILocation(line: 3107, column: 8, scope: !12395)
!12395 = distinct !DILexicalBlock(scope: !12393, file: !3, line: 3107, column: 8)
!12396 = !DILocation(line: 3107, column: 20, scope: !12395)
!12397 = !DILocation(line: 3107, column: 8, scope: !12393)
!12398 = !DILocation(line: 3108, column: 5, scope: !12395)
!12399 = !DILocation(line: 3108, column: 17, scope: !12395)
!12400 = !DILocation(line: 3108, column: 28, scope: !12395)
!12401 = !DILocation(line: 3108, column: 33, scope: !12395)
!12402 = !DILocalVariable(name: "__mptr", scope: !12403, file: !3, line: 3105, type: !591)
!12403 = distinct !DILexicalBlock(scope: !12393, file: !3, line: 3105, column: 3)
!12404 = !DILocation(line: 3105, column: 3, scope: !12403)
!12405 = !DILocation(line: 3105, column: 3, scope: !12406)
!12406 = distinct !DILexicalBlock(scope: !12403, file: !3, line: 3105, column: 3)
!12407 = distinct !{!12407, !12391, !12408}
!12408 = !DILocation(line: 3108, column: 43, scope: !12387)
!12409 = !DILocation(line: 3110, column: 14, scope: !12378)
!12410 = !DILocation(line: 3110, column: 19, scope: !12378)
!12411 = !DILocation(line: 3110, column: 22, scope: !12378)
!12412 = !DILocation(line: 3110, column: 3, scope: !12378)
!12413 = !DILocation(line: 3111, column: 17, scope: !12378)
!12414 = !DILocation(line: 3111, column: 22, scope: !12378)
!12415 = !DILocation(line: 3111, column: 29, scope: !12378)
!12416 = !DILocation(line: 3111, column: 32, scope: !12378)
!12417 = !DILocation(line: 3111, column: 3, scope: !12378)
!12418 = !DILocation(line: 3112, column: 2, scope: !12378)
!12419 = !DILocation(line: 3113, column: 21, scope: !12308)
!12420 = !DILocation(line: 3113, column: 2, scope: !12308)
!12421 = !DILocation(line: 3114, column: 22, scope: !12308)
!12422 = !DILocation(line: 3114, column: 2, scope: !12308)
!12423 = !DILocation(line: 3115, column: 20, scope: !12308)
!12424 = !DILocation(line: 3115, column: 2, scope: !12308)
!12425 = !DILocation(line: 3116, column: 19, scope: !12308)
!12426 = !DILocation(line: 3116, column: 2, scope: !12308)
!12427 = !DILocation(line: 3117, column: 28, scope: !12308)
!12428 = !DILocation(line: 3117, column: 2, scope: !12308)
!12429 = !DILocation(line: 3118, column: 25, scope: !12308)
!12430 = !DILocation(line: 3118, column: 2, scope: !12308)
!12431 = !DILocation(line: 3119, column: 27, scope: !12308)
!12432 = !DILocation(line: 3119, column: 2, scope: !12308)
!12433 = !DILocation(line: 3120, column: 21, scope: !12308)
!12434 = !DILocation(line: 3120, column: 2, scope: !12308)
!12435 = !DILocation(line: 3122, column: 6, scope: !12436)
!12436 = distinct !DILexicalBlock(scope: !12308, file: !3, line: 3122, column: 6)
!12437 = !DILocation(line: 3122, column: 11, scope: !12436)
!12438 = !DILocation(line: 3122, column: 6, scope: !12308)
!12439 = !DILocation(line: 3123, column: 33, scope: !12436)
!12440 = !DILocation(line: 3123, column: 38, scope: !12436)
!12441 = !DILocation(line: 3123, column: 43, scope: !12436)
!12442 = !DILocation(line: 3123, column: 46, scope: !12436)
!12443 = !DILocation(line: 3124, column: 38, scope: !12436)
!12444 = !DILocation(line: 3123, column: 3, scope: !12436)
!12445 = !DILocation(line: 3125, column: 18, scope: !12308)
!12446 = !DILocation(line: 3125, column: 23, scope: !12308)
!12447 = !DILocation(line: 3125, column: 2, scope: !12308)
!12448 = !DILocation(line: 3126, column: 26, scope: !12308)
!12449 = !DILocation(line: 3126, column: 13, scope: !12308)
!12450 = !DILocation(line: 3126, column: 11, scope: !12308)
!12451 = !DILocation(line: 3127, column: 15, scope: !12308)
!12452 = !DILocation(line: 3127, column: 20, scope: !12308)
!12453 = !DILocation(line: 3127, column: 2, scope: !12308)
!12454 = !DILocation(line: 3128, column: 19, scope: !12308)
!12455 = !DILocation(line: 3128, column: 24, scope: !12308)
!12456 = !DILocation(line: 3128, column: 2, scope: !12308)
!12457 = !DILocation(line: 3129, column: 24, scope: !12308)
!12458 = !DILocation(line: 3129, column: 2, scope: !12308)
!12459 = !DILocation(line: 3130, column: 13, scope: !12308)
!12460 = !DILocation(line: 3130, column: 2, scope: !12308)
!12461 = !DILocation(line: 3131, column: 1, scope: !12308)
!12462 = distinct !DISubprogram(name: "device_lock", scope: !4570, file: !4570, line: 729, type: !4915, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12463 = !DILocalVariable(name: "dev", arg: 1, scope: !12462, file: !4570, line: 729, type: !4856)
!12464 = !DILocation(line: 729, column: 47, scope: !12462)
!12465 = !DILocation(line: 731, column: 14, scope: !12462)
!12466 = !DILocation(line: 731, column: 19, scope: !12462)
!12467 = !DILocation(line: 731, column: 2, scope: !12462)
!12468 = !DILocation(line: 732, column: 1, scope: !12462)
!12469 = distinct !DISubprogram(name: "device_unlock", scope: !4570, file: !4570, line: 744, type: !4915, scopeLine: 745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12470 = !DILocalVariable(name: "dev", arg: 1, scope: !12469, file: !4570, line: 744, type: !4856)
!12471 = !DILocation(line: 744, column: 49, scope: !12469)
!12472 = !DILocation(line: 746, column: 16, scope: !12469)
!12473 = !DILocation(line: 746, column: 21, scope: !12469)
!12474 = !DILocation(line: 746, column: 2, scope: !12469)
!12475 = !DILocation(line: 747, column: 1, scope: !12469)
!12476 = distinct !DISubprogram(name: "memalloc_noio_save", scope: !12477, file: !12477, line: 194, type: !12478, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12477 = !DIFile(filename: "./include/linux/sched/mm.h", directory: "/home/lizy2001/genbc/linux")
!12478 = !DISubroutineType(types: !12479)
!12479 = !{!7}
!12480 = !DILocation(line: 15, column: 9, scope: !10543, inlinedAt: !12481)
!12481 = distinct !DILocation(line: 197, column: 2, scope: !12476)
!12482 = !DILocation(line: 15, column: 9, scope: !10551, inlinedAt: !12481)
!12483 = !DILocation(line: 15, column: 9, scope: !10554, inlinedAt: !12481)
!12484 = !DILocation(line: 15, column: 9, scope: !10543, inlinedAt: !12485)
!12485 = distinct !DILocation(line: 196, column: 23, scope: !12476)
!12486 = !DILocation(line: 15, column: 9, scope: !10551, inlinedAt: !12485)
!12487 = !DILocation(line: 15, column: 9, scope: !10554, inlinedAt: !12485)
!12488 = !DILocalVariable(name: "flags", scope: !12476, file: !12477, line: 196, type: !7)
!12489 = !DILocation(line: 196, column: 15, scope: !12476)
!12490 = !DILocation(line: 196, column: 32, scope: !12476)
!12491 = !DILocation(line: 196, column: 38, scope: !12476)
!12492 = !DILocation(line: 197, column: 11, scope: !12476)
!12493 = !DILocation(line: 197, column: 17, scope: !12476)
!12494 = !DILocation(line: 198, column: 9, scope: !12476)
!12495 = !DILocation(line: 198, column: 2, scope: !12476)
!12496 = distinct !DISubprogram(name: "devtmpfs_delete_node", scope: !4860, file: !4860, line: 198, type: !4911, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12497 = !DILocalVariable(name: "dev", arg: 1, scope: !12496, file: !4860, line: 198, type: !4856)
!12498 = !DILocation(line: 198, column: 55, scope: !12496)
!12499 = !DILocation(line: 198, column: 62, scope: !12496)
!12500 = distinct !DISubprogram(name: "device_remove_sys_dev_entry", scope: !3, file: !3, line: 2765, type: !4915, scopeLine: 2766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12501 = !DILocalVariable(name: "dev", arg: 1, scope: !12500, file: !3, line: 2765, type: !4856)
!12502 = !DILocation(line: 2765, column: 56, scope: !12500)
!12503 = !DILocalVariable(name: "kobj", scope: !12500, file: !3, line: 2767, type: !4579)
!12504 = !DILocation(line: 2767, column: 18, scope: !12500)
!12505 = !DILocation(line: 2767, column: 44, scope: !12500)
!12506 = !DILocation(line: 2767, column: 25, scope: !12500)
!12507 = !DILocalVariable(name: "devt_str", scope: !12500, file: !3, line: 2768, type: !12096)
!12508 = !DILocation(line: 2768, column: 7, scope: !12500)
!12509 = !DILocation(line: 2770, column: 6, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 2770, column: 6)
!12511 = !DILocation(line: 2770, column: 6, scope: !12500)
!12512 = !DILocation(line: 2771, column: 3, scope: !12513)
!12513 = distinct !DILexicalBlock(scope: !12514, file: !3, line: 2771, column: 3)
!12514 = distinct !DILexicalBlock(scope: !12510, file: !3, line: 2770, column: 12)
!12515 = !DILocation(line: 2772, column: 21, scope: !12514)
!12516 = !DILocation(line: 2772, column: 27, scope: !12514)
!12517 = !DILocation(line: 2772, column: 3, scope: !12514)
!12518 = !DILocation(line: 2773, column: 2, scope: !12514)
!12519 = !DILocation(line: 2774, column: 1, scope: !12500)
!12520 = distinct !DISubprogram(name: "device_links_purge", scope: !3, file: !3, line: 1381, type: !4915, scopeLine: 1382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12521 = !DILocalVariable(name: "dev", arg: 1, scope: !12520, file: !3, line: 1381, type: !4856)
!12522 = !DILocation(line: 1381, column: 47, scope: !12520)
!12523 = !DILocalVariable(name: "link", scope: !12520, file: !3, line: 1383, type: !7438)
!12524 = !DILocation(line: 1383, column: 22, scope: !12520)
!12525 = !DILocalVariable(name: "ln", scope: !12520, file: !3, line: 1383, type: !7438)
!12526 = !DILocation(line: 1383, column: 29, scope: !12520)
!12527 = !DILocation(line: 1385, column: 6, scope: !12528)
!12528 = distinct !DILexicalBlock(scope: !12520, file: !3, line: 1385, column: 6)
!12529 = !DILocation(line: 1385, column: 11, scope: !12528)
!12530 = !DILocation(line: 1385, column: 17, scope: !12528)
!12531 = !DILocation(line: 1385, column: 6, scope: !12520)
!12532 = !DILocation(line: 1386, column: 3, scope: !12528)
!12533 = !DILocation(line: 1388, column: 2, scope: !12520)
!12534 = !DILocation(line: 1389, column: 12, scope: !12520)
!12535 = !DILocation(line: 1389, column: 17, scope: !12520)
!12536 = !DILocation(line: 1389, column: 23, scope: !12520)
!12537 = !DILocation(line: 1389, column: 2, scope: !12520)
!12538 = !DILocation(line: 1390, column: 2, scope: !12520)
!12539 = !DILocation(line: 1396, column: 2, scope: !12520)
!12540 = !DILocalVariable(name: "__mptr", scope: !12541, file: !3, line: 1398, type: !591)
!12541 = distinct !DILexicalBlock(scope: !12542, file: !3, line: 1398, column: 2)
!12542 = distinct !DILexicalBlock(scope: !12520, file: !3, line: 1398, column: 2)
!12543 = !DILocation(line: 1398, column: 2, scope: !12541)
!12544 = !DILocation(line: 1398, column: 2, scope: !12545)
!12545 = distinct !DILexicalBlock(scope: !12541, file: !3, line: 1398, column: 2)
!12546 = !DILocation(line: 1398, column: 2, scope: !12542)
!12547 = !DILocalVariable(name: "__mptr", scope: !12548, file: !3, line: 1398, type: !591)
!12548 = distinct !DILexicalBlock(scope: !12542, file: !3, line: 1398, column: 2)
!12549 = !DILocation(line: 1398, column: 2, scope: !12548)
!12550 = !DILocation(line: 1398, column: 2, scope: !12551)
!12551 = distinct !DILexicalBlock(scope: !12548, file: !3, line: 1398, column: 2)
!12552 = !DILocation(line: 1398, column: 2, scope: !12553)
!12553 = distinct !DILexicalBlock(scope: !12542, file: !3, line: 1398, column: 2)
!12554 = !DILocalVariable(name: "__ret_warn_on", scope: !12555, file: !3, line: 1399, type: !32)
!12555 = distinct !DILexicalBlock(scope: !12556, file: !3, line: 1399, column: 3)
!12556 = distinct !DILexicalBlock(scope: !12553, file: !3, line: 1398, column: 76)
!12557 = !DILocation(line: 1399, column: 3, scope: !12555)
!12558 = !DILocation(line: 1399, column: 3, scope: !12559)
!12559 = distinct !DILexicalBlock(scope: !12555, file: !3, line: 1399, column: 3)
!12560 = !DILocation(line: 1399, column: 3, scope: !12561)
!12561 = distinct !DILexicalBlock(scope: !12559, file: !3, line: 1399, column: 3)
!12562 = !DILocation(line: 1399, column: 3, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12561, file: !3, line: 1399, column: 3)
!12564 = !DILocation(line: 1399, column: 3, scope: !12565)
!12565 = distinct !DILexicalBlock(scope: !12561, file: !3, line: 1399, column: 3)
!12566 = !{i32 -2139072152, i32 -2139072123, i32 -2139072077, i32 -2139072019, i32 -2139071965, i32 -2139071911, i32 -2139071856, i32 -2139071825}
!12567 = !DILocation(line: 1399, column: 3, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12561, file: !3, line: 1399, column: 3)
!12569 = !{i32 -2139071423, i32 -2139071416, i32 -2139071364, i32 -2139071333, i32 -2139071303}
!12570 = !DILocation(line: 1399, column: 3, scope: !12571)
!12571 = distinct !DILexicalBlock(scope: !12561, file: !3, line: 1399, column: 3)
!12572 = !DILocation(line: 1400, column: 22, scope: !12556)
!12573 = !DILocation(line: 1400, column: 28, scope: !12556)
!12574 = !DILocation(line: 1400, column: 3, scope: !12556)
!12575 = !DILocation(line: 1401, column: 2, scope: !12556)
!12576 = !DILocalVariable(name: "__mptr", scope: !12577, file: !3, line: 1398, type: !591)
!12577 = distinct !DILexicalBlock(scope: !12553, file: !3, line: 1398, column: 2)
!12578 = !DILocation(line: 1398, column: 2, scope: !12577)
!12579 = !DILocation(line: 1398, column: 2, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12577, file: !3, line: 1398, column: 2)
!12581 = distinct !{!12581, !12546, !12582}
!12582 = !DILocation(line: 1401, column: 2, scope: !12542)
!12583 = !DILocalVariable(name: "__mptr", scope: !12584, file: !3, line: 1403, type: !591)
!12584 = distinct !DILexicalBlock(scope: !12585, file: !3, line: 1403, column: 2)
!12585 = distinct !DILexicalBlock(scope: !12520, file: !3, line: 1403, column: 2)
!12586 = !DILocation(line: 1403, column: 2, scope: !12584)
!12587 = !DILocation(line: 1403, column: 2, scope: !12588)
!12588 = distinct !DILexicalBlock(scope: !12584, file: !3, line: 1403, column: 2)
!12589 = !DILocation(line: 1403, column: 2, scope: !12585)
!12590 = !DILocalVariable(name: "__mptr", scope: !12591, file: !3, line: 1403, type: !591)
!12591 = distinct !DILexicalBlock(scope: !12585, file: !3, line: 1403, column: 2)
!12592 = !DILocation(line: 1403, column: 2, scope: !12591)
!12593 = !DILocation(line: 1403, column: 2, scope: !12594)
!12594 = distinct !DILexicalBlock(scope: !12591, file: !3, line: 1403, column: 2)
!12595 = !DILocation(line: 1403, column: 2, scope: !12596)
!12596 = distinct !DILexicalBlock(scope: !12585, file: !3, line: 1403, column: 2)
!12597 = !DILocalVariable(name: "__ret_warn_on", scope: !12598, file: !3, line: 1404, type: !32)
!12598 = distinct !DILexicalBlock(scope: !12599, file: !3, line: 1404, column: 3)
!12599 = distinct !DILexicalBlock(scope: !12596, file: !3, line: 1403, column: 76)
!12600 = !DILocation(line: 1404, column: 3, scope: !12598)
!12601 = !DILocation(line: 0, scope: !12598)
!12602 = !DILocation(line: 1404, column: 3, scope: !12603)
!12603 = distinct !DILexicalBlock(scope: !12598, file: !3, line: 1404, column: 3)
!12604 = !DILocation(line: 1404, column: 3, scope: !12605)
!12605 = distinct !DILexicalBlock(scope: !12603, file: !3, line: 1404, column: 3)
!12606 = !DILocation(line: 1404, column: 3, scope: !12607)
!12607 = distinct !DILexicalBlock(scope: !12605, file: !3, line: 1404, column: 3)
!12608 = !DILocation(line: 1404, column: 3, scope: !12609)
!12609 = distinct !DILexicalBlock(scope: !12605, file: !3, line: 1404, column: 3)
!12610 = !{i32 -2139064764, i32 -2139064735, i32 -2139064689, i32 -2139064631, i32 -2139064577, i32 -2139064523, i32 -2139064468, i32 -2139064437}
!12611 = !DILocation(line: 1404, column: 3, scope: !12612)
!12612 = distinct !DILexicalBlock(scope: !12605, file: !3, line: 1404, column: 3)
!12613 = !{i32 -2139064035, i32 -2139064028, i32 -2139063976, i32 -2139063945, i32 -2139063915}
!12614 = !DILocation(line: 1404, column: 3, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12605, file: !3, line: 1404, column: 3)
!12616 = !DILocation(line: 1406, column: 22, scope: !12599)
!12617 = !DILocation(line: 1406, column: 28, scope: !12599)
!12618 = !DILocation(line: 1406, column: 3, scope: !12599)
!12619 = !DILocation(line: 1407, column: 2, scope: !12599)
!12620 = !DILocalVariable(name: "__mptr", scope: !12621, file: !3, line: 1403, type: !591)
!12621 = distinct !DILexicalBlock(scope: !12596, file: !3, line: 1403, column: 2)
!12622 = !DILocation(line: 1403, column: 2, scope: !12621)
!12623 = !DILocation(line: 1403, column: 2, scope: !12624)
!12624 = distinct !DILexicalBlock(scope: !12621, file: !3, line: 1403, column: 2)
!12625 = distinct !{!12625, !12589, !12626}
!12626 = !DILocation(line: 1407, column: 2, scope: !12585)
!12627 = !DILocation(line: 1409, column: 2, scope: !12520)
!12628 = !DILocation(line: 1410, column: 1, scope: !12520)
!12629 = distinct !DISubprogram(name: "memalloc_noio_restore", scope: !12477, file: !12477, line: 209, type: !12630, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12630 = !DISubroutineType(types: !12631)
!12631 = !{null, !7}
!12632 = !DILocation(line: 15, column: 9, scope: !10543, inlinedAt: !12633)
!12633 = distinct !DILocation(line: 211, column: 2, scope: !12629)
!12634 = !DILocation(line: 15, column: 9, scope: !10551, inlinedAt: !12633)
!12635 = !DILocation(line: 15, column: 9, scope: !10554, inlinedAt: !12633)
!12636 = !DILocation(line: 15, column: 9, scope: !10543, inlinedAt: !12637)
!12637 = distinct !DILocation(line: 211, column: 20, scope: !12629)
!12638 = !DILocation(line: 15, column: 9, scope: !10551, inlinedAt: !12637)
!12639 = !DILocation(line: 15, column: 9, scope: !10554, inlinedAt: !12637)
!12640 = !DILocalVariable(name: "flags", arg: 1, scope: !12629, file: !12477, line: 209, type: !7)
!12641 = !DILocation(line: 209, column: 55, scope: !12629)
!12642 = !DILocation(line: 211, column: 29, scope: !12629)
!12643 = !DILocation(line: 211, column: 35, scope: !12629)
!12644 = !DILocation(line: 211, column: 58, scope: !12629)
!12645 = !DILocation(line: 211, column: 56, scope: !12629)
!12646 = !DILocation(line: 211, column: 11, scope: !12629)
!12647 = !DILocation(line: 211, column: 17, scope: !12629)
!12648 = !DILocation(line: 212, column: 1, scope: !12629)
!12649 = distinct !DISubprogram(name: "device_unregister", scope: !3, file: !3, line: 3145, type: !4915, scopeLine: 3146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12650 = !DILocalVariable(name: "dev", arg: 1, scope: !12649, file: !3, line: 3145, type: !4856)
!12651 = !DILocation(line: 3145, column: 39, scope: !12649)
!12652 = !DILocation(line: 3147, column: 2, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12654, file: !3, line: 3147, column: 2)
!12654 = distinct !DILexicalBlock(scope: !12649, file: !3, line: 3147, column: 2)
!12655 = !DILocation(line: 3147, column: 2, scope: !12654)
!12656 = !DILocation(line: 3148, column: 13, scope: !12649)
!12657 = !DILocation(line: 3148, column: 2, scope: !12649)
!12658 = !DILocation(line: 3149, column: 13, scope: !12649)
!12659 = !DILocation(line: 3149, column: 2, scope: !12649)
!12660 = !DILocation(line: 3150, column: 1, scope: !12649)
!12661 = distinct !DISubprogram(name: "device_get_devnode", scope: !3, file: !3, line: 3192, type: !12662, scopeLine: 3195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12662 = !DISubroutineType(types: !12663)
!12663 = !{!292, !4856, !4995, !2904, !2905, !5384}
!12664 = !DILocalVariable(name: "dev", arg: 1, scope: !12661, file: !3, line: 3192, type: !4856)
!12665 = !DILocation(line: 3192, column: 47, scope: !12661)
!12666 = !DILocalVariable(name: "mode", arg: 2, scope: !12661, file: !3, line: 3193, type: !4995)
!12667 = !DILocation(line: 3193, column: 20, scope: !12661)
!12668 = !DILocalVariable(name: "uid", arg: 3, scope: !12661, file: !3, line: 3193, type: !2904)
!12669 = !DILocation(line: 3193, column: 34, scope: !12661)
!12670 = !DILocalVariable(name: "gid", arg: 4, scope: !12661, file: !3, line: 3193, type: !2905)
!12671 = !DILocation(line: 3193, column: 47, scope: !12661)
!12672 = !DILocalVariable(name: "tmp", arg: 5, scope: !12661, file: !3, line: 3194, type: !5384)
!12673 = !DILocation(line: 3194, column: 24, scope: !12661)
!12674 = !DILocalVariable(name: "s", scope: !12661, file: !3, line: 3196, type: !1038)
!12675 = !DILocation(line: 3196, column: 8, scope: !12661)
!12676 = !DILocation(line: 3198, column: 3, scope: !12661)
!12677 = !DILocation(line: 3198, column: 7, scope: !12661)
!12678 = !DILocation(line: 3201, column: 6, scope: !12679)
!12679 = distinct !DILexicalBlock(scope: !12661, file: !3, line: 3201, column: 6)
!12680 = !DILocation(line: 3201, column: 11, scope: !12679)
!12681 = !DILocation(line: 3201, column: 16, scope: !12679)
!12682 = !DILocation(line: 3201, column: 19, scope: !12679)
!12683 = !DILocation(line: 3201, column: 24, scope: !12679)
!12684 = !DILocation(line: 3201, column: 30, scope: !12679)
!12685 = !DILocation(line: 3201, column: 6, scope: !12661)
!12686 = !DILocation(line: 3202, column: 10, scope: !12679)
!12687 = !DILocation(line: 3202, column: 15, scope: !12679)
!12688 = !DILocation(line: 3202, column: 21, scope: !12679)
!12689 = !DILocation(line: 3202, column: 29, scope: !12679)
!12690 = !DILocation(line: 3202, column: 34, scope: !12679)
!12691 = !DILocation(line: 3202, column: 40, scope: !12679)
!12692 = !DILocation(line: 3202, column: 45, scope: !12679)
!12693 = !DILocation(line: 3202, column: 4, scope: !12679)
!12694 = !DILocation(line: 3202, column: 8, scope: !12679)
!12695 = !DILocation(line: 3202, column: 3, scope: !12679)
!12696 = !DILocation(line: 3203, column: 7, scope: !12697)
!12697 = distinct !DILexicalBlock(scope: !12661, file: !3, line: 3203, column: 6)
!12698 = !DILocation(line: 3203, column: 6, scope: !12697)
!12699 = !DILocation(line: 3203, column: 6, scope: !12661)
!12700 = !DILocation(line: 3204, column: 11, scope: !12697)
!12701 = !DILocation(line: 3204, column: 10, scope: !12697)
!12702 = !DILocation(line: 3204, column: 3, scope: !12697)
!12703 = !DILocation(line: 3207, column: 6, scope: !12704)
!12704 = distinct !DILexicalBlock(scope: !12661, file: !3, line: 3207, column: 6)
!12705 = !DILocation(line: 3207, column: 11, scope: !12704)
!12706 = !DILocation(line: 3207, column: 17, scope: !12704)
!12707 = !DILocation(line: 3207, column: 20, scope: !12704)
!12708 = !DILocation(line: 3207, column: 25, scope: !12704)
!12709 = !DILocation(line: 3207, column: 32, scope: !12704)
!12710 = !DILocation(line: 3207, column: 6, scope: !12661)
!12711 = !DILocation(line: 3208, column: 10, scope: !12704)
!12712 = !DILocation(line: 3208, column: 15, scope: !12704)
!12713 = !DILocation(line: 3208, column: 22, scope: !12704)
!12714 = !DILocation(line: 3208, column: 30, scope: !12704)
!12715 = !DILocation(line: 3208, column: 35, scope: !12704)
!12716 = !DILocation(line: 3208, column: 4, scope: !12704)
!12717 = !DILocation(line: 3208, column: 8, scope: !12704)
!12718 = !DILocation(line: 3208, column: 3, scope: !12704)
!12719 = !DILocation(line: 3209, column: 7, scope: !12720)
!12720 = distinct !DILexicalBlock(scope: !12661, file: !3, line: 3209, column: 6)
!12721 = !DILocation(line: 3209, column: 6, scope: !12720)
!12722 = !DILocation(line: 3209, column: 6, scope: !12661)
!12723 = !DILocation(line: 3210, column: 11, scope: !12720)
!12724 = !DILocation(line: 3210, column: 10, scope: !12720)
!12725 = !DILocation(line: 3210, column: 3, scope: !12720)
!12726 = !DILocation(line: 3213, column: 22, scope: !12727)
!12727 = distinct !DILexicalBlock(scope: !12661, file: !3, line: 3213, column: 6)
!12728 = !DILocation(line: 3213, column: 13, scope: !12727)
!12729 = !DILocation(line: 3213, column: 6, scope: !12727)
!12730 = !DILocation(line: 3213, column: 33, scope: !12727)
!12731 = !DILocation(line: 3213, column: 6, scope: !12661)
!12732 = !DILocation(line: 3214, column: 19, scope: !12727)
!12733 = !DILocation(line: 3214, column: 10, scope: !12727)
!12734 = !DILocation(line: 3214, column: 3, scope: !12727)
!12735 = !DILocation(line: 3217, column: 23, scope: !12661)
!12736 = !DILocation(line: 3217, column: 14, scope: !12661)
!12737 = !DILocation(line: 3217, column: 6, scope: !12661)
!12738 = !DILocation(line: 3217, column: 4, scope: !12661)
!12739 = !DILocation(line: 3218, column: 7, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12661, file: !3, line: 3218, column: 6)
!12741 = !DILocation(line: 3218, column: 6, scope: !12661)
!12742 = !DILocation(line: 3219, column: 3, scope: !12740)
!12743 = !DILocation(line: 3220, column: 13, scope: !12661)
!12744 = !DILocation(line: 3220, column: 2, scope: !12661)
!12745 = !DILocation(line: 3221, column: 16, scope: !12661)
!12746 = !DILocation(line: 3221, column: 10, scope: !12661)
!12747 = !DILocation(line: 3221, column: 14, scope: !12661)
!12748 = !DILocation(line: 3221, column: 2, scope: !12661)
!12749 = !DILocation(line: 3222, column: 1, scope: !12661)
!12750 = distinct !DISubprogram(name: "next_device", scope: !3, file: !3, line: 3166, type: !12751, scopeLine: 3167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12751 = !DISubroutineType(types: !12752)
!12752 = !{!4856, !12753}
!12753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8071, size: 64)
!12754 = !DILocalVariable(name: "i", arg: 1, scope: !12750, file: !3, line: 3166, type: !12753)
!12755 = !DILocation(line: 3166, column: 54, scope: !12750)
!12756 = !DILocalVariable(name: "n", scope: !12750, file: !3, line: 3168, type: !4872)
!12757 = !DILocation(line: 3168, column: 21, scope: !12750)
!12758 = !DILocation(line: 3168, column: 36, scope: !12750)
!12759 = !DILocation(line: 3168, column: 25, scope: !12750)
!12760 = !DILocalVariable(name: "dev", scope: !12750, file: !3, line: 3169, type: !4856)
!12761 = !DILocation(line: 3169, column: 17, scope: !12750)
!12762 = !DILocalVariable(name: "p", scope: !12750, file: !3, line: 3170, type: !4858)
!12763 = !DILocation(line: 3170, column: 25, scope: !12750)
!12764 = !DILocation(line: 3172, column: 6, scope: !12765)
!12765 = distinct !DILexicalBlock(scope: !12750, file: !3, line: 3172, column: 6)
!12766 = !DILocation(line: 3172, column: 6, scope: !12750)
!12767 = !DILocalVariable(name: "__mptr", scope: !12768, file: !3, line: 3173, type: !591)
!12768 = distinct !DILexicalBlock(scope: !12769, file: !3, line: 3173, column: 7)
!12769 = distinct !DILexicalBlock(scope: !12765, file: !3, line: 3172, column: 9)
!12770 = !DILocation(line: 3173, column: 7, scope: !12768)
!12771 = !DILocation(line: 3173, column: 7, scope: !12772)
!12772 = distinct !DILexicalBlock(scope: !12768, file: !3, line: 3173, column: 7)
!12773 = !DILocation(line: 3173, column: 5, scope: !12769)
!12774 = !DILocation(line: 3174, column: 9, scope: !12769)
!12775 = !DILocation(line: 3174, column: 12, scope: !12769)
!12776 = !DILocation(line: 3174, column: 7, scope: !12769)
!12777 = !DILocation(line: 3175, column: 2, scope: !12769)
!12778 = !DILocation(line: 3176, column: 9, scope: !12750)
!12779 = !DILocation(line: 3176, column: 2, scope: !12750)
!12780 = distinct !DISubprogram(name: "device_for_each_child_reverse", scope: !3, file: !3, line: 3266, type: !8061, scopeLine: 3268, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12781 = !DILocalVariable(name: "parent", arg: 1, scope: !12780, file: !3, line: 3266, type: !4856)
!12782 = !DILocation(line: 3266, column: 50, scope: !12780)
!12783 = !DILocalVariable(name: "data", arg: 2, scope: !12780, file: !3, line: 3266, type: !591)
!12784 = !DILocation(line: 3266, column: 64, scope: !12780)
!12785 = !DILocalVariable(name: "fn", arg: 3, scope: !12780, file: !3, line: 3267, type: !8063)
!12786 = !DILocation(line: 3267, column: 13, scope: !12780)
!12787 = !DILocalVariable(name: "i", scope: !12780, file: !3, line: 3269, type: !8071)
!12788 = !DILocation(line: 3269, column: 20, scope: !12780)
!12789 = !DILocalVariable(name: "child", scope: !12780, file: !3, line: 3270, type: !4856)
!12790 = !DILocation(line: 3270, column: 17, scope: !12780)
!12791 = !DILocalVariable(name: "error", scope: !12780, file: !3, line: 3271, type: !32)
!12792 = !DILocation(line: 3271, column: 6, scope: !12780)
!12793 = !DILocation(line: 3273, column: 7, scope: !12794)
!12794 = distinct !DILexicalBlock(scope: !12780, file: !3, line: 3273, column: 6)
!12795 = !DILocation(line: 3273, column: 15, scope: !12794)
!12796 = !DILocation(line: 3273, column: 6, scope: !12780)
!12797 = !DILocation(line: 3274, column: 3, scope: !12794)
!12798 = !DILocation(line: 3276, column: 19, scope: !12780)
!12799 = !DILocation(line: 3276, column: 27, scope: !12780)
!12800 = !DILocation(line: 3276, column: 30, scope: !12780)
!12801 = !DILocation(line: 3276, column: 2, scope: !12780)
!12802 = !DILocation(line: 3277, column: 2, scope: !12780)
!12803 = !DILocation(line: 3277, column: 18, scope: !12780)
!12804 = !DILocation(line: 3277, column: 16, scope: !12780)
!12805 = !DILocation(line: 3277, column: 35, scope: !12780)
!12806 = !DILocation(line: 3277, column: 39, scope: !12780)
!12807 = !DILocation(line: 3277, column: 38, scope: !12780)
!12808 = !DILocation(line: 0, scope: !12780)
!12809 = !DILocation(line: 3278, column: 11, scope: !12780)
!12810 = !DILocation(line: 3278, column: 14, scope: !12780)
!12811 = !DILocation(line: 3278, column: 21, scope: !12780)
!12812 = !DILocation(line: 3278, column: 9, scope: !12780)
!12813 = distinct !{!12813, !12802, !12814}
!12814 = !DILocation(line: 3278, column: 25, scope: !12780)
!12815 = !DILocation(line: 3279, column: 2, scope: !12780)
!12816 = !DILocation(line: 3280, column: 9, scope: !12780)
!12817 = !DILocation(line: 3280, column: 2, scope: !12780)
!12818 = !DILocation(line: 3281, column: 1, scope: !12780)
!12819 = distinct !DISubprogram(name: "prev_device", scope: !3, file: !3, line: 3153, type: !12751, scopeLine: 3154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12820 = !DILocalVariable(name: "i", arg: 1, scope: !12819, file: !3, line: 3153, type: !12753)
!12821 = !DILocation(line: 3153, column: 54, scope: !12819)
!12822 = !DILocalVariable(name: "n", scope: !12819, file: !3, line: 3155, type: !4872)
!12823 = !DILocation(line: 3155, column: 21, scope: !12819)
!12824 = !DILocation(line: 3155, column: 36, scope: !12819)
!12825 = !DILocation(line: 3155, column: 25, scope: !12819)
!12826 = !DILocalVariable(name: "dev", scope: !12819, file: !3, line: 3156, type: !4856)
!12827 = !DILocation(line: 3156, column: 17, scope: !12819)
!12828 = !DILocalVariable(name: "p", scope: !12819, file: !3, line: 3157, type: !4858)
!12829 = !DILocation(line: 3157, column: 25, scope: !12819)
!12830 = !DILocation(line: 3159, column: 6, scope: !12831)
!12831 = distinct !DILexicalBlock(scope: !12819, file: !3, line: 3159, column: 6)
!12832 = !DILocation(line: 3159, column: 6, scope: !12819)
!12833 = !DILocalVariable(name: "__mptr", scope: !12834, file: !3, line: 3160, type: !591)
!12834 = distinct !DILexicalBlock(scope: !12835, file: !3, line: 3160, column: 7)
!12835 = distinct !DILexicalBlock(scope: !12831, file: !3, line: 3159, column: 9)
!12836 = !DILocation(line: 3160, column: 7, scope: !12834)
!12837 = !DILocation(line: 3160, column: 7, scope: !12838)
!12838 = distinct !DILexicalBlock(scope: !12834, file: !3, line: 3160, column: 7)
!12839 = !DILocation(line: 3160, column: 5, scope: !12835)
!12840 = !DILocation(line: 3161, column: 9, scope: !12835)
!12841 = !DILocation(line: 3161, column: 12, scope: !12835)
!12842 = !DILocation(line: 3161, column: 7, scope: !12835)
!12843 = !DILocation(line: 3162, column: 2, scope: !12835)
!12844 = !DILocation(line: 3163, column: 9, scope: !12819)
!12845 = !DILocation(line: 3163, column: 2, scope: !12819)
!12846 = distinct !DISubprogram(name: "device_find_child", scope: !3, file: !3, line: 3301, type: !12847, scopeLine: 3303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12847 = !DISubroutineType(types: !12848)
!12848 = !{!4856, !4856, !591, !8063}
!12849 = !DILocalVariable(name: "parent", arg: 1, scope: !12846, file: !3, line: 3301, type: !4856)
!12850 = !DILocation(line: 3301, column: 49, scope: !12846)
!12851 = !DILocalVariable(name: "data", arg: 2, scope: !12846, file: !3, line: 3301, type: !591)
!12852 = !DILocation(line: 3301, column: 63, scope: !12846)
!12853 = !DILocalVariable(name: "match", arg: 3, scope: !12846, file: !3, line: 3302, type: !8063)
!12854 = !DILocation(line: 3302, column: 12, scope: !12846)
!12855 = !DILocalVariable(name: "i", scope: !12846, file: !3, line: 3304, type: !8071)
!12856 = !DILocation(line: 3304, column: 20, scope: !12846)
!12857 = !DILocalVariable(name: "child", scope: !12846, file: !3, line: 3305, type: !4856)
!12858 = !DILocation(line: 3305, column: 17, scope: !12846)
!12859 = !DILocation(line: 3307, column: 7, scope: !12860)
!12860 = distinct !DILexicalBlock(scope: !12846, file: !3, line: 3307, column: 6)
!12861 = !DILocation(line: 3307, column: 6, scope: !12846)
!12862 = !DILocation(line: 3308, column: 3, scope: !12860)
!12863 = !DILocation(line: 3310, column: 19, scope: !12846)
!12864 = !DILocation(line: 3310, column: 27, scope: !12846)
!12865 = !DILocation(line: 3310, column: 30, scope: !12846)
!12866 = !DILocation(line: 3310, column: 2, scope: !12846)
!12867 = !DILocation(line: 3311, column: 2, scope: !12846)
!12868 = !DILocation(line: 3311, column: 18, scope: !12846)
!12869 = !DILocation(line: 3311, column: 16, scope: !12846)
!12870 = !DILocation(line: 3312, column: 7, scope: !12871)
!12871 = distinct !DILexicalBlock(scope: !12846, file: !3, line: 3312, column: 7)
!12872 = !DILocation(line: 3312, column: 13, scope: !12871)
!12873 = !DILocation(line: 3312, column: 20, scope: !12871)
!12874 = !DILocation(line: 3312, column: 26, scope: !12871)
!12875 = !DILocation(line: 3312, column: 40, scope: !12871)
!12876 = !DILocation(line: 3312, column: 29, scope: !12871)
!12877 = !DILocation(line: 3312, column: 7, scope: !12846)
!12878 = !DILocation(line: 3313, column: 4, scope: !12871)
!12879 = distinct !{!12879, !12867, !12880}
!12880 = !DILocation(line: 3313, column: 4, scope: !12846)
!12881 = !DILocation(line: 3314, column: 2, scope: !12846)
!12882 = !DILocation(line: 3315, column: 9, scope: !12846)
!12883 = !DILocation(line: 3315, column: 2, scope: !12846)
!12884 = !DILocation(line: 3316, column: 1, scope: !12846)
!12885 = distinct !DISubprogram(name: "device_find_child_by_name", scope: !3, file: !3, line: 3329, type: !12886, scopeLine: 3331, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12886 = !DISubroutineType(types: !12887)
!12887 = !{!4856, !4856, !292}
!12888 = !DILocalVariable(name: "parent", arg: 1, scope: !12885, file: !3, line: 3329, type: !4856)
!12889 = !DILocation(line: 3329, column: 57, scope: !12885)
!12890 = !DILocalVariable(name: "name", arg: 2, scope: !12885, file: !3, line: 3330, type: !292)
!12891 = !DILocation(line: 3330, column: 19, scope: !12885)
!12892 = !DILocalVariable(name: "i", scope: !12885, file: !3, line: 3332, type: !8071)
!12893 = !DILocation(line: 3332, column: 20, scope: !12885)
!12894 = !DILocalVariable(name: "child", scope: !12885, file: !3, line: 3333, type: !4856)
!12895 = !DILocation(line: 3333, column: 17, scope: !12885)
!12896 = !DILocation(line: 3335, column: 7, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12885, file: !3, line: 3335, column: 6)
!12898 = !DILocation(line: 3335, column: 6, scope: !12885)
!12899 = !DILocation(line: 3336, column: 3, scope: !12897)
!12900 = !DILocation(line: 3338, column: 19, scope: !12885)
!12901 = !DILocation(line: 3338, column: 27, scope: !12885)
!12902 = !DILocation(line: 3338, column: 30, scope: !12885)
!12903 = !DILocation(line: 3338, column: 2, scope: !12885)
!12904 = !DILocation(line: 3339, column: 2, scope: !12885)
!12905 = !DILocation(line: 3339, column: 18, scope: !12885)
!12906 = !DILocation(line: 3339, column: 16, scope: !12885)
!12907 = !DILocation(line: 3340, column: 28, scope: !12908)
!12908 = distinct !DILexicalBlock(scope: !12885, file: !3, line: 3340, column: 7)
!12909 = !DILocation(line: 3340, column: 19, scope: !12908)
!12910 = !DILocation(line: 3340, column: 36, scope: !12908)
!12911 = !DILocation(line: 3340, column: 7, scope: !12908)
!12912 = !DILocation(line: 3340, column: 42, scope: !12908)
!12913 = !DILocation(line: 3340, column: 56, scope: !12908)
!12914 = !DILocation(line: 3340, column: 45, scope: !12908)
!12915 = !DILocation(line: 3340, column: 7, scope: !12885)
!12916 = !DILocation(line: 3341, column: 4, scope: !12908)
!12917 = distinct !{!12917, !12904, !12918}
!12918 = !DILocation(line: 3341, column: 4, scope: !12885)
!12919 = !DILocation(line: 3342, column: 2, scope: !12885)
!12920 = !DILocation(line: 3343, column: 9, scope: !12885)
!12921 = !DILocation(line: 3343, column: 2, scope: !12885)
!12922 = !DILocation(line: 3344, column: 1, scope: !12885)
!12923 = distinct !DISubprogram(name: "devices_init", scope: !3, file: !3, line: 3347, type: !7842, scopeLine: 3348, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12924 = !DILocation(line: 3349, column: 17, scope: !12923)
!12925 = !DILocation(line: 3349, column: 15, scope: !12923)
!12926 = !DILocation(line: 3350, column: 7, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12923, file: !3, line: 3350, column: 6)
!12928 = !DILocation(line: 3350, column: 6, scope: !12923)
!12929 = !DILocation(line: 3351, column: 3, scope: !12927)
!12930 = !DILocation(line: 3352, column: 13, scope: !12923)
!12931 = !DILocation(line: 3352, column: 11, scope: !12923)
!12932 = !DILocation(line: 3353, column: 7, scope: !12933)
!12933 = distinct !DILexicalBlock(scope: !12923, file: !3, line: 3353, column: 6)
!12934 = !DILocation(line: 3353, column: 6, scope: !12923)
!12935 = !DILocation(line: 3354, column: 3, scope: !12933)
!12936 = !DILocation(line: 3355, column: 57, scope: !12923)
!12937 = !DILocation(line: 3355, column: 25, scope: !12923)
!12938 = !DILocation(line: 3355, column: 23, scope: !12923)
!12939 = !DILocation(line: 3356, column: 7, scope: !12940)
!12940 = distinct !DILexicalBlock(scope: !12923, file: !3, line: 3356, column: 6)
!12941 = !DILocation(line: 3356, column: 6, scope: !12923)
!12942 = !DILocation(line: 3357, column: 3, scope: !12940)
!12943 = !DILocation(line: 3358, column: 55, scope: !12923)
!12944 = !DILocation(line: 3358, column: 24, scope: !12923)
!12945 = !DILocation(line: 3358, column: 22, scope: !12923)
!12946 = !DILocation(line: 3359, column: 7, scope: !12947)
!12947 = distinct !DILexicalBlock(scope: !12923, file: !3, line: 3359, column: 6)
!12948 = !DILocation(line: 3359, column: 6, scope: !12923)
!12949 = !DILocation(line: 3360, column: 3, scope: !12947)
!12950 = !DILocation(line: 3362, column: 2, scope: !12923)
!12951 = !DILabel(scope: !12923, name: "char_kobj_err", file: !3, line: 3364)
!12952 = !DILocation(line: 3364, column: 2, scope: !12923)
!12953 = !DILocation(line: 3365, column: 14, scope: !12923)
!12954 = !DILocation(line: 3365, column: 2, scope: !12923)
!12955 = !DILabel(scope: !12923, name: "block_kobj_err", file: !3, line: 3366)
!12956 = !DILocation(line: 3366, column: 2, scope: !12923)
!12957 = !DILocation(line: 3367, column: 14, scope: !12923)
!12958 = !DILocation(line: 3367, column: 2, scope: !12923)
!12959 = !DILabel(scope: !12923, name: "dev_kobj_err", file: !3, line: 3368)
!12960 = !DILocation(line: 3368, column: 2, scope: !12923)
!12961 = !DILocation(line: 3369, column: 18, scope: !12923)
!12962 = !DILocation(line: 3369, column: 2, scope: !12923)
!12963 = !DILocation(line: 3370, column: 2, scope: !12923)
!12964 = !DILocation(line: 3371, column: 1, scope: !12923)
!12965 = distinct !DISubprogram(name: "device_offline", scope: !3, file: !3, line: 3395, type: !4911, scopeLine: 3396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12966 = !DILocalVariable(name: "dev", arg: 1, scope: !12965, file: !3, line: 3395, type: !4856)
!12967 = !DILocation(line: 3395, column: 35, scope: !12965)
!12968 = !DILocalVariable(name: "ret", scope: !12965, file: !3, line: 3397, type: !32)
!12969 = !DILocation(line: 3397, column: 6, scope: !12965)
!12970 = !DILocation(line: 3399, column: 6, scope: !12971)
!12971 = distinct !DILexicalBlock(scope: !12965, file: !3, line: 3399, column: 6)
!12972 = !DILocation(line: 3399, column: 11, scope: !12971)
!12973 = !DILocation(line: 3399, column: 6, scope: !12965)
!12974 = !DILocation(line: 3400, column: 3, scope: !12971)
!12975 = !DILocation(line: 3402, column: 30, scope: !12965)
!12976 = !DILocation(line: 3402, column: 8, scope: !12965)
!12977 = !DILocation(line: 3402, column: 6, scope: !12965)
!12978 = !DILocation(line: 3403, column: 6, scope: !12979)
!12979 = distinct !DILexicalBlock(scope: !12965, file: !3, line: 3403, column: 6)
!12980 = !DILocation(line: 3403, column: 6, scope: !12965)
!12981 = !DILocation(line: 3404, column: 10, scope: !12979)
!12982 = !DILocation(line: 3404, column: 3, scope: !12979)
!12983 = !DILocation(line: 3406, column: 14, scope: !12965)
!12984 = !DILocation(line: 3406, column: 2, scope: !12965)
!12985 = !DILocation(line: 3407, column: 30, scope: !12986)
!12986 = distinct !DILexicalBlock(scope: !12965, file: !3, line: 3407, column: 6)
!12987 = !DILocation(line: 3407, column: 6, scope: !12986)
!12988 = !DILocation(line: 3407, column: 6, scope: !12965)
!12989 = !DILocation(line: 3408, column: 7, scope: !12990)
!12990 = distinct !DILexicalBlock(scope: !12991, file: !3, line: 3408, column: 7)
!12991 = distinct !DILexicalBlock(scope: !12986, file: !3, line: 3407, column: 36)
!12992 = !DILocation(line: 3408, column: 12, scope: !12990)
!12993 = !DILocation(line: 3408, column: 7, scope: !12991)
!12994 = !DILocation(line: 3409, column: 8, scope: !12995)
!12995 = distinct !DILexicalBlock(scope: !12990, file: !3, line: 3408, column: 21)
!12996 = !DILocation(line: 3410, column: 3, scope: !12995)
!12997 = !DILocation(line: 3411, column: 10, scope: !12998)
!12998 = distinct !DILexicalBlock(scope: !12990, file: !3, line: 3410, column: 10)
!12999 = !DILocation(line: 3411, column: 15, scope: !12998)
!13000 = !DILocation(line: 3411, column: 20, scope: !12998)
!13001 = !DILocation(line: 3411, column: 28, scope: !12998)
!13002 = !DILocation(line: 3411, column: 8, scope: !12998)
!13003 = !DILocation(line: 3412, column: 9, scope: !13004)
!13004 = distinct !DILexicalBlock(scope: !12998, file: !3, line: 3412, column: 8)
!13005 = !DILocation(line: 3412, column: 8, scope: !12998)
!13006 = !DILocation(line: 3413, column: 21, scope: !13007)
!13007 = distinct !DILexicalBlock(scope: !13004, file: !3, line: 3412, column: 14)
!13008 = !DILocation(line: 3413, column: 26, scope: !13007)
!13009 = !DILocation(line: 3413, column: 5, scope: !13007)
!13010 = !DILocation(line: 3414, column: 5, scope: !13007)
!13011 = !DILocation(line: 3414, column: 10, scope: !13007)
!13012 = !DILocation(line: 3414, column: 18, scope: !13007)
!13013 = !DILocation(line: 3415, column: 4, scope: !13007)
!13014 = !DILocation(line: 3417, column: 2, scope: !12991)
!13015 = !DILocation(line: 3418, column: 16, scope: !12965)
!13016 = !DILocation(line: 3418, column: 2, scope: !12965)
!13017 = !DILocation(line: 3420, column: 9, scope: !12965)
!13018 = !DILocation(line: 3420, column: 2, scope: !12965)
!13019 = !DILocation(line: 3421, column: 1, scope: !12965)
!13020 = distinct !DISubprogram(name: "device_check_offline", scope: !3, file: !3, line: 3373, type: !7992, scopeLine: 3374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13021 = !DILocalVariable(name: "dev", arg: 1, scope: !13020, file: !3, line: 3373, type: !4856)
!13022 = !DILocation(line: 3373, column: 48, scope: !13020)
!13023 = !DILocalVariable(name: "not_used", arg: 2, scope: !13020, file: !3, line: 3373, type: !591)
!13024 = !DILocation(line: 3373, column: 59, scope: !13020)
!13025 = !DILocalVariable(name: "ret", scope: !13020, file: !3, line: 3375, type: !32)
!13026 = !DILocation(line: 3375, column: 6, scope: !13020)
!13027 = !DILocation(line: 3377, column: 30, scope: !13020)
!13028 = !DILocation(line: 3377, column: 8, scope: !13020)
!13029 = !DILocation(line: 3377, column: 6, scope: !13020)
!13030 = !DILocation(line: 3378, column: 6, scope: !13031)
!13031 = distinct !DILexicalBlock(scope: !13020, file: !3, line: 3378, column: 6)
!13032 = !DILocation(line: 3378, column: 6, scope: !13020)
!13033 = !DILocation(line: 3379, column: 10, scope: !13031)
!13034 = !DILocation(line: 3379, column: 3, scope: !13031)
!13035 = !DILocation(line: 3381, column: 33, scope: !13020)
!13036 = !DILocation(line: 3381, column: 9, scope: !13020)
!13037 = !DILocation(line: 3381, column: 38, scope: !13020)
!13038 = !DILocation(line: 3381, column: 42, scope: !13020)
!13039 = !DILocation(line: 3381, column: 47, scope: !13020)
!13040 = !DILocation(line: 3381, column: 41, scope: !13020)
!13041 = !DILocation(line: 0, scope: !13020)
!13042 = !DILocation(line: 3381, column: 2, scope: !13020)
!13043 = !DILocation(line: 3382, column: 1, scope: !13020)
!13044 = distinct !DISubprogram(name: "device_supports_offline", scope: !4570, file: !4570, line: 796, type: !8670, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13045 = !DILocalVariable(name: "dev", arg: 1, scope: !13044, file: !4570, line: 796, type: !4856)
!13046 = !DILocation(line: 796, column: 59, scope: !13044)
!13047 = !DILocation(line: 798, column: 9, scope: !13044)
!13048 = !DILocation(line: 798, column: 14, scope: !13044)
!13049 = !DILocation(line: 798, column: 18, scope: !13044)
!13050 = !DILocation(line: 798, column: 21, scope: !13044)
!13051 = !DILocation(line: 798, column: 26, scope: !13044)
!13052 = !DILocation(line: 798, column: 31, scope: !13044)
!13053 = !DILocation(line: 798, column: 39, scope: !13044)
!13054 = !DILocation(line: 798, column: 42, scope: !13044)
!13055 = !DILocation(line: 798, column: 47, scope: !13044)
!13056 = !DILocation(line: 798, column: 52, scope: !13044)
!13057 = !DILocation(line: 0, scope: !13044)
!13058 = !DILocation(line: 798, column: 2, scope: !13044)
!13059 = distinct !DISubprogram(name: "device_online", scope: !3, file: !3, line: 3433, type: !4911, scopeLine: 3434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13060 = !DILocalVariable(name: "dev", arg: 1, scope: !13059, file: !3, line: 3433, type: !4856)
!13061 = !DILocation(line: 3433, column: 34, scope: !13059)
!13062 = !DILocalVariable(name: "ret", scope: !13059, file: !3, line: 3435, type: !32)
!13063 = !DILocation(line: 3435, column: 6, scope: !13059)
!13064 = !DILocation(line: 3437, column: 14, scope: !13059)
!13065 = !DILocation(line: 3437, column: 2, scope: !13059)
!13066 = !DILocation(line: 3438, column: 30, scope: !13067)
!13067 = distinct !DILexicalBlock(scope: !13059, file: !3, line: 3438, column: 6)
!13068 = !DILocation(line: 3438, column: 6, scope: !13067)
!13069 = !DILocation(line: 3438, column: 6, scope: !13059)
!13070 = !DILocation(line: 3439, column: 7, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !13072, file: !3, line: 3439, column: 7)
!13072 = distinct !DILexicalBlock(scope: !13067, file: !3, line: 3438, column: 36)
!13073 = !DILocation(line: 3439, column: 12, scope: !13071)
!13074 = !DILocation(line: 3439, column: 7, scope: !13072)
!13075 = !DILocation(line: 3440, column: 10, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13071, file: !3, line: 3439, column: 21)
!13077 = !DILocation(line: 3440, column: 15, scope: !13076)
!13078 = !DILocation(line: 3440, column: 20, scope: !13076)
!13079 = !DILocation(line: 3440, column: 27, scope: !13076)
!13080 = !DILocation(line: 3440, column: 8, scope: !13076)
!13081 = !DILocation(line: 3441, column: 9, scope: !13082)
!13082 = distinct !DILexicalBlock(scope: !13076, file: !3, line: 3441, column: 8)
!13083 = !DILocation(line: 3441, column: 8, scope: !13076)
!13084 = !DILocation(line: 3442, column: 21, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13082, file: !3, line: 3441, column: 14)
!13086 = !DILocation(line: 3442, column: 26, scope: !13085)
!13087 = !DILocation(line: 3442, column: 5, scope: !13085)
!13088 = !DILocation(line: 3443, column: 5, scope: !13085)
!13089 = !DILocation(line: 3443, column: 10, scope: !13085)
!13090 = !DILocation(line: 3443, column: 18, scope: !13085)
!13091 = !DILocation(line: 3444, column: 4, scope: !13085)
!13092 = !DILocation(line: 3445, column: 3, scope: !13076)
!13093 = !DILocation(line: 3446, column: 8, scope: !13094)
!13094 = distinct !DILexicalBlock(scope: !13071, file: !3, line: 3445, column: 10)
!13095 = !DILocation(line: 3448, column: 2, scope: !13072)
!13096 = !DILocation(line: 3449, column: 16, scope: !13059)
!13097 = !DILocation(line: 3449, column: 2, scope: !13059)
!13098 = !DILocation(line: 3451, column: 9, scope: !13059)
!13099 = !DILocation(line: 3451, column: 2, scope: !13059)
!13100 = distinct !DISubprogram(name: "__root_device_register", scope: !3, file: !3, line: 3491, type: !13101, scopeLine: 3492, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13101 = !DISubroutineType(types: !13102)
!13102 = !{!4856, !292, !980}
!13103 = !DILocalVariable(name: "name", arg: 1, scope: !13100, file: !3, line: 3491, type: !292)
!13104 = !DILocation(line: 3491, column: 51, scope: !13100)
!13105 = !DILocalVariable(name: "owner", arg: 2, scope: !13100, file: !3, line: 3491, type: !980)
!13106 = !DILocation(line: 3491, column: 72, scope: !13100)
!13107 = !DILocalVariable(name: "root", scope: !13100, file: !3, line: 3493, type: !7796)
!13108 = !DILocation(line: 3493, column: 22, scope: !13100)
!13109 = !DILocalVariable(name: "err", scope: !13100, file: !3, line: 3494, type: !32)
!13110 = !DILocation(line: 3494, column: 6, scope: !13100)
!13111 = !DILocation(line: 3496, column: 9, scope: !13100)
!13112 = !DILocation(line: 3496, column: 7, scope: !13100)
!13113 = !DILocation(line: 3497, column: 7, scope: !13114)
!13114 = distinct !DILexicalBlock(scope: !13100, file: !3, line: 3497, column: 6)
!13115 = !DILocation(line: 3497, column: 6, scope: !13100)
!13116 = !DILocation(line: 3498, column: 18, scope: !13114)
!13117 = !DILocation(line: 3498, column: 10, scope: !13114)
!13118 = !DILocation(line: 3498, column: 3, scope: !13114)
!13119 = !DILocation(line: 3500, column: 22, scope: !13100)
!13120 = !DILocation(line: 3500, column: 28, scope: !13100)
!13121 = !DILocation(line: 3500, column: 39, scope: !13100)
!13122 = !DILocation(line: 3500, column: 8, scope: !13100)
!13123 = !DILocation(line: 3500, column: 6, scope: !13100)
!13124 = !DILocation(line: 3501, column: 6, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !13100, file: !3, line: 3501, column: 6)
!13126 = !DILocation(line: 3501, column: 6, scope: !13100)
!13127 = !DILocation(line: 3502, column: 9, scope: !13128)
!13128 = distinct !DILexicalBlock(scope: !13125, file: !3, line: 3501, column: 11)
!13129 = !DILocation(line: 3502, column: 3, scope: !13128)
!13130 = !DILocation(line: 3503, column: 18, scope: !13128)
!13131 = !DILocation(line: 3503, column: 10, scope: !13128)
!13132 = !DILocation(line: 3503, column: 3, scope: !13128)
!13133 = !DILocation(line: 3506, column: 2, scope: !13100)
!13134 = !DILocation(line: 3506, column: 8, scope: !13100)
!13135 = !DILocation(line: 3506, column: 12, scope: !13100)
!13136 = !DILocation(line: 3506, column: 20, scope: !13100)
!13137 = !DILocation(line: 3508, column: 25, scope: !13100)
!13138 = !DILocation(line: 3508, column: 31, scope: !13100)
!13139 = !DILocation(line: 3508, column: 8, scope: !13100)
!13140 = !DILocation(line: 3508, column: 6, scope: !13100)
!13141 = !DILocation(line: 3509, column: 6, scope: !13142)
!13142 = distinct !DILexicalBlock(scope: !13100, file: !3, line: 3509, column: 6)
!13143 = !DILocation(line: 3509, column: 6, scope: !13100)
!13144 = !DILocation(line: 3510, column: 15, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13142, file: !3, line: 3509, column: 11)
!13146 = !DILocation(line: 3510, column: 21, scope: !13145)
!13147 = !DILocation(line: 3510, column: 3, scope: !13145)
!13148 = !DILocation(line: 3511, column: 18, scope: !13145)
!13149 = !DILocation(line: 3511, column: 10, scope: !13145)
!13150 = !DILocation(line: 3511, column: 3, scope: !13145)
!13151 = !DILocation(line: 3527, column: 10, scope: !13100)
!13152 = !DILocation(line: 3527, column: 16, scope: !13100)
!13153 = !DILocation(line: 3527, column: 2, scope: !13100)
!13154 = !DILocation(line: 3528, column: 1, scope: !13100)
!13155 = distinct !DISubprogram(name: "ERR_PTR", scope: !11807, file: !11807, line: 24, type: !13156, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13156 = !DISubroutineType(types: !13157)
!13157 = !{!591, !998}
!13158 = !DILocalVariable(name: "error", arg: 1, scope: !13155, file: !11807, line: 24, type: !998)
!13159 = !DILocation(line: 24, column: 48, scope: !13155)
!13160 = !DILocation(line: 26, column: 18, scope: !13155)
!13161 = !DILocation(line: 26, column: 9, scope: !13155)
!13162 = !DILocation(line: 26, column: 2, scope: !13155)
!13163 = distinct !DISubprogram(name: "root_device_release", scope: !3, file: !3, line: 3464, type: !4915, scopeLine: 3465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13164 = !DILocalVariable(name: "dev", arg: 1, scope: !13163, file: !3, line: 3464, type: !4856)
!13165 = !DILocation(line: 3464, column: 48, scope: !13163)
!13166 = !DILocation(line: 3466, column: 23, scope: !13163)
!13167 = !DILocation(line: 3466, column: 8, scope: !13163)
!13168 = !DILocation(line: 3466, column: 2, scope: !13163)
!13169 = !DILocation(line: 3467, column: 1, scope: !13163)
!13170 = distinct !DISubprogram(name: "root_device_unregister", scope: !3, file: !3, line: 3538, type: !4915, scopeLine: 3539, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13171 = !DILocalVariable(name: "dev", arg: 1, scope: !13170, file: !3, line: 3538, type: !4856)
!13172 = !DILocation(line: 3538, column: 44, scope: !13170)
!13173 = !DILocalVariable(name: "root", scope: !13170, file: !3, line: 3540, type: !7796)
!13174 = !DILocation(line: 3540, column: 22, scope: !13170)
!13175 = !DILocation(line: 3540, column: 44, scope: !13170)
!13176 = !DILocation(line: 3540, column: 29, scope: !13170)
!13177 = !DILocation(line: 3542, column: 6, scope: !13178)
!13178 = distinct !DILexicalBlock(scope: !13170, file: !3, line: 3542, column: 6)
!13179 = !DILocation(line: 3542, column: 12, scope: !13178)
!13180 = !DILocation(line: 3542, column: 6, scope: !13170)
!13181 = !DILocation(line: 3543, column: 22, scope: !13178)
!13182 = !DILocation(line: 3543, column: 28, scope: !13178)
!13183 = !DILocation(line: 3543, column: 32, scope: !13178)
!13184 = !DILocation(line: 3543, column: 3, scope: !13178)
!13185 = !DILocation(line: 3545, column: 20, scope: !13170)
!13186 = !DILocation(line: 3545, column: 2, scope: !13170)
!13187 = !DILocation(line: 3546, column: 1, scope: !13170)
!13188 = distinct !DISubprogram(name: "to_root_device", scope: !3, file: !3, line: 3459, type: !13189, scopeLine: 3460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13189 = !DISubroutineType(types: !13190)
!13190 = !{!7796, !4856}
!13191 = !DILocalVariable(name: "d", arg: 1, scope: !13188, file: !3, line: 3459, type: !4856)
!13192 = !DILocation(line: 3459, column: 65, scope: !13188)
!13193 = !DILocalVariable(name: "__mptr", scope: !13194, file: !3, line: 3461, type: !591)
!13194 = distinct !DILexicalBlock(scope: !13188, file: !3, line: 3461, column: 9)
!13195 = !DILocation(line: 3461, column: 9, scope: !13194)
!13196 = !DILocation(line: 3461, column: 9, scope: !13197)
!13197 = distinct !DILexicalBlock(scope: !13194, file: !3, line: 3461, column: 9)
!13198 = !DILocation(line: 3461, column: 2, scope: !13188)
!13199 = distinct !DISubprogram(name: "device_create", scope: !3, file: !3, line: 3621, type: !13200, scopeLine: 3623, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13200 = !DISubroutineType(types: !13201)
!13201 = !{!4856, !4981, !4856, !1458, !591, !292, null}
!13202 = !DILocalVariable(name: "class", arg: 1, scope: !13199, file: !3, line: 3621, type: !4981)
!13203 = !DILocation(line: 3621, column: 44, scope: !13199)
!13204 = !DILocalVariable(name: "parent", arg: 2, scope: !13199, file: !3, line: 3621, type: !4856)
!13205 = !DILocation(line: 3621, column: 66, scope: !13199)
!13206 = !DILocalVariable(name: "devt", arg: 3, scope: !13199, file: !3, line: 3622, type: !1458)
!13207 = !DILocation(line: 3622, column: 15, scope: !13199)
!13208 = !DILocalVariable(name: "drvdata", arg: 4, scope: !13199, file: !3, line: 3622, type: !591)
!13209 = !DILocation(line: 3622, column: 27, scope: !13199)
!13210 = !DILocalVariable(name: "fmt", arg: 5, scope: !13199, file: !3, line: 3622, type: !292)
!13211 = !DILocation(line: 3622, column: 48, scope: !13199)
!13212 = !DILocalVariable(name: "vargs", scope: !13199, file: !3, line: 3624, type: !9116)
!13213 = !DILocation(line: 3624, column: 10, scope: !13199)
!13214 = !DILocalVariable(name: "dev", scope: !13199, file: !3, line: 3625, type: !4856)
!13215 = !DILocation(line: 3625, column: 17, scope: !13199)
!13216 = !DILocation(line: 3627, column: 2, scope: !13199)
!13217 = !DILocation(line: 3628, column: 35, scope: !13199)
!13218 = !DILocation(line: 3628, column: 42, scope: !13199)
!13219 = !DILocation(line: 3628, column: 50, scope: !13199)
!13220 = !DILocation(line: 3628, column: 56, scope: !13199)
!13221 = !DILocation(line: 3629, column: 8, scope: !13199)
!13222 = !DILocation(line: 3629, column: 13, scope: !13199)
!13223 = !DILocation(line: 3628, column: 8, scope: !13199)
!13224 = !DILocation(line: 3628, column: 6, scope: !13199)
!13225 = !DILocation(line: 3630, column: 2, scope: !13199)
!13226 = !DILocation(line: 3631, column: 9, scope: !13199)
!13227 = !DILocation(line: 3631, column: 2, scope: !13199)
!13228 = distinct !DISubprogram(name: "device_create_groups_vargs", scope: !3, file: !3, line: 3557, type: !13229, scopeLine: 3561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13229 = !DISubroutineType(types: !13230)
!13230 = !{!4856, !4981, !4856, !1458, !591, !4650, !292, !13231}
!13231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9121, size: 64)
!13232 = !DILocalVariable(name: "class", arg: 1, scope: !13228, file: !3, line: 3557, type: !4981)
!13233 = !DILocation(line: 3557, column: 42, scope: !13228)
!13234 = !DILocalVariable(name: "parent", arg: 2, scope: !13228, file: !3, line: 3557, type: !4856)
!13235 = !DILocation(line: 3557, column: 64, scope: !13228)
!13236 = !DILocalVariable(name: "devt", arg: 3, scope: !13228, file: !3, line: 3558, type: !1458)
!13237 = !DILocation(line: 3558, column: 13, scope: !13228)
!13238 = !DILocalVariable(name: "drvdata", arg: 4, scope: !13228, file: !3, line: 3558, type: !591)
!13239 = !DILocation(line: 3558, column: 25, scope: !13228)
!13240 = !DILocalVariable(name: "groups", arg: 5, scope: !13228, file: !3, line: 3559, type: !4650)
!13241 = !DILocation(line: 3559, column: 38, scope: !13228)
!13242 = !DILocalVariable(name: "fmt", arg: 6, scope: !13228, file: !3, line: 3560, type: !292)
!13243 = !DILocation(line: 3560, column: 19, scope: !13228)
!13244 = !DILocalVariable(name: "args", arg: 7, scope: !13228, file: !3, line: 3560, type: !13231)
!13245 = !DILocation(line: 3560, column: 32, scope: !13228)
!13246 = !DILocalVariable(name: "dev", scope: !13228, file: !3, line: 3562, type: !4856)
!13247 = !DILocation(line: 3562, column: 17, scope: !13228)
!13248 = !DILocalVariable(name: "retval", scope: !13228, file: !3, line: 3563, type: !32)
!13249 = !DILocation(line: 3563, column: 6, scope: !13228)
!13250 = !DILocation(line: 3565, column: 6, scope: !13251)
!13251 = distinct !DILexicalBlock(scope: !13228, file: !3, line: 3565, column: 6)
!13252 = !DILocation(line: 3565, column: 12, scope: !13251)
!13253 = !DILocation(line: 3565, column: 20, scope: !13251)
!13254 = !DILocation(line: 3565, column: 30, scope: !13251)
!13255 = !DILocation(line: 3565, column: 23, scope: !13251)
!13256 = !DILocation(line: 3565, column: 6, scope: !13228)
!13257 = !DILocation(line: 3566, column: 3, scope: !13251)
!13258 = !DILocation(line: 3568, column: 8, scope: !13228)
!13259 = !DILocation(line: 3568, column: 6, scope: !13228)
!13260 = !DILocation(line: 3569, column: 7, scope: !13261)
!13261 = distinct !DILexicalBlock(scope: !13228, file: !3, line: 3569, column: 6)
!13262 = !DILocation(line: 3569, column: 6, scope: !13228)
!13263 = !DILocation(line: 3570, column: 10, scope: !13264)
!13264 = distinct !DILexicalBlock(scope: !13261, file: !3, line: 3569, column: 12)
!13265 = !DILocation(line: 3571, column: 3, scope: !13264)
!13266 = !DILocation(line: 3574, column: 20, scope: !13228)
!13267 = !DILocation(line: 3574, column: 2, scope: !13228)
!13268 = !DILocation(line: 3575, column: 14, scope: !13228)
!13269 = !DILocation(line: 3575, column: 2, scope: !13228)
!13270 = !DILocation(line: 3575, column: 7, scope: !13228)
!13271 = !DILocation(line: 3575, column: 12, scope: !13228)
!13272 = !DILocation(line: 3576, column: 15, scope: !13228)
!13273 = !DILocation(line: 3576, column: 2, scope: !13228)
!13274 = !DILocation(line: 3576, column: 7, scope: !13228)
!13275 = !DILocation(line: 3576, column: 13, scope: !13228)
!13276 = !DILocation(line: 3577, column: 16, scope: !13228)
!13277 = !DILocation(line: 3577, column: 2, scope: !13228)
!13278 = !DILocation(line: 3577, column: 7, scope: !13228)
!13279 = !DILocation(line: 3577, column: 14, scope: !13228)
!13280 = !DILocation(line: 3578, column: 16, scope: !13228)
!13281 = !DILocation(line: 3578, column: 2, scope: !13228)
!13282 = !DILocation(line: 3578, column: 7, scope: !13228)
!13283 = !DILocation(line: 3578, column: 14, scope: !13228)
!13284 = !DILocation(line: 3579, column: 2, scope: !13228)
!13285 = !DILocation(line: 3579, column: 7, scope: !13228)
!13286 = !DILocation(line: 3579, column: 15, scope: !13228)
!13287 = !DILocation(line: 3580, column: 18, scope: !13228)
!13288 = !DILocation(line: 3580, column: 23, scope: !13228)
!13289 = !DILocation(line: 3580, column: 2, scope: !13228)
!13290 = !DILocation(line: 3582, column: 35, scope: !13228)
!13291 = !DILocation(line: 3582, column: 40, scope: !13228)
!13292 = !DILocation(line: 3582, column: 46, scope: !13228)
!13293 = !DILocation(line: 3582, column: 51, scope: !13228)
!13294 = !DILocation(line: 3582, column: 11, scope: !13228)
!13295 = !DILocation(line: 3582, column: 9, scope: !13228)
!13296 = !DILocation(line: 3583, column: 6, scope: !13297)
!13297 = distinct !DILexicalBlock(scope: !13228, file: !3, line: 3583, column: 6)
!13298 = !DILocation(line: 3583, column: 6, scope: !13228)
!13299 = !DILocation(line: 3584, column: 3, scope: !13297)
!13300 = !DILocation(line: 3586, column: 22, scope: !13228)
!13301 = !DILocation(line: 3586, column: 11, scope: !13228)
!13302 = !DILocation(line: 3586, column: 9, scope: !13228)
!13303 = !DILocation(line: 3587, column: 6, scope: !13304)
!13304 = distinct !DILexicalBlock(scope: !13228, file: !3, line: 3587, column: 6)
!13305 = !DILocation(line: 3587, column: 6, scope: !13228)
!13306 = !DILocation(line: 3588, column: 3, scope: !13304)
!13307 = !DILocation(line: 3590, column: 9, scope: !13228)
!13308 = !DILocation(line: 3590, column: 2, scope: !13228)
!13309 = !DILabel(scope: !13228, name: "error", file: !3, line: 3592)
!13310 = !DILocation(line: 3592, column: 1, scope: !13228)
!13311 = !DILocation(line: 3593, column: 13, scope: !13228)
!13312 = !DILocation(line: 3593, column: 2, scope: !13228)
!13313 = !DILocation(line: 3594, column: 17, scope: !13228)
!13314 = !DILocation(line: 3594, column: 9, scope: !13228)
!13315 = !DILocation(line: 3594, column: 2, scope: !13228)
!13316 = !DILocation(line: 3595, column: 1, scope: !13228)
!13317 = distinct !DISubprogram(name: "device_create_with_groups", scope: !3, file: !3, line: 3662, type: !13318, scopeLine: 3667, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13318 = !DISubroutineType(types: !13319)
!13319 = !{!4856, !4981, !4856, !1458, !591, !4650, !292, null}
!13320 = !DILocalVariable(name: "class", arg: 1, scope: !13317, file: !3, line: 3662, type: !4981)
!13321 = !DILocation(line: 3662, column: 56, scope: !13317)
!13322 = !DILocalVariable(name: "parent", arg: 2, scope: !13317, file: !3, line: 3663, type: !4856)
!13323 = !DILocation(line: 3663, column: 22, scope: !13317)
!13324 = !DILocalVariable(name: "devt", arg: 3, scope: !13317, file: !3, line: 3663, type: !1458)
!13325 = !DILocation(line: 3663, column: 36, scope: !13317)
!13326 = !DILocalVariable(name: "drvdata", arg: 4, scope: !13317, file: !3, line: 3664, type: !591)
!13327 = !DILocation(line: 3664, column: 13, scope: !13317)
!13328 = !DILocalVariable(name: "groups", arg: 5, scope: !13317, file: !3, line: 3665, type: !4650)
!13329 = !DILocation(line: 3665, column: 38, scope: !13317)
!13330 = !DILocalVariable(name: "fmt", arg: 6, scope: !13317, file: !3, line: 3666, type: !292)
!13331 = !DILocation(line: 3666, column: 19, scope: !13317)
!13332 = !DILocalVariable(name: "vargs", scope: !13317, file: !3, line: 3668, type: !9116)
!13333 = !DILocation(line: 3668, column: 10, scope: !13317)
!13334 = !DILocalVariable(name: "dev", scope: !13317, file: !3, line: 3669, type: !4856)
!13335 = !DILocation(line: 3669, column: 17, scope: !13317)
!13336 = !DILocation(line: 3671, column: 2, scope: !13317)
!13337 = !DILocation(line: 3672, column: 35, scope: !13317)
!13338 = !DILocation(line: 3672, column: 42, scope: !13317)
!13339 = !DILocation(line: 3672, column: 50, scope: !13317)
!13340 = !DILocation(line: 3672, column: 56, scope: !13317)
!13341 = !DILocation(line: 3672, column: 65, scope: !13317)
!13342 = !DILocation(line: 3673, column: 7, scope: !13317)
!13343 = !DILocation(line: 3673, column: 12, scope: !13317)
!13344 = !DILocation(line: 3672, column: 8, scope: !13317)
!13345 = !DILocation(line: 3672, column: 6, scope: !13317)
!13346 = !DILocation(line: 3674, column: 2, scope: !13317)
!13347 = !DILocation(line: 3675, column: 9, scope: !13317)
!13348 = !DILocation(line: 3675, column: 2, scope: !13317)
!13349 = distinct !DISubprogram(name: "device_destroy", scope: !3, file: !3, line: 3687, type: !13350, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13350 = !DISubroutineType(types: !13351)
!13351 = !{null, !4981, !1458}
!13352 = !DILocalVariable(name: "class", arg: 1, scope: !13349, file: !3, line: 3687, type: !4981)
!13353 = !DILocation(line: 3687, column: 35, scope: !13349)
!13354 = !DILocalVariable(name: "devt", arg: 2, scope: !13349, file: !3, line: 3687, type: !1458)
!13355 = !DILocation(line: 3687, column: 48, scope: !13349)
!13356 = !DILocalVariable(name: "dev", scope: !13349, file: !3, line: 3689, type: !4856)
!13357 = !DILocation(line: 3689, column: 17, scope: !13349)
!13358 = !DILocation(line: 3691, column: 34, scope: !13349)
!13359 = !DILocation(line: 3691, column: 41, scope: !13349)
!13360 = !DILocation(line: 3691, column: 8, scope: !13349)
!13361 = !DILocation(line: 3691, column: 6, scope: !13349)
!13362 = !DILocation(line: 3692, column: 6, scope: !13363)
!13363 = distinct !DILexicalBlock(scope: !13349, file: !3, line: 3692, column: 6)
!13364 = !DILocation(line: 3692, column: 6, scope: !13349)
!13365 = !DILocation(line: 3693, column: 14, scope: !13366)
!13366 = distinct !DILexicalBlock(scope: !13363, file: !3, line: 3692, column: 11)
!13367 = !DILocation(line: 3693, column: 3, scope: !13366)
!13368 = !DILocation(line: 3694, column: 21, scope: !13366)
!13369 = !DILocation(line: 3694, column: 3, scope: !13366)
!13370 = !DILocation(line: 3695, column: 2, scope: !13366)
!13371 = !DILocation(line: 3696, column: 1, scope: !13349)
!13372 = distinct !DISubprogram(name: "class_find_device_by_devt", scope: !4983, file: !4983, line: 164, type: !13373, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13373 = !DISubroutineType(types: !13374)
!13374 = !{!4856, !4981, !1458}
!13375 = !DILocalVariable(name: "class", arg: 1, scope: !13372, file: !4983, line: 164, type: !4981)
!13376 = !DILocation(line: 164, column: 70, scope: !13372)
!13377 = !DILocalVariable(name: "devt", arg: 2, scope: !13372, file: !4983, line: 165, type: !1458)
!13378 = !DILocation(line: 165, column: 20, scope: !13372)
!13379 = !DILocation(line: 167, column: 27, scope: !13372)
!13380 = !DILocation(line: 167, column: 40, scope: !13372)
!13381 = !DILocation(line: 167, column: 9, scope: !13372)
!13382 = !DILocation(line: 167, column: 2, scope: !13372)
!13383 = distinct !DISubprogram(name: "device_rename", scope: !3, file: !3, line: 3738, type: !13384, scopeLine: 3739, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13384 = !DISubroutineType(types: !13385)
!13385 = !{!32, !4856, !292}
!13386 = !DILocalVariable(name: "dev", arg: 1, scope: !13383, file: !3, line: 3738, type: !4856)
!13387 = !DILocation(line: 3738, column: 34, scope: !13383)
!13388 = !DILocalVariable(name: "new_name", arg: 2, scope: !13383, file: !3, line: 3738, type: !292)
!13389 = !DILocation(line: 3738, column: 51, scope: !13383)
!13390 = !DILocalVariable(name: "kobj", scope: !13383, file: !3, line: 3740, type: !4579)
!13391 = !DILocation(line: 3740, column: 18, scope: !13383)
!13392 = !DILocation(line: 3740, column: 26, scope: !13383)
!13393 = !DILocation(line: 3740, column: 31, scope: !13383)
!13394 = !DILocalVariable(name: "old_device_name", scope: !13383, file: !3, line: 3741, type: !1038)
!13395 = !DILocation(line: 3741, column: 8, scope: !13383)
!13396 = !DILocalVariable(name: "error", scope: !13383, file: !3, line: 3742, type: !32)
!13397 = !DILocation(line: 3742, column: 6, scope: !13383)
!13398 = !DILocation(line: 3744, column: 19, scope: !13383)
!13399 = !DILocation(line: 3744, column: 8, scope: !13383)
!13400 = !DILocation(line: 3744, column: 6, scope: !13383)
!13401 = !DILocation(line: 3745, column: 7, scope: !13402)
!13402 = distinct !DILexicalBlock(scope: !13383, file: !3, line: 3745, column: 6)
!13403 = !DILocation(line: 3745, column: 6, scope: !13383)
!13404 = !DILocation(line: 3746, column: 3, scope: !13402)
!13405 = !DILocation(line: 3750, column: 37, scope: !13383)
!13406 = !DILocation(line: 3750, column: 28, scope: !13383)
!13407 = !DILocation(line: 3750, column: 20, scope: !13383)
!13408 = !DILocation(line: 3750, column: 18, scope: !13383)
!13409 = !DILocation(line: 3751, column: 7, scope: !13410)
!13410 = distinct !DILexicalBlock(scope: !13383, file: !3, line: 3751, column: 6)
!13411 = !DILocation(line: 3751, column: 6, scope: !13383)
!13412 = !DILocation(line: 3752, column: 9, scope: !13413)
!13413 = distinct !DILexicalBlock(scope: !13410, file: !3, line: 3751, column: 24)
!13414 = !DILocation(line: 3753, column: 3, scope: !13413)
!13415 = !DILocation(line: 3756, column: 6, scope: !13416)
!13416 = distinct !DILexicalBlock(scope: !13383, file: !3, line: 3756, column: 6)
!13417 = !DILocation(line: 3756, column: 11, scope: !13416)
!13418 = !DILocation(line: 3756, column: 6, scope: !13383)
!13419 = !DILocation(line: 3757, column: 33, scope: !13420)
!13420 = distinct !DILexicalBlock(scope: !13416, file: !3, line: 3756, column: 18)
!13421 = !DILocation(line: 3757, column: 38, scope: !13420)
!13422 = !DILocation(line: 3757, column: 45, scope: !13420)
!13423 = !DILocation(line: 3757, column: 48, scope: !13420)
!13424 = !DILocation(line: 3757, column: 55, scope: !13420)
!13425 = !DILocation(line: 3758, column: 11, scope: !13420)
!13426 = !DILocation(line: 3758, column: 17, scope: !13420)
!13427 = !DILocation(line: 3759, column: 11, scope: !13420)
!13428 = !DILocation(line: 3759, column: 39, scope: !13420)
!13429 = !DILocation(line: 3759, column: 21, scope: !13420)
!13430 = !DILocation(line: 3757, column: 11, scope: !13420)
!13431 = !DILocation(line: 3757, column: 9, scope: !13420)
!13432 = !DILocation(line: 3760, column: 7, scope: !13433)
!13433 = distinct !DILexicalBlock(scope: !13420, file: !3, line: 3760, column: 7)
!13434 = !DILocation(line: 3760, column: 7, scope: !13420)
!13435 = !DILocation(line: 3761, column: 4, scope: !13433)
!13436 = !DILocation(line: 3762, column: 2, scope: !13420)
!13437 = !DILocation(line: 3764, column: 25, scope: !13383)
!13438 = !DILocation(line: 3764, column: 31, scope: !13383)
!13439 = !DILocation(line: 3764, column: 10, scope: !13383)
!13440 = !DILocation(line: 3764, column: 8, scope: !13383)
!13441 = !DILocation(line: 3765, column: 6, scope: !13442)
!13442 = distinct !DILexicalBlock(scope: !13383, file: !3, line: 3765, column: 6)
!13443 = !DILocation(line: 3765, column: 6, scope: !13383)
!13444 = !DILocation(line: 3766, column: 3, scope: !13442)
!13445 = !DILabel(scope: !13383, name: "out", file: !3, line: 3768)
!13446 = !DILocation(line: 3768, column: 1, scope: !13383)
!13447 = !DILocation(line: 3769, column: 13, scope: !13383)
!13448 = !DILocation(line: 3769, column: 2, scope: !13383)
!13449 = !DILocation(line: 3771, column: 8, scope: !13383)
!13450 = !DILocation(line: 3771, column: 2, scope: !13383)
!13451 = !DILocation(line: 3773, column: 9, scope: !13383)
!13452 = !DILocation(line: 3773, column: 2, scope: !13383)
!13453 = !DILocation(line: 3774, column: 1, scope: !13383)
!13454 = distinct !DISubprogram(name: "device_move", scope: !3, file: !3, line: 3797, type: !13455, scopeLine: 3799, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13455 = !DISubroutineType(types: !13456)
!13456 = !{!32, !4856, !4856, !7417}
!13457 = !DILocalVariable(name: "dev", arg: 1, scope: !13454, file: !3, line: 3797, type: !4856)
!13458 = !DILocation(line: 3797, column: 32, scope: !13454)
!13459 = !DILocalVariable(name: "new_parent", arg: 2, scope: !13454, file: !3, line: 3797, type: !4856)
!13460 = !DILocation(line: 3797, column: 52, scope: !13454)
!13461 = !DILocalVariable(name: "dpm_order", arg: 3, scope: !13454, file: !3, line: 3798, type: !7417)
!13462 = !DILocation(line: 3798, column: 18, scope: !13454)
!13463 = !DILocalVariable(name: "error", scope: !13454, file: !3, line: 3800, type: !32)
!13464 = !DILocation(line: 3800, column: 6, scope: !13454)
!13465 = !DILocalVariable(name: "old_parent", scope: !13454, file: !3, line: 3801, type: !4856)
!13466 = !DILocation(line: 3801, column: 17, scope: !13454)
!13467 = !DILocalVariable(name: "new_parent_kobj", scope: !13454, file: !3, line: 3802, type: !4579)
!13468 = !DILocation(line: 3802, column: 18, scope: !13454)
!13469 = !DILocation(line: 3804, column: 19, scope: !13454)
!13470 = !DILocation(line: 3804, column: 8, scope: !13454)
!13471 = !DILocation(line: 3804, column: 6, scope: !13454)
!13472 = !DILocation(line: 3805, column: 7, scope: !13473)
!13473 = distinct !DILexicalBlock(scope: !13454, file: !3, line: 3805, column: 6)
!13474 = !DILocation(line: 3805, column: 6, scope: !13454)
!13475 = !DILocation(line: 3806, column: 3, scope: !13473)
!13476 = !DILocation(line: 3808, column: 2, scope: !13454)
!13477 = !DILocation(line: 3809, column: 26, scope: !13454)
!13478 = !DILocation(line: 3809, column: 15, scope: !13454)
!13479 = !DILocation(line: 3809, column: 13, scope: !13454)
!13480 = !DILocation(line: 3810, column: 38, scope: !13454)
!13481 = !DILocation(line: 3810, column: 43, scope: !13454)
!13482 = !DILocation(line: 3810, column: 20, scope: !13454)
!13483 = !DILocation(line: 3810, column: 18, scope: !13454)
!13484 = !DILocation(line: 3811, column: 13, scope: !13485)
!13485 = distinct !DILexicalBlock(scope: !13454, file: !3, line: 3811, column: 6)
!13486 = !DILocation(line: 3811, column: 6, scope: !13485)
!13487 = !DILocation(line: 3811, column: 6, scope: !13454)
!13488 = !DILocation(line: 3812, column: 19, scope: !13489)
!13489 = distinct !DILexicalBlock(scope: !13485, file: !3, line: 3811, column: 31)
!13490 = !DILocation(line: 3812, column: 11, scope: !13489)
!13491 = !DILocation(line: 3812, column: 9, scope: !13489)
!13492 = !DILocation(line: 3813, column: 14, scope: !13489)
!13493 = !DILocation(line: 3813, column: 3, scope: !13489)
!13494 = !DILocation(line: 3814, column: 3, scope: !13489)
!13495 = !DILocation(line: 3817, column: 2, scope: !13496)
!13496 = distinct !DILexicalBlock(scope: !13497, file: !3, line: 3817, column: 2)
!13497 = distinct !DILexicalBlock(scope: !13454, file: !3, line: 3817, column: 2)
!13498 = !DILocation(line: 3817, column: 2, scope: !13497)
!13499 = !DILocation(line: 3819, column: 24, scope: !13454)
!13500 = !DILocation(line: 3819, column: 29, scope: !13454)
!13501 = !DILocation(line: 3819, column: 35, scope: !13454)
!13502 = !DILocation(line: 3819, column: 10, scope: !13454)
!13503 = !DILocation(line: 3819, column: 8, scope: !13454)
!13504 = !DILocation(line: 3820, column: 6, scope: !13505)
!13505 = distinct !DILexicalBlock(scope: !13454, file: !3, line: 3820, column: 6)
!13506 = !DILocation(line: 3820, column: 6, scope: !13454)
!13507 = !DILocation(line: 3821, column: 20, scope: !13508)
!13508 = distinct !DILexicalBlock(scope: !13505, file: !3, line: 3820, column: 13)
!13509 = !DILocation(line: 3821, column: 25, scope: !13508)
!13510 = !DILocation(line: 3821, column: 3, scope: !13508)
!13511 = !DILocation(line: 3822, column: 14, scope: !13508)
!13512 = !DILocation(line: 3822, column: 3, scope: !13508)
!13513 = !DILocation(line: 3823, column: 3, scope: !13508)
!13514 = !DILocation(line: 3825, column: 15, scope: !13454)
!13515 = !DILocation(line: 3825, column: 20, scope: !13454)
!13516 = !DILocation(line: 3825, column: 13, scope: !13454)
!13517 = !DILocation(line: 3826, column: 16, scope: !13454)
!13518 = !DILocation(line: 3826, column: 2, scope: !13454)
!13519 = !DILocation(line: 3826, column: 7, scope: !13454)
!13520 = !DILocation(line: 3826, column: 14, scope: !13454)
!13521 = !DILocation(line: 3827, column: 6, scope: !13522)
!13522 = distinct !DILexicalBlock(scope: !13454, file: !3, line: 3827, column: 6)
!13523 = !DILocation(line: 3827, column: 6, scope: !13454)
!13524 = !DILocation(line: 3828, column: 17, scope: !13522)
!13525 = !DILocation(line: 3828, column: 22, scope: !13522)
!13526 = !DILocation(line: 3828, column: 25, scope: !13522)
!13527 = !DILocation(line: 3828, column: 3, scope: !13522)
!13528 = !DILocation(line: 3829, column: 6, scope: !13529)
!13529 = distinct !DILexicalBlock(scope: !13454, file: !3, line: 3829, column: 6)
!13530 = !DILocation(line: 3829, column: 6, scope: !13454)
!13531 = !DILocation(line: 3830, column: 19, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13529, file: !3, line: 3829, column: 18)
!13533 = !DILocation(line: 3830, column: 24, scope: !13532)
!13534 = !DILocation(line: 3830, column: 27, scope: !13532)
!13535 = !DILocation(line: 3831, column: 12, scope: !13532)
!13536 = !DILocation(line: 3831, column: 24, scope: !13532)
!13537 = !DILocation(line: 3831, column: 27, scope: !13532)
!13538 = !DILocation(line: 3830, column: 3, scope: !13532)
!13539 = !DILocation(line: 3832, column: 16, scope: !13532)
!13540 = !DILocation(line: 3832, column: 33, scope: !13532)
!13541 = !DILocation(line: 3832, column: 21, scope: !13532)
!13542 = !DILocation(line: 3832, column: 3, scope: !13532)
!13543 = !DILocation(line: 3833, column: 2, scope: !13532)
!13544 = !DILocation(line: 3835, column: 6, scope: !13545)
!13545 = distinct !DILexicalBlock(scope: !13454, file: !3, line: 3835, column: 6)
!13546 = !DILocation(line: 3835, column: 11, scope: !13545)
!13547 = !DILocation(line: 3835, column: 6, scope: !13454)
!13548 = !DILocation(line: 3836, column: 35, scope: !13549)
!13549 = distinct !DILexicalBlock(scope: !13545, file: !3, line: 3835, column: 18)
!13550 = !DILocation(line: 3836, column: 40, scope: !13549)
!13551 = !DILocation(line: 3836, column: 52, scope: !13549)
!13552 = !DILocation(line: 3836, column: 11, scope: !13549)
!13553 = !DILocation(line: 3836, column: 9, scope: !13549)
!13554 = !DILocation(line: 3837, column: 7, scope: !13555)
!13555 = distinct !DILexicalBlock(scope: !13549, file: !3, line: 3837, column: 7)
!13556 = !DILocation(line: 3837, column: 7, scope: !13549)
!13557 = !DILocation(line: 3839, column: 28, scope: !13558)
!13558 = distinct !DILexicalBlock(scope: !13555, file: !3, line: 3837, column: 14)
!13559 = !DILocation(line: 3839, column: 33, scope: !13558)
!13560 = !DILocation(line: 3839, column: 45, scope: !13558)
!13561 = !DILocation(line: 3839, column: 4, scope: !13558)
!13562 = !DILocation(line: 3840, column: 23, scope: !13563)
!13563 = distinct !DILexicalBlock(scope: !13558, file: !3, line: 3840, column: 8)
!13564 = !DILocation(line: 3840, column: 28, scope: !13563)
!13565 = !DILocation(line: 3840, column: 35, scope: !13563)
!13566 = !DILocation(line: 3840, column: 47, scope: !13563)
!13567 = !DILocation(line: 3840, column: 9, scope: !13563)
!13568 = !DILocation(line: 3840, column: 8, scope: !13558)
!13569 = !DILocation(line: 3841, column: 9, scope: !13570)
!13570 = distinct !DILexicalBlock(scope: !13571, file: !3, line: 3841, column: 9)
!13571 = distinct !DILexicalBlock(scope: !13563, file: !3, line: 3840, column: 54)
!13572 = !DILocation(line: 3841, column: 9, scope: !13571)
!13573 = !DILocation(line: 3842, column: 20, scope: !13570)
!13574 = !DILocation(line: 3842, column: 25, scope: !13570)
!13575 = !DILocation(line: 3842, column: 28, scope: !13570)
!13576 = !DILocation(line: 3842, column: 6, scope: !13570)
!13577 = !DILocation(line: 3843, column: 19, scope: !13571)
!13578 = !DILocation(line: 3843, column: 5, scope: !13571)
!13579 = !DILocation(line: 3843, column: 10, scope: !13571)
!13580 = !DILocation(line: 3843, column: 17, scope: !13571)
!13581 = !DILocation(line: 3844, column: 9, scope: !13582)
!13582 = distinct !DILexicalBlock(scope: !13571, file: !3, line: 3844, column: 9)
!13583 = !DILocation(line: 3844, column: 9, scope: !13571)
!13584 = !DILocation(line: 3845, column: 22, scope: !13585)
!13585 = distinct !DILexicalBlock(scope: !13582, file: !3, line: 3844, column: 21)
!13586 = !DILocation(line: 3845, column: 27, scope: !13585)
!13587 = !DILocation(line: 3845, column: 30, scope: !13585)
!13588 = !DILocation(line: 3846, column: 15, scope: !13585)
!13589 = !DILocation(line: 3846, column: 27, scope: !13585)
!13590 = !DILocation(line: 3846, column: 30, scope: !13585)
!13591 = !DILocation(line: 3845, column: 6, scope: !13585)
!13592 = !DILocation(line: 3847, column: 19, scope: !13585)
!13593 = !DILocation(line: 3847, column: 36, scope: !13585)
!13594 = !DILocation(line: 3847, column: 24, scope: !13585)
!13595 = !DILocation(line: 3847, column: 6, scope: !13585)
!13596 = !DILocation(line: 3848, column: 5, scope: !13585)
!13597 = !DILocation(line: 3849, column: 4, scope: !13571)
!13598 = !DILocation(line: 3850, column: 21, scope: !13558)
!13599 = !DILocation(line: 3850, column: 26, scope: !13558)
!13600 = !DILocation(line: 3850, column: 4, scope: !13558)
!13601 = !DILocation(line: 3851, column: 15, scope: !13558)
!13602 = !DILocation(line: 3851, column: 4, scope: !13558)
!13603 = !DILocation(line: 3852, column: 4, scope: !13558)
!13604 = !DILocation(line: 3854, column: 2, scope: !13549)
!13605 = !DILocation(line: 3855, column: 10, scope: !13454)
!13606 = !DILocation(line: 3855, column: 2, scope: !13454)
!13607 = !DILocation(line: 3857, column: 3, scope: !13608)
!13608 = distinct !DILexicalBlock(scope: !13454, file: !3, line: 3855, column: 21)
!13609 = !DILocation(line: 3859, column: 24, scope: !13608)
!13610 = !DILocation(line: 3859, column: 29, scope: !13608)
!13611 = !DILocation(line: 3859, column: 3, scope: !13608)
!13612 = !DILocation(line: 3860, column: 27, scope: !13608)
!13613 = !DILocation(line: 3860, column: 32, scope: !13608)
!13614 = !DILocation(line: 3860, column: 3, scope: !13608)
!13615 = !DILocation(line: 3861, column: 3, scope: !13608)
!13616 = !DILocation(line: 3863, column: 25, scope: !13608)
!13617 = !DILocation(line: 3863, column: 37, scope: !13608)
!13618 = !DILocation(line: 3863, column: 3, scope: !13608)
!13619 = !DILocation(line: 3864, column: 28, scope: !13608)
!13620 = !DILocation(line: 3864, column: 40, scope: !13608)
!13621 = !DILocation(line: 3864, column: 3, scope: !13608)
!13622 = !DILocation(line: 3865, column: 3, scope: !13608)
!13623 = !DILocation(line: 3867, column: 23, scope: !13608)
!13624 = !DILocation(line: 3867, column: 3, scope: !13608)
!13625 = !DILocation(line: 3868, column: 26, scope: !13608)
!13626 = !DILocation(line: 3868, column: 3, scope: !13608)
!13627 = !DILocation(line: 3869, column: 3, scope: !13608)
!13628 = !DILocation(line: 3872, column: 13, scope: !13454)
!13629 = !DILocation(line: 3872, column: 2, scope: !13454)
!13630 = !DILabel(scope: !13454, name: "out", file: !3, line: 3873)
!13631 = !DILocation(line: 3873, column: 1, scope: !13454)
!13632 = !DILocation(line: 3874, column: 2, scope: !13454)
!13633 = !DILocation(line: 3875, column: 13, scope: !13454)
!13634 = !DILocation(line: 3875, column: 2, scope: !13454)
!13635 = !DILocation(line: 3876, column: 9, scope: !13454)
!13636 = !DILocation(line: 3876, column: 2, scope: !13454)
!13637 = !DILocation(line: 3877, column: 1, scope: !13454)
!13638 = distinct !DISubprogram(name: "device_move_class_links", scope: !3, file: !3, line: 3777, type: !13639, scopeLine: 3780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13639 = !DISubroutineType(types: !13640)
!13640 = !{!32, !4856, !4856, !4856}
!13641 = !DILocalVariable(name: "dev", arg: 1, scope: !13638, file: !3, line: 3777, type: !4856)
!13642 = !DILocation(line: 3777, column: 51, scope: !13638)
!13643 = !DILocalVariable(name: "old_parent", arg: 2, scope: !13638, file: !3, line: 3778, type: !4856)
!13644 = !DILocation(line: 3778, column: 23, scope: !13638)
!13645 = !DILocalVariable(name: "new_parent", arg: 3, scope: !13638, file: !3, line: 3779, type: !4856)
!13646 = !DILocation(line: 3779, column: 23, scope: !13638)
!13647 = !DILocalVariable(name: "error", scope: !13638, file: !3, line: 3781, type: !32)
!13648 = !DILocation(line: 3781, column: 6, scope: !13638)
!13649 = !DILocation(line: 3783, column: 6, scope: !13650)
!13650 = distinct !DILexicalBlock(scope: !13638, file: !3, line: 3783, column: 6)
!13651 = !DILocation(line: 3783, column: 6, scope: !13638)
!13652 = !DILocation(line: 3784, column: 22, scope: !13650)
!13653 = !DILocation(line: 3784, column: 27, scope: !13650)
!13654 = !DILocation(line: 3784, column: 3, scope: !13650)
!13655 = !DILocation(line: 3785, column: 6, scope: !13656)
!13656 = distinct !DILexicalBlock(scope: !13638, file: !3, line: 3785, column: 6)
!13657 = !DILocation(line: 3785, column: 6, scope: !13638)
!13658 = !DILocation(line: 3786, column: 30, scope: !13656)
!13659 = !DILocation(line: 3786, column: 35, scope: !13656)
!13660 = !DILocation(line: 3786, column: 42, scope: !13656)
!13661 = !DILocation(line: 3786, column: 54, scope: !13656)
!13662 = !DILocation(line: 3786, column: 11, scope: !13656)
!13663 = !DILocation(line: 3786, column: 9, scope: !13656)
!13664 = !DILocation(line: 3786, column: 3, scope: !13656)
!13665 = !DILocation(line: 3788, column: 9, scope: !13638)
!13666 = !DILocation(line: 3788, column: 2, scope: !13638)
!13667 = distinct !DISubprogram(name: "devices_kset_move_after", scope: !3, file: !3, line: 2268, type: !13668, scopeLine: 2269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13668 = !DISubroutineType(types: !13669)
!13669 = !{null, !4856, !4856}
!13670 = !DILocation(line: 392, column: 53, scope: !11013, inlinedAt: !13671)
!13671 = distinct !DILocation(line: 2276, column: 2, scope: !13667)
!13672 = !DILocation(line: 352, column: 51, scope: !11020, inlinedAt: !13673)
!13673 = distinct !DILocation(line: 2274, column: 2, scope: !13667)
!13674 = !DILocalVariable(name: "deva", arg: 1, scope: !13667, file: !3, line: 2268, type: !4856)
!13675 = !DILocation(line: 2268, column: 52, scope: !13667)
!13676 = !DILocalVariable(name: "devb", arg: 2, scope: !13667, file: !3, line: 2268, type: !4856)
!13677 = !DILocation(line: 2268, column: 73, scope: !13667)
!13678 = !DILocation(line: 2270, column: 7, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !13667, file: !3, line: 2270, column: 6)
!13680 = !DILocation(line: 2270, column: 6, scope: !13667)
!13681 = !DILocation(line: 2271, column: 3, scope: !13679)
!13682 = !DILocation(line: 2272, column: 2, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13684, file: !3, line: 2272, column: 2)
!13684 = distinct !DILexicalBlock(scope: !13667, file: !3, line: 2272, column: 2)
!13685 = !DILocation(line: 2272, column: 2, scope: !13684)
!13686 = !DILocation(line: 2274, column: 13, scope: !13667)
!13687 = !DILocation(line: 2274, column: 27, scope: !13667)
!13688 = !DILocation(line: 354, column: 2, scope: !11036, inlinedAt: !13673)
!13689 = !DILocation(line: 354, column: 2, scope: !11039, inlinedAt: !13673)
!13690 = !DILocation(line: 2275, column: 13, scope: !13667)
!13691 = !DILocation(line: 2275, column: 19, scope: !13667)
!13692 = !DILocation(line: 2275, column: 24, scope: !13667)
!13693 = !DILocation(line: 2275, column: 32, scope: !13667)
!13694 = !DILocation(line: 2275, column: 38, scope: !13667)
!13695 = !DILocation(line: 2275, column: 43, scope: !13667)
!13696 = !DILocation(line: 2275, column: 2, scope: !13667)
!13697 = !DILocation(line: 2276, column: 15, scope: !13667)
!13698 = !DILocation(line: 2276, column: 29, scope: !13667)
!13699 = !DILocation(line: 394, column: 2, scope: !11049, inlinedAt: !13671)
!13700 = !DILocation(line: 394, column: 2, scope: !11052, inlinedAt: !13671)
!13701 = !DILocation(line: 2277, column: 1, scope: !13667)
!13702 = distinct !DISubprogram(name: "devices_kset_move_before", scope: !3, file: !3, line: 2252, type: !13668, scopeLine: 2253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13703 = !DILocation(line: 392, column: 53, scope: !11013, inlinedAt: !13704)
!13704 = distinct !DILocation(line: 2260, column: 2, scope: !13702)
!13705 = !DILocation(line: 352, column: 51, scope: !11020, inlinedAt: !13706)
!13706 = distinct !DILocation(line: 2258, column: 2, scope: !13702)
!13707 = !DILocalVariable(name: "deva", arg: 1, scope: !13702, file: !3, line: 2252, type: !4856)
!13708 = !DILocation(line: 2252, column: 53, scope: !13702)
!13709 = !DILocalVariable(name: "devb", arg: 2, scope: !13702, file: !3, line: 2252, type: !4856)
!13710 = !DILocation(line: 2252, column: 74, scope: !13702)
!13711 = !DILocation(line: 2254, column: 7, scope: !13712)
!13712 = distinct !DILexicalBlock(scope: !13702, file: !3, line: 2254, column: 6)
!13713 = !DILocation(line: 2254, column: 6, scope: !13702)
!13714 = !DILocation(line: 2255, column: 3, scope: !13712)
!13715 = !DILocation(line: 2256, column: 2, scope: !13716)
!13716 = distinct !DILexicalBlock(scope: !13717, file: !3, line: 2256, column: 2)
!13717 = distinct !DILexicalBlock(scope: !13702, file: !3, line: 2256, column: 2)
!13718 = !DILocation(line: 2256, column: 2, scope: !13717)
!13719 = !DILocation(line: 2258, column: 13, scope: !13702)
!13720 = !DILocation(line: 2258, column: 27, scope: !13702)
!13721 = !DILocation(line: 354, column: 2, scope: !11036, inlinedAt: !13706)
!13722 = !DILocation(line: 354, column: 2, scope: !11039, inlinedAt: !13706)
!13723 = !DILocation(line: 2259, column: 18, scope: !13702)
!13724 = !DILocation(line: 2259, column: 24, scope: !13702)
!13725 = !DILocation(line: 2259, column: 29, scope: !13702)
!13726 = !DILocation(line: 2259, column: 37, scope: !13702)
!13727 = !DILocation(line: 2259, column: 43, scope: !13702)
!13728 = !DILocation(line: 2259, column: 48, scope: !13702)
!13729 = !DILocation(line: 2259, column: 2, scope: !13702)
!13730 = !DILocation(line: 2260, column: 15, scope: !13702)
!13731 = !DILocation(line: 2260, column: 29, scope: !13702)
!13732 = !DILocation(line: 394, column: 2, scope: !11049, inlinedAt: !13704)
!13733 = !DILocation(line: 394, column: 2, scope: !11052, inlinedAt: !13704)
!13734 = !DILocation(line: 2261, column: 1, scope: !13702)
!13735 = distinct !DISubprogram(name: "device_change_owner", scope: !3, file: !3, line: 3938, type: !13736, scopeLine: 3939, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13736 = !DISubroutineType(types: !13737)
!13737 = !{!32, !4856, !1382, !1390}
!13738 = !DILocalVariable(name: "dev", arg: 1, scope: !13735, file: !3, line: 3938, type: !4856)
!13739 = !DILocation(line: 3938, column: 40, scope: !13735)
!13740 = !DILocalVariable(name: "kuid", arg: 2, scope: !13735, file: !3, line: 3938, type: !1382)
!13741 = !DILocation(line: 3938, column: 52, scope: !13735)
!13742 = !DILocalVariable(name: "kgid", arg: 3, scope: !13735, file: !3, line: 3938, type: !1390)
!13743 = !DILocation(line: 3938, column: 65, scope: !13735)
!13744 = !DILocalVariable(name: "error", scope: !13735, file: !3, line: 3940, type: !32)
!13745 = !DILocation(line: 3940, column: 6, scope: !13735)
!13746 = !DILocalVariable(name: "kobj", scope: !13735, file: !3, line: 3941, type: !4579)
!13747 = !DILocation(line: 3941, column: 18, scope: !13735)
!13748 = !DILocation(line: 3941, column: 26, scope: !13735)
!13749 = !DILocation(line: 3941, column: 31, scope: !13735)
!13750 = !DILocation(line: 3943, column: 19, scope: !13735)
!13751 = !DILocation(line: 3943, column: 8, scope: !13735)
!13752 = !DILocation(line: 3943, column: 6, scope: !13735)
!13753 = !DILocation(line: 3944, column: 7, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13735, file: !3, line: 3944, column: 6)
!13755 = !DILocation(line: 3944, column: 6, scope: !13735)
!13756 = !DILocation(line: 3945, column: 3, scope: !13754)
!13757 = !DILocation(line: 3951, column: 29, scope: !13735)
!13758 = !DILocation(line: 3951, column: 10, scope: !13735)
!13759 = !DILocation(line: 3951, column: 8, scope: !13735)
!13760 = !DILocation(line: 3952, column: 6, scope: !13761)
!13761 = distinct !DILexicalBlock(scope: !13735, file: !3, line: 3952, column: 6)
!13762 = !DILocation(line: 3952, column: 6, scope: !13735)
!13763 = !DILocation(line: 3953, column: 3, scope: !13761)
!13764 = !DILocation(line: 3960, column: 34, scope: !13735)
!13765 = !DILocation(line: 3960, column: 61, scope: !13735)
!13766 = !DILocation(line: 3960, column: 10, scope: !13735)
!13767 = !DILocation(line: 3960, column: 8, scope: !13735)
!13768 = !DILocation(line: 3962, column: 6, scope: !13769)
!13769 = distinct !DILexicalBlock(scope: !13735, file: !3, line: 3962, column: 6)
!13770 = !DILocation(line: 3962, column: 6, scope: !13735)
!13771 = !DILocation(line: 3963, column: 3, scope: !13769)
!13772 = !DILocation(line: 3970, column: 36, scope: !13735)
!13773 = !DILocation(line: 3970, column: 10, scope: !13735)
!13774 = !DILocation(line: 3970, column: 8, scope: !13735)
!13775 = !DILocation(line: 3971, column: 6, scope: !13776)
!13776 = distinct !DILexicalBlock(scope: !13735, file: !3, line: 3971, column: 6)
!13777 = !DILocation(line: 3971, column: 6, scope: !13735)
!13778 = !DILocation(line: 3972, column: 3, scope: !13776)
!13779 = !DILocation(line: 3974, column: 33, scope: !13735)
!13780 = !DILocation(line: 3974, column: 10, scope: !13735)
!13781 = !DILocation(line: 3974, column: 8, scope: !13735)
!13782 = !DILocation(line: 3975, column: 6, scope: !13783)
!13783 = distinct !DILexicalBlock(scope: !13735, file: !3, line: 3975, column: 6)
!13784 = !DILocation(line: 3975, column: 6, scope: !13735)
!13785 = !DILocation(line: 3976, column: 3, scope: !13783)
!13786 = !DILocation(line: 3989, column: 35, scope: !13735)
!13787 = !DILocation(line: 3989, column: 40, scope: !13735)
!13788 = !DILocation(line: 3989, column: 47, scope: !13735)
!13789 = !DILocation(line: 3989, column: 50, scope: !13735)
!13790 = !DILocation(line: 3989, column: 57, scope: !13735)
!13791 = !DILocation(line: 3989, column: 64, scope: !13735)
!13792 = !DILocation(line: 3989, column: 69, scope: !13735)
!13793 = !DILocation(line: 3990, column: 15, scope: !13735)
!13794 = !DILocation(line: 3990, column: 6, scope: !13735)
!13795 = !DILocation(line: 3989, column: 10, scope: !13735)
!13796 = !DILocation(line: 3989, column: 8, scope: !13735)
!13797 = !DILocation(line: 3991, column: 6, scope: !13798)
!13798 = distinct !DILexicalBlock(scope: !13735, file: !3, line: 3991, column: 6)
!13799 = !DILocation(line: 3991, column: 6, scope: !13735)
!13800 = !DILocation(line: 3992, column: 3, scope: !13798)
!13801 = !DILabel(scope: !13735, name: "out", file: !3, line: 3994)
!13802 = !DILocation(line: 3994, column: 1, scope: !13735)
!13803 = !DILocation(line: 3995, column: 13, scope: !13735)
!13804 = !DILocation(line: 3995, column: 2, scope: !13735)
!13805 = !DILocation(line: 3996, column: 9, scope: !13735)
!13806 = !DILocation(line: 3996, column: 2, scope: !13735)
!13807 = !DILocation(line: 3997, column: 1, scope: !13735)
!13808 = distinct !DISubprogram(name: "device_attrs_change_owner", scope: !3, file: !3, line: 3880, type: !13736, scopeLine: 3882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13809 = !DILocalVariable(name: "dev", arg: 1, scope: !13808, file: !3, line: 3880, type: !4856)
!13810 = !DILocation(line: 3880, column: 53, scope: !13808)
!13811 = !DILocalVariable(name: "kuid", arg: 2, scope: !13808, file: !3, line: 3880, type: !1382)
!13812 = !DILocation(line: 3880, column: 65, scope: !13808)
!13813 = !DILocalVariable(name: "kgid", arg: 3, scope: !13808, file: !3, line: 3881, type: !1390)
!13814 = !DILocation(line: 3881, column: 17, scope: !13808)
!13815 = !DILocalVariable(name: "kobj", scope: !13808, file: !3, line: 3883, type: !4579)
!13816 = !DILocation(line: 3883, column: 18, scope: !13808)
!13817 = !DILocation(line: 3883, column: 26, scope: !13808)
!13818 = !DILocation(line: 3883, column: 31, scope: !13808)
!13819 = !DILocalVariable(name: "class", scope: !13808, file: !3, line: 3884, type: !4981)
!13820 = !DILocation(line: 3884, column: 16, scope: !13808)
!13821 = !DILocation(line: 3884, column: 24, scope: !13808)
!13822 = !DILocation(line: 3884, column: 29, scope: !13808)
!13823 = !DILocalVariable(name: "type", scope: !13808, file: !3, line: 3885, type: !5084)
!13824 = !DILocation(line: 3885, column: 28, scope: !13808)
!13825 = !DILocation(line: 3885, column: 35, scope: !13808)
!13826 = !DILocation(line: 3885, column: 40, scope: !13808)
!13827 = !DILocalVariable(name: "error", scope: !13808, file: !3, line: 3886, type: !32)
!13828 = !DILocation(line: 3886, column: 6, scope: !13808)
!13829 = !DILocation(line: 3888, column: 6, scope: !13830)
!13830 = distinct !DILexicalBlock(scope: !13808, file: !3, line: 3888, column: 6)
!13831 = !DILocation(line: 3888, column: 6, scope: !13808)
!13832 = !DILocation(line: 3893, column: 37, scope: !13833)
!13833 = distinct !DILexicalBlock(scope: !13830, file: !3, line: 3888, column: 13)
!13834 = !DILocation(line: 3893, column: 43, scope: !13833)
!13835 = !DILocation(line: 3893, column: 50, scope: !13833)
!13836 = !DILocation(line: 3893, column: 11, scope: !13833)
!13837 = !DILocation(line: 3893, column: 9, scope: !13833)
!13838 = !DILocation(line: 3895, column: 7, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13833, file: !3, line: 3895, column: 7)
!13840 = !DILocation(line: 3895, column: 7, scope: !13833)
!13841 = !DILocation(line: 3896, column: 11, scope: !13839)
!13842 = !DILocation(line: 3896, column: 4, scope: !13839)
!13843 = !DILocation(line: 3897, column: 2, scope: !13833)
!13844 = !DILocation(line: 3899, column: 6, scope: !13845)
!13845 = distinct !DILexicalBlock(scope: !13808, file: !3, line: 3899, column: 6)
!13846 = !DILocation(line: 3899, column: 6, scope: !13808)
!13847 = !DILocation(line: 3904, column: 37, scope: !13848)
!13848 = distinct !DILexicalBlock(scope: !13845, file: !3, line: 3899, column: 12)
!13849 = !DILocation(line: 3904, column: 43, scope: !13848)
!13850 = !DILocation(line: 3904, column: 49, scope: !13848)
!13851 = !DILocation(line: 3904, column: 11, scope: !13848)
!13852 = !DILocation(line: 3904, column: 9, scope: !13848)
!13853 = !DILocation(line: 3906, column: 7, scope: !13854)
!13854 = distinct !DILexicalBlock(scope: !13848, file: !3, line: 3906, column: 7)
!13855 = !DILocation(line: 3906, column: 7, scope: !13848)
!13856 = !DILocation(line: 3907, column: 11, scope: !13854)
!13857 = !DILocation(line: 3907, column: 4, scope: !13854)
!13858 = !DILocation(line: 3908, column: 2, scope: !13848)
!13859 = !DILocation(line: 3911, column: 36, scope: !13808)
!13860 = !DILocation(line: 3911, column: 42, scope: !13808)
!13861 = !DILocation(line: 3911, column: 47, scope: !13808)
!13862 = !DILocation(line: 3911, column: 10, scope: !13808)
!13863 = !DILocation(line: 3911, column: 8, scope: !13808)
!13864 = !DILocation(line: 3912, column: 6, scope: !13865)
!13865 = distinct !DILexicalBlock(scope: !13808, file: !3, line: 3912, column: 6)
!13866 = !DILocation(line: 3912, column: 6, scope: !13808)
!13867 = !DILocation(line: 3913, column: 10, scope: !13865)
!13868 = !DILocation(line: 3913, column: 3, scope: !13865)
!13869 = !DILocation(line: 3915, column: 30, scope: !13870)
!13870 = distinct !DILexicalBlock(scope: !13808, file: !3, line: 3915, column: 6)
!13871 = !DILocation(line: 3915, column: 6, scope: !13870)
!13872 = !DILocation(line: 3915, column: 35, scope: !13870)
!13873 = !DILocation(line: 3915, column: 39, scope: !13870)
!13874 = !DILocation(line: 3915, column: 44, scope: !13870)
!13875 = !DILocation(line: 3915, column: 6, scope: !13808)
!13876 = !DILocation(line: 3917, column: 35, scope: !13877)
!13877 = distinct !DILexicalBlock(scope: !13870, file: !3, line: 3915, column: 62)
!13878 = !DILocation(line: 3917, column: 62, scope: !13877)
!13879 = !DILocation(line: 3917, column: 11, scope: !13877)
!13880 = !DILocation(line: 3917, column: 9, scope: !13877)
!13881 = !DILocation(line: 3919, column: 7, scope: !13882)
!13882 = distinct !DILexicalBlock(scope: !13877, file: !3, line: 3919, column: 7)
!13883 = !DILocation(line: 3919, column: 7, scope: !13877)
!13884 = !DILocation(line: 3920, column: 11, scope: !13882)
!13885 = !DILocation(line: 3920, column: 4, scope: !13882)
!13886 = !DILocation(line: 3921, column: 2, scope: !13877)
!13887 = !DILocation(line: 3923, column: 2, scope: !13808)
!13888 = !DILocation(line: 3924, column: 1, scope: !13808)
!13889 = distinct !DISubprogram(name: "device_shutdown", scope: !3, file: !3, line: 4003, type: !3809, scopeLine: 4004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13890 = !DILocation(line: 392, column: 53, scope: !11013, inlinedAt: !13891)
!13891 = distinct !DILocation(line: 4069, column: 2, scope: !13889)
!13892 = !DILocation(line: 352, column: 51, scope: !11020, inlinedAt: !13893)
!13893 = distinct !DILocation(line: 4067, column: 3, scope: !13894)
!13894 = distinct !DILexicalBlock(scope: !13889, file: !3, line: 4018, column: 43)
!13895 = !DILocation(line: 392, column: 53, scope: !11013, inlinedAt: !13896)
!13896 = distinct !DILocation(line: 4034, column: 3, scope: !13894)
!13897 = !DILocation(line: 352, column: 51, scope: !11020, inlinedAt: !13898)
!13898 = distinct !DILocation(line: 4012, column: 2, scope: !13889)
!13899 = !DILocalVariable(name: "dev", scope: !13889, file: !3, line: 4005, type: !4856)
!13900 = !DILocation(line: 4005, column: 17, scope: !13889)
!13901 = !DILocalVariable(name: "parent", scope: !13889, file: !3, line: 4005, type: !4856)
!13902 = !DILocation(line: 4005, column: 23, scope: !13889)
!13903 = !DILocation(line: 4007, column: 2, scope: !13889)
!13904 = !DILocation(line: 4008, column: 2, scope: !13889)
!13905 = !DILocation(line: 4010, column: 2, scope: !13889)
!13906 = !DILocation(line: 4012, column: 13, scope: !13889)
!13907 = !DILocation(line: 4012, column: 27, scope: !13889)
!13908 = !DILocation(line: 354, column: 2, scope: !11036, inlinedAt: !13898)
!13909 = !DILocation(line: 354, column: 2, scope: !11039, inlinedAt: !13898)
!13910 = !DILocation(line: 4018, column: 2, scope: !13889)
!13911 = !DILocation(line: 4018, column: 22, scope: !13889)
!13912 = !DILocation(line: 4018, column: 36, scope: !13889)
!13913 = !DILocation(line: 4018, column: 10, scope: !13889)
!13914 = !DILocation(line: 4018, column: 9, scope: !13889)
!13915 = !DILocalVariable(name: "__mptr", scope: !13916, file: !3, line: 4019, type: !591)
!13916 = distinct !DILexicalBlock(scope: !13894, file: !3, line: 4019, column: 9)
!13917 = !DILocation(line: 4019, column: 9, scope: !13916)
!13918 = !DILocation(line: 4019, column: 9, scope: !13919)
!13919 = distinct !DILexicalBlock(scope: !13916, file: !3, line: 4019, column: 9)
!13920 = !DILocation(line: 4019, column: 7, scope: !13894)
!13921 = !DILocation(line: 4027, column: 23, scope: !13894)
!13922 = !DILocation(line: 4027, column: 28, scope: !13894)
!13923 = !DILocation(line: 4027, column: 12, scope: !13894)
!13924 = !DILocation(line: 4027, column: 10, scope: !13894)
!13925 = !DILocation(line: 4028, column: 14, scope: !13894)
!13926 = !DILocation(line: 4028, column: 3, scope: !13894)
!13927 = !DILocation(line: 4033, column: 18, scope: !13894)
!13928 = !DILocation(line: 4033, column: 23, scope: !13894)
!13929 = !DILocation(line: 4033, column: 28, scope: !13894)
!13930 = !DILocation(line: 4033, column: 3, scope: !13894)
!13931 = !DILocation(line: 4034, column: 16, scope: !13894)
!13932 = !DILocation(line: 4034, column: 30, scope: !13894)
!13933 = !DILocation(line: 394, column: 2, scope: !11049, inlinedAt: !13896)
!13934 = !DILocation(line: 394, column: 2, scope: !11052, inlinedAt: !13896)
!13935 = !DILocation(line: 4037, column: 7, scope: !13936)
!13936 = distinct !DILexicalBlock(scope: !13894, file: !3, line: 4037, column: 7)
!13937 = !DILocation(line: 4037, column: 7, scope: !13894)
!13938 = !DILocation(line: 4038, column: 16, scope: !13936)
!13939 = !DILocation(line: 4038, column: 4, scope: !13936)
!13940 = !DILocation(line: 4039, column: 15, scope: !13894)
!13941 = !DILocation(line: 4039, column: 3, scope: !13894)
!13942 = !DILocation(line: 4042, column: 27, scope: !13894)
!13943 = !DILocation(line: 4042, column: 3, scope: !13894)
!13944 = !DILocation(line: 4043, column: 22, scope: !13894)
!13945 = !DILocation(line: 4043, column: 3, scope: !13894)
!13946 = !DILocation(line: 4045, column: 7, scope: !13947)
!13947 = distinct !DILexicalBlock(scope: !13894, file: !3, line: 4045, column: 7)
!13948 = !DILocation(line: 4045, column: 12, scope: !13947)
!13949 = !DILocation(line: 4045, column: 18, scope: !13947)
!13950 = !DILocation(line: 4045, column: 21, scope: !13947)
!13951 = !DILocation(line: 4045, column: 26, scope: !13947)
!13952 = !DILocation(line: 4045, column: 33, scope: !13947)
!13953 = !DILocation(line: 4045, column: 7, scope: !13894)
!13954 = !DILocation(line: 4046, column: 8, scope: !13955)
!13955 = distinct !DILexicalBlock(scope: !13956, file: !3, line: 4046, column: 8)
!13956 = distinct !DILexicalBlock(scope: !13947, file: !3, line: 4045, column: 47)
!13957 = !DILocation(line: 4046, column: 8, scope: !13956)
!13958 = !DILocation(line: 4047, column: 5, scope: !13955)
!13959 = !DILocation(line: 4048, column: 4, scope: !13956)
!13960 = !DILocation(line: 4048, column: 9, scope: !13956)
!13961 = !DILocation(line: 4048, column: 16, scope: !13956)
!13962 = !DILocation(line: 4048, column: 29, scope: !13956)
!13963 = !DILocation(line: 4049, column: 3, scope: !13956)
!13964 = !DILocation(line: 4050, column: 7, scope: !13965)
!13965 = distinct !DILexicalBlock(scope: !13894, file: !3, line: 4050, column: 7)
!13966 = !DILocation(line: 4050, column: 12, scope: !13965)
!13967 = !DILocation(line: 4050, column: 16, scope: !13965)
!13968 = !DILocation(line: 4050, column: 19, scope: !13965)
!13969 = !DILocation(line: 4050, column: 24, scope: !13965)
!13970 = !DILocation(line: 4050, column: 29, scope: !13965)
!13971 = !DILocation(line: 4050, column: 7, scope: !13894)
!13972 = !DILocation(line: 4051, column: 8, scope: !13973)
!13973 = distinct !DILexicalBlock(scope: !13974, file: !3, line: 4051, column: 8)
!13974 = distinct !DILexicalBlock(scope: !13965, file: !3, line: 4050, column: 39)
!13975 = !DILocation(line: 4051, column: 8, scope: !13974)
!13976 = !DILocation(line: 4052, column: 5, scope: !13973)
!13977 = !DILocation(line: 4053, column: 4, scope: !13974)
!13978 = !DILocation(line: 4053, column: 9, scope: !13974)
!13979 = !DILocation(line: 4053, column: 14, scope: !13974)
!13980 = !DILocation(line: 4053, column: 23, scope: !13974)
!13981 = !DILocation(line: 4054, column: 3, scope: !13974)
!13982 = !DILocation(line: 4054, column: 14, scope: !13983)
!13983 = distinct !DILexicalBlock(scope: !13965, file: !3, line: 4054, column: 14)
!13984 = !DILocation(line: 4054, column: 19, scope: !13983)
!13985 = !DILocation(line: 4054, column: 26, scope: !13983)
!13986 = !DILocation(line: 4054, column: 29, scope: !13983)
!13987 = !DILocation(line: 4054, column: 34, scope: !13983)
!13988 = !DILocation(line: 4054, column: 42, scope: !13983)
!13989 = !DILocation(line: 4054, column: 14, scope: !13965)
!13990 = !DILocation(line: 4055, column: 8, scope: !13991)
!13991 = distinct !DILexicalBlock(scope: !13992, file: !3, line: 4055, column: 8)
!13992 = distinct !DILexicalBlock(scope: !13983, file: !3, line: 4054, column: 52)
!13993 = !DILocation(line: 4055, column: 8, scope: !13992)
!13994 = !DILocation(line: 4056, column: 5, scope: !13991)
!13995 = !DILocation(line: 4057, column: 4, scope: !13992)
!13996 = !DILocation(line: 4057, column: 9, scope: !13992)
!13997 = !DILocation(line: 4057, column: 17, scope: !13992)
!13998 = !DILocation(line: 4057, column: 26, scope: !13992)
!13999 = !DILocation(line: 4058, column: 3, scope: !13992)
!14000 = !DILocation(line: 4060, column: 17, scope: !13894)
!14001 = !DILocation(line: 4060, column: 3, scope: !13894)
!14002 = !DILocation(line: 4061, column: 7, scope: !14003)
!14003 = distinct !DILexicalBlock(scope: !13894, file: !3, line: 4061, column: 7)
!14004 = !DILocation(line: 4061, column: 7, scope: !13894)
!14005 = !DILocation(line: 4062, column: 18, scope: !14003)
!14006 = !DILocation(line: 4062, column: 4, scope: !14003)
!14007 = !DILocation(line: 4064, column: 14, scope: !13894)
!14008 = !DILocation(line: 4064, column: 3, scope: !13894)
!14009 = !DILocation(line: 4065, column: 14, scope: !13894)
!14010 = !DILocation(line: 4065, column: 3, scope: !13894)
!14011 = !DILocation(line: 4067, column: 14, scope: !13894)
!14012 = !DILocation(line: 4067, column: 28, scope: !13894)
!14013 = !DILocation(line: 354, column: 2, scope: !11036, inlinedAt: !13893)
!14014 = !DILocation(line: 354, column: 2, scope: !11039, inlinedAt: !13893)
!14015 = distinct !{!14015, !13910, !14016}
!14016 = !DILocation(line: 4068, column: 2, scope: !13889)
!14017 = !DILocation(line: 4069, column: 15, scope: !13889)
!14018 = !DILocation(line: 4069, column: 29, scope: !13889)
!14019 = !DILocation(line: 394, column: 2, scope: !11049, inlinedAt: !13891)
!14020 = !DILocation(line: 394, column: 2, scope: !11052, inlinedAt: !13891)
!14021 = !DILocation(line: 4070, column: 1, scope: !13889)
!14022 = distinct !DISubprogram(name: "cpufreq_suspend", scope: !14023, file: !14023, line: 481, type: !3809, scopeLine: 481, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14023 = !DIFile(filename: "./include/linux/cpufreq.h", directory: "/home/lizy2001/genbc/linux")
!14024 = !DILocation(line: 481, column: 43, scope: !14022)
!14025 = distinct !DISubprogram(name: "pm_runtime_get_noresume", scope: !8548, file: !8548, line: 92, type: !4915, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14026 = !DILocalVariable(name: "v", arg: 1, scope: !14027, file: !8557, line: 93, type: !8560)
!14027 = distinct !DISubprogram(name: "arch_atomic_inc", scope: !8557, file: !8557, line: 93, type: !14028, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14028 = !DISubroutineType(types: !14029)
!14029 = !{null, !8560}
!14030 = !DILocation(line: 93, column: 55, scope: !14027, inlinedAt: !14031)
!14031 = distinct !DILocation(line: 241, column: 2, scope: !14032, inlinedAt: !14033)
!14032 = distinct !DISubprogram(name: "atomic_inc", scope: !8573, file: !8573, line: 238, type: !14028, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14033 = distinct !DILocation(line: 94, column: 2, scope: !14025)
!14034 = !DILocation(line: 99, column: 79, scope: !8609, inlinedAt: !14035)
!14035 = distinct !DILocation(line: 240, column: 2, scope: !14032, inlinedAt: !14033)
!14036 = !DILocation(line: 99, column: 89, scope: !8609, inlinedAt: !14035)
!14037 = !DILocalVariable(name: "v", arg: 1, scope: !14032, file: !8573, line: 238, type: !8560)
!14038 = !DILocation(line: 238, column: 22, scope: !14032, inlinedAt: !14033)
!14039 = !DILocalVariable(name: "dev", arg: 1, scope: !14025, file: !8548, line: 92, type: !4856)
!14040 = !DILocation(line: 92, column: 59, scope: !14025)
!14041 = !DILocation(line: 94, column: 14, scope: !14025)
!14042 = !DILocation(line: 94, column: 19, scope: !14025)
!14043 = !DILocation(line: 94, column: 25, scope: !14025)
!14044 = !DILocation(line: 240, column: 31, scope: !14032, inlinedAt: !14033)
!14045 = !DILocation(line: 101, column: 20, scope: !8609, inlinedAt: !14035)
!14046 = !DILocation(line: 101, column: 23, scope: !8609, inlinedAt: !14035)
!14047 = !DILocation(line: 101, column: 2, scope: !8609, inlinedAt: !14035)
!14048 = !DILocation(line: 102, column: 2, scope: !8609, inlinedAt: !14035)
!14049 = !DILocation(line: 241, column: 18, scope: !14032, inlinedAt: !14033)
!14050 = !DILocation(line: 96, column: 16, scope: !14027, inlinedAt: !14031)
!14051 = !DILocation(line: 96, column: 19, scope: !14027, inlinedAt: !14031)
!14052 = !DILocation(line: 95, column: 2, scope: !14027, inlinedAt: !14031)
!14053 = !{i32 -2146428256}
!14054 = !DILocation(line: 95, column: 1, scope: !14025)
!14055 = distinct !DISubprogram(name: "_dev_info", scope: !3, file: !3, line: 4197, type: !14056, scopeLine: 4197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14056 = !DISubroutineType(types: !14057)
!14057 = !{null, !5370, !292, null}
!14058 = !DILocalVariable(name: "dev", arg: 1, scope: !14055, file: !3, line: 4197, type: !5370)
!14059 = !DILocation(line: 4197, column: 1, scope: !14055)
!14060 = !DILocalVariable(name: "fmt", arg: 2, scope: !14055, file: !3, line: 4197, type: !292)
!14061 = !DILocalVariable(name: "vaf", scope: !14055, file: !3, line: 4197, type: !14062)
!14062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "va_format", file: !14063, line: 90, size: 128, elements: !14064)
!14063 = !DIFile(filename: "./include/linux/printk.h", directory: "/home/lizy2001/genbc/linux")
!14064 = !{!14065, !14066}
!14065 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !14062, file: !14063, line: 91, baseType: !292, size: 64)
!14066 = !DIDerivedType(tag: DW_TAG_member, name: "va", scope: !14062, file: !14063, line: 92, baseType: !14067, size: 64, offset: 64)
!14067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9116, size: 64)
!14068 = !DILocalVariable(name: "args", scope: !14055, file: !3, line: 4197, type: !9116)
!14069 = distinct !DISubprogram(name: "dev_vprintk_emit", scope: !3, file: !3, line: 4121, type: !14070, scopeLine: 4123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14070 = !DISubroutineType(types: !14071)
!14071 = !{!32, !32, !5370, !292, !13231}
!14072 = !DILocalVariable(name: "level", arg: 1, scope: !14069, file: !3, line: 4121, type: !32)
!14073 = !DILocation(line: 4121, column: 26, scope: !14069)
!14074 = !DILocalVariable(name: "dev", arg: 2, scope: !14069, file: !3, line: 4121, type: !5370)
!14075 = !DILocation(line: 4121, column: 54, scope: !14069)
!14076 = !DILocalVariable(name: "fmt", arg: 3, scope: !14069, file: !3, line: 4122, type: !292)
!14077 = !DILocation(line: 4122, column: 20, scope: !14069)
!14078 = !DILocalVariable(name: "args", arg: 4, scope: !14069, file: !3, line: 4122, type: !13231)
!14079 = !DILocation(line: 4122, column: 33, scope: !14069)
!14080 = !DILocalVariable(name: "dev_info", scope: !14069, file: !3, line: 4124, type: !14081)
!14081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_printk_info", file: !14082, line: 27, size: 512, elements: !14083)
!14082 = !DIFile(filename: "./include/linux/dev_printk.h", directory: "/home/lizy2001/genbc/linux")
!14083 = !{!14084, !14085}
!14084 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem", scope: !14081, file: !14082, line: 28, baseType: !267, size: 128)
!14085 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !14081, file: !14082, line: 29, baseType: !457, size: 384, offset: 128)
!14086 = !DILocation(line: 4124, column: 25, scope: !14069)
!14087 = !DILocation(line: 4126, column: 15, scope: !14069)
!14088 = !DILocation(line: 4126, column: 2, scope: !14069)
!14089 = !DILocation(line: 4128, column: 25, scope: !14069)
!14090 = !DILocation(line: 4128, column: 43, scope: !14069)
!14091 = !DILocation(line: 4128, column: 48, scope: !14069)
!14092 = !DILocation(line: 4128, column: 9, scope: !14069)
!14093 = !DILocation(line: 4128, column: 2, scope: !14069)
!14094 = distinct !DISubprogram(name: "set_dev_info", scope: !3, file: !3, line: 4078, type: !14095, scopeLine: 4079, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14095 = !DISubroutineType(types: !14096)
!14096 = !{null, !5370, !14097}
!14097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14081, size: 64)
!14098 = !DILocalVariable(name: "dev", arg: 1, scope: !14094, file: !3, line: 4078, type: !5370)
!14099 = !DILocation(line: 4078, column: 35, scope: !14094)
!14100 = !DILocalVariable(name: "dev_info", arg: 2, scope: !14094, file: !3, line: 4078, type: !14097)
!14101 = !DILocation(line: 4078, column: 64, scope: !14094)
!14102 = !DILocalVariable(name: "subsys", scope: !14094, file: !3, line: 4080, type: !292)
!14103 = !DILocation(line: 4080, column: 14, scope: !14094)
!14104 = !DILocation(line: 4082, column: 9, scope: !14094)
!14105 = !DILocation(line: 4082, column: 2, scope: !14094)
!14106 = !DILocation(line: 4084, column: 6, scope: !14107)
!14107 = distinct !DILexicalBlock(scope: !14094, file: !3, line: 4084, column: 6)
!14108 = !DILocation(line: 4084, column: 11, scope: !14107)
!14109 = !DILocation(line: 4084, column: 6, scope: !14094)
!14110 = !DILocation(line: 4085, column: 12, scope: !14107)
!14111 = !DILocation(line: 4085, column: 17, scope: !14107)
!14112 = !DILocation(line: 4085, column: 24, scope: !14107)
!14113 = !DILocation(line: 4085, column: 10, scope: !14107)
!14114 = !DILocation(line: 4085, column: 3, scope: !14107)
!14115 = !DILocation(line: 4086, column: 11, scope: !14116)
!14116 = distinct !DILexicalBlock(scope: !14107, file: !3, line: 4086, column: 11)
!14117 = !DILocation(line: 4086, column: 16, scope: !14116)
!14118 = !DILocation(line: 4086, column: 11, scope: !14107)
!14119 = !DILocation(line: 4087, column: 12, scope: !14116)
!14120 = !DILocation(line: 4087, column: 17, scope: !14116)
!14121 = !DILocation(line: 4087, column: 22, scope: !14116)
!14122 = !DILocation(line: 4087, column: 10, scope: !14116)
!14123 = !DILocation(line: 4087, column: 3, scope: !14116)
!14124 = !DILocation(line: 4089, column: 3, scope: !14116)
!14125 = !DILocation(line: 4091, column: 10, scope: !14094)
!14126 = !DILocation(line: 4091, column: 20, scope: !14094)
!14127 = !DILocation(line: 4091, column: 31, scope: !14094)
!14128 = !DILocation(line: 4091, column: 2, scope: !14094)
!14129 = !DILocation(line: 4100, column: 6, scope: !14130)
!14130 = distinct !DILexicalBlock(scope: !14094, file: !3, line: 4100, column: 6)
!14131 = !DILocation(line: 4100, column: 6, scope: !14094)
!14132 = !DILocalVariable(name: "c", scope: !14133, file: !3, line: 4101, type: !268)
!14133 = distinct !DILexicalBlock(scope: !14130, file: !3, line: 4100, column: 24)
!14134 = !DILocation(line: 4101, column: 8, scope: !14133)
!14135 = !DILocation(line: 4103, column: 14, scope: !14136)
!14136 = distinct !DILexicalBlock(scope: !14133, file: !3, line: 4103, column: 7)
!14137 = !DILocation(line: 4103, column: 7, scope: !14136)
!14138 = !DILocation(line: 4103, column: 31, scope: !14136)
!14139 = !DILocation(line: 4103, column: 7, scope: !14133)
!14140 = !DILocation(line: 4104, column: 6, scope: !14136)
!14141 = !DILocation(line: 4104, column: 4, scope: !14136)
!14142 = !DILocation(line: 4106, column: 6, scope: !14136)
!14143 = !DILocation(line: 4108, column: 12, scope: !14133)
!14144 = !DILocation(line: 4108, column: 22, scope: !14133)
!14145 = !DILocation(line: 4109, column: 16, scope: !14133)
!14146 = !DILocation(line: 4109, column: 19, scope: !14133)
!14147 = !DILocation(line: 4109, column: 37, scope: !14133)
!14148 = !DILocation(line: 4108, column: 3, scope: !14133)
!14149 = !DILocation(line: 4110, column: 2, scope: !14133)
!14150 = !DILocation(line: 4110, column: 20, scope: !14151)
!14151 = distinct !DILexicalBlock(scope: !14130, file: !3, line: 4110, column: 13)
!14152 = !DILocation(line: 4110, column: 13, scope: !14151)
!14153 = !DILocation(line: 4110, column: 35, scope: !14151)
!14154 = !DILocation(line: 4110, column: 13, scope: !14130)
!14155 = !DILocalVariable(name: "net", scope: !14156, file: !3, line: 4111, type: !290)
!14156 = distinct !DILexicalBlock(scope: !14151, file: !3, line: 4110, column: 41)
!14157 = !DILocation(line: 4111, column: 22, scope: !14156)
!14158 = !DILocalVariable(name: "__mptr", scope: !14159, file: !3, line: 4111, type: !591)
!14159 = distinct !DILexicalBlock(scope: !14156, file: !3, line: 4111, column: 28)
!14160 = !DILocation(line: 4111, column: 28, scope: !14159)
!14161 = !DILocation(line: 4111, column: 28, scope: !14162)
!14162 = distinct !DILexicalBlock(scope: !14159, file: !3, line: 4111, column: 28)
!14163 = !DILocation(line: 4113, column: 12, scope: !14156)
!14164 = !DILocation(line: 4113, column: 22, scope: !14156)
!14165 = !DILocation(line: 4114, column: 12, scope: !14156)
!14166 = !DILocation(line: 4114, column: 17, scope: !14156)
!14167 = !DILocation(line: 4113, column: 3, scope: !14156)
!14168 = !DILocation(line: 4115, column: 2, scope: !14156)
!14169 = !DILocation(line: 4116, column: 12, scope: !14170)
!14170 = distinct !DILexicalBlock(scope: !14151, file: !3, line: 4115, column: 9)
!14171 = !DILocation(line: 4116, column: 22, scope: !14170)
!14172 = !DILocation(line: 4117, column: 15, scope: !14170)
!14173 = !DILocation(line: 4117, column: 32, scope: !14170)
!14174 = !DILocation(line: 4117, column: 23, scope: !14170)
!14175 = !DILocation(line: 4116, column: 3, scope: !14170)
!14176 = !DILocation(line: 4119, column: 1, scope: !14094)
!14177 = distinct !DISubprogram(name: "dev_printk_emit", scope: !3, file: !3, line: 4132, type: !14178, scopeLine: 4133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14178 = !DISubroutineType(types: !14179)
!14179 = !{!32, !32, !5370, !292, null}
!14180 = !DILocalVariable(name: "level", arg: 1, scope: !14177, file: !3, line: 4132, type: !32)
!14181 = !DILocation(line: 4132, column: 25, scope: !14177)
!14182 = !DILocalVariable(name: "dev", arg: 2, scope: !14177, file: !3, line: 4132, type: !5370)
!14183 = !DILocation(line: 4132, column: 53, scope: !14177)
!14184 = !DILocalVariable(name: "fmt", arg: 3, scope: !14177, file: !3, line: 4132, type: !292)
!14185 = !DILocation(line: 4132, column: 70, scope: !14177)
!14186 = !DILocalVariable(name: "args", scope: !14177, file: !3, line: 4134, type: !9116)
!14187 = !DILocation(line: 4134, column: 10, scope: !14177)
!14188 = !DILocalVariable(name: "r", scope: !14177, file: !3, line: 4135, type: !32)
!14189 = !DILocation(line: 4135, column: 6, scope: !14177)
!14190 = !DILocation(line: 4137, column: 2, scope: !14177)
!14191 = !DILocation(line: 4139, column: 23, scope: !14177)
!14192 = !DILocation(line: 4139, column: 30, scope: !14177)
!14193 = !DILocation(line: 4139, column: 35, scope: !14177)
!14194 = !DILocation(line: 4139, column: 40, scope: !14177)
!14195 = !DILocation(line: 4139, column: 6, scope: !14177)
!14196 = !DILocation(line: 4139, column: 4, scope: !14177)
!14197 = !DILocation(line: 4141, column: 2, scope: !14177)
!14198 = !DILocation(line: 4143, column: 9, scope: !14177)
!14199 = !DILocation(line: 4143, column: 2, scope: !14177)
!14200 = distinct !DISubprogram(name: "dev_printk", scope: !3, file: !3, line: 4157, type: !14201, scopeLine: 4159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14201 = !DISubroutineType(types: !14202)
!14202 = !{null, !292, !5370, !292, null}
!14203 = !DILocalVariable(name: "level", arg: 1, scope: !14200, file: !3, line: 4157, type: !292)
!14204 = !DILocation(line: 4157, column: 29, scope: !14200)
!14205 = !DILocalVariable(name: "dev", arg: 2, scope: !14200, file: !3, line: 4157, type: !5370)
!14206 = !DILocation(line: 4157, column: 57, scope: !14200)
!14207 = !DILocalVariable(name: "fmt", arg: 3, scope: !14200, file: !3, line: 4158, type: !292)
!14208 = !DILocation(line: 4158, column: 15, scope: !14200)
!14209 = !DILocalVariable(name: "vaf", scope: !14200, file: !3, line: 4160, type: !14062)
!14210 = !DILocation(line: 4160, column: 19, scope: !14200)
!14211 = !DILocalVariable(name: "args", scope: !14200, file: !3, line: 4161, type: !9116)
!14212 = !DILocation(line: 4161, column: 10, scope: !14200)
!14213 = !DILocation(line: 4163, column: 2, scope: !14200)
!14214 = !DILocation(line: 4165, column: 12, scope: !14200)
!14215 = !DILocation(line: 4165, column: 6, scope: !14200)
!14216 = !DILocation(line: 4165, column: 10, scope: !14200)
!14217 = !DILocation(line: 4166, column: 6, scope: !14200)
!14218 = !DILocation(line: 4166, column: 9, scope: !14200)
!14219 = !DILocation(line: 4168, column: 15, scope: !14200)
!14220 = !DILocation(line: 4168, column: 22, scope: !14200)
!14221 = !DILocation(line: 4168, column: 2, scope: !14200)
!14222 = !DILocation(line: 4170, column: 2, scope: !14200)
!14223 = !DILocation(line: 4171, column: 1, scope: !14200)
!14224 = distinct !DISubprogram(name: "__dev_printk", scope: !3, file: !3, line: 4147, type: !14225, scopeLine: 4149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14225 = !DISubroutineType(types: !14226)
!14226 = !{null, !292, !5370, !14227}
!14227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14062, size: 64)
!14228 = !DILocalVariable(name: "level", arg: 1, scope: !14224, file: !3, line: 4147, type: !292)
!14229 = !DILocation(line: 4147, column: 38, scope: !14224)
!14230 = !DILocalVariable(name: "dev", arg: 2, scope: !14224, file: !3, line: 4147, type: !5370)
!14231 = !DILocation(line: 4147, column: 66, scope: !14224)
!14232 = !DILocalVariable(name: "vaf", arg: 3, scope: !14224, file: !3, line: 4148, type: !14227)
!14233 = !DILocation(line: 4148, column: 22, scope: !14224)
!14234 = !DILocation(line: 4150, column: 6, scope: !14235)
!14235 = distinct !DILexicalBlock(scope: !14224, file: !3, line: 4150, column: 6)
!14236 = !DILocation(line: 4150, column: 6, scope: !14224)
!14237 = !DILocation(line: 4151, column: 19, scope: !14235)
!14238 = !DILocation(line: 4151, column: 28, scope: !14235)
!14239 = !DILocation(line: 4151, column: 35, scope: !14235)
!14240 = !DILocation(line: 4152, column: 23, scope: !14235)
!14241 = !DILocation(line: 4152, column: 5, scope: !14235)
!14242 = !DILocation(line: 4152, column: 38, scope: !14235)
!14243 = !DILocation(line: 4152, column: 29, scope: !14235)
!14244 = !DILocation(line: 4152, column: 44, scope: !14235)
!14245 = !DILocation(line: 4151, column: 3, scope: !14235)
!14246 = !DILocation(line: 4154, column: 36, scope: !14235)
!14247 = !DILocation(line: 4154, column: 43, scope: !14235)
!14248 = !DILocation(line: 4154, column: 3, scope: !14235)
!14249 = !DILocation(line: 4155, column: 1, scope: !14224)
!14250 = distinct !DISubprogram(name: "_dev_emerg", scope: !3, file: !3, line: 4191, type: !14056, scopeLine: 4191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14251 = !DILocalVariable(name: "dev", arg: 1, scope: !14250, file: !3, line: 4191, type: !5370)
!14252 = !DILocation(line: 4191, column: 1, scope: !14250)
!14253 = !DILocalVariable(name: "fmt", arg: 2, scope: !14250, file: !3, line: 4191, type: !292)
!14254 = !DILocalVariable(name: "vaf", scope: !14250, file: !3, line: 4191, type: !14062)
!14255 = !DILocalVariable(name: "args", scope: !14250, file: !3, line: 4191, type: !9116)
!14256 = distinct !DISubprogram(name: "_dev_alert", scope: !3, file: !3, line: 4192, type: !14056, scopeLine: 4192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14257 = !DILocalVariable(name: "dev", arg: 1, scope: !14256, file: !3, line: 4192, type: !5370)
!14258 = !DILocation(line: 4192, column: 1, scope: !14256)
!14259 = !DILocalVariable(name: "fmt", arg: 2, scope: !14256, file: !3, line: 4192, type: !292)
!14260 = !DILocalVariable(name: "vaf", scope: !14256, file: !3, line: 4192, type: !14062)
!14261 = !DILocalVariable(name: "args", scope: !14256, file: !3, line: 4192, type: !9116)
!14262 = distinct !DISubprogram(name: "_dev_crit", scope: !3, file: !3, line: 4193, type: !14056, scopeLine: 4193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14263 = !DILocalVariable(name: "dev", arg: 1, scope: !14262, file: !3, line: 4193, type: !5370)
!14264 = !DILocation(line: 4193, column: 1, scope: !14262)
!14265 = !DILocalVariable(name: "fmt", arg: 2, scope: !14262, file: !3, line: 4193, type: !292)
!14266 = !DILocalVariable(name: "vaf", scope: !14262, file: !3, line: 4193, type: !14062)
!14267 = !DILocalVariable(name: "args", scope: !14262, file: !3, line: 4193, type: !9116)
!14268 = distinct !DISubprogram(name: "_dev_err", scope: !3, file: !3, line: 4194, type: !14056, scopeLine: 4194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14269 = !DILocalVariable(name: "dev", arg: 1, scope: !14268, file: !3, line: 4194, type: !5370)
!14270 = !DILocation(line: 4194, column: 1, scope: !14268)
!14271 = !DILocalVariable(name: "fmt", arg: 2, scope: !14268, file: !3, line: 4194, type: !292)
!14272 = !DILocalVariable(name: "vaf", scope: !14268, file: !3, line: 4194, type: !14062)
!14273 = !DILocalVariable(name: "args", scope: !14268, file: !3, line: 4194, type: !9116)
!14274 = distinct !DISubprogram(name: "_dev_warn", scope: !3, file: !3, line: 4195, type: !14056, scopeLine: 4195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14275 = !DILocalVariable(name: "dev", arg: 1, scope: !14274, file: !3, line: 4195, type: !5370)
!14276 = !DILocation(line: 4195, column: 1, scope: !14274)
!14277 = !DILocalVariable(name: "fmt", arg: 2, scope: !14274, file: !3, line: 4195, type: !292)
!14278 = !DILocalVariable(name: "vaf", scope: !14274, file: !3, line: 4195, type: !14062)
!14279 = !DILocalVariable(name: "args", scope: !14274, file: !3, line: 4195, type: !9116)
!14280 = distinct !DISubprogram(name: "_dev_notice", scope: !3, file: !3, line: 4196, type: !14056, scopeLine: 4196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14281 = !DILocalVariable(name: "dev", arg: 1, scope: !14280, file: !3, line: 4196, type: !5370)
!14282 = !DILocation(line: 4196, column: 1, scope: !14280)
!14283 = !DILocalVariable(name: "fmt", arg: 2, scope: !14280, file: !3, line: 4196, type: !292)
!14284 = !DILocalVariable(name: "vaf", scope: !14280, file: !3, line: 4196, type: !14062)
!14285 = !DILocalVariable(name: "args", scope: !14280, file: !3, line: 4196, type: !9116)
!14286 = distinct !DISubprogram(name: "dev_err_probe", scope: !3, file: !3, line: 4228, type: !14287, scopeLine: 4229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14287 = !DISubroutineType(types: !14288)
!14288 = !{!32, !5370, !32, !292, null}
!14289 = !DILocalVariable(name: "dev", arg: 1, scope: !14286, file: !3, line: 4228, type: !5370)
!14290 = !DILocation(line: 4228, column: 40, scope: !14286)
!14291 = !DILocalVariable(name: "err", arg: 2, scope: !14286, file: !3, line: 4228, type: !32)
!14292 = !DILocation(line: 4228, column: 49, scope: !14286)
!14293 = !DILocalVariable(name: "fmt", arg: 3, scope: !14286, file: !3, line: 4228, type: !292)
!14294 = !DILocation(line: 4228, column: 66, scope: !14286)
!14295 = !DILocalVariable(name: "vaf", scope: !14286, file: !3, line: 4230, type: !14062)
!14296 = !DILocation(line: 4230, column: 19, scope: !14286)
!14297 = !DILocalVariable(name: "args", scope: !14286, file: !3, line: 4231, type: !9116)
!14298 = !DILocation(line: 4231, column: 10, scope: !14286)
!14299 = !DILocation(line: 4233, column: 2, scope: !14286)
!14300 = !DILocation(line: 4234, column: 12, scope: !14286)
!14301 = !DILocation(line: 4234, column: 6, scope: !14286)
!14302 = !DILocation(line: 4234, column: 10, scope: !14286)
!14303 = !DILocation(line: 4235, column: 6, scope: !14286)
!14304 = !DILocation(line: 4235, column: 9, scope: !14286)
!14305 = !DILocation(line: 4237, column: 6, scope: !14306)
!14306 = distinct !DILexicalBlock(scope: !14286, file: !3, line: 4237, column: 6)
!14307 = !DILocation(line: 4237, column: 10, scope: !14306)
!14308 = !DILocation(line: 4237, column: 6, scope: !14286)
!14309 = !DILocation(line: 4238, column: 3, scope: !14310)
!14310 = distinct !DILexicalBlock(scope: !14306, file: !3, line: 4237, column: 28)
!14311 = !DILocation(line: 4239, column: 2, scope: !14310)
!14312 = !DILocation(line: 4240, column: 36, scope: !14313)
!14313 = distinct !DILexicalBlock(scope: !14306, file: !3, line: 4239, column: 9)
!14314 = !DILocation(line: 4240, column: 3, scope: !14313)
!14315 = !DILocation(line: 4244, column: 2, scope: !14286)
!14316 = !DILocation(line: 4246, column: 9, scope: !14286)
!14317 = !DILocation(line: 4246, column: 2, scope: !14286)
!14318 = distinct !DISubprogram(name: "set_primary_fwnode", scope: !3, file: !3, line: 4263, type: !14319, scopeLine: 4264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14319 = !DISubroutineType(types: !14320)
!14320 = !{null, !4856, !5346}
!14321 = !DILocalVariable(name: "dev", arg: 1, scope: !14318, file: !3, line: 4263, type: !4856)
!14322 = !DILocation(line: 4263, column: 40, scope: !14318)
!14323 = !DILocalVariable(name: "fwnode", arg: 2, scope: !14318, file: !3, line: 4263, type: !5346)
!14324 = !DILocation(line: 4263, column: 67, scope: !14318)
!14325 = !DILocalVariable(name: "parent", scope: !14318, file: !3, line: 4265, type: !4856)
!14326 = !DILocation(line: 4265, column: 17, scope: !14318)
!14327 = !DILocation(line: 4265, column: 26, scope: !14318)
!14328 = !DILocation(line: 4265, column: 31, scope: !14318)
!14329 = !DILocalVariable(name: "fn", scope: !14318, file: !3, line: 4266, type: !5346)
!14330 = !DILocation(line: 4266, column: 24, scope: !14318)
!14331 = !DILocation(line: 4266, column: 29, scope: !14318)
!14332 = !DILocation(line: 4266, column: 34, scope: !14318)
!14333 = !DILocation(line: 4268, column: 6, scope: !14334)
!14334 = distinct !DILexicalBlock(scope: !14318, file: !3, line: 4268, column: 6)
!14335 = !DILocation(line: 4268, column: 6, scope: !14318)
!14336 = !DILocation(line: 4269, column: 25, scope: !14337)
!14337 = distinct !DILexicalBlock(scope: !14338, file: !3, line: 4269, column: 7)
!14338 = distinct !DILexicalBlock(scope: !14334, file: !3, line: 4268, column: 14)
!14339 = !DILocation(line: 4269, column: 7, scope: !14337)
!14340 = !DILocation(line: 4269, column: 7, scope: !14338)
!14341 = !DILocation(line: 4270, column: 9, scope: !14337)
!14342 = !DILocation(line: 4270, column: 13, scope: !14337)
!14343 = !DILocation(line: 4270, column: 7, scope: !14337)
!14344 = !DILocation(line: 4270, column: 4, scope: !14337)
!14345 = !DILocation(line: 4272, column: 7, scope: !14346)
!14346 = distinct !DILexicalBlock(scope: !14338, file: !3, line: 4272, column: 7)
!14347 = !DILocation(line: 4272, column: 7, scope: !14338)
!14348 = !DILocalVariable(name: "__ret_warn_on", scope: !14349, file: !3, line: 4273, type: !32)
!14349 = distinct !DILexicalBlock(scope: !14350, file: !3, line: 4273, column: 4)
!14350 = distinct !DILexicalBlock(scope: !14346, file: !3, line: 4272, column: 11)
!14351 = !DILocation(line: 4273, column: 4, scope: !14349)
!14352 = !DILocation(line: 4273, column: 4, scope: !14353)
!14353 = distinct !DILexicalBlock(scope: !14349, file: !3, line: 4273, column: 4)
!14354 = !DILocation(line: 4273, column: 4, scope: !14355)
!14355 = distinct !DILexicalBlock(scope: !14353, file: !3, line: 4273, column: 4)
!14356 = !DILocation(line: 4273, column: 4, scope: !14357)
!14357 = distinct !DILexicalBlock(scope: !14355, file: !3, line: 4273, column: 4)
!14358 = !DILocation(line: 4273, column: 4, scope: !14359)
!14359 = distinct !DILexicalBlock(scope: !14355, file: !3, line: 4273, column: 4)
!14360 = !{i32 -2138980620, i32 -2138980591, i32 -2138980545, i32 -2138980487, i32 -2138980433, i32 -2138980379, i32 -2138980324, i32 -2138980293}
!14361 = !DILocation(line: 4273, column: 4, scope: !14362)
!14362 = distinct !DILexicalBlock(scope: !14355, file: !3, line: 4273, column: 4)
!14363 = !{i32 -2138975830, i32 -2138975823, i32 -2138975771, i32 -2138975740, i32 -2138975710}
!14364 = !DILocation(line: 4273, column: 4, scope: !14365)
!14365 = distinct !DILexicalBlock(scope: !14355, file: !3, line: 4273, column: 4)
!14366 = !DILocation(line: 4274, column: 24, scope: !14350)
!14367 = !DILocation(line: 4274, column: 4, scope: !14350)
!14368 = !DILocation(line: 4274, column: 12, scope: !14350)
!14369 = !DILocation(line: 4274, column: 22, scope: !14350)
!14370 = !DILocation(line: 4275, column: 3, scope: !14350)
!14371 = !DILocation(line: 4276, column: 17, scope: !14338)
!14372 = !DILocation(line: 4276, column: 3, scope: !14338)
!14373 = !DILocation(line: 4276, column: 8, scope: !14338)
!14374 = !DILocation(line: 4276, column: 15, scope: !14338)
!14375 = !DILocation(line: 4277, column: 2, scope: !14338)
!14376 = !DILocation(line: 4278, column: 25, scope: !14377)
!14377 = distinct !DILexicalBlock(scope: !14378, file: !3, line: 4278, column: 7)
!14378 = distinct !DILexicalBlock(scope: !14334, file: !3, line: 4277, column: 9)
!14379 = !DILocation(line: 4278, column: 7, scope: !14377)
!14380 = !DILocation(line: 4278, column: 7, scope: !14378)
!14381 = !DILocation(line: 4279, column: 18, scope: !14382)
!14382 = distinct !DILexicalBlock(scope: !14377, file: !3, line: 4278, column: 30)
!14383 = !DILocation(line: 4279, column: 22, scope: !14382)
!14384 = !DILocation(line: 4279, column: 4, scope: !14382)
!14385 = !DILocation(line: 4279, column: 9, scope: !14382)
!14386 = !DILocation(line: 4279, column: 16, scope: !14382)
!14387 = !DILocation(line: 4280, column: 10, scope: !14388)
!14388 = distinct !DILexicalBlock(scope: !14382, file: !3, line: 4280, column: 8)
!14389 = !DILocation(line: 4280, column: 17, scope: !14388)
!14390 = !DILocation(line: 4280, column: 20, scope: !14388)
!14391 = !DILocation(line: 4280, column: 26, scope: !14388)
!14392 = !DILocation(line: 4280, column: 34, scope: !14388)
!14393 = !DILocation(line: 4280, column: 23, scope: !14388)
!14394 = !DILocation(line: 4280, column: 8, scope: !14382)
!14395 = !DILocation(line: 4281, column: 21, scope: !14388)
!14396 = !DILocation(line: 4281, column: 5, scope: !14388)
!14397 = !DILocation(line: 4281, column: 9, scope: !14388)
!14398 = !DILocation(line: 4281, column: 19, scope: !14388)
!14399 = !DILocation(line: 4282, column: 3, scope: !14382)
!14400 = !DILocation(line: 4283, column: 4, scope: !14401)
!14401 = distinct !DILexicalBlock(scope: !14377, file: !3, line: 4282, column: 10)
!14402 = !DILocation(line: 4283, column: 9, scope: !14401)
!14403 = !DILocation(line: 4283, column: 16, scope: !14401)
!14404 = !DILocation(line: 4286, column: 1, scope: !14318)
!14405 = distinct !DISubprogram(name: "fwnode_is_primary", scope: !3, file: !3, line: 4250, type: !14406, scopeLine: 4251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14406 = !DISubroutineType(types: !14407)
!14407 = !{!771, !5346}
!14408 = !DILocalVariable(name: "fwnode", arg: 1, scope: !14405, file: !3, line: 4250, type: !5346)
!14409 = !DILocation(line: 4250, column: 60, scope: !14405)
!14410 = !DILocation(line: 4252, column: 9, scope: !14405)
!14411 = !DILocation(line: 4252, column: 16, scope: !14405)
!14412 = !DILocation(line: 4252, column: 27, scope: !14405)
!14413 = !DILocation(line: 4252, column: 35, scope: !14405)
!14414 = !DILocation(line: 4252, column: 20, scope: !14405)
!14415 = !DILocation(line: 4252, column: 19, scope: !14405)
!14416 = !DILocation(line: 0, scope: !14405)
!14417 = !DILocation(line: 4252, column: 2, scope: !14405)
!14418 = distinct !DISubprogram(name: "set_secondary_fwnode", scope: !3, file: !3, line: 4298, type: !14319, scopeLine: 4299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14419 = !DILocalVariable(name: "dev", arg: 1, scope: !14418, file: !3, line: 4298, type: !4856)
!14420 = !DILocation(line: 4298, column: 42, scope: !14418)
!14421 = !DILocalVariable(name: "fwnode", arg: 2, scope: !14418, file: !3, line: 4298, type: !5346)
!14422 = !DILocation(line: 4298, column: 69, scope: !14418)
!14423 = !DILocation(line: 4300, column: 6, scope: !14424)
!14424 = distinct !DILexicalBlock(scope: !14418, file: !3, line: 4300, column: 6)
!14425 = !DILocation(line: 4300, column: 6, scope: !14418)
!14426 = !DILocation(line: 4301, column: 23, scope: !14424)
!14427 = !DILocation(line: 4301, column: 3, scope: !14424)
!14428 = !DILocation(line: 4301, column: 11, scope: !14424)
!14429 = !DILocation(line: 4301, column: 21, scope: !14424)
!14430 = !DILocation(line: 4303, column: 24, scope: !14431)
!14431 = distinct !DILexicalBlock(scope: !14418, file: !3, line: 4303, column: 6)
!14432 = !DILocation(line: 4303, column: 29, scope: !14431)
!14433 = !DILocation(line: 4303, column: 6, scope: !14431)
!14434 = !DILocation(line: 4303, column: 6, scope: !14418)
!14435 = !DILocation(line: 4304, column: 28, scope: !14431)
!14436 = !DILocation(line: 4304, column: 3, scope: !14431)
!14437 = !DILocation(line: 4304, column: 8, scope: !14431)
!14438 = !DILocation(line: 4304, column: 16, scope: !14431)
!14439 = !DILocation(line: 4304, column: 26, scope: !14431)
!14440 = !DILocation(line: 4306, column: 17, scope: !14431)
!14441 = !DILocation(line: 4306, column: 3, scope: !14431)
!14442 = !DILocation(line: 4306, column: 8, scope: !14431)
!14443 = !DILocation(line: 4306, column: 15, scope: !14431)
!14444 = !DILocation(line: 4307, column: 1, scope: !14418)
!14445 = distinct !DISubprogram(name: "device_set_of_node_from_dev", scope: !3, file: !3, line: 4318, type: !14446, scopeLine: 4319, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14446 = !DISubroutineType(types: !14447)
!14447 = !{null, !4856, !5370}
!14448 = !DILocalVariable(name: "dev", arg: 1, scope: !14445, file: !3, line: 4318, type: !4856)
!14449 = !DILocation(line: 4318, column: 49, scope: !14445)
!14450 = !DILocalVariable(name: "dev2", arg: 2, scope: !14445, file: !3, line: 4318, type: !5370)
!14451 = !DILocation(line: 4318, column: 75, scope: !14445)
!14452 = !DILocation(line: 4320, column: 14, scope: !14445)
!14453 = !DILocation(line: 4320, column: 19, scope: !14445)
!14454 = !DILocation(line: 4320, column: 2, scope: !14445)
!14455 = !DILocation(line: 4321, column: 29, scope: !14445)
!14456 = !DILocation(line: 4321, column: 35, scope: !14445)
!14457 = !DILocation(line: 4321, column: 17, scope: !14445)
!14458 = !DILocation(line: 4321, column: 2, scope: !14445)
!14459 = !DILocation(line: 4321, column: 7, scope: !14445)
!14460 = !DILocation(line: 4321, column: 15, scope: !14445)
!14461 = !DILocation(line: 4322, column: 2, scope: !14445)
!14462 = !DILocation(line: 4322, column: 7, scope: !14445)
!14463 = !DILocation(line: 4322, column: 22, scope: !14445)
!14464 = !DILocation(line: 4323, column: 1, scope: !14445)
!14465 = distinct !DISubprogram(name: "of_node_put", scope: !5335, file: !5335, line: 129, type: !14466, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14466 = !DISubroutineType(types: !14467)
!14467 = !{null, !5333}
!14468 = !DILocalVariable(name: "node", arg: 1, scope: !14465, file: !5335, line: 129, type: !5333)
!14469 = !DILocation(line: 129, column: 52, scope: !14465)
!14470 = !DILocation(line: 129, column: 60, scope: !14465)
!14471 = distinct !DISubprogram(name: "of_node_get", scope: !5335, file: !5335, line: 125, type: !14472, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14472 = !DISubroutineType(types: !14473)
!14473 = !{!5333, !5333}
!14474 = !DILocalVariable(name: "node", arg: 1, scope: !14471, file: !5335, line: 125, type: !5333)
!14475 = !DILocation(line: 125, column: 67, scope: !14471)
!14476 = !DILocation(line: 127, column: 9, scope: !14471)
!14477 = !DILocation(line: 127, column: 2, scope: !14471)
!14478 = distinct !DISubprogram(name: "device_match_name", scope: !3, file: !3, line: 4326, type: !14479, scopeLine: 4327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14479 = !DISubroutineType(types: !14480)
!14480 = !{!32, !4856, !3258}
!14481 = !DILocalVariable(name: "dev", arg: 1, scope: !14478, file: !3, line: 4326, type: !4856)
!14482 = !DILocation(line: 4326, column: 38, scope: !14478)
!14483 = !DILocalVariable(name: "name", arg: 2, scope: !14478, file: !3, line: 4326, type: !3258)
!14484 = !DILocation(line: 4326, column: 55, scope: !14478)
!14485 = !DILocation(line: 4328, column: 30, scope: !14478)
!14486 = !DILocation(line: 4328, column: 21, scope: !14478)
!14487 = !DILocation(line: 4328, column: 36, scope: !14478)
!14488 = !DILocation(line: 4328, column: 9, scope: !14478)
!14489 = !DILocation(line: 4328, column: 2, scope: !14478)
!14490 = distinct !DISubprogram(name: "device_match_of_node", scope: !3, file: !3, line: 4332, type: !14479, scopeLine: 4333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14491 = !DILocalVariable(name: "dev", arg: 1, scope: !14490, file: !3, line: 4332, type: !4856)
!14492 = !DILocation(line: 4332, column: 41, scope: !14490)
!14493 = !DILocalVariable(name: "np", arg: 2, scope: !14490, file: !3, line: 4332, type: !3258)
!14494 = !DILocation(line: 4332, column: 58, scope: !14490)
!14495 = !DILocation(line: 4334, column: 9, scope: !14490)
!14496 = !DILocation(line: 4334, column: 14, scope: !14490)
!14497 = !DILocation(line: 4334, column: 25, scope: !14490)
!14498 = !DILocation(line: 4334, column: 22, scope: !14490)
!14499 = !DILocation(line: 4334, column: 2, scope: !14490)
!14500 = distinct !DISubprogram(name: "device_match_fwnode", scope: !3, file: !3, line: 4338, type: !14479, scopeLine: 4339, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14501 = !DILocalVariable(name: "dev", arg: 1, scope: !14500, file: !3, line: 4338, type: !4856)
!14502 = !DILocation(line: 4338, column: 40, scope: !14500)
!14503 = !DILocalVariable(name: "fwnode", arg: 2, scope: !14500, file: !3, line: 4338, type: !3258)
!14504 = !DILocation(line: 4338, column: 57, scope: !14500)
!14505 = !DILocation(line: 4340, column: 20, scope: !14500)
!14506 = !DILocation(line: 4340, column: 9, scope: !14500)
!14507 = !DILocation(line: 4340, column: 28, scope: !14500)
!14508 = !DILocation(line: 4340, column: 25, scope: !14500)
!14509 = !DILocation(line: 4340, column: 2, scope: !14500)
!14510 = distinct !DISubprogram(name: "device_match_devt", scope: !3, file: !3, line: 4344, type: !14479, scopeLine: 4345, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14511 = !DILocalVariable(name: "dev", arg: 1, scope: !14510, file: !3, line: 4344, type: !4856)
!14512 = !DILocation(line: 4344, column: 38, scope: !14510)
!14513 = !DILocalVariable(name: "pdevt", arg: 2, scope: !14510, file: !3, line: 4344, type: !3258)
!14514 = !DILocation(line: 4344, column: 55, scope: !14510)
!14515 = !DILocation(line: 4346, column: 9, scope: !14510)
!14516 = !DILocation(line: 4346, column: 14, scope: !14510)
!14517 = !DILocation(line: 4346, column: 32, scope: !14510)
!14518 = !DILocation(line: 4346, column: 23, scope: !14510)
!14519 = !DILocation(line: 4346, column: 22, scope: !14510)
!14520 = !DILocation(line: 4346, column: 19, scope: !14510)
!14521 = !DILocation(line: 4346, column: 2, scope: !14510)
!14522 = distinct !DISubprogram(name: "device_match_acpi_dev", scope: !3, file: !3, line: 4350, type: !14479, scopeLine: 4351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14523 = !DILocalVariable(name: "dev", arg: 1, scope: !14522, file: !3, line: 4350, type: !4856)
!14524 = !DILocation(line: 4350, column: 42, scope: !14522)
!14525 = !DILocalVariable(name: "adev", arg: 2, scope: !14522, file: !3, line: 4350, type: !3258)
!14526 = !DILocation(line: 4350, column: 59, scope: !14522)
!14527 = !DILocalVariable(name: "__to_acpi_device_node_fwnode", scope: !14528, file: !3, line: 4352, type: !5346)
!14528 = distinct !DILexicalBlock(scope: !14522, file: !3, line: 4352, column: 9)
!14529 = !DILocation(line: 4352, column: 9, scope: !14528)
!14530 = !DILocalVariable(name: "__mptr", scope: !14531, file: !3, line: 4352, type: !591)
!14531 = distinct !DILexicalBlock(scope: !14528, file: !3, line: 4352, column: 9)
!14532 = !DILocation(line: 4352, column: 9, scope: !14531)
!14533 = !DILocation(line: 4352, column: 9, scope: !14534)
!14534 = distinct !DILexicalBlock(scope: !14531, file: !3, line: 4352, column: 9)
!14535 = !DILocation(line: 4352, column: 32, scope: !14522)
!14536 = !DILocation(line: 4352, column: 29, scope: !14522)
!14537 = !DILocation(line: 4352, column: 2, scope: !14522)
!14538 = distinct !DISubprogram(name: "device_match_any", scope: !3, file: !3, line: 4356, type: !14479, scopeLine: 4357, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14539 = !DILocalVariable(name: "dev", arg: 1, scope: !14538, file: !3, line: 4356, type: !4856)
!14540 = !DILocation(line: 4356, column: 37, scope: !14538)
!14541 = !DILocalVariable(name: "unused", arg: 2, scope: !14538, file: !3, line: 4356, type: !3258)
!14542 = !DILocation(line: 4356, column: 54, scope: !14538)
!14543 = !DILocation(line: 4358, column: 2, scope: !14538)
!14544 = distinct !DISubprogram(name: "__srcu_read_lock", scope: !7906, file: !7906, line: 58, type: !7928, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14545 = !DILocalVariable(name: "ssp", arg: 1, scope: !14544, file: !7906, line: 58, type: !7930)
!14546 = !DILocation(line: 58, column: 56, scope: !14544)
!14547 = !DILocalVariable(name: "idx", scope: !14544, file: !7906, line: 60, type: !32)
!14548 = !DILocation(line: 60, column: 6, scope: !14544)
!14549 = !DILocation(line: 62, column: 8, scope: !14550)
!14550 = distinct !DILexicalBlock(scope: !14544, file: !7906, line: 62, column: 8)
!14551 = !DILocation(line: 62, column: 8, scope: !14552)
!14552 = distinct !DILexicalBlock(scope: !14550, file: !7906, line: 62, column: 8)
!14553 = !DILocation(line: 62, column: 8, scope: !14544)
!14554 = !DILocation(line: 62, column: 6, scope: !14544)
!14555 = !DILocation(line: 63, column: 2, scope: !14544)
!14556 = !DILocation(line: 63, column: 2, scope: !14557)
!14557 = distinct !DILexicalBlock(scope: !14544, file: !7906, line: 63, column: 2)
!14558 = !DILocation(line: 63, column: 2, scope: !14559)
!14559 = distinct !DILexicalBlock(scope: !14557, file: !7906, line: 63, column: 2)
!14560 = !DILocation(line: 63, column: 2, scope: !14561)
!14561 = distinct !DILexicalBlock(scope: !14557, file: !7906, line: 63, column: 2)
!14562 = !DILocation(line: 64, column: 9, scope: !14544)
!14563 = !DILocation(line: 64, column: 2, scope: !14544)
!14564 = distinct !DISubprogram(name: "device_is_registered", scope: !4570, file: !4570, line: 680, type: !4911, scopeLine: 681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14565 = !DILocalVariable(name: "dev", arg: 1, scope: !14564, file: !4570, line: 680, type: !4856)
!14566 = !DILocation(line: 680, column: 55, scope: !14564)
!14567 = !DILocation(line: 682, column: 9, scope: !14564)
!14568 = !DILocation(line: 682, column: 14, scope: !14564)
!14569 = !DILocation(line: 682, column: 19, scope: !14564)
!14570 = !DILocation(line: 682, column: 2, scope: !14564)
!14571 = distinct !DISubprogram(name: "devlink_add_symlinks", scope: !3, file: !3, line: 356, type: !7481, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14572 = !DILocalVariable(name: "dev", arg: 1, scope: !14571, file: !3, line: 356, type: !4856)
!14573 = !DILocation(line: 356, column: 48, scope: !14571)
!14574 = !DILocalVariable(name: "class_intf", arg: 2, scope: !14571, file: !3, line: 357, type: !7474)
!14575 = !DILocation(line: 357, column: 29, scope: !14571)
!14576 = !DILocalVariable(name: "ret", scope: !14571, file: !3, line: 359, type: !32)
!14577 = !DILocation(line: 359, column: 6, scope: !14571)
!14578 = !DILocalVariable(name: "len", scope: !14571, file: !3, line: 360, type: !1039)
!14579 = !DILocation(line: 360, column: 9, scope: !14571)
!14580 = !DILocalVariable(name: "link", scope: !14571, file: !3, line: 361, type: !7438)
!14581 = !DILocation(line: 361, column: 22, scope: !14571)
!14582 = !DILocalVariable(name: "__mptr", scope: !14583, file: !3, line: 361, type: !591)
!14583 = distinct !DILexicalBlock(scope: !14571, file: !3, line: 361, column: 29)
!14584 = !DILocation(line: 361, column: 29, scope: !14583)
!14585 = !DILocation(line: 361, column: 29, scope: !14586)
!14586 = distinct !DILexicalBlock(scope: !14583, file: !3, line: 361, column: 29)
!14587 = !DILocalVariable(name: "sup", scope: !14571, file: !3, line: 362, type: !4856)
!14588 = !DILocation(line: 362, column: 17, scope: !14571)
!14589 = !DILocation(line: 362, column: 23, scope: !14571)
!14590 = !DILocation(line: 362, column: 29, scope: !14571)
!14591 = !DILocalVariable(name: "con", scope: !14571, file: !3, line: 363, type: !4856)
!14592 = !DILocation(line: 363, column: 17, scope: !14571)
!14593 = !DILocation(line: 363, column: 23, scope: !14571)
!14594 = !DILocation(line: 363, column: 29, scope: !14571)
!14595 = !DILocalVariable(name: "buf", scope: !14571, file: !3, line: 364, type: !1038)
!14596 = !DILocation(line: 364, column: 8, scope: !14571)
!14597 = !DILocalVariable(name: "__UNIQUE_ID___x334", scope: !14598, file: !3, line: 366, type: !312)
!14598 = distinct !DILexicalBlock(scope: !14571, file: !3, line: 366, column: 8)
!14599 = !DILocation(line: 366, column: 8, scope: !14598)
!14600 = !DILocalVariable(name: "__UNIQUE_ID___y335", scope: !14598, file: !3, line: 366, type: !312)
!14601 = !DILocation(line: 366, column: 6, scope: !14571)
!14602 = !DILocation(line: 367, column: 6, scope: !14571)
!14603 = !DILocation(line: 368, column: 16, scope: !14571)
!14604 = !DILocation(line: 368, column: 8, scope: !14571)
!14605 = !DILocation(line: 368, column: 6, scope: !14571)
!14606 = !DILocation(line: 369, column: 7, scope: !14607)
!14607 = distinct !DILexicalBlock(scope: !14571, file: !3, line: 369, column: 6)
!14608 = !DILocation(line: 369, column: 6, scope: !14571)
!14609 = !DILocation(line: 370, column: 3, scope: !14607)
!14610 = !DILocation(line: 372, column: 27, scope: !14571)
!14611 = !DILocation(line: 372, column: 33, scope: !14571)
!14612 = !DILocation(line: 372, column: 42, scope: !14571)
!14613 = !DILocation(line: 372, column: 49, scope: !14571)
!14614 = !DILocation(line: 372, column: 54, scope: !14571)
!14615 = !DILocation(line: 372, column: 8, scope: !14571)
!14616 = !DILocation(line: 372, column: 6, scope: !14571)
!14617 = !DILocation(line: 373, column: 6, scope: !14618)
!14618 = distinct !DILexicalBlock(scope: !14571, file: !3, line: 373, column: 6)
!14619 = !DILocation(line: 373, column: 6, scope: !14571)
!14620 = !DILocation(line: 374, column: 3, scope: !14618)
!14621 = !DILocation(line: 376, column: 27, scope: !14571)
!14622 = !DILocation(line: 376, column: 33, scope: !14571)
!14623 = !DILocation(line: 376, column: 42, scope: !14571)
!14624 = !DILocation(line: 376, column: 49, scope: !14571)
!14625 = !DILocation(line: 376, column: 54, scope: !14571)
!14626 = !DILocation(line: 376, column: 8, scope: !14571)
!14627 = !DILocation(line: 376, column: 6, scope: !14571)
!14628 = !DILocation(line: 377, column: 6, scope: !14629)
!14629 = distinct !DILexicalBlock(scope: !14571, file: !3, line: 377, column: 6)
!14630 = !DILocation(line: 377, column: 6, scope: !14571)
!14631 = !DILocation(line: 378, column: 3, scope: !14629)
!14632 = !DILocation(line: 380, column: 11, scope: !14571)
!14633 = !DILocation(line: 380, column: 16, scope: !14571)
!14634 = !DILocation(line: 380, column: 45, scope: !14571)
!14635 = !DILocation(line: 380, column: 36, scope: !14571)
!14636 = !DILocation(line: 380, column: 2, scope: !14571)
!14637 = !DILocation(line: 381, column: 27, scope: !14571)
!14638 = !DILocation(line: 381, column: 32, scope: !14571)
!14639 = !DILocation(line: 381, column: 39, scope: !14571)
!14640 = !DILocation(line: 381, column: 45, scope: !14571)
!14641 = !DILocation(line: 381, column: 54, scope: !14571)
!14642 = !DILocation(line: 381, column: 60, scope: !14571)
!14643 = !DILocation(line: 381, column: 8, scope: !14571)
!14644 = !DILocation(line: 381, column: 6, scope: !14571)
!14645 = !DILocation(line: 382, column: 6, scope: !14646)
!14646 = distinct !DILexicalBlock(scope: !14571, file: !3, line: 382, column: 6)
!14647 = !DILocation(line: 382, column: 6, scope: !14571)
!14648 = !DILocation(line: 383, column: 3, scope: !14646)
!14649 = !DILocation(line: 385, column: 11, scope: !14571)
!14650 = !DILocation(line: 385, column: 16, scope: !14571)
!14651 = !DILocation(line: 385, column: 45, scope: !14571)
!14652 = !DILocation(line: 385, column: 36, scope: !14571)
!14653 = !DILocation(line: 385, column: 2, scope: !14571)
!14654 = !DILocation(line: 386, column: 27, scope: !14571)
!14655 = !DILocation(line: 386, column: 32, scope: !14571)
!14656 = !DILocation(line: 386, column: 39, scope: !14571)
!14657 = !DILocation(line: 386, column: 45, scope: !14571)
!14658 = !DILocation(line: 386, column: 54, scope: !14571)
!14659 = !DILocation(line: 386, column: 60, scope: !14571)
!14660 = !DILocation(line: 386, column: 8, scope: !14571)
!14661 = !DILocation(line: 386, column: 6, scope: !14571)
!14662 = !DILocation(line: 387, column: 6, scope: !14663)
!14663 = distinct !DILexicalBlock(scope: !14571, file: !3, line: 387, column: 6)
!14664 = !DILocation(line: 387, column: 6, scope: !14571)
!14665 = !DILocation(line: 388, column: 3, scope: !14663)
!14666 = !DILocation(line: 390, column: 2, scope: !14571)
!14667 = !DILabel(scope: !14571, name: "err_sup_dev", file: !3, line: 392)
!14668 = !DILocation(line: 392, column: 1, scope: !14571)
!14669 = !DILocation(line: 393, column: 11, scope: !14571)
!14670 = !DILocation(line: 393, column: 16, scope: !14571)
!14671 = !DILocation(line: 393, column: 45, scope: !14571)
!14672 = !DILocation(line: 393, column: 36, scope: !14571)
!14673 = !DILocation(line: 393, column: 2, scope: !14571)
!14674 = !DILocation(line: 394, column: 21, scope: !14571)
!14675 = !DILocation(line: 394, column: 26, scope: !14571)
!14676 = !DILocation(line: 394, column: 32, scope: !14571)
!14677 = !DILocation(line: 394, column: 2, scope: !14571)
!14678 = !DILabel(scope: !14571, name: "err_con_dev", file: !3, line: 395)
!14679 = !DILocation(line: 395, column: 1, scope: !14571)
!14680 = !DILocation(line: 396, column: 21, scope: !14571)
!14681 = !DILocation(line: 396, column: 27, scope: !14571)
!14682 = !DILocation(line: 396, column: 36, scope: !14571)
!14683 = !DILocation(line: 396, column: 2, scope: !14571)
!14684 = !DILabel(scope: !14571, name: "err_con", file: !3, line: 397)
!14685 = !DILocation(line: 397, column: 1, scope: !14571)
!14686 = !DILocation(line: 398, column: 21, scope: !14571)
!14687 = !DILocation(line: 398, column: 27, scope: !14571)
!14688 = !DILocation(line: 398, column: 36, scope: !14571)
!14689 = !DILocation(line: 398, column: 2, scope: !14571)
!14690 = !DILabel(scope: !14571, name: "out", file: !3, line: 399)
!14691 = !DILocation(line: 399, column: 1, scope: !14571)
!14692 = !DILocation(line: 400, column: 8, scope: !14571)
!14693 = !DILocation(line: 400, column: 2, scope: !14571)
!14694 = !DILocation(line: 401, column: 9, scope: !14571)
!14695 = !DILocation(line: 401, column: 2, scope: !14571)
!14696 = !DILocation(line: 402, column: 1, scope: !14571)
!14697 = distinct !DISubprogram(name: "devlink_remove_symlinks", scope: !3, file: !3, line: 404, type: !7485, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14698 = !DILocalVariable(name: "dev", arg: 1, scope: !14697, file: !3, line: 404, type: !4856)
!14699 = !DILocation(line: 404, column: 52, scope: !14697)
!14700 = !DILocalVariable(name: "class_intf", arg: 2, scope: !14697, file: !3, line: 405, type: !7474)
!14701 = !DILocation(line: 405, column: 32, scope: !14697)
!14702 = !DILocalVariable(name: "link", scope: !14697, file: !3, line: 407, type: !7438)
!14703 = !DILocation(line: 407, column: 22, scope: !14697)
!14704 = !DILocalVariable(name: "__mptr", scope: !14705, file: !3, line: 407, type: !591)
!14705 = distinct !DILexicalBlock(scope: !14697, file: !3, line: 407, column: 29)
!14706 = !DILocation(line: 407, column: 29, scope: !14705)
!14707 = !DILocation(line: 407, column: 29, scope: !14708)
!14708 = distinct !DILexicalBlock(scope: !14705, file: !3, line: 407, column: 29)
!14709 = !DILocalVariable(name: "len", scope: !14697, file: !3, line: 408, type: !1039)
!14710 = !DILocation(line: 408, column: 9, scope: !14697)
!14711 = !DILocalVariable(name: "sup", scope: !14697, file: !3, line: 409, type: !4856)
!14712 = !DILocation(line: 409, column: 17, scope: !14697)
!14713 = !DILocation(line: 409, column: 23, scope: !14697)
!14714 = !DILocation(line: 409, column: 29, scope: !14697)
!14715 = !DILocalVariable(name: "con", scope: !14697, file: !3, line: 410, type: !4856)
!14716 = !DILocation(line: 410, column: 17, scope: !14697)
!14717 = !DILocation(line: 410, column: 23, scope: !14697)
!14718 = !DILocation(line: 410, column: 29, scope: !14697)
!14719 = !DILocalVariable(name: "buf", scope: !14697, file: !3, line: 411, type: !1038)
!14720 = !DILocation(line: 411, column: 8, scope: !14697)
!14721 = !DILocation(line: 413, column: 21, scope: !14697)
!14722 = !DILocation(line: 413, column: 27, scope: !14697)
!14723 = !DILocation(line: 413, column: 36, scope: !14697)
!14724 = !DILocation(line: 413, column: 2, scope: !14697)
!14725 = !DILocation(line: 414, column: 21, scope: !14697)
!14726 = !DILocation(line: 414, column: 27, scope: !14697)
!14727 = !DILocation(line: 414, column: 36, scope: !14697)
!14728 = !DILocation(line: 414, column: 2, scope: !14697)
!14729 = !DILocalVariable(name: "__UNIQUE_ID___x337", scope: !14730, file: !3, line: 416, type: !312)
!14730 = distinct !DILexicalBlock(scope: !14697, file: !3, line: 416, column: 8)
!14731 = !DILocation(line: 416, column: 8, scope: !14730)
!14732 = !DILocalVariable(name: "__UNIQUE_ID___y338", scope: !14730, file: !3, line: 416, type: !312)
!14733 = !DILocation(line: 416, column: 6, scope: !14697)
!14734 = !DILocation(line: 417, column: 6, scope: !14697)
!14735 = !DILocation(line: 418, column: 16, scope: !14697)
!14736 = !DILocation(line: 418, column: 8, scope: !14697)
!14737 = !DILocation(line: 418, column: 6, scope: !14697)
!14738 = !DILocation(line: 419, column: 7, scope: !14739)
!14739 = distinct !DILexicalBlock(scope: !14697, file: !3, line: 419, column: 6)
!14740 = !DILocation(line: 419, column: 6, scope: !14697)
!14741 = !DILocalVariable(name: "__ret_warn_on", scope: !14742, file: !3, line: 420, type: !32)
!14742 = distinct !DILexicalBlock(scope: !14743, file: !3, line: 420, column: 3)
!14743 = distinct !DILexicalBlock(scope: !14739, file: !3, line: 419, column: 12)
!14744 = !DILocation(line: 420, column: 3, scope: !14742)
!14745 = !DILocation(line: 420, column: 3, scope: !14746)
!14746 = distinct !DILexicalBlock(scope: !14742, file: !3, line: 420, column: 3)
!14747 = !DILocation(line: 420, column: 3, scope: !14748)
!14748 = distinct !DILexicalBlock(scope: !14746, file: !3, line: 420, column: 3)
!14749 = !DILocation(line: 420, column: 3, scope: !14750)
!14750 = distinct !DILexicalBlock(scope: !14748, file: !3, line: 420, column: 3)
!14751 = !DILocation(line: 420, column: 3, scope: !14752)
!14752 = distinct !DILexicalBlock(scope: !14748, file: !3, line: 420, column: 3)
!14753 = !DILocation(line: 420, column: 3, scope: !14754)
!14754 = distinct !DILexicalBlock(scope: !14752, file: !3, line: 420, column: 3)
!14755 = !DILocation(line: 420, column: 3, scope: !14756)
!14756 = distinct !DILexicalBlock(scope: !14752, file: !3, line: 420, column: 3)
!14757 = !{i32 -2139196392, i32 -2139196363, i32 -2139196317, i32 -2139196259, i32 -2139196205, i32 -2139196151, i32 -2139196096, i32 -2139196065}
!14758 = !DILocation(line: 420, column: 3, scope: !14759)
!14759 = distinct !DILexicalBlock(scope: !14752, file: !3, line: 420, column: 3)
!14760 = !{i32 -2139195653, i32 -2139195646, i32 -2139195594, i32 -2139195563, i32 -2139195533}
!14761 = !DILocation(line: 420, column: 3, scope: !14762)
!14762 = distinct !DILexicalBlock(scope: !14752, file: !3, line: 420, column: 3)
!14763 = !DILocation(line: 420, column: 3, scope: !14764)
!14764 = distinct !DILexicalBlock(scope: !14748, file: !3, line: 420, column: 3)
!14765 = !DILocation(line: 421, column: 3, scope: !14743)
!14766 = !DILocation(line: 424, column: 11, scope: !14697)
!14767 = !DILocation(line: 424, column: 16, scope: !14697)
!14768 = !DILocation(line: 424, column: 45, scope: !14697)
!14769 = !DILocation(line: 424, column: 36, scope: !14697)
!14770 = !DILocation(line: 424, column: 2, scope: !14697)
!14771 = !DILocation(line: 425, column: 21, scope: !14697)
!14772 = !DILocation(line: 425, column: 26, scope: !14697)
!14773 = !DILocation(line: 425, column: 32, scope: !14697)
!14774 = !DILocation(line: 425, column: 2, scope: !14697)
!14775 = !DILocation(line: 426, column: 11, scope: !14697)
!14776 = !DILocation(line: 426, column: 16, scope: !14697)
!14777 = !DILocation(line: 426, column: 45, scope: !14697)
!14778 = !DILocation(line: 426, column: 36, scope: !14697)
!14779 = !DILocation(line: 426, column: 2, scope: !14697)
!14780 = !DILocation(line: 427, column: 21, scope: !14697)
!14781 = !DILocation(line: 427, column: 26, scope: !14697)
!14782 = !DILocation(line: 427, column: 32, scope: !14697)
!14783 = !DILocation(line: 427, column: 2, scope: !14697)
!14784 = !DILocation(line: 428, column: 8, scope: !14697)
!14785 = !DILocation(line: 428, column: 2, scope: !14697)
!14786 = !DILocation(line: 429, column: 1, scope: !14697)
!14787 = distinct !DISubprogram(name: "kasan_check_write", scope: !14788, file: !14788, line: 38, type: !14789, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14788 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!14789 = !DISubroutineType(types: !14790)
!14790 = !{!771, !8613, !7}
!14791 = !DILocalVariable(name: "p", arg: 1, scope: !14787, file: !14788, line: 38, type: !8613)
!14792 = !DILocation(line: 38, column: 59, scope: !14787)
!14793 = !DILocalVariable(name: "size", arg: 2, scope: !14787, file: !14788, line: 38, type: !7)
!14794 = !DILocation(line: 38, column: 75, scope: !14787)
!14795 = !DILocation(line: 40, column: 2, scope: !14787)
!14796 = distinct !DISubprogram(name: "kcsan_check_access", scope: !14797, file: !14797, line: 178, type: !14798, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14797 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!14798 = !DISubroutineType(types: !14799)
!14799 = !{null, !8613, !1039, !32}
!14800 = !DILocalVariable(name: "ptr", arg: 1, scope: !14796, file: !14797, line: 178, type: !8613)
!14801 = !DILocation(line: 178, column: 60, scope: !14796)
!14802 = !DILocalVariable(name: "size", arg: 2, scope: !14796, file: !14797, line: 178, type: !1039)
!14803 = !DILocation(line: 178, column: 72, scope: !14796)
!14804 = !DILocalVariable(name: "type", arg: 3, scope: !14796, file: !14797, line: 179, type: !32)
!14805 = !DILocation(line: 179, column: 15, scope: !14796)
!14806 = !DILocation(line: 179, column: 23, scope: !14796)
!14807 = distinct !DISubprogram(name: "__refcount_inc", scope: !569, file: !569, line: 248, type: !14808, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14808 = !DISubroutineType(types: !14809)
!14809 = !{null, !8681, !1001}
!14810 = !DILocalVariable(name: "r", arg: 1, scope: !14807, file: !569, line: 248, type: !8681)
!14811 = !DILocation(line: 248, column: 47, scope: !14807)
!14812 = !DILocalVariable(name: "oldp", arg: 2, scope: !14807, file: !569, line: 248, type: !1001)
!14813 = !DILocation(line: 248, column: 55, scope: !14807)
!14814 = !DILocation(line: 250, column: 20, scope: !14807)
!14815 = !DILocation(line: 250, column: 23, scope: !14807)
!14816 = !DILocation(line: 250, column: 2, scope: !14807)
!14817 = !DILocation(line: 251, column: 1, scope: !14807)
!14818 = distinct !DISubprogram(name: "__refcount_add", scope: !569, file: !569, line: 191, type: !14819, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14819 = !DISubroutineType(types: !14820)
!14820 = !{null, !32, !8681, !1001}
!14821 = !DILocalVariable(name: "i", arg: 1, scope: !14822, file: !8557, line: 182, type: !32)
!14822 = distinct !DISubprogram(name: "arch_atomic_fetch_add", scope: !8557, file: !8557, line: 182, type: !14823, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14823 = !DISubroutineType(types: !14824)
!14824 = !{!32, !32, !8560}
!14825 = !DILocation(line: 182, column: 54, scope: !14822, inlinedAt: !14826)
!14826 = distinct !DILocation(line: 143, column: 9, scope: !14827, inlinedAt: !14828)
!14827 = distinct !DISubprogram(name: "atomic_fetch_add_relaxed", scope: !8573, file: !8573, line: 140, type: !14823, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14828 = distinct !DILocation(line: 193, column: 12, scope: !14818)
!14829 = !DILocalVariable(name: "v", arg: 2, scope: !14822, file: !8557, line: 182, type: !8560)
!14830 = !DILocation(line: 182, column: 67, scope: !14822, inlinedAt: !14826)
!14831 = !DILocalVariable(name: "__ret", scope: !14832, file: !8557, line: 184, type: !32)
!14832 = distinct !DILexicalBlock(scope: !14822, file: !8557, line: 184, column: 9)
!14833 = !DILocation(line: 184, column: 9, scope: !14832, inlinedAt: !14826)
!14834 = !DILocation(line: 99, column: 79, scope: !8609, inlinedAt: !14835)
!14835 = distinct !DILocation(line: 142, column: 2, scope: !14827, inlinedAt: !14828)
!14836 = !DILocation(line: 99, column: 89, scope: !8609, inlinedAt: !14835)
!14837 = !DILocalVariable(name: "i", arg: 1, scope: !14827, file: !8573, line: 140, type: !32)
!14838 = !DILocation(line: 140, column: 30, scope: !14827, inlinedAt: !14828)
!14839 = !DILocalVariable(name: "v", arg: 2, scope: !14827, file: !8573, line: 140, type: !8560)
!14840 = !DILocation(line: 140, column: 43, scope: !14827, inlinedAt: !14828)
!14841 = !DILocalVariable(name: "i", arg: 1, scope: !14818, file: !569, line: 191, type: !32)
!14842 = !DILocation(line: 191, column: 39, scope: !14818)
!14843 = !DILocalVariable(name: "r", arg: 2, scope: !14818, file: !569, line: 191, type: !8681)
!14844 = !DILocation(line: 191, column: 54, scope: !14818)
!14845 = !DILocalVariable(name: "oldp", arg: 3, scope: !14818, file: !569, line: 191, type: !1001)
!14846 = !DILocation(line: 191, column: 62, scope: !14818)
!14847 = !DILocalVariable(name: "old", scope: !14818, file: !569, line: 193, type: !32)
!14848 = !DILocation(line: 193, column: 6, scope: !14818)
!14849 = !DILocation(line: 193, column: 37, scope: !14818)
!14850 = !DILocation(line: 193, column: 41, scope: !14818)
!14851 = !DILocation(line: 193, column: 44, scope: !14818)
!14852 = !DILocation(line: 142, column: 31, scope: !14827, inlinedAt: !14828)
!14853 = !DILocation(line: 101, column: 20, scope: !8609, inlinedAt: !14835)
!14854 = !DILocation(line: 101, column: 23, scope: !8609, inlinedAt: !14835)
!14855 = !DILocation(line: 101, column: 2, scope: !8609, inlinedAt: !14835)
!14856 = !DILocation(line: 102, column: 2, scope: !8609, inlinedAt: !14835)
!14857 = !DILocation(line: 143, column: 39, scope: !14827, inlinedAt: !14828)
!14858 = !DILocation(line: 143, column: 42, scope: !14827, inlinedAt: !14828)
!14859 = !{i32 -2146422324}
!14860 = !DILocation(line: 195, column: 6, scope: !14861)
!14861 = distinct !DILexicalBlock(scope: !14818, file: !569, line: 195, column: 6)
!14862 = !DILocation(line: 195, column: 6, scope: !14818)
!14863 = !DILocation(line: 196, column: 11, scope: !14861)
!14864 = !DILocation(line: 196, column: 4, scope: !14861)
!14865 = !DILocation(line: 196, column: 9, scope: !14861)
!14866 = !DILocation(line: 196, column: 3, scope: !14861)
!14867 = !DILocation(line: 198, column: 6, scope: !14868)
!14868 = distinct !DILexicalBlock(scope: !14818, file: !569, line: 198, column: 6)
!14869 = !DILocation(line: 198, column: 6, scope: !14818)
!14870 = !DILocation(line: 199, column: 26, scope: !14868)
!14871 = !DILocation(line: 199, column: 3, scope: !14868)
!14872 = !DILocation(line: 200, column: 11, scope: !14873)
!14873 = distinct !DILexicalBlock(scope: !14868, file: !569, line: 200, column: 11)
!14874 = !DILocation(line: 200, column: 11, scope: !14868)
!14875 = !DILocation(line: 201, column: 26, scope: !14873)
!14876 = !DILocation(line: 201, column: 3, scope: !14873)
!14877 = !DILocation(line: 202, column: 1, scope: !14818)
!14878 = distinct !DISubprogram(name: "get_order", scope: !14879, file: !14879, line: 29, type: !14880, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14879 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!14880 = !DISubroutineType(types: !14881)
!14881 = !{!32, !312}
!14882 = !DILocalVariable(name: "x", arg: 1, scope: !14883, file: !14884, line: 366, type: !333)
!14883 = distinct !DISubprogram(name: "fls64", scope: !14884, file: !14884, line: 366, type: !14885, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14884 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!14885 = !DISubroutineType(types: !14886)
!14886 = !{!32, !333}
!14887 = !DILocation(line: 366, column: 40, scope: !14883, inlinedAt: !14888)
!14888 = distinct !DILocation(line: 46, column: 9, scope: !14878)
!14889 = !DILocalVariable(name: "bitpos", scope: !14883, file: !14884, line: 368, type: !32)
!14890 = !DILocation(line: 368, column: 6, scope: !14883, inlinedAt: !14888)
!14891 = !DILocalVariable(name: "size", arg: 1, scope: !14878, file: !14879, line: 29, type: !312)
!14892 = !DILocation(line: 29, column: 63, scope: !14878)
!14893 = !DILocation(line: 31, column: 27, scope: !14894)
!14894 = distinct !DILexicalBlock(scope: !14878, file: !14879, line: 31, column: 6)
!14895 = !DILocation(line: 31, column: 6, scope: !14894)
!14896 = !DILocation(line: 31, column: 6, scope: !14878)
!14897 = !DILocation(line: 32, column: 8, scope: !14898)
!14898 = distinct !DILexicalBlock(scope: !14899, file: !14879, line: 32, column: 7)
!14899 = distinct !DILexicalBlock(scope: !14894, file: !14879, line: 31, column: 34)
!14900 = !DILocation(line: 32, column: 7, scope: !14899)
!14901 = !DILocation(line: 33, column: 4, scope: !14898)
!14902 = !DILocation(line: 35, column: 7, scope: !14903)
!14903 = distinct !DILexicalBlock(scope: !14899, file: !14879, line: 35, column: 7)
!14904 = !DILocation(line: 35, column: 12, scope: !14903)
!14905 = !DILocation(line: 35, column: 7, scope: !14899)
!14906 = !DILocation(line: 36, column: 4, scope: !14903)
!14907 = !DILocation(line: 38, column: 10, scope: !14899)
!14908 = !DILocation(line: 38, column: 28, scope: !14899)
!14909 = !DILocation(line: 38, column: 41, scope: !14899)
!14910 = !DILocation(line: 38, column: 3, scope: !14899)
!14911 = !DILocation(line: 41, column: 6, scope: !14878)
!14912 = !DILocation(line: 42, column: 7, scope: !14878)
!14913 = !DILocation(line: 46, column: 15, scope: !14878)
!14914 = !DILocation(line: 374, column: 2, scope: !14883, inlinedAt: !14888)
!14915 = !DILocation(line: 376, column: 14, scope: !14883, inlinedAt: !14888)
!14916 = !{i32 430048}
!14917 = !DILocation(line: 377, column: 9, scope: !14883, inlinedAt: !14888)
!14918 = !DILocation(line: 377, column: 16, scope: !14883, inlinedAt: !14888)
!14919 = !DILocation(line: 46, column: 2, scope: !14878)
!14920 = !DILocation(line: 48, column: 1, scope: !14878)
!14921 = distinct !DISubprogram(name: "__ilog2_u64", scope: !14922, file: !14922, line: 30, type: !14923, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14922 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!14923 = !DISubroutineType(types: !14924)
!14924 = !{!32, !331}
!14925 = !DILocation(line: 366, column: 40, scope: !14883, inlinedAt: !14926)
!14926 = distinct !DILocation(line: 32, column: 9, scope: !14921)
!14927 = !DILocation(line: 368, column: 6, scope: !14883, inlinedAt: !14926)
!14928 = !DILocalVariable(name: "n", arg: 1, scope: !14921, file: !14922, line: 30, type: !331)
!14929 = !DILocation(line: 30, column: 21, scope: !14921)
!14930 = !DILocation(line: 32, column: 15, scope: !14921)
!14931 = !DILocation(line: 374, column: 2, scope: !14883, inlinedAt: !14926)
!14932 = !DILocation(line: 376, column: 14, scope: !14883, inlinedAt: !14926)
!14933 = !DILocation(line: 377, column: 9, scope: !14883, inlinedAt: !14926)
!14934 = !DILocation(line: 377, column: 16, scope: !14883, inlinedAt: !14926)
!14935 = !DILocation(line: 32, column: 18, scope: !14921)
!14936 = !DILocation(line: 32, column: 2, scope: !14921)
!14937 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !14938, file: !14938, line: 137, type: !14939, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14938 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!14939 = !DISubroutineType(types: !14940)
!14940 = !{!591, !2051, !3258, !1039, !1742}
!14941 = !DILocalVariable(name: "s", arg: 1, scope: !14937, file: !14938, line: 137, type: !2051)
!14942 = !DILocation(line: 137, column: 54, scope: !14937)
!14943 = !DILocalVariable(name: "object", arg: 2, scope: !14937, file: !14938, line: 137, type: !3258)
!14944 = !DILocation(line: 137, column: 69, scope: !14937)
!14945 = !DILocalVariable(name: "size", arg: 3, scope: !14937, file: !14938, line: 138, type: !1039)
!14946 = !DILocation(line: 138, column: 12, scope: !14937)
!14947 = !DILocalVariable(name: "flags", arg: 4, scope: !14937, file: !14938, line: 138, type: !1742)
!14948 = !DILocation(line: 138, column: 24, scope: !14937)
!14949 = !DILocation(line: 140, column: 17, scope: !14937)
!14950 = !DILocation(line: 140, column: 2, scope: !14937)
!14951 = distinct !DISubprogram(name: "devlink_dev_release", scope: !3, file: !3, line: 336, type: !4915, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14952 = !DILocalVariable(name: "dev", arg: 1, scope: !14951, file: !3, line: 336, type: !4856)
!14953 = !DILocation(line: 336, column: 48, scope: !14951)
!14954 = !DILocalVariable(name: "link", scope: !14951, file: !3, line: 338, type: !7438)
!14955 = !DILocation(line: 338, column: 22, scope: !14951)
!14956 = !DILocalVariable(name: "__mptr", scope: !14957, file: !3, line: 338, type: !591)
!14957 = distinct !DILexicalBlock(scope: !14951, file: !3, line: 338, column: 29)
!14958 = !DILocation(line: 338, column: 29, scope: !14957)
!14959 = !DILocation(line: 338, column: 29, scope: !14960)
!14960 = distinct !DILexicalBlock(scope: !14957, file: !3, line: 338, column: 29)
!14961 = !DILocation(line: 340, column: 33, scope: !14951)
!14962 = !DILocation(line: 340, column: 39, scope: !14951)
!14963 = !DILocation(line: 340, column: 2, scope: !14951)
!14964 = !DILocation(line: 341, column: 1, scope: !14951)
!14965 = distinct !DISubprogram(name: "status_show", scope: !3, file: !3, line: 242, type: !7466, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14966 = !DILocalVariable(name: "dev", arg: 1, scope: !14965, file: !3, line: 242, type: !4856)
!14967 = !DILocation(line: 242, column: 43, scope: !14965)
!14968 = !DILocalVariable(name: "attr", arg: 2, scope: !14965, file: !3, line: 243, type: !7468)
!14969 = !DILocation(line: 243, column: 32, scope: !14965)
!14970 = !DILocalVariable(name: "buf", arg: 3, scope: !14965, file: !3, line: 243, type: !1038)
!14971 = !DILocation(line: 243, column: 44, scope: !14965)
!14972 = !DILocalVariable(name: "output", scope: !14965, file: !3, line: 245, type: !292)
!14973 = !DILocation(line: 245, column: 14, scope: !14965)
!14974 = !DILocalVariable(name: "__mptr", scope: !14975, file: !3, line: 247, type: !591)
!14975 = distinct !DILexicalBlock(scope: !14965, file: !3, line: 247, column: 10)
!14976 = !DILocation(line: 247, column: 10, scope: !14975)
!14977 = !DILocation(line: 247, column: 10, scope: !14978)
!14978 = distinct !DILexicalBlock(scope: !14975, file: !3, line: 247, column: 10)
!14979 = !DILocation(line: 247, column: 27, scope: !14965)
!14980 = !DILocation(line: 247, column: 2, scope: !14965)
!14981 = !DILocation(line: 249, column: 10, scope: !14982)
!14982 = distinct !DILexicalBlock(scope: !14965, file: !3, line: 247, column: 35)
!14983 = !DILocation(line: 250, column: 3, scope: !14982)
!14984 = !DILocation(line: 252, column: 10, scope: !14982)
!14985 = !DILocation(line: 253, column: 3, scope: !14982)
!14986 = !DILocation(line: 255, column: 10, scope: !14982)
!14987 = !DILocation(line: 256, column: 3, scope: !14982)
!14988 = !DILocation(line: 258, column: 10, scope: !14982)
!14989 = !DILocation(line: 259, column: 3, scope: !14982)
!14990 = !DILocation(line: 261, column: 10, scope: !14982)
!14991 = !DILocation(line: 262, column: 3, scope: !14982)
!14992 = !DILocation(line: 264, column: 10, scope: !14982)
!14993 = !DILocation(line: 265, column: 3, scope: !14982)
!14994 = !DILocation(line: 267, column: 10, scope: !14982)
!14995 = !DILocation(line: 268, column: 3, scope: !14982)
!14996 = !DILocation(line: 271, column: 20, scope: !14965)
!14997 = !DILocation(line: 271, column: 33, scope: !14965)
!14998 = !DILocation(line: 271, column: 9, scope: !14965)
!14999 = !DILocation(line: 271, column: 2, scope: !14965)
!15000 = distinct !DISubprogram(name: "auto_remove_on_show", scope: !3, file: !3, line: 275, type: !7466, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15001 = !DILocalVariable(name: "dev", arg: 1, scope: !15000, file: !3, line: 275, type: !4856)
!15002 = !DILocation(line: 275, column: 51, scope: !15000)
!15003 = !DILocalVariable(name: "attr", arg: 2, scope: !15000, file: !3, line: 276, type: !7468)
!15004 = !DILocation(line: 276, column: 33, scope: !15000)
!15005 = !DILocalVariable(name: "buf", arg: 3, scope: !15000, file: !3, line: 276, type: !1038)
!15006 = !DILocation(line: 276, column: 45, scope: !15000)
!15007 = !DILocalVariable(name: "link", scope: !15000, file: !3, line: 278, type: !7438)
!15008 = !DILocation(line: 278, column: 22, scope: !15000)
!15009 = !DILocalVariable(name: "__mptr", scope: !15010, file: !3, line: 278, type: !591)
!15010 = distinct !DILexicalBlock(scope: !15000, file: !3, line: 278, column: 29)
!15011 = !DILocation(line: 278, column: 29, scope: !15010)
!15012 = !DILocation(line: 278, column: 29, scope: !15013)
!15013 = distinct !DILexicalBlock(scope: !15010, file: !3, line: 278, column: 29)
!15014 = !DILocalVariable(name: "output", scope: !15000, file: !3, line: 279, type: !292)
!15015 = !DILocation(line: 279, column: 14, scope: !15000)
!15016 = !DILocation(line: 281, column: 6, scope: !15017)
!15017 = distinct !DILexicalBlock(scope: !15000, file: !3, line: 281, column: 6)
!15018 = !DILocation(line: 281, column: 12, scope: !15017)
!15019 = !DILocation(line: 281, column: 18, scope: !15017)
!15020 = !DILocation(line: 281, column: 6, scope: !15000)
!15021 = !DILocation(line: 282, column: 10, scope: !15017)
!15022 = !DILocation(line: 282, column: 3, scope: !15017)
!15023 = !DILocation(line: 283, column: 11, scope: !15024)
!15024 = distinct !DILexicalBlock(scope: !15017, file: !3, line: 283, column: 11)
!15025 = !DILocation(line: 283, column: 17, scope: !15024)
!15026 = !DILocation(line: 283, column: 23, scope: !15024)
!15027 = !DILocation(line: 283, column: 11, scope: !15017)
!15028 = !DILocation(line: 284, column: 10, scope: !15024)
!15029 = !DILocation(line: 284, column: 3, scope: !15024)
!15030 = !DILocation(line: 286, column: 10, scope: !15024)
!15031 = !DILocation(line: 288, column: 20, scope: !15000)
!15032 = !DILocation(line: 288, column: 33, scope: !15000)
!15033 = !DILocation(line: 288, column: 9, scope: !15000)
!15034 = !DILocation(line: 288, column: 2, scope: !15000)
!15035 = distinct !DISubprogram(name: "runtime_pm_show", scope: !3, file: !3, line: 292, type: !7466, scopeLine: 294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15036 = !DILocalVariable(name: "dev", arg: 1, scope: !15035, file: !3, line: 292, type: !4856)
!15037 = !DILocation(line: 292, column: 47, scope: !15035)
!15038 = !DILocalVariable(name: "attr", arg: 2, scope: !15035, file: !3, line: 293, type: !7468)
!15039 = !DILocation(line: 293, column: 36, scope: !15035)
!15040 = !DILocalVariable(name: "buf", arg: 3, scope: !15035, file: !3, line: 293, type: !1038)
!15041 = !DILocation(line: 293, column: 48, scope: !15035)
!15042 = !DILocalVariable(name: "link", scope: !15035, file: !3, line: 295, type: !7438)
!15043 = !DILocation(line: 295, column: 22, scope: !15035)
!15044 = !DILocalVariable(name: "__mptr", scope: !15045, file: !3, line: 295, type: !591)
!15045 = distinct !DILexicalBlock(scope: !15035, file: !3, line: 295, column: 29)
!15046 = !DILocation(line: 295, column: 29, scope: !15045)
!15047 = !DILocation(line: 295, column: 29, scope: !15048)
!15048 = distinct !DILexicalBlock(scope: !15045, file: !3, line: 295, column: 29)
!15049 = !DILocation(line: 297, column: 20, scope: !15035)
!15050 = !DILocation(line: 297, column: 36, scope: !15035)
!15051 = !DILocation(line: 297, column: 42, scope: !15035)
!15052 = !DILocation(line: 297, column: 48, scope: !15035)
!15053 = !DILocation(line: 297, column: 34, scope: !15035)
!15054 = !DILocation(line: 297, column: 33, scope: !15035)
!15055 = !DILocation(line: 297, column: 9, scope: !15035)
!15056 = !DILocation(line: 297, column: 2, scope: !15035)
!15057 = distinct !DISubprogram(name: "sync_state_only_show", scope: !3, file: !3, line: 301, type: !7466, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15058 = !DILocalVariable(name: "dev", arg: 1, scope: !15057, file: !3, line: 301, type: !4856)
!15059 = !DILocation(line: 301, column: 52, scope: !15057)
!15060 = !DILocalVariable(name: "attr", arg: 2, scope: !15057, file: !3, line: 302, type: !7468)
!15061 = !DILocation(line: 302, column: 34, scope: !15057)
!15062 = !DILocalVariable(name: "buf", arg: 3, scope: !15057, file: !3, line: 302, type: !1038)
!15063 = !DILocation(line: 302, column: 46, scope: !15057)
!15064 = !DILocalVariable(name: "link", scope: !15057, file: !3, line: 304, type: !7438)
!15065 = !DILocation(line: 304, column: 22, scope: !15057)
!15066 = !DILocalVariable(name: "__mptr", scope: !15067, file: !3, line: 304, type: !591)
!15067 = distinct !DILexicalBlock(scope: !15057, file: !3, line: 304, column: 29)
!15068 = !DILocation(line: 304, column: 29, scope: !15067)
!15069 = !DILocation(line: 304, column: 29, scope: !15070)
!15070 = distinct !DILexicalBlock(scope: !15067, file: !3, line: 304, column: 29)
!15071 = !DILocation(line: 306, column: 20, scope: !15057)
!15072 = !DILocation(line: 307, column: 9, scope: !15057)
!15073 = !DILocation(line: 307, column: 15, scope: !15057)
!15074 = !DILocation(line: 307, column: 21, scope: !15057)
!15075 = !DILocation(line: 307, column: 7, scope: !15057)
!15076 = !DILocation(line: 307, column: 6, scope: !15057)
!15077 = !DILocation(line: 306, column: 9, scope: !15057)
!15078 = !DILocation(line: 306, column: 2, scope: !15057)
!15079 = distinct !DISubprogram(name: "__device_link_free_srcu", scope: !3, file: !3, line: 331, type: !305, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15080 = !DILocalVariable(name: "rhead", arg: 1, scope: !15079, file: !3, line: 331, type: !302)
!15081 = !DILocation(line: 331, column: 54, scope: !15079)
!15082 = !DILocalVariable(name: "__mptr", scope: !15083, file: !3, line: 333, type: !591)
!15083 = distinct !DILexicalBlock(scope: !15079, file: !3, line: 333, column: 19)
!15084 = !DILocation(line: 333, column: 19, scope: !15083)
!15085 = !DILocation(line: 333, column: 19, scope: !15086)
!15086 = distinct !DILexicalBlock(scope: !15083, file: !3, line: 333, column: 19)
!15087 = !DILocation(line: 333, column: 2, scope: !15079)
!15088 = !DILocation(line: 334, column: 1, scope: !15079)
!15089 = distinct !DISubprogram(name: "device_link_free", scope: !3, file: !3, line: 320, type: !9205, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15090 = !DILocalVariable(name: "link", arg: 1, scope: !15089, file: !3, line: 320, type: !7438)
!15091 = !DILocation(line: 320, column: 50, scope: !15089)
!15092 = !DILocation(line: 322, column: 2, scope: !15089)
!15093 = !DILocation(line: 322, column: 31, scope: !15089)
!15094 = !DILocation(line: 322, column: 37, scope: !15089)
!15095 = !DILocation(line: 322, column: 9, scope: !15089)
!15096 = !DILocation(line: 323, column: 18, scope: !15089)
!15097 = !DILocation(line: 323, column: 24, scope: !15089)
!15098 = !DILocation(line: 323, column: 3, scope: !15089)
!15099 = distinct !{!15099, !15092, !15100}
!15100 = !DILocation(line: 323, column: 32, scope: !15089)
!15101 = !DILocation(line: 325, column: 13, scope: !15089)
!15102 = !DILocation(line: 325, column: 19, scope: !15089)
!15103 = !DILocation(line: 325, column: 2, scope: !15089)
!15104 = !DILocation(line: 326, column: 13, scope: !15089)
!15105 = !DILocation(line: 326, column: 19, scope: !15089)
!15106 = !DILocation(line: 326, column: 2, scope: !15089)
!15107 = !DILocation(line: 327, column: 8, scope: !15089)
!15108 = !DILocation(line: 327, column: 2, scope: !15089)
!15109 = !DILocation(line: 328, column: 1, scope: !15089)
!15110 = distinct !DISubprogram(name: "kobject_name", scope: !4574, file: !4574, line: 88, type: !15111, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15111 = !DISubroutineType(types: !15112)
!15112 = !{!292, !15113}
!15113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15114, size: 64)
!15114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4573)
!15115 = !DILocalVariable(name: "kobj", arg: 1, scope: !15110, file: !4574, line: 88, type: !15113)
!15116 = !DILocation(line: 88, column: 62, scope: !15110)
!15117 = !DILocation(line: 90, column: 9, scope: !15110)
!15118 = !DILocation(line: 90, column: 15, scope: !15110)
!15119 = !DILocation(line: 90, column: 2, scope: !15110)
!15120 = distinct !DISubprogram(name: "__list_add_rcu", scope: !9182, file: !9182, line: 85, type: !15121, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15121 = !DISubroutineType(types: !15122)
!15122 = !{null, !287, !287, !287}
!15123 = !DILocalVariable(name: "new", arg: 1, scope: !15120, file: !9182, line: 85, type: !287)
!15124 = !DILocation(line: 85, column: 53, scope: !15120)
!15125 = !DILocalVariable(name: "prev", arg: 2, scope: !15120, file: !9182, line: 86, type: !287)
!15126 = !DILocation(line: 86, column: 21, scope: !15120)
!15127 = !DILocalVariable(name: "next", arg: 3, scope: !15120, file: !9182, line: 86, type: !287)
!15128 = !DILocation(line: 86, column: 45, scope: !15120)
!15129 = !DILocation(line: 88, column: 24, scope: !15130)
!15130 = distinct !DILexicalBlock(scope: !15120, file: !9182, line: 88, column: 6)
!15131 = !DILocation(line: 88, column: 29, scope: !15130)
!15132 = !DILocation(line: 88, column: 35, scope: !15130)
!15133 = !DILocation(line: 88, column: 7, scope: !15130)
!15134 = !DILocation(line: 88, column: 6, scope: !15120)
!15135 = !DILocation(line: 89, column: 3, scope: !15130)
!15136 = !DILocation(line: 91, column: 14, scope: !15120)
!15137 = !DILocation(line: 91, column: 2, scope: !15120)
!15138 = !DILocation(line: 91, column: 7, scope: !15120)
!15139 = !DILocation(line: 91, column: 12, scope: !15120)
!15140 = !DILocation(line: 92, column: 14, scope: !15120)
!15141 = !DILocation(line: 92, column: 2, scope: !15120)
!15142 = !DILocation(line: 92, column: 7, scope: !15120)
!15143 = !DILocation(line: 92, column: 12, scope: !15120)
!15144 = !DILocation(line: 93, column: 2, scope: !15120)
!15145 = !DILocalVariable(name: "_r_a_p__v", scope: !15146, file: !9182, line: 93, type: !7776)
!15146 = distinct !DILexicalBlock(scope: !15120, file: !9182, line: 93, column: 2)
!15147 = !DILocation(line: 93, column: 2, scope: !15146)
!15148 = !DILocation(line: 93, column: 2, scope: !15149)
!15149 = distinct !DILexicalBlock(scope: !15146, file: !9182, line: 93, column: 2)
!15150 = !DILocation(line: 93, column: 2, scope: !15151)
!15151 = distinct !DILexicalBlock(scope: !15149, file: !9182, line: 93, column: 2)
!15152 = !DILocation(line: 93, column: 2, scope: !15153)
!15153 = distinct !DILexicalBlock(scope: !15151, file: !9182, line: 93, column: 2)
!15154 = !DILocation(line: 93, column: 2, scope: !15155)
!15155 = distinct !DILexicalBlock(scope: !15151, file: !9182, line: 93, column: 2)
!15156 = !DILocation(line: 93, column: 2, scope: !15157)
!15157 = distinct !DILexicalBlock(scope: !15149, file: !9182, line: 93, column: 2)
!15158 = !DILocation(line: 93, column: 2, scope: !15159)
!15159 = distinct !DILexicalBlock(scope: !15157, file: !9182, line: 93, column: 2)
!15160 = !{i32 -2143943511}
!15161 = !DILocation(line: 93, column: 2, scope: !15162)
!15162 = distinct !DILexicalBlock(scope: !15157, file: !9182, line: 93, column: 2)
!15163 = !DILocation(line: 93, column: 2, scope: !15164)
!15164 = distinct !DILexicalBlock(scope: !15162, file: !9182, line: 93, column: 2)
!15165 = !DILocation(line: 93, column: 2, scope: !15166)
!15166 = distinct !DILexicalBlock(scope: !15162, file: !9182, line: 93, column: 2)
!15167 = !DILocation(line: 94, column: 15, scope: !15120)
!15168 = !DILocation(line: 94, column: 2, scope: !15120)
!15169 = !DILocation(line: 94, column: 8, scope: !15120)
!15170 = !DILocation(line: 94, column: 13, scope: !15120)
!15171 = !DILocation(line: 95, column: 1, scope: !15120)
!15172 = distinct !DISubprogram(name: "__list_add_valid", scope: !9076, file: !9076, line: 45, type: !15173, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15173 = !DISubroutineType(types: !15174)
!15174 = !{!771, !287, !287, !287}
!15175 = !DILocalVariable(name: "new", arg: 1, scope: !15172, file: !9076, line: 45, type: !287)
!15176 = !DILocation(line: 45, column: 55, scope: !15172)
!15177 = !DILocalVariable(name: "prev", arg: 2, scope: !15172, file: !9076, line: 46, type: !287)
!15178 = !DILocation(line: 46, column: 23, scope: !15172)
!15179 = !DILocalVariable(name: "next", arg: 3, scope: !15172, file: !9076, line: 47, type: !287)
!15180 = !DILocation(line: 47, column: 23, scope: !15172)
!15181 = !DILocation(line: 49, column: 2, scope: !15172)
!15182 = distinct !DISubprogram(name: "kref_put", scope: !4847, file: !4847, line: 62, type: !15183, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15183 = !DISubroutineType(types: !15184)
!15184 = !{!32, !8690, !15185}
!15185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8688, size: 64)
!15186 = !DILocalVariable(name: "kref", arg: 1, scope: !15182, file: !4847, line: 62, type: !8690)
!15187 = !DILocation(line: 62, column: 41, scope: !15182)
!15188 = !DILocalVariable(name: "release", arg: 2, scope: !15182, file: !4847, line: 62, type: !15185)
!15189 = !DILocation(line: 62, column: 54, scope: !15182)
!15190 = !DILocation(line: 64, column: 29, scope: !15191)
!15191 = distinct !DILexicalBlock(scope: !15182, file: !4847, line: 64, column: 6)
!15192 = !DILocation(line: 64, column: 35, scope: !15191)
!15193 = !DILocation(line: 64, column: 6, scope: !15191)
!15194 = !DILocation(line: 64, column: 6, scope: !15182)
!15195 = !DILocation(line: 65, column: 3, scope: !15196)
!15196 = distinct !DILexicalBlock(scope: !15191, file: !4847, line: 64, column: 46)
!15197 = !DILocation(line: 65, column: 11, scope: !15196)
!15198 = !DILocation(line: 66, column: 3, scope: !15196)
!15199 = !DILocation(line: 68, column: 2, scope: !15182)
!15200 = !DILocation(line: 69, column: 1, scope: !15182)
!15201 = distinct !DISubprogram(name: "__device_link_del", scope: !3, file: !3, line: 769, type: !8688, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15202 = !DILocalVariable(name: "kref", arg: 1, scope: !15201, file: !3, line: 769, type: !8690)
!15203 = !DILocation(line: 769, column: 44, scope: !15201)
!15204 = !DILocalVariable(name: "link", scope: !15201, file: !3, line: 771, type: !7438)
!15205 = !DILocation(line: 771, column: 22, scope: !15201)
!15206 = !DILocalVariable(name: "__mptr", scope: !15207, file: !3, line: 771, type: !591)
!15207 = distinct !DILexicalBlock(scope: !15201, file: !3, line: 771, column: 29)
!15208 = !DILocation(line: 771, column: 29, scope: !15207)
!15209 = !DILocation(line: 771, column: 29, scope: !15210)
!15210 = distinct !DILexicalBlock(scope: !15207, file: !3, line: 771, column: 29)
!15211 = !DILocation(line: 776, column: 23, scope: !15201)
!15212 = !DILocation(line: 776, column: 2, scope: !15201)
!15213 = !DILocation(line: 778, column: 16, scope: !15201)
!15214 = !DILocation(line: 778, column: 22, scope: !15201)
!15215 = !DILocation(line: 778, column: 2, scope: !15201)
!15216 = !DILocation(line: 779, column: 16, scope: !15201)
!15217 = !DILocation(line: 779, column: 22, scope: !15201)
!15218 = !DILocation(line: 779, column: 2, scope: !15201)
!15219 = !DILocation(line: 780, column: 21, scope: !15201)
!15220 = !DILocation(line: 780, column: 27, scope: !15201)
!15221 = !DILocation(line: 780, column: 2, scope: !15201)
!15222 = !DILocation(line: 781, column: 1, scope: !15201)
!15223 = distinct !DISubprogram(name: "refcount_dec_and_test", scope: !569, file: !569, line: 331, type: !15224, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15224 = !DISubroutineType(types: !15225)
!15225 = !{!771, !8681}
!15226 = !DILocalVariable(name: "r", arg: 1, scope: !15223, file: !569, line: 331, type: !8681)
!15227 = !DILocation(line: 331, column: 67, scope: !15223)
!15228 = !DILocation(line: 333, column: 33, scope: !15223)
!15229 = !DILocation(line: 333, column: 9, scope: !15223)
!15230 = !DILocation(line: 333, column: 2, scope: !15223)
!15231 = distinct !DISubprogram(name: "__refcount_dec_and_test", scope: !569, file: !569, line: 313, type: !15232, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15232 = !DISubroutineType(types: !15233)
!15233 = !{!771, !8681, !1001}
!15234 = !DILocalVariable(name: "r", arg: 1, scope: !15231, file: !569, line: 313, type: !8681)
!15235 = !DILocation(line: 313, column: 69, scope: !15231)
!15236 = !DILocalVariable(name: "oldp", arg: 2, scope: !15231, file: !569, line: 313, type: !1001)
!15237 = !DILocation(line: 313, column: 77, scope: !15231)
!15238 = !DILocation(line: 315, column: 36, scope: !15231)
!15239 = !DILocation(line: 315, column: 39, scope: !15231)
!15240 = !DILocation(line: 315, column: 9, scope: !15231)
!15241 = !DILocation(line: 315, column: 2, scope: !15231)
!15242 = distinct !DISubprogram(name: "__refcount_sub_and_test", scope: !569, file: !569, line: 270, type: !15243, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15243 = !DISubroutineType(types: !15244)
!15244 = !{!771, !32, !8681, !1001}
!15245 = !DILocalVariable(name: "i", arg: 1, scope: !15246, file: !8557, line: 188, type: !32)
!15246 = distinct !DISubprogram(name: "arch_atomic_fetch_sub", scope: !8557, file: !8557, line: 188, type: !14823, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15247 = !DILocation(line: 188, column: 54, scope: !15246, inlinedAt: !15248)
!15248 = distinct !DILocation(line: 221, column: 9, scope: !15249, inlinedAt: !15250)
!15249 = distinct !DISubprogram(name: "atomic_fetch_sub_release", scope: !8573, file: !8573, line: 218, type: !14823, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15250 = distinct !DILocation(line: 272, column: 12, scope: !15242)
!15251 = !DILocalVariable(name: "v", arg: 2, scope: !15246, file: !8557, line: 188, type: !8560)
!15252 = !DILocation(line: 188, column: 67, scope: !15246, inlinedAt: !15248)
!15253 = !DILocalVariable(name: "__ret", scope: !15254, file: !8557, line: 190, type: !32)
!15254 = distinct !DILexicalBlock(scope: !15246, file: !8557, line: 190, column: 9)
!15255 = !DILocation(line: 190, column: 9, scope: !15254, inlinedAt: !15248)
!15256 = !DILocation(line: 99, column: 79, scope: !8609, inlinedAt: !15257)
!15257 = distinct !DILocation(line: 220, column: 2, scope: !15249, inlinedAt: !15250)
!15258 = !DILocation(line: 99, column: 89, scope: !8609, inlinedAt: !15257)
!15259 = !DILocalVariable(name: "i", arg: 1, scope: !15249, file: !8573, line: 218, type: !32)
!15260 = !DILocation(line: 218, column: 30, scope: !15249, inlinedAt: !15250)
!15261 = !DILocalVariable(name: "v", arg: 2, scope: !15249, file: !8573, line: 218, type: !8560)
!15262 = !DILocation(line: 218, column: 43, scope: !15249, inlinedAt: !15250)
!15263 = !DILocalVariable(name: "i", arg: 1, scope: !15242, file: !569, line: 270, type: !32)
!15264 = !DILocation(line: 270, column: 61, scope: !15242)
!15265 = !DILocalVariable(name: "r", arg: 2, scope: !15242, file: !569, line: 270, type: !8681)
!15266 = !DILocation(line: 270, column: 76, scope: !15242)
!15267 = !DILocalVariable(name: "oldp", arg: 3, scope: !15242, file: !569, line: 270, type: !1001)
!15268 = !DILocation(line: 270, column: 84, scope: !15242)
!15269 = !DILocalVariable(name: "old", scope: !15242, file: !569, line: 272, type: !32)
!15270 = !DILocation(line: 272, column: 6, scope: !15242)
!15271 = !DILocation(line: 272, column: 37, scope: !15242)
!15272 = !DILocation(line: 272, column: 41, scope: !15242)
!15273 = !DILocation(line: 272, column: 44, scope: !15242)
!15274 = !DILocation(line: 220, column: 31, scope: !15249, inlinedAt: !15250)
!15275 = !DILocation(line: 101, column: 20, scope: !8609, inlinedAt: !15257)
!15276 = !DILocation(line: 101, column: 23, scope: !8609, inlinedAt: !15257)
!15277 = !DILocation(line: 101, column: 2, scope: !8609, inlinedAt: !15257)
!15278 = !DILocation(line: 102, column: 2, scope: !8609, inlinedAt: !15257)
!15279 = !DILocation(line: 221, column: 39, scope: !15249, inlinedAt: !15250)
!15280 = !DILocation(line: 221, column: 42, scope: !15249, inlinedAt: !15250)
!15281 = !{i32 -2146420972}
!15282 = !DILocation(line: 274, column: 6, scope: !15283)
!15283 = distinct !DILexicalBlock(scope: !15242, file: !569, line: 274, column: 6)
!15284 = !DILocation(line: 274, column: 6, scope: !15242)
!15285 = !DILocation(line: 275, column: 11, scope: !15283)
!15286 = !DILocation(line: 275, column: 4, scope: !15283)
!15287 = !DILocation(line: 275, column: 9, scope: !15283)
!15288 = !DILocation(line: 275, column: 3, scope: !15283)
!15289 = !DILocation(line: 277, column: 6, scope: !15290)
!15290 = distinct !DILexicalBlock(scope: !15242, file: !569, line: 277, column: 6)
!15291 = !DILocation(line: 277, column: 13, scope: !15290)
!15292 = !DILocation(line: 277, column: 10, scope: !15290)
!15293 = !DILocation(line: 277, column: 6, scope: !15242)
!15294 = !DILocation(line: 278, column: 3, scope: !15295)
!15295 = distinct !DILexicalBlock(scope: !15290, file: !569, line: 277, column: 16)
!15296 = !{i32 -2144285781}
!15297 = !DILocation(line: 279, column: 3, scope: !15295)
!15298 = !DILocation(line: 282, column: 6, scope: !15299)
!15299 = distinct !DILexicalBlock(scope: !15242, file: !569, line: 282, column: 6)
!15300 = !DILocation(line: 282, column: 6, scope: !15242)
!15301 = !DILocation(line: 283, column: 26, scope: !15299)
!15302 = !DILocation(line: 283, column: 3, scope: !15299)
!15303 = !DILocation(line: 285, column: 2, scope: !15242)
!15304 = !DILocation(line: 286, column: 1, scope: !15242)
!15305 = distinct !DISubprogram(name: "list_del_rcu", scope: !9182, file: !9182, line: 164, type: !9077, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15306 = !DILocalVariable(name: "entry", arg: 1, scope: !15305, file: !9182, line: 164, type: !287)
!15307 = !DILocation(line: 164, column: 51, scope: !15305)
!15308 = !DILocation(line: 166, column: 19, scope: !15305)
!15309 = !DILocation(line: 166, column: 2, scope: !15305)
!15310 = !DILocation(line: 167, column: 2, scope: !15305)
!15311 = !DILocation(line: 167, column: 9, scope: !15305)
!15312 = !DILocation(line: 167, column: 14, scope: !15305)
!15313 = !DILocation(line: 168, column: 1, scope: !15305)
!15314 = distinct !DISubprogram(name: "__list_del_entry", scope: !9076, file: !9076, line: 130, type: !9077, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15315 = !DILocalVariable(name: "entry", arg: 1, scope: !15314, file: !9076, line: 130, type: !287)
!15316 = !DILocation(line: 130, column: 55, scope: !15314)
!15317 = !DILocation(line: 132, column: 30, scope: !15318)
!15318 = distinct !DILexicalBlock(scope: !15314, file: !9076, line: 132, column: 6)
!15319 = !DILocation(line: 132, column: 7, scope: !15318)
!15320 = !DILocation(line: 132, column: 6, scope: !15314)
!15321 = !DILocation(line: 133, column: 3, scope: !15318)
!15322 = !DILocation(line: 135, column: 13, scope: !15314)
!15323 = !DILocation(line: 135, column: 20, scope: !15314)
!15324 = !DILocation(line: 135, column: 26, scope: !15314)
!15325 = !DILocation(line: 135, column: 33, scope: !15314)
!15326 = !DILocation(line: 135, column: 2, scope: !15314)
!15327 = !DILocation(line: 136, column: 1, scope: !15314)
!15328 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !9076, file: !9076, line: 51, type: !15329, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15329 = !DISubroutineType(types: !15330)
!15330 = !{!771, !287}
!15331 = !DILocalVariable(name: "entry", arg: 1, scope: !15328, file: !9076, line: 51, type: !287)
!15332 = !DILocation(line: 51, column: 61, scope: !15328)
!15333 = !DILocation(line: 53, column: 2, scope: !15328)
!15334 = distinct !DISubprogram(name: "__list_del", scope: !9076, file: !9076, line: 110, type: !9183, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15335 = !DILocalVariable(name: "prev", arg: 1, scope: !15334, file: !9076, line: 110, type: !287)
!15336 = !DILocation(line: 110, column: 50, scope: !15334)
!15337 = !DILocalVariable(name: "next", arg: 2, scope: !15334, file: !9076, line: 110, type: !287)
!15338 = !DILocation(line: 110, column: 75, scope: !15334)
!15339 = !DILocation(line: 112, column: 15, scope: !15334)
!15340 = !DILocation(line: 112, column: 2, scope: !15334)
!15341 = !DILocation(line: 112, column: 8, scope: !15334)
!15342 = !DILocation(line: 112, column: 13, scope: !15334)
!15343 = !DILocation(line: 113, column: 2, scope: !15334)
!15344 = !DILocation(line: 113, column: 2, scope: !15345)
!15345 = distinct !DILexicalBlock(scope: !15334, file: !9076, line: 113, column: 2)
!15346 = !DILocation(line: 113, column: 2, scope: !15347)
!15347 = distinct !DILexicalBlock(scope: !15345, file: !9076, line: 113, column: 2)
!15348 = !DILocation(line: 113, column: 2, scope: !15349)
!15349 = distinct !DILexicalBlock(scope: !15345, file: !9076, line: 113, column: 2)
!15350 = !DILocation(line: 114, column: 1, scope: !15334)
!15351 = distinct !DISubprogram(name: "dev_has_sync_state", scope: !4570, file: !4570, line: 761, type: !8670, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15352 = !DILocalVariable(name: "dev", arg: 1, scope: !15351, file: !4570, line: 761, type: !4856)
!15353 = !DILocation(line: 761, column: 54, scope: !15351)
!15354 = !DILocation(line: 763, column: 7, scope: !15355)
!15355 = distinct !DILexicalBlock(scope: !15351, file: !4570, line: 763, column: 6)
!15356 = !DILocation(line: 763, column: 6, scope: !15351)
!15357 = !DILocation(line: 764, column: 3, scope: !15355)
!15358 = !DILocation(line: 765, column: 6, scope: !15359)
!15359 = distinct !DILexicalBlock(scope: !15351, file: !4570, line: 765, column: 6)
!15360 = !DILocation(line: 765, column: 11, scope: !15359)
!15361 = !DILocation(line: 765, column: 18, scope: !15359)
!15362 = !DILocation(line: 765, column: 21, scope: !15359)
!15363 = !DILocation(line: 765, column: 26, scope: !15359)
!15364 = !DILocation(line: 765, column: 34, scope: !15359)
!15365 = !DILocation(line: 765, column: 6, scope: !15351)
!15366 = !DILocation(line: 766, column: 3, scope: !15359)
!15367 = !DILocation(line: 767, column: 6, scope: !15368)
!15368 = distinct !DILexicalBlock(scope: !15351, file: !4570, line: 767, column: 6)
!15369 = !DILocation(line: 767, column: 11, scope: !15368)
!15370 = !DILocation(line: 767, column: 15, scope: !15368)
!15371 = !DILocation(line: 767, column: 18, scope: !15368)
!15372 = !DILocation(line: 767, column: 23, scope: !15368)
!15373 = !DILocation(line: 767, column: 28, scope: !15368)
!15374 = !DILocation(line: 767, column: 6, scope: !15351)
!15375 = !DILocation(line: 768, column: 3, scope: !15368)
!15376 = !DILocation(line: 769, column: 2, scope: !15351)
!15377 = !DILocation(line: 770, column: 1, scope: !15351)
!15378 = distinct !DISubprogram(name: "list_add_tail", scope: !9076, file: !9076, line: 98, type: !9183, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15379 = !DILocalVariable(name: "new", arg: 1, scope: !15378, file: !9076, line: 98, type: !287)
!15380 = !DILocation(line: 98, column: 52, scope: !15378)
!15381 = !DILocalVariable(name: "head", arg: 2, scope: !15378, file: !9076, line: 98, type: !287)
!15382 = !DILocation(line: 98, column: 75, scope: !15378)
!15383 = !DILocation(line: 100, column: 13, scope: !15378)
!15384 = !DILocation(line: 100, column: 18, scope: !15378)
!15385 = !DILocation(line: 100, column: 24, scope: !15378)
!15386 = !DILocation(line: 100, column: 30, scope: !15378)
!15387 = !DILocation(line: 100, column: 2, scope: !15378)
!15388 = !DILocation(line: 101, column: 1, scope: !15378)
!15389 = distinct !DISubprogram(name: "__list_add", scope: !9076, file: !9076, line: 63, type: !15121, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15390 = !DILocalVariable(name: "new", arg: 1, scope: !15389, file: !9076, line: 63, type: !287)
!15391 = !DILocation(line: 63, column: 49, scope: !15389)
!15392 = !DILocalVariable(name: "prev", arg: 2, scope: !15389, file: !9076, line: 64, type: !287)
!15393 = !DILocation(line: 64, column: 28, scope: !15389)
!15394 = !DILocalVariable(name: "next", arg: 3, scope: !15389, file: !9076, line: 65, type: !287)
!15395 = !DILocation(line: 65, column: 28, scope: !15389)
!15396 = !DILocation(line: 67, column: 24, scope: !15397)
!15397 = distinct !DILexicalBlock(scope: !15389, file: !9076, line: 67, column: 6)
!15398 = !DILocation(line: 67, column: 29, scope: !15397)
!15399 = !DILocation(line: 67, column: 35, scope: !15397)
!15400 = !DILocation(line: 67, column: 7, scope: !15397)
!15401 = !DILocation(line: 67, column: 6, scope: !15389)
!15402 = !DILocation(line: 68, column: 3, scope: !15397)
!15403 = !DILocation(line: 70, column: 15, scope: !15389)
!15404 = !DILocation(line: 70, column: 2, scope: !15389)
!15405 = !DILocation(line: 70, column: 8, scope: !15389)
!15406 = !DILocation(line: 70, column: 13, scope: !15389)
!15407 = !DILocation(line: 71, column: 14, scope: !15389)
!15408 = !DILocation(line: 71, column: 2, scope: !15389)
!15409 = !DILocation(line: 71, column: 7, scope: !15389)
!15410 = !DILocation(line: 71, column: 12, scope: !15389)
!15411 = !DILocation(line: 72, column: 14, scope: !15389)
!15412 = !DILocation(line: 72, column: 2, scope: !15389)
!15413 = !DILocation(line: 72, column: 7, scope: !15389)
!15414 = !DILocation(line: 72, column: 12, scope: !15389)
!15415 = !DILocation(line: 73, column: 2, scope: !15389)
!15416 = !DILocation(line: 73, column: 2, scope: !15417)
!15417 = distinct !DILexicalBlock(scope: !15389, file: !9076, line: 73, column: 2)
!15418 = !DILocation(line: 73, column: 2, scope: !15419)
!15419 = distinct !DILexicalBlock(scope: !15417, file: !9076, line: 73, column: 2)
!15420 = !DILocation(line: 73, column: 2, scope: !15421)
!15421 = distinct !DILexicalBlock(scope: !15417, file: !9076, line: 73, column: 2)
!15422 = !DILocation(line: 74, column: 1, scope: !15389)
!15423 = distinct !DISubprogram(name: "waiting_for_supplier_show", scope: !3, file: !3, line: 1058, type: !7466, scopeLine: 1061, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15424 = !DILocalVariable(name: "dev", arg: 1, scope: !15423, file: !3, line: 1058, type: !4856)
!15425 = !DILocation(line: 1058, column: 57, scope: !15423)
!15426 = !DILocalVariable(name: "attr", arg: 2, scope: !15423, file: !3, line: 1059, type: !7468)
!15427 = !DILocation(line: 1059, column: 32, scope: !15423)
!15428 = !DILocalVariable(name: "buf", arg: 3, scope: !15423, file: !3, line: 1060, type: !1038)
!15429 = !DILocation(line: 1060, column: 13, scope: !15423)
!15430 = !DILocalVariable(name: "val", scope: !15423, file: !3, line: 1062, type: !771)
!15431 = !DILocation(line: 1062, column: 7, scope: !15423)
!15432 = !DILocation(line: 1064, column: 14, scope: !15423)
!15433 = !DILocation(line: 1064, column: 2, scope: !15423)
!15434 = !DILocation(line: 1065, column: 2, scope: !15423)
!15435 = !DILocation(line: 1066, column: 21, scope: !15423)
!15436 = !DILocation(line: 1066, column: 26, scope: !15423)
!15437 = !DILocation(line: 1066, column: 32, scope: !15423)
!15438 = !DILocation(line: 1066, column: 9, scope: !15423)
!15439 = !DILocation(line: 1067, column: 8, scope: !15423)
!15440 = !DILocation(line: 1067, column: 11, scope: !15423)
!15441 = !DILocation(line: 1067, column: 16, scope: !15423)
!15442 = !DILocation(line: 1067, column: 22, scope: !15423)
!15443 = !DILocation(line: 0, scope: !15423)
!15444 = !DILocation(line: 1066, column: 6, scope: !15423)
!15445 = !DILocation(line: 1068, column: 2, scope: !15423)
!15446 = !DILocation(line: 1069, column: 16, scope: !15423)
!15447 = !DILocation(line: 1069, column: 2, scope: !15423)
!15448 = !DILocation(line: 1070, column: 20, scope: !15423)
!15449 = !DILocation(line: 1070, column: 33, scope: !15423)
!15450 = !DILocation(line: 1070, column: 9, scope: !15423)
!15451 = !DILocation(line: 1070, column: 2, scope: !15423)
!15452 = distinct !DISubprogram(name: "fw_devlink_is_permissive", scope: !3, file: !3, line: 1437, type: !4698, scopeLine: 1438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15453 = !DILocation(line: 1439, column: 9, scope: !15452)
!15454 = !DILocation(line: 1439, column: 26, scope: !15452)
!15455 = !DILocation(line: 1439, column: 2, scope: !15452)
!15456 = distinct !DISubprogram(name: "__list_splice", scope: !9076, file: !9076, line: 433, type: !15457, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15457 = !DISubroutineType(types: !15458)
!15458 = !{null, !9389, !287, !287}
!15459 = !DILocalVariable(name: "list", arg: 1, scope: !15456, file: !9076, line: 433, type: !9389)
!15460 = !DILocation(line: 433, column: 58, scope: !15456)
!15461 = !DILocalVariable(name: "prev", arg: 2, scope: !15456, file: !9076, line: 434, type: !287)
!15462 = !DILocation(line: 434, column: 24, scope: !15456)
!15463 = !DILocalVariable(name: "next", arg: 3, scope: !15456, file: !9076, line: 435, type: !287)
!15464 = !DILocation(line: 435, column: 24, scope: !15456)
!15465 = !DILocalVariable(name: "first", scope: !15456, file: !9076, line: 437, type: !287)
!15466 = !DILocation(line: 437, column: 20, scope: !15456)
!15467 = !DILocation(line: 437, column: 28, scope: !15456)
!15468 = !DILocation(line: 437, column: 34, scope: !15456)
!15469 = !DILocalVariable(name: "last", scope: !15456, file: !9076, line: 438, type: !287)
!15470 = !DILocation(line: 438, column: 20, scope: !15456)
!15471 = !DILocation(line: 438, column: 27, scope: !15456)
!15472 = !DILocation(line: 438, column: 33, scope: !15456)
!15473 = !DILocation(line: 440, column: 16, scope: !15456)
!15474 = !DILocation(line: 440, column: 2, scope: !15456)
!15475 = !DILocation(line: 440, column: 9, scope: !15456)
!15476 = !DILocation(line: 440, column: 14, scope: !15456)
!15477 = !DILocation(line: 441, column: 15, scope: !15456)
!15478 = !DILocation(line: 441, column: 2, scope: !15456)
!15479 = !DILocation(line: 441, column: 8, scope: !15456)
!15480 = !DILocation(line: 441, column: 13, scope: !15456)
!15481 = !DILocation(line: 443, column: 15, scope: !15456)
!15482 = !DILocation(line: 443, column: 2, scope: !15456)
!15483 = !DILocation(line: 443, column: 8, scope: !15456)
!15484 = !DILocation(line: 443, column: 13, scope: !15456)
!15485 = !DILocation(line: 444, column: 15, scope: !15456)
!15486 = !DILocation(line: 444, column: 2, scope: !15456)
!15487 = !DILocation(line: 444, column: 8, scope: !15456)
!15488 = !DILocation(line: 444, column: 13, scope: !15456)
!15489 = !DILocation(line: 445, column: 1, scope: !15456)
!15490 = distinct !DISubprogram(name: "set_tsk_thread_flag", scope: !2328, file: !2328, line: 1802, type: !15491, scopeLine: 1803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15491 = !DISubroutineType(types: !15492)
!15492 = !{null, !2326, !32}
!15493 = !DILocalVariable(name: "tsk", arg: 1, scope: !15490, file: !2328, line: 1802, type: !2326)
!15494 = !DILocation(line: 1802, column: 60, scope: !15490)
!15495 = !DILocalVariable(name: "flag", arg: 2, scope: !15490, file: !2328, line: 1802, type: !32)
!15496 = !DILocation(line: 1802, column: 69, scope: !15490)
!15497 = !DILocation(line: 1804, column: 38, scope: !15490)
!15498 = !DILocation(line: 1804, column: 21, scope: !15490)
!15499 = !DILocation(line: 1804, column: 44, scope: !15490)
!15500 = !DILocation(line: 1804, column: 2, scope: !15490)
!15501 = !DILocation(line: 1805, column: 1, scope: !15490)
!15502 = distinct !DISubprogram(name: "set_ti_thread_flag", scope: !15503, file: !15503, line: 53, type: !15504, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15503 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!15504 = !DISubroutineType(types: !15505)
!15505 = !{null, !15506, !32}
!15506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 64)
!15507 = !DILocalVariable(name: "ti", arg: 1, scope: !15502, file: !15503, line: 53, type: !15506)
!15508 = !DILocation(line: 53, column: 59, scope: !15502)
!15509 = !DILocalVariable(name: "flag", arg: 2, scope: !15502, file: !15503, line: 53, type: !32)
!15510 = !DILocation(line: 53, column: 67, scope: !15502)
!15511 = !DILocation(line: 55, column: 10, scope: !15502)
!15512 = !DILocation(line: 55, column: 34, scope: !15502)
!15513 = !DILocation(line: 55, column: 38, scope: !15502)
!15514 = !DILocation(line: 55, column: 2, scope: !15502)
!15515 = !DILocation(line: 56, column: 1, scope: !15502)
!15516 = distinct !DISubprogram(name: "task_thread_info", scope: !2328, file: !2328, line: 1729, type: !15517, scopeLine: 1730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15517 = !DISubroutineType(types: !15518)
!15518 = !{!15506, !2326}
!15519 = !DILocalVariable(name: "task", arg: 1, scope: !15516, file: !2328, line: 1729, type: !2326)
!15520 = !DILocation(line: 1729, column: 72, scope: !15516)
!15521 = !DILocation(line: 1731, column: 10, scope: !15516)
!15522 = !DILocation(line: 1731, column: 16, scope: !15516)
!15523 = !DILocation(line: 1731, column: 2, scope: !15516)
!15524 = distinct !DISubprogram(name: "set_bit", scope: !15525, file: !15525, line: 26, type: !15526, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15525 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!15526 = !DISubroutineType(types: !15527)
!15527 = !{null, !998, !15528}
!15528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15529, size: 64)
!15529 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !312)
!15530 = !DILocalVariable(name: "nr", arg: 1, scope: !15531, file: !14884, line: 52, type: !998)
!15531 = distinct !DISubprogram(name: "arch_set_bit", scope: !14884, file: !14884, line: 52, type: !15526, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15532 = !DILocation(line: 52, column: 19, scope: !15531, inlinedAt: !15533)
!15533 = distinct !DILocation(line: 29, column: 2, scope: !15524)
!15534 = !DILocalVariable(name: "addr", arg: 2, scope: !15531, file: !14884, line: 52, type: !15528)
!15535 = !DILocation(line: 52, column: 47, scope: !15531, inlinedAt: !15533)
!15536 = !DILocation(line: 84, column: 74, scope: !9038, inlinedAt: !15537)
!15537 = distinct !DILocation(line: 28, column: 2, scope: !15524)
!15538 = !DILocation(line: 84, column: 84, scope: !9038, inlinedAt: !15537)
!15539 = !DILocalVariable(name: "nr", arg: 1, scope: !15524, file: !15525, line: 26, type: !998)
!15540 = !DILocation(line: 26, column: 33, scope: !15524)
!15541 = !DILocalVariable(name: "addr", arg: 2, scope: !15524, file: !15525, line: 26, type: !15528)
!15542 = !DILocation(line: 26, column: 61, scope: !15524)
!15543 = !DILocation(line: 28, column: 26, scope: !15524)
!15544 = !DILocation(line: 28, column: 33, scope: !15524)
!15545 = !DILocation(line: 28, column: 31, scope: !15524)
!15546 = !DILocation(line: 86, column: 20, scope: !9038, inlinedAt: !15537)
!15547 = !DILocation(line: 86, column: 23, scope: !9038, inlinedAt: !15537)
!15548 = !DILocation(line: 86, column: 2, scope: !9038, inlinedAt: !15537)
!15549 = !DILocation(line: 87, column: 2, scope: !9038, inlinedAt: !15537)
!15550 = !DILocation(line: 29, column: 15, scope: !15524)
!15551 = !DILocation(line: 29, column: 19, scope: !15524)
!15552 = !DILocation(line: 54, column: 27, scope: !15553, inlinedAt: !15533)
!15553 = distinct !DILexicalBlock(scope: !15531, file: !14884, line: 54, column: 6)
!15554 = !DILocation(line: 54, column: 6, scope: !15553, inlinedAt: !15533)
!15555 = !DILocation(line: 54, column: 6, scope: !15531, inlinedAt: !15533)
!15556 = !DILocation(line: 56, column: 6, scope: !15557, inlinedAt: !15533)
!15557 = distinct !DILexicalBlock(scope: !15553, file: !14884, line: 54, column: 32)
!15558 = !DILocation(line: 57, column: 12, scope: !15557, inlinedAt: !15533)
!15559 = !DILocation(line: 55, column: 3, scope: !15557, inlinedAt: !15533)
!15560 = !{i32 -2147021807}
!15561 = !DILocation(line: 59, column: 2, scope: !15557, inlinedAt: !15533)
!15562 = !DILocation(line: 61, column: 8, scope: !15563, inlinedAt: !15533)
!15563 = distinct !DILexicalBlock(scope: !15553, file: !14884, line: 59, column: 9)
!15564 = !DILocation(line: 61, column: 32, scope: !15563, inlinedAt: !15533)
!15565 = !DILocation(line: 60, column: 3, scope: !15563, inlinedAt: !15533)
!15566 = !{i32 -2147021675}
!15567 = !DILocation(line: 30, column: 1, scope: !15524)
!15568 = distinct !DISubprogram(name: "device_release", scope: !3, file: !3, line: 1783, type: !4626, scopeLine: 1784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15569 = !DILocalVariable(name: "kobj", arg: 1, scope: !15568, file: !3, line: 1783, type: !4579)
!15570 = !DILocation(line: 1783, column: 44, scope: !15568)
!15571 = !DILocalVariable(name: "dev", scope: !15568, file: !3, line: 1785, type: !4856)
!15572 = !DILocation(line: 1785, column: 17, scope: !15568)
!15573 = !DILocation(line: 1785, column: 35, scope: !15568)
!15574 = !DILocation(line: 1785, column: 23, scope: !15568)
!15575 = !DILocalVariable(name: "p", scope: !15568, file: !3, line: 1786, type: !4858)
!15576 = !DILocation(line: 1786, column: 25, scope: !15568)
!15577 = !DILocation(line: 1786, column: 29, scope: !15568)
!15578 = !DILocation(line: 1786, column: 34, scope: !15568)
!15579 = !DILocation(line: 1797, column: 21, scope: !15568)
!15580 = !DILocation(line: 1797, column: 2, scope: !15568)
!15581 = !DILocation(line: 1799, column: 8, scope: !15568)
!15582 = !DILocation(line: 1799, column: 13, scope: !15568)
!15583 = !DILocation(line: 1799, column: 2, scope: !15568)
!15584 = !DILocation(line: 1801, column: 6, scope: !15585)
!15585 = distinct !DILexicalBlock(scope: !15568, file: !3, line: 1801, column: 6)
!15586 = !DILocation(line: 1801, column: 11, scope: !15585)
!15587 = !DILocation(line: 1801, column: 6, scope: !15568)
!15588 = !DILocation(line: 1802, column: 3, scope: !15585)
!15589 = !DILocation(line: 1802, column: 8, scope: !15585)
!15590 = !DILocation(line: 1802, column: 16, scope: !15585)
!15591 = !DILocation(line: 1803, column: 11, scope: !15592)
!15592 = distinct !DILexicalBlock(scope: !15585, file: !3, line: 1803, column: 11)
!15593 = !DILocation(line: 1803, column: 16, scope: !15592)
!15594 = !DILocation(line: 1803, column: 21, scope: !15592)
!15595 = !DILocation(line: 1803, column: 24, scope: !15592)
!15596 = !DILocation(line: 1803, column: 29, scope: !15592)
!15597 = !DILocation(line: 1803, column: 35, scope: !15592)
!15598 = !DILocation(line: 1803, column: 11, scope: !15585)
!15599 = !DILocation(line: 1804, column: 3, scope: !15592)
!15600 = !DILocation(line: 1804, column: 8, scope: !15592)
!15601 = !DILocation(line: 1804, column: 14, scope: !15592)
!15602 = !DILocation(line: 1804, column: 22, scope: !15592)
!15603 = !DILocation(line: 1805, column: 11, scope: !15604)
!15604 = distinct !DILexicalBlock(scope: !15592, file: !3, line: 1805, column: 11)
!15605 = !DILocation(line: 1805, column: 16, scope: !15604)
!15606 = !DILocation(line: 1805, column: 22, scope: !15604)
!15607 = !DILocation(line: 1805, column: 25, scope: !15604)
!15608 = !DILocation(line: 1805, column: 30, scope: !15604)
!15609 = !DILocation(line: 1805, column: 37, scope: !15604)
!15610 = !DILocation(line: 1805, column: 11, scope: !15592)
!15611 = !DILocation(line: 1806, column: 3, scope: !15604)
!15612 = !DILocation(line: 1806, column: 8, scope: !15604)
!15613 = !DILocation(line: 1806, column: 15, scope: !15604)
!15614 = !DILocation(line: 1806, column: 27, scope: !15604)
!15615 = !DILocalVariable(name: "__ret_warn_on", scope: !15616, file: !3, line: 1808, type: !32)
!15616 = distinct !DILexicalBlock(scope: !15604, file: !3, line: 1808, column: 3)
!15617 = !DILocation(line: 1808, column: 3, scope: !15616)
!15618 = !DILocation(line: 1808, column: 3, scope: !15619)
!15619 = distinct !DILexicalBlock(scope: !15616, file: !3, line: 1808, column: 3)
!15620 = !DILocation(line: 1808, column: 3, scope: !15621)
!15621 = distinct !DILexicalBlock(scope: !15619, file: !3, line: 1808, column: 3)
!15622 = !DILocation(line: 1808, column: 3, scope: !15623)
!15623 = distinct !DILexicalBlock(scope: !15621, file: !3, line: 1808, column: 3)
!15624 = !DILocation(line: 1808, column: 3, scope: !15625)
!15625 = distinct !DILexicalBlock(scope: !15621, file: !3, line: 1808, column: 3)
!15626 = !DILocation(line: 1808, column: 3, scope: !15627)
!15627 = distinct !DILexicalBlock(scope: !15625, file: !3, line: 1808, column: 3)
!15628 = !DILocation(line: 1808, column: 3, scope: !15629)
!15629 = distinct !DILexicalBlock(scope: !15625, file: !3, line: 1808, column: 3)
!15630 = !{i32 -2139036575, i32 -2139036546, i32 -2139036500, i32 -2139036442, i32 -2139036388, i32 -2139036334, i32 -2139036279, i32 -2139036248}
!15631 = !DILocation(line: 1808, column: 3, scope: !15632)
!15632 = distinct !DILexicalBlock(scope: !15625, file: !3, line: 1808, column: 3)
!15633 = !{i32 -2139035835, i32 -2139035828, i32 -2139035776, i32 -2139035745, i32 -2139035715}
!15634 = !DILocation(line: 1808, column: 3, scope: !15635)
!15635 = distinct !DILexicalBlock(scope: !15625, file: !3, line: 1808, column: 3)
!15636 = !DILocation(line: 1808, column: 3, scope: !15637)
!15637 = distinct !DILexicalBlock(scope: !15621, file: !3, line: 1808, column: 3)
!15638 = !DILocation(line: 1810, column: 8, scope: !15568)
!15639 = !DILocation(line: 1810, column: 2, scope: !15568)
!15640 = !DILocation(line: 1811, column: 1, scope: !15568)
!15641 = distinct !DISubprogram(name: "device_namespace", scope: !3, file: !3, line: 1813, type: !4715, scopeLine: 1814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15642 = !DILocalVariable(name: "kobj", arg: 1, scope: !15641, file: !3, line: 1813, type: !4579)
!15643 = !DILocation(line: 1813, column: 53, scope: !15641)
!15644 = !DILocalVariable(name: "dev", scope: !15641, file: !3, line: 1815, type: !4856)
!15645 = !DILocation(line: 1815, column: 17, scope: !15641)
!15646 = !DILocation(line: 1815, column: 35, scope: !15641)
!15647 = !DILocation(line: 1815, column: 23, scope: !15641)
!15648 = !DILocalVariable(name: "ns", scope: !15641, file: !3, line: 1816, type: !3258)
!15649 = !DILocation(line: 1816, column: 14, scope: !15641)
!15650 = !DILocation(line: 1818, column: 6, scope: !15651)
!15651 = distinct !DILexicalBlock(scope: !15641, file: !3, line: 1818, column: 6)
!15652 = !DILocation(line: 1818, column: 11, scope: !15651)
!15653 = !DILocation(line: 1818, column: 17, scope: !15651)
!15654 = !DILocation(line: 1818, column: 20, scope: !15651)
!15655 = !DILocation(line: 1818, column: 25, scope: !15651)
!15656 = !DILocation(line: 1818, column: 32, scope: !15651)
!15657 = !DILocation(line: 1818, column: 6, scope: !15641)
!15658 = !DILocation(line: 1819, column: 8, scope: !15651)
!15659 = !DILocation(line: 1819, column: 13, scope: !15651)
!15660 = !DILocation(line: 1819, column: 20, scope: !15651)
!15661 = !DILocation(line: 1819, column: 30, scope: !15651)
!15662 = !DILocation(line: 1819, column: 6, scope: !15651)
!15663 = !DILocation(line: 1819, column: 3, scope: !15651)
!15664 = !DILocation(line: 1821, column: 9, scope: !15641)
!15665 = !DILocation(line: 1821, column: 2, scope: !15641)
!15666 = distinct !DISubprogram(name: "device_get_ownership", scope: !3, file: !3, line: 1824, type: !4719, scopeLine: 1825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15667 = !DILocalVariable(name: "kobj", arg: 1, scope: !15666, file: !3, line: 1824, type: !4579)
!15668 = !DILocation(line: 1824, column: 50, scope: !15666)
!15669 = !DILocalVariable(name: "uid", arg: 2, scope: !15666, file: !3, line: 1824, type: !2904)
!15670 = !DILocation(line: 1824, column: 64, scope: !15666)
!15671 = !DILocalVariable(name: "gid", arg: 3, scope: !15666, file: !3, line: 1824, type: !2905)
!15672 = !DILocation(line: 1824, column: 77, scope: !15666)
!15673 = !DILocalVariable(name: "dev", scope: !15666, file: !3, line: 1826, type: !4856)
!15674 = !DILocation(line: 1826, column: 17, scope: !15666)
!15675 = !DILocation(line: 1826, column: 35, scope: !15666)
!15676 = !DILocation(line: 1826, column: 23, scope: !15666)
!15677 = !DILocation(line: 1828, column: 6, scope: !15678)
!15678 = distinct !DILexicalBlock(scope: !15666, file: !3, line: 1828, column: 6)
!15679 = !DILocation(line: 1828, column: 11, scope: !15678)
!15680 = !DILocation(line: 1828, column: 17, scope: !15678)
!15681 = !DILocation(line: 1828, column: 20, scope: !15678)
!15682 = !DILocation(line: 1828, column: 25, scope: !15678)
!15683 = !DILocation(line: 1828, column: 32, scope: !15678)
!15684 = !DILocation(line: 1828, column: 6, scope: !15666)
!15685 = !DILocation(line: 1829, column: 3, scope: !15678)
!15686 = !DILocation(line: 1829, column: 8, scope: !15678)
!15687 = !DILocation(line: 1829, column: 15, scope: !15678)
!15688 = !DILocation(line: 1829, column: 29, scope: !15678)
!15689 = !DILocation(line: 1829, column: 34, scope: !15678)
!15690 = !DILocation(line: 1829, column: 39, scope: !15678)
!15691 = !DILocation(line: 1830, column: 1, scope: !15666)
!15692 = distinct !DISubprogram(name: "dev_attr_show", scope: !3, file: !3, line: 1663, type: !4636, scopeLine: 1665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15693 = !DILocalVariable(name: "kobj", arg: 1, scope: !15692, file: !3, line: 1663, type: !4579)
!15694 = !DILocation(line: 1663, column: 46, scope: !15692)
!15695 = !DILocalVariable(name: "attr", arg: 2, scope: !15692, file: !3, line: 1663, type: !4638)
!15696 = !DILocation(line: 1663, column: 70, scope: !15692)
!15697 = !DILocalVariable(name: "buf", arg: 3, scope: !15692, file: !3, line: 1664, type: !1038)
!15698 = !DILocation(line: 1664, column: 15, scope: !15692)
!15699 = !DILocalVariable(name: "dev_attr", scope: !15692, file: !3, line: 1666, type: !7468)
!15700 = !DILocation(line: 1666, column: 27, scope: !15692)
!15701 = !DILocalVariable(name: "__mptr", scope: !15702, file: !3, line: 1666, type: !591)
!15702 = distinct !DILexicalBlock(scope: !15692, file: !3, line: 1666, column: 38)
!15703 = !DILocation(line: 1666, column: 38, scope: !15702)
!15704 = !DILocation(line: 1666, column: 38, scope: !15705)
!15705 = distinct !DILexicalBlock(scope: !15702, file: !3, line: 1666, column: 38)
!15706 = !DILocalVariable(name: "dev", scope: !15692, file: !3, line: 1667, type: !4856)
!15707 = !DILocation(line: 1667, column: 17, scope: !15692)
!15708 = !DILocation(line: 1667, column: 35, scope: !15692)
!15709 = !DILocation(line: 1667, column: 23, scope: !15692)
!15710 = !DILocalVariable(name: "ret", scope: !15692, file: !3, line: 1668, type: !1521)
!15711 = !DILocation(line: 1668, column: 10, scope: !15692)
!15712 = !DILocation(line: 1670, column: 6, scope: !15713)
!15713 = distinct !DILexicalBlock(scope: !15692, file: !3, line: 1670, column: 6)
!15714 = !DILocation(line: 1670, column: 16, scope: !15713)
!15715 = !DILocation(line: 1670, column: 6, scope: !15692)
!15716 = !DILocation(line: 1671, column: 9, scope: !15713)
!15717 = !DILocation(line: 1671, column: 19, scope: !15713)
!15718 = !DILocation(line: 1671, column: 24, scope: !15713)
!15719 = !DILocation(line: 1671, column: 29, scope: !15713)
!15720 = !DILocation(line: 1671, column: 39, scope: !15713)
!15721 = !DILocation(line: 1671, column: 7, scope: !15713)
!15722 = !DILocation(line: 1671, column: 3, scope: !15713)
!15723 = !DILocation(line: 1672, column: 6, scope: !15724)
!15724 = distinct !DILexicalBlock(scope: !15692, file: !3, line: 1672, column: 6)
!15725 = !DILocation(line: 1672, column: 10, scope: !15724)
!15726 = !DILocation(line: 1672, column: 6, scope: !15692)
!15727 = !DILocation(line: 1674, column: 5, scope: !15728)
!15728 = distinct !DILexicalBlock(scope: !15724, file: !3, line: 1672, column: 33)
!15729 = !DILocation(line: 1674, column: 15, scope: !15728)
!15730 = !DILocation(line: 1673, column: 3, scope: !15728)
!15731 = !DILocation(line: 1675, column: 2, scope: !15728)
!15732 = !DILocation(line: 1676, column: 9, scope: !15692)
!15733 = !DILocation(line: 1676, column: 2, scope: !15692)
!15734 = distinct !DISubprogram(name: "dev_attr_store", scope: !3, file: !3, line: 1679, type: !4645, scopeLine: 1681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15735 = !DILocalVariable(name: "kobj", arg: 1, scope: !15734, file: !3, line: 1679, type: !4579)
!15736 = !DILocation(line: 1679, column: 47, scope: !15734)
!15737 = !DILocalVariable(name: "attr", arg: 2, scope: !15734, file: !3, line: 1679, type: !4638)
!15738 = !DILocation(line: 1679, column: 71, scope: !15734)
!15739 = !DILocalVariable(name: "buf", arg: 3, scope: !15734, file: !3, line: 1680, type: !292)
!15740 = !DILocation(line: 1680, column: 22, scope: !15734)
!15741 = !DILocalVariable(name: "count", arg: 4, scope: !15734, file: !3, line: 1680, type: !1039)
!15742 = !DILocation(line: 1680, column: 34, scope: !15734)
!15743 = !DILocalVariable(name: "dev_attr", scope: !15734, file: !3, line: 1682, type: !7468)
!15744 = !DILocation(line: 1682, column: 27, scope: !15734)
!15745 = !DILocalVariable(name: "__mptr", scope: !15746, file: !3, line: 1682, type: !591)
!15746 = distinct !DILexicalBlock(scope: !15734, file: !3, line: 1682, column: 38)
!15747 = !DILocation(line: 1682, column: 38, scope: !15746)
!15748 = !DILocation(line: 1682, column: 38, scope: !15749)
!15749 = distinct !DILexicalBlock(scope: !15746, file: !3, line: 1682, column: 38)
!15750 = !DILocalVariable(name: "dev", scope: !15734, file: !3, line: 1683, type: !4856)
!15751 = !DILocation(line: 1683, column: 17, scope: !15734)
!15752 = !DILocation(line: 1683, column: 35, scope: !15734)
!15753 = !DILocation(line: 1683, column: 23, scope: !15734)
!15754 = !DILocalVariable(name: "ret", scope: !15734, file: !3, line: 1684, type: !1521)
!15755 = !DILocation(line: 1684, column: 10, scope: !15734)
!15756 = !DILocation(line: 1686, column: 6, scope: !15757)
!15757 = distinct !DILexicalBlock(scope: !15734, file: !3, line: 1686, column: 6)
!15758 = !DILocation(line: 1686, column: 16, scope: !15757)
!15759 = !DILocation(line: 1686, column: 6, scope: !15734)
!15760 = !DILocation(line: 1687, column: 9, scope: !15757)
!15761 = !DILocation(line: 1687, column: 19, scope: !15757)
!15762 = !DILocation(line: 1687, column: 25, scope: !15757)
!15763 = !DILocation(line: 1687, column: 30, scope: !15757)
!15764 = !DILocation(line: 1687, column: 40, scope: !15757)
!15765 = !DILocation(line: 1687, column: 45, scope: !15757)
!15766 = !DILocation(line: 1687, column: 7, scope: !15757)
!15767 = !DILocation(line: 1687, column: 3, scope: !15757)
!15768 = !DILocation(line: 1688, column: 9, scope: !15734)
!15769 = !DILocation(line: 1688, column: 2, scope: !15734)
!15770 = distinct !DISubprogram(name: "device_pm_init_common", scope: !5147, file: !5147, line: 4, type: !4915, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15771 = !DILocation(line: 327, column: 67, scope: !11215, inlinedAt: !15772)
!15772 = distinct !DILocation(line: 7, column: 3, scope: !15773)
!15773 = distinct !DILexicalBlock(scope: !15774, file: !5147, line: 7, column: 3)
!15774 = distinct !DILexicalBlock(scope: !15775, file: !5147, line: 6, column: 30)
!15775 = distinct !DILexicalBlock(scope: !15770, file: !5147, line: 6, column: 6)
!15776 = !DILocalVariable(name: "dev", arg: 1, scope: !15770, file: !5147, line: 4, type: !4856)
!15777 = !DILocation(line: 4, column: 57, scope: !15770)
!15778 = !DILocation(line: 6, column: 7, scope: !15775)
!15779 = !DILocation(line: 6, column: 12, scope: !15775)
!15780 = !DILocation(line: 6, column: 18, scope: !15775)
!15781 = !DILocation(line: 6, column: 6, scope: !15770)
!15782 = !DILocation(line: 7, column: 3, scope: !15774)
!15783 = !DILocation(line: 7, column: 3, scope: !15773)
!15784 = !DILocation(line: 329, column: 10, scope: !11215, inlinedAt: !15772)
!15785 = !DILocation(line: 329, column: 16, scope: !11215, inlinedAt: !15772)
!15786 = !DILocation(line: 8, column: 3, scope: !15774)
!15787 = !DILocation(line: 8, column: 8, scope: !15774)
!15788 = !DILocation(line: 8, column: 14, scope: !15774)
!15789 = !DILocation(line: 8, column: 18, scope: !15774)
!15790 = !DILocation(line: 9, column: 3, scope: !15774)
!15791 = !DILocation(line: 9, column: 8, scope: !15774)
!15792 = !DILocation(line: 9, column: 14, scope: !15774)
!15793 = !DILocation(line: 9, column: 25, scope: !15774)
!15794 = !DILocation(line: 10, column: 2, scope: !15774)
!15795 = !DILocation(line: 11, column: 1, scope: !15770)
!15796 = distinct !DISubprogram(name: "klist_children_get", scope: !3, file: !3, line: 2375, type: !4870, scopeLine: 2376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15797 = !DILocalVariable(name: "n", arg: 1, scope: !15796, file: !3, line: 2375, type: !4872)
!15798 = !DILocation(line: 2375, column: 51, scope: !15796)
!15799 = !DILocalVariable(name: "p", scope: !15796, file: !3, line: 2377, type: !4858)
!15800 = !DILocation(line: 2377, column: 25, scope: !15796)
!15801 = !DILocalVariable(name: "__mptr", scope: !15802, file: !3, line: 2377, type: !591)
!15802 = distinct !DILexicalBlock(scope: !15796, file: !3, line: 2377, column: 29)
!15803 = !DILocation(line: 2377, column: 29, scope: !15802)
!15804 = !DILocation(line: 2377, column: 29, scope: !15805)
!15805 = distinct !DILexicalBlock(scope: !15802, file: !3, line: 2377, column: 29)
!15806 = !DILocalVariable(name: "dev", scope: !15796, file: !3, line: 2378, type: !4856)
!15807 = !DILocation(line: 2378, column: 17, scope: !15796)
!15808 = !DILocation(line: 2378, column: 23, scope: !15796)
!15809 = !DILocation(line: 2378, column: 26, scope: !15796)
!15810 = !DILocation(line: 2380, column: 13, scope: !15796)
!15811 = !DILocation(line: 2380, column: 2, scope: !15796)
!15812 = !DILocation(line: 2381, column: 1, scope: !15796)
!15813 = distinct !DISubprogram(name: "klist_children_put", scope: !3, file: !3, line: 2383, type: !4870, scopeLine: 2384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15814 = !DILocalVariable(name: "n", arg: 1, scope: !15813, file: !3, line: 2383, type: !4872)
!15815 = !DILocation(line: 2383, column: 51, scope: !15813)
!15816 = !DILocalVariable(name: "p", scope: !15813, file: !3, line: 2385, type: !4858)
!15817 = !DILocation(line: 2385, column: 25, scope: !15813)
!15818 = !DILocalVariable(name: "__mptr", scope: !15819, file: !3, line: 2385, type: !591)
!15819 = distinct !DILexicalBlock(scope: !15813, file: !3, line: 2385, column: 29)
!15820 = !DILocation(line: 2385, column: 29, scope: !15819)
!15821 = !DILocation(line: 2385, column: 29, scope: !15822)
!15822 = distinct !DILexicalBlock(scope: !15819, file: !3, line: 2385, column: 29)
!15823 = !DILocalVariable(name: "dev", scope: !15813, file: !3, line: 2386, type: !4856)
!15824 = !DILocation(line: 2386, column: 17, scope: !15813)
!15825 = !DILocation(line: 2386, column: 23, scope: !15813)
!15826 = !DILocation(line: 2386, column: 26, scope: !15813)
!15827 = !DILocation(line: 2388, column: 13, scope: !15813)
!15828 = !DILocation(line: 2388, column: 2, scope: !15813)
!15829 = !DILocation(line: 2389, column: 1, scope: !15813)
!15830 = distinct !DISubprogram(name: "class_dir_create_and_add", scope: !3, file: !3, line: 2474, type: !15831, scopeLine: 2475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15831 = !DISubroutineType(types: !15832)
!15832 = !{!4579, !4981, !4579}
!15833 = !DILocalVariable(name: "class", arg: 1, scope: !15830, file: !3, line: 2474, type: !4981)
!15834 = !DILocation(line: 2474, column: 40, scope: !15830)
!15835 = !DILocalVariable(name: "parent_kobj", arg: 2, scope: !15830, file: !3, line: 2474, type: !4579)
!15836 = !DILocation(line: 2474, column: 63, scope: !15830)
!15837 = !DILocalVariable(name: "dir", scope: !15830, file: !3, line: 2476, type: !7791)
!15838 = !DILocation(line: 2476, column: 20, scope: !15830)
!15839 = !DILocalVariable(name: "retval", scope: !15830, file: !3, line: 2477, type: !32)
!15840 = !DILocation(line: 2477, column: 6, scope: !15830)
!15841 = !DILocation(line: 2479, column: 8, scope: !15830)
!15842 = !DILocation(line: 2479, column: 6, scope: !15830)
!15843 = !DILocation(line: 2480, column: 7, scope: !15844)
!15844 = distinct !DILexicalBlock(scope: !15830, file: !3, line: 2480, column: 6)
!15845 = !DILocation(line: 2480, column: 6, scope: !15830)
!15846 = !DILocation(line: 2481, column: 10, scope: !15844)
!15847 = !DILocation(line: 2481, column: 3, scope: !15844)
!15848 = !DILocation(line: 2483, column: 15, scope: !15830)
!15849 = !DILocation(line: 2483, column: 2, scope: !15830)
!15850 = !DILocation(line: 2483, column: 7, scope: !15830)
!15851 = !DILocation(line: 2483, column: 13, scope: !15830)
!15852 = !DILocation(line: 2484, column: 16, scope: !15830)
!15853 = !DILocation(line: 2484, column: 21, scope: !15830)
!15854 = !DILocation(line: 2484, column: 2, scope: !15830)
!15855 = !DILocation(line: 2486, column: 20, scope: !15830)
!15856 = !DILocation(line: 2486, column: 27, scope: !15830)
!15857 = !DILocation(line: 2486, column: 30, scope: !15830)
!15858 = !DILocation(line: 2486, column: 2, scope: !15830)
!15859 = !DILocation(line: 2486, column: 7, scope: !15830)
!15860 = !DILocation(line: 2486, column: 12, scope: !15830)
!15861 = !DILocation(line: 2486, column: 17, scope: !15830)
!15862 = !DILocation(line: 2488, column: 24, scope: !15830)
!15863 = !DILocation(line: 2488, column: 29, scope: !15830)
!15864 = !DILocation(line: 2488, column: 35, scope: !15830)
!15865 = !DILocation(line: 2488, column: 54, scope: !15830)
!15866 = !DILocation(line: 2488, column: 61, scope: !15830)
!15867 = !DILocation(line: 2488, column: 11, scope: !15830)
!15868 = !DILocation(line: 2488, column: 9, scope: !15830)
!15869 = !DILocation(line: 2489, column: 6, scope: !15870)
!15870 = distinct !DILexicalBlock(scope: !15830, file: !3, line: 2489, column: 6)
!15871 = !DILocation(line: 2489, column: 13, scope: !15870)
!15872 = !DILocation(line: 2489, column: 6, scope: !15830)
!15873 = !DILocation(line: 2490, column: 16, scope: !15874)
!15874 = distinct !DILexicalBlock(scope: !15870, file: !3, line: 2489, column: 18)
!15875 = !DILocation(line: 2490, column: 21, scope: !15874)
!15876 = !DILocation(line: 2490, column: 3, scope: !15874)
!15877 = !DILocation(line: 2491, column: 18, scope: !15874)
!15878 = !DILocation(line: 2491, column: 10, scope: !15874)
!15879 = !DILocation(line: 2491, column: 3, scope: !15874)
!15880 = !DILocation(line: 2493, column: 10, scope: !15830)
!15881 = !DILocation(line: 2493, column: 15, scope: !15830)
!15882 = !DILocation(line: 2493, column: 2, scope: !15830)
!15883 = !DILocation(line: 2494, column: 1, scope: !15830)
!15884 = distinct !DISubprogram(name: "class_dir_release", scope: !3, file: !3, line: 2454, type: !4626, scopeLine: 2455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15885 = !DILocalVariable(name: "kobj", arg: 1, scope: !15884, file: !3, line: 2454, type: !4579)
!15886 = !DILocation(line: 2454, column: 47, scope: !15884)
!15887 = !DILocalVariable(name: "dir", scope: !15884, file: !3, line: 2456, type: !7791)
!15888 = !DILocation(line: 2456, column: 20, scope: !15884)
!15889 = !DILocalVariable(name: "__mptr", scope: !15890, file: !3, line: 2456, type: !591)
!15890 = distinct !DILexicalBlock(scope: !15884, file: !3, line: 2456, column: 26)
!15891 = !DILocation(line: 2456, column: 26, scope: !15890)
!15892 = !DILocation(line: 2456, column: 26, scope: !15893)
!15893 = distinct !DILexicalBlock(scope: !15890, file: !3, line: 2456, column: 26)
!15894 = !DILocation(line: 2457, column: 8, scope: !15884)
!15895 = !DILocation(line: 2457, column: 2, scope: !15884)
!15896 = !DILocation(line: 2458, column: 1, scope: !15884)
!15897 = distinct !DISubprogram(name: "class_dir_child_ns_type", scope: !3, file: !3, line: 2461, type: !4684, scopeLine: 2462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15898 = !DILocalVariable(name: "kobj", arg: 1, scope: !15897, file: !3, line: 2461, type: !4579)
!15899 = !DILocation(line: 2461, column: 73, scope: !15897)
!15900 = !DILocalVariable(name: "dir", scope: !15897, file: !3, line: 2463, type: !7791)
!15901 = !DILocation(line: 2463, column: 20, scope: !15897)
!15902 = !DILocalVariable(name: "__mptr", scope: !15903, file: !3, line: 2463, type: !591)
!15903 = distinct !DILexicalBlock(scope: !15897, file: !3, line: 2463, column: 26)
!15904 = !DILocation(line: 2463, column: 26, scope: !15903)
!15905 = !DILocation(line: 2463, column: 26, scope: !15906)
!15906 = distinct !DILexicalBlock(scope: !15903, file: !3, line: 2463, column: 26)
!15907 = !DILocation(line: 2464, column: 9, scope: !15897)
!15908 = !DILocation(line: 2464, column: 14, scope: !15897)
!15909 = !DILocation(line: 2464, column: 21, scope: !15897)
!15910 = !DILocation(line: 2464, column: 2, scope: !15897)
!15911 = distinct !DISubprogram(name: "uevent_show", scope: !3, file: !3, line: 1938, type: !7466, scopeLine: 1940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15912 = !DILocalVariable(name: "dev", arg: 1, scope: !15911, file: !3, line: 1938, type: !4856)
!15913 = !DILocation(line: 1938, column: 43, scope: !15911)
!15914 = !DILocalVariable(name: "attr", arg: 2, scope: !15911, file: !3, line: 1938, type: !7468)
!15915 = !DILocation(line: 1938, column: 73, scope: !15911)
!15916 = !DILocalVariable(name: "buf", arg: 3, scope: !15911, file: !3, line: 1939, type: !1038)
!15917 = !DILocation(line: 1939, column: 13, scope: !15911)
!15918 = !DILocalVariable(name: "top_kobj", scope: !15911, file: !3, line: 1941, type: !4579)
!15919 = !DILocation(line: 1941, column: 18, scope: !15911)
!15920 = !DILocalVariable(name: "kset", scope: !15911, file: !3, line: 1942, type: !4581)
!15921 = !DILocation(line: 1942, column: 15, scope: !15911)
!15922 = !DILocalVariable(name: "env", scope: !15911, file: !3, line: 1943, type: !4607)
!15923 = !DILocation(line: 1943, column: 26, scope: !15911)
!15924 = !DILocalVariable(name: "i", scope: !15911, file: !3, line: 1944, type: !32)
!15925 = !DILocation(line: 1944, column: 6, scope: !15911)
!15926 = !DILocalVariable(name: "len", scope: !15911, file: !3, line: 1945, type: !32)
!15927 = !DILocation(line: 1945, column: 6, scope: !15911)
!15928 = !DILocalVariable(name: "retval", scope: !15911, file: !3, line: 1946, type: !32)
!15929 = !DILocation(line: 1946, column: 6, scope: !15911)
!15930 = !DILocation(line: 1949, column: 14, scope: !15911)
!15931 = !DILocation(line: 1949, column: 19, scope: !15911)
!15932 = !DILocation(line: 1949, column: 11, scope: !15911)
!15933 = !DILocation(line: 1950, column: 2, scope: !15911)
!15934 = !DILocation(line: 1950, column: 10, scope: !15911)
!15935 = !DILocation(line: 1950, column: 20, scope: !15911)
!15936 = !DILocation(line: 1950, column: 25, scope: !15911)
!15937 = !DILocation(line: 1950, column: 28, scope: !15911)
!15938 = !DILocation(line: 1950, column: 38, scope: !15911)
!15939 = !DILocation(line: 0, scope: !15911)
!15940 = !DILocation(line: 1951, column: 14, scope: !15911)
!15941 = !DILocation(line: 1951, column: 24, scope: !15911)
!15942 = !DILocation(line: 1951, column: 12, scope: !15911)
!15943 = distinct !{!15943, !15933, !15941}
!15944 = !DILocation(line: 1952, column: 7, scope: !15945)
!15945 = distinct !DILexicalBlock(scope: !15911, file: !3, line: 1952, column: 6)
!15946 = !DILocation(line: 1952, column: 17, scope: !15945)
!15947 = !DILocation(line: 1952, column: 6, scope: !15911)
!15948 = !DILocation(line: 1953, column: 3, scope: !15945)
!15949 = !DILocation(line: 1955, column: 9, scope: !15911)
!15950 = !DILocation(line: 1955, column: 19, scope: !15911)
!15951 = !DILocation(line: 1955, column: 7, scope: !15911)
!15952 = !DILocation(line: 1956, column: 7, scope: !15953)
!15953 = distinct !DILexicalBlock(scope: !15911, file: !3, line: 1956, column: 6)
!15954 = !DILocation(line: 1956, column: 13, scope: !15953)
!15955 = !DILocation(line: 1956, column: 24, scope: !15953)
!15956 = !DILocation(line: 1956, column: 28, scope: !15953)
!15957 = !DILocation(line: 1956, column: 34, scope: !15953)
!15958 = !DILocation(line: 1956, column: 46, scope: !15953)
!15959 = !DILocation(line: 1956, column: 6, scope: !15911)
!15960 = !DILocation(line: 1957, column: 3, scope: !15953)
!15961 = !DILocation(line: 1960, column: 6, scope: !15962)
!15962 = distinct !DILexicalBlock(scope: !15911, file: !3, line: 1960, column: 6)
!15963 = !DILocation(line: 1960, column: 12, scope: !15962)
!15964 = !DILocation(line: 1960, column: 23, scope: !15962)
!15965 = !DILocation(line: 1960, column: 26, scope: !15962)
!15966 = !DILocation(line: 1960, column: 32, scope: !15962)
!15967 = !DILocation(line: 1960, column: 44, scope: !15962)
!15968 = !DILocation(line: 1960, column: 6, scope: !15911)
!15969 = !DILocation(line: 1961, column: 8, scope: !15970)
!15970 = distinct !DILexicalBlock(scope: !15962, file: !3, line: 1961, column: 7)
!15971 = !DILocation(line: 1961, column: 14, scope: !15970)
!15972 = !DILocation(line: 1961, column: 26, scope: !15970)
!15973 = !DILocation(line: 1961, column: 33, scope: !15970)
!15974 = !DILocation(line: 1961, column: 40, scope: !15970)
!15975 = !DILocation(line: 1961, column: 45, scope: !15970)
!15976 = !DILocation(line: 1961, column: 7, scope: !15962)
!15977 = !DILocation(line: 1962, column: 4, scope: !15970)
!15978 = !DILocation(line: 1961, column: 49, scope: !15970)
!15979 = !DILocation(line: 1964, column: 8, scope: !15911)
!15980 = !DILocation(line: 1964, column: 6, scope: !15911)
!15981 = !DILocation(line: 1965, column: 7, scope: !15982)
!15982 = distinct !DILexicalBlock(scope: !15911, file: !3, line: 1965, column: 6)
!15983 = !DILocation(line: 1965, column: 6, scope: !15911)
!15984 = !DILocation(line: 1966, column: 3, scope: !15982)
!15985 = !DILocation(line: 1969, column: 11, scope: !15911)
!15986 = !DILocation(line: 1969, column: 17, scope: !15911)
!15987 = !DILocation(line: 1969, column: 29, scope: !15911)
!15988 = !DILocation(line: 1969, column: 36, scope: !15911)
!15989 = !DILocation(line: 1969, column: 43, scope: !15911)
!15990 = !DILocation(line: 1969, column: 48, scope: !15911)
!15991 = !DILocation(line: 1969, column: 54, scope: !15911)
!15992 = !DILocation(line: 1969, column: 9, scope: !15911)
!15993 = !DILocation(line: 1970, column: 6, scope: !15994)
!15994 = distinct !DILexicalBlock(scope: !15911, file: !3, line: 1970, column: 6)
!15995 = !DILocation(line: 1970, column: 6, scope: !15911)
!15996 = !DILocation(line: 1971, column: 3, scope: !15994)
!15997 = !DILocation(line: 1974, column: 9, scope: !15998)
!15998 = distinct !DILexicalBlock(scope: !15911, file: !3, line: 1974, column: 2)
!15999 = !DILocation(line: 1974, column: 7, scope: !15998)
!16000 = !DILocation(line: 1974, column: 14, scope: !16001)
!16001 = distinct !DILexicalBlock(scope: !15998, file: !3, line: 1974, column: 2)
!16002 = !DILocation(line: 1974, column: 18, scope: !16001)
!16003 = !DILocation(line: 1974, column: 23, scope: !16001)
!16004 = !DILocation(line: 1974, column: 16, scope: !16001)
!16005 = !DILocation(line: 1974, column: 2, scope: !15998)
!16006 = !DILocation(line: 1975, column: 24, scope: !16001)
!16007 = !DILocation(line: 1975, column: 29, scope: !16001)
!16008 = !DILocation(line: 1975, column: 42, scope: !16001)
!16009 = !DILocation(line: 1975, column: 47, scope: !16001)
!16010 = !DILocation(line: 1975, column: 52, scope: !16001)
!16011 = !DILocation(line: 1975, column: 10, scope: !16001)
!16012 = !DILocation(line: 1975, column: 7, scope: !16001)
!16013 = !DILocation(line: 1975, column: 3, scope: !16001)
!16014 = !DILocation(line: 1974, column: 34, scope: !16001)
!16015 = !DILocation(line: 1974, column: 2, scope: !16001)
!16016 = distinct !{!16016, !16005, !16017}
!16017 = !DILocation(line: 1975, column: 54, scope: !15998)
!16018 = !DILabel(scope: !15911, name: "out", file: !3, line: 1976)
!16019 = !DILocation(line: 1976, column: 1, scope: !15911)
!16020 = !DILocation(line: 1977, column: 8, scope: !15911)
!16021 = !DILocation(line: 1977, column: 2, scope: !15911)
!16022 = !DILocation(line: 1978, column: 9, scope: !15911)
!16023 = !DILocation(line: 1978, column: 2, scope: !15911)
!16024 = !DILocation(line: 1979, column: 1, scope: !15911)
!16025 = distinct !DISubprogram(name: "uevent_store", scope: !3, file: !3, line: 1981, type: !7471, scopeLine: 1983, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16026 = !DILocalVariable(name: "dev", arg: 1, scope: !16025, file: !3, line: 1981, type: !4856)
!16027 = !DILocation(line: 1981, column: 44, scope: !16025)
!16028 = !DILocalVariable(name: "attr", arg: 2, scope: !16025, file: !3, line: 1981, type: !7468)
!16029 = !DILocation(line: 1981, column: 74, scope: !16025)
!16030 = !DILocalVariable(name: "buf", arg: 3, scope: !16025, file: !3, line: 1982, type: !292)
!16031 = !DILocation(line: 1982, column: 20, scope: !16025)
!16032 = !DILocalVariable(name: "count", arg: 4, scope: !16025, file: !3, line: 1982, type: !1039)
!16033 = !DILocation(line: 1982, column: 32, scope: !16025)
!16034 = !DILocalVariable(name: "rc", scope: !16025, file: !3, line: 1984, type: !32)
!16035 = !DILocation(line: 1984, column: 6, scope: !16025)
!16036 = !DILocation(line: 1986, column: 29, scope: !16025)
!16037 = !DILocation(line: 1986, column: 34, scope: !16025)
!16038 = !DILocation(line: 1986, column: 40, scope: !16025)
!16039 = !DILocation(line: 1986, column: 45, scope: !16025)
!16040 = !DILocation(line: 1986, column: 7, scope: !16025)
!16041 = !DILocation(line: 1986, column: 5, scope: !16025)
!16042 = !DILocation(line: 1988, column: 6, scope: !16043)
!16043 = distinct !DILexicalBlock(scope: !16025, file: !3, line: 1988, column: 6)
!16044 = !DILocation(line: 1988, column: 6, scope: !16025)
!16045 = !DILocation(line: 1989, column: 3, scope: !16046)
!16046 = distinct !DILexicalBlock(scope: !16043, file: !3, line: 1988, column: 10)
!16047 = !DILocation(line: 1990, column: 10, scope: !16046)
!16048 = !DILocation(line: 1990, column: 3, scope: !16046)
!16049 = !DILocation(line: 1993, column: 9, scope: !16025)
!16050 = !DILocation(line: 1993, column: 2, scope: !16025)
!16051 = !DILocation(line: 1994, column: 1, scope: !16025)
!16052 = distinct !DISubprogram(name: "dev_of_node", scope: !4570, file: !4570, line: 754, type: !16053, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16053 = !DISubroutineType(types: !16054)
!16054 = !{!5333, !4856}
!16055 = !DILocalVariable(name: "dev", arg: 1, scope: !16052, file: !4570, line: 754, type: !4856)
!16056 = !DILocation(line: 754, column: 62, scope: !16052)
!16057 = !DILocation(line: 756, column: 33, scope: !16058)
!16058 = distinct !DILexicalBlock(scope: !16052, file: !4570, line: 756, column: 6)
!16059 = !DILocation(line: 756, column: 6, scope: !16052)
!16060 = !DILocation(line: 757, column: 3, scope: !16058)
!16061 = !DILocation(line: 758, column: 9, scope: !16052)
!16062 = !DILocation(line: 758, column: 14, scope: !16052)
!16063 = !DILocation(line: 758, column: 2, scope: !16052)
!16064 = !DILocation(line: 759, column: 1, scope: !16052)
!16065 = distinct !DISubprogram(name: "device_is_not_partition", scope: !3, file: !3, line: 1606, type: !4911, scopeLine: 1607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16066 = !DILocalVariable(name: "dev", arg: 1, scope: !16065, file: !3, line: 1606, type: !4856)
!16067 = !DILocation(line: 1606, column: 58, scope: !16065)
!16068 = !DILocation(line: 1608, column: 11, scope: !16065)
!16069 = !DILocation(line: 1608, column: 16, scope: !16065)
!16070 = !DILocation(line: 1608, column: 21, scope: !16065)
!16071 = !DILocation(line: 1608, column: 9, scope: !16065)
!16072 = !DILocation(line: 1608, column: 2, scope: !16065)
!16073 = distinct !DISubprogram(name: "online_show", scope: !3, file: !3, line: 1997, type: !7466, scopeLine: 1999, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16074 = !DILocalVariable(name: "dev", arg: 1, scope: !16073, file: !3, line: 1997, type: !4856)
!16075 = !DILocation(line: 1997, column: 43, scope: !16073)
!16076 = !DILocalVariable(name: "attr", arg: 2, scope: !16073, file: !3, line: 1997, type: !7468)
!16077 = !DILocation(line: 1997, column: 73, scope: !16073)
!16078 = !DILocalVariable(name: "buf", arg: 3, scope: !16073, file: !3, line: 1998, type: !1038)
!16079 = !DILocation(line: 1998, column: 13, scope: !16073)
!16080 = !DILocalVariable(name: "val", scope: !16073, file: !3, line: 2000, type: !771)
!16081 = !DILocation(line: 2000, column: 7, scope: !16073)
!16082 = !DILocation(line: 2002, column: 14, scope: !16073)
!16083 = !DILocation(line: 2002, column: 2, scope: !16073)
!16084 = !DILocation(line: 2003, column: 9, scope: !16073)
!16085 = !DILocation(line: 2003, column: 14, scope: !16073)
!16086 = !DILocation(line: 2003, column: 8, scope: !16073)
!16087 = !DILocation(line: 2003, column: 6, scope: !16073)
!16088 = !DILocation(line: 2004, column: 16, scope: !16073)
!16089 = !DILocation(line: 2004, column: 2, scope: !16073)
!16090 = !DILocation(line: 2005, column: 20, scope: !16073)
!16091 = !DILocation(line: 2005, column: 33, scope: !16073)
!16092 = !DILocation(line: 2005, column: 9, scope: !16073)
!16093 = !DILocation(line: 2005, column: 2, scope: !16073)
!16094 = distinct !DISubprogram(name: "online_store", scope: !3, file: !3, line: 2008, type: !7471, scopeLine: 2010, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16095 = !DILocalVariable(name: "dev", arg: 1, scope: !16094, file: !3, line: 2008, type: !4856)
!16096 = !DILocation(line: 2008, column: 44, scope: !16094)
!16097 = !DILocalVariable(name: "attr", arg: 2, scope: !16094, file: !3, line: 2008, type: !7468)
!16098 = !DILocation(line: 2008, column: 74, scope: !16094)
!16099 = !DILocalVariable(name: "buf", arg: 3, scope: !16094, file: !3, line: 2009, type: !292)
!16100 = !DILocation(line: 2009, column: 20, scope: !16094)
!16101 = !DILocalVariable(name: "count", arg: 4, scope: !16094, file: !3, line: 2009, type: !1039)
!16102 = !DILocation(line: 2009, column: 32, scope: !16094)
!16103 = !DILocalVariable(name: "val", scope: !16094, file: !3, line: 2011, type: !771)
!16104 = !DILocation(line: 2011, column: 7, scope: !16094)
!16105 = !DILocalVariable(name: "ret", scope: !16094, file: !3, line: 2012, type: !32)
!16106 = !DILocation(line: 2012, column: 6, scope: !16094)
!16107 = !DILocation(line: 2014, column: 18, scope: !16094)
!16108 = !DILocation(line: 2014, column: 8, scope: !16094)
!16109 = !DILocation(line: 2014, column: 6, scope: !16094)
!16110 = !DILocation(line: 2015, column: 6, scope: !16111)
!16111 = distinct !DILexicalBlock(scope: !16094, file: !3, line: 2015, column: 6)
!16112 = !DILocation(line: 2015, column: 10, scope: !16111)
!16113 = !DILocation(line: 2015, column: 6, scope: !16094)
!16114 = !DILocation(line: 2016, column: 10, scope: !16111)
!16115 = !DILocation(line: 2016, column: 3, scope: !16111)
!16116 = !DILocation(line: 2018, column: 8, scope: !16094)
!16117 = !DILocation(line: 2018, column: 6, scope: !16094)
!16118 = !DILocation(line: 2019, column: 6, scope: !16119)
!16119 = distinct !DILexicalBlock(scope: !16094, file: !3, line: 2019, column: 6)
!16120 = !DILocation(line: 2019, column: 6, scope: !16094)
!16121 = !DILocation(line: 2020, column: 10, scope: !16119)
!16122 = !DILocation(line: 2020, column: 3, scope: !16119)
!16123 = !DILocation(line: 2022, column: 8, scope: !16094)
!16124 = !DILocation(line: 2022, column: 28, scope: !16094)
!16125 = !DILocation(line: 2022, column: 14, scope: !16094)
!16126 = !DILocation(line: 2022, column: 50, scope: !16094)
!16127 = !DILocation(line: 2022, column: 35, scope: !16094)
!16128 = !DILocation(line: 2022, column: 6, scope: !16094)
!16129 = !DILocation(line: 2023, column: 2, scope: !16094)
!16130 = !DILocation(line: 2024, column: 9, scope: !16094)
!16131 = !DILocation(line: 2024, column: 13, scope: !16094)
!16132 = !DILocation(line: 2024, column: 19, scope: !16094)
!16133 = !DILocation(line: 2024, column: 25, scope: !16094)
!16134 = !DILocation(line: 2024, column: 2, scope: !16094)
!16135 = !DILocation(line: 2025, column: 1, scope: !16094)
!16136 = distinct !DISubprogram(name: "dev_show", scope: !3, file: !3, line: 2237, type: !7466, scopeLine: 2239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16137 = !DILocalVariable(name: "dev", arg: 1, scope: !16136, file: !3, line: 2237, type: !4856)
!16138 = !DILocation(line: 2237, column: 40, scope: !16136)
!16139 = !DILocalVariable(name: "attr", arg: 2, scope: !16136, file: !3, line: 2237, type: !7468)
!16140 = !DILocation(line: 2237, column: 70, scope: !16136)
!16141 = !DILocalVariable(name: "buf", arg: 3, scope: !16136, file: !3, line: 2238, type: !1038)
!16142 = !DILocation(line: 2238, column: 10, scope: !16136)
!16143 = !DILocation(line: 2240, column: 9, scope: !16136)
!16144 = !DILocation(line: 2240, column: 2, scope: !16136)
!16145 = distinct !DISubprogram(name: "device_to_dev_kobj", scope: !3, file: !3, line: 2739, type: !7827, scopeLine: 2740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16146 = !DILocalVariable(name: "dev", arg: 1, scope: !16145, file: !3, line: 2739, type: !4856)
!16147 = !DILocation(line: 2739, column: 58, scope: !16145)
!16148 = !DILocalVariable(name: "kobj", scope: !16145, file: !3, line: 2741, type: !4579)
!16149 = !DILocation(line: 2741, column: 18, scope: !16145)
!16150 = !DILocation(line: 2743, column: 6, scope: !16151)
!16151 = distinct !DILexicalBlock(scope: !16145, file: !3, line: 2743, column: 6)
!16152 = !DILocation(line: 2743, column: 11, scope: !16151)
!16153 = !DILocation(line: 2743, column: 6, scope: !16145)
!16154 = !DILocation(line: 2744, column: 10, scope: !16151)
!16155 = !DILocation(line: 2744, column: 15, scope: !16151)
!16156 = !DILocation(line: 2744, column: 22, scope: !16151)
!16157 = !DILocation(line: 2744, column: 8, scope: !16151)
!16158 = !DILocation(line: 2744, column: 3, scope: !16151)
!16159 = !DILocation(line: 2746, column: 10, scope: !16151)
!16160 = !DILocation(line: 2746, column: 8, scope: !16151)
!16161 = !DILocation(line: 2748, column: 9, scope: !16145)
!16162 = !DILocation(line: 2748, column: 2, scope: !16145)
!16163 = distinct !DISubprogram(name: "device_link_wait_for_mandatory_supplier", scope: !3, file: !3, line: 724, type: !4915, scopeLine: 725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16164 = !DILocalVariable(name: "consumer", arg: 1, scope: !16163, file: !3, line: 724, type: !4856)
!16165 = !DILocation(line: 724, column: 68, scope: !16163)
!16166 = !DILocation(line: 726, column: 32, scope: !16163)
!16167 = !DILocation(line: 726, column: 2, scope: !16163)
!16168 = !DILocation(line: 727, column: 1, scope: !16163)
!16169 = distinct !DISubprogram(name: "device_link_wait_for_optional_supplier", scope: !3, file: !3, line: 729, type: !4915, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16170 = !DILocalVariable(name: "consumer", arg: 1, scope: !16169, file: !3, line: 729, type: !4856)
!16171 = !DILocation(line: 729, column: 67, scope: !16169)
!16172 = !DILocation(line: 731, column: 32, scope: !16169)
!16173 = !DILocation(line: 731, column: 2, scope: !16169)
!16174 = !DILocation(line: 732, column: 1, scope: !16169)
!16175 = distinct !DISubprogram(name: "device_link_wait_for_supplier", scope: !3, file: !3, line: 715, type: !5312, scopeLine: 717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16176 = !DILocalVariable(name: "consumer", arg: 1, scope: !16175, file: !3, line: 715, type: !4856)
!16177 = !DILocation(line: 715, column: 58, scope: !16175)
!16178 = !DILocalVariable(name: "need_for_probe", arg: 2, scope: !16175, file: !3, line: 716, type: !771)
!16179 = !DILocation(line: 716, column: 13, scope: !16175)
!16180 = !DILocation(line: 718, column: 2, scope: !16175)
!16181 = !DILocation(line: 719, column: 17, scope: !16175)
!16182 = !DILocation(line: 719, column: 27, scope: !16175)
!16183 = !DILocation(line: 719, column: 33, scope: !16175)
!16184 = !DILocation(line: 719, column: 2, scope: !16175)
!16185 = !DILocation(line: 720, column: 35, scope: !16175)
!16186 = !DILocation(line: 720, column: 2, scope: !16175)
!16187 = !DILocation(line: 720, column: 12, scope: !16175)
!16188 = !DILocation(line: 720, column: 18, scope: !16175)
!16189 = !DILocation(line: 720, column: 33, scope: !16175)
!16190 = !DILocation(line: 721, column: 2, scope: !16175)
!16191 = !DILocation(line: 722, column: 1, scope: !16175)
!16192 = distinct !DISubprogram(name: "live_in_glue_dir", scope: !3, file: !3, line: 2558, type: !16193, scopeLine: 2560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16193 = !DISubroutineType(types: !16194)
!16194 = !{!771, !4579, !4856}
!16195 = !DILocalVariable(name: "kobj", arg: 1, scope: !16192, file: !3, line: 2558, type: !4579)
!16196 = !DILocation(line: 2558, column: 53, scope: !16192)
!16197 = !DILocalVariable(name: "dev", arg: 2, scope: !16192, file: !3, line: 2559, type: !4856)
!16198 = !DILocation(line: 2559, column: 24, scope: !16192)
!16199 = !DILocation(line: 2561, column: 7, scope: !16200)
!16200 = distinct !DILexicalBlock(scope: !16192, file: !3, line: 2561, column: 6)
!16201 = !DILocation(line: 2561, column: 12, scope: !16200)
!16202 = !DILocation(line: 2561, column: 16, scope: !16200)
!16203 = !DILocation(line: 2561, column: 21, scope: !16200)
!16204 = !DILocation(line: 2561, column: 27, scope: !16200)
!16205 = !DILocation(line: 2562, column: 6, scope: !16200)
!16206 = !DILocation(line: 2562, column: 12, scope: !16200)
!16207 = !DILocation(line: 2562, column: 21, scope: !16200)
!16208 = !DILocation(line: 2562, column: 26, scope: !16200)
!16209 = !DILocation(line: 2562, column: 33, scope: !16200)
!16210 = !DILocation(line: 2562, column: 36, scope: !16200)
!16211 = !DILocation(line: 2562, column: 17, scope: !16200)
!16212 = !DILocation(line: 2561, column: 6, scope: !16192)
!16213 = !DILocation(line: 2563, column: 3, scope: !16200)
!16214 = !DILocation(line: 2564, column: 2, scope: !16192)
!16215 = !DILocation(line: 2565, column: 1, scope: !16192)
!16216 = distinct !DISubprogram(name: "kref_read", scope: !4847, file: !4847, line: 34, type: !16217, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16217 = !DISubroutineType(types: !16218)
!16218 = !{!7, !16219}
!16219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16220, size: 64)
!16220 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4846)
!16221 = !DILocalVariable(name: "kref", arg: 1, scope: !16216, file: !4847, line: 34, type: !16219)
!16222 = !DILocation(line: 34, column: 57, scope: !16216)
!16223 = !DILocation(line: 36, column: 24, scope: !16216)
!16224 = !DILocation(line: 36, column: 30, scope: !16216)
!16225 = !DILocation(line: 36, column: 9, scope: !16216)
!16226 = !DILocation(line: 36, column: 2, scope: !16216)
!16227 = distinct !DISubprogram(name: "kobject_has_children", scope: !4574, file: !4574, line: 131, type: !16228, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16228 = !DISubroutineType(types: !16229)
!16229 = !{!771, !4579}
!16230 = !DILocalVariable(name: "kobj", arg: 1, scope: !16227, file: !4574, line: 131, type: !4579)
!16231 = !DILocation(line: 131, column: 57, scope: !16227)
!16232 = !DILocalVariable(name: "__ret_warn_on", scope: !16233, file: !4574, line: 133, type: !32)
!16233 = distinct !DILexicalBlock(scope: !16227, file: !4574, line: 133, column: 2)
!16234 = !DILocation(line: 133, column: 2, scope: !16233)
!16235 = !DILocation(line: 133, column: 2, scope: !16236)
!16236 = distinct !DILexicalBlock(scope: !16233, file: !4574, line: 133, column: 2)
!16237 = !DILocation(line: 133, column: 2, scope: !16238)
!16238 = distinct !DILexicalBlock(scope: !16236, file: !4574, line: 133, column: 2)
!16239 = !DILocation(line: 133, column: 2, scope: !16240)
!16240 = distinct !DILexicalBlock(scope: !16238, file: !4574, line: 133, column: 2)
!16241 = !DILocation(line: 133, column: 2, scope: !16242)
!16242 = distinct !DILexicalBlock(scope: !16238, file: !4574, line: 133, column: 2)
!16243 = !{i32 -2144281951, i32 -2144281922, i32 -2144281876, i32 -2144281818, i32 -2144281764, i32 -2144281710, i32 -2144281655, i32 -2144281624}
!16244 = !DILocation(line: 133, column: 2, scope: !16245)
!16245 = distinct !DILexicalBlock(scope: !16238, file: !4574, line: 133, column: 2)
!16246 = !{i32 -2144281208, i32 -2144281201, i32 -2144281149, i32 -2144281118, i32 -2144281088}
!16247 = !DILocation(line: 133, column: 2, scope: !16248)
!16248 = distinct !DILexicalBlock(scope: !16238, file: !4574, line: 133, column: 2)
!16249 = !DILocation(line: 135, column: 9, scope: !16227)
!16250 = !DILocation(line: 135, column: 15, scope: !16227)
!16251 = !DILocation(line: 135, column: 18, scope: !16227)
!16252 = !DILocation(line: 135, column: 21, scope: !16227)
!16253 = !DILocation(line: 135, column: 27, scope: !16227)
!16254 = !DILocation(line: 135, column: 31, scope: !16227)
!16255 = !DILocation(line: 135, column: 35, scope: !16227)
!16256 = !DILocation(line: 0, scope: !16227)
!16257 = !DILocation(line: 135, column: 2, scope: !16227)
!16258 = distinct !DISubprogram(name: "refcount_read", scope: !569, file: !569, line: 145, type: !16259, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16259 = !DISubroutineType(types: !16260)
!16260 = !{!7, !16261}
!16261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16262, size: 64)
!16262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !568)
!16263 = !DILocation(line: 23, column: 61, scope: !8587, inlinedAt: !16264)
!16264 = distinct !DILocation(line: 28, column: 9, scope: !16265, inlinedAt: !16266)
!16265 = distinct !DISubprogram(name: "atomic_read", scope: !8573, file: !8573, line: 25, type: !8588, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16266 = distinct !DILocation(line: 147, column: 9, scope: !16258)
!16267 = !DILocalVariable(name: "v", arg: 1, scope: !16268, file: !8610, line: 69, type: !8613)
!16268 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !8610, file: !8610, line: 69, type: !8611, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16269 = !DILocation(line: 69, column: 73, scope: !16268, inlinedAt: !16270)
!16270 = distinct !DILocation(line: 27, column: 2, scope: !16265, inlinedAt: !16266)
!16271 = !DILocalVariable(name: "size", arg: 2, scope: !16268, file: !8610, line: 69, type: !1039)
!16272 = !DILocation(line: 69, column: 83, scope: !16268, inlinedAt: !16270)
!16273 = !DILocalVariable(name: "v", arg: 1, scope: !16265, file: !8573, line: 25, type: !8590)
!16274 = !DILocation(line: 25, column: 29, scope: !16265, inlinedAt: !16266)
!16275 = !DILocalVariable(name: "r", arg: 1, scope: !16258, file: !569, line: 145, type: !16261)
!16276 = !DILocation(line: 145, column: 60, scope: !16258)
!16277 = !DILocation(line: 147, column: 22, scope: !16258)
!16278 = !DILocation(line: 147, column: 25, scope: !16258)
!16279 = !DILocation(line: 27, column: 25, scope: !16265, inlinedAt: !16266)
!16280 = !DILocation(line: 71, column: 19, scope: !16268, inlinedAt: !16270)
!16281 = !DILocation(line: 71, column: 22, scope: !16268, inlinedAt: !16270)
!16282 = !DILocation(line: 71, column: 2, scope: !16268, inlinedAt: !16270)
!16283 = !DILocation(line: 72, column: 2, scope: !16268, inlinedAt: !16270)
!16284 = !DILocation(line: 28, column: 26, scope: !16265, inlinedAt: !16266)
!16285 = !DILocation(line: 29, column: 9, scope: !8587, inlinedAt: !16264)
!16286 = !DILocation(line: 147, column: 2, scope: !16258)
!16287 = distinct !DISubprogram(name: "kasan_check_read", scope: !14788, file: !14788, line: 34, type: !14789, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16288 = !DILocalVariable(name: "p", arg: 1, scope: !16287, file: !14788, line: 34, type: !8613)
!16289 = !DILocation(line: 34, column: 58, scope: !16287)
!16290 = !DILocalVariable(name: "size", arg: 2, scope: !16287, file: !14788, line: 34, type: !7)
!16291 = !DILocation(line: 34, column: 74, scope: !16287)
!16292 = !DILocation(line: 36, column: 2, scope: !16287)
!16293 = distinct !DISubprogram(name: "list_del", scope: !9076, file: !9076, line: 144, type: !9077, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16294 = !DILocalVariable(name: "entry", arg: 1, scope: !16293, file: !9076, line: 144, type: !287)
!16295 = !DILocation(line: 144, column: 47, scope: !16293)
!16296 = !DILocation(line: 146, column: 19, scope: !16293)
!16297 = !DILocation(line: 146, column: 2, scope: !16293)
!16298 = !DILocation(line: 147, column: 2, scope: !16293)
!16299 = !DILocation(line: 147, column: 9, scope: !16293)
!16300 = !DILocation(line: 147, column: 14, scope: !16293)
!16301 = !DILocation(line: 148, column: 2, scope: !16293)
!16302 = !DILocation(line: 148, column: 9, scope: !16293)
!16303 = !DILocation(line: 148, column: 14, scope: !16293)
!16304 = !DILocation(line: 149, column: 1, scope: !16293)
!16305 = distinct !DISubprogram(name: "dev_uevent_filter", scope: !3, file: !3, line: 1840, type: !4595, scopeLine: 1841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16306 = !DILocalVariable(name: "kset", arg: 1, scope: !16305, file: !3, line: 1840, type: !4581)
!16307 = !DILocation(line: 1840, column: 43, scope: !16305)
!16308 = !DILocalVariable(name: "kobj", arg: 2, scope: !16305, file: !3, line: 1840, type: !4579)
!16309 = !DILocation(line: 1840, column: 65, scope: !16305)
!16310 = !DILocalVariable(name: "ktype", scope: !16305, file: !3, line: 1842, type: !4621)
!16311 = !DILocation(line: 1842, column: 20, scope: !16305)
!16312 = !DILocation(line: 1842, column: 38, scope: !16305)
!16313 = !DILocation(line: 1842, column: 28, scope: !16305)
!16314 = !DILocation(line: 1844, column: 6, scope: !16315)
!16315 = distinct !DILexicalBlock(scope: !16305, file: !3, line: 1844, column: 6)
!16316 = !DILocation(line: 1844, column: 12, scope: !16315)
!16317 = !DILocation(line: 1844, column: 6, scope: !16305)
!16318 = !DILocalVariable(name: "dev", scope: !16319, file: !3, line: 1845, type: !4856)
!16319 = distinct !DILexicalBlock(scope: !16315, file: !3, line: 1844, column: 30)
!16320 = !DILocation(line: 1845, column: 18, scope: !16319)
!16321 = !DILocation(line: 1845, column: 36, scope: !16319)
!16322 = !DILocation(line: 1845, column: 24, scope: !16319)
!16323 = !DILocation(line: 1846, column: 7, scope: !16324)
!16324 = distinct !DILexicalBlock(scope: !16319, file: !3, line: 1846, column: 7)
!16325 = !DILocation(line: 1846, column: 12, scope: !16324)
!16326 = !DILocation(line: 1846, column: 7, scope: !16319)
!16327 = !DILocation(line: 1847, column: 4, scope: !16324)
!16328 = !DILocation(line: 1848, column: 7, scope: !16329)
!16329 = distinct !DILexicalBlock(scope: !16319, file: !3, line: 1848, column: 7)
!16330 = !DILocation(line: 1848, column: 12, scope: !16329)
!16331 = !DILocation(line: 1848, column: 7, scope: !16319)
!16332 = !DILocation(line: 1849, column: 4, scope: !16329)
!16333 = !DILocation(line: 1850, column: 2, scope: !16319)
!16334 = !DILocation(line: 1851, column: 2, scope: !16305)
!16335 = !DILocation(line: 1852, column: 1, scope: !16305)
!16336 = distinct !DISubprogram(name: "dev_uevent_name", scope: !3, file: !3, line: 1854, type: !4600, scopeLine: 1855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16337 = !DILocalVariable(name: "kset", arg: 1, scope: !16336, file: !3, line: 1854, type: !4581)
!16338 = !DILocation(line: 1854, column: 49, scope: !16336)
!16339 = !DILocalVariable(name: "kobj", arg: 2, scope: !16336, file: !3, line: 1854, type: !4579)
!16340 = !DILocation(line: 1854, column: 71, scope: !16336)
!16341 = !DILocalVariable(name: "dev", scope: !16336, file: !3, line: 1856, type: !4856)
!16342 = !DILocation(line: 1856, column: 17, scope: !16336)
!16343 = !DILocation(line: 1856, column: 35, scope: !16336)
!16344 = !DILocation(line: 1856, column: 23, scope: !16336)
!16345 = !DILocation(line: 1858, column: 6, scope: !16346)
!16346 = distinct !DILexicalBlock(scope: !16336, file: !3, line: 1858, column: 6)
!16347 = !DILocation(line: 1858, column: 11, scope: !16346)
!16348 = !DILocation(line: 1858, column: 6, scope: !16336)
!16349 = !DILocation(line: 1859, column: 10, scope: !16346)
!16350 = !DILocation(line: 1859, column: 15, scope: !16346)
!16351 = !DILocation(line: 1859, column: 20, scope: !16346)
!16352 = !DILocation(line: 1859, column: 3, scope: !16346)
!16353 = !DILocation(line: 1860, column: 6, scope: !16354)
!16354 = distinct !DILexicalBlock(scope: !16336, file: !3, line: 1860, column: 6)
!16355 = !DILocation(line: 1860, column: 11, scope: !16354)
!16356 = !DILocation(line: 1860, column: 6, scope: !16336)
!16357 = !DILocation(line: 1861, column: 10, scope: !16354)
!16358 = !DILocation(line: 1861, column: 15, scope: !16354)
!16359 = !DILocation(line: 1861, column: 22, scope: !16354)
!16360 = !DILocation(line: 1861, column: 3, scope: !16354)
!16361 = !DILocation(line: 1862, column: 2, scope: !16336)
!16362 = !DILocation(line: 1863, column: 1, scope: !16336)
!16363 = distinct !DISubprogram(name: "dev_uevent", scope: !3, file: !3, line: 1865, type: !4605, scopeLine: 1867, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16364 = !DILocalVariable(name: "kset", arg: 1, scope: !16363, file: !3, line: 1865, type: !4581)
!16365 = !DILocation(line: 1865, column: 36, scope: !16363)
!16366 = !DILocalVariable(name: "kobj", arg: 2, scope: !16363, file: !3, line: 1865, type: !4579)
!16367 = !DILocation(line: 1865, column: 58, scope: !16363)
!16368 = !DILocalVariable(name: "env", arg: 3, scope: !16363, file: !3, line: 1866, type: !4607)
!16369 = !DILocation(line: 1866, column: 33, scope: !16363)
!16370 = !DILocalVariable(name: "dev", scope: !16363, file: !3, line: 1868, type: !4856)
!16371 = !DILocation(line: 1868, column: 17, scope: !16363)
!16372 = !DILocation(line: 1868, column: 35, scope: !16363)
!16373 = !DILocation(line: 1868, column: 23, scope: !16363)
!16374 = !DILocalVariable(name: "retval", scope: !16363, file: !3, line: 1869, type: !32)
!16375 = !DILocation(line: 1869, column: 6, scope: !16363)
!16376 = !DILocation(line: 1872, column: 6, scope: !16377)
!16377 = distinct !DILexicalBlock(scope: !16363, file: !3, line: 1872, column: 6)
!16378 = !DILocation(line: 1872, column: 6, scope: !16363)
!16379 = !DILocalVariable(name: "tmp", scope: !16380, file: !3, line: 1873, type: !292)
!16380 = distinct !DILexicalBlock(scope: !16377, file: !3, line: 1872, column: 24)
!16381 = !DILocation(line: 1873, column: 15, scope: !16380)
!16382 = !DILocalVariable(name: "name", scope: !16380, file: !3, line: 1874, type: !292)
!16383 = !DILocation(line: 1874, column: 15, scope: !16380)
!16384 = !DILocalVariable(name: "mode", scope: !16380, file: !3, line: 1875, type: !1379)
!16385 = !DILocation(line: 1875, column: 11, scope: !16380)
!16386 = !DILocalVariable(name: "uid", scope: !16380, file: !3, line: 1876, type: !1382)
!16387 = !DILocation(line: 1876, column: 10, scope: !16380)
!16388 = !DILocalVariable(name: "gid", scope: !16380, file: !3, line: 1877, type: !1390)
!16389 = !DILocation(line: 1877, column: 10, scope: !16380)
!16390 = !DILocation(line: 1879, column: 18, scope: !16380)
!16391 = !DILocation(line: 1879, column: 35, scope: !16380)
!16392 = !DILocation(line: 1879, column: 3, scope: !16380)
!16393 = !DILocation(line: 1880, column: 18, scope: !16380)
!16394 = !DILocation(line: 1880, column: 35, scope: !16380)
!16395 = !DILocation(line: 1880, column: 3, scope: !16380)
!16396 = !DILocation(line: 1881, column: 29, scope: !16380)
!16397 = !DILocation(line: 1881, column: 10, scope: !16380)
!16398 = !DILocation(line: 1881, column: 8, scope: !16380)
!16399 = !DILocation(line: 1882, column: 7, scope: !16400)
!16400 = distinct !DILexicalBlock(scope: !16380, file: !3, line: 1882, column: 7)
!16401 = !DILocation(line: 1882, column: 7, scope: !16380)
!16402 = !DILocation(line: 1883, column: 19, scope: !16403)
!16403 = distinct !DILexicalBlock(scope: !16400, file: !3, line: 1882, column: 13)
!16404 = !DILocation(line: 1883, column: 38, scope: !16403)
!16405 = !DILocation(line: 1883, column: 4, scope: !16403)
!16406 = !DILocation(line: 1884, column: 8, scope: !16407)
!16407 = distinct !DILexicalBlock(scope: !16403, file: !3, line: 1884, column: 8)
!16408 = !DILocation(line: 1884, column: 8, scope: !16403)
!16409 = !DILocation(line: 1885, column: 20, scope: !16407)
!16410 = !DILocation(line: 1885, column: 40, scope: !16407)
!16411 = !DILocation(line: 1885, column: 45, scope: !16407)
!16412 = !DILocation(line: 1885, column: 5, scope: !16407)
!16413 = !DILocation(line: 1886, column: 21, scope: !16414)
!16414 = distinct !DILexicalBlock(scope: !16403, file: !3, line: 1886, column: 8)
!16415 = !DILocation(line: 1886, column: 9, scope: !16414)
!16416 = !DILocation(line: 1886, column: 8, scope: !16403)
!16417 = !DILocation(line: 1887, column: 20, scope: !16414)
!16418 = !DILocation(line: 1887, column: 38, scope: !16414)
!16419 = !DILocation(line: 1887, column: 5, scope: !16414)
!16420 = !DILocation(line: 1888, column: 21, scope: !16421)
!16421 = distinct !DILexicalBlock(scope: !16403, file: !3, line: 1888, column: 8)
!16422 = !DILocation(line: 1888, column: 9, scope: !16421)
!16423 = !DILocation(line: 1888, column: 8, scope: !16403)
!16424 = !DILocation(line: 1889, column: 20, scope: !16421)
!16425 = !DILocation(line: 1889, column: 38, scope: !16421)
!16426 = !DILocation(line: 1889, column: 5, scope: !16421)
!16427 = !DILocation(line: 1890, column: 10, scope: !16403)
!16428 = !DILocation(line: 1890, column: 4, scope: !16403)
!16429 = !DILocation(line: 1891, column: 3, scope: !16403)
!16430 = !DILocation(line: 1892, column: 2, scope: !16380)
!16431 = !DILocation(line: 1894, column: 6, scope: !16432)
!16432 = distinct !DILexicalBlock(scope: !16363, file: !3, line: 1894, column: 6)
!16433 = !DILocation(line: 1894, column: 11, scope: !16432)
!16434 = !DILocation(line: 1894, column: 16, scope: !16432)
!16435 = !DILocation(line: 1894, column: 19, scope: !16432)
!16436 = !DILocation(line: 1894, column: 24, scope: !16432)
!16437 = !DILocation(line: 1894, column: 30, scope: !16432)
!16438 = !DILocation(line: 1894, column: 6, scope: !16363)
!16439 = !DILocation(line: 1895, column: 18, scope: !16432)
!16440 = !DILocation(line: 1895, column: 37, scope: !16432)
!16441 = !DILocation(line: 1895, column: 42, scope: !16432)
!16442 = !DILocation(line: 1895, column: 48, scope: !16432)
!16443 = !DILocation(line: 1895, column: 3, scope: !16432)
!16444 = !DILocation(line: 1897, column: 6, scope: !16445)
!16445 = distinct !DILexicalBlock(scope: !16363, file: !3, line: 1897, column: 6)
!16446 = !DILocation(line: 1897, column: 11, scope: !16445)
!16447 = !DILocation(line: 1897, column: 6, scope: !16363)
!16448 = !DILocation(line: 1898, column: 18, scope: !16445)
!16449 = !DILocation(line: 1898, column: 36, scope: !16445)
!16450 = !DILocation(line: 1898, column: 41, scope: !16445)
!16451 = !DILocation(line: 1898, column: 49, scope: !16445)
!16452 = !DILocation(line: 1898, column: 3, scope: !16445)
!16453 = !DILocation(line: 1901, column: 19, scope: !16363)
!16454 = !DILocation(line: 1901, column: 24, scope: !16363)
!16455 = !DILocation(line: 1901, column: 2, scope: !16363)
!16456 = !DILocation(line: 1904, column: 6, scope: !16457)
!16457 = distinct !DILexicalBlock(scope: !16363, file: !3, line: 1904, column: 6)
!16458 = !DILocation(line: 1904, column: 11, scope: !16457)
!16459 = !DILocation(line: 1904, column: 15, scope: !16457)
!16460 = !DILocation(line: 1904, column: 18, scope: !16457)
!16461 = !DILocation(line: 1904, column: 23, scope: !16457)
!16462 = !DILocation(line: 1904, column: 28, scope: !16457)
!16463 = !DILocation(line: 1904, column: 6, scope: !16363)
!16464 = !DILocation(line: 1905, column: 12, scope: !16465)
!16465 = distinct !DILexicalBlock(scope: !16457, file: !3, line: 1904, column: 36)
!16466 = !DILocation(line: 1905, column: 17, scope: !16465)
!16467 = !DILocation(line: 1905, column: 22, scope: !16465)
!16468 = !DILocation(line: 1905, column: 29, scope: !16465)
!16469 = !DILocation(line: 1905, column: 34, scope: !16465)
!16470 = !DILocation(line: 1905, column: 10, scope: !16465)
!16471 = !DILocation(line: 1906, column: 7, scope: !16472)
!16472 = distinct !DILexicalBlock(scope: !16465, file: !3, line: 1906, column: 7)
!16473 = !DILocation(line: 1906, column: 7, scope: !16465)
!16474 = !DILocation(line: 1907, column: 4, scope: !16475)
!16475 = distinct !DILexicalBlock(scope: !16476, file: !3, line: 1907, column: 4)
!16476 = distinct !DILexicalBlock(scope: !16472, file: !3, line: 1907, column: 4)
!16477 = !DILocation(line: 1907, column: 4, scope: !16476)
!16478 = !DILocation(line: 1907, column: 4, scope: !16472)
!16479 = !DILocation(line: 1909, column: 2, scope: !16465)
!16480 = !DILocation(line: 1912, column: 6, scope: !16481)
!16481 = distinct !DILexicalBlock(scope: !16363, file: !3, line: 1912, column: 6)
!16482 = !DILocation(line: 1912, column: 11, scope: !16481)
!16483 = !DILocation(line: 1912, column: 17, scope: !16481)
!16484 = !DILocation(line: 1912, column: 20, scope: !16481)
!16485 = !DILocation(line: 1912, column: 25, scope: !16481)
!16486 = !DILocation(line: 1912, column: 32, scope: !16481)
!16487 = !DILocation(line: 1912, column: 6, scope: !16363)
!16488 = !DILocation(line: 1913, column: 12, scope: !16489)
!16489 = distinct !DILexicalBlock(scope: !16481, file: !3, line: 1912, column: 44)
!16490 = !DILocation(line: 1913, column: 17, scope: !16489)
!16491 = !DILocation(line: 1913, column: 24, scope: !16489)
!16492 = !DILocation(line: 1913, column: 35, scope: !16489)
!16493 = !DILocation(line: 1913, column: 40, scope: !16489)
!16494 = !DILocation(line: 1913, column: 10, scope: !16489)
!16495 = !DILocation(line: 1914, column: 7, scope: !16496)
!16496 = distinct !DILexicalBlock(scope: !16489, file: !3, line: 1914, column: 7)
!16497 = !DILocation(line: 1914, column: 7, scope: !16489)
!16498 = !DILocation(line: 1915, column: 4, scope: !16499)
!16499 = distinct !DILexicalBlock(scope: !16500, file: !3, line: 1915, column: 4)
!16500 = distinct !DILexicalBlock(scope: !16496, file: !3, line: 1915, column: 4)
!16501 = !DILocation(line: 1915, column: 4, scope: !16500)
!16502 = !DILocation(line: 1915, column: 4, scope: !16496)
!16503 = !DILocation(line: 1918, column: 2, scope: !16489)
!16504 = !DILocation(line: 1921, column: 6, scope: !16505)
!16505 = distinct !DILexicalBlock(scope: !16363, file: !3, line: 1921, column: 6)
!16506 = !DILocation(line: 1921, column: 11, scope: !16505)
!16507 = !DILocation(line: 1921, column: 16, scope: !16505)
!16508 = !DILocation(line: 1921, column: 19, scope: !16505)
!16509 = !DILocation(line: 1921, column: 24, scope: !16505)
!16510 = !DILocation(line: 1921, column: 30, scope: !16505)
!16511 = !DILocation(line: 1921, column: 6, scope: !16363)
!16512 = !DILocation(line: 1922, column: 12, scope: !16513)
!16513 = distinct !DILexicalBlock(scope: !16505, file: !3, line: 1921, column: 38)
!16514 = !DILocation(line: 1922, column: 17, scope: !16513)
!16515 = !DILocation(line: 1922, column: 23, scope: !16513)
!16516 = !DILocation(line: 1922, column: 30, scope: !16513)
!16517 = !DILocation(line: 1922, column: 35, scope: !16513)
!16518 = !DILocation(line: 1922, column: 10, scope: !16513)
!16519 = !DILocation(line: 1923, column: 7, scope: !16520)
!16520 = distinct !DILexicalBlock(scope: !16513, file: !3, line: 1923, column: 7)
!16521 = !DILocation(line: 1923, column: 7, scope: !16513)
!16522 = !DILocation(line: 1924, column: 4, scope: !16523)
!16523 = distinct !DILexicalBlock(scope: !16524, file: !3, line: 1924, column: 4)
!16524 = distinct !DILexicalBlock(scope: !16520, file: !3, line: 1924, column: 4)
!16525 = !DILocation(line: 1924, column: 4, scope: !16524)
!16526 = !DILocation(line: 1924, column: 4, scope: !16520)
!16527 = !DILocation(line: 1927, column: 2, scope: !16513)
!16528 = !DILocation(line: 1929, column: 9, scope: !16363)
!16529 = !DILocation(line: 1929, column: 2, scope: !16363)
!16530 = distinct !DISubprogram(name: "get_ktype", scope: !4574, file: !4574, line: 221, type: !16531, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16531 = !DISubroutineType(types: !16532)
!16532 = !{!4621, !4579}
!16533 = !DILocalVariable(name: "kobj", arg: 1, scope: !16530, file: !4574, line: 221, type: !4579)
!16534 = !DILocation(line: 221, column: 59, scope: !16530)
!16535 = !DILocation(line: 223, column: 9, scope: !16530)
!16536 = !DILocation(line: 223, column: 15, scope: !16530)
!16537 = !DILocation(line: 223, column: 2, scope: !16530)
!16538 = distinct !DISubprogram(name: "uid_eq", scope: !1383, file: !1383, line: 61, type: !16539, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16539 = !DISubroutineType(types: !16540)
!16540 = !{!771, !1382, !1382}
!16541 = !DILocalVariable(name: "left", arg: 1, scope: !16538, file: !1383, line: 61, type: !1382)
!16542 = !DILocation(line: 61, column: 34, scope: !16538)
!16543 = !DILocalVariable(name: "right", arg: 2, scope: !16538, file: !1383, line: 61, type: !1382)
!16544 = !DILocation(line: 61, column: 47, scope: !16538)
!16545 = !DILocation(line: 63, column: 9, scope: !16538)
!16546 = !DILocation(line: 63, column: 29, scope: !16538)
!16547 = !DILocation(line: 63, column: 26, scope: !16538)
!16548 = !DILocation(line: 63, column: 2, scope: !16538)
!16549 = distinct !DISubprogram(name: "from_kuid", scope: !1383, file: !1383, line: 153, type: !16550, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16550 = !DISubroutineType(types: !16551)
!16551 = !{!1387, !2781, !1382}
!16552 = !DILocalVariable(name: "to", arg: 1, scope: !16549, file: !1383, line: 153, type: !2781)
!16553 = !DILocation(line: 153, column: 54, scope: !16549)
!16554 = !DILocalVariable(name: "kuid", arg: 2, scope: !16549, file: !1383, line: 153, type: !1382)
!16555 = !DILocation(line: 153, column: 65, scope: !16549)
!16556 = !DILocation(line: 155, column: 9, scope: !16549)
!16557 = !DILocation(line: 155, column: 2, scope: !16549)
!16558 = distinct !DISubprogram(name: "gid_eq", scope: !1383, file: !1383, line: 66, type: !16559, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16559 = !DISubroutineType(types: !16560)
!16560 = !{!771, !1390, !1390}
!16561 = !DILocalVariable(name: "left", arg: 1, scope: !16558, file: !1383, line: 66, type: !1390)
!16562 = !DILocation(line: 66, column: 34, scope: !16558)
!16563 = !DILocalVariable(name: "right", arg: 2, scope: !16558, file: !1383, line: 66, type: !1390)
!16564 = !DILocation(line: 66, column: 47, scope: !16558)
!16565 = !DILocation(line: 68, column: 9, scope: !16558)
!16566 = !DILocation(line: 68, column: 29, scope: !16558)
!16567 = !DILocation(line: 68, column: 26, scope: !16558)
!16568 = !DILocation(line: 68, column: 2, scope: !16558)
!16569 = distinct !DISubprogram(name: "from_kgid", scope: !1383, file: !1383, line: 158, type: !16570, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16570 = !DISubroutineType(types: !16571)
!16571 = !{!1394, !2781, !1390}
!16572 = !DILocalVariable(name: "to", arg: 1, scope: !16569, file: !1383, line: 158, type: !2781)
!16573 = !DILocation(line: 158, column: 54, scope: !16569)
!16574 = !DILocalVariable(name: "kgid", arg: 2, scope: !16569, file: !1383, line: 158, type: !1390)
!16575 = !DILocation(line: 158, column: 65, scope: !16569)
!16576 = !DILocation(line: 160, column: 9, scope: !16569)
!16577 = !DILocation(line: 160, column: 2, scope: !16569)
!16578 = distinct !DISubprogram(name: "__kuid_val", scope: !1383, file: !1383, line: 34, type: !16579, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16579 = !DISubroutineType(types: !16580)
!16580 = !{!1387, !1382}
!16581 = !DILocalVariable(name: "uid", arg: 1, scope: !16578, file: !1383, line: 34, type: !1382)
!16582 = !DILocation(line: 34, column: 39, scope: !16578)
!16583 = !DILocation(line: 36, column: 13, scope: !16578)
!16584 = !DILocation(line: 36, column: 2, scope: !16578)
!16585 = distinct !DISubprogram(name: "__kgid_val", scope: !1383, file: !1383, line: 39, type: !16586, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16586 = !DISubroutineType(types: !16587)
!16587 = !{!1394, !1390}
!16588 = !DILocalVariable(name: "gid", arg: 1, scope: !16585, file: !1383, line: 39, type: !1390)
!16589 = !DILocation(line: 39, column: 39, scope: !16585)
!16590 = !DILocation(line: 41, column: 13, scope: !16585)
!16591 = !DILocation(line: 41, column: 2, scope: !16585)
!16592 = distinct !DISubprogram(name: "device_create_release", scope: !3, file: !3, line: 3550, type: !4915, scopeLine: 3551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16593 = !DILocalVariable(name: "dev", arg: 1, scope: !16592, file: !3, line: 3550, type: !4856)
!16594 = !DILocation(line: 3550, column: 50, scope: !16592)
!16595 = !DILocation(line: 3552, column: 2, scope: !16596)
!16596 = distinct !DILexicalBlock(scope: !16597, file: !3, line: 3552, column: 2)
!16597 = distinct !DILexicalBlock(scope: !16592, file: !3, line: 3552, column: 2)
!16598 = !DILocation(line: 3552, column: 2, scope: !16597)
!16599 = !DILocation(line: 3553, column: 8, scope: !16592)
!16600 = !DILocation(line: 3553, column: 2, scope: !16592)
!16601 = !DILocation(line: 3554, column: 1, scope: !16592)
!16602 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !4570, file: !4570, line: 660, type: !10864, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16603 = !DILocalVariable(name: "dev", arg: 1, scope: !16602, file: !4570, line: 660, type: !4856)
!16604 = !DILocation(line: 660, column: 51, scope: !16602)
!16605 = !DILocalVariable(name: "data", arg: 2, scope: !16602, file: !4570, line: 660, type: !591)
!16606 = !DILocation(line: 660, column: 62, scope: !16602)
!16607 = !DILocation(line: 662, column: 21, scope: !16602)
!16608 = !DILocation(line: 662, column: 2, scope: !16602)
!16609 = !DILocation(line: 662, column: 7, scope: !16602)
!16610 = !DILocation(line: 662, column: 19, scope: !16602)
!16611 = !DILocation(line: 663, column: 1, scope: !16602)
!16612 = distinct !DISubprogram(name: "list_move", scope: !9076, file: !9076, line: 213, type: !9183, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16613 = !DILocalVariable(name: "list", arg: 1, scope: !16612, file: !9076, line: 213, type: !287)
!16614 = !DILocation(line: 213, column: 48, scope: !16612)
!16615 = !DILocalVariable(name: "head", arg: 2, scope: !16612, file: !9076, line: 213, type: !287)
!16616 = !DILocation(line: 213, column: 72, scope: !16612)
!16617 = !DILocation(line: 215, column: 19, scope: !16612)
!16618 = !DILocation(line: 215, column: 2, scope: !16612)
!16619 = !DILocation(line: 216, column: 11, scope: !16612)
!16620 = !DILocation(line: 216, column: 17, scope: !16612)
!16621 = !DILocation(line: 216, column: 2, scope: !16612)
!16622 = !DILocation(line: 217, column: 1, scope: !16612)
!16623 = distinct !DISubprogram(name: "list_add", scope: !9076, file: !9076, line: 84, type: !9183, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16624 = !DILocalVariable(name: "new", arg: 1, scope: !16623, file: !9076, line: 84, type: !287)
!16625 = !DILocation(line: 84, column: 47, scope: !16623)
!16626 = !DILocalVariable(name: "head", arg: 2, scope: !16623, file: !9076, line: 84, type: !287)
!16627 = !DILocation(line: 84, column: 70, scope: !16623)
!16628 = !DILocation(line: 86, column: 13, scope: !16623)
!16629 = !DILocation(line: 86, column: 18, scope: !16623)
!16630 = !DILocation(line: 86, column: 24, scope: !16623)
!16631 = !DILocation(line: 86, column: 30, scope: !16623)
!16632 = !DILocation(line: 86, column: 2, scope: !16623)
!16633 = !DILocation(line: 87, column: 1, scope: !16623)
