; ModuleID = '../bcout/drivers/gpio/gpiolib.llvm.bc'
source_filename = "drivers/gpio/gpiolib.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall1.init\22, \22a\22\09"
module asm "__initcall_gpiolib_dev_init1:\09\09\09"
module asm ".long\09gpiolib_dev_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.66, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.66 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.64, %struct.list_head, %struct.list_head, %union.anon.65 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.62 }
%union.anon.62 = type { %struct.anon.63 }
%struct.anon.63 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.2, %union.anon.54, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.54 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.55, i32 }
%union.anon.55 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.48, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.34, %union.anon.35, i32 }
%struct.request_queue = type opaque
%union.anon.34 = type { %struct.list_head }
%union.anon.35 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.36 }
%struct.anon.36 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.40 }
%struct.anon.40 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.47, i32, [12 x i8] }
%union.anon.47 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.48 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.49, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.52 }
%union.anon.49 = type { %struct.anon.50 }
%struct.anon.50 = type { i64, i64 }
%union.anon.52 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.64 = type { %struct.list_head }
%union.anon.65 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.56, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.57, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.58, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.61, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.56 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.57 = type { %struct.callback_head }
%union.anon.58 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.61 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.59 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.59 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.33 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.33 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.vm_operations_struct = type opaque
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type { i32, i32, i64, %struct.irq_common_data*, %struct.irq_chip*, %struct.irq_domain*, %struct.irq_data*, i8* }
%struct.irq_common_data = type { i32, i8*, %struct.msi_desc*, [1 x %struct.cpumask] }
%struct.msi_desc = type opaque
%struct.irq_chip = type { %struct.device*, i8*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, i32 (%struct.irq_data*, %struct.cpumask*, i1)*, i32 (%struct.irq_data*)*, i32 (%struct.irq_data*, i32)*, i32 (%struct.irq_data*, i32)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.seq_file*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.msi_msg*)*, void (%struct.irq_data*, %struct.msi_msg*)*, i32 (%struct.irq_data*, i32, i8*)*, i32 (%struct.irq_data*, i32, i1)*, i32 (%struct.irq_data*, i8*)*, void (%struct.irq_data*, i32)*, void (%struct.irq_data*, %struct.cpumask*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, i64 }
%struct.msi_msg = type opaque
%struct.irq_domain_chip_generic = type { i32, i32, i32, i32, i32, [0 x %struct.irq_chip_generic*] }
%struct.irq_chip_generic = type { %struct.raw_spinlock, i8*, i32 (i8*)*, void (i32, i8*)*, void (%struct.irq_chip_generic*)*, void (%struct.irq_chip_generic*)*, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64, i64, %struct.irq_domain*, %struct.list_head, [0 x %struct.irq_chip_type] }
%struct.irq_chip_type = type { %struct.irq_chip, %struct.irq_chip_regs, void (%struct.irq_desc*)*, i32, i32, i32* }
%struct.irq_chip_regs = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.irq_desc = type { %struct.irq_common_data, %struct.irq_data, i32*, {}*, %struct.irqaction*, i32, i32, i32, i32, i32, i32, i64, i32, %struct.atomic_t, i32, %struct.raw_spinlock, %struct.cpumask*, %struct.cpumask*, i64, %struct.atomic_t, %struct.wait_queue_head, i32, i32, i32, i32, %struct.proc_dir_entry*, %struct.callback_head, %struct.kobject, %struct.mutex, i32, %struct.module*, i8* }
%struct.irqaction = type { i32 (i32, i8*)*, i8*, i8*, %struct.irqaction*, i32 (i32, i8*)*, %struct.task_struct*, %struct.irqaction*, i32, i32, i64, i64, i8*, %struct.proc_dir_entry* }
%struct.proc_dir_entry = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.lock_class_key = type {}
%struct.ida = type { %struct.xarray }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.pte_t = type { i64 }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.kmem_cache = type opaque
%struct.gpio_desc = type { %struct.gpio_device*, i64, i8*, i8*, i32 }
%struct.gpio_device = type { i32, %struct.device, %struct.cdev, %struct.device*, %struct.module*, %struct.gpio_chip*, %struct.gpio_desc*, i32, i16, i8*, i8*, %struct.list_head, %struct.blocking_notifier_head }
%struct.cdev = type { %struct.kobject, %struct.module*, %struct.file_operations*, %struct.list_head, i32, i32 }
%struct.gpio_chip = type { i8*, %struct.gpio_device*, %struct.device*, %struct.module*, i32 (%struct.gpio_chip*, i32)*, void (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32, i32)*, i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i64*, i64*)*, void (%struct.gpio_chip*, i32, i32)*, void (%struct.gpio_chip*, i64*, i64*)*, i32 (%struct.gpio_chip*, i32, i64)*, i32 (%struct.gpio_chip*, i32)*, void (%struct.seq_file*, %struct.gpio_chip*)*, i32 (%struct.gpio_chip*, i64*, i32)*, i32 (%struct.gpio_chip*)*, i32, i16, i8**, i8, i64 (i8*)*, void (i8*, i64)*, i8, i8*, i8*, i8*, i8*, i8*, i8, i32, %struct.spinlock, i64, i64, %struct.gpio_irq_chip, i64*, %struct.device_node*, i32, i32 (%struct.gpio_chip*, %struct.of_phandle_args*, i32*)* }
%struct.gpio_irq_chip = type { %struct.irq_chip*, %struct.irq_domain*, %struct.irq_domain_ops*, %struct.fwnode_handle*, %struct.irq_domain*, i32 (%struct.gpio_chip*, i32, i32, i32*, i32*)*, i8* (%struct.gpio_chip*, i32, i32)*, i32 (%struct.gpio_chip*, i32)*, %struct.irq_domain_ops, void (%struct.irq_desc*)*, i32, %struct.lock_class_key*, %struct.lock_class_key*, void (%struct.irq_desc*)*, i8*, i32, i32*, i32*, i8, i32 (%struct.gpio_chip*)*, void (%struct.gpio_chip*, i64*, i32)*, i64*, i32, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)* }
%struct.of_phandle_args = type { %struct.device_node*, i32, [16 x i32] }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.gpiod_hog = type { %struct.list_head, i8*, i16, i8*, i64, i32 }
%struct.acpi_device = type { i32, i8*, %struct.fwnode_handle, %struct.acpi_device*, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.acpi_device_status, %struct.acpi_device_flags, %struct.acpi_device_pnp, %struct.acpi_device_power, %struct.acpi_device_wakeup, %struct.acpi_device_perf, %struct.acpi_device_dir, %struct.acpi_device_data, %struct.acpi_scan_handler*, %struct.acpi_hotplug_context*, %struct.acpi_driver*, %struct.acpi_gpio_mapping*, i8*, %struct.device, i32, i32, %struct.list_head, %struct.mutex, void (%struct.acpi_device*)* }
%struct.acpi_device_status = type { i32 }
%struct.acpi_device_flags = type { i32 }
%struct.acpi_device_pnp = type { [8 x i8], %struct.acpi_pnp_type, i64, i8*, %struct.list_head, [40 x i8], [20 x i8], %union.acpi_object* }
%struct.acpi_pnp_type = type { i32 }
%union.acpi_object = type { %struct.anon.72 }
%struct.anon.72 = type { i32, i32, i64, i32 }
%struct.acpi_device_power = type { i32, %struct.acpi_device_power_flags, [5 x %struct.acpi_device_power_state] }
%struct.acpi_device_power_flags = type { i32 }
%struct.acpi_device_power_state = type { %struct.anon.74, i32, i32, %struct.list_head }
%struct.anon.74 = type { i8 }
%struct.acpi_device_wakeup = type { i8*, i64, i64, %struct.list_head, %struct.acpi_device_wakeup_flags, %struct.acpi_device_wakeup_context, %struct.wakeup_source*, i32, i32 }
%struct.acpi_device_wakeup_flags = type { i8 }
%struct.acpi_device_wakeup_context = type { void (%struct.acpi_device_wakeup_context*)*, %struct.device* }
%struct.acpi_device_perf = type { i32, %struct.acpi_device_perf_flags, i32, %struct.acpi_device_perf_state* }
%struct.acpi_device_perf_flags = type { i8 }
%struct.acpi_device_perf_state = type { %struct.anon.75, i8, i8, i32 }
%struct.anon.75 = type { i8 }
%struct.acpi_device_dir = type { %struct.proc_dir_entry* }
%struct.acpi_device_data = type { %union.acpi_object*, %struct.list_head, %union.acpi_object*, %struct.list_head }
%struct.acpi_scan_handler = type { %struct.acpi_device_id*, %struct.list_head, i1 (i8*, %struct.acpi_device_id**)*, i32 (%struct.acpi_device*, %struct.acpi_device_id*)*, void (%struct.acpi_device*)*, void (%struct.device*)*, void (%struct.device*)*, %struct.acpi_hotplug_profile }
%struct.acpi_hotplug_profile = type { %struct.kobject, i32 (%struct.acpi_device*)*, void (%struct.acpi_device*)*, i8 }
%struct.acpi_hotplug_context = type { %struct.acpi_device*, i32 (%struct.acpi_device*, i32)*, void (%struct.acpi_device*, i32)*, void (%struct.acpi_device*)* }
%struct.acpi_driver = type { [80 x i8], [80 x i8], %struct.acpi_device_id*, i32, %struct.acpi_device_ops, %struct.device_driver, %struct.module* }
%struct.acpi_device_ops = type { i32 (%struct.acpi_device*)*, i32 (%struct.acpi_device*)*, void (%struct.acpi_device*, i32)* }
%struct.acpi_gpio_mapping = type { i8*, %struct.acpi_gpio_params*, i32, i32 }
%struct.acpi_gpio_params = type { i32, i32, i8 }
%struct.gpio_array = type { %struct.gpio_desc**, i32, %struct.gpio_chip*, i64*, i64*, [0 x i64] }
%struct.gpiod_lookup_table = type { %struct.list_head, i8*, [0 x %struct.gpiod_lookup] }
%struct.gpiod_lookup = type { i8*, i16, i8*, i32, i64 }
%struct.acpi_gpio_info = type { %struct.acpi_device*, i32, i8, i32, i32, i32, i32 }
%struct.gpio_descs = type { %struct.gpio_array*, i32, [0 x %struct.gpio_desc*] }
%struct.irq_affinity_desc = type { %struct.cpumask, i8 }

@gpio_lock = dso_local global %struct.spinlock undef, align 1, !dbg !0
@gpio_devices = dso_local global %struct.list_head { %struct.list_head* @gpio_devices, %struct.list_head* @gpio_devices }, align 8, !dbg !4586
@.str = private unnamed_addr constant [17 x i8] c"invalid GPIO %d\0A\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"drivers/gpio/gpiolib.c\00", align 1
@gpio_bus_type = internal global %struct.bus_type { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0), i8* null, %struct.device* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.attribute_group** null, i32 (%struct.device*, %struct.device_driver*)* null, i32 (%struct.device*, %struct.kobj_uevent_env*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, %struct.dev_pm_ops* null, %struct.iommu_ops* null, %struct.subsys_private* null, %struct.lock_class_key zeroinitializer, i8 0 }, align 8, !dbg !4597
@gpio_ida = internal global %struct.ida { %struct.xarray { %struct.spinlock undef, i32 8388613, i8* null } }, align 8, !dbg !4599
@.str.2 = private unnamed_addr constant [11 x i8] c"gpiochip%d\00", align 1
@.str.3 = private unnamed_addr constant [51 x i8] c"(%s): tried to insert a GPIO chip with zero lines\0A\00", align 1
@.str.4 = private unnamed_addr constant [52 x i8] c"(%s): line cnt %u is greater than fast path cnt %u\0A\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@gpiochip_add_data_with_key.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4588
@.str.6 = private unnamed_addr constant [26 x i8] c"&(&gdev->notifier)->rwsem\00", align 1
@gpiolib_initialized = internal global i8 0, align 1, !dbg !4595
@.str.7 = private unnamed_addr constant [48 x i8] c"\013%s: GPIOs %d..%d (%s) failed to register, %d\0A\00", align 1
@__func__.gpiochip_add_data_with_key = private unnamed_addr constant [27 x i8] c"gpiochip_add_data_with_key\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"generic\00", align 1
@.str.9 = private unnamed_addr constant [46 x i8] c"REMOVING GPIOCHIP WITH GPIOS STILL REQUESTED\0A\00", align 1
@.str.10 = private unnamed_addr constant [44 x i8] c"(%s): missing gpiochip .dev parent pointer\0A\00", align 1
@.str.11 = private unnamed_addr constant [35 x i8] c"%pOF: Ignoring %d default trigger\0A\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"\014\00", align 1
@.str.13 = private unnamed_addr constant [29 x i8] c"Ignoring %d default trigger\0A\00", align 1
@gpiochip_domain_ops = internal constant %struct.irq_domain_ops { i32 (%struct.irq_domain*, %struct.device_node*, i32)* null, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)* null, i32 (%struct.irq_domain*, i32, i64)* @gpiochip_irq_map, void (%struct.irq_domain*, i32)* @gpiochip_irq_unmap, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)* @irq_domain_xlate_twocell, i32 (%struct.irq_domain*, i32, i32, i8*)* null, void (%struct.irq_domain*, i32, i32)* null, i32 (%struct.irq_domain*, %struct.irq_data*, i1)* null, void (%struct.irq_domain*, %struct.irq_data*)* null, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* null }, align 8, !dbg !4606
@__func__.gpiod_request = private unnamed_addr constant [14 x i8] c"gpiod_request\00", align 1
@.str.14 = private unnamed_addr constant [37 x i8] c"(%s): failed to get GPIO descriptor\0A\00", align 1
@.str.15 = private unnamed_addr constant [35 x i8] c"(%s): setup of own GPIO %s failed\0A\00", align 1
@__func__.gpiod_direction_input = private unnamed_addr constant [22 x i8] c"gpiod_direction_input\00", align 1
@.str.16 = private unnamed_addr constant [62 x i8] c"\014gpio-%d (%s): %s: missing get() but have direction_input()\0A\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.18 = private unnamed_addr constant [76 x i8] c"\014gpio-%d (%s): %s: missing direction_input() operation and line is output\0A\00", align 1
@__func__.gpiod_direction_output_raw = private unnamed_addr constant [27 x i8] c"gpiod_direction_output_raw\00", align 1
@__func__.gpiod_direction_output = private unnamed_addr constant [23 x i8] c"gpiod_direction_output\00", align 1
@.str.19 = private unnamed_addr constant [66 x i8] c"\013gpio-%d (%s): %s: tried to set a GPIO tied to an IRQ as output\0A\00", align 1
@__func__.gpiod_set_config = private unnamed_addr constant [17 x i8] c"gpiod_set_config\00", align 1
@__func__.gpiod_set_transitory = private unnamed_addr constant [21 x i8] c"gpiod_set_transitory\00", align 1
@__func__.gpiod_is_active_low = private unnamed_addr constant [20 x i8] c"gpiod_is_active_low\00", align 1
@__func__.gpiod_toggle_active_low = private unnamed_addr constant [24 x i8] c"gpiod_toggle_active_low\00", align 1
@__func__.gpiod_get_raw_value = private unnamed_addr constant [20 x i8] c"gpiod_get_raw_value\00", align 1
@__func__.gpiod_get_value = private unnamed_addr constant [16 x i8] c"gpiod_get_value\00", align 1
@__func__.gpiod_set_raw_value = private unnamed_addr constant [20 x i8] c"gpiod_set_raw_value\00", align 1
@__func__.gpiod_set_value = private unnamed_addr constant [16 x i8] c"gpiod_set_value\00", align 1
@__func__.gpiod_cansleep = private unnamed_addr constant [15 x i8] c"gpiod_cansleep\00", align 1
@__func__.gpiod_set_consumer_name = private unnamed_addr constant [24 x i8] c"gpiod_set_consumer_name\00", align 1
@.str.20 = private unnamed_addr constant [37 x i8] c"(%s): %s: cannot get GPIO direction\0A\00", align 1
@__func__.gpiochip_lock_as_irq = private unnamed_addr constant [21 x i8] c"gpiochip_lock_as_irq\00", align 1
@.str.21 = private unnamed_addr constant [54 x i8] c"(%s): %s: tried to flag a GPIO set as output for IRQ\0A\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"interrupt\00", align 1
@.str.23 = private unnamed_addr constant [40 x i8] c"(%s): unable to lock HW IRQ %u for IRQ\0A\00", align 1
@__func__.gpiod_get_raw_value_cansleep = private unnamed_addr constant [29 x i8] c"gpiod_get_raw_value_cansleep\00", align 1
@__func__.gpiod_get_value_cansleep = private unnamed_addr constant [25 x i8] c"gpiod_get_value_cansleep\00", align 1
@__func__.gpiod_set_raw_value_cansleep = private unnamed_addr constant [29 x i8] c"gpiod_set_raw_value_cansleep\00", align 1
@__func__.gpiod_set_value_cansleep = private unnamed_addr constant [25 x i8] c"gpiod_set_value_cansleep\00", align 1
@gpio_lookup_lock = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @gpio_lookup_lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @gpio_lookup_lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !4608
@gpio_lookup_list = internal global %struct.list_head { %struct.list_head* @gpio_lookup_list, %struct.list_head* @gpio_lookup_list }, align 8, !dbg !4610
@gpio_machine_hogs_mutex = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @gpio_machine_hogs_mutex to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @gpio_machine_hogs_mutex to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !4612
@gpio_machine_hogs = internal global %struct.list_head { %struct.list_head* @gpio_machine_hogs, %struct.list_head* @gpio_machine_hogs }, align 8, !dbg !4614
@.str.24 = private unnamed_addr constant [6 x i8] c"%s-%s\00", align 1
@gpio_suffixes = internal constant [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0)], align 16, !dbg !4616
@.str.25 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.26 = private unnamed_addr constant [88 x i8] c"\014gpio-%d (%s): enforced open drain please flag it properly in DT/ACPI DSDT/board file\0A\00", align 1
@.str.27 = private unnamed_addr constant [75 x i8] c"\013gpio-%d (%s): both pull-up and pull-down enabled, invalid configuration\0A\00", align 1
@.str.28 = private unnamed_addr constant [36 x i8] c"nonexclusive access to GPIO for %s\0A\00", align 1
@.str.29 = private unnamed_addr constant [58 x i8] c"\013requesting hog GPIO %s (chip %s, offset %d) failed, %d\0A\00", align 1
@.str.30 = private unnamed_addr constant [32 x i8] c"\016gpio-%d (%s): hogged as %s%s\0A\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"output\00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c"input\00", align 1
@.str.33 = private unnamed_addr constant [6 x i8] c"/high\00", align 1
@.str.34 = private unnamed_addr constant [5 x i8] c"/low\00", align 1
@.str.35 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@__UNIQUE_ID___addressable_gpiolib_dev_init261 = internal global i8* bitcast (i32 ()* @gpiolib_dev_init to i8*), section ".discard.addressable", align 8, !dbg !4593
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.36 = private unnamed_addr constant [5 x i8] c"gpio\00", align 1
@.str.37 = private unnamed_addr constant [30 x i8] c"\013%s: cannot find free range\0A\00", align 1
@__func__.gpiochip_find_base = private unnamed_addr constant [19 x i8] c"gpiochip_find_base\00", align 1
@.str.38 = private unnamed_addr constant [45 x i8] c"GPIO integer space overlap, cannot add chip\0A\00", align 1
@.str.39 = private unnamed_addr constant [44 x i8] c"Detected name collision for GPIO name '%s'\0A\00", align 1
@.str.40 = private unnamed_addr constant [16 x i8] c"gpio-line-names\00", align 1
@.str.41 = private unnamed_addr constant [61 x i8] c"gpio-line-names is length %d but should be at most length %d\00", align 1
@.str.42 = private unnamed_addr constant [32 x i8] c"failed to read GPIO line names\0A\00", align 1
@gpio_devt = internal global i32 0, align 4, !dbg !4604
@.str.43 = private unnamed_addr constant [43 x i8] c"(%s): called %s before setting up irqchip\0A\00", align 1
@__func__.gpiochip_set_cascaded_irqchip = private unnamed_addr constant [30 x i8] c"gpiochip_set_cascaded_irqchip\00", align 1
@.str.44 = private unnamed_addr constant [67 x i8] c"(%s): you cannot have chained interrupts on a chip that may sleep\0A\00", align 1
@.str.45 = private unnamed_addr constant [43 x i8] c"(%s): out of memory allocating parent IRQ\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.46 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.47 = private unnamed_addr constant [33 x i8] c"%s: Ignoring %u default trigger\0A\00", align 1
@.str.48 = private unnamed_addr constant [29 x i8] c"Ignoring %u default trigger\0A\00", align 1
@.str.49 = private unnamed_addr constant [36 x i8] c"(%s): missing irqdomain vital data\0A\00", align 1
@.str.50 = private unnamed_addr constant [31 x i8] c"(%s): can't look up hwirq %lu\0A\00", align 1
@.str.51 = private unnamed_addr constant [56 x i8] c"(%s): failed to allocate parent hwirq %d for hwirq %lu\0A\00", align 1
@irqchip_fwnode_ops = external dso_local constant %struct.fwnode_operations, align 8
@.str.52 = private unnamed_addr constant [31 x i8] c"(%s): skip set-up on hwirq %d\0A\00", align 1
@.str.53 = private unnamed_addr constant [85 x i8] c"(%s): can not allocate irq for GPIO line %d parent hwirq %d in hierarchy domain: %d\0A\00", align 1
@.str.54 = private unnamed_addr constant [45 x i8] c"(%s): %s unknown fwnode type proceed anyway\0A\00", align 1
@__func__.gpiochip_set_hierarchical_irqchip = private unnamed_addr constant [34 x i8] c"gpiochip_set_hierarchical_irqchip\00", align 1
@.str.55 = private unnamed_addr constant [87 x i8] c"(%s): detected irqchip that is shared with multiple gpiochips: please fix the driver.\0A\00", align 1
@.str.56 = private unnamed_addr constant [35 x i8] c"\014%s: invalid GPIO (errorpointer)\0A\00", align 1
@.str.57 = private unnamed_addr constant [32 x i8] c"\014%s: invalid GPIO (no device)\0A\00", align 1
@.str.58 = private unnamed_addr constant [26 x i8] c"%s: backing chip is gone\0A\00", align 1
@.str.59 = private unnamed_addr constant [69 x i8] c"\014gpio-%d (%s): %s: missing set() and direction_output() operations\0A\00", align 1
@__func__.gpiod_direction_output_raw_commit = private unnamed_addr constant [34 x i8] c"gpiod_direction_output_raw_commit\00", align 1
@.str.60 = private unnamed_addr constant [58 x i8] c"\014gpio-%d (%s): %s: missing direction_output() operation\0A\00", align 1
@.str.61 = private unnamed_addr constant [62 x i8] c"\013gpio-%d (%s): %s: Error in set_value for open drain err %d\0A\00", align 1
@__func__.gpio_set_open_drain_value_commit = private unnamed_addr constant [33 x i8] c"gpio_set_open_drain_value_commit\00", align 1
@.str.62 = private unnamed_addr constant [63 x i8] c"\013gpio-%d (%s): %s: Error in set_value for open source err %d\0A\00", align 1
@__func__.gpio_set_open_source_value_commit = private unnamed_addr constant [34 x i8] c"gpio_set_open_source_value_commit\00", align 1
@.str.63 = private unnamed_addr constant [40 x i8] c"(%s): %s: unable to get GPIO desc: %ld\0A\00", align 1
@__func__.gpiochip_machine_hog = private unnamed_addr constant [21 x i8] c"gpiochip_machine_hog\00", align 1
@.str.64 = private unnamed_addr constant [57 x i8] c"\013gpio-%d (%s): %s: unable to hog GPIO line (%s:%u): %d\0A\00", align 1
@.str.65 = private unnamed_addr constant [6 x i8] c"gpios\00", align 1
@.str.66 = private unnamed_addr constant [37 x i8] c"cannot find GPIO line %s, deferring\0A\00", align 1
@.str.67 = private unnamed_addr constant [37 x i8] c"cannot find GPIO chip %s, deferring\0A\00", align 1
@.str.68 = private unnamed_addr constant [60 x i8] c"requested GPIO %u (%u) is out of range [0..%u] for chip %s\0A\00", align 1
@of_fwnode_ops = external dso_local constant %struct.fwnode_operations, align 8
@.str.69 = private unnamed_addr constant [45 x i8] c"\013gpiolib: could not register GPIO bus type\0A\00", align 1
@.str.70 = private unnamed_addr constant [9 x i8] c"gpiochip\00", align 1
@.str.71 = private unnamed_addr constant [47 x i8] c"\013gpiolib: failed to allocate char dev region\0A\00", align 1
@.str.72 = private unnamed_addr constant [39 x i8] c"Failed to initialize gpio device (%d)\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i8** @__UNIQUE_ID___addressable_gpiolib_dev_init261 to i8*)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.gpio_desc* @gpio_to_desc(i32 %gpio) #0 !dbg !4625 {
entry:
  %lock.addr.i69 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i69, metadata !4628, metadata !DIExpression()), !dbg !4634
  %flags.addr.i70 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i70, metadata !4636, metadata !DIExpression()), !dbg !4637
  %tmp.i71 = alloca i32, align 4
  %tmp8.i72 = alloca i32, align 4
  %lock.addr.i67 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i67, metadata !4628, metadata !DIExpression()), !dbg !4638
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4636, metadata !DIExpression()), !dbg !4645
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4646, metadata !DIExpression()), !dbg !4651
  %retval = alloca %struct.gpio_desc*, align 8
  %gpio.addr = alloca i32, align 4
  %gdev = alloca %struct.gpio_device*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp21 = alloca %struct.gpio_device*, align 8
  %__mptr31 = alloca i8*, align 8
  %tmp35 = alloca %struct.gpio_device*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp59 = alloca i64, align 8
  store i32 %gpio, i32* %gpio.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gpio.addr, metadata !4658, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %gdev, metadata !4660, metadata !DIExpression()), !dbg !4661
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4662, metadata !DIExpression()), !dbg !4663
  br label %do.body, !dbg !4664

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !4665

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4666, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4669, metadata !DIExpression()), !dbg !4668
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !4668
  %conv = zext i1 %cmp to i32, !dbg !4668
  store i32 1, i32* %tmp, align 4, !dbg !4668
  %0 = load i32, i32* %tmp, align 4, !dbg !4668
  br label %do.body2, !dbg !4670

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !4671

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !4672

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !4674, metadata !DIExpression()), !dbg !4677
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !4678, metadata !DIExpression()), !dbg !4677
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !4677
  %conv8 = zext i1 %cmp7 to i32, !dbg !4677
  store i32 1, i32* %tmp9, align 4, !dbg !4677
  %1 = load i32, i32* %tmp9, align 4, !dbg !4677
  %call = call i64 @arch_local_irq_save() #11, !dbg !4679
  store i64 %call, i64* %flags, align 8, !dbg !4679
  br label %do.end, !dbg !4679

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !4672

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !4671

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4680, !srcloc !4681
  br label %do.body12, !dbg !4680

do.body12:                                        ; preds = %do.body11
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i, align 8
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4682
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !4683
  %rlock.i = bitcast %union.anon* %3 to %struct.raw_spinlock*, !dbg !4683
  br label %do.end14, !dbg !4684

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !4680

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !4671

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !4670

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !4665

do.end18:                                         ; preds = %do.end17
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !4685, metadata !DIExpression()), !dbg !4687
  %4 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @gpio_devices, i32 0, i32 0), align 8, !dbg !4687
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !4687
  store i8* %5, i8** %__mptr, align 8, !dbg !4687
  br label %do.body19, !dbg !4687

do.body19:                                        ; preds = %do.end18
  br label %do.end20, !dbg !4688

do.end20:                                         ; preds = %do.body19
  %6 = load i8*, i8** %__mptr, align 8, !dbg !4687
  %add.ptr = getelementptr i8, i8* %6, i64 -864, !dbg !4687
  %7 = bitcast i8* %add.ptr to %struct.gpio_device*, !dbg !4687
  store %struct.gpio_device* %7, %struct.gpio_device** %tmp21, align 8, !dbg !4688
  %8 = load %struct.gpio_device*, %struct.gpio_device** %tmp21, align 8, !dbg !4687
  store %struct.gpio_device* %8, %struct.gpio_device** %gdev, align 8, !dbg !4690
  br label %for.cond, !dbg !4690

for.cond:                                         ; preds = %do.end34, %do.end20
  %9 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !4691
  %list = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %9, i32 0, i32 11, !dbg !4691
  %cmp22 = icmp eq %struct.list_head* %list, @gpio_devices, !dbg !4691
  %lnot = xor i1 %cmp22, true, !dbg !4691
  br i1 %lnot, label %for.body, label %for.end, !dbg !4690

for.body:                                         ; preds = %for.cond
  %10 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !4692
  %base = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %10, i32 0, i32 7, !dbg !4693
  %11 = load i32, i32* %base, align 8, !dbg !4693
  %12 = load i32, i32* %gpio.addr, align 4, !dbg !4694
  %cmp24 = icmp ule i32 %11, %12, !dbg !4695
  br i1 %cmp24, label %land.lhs.true, label %if.end, !dbg !4696

land.lhs.true:                                    ; preds = %for.body
  %13 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !4697
  %base26 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %13, i32 0, i32 7, !dbg !4698
  %14 = load i32, i32* %base26, align 8, !dbg !4698
  %15 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !4699
  %ngpio = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %15, i32 0, i32 8, !dbg !4700
  %16 = load i16, i16* %ngpio, align 4, !dbg !4700
  %conv27 = zext i16 %16 to i32, !dbg !4699
  %add = add i32 %14, %conv27, !dbg !4701
  %17 = load i32, i32* %gpio.addr, align 4, !dbg !4702
  %cmp28 = icmp ugt i32 %add, %17, !dbg !4703
  br i1 %cmp28, label %if.then, label %if.end, !dbg !4704

if.then:                                          ; preds = %land.lhs.true
  %18 = load i64, i64* %flags, align 8, !dbg !4705
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i67, align 8
  store i64 %18, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !265, metadata !4706, metadata !DIExpression()) #7, !dbg !4709
  call void @llvm.dbg.declare(metadata !265, metadata !4710, metadata !DIExpression()) #7, !dbg !4709
  store i32 1, i32* %tmp.i, align 4, !dbg !4709
  %19 = load i32, i32* %tmp.i, align 4, !dbg !4709
  call void @llvm.dbg.declare(metadata !265, metadata !4711, metadata !DIExpression()) #7, !dbg !4716
  call void @llvm.dbg.declare(metadata !265, metadata !4717, metadata !DIExpression()) #7, !dbg !4716
  store i32 1, i32* %tmp8.i, align 4, !dbg !4716
  %20 = load i32, i32* %tmp8.i, align 4, !dbg !4716
  %21 = load i64, i64* %flags.addr.i, align 8, !dbg !4718
  call void @arch_local_irq_restore(i64 %21) #12, !dbg !4718
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4719, !srcloc !4721
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i67, align 8, !dbg !4722
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !4722
  %rlock.i68 = bitcast %union.anon* %23 to %struct.raw_spinlock*, !dbg !4722
  %24 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !4724
  %descs = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %24, i32 0, i32 6, !dbg !4725
  %25 = load %struct.gpio_desc*, %struct.gpio_desc** %descs, align 8, !dbg !4725
  %26 = load i32, i32* %gpio.addr, align 4, !dbg !4726
  %27 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !4727
  %base30 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %27, i32 0, i32 7, !dbg !4728
  %28 = load i32, i32* %base30, align 8, !dbg !4728
  %sub = sub i32 %26, %28, !dbg !4729
  %idxprom = zext i32 %sub to i64, !dbg !4724
  %arrayidx = getelementptr %struct.gpio_desc, %struct.gpio_desc* %25, i64 %idxprom, !dbg !4724
  store %struct.gpio_desc* %arrayidx, %struct.gpio_desc** %retval, align 8, !dbg !4730
  br label %return, !dbg !4730

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !4731

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr31, metadata !4732, metadata !DIExpression()), !dbg !4734
  %29 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !4734
  %list32 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %29, i32 0, i32 11, !dbg !4734
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list32, i32 0, i32 0, !dbg !4734
  %30 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !4734
  %31 = bitcast %struct.list_head* %30 to i8*, !dbg !4734
  store i8* %31, i8** %__mptr31, align 8, !dbg !4734
  br label %do.body33, !dbg !4734

do.body33:                                        ; preds = %for.inc
  br label %do.end34, !dbg !4735

do.end34:                                         ; preds = %do.body33
  %32 = load i8*, i8** %__mptr31, align 8, !dbg !4734
  %add.ptr36 = getelementptr i8, i8* %32, i64 -864, !dbg !4734
  %33 = bitcast i8* %add.ptr36 to %struct.gpio_device*, !dbg !4734
  store %struct.gpio_device* %33, %struct.gpio_device** %tmp35, align 8, !dbg !4735
  %34 = load %struct.gpio_device*, %struct.gpio_device** %tmp35, align 8, !dbg !4734
  store %struct.gpio_device* %34, %struct.gpio_device** %gdev, align 8, !dbg !4691
  br label %for.cond, !dbg !4691, !llvm.loop !4737

for.end:                                          ; preds = %for.cond
  %35 = load i64, i64* %flags, align 8, !dbg !4739
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i69, align 8
  store i64 %35, i64* %flags.addr.i70, align 8
  call void @llvm.dbg.declare(metadata !265, metadata !4706, metadata !DIExpression()) #7, !dbg !4740
  call void @llvm.dbg.declare(metadata !265, metadata !4710, metadata !DIExpression()) #7, !dbg !4740
  store i32 1, i32* %tmp.i71, align 4, !dbg !4740
  %36 = load i32, i32* %tmp.i71, align 4, !dbg !4740
  call void @llvm.dbg.declare(metadata !265, metadata !4711, metadata !DIExpression()) #7, !dbg !4741
  call void @llvm.dbg.declare(metadata !265, metadata !4717, metadata !DIExpression()) #7, !dbg !4741
  store i32 1, i32* %tmp8.i72, align 4, !dbg !4741
  %37 = load i32, i32* %tmp8.i72, align 4, !dbg !4741
  %38 = load i64, i64* %flags.addr.i70, align 8, !dbg !4742
  call void @arch_local_irq_restore(i64 %38) #12, !dbg !4742
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4743, !srcloc !4721
  %39 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i69, align 8, !dbg !4744
  %40 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %39, i32 0, i32 0, !dbg !4744
  %rlock.i73 = bitcast %union.anon* %40 to %struct.raw_spinlock*, !dbg !4744
  %41 = load i32, i32* %gpio.addr, align 4, !dbg !4745
  %call37 = call zeroext i1 @gpio_is_valid(i32 %41) #11, !dbg !4747
  br i1 %call37, label %if.end66, label %if.then38, !dbg !4748

if.then38:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !4749, metadata !DIExpression()), !dbg !4751
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !4751
  %42 = load i32, i32* %__ret_warn_on, align 4, !dbg !4752
  %tobool = icmp ne i32 %42, 0, !dbg !4752
  %lnot39 = xor i1 %tobool, true, !dbg !4752
  %lnot40 = xor i1 %lnot39, true, !dbg !4752
  %lnot.ext = zext i1 %lnot40 to i32, !dbg !4752
  %conv41 = sext i32 %lnot.ext to i64, !dbg !4752
  %tobool42 = icmp ne i64 %conv41, 0, !dbg !4752
  br i1 %tobool42, label %if.then43, label %if.end58, !dbg !4751

if.then43:                                        ; preds = %if.then38
  br label %do.body44, !dbg !4752

do.body44:                                        ; preds = %if.then43
  br label %do.body45, !dbg !4754

do.body45:                                        ; preds = %do.body44
  br label %do.end46, !dbg !4756

do.end46:                                         ; preds = %do.body45
  %43 = load i32, i32* %gpio.addr, align 4, !dbg !4754
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i32 %43) #11, !dbg !4754
  br label %do.body47, !dbg !4754

do.body47:                                        ; preds = %do.end46
  br label %do.body48, !dbg !4758

do.body48:                                        ; preds = %do.body47
  br label %do.end49, !dbg !4760

do.end49:                                         ; preds = %do.body48
  br label %do.body50, !dbg !4758

do.body50:                                        ; preds = %do.end49
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 122, i32 2313, i64 12) #7, !dbg !4762, !srcloc !4764
  br label %do.end51, !dbg !4762

do.end51:                                         ; preds = %do.body50
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 220) #7, !dbg !4765, !srcloc !4767
  br label %do.body52, !dbg !4758

do.body52:                                        ; preds = %do.end51
  br label %do.end53, !dbg !4768

do.end53:                                         ; preds = %do.body52
  br label %do.end54, !dbg !4758

do.end54:                                         ; preds = %do.end53
  br label %do.body55, !dbg !4754

do.body55:                                        ; preds = %do.end54
  br label %do.end56, !dbg !4770

do.end56:                                         ; preds = %do.body55
  br label %do.end57, !dbg !4754

do.end57:                                         ; preds = %do.end56
  br label %if.end58, !dbg !4754

if.end58:                                         ; preds = %do.end57, %if.then38
  %44 = load i32, i32* %__ret_warn_on, align 4, !dbg !4751
  %tobool60 = icmp ne i32 %44, 0, !dbg !4751
  %lnot61 = xor i1 %tobool60, true, !dbg !4751
  %lnot63 = xor i1 %lnot61, true, !dbg !4751
  %lnot.ext64 = zext i1 %lnot63 to i32, !dbg !4751
  %conv65 = sext i32 %lnot.ext64 to i64, !dbg !4751
  store i64 %conv65, i64* %tmp59, align 8, !dbg !4752
  %45 = load i64, i64* %tmp59, align 8, !dbg !4751
  br label %if.end66, !dbg !4772

if.end66:                                         ; preds = %if.end58, %for.end
  store %struct.gpio_desc* null, %struct.gpio_desc** %retval, align 8, !dbg !4773
  br label %return, !dbg !4773

return:                                           ; preds = %if.end66, %if.then
  %46 = load %struct.gpio_desc*, %struct.gpio_desc** %retval, align 8, !dbg !4774
  ret %struct.gpio_desc* %46, !dbg !4774
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !4775 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !4779, metadata !DIExpression()), !dbg !4780
  %call = call i64 @arch_local_save_flags() #11, !dbg !4781
  store i64 %call, i64* %f, align 8, !dbg !4782
  call void @arch_local_irq_disable() #11, !dbg !4783
  %0 = load i64, i64* %f, align 8, !dbg !4784
  ret i64 %0, !dbg !4785
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @gpio_is_valid(i32 %number) #0 !dbg !4786 {
entry:
  %number.addr = alloca i32, align 4
  store i32 %number, i32* %number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %number.addr, metadata !4790, metadata !DIExpression()), !dbg !4791
  %0 = load i32, i32* %number.addr, align 4, !dbg !4792
  %cmp = icmp sge i32 %0, 0, !dbg !4793
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4794

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %number.addr, align 4, !dbg !4795
  %cmp1 = icmp slt i32 %1, 512, !dbg !4796
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !4797
  ret i1 %2, !dbg !4798
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.gpio_desc* @gpiochip_get_desc(%struct.gpio_chip* %gc, i32 %hwnum) #0 !dbg !4799 {
entry:
  %retval = alloca %struct.gpio_desc*, align 8
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %hwnum.addr = alloca i32, align 4
  %gdev = alloca %struct.gpio_device*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !4802, metadata !DIExpression()), !dbg !4803
  store i32 %hwnum, i32* %hwnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hwnum.addr, metadata !4804, metadata !DIExpression()), !dbg !4805
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %gdev, metadata !4806, metadata !DIExpression()), !dbg !4807
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !4808
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 1, !dbg !4809
  %1 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !4809
  store %struct.gpio_device* %1, %struct.gpio_device** %gdev, align 8, !dbg !4807
  %2 = load i32, i32* %hwnum.addr, align 4, !dbg !4810
  %3 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !4812
  %ngpio = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %3, i32 0, i32 8, !dbg !4813
  %4 = load i16, i16* %ngpio, align 4, !dbg !4813
  %conv = zext i16 %4 to i32, !dbg !4812
  %cmp = icmp uge i32 %2, %conv, !dbg !4814
  br i1 %cmp, label %if.then, label %if.end, !dbg !4815

if.then:                                          ; preds = %entry
  %call = call i8* @ERR_PTR(i64 -22) #11, !dbg !4816
  %5 = bitcast i8* %call to %struct.gpio_desc*, !dbg !4816
  store %struct.gpio_desc* %5, %struct.gpio_desc** %retval, align 8, !dbg !4817
  br label %return, !dbg !4817

if.end:                                           ; preds = %entry
  %6 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !4818
  %descs = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %6, i32 0, i32 6, !dbg !4819
  %7 = load %struct.gpio_desc*, %struct.gpio_desc** %descs, align 8, !dbg !4819
  %8 = load i32, i32* %hwnum.addr, align 4, !dbg !4820
  %idxprom = zext i32 %8 to i64, !dbg !4818
  %arrayidx = getelementptr %struct.gpio_desc, %struct.gpio_desc* %7, i64 %idxprom, !dbg !4818
  store %struct.gpio_desc* %arrayidx, %struct.gpio_desc** %retval, align 8, !dbg !4821
  br label %return, !dbg !4821

return:                                           ; preds = %if.end, %if.then
  %9 = load %struct.gpio_desc*, %struct.gpio_desc** %retval, align 8, !dbg !4822
  ret %struct.gpio_desc* %9, !dbg !4822
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !4823 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !4827, metadata !DIExpression()), !dbg !4828
  %0 = load i64, i64* %error.addr, align 8, !dbg !4829
  %1 = inttoptr i64 %0 to i8*, !dbg !4830
  ret i8* %1, !dbg !4831
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @desc_to_gpio(%struct.gpio_desc* %desc) #0 !dbg !4832 {
entry:
  %desc.addr = alloca %struct.gpio_desc*, align 8
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !4837, metadata !DIExpression()), !dbg !4838
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !4839
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %0, i32 0, i32 0, !dbg !4840
  %1 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !4840
  %base = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %1, i32 0, i32 7, !dbg !4841
  %2 = load i32, i32* %base, align 8, !dbg !4841
  %conv = sext i32 %2 to i64, !dbg !4839
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !4842
  %4 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !4843
  %gdev1 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %4, i32 0, i32 0, !dbg !4844
  %5 = load %struct.gpio_device*, %struct.gpio_device** %gdev1, align 8, !dbg !4844
  %descs = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %5, i32 0, i32 6, !dbg !4845
  %6 = load %struct.gpio_desc*, %struct.gpio_desc** %descs, align 8, !dbg !4845
  %arrayidx = getelementptr %struct.gpio_desc, %struct.gpio_desc* %6, i64 0, !dbg !4843
  %sub.ptr.lhs.cast = ptrtoint %struct.gpio_desc* %3 to i64, !dbg !4846
  %sub.ptr.rhs.cast = ptrtoint %struct.gpio_desc* %arrayidx to i64, !dbg !4846
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4846
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 40, !dbg !4846
  %add = add i64 %conv, %sub.ptr.div, !dbg !4847
  %conv2 = trunc i64 %add to i32, !dbg !4839
  ret i32 %conv2, !dbg !4848
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.gpio_chip* @gpiod_to_chip(%struct.gpio_desc* %desc) #0 !dbg !4849 {
entry:
  %retval = alloca %struct.gpio_chip*, align 8
  %desc.addr = alloca %struct.gpio_desc*, align 8
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !4852, metadata !DIExpression()), !dbg !4853
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !4854
  %tobool = icmp ne %struct.gpio_desc* %0, null, !dbg !4854
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4856

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !4857
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %1, i32 0, i32 0, !dbg !4858
  %2 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !4858
  %tobool1 = icmp ne %struct.gpio_device* %2, null, !dbg !4857
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4859

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.gpio_chip* null, %struct.gpio_chip** %retval, align 8, !dbg !4860
  br label %return, !dbg !4860

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !4861
  %gdev2 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %3, i32 0, i32 0, !dbg !4862
  %4 = load %struct.gpio_device*, %struct.gpio_device** %gdev2, align 8, !dbg !4862
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %4, i32 0, i32 5, !dbg !4863
  %5 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !4863
  store %struct.gpio_chip* %5, %struct.gpio_chip** %retval, align 8, !dbg !4864
  br label %return, !dbg !4864

return:                                           ; preds = %if.end, %if.then
  %6 = load %struct.gpio_chip*, %struct.gpio_chip** %retval, align 8, !dbg !4865
  ret %struct.gpio_chip* %6, !dbg !4865
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_get_direction(%struct.gpio_desc* %desc) #0 !dbg !4866 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !4869, metadata !DIExpression()), !dbg !4876
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !4878, metadata !DIExpression()), !dbg !4879
  %value.addr.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr.i, metadata !4880, metadata !DIExpression()), !dbg !4881
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %gc = alloca %struct.gpio_chip*, align 8
  %offset = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !4882, metadata !DIExpression()), !dbg !4883
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !4884, metadata !DIExpression()), !dbg !4885
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !4886, metadata !DIExpression()), !dbg !4887
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4888, metadata !DIExpression()), !dbg !4889
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !4890
  %call = call %struct.gpio_chip* @gpiod_to_chip(%struct.gpio_desc* %0) #11, !dbg !4891
  store %struct.gpio_chip* %call, %struct.gpio_chip** %gc, align 8, !dbg !4892
  %1 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !4893
  %call1 = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %1) #11, !dbg !4894
  store i32 %call1, i32* %offset, align 4, !dbg !4895
  %2 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !4896
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %2, i32 0, i32 1, !dbg !4898
  %call2 = call zeroext i1 @test_bit(i64 7, i64* %flags) #11, !dbg !4899
  br i1 %call2, label %land.lhs.true, label %if.end, !dbg !4900

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !4901
  %flags3 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %3, i32 0, i32 1, !dbg !4902
  %call4 = call zeroext i1 @test_bit(i64 1, i64* %flags3) #11, !dbg !4903
  br i1 %call4, label %if.then, label %if.end, !dbg !4904

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !4905
  br label %return, !dbg !4905

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !4906
  %get_direction = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %4, i32 0, i32 6, !dbg !4908
  %5 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %get_direction, align 8, !dbg !4908
  %tobool = icmp ne i32 (%struct.gpio_chip*, i32)* %5, null, !dbg !4906
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !4909

if.then5:                                         ; preds = %if.end
  store i32 -524, i32* %retval, align 4, !dbg !4910
  br label %return, !dbg !4910

if.end6:                                          ; preds = %if.end
  %6 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !4911
  %get_direction7 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %6, i32 0, i32 6, !dbg !4912
  %7 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %get_direction7, align 8, !dbg !4912
  %8 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !4913
  %9 = load i32, i32* %offset, align 4, !dbg !4914
  %call8 = call i32 %7(%struct.gpio_chip* %8, i32 %9) #11, !dbg !4911
  store i32 %call8, i32* %ret, align 4, !dbg !4915
  %10 = load i32, i32* %ret, align 4, !dbg !4916
  %cmp = icmp slt i32 %10, 0, !dbg !4918
  br i1 %cmp, label %if.then9, label %if.end10, !dbg !4919

if.then9:                                         ; preds = %if.end6
  %11 = load i32, i32* %ret, align 4, !dbg !4920
  store i32 %11, i32* %retval, align 4, !dbg !4921
  br label %return, !dbg !4921

if.end10:                                         ; preds = %if.end6
  %12 = load i32, i32* %ret, align 4, !dbg !4922
  %cmp11 = icmp sgt i32 %12, 0, !dbg !4924
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !4925

if.then12:                                        ; preds = %if.end10
  store i32 1, i32* %ret, align 4, !dbg !4926
  br label %if.end13, !dbg !4927

if.end13:                                         ; preds = %if.then12, %if.end10
  %13 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !4928
  %flags14 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %13, i32 0, i32 1, !dbg !4929
  %14 = load i32, i32* %ret, align 4, !dbg !4930
  %tobool15 = icmp ne i32 %14, 0, !dbg !4931
  %lnot = xor i1 %tobool15, true, !dbg !4931
  store i64 1, i64* %nr.addr.i, align 8
  store i64* %flags14, i64** %addr.addr.i, align 8
  %frombool.i = zext i1 %lnot to i8
  store i8 %frombool.i, i8* %value.addr.i, align 1
  %15 = load i8, i8* %value.addr.i, align 1, !dbg !4932
  %tobool.i = trunc i8 %15 to i1, !dbg !4932
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !4934

if.then.i:                                        ; preds = %if.end13
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !4935
  %17 = load i64*, i64** %addr.addr.i, align 8, !dbg !4936
  call void @set_bit(i64 %16, i64* %17) #12, !dbg !4937
  br label %assign_bit.exit, !dbg !4937

if.else.i:                                        ; preds = %if.end13
  %18 = load i64, i64* %nr.addr.i, align 8, !dbg !4938
  %19 = load i64*, i64** %addr.addr.i, align 8, !dbg !4939
  call void @clear_bit(i64 %18, i64* %19) #12, !dbg !4940
  br label %assign_bit.exit

assign_bit.exit:                                  ; preds = %if.then.i, %if.else.i
  %20 = load i32, i32* %ret, align 4, !dbg !4941
  store i32 %20, i32* %retval, align 4, !dbg !4942
  br label %return, !dbg !4942

return:                                           ; preds = %assign_bit.exit, %if.then9, %if.then5, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !4943
  ret i32 %21, !dbg !4943
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpio_chip_hwgpio(%struct.gpio_desc* %desc) #0 !dbg !4944 {
entry:
  %desc.addr = alloca %struct.gpio_desc*, align 8
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !4945, metadata !DIExpression()), !dbg !4946
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !4947
  %1 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !4948
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %1, i32 0, i32 0, !dbg !4949
  %2 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !4949
  %descs = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %2, i32 0, i32 6, !dbg !4950
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %descs, align 8, !dbg !4950
  %arrayidx = getelementptr %struct.gpio_desc, %struct.gpio_desc* %3, i64 0, !dbg !4948
  %sub.ptr.lhs.cast = ptrtoint %struct.gpio_desc* %0 to i64, !dbg !4951
  %sub.ptr.rhs.cast = ptrtoint %struct.gpio_desc* %arrayidx to i64, !dbg !4951
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4951
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 40, !dbg !4951
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !4947
  ret i32 %conv, !dbg !4952
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #0 !dbg !4953 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !4959, metadata !DIExpression()), !dbg !4962
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !4964, metadata !DIExpression()), !dbg !4965
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !4966, metadata !DIExpression()), !dbg !4967
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !4968, metadata !DIExpression()), !dbg !4970
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !4972, metadata !DIExpression()), !dbg !4973
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !4974, metadata !DIExpression()), !dbg !4982
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4984, metadata !DIExpression()), !dbg !4985
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !4986, metadata !DIExpression()), !dbg !4987
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !4988, metadata !DIExpression()), !dbg !4989
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !4990
  %1 = load i64, i64* %nr.addr, align 8, !dbg !4991
  %div = sdiv i64 %1, 64, !dbg !4991
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !4992
  %2 = bitcast i64* %add.ptr to i8*, !dbg !4990
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !4993
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !4994
  %conv.i = trunc i64 %4 to i32, !dbg !4994
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #12, !dbg !4995
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !4996
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !4996
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #12, !dbg !4996
  %7 = load i64, i64* %nr.addr, align 8, !dbg !4997
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !4997
  br i1 %8, label %cond.true, label %cond.false, !dbg !4997

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !4997
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !4997
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !4998
  %and.i = and i64 %11, 63, !dbg !4999
  %shl.i = shl i64 1, %and.i, !dbg !5000
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !5001
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !5002
  %shr.i = ashr i64 %13, 6, !dbg !5003
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !5001
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !5001
  %and1.i = and i64 %shl.i, %14, !dbg !5004
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !5005
  %conv = zext i1 %cmp.i to i32, !dbg !4997
  br label %cond.end, !dbg !4997

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !4997
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !4997
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !5006
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !5007
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #7, !dbg !5008, !srcloc !5009
  store i8 %19, i8* %oldbit.i, align 1, !dbg !5008
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !5010
  %tobool.i = trunc i8 %20 to i1, !dbg !5010
  %conv2 = zext i1 %tobool.i to i32, !dbg !4997
  br label %cond.end, !dbg !4997

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !4997
  %tobool = icmp ne i32 %cond, 0, !dbg !4997
  ret i1 %tobool, !dbg !5011
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @gpiochip_line_is_valid(%struct.gpio_chip* %gc, i32 %offset) #0 !dbg !5012 {
entry:
  %retval = alloca i1, align 1
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !5017, metadata !DIExpression()), !dbg !5018
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !5019, metadata !DIExpression()), !dbg !5020
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5021
  %valid_mask = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 36, !dbg !5021
  %1 = load i64*, i64** %valid_mask, align 8, !dbg !5021
  %tobool = icmp ne i64* %1, null, !dbg !5021
  %lnot = xor i1 %tobool, true, !dbg !5021
  %lnot1 = xor i1 %lnot, true, !dbg !5021
  %lnot2 = xor i1 %lnot1, true, !dbg !5021
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5021
  %conv = sext i32 %lnot.ext to i64, !dbg !5021
  %tobool3 = icmp ne i64 %conv, 0, !dbg !5021
  br i1 %tobool3, label %if.then, label %if.end, !dbg !5023

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !5024
  br label %return, !dbg !5024

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %offset.addr, align 4, !dbg !5025
  %conv4 = zext i32 %2 to i64, !dbg !5025
  %3 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5026
  %valid_mask5 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %3, i32 0, i32 36, !dbg !5027
  %4 = load i64*, i64** %valid_mask5, align 8, !dbg !5027
  %call = call zeroext i1 @test_bit(i64 %conv4, i64* %4) #11, !dbg !5028
  store i1 %call, i1* %retval, align 1, !dbg !5029
  br label %return, !dbg !5029

return:                                           ; preds = %if.end, %if.then
  %5 = load i1, i1* %retval, align 1, !dbg !5030
  ret i1 %5, !dbg !5030
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiochip_add_data_with_key(%struct.gpio_chip* %gc, i8* %data, %struct.lock_class_key* %lock_key, %struct.lock_class_key* %request_key) #0 !dbg !4590 {
entry:
  %lock.addr.i268 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i268, metadata !4646, metadata !DIExpression()), !dbg !5031
  %nr.addr.i260 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i260, metadata !4869, metadata !DIExpression()), !dbg !5038
  %addr.addr.i261 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i261, metadata !4878, metadata !DIExpression()), !dbg !5045
  %value.addr.i262 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr.i262, metadata !4880, metadata !DIExpression()), !dbg !5046
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !4869, metadata !DIExpression()), !dbg !5047
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !4878, metadata !DIExpression()), !dbg !5050
  %value.addr.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr.i, metadata !4880, metadata !DIExpression()), !dbg !5051
  %lock.addr.i255 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i255, metadata !4628, metadata !DIExpression()), !dbg !5052
  %flags.addr.i256 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i256, metadata !4636, metadata !DIExpression()), !dbg !5054
  %tmp.i257 = alloca i32, align 4
  %tmp8.i258 = alloca i32, align 4
  %lock.addr.i250 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i250, metadata !4628, metadata !DIExpression()), !dbg !5055
  %flags.addr.i251 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i251, metadata !4636, metadata !DIExpression()), !dbg !5059
  %tmp.i252 = alloca i32, align 4
  %tmp8.i253 = alloca i32, align 4
  %lock.addr.i245 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i245, metadata !4628, metadata !DIExpression()), !dbg !5060
  %flags.addr.i246 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i246, metadata !4636, metadata !DIExpression()), !dbg !5066
  %tmp.i247 = alloca i32, align 4
  %tmp8.i248 = alloca i32, align 4
  %lock.addr.i243 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i243, metadata !4628, metadata !DIExpression()), !dbg !5067
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4636, metadata !DIExpression()), !dbg !5069
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4646, metadata !DIExpression()), !dbg !5070
  %retval = alloca i32, align 4
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %data.addr = alloca i8*, align 8
  %lock_key.addr = alloca %struct.lock_class_key*, align 8
  %request_key.addr = alloca %struct.lock_class_key*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %base = alloca i32, align 4
  %gdev = alloca %struct.gpio_device*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy90 = alloca i64, align 8
  %__dummy291 = alloca i64, align 8
  %tmp94 = alloca i32, align 4
  %desc = alloca %struct.gpio_desc*, align 8
  %__dummy205 = alloca i64, align 8
  %__dummy2206 = alloca i64, align 8
  %tmp209 = alloca i32, align 4
  %__dummy213 = alloca i64, align 8
  %__dummy2214 = alloca i64, align 8
  %tmp217 = alloca i32, align 4
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !5077, metadata !DIExpression()), !dbg !5078
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5079, metadata !DIExpression()), !dbg !5080
  store %struct.lock_class_key* %lock_key, %struct.lock_class_key** %lock_key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lock_class_key** %lock_key.addr, metadata !5081, metadata !DIExpression()), !dbg !5082
  store %struct.lock_class_key* %request_key, %struct.lock_class_key** %request_key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lock_class_key** %request_key.addr, metadata !5083, metadata !DIExpression()), !dbg !5084
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5085, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5087, metadata !DIExpression()), !dbg !5088
  store i32 0, i32* %ret, align 4, !dbg !5088
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5089, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.declare(metadata i32* %base, metadata !5091, metadata !DIExpression()), !dbg !5092
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5093
  %base1 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 18, !dbg !5094
  %1 = load i32, i32* %base1, align 8, !dbg !5094
  store i32 %1, i32* %base, align 4, !dbg !5092
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %gdev, metadata !5095, metadata !DIExpression()), !dbg !5096
  %call = call i8* @kzalloc(i64 920, i32 3264) #11, !dbg !5097
  %2 = bitcast i8* %call to %struct.gpio_device*, !dbg !5097
  store %struct.gpio_device* %2, %struct.gpio_device** %gdev, align 8, !dbg !5098
  %3 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5099
  %tobool = icmp ne %struct.gpio_device* %3, null, !dbg !5099
  br i1 %tobool, label %if.end, label %if.then, !dbg !5101

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !5102
  br label %return, !dbg !5102

if.end:                                           ; preds = %entry
  %4 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5103
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %4, i32 0, i32 1, !dbg !5104
  %bus = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 5, !dbg !5105
  store %struct.bus_type* @gpio_bus_type, %struct.bus_type** %bus, align 8, !dbg !5106
  %5 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5107
  %6 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5108
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %6, i32 0, i32 5, !dbg !5109
  store %struct.gpio_chip* %5, %struct.gpio_chip** %chip, align 8, !dbg !5110
  %7 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5111
  %8 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5112
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %8, i32 0, i32 1, !dbg !5113
  store %struct.gpio_device* %7, %struct.gpio_device** %gpiodev, align 8, !dbg !5114
  %9 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5115
  %parent = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %9, i32 0, i32 2, !dbg !5117
  %10 = load %struct.device*, %struct.device** %parent, align 8, !dbg !5117
  %tobool2 = icmp ne %struct.device* %10, null, !dbg !5115
  br i1 %tobool2, label %if.then3, label %if.end10, !dbg !5118

if.then3:                                         ; preds = %if.end
  %11 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5119
  %parent4 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %11, i32 0, i32 2, !dbg !5121
  %12 = load %struct.device*, %struct.device** %parent4, align 8, !dbg !5121
  %13 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5122
  %dev5 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %13, i32 0, i32 1, !dbg !5123
  %parent6 = getelementptr inbounds %struct.device, %struct.device* %dev5, i32 0, i32 1, !dbg !5124
  store %struct.device* %12, %struct.device** %parent6, align 8, !dbg !5125
  %14 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5126
  %parent7 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %14, i32 0, i32 2, !dbg !5127
  %15 = load %struct.device*, %struct.device** %parent7, align 8, !dbg !5127
  %of_node = getelementptr inbounds %struct.device, %struct.device* %15, i32 0, i32 23, !dbg !5128
  %16 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !5128
  %17 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5129
  %dev8 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %17, i32 0, i32 1, !dbg !5130
  %of_node9 = getelementptr inbounds %struct.device, %struct.device* %dev8, i32 0, i32 23, !dbg !5131
  store %struct.device_node* %16, %struct.device_node** %of_node9, align 8, !dbg !5132
  br label %if.end10, !dbg !5133

if.end10:                                         ; preds = %if.then3, %if.end
  %18 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5134
  %of_node11 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %18, i32 0, i32 37, !dbg !5136
  %19 = load %struct.device_node*, %struct.device_node** %of_node11, align 8, !dbg !5136
  %tobool12 = icmp ne %struct.device_node* %19, null, !dbg !5134
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !5137

if.then13:                                        ; preds = %if.end10
  %20 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5138
  %of_node14 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %20, i32 0, i32 37, !dbg !5139
  %21 = load %struct.device_node*, %struct.device_node** %of_node14, align 8, !dbg !5139
  %22 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5140
  %dev15 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %22, i32 0, i32 1, !dbg !5141
  %of_node16 = getelementptr inbounds %struct.device, %struct.device* %dev15, i32 0, i32 23, !dbg !5142
  store %struct.device_node* %21, %struct.device_node** %of_node16, align 8, !dbg !5143
  br label %if.end20, !dbg !5140

if.else:                                          ; preds = %if.end10
  %23 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5144
  %dev17 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %23, i32 0, i32 1, !dbg !5145
  %of_node18 = getelementptr inbounds %struct.device, %struct.device* %dev17, i32 0, i32 23, !dbg !5146
  %24 = load %struct.device_node*, %struct.device_node** %of_node18, align 8, !dbg !5146
  %25 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5147
  %of_node19 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %25, i32 0, i32 37, !dbg !5148
  store %struct.device_node* %24, %struct.device_node** %of_node19, align 8, !dbg !5149
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then13
  %call21 = call i32 @ida_alloc(%struct.ida* @gpio_ida, i32 3264) #11, !dbg !5150
  %26 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5151
  %id = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %26, i32 0, i32 0, !dbg !5152
  store i32 %call21, i32* %id, align 8, !dbg !5153
  %27 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5154
  %id22 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %27, i32 0, i32 0, !dbg !5156
  %28 = load i32, i32* %id22, align 8, !dbg !5156
  %cmp = icmp slt i32 %28, 0, !dbg !5157
  br i1 %cmp, label %if.then23, label %if.end25, !dbg !5158

if.then23:                                        ; preds = %if.end20
  %29 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5159
  %id24 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %29, i32 0, i32 0, !dbg !5161
  %30 = load i32, i32* %id24, align 8, !dbg !5161
  store i32 %30, i32* %ret, align 4, !dbg !5162
  br label %err_free_gdev, !dbg !5163

if.end25:                                         ; preds = %if.end20
  %31 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5164
  %dev26 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %31, i32 0, i32 1, !dbg !5165
  %32 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5166
  %id27 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %32, i32 0, i32 0, !dbg !5167
  %33 = load i32, i32* %id27, align 8, !dbg !5167
  %call28 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %dev26, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i32 %33) #11, !dbg !5168
  %34 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5169
  %dev29 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %34, i32 0, i32 1, !dbg !5170
  call void @device_initialize(%struct.device* %dev29) #11, !dbg !5171
  %35 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5172
  %dev30 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %35, i32 0, i32 1, !dbg !5173
  %36 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5174
  %37 = bitcast %struct.gpio_device* %36 to i8*, !dbg !5174
  call void @dev_set_drvdata(%struct.device* %dev30, i8* %37) #11, !dbg !5175
  %38 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5176
  %parent31 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %38, i32 0, i32 2, !dbg !5178
  %39 = load %struct.device*, %struct.device** %parent31, align 8, !dbg !5178
  %tobool32 = icmp ne %struct.device* %39, null, !dbg !5176
  br i1 %tobool32, label %land.lhs.true, label %if.else39, !dbg !5179

land.lhs.true:                                    ; preds = %if.end25
  %40 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5180
  %parent33 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %40, i32 0, i32 2, !dbg !5181
  %41 = load %struct.device*, %struct.device** %parent33, align 8, !dbg !5181
  %driver = getelementptr inbounds %struct.device, %struct.device* %41, i32 0, i32 6, !dbg !5182
  %42 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !5182
  %tobool34 = icmp ne %struct.device_driver* %42, null, !dbg !5180
  br i1 %tobool34, label %if.then35, label %if.else39, !dbg !5183

if.then35:                                        ; preds = %land.lhs.true
  %43 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5184
  %parent36 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %43, i32 0, i32 2, !dbg !5185
  %44 = load %struct.device*, %struct.device** %parent36, align 8, !dbg !5185
  %driver37 = getelementptr inbounds %struct.device, %struct.device* %44, i32 0, i32 6, !dbg !5186
  %45 = load %struct.device_driver*, %struct.device_driver** %driver37, align 8, !dbg !5186
  %owner = getelementptr inbounds %struct.device_driver, %struct.device_driver* %45, i32 0, i32 2, !dbg !5187
  %46 = load %struct.module*, %struct.module** %owner, align 8, !dbg !5187
  %47 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5188
  %owner38 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %47, i32 0, i32 4, !dbg !5189
  store %struct.module* %46, %struct.module** %owner38, align 8, !dbg !5190
  br label %if.end48, !dbg !5188

if.else39:                                        ; preds = %land.lhs.true, %if.end25
  %48 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5191
  %owner40 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %48, i32 0, i32 3, !dbg !5193
  %49 = load %struct.module*, %struct.module** %owner40, align 8, !dbg !5193
  %tobool41 = icmp ne %struct.module* %49, null, !dbg !5191
  br i1 %tobool41, label %if.then42, label %if.else45, !dbg !5194

if.then42:                                        ; preds = %if.else39
  %50 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5195
  %owner43 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %50, i32 0, i32 3, !dbg !5196
  %51 = load %struct.module*, %struct.module** %owner43, align 8, !dbg !5196
  %52 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5197
  %owner44 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %52, i32 0, i32 4, !dbg !5198
  store %struct.module* %51, %struct.module** %owner44, align 8, !dbg !5199
  br label %if.end47, !dbg !5197

if.else45:                                        ; preds = %if.else39
  %53 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5200
  %owner46 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %53, i32 0, i32 4, !dbg !5201
  store %struct.module* null, %struct.module** %owner46, align 8, !dbg !5202
  br label %if.end47

if.end47:                                         ; preds = %if.else45, %if.then42
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then35
  %54 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5203
  %ngpio = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %54, i32 0, i32 19, !dbg !5204
  %55 = load i16, i16* %ngpio, align 4, !dbg !5204
  %conv = zext i16 %55 to i64, !dbg !5203
  %call49 = call i8* @kcalloc(i64 %conv, i64 40, i32 3264) #11, !dbg !5205
  %56 = bitcast i8* %call49 to %struct.gpio_desc*, !dbg !5205
  %57 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5206
  %descs = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %57, i32 0, i32 6, !dbg !5207
  store %struct.gpio_desc* %56, %struct.gpio_desc** %descs, align 8, !dbg !5208
  %58 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5209
  %descs50 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %58, i32 0, i32 6, !dbg !5211
  %59 = load %struct.gpio_desc*, %struct.gpio_desc** %descs50, align 8, !dbg !5211
  %tobool51 = icmp ne %struct.gpio_desc* %59, null, !dbg !5209
  br i1 %tobool51, label %if.end53, label %if.then52, !dbg !5212

if.then52:                                        ; preds = %if.end48
  store i32 -12, i32* %ret, align 4, !dbg !5213
  br label %err_free_ida, !dbg !5215

if.end53:                                         ; preds = %if.end48
  %60 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5216
  %ngpio54 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %60, i32 0, i32 19, !dbg !5218
  %61 = load i16, i16* %ngpio54, align 4, !dbg !5218
  %conv55 = zext i16 %61 to i32, !dbg !5216
  %cmp56 = icmp eq i32 %conv55, 0, !dbg !5219
  br i1 %cmp56, label %if.then58, label %if.end61, !dbg !5220

if.then58:                                        ; preds = %if.end53
  %62 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5221
  %gpiodev59 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %62, i32 0, i32 1, !dbg !5221
  %63 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev59, align 8, !dbg !5221
  %dev60 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %63, i32 0, i32 1, !dbg !5221
  %64 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5221
  %label = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %64, i32 0, i32 0, !dbg !5221
  %65 = load i8*, i8** %label, align 8, !dbg !5221
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev60, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3, i64 0, i64 0), i8* %65) #13, !dbg !5221
  store i32 -22, i32* %ret, align 4, !dbg !5223
  br label %err_free_descs, !dbg !5224

if.end61:                                         ; preds = %if.end53
  %66 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5225
  %ngpio62 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %66, i32 0, i32 19, !dbg !5227
  %67 = load i16, i16* %ngpio62, align 4, !dbg !5227
  %conv63 = zext i16 %67 to i32, !dbg !5225
  %cmp64 = icmp sgt i32 %conv63, 512, !dbg !5228
  br i1 %cmp64, label %if.then66, label %if.end72, !dbg !5229

if.then66:                                        ; preds = %if.end61
  %68 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5230
  %gpiodev67 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %68, i32 0, i32 1, !dbg !5230
  %69 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev67, align 8, !dbg !5230
  %dev68 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %69, i32 0, i32 1, !dbg !5230
  %70 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5230
  %label69 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %70, i32 0, i32 0, !dbg !5230
  %71 = load i8*, i8** %label69, align 8, !dbg !5230
  %72 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5230
  %ngpio70 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %72, i32 0, i32 19, !dbg !5230
  %73 = load i16, i16* %ngpio70, align 4, !dbg !5230
  %conv71 = zext i16 %73 to i32, !dbg !5230
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev68, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.4, i64 0, i64 0), i8* %71, i32 %conv71, i32 512) #13, !dbg !5230
  br label %if.end72, !dbg !5230

if.end72:                                         ; preds = %if.then66, %if.end61
  %74 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5231
  %label73 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %74, i32 0, i32 0, !dbg !5232
  %75 = load i8*, i8** %label73, align 8, !dbg !5232
  %tobool74 = icmp ne i8* %75, null, !dbg !5231
  br i1 %tobool74, label %cond.true, label %cond.false, !dbg !5231

cond.true:                                        ; preds = %if.end72
  br label %cond.end, !dbg !5231

cond.false:                                       ; preds = %if.end72
  br label %cond.end, !dbg !5231

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %75, %cond.true ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), %cond.false ], !dbg !5231
  %call75 = call i8* @kstrdup_const(i8* %cond, i32 3264) #11, !dbg !5233
  %76 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5234
  %label76 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %76, i32 0, i32 9, !dbg !5235
  store i8* %call75, i8** %label76, align 8, !dbg !5236
  %77 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5237
  %label77 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %77, i32 0, i32 9, !dbg !5239
  %78 = load i8*, i8** %label77, align 8, !dbg !5239
  %tobool78 = icmp ne i8* %78, null, !dbg !5237
  br i1 %tobool78, label %if.end80, label %if.then79, !dbg !5240

if.then79:                                        ; preds = %cond.end
  store i32 -12, i32* %ret, align 4, !dbg !5241
  br label %err_free_descs, !dbg !5243

if.end80:                                         ; preds = %cond.end
  %79 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5244
  %ngpio81 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %79, i32 0, i32 19, !dbg !5245
  %80 = load i16, i16* %ngpio81, align 4, !dbg !5245
  %81 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5246
  %ngpio82 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %81, i32 0, i32 8, !dbg !5247
  store i16 %80, i16* %ngpio82, align 4, !dbg !5248
  %82 = load i8*, i8** %data.addr, align 8, !dbg !5249
  %83 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5250
  %data83 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %83, i32 0, i32 10, !dbg !5251
  store i8* %82, i8** %data83, align 8, !dbg !5252
  br label %do.body, !dbg !5253

do.body:                                          ; preds = %if.end80
  br label %do.body84, !dbg !5254

do.body84:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5255, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5258, metadata !DIExpression()), !dbg !5257
  %cmp85 = icmp eq i64* %__dummy, %__dummy2, !dbg !5257
  %conv86 = zext i1 %cmp85 to i32, !dbg !5257
  store i32 1, i32* %tmp, align 4, !dbg !5257
  %84 = load i32, i32* %tmp, align 4, !dbg !5257
  br label %do.body87, !dbg !5259

do.body87:                                        ; preds = %do.body84
  br label %do.body88, !dbg !5260

do.body88:                                        ; preds = %do.body87
  br label %do.body89, !dbg !5261

do.body89:                                        ; preds = %do.body88
  call void @llvm.dbg.declare(metadata i64* %__dummy90, metadata !5263, metadata !DIExpression()), !dbg !5266
  call void @llvm.dbg.declare(metadata i64* %__dummy291, metadata !5267, metadata !DIExpression()), !dbg !5266
  %cmp92 = icmp eq i64* %__dummy90, %__dummy291, !dbg !5266
  %conv93 = zext i1 %cmp92 to i32, !dbg !5266
  store i32 1, i32* %tmp94, align 4, !dbg !5266
  %85 = load i32, i32* %tmp94, align 4, !dbg !5266
  %call95 = call i64 @arch_local_irq_save() #11, !dbg !5268
  store i64 %call95, i64* %flags, align 8, !dbg !5268
  br label %do.end, !dbg !5268

do.end:                                           ; preds = %do.body89
  br label %do.end96, !dbg !5261

do.end96:                                         ; preds = %do.end
  br label %do.body97, !dbg !5260

do.body97:                                        ; preds = %do.end96
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5269, !srcloc !5270
  br label %do.body98, !dbg !5269

do.body98:                                        ; preds = %do.body97
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i, align 8
  %86 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5271
  %87 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %86, i32 0, i32 0, !dbg !5272
  %rlock.i = bitcast %union.anon* %87 to %struct.raw_spinlock*, !dbg !5272
  br label %do.end100, !dbg !5273

do.end100:                                        ; preds = %do.body98
  br label %do.end101, !dbg !5269

do.end101:                                        ; preds = %do.end100
  br label %do.end102, !dbg !5260

do.end102:                                        ; preds = %do.end101
  br label %do.end103, !dbg !5259

do.end103:                                        ; preds = %do.end102
  br label %do.end104, !dbg !5254

do.end104:                                        ; preds = %do.end103
  %88 = load i32, i32* %base, align 4, !dbg !5274
  %cmp105 = icmp slt i32 %88, 0, !dbg !5275
  br i1 %cmp105, label %if.then107, label %if.end116, !dbg !5276

if.then107:                                       ; preds = %do.end104
  %89 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5277
  %ngpio108 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %89, i32 0, i32 19, !dbg !5278
  %90 = load i16, i16* %ngpio108, align 4, !dbg !5278
  %conv109 = zext i16 %90 to i32, !dbg !5277
  %call110 = call i32 @gpiochip_find_base(i32 %conv109) #11, !dbg !5279
  store i32 %call110, i32* %base, align 4, !dbg !5280
  %91 = load i32, i32* %base, align 4, !dbg !5281
  %cmp111 = icmp slt i32 %91, 0, !dbg !5282
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !5283

if.then113:                                       ; preds = %if.then107
  %92 = load i32, i32* %base, align 4, !dbg !5284
  store i32 %92, i32* %ret, align 4, !dbg !5285
  %93 = load i64, i64* %flags, align 8, !dbg !5286
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i245, align 8
  store i64 %93, i64* %flags.addr.i246, align 8
  call void @llvm.dbg.declare(metadata !265, metadata !4706, metadata !DIExpression()) #7, !dbg !5287
  call void @llvm.dbg.declare(metadata !265, metadata !4710, metadata !DIExpression()) #7, !dbg !5287
  store i32 1, i32* %tmp.i247, align 4, !dbg !5287
  %94 = load i32, i32* %tmp.i247, align 4, !dbg !5287
  call void @llvm.dbg.declare(metadata !265, metadata !4711, metadata !DIExpression()) #7, !dbg !5288
  call void @llvm.dbg.declare(metadata !265, metadata !4717, metadata !DIExpression()) #7, !dbg !5288
  store i32 1, i32* %tmp8.i248, align 4, !dbg !5288
  %95 = load i32, i32* %tmp8.i248, align 4, !dbg !5288
  %96 = load i64, i64* %flags.addr.i246, align 8, !dbg !5289
  call void @arch_local_irq_restore(i64 %96) #12, !dbg !5289
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5290, !srcloc !4721
  %97 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i245, align 8, !dbg !5291
  %98 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %97, i32 0, i32 0, !dbg !5291
  %rlock.i249 = bitcast %union.anon* %98 to %struct.raw_spinlock*, !dbg !5291
  br label %err_free_label, !dbg !5292

if.end114:                                        ; preds = %if.then107
  %99 = load i32, i32* %base, align 4, !dbg !5293
  %100 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5294
  %base115 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %100, i32 0, i32 18, !dbg !5295
  store i32 %99, i32* %base115, align 8, !dbg !5296
  br label %if.end116, !dbg !5297

if.end116:                                        ; preds = %if.end114, %do.end104
  %101 = load i32, i32* %base, align 4, !dbg !5298
  %102 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5299
  %base117 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %102, i32 0, i32 7, !dbg !5300
  store i32 %101, i32* %base117, align 8, !dbg !5301
  %103 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5302
  %call118 = call i32 @gpiodev_add_to_list(%struct.gpio_device* %103) #11, !dbg !5303
  store i32 %call118, i32* %ret, align 4, !dbg !5304
  %104 = load i32, i32* %ret, align 4, !dbg !5305
  %tobool119 = icmp ne i32 %104, 0, !dbg !5305
  br i1 %tobool119, label %if.then120, label %if.end121, !dbg !5306

if.then120:                                       ; preds = %if.end116
  %105 = load i64, i64* %flags, align 8, !dbg !5307
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i250, align 8
  store i64 %105, i64* %flags.addr.i251, align 8
  call void @llvm.dbg.declare(metadata !265, metadata !4706, metadata !DIExpression()) #7, !dbg !5308
  call void @llvm.dbg.declare(metadata !265, metadata !4710, metadata !DIExpression()) #7, !dbg !5308
  store i32 1, i32* %tmp.i252, align 4, !dbg !5308
  %106 = load i32, i32* %tmp.i252, align 4, !dbg !5308
  call void @llvm.dbg.declare(metadata !265, metadata !4711, metadata !DIExpression()) #7, !dbg !5309
  call void @llvm.dbg.declare(metadata !265, metadata !4717, metadata !DIExpression()) #7, !dbg !5309
  store i32 1, i32* %tmp8.i253, align 4, !dbg !5309
  %107 = load i32, i32* %tmp8.i253, align 4, !dbg !5309
  %108 = load i64, i64* %flags.addr.i251, align 8, !dbg !5310
  call void @arch_local_irq_restore(i64 %108) #12, !dbg !5310
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5311, !srcloc !4721
  %109 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i250, align 8, !dbg !5312
  %110 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %109, i32 0, i32 0, !dbg !5312
  %rlock.i254 = bitcast %union.anon* %110 to %struct.raw_spinlock*, !dbg !5312
  br label %err_free_label, !dbg !5313

if.end121:                                        ; preds = %if.end116
  store i32 0, i32* %i, align 4, !dbg !5314
  br label %for.cond, !dbg !5316

for.cond:                                         ; preds = %for.inc, %if.end121
  %111 = load i32, i32* %i, align 4, !dbg !5317
  %112 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5319
  %ngpio122 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %112, i32 0, i32 19, !dbg !5320
  %113 = load i16, i16* %ngpio122, align 4, !dbg !5320
  %conv123 = zext i16 %113 to i32, !dbg !5319
  %cmp124 = icmp ult i32 %111, %conv123, !dbg !5321
  br i1 %cmp124, label %for.body, label %for.end, !dbg !5322

for.body:                                         ; preds = %for.cond
  %114 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5323
  %115 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5324
  %descs126 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %115, i32 0, i32 6, !dbg !5325
  %116 = load %struct.gpio_desc*, %struct.gpio_desc** %descs126, align 8, !dbg !5325
  %117 = load i32, i32* %i, align 4, !dbg !5326
  %idxprom = zext i32 %117 to i64, !dbg !5324
  %arrayidx = getelementptr %struct.gpio_desc, %struct.gpio_desc* %116, i64 %idxprom, !dbg !5324
  %gdev127 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %arrayidx, i32 0, i32 0, !dbg !5327
  store %struct.gpio_device* %114, %struct.gpio_device** %gdev127, align 8, !dbg !5328
  br label %for.inc, !dbg !5324

for.inc:                                          ; preds = %for.body
  %118 = load i32, i32* %i, align 4, !dbg !5329
  %inc = add i32 %118, 1, !dbg !5329
  store i32 %inc, i32* %i, align 4, !dbg !5329
  br label %for.cond, !dbg !5330, !llvm.loop !5331

for.end:                                          ; preds = %for.cond
  %119 = load i64, i64* %flags, align 8, !dbg !5333
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i255, align 8
  store i64 %119, i64* %flags.addr.i256, align 8
  call void @llvm.dbg.declare(metadata !265, metadata !4706, metadata !DIExpression()) #7, !dbg !5334
  call void @llvm.dbg.declare(metadata !265, metadata !4710, metadata !DIExpression()) #7, !dbg !5334
  store i32 1, i32* %tmp.i257, align 4, !dbg !5334
  %120 = load i32, i32* %tmp.i257, align 4, !dbg !5334
  call void @llvm.dbg.declare(metadata !265, metadata !4711, metadata !DIExpression()) #7, !dbg !5335
  call void @llvm.dbg.declare(metadata !265, metadata !4717, metadata !DIExpression()) #7, !dbg !5335
  store i32 1, i32* %tmp8.i258, align 4, !dbg !5335
  %121 = load i32, i32* %tmp8.i258, align 4, !dbg !5335
  %122 = load i64, i64* %flags.addr.i256, align 8, !dbg !5336
  call void @arch_local_irq_restore(i64 %122) #12, !dbg !5336
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5337, !srcloc !4721
  %123 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i255, align 8, !dbg !5338
  %124 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %123, i32 0, i32 0, !dbg !5338
  %rlock.i259 = bitcast %union.anon* %124 to %struct.raw_spinlock*, !dbg !5338
  br label %do.body128, !dbg !5339

do.body128:                                       ; preds = %for.end
  br label %do.body129, !dbg !5340

do.body129:                                       ; preds = %do.body128
  %125 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5342
  %notifier = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %125, i32 0, i32 12, !dbg !5342
  %rwsem = getelementptr inbounds %struct.blocking_notifier_head, %struct.blocking_notifier_head* %notifier, i32 0, i32 0, !dbg !5342
  call void @__init_rwsem(%struct.rw_semaphore* %rwsem, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), %struct.lock_class_key* @gpiochip_add_data_with_key.__key) #11, !dbg !5342
  br label %do.end130, !dbg !5342

do.end130:                                        ; preds = %do.body129
  %126 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5340
  %notifier131 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %126, i32 0, i32 12, !dbg !5340
  %head = getelementptr inbounds %struct.blocking_notifier_head, %struct.blocking_notifier_head* %notifier131, i32 0, i32 1, !dbg !5340
  store %struct.notifier_block* null, %struct.notifier_block** %head, align 8, !dbg !5340
  br label %do.end132, !dbg !5340

do.end132:                                        ; preds = %do.end130
  %127 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5344
  %names = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %127, i32 0, i32 20, !dbg !5346
  %128 = load i8**, i8*** %names, align 8, !dbg !5346
  %tobool133 = icmp ne i8** %128, null, !dbg !5344
  br i1 %tobool133, label %if.then134, label %if.else136, !dbg !5347

if.then134:                                       ; preds = %do.end132
  %129 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5348
  %call135 = call i32 @gpiochip_set_desc_names(%struct.gpio_chip* %129) #11, !dbg !5349
  store i32 %call135, i32* %ret, align 4, !dbg !5350
  br label %if.end138, !dbg !5351

if.else136:                                       ; preds = %do.end132
  %130 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5352
  %call137 = call i32 @devprop_gpiochip_set_names(%struct.gpio_chip* %130) #11, !dbg !5353
  store i32 %call137, i32* %ret, align 4, !dbg !5354
  br label %if.end138

if.end138:                                        ; preds = %if.else136, %if.then134
  %131 = load i32, i32* %ret, align 4, !dbg !5355
  %tobool139 = icmp ne i32 %131, 0, !dbg !5355
  br i1 %tobool139, label %if.then140, label %if.end141, !dbg !5357

if.then140:                                       ; preds = %if.end138
  br label %err_remove_from_list, !dbg !5358

if.end141:                                        ; preds = %if.end138
  %132 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5359
  %call142 = call i32 @gpiochip_alloc_valid_mask(%struct.gpio_chip* %132) #11, !dbg !5360
  store i32 %call142, i32* %ret, align 4, !dbg !5361
  %133 = load i32, i32* %ret, align 4, !dbg !5362
  %tobool143 = icmp ne i32 %133, 0, !dbg !5362
  br i1 %tobool143, label %if.then144, label %if.end145, !dbg !5364

if.then144:                                       ; preds = %if.end141
  br label %err_remove_from_list, !dbg !5365

if.end145:                                        ; preds = %if.end141
  %134 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5366
  %call146 = call i32 @of_gpiochip_add(%struct.gpio_chip* %134) #11, !dbg !5367
  store i32 %call146, i32* %ret, align 4, !dbg !5368
  %135 = load i32, i32* %ret, align 4, !dbg !5369
  %tobool147 = icmp ne i32 %135, 0, !dbg !5369
  br i1 %tobool147, label %if.then148, label %if.end149, !dbg !5371

if.then148:                                       ; preds = %if.end145
  br label %err_free_gpiochip_mask, !dbg !5372

if.end149:                                        ; preds = %if.end145
  %136 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5373
  %call150 = call i32 @gpiochip_init_valid_mask(%struct.gpio_chip* %136) #11, !dbg !5374
  store i32 %call150, i32* %ret, align 4, !dbg !5375
  %137 = load i32, i32* %ret, align 4, !dbg !5376
  %tobool151 = icmp ne i32 %137, 0, !dbg !5376
  br i1 %tobool151, label %if.then152, label %if.end153, !dbg !5378

if.then152:                                       ; preds = %if.end149
  br label %err_remove_of_chip, !dbg !5379

if.end153:                                        ; preds = %if.end149
  store i32 0, i32* %i, align 4, !dbg !5380
  br label %for.cond154, !dbg !5381

for.cond154:                                      ; preds = %for.inc177, %if.end153
  %138 = load i32, i32* %i, align 4, !dbg !5382
  %139 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5383
  %ngpio155 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %139, i32 0, i32 19, !dbg !5384
  %140 = load i16, i16* %ngpio155, align 4, !dbg !5384
  %conv156 = zext i16 %140 to i32, !dbg !5383
  %cmp157 = icmp ult i32 %138, %conv156, !dbg !5385
  br i1 %cmp157, label %for.body159, label %for.end179, !dbg !5386

for.body159:                                      ; preds = %for.cond154
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc, metadata !5387, metadata !DIExpression()), !dbg !5388
  %141 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5389
  %descs160 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %141, i32 0, i32 6, !dbg !5390
  %142 = load %struct.gpio_desc*, %struct.gpio_desc** %descs160, align 8, !dbg !5390
  %143 = load i32, i32* %i, align 4, !dbg !5391
  %idxprom161 = zext i32 %143 to i64, !dbg !5389
  %arrayidx162 = getelementptr %struct.gpio_desc, %struct.gpio_desc* %142, i64 %idxprom161, !dbg !5389
  store %struct.gpio_desc* %arrayidx162, %struct.gpio_desc** %desc, align 8, !dbg !5388
  %144 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5392
  %get_direction = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %144, i32 0, i32 6, !dbg !5393
  %145 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %get_direction, align 8, !dbg !5393
  %tobool163 = icmp ne i32 (%struct.gpio_chip*, i32)* %145, null, !dbg !5392
  br i1 %tobool163, label %land.lhs.true164, label %if.else172, !dbg !5394

land.lhs.true164:                                 ; preds = %for.body159
  %146 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5395
  %147 = load i32, i32* %i, align 4, !dbg !5396
  %call165 = call zeroext i1 @gpiochip_line_is_valid(%struct.gpio_chip* %146, i32 %147) #11, !dbg !5397
  br i1 %call165, label %if.then167, label %if.else172, !dbg !5398

if.then167:                                       ; preds = %land.lhs.true164
  %148 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !5399
  %flags168 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %148, i32 0, i32 1, !dbg !5400
  %149 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5401
  %get_direction169 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %149, i32 0, i32 6, !dbg !5402
  %150 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %get_direction169, align 8, !dbg !5402
  %151 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5403
  %152 = load i32, i32* %i, align 4, !dbg !5404
  %call170 = call i32 %150(%struct.gpio_chip* %151, i32 %152) #11, !dbg !5401
  %tobool171 = icmp ne i32 %call170, 0, !dbg !5405
  %lnot = xor i1 %tobool171, true, !dbg !5405
  store i64 1, i64* %nr.addr.i, align 8
  store i64* %flags168, i64** %addr.addr.i, align 8
  %frombool.i = zext i1 %lnot to i8
  store i8 %frombool.i, i8* %value.addr.i, align 1
  %153 = load i8, i8* %value.addr.i, align 1, !dbg !5406
  %tobool.i = trunc i8 %153 to i1, !dbg !5406
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !5407

if.then.i:                                        ; preds = %if.then167
  %154 = load i64, i64* %nr.addr.i, align 8, !dbg !5408
  %155 = load i64*, i64** %addr.addr.i, align 8, !dbg !5409
  call void @set_bit(i64 %154, i64* %155) #12, !dbg !5410
  br label %assign_bit.exit, !dbg !5410

if.else.i:                                        ; preds = %if.then167
  %156 = load i64, i64* %nr.addr.i, align 8, !dbg !5411
  %157 = load i64*, i64** %addr.addr.i, align 8, !dbg !5412
  call void @clear_bit(i64 %156, i64* %157) #12, !dbg !5413
  br label %assign_bit.exit

assign_bit.exit:                                  ; preds = %if.then.i, %if.else.i
  br label %if.end176, !dbg !5414

if.else172:                                       ; preds = %land.lhs.true164, %for.body159
  %158 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !5415
  %flags173 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %158, i32 0, i32 1, !dbg !5416
  %159 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5417
  %direction_input = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %159, i32 0, i32 7, !dbg !5418
  %160 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %direction_input, align 8, !dbg !5418
  %tobool174 = icmp ne i32 (%struct.gpio_chip*, i32)* %160, null, !dbg !5419
  %lnot175 = xor i1 %tobool174, true, !dbg !5419
  store i64 1, i64* %nr.addr.i260, align 8
  store i64* %flags173, i64** %addr.addr.i261, align 8
  %frombool.i263 = zext i1 %lnot175 to i8
  store i8 %frombool.i263, i8* %value.addr.i262, align 1
  %161 = load i8, i8* %value.addr.i262, align 1, !dbg !5420
  %tobool.i264 = trunc i8 %161 to i1, !dbg !5420
  br i1 %tobool.i264, label %if.then.i265, label %if.else.i266, !dbg !5421

if.then.i265:                                     ; preds = %if.else172
  %162 = load i64, i64* %nr.addr.i260, align 8, !dbg !5422
  %163 = load i64*, i64** %addr.addr.i261, align 8, !dbg !5423
  call void @set_bit(i64 %162, i64* %163) #12, !dbg !5424
  br label %assign_bit.exit267, !dbg !5424

if.else.i266:                                     ; preds = %if.else172
  %164 = load i64, i64* %nr.addr.i260, align 8, !dbg !5425
  %165 = load i64*, i64** %addr.addr.i261, align 8, !dbg !5426
  call void @clear_bit(i64 %164, i64* %165) #12, !dbg !5427
  br label %assign_bit.exit267

assign_bit.exit267:                               ; preds = %if.then.i265, %if.else.i266
  br label %if.end176

if.end176:                                        ; preds = %assign_bit.exit267, %assign_bit.exit
  br label %for.inc177, !dbg !5428

for.inc177:                                       ; preds = %if.end176
  %166 = load i32, i32* %i, align 4, !dbg !5429
  %inc178 = add i32 %166, 1, !dbg !5429
  store i32 %inc178, i32* %i, align 4, !dbg !5429
  br label %for.cond154, !dbg !5430, !llvm.loop !5431

for.end179:                                       ; preds = %for.cond154
  %167 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5433
  %call180 = call i32 @gpiochip_add_pin_ranges(%struct.gpio_chip* %167) #11, !dbg !5434
  store i32 %call180, i32* %ret, align 4, !dbg !5435
  %168 = load i32, i32* %ret, align 4, !dbg !5436
  %tobool181 = icmp ne i32 %168, 0, !dbg !5436
  br i1 %tobool181, label %if.then182, label %if.end183, !dbg !5438

if.then182:                                       ; preds = %for.end179
  br label %err_remove_of_chip, !dbg !5439

if.end183:                                        ; preds = %for.end179
  %169 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5440
  call void @acpi_gpiochip_add(%struct.gpio_chip* %169) #11, !dbg !5441
  %170 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5442
  call void @machine_gpiochip_add(%struct.gpio_chip* %170) #11, !dbg !5443
  %171 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5444
  %call184 = call i32 @gpiochip_irqchip_init_valid_mask(%struct.gpio_chip* %171) #11, !dbg !5445
  store i32 %call184, i32* %ret, align 4, !dbg !5446
  %172 = load i32, i32* %ret, align 4, !dbg !5447
  %tobool185 = icmp ne i32 %172, 0, !dbg !5447
  br i1 %tobool185, label %if.then186, label %if.end187, !dbg !5449

if.then186:                                       ; preds = %if.end183
  br label %err_remove_acpi_chip, !dbg !5450

if.end187:                                        ; preds = %if.end183
  %173 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5451
  %call188 = call i32 @gpiochip_irqchip_init_hw(%struct.gpio_chip* %173) #11, !dbg !5452
  store i32 %call188, i32* %ret, align 4, !dbg !5453
  %174 = load i32, i32* %ret, align 4, !dbg !5454
  %tobool189 = icmp ne i32 %174, 0, !dbg !5454
  br i1 %tobool189, label %if.then190, label %if.end191, !dbg !5456

if.then190:                                       ; preds = %if.end187
  br label %err_remove_acpi_chip, !dbg !5457

if.end191:                                        ; preds = %if.end187
  %175 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5458
  %176 = load %struct.lock_class_key*, %struct.lock_class_key** %lock_key.addr, align 8, !dbg !5459
  %177 = load %struct.lock_class_key*, %struct.lock_class_key** %request_key.addr, align 8, !dbg !5460
  %call192 = call i32 @gpiochip_add_irqchip(%struct.gpio_chip* %175, %struct.lock_class_key* %176, %struct.lock_class_key* %177) #11, !dbg !5461
  store i32 %call192, i32* %ret, align 4, !dbg !5462
  %178 = load i32, i32* %ret, align 4, !dbg !5463
  %tobool193 = icmp ne i32 %178, 0, !dbg !5463
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !5465

if.then194:                                       ; preds = %if.end191
  br label %err_remove_irqchip_mask, !dbg !5466

if.end195:                                        ; preds = %if.end191
  %179 = load i8, i8* @gpiolib_initialized, align 1, !dbg !5467
  %tobool196 = trunc i8 %179 to i1, !dbg !5467
  br i1 %tobool196, label %if.then197, label %if.end202, !dbg !5469

if.then197:                                       ; preds = %if.end195
  %180 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5470
  %call198 = call i32 @gpiochip_setup_dev(%struct.gpio_device* %180) #11, !dbg !5472
  store i32 %call198, i32* %ret, align 4, !dbg !5473
  %181 = load i32, i32* %ret, align 4, !dbg !5474
  %tobool199 = icmp ne i32 %181, 0, !dbg !5474
  br i1 %tobool199, label %if.then200, label %if.end201, !dbg !5476

if.then200:                                       ; preds = %if.then197
  br label %err_remove_irqchip, !dbg !5477

if.end201:                                        ; preds = %if.then197
  br label %if.end202, !dbg !5478

if.end202:                                        ; preds = %if.end201, %if.end195
  store i32 0, i32* %retval, align 4, !dbg !5479
  br label %return, !dbg !5479

err_remove_irqchip:                               ; preds = %if.then200
  call void @llvm.dbg.label(metadata !5480), !dbg !5481
  %182 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5482
  call void @gpiochip_irqchip_remove(%struct.gpio_chip* %182) #11, !dbg !5483
  br label %err_remove_irqchip_mask, !dbg !5483

err_remove_irqchip_mask:                          ; preds = %err_remove_irqchip, %if.then194
  call void @llvm.dbg.label(metadata !5484), !dbg !5485
  %183 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5486
  call void @gpiochip_irqchip_free_valid_mask(%struct.gpio_chip* %183) #11, !dbg !5487
  br label %err_remove_acpi_chip, !dbg !5487

err_remove_acpi_chip:                             ; preds = %err_remove_irqchip_mask, %if.then190, %if.then186
  call void @llvm.dbg.label(metadata !5488), !dbg !5489
  %184 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5490
  call void @acpi_gpiochip_remove(%struct.gpio_chip* %184) #11, !dbg !5491
  br label %err_remove_of_chip, !dbg !5491

err_remove_of_chip:                               ; preds = %err_remove_acpi_chip, %if.then182, %if.then152
  call void @llvm.dbg.label(metadata !5492), !dbg !5493
  %185 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5494
  call void @gpiochip_free_hogs(%struct.gpio_chip* %185) #11, !dbg !5495
  %186 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5496
  call void @of_gpiochip_remove(%struct.gpio_chip* %186) #11, !dbg !5497
  br label %err_free_gpiochip_mask, !dbg !5497

err_free_gpiochip_mask:                           ; preds = %err_remove_of_chip, %if.then148
  call void @llvm.dbg.label(metadata !5498), !dbg !5499
  %187 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5500
  call void @gpiochip_remove_pin_ranges(%struct.gpio_chip* %187) #11, !dbg !5501
  %188 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5502
  call void @gpiochip_free_valid_mask(%struct.gpio_chip* %188) #11, !dbg !5503
  br label %err_remove_from_list, !dbg !5503

err_remove_from_list:                             ; preds = %err_free_gpiochip_mask, %if.then144, %if.then140
  call void @llvm.dbg.label(metadata !5504), !dbg !5505
  br label %do.body203, !dbg !5506

do.body203:                                       ; preds = %err_remove_from_list
  br label %do.body204, !dbg !5507

do.body204:                                       ; preds = %do.body203
  call void @llvm.dbg.declare(metadata i64* %__dummy205, metadata !5508, metadata !DIExpression()), !dbg !5510
  call void @llvm.dbg.declare(metadata i64* %__dummy2206, metadata !5511, metadata !DIExpression()), !dbg !5510
  %cmp207 = icmp eq i64* %__dummy205, %__dummy2206, !dbg !5510
  %conv208 = zext i1 %cmp207 to i32, !dbg !5510
  store i32 1, i32* %tmp209, align 4, !dbg !5510
  %189 = load i32, i32* %tmp209, align 4, !dbg !5510
  br label %do.body210, !dbg !5512

do.body210:                                       ; preds = %do.body204
  br label %do.body211, !dbg !5513

do.body211:                                       ; preds = %do.body210
  br label %do.body212, !dbg !5514

do.body212:                                       ; preds = %do.body211
  call void @llvm.dbg.declare(metadata i64* %__dummy213, metadata !5516, metadata !DIExpression()), !dbg !5519
  call void @llvm.dbg.declare(metadata i64* %__dummy2214, metadata !5520, metadata !DIExpression()), !dbg !5519
  %cmp215 = icmp eq i64* %__dummy213, %__dummy2214, !dbg !5519
  %conv216 = zext i1 %cmp215 to i32, !dbg !5519
  store i32 1, i32* %tmp217, align 4, !dbg !5519
  %190 = load i32, i32* %tmp217, align 4, !dbg !5519
  %call218 = call i64 @arch_local_irq_save() #11, !dbg !5521
  store i64 %call218, i64* %flags, align 8, !dbg !5521
  br label %do.end219, !dbg !5521

do.end219:                                        ; preds = %do.body212
  br label %do.end220, !dbg !5514

do.end220:                                        ; preds = %do.end219
  br label %do.body221, !dbg !5513

do.body221:                                       ; preds = %do.end220
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5522, !srcloc !5523
  br label %do.body222, !dbg !5522

do.body222:                                       ; preds = %do.body221
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i268, align 8
  %191 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i268, align 8, !dbg !5524
  %192 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %191, i32 0, i32 0, !dbg !5525
  %rlock.i269 = bitcast %union.anon* %192 to %struct.raw_spinlock*, !dbg !5525
  br label %do.end224, !dbg !5526

do.end224:                                        ; preds = %do.body222
  br label %do.end225, !dbg !5522

do.end225:                                        ; preds = %do.end224
  br label %do.end226, !dbg !5513

do.end226:                                        ; preds = %do.end225
  br label %do.end227, !dbg !5512

do.end227:                                        ; preds = %do.end226
  br label %do.end228, !dbg !5507

do.end228:                                        ; preds = %do.end227
  %193 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5527
  %list = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %193, i32 0, i32 11, !dbg !5528
  call void @list_del(%struct.list_head* %list) #11, !dbg !5529
  %194 = load i64, i64* %flags, align 8, !dbg !5530
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i243, align 8
  store i64 %194, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !265, metadata !4706, metadata !DIExpression()) #7, !dbg !5531
  call void @llvm.dbg.declare(metadata !265, metadata !4710, metadata !DIExpression()) #7, !dbg !5531
  store i32 1, i32* %tmp.i, align 4, !dbg !5531
  %195 = load i32, i32* %tmp.i, align 4, !dbg !5531
  call void @llvm.dbg.declare(metadata !265, metadata !4711, metadata !DIExpression()) #7, !dbg !5532
  call void @llvm.dbg.declare(metadata !265, metadata !4717, metadata !DIExpression()) #7, !dbg !5532
  store i32 1, i32* %tmp8.i, align 4, !dbg !5532
  %196 = load i32, i32* %tmp8.i, align 4, !dbg !5532
  %197 = load i64, i64* %flags.addr.i, align 8, !dbg !5533
  call void @arch_local_irq_restore(i64 %197) #12, !dbg !5533
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5534, !srcloc !4721
  %198 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i243, align 8, !dbg !5535
  %199 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %198, i32 0, i32 0, !dbg !5535
  %rlock.i244 = bitcast %union.anon* %199 to %struct.raw_spinlock*, !dbg !5535
  br label %err_free_label, !dbg !5536

err_free_label:                                   ; preds = %do.end228, %if.then120, %if.then113
  call void @llvm.dbg.label(metadata !5537), !dbg !5538
  %200 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5539
  %label229 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %200, i32 0, i32 9, !dbg !5540
  %201 = load i8*, i8** %label229, align 8, !dbg !5540
  call void @kfree_const(i8* %201) #11, !dbg !5541
  br label %err_free_descs, !dbg !5541

err_free_descs:                                   ; preds = %err_free_label, %if.then79, %if.then58
  call void @llvm.dbg.label(metadata !5542), !dbg !5543
  %202 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5544
  %descs230 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %202, i32 0, i32 6, !dbg !5545
  %203 = load %struct.gpio_desc*, %struct.gpio_desc** %descs230, align 8, !dbg !5545
  %204 = bitcast %struct.gpio_desc* %203 to i8*, !dbg !5544
  call void @kfree(i8* %204) #11, !dbg !5546
  br label %err_free_ida, !dbg !5546

err_free_ida:                                     ; preds = %err_free_descs, %if.then52
  call void @llvm.dbg.label(metadata !5547), !dbg !5548
  %205 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5549
  %id231 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %205, i32 0, i32 0, !dbg !5550
  %206 = load i32, i32* %id231, align 8, !dbg !5550
  call void @ida_free(%struct.ida* @gpio_ida, i32 %206) #11, !dbg !5551
  br label %err_free_gdev, !dbg !5551

err_free_gdev:                                    ; preds = %err_free_ida, %if.then23
  call void @llvm.dbg.label(metadata !5552), !dbg !5553
  %207 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5554
  %base232 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %207, i32 0, i32 7, !dbg !5554
  %208 = load i32, i32* %base232, align 8, !dbg !5554
  %209 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5554
  %base233 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %209, i32 0, i32 7, !dbg !5554
  %210 = load i32, i32* %base233, align 8, !dbg !5554
  %211 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5554
  %ngpio234 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %211, i32 0, i32 8, !dbg !5554
  %212 = load i16, i16* %ngpio234, align 4, !dbg !5554
  %conv235 = zext i16 %212 to i32, !dbg !5554
  %add = add i32 %210, %conv235, !dbg !5554
  %sub = sub i32 %add, 1, !dbg !5554
  %213 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !5554
  %label236 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %213, i32 0, i32 0, !dbg !5554
  %214 = load i8*, i8** %label236, align 8, !dbg !5554
  %tobool237 = icmp ne i8* %214, null, !dbg !5554
  br i1 %tobool237, label %cond.true238, label %cond.false239, !dbg !5554

cond.true238:                                     ; preds = %err_free_gdev
  br label %cond.end240, !dbg !5554

cond.false239:                                    ; preds = %err_free_gdev
  br label %cond.end240, !dbg !5554

cond.end240:                                      ; preds = %cond.false239, %cond.true238
  %cond241 = phi i8* [ %214, %cond.true238 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), %cond.false239 ], !dbg !5554
  %215 = load i32, i32* %ret, align 4, !dbg !5554
  %call242 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.gpiochip_add_data_with_key, i64 0, i64 0), i32 %208, i32 %sub, i8* %cond241, i32 %215) #13, !dbg !5554
  %216 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5555
  %217 = bitcast %struct.gpio_device* %216 to i8*, !dbg !5555
  call void @kfree(i8* %217) #11, !dbg !5556
  %218 = load i32, i32* %ret, align 4, !dbg !5557
  store i32 %218, i32* %retval, align 4, !dbg !5558
  br label %return, !dbg !5558

return:                                           ; preds = %cond.end240, %if.end202, %if.then
  %219 = load i32, i32* %retval, align 4, !dbg !5559
  ret i32 %219, !dbg !5559
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !5560 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5563, metadata !DIExpression()), !dbg !5567
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5573, metadata !DIExpression()), !dbg !5574
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5575, metadata !DIExpression()), !dbg !5576
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5577, metadata !DIExpression()), !dbg !5578
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5579, metadata !DIExpression()), !dbg !5583
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5585, metadata !DIExpression()), !dbg !5589
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5591, metadata !DIExpression()), !dbg !5595
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5600, metadata !DIExpression()), !dbg !5601
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5602, metadata !DIExpression()), !dbg !5603
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5604, metadata !DIExpression()), !dbg !5605
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5606, metadata !DIExpression()), !dbg !5607
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5608, metadata !DIExpression()), !dbg !5609
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5610, metadata !DIExpression()), !dbg !5611
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5612, metadata !DIExpression()), !dbg !5613
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5614, metadata !DIExpression()), !dbg !5615
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5616, metadata !DIExpression()), !dbg !5617
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5618, metadata !DIExpression()), !dbg !5619
  %0 = load i64, i64* %size.addr, align 8, !dbg !5620
  %1 = load i32, i32* %flags.addr, align 4, !dbg !5621
  %or = or i32 %1, 256, !dbg !5622
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !5623
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #7, !dbg !5624
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !5625

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5626
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !5627
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5628

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !5629
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !5630
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5631
  %call.i.i = call i32 @get_order(i64 %7) #14, !dbg !5632
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !5609
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !5633
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5634
  %10 = load i32, i32* %order.i.i, align 4, !dbg !5635
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5636
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5637
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !5638
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !5639
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5639
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !5639
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5639
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !5639
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !5640
  br label %kmalloc.exit, !dbg !5640

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !5641
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5642
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !5642
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5644

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5645
  br label %kmalloc_index.exit.i, !dbg !5645

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5646
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !5648
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5649

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5650
  br label %kmalloc_index.exit.i, !dbg !5650

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5651
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !5653
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5654

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5655
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !5656
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5657

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5658
  br label %kmalloc_index.exit.i, !dbg !5658

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5659
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !5661
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5662

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5663
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !5664
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5665

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5666
  br label %kmalloc_index.exit.i, !dbg !5666

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5667
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !5669
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5670

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5671
  br label %kmalloc_index.exit.i, !dbg !5671

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5672
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !5674
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5675

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5676
  br label %kmalloc_index.exit.i, !dbg !5676

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5677
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !5679
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5680

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5681
  br label %kmalloc_index.exit.i, !dbg !5681

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5682
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !5684
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5685

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5686
  br label %kmalloc_index.exit.i, !dbg !5686

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5687
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !5689
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5690

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !5691
  br label %kmalloc_index.exit.i, !dbg !5691

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5692
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !5694
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !5695

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !5696
  br label %kmalloc_index.exit.i, !dbg !5696

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5697
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !5699
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !5700

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !5701
  br label %kmalloc_index.exit.i, !dbg !5701

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5702
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !5704
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !5705

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !5706
  br label %kmalloc_index.exit.i, !dbg !5706

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5707
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !5709
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !5710

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !5711
  br label %kmalloc_index.exit.i, !dbg !5711

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5712
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !5714
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !5715

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !5716
  br label %kmalloc_index.exit.i, !dbg !5716

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5717
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !5719
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !5720

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !5721
  br label %kmalloc_index.exit.i, !dbg !5721

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5722
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !5724
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !5725

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !5726
  br label %kmalloc_index.exit.i, !dbg !5726

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5727
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !5729
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !5730

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !5731
  br label %kmalloc_index.exit.i, !dbg !5731

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5732
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !5734
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !5735

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !5736
  br label %kmalloc_index.exit.i, !dbg !5736

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5737
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !5739
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !5740

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !5741
  br label %kmalloc_index.exit.i, !dbg !5741

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5742
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !5744
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !5745

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !5746
  br label %kmalloc_index.exit.i, !dbg !5746

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5747
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !5749
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !5750

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !5751
  br label %kmalloc_index.exit.i, !dbg !5751

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5752
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !5754
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !5755

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !5756
  br label %kmalloc_index.exit.i, !dbg !5756

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5757
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !5759
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !5760

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !5761
  br label %kmalloc_index.exit.i, !dbg !5761

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5762
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !5764
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !5765

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !5766
  br label %kmalloc_index.exit.i, !dbg !5766

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5767
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !5769
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !5770

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !5771
  br label %kmalloc_index.exit.i, !dbg !5771

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5772
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !5774
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !5775

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !5776
  br label %kmalloc_index.exit.i, !dbg !5776

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5777
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !5779
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !5780

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !5781
  br label %kmalloc_index.exit.i, !dbg !5781

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5782
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !5784
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !5785

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !5786
  br label %kmalloc_index.exit.i, !dbg !5786

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.46, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !5787, !srcloc !5790
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 107) #7, !dbg !5791, !srcloc !5794
  unreachable, !dbg !5795

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !5796
  store i32 %45, i32* %index.i, align 4, !dbg !5797
  %46 = load i32, i32* %index.i, align 4, !dbg !5798
  %tobool.i = icmp ne i32 %46, 0, !dbg !5798
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !5800

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !5801
  br label %kmalloc.exit, !dbg !5801

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !5802
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5803
  %and.i.i = and i32 %48, 17, !dbg !5803
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !5803
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !5803
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !5803
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5803
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !5805

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !5806
  br label %kmalloc_type.exit.i, !dbg !5806

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5807
  %and2.i.i = and i32 %49, 1, !dbg !5808
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !5807
  %50 = zext i1 %tobool3.i.i to i64, !dbg !5807
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !5807
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !5809
  br label %kmalloc_type.exit.i, !dbg !5809

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !5810
  %idxprom.i = zext i32 %51 to i64, !dbg !5811
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !5811
  %52 = load i32, i32* %index.i, align 4, !dbg !5812
  %idxprom6.i = zext i32 %52 to i64, !dbg !5811
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !5811
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !5811
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !5813
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !5814
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5815
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5816
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !5817
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !5817
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !5817
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !5817
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !5817
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !5578
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5818
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !5819
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !5820
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5821
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !5822
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !5823
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !5824
  store i8* %62, i8** %retval.i, align 8, !dbg !5825
  br label %kmalloc.exit, !dbg !5825

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !5826
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !5827
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !5828
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !5828
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !5828
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !5828
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !5828
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !5829
  br label %kmalloc.exit, !dbg !5829

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !5830
  ret i8* %65, !dbg !5831
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ida_alloc(%struct.ida* %ida, i32 %gfp) #0 !dbg !5832 {
entry:
  %ida.addr = alloca %struct.ida*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.ida* %ida, %struct.ida** %ida.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ida** %ida.addr, metadata !5836, metadata !DIExpression()), !dbg !5837
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !5838, metadata !DIExpression()), !dbg !5839
  %0 = load %struct.ida*, %struct.ida** %ida.addr, align 8, !dbg !5840
  %1 = load i32, i32* %gfp.addr, align 4, !dbg !5841
  %call = call i32 @ida_alloc_range(%struct.ida* %0, i32 0, i32 -1, i32 %1) #11, !dbg !5842
  ret i32 %call, !dbg !5843
}

; Function Attrs: noredzone
declare dso_local i32 @dev_set_name(%struct.device*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local void @device_initialize(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #0 !dbg !5844 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5847, metadata !DIExpression()), !dbg !5848
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5849, metadata !DIExpression()), !dbg !5850
  %0 = load i8*, i8** %data.addr, align 8, !dbg !5851
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5852
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !5853
  store i8* %0, i8** %driver_data, align 8, !dbg !5854
  ret void, !dbg !5855
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #0 !dbg !5856 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !5859, metadata !DIExpression()), !dbg !5860
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5861, metadata !DIExpression()), !dbg !5862
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5863, metadata !DIExpression()), !dbg !5864
  %0 = load i64, i64* %n.addr, align 8, !dbg !5865
  %1 = load i64, i64* %size.addr, align 8, !dbg !5866
  %2 = load i32, i32* %flags.addr, align 4, !dbg !5867
  %or = or i32 %2, 256, !dbg !5868
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #11, !dbg !5869
  ret i8* %call, !dbg !5870
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #3

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local i8* @kstrdup_const(i8*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpiochip_find_base(i32 %ngpio) #0 !dbg !5871 {
entry:
  %retval = alloca i32, align 4
  %ngpio.addr = alloca i32, align 4
  %gdev = alloca %struct.gpio_device*, align 8
  %base = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.gpio_device*, align 8
  %__mptr7 = alloca i8*, align 8
  %tmp11 = alloca %struct.gpio_device*, align 8
  %tmp14 = alloca i32, align 4
  store i32 %ngpio, i32* %ngpio.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ngpio.addr, metadata !5872, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %gdev, metadata !5874, metadata !DIExpression()), !dbg !5875
  call void @llvm.dbg.declare(metadata i32* %base, metadata !5876, metadata !DIExpression()), !dbg !5877
  %0 = load i32, i32* %ngpio.addr, align 4, !dbg !5878
  %sub = sub i32 512, %0, !dbg !5879
  store i32 %sub, i32* %base, align 4, !dbg !5877
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5880, metadata !DIExpression()), !dbg !5883
  %1 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @gpio_devices, i32 0, i32 1), align 8, !dbg !5883
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !5883
  store i8* %2, i8** %__mptr, align 8, !dbg !5883
  br label %do.body, !dbg !5883

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5884

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !5883
  %add.ptr = getelementptr i8, i8* %3, i64 -864, !dbg !5883
  %4 = bitcast i8* %add.ptr to %struct.gpio_device*, !dbg !5883
  store %struct.gpio_device* %4, %struct.gpio_device** %tmp, align 8, !dbg !5884
  %5 = load %struct.gpio_device*, %struct.gpio_device** %tmp, align 8, !dbg !5883
  store %struct.gpio_device* %5, %struct.gpio_device** %gdev, align 8, !dbg !5886
  br label %for.cond, !dbg !5886

for.cond:                                         ; preds = %do.end10, %do.end
  %6 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5887
  %list = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %6, i32 0, i32 11, !dbg !5887
  %cmp = icmp eq %struct.list_head* %list, @gpio_devices, !dbg !5887
  %lnot = xor i1 %cmp, true, !dbg !5887
  br i1 %lnot, label %for.body, label %for.end, !dbg !5886

for.body:                                         ; preds = %for.cond
  %7 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5889
  %base1 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %7, i32 0, i32 7, !dbg !5892
  %8 = load i32, i32* %base1, align 8, !dbg !5892
  %9 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5893
  %ngpio2 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %9, i32 0, i32 8, !dbg !5894
  %10 = load i16, i16* %ngpio2, align 4, !dbg !5894
  %conv = zext i16 %10 to i32, !dbg !5893
  %add = add i32 %8, %conv, !dbg !5895
  %11 = load i32, i32* %base, align 4, !dbg !5896
  %cmp3 = icmp sle i32 %add, %11, !dbg !5897
  br i1 %cmp3, label %if.then, label %if.else, !dbg !5898

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !5899

if.else:                                          ; preds = %for.body
  %12 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5900
  %base5 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %12, i32 0, i32 7, !dbg !5901
  %13 = load i32, i32* %base5, align 8, !dbg !5901
  %14 = load i32, i32* %ngpio.addr, align 4, !dbg !5902
  %sub6 = sub i32 %13, %14, !dbg !5903
  store i32 %sub6, i32* %base, align 4, !dbg !5904
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %for.inc, !dbg !5905

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr7, metadata !5906, metadata !DIExpression()), !dbg !5908
  %15 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5908
  %list8 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %15, i32 0, i32 11, !dbg !5908
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %list8, i32 0, i32 1, !dbg !5908
  %16 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !5908
  %17 = bitcast %struct.list_head* %16 to i8*, !dbg !5908
  store i8* %17, i8** %__mptr7, align 8, !dbg !5908
  br label %do.body9, !dbg !5908

do.body9:                                         ; preds = %for.inc
  br label %do.end10, !dbg !5909

do.end10:                                         ; preds = %do.body9
  %18 = load i8*, i8** %__mptr7, align 8, !dbg !5908
  %add.ptr12 = getelementptr i8, i8* %18, i64 -864, !dbg !5908
  %19 = bitcast i8* %add.ptr12 to %struct.gpio_device*, !dbg !5908
  store %struct.gpio_device* %19, %struct.gpio_device** %tmp11, align 8, !dbg !5909
  %20 = load %struct.gpio_device*, %struct.gpio_device** %tmp11, align 8, !dbg !5908
  store %struct.gpio_device* %20, %struct.gpio_device** %gdev, align 8, !dbg !5887
  br label %for.cond, !dbg !5887, !llvm.loop !5911

for.end:                                          ; preds = %if.then, %for.cond
  %21 = load i32, i32* %base, align 4, !dbg !5913
  %call = call zeroext i1 @gpio_is_valid(i32 %21) #11, !dbg !5915
  br i1 %call, label %if.then13, label %if.else15, !dbg !5916

if.then13:                                        ; preds = %for.end
  store i32 0, i32* %tmp14, align 4, !dbg !5917
  %22 = load i32, i32* %tmp14, align 4, !dbg !5921
  %23 = load i32, i32* %base, align 4, !dbg !5922
  store i32 %23, i32* %retval, align 4, !dbg !5923
  br label %return, !dbg !5923

if.else15:                                        ; preds = %for.end
  %call16 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.gpiochip_find_base, i64 0, i64 0)) #13, !dbg !5924
  store i32 -28, i32* %retval, align 4, !dbg !5926
  br label %return, !dbg !5926

return:                                           ; preds = %if.else15, %if.then13
  %24 = load i32, i32* %retval, align 4, !dbg !5927
  ret i32 %24, !dbg !5927
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpiodev_add_to_list(%struct.gpio_device* %gdev) #0 !dbg !5928 {
entry:
  %retval = alloca i32, align 4
  %gdev.addr = alloca %struct.gpio_device*, align 8
  %prev = alloca %struct.gpio_device*, align 8
  %next = alloca %struct.gpio_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.gpio_device*, align 8
  %__mptr6 = alloca i8*, align 8
  %tmp9 = alloca %struct.gpio_device*, align 8
  %__mptr21 = alloca i8*, align 8
  %tmp24 = alloca %struct.gpio_device*, align 8
  %__mptr26 = alloca i8*, align 8
  %tmp31 = alloca %struct.gpio_device*, align 8
  %__mptr59 = alloca i8*, align 8
  %tmp64 = alloca %struct.gpio_device*, align 8
  store %struct.gpio_device* %gdev, %struct.gpio_device** %gdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %gdev.addr, metadata !5931, metadata !DIExpression()), !dbg !5932
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %prev, metadata !5933, metadata !DIExpression()), !dbg !5934
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %next, metadata !5935, metadata !DIExpression()), !dbg !5936
  %call = call i32 @list_empty(%struct.list_head* @gpio_devices) #11, !dbg !5937
  %tobool = icmp ne i32 %call, 0, !dbg !5937
  br i1 %tobool, label %if.then, label %if.end, !dbg !5939

if.then:                                          ; preds = %entry
  %0 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !5940
  %list = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %0, i32 0, i32 11, !dbg !5942
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* @gpio_devices) #11, !dbg !5943
  store i32 0, i32* %retval, align 4, !dbg !5944
  br label %return, !dbg !5944

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5945, metadata !DIExpression()), !dbg !5947
  %1 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @gpio_devices, i32 0, i32 0), align 8, !dbg !5947
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !5947
  store i8* %2, i8** %__mptr, align 8, !dbg !5947
  br label %do.body, !dbg !5947

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !5948

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !5947
  %add.ptr = getelementptr i8, i8* %3, i64 -864, !dbg !5947
  %4 = bitcast i8* %add.ptr to %struct.gpio_device*, !dbg !5947
  store %struct.gpio_device* %4, %struct.gpio_device** %tmp, align 8, !dbg !5948
  %5 = load %struct.gpio_device*, %struct.gpio_device** %tmp, align 8, !dbg !5947
  store %struct.gpio_device* %5, %struct.gpio_device** %next, align 8, !dbg !5950
  %6 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !5951
  %base = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %6, i32 0, i32 7, !dbg !5953
  %7 = load i32, i32* %base, align 8, !dbg !5953
  %8 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !5954
  %ngpio = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %8, i32 0, i32 8, !dbg !5955
  %9 = load i16, i16* %ngpio, align 4, !dbg !5955
  %conv = zext i16 %9 to i32, !dbg !5954
  %add = add i32 %7, %conv, !dbg !5956
  %10 = load %struct.gpio_device*, %struct.gpio_device** %next, align 8, !dbg !5957
  %base1 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %10, i32 0, i32 7, !dbg !5958
  %11 = load i32, i32* %base1, align 8, !dbg !5958
  %cmp = icmp sle i32 %add, %11, !dbg !5959
  br i1 %cmp, label %if.then3, label %if.end5, !dbg !5960

if.then3:                                         ; preds = %do.end
  %12 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !5961
  %list4 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %12, i32 0, i32 11, !dbg !5963
  call void @list_add(%struct.list_head* %list4, %struct.list_head* @gpio_devices) #11, !dbg !5964
  store i32 0, i32* %retval, align 4, !dbg !5965
  br label %return, !dbg !5965

if.end5:                                          ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8** %__mptr6, metadata !5966, metadata !DIExpression()), !dbg !5968
  %13 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @gpio_devices, i32 0, i32 1), align 8, !dbg !5968
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !5968
  store i8* %14, i8** %__mptr6, align 8, !dbg !5968
  br label %do.body7, !dbg !5968

do.body7:                                         ; preds = %if.end5
  br label %do.end8, !dbg !5969

do.end8:                                          ; preds = %do.body7
  %15 = load i8*, i8** %__mptr6, align 8, !dbg !5968
  %add.ptr10 = getelementptr i8, i8* %15, i64 -864, !dbg !5968
  %16 = bitcast i8* %add.ptr10 to %struct.gpio_device*, !dbg !5968
  store %struct.gpio_device* %16, %struct.gpio_device** %tmp9, align 8, !dbg !5969
  %17 = load %struct.gpio_device*, %struct.gpio_device** %tmp9, align 8, !dbg !5968
  store %struct.gpio_device* %17, %struct.gpio_device** %prev, align 8, !dbg !5971
  %18 = load %struct.gpio_device*, %struct.gpio_device** %prev, align 8, !dbg !5972
  %base11 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %18, i32 0, i32 7, !dbg !5974
  %19 = load i32, i32* %base11, align 8, !dbg !5974
  %20 = load %struct.gpio_device*, %struct.gpio_device** %prev, align 8, !dbg !5975
  %ngpio12 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %20, i32 0, i32 8, !dbg !5976
  %21 = load i16, i16* %ngpio12, align 4, !dbg !5976
  %conv13 = zext i16 %21 to i32, !dbg !5975
  %add14 = add i32 %19, %conv13, !dbg !5977
  %22 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !5978
  %base15 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %22, i32 0, i32 7, !dbg !5979
  %23 = load i32, i32* %base15, align 8, !dbg !5979
  %cmp16 = icmp sle i32 %add14, %23, !dbg !5980
  br i1 %cmp16, label %if.then18, label %if.end20, !dbg !5981

if.then18:                                        ; preds = %do.end8
  %24 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !5982
  %list19 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %24, i32 0, i32 11, !dbg !5984
  call void @list_add_tail(%struct.list_head* %list19, %struct.list_head* @gpio_devices) #11, !dbg !5985
  store i32 0, i32* %retval, align 4, !dbg !5986
  br label %return, !dbg !5986

if.end20:                                         ; preds = %do.end8
  call void @llvm.dbg.declare(metadata i8** %__mptr21, metadata !5987, metadata !DIExpression()), !dbg !5990
  %25 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @gpio_devices, i32 0, i32 0), align 8, !dbg !5990
  %26 = bitcast %struct.list_head* %25 to i8*, !dbg !5990
  store i8* %26, i8** %__mptr21, align 8, !dbg !5990
  br label %do.body22, !dbg !5990

do.body22:                                        ; preds = %if.end20
  br label %do.end23, !dbg !5991

do.end23:                                         ; preds = %do.body22
  %27 = load i8*, i8** %__mptr21, align 8, !dbg !5990
  %add.ptr25 = getelementptr i8, i8* %27, i64 -864, !dbg !5990
  %28 = bitcast i8* %add.ptr25 to %struct.gpio_device*, !dbg !5990
  store %struct.gpio_device* %28, %struct.gpio_device** %tmp24, align 8, !dbg !5991
  %29 = load %struct.gpio_device*, %struct.gpio_device** %tmp24, align 8, !dbg !5990
  store %struct.gpio_device* %29, %struct.gpio_device** %prev, align 8, !dbg !5993
  call void @llvm.dbg.declare(metadata i8** %__mptr26, metadata !5994, metadata !DIExpression()), !dbg !5996
  %30 = load %struct.gpio_device*, %struct.gpio_device** %prev, align 8, !dbg !5996
  %list27 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %30, i32 0, i32 11, !dbg !5996
  %next28 = getelementptr inbounds %struct.list_head, %struct.list_head* %list27, i32 0, i32 0, !dbg !5996
  %31 = load %struct.list_head*, %struct.list_head** %next28, align 8, !dbg !5996
  %32 = bitcast %struct.list_head* %31 to i8*, !dbg !5996
  store i8* %32, i8** %__mptr26, align 8, !dbg !5996
  br label %do.body29, !dbg !5996

do.body29:                                        ; preds = %do.end23
  br label %do.end30, !dbg !5997

do.end30:                                         ; preds = %do.body29
  %33 = load i8*, i8** %__mptr26, align 8, !dbg !5996
  %add.ptr32 = getelementptr i8, i8* %33, i64 -864, !dbg !5996
  %34 = bitcast i8* %add.ptr32 to %struct.gpio_device*, !dbg !5996
  store %struct.gpio_device* %34, %struct.gpio_device** %tmp31, align 8, !dbg !5997
  %35 = load %struct.gpio_device*, %struct.gpio_device** %tmp31, align 8, !dbg !5996
  store %struct.gpio_device* %35, %struct.gpio_device** %next, align 8, !dbg !5993
  br label %for.cond, !dbg !5993

for.cond:                                         ; preds = %do.end63, %do.end30
  %36 = load %struct.gpio_device*, %struct.gpio_device** %prev, align 8, !dbg !5999
  %list33 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %36, i32 0, i32 11, !dbg !5999
  %cmp34 = icmp eq %struct.list_head* %list33, @gpio_devices, !dbg !5999
  %lnot = xor i1 %cmp34, true, !dbg !5999
  br i1 %lnot, label %for.body, label %for.end, !dbg !5993

for.body:                                         ; preds = %for.cond
  %37 = load %struct.gpio_device*, %struct.gpio_device** %next, align 8, !dbg !6001
  %list36 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %37, i32 0, i32 11, !dbg !6004
  %cmp37 = icmp eq %struct.list_head* %list36, @gpio_devices, !dbg !6005
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !6006

if.then39:                                        ; preds = %for.body
  br label %for.end, !dbg !6007

if.end40:                                         ; preds = %for.body
  %38 = load %struct.gpio_device*, %struct.gpio_device** %prev, align 8, !dbg !6008
  %base41 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %38, i32 0, i32 7, !dbg !6010
  %39 = load i32, i32* %base41, align 8, !dbg !6010
  %40 = load %struct.gpio_device*, %struct.gpio_device** %prev, align 8, !dbg !6011
  %ngpio42 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %40, i32 0, i32 8, !dbg !6012
  %41 = load i16, i16* %ngpio42, align 4, !dbg !6012
  %conv43 = zext i16 %41 to i32, !dbg !6011
  %add44 = add i32 %39, %conv43, !dbg !6013
  %42 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !6014
  %base45 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %42, i32 0, i32 7, !dbg !6015
  %43 = load i32, i32* %base45, align 8, !dbg !6015
  %cmp46 = icmp sle i32 %add44, %43, !dbg !6016
  br i1 %cmp46, label %land.lhs.true, label %if.end58, !dbg !6017

land.lhs.true:                                    ; preds = %if.end40
  %44 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !6018
  %base48 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %44, i32 0, i32 7, !dbg !6019
  %45 = load i32, i32* %base48, align 8, !dbg !6019
  %46 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !6020
  %ngpio49 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %46, i32 0, i32 8, !dbg !6021
  %47 = load i16, i16* %ngpio49, align 4, !dbg !6021
  %conv50 = zext i16 %47 to i32, !dbg !6020
  %add51 = add i32 %45, %conv50, !dbg !6022
  %48 = load %struct.gpio_device*, %struct.gpio_device** %next, align 8, !dbg !6023
  %base52 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %48, i32 0, i32 7, !dbg !6024
  %49 = load i32, i32* %base52, align 8, !dbg !6024
  %cmp53 = icmp sle i32 %add51, %49, !dbg !6025
  br i1 %cmp53, label %if.then55, label %if.end58, !dbg !6026

if.then55:                                        ; preds = %land.lhs.true
  %50 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !6027
  %list56 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %50, i32 0, i32 11, !dbg !6029
  %51 = load %struct.gpio_device*, %struct.gpio_device** %prev, align 8, !dbg !6030
  %list57 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %51, i32 0, i32 11, !dbg !6031
  call void @list_add(%struct.list_head* %list56, %struct.list_head* %list57) #11, !dbg !6032
  store i32 0, i32* %retval, align 4, !dbg !6033
  br label %return, !dbg !6033

if.end58:                                         ; preds = %land.lhs.true, %if.end40
  br label %for.inc, !dbg !6034

for.inc:                                          ; preds = %if.end58
  %52 = load %struct.gpio_device*, %struct.gpio_device** %next, align 8, !dbg !5999
  store %struct.gpio_device* %52, %struct.gpio_device** %prev, align 8, !dbg !5999
  call void @llvm.dbg.declare(metadata i8** %__mptr59, metadata !6035, metadata !DIExpression()), !dbg !6037
  %53 = load %struct.gpio_device*, %struct.gpio_device** %next, align 8, !dbg !6037
  %list60 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %53, i32 0, i32 11, !dbg !6037
  %next61 = getelementptr inbounds %struct.list_head, %struct.list_head* %list60, i32 0, i32 0, !dbg !6037
  %54 = load %struct.list_head*, %struct.list_head** %next61, align 8, !dbg !6037
  %55 = bitcast %struct.list_head* %54 to i8*, !dbg !6037
  store i8* %55, i8** %__mptr59, align 8, !dbg !6037
  br label %do.body62, !dbg !6037

do.body62:                                        ; preds = %for.inc
  br label %do.end63, !dbg !6038

do.end63:                                         ; preds = %do.body62
  %56 = load i8*, i8** %__mptr59, align 8, !dbg !6037
  %add.ptr65 = getelementptr i8, i8* %56, i64 -864, !dbg !6037
  %57 = bitcast i8* %add.ptr65 to %struct.gpio_device*, !dbg !6037
  store %struct.gpio_device* %57, %struct.gpio_device** %tmp64, align 8, !dbg !6038
  %58 = load %struct.gpio_device*, %struct.gpio_device** %tmp64, align 8, !dbg !6037
  store %struct.gpio_device* %58, %struct.gpio_device** %next, align 8, !dbg !5999
  br label %for.cond, !dbg !5999, !llvm.loop !6040

for.end:                                          ; preds = %if.then39, %for.cond
  %59 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !6042
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %59, i32 0, i32 1, !dbg !6042
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.38, i64 0, i64 0)) #13, !dbg !6042
  store i32 -16, i32* %retval, align 4, !dbg !6043
  br label %return, !dbg !6043

return:                                           ; preds = %for.end, %if.then55, %if.then18, %if.then3, %if.then
  %60 = load i32, i32* %retval, align 4, !dbg !6044
  ret i32 %60, !dbg !6044
}

; Function Attrs: noredzone
declare dso_local void @__init_rwsem(%struct.rw_semaphore*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpiochip_set_desc_names(%struct.gpio_chip* %gc) #0 !dbg !6045 {
entry:
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %gdev = alloca %struct.gpio_device*, align 8
  %i = alloca i32, align 4
  %gpio = alloca %struct.gpio_desc*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !6046, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %gdev, metadata !6048, metadata !DIExpression()), !dbg !6049
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6050
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 1, !dbg !6051
  %1 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !6051
  store %struct.gpio_device* %1, %struct.gpio_device** %gdev, align 8, !dbg !6049
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6052, metadata !DIExpression()), !dbg !6053
  store i32 0, i32* %i, align 4, !dbg !6054
  br label %for.cond, !dbg !6056

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !6057
  %3 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6059
  %ngpio = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %3, i32 0, i32 19, !dbg !6060
  %4 = load i16, i16* %ngpio, align 4, !dbg !6060
  %conv = zext i16 %4 to i32, !dbg !6059
  %cmp = icmp ne i32 %2, %conv, !dbg !6061
  br i1 %cmp, label %for.body, label %for.end, !dbg !6062

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %gpio, metadata !6063, metadata !DIExpression()), !dbg !6065
  %5 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6066
  %names = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %5, i32 0, i32 20, !dbg !6067
  %6 = load i8**, i8*** %names, align 8, !dbg !6067
  %7 = load i32, i32* %i, align 4, !dbg !6068
  %idxprom = sext i32 %7 to i64, !dbg !6066
  %arrayidx = getelementptr i8*, i8** %6, i64 %idxprom, !dbg !6066
  %8 = load i8*, i8** %arrayidx, align 8, !dbg !6066
  %call = call %struct.gpio_desc* @gpio_name_to_desc(i8* %8) #11, !dbg !6069
  store %struct.gpio_desc* %call, %struct.gpio_desc** %gpio, align 8, !dbg !6070
  %9 = load %struct.gpio_desc*, %struct.gpio_desc** %gpio, align 8, !dbg !6071
  %tobool = icmp ne %struct.gpio_desc* %9, null, !dbg !6071
  br i1 %tobool, label %if.then, label %if.end, !dbg !6073

if.then:                                          ; preds = %for.body
  %10 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !6074
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %10, i32 0, i32 1, !dbg !6074
  %11 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6074
  %names2 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %11, i32 0, i32 20, !dbg !6074
  %12 = load i8**, i8*** %names2, align 8, !dbg !6074
  %13 = load i32, i32* %i, align 4, !dbg !6074
  %idxprom3 = sext i32 %13 to i64, !dbg !6074
  %arrayidx4 = getelementptr i8*, i8** %12, i64 %idxprom3, !dbg !6074
  %14 = load i8*, i8** %arrayidx4, align 8, !dbg !6074
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.39, i64 0, i64 0), i8* %14) #13, !dbg !6074
  br label %if.end, !dbg !6074

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6075

for.inc:                                          ; preds = %if.end
  %15 = load i32, i32* %i, align 4, !dbg !6076
  %inc = add i32 %15, 1, !dbg !6076
  store i32 %inc, i32* %i, align 4, !dbg !6076
  br label %for.cond, !dbg !6077, !llvm.loop !6078

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !6080
  br label %for.cond5, !dbg !6082

for.cond5:                                        ; preds = %for.inc16, %for.end
  %16 = load i32, i32* %i, align 4, !dbg !6083
  %17 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6085
  %ngpio6 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %17, i32 0, i32 19, !dbg !6086
  %18 = load i16, i16* %ngpio6, align 4, !dbg !6086
  %conv7 = zext i16 %18 to i32, !dbg !6085
  %cmp8 = icmp ne i32 %16, %conv7, !dbg !6087
  br i1 %cmp8, label %for.body10, label %for.end18, !dbg !6088

for.body10:                                       ; preds = %for.cond5
  %19 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6089
  %names11 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %19, i32 0, i32 20, !dbg !6090
  %20 = load i8**, i8*** %names11, align 8, !dbg !6090
  %21 = load i32, i32* %i, align 4, !dbg !6091
  %idxprom12 = sext i32 %21 to i64, !dbg !6089
  %arrayidx13 = getelementptr i8*, i8** %20, i64 %idxprom12, !dbg !6089
  %22 = load i8*, i8** %arrayidx13, align 8, !dbg !6089
  %23 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !6092
  %descs = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %23, i32 0, i32 6, !dbg !6093
  %24 = load %struct.gpio_desc*, %struct.gpio_desc** %descs, align 8, !dbg !6093
  %25 = load i32, i32* %i, align 4, !dbg !6094
  %idxprom14 = sext i32 %25 to i64, !dbg !6092
  %arrayidx15 = getelementptr %struct.gpio_desc, %struct.gpio_desc* %24, i64 %idxprom14, !dbg !6092
  %name = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %arrayidx15, i32 0, i32 3, !dbg !6095
  store i8* %22, i8** %name, align 8, !dbg !6096
  br label %for.inc16, !dbg !6092

for.inc16:                                        ; preds = %for.body10
  %26 = load i32, i32* %i, align 4, !dbg !6097
  %inc17 = add i32 %26, 1, !dbg !6097
  store i32 %inc17, i32* %i, align 4, !dbg !6097
  br label %for.cond5, !dbg !6098, !llvm.loop !6099

for.end18:                                        ; preds = %for.cond5
  ret i32 0, !dbg !6101
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devprop_gpiochip_set_names(%struct.gpio_chip* %chip) #0 !dbg !6102 {
entry:
  %retval = alloca i32, align 4
  %chip.addr = alloca %struct.gpio_chip*, align 8
  %gdev = alloca %struct.gpio_device*, align 8
  %dev = alloca %struct.device*, align 8
  %names = alloca i8**, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %count = alloca i32, align 4
  store %struct.gpio_chip* %chip, %struct.gpio_chip** %chip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %chip.addr, metadata !6103, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %gdev, metadata !6105, metadata !DIExpression()), !dbg !6106
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %chip.addr, align 8, !dbg !6107
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 1, !dbg !6108
  %1 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !6108
  store %struct.gpio_device* %1, %struct.gpio_device** %gdev, align 8, !dbg !6106
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !6109, metadata !DIExpression()), !dbg !6110
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %chip.addr, align 8, !dbg !6111
  %parent = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %2, i32 0, i32 2, !dbg !6112
  %3 = load %struct.device*, %struct.device** %parent, align 8, !dbg !6112
  store %struct.device* %3, %struct.device** %dev, align 8, !dbg !6110
  call void @llvm.dbg.declare(metadata i8*** %names, metadata !6113, metadata !DIExpression()), !dbg !6114
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6115, metadata !DIExpression()), !dbg !6116
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6117, metadata !DIExpression()), !dbg !6118
  call void @llvm.dbg.declare(metadata i32* %count, metadata !6119, metadata !DIExpression()), !dbg !6120
  %4 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6121
  %tobool = icmp ne %struct.device* %4, null, !dbg !6121
  br i1 %tobool, label %if.end, label %if.then, !dbg !6123

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6124
  br label %return, !dbg !6124

if.end:                                           ; preds = %entry
  %5 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6125
  %call = call i32 @device_property_string_array_count(%struct.device* %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.40, i64 0, i64 0)) #11, !dbg !6126
  store i32 %call, i32* %count, align 4, !dbg !6127
  %6 = load i32, i32* %count, align 4, !dbg !6128
  %cmp = icmp slt i32 %6, 0, !dbg !6130
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !6131

if.then1:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6132
  br label %return, !dbg !6132

if.end2:                                          ; preds = %if.end
  %7 = load i32, i32* %count, align 4, !dbg !6133
  %8 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !6135
  %ngpio = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %8, i32 0, i32 8, !dbg !6136
  %9 = load i16, i16* %ngpio, align 4, !dbg !6136
  %conv = zext i16 %9 to i32, !dbg !6135
  %cmp3 = icmp sgt i32 %7, %conv, !dbg !6137
  br i1 %cmp3, label %if.then5, label %if.end11, !dbg !6138

if.then5:                                         ; preds = %if.end2
  %10 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !6139
  %dev6 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %10, i32 0, i32 1, !dbg !6139
  %11 = load i32, i32* %count, align 4, !dbg !6139
  %12 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !6139
  %ngpio7 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %12, i32 0, i32 8, !dbg !6139
  %13 = load i16, i16* %ngpio7, align 4, !dbg !6139
  %conv8 = zext i16 %13 to i32, !dbg !6139
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev6, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.41, i64 0, i64 0), i32 %11, i32 %conv8) #13, !dbg !6139
  %14 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !6141
  %ngpio9 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %14, i32 0, i32 8, !dbg !6142
  %15 = load i16, i16* %ngpio9, align 4, !dbg !6142
  %conv10 = zext i16 %15 to i32, !dbg !6141
  store i32 %conv10, i32* %count, align 4, !dbg !6143
  br label %if.end11, !dbg !6144

if.end11:                                         ; preds = %if.then5, %if.end2
  %16 = load i32, i32* %count, align 4, !dbg !6145
  %conv12 = sext i32 %16 to i64, !dbg !6145
  %call13 = call i8* @kcalloc(i64 %conv12, i64 8, i32 3264) #11, !dbg !6146
  %17 = bitcast i8* %call13 to i8**, !dbg !6146
  store i8** %17, i8*** %names, align 8, !dbg !6147
  %18 = load i8**, i8*** %names, align 8, !dbg !6148
  %tobool14 = icmp ne i8** %18, null, !dbg !6148
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !6150

if.then15:                                        ; preds = %if.end11
  store i32 -12, i32* %retval, align 4, !dbg !6151
  br label %return, !dbg !6151

if.end16:                                         ; preds = %if.end11
  %19 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6152
  %20 = load i8**, i8*** %names, align 8, !dbg !6153
  %21 = load i32, i32* %count, align 4, !dbg !6154
  %conv17 = sext i32 %21 to i64, !dbg !6154
  %call18 = call i32 @device_property_read_string_array(%struct.device* %19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.40, i64 0, i64 0), i8** %20, i64 %conv17) #11, !dbg !6155
  store i32 %call18, i32* %ret, align 4, !dbg !6156
  %22 = load i32, i32* %ret, align 4, !dbg !6157
  %cmp19 = icmp slt i32 %22, 0, !dbg !6159
  br i1 %cmp19, label %if.then21, label %if.end23, !dbg !6160

if.then21:                                        ; preds = %if.end16
  %23 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !6161
  %dev22 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %23, i32 0, i32 1, !dbg !6161
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev22, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.42, i64 0, i64 0)) #13, !dbg !6161
  %24 = load i8**, i8*** %names, align 8, !dbg !6163
  %25 = bitcast i8** %24 to i8*, !dbg !6163
  call void @kfree(i8* %25) #11, !dbg !6164
  %26 = load i32, i32* %ret, align 4, !dbg !6165
  store i32 %26, i32* %retval, align 4, !dbg !6166
  br label %return, !dbg !6166

if.end23:                                         ; preds = %if.end16
  store i32 0, i32* %i, align 4, !dbg !6167
  br label %for.cond, !dbg !6169

for.cond:                                         ; preds = %for.inc, %if.end23
  %27 = load i32, i32* %i, align 4, !dbg !6170
  %28 = load i32, i32* %count, align 4, !dbg !6172
  %cmp24 = icmp slt i32 %27, %28, !dbg !6173
  br i1 %cmp24, label %for.body, label %for.end, !dbg !6174

for.body:                                         ; preds = %for.cond
  %29 = load i8**, i8*** %names, align 8, !dbg !6175
  %30 = load i32, i32* %i, align 4, !dbg !6176
  %idxprom = sext i32 %30 to i64, !dbg !6175
  %arrayidx = getelementptr i8*, i8** %29, i64 %idxprom, !dbg !6175
  %31 = load i8*, i8** %arrayidx, align 8, !dbg !6175
  %32 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !6177
  %descs = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %32, i32 0, i32 6, !dbg !6178
  %33 = load %struct.gpio_desc*, %struct.gpio_desc** %descs, align 8, !dbg !6178
  %34 = load i32, i32* %i, align 4, !dbg !6179
  %idxprom26 = sext i32 %34 to i64, !dbg !6177
  %arrayidx27 = getelementptr %struct.gpio_desc, %struct.gpio_desc* %33, i64 %idxprom26, !dbg !6177
  %name = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %arrayidx27, i32 0, i32 3, !dbg !6180
  store i8* %31, i8** %name, align 8, !dbg !6181
  br label %for.inc, !dbg !6177

for.inc:                                          ; preds = %for.body
  %35 = load i32, i32* %i, align 4, !dbg !6182
  %inc = add i32 %35, 1, !dbg !6182
  store i32 %inc, i32* %i, align 4, !dbg !6182
  br label %for.cond, !dbg !6183, !llvm.loop !6184

for.end:                                          ; preds = %for.cond
  %36 = load i8**, i8*** %names, align 8, !dbg !6186
  %37 = bitcast i8** %36 to i8*, !dbg !6186
  call void @kfree(i8* %37) #11, !dbg !6187
  store i32 0, i32* %retval, align 4, !dbg !6188
  br label %return, !dbg !6188

return:                                           ; preds = %for.end, %if.then21, %if.then15, %if.then1, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !6189
  ret i32 %38, !dbg !6189
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpiochip_alloc_valid_mask(%struct.gpio_chip* %gc) #0 !dbg !6190 {
entry:
  %retval = alloca i32, align 4
  %gc.addr = alloca %struct.gpio_chip*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !6191, metadata !DIExpression()), !dbg !6192
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6193
  %call = call zeroext i1 @of_gpio_need_valid_mask(%struct.gpio_chip* %0) #11, !dbg !6195
  br i1 %call, label %if.end, label %lor.lhs.false, !dbg !6196

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6197
  %init_valid_mask = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %1, i32 0, i32 16, !dbg !6198
  %2 = load i32 (%struct.gpio_chip*, i64*, i32)*, i32 (%struct.gpio_chip*, i64*, i32)** %init_valid_mask, align 8, !dbg !6198
  %tobool = icmp ne i32 (%struct.gpio_chip*, i64*, i32)* %2, null, !dbg !6197
  br i1 %tobool, label %if.end, label %if.then, !dbg !6199

if.then:                                          ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !6200
  br label %return, !dbg !6200

if.end:                                           ; preds = %lor.lhs.false, %entry
  %3 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6201
  %call1 = call i64* @gpiochip_allocate_mask(%struct.gpio_chip* %3) #11, !dbg !6202
  %4 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6203
  %valid_mask = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %4, i32 0, i32 36, !dbg !6204
  store i64* %call1, i64** %valid_mask, align 8, !dbg !6205
  %5 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6206
  %valid_mask2 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %5, i32 0, i32 36, !dbg !6208
  %6 = load i64*, i64** %valid_mask2, align 8, !dbg !6208
  %tobool3 = icmp ne i64* %6, null, !dbg !6206
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !6209

if.then4:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !6210
  br label %return, !dbg !6210

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6211
  br label %return, !dbg !6211

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !6212
  ret i32 %7, !dbg !6212
}

; Function Attrs: noredzone
declare dso_local i32 @of_gpiochip_add(%struct.gpio_chip*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpiochip_init_valid_mask(%struct.gpio_chip* %gc) #0 !dbg !6213 {
entry:
  %retval = alloca i32, align 4
  %gc.addr = alloca %struct.gpio_chip*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !6214, metadata !DIExpression()), !dbg !6215
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6216
  %init_valid_mask = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 16, !dbg !6218
  %1 = load i32 (%struct.gpio_chip*, i64*, i32)*, i32 (%struct.gpio_chip*, i64*, i32)** %init_valid_mask, align 8, !dbg !6218
  %tobool = icmp ne i32 (%struct.gpio_chip*, i64*, i32)* %1, null, !dbg !6216
  br i1 %tobool, label %if.then, label %if.end, !dbg !6219

if.then:                                          ; preds = %entry
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6220
  %init_valid_mask1 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %2, i32 0, i32 16, !dbg !6221
  %3 = load i32 (%struct.gpio_chip*, i64*, i32)*, i32 (%struct.gpio_chip*, i64*, i32)** %init_valid_mask1, align 8, !dbg !6221
  %4 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6222
  %5 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6223
  %valid_mask = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %5, i32 0, i32 36, !dbg !6224
  %6 = load i64*, i64** %valid_mask, align 8, !dbg !6224
  %7 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6225
  %ngpio = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %7, i32 0, i32 19, !dbg !6226
  %8 = load i16, i16* %ngpio, align 4, !dbg !6226
  %conv = zext i16 %8 to i32, !dbg !6225
  %call = call i32 %3(%struct.gpio_chip* %4, i64* %6, i32 %conv) #11, !dbg !6220
  store i32 %call, i32* %retval, align 4, !dbg !6227
  br label %return, !dbg !6227

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6228
  br label %return, !dbg !6228

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !6229
  ret i32 %9, !dbg !6229
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpiochip_add_pin_ranges(%struct.gpio_chip* %gc) #0 !dbg !6230 {
entry:
  %retval = alloca i32, align 4
  %gc.addr = alloca %struct.gpio_chip*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !6231, metadata !DIExpression()), !dbg !6232
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6233
  %add_pin_ranges = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 17, !dbg !6235
  %1 = load i32 (%struct.gpio_chip*)*, i32 (%struct.gpio_chip*)** %add_pin_ranges, align 8, !dbg !6235
  %tobool = icmp ne i32 (%struct.gpio_chip*)* %1, null, !dbg !6233
  br i1 %tobool, label %if.then, label %if.end, !dbg !6236

if.then:                                          ; preds = %entry
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6237
  %add_pin_ranges1 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %2, i32 0, i32 17, !dbg !6238
  %3 = load i32 (%struct.gpio_chip*)*, i32 (%struct.gpio_chip*)** %add_pin_ranges1, align 8, !dbg !6238
  %4 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6239
  %call = call i32 %3(%struct.gpio_chip* %4) #11, !dbg !6237
  store i32 %call, i32* %retval, align 4, !dbg !6240
  br label %return, !dbg !6240

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6241
  br label %return, !dbg !6241

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !6242
  ret i32 %5, !dbg !6242
}

; Function Attrs: noredzone
declare dso_local void @acpi_gpiochip_add(%struct.gpio_chip*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @machine_gpiochip_add(%struct.gpio_chip* %gc) #0 !dbg !6243 {
entry:
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %hog = alloca %struct.gpiod_hog*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.gpiod_hog*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp5 = alloca %struct.gpiod_hog*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !6246, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.declare(metadata %struct.gpiod_hog** %hog, metadata !6248, metadata !DIExpression()), !dbg !6249
  call void @mutex_lock(%struct.mutex* @gpio_machine_hogs_mutex) #11, !dbg !6250
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6251, metadata !DIExpression()), !dbg !6254
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @gpio_machine_hogs, i32 0, i32 0), align 8, !dbg !6254
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !6254
  store i8* %1, i8** %__mptr, align 8, !dbg !6254
  br label %do.body, !dbg !6254

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6255

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6254
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !6254
  %3 = bitcast i8* %add.ptr to %struct.gpiod_hog*, !dbg !6254
  store %struct.gpiod_hog* %3, %struct.gpiod_hog** %tmp, align 8, !dbg !6255
  %4 = load %struct.gpiod_hog*, %struct.gpiod_hog** %tmp, align 8, !dbg !6254
  store %struct.gpiod_hog* %4, %struct.gpiod_hog** %hog, align 8, !dbg !6257
  br label %for.cond, !dbg !6257

for.cond:                                         ; preds = %do.end4, %do.end
  %5 = load %struct.gpiod_hog*, %struct.gpiod_hog** %hog, align 8, !dbg !6258
  %list = getelementptr inbounds %struct.gpiod_hog, %struct.gpiod_hog* %5, i32 0, i32 0, !dbg !6258
  %cmp = icmp eq %struct.list_head* %list, @gpio_machine_hogs, !dbg !6258
  %lnot = xor i1 %cmp, true, !dbg !6258
  br i1 %lnot, label %for.body, label %for.end, !dbg !6257

for.body:                                         ; preds = %for.cond
  %6 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6260
  %label = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %6, i32 0, i32 0, !dbg !6263
  %7 = load i8*, i8** %label, align 8, !dbg !6263
  %8 = load %struct.gpiod_hog*, %struct.gpiod_hog** %hog, align 8, !dbg !6264
  %chip_label = getelementptr inbounds %struct.gpiod_hog, %struct.gpiod_hog* %8, i32 0, i32 1, !dbg !6265
  %9 = load i8*, i8** %chip_label, align 8, !dbg !6265
  %call = call i32 @strcmp(i8* %7, i8* %9) #11, !dbg !6266
  %tobool = icmp ne i32 %call, 0, !dbg !6266
  br i1 %tobool, label %if.end, label %if.then, !dbg !6267

if.then:                                          ; preds = %for.body
  %10 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6268
  %11 = load %struct.gpiod_hog*, %struct.gpiod_hog** %hog, align 8, !dbg !6269
  call void @gpiochip_machine_hog(%struct.gpio_chip* %10, %struct.gpiod_hog* %11) #11, !dbg !6270
  br label %if.end, !dbg !6270

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6271

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !6272, metadata !DIExpression()), !dbg !6274
  %12 = load %struct.gpiod_hog*, %struct.gpiod_hog** %hog, align 8, !dbg !6274
  %list2 = getelementptr inbounds %struct.gpiod_hog, %struct.gpiod_hog* %12, i32 0, i32 0, !dbg !6274
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list2, i32 0, i32 0, !dbg !6274
  %13 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6274
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !6274
  store i8* %14, i8** %__mptr1, align 8, !dbg !6274
  br label %do.body3, !dbg !6274

do.body3:                                         ; preds = %for.inc
  br label %do.end4, !dbg !6275

do.end4:                                          ; preds = %do.body3
  %15 = load i8*, i8** %__mptr1, align 8, !dbg !6274
  %add.ptr6 = getelementptr i8, i8* %15, i64 0, !dbg !6274
  %16 = bitcast i8* %add.ptr6 to %struct.gpiod_hog*, !dbg !6274
  store %struct.gpiod_hog* %16, %struct.gpiod_hog** %tmp5, align 8, !dbg !6275
  %17 = load %struct.gpiod_hog*, %struct.gpiod_hog** %tmp5, align 8, !dbg !6274
  store %struct.gpiod_hog* %17, %struct.gpiod_hog** %hog, align 8, !dbg !6258
  br label %for.cond, !dbg !6258, !llvm.loop !6277

for.end:                                          ; preds = %for.cond
  call void @mutex_unlock(%struct.mutex* @gpio_machine_hogs_mutex) #11, !dbg !6279
  ret void, !dbg !6280
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpiochip_irqchip_init_valid_mask(%struct.gpio_chip* %gc) #0 !dbg !6281 {
entry:
  %retval = alloca i32, align 4
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %girq = alloca %struct.gpio_irq_chip*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !6282, metadata !DIExpression()), !dbg !6283
  call void @llvm.dbg.declare(metadata %struct.gpio_irq_chip** %girq, metadata !6284, metadata !DIExpression()), !dbg !6286
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6287
  %irq = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 35, !dbg !6288
  store %struct.gpio_irq_chip* %irq, %struct.gpio_irq_chip** %girq, align 8, !dbg !6286
  %1 = load %struct.gpio_irq_chip*, %struct.gpio_irq_chip** %girq, align 8, !dbg !6289
  %init_valid_mask = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %1, i32 0, i32 20, !dbg !6291
  %2 = load void (%struct.gpio_chip*, i64*, i32)*, void (%struct.gpio_chip*, i64*, i32)** %init_valid_mask, align 8, !dbg !6291
  %tobool = icmp ne void (%struct.gpio_chip*, i64*, i32)* %2, null, !dbg !6289
  br i1 %tobool, label %if.end, label %if.then, !dbg !6292

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6293
  br label %return, !dbg !6293

if.end:                                           ; preds = %entry
  %3 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6294
  %call = call i64* @gpiochip_allocate_mask(%struct.gpio_chip* %3) #11, !dbg !6295
  %4 = load %struct.gpio_irq_chip*, %struct.gpio_irq_chip** %girq, align 8, !dbg !6296
  %valid_mask = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %4, i32 0, i32 21, !dbg !6297
  store i64* %call, i64** %valid_mask, align 8, !dbg !6298
  %5 = load %struct.gpio_irq_chip*, %struct.gpio_irq_chip** %girq, align 8, !dbg !6299
  %valid_mask1 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %5, i32 0, i32 21, !dbg !6301
  %6 = load i64*, i64** %valid_mask1, align 8, !dbg !6301
  %tobool2 = icmp ne i64* %6, null, !dbg !6299
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !6302

if.then3:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !6303
  br label %return, !dbg !6303

if.end4:                                          ; preds = %if.end
  %7 = load %struct.gpio_irq_chip*, %struct.gpio_irq_chip** %girq, align 8, !dbg !6304
  %init_valid_mask5 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %7, i32 0, i32 20, !dbg !6305
  %8 = load void (%struct.gpio_chip*, i64*, i32)*, void (%struct.gpio_chip*, i64*, i32)** %init_valid_mask5, align 8, !dbg !6305
  %9 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6306
  %10 = load %struct.gpio_irq_chip*, %struct.gpio_irq_chip** %girq, align 8, !dbg !6307
  %valid_mask6 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %10, i32 0, i32 21, !dbg !6308
  %11 = load i64*, i64** %valid_mask6, align 8, !dbg !6308
  %12 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6309
  %ngpio = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %12, i32 0, i32 19, !dbg !6310
  %13 = load i16, i16* %ngpio, align 4, !dbg !6310
  %conv = zext i16 %13 to i32, !dbg !6309
  call void %8(%struct.gpio_chip* %9, i64* %11, i32 %conv) #11, !dbg !6304
  store i32 0, i32* %retval, align 4, !dbg !6311
  br label %return, !dbg !6311

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !6312
  ret i32 %14, !dbg !6312
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpiochip_irqchip_init_hw(%struct.gpio_chip* %gc) #0 !dbg !6313 {
entry:
  %retval = alloca i32, align 4
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %girq = alloca %struct.gpio_irq_chip*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !6314, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.declare(metadata %struct.gpio_irq_chip** %girq, metadata !6316, metadata !DIExpression()), !dbg !6317
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6318
  %irq = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 35, !dbg !6319
  store %struct.gpio_irq_chip* %irq, %struct.gpio_irq_chip** %girq, align 8, !dbg !6317
  %1 = load %struct.gpio_irq_chip*, %struct.gpio_irq_chip** %girq, align 8, !dbg !6320
  %init_hw = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %1, i32 0, i32 19, !dbg !6322
  %2 = load i32 (%struct.gpio_chip*)*, i32 (%struct.gpio_chip*)** %init_hw, align 8, !dbg !6322
  %tobool = icmp ne i32 (%struct.gpio_chip*)* %2, null, !dbg !6320
  br i1 %tobool, label %if.end, label %if.then, !dbg !6323

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6324
  br label %return, !dbg !6324

if.end:                                           ; preds = %entry
  %3 = load %struct.gpio_irq_chip*, %struct.gpio_irq_chip** %girq, align 8, !dbg !6325
  %init_hw1 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %3, i32 0, i32 19, !dbg !6326
  %4 = load i32 (%struct.gpio_chip*)*, i32 (%struct.gpio_chip*)** %init_hw1, align 8, !dbg !6326
  %5 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6327
  %call = call i32 %4(%struct.gpio_chip* %5) #11, !dbg !6325
  store i32 %call, i32* %retval, align 4, !dbg !6328
  br label %return, !dbg !6328

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !6329
  ret i32 %6, !dbg !6329
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpiochip_add_irqchip(%struct.gpio_chip* %gc, %struct.lock_class_key* %lock_key, %struct.lock_class_key* %request_key) #0 !dbg !6330 {
entry:
  %retval = alloca i32, align 4
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %lock_key.addr = alloca %struct.lock_class_key*, align 8
  %request_key.addr = alloca %struct.lock_class_key*, align 8
  %irqchip = alloca %struct.irq_chip*, align 8
  %ops = alloca %struct.irq_domain_ops*, align 8
  %np = alloca %struct.device_node*, align 8
  %type = alloca i32, align 4
  %i = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__to_acpi_device_node_fwnode = alloca %struct.fwnode_handle*, align 8
  %tmp46 = alloca %struct.acpi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp51 = alloca %struct.acpi_device*, align 8
  %ret = alloca i32, align 4
  %data = alloca i8*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !6333, metadata !DIExpression()), !dbg !6334
  store %struct.lock_class_key* %lock_key, %struct.lock_class_key** %lock_key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lock_class_key** %lock_key.addr, metadata !6335, metadata !DIExpression()), !dbg !6336
  store %struct.lock_class_key* %request_key, %struct.lock_class_key** %request_key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lock_class_key** %request_key.addr, metadata !6337, metadata !DIExpression()), !dbg !6338
  call void @llvm.dbg.declare(metadata %struct.irq_chip** %irqchip, metadata !6339, metadata !DIExpression()), !dbg !6340
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6341
  %irq = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 35, !dbg !6342
  %chip = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq, i32 0, i32 0, !dbg !6343
  %1 = load %struct.irq_chip*, %struct.irq_chip** %chip, align 8, !dbg !6343
  store %struct.irq_chip* %1, %struct.irq_chip** %irqchip, align 8, !dbg !6340
  call void @llvm.dbg.declare(metadata %struct.irq_domain_ops** %ops, metadata !6344, metadata !DIExpression()), !dbg !6345
  store %struct.irq_domain_ops* null, %struct.irq_domain_ops** %ops, align 8, !dbg !6345
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !6346, metadata !DIExpression()), !dbg !6347
  call void @llvm.dbg.declare(metadata i32* %type, metadata !6348, metadata !DIExpression()), !dbg !6349
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6350, metadata !DIExpression()), !dbg !6351
  %2 = load %struct.irq_chip*, %struct.irq_chip** %irqchip, align 8, !dbg !6352
  %tobool = icmp ne %struct.irq_chip* %2, null, !dbg !6352
  br i1 %tobool, label %if.end, label %if.then, !dbg !6354

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6355
  br label %return, !dbg !6355

if.end:                                           ; preds = %entry
  %3 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6356
  %irq1 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %3, i32 0, i32 35, !dbg !6358
  %parent_handler = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq1, i32 0, i32 13, !dbg !6359
  %4 = load void (%struct.irq_desc*)*, void (%struct.irq_desc*)** %parent_handler, align 8, !dbg !6359
  %tobool2 = icmp ne void (%struct.irq_desc*)* %4, null, !dbg !6356
  br i1 %tobool2, label %land.lhs.true, label %if.end5, !dbg !6360

land.lhs.true:                                    ; preds = %if.end
  %5 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6361
  %can_sleep = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %5, i32 0, i32 21, !dbg !6362
  %6 = load i8, i8* %can_sleep, align 8, !dbg !6362
  %tobool3 = trunc i8 %6 to i1, !dbg !6362
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !6363

if.then4:                                         ; preds = %land.lhs.true
  %7 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6364
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %7, i32 0, i32 1, !dbg !6364
  %8 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !6364
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %8, i32 0, i32 1, !dbg !6364
  %9 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6364
  %label = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %9, i32 0, i32 0, !dbg !6364
  %10 = load i8*, i8** %label, align 8, !dbg !6364
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.44, i64 0, i64 0), i8* %10) #13, !dbg !6364
  store i32 -22, i32* %retval, align 4, !dbg !6366
  br label %return, !dbg !6366

if.end5:                                          ; preds = %land.lhs.true, %if.end
  %11 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6367
  %gpiodev6 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %11, i32 0, i32 1, !dbg !6368
  %12 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev6, align 8, !dbg !6368
  %dev7 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %12, i32 0, i32 1, !dbg !6369
  %of_node = getelementptr inbounds %struct.device, %struct.device* %dev7, i32 0, i32 23, !dbg !6370
  %13 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !6370
  store %struct.device_node* %13, %struct.device_node** %np, align 8, !dbg !6371
  %14 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6372
  %irq8 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %14, i32 0, i32 35, !dbg !6373
  %default_type = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq8, i32 0, i32 10, !dbg !6374
  %15 = load i32, i32* %default_type, align 8, !dbg !6374
  store i32 %15, i32* %type, align 4, !dbg !6375
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6376, metadata !DIExpression()), !dbg !6379
  %16 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !6379
  %tobool9 = icmp ne %struct.device_node* %16, null, !dbg !6379
  br i1 %tobool9, label %land.rhs, label %land.end, !dbg !6379

land.rhs:                                         ; preds = %if.end5
  %17 = load i32, i32* %type, align 4, !dbg !6379
  %cmp = icmp ne i32 %17, 0, !dbg !6379
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end5
  %18 = phi i1 [ false, %if.end5 ], [ %cmp, %land.rhs ], !dbg !6380
  %lnot = xor i1 %18, true, !dbg !6379
  %lnot10 = xor i1 %lnot, true, !dbg !6379
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !6379
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6379
  %19 = load i32, i32* %__ret_warn_on, align 4, !dbg !6381
  %tobool11 = icmp ne i32 %19, 0, !dbg !6381
  %lnot12 = xor i1 %tobool11, true, !dbg !6381
  %lnot14 = xor i1 %lnot12, true, !dbg !6381
  %lnot.ext15 = zext i1 %lnot14 to i32, !dbg !6381
  %conv = sext i32 %lnot.ext15 to i64, !dbg !6381
  %tobool16 = icmp ne i64 %conv, 0, !dbg !6381
  br i1 %tobool16, label %if.then17, label %if.end30, !dbg !6379

if.then17:                                        ; preds = %land.end
  br label %do.body, !dbg !6381

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !6383

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !6385

do.end:                                           ; preds = %do.body18
  %20 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !6383
  %full_name = getelementptr inbounds %struct.device_node, %struct.device_node* %20, i32 0, i32 2, !dbg !6383
  %21 = load i8*, i8** %full_name, align 8, !dbg !6383
  %22 = load i32, i32* %type, align 4, !dbg !6383
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.47, i64 0, i64 0), i8* %21, i32 %22) #11, !dbg !6383
  br label %do.body19, !dbg !6383

do.body19:                                        ; preds = %do.end
  br label %do.body20, !dbg !6387

do.body20:                                        ; preds = %do.body19
  br label %do.end21, !dbg !6389

do.end21:                                         ; preds = %do.body20
  br label %do.body22, !dbg !6387

do.body22:                                        ; preds = %do.end21
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 1540, i32 2313, i64 12) #7, !dbg !6391, !srcloc !6393
  br label %do.end23, !dbg !6391

do.end23:                                         ; preds = %do.body22
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 239) #7, !dbg !6394, !srcloc !6396
  br label %do.body24, !dbg !6387

do.body24:                                        ; preds = %do.end23
  br label %do.end25, !dbg !6397

do.end25:                                         ; preds = %do.body24
  br label %do.end26, !dbg !6387

do.end26:                                         ; preds = %do.end25
  br label %do.body27, !dbg !6383

do.body27:                                        ; preds = %do.end26
  br label %do.end28, !dbg !6399

do.end28:                                         ; preds = %do.body27
  br label %do.end29, !dbg !6383

do.end29:                                         ; preds = %do.end28
  br label %if.end30, !dbg !6383

if.end30:                                         ; preds = %do.end29, %land.end
  %23 = load i32, i32* %__ret_warn_on, align 4, !dbg !6379
  %tobool31 = icmp ne i32 %23, 0, !dbg !6379
  %lnot32 = xor i1 %tobool31, true, !dbg !6379
  %lnot34 = xor i1 %lnot32, true, !dbg !6379
  %lnot.ext35 = zext i1 %lnot34 to i32, !dbg !6379
  %conv36 = sext i32 %lnot.ext35 to i64, !dbg !6379
  store i64 %conv36, i64* %tmp, align 8, !dbg !6381
  %24 = load i64, i64* %tmp, align 8, !dbg !6379
  %tobool37 = icmp ne i64 %24, 0, !dbg !6401
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !6402

if.then38:                                        ; preds = %if.end30
  store i32 0, i32* %type, align 4, !dbg !6403
  br label %if.end39, !dbg !6404

if.end39:                                         ; preds = %if.then38, %if.end30
  %25 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6405
  %parent = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %25, i32 0, i32 2, !dbg !6407
  %26 = load %struct.device*, %struct.device** %parent, align 8, !dbg !6407
  %call = call zeroext i1 @has_acpi_companion(%struct.device* %26) #11, !dbg !6408
  br i1 %call, label %land.lhs.true41, label %if.end53, !dbg !6409

land.lhs.true41:                                  ; preds = %if.end39
  %27 = load i32, i32* %type, align 4, !dbg !6410
  %cmp42 = icmp ne i32 %27, 0, !dbg !6411
  br i1 %cmp42, label %if.then44, label %if.end53, !dbg !6412

if.then44:                                        ; preds = %land.lhs.true41
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %__to_acpi_device_node_fwnode, metadata !6413, metadata !DIExpression()), !dbg !6416
  %28 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6416
  %parent45 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %28, i32 0, i32 2, !dbg !6416
  %29 = load %struct.device*, %struct.device** %parent45, align 8, !dbg !6416
  %fwnode = getelementptr inbounds %struct.device, %struct.device* %29, i32 0, i32 24, !dbg !6416
  %30 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !6416
  store %struct.fwnode_handle* %30, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !6416
  %31 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !6416
  %call47 = call zeroext i1 @is_acpi_device_node(%struct.fwnode_handle* %31) #11, !dbg !6416
  br i1 %call47, label %cond.true, label %cond.false, !dbg !6416

cond.true:                                        ; preds = %if.then44
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6417, metadata !DIExpression()), !dbg !6419
  %32 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !6419
  %33 = bitcast %struct.fwnode_handle* %32 to i8*, !dbg !6419
  store i8* %33, i8** %__mptr, align 8, !dbg !6419
  br label %do.body49, !dbg !6419

do.body49:                                        ; preds = %cond.true
  br label %do.end50, !dbg !6420

do.end50:                                         ; preds = %do.body49
  %34 = load i8*, i8** %__mptr, align 8, !dbg !6419
  %add.ptr = getelementptr i8, i8* %34, i64 -16, !dbg !6419
  %35 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !6419
  store %struct.acpi_device* %35, %struct.acpi_device** %tmp51, align 8, !dbg !6420
  %36 = load %struct.acpi_device*, %struct.acpi_device** %tmp51, align 8, !dbg !6419
  br label %cond.end, !dbg !6416

cond.false:                                       ; preds = %if.then44
  br label %cond.end, !dbg !6416

cond.end:                                         ; preds = %cond.false, %do.end50
  %cond = phi %struct.acpi_device* [ %36, %do.end50 ], [ null, %cond.false ], !dbg !6416
  store %struct.acpi_device* %cond, %struct.acpi_device** %tmp46, align 8, !dbg !6416
  %37 = load %struct.acpi_device*, %struct.acpi_device** %tmp46, align 8, !dbg !6416
  %call52 = call i8* @acpi_device_handle(%struct.acpi_device* %37) #11, !dbg !6422
  %38 = load i32, i32* %type, align 4, !dbg !6422
  call void (i8*, i8*, i8*, ...) @acpi_handle_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* %call52, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.48, i64 0, i64 0), i32 %38) #11, !dbg !6422
  store i32 0, i32* %type, align 4, !dbg !6423
  br label %if.end53, !dbg !6424

if.end53:                                         ; preds = %cond.end, %land.lhs.true41, %if.end39
  %39 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6425
  %to_irq = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %39, i32 0, i32 14, !dbg !6426
  store i32 (%struct.gpio_chip*, i32)* @gpiochip_to_irq, i32 (%struct.gpio_chip*, i32)** %to_irq, align 8, !dbg !6427
  %40 = load i32, i32* %type, align 4, !dbg !6428
  %41 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6429
  %irq54 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %41, i32 0, i32 35, !dbg !6430
  %default_type55 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq54, i32 0, i32 10, !dbg !6431
  store i32 %40, i32* %default_type55, align 8, !dbg !6432
  %42 = load %struct.lock_class_key*, %struct.lock_class_key** %lock_key.addr, align 8, !dbg !6433
  %43 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6434
  %irq56 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %43, i32 0, i32 35, !dbg !6435
  %lock_key57 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq56, i32 0, i32 11, !dbg !6436
  store %struct.lock_class_key* %42, %struct.lock_class_key** %lock_key57, align 8, !dbg !6437
  %44 = load %struct.lock_class_key*, %struct.lock_class_key** %request_key.addr, align 8, !dbg !6438
  %45 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6439
  %irq58 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %45, i32 0, i32 35, !dbg !6440
  %request_key59 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq58, i32 0, i32 12, !dbg !6441
  store %struct.lock_class_key* %44, %struct.lock_class_key** %request_key59, align 8, !dbg !6442
  %46 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6443
  %call60 = call zeroext i1 @gpiochip_hierarchy_is_hierarchical(%struct.gpio_chip* %46) #11, !dbg !6445
  br i1 %call60, label %if.then61, label %if.else, !dbg !6446

if.then61:                                        ; preds = %if.end53
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6447, metadata !DIExpression()), !dbg !6449
  %47 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6450
  %call62 = call i32 @gpiochip_hierarchy_add_domain(%struct.gpio_chip* %47) #11, !dbg !6451
  store i32 %call62, i32* %ret, align 4, !dbg !6449
  %48 = load i32, i32* %ret, align 4, !dbg !6452
  %tobool63 = icmp ne i32 %48, 0, !dbg !6452
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !6454

if.then64:                                        ; preds = %if.then61
  %49 = load i32, i32* %ret, align 4, !dbg !6455
  store i32 %49, i32* %retval, align 4, !dbg !6456
  br label %return, !dbg !6456

if.end65:                                         ; preds = %if.then61
  br label %if.end84, !dbg !6457

if.else:                                          ; preds = %if.end53
  %50 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6458
  %irq66 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %50, i32 0, i32 35, !dbg !6461
  %domain_ops = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq66, i32 0, i32 2, !dbg !6462
  %51 = load %struct.irq_domain_ops*, %struct.irq_domain_ops** %domain_ops, align 8, !dbg !6462
  %tobool67 = icmp ne %struct.irq_domain_ops* %51, null, !dbg !6458
  br i1 %tobool67, label %if.then68, label %if.end71, !dbg !6463

if.then68:                                        ; preds = %if.else
  %52 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6464
  %irq69 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %52, i32 0, i32 35, !dbg !6465
  %domain_ops70 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq69, i32 0, i32 2, !dbg !6466
  %53 = load %struct.irq_domain_ops*, %struct.irq_domain_ops** %domain_ops70, align 8, !dbg !6466
  store %struct.irq_domain_ops* %53, %struct.irq_domain_ops** %ops, align 8, !dbg !6467
  br label %if.end71, !dbg !6468

if.end71:                                         ; preds = %if.then68, %if.else
  %54 = load %struct.irq_domain_ops*, %struct.irq_domain_ops** %ops, align 8, !dbg !6469
  %tobool72 = icmp ne %struct.irq_domain_ops* %54, null, !dbg !6469
  br i1 %tobool72, label %if.end74, label %if.then73, !dbg !6471

if.then73:                                        ; preds = %if.end71
  store %struct.irq_domain_ops* @gpiochip_domain_ops, %struct.irq_domain_ops** %ops, align 8, !dbg !6472
  br label %if.end74, !dbg !6473

if.end74:                                         ; preds = %if.then73, %if.end71
  %55 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !6474
  %56 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6475
  %ngpio = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %56, i32 0, i32 19, !dbg !6476
  %57 = load i16, i16* %ngpio, align 4, !dbg !6476
  %conv75 = zext i16 %57 to i32, !dbg !6475
  %58 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6477
  %irq76 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %58, i32 0, i32 35, !dbg !6478
  %first = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq76, i32 0, i32 22, !dbg !6479
  %59 = load i32, i32* %first, align 8, !dbg !6479
  %60 = load %struct.irq_domain_ops*, %struct.irq_domain_ops** %ops, align 8, !dbg !6480
  %61 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6481
  %62 = bitcast %struct.gpio_chip* %61 to i8*, !dbg !6481
  %call77 = call %struct.irq_domain* @irq_domain_add_simple(%struct.device_node* %55, i32 %conv75, i32 %59, %struct.irq_domain_ops* %60, i8* %62) #11, !dbg !6482
  %63 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6483
  %irq78 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %63, i32 0, i32 35, !dbg !6484
  %domain = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq78, i32 0, i32 1, !dbg !6485
  store %struct.irq_domain* %call77, %struct.irq_domain** %domain, align 8, !dbg !6486
  %64 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6487
  %irq79 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %64, i32 0, i32 35, !dbg !6489
  %domain80 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq79, i32 0, i32 1, !dbg !6490
  %65 = load %struct.irq_domain*, %struct.irq_domain** %domain80, align 8, !dbg !6490
  %tobool81 = icmp ne %struct.irq_domain* %65, null, !dbg !6487
  br i1 %tobool81, label %if.end83, label %if.then82, !dbg !6491

if.then82:                                        ; preds = %if.end74
  store i32 -22, i32* %retval, align 4, !dbg !6492
  br label %return, !dbg !6492

if.end83:                                         ; preds = %if.end74
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.end65
  %66 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6493
  %irq85 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %66, i32 0, i32 35, !dbg !6495
  %parent_handler86 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq85, i32 0, i32 13, !dbg !6496
  %67 = load void (%struct.irq_desc*)*, void (%struct.irq_desc*)** %parent_handler86, align 8, !dbg !6496
  %tobool87 = icmp ne void (%struct.irq_desc*)* %67, null, !dbg !6493
  br i1 %tobool87, label %if.then88, label %if.end101, !dbg !6497

if.then88:                                        ; preds = %if.end84
  call void @llvm.dbg.declare(metadata i8** %data, metadata !6498, metadata !DIExpression()), !dbg !6500
  %68 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6501
  %irq89 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %68, i32 0, i32 35, !dbg !6502
  %parent_handler_data = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq89, i32 0, i32 14, !dbg !6503
  %69 = load i8*, i8** %parent_handler_data, align 8, !dbg !6503
  %tobool90 = icmp ne i8* %69, null, !dbg !6501
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !6501

cond.true91:                                      ; preds = %if.then88
  br label %cond.end93, !dbg !6501

cond.false92:                                     ; preds = %if.then88
  %70 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6504
  %71 = bitcast %struct.gpio_chip* %70 to i8*, !dbg !6504
  br label %cond.end93, !dbg !6501

cond.end93:                                       ; preds = %cond.false92, %cond.true91
  %cond94 = phi i8* [ %69, %cond.true91 ], [ %71, %cond.false92 ], !dbg !6501
  store i8* %cond94, i8** %data, align 8, !dbg !6500
  store i32 0, i32* %i, align 4, !dbg !6505
  br label %for.cond, !dbg !6507

for.cond:                                         ; preds = %for.inc, %cond.end93
  %72 = load i32, i32* %i, align 4, !dbg !6508
  %73 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6510
  %irq95 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %73, i32 0, i32 35, !dbg !6511
  %num_parents = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq95, i32 0, i32 15, !dbg !6512
  %74 = load i32, i32* %num_parents, align 8, !dbg !6512
  %cmp96 = icmp ult i32 %72, %74, !dbg !6513
  br i1 %cmp96, label %for.body, label %for.end, !dbg !6514

for.body:                                         ; preds = %for.cond
  %75 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6515
  %irq98 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %75, i32 0, i32 35, !dbg !6517
  %parents = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq98, i32 0, i32 16, !dbg !6518
  %76 = load i32*, i32** %parents, align 8, !dbg !6518
  %77 = load i32, i32* %i, align 4, !dbg !6519
  %idxprom = zext i32 %77 to i64, !dbg !6515
  %arrayidx = getelementptr i32, i32* %76, i64 %idxprom, !dbg !6515
  %78 = load i32, i32* %arrayidx, align 4, !dbg !6515
  %79 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6520
  %irq99 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %79, i32 0, i32 35, !dbg !6521
  %parent_handler100 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq99, i32 0, i32 13, !dbg !6522
  %80 = load void (%struct.irq_desc*)*, void (%struct.irq_desc*)** %parent_handler100, align 8, !dbg !6522
  %81 = load i8*, i8** %data, align 8, !dbg !6523
  call void @irq_set_chained_handler_and_data(i32 %78, void (%struct.irq_desc*)* %80, i8* %81) #11, !dbg !6524
  br label %for.inc, !dbg !6525

for.inc:                                          ; preds = %for.body
  %82 = load i32, i32* %i, align 4, !dbg !6526
  %inc = add i32 %82, 1, !dbg !6526
  store i32 %inc, i32* %i, align 4, !dbg !6526
  br label %for.cond, !dbg !6527, !llvm.loop !6528

for.end:                                          ; preds = %for.cond
  br label %if.end101, !dbg !6530

if.end101:                                        ; preds = %for.end, %if.end84
  %83 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6531
  call void @gpiochip_set_irq_hooks(%struct.gpio_chip* %83) #11, !dbg !6532
  %84 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6533
  call void @acpi_gpiochip_request_interrupts(%struct.gpio_chip* %84) #11, !dbg !6534
  store i32 0, i32* %retval, align 4, !dbg !6535
  br label %return, !dbg !6535

return:                                           ; preds = %if.end101, %if.then82, %if.then64, %if.then4, %if.then
  %85 = load i32, i32* %retval, align 4, !dbg !6536
  ret i32 %85, !dbg !6536
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpiochip_setup_dev(%struct.gpio_device* %gdev) #0 !dbg !6537 {
entry:
  %retval = alloca i32, align 4
  %gdev.addr = alloca %struct.gpio_device*, align 8
  %ret = alloca i32, align 4
  store %struct.gpio_device* %gdev, %struct.gpio_device** %gdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %gdev.addr, metadata !6538, metadata !DIExpression()), !dbg !6539
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6540, metadata !DIExpression()), !dbg !6541
  %0 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !6542
  %1 = load i32, i32* @gpio_devt, align 4, !dbg !6542
  %call = call i32 @gpiolib_cdev_register(%struct.gpio_device* %0, i32 %1) #11, !dbg !6542
  store i32 %call, i32* %ret, align 4, !dbg !6543
  %2 = load i32, i32* %ret, align 4, !dbg !6544
  %tobool = icmp ne i32 %2, 0, !dbg !6544
  br i1 %tobool, label %if.then, label %if.end, !dbg !6546

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !6547
  store i32 %3, i32* %retval, align 4, !dbg !6548
  br label %return, !dbg !6548

if.end:                                           ; preds = %entry
  %4 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !6549
  %call1 = call i32 @gpiochip_sysfs_register(%struct.gpio_device* %4) #11, !dbg !6550
  store i32 %call1, i32* %ret, align 4, !dbg !6551
  %5 = load i32, i32* %ret, align 4, !dbg !6552
  %tobool2 = icmp ne i32 %5, 0, !dbg !6552
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !6554

if.then3:                                         ; preds = %if.end
  br label %err_remove_device, !dbg !6555

if.end4:                                          ; preds = %if.end
  %6 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !6556
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %6, i32 0, i32 1, !dbg !6557
  %release = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 31, !dbg !6558
  store void (%struct.device*)* @gpiodevice_release, void (%struct.device*)** %release, align 8, !dbg !6559
  store i32 0, i32* %retval, align 4, !dbg !6560
  br label %return, !dbg !6560

err_remove_device:                                ; preds = %if.then3
  call void @llvm.dbg.label(metadata !6561), !dbg !6562
  %7 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !6563
  call void @gpiolib_cdev_unregister(%struct.gpio_device* %7) #11, !dbg !6563
  %8 = load i32, i32* %ret, align 4, !dbg !6564
  store i32 %8, i32* %retval, align 4, !dbg !6565
  br label %return, !dbg !6565

return:                                           ; preds = %err_remove_device, %if.end4, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !6566
  ret i32 %9, !dbg !6566
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpiochip_irqchip_remove(%struct.gpio_chip* %gc) #0 !dbg !6567 {
entry:
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %irqchip = alloca %struct.irq_chip*, align 8
  %offset = alloca i32, align 4
  %irq3 = alloca %struct.gpio_irq_chip*, align 8
  %i = alloca i32, align 4
  %irq8 = alloca i32, align 4
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !6568, metadata !DIExpression()), !dbg !6569
  call void @llvm.dbg.declare(metadata %struct.irq_chip** %irqchip, metadata !6570, metadata !DIExpression()), !dbg !6571
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6572
  %irq = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 35, !dbg !6573
  %chip = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq, i32 0, i32 0, !dbg !6574
  %1 = load %struct.irq_chip*, %struct.irq_chip** %chip, align 8, !dbg !6574
  store %struct.irq_chip* %1, %struct.irq_chip** %irqchip, align 8, !dbg !6571
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !6575, metadata !DIExpression()), !dbg !6576
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6577
  call void @acpi_gpiochip_free_interrupts(%struct.gpio_chip* %2) #11, !dbg !6578
  %3 = load %struct.irq_chip*, %struct.irq_chip** %irqchip, align 8, !dbg !6579
  %tobool = icmp ne %struct.irq_chip* %3, null, !dbg !6579
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6581

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6582
  %irq1 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %4, i32 0, i32 35, !dbg !6583
  %parent_handler = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq1, i32 0, i32 13, !dbg !6584
  %5 = load void (%struct.irq_desc*)*, void (%struct.irq_desc*)** %parent_handler, align 8, !dbg !6584
  %tobool2 = icmp ne void (%struct.irq_desc*)* %5, null, !dbg !6582
  br i1 %tobool2, label %if.then, label %if.end, !dbg !6585

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.gpio_irq_chip** %irq3, metadata !6586, metadata !DIExpression()), !dbg !6588
  %6 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6589
  %irq4 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %6, i32 0, i32 35, !dbg !6590
  store %struct.gpio_irq_chip* %irq4, %struct.gpio_irq_chip** %irq3, align 8, !dbg !6588
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6591, metadata !DIExpression()), !dbg !6592
  store i32 0, i32* %i, align 4, !dbg !6593
  br label %for.cond, !dbg !6595

for.cond:                                         ; preds = %for.inc, %if.then
  %7 = load i32, i32* %i, align 4, !dbg !6596
  %8 = load %struct.gpio_irq_chip*, %struct.gpio_irq_chip** %irq3, align 8, !dbg !6598
  %num_parents = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %8, i32 0, i32 15, !dbg !6599
  %9 = load i32, i32* %num_parents, align 8, !dbg !6599
  %cmp = icmp ult i32 %7, %9, !dbg !6600
  br i1 %cmp, label %for.body, label %for.end, !dbg !6601

for.body:                                         ; preds = %for.cond
  %10 = load %struct.gpio_irq_chip*, %struct.gpio_irq_chip** %irq3, align 8, !dbg !6602
  %parents = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %10, i32 0, i32 16, !dbg !6603
  %11 = load i32*, i32** %parents, align 8, !dbg !6603
  %12 = load i32, i32* %i, align 4, !dbg !6604
  %idxprom = zext i32 %12 to i64, !dbg !6602
  %arrayidx = getelementptr i32, i32* %11, i64 %idxprom, !dbg !6602
  %13 = load i32, i32* %arrayidx, align 4, !dbg !6602
  call void @irq_set_chained_handler_and_data(i32 %13, void (%struct.irq_desc*)* null, i8* null) #11, !dbg !6605
  br label %for.inc, !dbg !6605

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !6606
  %inc = add i32 %14, 1, !dbg !6606
  store i32 %inc, i32* %i, align 4, !dbg !6606
  br label %for.cond, !dbg !6607, !llvm.loop !6608

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !6610

if.end:                                           ; preds = %for.end, %land.lhs.true, %entry
  %15 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6611
  %irq5 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %15, i32 0, i32 35, !dbg !6613
  %domain = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq5, i32 0, i32 1, !dbg !6614
  %16 = load %struct.irq_domain*, %struct.irq_domain** %domain, align 8, !dbg !6614
  %tobool6 = icmp ne %struct.irq_domain* %16, null, !dbg !6611
  br i1 %tobool6, label %if.then7, label %if.end24, !dbg !6615

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %irq8, metadata !6616, metadata !DIExpression()), !dbg !6618
  store i32 0, i32* %offset, align 4, !dbg !6619
  br label %for.cond9, !dbg !6621

for.cond9:                                        ; preds = %for.inc19, %if.then7
  %17 = load i32, i32* %offset, align 4, !dbg !6622
  %18 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6624
  %ngpio = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %18, i32 0, i32 19, !dbg !6625
  %19 = load i16, i16* %ngpio, align 4, !dbg !6625
  %conv = zext i16 %19 to i32, !dbg !6624
  %cmp10 = icmp ult i32 %17, %conv, !dbg !6626
  br i1 %cmp10, label %for.body12, label %for.end21, !dbg !6627

for.body12:                                       ; preds = %for.cond9
  %20 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6628
  %21 = load i32, i32* %offset, align 4, !dbg !6631
  %call = call zeroext i1 @gpiochip_irqchip_irq_valid(%struct.gpio_chip* %20, i32 %21) #11, !dbg !6632
  br i1 %call, label %if.end14, label %if.then13, !dbg !6633

if.then13:                                        ; preds = %for.body12
  br label %for.inc19, !dbg !6634

if.end14:                                         ; preds = %for.body12
  %22 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6635
  %irq15 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %22, i32 0, i32 35, !dbg !6636
  %domain16 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq15, i32 0, i32 1, !dbg !6637
  %23 = load %struct.irq_domain*, %struct.irq_domain** %domain16, align 8, !dbg !6637
  %24 = load i32, i32* %offset, align 4, !dbg !6638
  %conv17 = zext i32 %24 to i64, !dbg !6638
  %call18 = call i32 @irq_find_mapping(%struct.irq_domain* %23, i64 %conv17) #11, !dbg !6639
  store i32 %call18, i32* %irq8, align 4, !dbg !6640
  %25 = load i32, i32* %irq8, align 4, !dbg !6641
  call void @irq_dispose_mapping(i32 %25) #11, !dbg !6642
  br label %for.inc19, !dbg !6643

for.inc19:                                        ; preds = %if.end14, %if.then13
  %26 = load i32, i32* %offset, align 4, !dbg !6644
  %inc20 = add i32 %26, 1, !dbg !6644
  store i32 %inc20, i32* %offset, align 4, !dbg !6644
  br label %for.cond9, !dbg !6645, !llvm.loop !6646

for.end21:                                        ; preds = %for.cond9
  %27 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6648
  %irq22 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %27, i32 0, i32 35, !dbg !6649
  %domain23 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq22, i32 0, i32 1, !dbg !6650
  %28 = load %struct.irq_domain*, %struct.irq_domain** %domain23, align 8, !dbg !6650
  call void @irq_domain_remove(%struct.irq_domain* %28) #11, !dbg !6651
  br label %if.end24, !dbg !6652

if.end24:                                         ; preds = %for.end21, %if.end
  %29 = load %struct.irq_chip*, %struct.irq_chip** %irqchip, align 8, !dbg !6653
  %tobool25 = icmp ne %struct.irq_chip* %29, null, !dbg !6653
  br i1 %tobool25, label %if.then26, label %if.end41, !dbg !6655

if.then26:                                        ; preds = %if.end24
  %30 = load %struct.irq_chip*, %struct.irq_chip** %irqchip, align 8, !dbg !6656
  %irq_request_resources = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %30, i32 0, i32 24, !dbg !6659
  %31 = load i32 (%struct.irq_data*)*, i32 (%struct.irq_data*)** %irq_request_resources, align 8, !dbg !6659
  %cmp27 = icmp eq i32 (%struct.irq_data*)* %31, @gpiochip_irq_reqres, !dbg !6660
  br i1 %cmp27, label %if.then29, label %if.end31, !dbg !6661

if.then29:                                        ; preds = %if.then26
  %32 = load %struct.irq_chip*, %struct.irq_chip** %irqchip, align 8, !dbg !6662
  %irq_request_resources30 = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %32, i32 0, i32 24, !dbg !6664
  store i32 (%struct.irq_data*)* null, i32 (%struct.irq_data*)** %irq_request_resources30, align 8, !dbg !6665
  %33 = load %struct.irq_chip*, %struct.irq_chip** %irqchip, align 8, !dbg !6666
  %irq_release_resources = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %33, i32 0, i32 25, !dbg !6667
  store void (%struct.irq_data*)* null, void (%struct.irq_data*)** %irq_release_resources, align 8, !dbg !6668
  br label %if.end31, !dbg !6669

if.end31:                                         ; preds = %if.then29, %if.then26
  %34 = load %struct.irq_chip*, %struct.irq_chip** %irqchip, align 8, !dbg !6670
  %irq_enable = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %34, i32 0, i32 4, !dbg !6672
  %35 = load void (%struct.irq_data*)*, void (%struct.irq_data*)** %irq_enable, align 8, !dbg !6672
  %cmp32 = icmp eq void (%struct.irq_data*)* %35, @gpiochip_irq_enable, !dbg !6673
  br i1 %cmp32, label %if.then34, label %if.end40, !dbg !6674

if.then34:                                        ; preds = %if.end31
  %36 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6675
  %irq35 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %36, i32 0, i32 35, !dbg !6677
  %irq_enable36 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq35, i32 0, i32 23, !dbg !6678
  %37 = load void (%struct.irq_data*)*, void (%struct.irq_data*)** %irq_enable36, align 8, !dbg !6678
  %38 = load %struct.irq_chip*, %struct.irq_chip** %irqchip, align 8, !dbg !6679
  %irq_enable37 = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %38, i32 0, i32 4, !dbg !6680
  store void (%struct.irq_data*)* %37, void (%struct.irq_data*)** %irq_enable37, align 8, !dbg !6681
  %39 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6682
  %irq38 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %39, i32 0, i32 35, !dbg !6683
  %irq_disable = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq38, i32 0, i32 24, !dbg !6684
  %40 = load void (%struct.irq_data*)*, void (%struct.irq_data*)** %irq_disable, align 8, !dbg !6684
  %41 = load %struct.irq_chip*, %struct.irq_chip** %irqchip, align 8, !dbg !6685
  %irq_disable39 = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %41, i32 0, i32 5, !dbg !6686
  store void (%struct.irq_data*)* %40, void (%struct.irq_data*)** %irq_disable39, align 8, !dbg !6687
  br label %if.end40, !dbg !6688

if.end40:                                         ; preds = %if.then34, %if.end31
  br label %if.end41, !dbg !6689

if.end41:                                         ; preds = %if.end40, %if.end24
  %42 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6690
  %irq42 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %42, i32 0, i32 35, !dbg !6691
  %irq_enable43 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq42, i32 0, i32 23, !dbg !6692
  store void (%struct.irq_data*)* null, void (%struct.irq_data*)** %irq_enable43, align 8, !dbg !6693
  %43 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6694
  %irq44 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %43, i32 0, i32 35, !dbg !6695
  %irq_disable45 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq44, i32 0, i32 24, !dbg !6696
  store void (%struct.irq_data*)* null, void (%struct.irq_data*)** %irq_disable45, align 8, !dbg !6697
  %44 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6698
  %irq46 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %44, i32 0, i32 35, !dbg !6699
  %chip47 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq46, i32 0, i32 0, !dbg !6700
  store %struct.irq_chip* null, %struct.irq_chip** %chip47, align 8, !dbg !6701
  %45 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6702
  call void @gpiochip_irqchip_free_valid_mask(%struct.gpio_chip* %45) #11, !dbg !6703
  ret void, !dbg !6704
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpiochip_irqchip_free_valid_mask(%struct.gpio_chip* %gc) #0 !dbg !6705 {
entry:
  %gc.addr = alloca %struct.gpio_chip*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !6706, metadata !DIExpression()), !dbg !6707
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6708
  %irq = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 35, !dbg !6709
  %valid_mask = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq, i32 0, i32 21, !dbg !6710
  %1 = load i64*, i64** %valid_mask, align 8, !dbg !6710
  call void @bitmap_free(i64* %1) #11, !dbg !6711
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6712
  %irq1 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %2, i32 0, i32 35, !dbg !6713
  %valid_mask2 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq1, i32 0, i32 21, !dbg !6714
  store i64* null, i64** %valid_mask2, align 8, !dbg !6715
  ret void, !dbg !6716
}

; Function Attrs: noredzone
declare dso_local void @acpi_gpiochip_remove(%struct.gpio_chip*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpiochip_free_hogs(%struct.gpio_chip* %gc) #0 !dbg !6717 {
entry:
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %id = alloca i32, align 4
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !6718, metadata !DIExpression()), !dbg !6719
  call void @llvm.dbg.declare(metadata i32* %id, metadata !6720, metadata !DIExpression()), !dbg !6721
  store i32 0, i32* %id, align 4, !dbg !6722
  br label %for.cond, !dbg !6724

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %id, align 4, !dbg !6725
  %1 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6727
  %ngpio = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %1, i32 0, i32 19, !dbg !6728
  %2 = load i16, i16* %ngpio, align 4, !dbg !6728
  %conv = zext i16 %2 to i32, !dbg !6727
  %cmp = icmp slt i32 %0, %conv, !dbg !6729
  br i1 %cmp, label %for.body, label %for.end, !dbg !6730

for.body:                                         ; preds = %for.cond
  %3 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6731
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %3, i32 0, i32 1, !dbg !6734
  %4 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !6734
  %descs = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %4, i32 0, i32 6, !dbg !6735
  %5 = load %struct.gpio_desc*, %struct.gpio_desc** %descs, align 8, !dbg !6735
  %6 = load i32, i32* %id, align 4, !dbg !6736
  %idxprom = sext i32 %6 to i64, !dbg !6731
  %arrayidx = getelementptr %struct.gpio_desc, %struct.gpio_desc* %5, i64 %idxprom, !dbg !6731
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %arrayidx, i32 0, i32 1, !dbg !6737
  %call = call zeroext i1 @test_bit(i64 11, i64* %flags) #11, !dbg !6738
  br i1 %call, label %if.then, label %if.end, !dbg !6739

if.then:                                          ; preds = %for.body
  %7 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6740
  %gpiodev2 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %7, i32 0, i32 1, !dbg !6741
  %8 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev2, align 8, !dbg !6741
  %descs3 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %8, i32 0, i32 6, !dbg !6742
  %9 = load %struct.gpio_desc*, %struct.gpio_desc** %descs3, align 8, !dbg !6742
  %10 = load i32, i32* %id, align 4, !dbg !6743
  %idxprom4 = sext i32 %10 to i64, !dbg !6740
  %arrayidx5 = getelementptr %struct.gpio_desc, %struct.gpio_desc* %9, i64 %idxprom4, !dbg !6740
  call void @gpiochip_free_own_desc(%struct.gpio_desc* %arrayidx5) #11, !dbg !6744
  br label %if.end, !dbg !6744

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6745

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %id, align 4, !dbg !6746
  %inc = add i32 %11, 1, !dbg !6746
  store i32 %inc, i32* %id, align 4, !dbg !6746
  br label %for.cond, !dbg !6747, !llvm.loop !6748

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6750
}

; Function Attrs: noredzone
declare dso_local void @of_gpiochip_remove(%struct.gpio_chip*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpiochip_remove_pin_ranges(%struct.gpio_chip* %gc) #0 !dbg !6751 {
entry:
  %gc.addr = alloca %struct.gpio_chip*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !6752, metadata !DIExpression()), !dbg !6753
  ret void, !dbg !6754
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpiochip_free_valid_mask(%struct.gpio_chip* %gc) #0 !dbg !6755 {
entry:
  %gc.addr = alloca %struct.gpio_chip*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !6756, metadata !DIExpression()), !dbg !6757
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6758
  %valid_mask = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 36, !dbg !6759
  %1 = load i64*, i64** %valid_mask, align 8, !dbg !6759
  call void @bitmap_free(i64* %1) #11, !dbg !6760
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6761
  %valid_mask1 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %2, i32 0, i32 36, !dbg !6762
  store i64* null, i64** %valid_mask1, align 8, !dbg !6763
  ret void, !dbg !6764
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !6765 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !6769, metadata !DIExpression()), !dbg !6770
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6771
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !6772
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6773
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !6774
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !6775
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6776
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !6777
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !6778
  ret void, !dbg !6779
}

; Function Attrs: noredzone
declare dso_local void @kfree_const(i8*) #2

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noredzone
declare dso_local void @ida_free(%struct.ida*, i32) #2

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @gpiochip_get_data(%struct.gpio_chip* %gc) #0 !dbg !6780 {
entry:
  %gc.addr = alloca %struct.gpio_chip*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !6783, metadata !DIExpression()), !dbg !6784
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6785
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 1, !dbg !6786
  %1 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !6786
  %data = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %1, i32 0, i32 10, !dbg !6787
  %2 = load i8*, i8** %data, align 8, !dbg !6787
  ret i8* %2, !dbg !6788
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @gpiochip_remove(%struct.gpio_chip* %gc) #0 !dbg !6789 {
entry:
  %lock.addr.i30 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i30, metadata !4628, metadata !DIExpression()), !dbg !6790
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4636, metadata !DIExpression()), !dbg !6792
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4646, metadata !DIExpression()), !dbg !6793
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %gdev = alloca %struct.gpio_device*, align 8
  %flags = alloca i64, align 8
  %i = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !6800, metadata !DIExpression()), !dbg !6801
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %gdev, metadata !6802, metadata !DIExpression()), !dbg !6803
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6804
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 1, !dbg !6805
  %1 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !6805
  store %struct.gpio_device* %1, %struct.gpio_device** %gdev, align 8, !dbg !6803
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6806, metadata !DIExpression()), !dbg !6807
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6808, metadata !DIExpression()), !dbg !6809
  %2 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !6810
  call void @gpiochip_sysfs_unregister(%struct.gpio_device* %2) #11, !dbg !6811
  %3 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6812
  call void @gpiochip_free_hogs(%struct.gpio_chip* %3) #11, !dbg !6813
  %4 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !6814
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %4, i32 0, i32 5, !dbg !6815
  store %struct.gpio_chip* null, %struct.gpio_chip** %chip, align 8, !dbg !6816
  %5 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6817
  call void @gpiochip_irqchip_remove(%struct.gpio_chip* %5) #11, !dbg !6818
  %6 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6819
  call void @acpi_gpiochip_remove(%struct.gpio_chip* %6) #11, !dbg !6820
  %7 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6821
  call void @of_gpiochip_remove(%struct.gpio_chip* %7) #11, !dbg !6822
  %8 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6823
  call void @gpiochip_remove_pin_ranges(%struct.gpio_chip* %8) #11, !dbg !6824
  %9 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6825
  call void @gpiochip_free_valid_mask(%struct.gpio_chip* %9) #11, !dbg !6826
  %10 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !6827
  %data = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %10, i32 0, i32 10, !dbg !6828
  store i8* null, i8** %data, align 8, !dbg !6829
  br label %do.body, !dbg !6830

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6831

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6832, metadata !DIExpression()), !dbg !6834
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6835, metadata !DIExpression()), !dbg !6834
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6834
  %conv = zext i1 %cmp to i32, !dbg !6834
  store i32 1, i32* %tmp, align 4, !dbg !6834
  %11 = load i32, i32* %tmp, align 4, !dbg !6834
  br label %do.body2, !dbg !6836

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6837

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6838

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6840, metadata !DIExpression()), !dbg !6843
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6844, metadata !DIExpression()), !dbg !6843
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6843
  %conv8 = zext i1 %cmp7 to i32, !dbg !6843
  store i32 1, i32* %tmp9, align 4, !dbg !6843
  %12 = load i32, i32* %tmp9, align 4, !dbg !6843
  %call = call i64 @arch_local_irq_save() #11, !dbg !6845
  store i64 %call, i64* %flags, align 8, !dbg !6845
  br label %do.end, !dbg !6845

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !6838

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !6837

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6846, !srcloc !6847
  br label %do.body12, !dbg !6846

do.body12:                                        ; preds = %do.body11
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i, align 8
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6848
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !6849
  %rlock.i = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !6849
  br label %do.end14, !dbg !6850

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !6846

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !6837

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6836

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6831

do.end18:                                         ; preds = %do.end17
  store i32 0, i32* %i, align 4, !dbg !6851
  br label %for.cond, !dbg !6853

for.cond:                                         ; preds = %for.inc, %do.end18
  %15 = load i32, i32* %i, align 4, !dbg !6854
  %16 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !6856
  %ngpio = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %16, i32 0, i32 8, !dbg !6857
  %17 = load i16, i16* %ngpio, align 4, !dbg !6857
  %conv19 = zext i16 %17 to i32, !dbg !6856
  %cmp20 = icmp ult i32 %15, %conv19, !dbg !6858
  br i1 %cmp20, label %for.body, label %for.end, !dbg !6859

for.body:                                         ; preds = %for.cond
  %18 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6860
  %19 = load i32, i32* %i, align 4, !dbg !6863
  %call22 = call i8* @gpiochip_is_requested(%struct.gpio_chip* %18, i32 %19) #11, !dbg !6864
  %tobool = icmp ne i8* %call22, null, !dbg !6864
  br i1 %tobool, label %if.then, label %if.end, !dbg !6865

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !6866

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6867

for.inc:                                          ; preds = %if.end
  %20 = load i32, i32* %i, align 4, !dbg !6868
  %inc = add i32 %20, 1, !dbg !6868
  store i32 %inc, i32* %i, align 4, !dbg !6868
  br label %for.cond, !dbg !6869, !llvm.loop !6870

for.end:                                          ; preds = %if.then, %for.cond
  %21 = load i64, i64* %flags, align 8, !dbg !6872
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i30, align 8
  store i64 %21, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !265, metadata !4706, metadata !DIExpression()) #7, !dbg !6873
  call void @llvm.dbg.declare(metadata !265, metadata !4710, metadata !DIExpression()) #7, !dbg !6873
  store i32 1, i32* %tmp.i, align 4, !dbg !6873
  %22 = load i32, i32* %tmp.i, align 4, !dbg !6873
  call void @llvm.dbg.declare(metadata !265, metadata !4711, metadata !DIExpression()) #7, !dbg !6874
  call void @llvm.dbg.declare(metadata !265, metadata !4717, metadata !DIExpression()) #7, !dbg !6874
  store i32 1, i32* %tmp8.i, align 4, !dbg !6874
  %23 = load i32, i32* %tmp8.i, align 4, !dbg !6874
  %24 = load i64, i64* %flags.addr.i, align 8, !dbg !6875
  call void @arch_local_irq_restore(i64 %24) #12, !dbg !6875
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6876, !srcloc !4721
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i30, align 8, !dbg !6877
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !6877
  %rlock.i31 = bitcast %union.anon* %26 to %struct.raw_spinlock*, !dbg !6877
  %27 = load i32, i32* %i, align 4, !dbg !6878
  %28 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !6880
  %ngpio23 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %28, i32 0, i32 8, !dbg !6881
  %29 = load i16, i16* %ngpio23, align 4, !dbg !6881
  %conv24 = zext i16 %29 to i32, !dbg !6880
  %cmp25 = icmp ne i32 %27, %conv24, !dbg !6882
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !6883

if.then27:                                        ; preds = %for.end
  %30 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !6884
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %30, i32 0, i32 1, !dbg !6884
  call void (%struct.device*, i8*, ...) @_dev_crit(%struct.device* %dev, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.9, i64 0, i64 0)) #13, !dbg !6884
  br label %if.end28, !dbg !6884

if.end28:                                         ; preds = %if.then27, %for.end
  %31 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !6885
  call void @gpiolib_cdev_unregister(%struct.gpio_device* %31) #11, !dbg !6885
  %32 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !6886
  %dev29 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %32, i32 0, i32 1, !dbg !6887
  call void @put_device(%struct.device* %dev29) #11, !dbg !6888
  ret void, !dbg !6889
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpiochip_sysfs_unregister(%struct.gpio_device* %gdev) #0 !dbg !6890 {
entry:
  %gdev.addr = alloca %struct.gpio_device*, align 8
  store %struct.gpio_device* %gdev, %struct.gpio_device** %gdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %gdev.addr, metadata !6894, metadata !DIExpression()), !dbg !6895
  ret void, !dbg !6896
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @gpiochip_is_requested(%struct.gpio_chip* %gc, i32 %offset) #0 !dbg !6897 {
entry:
  %retval = alloca i8*, align 8
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %offset.addr = alloca i32, align 4
  %desc = alloca %struct.gpio_desc*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !6900, metadata !DIExpression()), !dbg !6901
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !6902, metadata !DIExpression()), !dbg !6903
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc, metadata !6904, metadata !DIExpression()), !dbg !6905
  %0 = load i32, i32* %offset.addr, align 4, !dbg !6906
  %1 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6908
  %ngpio = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %1, i32 0, i32 19, !dbg !6909
  %2 = load i16, i16* %ngpio, align 4, !dbg !6909
  %conv = zext i16 %2 to i32, !dbg !6908
  %cmp = icmp uge i32 %0, %conv, !dbg !6910
  br i1 %cmp, label %if.then, label %if.end, !dbg !6911

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !6912
  br label %return, !dbg !6912

if.end:                                           ; preds = %entry
  %3 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !6913
  %4 = load i32, i32* %offset.addr, align 4, !dbg !6914
  %call = call %struct.gpio_desc* @gpiochip_get_desc(%struct.gpio_chip* %3, i32 %4) #11, !dbg !6915
  store %struct.gpio_desc* %call, %struct.gpio_desc** %desc, align 8, !dbg !6916
  %5 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !6917
  %6 = bitcast %struct.gpio_desc* %5 to i8*, !dbg !6917
  %call2 = call zeroext i1 @IS_ERR(i8* %6) #11, !dbg !6919
  br i1 %call2, label %if.then3, label %if.end4, !dbg !6920

if.then3:                                         ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !6921
  br label %return, !dbg !6921

if.end4:                                          ; preds = %if.end
  %7 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !6922
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %7, i32 0, i32 1, !dbg !6924
  %call5 = call zeroext i1 @test_bit(i64 0, i64* %flags) #11, !dbg !6925
  %conv6 = zext i1 %call5 to i32, !dbg !6925
  %cmp7 = icmp eq i32 %conv6, 0, !dbg !6926
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !6927

if.then9:                                         ; preds = %if.end4
  store i8* null, i8** %retval, align 8, !dbg !6928
  br label %return, !dbg !6928

if.end10:                                         ; preds = %if.end4
  %8 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !6929
  %label = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %8, i32 0, i32 2, !dbg !6930
  %9 = load i8*, i8** %label, align 8, !dbg !6930
  store i8* %9, i8** %retval, align 8, !dbg !6931
  br label %return, !dbg !6931

return:                                           ; preds = %if.end10, %if.then9, %if.then3, %if.then
  %10 = load i8*, i8** %retval, align 8, !dbg !6932
  ret i8* %10, !dbg !6932
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_crit(%struct.device*, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local void @gpiolib_cdev_unregister(%struct.gpio_device*) #2

; Function Attrs: noredzone
declare dso_local void @put_device(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.gpio_chip* @gpiochip_find(i8* %data, i32 (%struct.gpio_chip*, i8*)* %match) #0 !dbg !6933 {
entry:
  %lock.addr.i34 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i34, metadata !4628, metadata !DIExpression()), !dbg !6939
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4636, metadata !DIExpression()), !dbg !6941
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4646, metadata !DIExpression()), !dbg !6942
  %data.addr = alloca i8*, align 8
  %match.addr = alloca i32 (%struct.gpio_chip*, i8*)*, align 8
  %gdev = alloca %struct.gpio_device*, align 8
  %gc = alloca %struct.gpio_chip*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp21 = alloca %struct.gpio_device*, align 8
  %__mptr28 = alloca i8*, align 8
  %tmp32 = alloca %struct.gpio_device*, align 8
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6949, metadata !DIExpression()), !dbg !6950
  store i32 (%struct.gpio_chip*, i8*)* %match, i32 (%struct.gpio_chip*, i8*)** %match.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.gpio_chip*, i8*)** %match.addr, metadata !6951, metadata !DIExpression()), !dbg !6952
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %gdev, metadata !6953, metadata !DIExpression()), !dbg !6954
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !6955, metadata !DIExpression()), !dbg !6956
  store %struct.gpio_chip* null, %struct.gpio_chip** %gc, align 8, !dbg !6956
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6957, metadata !DIExpression()), !dbg !6958
  br label %do.body, !dbg !6959

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6960

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6961, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6964, metadata !DIExpression()), !dbg !6963
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6963
  %conv = zext i1 %cmp to i32, !dbg !6963
  store i32 1, i32* %tmp, align 4, !dbg !6963
  %0 = load i32, i32* %tmp, align 4, !dbg !6963
  br label %do.body2, !dbg !6965

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6966

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6967

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6969, metadata !DIExpression()), !dbg !6972
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6973, metadata !DIExpression()), !dbg !6972
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6972
  %conv8 = zext i1 %cmp7 to i32, !dbg !6972
  store i32 1, i32* %tmp9, align 4, !dbg !6972
  %1 = load i32, i32* %tmp9, align 4, !dbg !6972
  %call = call i64 @arch_local_irq_save() #11, !dbg !6974
  store i64 %call, i64* %flags, align 8, !dbg !6974
  br label %do.end, !dbg !6974

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !6967

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !6966

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6975, !srcloc !6976
  br label %do.body12, !dbg !6975

do.body12:                                        ; preds = %do.body11
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i, align 8
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6977
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !6978
  %rlock.i = bitcast %union.anon* %3 to %struct.raw_spinlock*, !dbg !6978
  br label %do.end14, !dbg !6979

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !6975

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !6966

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6965

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6960

do.end18:                                         ; preds = %do.end17
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6980, metadata !DIExpression()), !dbg !6983
  %4 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @gpio_devices, i32 0, i32 0), align 8, !dbg !6983
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !6983
  store i8* %5, i8** %__mptr, align 8, !dbg !6983
  br label %do.body19, !dbg !6983

do.body19:                                        ; preds = %do.end18
  br label %do.end20, !dbg !6984

do.end20:                                         ; preds = %do.body19
  %6 = load i8*, i8** %__mptr, align 8, !dbg !6983
  %add.ptr = getelementptr i8, i8* %6, i64 -864, !dbg !6983
  %7 = bitcast i8* %add.ptr to %struct.gpio_device*, !dbg !6983
  store %struct.gpio_device* %7, %struct.gpio_device** %tmp21, align 8, !dbg !6984
  %8 = load %struct.gpio_device*, %struct.gpio_device** %tmp21, align 8, !dbg !6983
  store %struct.gpio_device* %8, %struct.gpio_device** %gdev, align 8, !dbg !6986
  br label %for.cond, !dbg !6986

for.cond:                                         ; preds = %do.end31, %do.end20
  %9 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !6987
  %list = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %9, i32 0, i32 11, !dbg !6987
  %cmp22 = icmp eq %struct.list_head* %list, @gpio_devices, !dbg !6987
  %lnot = xor i1 %cmp22, true, !dbg !6987
  br i1 %lnot, label %for.body, label %for.end, !dbg !6986

for.body:                                         ; preds = %for.cond
  %10 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !6989
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %10, i32 0, i32 5, !dbg !6991
  %11 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !6991
  %tobool = icmp ne %struct.gpio_chip* %11, null, !dbg !6989
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6992

land.lhs.true:                                    ; preds = %for.body
  %12 = load i32 (%struct.gpio_chip*, i8*)*, i32 (%struct.gpio_chip*, i8*)** %match.addr, align 8, !dbg !6993
  %13 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !6994
  %chip24 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %13, i32 0, i32 5, !dbg !6995
  %14 = load %struct.gpio_chip*, %struct.gpio_chip** %chip24, align 8, !dbg !6995
  %15 = load i8*, i8** %data.addr, align 8, !dbg !6996
  %call25 = call i32 %12(%struct.gpio_chip* %14, i8* %15) #11, !dbg !6993
  %tobool26 = icmp ne i32 %call25, 0, !dbg !6993
  br i1 %tobool26, label %if.then, label %if.end, !dbg !6997

if.then:                                          ; preds = %land.lhs.true
  %16 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !6998
  %chip27 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %16, i32 0, i32 5, !dbg !7000
  %17 = load %struct.gpio_chip*, %struct.gpio_chip** %chip27, align 8, !dbg !7000
  store %struct.gpio_chip* %17, %struct.gpio_chip** %gc, align 8, !dbg !7001
  br label %for.end, !dbg !7002

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !7003

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr28, metadata !7004, metadata !DIExpression()), !dbg !7006
  %18 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !7006
  %list29 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %18, i32 0, i32 11, !dbg !7006
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list29, i32 0, i32 0, !dbg !7006
  %19 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7006
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !7006
  store i8* %20, i8** %__mptr28, align 8, !dbg !7006
  br label %do.body30, !dbg !7006

do.body30:                                        ; preds = %for.inc
  br label %do.end31, !dbg !7007

do.end31:                                         ; preds = %do.body30
  %21 = load i8*, i8** %__mptr28, align 8, !dbg !7006
  %add.ptr33 = getelementptr i8, i8* %21, i64 -864, !dbg !7006
  %22 = bitcast i8* %add.ptr33 to %struct.gpio_device*, !dbg !7006
  store %struct.gpio_device* %22, %struct.gpio_device** %tmp32, align 8, !dbg !7007
  %23 = load %struct.gpio_device*, %struct.gpio_device** %tmp32, align 8, !dbg !7006
  store %struct.gpio_device* %23, %struct.gpio_device** %gdev, align 8, !dbg !6987
  br label %for.cond, !dbg !6987, !llvm.loop !7009

for.end:                                          ; preds = %if.then, %for.cond
  %24 = load i64, i64* %flags, align 8, !dbg !7011
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i34, align 8
  store i64 %24, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !265, metadata !4706, metadata !DIExpression()) #7, !dbg !7012
  call void @llvm.dbg.declare(metadata !265, metadata !4710, metadata !DIExpression()) #7, !dbg !7012
  store i32 1, i32* %tmp.i, align 4, !dbg !7012
  %25 = load i32, i32* %tmp.i, align 4, !dbg !7012
  call void @llvm.dbg.declare(metadata !265, metadata !4711, metadata !DIExpression()) #7, !dbg !7013
  call void @llvm.dbg.declare(metadata !265, metadata !4717, metadata !DIExpression()) #7, !dbg !7013
  store i32 1, i32* %tmp8.i, align 4, !dbg !7013
  %26 = load i32, i32* %tmp8.i, align 4, !dbg !7013
  %27 = load i64, i64* %flags.addr.i, align 8, !dbg !7014
  call void @arch_local_irq_restore(i64 %27) #12, !dbg !7014
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7015, !srcloc !4721
  %28 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i34, align 8, !dbg !7016
  %29 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %28, i32 0, i32 0, !dbg !7016
  %rlock.i35 = bitcast %union.anon* %29 to %struct.raw_spinlock*, !dbg !7016
  %30 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !7017
  ret %struct.gpio_chip* %30, !dbg !7018
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @gpiochip_irqchip_irq_valid(%struct.gpio_chip* %gc, i32 %offset) #0 !dbg !7019 {
entry:
  %retval = alloca i1, align 1
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !7020, metadata !DIExpression()), !dbg !7021
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !7022, metadata !DIExpression()), !dbg !7023
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7024
  %1 = load i32, i32* %offset.addr, align 4, !dbg !7026
  %call = call zeroext i1 @gpiochip_line_is_valid(%struct.gpio_chip* %0, i32 %1) #11, !dbg !7027
  br i1 %call, label %if.end, label %if.then, !dbg !7028

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !7029
  br label %return, !dbg !7029

if.end:                                           ; preds = %entry
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7030
  %irq = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %2, i32 0, i32 35, !dbg !7030
  %valid_mask = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq, i32 0, i32 21, !dbg !7030
  %3 = load i64*, i64** %valid_mask, align 8, !dbg !7030
  %tobool = icmp ne i64* %3, null, !dbg !7030
  %lnot = xor i1 %tobool, true, !dbg !7030
  %lnot1 = xor i1 %lnot, true, !dbg !7030
  %lnot2 = xor i1 %lnot1, true, !dbg !7030
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7030
  %conv = sext i32 %lnot.ext to i64, !dbg !7030
  %tobool3 = icmp ne i64 %conv, 0, !dbg !7030
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !7032

if.then4:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !7033
  br label %return, !dbg !7033

if.end5:                                          ; preds = %if.end
  %4 = load i32, i32* %offset.addr, align 4, !dbg !7034
  %conv6 = zext i32 %4 to i64, !dbg !7034
  %5 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7035
  %irq7 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %5, i32 0, i32 35, !dbg !7036
  %valid_mask8 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq7, i32 0, i32 21, !dbg !7037
  %6 = load i64*, i64** %valid_mask8, align 8, !dbg !7037
  %call9 = call zeroext i1 @test_bit(i64 %conv6, i64* %6) #11, !dbg !7038
  store i1 %call9, i1* %retval, align 1, !dbg !7039
  br label %return, !dbg !7039

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !7040
  ret i1 %7, !dbg !7040
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @gpiochip_set_nested_irqchip(%struct.gpio_chip* %gc, %struct.irq_chip* %irqchip, i32 %parent_irq) #0 !dbg !7041 {
entry:
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %irqchip.addr = alloca %struct.irq_chip*, align 8
  %parent_irq.addr = alloca i32, align 4
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !7044, metadata !DIExpression()), !dbg !7045
  store %struct.irq_chip* %irqchip, %struct.irq_chip** %irqchip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_chip** %irqchip.addr, metadata !7046, metadata !DIExpression()), !dbg !7047
  store i32 %parent_irq, i32* %parent_irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %parent_irq.addr, metadata !7048, metadata !DIExpression()), !dbg !7049
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7050
  %1 = load i32, i32* %parent_irq.addr, align 4, !dbg !7051
  call void @gpiochip_set_cascaded_irqchip(%struct.gpio_chip* %0, i32 %1, void (%struct.irq_desc*)* null) #11, !dbg !7052
  ret void, !dbg !7053
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpiochip_set_cascaded_irqchip(%struct.gpio_chip* %gc, i32 %parent_irq, void (%struct.irq_desc*)* %parent_handler) #0 !dbg !7054 {
entry:
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %parent_irq.addr = alloca i32, align 4
  %parent_handler.addr = alloca void (%struct.irq_desc*)*, align 8
  %girq = alloca %struct.gpio_irq_chip*, align 8
  %dev = alloca %struct.device*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !7057, metadata !DIExpression()), !dbg !7058
  store i32 %parent_irq, i32* %parent_irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %parent_irq.addr, metadata !7059, metadata !DIExpression()), !dbg !7060
  store void (%struct.irq_desc*)* %parent_handler, void (%struct.irq_desc*)** %parent_handler.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.irq_desc*)** %parent_handler.addr, metadata !7061, metadata !DIExpression()), !dbg !7062
  call void @llvm.dbg.declare(metadata %struct.gpio_irq_chip** %girq, metadata !7063, metadata !DIExpression()), !dbg !7064
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7065
  %irq = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 35, !dbg !7066
  store %struct.gpio_irq_chip* %irq, %struct.gpio_irq_chip** %girq, align 8, !dbg !7064
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !7067, metadata !DIExpression()), !dbg !7068
  %1 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7069
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %1, i32 0, i32 1, !dbg !7070
  %2 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !7070
  %dev1 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %2, i32 0, i32 1, !dbg !7071
  store %struct.device* %dev1, %struct.device** %dev, align 8, !dbg !7068
  %3 = load %struct.gpio_irq_chip*, %struct.gpio_irq_chip** %girq, align 8, !dbg !7072
  %domain = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %3, i32 0, i32 1, !dbg !7074
  %4 = load %struct.irq_domain*, %struct.irq_domain** %domain, align 8, !dbg !7074
  %tobool = icmp ne %struct.irq_domain* %4, null, !dbg !7072
  br i1 %tobool, label %if.end, label %if.then, !dbg !7075

if.then:                                          ; preds = %entry
  %5 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7076
  %gpiodev2 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %5, i32 0, i32 1, !dbg !7076
  %6 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev2, align 8, !dbg !7076
  %dev3 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %6, i32 0, i32 1, !dbg !7076
  %7 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7076
  %label = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %7, i32 0, i32 0, !dbg !7076
  %8 = load i8*, i8** %label, align 8, !dbg !7076
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.43, i64 0, i64 0), i8* %8, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__func__.gpiochip_set_cascaded_irqchip, i64 0, i64 0)) #13, !dbg !7076
  br label %if.end20, !dbg !7078

if.end:                                           ; preds = %entry
  %9 = load void (%struct.irq_desc*)*, void (%struct.irq_desc*)** %parent_handler.addr, align 8, !dbg !7079
  %tobool4 = icmp ne void (%struct.irq_desc*)* %9, null, !dbg !7079
  br i1 %tobool4, label %if.then5, label %if.end20, !dbg !7081

if.then5:                                         ; preds = %if.end
  %10 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7082
  %can_sleep = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %10, i32 0, i32 21, !dbg !7085
  %11 = load i8, i8* %can_sleep, align 8, !dbg !7085
  %tobool6 = trunc i8 %11 to i1, !dbg !7085
  br i1 %tobool6, label %if.then7, label %if.end11, !dbg !7086

if.then7:                                         ; preds = %if.then5
  %12 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7087
  %gpiodev8 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %12, i32 0, i32 1, !dbg !7087
  %13 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev8, align 8, !dbg !7087
  %dev9 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %13, i32 0, i32 1, !dbg !7087
  %14 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7087
  %label10 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %14, i32 0, i32 0, !dbg !7087
  %15 = load i8*, i8** %label10, align 8, !dbg !7087
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev9, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.44, i64 0, i64 0), i8* %15) #13, !dbg !7087
  br label %if.end20, !dbg !7089

if.end11:                                         ; preds = %if.then5
  %16 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7090
  %call = call i8* @devm_kcalloc(%struct.device* %16, i64 1, i64 4, i32 3264) #11, !dbg !7091
  %17 = bitcast i8* %call to i32*, !dbg !7091
  %18 = load %struct.gpio_irq_chip*, %struct.gpio_irq_chip** %girq, align 8, !dbg !7092
  %parents = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %18, i32 0, i32 16, !dbg !7093
  store i32* %17, i32** %parents, align 8, !dbg !7094
  %19 = load %struct.gpio_irq_chip*, %struct.gpio_irq_chip** %girq, align 8, !dbg !7095
  %parents12 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %19, i32 0, i32 16, !dbg !7097
  %20 = load i32*, i32** %parents12, align 8, !dbg !7097
  %tobool13 = icmp ne i32* %20, null, !dbg !7095
  br i1 %tobool13, label %if.end18, label %if.then14, !dbg !7098

if.then14:                                        ; preds = %if.end11
  %21 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7099
  %gpiodev15 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %21, i32 0, i32 1, !dbg !7099
  %22 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev15, align 8, !dbg !7099
  %dev16 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %22, i32 0, i32 1, !dbg !7099
  %23 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7099
  %label17 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %23, i32 0, i32 0, !dbg !7099
  %24 = load i8*, i8** %label17, align 8, !dbg !7099
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.45, i64 0, i64 0), i8* %24) #13, !dbg !7099
  br label %if.end20, !dbg !7101

if.end18:                                         ; preds = %if.end11
  %25 = load i32, i32* %parent_irq.addr, align 4, !dbg !7102
  %26 = load %struct.gpio_irq_chip*, %struct.gpio_irq_chip** %girq, align 8, !dbg !7103
  %parents19 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %26, i32 0, i32 16, !dbg !7104
  %27 = load i32*, i32** %parents19, align 8, !dbg !7104
  %arrayidx = getelementptr i32, i32* %27, i64 0, !dbg !7103
  store i32 %25, i32* %arrayidx, align 4, !dbg !7105
  %28 = load %struct.gpio_irq_chip*, %struct.gpio_irq_chip** %girq, align 8, !dbg !7106
  %num_parents = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %28, i32 0, i32 15, !dbg !7107
  store i32 1, i32* %num_parents, align 8, !dbg !7108
  %29 = load i32, i32* %parent_irq.addr, align 4, !dbg !7109
  %30 = load void (%struct.irq_desc*)*, void (%struct.irq_desc*)** %parent_handler.addr, align 8, !dbg !7110
  %31 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7111
  %32 = bitcast %struct.gpio_chip* %31 to i8*, !dbg !7111
  call void @irq_set_chained_handler_and_data(i32 %29, void (%struct.irq_desc*)* %30, i8* %32) #11, !dbg !7112
  br label %if.end20, !dbg !7113

if.end20:                                         ; preds = %if.then, %if.then7, %if.then14, %if.end18, %if.end
  ret void, !dbg !7114
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @gpiochip_populate_parent_fwspec_twocell(%struct.gpio_chip* %gc, i32 %parent_hwirq, i32 %parent_type) #0 !dbg !7115 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5563, metadata !DIExpression()), !dbg !7116
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5573, metadata !DIExpression()), !dbg !7119
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5575, metadata !DIExpression()), !dbg !7120
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5577, metadata !DIExpression()), !dbg !7121
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5579, metadata !DIExpression()), !dbg !7122
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5585, metadata !DIExpression()), !dbg !7124
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5591, metadata !DIExpression()), !dbg !7126
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5600, metadata !DIExpression()), !dbg !7129
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5602, metadata !DIExpression()), !dbg !7130
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5604, metadata !DIExpression()), !dbg !7131
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5606, metadata !DIExpression()), !dbg !7132
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5608, metadata !DIExpression()), !dbg !7133
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5610, metadata !DIExpression()), !dbg !7134
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5612, metadata !DIExpression()), !dbg !7135
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5614, metadata !DIExpression()), !dbg !7136
  %retval = alloca i8*, align 8
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %parent_hwirq.addr = alloca i32, align 4
  %parent_type.addr = alloca i32, align 4
  %fwspec = alloca %struct.irq_fwspec*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !7137, metadata !DIExpression()), !dbg !7138
  store i32 %parent_hwirq, i32* %parent_hwirq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %parent_hwirq.addr, metadata !7139, metadata !DIExpression()), !dbg !7140
  store i32 %parent_type, i32* %parent_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %parent_type.addr, metadata !7141, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.declare(metadata %struct.irq_fwspec** %fwspec, metadata !7143, metadata !DIExpression()), !dbg !7144
  store i64 80, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %0 = load i64, i64* %size.addr.i, align 8, !dbg !7145
  %1 = call i1 @llvm.is.constant.i64(i64 %0) #7, !dbg !7146
  br i1 %1, label %if.then.i, label %if.end9.i, !dbg !7147

if.then.i:                                        ; preds = %entry
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !7148
  %cmp.i = icmp ugt i64 %2, 8192, !dbg !7149
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7150

if.then1.i:                                       ; preds = %if.then.i
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !7151
  %4 = load i32, i32* %flags.addr.i, align 4, !dbg !7152
  store i64 %3, i64* %size.addr.i.i, align 8
  store i32 %4, i32* %flags.addr.i.i, align 4
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !7153
  %call.i.i = call i32 @get_order(i64 %5) #14, !dbg !7154
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !7133
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !7155
  %7 = load i32, i32* %flags.addr.i.i, align 4, !dbg !7156
  %8 = load i32, i32* %order.i.i, align 4, !dbg !7157
  store i64 %6, i64* %size.addr.i.i.i, align 8
  store i32 %7, i32* %flags.addr.i.i.i, align 4
  store i32 %8, i32* %order.addr.i.i.i, align 4
  %9 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !7158
  %10 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !7159
  %11 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !7160
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %9, i32 %10, i32 %11) #12, !dbg !7161
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !7161
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !7161
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !7161
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !7161
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !7162
  br label %kmalloc.exit, !dbg !7162

if.end.i:                                         ; preds = %if.then.i
  %12 = load i64, i64* %size.addr.i, align 8, !dbg !7163
  store i64 %12, i64* %size.addr.i11.i, align 8
  %13 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7164
  %tobool.i.i = icmp ne i64 %13, 0, !dbg !7164
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !7165

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !7166
  br label %kmalloc_index.exit.i, !dbg !7166

if.end.i.i:                                       ; preds = %if.end.i
  %14 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7167
  %cmp.i.i = icmp ule i64 %14, 8, !dbg !7168
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !7169

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7170
  br label %kmalloc_index.exit.i, !dbg !7170

if.end2.i.i:                                      ; preds = %if.end.i.i
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7171
  %cmp3.i.i = icmp ugt i64 %15, 64, !dbg !7172
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !7173

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7174
  %cmp4.i.i = icmp ule i64 %16, 96, !dbg !7175
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !7176

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !7177
  br label %kmalloc_index.exit.i, !dbg !7177

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7178
  %cmp7.i.i = icmp ugt i64 %17, 128, !dbg !7179
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7180

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7181
  %cmp9.i.i = icmp ule i64 %18, 192, !dbg !7182
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7183

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !7184
  br label %kmalloc_index.exit.i, !dbg !7184

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7185
  %cmp12.i.i = icmp ule i64 %19, 8, !dbg !7186
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7187

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7188
  br label %kmalloc_index.exit.i, !dbg !7188

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7189
  %cmp15.i.i = icmp ule i64 %20, 16, !dbg !7190
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !7191

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !7192
  br label %kmalloc_index.exit.i, !dbg !7192

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7193
  %cmp18.i.i = icmp ule i64 %21, 32, !dbg !7194
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !7195

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !7196
  br label %kmalloc_index.exit.i, !dbg !7196

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7197
  %cmp21.i.i = icmp ule i64 %22, 64, !dbg !7198
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !7199

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !7200
  br label %kmalloc_index.exit.i, !dbg !7200

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7201
  %cmp24.i.i = icmp ule i64 %23, 128, !dbg !7202
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !7203

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !7204
  br label %kmalloc_index.exit.i, !dbg !7204

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7205
  %cmp27.i.i = icmp ule i64 %24, 256, !dbg !7206
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !7207

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !7208
  br label %kmalloc_index.exit.i, !dbg !7208

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7209
  %cmp30.i.i = icmp ule i64 %25, 512, !dbg !7210
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !7211

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !7212
  br label %kmalloc_index.exit.i, !dbg !7212

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7213
  %cmp33.i.i = icmp ule i64 %26, 1024, !dbg !7214
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !7215

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !7216
  br label %kmalloc_index.exit.i, !dbg !7216

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7217
  %cmp36.i.i = icmp ule i64 %27, 2048, !dbg !7218
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !7219

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !7220
  br label %kmalloc_index.exit.i, !dbg !7220

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7221
  %cmp39.i.i = icmp ule i64 %28, 4096, !dbg !7222
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !7223

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !7224
  br label %kmalloc_index.exit.i, !dbg !7224

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7225
  %cmp42.i.i = icmp ule i64 %29, 8192, !dbg !7226
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !7227

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !7228
  br label %kmalloc_index.exit.i, !dbg !7228

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7229
  %cmp45.i.i = icmp ule i64 %30, 16384, !dbg !7230
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !7231

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !7232
  br label %kmalloc_index.exit.i, !dbg !7232

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7233
  %cmp48.i.i = icmp ule i64 %31, 32768, !dbg !7234
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !7235

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !7236
  br label %kmalloc_index.exit.i, !dbg !7236

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7237
  %cmp51.i.i = icmp ule i64 %32, 65536, !dbg !7238
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !7239

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !7240
  br label %kmalloc_index.exit.i, !dbg !7240

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7241
  %cmp54.i.i = icmp ule i64 %33, 131072, !dbg !7242
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !7243

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !7244
  br label %kmalloc_index.exit.i, !dbg !7244

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7245
  %cmp57.i.i = icmp ule i64 %34, 262144, !dbg !7246
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !7247

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !7248
  br label %kmalloc_index.exit.i, !dbg !7248

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7249
  %cmp60.i.i = icmp ule i64 %35, 524288, !dbg !7250
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !7251

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !7252
  br label %kmalloc_index.exit.i, !dbg !7252

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7253
  %cmp63.i.i = icmp ule i64 %36, 1048576, !dbg !7254
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !7255

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !7256
  br label %kmalloc_index.exit.i, !dbg !7256

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7257
  %cmp66.i.i = icmp ule i64 %37, 2097152, !dbg !7258
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !7259

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !7260
  br label %kmalloc_index.exit.i, !dbg !7260

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7261
  %cmp69.i.i = icmp ule i64 %38, 4194304, !dbg !7262
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !7263

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !7264
  br label %kmalloc_index.exit.i, !dbg !7264

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7265
  %cmp72.i.i = icmp ule i64 %39, 8388608, !dbg !7266
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !7267

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !7268
  br label %kmalloc_index.exit.i, !dbg !7268

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7269
  %cmp75.i.i = icmp ule i64 %40, 16777216, !dbg !7270
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !7271

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !7272
  br label %kmalloc_index.exit.i, !dbg !7272

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7273
  %cmp78.i.i = icmp ule i64 %41, 33554432, !dbg !7274
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !7275

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !7276
  br label %kmalloc_index.exit.i, !dbg !7276

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7277
  %cmp81.i.i = icmp ule i64 %42, 67108864, !dbg !7278
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !7279

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !7280
  br label %kmalloc_index.exit.i, !dbg !7280

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.46, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !7281, !srcloc !5790
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 107) #7, !dbg !7282, !srcloc !5794
  unreachable, !dbg !7283

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %43 = load i32, i32* %retval.i.i, align 4, !dbg !7284
  store i32 %43, i32* %index.i, align 4, !dbg !7285
  %44 = load i32, i32* %index.i, align 4, !dbg !7286
  %tobool.i = icmp ne i32 %44, 0, !dbg !7286
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !7287

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !7288
  br label %kmalloc.exit, !dbg !7288

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %45 = load i32, i32* %flags.addr.i, align 4, !dbg !7289
  store i32 %45, i32* %flags.addr.i13.i, align 4
  %46 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7290
  %and.i.i = and i32 %46, 17, !dbg !7290
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !7290
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !7290
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !7290
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7290
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !7291

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !7292
  br label %kmalloc_type.exit.i, !dbg !7292

if.end.i16.i:                                     ; preds = %if.end4.i
  %47 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7293
  %and2.i.i = and i32 %47, 1, !dbg !7294
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !7293
  %48 = zext i1 %tobool3.i.i to i64, !dbg !7293
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !7293
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !7295
  br label %kmalloc_type.exit.i, !dbg !7295

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %49 = load i32, i32* %retval.i12.i, align 4, !dbg !7296
  %idxprom.i = zext i32 %49 to i64, !dbg !7297
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !7297
  %50 = load i32, i32* %index.i, align 4, !dbg !7298
  %idxprom6.i = zext i32 %50 to i64, !dbg !7297
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !7297
  %51 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !7297
  %52 = load i32, i32* %flags.addr.i, align 4, !dbg !7299
  %53 = load i64, i64* %size.addr.i, align 8, !dbg !7300
  store %struct.kmem_cache* %51, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %52, i32* %flags.addr.i17.i, align 4
  store i64 %53, i64* %size.addr.i18.i, align 8
  %54 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7301
  %55 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7302
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %54, i32 %55) #12, !dbg !7303
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !7303
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !7303
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !7303
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !7303
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !7121
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7304
  %57 = load i8*, i8** %ret.i.i, align 8, !dbg !7305
  %58 = load i64, i64* %size.addr.i18.i, align 8, !dbg !7306
  %59 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7307
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %56, i8* %57, i64 %58, i32 %59) #12, !dbg !7308
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !7309
  %60 = load i8*, i8** %ret.i.i, align 8, !dbg !7310
  store i8* %60, i8** %retval.i, align 8, !dbg !7311
  br label %kmalloc.exit, !dbg !7311

if.end9.i:                                        ; preds = %entry
  %61 = load i64, i64* %size.addr.i, align 8, !dbg !7312
  %62 = load i32, i32* %flags.addr.i, align 4, !dbg !7313
  %call10.i = call noalias i8* @__kmalloc(i64 %61, i32 %62) #12, !dbg !7314
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !7314
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !7314
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !7314
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !7314
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !7315
  br label %kmalloc.exit, !dbg !7315

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %63 = load i8*, i8** %retval.i, align 8, !dbg !7316
  %64 = bitcast i8* %63 to %struct.irq_fwspec*, !dbg !7317
  store %struct.irq_fwspec* %64, %struct.irq_fwspec** %fwspec, align 8, !dbg !7318
  %65 = load %struct.irq_fwspec*, %struct.irq_fwspec** %fwspec, align 8, !dbg !7319
  %tobool = icmp ne %struct.irq_fwspec* %65, null, !dbg !7319
  br i1 %tobool, label %if.end, label %if.then, !dbg !7321

if.then:                                          ; preds = %kmalloc.exit
  store i8* null, i8** %retval, align 8, !dbg !7322
  br label %return, !dbg !7322

if.end:                                           ; preds = %kmalloc.exit
  %66 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7323
  %irq = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %66, i32 0, i32 35, !dbg !7324
  %parent_domain = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq, i32 0, i32 4, !dbg !7325
  %67 = load %struct.irq_domain*, %struct.irq_domain** %parent_domain, align 8, !dbg !7325
  %fwnode = getelementptr inbounds %struct.irq_domain, %struct.irq_domain* %67, i32 0, i32 6, !dbg !7326
  %68 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !7326
  %69 = load %struct.irq_fwspec*, %struct.irq_fwspec** %fwspec, align 8, !dbg !7327
  %fwnode1 = getelementptr inbounds %struct.irq_fwspec, %struct.irq_fwspec* %69, i32 0, i32 0, !dbg !7328
  store %struct.fwnode_handle* %68, %struct.fwnode_handle** %fwnode1, align 8, !dbg !7329
  %70 = load %struct.irq_fwspec*, %struct.irq_fwspec** %fwspec, align 8, !dbg !7330
  %param_count = getelementptr inbounds %struct.irq_fwspec, %struct.irq_fwspec* %70, i32 0, i32 1, !dbg !7331
  store i32 2, i32* %param_count, align 8, !dbg !7332
  %71 = load i32, i32* %parent_hwirq.addr, align 4, !dbg !7333
  %72 = load %struct.irq_fwspec*, %struct.irq_fwspec** %fwspec, align 8, !dbg !7334
  %param = getelementptr inbounds %struct.irq_fwspec, %struct.irq_fwspec* %72, i32 0, i32 2, !dbg !7335
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %param, i64 0, i64 0, !dbg !7334
  store i32 %71, i32* %arrayidx, align 4, !dbg !7336
  %73 = load i32, i32* %parent_type.addr, align 4, !dbg !7337
  %74 = load %struct.irq_fwspec*, %struct.irq_fwspec** %fwspec, align 8, !dbg !7338
  %param2 = getelementptr inbounds %struct.irq_fwspec, %struct.irq_fwspec* %74, i32 0, i32 2, !dbg !7339
  %arrayidx3 = getelementptr [16 x i32], [16 x i32]* %param2, i64 0, i64 1, !dbg !7338
  store i32 %73, i32* %arrayidx3, align 4, !dbg !7340
  %75 = load %struct.irq_fwspec*, %struct.irq_fwspec** %fwspec, align 8, !dbg !7341
  %76 = bitcast %struct.irq_fwspec* %75 to i8*, !dbg !7341
  store i8* %76, i8** %retval, align 8, !dbg !7342
  br label %return, !dbg !7342

return:                                           ; preds = %if.end, %if.then
  %77 = load i8*, i8** %retval, align 8, !dbg !7343
  ret i8* %77, !dbg !7343
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @gpiochip_populate_parent_fwspec_fourcell(%struct.gpio_chip* %gc, i32 %parent_hwirq, i32 %parent_type) #0 !dbg !7344 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5563, metadata !DIExpression()), !dbg !7345
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5573, metadata !DIExpression()), !dbg !7348
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5575, metadata !DIExpression()), !dbg !7349
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5577, metadata !DIExpression()), !dbg !7350
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5579, metadata !DIExpression()), !dbg !7351
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5585, metadata !DIExpression()), !dbg !7353
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5591, metadata !DIExpression()), !dbg !7355
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5600, metadata !DIExpression()), !dbg !7358
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5602, metadata !DIExpression()), !dbg !7359
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5604, metadata !DIExpression()), !dbg !7360
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5606, metadata !DIExpression()), !dbg !7361
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5608, metadata !DIExpression()), !dbg !7362
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5610, metadata !DIExpression()), !dbg !7363
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5612, metadata !DIExpression()), !dbg !7364
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5614, metadata !DIExpression()), !dbg !7365
  %retval = alloca i8*, align 8
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %parent_hwirq.addr = alloca i32, align 4
  %parent_type.addr = alloca i32, align 4
  %fwspec = alloca %struct.irq_fwspec*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !7366, metadata !DIExpression()), !dbg !7367
  store i32 %parent_hwirq, i32* %parent_hwirq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %parent_hwirq.addr, metadata !7368, metadata !DIExpression()), !dbg !7369
  store i32 %parent_type, i32* %parent_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %parent_type.addr, metadata !7370, metadata !DIExpression()), !dbg !7371
  call void @llvm.dbg.declare(metadata %struct.irq_fwspec** %fwspec, metadata !7372, metadata !DIExpression()), !dbg !7373
  store i64 80, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %0 = load i64, i64* %size.addr.i, align 8, !dbg !7374
  %1 = call i1 @llvm.is.constant.i64(i64 %0) #7, !dbg !7375
  br i1 %1, label %if.then.i, label %if.end9.i, !dbg !7376

if.then.i:                                        ; preds = %entry
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !7377
  %cmp.i = icmp ugt i64 %2, 8192, !dbg !7378
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7379

if.then1.i:                                       ; preds = %if.then.i
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !7380
  %4 = load i32, i32* %flags.addr.i, align 4, !dbg !7381
  store i64 %3, i64* %size.addr.i.i, align 8
  store i32 %4, i32* %flags.addr.i.i, align 4
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !7382
  %call.i.i = call i32 @get_order(i64 %5) #14, !dbg !7383
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !7362
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !7384
  %7 = load i32, i32* %flags.addr.i.i, align 4, !dbg !7385
  %8 = load i32, i32* %order.i.i, align 4, !dbg !7386
  store i64 %6, i64* %size.addr.i.i.i, align 8
  store i32 %7, i32* %flags.addr.i.i.i, align 4
  store i32 %8, i32* %order.addr.i.i.i, align 4
  %9 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !7387
  %10 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !7388
  %11 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !7389
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %9, i32 %10, i32 %11) #12, !dbg !7390
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !7390
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !7390
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !7390
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !7390
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !7391
  br label %kmalloc.exit, !dbg !7391

if.end.i:                                         ; preds = %if.then.i
  %12 = load i64, i64* %size.addr.i, align 8, !dbg !7392
  store i64 %12, i64* %size.addr.i11.i, align 8
  %13 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7393
  %tobool.i.i = icmp ne i64 %13, 0, !dbg !7393
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !7394

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !7395
  br label %kmalloc_index.exit.i, !dbg !7395

if.end.i.i:                                       ; preds = %if.end.i
  %14 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7396
  %cmp.i.i = icmp ule i64 %14, 8, !dbg !7397
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !7398

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7399
  br label %kmalloc_index.exit.i, !dbg !7399

if.end2.i.i:                                      ; preds = %if.end.i.i
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7400
  %cmp3.i.i = icmp ugt i64 %15, 64, !dbg !7401
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !7402

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7403
  %cmp4.i.i = icmp ule i64 %16, 96, !dbg !7404
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !7405

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !7406
  br label %kmalloc_index.exit.i, !dbg !7406

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7407
  %cmp7.i.i = icmp ugt i64 %17, 128, !dbg !7408
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7409

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7410
  %cmp9.i.i = icmp ule i64 %18, 192, !dbg !7411
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7412

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !7413
  br label %kmalloc_index.exit.i, !dbg !7413

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7414
  %cmp12.i.i = icmp ule i64 %19, 8, !dbg !7415
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7416

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7417
  br label %kmalloc_index.exit.i, !dbg !7417

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7418
  %cmp15.i.i = icmp ule i64 %20, 16, !dbg !7419
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !7420

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !7421
  br label %kmalloc_index.exit.i, !dbg !7421

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7422
  %cmp18.i.i = icmp ule i64 %21, 32, !dbg !7423
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !7424

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !7425
  br label %kmalloc_index.exit.i, !dbg !7425

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7426
  %cmp21.i.i = icmp ule i64 %22, 64, !dbg !7427
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !7428

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !7429
  br label %kmalloc_index.exit.i, !dbg !7429

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7430
  %cmp24.i.i = icmp ule i64 %23, 128, !dbg !7431
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !7432

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !7433
  br label %kmalloc_index.exit.i, !dbg !7433

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7434
  %cmp27.i.i = icmp ule i64 %24, 256, !dbg !7435
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !7436

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !7437
  br label %kmalloc_index.exit.i, !dbg !7437

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7438
  %cmp30.i.i = icmp ule i64 %25, 512, !dbg !7439
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !7440

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !7441
  br label %kmalloc_index.exit.i, !dbg !7441

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7442
  %cmp33.i.i = icmp ule i64 %26, 1024, !dbg !7443
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !7444

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !7445
  br label %kmalloc_index.exit.i, !dbg !7445

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7446
  %cmp36.i.i = icmp ule i64 %27, 2048, !dbg !7447
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !7448

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !7449
  br label %kmalloc_index.exit.i, !dbg !7449

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7450
  %cmp39.i.i = icmp ule i64 %28, 4096, !dbg !7451
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !7452

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !7453
  br label %kmalloc_index.exit.i, !dbg !7453

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7454
  %cmp42.i.i = icmp ule i64 %29, 8192, !dbg !7455
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !7456

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !7457
  br label %kmalloc_index.exit.i, !dbg !7457

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7458
  %cmp45.i.i = icmp ule i64 %30, 16384, !dbg !7459
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !7460

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !7461
  br label %kmalloc_index.exit.i, !dbg !7461

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7462
  %cmp48.i.i = icmp ule i64 %31, 32768, !dbg !7463
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !7464

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !7465
  br label %kmalloc_index.exit.i, !dbg !7465

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7466
  %cmp51.i.i = icmp ule i64 %32, 65536, !dbg !7467
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !7468

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !7469
  br label %kmalloc_index.exit.i, !dbg !7469

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7470
  %cmp54.i.i = icmp ule i64 %33, 131072, !dbg !7471
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !7472

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !7473
  br label %kmalloc_index.exit.i, !dbg !7473

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7474
  %cmp57.i.i = icmp ule i64 %34, 262144, !dbg !7475
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !7476

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !7477
  br label %kmalloc_index.exit.i, !dbg !7477

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7478
  %cmp60.i.i = icmp ule i64 %35, 524288, !dbg !7479
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !7480

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !7481
  br label %kmalloc_index.exit.i, !dbg !7481

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7482
  %cmp63.i.i = icmp ule i64 %36, 1048576, !dbg !7483
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !7484

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !7485
  br label %kmalloc_index.exit.i, !dbg !7485

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7486
  %cmp66.i.i = icmp ule i64 %37, 2097152, !dbg !7487
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !7488

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !7489
  br label %kmalloc_index.exit.i, !dbg !7489

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7490
  %cmp69.i.i = icmp ule i64 %38, 4194304, !dbg !7491
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !7492

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !7493
  br label %kmalloc_index.exit.i, !dbg !7493

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7494
  %cmp72.i.i = icmp ule i64 %39, 8388608, !dbg !7495
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !7496

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !7497
  br label %kmalloc_index.exit.i, !dbg !7497

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7498
  %cmp75.i.i = icmp ule i64 %40, 16777216, !dbg !7499
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !7500

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !7501
  br label %kmalloc_index.exit.i, !dbg !7501

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7502
  %cmp78.i.i = icmp ule i64 %41, 33554432, !dbg !7503
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !7504

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !7505
  br label %kmalloc_index.exit.i, !dbg !7505

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7506
  %cmp81.i.i = icmp ule i64 %42, 67108864, !dbg !7507
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !7508

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !7509
  br label %kmalloc_index.exit.i, !dbg !7509

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.46, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !7510, !srcloc !5790
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 107) #7, !dbg !7511, !srcloc !5794
  unreachable, !dbg !7512

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %43 = load i32, i32* %retval.i.i, align 4, !dbg !7513
  store i32 %43, i32* %index.i, align 4, !dbg !7514
  %44 = load i32, i32* %index.i, align 4, !dbg !7515
  %tobool.i = icmp ne i32 %44, 0, !dbg !7515
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !7516

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !7517
  br label %kmalloc.exit, !dbg !7517

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %45 = load i32, i32* %flags.addr.i, align 4, !dbg !7518
  store i32 %45, i32* %flags.addr.i13.i, align 4
  %46 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7519
  %and.i.i = and i32 %46, 17, !dbg !7519
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !7519
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !7519
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !7519
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7519
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !7520

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !7521
  br label %kmalloc_type.exit.i, !dbg !7521

if.end.i16.i:                                     ; preds = %if.end4.i
  %47 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7522
  %and2.i.i = and i32 %47, 1, !dbg !7523
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !7522
  %48 = zext i1 %tobool3.i.i to i64, !dbg !7522
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !7522
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !7524
  br label %kmalloc_type.exit.i, !dbg !7524

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %49 = load i32, i32* %retval.i12.i, align 4, !dbg !7525
  %idxprom.i = zext i32 %49 to i64, !dbg !7526
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !7526
  %50 = load i32, i32* %index.i, align 4, !dbg !7527
  %idxprom6.i = zext i32 %50 to i64, !dbg !7526
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !7526
  %51 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !7526
  %52 = load i32, i32* %flags.addr.i, align 4, !dbg !7528
  %53 = load i64, i64* %size.addr.i, align 8, !dbg !7529
  store %struct.kmem_cache* %51, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %52, i32* %flags.addr.i17.i, align 4
  store i64 %53, i64* %size.addr.i18.i, align 8
  %54 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7530
  %55 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7531
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %54, i32 %55) #12, !dbg !7532
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !7532
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !7532
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !7532
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !7532
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !7350
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7533
  %57 = load i8*, i8** %ret.i.i, align 8, !dbg !7534
  %58 = load i64, i64* %size.addr.i18.i, align 8, !dbg !7535
  %59 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7536
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %56, i8* %57, i64 %58, i32 %59) #12, !dbg !7537
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !7538
  %60 = load i8*, i8** %ret.i.i, align 8, !dbg !7539
  store i8* %60, i8** %retval.i, align 8, !dbg !7540
  br label %kmalloc.exit, !dbg !7540

if.end9.i:                                        ; preds = %entry
  %61 = load i64, i64* %size.addr.i, align 8, !dbg !7541
  %62 = load i32, i32* %flags.addr.i, align 4, !dbg !7542
  %call10.i = call noalias i8* @__kmalloc(i64 %61, i32 %62) #12, !dbg !7543
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !7543
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !7543
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !7543
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !7543
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !7544
  br label %kmalloc.exit, !dbg !7544

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %63 = load i8*, i8** %retval.i, align 8, !dbg !7545
  %64 = bitcast i8* %63 to %struct.irq_fwspec*, !dbg !7546
  store %struct.irq_fwspec* %64, %struct.irq_fwspec** %fwspec, align 8, !dbg !7547
  %65 = load %struct.irq_fwspec*, %struct.irq_fwspec** %fwspec, align 8, !dbg !7548
  %tobool = icmp ne %struct.irq_fwspec* %65, null, !dbg !7548
  br i1 %tobool, label %if.end, label %if.then, !dbg !7550

if.then:                                          ; preds = %kmalloc.exit
  store i8* null, i8** %retval, align 8, !dbg !7551
  br label %return, !dbg !7551

if.end:                                           ; preds = %kmalloc.exit
  %66 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7552
  %irq = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %66, i32 0, i32 35, !dbg !7553
  %parent_domain = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq, i32 0, i32 4, !dbg !7554
  %67 = load %struct.irq_domain*, %struct.irq_domain** %parent_domain, align 8, !dbg !7554
  %fwnode = getelementptr inbounds %struct.irq_domain, %struct.irq_domain* %67, i32 0, i32 6, !dbg !7555
  %68 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !7555
  %69 = load %struct.irq_fwspec*, %struct.irq_fwspec** %fwspec, align 8, !dbg !7556
  %fwnode1 = getelementptr inbounds %struct.irq_fwspec, %struct.irq_fwspec* %69, i32 0, i32 0, !dbg !7557
  store %struct.fwnode_handle* %68, %struct.fwnode_handle** %fwnode1, align 8, !dbg !7558
  %70 = load %struct.irq_fwspec*, %struct.irq_fwspec** %fwspec, align 8, !dbg !7559
  %param_count = getelementptr inbounds %struct.irq_fwspec, %struct.irq_fwspec* %70, i32 0, i32 1, !dbg !7560
  store i32 4, i32* %param_count, align 8, !dbg !7561
  %71 = load %struct.irq_fwspec*, %struct.irq_fwspec** %fwspec, align 8, !dbg !7562
  %param = getelementptr inbounds %struct.irq_fwspec, %struct.irq_fwspec* %71, i32 0, i32 2, !dbg !7563
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %param, i64 0, i64 0, !dbg !7562
  store i32 0, i32* %arrayidx, align 4, !dbg !7564
  %72 = load i32, i32* %parent_hwirq.addr, align 4, !dbg !7565
  %73 = load %struct.irq_fwspec*, %struct.irq_fwspec** %fwspec, align 8, !dbg !7566
  %param2 = getelementptr inbounds %struct.irq_fwspec, %struct.irq_fwspec* %73, i32 0, i32 2, !dbg !7567
  %arrayidx3 = getelementptr [16 x i32], [16 x i32]* %param2, i64 0, i64 1, !dbg !7566
  store i32 %72, i32* %arrayidx3, align 4, !dbg !7568
  %74 = load %struct.irq_fwspec*, %struct.irq_fwspec** %fwspec, align 8, !dbg !7569
  %param4 = getelementptr inbounds %struct.irq_fwspec, %struct.irq_fwspec* %74, i32 0, i32 2, !dbg !7570
  %arrayidx5 = getelementptr [16 x i32], [16 x i32]* %param4, i64 0, i64 2, !dbg !7569
  store i32 0, i32* %arrayidx5, align 4, !dbg !7571
  %75 = load i32, i32* %parent_type.addr, align 4, !dbg !7572
  %76 = load %struct.irq_fwspec*, %struct.irq_fwspec** %fwspec, align 8, !dbg !7573
  %param6 = getelementptr inbounds %struct.irq_fwspec, %struct.irq_fwspec* %76, i32 0, i32 2, !dbg !7574
  %arrayidx7 = getelementptr [16 x i32], [16 x i32]* %param6, i64 0, i64 3, !dbg !7573
  store i32 %75, i32* %arrayidx7, align 4, !dbg !7575
  %77 = load %struct.irq_fwspec*, %struct.irq_fwspec** %fwspec, align 8, !dbg !7576
  %78 = bitcast %struct.irq_fwspec* %77 to i8*, !dbg !7576
  store i8* %78, i8** %retval, align 8, !dbg !7577
  br label %return, !dbg !7577

return:                                           ; preds = %if.end, %if.then
  %79 = load i8*, i8** %retval, align 8, !dbg !7578
  ret i8* %79, !dbg !7578
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiochip_irq_map(%struct.irq_domain* %d, i32 %irq, i64 %hwirq) #0 !dbg !7579 {
entry:
  %retval = alloca i32, align 4
  %d.addr = alloca %struct.irq_domain*, align 8
  %irq.addr = alloca i32, align 4
  %hwirq.addr = alloca i64, align 8
  %gc = alloca %struct.gpio_chip*, align 8
  %ret = alloca i32, align 4
  store %struct.irq_domain* %d, %struct.irq_domain** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %d.addr, metadata !7580, metadata !DIExpression()), !dbg !7581
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !7582, metadata !DIExpression()), !dbg !7583
  store i64 %hwirq, i64* %hwirq.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %hwirq.addr, metadata !7584, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !7586, metadata !DIExpression()), !dbg !7587
  %0 = load %struct.irq_domain*, %struct.irq_domain** %d.addr, align 8, !dbg !7588
  %host_data = getelementptr inbounds %struct.irq_domain, %struct.irq_domain* %0, i32 0, i32 3, !dbg !7589
  %1 = load i8*, i8** %host_data, align 8, !dbg !7589
  %2 = bitcast i8* %1 to %struct.gpio_chip*, !dbg !7588
  store %struct.gpio_chip* %2, %struct.gpio_chip** %gc, align 8, !dbg !7587
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7590, metadata !DIExpression()), !dbg !7591
  store i32 0, i32* %ret, align 4, !dbg !7591
  %3 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !7592
  %4 = load i64, i64* %hwirq.addr, align 8, !dbg !7594
  %conv = trunc i64 %4 to i32, !dbg !7594
  %call = call zeroext i1 @gpiochip_irqchip_irq_valid(%struct.gpio_chip* %3, i32 %conv) #11, !dbg !7595
  br i1 %call, label %if.end, label %if.then, !dbg !7596

if.then:                                          ; preds = %entry
  store i32 -6, i32* %retval, align 4, !dbg !7597
  br label %return, !dbg !7597

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %irq.addr, align 4, !dbg !7598
  %6 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !7599
  %7 = bitcast %struct.gpio_chip* %6 to i8*, !dbg !7599
  %call1 = call i32 @irq_set_chip_data(i32 %5, i8* %7) #11, !dbg !7600
  %8 = load i32, i32* %irq.addr, align 4, !dbg !7601
  %9 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !7602
  %irq2 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %9, i32 0, i32 35, !dbg !7603
  %lock_key = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq2, i32 0, i32 11, !dbg !7604
  %10 = load %struct.lock_class_key*, %struct.lock_class_key** %lock_key, align 8, !dbg !7604
  %11 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !7605
  %irq3 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %11, i32 0, i32 35, !dbg !7606
  %request_key = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq3, i32 0, i32 12, !dbg !7607
  %12 = load %struct.lock_class_key*, %struct.lock_class_key** %request_key, align 8, !dbg !7607
  call void @irq_set_lockdep_class(i32 %8, %struct.lock_class_key* %10, %struct.lock_class_key* %12) #11, !dbg !7608
  %13 = load i32, i32* %irq.addr, align 4, !dbg !7609
  %14 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !7610
  %irq4 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %14, i32 0, i32 35, !dbg !7611
  %chip = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq4, i32 0, i32 0, !dbg !7612
  %15 = load %struct.irq_chip*, %struct.irq_chip** %chip, align 8, !dbg !7612
  %16 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !7613
  %irq5 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %16, i32 0, i32 35, !dbg !7614
  %handler = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq5, i32 0, i32 9, !dbg !7615
  %17 = load void (%struct.irq_desc*)*, void (%struct.irq_desc*)** %handler, align 8, !dbg !7615
  call void @irq_set_chip_and_handler(i32 %13, %struct.irq_chip* %15, void (%struct.irq_desc*)* %17) #11, !dbg !7616
  %18 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !7617
  %irq6 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %18, i32 0, i32 35, !dbg !7619
  %threaded = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq6, i32 0, i32 18, !dbg !7620
  %19 = load i8, i8* %threaded, align 8, !dbg !7620
  %tobool = trunc i8 %19 to i1, !dbg !7620
  br i1 %tobool, label %if.then7, label %if.end8, !dbg !7621

if.then7:                                         ; preds = %if.end
  %20 = load i32, i32* %irq.addr, align 4, !dbg !7622
  call void @irq_set_nested_thread(i32 %20, i1 zeroext true) #11, !dbg !7623
  br label %if.end8, !dbg !7623

if.end8:                                          ; preds = %if.then7, %if.end
  %21 = load i32, i32* %irq.addr, align 4, !dbg !7624
  call void @irq_set_noprobe(i32 %21) #11, !dbg !7625
  %22 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !7626
  %irq9 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %22, i32 0, i32 35, !dbg !7628
  %num_parents = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq9, i32 0, i32 15, !dbg !7629
  %23 = load i32, i32* %num_parents, align 8, !dbg !7629
  %cmp = icmp eq i32 %23, 1, !dbg !7630
  br i1 %cmp, label %if.then11, label %if.else, !dbg !7631

if.then11:                                        ; preds = %if.end8
  %24 = load i32, i32* %irq.addr, align 4, !dbg !7632
  %25 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !7633
  %irq12 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %25, i32 0, i32 35, !dbg !7634
  %parents = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq12, i32 0, i32 16, !dbg !7635
  %26 = load i32*, i32** %parents, align 8, !dbg !7635
  %arrayidx = getelementptr i32, i32* %26, i64 0, !dbg !7633
  %27 = load i32, i32* %arrayidx, align 4, !dbg !7633
  %call13 = call i32 @irq_set_parent(i32 %24, i32 %27) #11, !dbg !7636
  store i32 %call13, i32* %ret, align 4, !dbg !7637
  br label %if.end22, !dbg !7638

if.else:                                          ; preds = %if.end8
  %28 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !7639
  %irq14 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %28, i32 0, i32 35, !dbg !7641
  %map = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq14, i32 0, i32 17, !dbg !7642
  %29 = load i32*, i32** %map, align 8, !dbg !7642
  %tobool15 = icmp ne i32* %29, null, !dbg !7639
  br i1 %tobool15, label %if.then16, label %if.end21, !dbg !7643

if.then16:                                        ; preds = %if.else
  %30 = load i32, i32* %irq.addr, align 4, !dbg !7644
  %31 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !7645
  %irq17 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %31, i32 0, i32 35, !dbg !7646
  %map18 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq17, i32 0, i32 17, !dbg !7647
  %32 = load i32*, i32** %map18, align 8, !dbg !7647
  %33 = load i64, i64* %hwirq.addr, align 8, !dbg !7648
  %arrayidx19 = getelementptr i32, i32* %32, i64 %33, !dbg !7645
  %34 = load i32, i32* %arrayidx19, align 4, !dbg !7645
  %call20 = call i32 @irq_set_parent(i32 %30, i32 %34) #11, !dbg !7649
  store i32 %call20, i32* %ret, align 4, !dbg !7650
  br label %if.end21, !dbg !7651

if.end21:                                         ; preds = %if.then16, %if.else
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then11
  %35 = load i32, i32* %ret, align 4, !dbg !7652
  %cmp23 = icmp slt i32 %35, 0, !dbg !7654
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !7655

if.then25:                                        ; preds = %if.end22
  %36 = load i32, i32* %ret, align 4, !dbg !7656
  store i32 %36, i32* %retval, align 4, !dbg !7657
  br label %return, !dbg !7657

if.end26:                                         ; preds = %if.end22
  %37 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !7658
  %irq27 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %37, i32 0, i32 35, !dbg !7660
  %default_type = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq27, i32 0, i32 10, !dbg !7661
  %38 = load i32, i32* %default_type, align 8, !dbg !7661
  %cmp28 = icmp ne i32 %38, 0, !dbg !7662
  br i1 %cmp28, label %if.then30, label %if.end34, !dbg !7663

if.then30:                                        ; preds = %if.end26
  %39 = load i32, i32* %irq.addr, align 4, !dbg !7664
  %40 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !7665
  %irq31 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %40, i32 0, i32 35, !dbg !7666
  %default_type32 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq31, i32 0, i32 10, !dbg !7667
  %41 = load i32, i32* %default_type32, align 8, !dbg !7667
  %call33 = call i32 @irq_set_irq_type(i32 %39, i32 %41) #11, !dbg !7668
  br label %if.end34, !dbg !7668

if.end34:                                         ; preds = %if.then30, %if.end26
  store i32 0, i32* %retval, align 4, !dbg !7669
  br label %return, !dbg !7669

return:                                           ; preds = %if.end34, %if.then25, %if.then
  %42 = load i32, i32* %retval, align 4, !dbg !7670
  ret i32 %42, !dbg !7670
}

; Function Attrs: noredzone
declare dso_local i32 @irq_set_chip_data(i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @irq_set_lockdep_class(i32 %irq, %struct.lock_class_key* %lock_class, %struct.lock_class_key* %request_class) #0 !dbg !7671 {
entry:
  %irq.addr = alloca i32, align 4
  %lock_class.addr = alloca %struct.lock_class_key*, align 8
  %request_class.addr = alloca %struct.lock_class_key*, align 8
  %desc = alloca %struct.irq_desc*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !7674, metadata !DIExpression()), !dbg !7675
  store %struct.lock_class_key* %lock_class, %struct.lock_class_key** %lock_class.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lock_class_key** %lock_class.addr, metadata !7676, metadata !DIExpression()), !dbg !7677
  store %struct.lock_class_key* %request_class, %struct.lock_class_key** %request_class.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lock_class_key** %request_class.addr, metadata !7678, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.declare(metadata %struct.irq_desc** %desc, metadata !7680, metadata !DIExpression()), !dbg !7681
  %0 = load i32, i32* %irq.addr, align 4, !dbg !7682
  %call = call %struct.irq_desc* @irq_to_desc(i32 %0) #11, !dbg !7683
  store %struct.irq_desc* %call, %struct.irq_desc** %desc, align 8, !dbg !7681
  %1 = load %struct.irq_desc*, %struct.irq_desc** %desc, align 8, !dbg !7684
  %tobool = icmp ne %struct.irq_desc* %1, null, !dbg !7684
  br i1 %tobool, label %if.then, label %if.end, !dbg !7686

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7687

do.body:                                          ; preds = %if.then
  %2 = load %struct.lock_class_key*, %struct.lock_class_key** %lock_class.addr, align 8, !dbg !7689
  br label %do.end, !dbg !7689

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !7691

do.body1:                                         ; preds = %do.end
  %3 = load %struct.lock_class_key*, %struct.lock_class_key** %request_class.addr, align 8, !dbg !7692
  br label %do.end2, !dbg !7692

do.end2:                                          ; preds = %do.body1
  br label %if.end, !dbg !7694

if.end:                                           ; preds = %do.end2, %entry
  ret void, !dbg !7695
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @irq_set_chip_and_handler(i32 %irq, %struct.irq_chip* %chip, void (%struct.irq_desc*)* %handle) #0 !dbg !7696 {
entry:
  %irq.addr = alloca i32, align 4
  %chip.addr = alloca %struct.irq_chip*, align 8
  %handle.addr = alloca void (%struct.irq_desc*)*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !7699, metadata !DIExpression()), !dbg !7700
  store %struct.irq_chip* %chip, %struct.irq_chip** %chip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_chip** %chip.addr, metadata !7701, metadata !DIExpression()), !dbg !7702
  store void (%struct.irq_desc*)* %handle, void (%struct.irq_desc*)** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.irq_desc*)** %handle.addr, metadata !7703, metadata !DIExpression()), !dbg !7704
  %0 = load i32, i32* %irq.addr, align 4, !dbg !7705
  %1 = load %struct.irq_chip*, %struct.irq_chip** %chip.addr, align 8, !dbg !7706
  %2 = load void (%struct.irq_desc*)*, void (%struct.irq_desc*)** %handle.addr, align 8, !dbg !7707
  call void @irq_set_chip_and_handler_name(i32 %0, %struct.irq_chip* %1, void (%struct.irq_desc*)* %2, i8* null) #11, !dbg !7708
  ret void, !dbg !7709
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @irq_set_nested_thread(i32 %irq, i1 zeroext %nest) #0 !dbg !7710 {
entry:
  %irq.addr = alloca i32, align 4
  %nest.addr = alloca i8, align 1
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !7713, metadata !DIExpression()), !dbg !7714
  %frombool = zext i1 %nest to i8
  store i8 %frombool, i8* %nest.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %nest.addr, metadata !7715, metadata !DIExpression()), !dbg !7716
  %0 = load i8, i8* %nest.addr, align 1, !dbg !7717
  %tobool = trunc i8 %0 to i1, !dbg !7717
  br i1 %tobool, label %if.then, label %if.else, !dbg !7719

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %irq.addr, align 4, !dbg !7720
  call void @irq_set_status_flags(i32 %1, i64 32768) #11, !dbg !7721
  br label %if.end, !dbg !7721

if.else:                                          ; preds = %entry
  %2 = load i32, i32* %irq.addr, align 4, !dbg !7722
  call void @irq_clear_status_flags(i32 %2, i64 32768) #11, !dbg !7723
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7724
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @irq_set_noprobe(i32 %irq) #0 !dbg !7725 {
entry:
  %irq.addr = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !7728, metadata !DIExpression()), !dbg !7729
  %0 = load i32, i32* %irq.addr, align 4, !dbg !7730
  call void @irq_modify_status(i32 %0, i64 0, i64 1024) #11, !dbg !7731
  ret void, !dbg !7732
}

; Function Attrs: noredzone
declare dso_local i32 @irq_set_parent(i32, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @irq_set_irq_type(i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @gpiochip_irq_unmap(%struct.irq_domain* %d, i32 %irq) #0 !dbg !7733 {
entry:
  %d.addr = alloca %struct.irq_domain*, align 8
  %irq.addr = alloca i32, align 4
  %gc = alloca %struct.gpio_chip*, align 8
  store %struct.irq_domain* %d, %struct.irq_domain** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %d.addr, metadata !7734, metadata !DIExpression()), !dbg !7735
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !7736, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !7738, metadata !DIExpression()), !dbg !7739
  %0 = load %struct.irq_domain*, %struct.irq_domain** %d.addr, align 8, !dbg !7740
  %host_data = getelementptr inbounds %struct.irq_domain, %struct.irq_domain* %0, i32 0, i32 3, !dbg !7741
  %1 = load i8*, i8** %host_data, align 8, !dbg !7741
  %2 = bitcast i8* %1 to %struct.gpio_chip*, !dbg !7740
  store %struct.gpio_chip* %2, %struct.gpio_chip** %gc, align 8, !dbg !7739
  %3 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !7742
  %irq1 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %3, i32 0, i32 35, !dbg !7744
  %threaded = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq1, i32 0, i32 18, !dbg !7745
  %4 = load i8, i8* %threaded, align 8, !dbg !7745
  %tobool = trunc i8 %4 to i1, !dbg !7745
  br i1 %tobool, label %if.then, label %if.end, !dbg !7746

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %irq.addr, align 4, !dbg !7747
  call void @irq_set_nested_thread(i32 %5, i1 zeroext false) #11, !dbg !7748
  br label %if.end, !dbg !7748

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %irq.addr, align 4, !dbg !7749
  call void @irq_set_chip_and_handler(i32 %6, %struct.irq_chip* null, void (%struct.irq_desc*)* null) #11, !dbg !7750
  %7 = load i32, i32* %irq.addr, align 4, !dbg !7751
  %call = call i32 @irq_set_chip_data(i32 %7, i8* null) #11, !dbg !7752
  ret void, !dbg !7753
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiochip_irq_domain_activate(%struct.irq_domain* %domain, %struct.irq_data* %data, i1 zeroext %reserve) #0 !dbg !7754 {
entry:
  %domain.addr = alloca %struct.irq_domain*, align 8
  %data.addr = alloca %struct.irq_data*, align 8
  %reserve.addr = alloca i8, align 1
  %gc = alloca %struct.gpio_chip*, align 8
  store %struct.irq_domain* %domain, %struct.irq_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %domain.addr, metadata !7755, metadata !DIExpression()), !dbg !7756
  store %struct.irq_data* %data, %struct.irq_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %data.addr, metadata !7757, metadata !DIExpression()), !dbg !7758
  %frombool = zext i1 %reserve to i8
  store i8 %frombool, i8* %reserve.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reserve.addr, metadata !7759, metadata !DIExpression()), !dbg !7760
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !7761, metadata !DIExpression()), !dbg !7762
  %0 = load %struct.irq_domain*, %struct.irq_domain** %domain.addr, align 8, !dbg !7763
  %host_data = getelementptr inbounds %struct.irq_domain, %struct.irq_domain* %0, i32 0, i32 3, !dbg !7764
  %1 = load i8*, i8** %host_data, align 8, !dbg !7764
  %2 = bitcast i8* %1 to %struct.gpio_chip*, !dbg !7763
  store %struct.gpio_chip* %2, %struct.gpio_chip** %gc, align 8, !dbg !7762
  %3 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !7765
  %4 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !7766
  %hwirq = getelementptr inbounds %struct.irq_data, %struct.irq_data* %4, i32 0, i32 2, !dbg !7767
  %5 = load i64, i64* %hwirq, align 8, !dbg !7767
  %conv = trunc i64 %5 to i32, !dbg !7766
  %call = call i32 @gpiochip_lock_as_irq(%struct.gpio_chip* %3, i32 %conv) #11, !dbg !7768
  ret i32 %call, !dbg !7769
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiochip_lock_as_irq(%struct.gpio_chip* %gc, i32 %offset) #0 !dbg !7770 {
entry:
  %retval = alloca i32, align 4
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %offset.addr = alloca i32, align 4
  %desc = alloca %struct.gpio_desc*, align 8
  %dir = alloca i32, align 4
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !7771, metadata !DIExpression()), !dbg !7772
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !7773, metadata !DIExpression()), !dbg !7774
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc, metadata !7775, metadata !DIExpression()), !dbg !7776
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7777
  %1 = load i32, i32* %offset.addr, align 4, !dbg !7778
  %call = call %struct.gpio_desc* @gpiochip_get_desc(%struct.gpio_chip* %0, i32 %1) #11, !dbg !7779
  store %struct.gpio_desc* %call, %struct.gpio_desc** %desc, align 8, !dbg !7780
  %2 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7781
  %3 = bitcast %struct.gpio_desc* %2 to i8*, !dbg !7781
  %call1 = call zeroext i1 @IS_ERR(i8* %3) #11, !dbg !7783
  br i1 %call1, label %if.then, label %if.end, !dbg !7784

if.then:                                          ; preds = %entry
  %4 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7785
  %5 = bitcast %struct.gpio_desc* %4 to i8*, !dbg !7785
  %call2 = call i64 @PTR_ERR(i8* %5) #11, !dbg !7786
  %conv = trunc i64 %call2 to i32, !dbg !7786
  store i32 %conv, i32* %retval, align 4, !dbg !7787
  br label %return, !dbg !7787

if.end:                                           ; preds = %entry
  %6 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7788
  %can_sleep = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %6, i32 0, i32 21, !dbg !7790
  %7 = load i8, i8* %can_sleep, align 8, !dbg !7790
  %tobool = trunc i8 %7 to i1, !dbg !7790
  br i1 %tobool, label %if.end9, label %land.lhs.true, !dbg !7791

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7792
  %get_direction = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %8, i32 0, i32 6, !dbg !7793
  %9 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %get_direction, align 8, !dbg !7793
  %tobool3 = icmp ne i32 (%struct.gpio_chip*, i32)* %9, null, !dbg !7792
  br i1 %tobool3, label %if.then4, label %if.end9, !dbg !7794

if.then4:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %dir, metadata !7795, metadata !DIExpression()), !dbg !7797
  %10 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7798
  %call5 = call i32 @gpiod_get_direction(%struct.gpio_desc* %10) #11, !dbg !7799
  store i32 %call5, i32* %dir, align 4, !dbg !7797
  %11 = load i32, i32* %dir, align 4, !dbg !7800
  %cmp = icmp slt i32 %11, 0, !dbg !7802
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !7803

if.then7:                                         ; preds = %if.then4
  %12 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7804
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %12, i32 0, i32 1, !dbg !7804
  %13 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !7804
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %13, i32 0, i32 1, !dbg !7804
  %14 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7804
  %label = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %14, i32 0, i32 0, !dbg !7804
  %15 = load i8*, i8** %label, align 8, !dbg !7804
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.20, i64 0, i64 0), i8* %15, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.gpiochip_lock_as_irq, i64 0, i64 0)) #13, !dbg !7804
  %16 = load i32, i32* %dir, align 4, !dbg !7806
  store i32 %16, i32* %retval, align 4, !dbg !7807
  br label %return, !dbg !7807

if.end8:                                          ; preds = %if.then4
  br label %if.end9, !dbg !7808

if.end9:                                          ; preds = %if.end8, %land.lhs.true, %if.end
  %17 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7809
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %17, i32 0, i32 1, !dbg !7811
  %call10 = call zeroext i1 @test_bit(i64 1, i64* %flags) #11, !dbg !7812
  br i1 %call10, label %land.lhs.true12, label %if.end19, !dbg !7813

land.lhs.true12:                                  ; preds = %if.end9
  %18 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7814
  %flags13 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %18, i32 0, i32 1, !dbg !7815
  %call14 = call zeroext i1 @test_bit(i64 7, i64* %flags13) #11, !dbg !7816
  br i1 %call14, label %if.end19, label %if.then15, !dbg !7817

if.then15:                                        ; preds = %land.lhs.true12
  %19 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7818
  %gpiodev16 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %19, i32 0, i32 1, !dbg !7818
  %20 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev16, align 8, !dbg !7818
  %dev17 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %20, i32 0, i32 1, !dbg !7818
  %21 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7818
  %label18 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %21, i32 0, i32 0, !dbg !7818
  %22 = load i8*, i8** %label18, align 8, !dbg !7818
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev17, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.21, i64 0, i64 0), i8* %22, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.gpiochip_lock_as_irq, i64 0, i64 0)) #13, !dbg !7818
  store i32 -5, i32* %retval, align 4, !dbg !7820
  br label %return, !dbg !7820

if.end19:                                         ; preds = %land.lhs.true12, %if.end9
  %23 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7821
  %flags20 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %23, i32 0, i32 1, !dbg !7822
  call void @set_bit(i64 9, i64* %flags20) #11, !dbg !7823
  %24 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7824
  %flags21 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %24, i32 0, i32 1, !dbg !7825
  call void @set_bit(i64 10, i64* %flags21) #11, !dbg !7826
  %25 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7827
  %label22 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %25, i32 0, i32 2, !dbg !7829
  %26 = load i8*, i8** %label22, align 8, !dbg !7829
  %tobool23 = icmp ne i8* %26, null, !dbg !7827
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !7830

if.then24:                                        ; preds = %if.end19
  %27 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7831
  call void @desc_set_label(%struct.gpio_desc* %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0)) #11, !dbg !7832
  br label %if.end25, !dbg !7832

if.end25:                                         ; preds = %if.then24, %if.end19
  store i32 0, i32* %retval, align 4, !dbg !7833
  br label %return, !dbg !7833

return:                                           ; preds = %if.end25, %if.then15, %if.then7, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !7834
  ret i32 %28, !dbg !7834
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @gpiochip_irq_domain_deactivate(%struct.irq_domain* %domain, %struct.irq_data* %data) #0 !dbg !7835 {
entry:
  %domain.addr = alloca %struct.irq_domain*, align 8
  %data.addr = alloca %struct.irq_data*, align 8
  %gc = alloca %struct.gpio_chip*, align 8
  store %struct.irq_domain* %domain, %struct.irq_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %domain.addr, metadata !7836, metadata !DIExpression()), !dbg !7837
  store %struct.irq_data* %data, %struct.irq_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %data.addr, metadata !7838, metadata !DIExpression()), !dbg !7839
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !7840, metadata !DIExpression()), !dbg !7841
  %0 = load %struct.irq_domain*, %struct.irq_domain** %domain.addr, align 8, !dbg !7842
  %host_data = getelementptr inbounds %struct.irq_domain, %struct.irq_domain* %0, i32 0, i32 3, !dbg !7843
  %1 = load i8*, i8** %host_data, align 8, !dbg !7843
  %2 = bitcast i8* %1 to %struct.gpio_chip*, !dbg !7842
  store %struct.gpio_chip* %2, %struct.gpio_chip** %gc, align 8, !dbg !7841
  %3 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !7844
  %4 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !7845
  %hwirq = getelementptr inbounds %struct.irq_data, %struct.irq_data* %4, i32 0, i32 2, !dbg !7846
  %5 = load i64, i64* %hwirq, align 8, !dbg !7846
  %conv = trunc i64 %5 to i32, !dbg !7845
  call void @gpiochip_unlock_as_irq(%struct.gpio_chip* %3, i32 %conv) #11, !dbg !7847
  ret void, !dbg !7848
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @gpiochip_unlock_as_irq(%struct.gpio_chip* %gc, i32 %offset) #0 !dbg !7849 {
entry:
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %offset.addr = alloca i32, align 4
  %desc = alloca %struct.gpio_desc*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !7850, metadata !DIExpression()), !dbg !7851
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !7852, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc, metadata !7854, metadata !DIExpression()), !dbg !7855
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7856
  %1 = load i32, i32* %offset.addr, align 4, !dbg !7857
  %call = call %struct.gpio_desc* @gpiochip_get_desc(%struct.gpio_chip* %0, i32 %1) #11, !dbg !7858
  store %struct.gpio_desc* %call, %struct.gpio_desc** %desc, align 8, !dbg !7859
  %2 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7860
  %3 = bitcast %struct.gpio_desc* %2 to i8*, !dbg !7860
  %call1 = call zeroext i1 @IS_ERR(i8* %3) #11, !dbg !7862
  br i1 %call1, label %if.then, label %if.end, !dbg !7863

if.then:                                          ; preds = %entry
  br label %if.end7, !dbg !7864

if.end:                                           ; preds = %entry
  %4 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7865
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %4, i32 0, i32 1, !dbg !7866
  call void @clear_bit(i64 9, i64* %flags) #11, !dbg !7867
  %5 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7868
  %flags2 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %5, i32 0, i32 1, !dbg !7869
  call void @clear_bit(i64 10, i64* %flags2) #11, !dbg !7870
  %6 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7871
  %label = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %6, i32 0, i32 2, !dbg !7873
  %7 = load i8*, i8** %label, align 8, !dbg !7873
  %tobool = icmp ne i8* %7, null, !dbg !7871
  br i1 %tobool, label %land.lhs.true, label %if.end7, !dbg !7874

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7875
  %label3 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %8, i32 0, i32 2, !dbg !7876
  %9 = load i8*, i8** %label3, align 8, !dbg !7876
  %call4 = call i32 @strcmp(i8* %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0)) #11, !dbg !7877
  %tobool5 = icmp ne i32 %call4, 0, !dbg !7877
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !7878

if.then6:                                         ; preds = %land.lhs.true
  %10 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7879
  call void @desc_set_label(%struct.gpio_desc* %10, i8* null) #11, !dbg !7880
  br label %if.end7, !dbg !7880

if.end7:                                          ; preds = %if.then, %if.then6, %land.lhs.true, %if.end
  ret void, !dbg !7881
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiochip_irqchip_add_key(%struct.gpio_chip* %gc, %struct.irq_chip* %irqchip, i32 %first_irq, void (%struct.irq_desc*)* %handler, i32 %type, i1 zeroext %threaded, %struct.lock_class_key* %lock_key, %struct.lock_class_key* %request_key) #0 !dbg !7882 {
entry:
  %retval = alloca i32, align 4
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %irqchip.addr = alloca %struct.irq_chip*, align 8
  %first_irq.addr = alloca i32, align 4
  %handler.addr = alloca void (%struct.irq_desc*)*, align 8
  %type.addr = alloca i32, align 4
  %threaded.addr = alloca i8, align 1
  %lock_key.addr = alloca %struct.lock_class_key*, align 8
  %request_key.addr = alloca %struct.lock_class_key*, align 8
  %of_node = alloca %struct.device_node*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__to_acpi_device_node_fwnode = alloca %struct.fwnode_handle*, align 8
  %tmp52 = alloca %struct.acpi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp57 = alloca %struct.acpi_device*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !7885, metadata !DIExpression()), !dbg !7886
  store %struct.irq_chip* %irqchip, %struct.irq_chip** %irqchip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_chip** %irqchip.addr, metadata !7887, metadata !DIExpression()), !dbg !7888
  store i32 %first_irq, i32* %first_irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %first_irq.addr, metadata !7889, metadata !DIExpression()), !dbg !7890
  store void (%struct.irq_desc*)* %handler, void (%struct.irq_desc*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.irq_desc*)** %handler.addr, metadata !7891, metadata !DIExpression()), !dbg !7892
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7893, metadata !DIExpression()), !dbg !7894
  %frombool = zext i1 %threaded to i8
  store i8 %frombool, i8* %threaded.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %threaded.addr, metadata !7895, metadata !DIExpression()), !dbg !7896
  store %struct.lock_class_key* %lock_key, %struct.lock_class_key** %lock_key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lock_class_key** %lock_key.addr, metadata !7897, metadata !DIExpression()), !dbg !7898
  store %struct.lock_class_key* %request_key, %struct.lock_class_key** %request_key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lock_class_key** %request_key.addr, metadata !7899, metadata !DIExpression()), !dbg !7900
  call void @llvm.dbg.declare(metadata %struct.device_node** %of_node, metadata !7901, metadata !DIExpression()), !dbg !7902
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7903
  %tobool = icmp ne %struct.gpio_chip* %0, null, !dbg !7903
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7905

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.irq_chip*, %struct.irq_chip** %irqchip.addr, align 8, !dbg !7906
  %tobool1 = icmp ne %struct.irq_chip* %1, null, !dbg !7906
  br i1 %tobool1, label %if.end, label %if.then, !dbg !7907

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !7908
  br label %return, !dbg !7908

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7909
  %parent = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %2, i32 0, i32 2, !dbg !7911
  %3 = load %struct.device*, %struct.device** %parent, align 8, !dbg !7911
  %tobool2 = icmp ne %struct.device* %3, null, !dbg !7909
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !7912

if.then3:                                         ; preds = %if.end
  %4 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7913
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %4, i32 0, i32 1, !dbg !7913
  %5 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !7913
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %5, i32 0, i32 1, !dbg !7913
  %6 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7913
  %label = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %6, i32 0, i32 0, !dbg !7913
  %7 = load i8*, i8** %label, align 8, !dbg !7913
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %7) #13, !dbg !7913
  store i32 -22, i32* %retval, align 4, !dbg !7915
  br label %return, !dbg !7915

if.end4:                                          ; preds = %if.end
  %8 = load i8, i8* %threaded.addr, align 1, !dbg !7916
  %tobool5 = trunc i8 %8 to i1, !dbg !7916
  %9 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7917
  %irq = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %9, i32 0, i32 35, !dbg !7918
  %threaded6 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq, i32 0, i32 18, !dbg !7919
  %frombool7 = zext i1 %tobool5 to i8, !dbg !7920
  store i8 %frombool7, i8* %threaded6, align 8, !dbg !7920
  %10 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7921
  %parent8 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %10, i32 0, i32 2, !dbg !7922
  %11 = load %struct.device*, %struct.device** %parent8, align 8, !dbg !7922
  %of_node9 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 23, !dbg !7923
  %12 = load %struct.device_node*, %struct.device_node** %of_node9, align 8, !dbg !7923
  store %struct.device_node* %12, %struct.device_node** %of_node, align 8, !dbg !7924
  %13 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7925
  %of_node10 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %13, i32 0, i32 37, !dbg !7927
  %14 = load %struct.device_node*, %struct.device_node** %of_node10, align 8, !dbg !7927
  %tobool11 = icmp ne %struct.device_node* %14, null, !dbg !7925
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !7928

if.then12:                                        ; preds = %if.end4
  %15 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7929
  %of_node13 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %15, i32 0, i32 37, !dbg !7930
  %16 = load %struct.device_node*, %struct.device_node** %of_node13, align 8, !dbg !7930
  store %struct.device_node* %16, %struct.device_node** %of_node, align 8, !dbg !7931
  br label %if.end14, !dbg !7932

if.end14:                                         ; preds = %if.then12, %if.end4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7933, metadata !DIExpression()), !dbg !7936
  %17 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !7936
  %tobool15 = icmp ne %struct.device_node* %17, null, !dbg !7936
  br i1 %tobool15, label %land.rhs, label %land.end, !dbg !7936

land.rhs:                                         ; preds = %if.end14
  %18 = load i32, i32* %type.addr, align 4, !dbg !7936
  %cmp = icmp ne i32 %18, 0, !dbg !7936
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end14
  %19 = phi i1 [ false, %if.end14 ], [ %cmp, %land.rhs ], !dbg !7937
  %lnot = xor i1 %19, true, !dbg !7936
  %lnot16 = xor i1 %lnot, true, !dbg !7936
  %lnot.ext = zext i1 %lnot16 to i32, !dbg !7936
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7936
  %20 = load i32, i32* %__ret_warn_on, align 4, !dbg !7938
  %tobool17 = icmp ne i32 %20, 0, !dbg !7938
  %lnot18 = xor i1 %tobool17, true, !dbg !7938
  %lnot20 = xor i1 %lnot18, true, !dbg !7938
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !7938
  %conv = sext i32 %lnot.ext21 to i64, !dbg !7938
  %tobool22 = icmp ne i64 %conv, 0, !dbg !7938
  br i1 %tobool22, label %if.then23, label %if.end36, !dbg !7936

if.then23:                                        ; preds = %land.end
  br label %do.body, !dbg !7938

do.body:                                          ; preds = %if.then23
  br label %do.body24, !dbg !7940

do.body24:                                        ; preds = %do.body
  br label %do.end, !dbg !7942

do.end:                                           ; preds = %do.body24
  %21 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !7940
  %22 = load i32, i32* %type.addr, align 4, !dbg !7940
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.11, i64 0, i64 0), %struct.device_node* %21, i32 %22) #11, !dbg !7940
  br label %do.body25, !dbg !7940

do.body25:                                        ; preds = %do.end
  br label %do.body26, !dbg !7944

do.body26:                                        ; preds = %do.body25
  br label %do.end27, !dbg !7946

do.end27:                                         ; preds = %do.body26
  br label %do.body28, !dbg !7944

do.body28:                                        ; preds = %do.end27
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 1712, i32 2313, i64 12) #7, !dbg !7948, !srcloc !7950
  br label %do.end29, !dbg !7948

do.end29:                                         ; preds = %do.body28
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 241) #7, !dbg !7951, !srcloc !7953
  br label %do.body30, !dbg !7944

do.body30:                                        ; preds = %do.end29
  br label %do.end31, !dbg !7954

do.end31:                                         ; preds = %do.body30
  br label %do.end32, !dbg !7944

do.end32:                                         ; preds = %do.end31
  br label %do.body33, !dbg !7940

do.body33:                                        ; preds = %do.end32
  br label %do.end34, !dbg !7956

do.end34:                                         ; preds = %do.body33
  br label %do.end35, !dbg !7940

do.end35:                                         ; preds = %do.end34
  br label %if.end36, !dbg !7940

if.end36:                                         ; preds = %do.end35, %land.end
  %23 = load i32, i32* %__ret_warn_on, align 4, !dbg !7936
  %tobool37 = icmp ne i32 %23, 0, !dbg !7936
  %lnot38 = xor i1 %tobool37, true, !dbg !7936
  %lnot40 = xor i1 %lnot38, true, !dbg !7936
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !7936
  %conv42 = sext i32 %lnot.ext41 to i64, !dbg !7936
  store i64 %conv42, i64* %tmp, align 8, !dbg !7938
  %24 = load i64, i64* %tmp, align 8, !dbg !7936
  %tobool43 = icmp ne i64 %24, 0, !dbg !7958
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !7959

if.then44:                                        ; preds = %if.end36
  store i32 0, i32* %type.addr, align 4, !dbg !7960
  br label %if.end45, !dbg !7961

if.end45:                                         ; preds = %if.then44, %if.end36
  %25 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7962
  %parent46 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %25, i32 0, i32 2, !dbg !7964
  %26 = load %struct.device*, %struct.device** %parent46, align 8, !dbg !7964
  %call = call zeroext i1 @has_acpi_companion(%struct.device* %26) #11, !dbg !7965
  br i1 %call, label %land.lhs.true, label %if.end59, !dbg !7966

land.lhs.true:                                    ; preds = %if.end45
  %27 = load i32, i32* %type.addr, align 4, !dbg !7967
  %cmp48 = icmp ne i32 %27, 0, !dbg !7968
  br i1 %cmp48, label %if.then50, label %if.end59, !dbg !7969

if.then50:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %__to_acpi_device_node_fwnode, metadata !7970, metadata !DIExpression()), !dbg !7973
  %28 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7973
  %parent51 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %28, i32 0, i32 2, !dbg !7973
  %29 = load %struct.device*, %struct.device** %parent51, align 8, !dbg !7973
  %fwnode = getelementptr inbounds %struct.device, %struct.device* %29, i32 0, i32 24, !dbg !7973
  %30 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !7973
  store %struct.fwnode_handle* %30, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !7973
  %31 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !7973
  %call53 = call zeroext i1 @is_acpi_device_node(%struct.fwnode_handle* %31) #11, !dbg !7973
  br i1 %call53, label %cond.true, label %cond.false, !dbg !7973

cond.true:                                        ; preds = %if.then50
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7974, metadata !DIExpression()), !dbg !7976
  %32 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !7976
  %33 = bitcast %struct.fwnode_handle* %32 to i8*, !dbg !7976
  store i8* %33, i8** %__mptr, align 8, !dbg !7976
  br label %do.body55, !dbg !7976

do.body55:                                        ; preds = %cond.true
  br label %do.end56, !dbg !7977

do.end56:                                         ; preds = %do.body55
  %34 = load i8*, i8** %__mptr, align 8, !dbg !7976
  %add.ptr = getelementptr i8, i8* %34, i64 -16, !dbg !7976
  %35 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !7976
  store %struct.acpi_device* %35, %struct.acpi_device** %tmp57, align 8, !dbg !7977
  %36 = load %struct.acpi_device*, %struct.acpi_device** %tmp57, align 8, !dbg !7976
  br label %cond.end, !dbg !7973

cond.false:                                       ; preds = %if.then50
  br label %cond.end, !dbg !7973

cond.end:                                         ; preds = %cond.false, %do.end56
  %cond = phi %struct.acpi_device* [ %36, %do.end56 ], [ null, %cond.false ], !dbg !7973
  store %struct.acpi_device* %cond, %struct.acpi_device** %tmp52, align 8, !dbg !7973
  %37 = load %struct.acpi_device*, %struct.acpi_device** %tmp52, align 8, !dbg !7973
  %call58 = call i8* @acpi_device_handle(%struct.acpi_device* %37) #11, !dbg !7979
  %38 = load i32, i32* %type.addr, align 4, !dbg !7979
  call void (i8*, i8*, i8*, ...) @acpi_handle_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* %call58, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.13, i64 0, i64 0), i32 %38) #11, !dbg !7979
  store i32 0, i32* %type.addr, align 4, !dbg !7980
  br label %if.end59, !dbg !7981

if.end59:                                         ; preds = %cond.end, %land.lhs.true, %if.end45
  %39 = load %struct.irq_chip*, %struct.irq_chip** %irqchip.addr, align 8, !dbg !7982
  %40 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7983
  %irq60 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %40, i32 0, i32 35, !dbg !7984
  %chip = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq60, i32 0, i32 0, !dbg !7985
  store %struct.irq_chip* %39, %struct.irq_chip** %chip, align 8, !dbg !7986
  %41 = load void (%struct.irq_desc*)*, void (%struct.irq_desc*)** %handler.addr, align 8, !dbg !7987
  %42 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7988
  %irq61 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %42, i32 0, i32 35, !dbg !7989
  %handler62 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq61, i32 0, i32 9, !dbg !7990
  store void (%struct.irq_desc*)* %41, void (%struct.irq_desc*)** %handler62, align 8, !dbg !7991
  %43 = load i32, i32* %type.addr, align 4, !dbg !7992
  %44 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7993
  %irq63 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %44, i32 0, i32 35, !dbg !7994
  %default_type = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq63, i32 0, i32 10, !dbg !7995
  store i32 %43, i32* %default_type, align 8, !dbg !7996
  %45 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !7997
  %to_irq = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %45, i32 0, i32 14, !dbg !7998
  store i32 (%struct.gpio_chip*, i32)* @gpiochip_to_irq, i32 (%struct.gpio_chip*, i32)** %to_irq, align 8, !dbg !7999
  %46 = load %struct.lock_class_key*, %struct.lock_class_key** %lock_key.addr, align 8, !dbg !8000
  %47 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8001
  %irq64 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %47, i32 0, i32 35, !dbg !8002
  %lock_key65 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq64, i32 0, i32 11, !dbg !8003
  store %struct.lock_class_key* %46, %struct.lock_class_key** %lock_key65, align 8, !dbg !8004
  %48 = load %struct.lock_class_key*, %struct.lock_class_key** %request_key.addr, align 8, !dbg !8005
  %49 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8006
  %irq66 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %49, i32 0, i32 35, !dbg !8007
  %request_key67 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq66, i32 0, i32 12, !dbg !8008
  store %struct.lock_class_key* %48, %struct.lock_class_key** %request_key67, align 8, !dbg !8009
  %50 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !8010
  %51 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8011
  %ngpio = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %51, i32 0, i32 19, !dbg !8012
  %52 = load i16, i16* %ngpio, align 4, !dbg !8012
  %conv68 = zext i16 %52 to i32, !dbg !8011
  %53 = load i32, i32* %first_irq.addr, align 4, !dbg !8013
  %54 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8014
  %55 = bitcast %struct.gpio_chip* %54 to i8*, !dbg !8014
  %call69 = call %struct.irq_domain* @irq_domain_add_simple(%struct.device_node* %50, i32 %conv68, i32 %53, %struct.irq_domain_ops* @gpiochip_domain_ops, i8* %55) #11, !dbg !8015
  %56 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8016
  %irq70 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %56, i32 0, i32 35, !dbg !8017
  %domain = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq70, i32 0, i32 1, !dbg !8018
  store %struct.irq_domain* %call69, %struct.irq_domain** %domain, align 8, !dbg !8019
  %57 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8020
  %irq71 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %57, i32 0, i32 35, !dbg !8022
  %domain72 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq71, i32 0, i32 1, !dbg !8023
  %58 = load %struct.irq_domain*, %struct.irq_domain** %domain72, align 8, !dbg !8023
  %tobool73 = icmp ne %struct.irq_domain* %58, null, !dbg !8020
  br i1 %tobool73, label %if.end77, label %if.then74, !dbg !8024

if.then74:                                        ; preds = %if.end59
  %59 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8025
  %irq75 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %59, i32 0, i32 35, !dbg !8027
  %chip76 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq75, i32 0, i32 0, !dbg !8028
  store %struct.irq_chip* null, %struct.irq_chip** %chip76, align 8, !dbg !8029
  store i32 -22, i32* %retval, align 4, !dbg !8030
  br label %return, !dbg !8030

if.end77:                                         ; preds = %if.end59
  %60 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8031
  call void @gpiochip_set_irq_hooks(%struct.gpio_chip* %60) #11, !dbg !8032
  %61 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8033
  call void @acpi_gpiochip_request_interrupts(%struct.gpio_chip* %61) #11, !dbg !8034
  store i32 0, i32* %retval, align 4, !dbg !8035
  br label %return, !dbg !8035

return:                                           ; preds = %if.end77, %if.then74, %if.then3, %if.then
  %62 = load i32, i32* %retval, align 4, !dbg !8036
  ret i32 %62, !dbg !8036
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @has_acpi_companion(%struct.device* %dev) #0 !dbg !8037 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8041, metadata !DIExpression()), !dbg !8042
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8043
  %fwnode = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 24, !dbg !8044
  %1 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !8044
  %call = call zeroext i1 @is_acpi_device_node(%struct.fwnode_handle* %1) #11, !dbg !8045
  ret i1 %call, !dbg !8046
}

; Function Attrs: noredzone
declare dso_local void @acpi_handle_printk(i8*, i8*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @acpi_device_handle(%struct.acpi_device* %adev) #0 !dbg !8047 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !8050, metadata !DIExpression()), !dbg !8051
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !8052
  %tobool = icmp ne %struct.acpi_device* %0, null, !dbg !8052
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8052

cond.true:                                        ; preds = %entry
  %1 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !8053
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %1, i32 0, i32 1, !dbg !8054
  %2 = load i8*, i8** %handle, align 8, !dbg !8054
  br label %cond.end, !dbg !8052

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8052

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %2, %cond.true ], [ null, %cond.false ], !dbg !8052
  ret i8* %cond, !dbg !8055
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_acpi_device_node(%struct.fwnode_handle*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpiochip_to_irq(%struct.gpio_chip* %gc, i32 %offset) #0 !dbg !8056 {
entry:
  %retval = alloca i32, align 4
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %offset.addr = alloca i32, align 4
  %domain = alloca %struct.irq_domain*, align 8
  %spec = alloca %struct.irq_fwspec, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !8057, metadata !DIExpression()), !dbg !8058
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !8059, metadata !DIExpression()), !dbg !8060
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %domain, metadata !8061, metadata !DIExpression()), !dbg !8062
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8063
  %irq = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 35, !dbg !8064
  %domain1 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq, i32 0, i32 1, !dbg !8065
  %1 = load %struct.irq_domain*, %struct.irq_domain** %domain1, align 8, !dbg !8065
  store %struct.irq_domain* %1, %struct.irq_domain** %domain, align 8, !dbg !8062
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8066
  %3 = load i32, i32* %offset.addr, align 4, !dbg !8068
  %call = call zeroext i1 @gpiochip_irqchip_irq_valid(%struct.gpio_chip* %2, i32 %3) #11, !dbg !8069
  br i1 %call, label %if.end, label %if.then, !dbg !8070

if.then:                                          ; preds = %entry
  store i32 -6, i32* %retval, align 4, !dbg !8071
  br label %return, !dbg !8071

if.end:                                           ; preds = %entry
  %4 = load %struct.irq_domain*, %struct.irq_domain** %domain, align 8, !dbg !8072
  %call2 = call zeroext i1 @irq_domain_is_hierarchy(%struct.irq_domain* %4) #11, !dbg !8074
  br i1 %call2, label %if.then3, label %if.end10, !dbg !8075

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.irq_fwspec* %spec, metadata !8076, metadata !DIExpression()), !dbg !8078
  %5 = load %struct.irq_domain*, %struct.irq_domain** %domain, align 8, !dbg !8079
  %fwnode = getelementptr inbounds %struct.irq_domain, %struct.irq_domain* %5, i32 0, i32 6, !dbg !8080
  %6 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !8080
  %fwnode4 = getelementptr inbounds %struct.irq_fwspec, %struct.irq_fwspec* %spec, i32 0, i32 0, !dbg !8081
  store %struct.fwnode_handle* %6, %struct.fwnode_handle** %fwnode4, align 8, !dbg !8082
  %param_count = getelementptr inbounds %struct.irq_fwspec, %struct.irq_fwspec* %spec, i32 0, i32 1, !dbg !8083
  store i32 2, i32* %param_count, align 8, !dbg !8084
  %7 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8085
  %irq5 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %7, i32 0, i32 35, !dbg !8086
  %child_offset_to_irq = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq5, i32 0, i32 7, !dbg !8087
  %8 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %child_offset_to_irq, align 8, !dbg !8087
  %9 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8088
  %10 = load i32, i32* %offset.addr, align 4, !dbg !8089
  %call6 = call i32 %8(%struct.gpio_chip* %9, i32 %10) #11, !dbg !8085
  %param = getelementptr inbounds %struct.irq_fwspec, %struct.irq_fwspec* %spec, i32 0, i32 2, !dbg !8090
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %param, i64 0, i64 0, !dbg !8091
  store i32 %call6, i32* %arrayidx, align 4, !dbg !8092
  %param7 = getelementptr inbounds %struct.irq_fwspec, %struct.irq_fwspec* %spec, i32 0, i32 2, !dbg !8093
  %arrayidx8 = getelementptr [16 x i32], [16 x i32]* %param7, i64 0, i64 1, !dbg !8094
  store i32 0, i32* %arrayidx8, align 4, !dbg !8095
  %call9 = call i32 @irq_create_fwspec_mapping(%struct.irq_fwspec* %spec) #11, !dbg !8096
  store i32 %call9, i32* %retval, align 4, !dbg !8097
  br label %return, !dbg !8097

if.end10:                                         ; preds = %if.end
  %11 = load %struct.irq_domain*, %struct.irq_domain** %domain, align 8, !dbg !8098
  %12 = load i32, i32* %offset.addr, align 4, !dbg !8099
  %conv = zext i32 %12 to i64, !dbg !8099
  %call11 = call i32 @irq_create_mapping(%struct.irq_domain* %11, i64 %conv) #11, !dbg !8100
  store i32 %call11, i32* %retval, align 4, !dbg !8101
  br label %return, !dbg !8101

return:                                           ; preds = %if.end10, %if.then3, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !8102
  ret i32 %13, !dbg !8102
}

; Function Attrs: noredzone
declare dso_local %struct.irq_domain* @irq_domain_add_simple(%struct.device_node*, i32, i32, %struct.irq_domain_ops*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpiochip_set_irq_hooks(%struct.gpio_chip* %gc) #0 !dbg !8103 {
entry:
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %irqchip = alloca %struct.irq_chip*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !8104, metadata !DIExpression()), !dbg !8105
  call void @llvm.dbg.declare(metadata %struct.irq_chip** %irqchip, metadata !8106, metadata !DIExpression()), !dbg !8107
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8108
  %irq = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 35, !dbg !8109
  %chip = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq, i32 0, i32 0, !dbg !8110
  %1 = load %struct.irq_chip*, %struct.irq_chip** %chip, align 8, !dbg !8110
  store %struct.irq_chip* %1, %struct.irq_chip** %irqchip, align 8, !dbg !8107
  %2 = load %struct.irq_chip*, %struct.irq_chip** %irqchip, align 8, !dbg !8111
  %irq_request_resources = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %2, i32 0, i32 24, !dbg !8113
  %3 = load i32 (%struct.irq_data*)*, i32 (%struct.irq_data*)** %irq_request_resources, align 8, !dbg !8113
  %tobool = icmp ne i32 (%struct.irq_data*)* %3, null, !dbg !8111
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !8114

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.irq_chip*, %struct.irq_chip** %irqchip, align 8, !dbg !8115
  %irq_release_resources = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %4, i32 0, i32 25, !dbg !8116
  %5 = load void (%struct.irq_data*)*, void (%struct.irq_data*)** %irq_release_resources, align 8, !dbg !8116
  %tobool1 = icmp ne void (%struct.irq_data*)* %5, null, !dbg !8115
  br i1 %tobool1, label %if.end, label %if.then, !dbg !8117

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.irq_chip*, %struct.irq_chip** %irqchip, align 8, !dbg !8118
  %irq_request_resources2 = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %6, i32 0, i32 24, !dbg !8120
  store i32 (%struct.irq_data*)* @gpiochip_irq_reqres, i32 (%struct.irq_data*)** %irq_request_resources2, align 8, !dbg !8121
  %7 = load %struct.irq_chip*, %struct.irq_chip** %irqchip, align 8, !dbg !8122
  %irq_release_resources3 = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %7, i32 0, i32 25, !dbg !8123
  store void (%struct.irq_data*)* @gpiochip_irq_relres, void (%struct.irq_data*)** %irq_release_resources3, align 8, !dbg !8124
  br label %if.end, !dbg !8125

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8126, metadata !DIExpression()), !dbg !8129
  %8 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8129
  %irq4 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %8, i32 0, i32 35, !dbg !8129
  %irq_enable = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq4, i32 0, i32 23, !dbg !8129
  %9 = load void (%struct.irq_data*)*, void (%struct.irq_data*)** %irq_enable, align 8, !dbg !8129
  %tobool5 = icmp ne void (%struct.irq_data*)* %9, null, !dbg !8129
  %lnot = xor i1 %tobool5, true, !dbg !8129
  %lnot6 = xor i1 %lnot, true, !dbg !8129
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !8129
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8129
  %10 = load i32, i32* %__ret_warn_on, align 4, !dbg !8130
  %tobool7 = icmp ne i32 %10, 0, !dbg !8130
  %lnot8 = xor i1 %tobool7, true, !dbg !8130
  %lnot10 = xor i1 %lnot8, true, !dbg !8130
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !8130
  %conv = sext i32 %lnot.ext11 to i64, !dbg !8130
  %tobool12 = icmp ne i64 %conv, 0, !dbg !8130
  br i1 %tobool12, label %if.then13, label %if.end20, !dbg !8129

if.then13:                                        ; preds = %if.end
  br label %do.body, !dbg !8130

do.body:                                          ; preds = %if.then13
  br label %do.body14, !dbg !8132

do.body14:                                        ; preds = %do.body
  br label %do.end, !dbg !8134

do.end:                                           ; preds = %do.body14
  br label %do.body15, !dbg !8132

do.body15:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 1477, i32 2305, i64 12) #7, !dbg !8136, !srcloc !8138
  br label %do.end16, !dbg !8136

do.end16:                                         ; preds = %do.body15
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 238) #7, !dbg !8139, !srcloc !8141
  br label %do.body17, !dbg !8132

do.body17:                                        ; preds = %do.end16
  br label %do.end18, !dbg !8142

do.end18:                                         ; preds = %do.body17
  br label %do.end19, !dbg !8132

do.end19:                                         ; preds = %do.end18
  br label %if.end20, !dbg !8132

if.end20:                                         ; preds = %do.end19, %if.end
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !8129
  %tobool21 = icmp ne i32 %11, 0, !dbg !8129
  %lnot22 = xor i1 %tobool21, true, !dbg !8129
  %lnot24 = xor i1 %lnot22, true, !dbg !8129
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !8129
  %conv26 = sext i32 %lnot.ext25 to i64, !dbg !8129
  store i64 %conv26, i64* %tmp, align 8, !dbg !8130
  %12 = load i64, i64* %tmp, align 8, !dbg !8129
  %tobool27 = icmp ne i64 %12, 0, !dbg !8144
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !8145

if.then28:                                        ; preds = %if.end20
  br label %if.end55, !dbg !8146

if.end29:                                         ; preds = %if.end20
  %13 = load %struct.irq_chip*, %struct.irq_chip** %irqchip, align 8, !dbg !8147
  %irq_enable30 = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %13, i32 0, i32 4, !dbg !8149
  %14 = load void (%struct.irq_data*)*, void (%struct.irq_data*)** %irq_enable30, align 8, !dbg !8149
  %cmp = icmp eq void (%struct.irq_data*)* %14, @gpiochip_irq_enable, !dbg !8150
  br i1 %cmp, label %if.then32, label %if.end33, !dbg !8151

if.then32:                                        ; preds = %if.end29
  %15 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8152
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %15, i32 0, i32 1, !dbg !8152
  %16 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !8152
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %16, i32 0, i32 1, !dbg !8152
  %17 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8152
  %label = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %17, i32 0, i32 0, !dbg !8152
  %18 = load i8*, i8** %label, align 8, !dbg !8152
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.55, i64 0, i64 0), i8* %18) #13, !dbg !8152
  br label %if.end55, !dbg !8154

if.end33:                                         ; preds = %if.end29
  %19 = load %struct.irq_chip*, %struct.irq_chip** %irqchip, align 8, !dbg !8155
  %irq_disable = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %19, i32 0, i32 5, !dbg !8157
  %20 = load void (%struct.irq_data*)*, void (%struct.irq_data*)** %irq_disable, align 8, !dbg !8157
  %tobool34 = icmp ne void (%struct.irq_data*)* %20, null, !dbg !8155
  br i1 %tobool34, label %if.then35, label %if.else, !dbg !8158

if.then35:                                        ; preds = %if.end33
  %21 = load %struct.irq_chip*, %struct.irq_chip** %irqchip, align 8, !dbg !8159
  %irq_disable36 = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %21, i32 0, i32 5, !dbg !8161
  %22 = load void (%struct.irq_data*)*, void (%struct.irq_data*)** %irq_disable36, align 8, !dbg !8161
  %23 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8162
  %irq37 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %23, i32 0, i32 35, !dbg !8163
  %irq_disable38 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq37, i32 0, i32 24, !dbg !8164
  store void (%struct.irq_data*)* %22, void (%struct.irq_data*)** %irq_disable38, align 8, !dbg !8165
  %24 = load %struct.irq_chip*, %struct.irq_chip** %irqchip, align 8, !dbg !8166
  %irq_disable39 = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %24, i32 0, i32 5, !dbg !8167
  store void (%struct.irq_data*)* @gpiochip_irq_disable, void (%struct.irq_data*)** %irq_disable39, align 8, !dbg !8168
  br label %if.end43, !dbg !8169

if.else:                                          ; preds = %if.end33
  %25 = load %struct.irq_chip*, %struct.irq_chip** %irqchip, align 8, !dbg !8170
  %irq_mask = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %25, i32 0, i32 7, !dbg !8172
  %26 = load void (%struct.irq_data*)*, void (%struct.irq_data*)** %irq_mask, align 8, !dbg !8172
  %27 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8173
  %irq40 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %27, i32 0, i32 35, !dbg !8174
  %irq_mask41 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq40, i32 0, i32 26, !dbg !8175
  store void (%struct.irq_data*)* %26, void (%struct.irq_data*)** %irq_mask41, align 8, !dbg !8176
  %28 = load %struct.irq_chip*, %struct.irq_chip** %irqchip, align 8, !dbg !8177
  %irq_mask42 = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %28, i32 0, i32 7, !dbg !8178
  store void (%struct.irq_data*)* @gpiochip_irq_mask, void (%struct.irq_data*)** %irq_mask42, align 8, !dbg !8179
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.then35
  %29 = load %struct.irq_chip*, %struct.irq_chip** %irqchip, align 8, !dbg !8180
  %irq_enable44 = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %29, i32 0, i32 4, !dbg !8182
  %30 = load void (%struct.irq_data*)*, void (%struct.irq_data*)** %irq_enable44, align 8, !dbg !8182
  %tobool45 = icmp ne void (%struct.irq_data*)* %30, null, !dbg !8180
  br i1 %tobool45, label %if.then46, label %if.else51, !dbg !8183

if.then46:                                        ; preds = %if.end43
  %31 = load %struct.irq_chip*, %struct.irq_chip** %irqchip, align 8, !dbg !8184
  %irq_enable47 = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %31, i32 0, i32 4, !dbg !8186
  %32 = load void (%struct.irq_data*)*, void (%struct.irq_data*)** %irq_enable47, align 8, !dbg !8186
  %33 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8187
  %irq48 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %33, i32 0, i32 35, !dbg !8188
  %irq_enable49 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq48, i32 0, i32 23, !dbg !8189
  store void (%struct.irq_data*)* %32, void (%struct.irq_data*)** %irq_enable49, align 8, !dbg !8190
  %34 = load %struct.irq_chip*, %struct.irq_chip** %irqchip, align 8, !dbg !8191
  %irq_enable50 = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %34, i32 0, i32 4, !dbg !8192
  store void (%struct.irq_data*)* @gpiochip_irq_enable, void (%struct.irq_data*)** %irq_enable50, align 8, !dbg !8193
  br label %if.end55, !dbg !8194

if.else51:                                        ; preds = %if.end43
  %35 = load %struct.irq_chip*, %struct.irq_chip** %irqchip, align 8, !dbg !8195
  %irq_unmask = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %35, i32 0, i32 9, !dbg !8197
  %36 = load void (%struct.irq_data*)*, void (%struct.irq_data*)** %irq_unmask, align 8, !dbg !8197
  %37 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8198
  %irq52 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %37, i32 0, i32 35, !dbg !8199
  %irq_unmask53 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq52, i32 0, i32 25, !dbg !8200
  store void (%struct.irq_data*)* %36, void (%struct.irq_data*)** %irq_unmask53, align 8, !dbg !8201
  %38 = load %struct.irq_chip*, %struct.irq_chip** %irqchip, align 8, !dbg !8202
  %irq_unmask54 = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %38, i32 0, i32 9, !dbg !8203
  store void (%struct.irq_data*)* @gpiochip_irq_unmask, void (%struct.irq_data*)** %irq_unmask54, align 8, !dbg !8204
  br label %if.end55

if.end55:                                         ; preds = %if.then28, %if.then32, %if.else51, %if.then46
  ret void, !dbg !8205
}

; Function Attrs: noredzone
declare dso_local void @acpi_gpiochip_request_interrupts(%struct.gpio_chip*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiochip_irqchip_add_domain(%struct.gpio_chip* %gc, %struct.irq_domain* %domain) #0 !dbg !8206 {
entry:
  %retval = alloca i32, align 4
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %domain.addr = alloca %struct.irq_domain*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !8209, metadata !DIExpression()), !dbg !8210
  store %struct.irq_domain* %domain, %struct.irq_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %domain.addr, metadata !8211, metadata !DIExpression()), !dbg !8212
  %0 = load %struct.irq_domain*, %struct.irq_domain** %domain.addr, align 8, !dbg !8213
  %tobool = icmp ne %struct.irq_domain* %0, null, !dbg !8213
  br i1 %tobool, label %if.end, label %if.then, !dbg !8215

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !8216
  br label %return, !dbg !8216

if.end:                                           ; preds = %entry
  %1 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8217
  %to_irq = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %1, i32 0, i32 14, !dbg !8218
  store i32 (%struct.gpio_chip*, i32)* @gpiochip_to_irq, i32 (%struct.gpio_chip*, i32)** %to_irq, align 8, !dbg !8219
  %2 = load %struct.irq_domain*, %struct.irq_domain** %domain.addr, align 8, !dbg !8220
  %3 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8221
  %irq = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %3, i32 0, i32 35, !dbg !8222
  %domain1 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq, i32 0, i32 1, !dbg !8223
  store %struct.irq_domain* %2, %struct.irq_domain** %domain1, align 8, !dbg !8224
  store i32 0, i32* %retval, align 4, !dbg !8225
  br label %return, !dbg !8225

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !8226
  ret i32 %4, !dbg !8226
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiochip_generic_request(%struct.gpio_chip* %gc, i32 %offset) #0 !dbg !8227 {
entry:
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !8228, metadata !DIExpression()), !dbg !8229
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !8230, metadata !DIExpression()), !dbg !8231
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8232
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 1, !dbg !8233
  %1 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !8233
  %base = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %1, i32 0, i32 7, !dbg !8234
  %2 = load i32, i32* %base, align 8, !dbg !8234
  %3 = load i32, i32* %offset.addr, align 4, !dbg !8235
  %add = add i32 %2, %3, !dbg !8236
  %call = call i32 @pinctrl_gpio_request(i32 %add) #11, !dbg !8237
  ret i32 %call, !dbg !8238
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pinctrl_gpio_request(i32 %gpio) #0 !dbg !8239 {
entry:
  %gpio.addr = alloca i32, align 4
  store i32 %gpio, i32* %gpio.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gpio.addr, metadata !8243, metadata !DIExpression()), !dbg !8244
  ret i32 0, !dbg !8245
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @gpiochip_generic_free(%struct.gpio_chip* %gc, i32 %offset) #0 !dbg !8246 {
entry:
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !8247, metadata !DIExpression()), !dbg !8248
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !8249, metadata !DIExpression()), !dbg !8250
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8251
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 1, !dbg !8252
  %1 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !8252
  %base = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %1, i32 0, i32 7, !dbg !8253
  %2 = load i32, i32* %base, align 8, !dbg !8253
  %3 = load i32, i32* %offset.addr, align 4, !dbg !8254
  %add = add i32 %2, %3, !dbg !8255
  call void @pinctrl_gpio_free(i32 %add) #11, !dbg !8256
  ret void, !dbg !8257
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pinctrl_gpio_free(i32 %gpio) #0 !dbg !8258 {
entry:
  %gpio.addr = alloca i32, align 4
  store i32 %gpio, i32* %gpio.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gpio.addr, metadata !8259, metadata !DIExpression()), !dbg !8260
  ret void, !dbg !8261
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiochip_generic_config(%struct.gpio_chip* %gc, i32 %offset, i64 %config) #0 !dbg !8262 {
entry:
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %offset.addr = alloca i32, align 4
  %config.addr = alloca i64, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !8263, metadata !DIExpression()), !dbg !8264
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !8265, metadata !DIExpression()), !dbg !8266
  store i64 %config, i64* %config.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %config.addr, metadata !8267, metadata !DIExpression()), !dbg !8268
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8269
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 1, !dbg !8270
  %1 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !8270
  %base = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %1, i32 0, i32 7, !dbg !8271
  %2 = load i32, i32* %base, align 8, !dbg !8271
  %3 = load i32, i32* %offset.addr, align 4, !dbg !8272
  %add = add i32 %2, %3, !dbg !8273
  %4 = load i64, i64* %config.addr, align 8, !dbg !8274
  %call = call i32 @pinctrl_gpio_set_config(i32 %add, i64 %4) #11, !dbg !8275
  ret i32 %call, !dbg !8276
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pinctrl_gpio_set_config(i32 %gpio, i64 %config) #0 !dbg !8277 {
entry:
  %gpio.addr = alloca i32, align 4
  %config.addr = alloca i64, align 8
  store i32 %gpio, i32* %gpio.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gpio.addr, metadata !8280, metadata !DIExpression()), !dbg !8281
  store i64 %config, i64* %config.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %config.addr, metadata !8282, metadata !DIExpression()), !dbg !8283
  ret i32 0, !dbg !8284
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_request(%struct.gpio_desc* %desc, i8* %label) #0 !dbg !8285 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %label.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %gdev = alloca %struct.gpio_device*, align 8
  %__valid = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !8288, metadata !DIExpression()), !dbg !8289
  store i8* %label, i8** %label.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %label.addr, metadata !8290, metadata !DIExpression()), !dbg !8291
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8292, metadata !DIExpression()), !dbg !8293
  store i32 -517, i32* %ret, align 4, !dbg !8293
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %gdev, metadata !8294, metadata !DIExpression()), !dbg !8295
  br label %do.body, !dbg !8296

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__valid, metadata !8297, metadata !DIExpression()), !dbg !8299
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8299
  %call = call i32 @validate_desc(%struct.gpio_desc* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.gpiod_request, i64 0, i64 0)) #11, !dbg !8299
  store i32 %call, i32* %__valid, align 4, !dbg !8299
  %1 = load i32, i32* %__valid, align 4, !dbg !8300
  %cmp = icmp sle i32 %1, 0, !dbg !8300
  br i1 %cmp, label %if.then, label %if.end, !dbg !8299

if.then:                                          ; preds = %do.body
  %2 = load i32, i32* %__valid, align 4, !dbg !8300
  store i32 %2, i32* %retval, align 4, !dbg !8300
  br label %return, !dbg !8300

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !8299

do.end:                                           ; preds = %if.end
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8302
  %gdev1 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %3, i32 0, i32 0, !dbg !8303
  %4 = load %struct.gpio_device*, %struct.gpio_device** %gdev1, align 8, !dbg !8303
  store %struct.gpio_device* %4, %struct.gpio_device** %gdev, align 8, !dbg !8304
  %5 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !8305
  %owner = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %5, i32 0, i32 4, !dbg !8307
  %6 = load %struct.module*, %struct.module** %owner, align 8, !dbg !8307
  %call2 = call zeroext i1 @try_module_get(%struct.module* %6) #11, !dbg !8308
  br i1 %call2, label %if.then3, label %if.end10, !dbg !8309

if.then3:                                         ; preds = %do.end
  %7 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8310
  %8 = load i8*, i8** %label.addr, align 8, !dbg !8312
  %call4 = call i32 @gpiod_request_commit(%struct.gpio_desc* %7, i8* %8) #11, !dbg !8313
  store i32 %call4, i32* %ret, align 4, !dbg !8314
  %9 = load i32, i32* %ret, align 4, !dbg !8315
  %cmp5 = icmp slt i32 %9, 0, !dbg !8317
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !8318

if.then6:                                         ; preds = %if.then3
  %10 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !8319
  %owner7 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %10, i32 0, i32 4, !dbg !8320
  %11 = load %struct.module*, %struct.module** %owner7, align 8, !dbg !8320
  call void @module_put(%struct.module* %11) #11, !dbg !8321
  br label %if.end9, !dbg !8321

if.else:                                          ; preds = %if.then3
  %12 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !8322
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %12, i32 0, i32 1, !dbg !8323
  %call8 = call %struct.device* @get_device(%struct.device* %dev) #11, !dbg !8324
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then6
  br label %if.end10, !dbg !8325

if.end10:                                         ; preds = %if.end9, %do.end
  %13 = load i32, i32* %ret, align 4, !dbg !8326
  %tobool = icmp ne i32 %13, 0, !dbg !8326
  br i1 %tobool, label %if.then11, label %if.end12, !dbg !8328

if.then11:                                        ; preds = %if.end10
  store i32 0, i32* %tmp, align 4, !dbg !8329
  %14 = load i32, i32* %tmp, align 4, !dbg !8332
  br label %if.end12, !dbg !8333

if.end12:                                         ; preds = %if.then11, %if.end10
  %15 = load i32, i32* %ret, align 4, !dbg !8334
  store i32 %15, i32* %retval, align 4, !dbg !8335
  br label %return, !dbg !8335

return:                                           ; preds = %if.end12, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !8336
  ret i32 %16, !dbg !8336
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @validate_desc(%struct.gpio_desc* %desc, i8* %func) #0 !dbg !8337 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %func.addr = alloca i8*, align 8
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !8340, metadata !DIExpression()), !dbg !8341
  store i8* %func, i8** %func.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %func.addr, metadata !8342, metadata !DIExpression()), !dbg !8343
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8344
  %tobool = icmp ne %struct.gpio_desc* %0, null, !dbg !8344
  br i1 %tobool, label %if.end, label %if.then, !dbg !8346

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8347
  br label %return, !dbg !8347

if.end:                                           ; preds = %entry
  %1 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8348
  %2 = bitcast %struct.gpio_desc* %1 to i8*, !dbg !8348
  %call = call zeroext i1 @IS_ERR(i8* %2) #11, !dbg !8350
  br i1 %call, label %if.then1, label %if.end4, !dbg !8351

if.then1:                                         ; preds = %if.end
  %3 = load i8*, i8** %func.addr, align 8, !dbg !8352
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.56, i64 0, i64 0), i8* %3) #13, !dbg !8352
  %4 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8354
  %5 = bitcast %struct.gpio_desc* %4 to i8*, !dbg !8354
  %call3 = call i64 @PTR_ERR(i8* %5) #11, !dbg !8355
  %conv = trunc i64 %call3 to i32, !dbg !8355
  store i32 %conv, i32* %retval, align 4, !dbg !8356
  br label %return, !dbg !8356

if.end4:                                          ; preds = %if.end
  %6 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8357
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %6, i32 0, i32 0, !dbg !8359
  %7 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !8359
  %tobool5 = icmp ne %struct.gpio_device* %7, null, !dbg !8357
  br i1 %tobool5, label %if.end8, label %if.then6, !dbg !8360

if.then6:                                         ; preds = %if.end4
  %8 = load i8*, i8** %func.addr, align 8, !dbg !8361
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.57, i64 0, i64 0), i8* %8) #13, !dbg !8361
  store i32 -22, i32* %retval, align 4, !dbg !8363
  br label %return, !dbg !8363

if.end8:                                          ; preds = %if.end4
  %9 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8364
  %gdev9 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %9, i32 0, i32 0, !dbg !8366
  %10 = load %struct.gpio_device*, %struct.gpio_device** %gdev9, align 8, !dbg !8366
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %10, i32 0, i32 5, !dbg !8367
  %11 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !8367
  %tobool10 = icmp ne %struct.gpio_chip* %11, null, !dbg !8364
  br i1 %tobool10, label %if.end13, label %if.then11, !dbg !8368

if.then11:                                        ; preds = %if.end8
  %12 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8369
  %gdev12 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %12, i32 0, i32 0, !dbg !8369
  %13 = load %struct.gpio_device*, %struct.gpio_device** %gdev12, align 8, !dbg !8369
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %13, i32 0, i32 1, !dbg !8369
  %14 = load i8*, i8** %func.addr, align 8, !dbg !8369
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.58, i64 0, i64 0), i8* %14) #13, !dbg !8369
  store i32 0, i32* %retval, align 4, !dbg !8371
  br label %return, !dbg !8371

if.end13:                                         ; preds = %if.end8
  store i32 1, i32* %retval, align 4, !dbg !8372
  br label %return, !dbg !8372

return:                                           ; preds = %if.end13, %if.then11, %if.then6, %if.then1, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !8373
  ret i32 %15, !dbg !8373
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @try_module_get(%struct.module* %module) #0 !dbg !8374 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !8378, metadata !DIExpression()), !dbg !8379
  ret i1 true, !dbg !8380
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpiod_request_commit(%struct.gpio_desc* %desc, i8* %label) #0 !dbg !8381 {
entry:
  %lock.addr.i116 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i116, metadata !4646, metadata !DIExpression()), !dbg !8382
  %lock.addr.i111 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i111, metadata !4628, metadata !DIExpression()), !dbg !8391
  %flags.addr.i112 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i112, metadata !4636, metadata !DIExpression()), !dbg !8393
  %tmp.i113 = alloca i32, align 4
  %tmp8.i114 = alloca i32, align 4
  %lock.addr.i109 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i109, metadata !4646, metadata !DIExpression()), !dbg !8394
  %lock.addr.i104 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i104, metadata !4628, metadata !DIExpression()), !dbg !8403
  %flags.addr.i105 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i105, metadata !4636, metadata !DIExpression()), !dbg !8405
  %tmp.i106 = alloca i32, align 4
  %tmp8.i107 = alloca i32, align 4
  %lock.addr.i102 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i102, metadata !4628, metadata !DIExpression()), !dbg !8406
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4636, metadata !DIExpression()), !dbg !8408
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4646, metadata !DIExpression()), !dbg !8409
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %label.addr = alloca i8*, align 8
  %gc = alloca %struct.gpio_chip*, align 8
  %ret = alloca i32, align 4
  %flags = alloca i64, align 8
  %offset = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  %__dummy42 = alloca i64, align 8
  %__dummy243 = alloca i64, align 8
  %tmp46 = alloca i32, align 4
  %__dummy50 = alloca i64, align 8
  %__dummy251 = alloca i64, align 8
  %tmp54 = alloca i32, align 4
  %__dummy77 = alloca i64, align 8
  %__dummy278 = alloca i64, align 8
  %tmp81 = alloca i32, align 4
  %__dummy85 = alloca i64, align 8
  %__dummy286 = alloca i64, align 8
  %tmp89 = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !8416, metadata !DIExpression()), !dbg !8417
  store i8* %label, i8** %label.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %label.addr, metadata !8418, metadata !DIExpression()), !dbg !8419
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !8420, metadata !DIExpression()), !dbg !8421
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8422
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %0, i32 0, i32 0, !dbg !8423
  %1 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !8423
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %1, i32 0, i32 5, !dbg !8424
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !8424
  store %struct.gpio_chip* %2, %struct.gpio_chip** %gc, align 8, !dbg !8421
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8425, metadata !DIExpression()), !dbg !8426
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8427, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !8429, metadata !DIExpression()), !dbg !8430
  %3 = load i8*, i8** %label.addr, align 8, !dbg !8431
  %tobool = icmp ne i8* %3, null, !dbg !8431
  br i1 %tobool, label %if.then, label %if.end3, !dbg !8433

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %label.addr, align 8, !dbg !8434
  %call = call i8* @kstrdup_const(i8* %4, i32 3264) #11, !dbg !8436
  store i8* %call, i8** %label.addr, align 8, !dbg !8437
  %5 = load i8*, i8** %label.addr, align 8, !dbg !8438
  %tobool1 = icmp ne i8* %5, null, !dbg !8438
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !8440

if.then2:                                         ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !8441
  br label %return, !dbg !8441

if.end:                                           ; preds = %if.then
  br label %if.end3, !dbg !8442

if.end3:                                          ; preds = %if.end, %entry
  br label %do.body, !dbg !8443

do.body:                                          ; preds = %if.end3
  br label %do.body4, !dbg !8444

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8445, metadata !DIExpression()), !dbg !8447
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8448, metadata !DIExpression()), !dbg !8447
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8447
  %conv = zext i1 %cmp to i32, !dbg !8447
  store i32 1, i32* %tmp, align 4, !dbg !8447
  %6 = load i32, i32* %tmp, align 4, !dbg !8447
  br label %do.body5, !dbg !8449

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !8450

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !8451

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !8453, metadata !DIExpression()), !dbg !8456
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !8457, metadata !DIExpression()), !dbg !8456
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !8456
  %conv11 = zext i1 %cmp10 to i32, !dbg !8456
  store i32 1, i32* %tmp12, align 4, !dbg !8456
  %7 = load i32, i32* %tmp12, align 4, !dbg !8456
  %call13 = call i64 @arch_local_irq_save() #11, !dbg !8458
  store i64 %call13, i64* %flags, align 8, !dbg !8458
  br label %do.end, !dbg !8458

do.end:                                           ; preds = %do.body7
  br label %do.end14, !dbg !8451

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !8450

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8459, !srcloc !8460
  br label %do.body16, !dbg !8459

do.body16:                                        ; preds = %do.body15
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8461
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !8462
  %rlock.i = bitcast %union.anon* %9 to %struct.raw_spinlock*, !dbg !8462
  br label %do.end18, !dbg !8463

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !8459

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !8450

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !8449

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !8444

do.end22:                                         ; preds = %do.end21
  %10 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8464
  %flags23 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %10, i32 0, i32 1, !dbg !8466
  %call24 = call zeroext i1 @test_and_set_bit(i64 0, i64* %flags23) #11, !dbg !8467
  %conv25 = zext i1 %call24 to i32, !dbg !8467
  %cmp26 = icmp eq i32 %conv25, 0, !dbg !8468
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !8469

if.then28:                                        ; preds = %do.end22
  %11 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8470
  %12 = load i8*, i8** %label.addr, align 8, !dbg !8472
  %tobool29 = icmp ne i8* %12, null, !dbg !8472
  br i1 %tobool29, label %cond.true, label %cond.false, !dbg !8472

cond.true:                                        ; preds = %if.then28
  br label %cond.end, !dbg !8472

cond.false:                                       ; preds = %if.then28
  br label %cond.end, !dbg !8472

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %12, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), %cond.false ], !dbg !8472
  call void @desc_set_label(%struct.gpio_desc* %11, i8* %cond) #11, !dbg !8473
  store i32 0, i32* %ret, align 4, !dbg !8474
  br label %if.end30, !dbg !8475

if.else:                                          ; preds = %do.end22
  %13 = load i8*, i8** %label.addr, align 8, !dbg !8476
  call void @kfree_const(i8* %13) #11, !dbg !8478
  store i32 -16, i32* %ret, align 4, !dbg !8479
  br label %done, !dbg !8480

if.end30:                                         ; preds = %cond.end
  %14 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !8481
  %request = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %14, i32 0, i32 4, !dbg !8482
  %15 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %request, align 8, !dbg !8482
  %tobool31 = icmp ne i32 (%struct.gpio_chip*, i32)* %15, null, !dbg !8481
  br i1 %tobool31, label %if.then32, label %if.end71, !dbg !8483

if.then32:                                        ; preds = %if.end30
  %16 = load i64, i64* %flags, align 8, !dbg !8484
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i104, align 8
  store i64 %16, i64* %flags.addr.i105, align 8
  call void @llvm.dbg.declare(metadata !265, metadata !4706, metadata !DIExpression()) #7, !dbg !8485
  call void @llvm.dbg.declare(metadata !265, metadata !4710, metadata !DIExpression()) #7, !dbg !8485
  store i32 1, i32* %tmp.i106, align 4, !dbg !8485
  %17 = load i32, i32* %tmp.i106, align 4, !dbg !8485
  call void @llvm.dbg.declare(metadata !265, metadata !4711, metadata !DIExpression()) #7, !dbg !8486
  call void @llvm.dbg.declare(metadata !265, metadata !4717, metadata !DIExpression()) #7, !dbg !8486
  store i32 1, i32* %tmp8.i107, align 4, !dbg !8486
  %18 = load i32, i32* %tmp8.i107, align 4, !dbg !8486
  %19 = load i64, i64* %flags.addr.i105, align 8, !dbg !8487
  call void @arch_local_irq_restore(i64 %19) #12, !dbg !8487
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8488, !srcloc !4721
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i104, align 8, !dbg !8489
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !8489
  %rlock.i108 = bitcast %union.anon* %21 to %struct.raw_spinlock*, !dbg !8489
  %22 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8490
  %call33 = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %22) #11, !dbg !8491
  store i32 %call33, i32* %offset, align 4, !dbg !8492
  %23 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !8493
  %24 = load i32, i32* %offset, align 4, !dbg !8495
  %call34 = call zeroext i1 @gpiochip_line_is_valid(%struct.gpio_chip* %23, i32 %24) #11, !dbg !8496
  br i1 %call34, label %if.then35, label %if.else38, !dbg !8497

if.then35:                                        ; preds = %if.then32
  %25 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !8498
  %request36 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %25, i32 0, i32 4, !dbg !8499
  %26 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %request36, align 8, !dbg !8499
  %27 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !8500
  %28 = load i32, i32* %offset, align 4, !dbg !8501
  %call37 = call i32 %26(%struct.gpio_chip* %27, i32 %28) #11, !dbg !8498
  store i32 %call37, i32* %ret, align 4, !dbg !8502
  br label %if.end39, !dbg !8503

if.else38:                                        ; preds = %if.then32
  store i32 -22, i32* %ret, align 4, !dbg !8504
  br label %if.end39

if.end39:                                         ; preds = %if.else38, %if.then35
  br label %do.body40, !dbg !8505

do.body40:                                        ; preds = %if.end39
  br label %do.body41, !dbg !8506

do.body41:                                        ; preds = %do.body40
  call void @llvm.dbg.declare(metadata i64* %__dummy42, metadata !8507, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.declare(metadata i64* %__dummy243, metadata !8510, metadata !DIExpression()), !dbg !8509
  %cmp44 = icmp eq i64* %__dummy42, %__dummy243, !dbg !8509
  %conv45 = zext i1 %cmp44 to i32, !dbg !8509
  store i32 1, i32* %tmp46, align 4, !dbg !8509
  %29 = load i32, i32* %tmp46, align 4, !dbg !8509
  br label %do.body47, !dbg !8511

do.body47:                                        ; preds = %do.body41
  br label %do.body48, !dbg !8512

do.body48:                                        ; preds = %do.body47
  br label %do.body49, !dbg !8513

do.body49:                                        ; preds = %do.body48
  call void @llvm.dbg.declare(metadata i64* %__dummy50, metadata !8515, metadata !DIExpression()), !dbg !8518
  call void @llvm.dbg.declare(metadata i64* %__dummy251, metadata !8519, metadata !DIExpression()), !dbg !8518
  %cmp52 = icmp eq i64* %__dummy50, %__dummy251, !dbg !8518
  %conv53 = zext i1 %cmp52 to i32, !dbg !8518
  store i32 1, i32* %tmp54, align 4, !dbg !8518
  %30 = load i32, i32* %tmp54, align 4, !dbg !8518
  %call55 = call i64 @arch_local_irq_save() #11, !dbg !8520
  store i64 %call55, i64* %flags, align 8, !dbg !8520
  br label %do.end56, !dbg !8520

do.end56:                                         ; preds = %do.body49
  br label %do.end57, !dbg !8513

do.end57:                                         ; preds = %do.end56
  br label %do.body58, !dbg !8512

do.body58:                                        ; preds = %do.end57
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8521, !srcloc !8522
  br label %do.body59, !dbg !8521

do.body59:                                        ; preds = %do.body58
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i109, align 8
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i109, align 8, !dbg !8523
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !8524
  %rlock.i110 = bitcast %union.anon* %32 to %struct.raw_spinlock*, !dbg !8524
  br label %do.end61, !dbg !8525

do.end61:                                         ; preds = %do.body59
  br label %do.end62, !dbg !8521

do.end62:                                         ; preds = %do.end61
  br label %do.end63, !dbg !8512

do.end63:                                         ; preds = %do.end62
  br label %do.end64, !dbg !8511

do.end64:                                         ; preds = %do.end63
  br label %do.end65, !dbg !8506

do.end65:                                         ; preds = %do.end64
  %33 = load i32, i32* %ret, align 4, !dbg !8526
  %cmp66 = icmp slt i32 %33, 0, !dbg !8528
  br i1 %cmp66, label %if.then68, label %if.end70, !dbg !8529

if.then68:                                        ; preds = %do.end65
  %34 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8530
  call void @desc_set_label(%struct.gpio_desc* %34, i8* null) #11, !dbg !8532
  %35 = load i8*, i8** %label.addr, align 8, !dbg !8533
  call void @kfree_const(i8* %35) #11, !dbg !8534
  %36 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8535
  %flags69 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %36, i32 0, i32 1, !dbg !8536
  call void @clear_bit(i64 0, i64* %flags69) #11, !dbg !8537
  br label %done, !dbg !8538

if.end70:                                         ; preds = %do.end65
  br label %if.end71, !dbg !8539

if.end71:                                         ; preds = %if.end70, %if.end30
  %37 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !8540
  %get_direction = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %37, i32 0, i32 6, !dbg !8541
  %38 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %get_direction, align 8, !dbg !8541
  %tobool72 = icmp ne i32 (%struct.gpio_chip*, i32)* %38, null, !dbg !8540
  br i1 %tobool72, label %if.then73, label %if.end101, !dbg !8542

if.then73:                                        ; preds = %if.end71
  %39 = load i64, i64* %flags, align 8, !dbg !8543
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i111, align 8
  store i64 %39, i64* %flags.addr.i112, align 8
  call void @llvm.dbg.declare(metadata !265, metadata !4706, metadata !DIExpression()) #7, !dbg !8544
  call void @llvm.dbg.declare(metadata !265, metadata !4710, metadata !DIExpression()) #7, !dbg !8544
  store i32 1, i32* %tmp.i113, align 4, !dbg !8544
  %40 = load i32, i32* %tmp.i113, align 4, !dbg !8544
  call void @llvm.dbg.declare(metadata !265, metadata !4711, metadata !DIExpression()) #7, !dbg !8545
  call void @llvm.dbg.declare(metadata !265, metadata !4717, metadata !DIExpression()) #7, !dbg !8545
  store i32 1, i32* %tmp8.i114, align 4, !dbg !8545
  %41 = load i32, i32* %tmp8.i114, align 4, !dbg !8545
  %42 = load i64, i64* %flags.addr.i112, align 8, !dbg !8546
  call void @arch_local_irq_restore(i64 %42) #12, !dbg !8546
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8547, !srcloc !4721
  %43 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i111, align 8, !dbg !8548
  %44 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %43, i32 0, i32 0, !dbg !8548
  %rlock.i115 = bitcast %union.anon* %44 to %struct.raw_spinlock*, !dbg !8548
  %45 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8549
  %call74 = call i32 @gpiod_get_direction(%struct.gpio_desc* %45) #11, !dbg !8550
  br label %do.body75, !dbg !8551

do.body75:                                        ; preds = %if.then73
  br label %do.body76, !dbg !8552

do.body76:                                        ; preds = %do.body75
  call void @llvm.dbg.declare(metadata i64* %__dummy77, metadata !8553, metadata !DIExpression()), !dbg !8555
  call void @llvm.dbg.declare(metadata i64* %__dummy278, metadata !8556, metadata !DIExpression()), !dbg !8555
  %cmp79 = icmp eq i64* %__dummy77, %__dummy278, !dbg !8555
  %conv80 = zext i1 %cmp79 to i32, !dbg !8555
  store i32 1, i32* %tmp81, align 4, !dbg !8555
  %46 = load i32, i32* %tmp81, align 4, !dbg !8555
  br label %do.body82, !dbg !8557

do.body82:                                        ; preds = %do.body76
  br label %do.body83, !dbg !8558

do.body83:                                        ; preds = %do.body82
  br label %do.body84, !dbg !8559

do.body84:                                        ; preds = %do.body83
  call void @llvm.dbg.declare(metadata i64* %__dummy85, metadata !8561, metadata !DIExpression()), !dbg !8564
  call void @llvm.dbg.declare(metadata i64* %__dummy286, metadata !8565, metadata !DIExpression()), !dbg !8564
  %cmp87 = icmp eq i64* %__dummy85, %__dummy286, !dbg !8564
  %conv88 = zext i1 %cmp87 to i32, !dbg !8564
  store i32 1, i32* %tmp89, align 4, !dbg !8564
  %47 = load i32, i32* %tmp89, align 4, !dbg !8564
  %call90 = call i64 @arch_local_irq_save() #11, !dbg !8566
  store i64 %call90, i64* %flags, align 8, !dbg !8566
  br label %do.end91, !dbg !8566

do.end91:                                         ; preds = %do.body84
  br label %do.end92, !dbg !8559

do.end92:                                         ; preds = %do.end91
  br label %do.body93, !dbg !8558

do.body93:                                        ; preds = %do.end92
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8567, !srcloc !8568
  br label %do.body94, !dbg !8567

do.body94:                                        ; preds = %do.body93
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i116, align 8
  %48 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i116, align 8, !dbg !8569
  %49 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %48, i32 0, i32 0, !dbg !8570
  %rlock.i117 = bitcast %union.anon* %49 to %struct.raw_spinlock*, !dbg !8570
  br label %do.end96, !dbg !8571

do.end96:                                         ; preds = %do.body94
  br label %do.end97, !dbg !8567

do.end97:                                         ; preds = %do.end96
  br label %do.end98, !dbg !8558

do.end98:                                         ; preds = %do.end97
  br label %do.end99, !dbg !8557

do.end99:                                         ; preds = %do.end98
  br label %do.end100, !dbg !8552

do.end100:                                        ; preds = %do.end99
  br label %if.end101, !dbg !8572

if.end101:                                        ; preds = %do.end100, %if.end71
  br label %done, !dbg !8541

done:                                             ; preds = %if.end101, %if.then68, %if.else
  call void @llvm.dbg.label(metadata !8573), !dbg !8574
  %50 = load i64, i64* %flags, align 8, !dbg !8575
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i102, align 8
  store i64 %50, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !265, metadata !4706, metadata !DIExpression()) #7, !dbg !8576
  call void @llvm.dbg.declare(metadata !265, metadata !4710, metadata !DIExpression()) #7, !dbg !8576
  store i32 1, i32* %tmp.i, align 4, !dbg !8576
  %51 = load i32, i32* %tmp.i, align 4, !dbg !8576
  call void @llvm.dbg.declare(metadata !265, metadata !4711, metadata !DIExpression()) #7, !dbg !8577
  call void @llvm.dbg.declare(metadata !265, metadata !4717, metadata !DIExpression()) #7, !dbg !8577
  store i32 1, i32* %tmp8.i, align 4, !dbg !8577
  %52 = load i32, i32* %tmp8.i, align 4, !dbg !8577
  %53 = load i64, i64* %flags.addr.i, align 8, !dbg !8578
  call void @arch_local_irq_restore(i64 %53) #12, !dbg !8578
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8579, !srcloc !4721
  %54 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i102, align 8, !dbg !8580
  %55 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %54, i32 0, i32 0, !dbg !8580
  %rlock.i103 = bitcast %union.anon* %55 to %struct.raw_spinlock*, !dbg !8580
  %56 = load i32, i32* %ret, align 4, !dbg !8581
  store i32 %56, i32* %retval, align 4, !dbg !8582
  br label %return, !dbg !8582

return:                                           ; preds = %done, %if.then2
  %57 = load i32, i32* %retval, align 4, !dbg !8583
  ret i32 %57, !dbg !8583
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @module_put(%struct.module* %module) #0 !dbg !8584 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !8587, metadata !DIExpression()), !dbg !8588
  ret void, !dbg !8589
}

; Function Attrs: noredzone
declare dso_local %struct.device* @get_device(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @gpiod_free(%struct.gpio_desc* %desc) #0 !dbg !8590 {
entry:
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !8593, metadata !DIExpression()), !dbg !8594
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8595
  %tobool = icmp ne %struct.gpio_desc* %0, null, !dbg !8595
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !8597

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8598
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %1, i32 0, i32 0, !dbg !8599
  %2 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !8599
  %tobool1 = icmp ne %struct.gpio_device* %2, null, !dbg !8598
  br i1 %tobool1, label %land.lhs.true2, label %if.else, !dbg !8600

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8601
  %call = call zeroext i1 @gpiod_free_commit(%struct.gpio_desc* %3) #11, !dbg !8602
  br i1 %call, label %if.then, label %if.else, !dbg !8603

if.then:                                          ; preds = %land.lhs.true2
  %4 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8604
  %gdev3 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %4, i32 0, i32 0, !dbg !8606
  %5 = load %struct.gpio_device*, %struct.gpio_device** %gdev3, align 8, !dbg !8606
  %owner = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %5, i32 0, i32 4, !dbg !8607
  %6 = load %struct.module*, %struct.module** %owner, align 8, !dbg !8607
  call void @module_put(%struct.module* %6) #11, !dbg !8608
  %7 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8609
  %gdev4 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %7, i32 0, i32 0, !dbg !8610
  %8 = load %struct.gpio_device*, %struct.gpio_device** %gdev4, align 8, !dbg !8610
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %8, i32 0, i32 1, !dbg !8611
  call void @put_device(%struct.device* %dev) #11, !dbg !8612
  br label %if.end21, !dbg !8613

if.else:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8614, metadata !DIExpression()), !dbg !8617
  store i32 0, i32* %__ret_warn_on, align 4, !dbg !8617
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !8618
  %tobool5 = icmp ne i32 %9, 0, !dbg !8618
  %lnot = xor i1 %tobool5, true, !dbg !8618
  %lnot6 = xor i1 %lnot, true, !dbg !8618
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !8618
  %conv = sext i32 %lnot.ext to i64, !dbg !8618
  %tobool7 = icmp ne i64 %conv, 0, !dbg !8618
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !8617

if.then8:                                         ; preds = %if.else
  br label %do.body, !dbg !8618

do.body:                                          ; preds = %if.then8
  br label %do.body9, !dbg !8620

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !8622

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !8620

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 2137, i32 2305, i64 12) #7, !dbg !8624, !srcloc !8626
  br label %do.end11, !dbg !8624

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 244) #7, !dbg !8627, !srcloc !8629
  br label %do.body12, !dbg !8620

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !8630

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !8620

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !8620

if.end:                                           ; preds = %do.end14, %if.else
  %10 = load i32, i32* %__ret_warn_on, align 4, !dbg !8617
  %tobool15 = icmp ne i32 %10, 0, !dbg !8617
  %lnot16 = xor i1 %tobool15, true, !dbg !8617
  %lnot18 = xor i1 %lnot16, true, !dbg !8617
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !8617
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !8617
  store i64 %conv20, i64* %tmp, align 8, !dbg !8618
  %11 = load i64, i64* %tmp, align 8, !dbg !8617
  br label %if.end21

if.end21:                                         ; preds = %if.end, %if.then
  ret void, !dbg !8632
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @gpiod_free_commit(%struct.gpio_desc* %desc) #0 !dbg !8633 {
entry:
  %lock.addr.i92 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i92, metadata !4646, metadata !DIExpression()), !dbg !8636
  %lock.addr.i87 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i87, metadata !4628, metadata !DIExpression()), !dbg !8647
  %flags.addr.i88 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i88, metadata !4636, metadata !DIExpression()), !dbg !8649
  %tmp.i89 = alloca i32, align 4
  %tmp8.i90 = alloca i32, align 4
  %lock.addr.i85 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i85, metadata !4628, metadata !DIExpression()), !dbg !8650
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4636, metadata !DIExpression()), !dbg !8652
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4646, metadata !DIExpression()), !dbg !8653
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %ret = alloca i8, align 1
  %flags = alloca i64, align 8
  %gc = alloca %struct.gpio_chip*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  %__dummy40 = alloca i64, align 8
  %__dummy241 = alloca i64, align 8
  %tmp44 = alloca i32, align 4
  %__dummy48 = alloca i64, align 8
  %__dummy249 = alloca i64, align 8
  %tmp52 = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !8660, metadata !DIExpression()), !dbg !8661
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !8662, metadata !DIExpression()), !dbg !8663
  store i8 0, i8* %ret, align 1, !dbg !8663
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8664, metadata !DIExpression()), !dbg !8665
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !8666, metadata !DIExpression()), !dbg !8667
  br label %do.body, !dbg !8668

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8669

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !8671

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !8669

do.end2:                                          ; preds = %do.end
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8673
  call void @gpiod_unexport(%struct.gpio_desc* %0) #11, !dbg !8674
  br label %do.body3, !dbg !8675

do.body3:                                         ; preds = %do.end2
  br label %do.body4, !dbg !8676

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8677, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8680, metadata !DIExpression()), !dbg !8679
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8679
  %conv = zext i1 %cmp to i32, !dbg !8679
  store i32 1, i32* %tmp, align 4, !dbg !8679
  %1 = load i32, i32* %tmp, align 4, !dbg !8679
  br label %do.body5, !dbg !8681

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !8682

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !8683

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !8685, metadata !DIExpression()), !dbg !8688
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !8689, metadata !DIExpression()), !dbg !8688
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !8688
  %conv11 = zext i1 %cmp10 to i32, !dbg !8688
  store i32 1, i32* %tmp12, align 4, !dbg !8688
  %2 = load i32, i32* %tmp12, align 4, !dbg !8688
  %call = call i64 @arch_local_irq_save() #11, !dbg !8690
  store i64 %call, i64* %flags, align 8, !dbg !8690
  br label %do.end13, !dbg !8690

do.end13:                                         ; preds = %do.body7
  br label %do.end14, !dbg !8683

do.end14:                                         ; preds = %do.end13
  br label %do.body15, !dbg !8682

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8691, !srcloc !8692
  br label %do.body16, !dbg !8691

do.body16:                                        ; preds = %do.body15
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8693
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !8694
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !8694
  br label %do.end18, !dbg !8695

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !8691

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !8682

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !8681

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !8676

do.end22:                                         ; preds = %do.end21
  %5 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8696
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %5, i32 0, i32 0, !dbg !8697
  %6 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !8697
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %6, i32 0, i32 5, !dbg !8698
  %7 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !8698
  store %struct.gpio_chip* %7, %struct.gpio_chip** %gc, align 8, !dbg !8699
  %8 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !8700
  %tobool = icmp ne %struct.gpio_chip* %8, null, !dbg !8700
  br i1 %tobool, label %land.lhs.true, label %if.end81, !dbg !8701

land.lhs.true:                                    ; preds = %do.end22
  %9 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8702
  %flags23 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %9, i32 0, i32 1, !dbg !8703
  %call24 = call zeroext i1 @test_bit(i64 0, i64* %flags23) #11, !dbg !8704
  br i1 %call24, label %if.then, label %if.end81, !dbg !8705

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !8706
  %free = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %10, i32 0, i32 5, !dbg !8707
  %11 = load void (%struct.gpio_chip*, i32)*, void (%struct.gpio_chip*, i32)** %free, align 8, !dbg !8707
  %tobool26 = icmp ne void (%struct.gpio_chip*, i32)* %11, null, !dbg !8706
  br i1 %tobool26, label %if.then27, label %if.end64, !dbg !8708

if.then27:                                        ; preds = %if.then
  %12 = load i64, i64* %flags, align 8, !dbg !8709
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i87, align 8
  store i64 %12, i64* %flags.addr.i88, align 8
  call void @llvm.dbg.declare(metadata !265, metadata !4706, metadata !DIExpression()) #7, !dbg !8710
  call void @llvm.dbg.declare(metadata !265, metadata !4710, metadata !DIExpression()) #7, !dbg !8710
  store i32 1, i32* %tmp.i89, align 4, !dbg !8710
  %13 = load i32, i32* %tmp.i89, align 4, !dbg !8710
  call void @llvm.dbg.declare(metadata !265, metadata !4711, metadata !DIExpression()) #7, !dbg !8711
  call void @llvm.dbg.declare(metadata !265, metadata !4717, metadata !DIExpression()) #7, !dbg !8711
  store i32 1, i32* %tmp8.i90, align 4, !dbg !8711
  %14 = load i32, i32* %tmp8.i90, align 4, !dbg !8711
  %15 = load i64, i64* %flags.addr.i88, align 8, !dbg !8712
  call void @arch_local_irq_restore(i64 %15) #12, !dbg !8712
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8713, !srcloc !4721
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i87, align 8, !dbg !8714
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !8714
  %rlock.i91 = bitcast %union.anon* %17 to %struct.raw_spinlock*, !dbg !8714
  br label %do.body28, !dbg !8715

do.body28:                                        ; preds = %if.then27
  %18 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !8716
  %can_sleep = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %18, i32 0, i32 21, !dbg !8716
  %19 = load i8, i8* %can_sleep, align 8, !dbg !8716
  %tobool29 = trunc i8 %19 to i1, !dbg !8716
  br i1 %tobool29, label %if.then30, label %if.end, !dbg !8719

if.then30:                                        ; preds = %do.body28
  br label %do.body31, !dbg !8716

do.body31:                                        ; preds = %if.then30
  br label %do.body32, !dbg !8720

do.body32:                                        ; preds = %do.body31
  br label %do.end33, !dbg !8722

do.end33:                                         ; preds = %do.body32
  br label %do.end34, !dbg !8720

do.end34:                                         ; preds = %do.end33
  br label %if.end, !dbg !8720

if.end:                                           ; preds = %do.end34, %do.body28
  br label %do.end35, !dbg !8719

do.end35:                                         ; preds = %if.end
  %20 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !8724
  %free36 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %20, i32 0, i32 5, !dbg !8725
  %21 = load void (%struct.gpio_chip*, i32)*, void (%struct.gpio_chip*, i32)** %free36, align 8, !dbg !8725
  %22 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !8726
  %23 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8727
  %call37 = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %23) #11, !dbg !8728
  call void %21(%struct.gpio_chip* %22, i32 %call37) #11, !dbg !8724
  br label %do.body38, !dbg !8729

do.body38:                                        ; preds = %do.end35
  br label %do.body39, !dbg !8730

do.body39:                                        ; preds = %do.body38
  call void @llvm.dbg.declare(metadata i64* %__dummy40, metadata !8731, metadata !DIExpression()), !dbg !8733
  call void @llvm.dbg.declare(metadata i64* %__dummy241, metadata !8734, metadata !DIExpression()), !dbg !8733
  %cmp42 = icmp eq i64* %__dummy40, %__dummy241, !dbg !8733
  %conv43 = zext i1 %cmp42 to i32, !dbg !8733
  store i32 1, i32* %tmp44, align 4, !dbg !8733
  %24 = load i32, i32* %tmp44, align 4, !dbg !8733
  br label %do.body45, !dbg !8735

do.body45:                                        ; preds = %do.body39
  br label %do.body46, !dbg !8736

do.body46:                                        ; preds = %do.body45
  br label %do.body47, !dbg !8737

do.body47:                                        ; preds = %do.body46
  call void @llvm.dbg.declare(metadata i64* %__dummy48, metadata !8739, metadata !DIExpression()), !dbg !8742
  call void @llvm.dbg.declare(metadata i64* %__dummy249, metadata !8743, metadata !DIExpression()), !dbg !8742
  %cmp50 = icmp eq i64* %__dummy48, %__dummy249, !dbg !8742
  %conv51 = zext i1 %cmp50 to i32, !dbg !8742
  store i32 1, i32* %tmp52, align 4, !dbg !8742
  %25 = load i32, i32* %tmp52, align 4, !dbg !8742
  %call53 = call i64 @arch_local_irq_save() #11, !dbg !8744
  store i64 %call53, i64* %flags, align 8, !dbg !8744
  br label %do.end54, !dbg !8744

do.end54:                                         ; preds = %do.body47
  br label %do.end55, !dbg !8737

do.end55:                                         ; preds = %do.end54
  br label %do.body56, !dbg !8736

do.body56:                                        ; preds = %do.end55
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8745, !srcloc !8746
  br label %do.body57, !dbg !8745

do.body57:                                        ; preds = %do.body56
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i92, align 8
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i92, align 8, !dbg !8747
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !8748
  %rlock.i93 = bitcast %union.anon* %27 to %struct.raw_spinlock*, !dbg !8748
  br label %do.end59, !dbg !8749

do.end59:                                         ; preds = %do.body57
  br label %do.end60, !dbg !8745

do.end60:                                         ; preds = %do.end59
  br label %do.end61, !dbg !8736

do.end61:                                         ; preds = %do.end60
  br label %do.end62, !dbg !8735

do.end62:                                         ; preds = %do.end61
  br label %do.end63, !dbg !8730

do.end63:                                         ; preds = %do.end62
  br label %if.end64, !dbg !8750

if.end64:                                         ; preds = %do.end63, %if.then
  %28 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8751
  %label = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %28, i32 0, i32 2, !dbg !8752
  %29 = load i8*, i8** %label, align 8, !dbg !8752
  call void @kfree_const(i8* %29) #11, !dbg !8753
  %30 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8754
  call void @desc_set_label(%struct.gpio_desc* %30, i8* null) #11, !dbg !8755
  %31 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8756
  %flags65 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %31, i32 0, i32 1, !dbg !8757
  call void @clear_bit(i64 6, i64* %flags65) #11, !dbg !8758
  %32 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8759
  %flags66 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %32, i32 0, i32 1, !dbg !8760
  call void @clear_bit(i64 0, i64* %flags66) #11, !dbg !8761
  %33 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8762
  %flags67 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %33, i32 0, i32 1, !dbg !8763
  call void @clear_bit(i64 7, i64* %flags67) #11, !dbg !8764
  %34 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8765
  %flags68 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %34, i32 0, i32 1, !dbg !8766
  call void @clear_bit(i64 8, i64* %flags68) #11, !dbg !8767
  %35 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8768
  %flags69 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %35, i32 0, i32 1, !dbg !8769
  call void @clear_bit(i64 13, i64* %flags69) #11, !dbg !8770
  %36 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8771
  %flags70 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %36, i32 0, i32 1, !dbg !8772
  call void @clear_bit(i64 14, i64* %flags70) #11, !dbg !8773
  %37 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8774
  %flags71 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %37, i32 0, i32 1, !dbg !8775
  call void @clear_bit(i64 15, i64* %flags71) #11, !dbg !8776
  %38 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8777
  %flags72 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %38, i32 0, i32 1, !dbg !8778
  call void @clear_bit(i64 16, i64* %flags72) #11, !dbg !8779
  %39 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8780
  %flags73 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %39, i32 0, i32 1, !dbg !8781
  call void @clear_bit(i64 17, i64* %flags73) #11, !dbg !8782
  %40 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8783
  %flags74 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %40, i32 0, i32 1, !dbg !8784
  call void @clear_bit(i64 11, i64* %flags74) #11, !dbg !8785
  br label %do.body75, !dbg !8786

do.body75:                                        ; preds = %if.end64
  br label %do.body76, !dbg !8787

do.body76:                                        ; preds = %do.body75
  br label %do.end77, !dbg !8789

do.end77:                                         ; preds = %do.body76
  br label %do.body78, !dbg !8787

do.body78:                                        ; preds = %do.end77
  %41 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8791
  %debounce_period_us = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %41, i32 0, i32 4, !dbg !8791
  store volatile i32 0, i32* %debounce_period_us, align 8, !dbg !8791
  br label %do.end79, !dbg !8791

do.end79:                                         ; preds = %do.body78
  br label %do.end80, !dbg !8787

do.end80:                                         ; preds = %do.end79
  store i8 1, i8* %ret, align 1, !dbg !8793
  br label %if.end81, !dbg !8794

if.end81:                                         ; preds = %do.end80, %land.lhs.true, %do.end22
  %42 = load i64, i64* %flags, align 8, !dbg !8795
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i85, align 8
  store i64 %42, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !265, metadata !4706, metadata !DIExpression()) #7, !dbg !8796
  call void @llvm.dbg.declare(metadata !265, metadata !4710, metadata !DIExpression()) #7, !dbg !8796
  store i32 1, i32* %tmp.i, align 4, !dbg !8796
  %43 = load i32, i32* %tmp.i, align 4, !dbg !8796
  call void @llvm.dbg.declare(metadata !265, metadata !4711, metadata !DIExpression()) #7, !dbg !8797
  call void @llvm.dbg.declare(metadata !265, metadata !4717, metadata !DIExpression()) #7, !dbg !8797
  store i32 1, i32* %tmp8.i, align 4, !dbg !8797
  %44 = load i32, i32* %tmp8.i, align 4, !dbg !8797
  %45 = load i64, i64* %flags.addr.i, align 8, !dbg !8798
  call void @arch_local_irq_restore(i64 %45) #12, !dbg !8798
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8799, !srcloc !4721
  %46 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i85, align 8, !dbg !8800
  %47 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %46, i32 0, i32 0, !dbg !8800
  %rlock.i86 = bitcast %union.anon* %47 to %struct.raw_spinlock*, !dbg !8800
  %48 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8801
  %gdev82 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %48, i32 0, i32 0, !dbg !8802
  %49 = load %struct.gpio_device*, %struct.gpio_device** %gdev82, align 8, !dbg !8802
  %notifier = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %49, i32 0, i32 12, !dbg !8803
  %50 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8804
  %51 = bitcast %struct.gpio_desc* %50 to i8*, !dbg !8804
  %call83 = call i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head* %notifier, i64 2, i8* %51) #11, !dbg !8805
  %52 = load i8, i8* %ret, align 1, !dbg !8806
  %tobool84 = trunc i8 %52 to i1, !dbg !8806
  ret i1 %tobool84, !dbg !8807
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !8808 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8811, metadata !DIExpression()), !dbg !8812
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !8813
  %1 = ptrtoint i8* %0 to i64, !dbg !8813
  %2 = inttoptr i64 %1 to i8*, !dbg !8813
  %3 = ptrtoint i8* %2 to i64, !dbg !8813
  %cmp = icmp uge i64 %3, -4095, !dbg !8813
  %lnot = xor i1 %cmp, true, !dbg !8813
  %lnot1 = xor i1 %lnot, true, !dbg !8813
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8813
  %conv = sext i32 %lnot.ext to i64, !dbg !8813
  %tobool = icmp ne i64 %conv, 0, !dbg !8813
  ret i1 %tobool, !dbg !8814
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.gpio_desc* @gpiochip_request_own_desc(%struct.gpio_chip* %gc, i32 %hwnum, i8* %label, i32 %lflags, i32 %dflags) #0 !dbg !8815 {
entry:
  %retval = alloca %struct.gpio_desc*, align 8
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %hwnum.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %lflags.addr = alloca i32, align 4
  %dflags.addr = alloca i32, align 4
  %desc = alloca %struct.gpio_desc*, align 8
  %ret = alloca i32, align 4
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !8818, metadata !DIExpression()), !dbg !8819
  store i32 %hwnum, i32* %hwnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hwnum.addr, metadata !8820, metadata !DIExpression()), !dbg !8821
  store i8* %label, i8** %label.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %label.addr, metadata !8822, metadata !DIExpression()), !dbg !8823
  store i32 %lflags, i32* %lflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lflags.addr, metadata !8824, metadata !DIExpression()), !dbg !8825
  store i32 %dflags, i32* %dflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dflags.addr, metadata !8826, metadata !DIExpression()), !dbg !8827
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc, metadata !8828, metadata !DIExpression()), !dbg !8829
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8830
  %1 = load i32, i32* %hwnum.addr, align 4, !dbg !8831
  %call = call %struct.gpio_desc* @gpiochip_get_desc(%struct.gpio_chip* %0, i32 %1) #11, !dbg !8832
  store %struct.gpio_desc* %call, %struct.gpio_desc** %desc, align 8, !dbg !8829
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8833, metadata !DIExpression()), !dbg !8834
  %2 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !8835
  %3 = bitcast %struct.gpio_desc* %2 to i8*, !dbg !8835
  %call1 = call zeroext i1 @IS_ERR(i8* %3) #11, !dbg !8837
  br i1 %call1, label %if.then, label %if.end, !dbg !8838

if.then:                                          ; preds = %entry
  %4 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8839
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %4, i32 0, i32 1, !dbg !8839
  %5 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !8839
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %5, i32 0, i32 1, !dbg !8839
  %6 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8839
  %label2 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %6, i32 0, i32 0, !dbg !8839
  %7 = load i8*, i8** %label2, align 8, !dbg !8839
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14, i64 0, i64 0), i8* %7) #13, !dbg !8839
  %8 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !8841
  store %struct.gpio_desc* %8, %struct.gpio_desc** %retval, align 8, !dbg !8842
  br label %return, !dbg !8842

if.end:                                           ; preds = %entry
  %9 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !8843
  %10 = load i8*, i8** %label.addr, align 8, !dbg !8844
  %call3 = call i32 @gpiod_request_commit(%struct.gpio_desc* %9, i8* %10) #11, !dbg !8845
  store i32 %call3, i32* %ret, align 4, !dbg !8846
  %11 = load i32, i32* %ret, align 4, !dbg !8847
  %cmp = icmp slt i32 %11, 0, !dbg !8849
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !8850

if.then4:                                         ; preds = %if.end
  %12 = load i32, i32* %ret, align 4, !dbg !8851
  %conv = sext i32 %12 to i64, !dbg !8851
  %call5 = call i8* @ERR_PTR(i64 %conv) #11, !dbg !8852
  %13 = bitcast i8* %call5 to %struct.gpio_desc*, !dbg !8852
  store %struct.gpio_desc* %13, %struct.gpio_desc** %retval, align 8, !dbg !8853
  br label %return, !dbg !8853

if.end6:                                          ; preds = %if.end
  %14 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !8854
  %15 = load i8*, i8** %label.addr, align 8, !dbg !8855
  %16 = load i32, i32* %lflags.addr, align 4, !dbg !8856
  %conv7 = zext i32 %16 to i64, !dbg !8856
  %17 = load i32, i32* %dflags.addr, align 4, !dbg !8857
  %call8 = call i32 @gpiod_configure_flags(%struct.gpio_desc* %14, i8* %15, i64 %conv7, i32 %17) #11, !dbg !8858
  store i32 %call8, i32* %ret, align 4, !dbg !8859
  %18 = load i32, i32* %ret, align 4, !dbg !8860
  %tobool = icmp ne i32 %18, 0, !dbg !8860
  br i1 %tobool, label %if.then9, label %if.end16, !dbg !8862

if.then9:                                         ; preds = %if.end6
  %19 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8863
  %gpiodev10 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %19, i32 0, i32 1, !dbg !8863
  %20 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev10, align 8, !dbg !8863
  %dev11 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %20, i32 0, i32 1, !dbg !8863
  %21 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !8863
  %label12 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %21, i32 0, i32 0, !dbg !8863
  %22 = load i8*, i8** %label12, align 8, !dbg !8863
  %23 = load i8*, i8** %label.addr, align 8, !dbg !8863
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev11, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.15, i64 0, i64 0), i8* %22, i8* %23) #13, !dbg !8863
  %24 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !8865
  %call13 = call zeroext i1 @gpiod_free_commit(%struct.gpio_desc* %24) #11, !dbg !8866
  %25 = load i32, i32* %ret, align 4, !dbg !8867
  %conv14 = sext i32 %25 to i64, !dbg !8867
  %call15 = call i8* @ERR_PTR(i64 %conv14) #11, !dbg !8868
  %26 = bitcast i8* %call15 to %struct.gpio_desc*, !dbg !8868
  store %struct.gpio_desc* %26, %struct.gpio_desc** %retval, align 8, !dbg !8869
  br label %return, !dbg !8869

if.end16:                                         ; preds = %if.end6
  %27 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !8870
  store %struct.gpio_desc* %27, %struct.gpio_desc** %retval, align 8, !dbg !8871
  br label %return, !dbg !8871

return:                                           ; preds = %if.end16, %if.then9, %if.then4, %if.then
  %28 = load %struct.gpio_desc*, %struct.gpio_desc** %retval, align 8, !dbg !8872
  ret %struct.gpio_desc* %28, !dbg !8872
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_configure_flags(%struct.gpio_desc* %desc, i8* %con_id, i64 %lflags, i32 %dflags) #0 !dbg !8873 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %con_id.addr = alloca i8*, align 8
  %lflags.addr = alloca i64, align 8
  %dflags.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !8876, metadata !DIExpression()), !dbg !8877
  store i8* %con_id, i8** %con_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con_id.addr, metadata !8878, metadata !DIExpression()), !dbg !8879
  store i64 %lflags, i64* %lflags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %lflags.addr, metadata !8880, metadata !DIExpression()), !dbg !8881
  store i32 %dflags, i32* %dflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dflags.addr, metadata !8882, metadata !DIExpression()), !dbg !8883
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8884, metadata !DIExpression()), !dbg !8885
  %0 = load i64, i64* %lflags.addr, align 8, !dbg !8886
  %and = and i64 %0, 1, !dbg !8888
  %tobool = icmp ne i64 %and, 0, !dbg !8888
  br i1 %tobool, label %if.then, label %if.end, !dbg !8889

if.then:                                          ; preds = %entry
  %1 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8890
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %1, i32 0, i32 1, !dbg !8891
  call void @set_bit(i64 6, i64* %flags) #11, !dbg !8892
  br label %if.end, !dbg !8892

if.end:                                           ; preds = %if.then, %entry
  %2 = load i64, i64* %lflags.addr, align 8, !dbg !8893
  %and1 = and i64 %2, 2, !dbg !8895
  %tobool2 = icmp ne i64 %and1, 0, !dbg !8895
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !8896

if.then3:                                         ; preds = %if.end
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8897
  %flags4 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %3, i32 0, i32 1, !dbg !8898
  call void @set_bit(i64 7, i64* %flags4) #11, !dbg !8899
  br label %if.end12, !dbg !8899

if.else:                                          ; preds = %if.end
  %4 = load i32, i32* %dflags.addr, align 4, !dbg !8900
  %conv = zext i32 %4 to i64, !dbg !8900
  %and5 = and i64 %conv, 8, !dbg !8902
  %tobool6 = icmp ne i64 %and5, 0, !dbg !8902
  br i1 %tobool6, label %if.then7, label %if.end11, !dbg !8903

if.then7:                                         ; preds = %if.else
  %5 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8904
  %flags8 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %5, i32 0, i32 1, !dbg !8906
  call void @set_bit(i64 7, i64* %flags8) #11, !dbg !8907
  %6 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8908
  %call = call i32 @desc_to_gpio(%struct.gpio_desc* %6) #11, !dbg !8908
  %7 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8908
  %label = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %7, i32 0, i32 2, !dbg !8908
  %8 = load i8*, i8** %label, align 8, !dbg !8908
  %tobool9 = icmp ne i8* %8, null, !dbg !8908
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !8908

cond.true:                                        ; preds = %if.then7
  br label %cond.end, !dbg !8908

cond.false:                                       ; preds = %if.then7
  br label %cond.end, !dbg !8908

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %8, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), %cond.false ], !dbg !8908
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.26, i64 0, i64 0), i32 %call, i8* %cond) #13, !dbg !8908
  br label %if.end11, !dbg !8909

if.end11:                                         ; preds = %cond.end, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then3
  %9 = load i64, i64* %lflags.addr, align 8, !dbg !8910
  %and13 = and i64 %9, 4, !dbg !8912
  %tobool14 = icmp ne i64 %and13, 0, !dbg !8912
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !8913

if.then15:                                        ; preds = %if.end12
  %10 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8914
  %flags16 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %10, i32 0, i32 1, !dbg !8915
  call void @set_bit(i64 8, i64* %flags16) #11, !dbg !8916
  br label %if.end17, !dbg !8916

if.end17:                                         ; preds = %if.then15, %if.end12
  %11 = load i64, i64* %lflags.addr, align 8, !dbg !8917
  %and18 = and i64 %11, 16, !dbg !8919
  %tobool19 = icmp ne i64 %and18, 0, !dbg !8919
  br i1 %tobool19, label %land.lhs.true, label %if.end31, !dbg !8920

land.lhs.true:                                    ; preds = %if.end17
  %12 = load i64, i64* %lflags.addr, align 8, !dbg !8921
  %and20 = and i64 %12, 32, !dbg !8922
  %tobool21 = icmp ne i64 %and20, 0, !dbg !8922
  br i1 %tobool21, label %if.then22, label %if.end31, !dbg !8923

if.then22:                                        ; preds = %land.lhs.true
  %13 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8924
  %call23 = call i32 @desc_to_gpio(%struct.gpio_desc* %13) #11, !dbg !8924
  %14 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8924
  %label24 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %14, i32 0, i32 2, !dbg !8924
  %15 = load i8*, i8** %label24, align 8, !dbg !8924
  %tobool25 = icmp ne i8* %15, null, !dbg !8924
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !8924

cond.true26:                                      ; preds = %if.then22
  br label %cond.end28, !dbg !8924

cond.false27:                                     ; preds = %if.then22
  br label %cond.end28, !dbg !8924

cond.end28:                                       ; preds = %cond.false27, %cond.true26
  %cond29 = phi i8* [ %15, %cond.true26 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), %cond.false27 ], !dbg !8924
  %call30 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.27, i64 0, i64 0), i32 %call23, i8* %cond29) #13, !dbg !8924
  store i32 -22, i32* %retval, align 4, !dbg !8926
  br label %return, !dbg !8926

if.end31:                                         ; preds = %land.lhs.true, %if.end17
  %16 = load i64, i64* %lflags.addr, align 8, !dbg !8927
  %and32 = and i64 %16, 16, !dbg !8929
  %tobool33 = icmp ne i64 %and32, 0, !dbg !8929
  br i1 %tobool33, label %if.then34, label %if.else36, !dbg !8930

if.then34:                                        ; preds = %if.end31
  %17 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8931
  %flags35 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %17, i32 0, i32 1, !dbg !8932
  call void @set_bit(i64 13, i64* %flags35) #11, !dbg !8933
  br label %if.end42, !dbg !8933

if.else36:                                        ; preds = %if.end31
  %18 = load i64, i64* %lflags.addr, align 8, !dbg !8934
  %and37 = and i64 %18, 32, !dbg !8936
  %tobool38 = icmp ne i64 %and37, 0, !dbg !8936
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !8937

if.then39:                                        ; preds = %if.else36
  %19 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8938
  %flags40 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %19, i32 0, i32 1, !dbg !8939
  call void @set_bit(i64 14, i64* %flags40) #11, !dbg !8940
  br label %if.end41, !dbg !8940

if.end41:                                         ; preds = %if.then39, %if.else36
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then34
  %20 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8941
  %21 = load i64, i64* %lflags.addr, align 8, !dbg !8942
  %and43 = and i64 %21, 8, !dbg !8943
  %tobool44 = icmp ne i64 %and43, 0, !dbg !8944
  %call45 = call i32 @gpiod_set_transitory(%struct.gpio_desc* %20, i1 zeroext %tobool44) #11, !dbg !8945
  store i32 %call45, i32* %ret, align 4, !dbg !8946
  %22 = load i32, i32* %ret, align 4, !dbg !8947
  %cmp = icmp slt i32 %22, 0, !dbg !8949
  br i1 %cmp, label %if.then47, label %if.end48, !dbg !8950

if.then47:                                        ; preds = %if.end42
  %23 = load i32, i32* %ret, align 4, !dbg !8951
  store i32 %23, i32* %retval, align 4, !dbg !8952
  br label %return, !dbg !8952

if.end48:                                         ; preds = %if.end42
  %24 = load i32, i32* %dflags.addr, align 4, !dbg !8953
  %conv49 = zext i32 %24 to i64, !dbg !8953
  %and50 = and i64 %conv49, 1, !dbg !8955
  %tobool51 = icmp ne i64 %and50, 0, !dbg !8955
  br i1 %tobool51, label %if.end53, label %if.then52, !dbg !8956

if.then52:                                        ; preds = %if.end48
  store i32 0, i32* %tmp, align 4, !dbg !8957
  %25 = load i32, i32* %tmp, align 4, !dbg !8961
  store i32 0, i32* %retval, align 4, !dbg !8962
  br label %return, !dbg !8962

if.end53:                                         ; preds = %if.end48
  %26 = load i32, i32* %dflags.addr, align 4, !dbg !8963
  %conv54 = zext i32 %26 to i64, !dbg !8963
  %and55 = and i64 %conv54, 2, !dbg !8965
  %tobool56 = icmp ne i64 %and55, 0, !dbg !8965
  br i1 %tobool56, label %if.then57, label %if.else63, !dbg !8966

if.then57:                                        ; preds = %if.end53
  %27 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8967
  %28 = load i32, i32* %dflags.addr, align 4, !dbg !8968
  %conv58 = zext i32 %28 to i64, !dbg !8968
  %and59 = and i64 %conv58, 4, !dbg !8969
  %tobool60 = icmp ne i64 %and59, 0, !dbg !8970
  %lnot = xor i1 %tobool60, true, !dbg !8970
  %lnot61 = xor i1 %lnot, true, !dbg !8971
  %lnot.ext = zext i1 %lnot61 to i32, !dbg !8971
  %call62 = call i32 @gpiod_direction_output(%struct.gpio_desc* %27, i32 %lnot.ext) #11, !dbg !8972
  store i32 %call62, i32* %ret, align 4, !dbg !8973
  br label %if.end65, !dbg !8974

if.else63:                                        ; preds = %if.end53
  %29 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8975
  %call64 = call i32 @gpiod_direction_input(%struct.gpio_desc* %29) #11, !dbg !8976
  store i32 %call64, i32* %ret, align 4, !dbg !8977
  br label %if.end65

if.end65:                                         ; preds = %if.else63, %if.then57
  %30 = load i32, i32* %ret, align 4, !dbg !8978
  store i32 %30, i32* %retval, align 4, !dbg !8979
  br label %return, !dbg !8979

return:                                           ; preds = %if.end65, %if.then52, %if.then47, %cond.end28
  %31 = load i32, i32* %retval, align 4, !dbg !8980
  ret i32 %31, !dbg !8980
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @gpiochip_free_own_desc(%struct.gpio_desc* %desc) #0 !dbg !8981 {
entry:
  %desc.addr = alloca %struct.gpio_desc*, align 8
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !8982, metadata !DIExpression()), !dbg !8983
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8984
  %tobool = icmp ne %struct.gpio_desc* %0, null, !dbg !8984
  br i1 %tobool, label %if.then, label %if.end, !dbg !8986

if.then:                                          ; preds = %entry
  %1 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !8987
  %call = call zeroext i1 @gpiod_free_commit(%struct.gpio_desc* %1) #11, !dbg !8988
  br label %if.end, !dbg !8988

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8989
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_direction_input(%struct.gpio_desc* %desc) #0 !dbg !8990 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %gc = alloca %struct.gpio_chip*, align 8
  %ret = alloca i32, align 4
  %__valid = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !8991, metadata !DIExpression()), !dbg !8992
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !8993, metadata !DIExpression()), !dbg !8994
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8995, metadata !DIExpression()), !dbg !8996
  store i32 0, i32* %ret, align 4, !dbg !8996
  br label %do.body, !dbg !8997

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__valid, metadata !8998, metadata !DIExpression()), !dbg !9000
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9000
  %call = call i32 @validate_desc(%struct.gpio_desc* %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.gpiod_direction_input, i64 0, i64 0)) #11, !dbg !9000
  store i32 %call, i32* %__valid, align 4, !dbg !9000
  %1 = load i32, i32* %__valid, align 4, !dbg !9001
  %cmp = icmp sle i32 %1, 0, !dbg !9001
  br i1 %cmp, label %if.then, label %if.end, !dbg !9000

if.then:                                          ; preds = %do.body
  %2 = load i32, i32* %__valid, align 4, !dbg !9001
  store i32 %2, i32* %retval, align 4, !dbg !9001
  br label %return, !dbg !9001

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !9000

do.end:                                           ; preds = %if.end
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9003
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %3, i32 0, i32 0, !dbg !9004
  %4 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !9004
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %4, i32 0, i32 5, !dbg !9005
  %5 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !9005
  store %struct.gpio_chip* %5, %struct.gpio_chip** %gc, align 8, !dbg !9006
  %6 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9007
  %get = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %6, i32 0, i32 9, !dbg !9009
  %7 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %get, align 8, !dbg !9009
  %tobool = icmp ne i32 (%struct.gpio_chip*, i32)* %7, null, !dbg !9007
  br i1 %tobool, label %if.end6, label %land.lhs.true, !dbg !9010

land.lhs.true:                                    ; preds = %do.end
  %8 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9011
  %direction_input = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %8, i32 0, i32 7, !dbg !9012
  %9 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %direction_input, align 8, !dbg !9012
  %tobool1 = icmp ne i32 (%struct.gpio_chip*, i32)* %9, null, !dbg !9011
  br i1 %tobool1, label %if.then2, label %if.end6, !dbg !9013

if.then2:                                         ; preds = %land.lhs.true
  %10 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9014
  %call3 = call i32 @desc_to_gpio(%struct.gpio_desc* %10) #11, !dbg !9014
  %11 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9014
  %label = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %11, i32 0, i32 2, !dbg !9014
  %12 = load i8*, i8** %label, align 8, !dbg !9014
  %tobool4 = icmp ne i8* %12, null, !dbg !9014
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !9014

cond.true:                                        ; preds = %if.then2
  br label %cond.end, !dbg !9014

cond.false:                                       ; preds = %if.then2
  br label %cond.end, !dbg !9014

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %12, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), %cond.false ], !dbg !9014
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.16, i64 0, i64 0), i32 %call3, i8* %cond, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.gpiod_direction_input, i64 0, i64 0)) #13, !dbg !9014
  store i32 -5, i32* %retval, align 4, !dbg !9016
  br label %return, !dbg !9016

if.end6:                                          ; preds = %land.lhs.true, %do.end
  %13 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9017
  %direction_input7 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %13, i32 0, i32 7, !dbg !9019
  %14 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %direction_input7, align 8, !dbg !9019
  %tobool8 = icmp ne i32 (%struct.gpio_chip*, i32)* %14, null, !dbg !9017
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !9020

if.then9:                                         ; preds = %if.end6
  %15 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9021
  %direction_input10 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %15, i32 0, i32 7, !dbg !9023
  %16 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %direction_input10, align 8, !dbg !9023
  %17 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9024
  %18 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9025
  %call11 = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %18) #11, !dbg !9026
  %call12 = call i32 %16(%struct.gpio_chip* %17, i32 %call11) #11, !dbg !9021
  store i32 %call12, i32* %ret, align 4, !dbg !9027
  br label %if.end29, !dbg !9028

if.else:                                          ; preds = %if.end6
  %19 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9029
  %get_direction = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %19, i32 0, i32 6, !dbg !9031
  %20 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %get_direction, align 8, !dbg !9031
  %tobool13 = icmp ne i32 (%struct.gpio_chip*, i32)* %20, null, !dbg !9029
  br i1 %tobool13, label %land.lhs.true14, label %if.end28, !dbg !9032

land.lhs.true14:                                  ; preds = %if.else
  %21 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9033
  %get_direction15 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %21, i32 0, i32 6, !dbg !9034
  %22 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %get_direction15, align 8, !dbg !9034
  %23 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9035
  %24 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9036
  %call16 = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %24) #11, !dbg !9037
  %call17 = call i32 %22(%struct.gpio_chip* %23, i32 %call16) #11, !dbg !9033
  %cmp18 = icmp ne i32 %call17, 1, !dbg !9038
  br i1 %cmp18, label %if.then19, label %if.end28, !dbg !9039

if.then19:                                        ; preds = %land.lhs.true14
  %25 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9040
  %call20 = call i32 @desc_to_gpio(%struct.gpio_desc* %25) #11, !dbg !9040
  %26 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9040
  %label21 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %26, i32 0, i32 2, !dbg !9040
  %27 = load i8*, i8** %label21, align 8, !dbg !9040
  %tobool22 = icmp ne i8* %27, null, !dbg !9040
  br i1 %tobool22, label %cond.true23, label %cond.false24, !dbg !9040

cond.true23:                                      ; preds = %if.then19
  br label %cond.end25, !dbg !9040

cond.false24:                                     ; preds = %if.then19
  br label %cond.end25, !dbg !9040

cond.end25:                                       ; preds = %cond.false24, %cond.true23
  %cond26 = phi i8* [ %27, %cond.true23 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), %cond.false24 ], !dbg !9040
  %call27 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.18, i64 0, i64 0), i32 %call20, i8* %cond26, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.gpiod_direction_input, i64 0, i64 0)) #13, !dbg !9040
  store i32 -5, i32* %retval, align 4, !dbg !9042
  br label %return, !dbg !9042

if.end28:                                         ; preds = %land.lhs.true14, %if.else
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then9
  %28 = load i32, i32* %ret, align 4, !dbg !9043
  %cmp30 = icmp eq i32 %28, 0, !dbg !9045
  br i1 %cmp30, label %if.then31, label %if.end33, !dbg !9046

if.then31:                                        ; preds = %if.end29
  %29 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9047
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %29, i32 0, i32 1, !dbg !9049
  call void @clear_bit(i64 1, i64* %flags) #11, !dbg !9050
  %30 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9051
  %call32 = call i32 @gpio_set_bias(%struct.gpio_desc* %30) #11, !dbg !9052
  store i32 %call32, i32* %ret, align 4, !dbg !9053
  br label %if.end33, !dbg !9054

if.end33:                                         ; preds = %if.then31, %if.end29
  %31 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9055
  %call34 = call i32 @desc_to_gpio(%struct.gpio_desc* %31) #11, !dbg !9056
  %32 = load i32, i32* %ret, align 4, !dbg !9057
  call void @trace_gpio_direction(i32 %call34, i32 1, i32 %32) #11, !dbg !9058
  %33 = load i32, i32* %ret, align 4, !dbg !9059
  store i32 %33, i32* %retval, align 4, !dbg !9060
  br label %return, !dbg !9060

return:                                           ; preds = %if.end33, %cond.end25, %cond.end, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !9061
  ret i32 %34, !dbg !9061
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #0 !dbg !9062 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !9066, metadata !DIExpression()), !dbg !9068
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !9070, metadata !DIExpression()), !dbg !9071
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !9072, metadata !DIExpression()), !dbg !9074
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9076, metadata !DIExpression()), !dbg !9077
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !9078, metadata !DIExpression()), !dbg !9079
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !9080, metadata !DIExpression()), !dbg !9081
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !9082
  %1 = load i64, i64* %nr.addr, align 8, !dbg !9083
  %div = sdiv i64 %1, 64, !dbg !9083
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !9084
  %2 = bitcast i64* %add.ptr to i8*, !dbg !9082
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !9085
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9086
  %conv.i = trunc i64 %4 to i32, !dbg !9086
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !9087
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !9088
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !9088
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #12, !dbg !9088
  %7 = load i64, i64* %nr.addr, align 8, !dbg !9089
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !9090
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !9091
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !9093
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !9094

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !9095
  %12 = bitcast i64* %11 to i8*, !dbg !9095
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !9095
  %shr.i = ashr i64 %13, 3, !dbg !9095
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !9095
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !9097
  %and.i = and i64 %14, 7, !dbg !9097
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !9097
  %shl.i = shl i32 1, %sh_prom.i, !dbg !9097
  %neg.i = xor i32 %shl.i, -1, !dbg !9098
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #7, !dbg !9099, !srcloc !9100
  br label %arch_clear_bit.exit, !dbg !9101

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !9102
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !9104
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #7, !dbg !9105, !srcloc !9106
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !9107
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpio_set_bias(%struct.gpio_desc* %desc) #0 !dbg !9108 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %bias = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !9109, metadata !DIExpression()), !dbg !9110
  call void @llvm.dbg.declare(metadata i32* %bias, metadata !9111, metadata !DIExpression()), !dbg !9112
  store i32 0, i32* %bias, align 4, !dbg !9112
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9113, metadata !DIExpression()), !dbg !9114
  store i32 0, i32* %ret, align 4, !dbg !9114
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9115
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %0, i32 0, i32 1, !dbg !9117
  %call = call zeroext i1 @test_bit(i64 15, i64* %flags) #11, !dbg !9118
  br i1 %call, label %if.then, label %if.else, !dbg !9119

if.then:                                          ; preds = %entry
  store i32 1, i32* %bias, align 4, !dbg !9120
  br label %if.end9, !dbg !9121

if.else:                                          ; preds = %entry
  %1 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9122
  %flags1 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %1, i32 0, i32 1, !dbg !9124
  %call2 = call zeroext i1 @test_bit(i64 13, i64* %flags1) #11, !dbg !9125
  br i1 %call2, label %if.then3, label %if.else4, !dbg !9126

if.then3:                                         ; preds = %if.else
  store i32 5, i32* %bias, align 4, !dbg !9127
  br label %if.end8, !dbg !9128

if.else4:                                         ; preds = %if.else
  %2 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9129
  %flags5 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %2, i32 0, i32 1, !dbg !9131
  %call6 = call zeroext i1 @test_bit(i64 14, i64* %flags5) #11, !dbg !9132
  br i1 %call6, label %if.then7, label %if.end, !dbg !9133

if.then7:                                         ; preds = %if.else4
  store i32 3, i32* %bias, align 4, !dbg !9134
  br label %if.end, !dbg !9135

if.end:                                           ; preds = %if.then7, %if.else4
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then3
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.then
  %3 = load i32, i32* %bias, align 4, !dbg !9136
  %tobool = icmp ne i32 %3, 0, !dbg !9136
  br i1 %tobool, label %if.then10, label %if.end14, !dbg !9138

if.then10:                                        ; preds = %if.end9
  %4 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9139
  %5 = load i32, i32* %bias, align 4, !dbg !9141
  %call11 = call i32 @gpio_set_config(%struct.gpio_desc* %4, i32 %5) #11, !dbg !9142
  store i32 %call11, i32* %ret, align 4, !dbg !9143
  %6 = load i32, i32* %ret, align 4, !dbg !9144
  %cmp = icmp ne i32 %6, -524, !dbg !9146
  br i1 %cmp, label %if.then12, label %if.end13, !dbg !9147

if.then12:                                        ; preds = %if.then10
  %7 = load i32, i32* %ret, align 4, !dbg !9148
  store i32 %7, i32* %retval, align 4, !dbg !9149
  br label %return, !dbg !9149

if.end13:                                         ; preds = %if.then10
  br label %if.end14, !dbg !9150

if.end14:                                         ; preds = %if.end13, %if.end9
  store i32 0, i32* %retval, align 4, !dbg !9151
  br label %return, !dbg !9151

return:                                           ; preds = %if.end14, %if.then12
  %8 = load i32, i32* %retval, align 4, !dbg !9152
  ret i32 %8, !dbg !9152
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_gpio_direction(i32 %gpio, i32 %in, i32 %err) #0 !dbg !9153 {
entry:
  %gpio.addr = alloca i32, align 4
  %in.addr = alloca i32, align 4
  %err.addr = alloca i32, align 4
  store i32 %gpio, i32* %gpio.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gpio.addr, metadata !9157, metadata !DIExpression()), !dbg !9158
  store i32 %in, i32* %in.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in.addr, metadata !9159, metadata !DIExpression()), !dbg !9158
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !9160, metadata !DIExpression()), !dbg !9158
  ret void, !dbg !9158
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_direction_output_raw(%struct.gpio_desc* %desc, i32 %value) #0 !dbg !9161 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %value.addr = alloca i32, align 4
  %__valid = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !9164, metadata !DIExpression()), !dbg !9165
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !9166, metadata !DIExpression()), !dbg !9167
  br label %do.body, !dbg !9168

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__valid, metadata !9169, metadata !DIExpression()), !dbg !9171
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9171
  %call = call i32 @validate_desc(%struct.gpio_desc* %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.gpiod_direction_output_raw, i64 0, i64 0)) #11, !dbg !9171
  store i32 %call, i32* %__valid, align 4, !dbg !9171
  %1 = load i32, i32* %__valid, align 4, !dbg !9172
  %cmp = icmp sle i32 %1, 0, !dbg !9172
  br i1 %cmp, label %if.then, label %if.end, !dbg !9171

if.then:                                          ; preds = %do.body
  %2 = load i32, i32* %__valid, align 4, !dbg !9172
  store i32 %2, i32* %retval, align 4, !dbg !9172
  br label %return, !dbg !9172

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !9171

do.end:                                           ; preds = %if.end
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9174
  %4 = load i32, i32* %value.addr, align 4, !dbg !9175
  %call1 = call i32 @gpiod_direction_output_raw_commit(%struct.gpio_desc* %3, i32 %4) #11, !dbg !9176
  store i32 %call1, i32* %retval, align 4, !dbg !9177
  br label %return, !dbg !9177

return:                                           ; preds = %do.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !9178
  ret i32 %5, !dbg !9178
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpiod_direction_output_raw_commit(%struct.gpio_desc* %desc, i32 %value) #0 !dbg !9179 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %value.addr = alloca i32, align 4
  %gc = alloca %struct.gpio_chip*, align 8
  %val = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !9180, metadata !DIExpression()), !dbg !9181
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !9182, metadata !DIExpression()), !dbg !9183
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !9184, metadata !DIExpression()), !dbg !9185
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9186
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %0, i32 0, i32 0, !dbg !9187
  %1 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !9187
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %1, i32 0, i32 5, !dbg !9188
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !9188
  store %struct.gpio_chip* %2, %struct.gpio_chip** %gc, align 8, !dbg !9185
  call void @llvm.dbg.declare(metadata i32* %val, metadata !9189, metadata !DIExpression()), !dbg !9190
  %3 = load i32, i32* %value.addr, align 4, !dbg !9191
  %tobool = icmp ne i32 %3, 0, !dbg !9192
  %lnot = xor i1 %tobool, true, !dbg !9192
  %lnot1 = xor i1 %lnot, true, !dbg !9193
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9193
  store i32 %lnot.ext, i32* %val, align 4, !dbg !9190
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9194, metadata !DIExpression()), !dbg !9195
  store i32 0, i32* %ret, align 4, !dbg !9195
  %4 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9196
  %set = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %4, i32 0, i32 11, !dbg !9198
  %5 = load void (%struct.gpio_chip*, i32, i32)*, void (%struct.gpio_chip*, i32, i32)** %set, align 8, !dbg !9198
  %tobool2 = icmp ne void (%struct.gpio_chip*, i32, i32)* %5, null, !dbg !9196
  br i1 %tobool2, label %if.end, label %land.lhs.true, !dbg !9199

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9200
  %direction_output = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %6, i32 0, i32 8, !dbg !9201
  %7 = load i32 (%struct.gpio_chip*, i32, i32)*, i32 (%struct.gpio_chip*, i32, i32)** %direction_output, align 8, !dbg !9201
  %tobool3 = icmp ne i32 (%struct.gpio_chip*, i32, i32)* %7, null, !dbg !9200
  br i1 %tobool3, label %if.end, label %if.then, !dbg !9202

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9203
  %call = call i32 @desc_to_gpio(%struct.gpio_desc* %8) #11, !dbg !9203
  %9 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9203
  %label = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %9, i32 0, i32 2, !dbg !9203
  %10 = load i8*, i8** %label, align 8, !dbg !9203
  %tobool4 = icmp ne i8* %10, null, !dbg !9203
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !9203

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !9203

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !9203

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %10, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), %cond.false ], !dbg !9203
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.59, i64 0, i64 0), i32 %call, i8* %cond, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.gpiod_direction_output_raw_commit, i64 0, i64 0)) #13, !dbg !9203
  store i32 -5, i32* %retval, align 4, !dbg !9205
  br label %return, !dbg !9205

if.end:                                           ; preds = %land.lhs.true, %entry
  %11 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9206
  %direction_output6 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %11, i32 0, i32 8, !dbg !9208
  %12 = load i32 (%struct.gpio_chip*, i32, i32)*, i32 (%struct.gpio_chip*, i32, i32)** %direction_output6, align 8, !dbg !9208
  %tobool7 = icmp ne i32 (%struct.gpio_chip*, i32, i32)* %12, null, !dbg !9206
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !9209

if.then8:                                         ; preds = %if.end
  %13 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9210
  %direction_output9 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %13, i32 0, i32 8, !dbg !9212
  %14 = load i32 (%struct.gpio_chip*, i32, i32)*, i32 (%struct.gpio_chip*, i32, i32)** %direction_output9, align 8, !dbg !9212
  %15 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9213
  %16 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9214
  %call10 = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %16) #11, !dbg !9215
  %17 = load i32, i32* %val, align 4, !dbg !9216
  %call11 = call i32 %14(%struct.gpio_chip* %15, i32 %call10, i32 %17) #11, !dbg !9210
  store i32 %call11, i32* %ret, align 4, !dbg !9217
  br label %if.end30, !dbg !9218

if.else:                                          ; preds = %if.end
  %18 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9219
  %get_direction = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %18, i32 0, i32 6, !dbg !9222
  %19 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %get_direction, align 8, !dbg !9222
  %tobool12 = icmp ne i32 (%struct.gpio_chip*, i32)* %19, null, !dbg !9219
  br i1 %tobool12, label %land.lhs.true13, label %if.end27, !dbg !9223

land.lhs.true13:                                  ; preds = %if.else
  %20 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9224
  %get_direction14 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %20, i32 0, i32 6, !dbg !9225
  %21 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %get_direction14, align 8, !dbg !9225
  %22 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9226
  %23 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9227
  %call15 = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %23) #11, !dbg !9228
  %call16 = call i32 %21(%struct.gpio_chip* %22, i32 %call15) #11, !dbg !9224
  %tobool17 = icmp ne i32 %call16, 0, !dbg !9224
  br i1 %tobool17, label %if.then18, label %if.end27, !dbg !9229

if.then18:                                        ; preds = %land.lhs.true13
  %24 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9230
  %call19 = call i32 @desc_to_gpio(%struct.gpio_desc* %24) #11, !dbg !9230
  %25 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9230
  %label20 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %25, i32 0, i32 2, !dbg !9230
  %26 = load i8*, i8** %label20, align 8, !dbg !9230
  %tobool21 = icmp ne i8* %26, null, !dbg !9230
  br i1 %tobool21, label %cond.true22, label %cond.false23, !dbg !9230

cond.true22:                                      ; preds = %if.then18
  br label %cond.end24, !dbg !9230

cond.false23:                                     ; preds = %if.then18
  br label %cond.end24, !dbg !9230

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond25 = phi i8* [ %26, %cond.true22 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), %cond.false23 ], !dbg !9230
  %call26 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.60, i64 0, i64 0), i32 %call19, i8* %cond25, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.gpiod_direction_output_raw_commit, i64 0, i64 0)) #13, !dbg !9230
  store i32 -5, i32* %retval, align 4, !dbg !9232
  br label %return, !dbg !9232

if.end27:                                         ; preds = %land.lhs.true13, %if.else
  %27 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9233
  %set28 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %27, i32 0, i32 11, !dbg !9234
  %28 = load void (%struct.gpio_chip*, i32, i32)*, void (%struct.gpio_chip*, i32, i32)** %set28, align 8, !dbg !9234
  %29 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9235
  %30 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9236
  %call29 = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %30) #11, !dbg !9237
  %31 = load i32, i32* %val, align 4, !dbg !9238
  call void %28(%struct.gpio_chip* %29, i32 %call29, i32 %31) #11, !dbg !9233
  br label %if.end30

if.end30:                                         ; preds = %if.end27, %if.then8
  %32 = load i32, i32* %ret, align 4, !dbg !9239
  %tobool31 = icmp ne i32 %32, 0, !dbg !9239
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !9241

if.then32:                                        ; preds = %if.end30
  %33 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9242
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %33, i32 0, i32 1, !dbg !9243
  call void @set_bit(i64 1, i64* %flags) #11, !dbg !9244
  br label %if.end33, !dbg !9244

if.end33:                                         ; preds = %if.then32, %if.end30
  %34 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9245
  %call34 = call i32 @desc_to_gpio(%struct.gpio_desc* %34) #11, !dbg !9246
  %35 = load i32, i32* %val, align 4, !dbg !9247
  call void @trace_gpio_value(i32 %call34, i32 0, i32 %35) #11, !dbg !9248
  %36 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9249
  %call35 = call i32 @desc_to_gpio(%struct.gpio_desc* %36) #11, !dbg !9250
  %37 = load i32, i32* %ret, align 4, !dbg !9251
  call void @trace_gpio_direction(i32 %call35, i32 0, i32 %37) #11, !dbg !9252
  %38 = load i32, i32* %ret, align 4, !dbg !9253
  store i32 %38, i32* %retval, align 4, !dbg !9254
  br label %return, !dbg !9254

return:                                           ; preds = %if.end33, %cond.end24, %cond.end
  %39 = load i32, i32* %retval, align 4, !dbg !9255
  ret i32 %39, !dbg !9255
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_direction_output(%struct.gpio_desc* %desc, i32 %value) #0 !dbg !9256 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %value.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %__valid = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !9257, metadata !DIExpression()), !dbg !9258
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !9259, metadata !DIExpression()), !dbg !9260
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9261, metadata !DIExpression()), !dbg !9262
  br label %do.body, !dbg !9263

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__valid, metadata !9264, metadata !DIExpression()), !dbg !9266
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9266
  %call = call i32 @validate_desc(%struct.gpio_desc* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.gpiod_direction_output, i64 0, i64 0)) #11, !dbg !9266
  store i32 %call, i32* %__valid, align 4, !dbg !9266
  %1 = load i32, i32* %__valid, align 4, !dbg !9267
  %cmp = icmp sle i32 %1, 0, !dbg !9267
  br i1 %cmp, label %if.then, label %if.end, !dbg !9266

if.then:                                          ; preds = %do.body
  %2 = load i32, i32* %__valid, align 4, !dbg !9267
  store i32 %2, i32* %retval, align 4, !dbg !9267
  br label %return, !dbg !9267

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !9266

do.end:                                           ; preds = %if.end
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9269
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %3, i32 0, i32 1, !dbg !9271
  %call1 = call zeroext i1 @test_bit(i64 6, i64* %flags) #11, !dbg !9272
  br i1 %call1, label %if.then2, label %if.else, !dbg !9273

if.then2:                                         ; preds = %do.end
  %4 = load i32, i32* %value.addr, align 4, !dbg !9274
  %tobool = icmp ne i32 %4, 0, !dbg !9275
  %lnot = xor i1 %tobool, true, !dbg !9275
  %lnot.ext = zext i1 %lnot to i32, !dbg !9275
  store i32 %lnot.ext, i32* %value.addr, align 4, !dbg !9276
  br label %if.end8, !dbg !9277

if.else:                                          ; preds = %do.end
  %5 = load i32, i32* %value.addr, align 4, !dbg !9278
  %tobool3 = icmp ne i32 %5, 0, !dbg !9279
  %lnot4 = xor i1 %tobool3, true, !dbg !9279
  %lnot6 = xor i1 %lnot4, true, !dbg !9280
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !9280
  store i32 %lnot.ext7, i32* %value.addr, align 4, !dbg !9281
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then2
  %6 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9282
  %flags9 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %6, i32 0, i32 1, !dbg !9284
  %call10 = call zeroext i1 @test_bit(i64 9, i64* %flags9) #11, !dbg !9285
  br i1 %call10, label %land.lhs.true, label %if.end17, !dbg !9286

land.lhs.true:                                    ; preds = %if.end8
  %7 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9287
  %flags11 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %7, i32 0, i32 1, !dbg !9288
  %call12 = call zeroext i1 @test_bit(i64 10, i64* %flags11) #11, !dbg !9289
  br i1 %call12, label %if.then13, label %if.end17, !dbg !9290

if.then13:                                        ; preds = %land.lhs.true
  %8 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9291
  %call14 = call i32 @desc_to_gpio(%struct.gpio_desc* %8) #11, !dbg !9291
  %9 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9291
  %label = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %9, i32 0, i32 2, !dbg !9291
  %10 = load i8*, i8** %label, align 8, !dbg !9291
  %tobool15 = icmp ne i8* %10, null, !dbg !9291
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !9291

cond.true:                                        ; preds = %if.then13
  br label %cond.end, !dbg !9291

cond.false:                                       ; preds = %if.then13
  br label %cond.end, !dbg !9291

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %10, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), %cond.false ], !dbg !9291
  %call16 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.19, i64 0, i64 0), i32 %call14, i8* %cond, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.gpiod_direction_output, i64 0, i64 0)) #13, !dbg !9291
  store i32 -5, i32* %retval, align 4, !dbg !9293
  br label %return, !dbg !9293

if.end17:                                         ; preds = %land.lhs.true, %if.end8
  %11 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9294
  %flags18 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %11, i32 0, i32 1, !dbg !9296
  %call19 = call zeroext i1 @test_bit(i64 7, i64* %flags18) #11, !dbg !9297
  br i1 %call19, label %if.then20, label %if.else29, !dbg !9298

if.then20:                                        ; preds = %if.end17
  %12 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9299
  %call21 = call i32 @gpio_set_config(%struct.gpio_desc* %12, i32 6) #11, !dbg !9301
  store i32 %call21, i32* %ret, align 4, !dbg !9302
  %13 = load i32, i32* %ret, align 4, !dbg !9303
  %tobool22 = icmp ne i32 %13, 0, !dbg !9303
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !9305

if.then23:                                        ; preds = %if.then20
  br label %set_output_value, !dbg !9306

if.end24:                                         ; preds = %if.then20
  %14 = load i32, i32* %value.addr, align 4, !dbg !9307
  %tobool25 = icmp ne i32 %14, 0, !dbg !9307
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !9309

if.then26:                                        ; preds = %if.end24
  %15 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9310
  %call27 = call i32 @gpiod_direction_input(%struct.gpio_desc* %15) #11, !dbg !9312
  store i32 %call27, i32* %ret, align 4, !dbg !9313
  br label %set_output_flag, !dbg !9314

if.end28:                                         ; preds = %if.end24
  br label %if.end44, !dbg !9315

if.else29:                                        ; preds = %if.end17
  %16 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9316
  %flags30 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %16, i32 0, i32 1, !dbg !9318
  %call31 = call zeroext i1 @test_bit(i64 8, i64* %flags30) #11, !dbg !9319
  br i1 %call31, label %if.then32, label %if.else41, !dbg !9320

if.then32:                                        ; preds = %if.else29
  %17 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9321
  %call33 = call i32 @gpio_set_config(%struct.gpio_desc* %17, i32 7) #11, !dbg !9323
  store i32 %call33, i32* %ret, align 4, !dbg !9324
  %18 = load i32, i32* %ret, align 4, !dbg !9325
  %tobool34 = icmp ne i32 %18, 0, !dbg !9325
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !9327

if.then35:                                        ; preds = %if.then32
  br label %set_output_value, !dbg !9328

if.end36:                                         ; preds = %if.then32
  %19 = load i32, i32* %value.addr, align 4, !dbg !9329
  %tobool37 = icmp ne i32 %19, 0, !dbg !9329
  br i1 %tobool37, label %if.end40, label %if.then38, !dbg !9331

if.then38:                                        ; preds = %if.end36
  %20 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9332
  %call39 = call i32 @gpiod_direction_input(%struct.gpio_desc* %20) #11, !dbg !9334
  store i32 %call39, i32* %ret, align 4, !dbg !9335
  br label %set_output_flag, !dbg !9336

if.end40:                                         ; preds = %if.end36
  br label %if.end43, !dbg !9337

if.else41:                                        ; preds = %if.else29
  %21 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9338
  %call42 = call i32 @gpio_set_config(%struct.gpio_desc* %21, i32 8) #11, !dbg !9340
  br label %if.end43

if.end43:                                         ; preds = %if.else41, %if.end40
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end28
  br label %set_output_value, !dbg !9341

set_output_value:                                 ; preds = %if.end44, %if.then35, %if.then23
  call void @llvm.dbg.label(metadata !9342), !dbg !9343
  %22 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9344
  %call45 = call i32 @gpio_set_bias(%struct.gpio_desc* %22) #11, !dbg !9345
  store i32 %call45, i32* %ret, align 4, !dbg !9346
  %23 = load i32, i32* %ret, align 4, !dbg !9347
  %tobool46 = icmp ne i32 %23, 0, !dbg !9347
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !9349

if.then47:                                        ; preds = %set_output_value
  %24 = load i32, i32* %ret, align 4, !dbg !9350
  store i32 %24, i32* %retval, align 4, !dbg !9351
  br label %return, !dbg !9351

if.end48:                                         ; preds = %set_output_value
  %25 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9352
  %26 = load i32, i32* %value.addr, align 4, !dbg !9353
  %call49 = call i32 @gpiod_direction_output_raw_commit(%struct.gpio_desc* %25, i32 %26) #11, !dbg !9354
  store i32 %call49, i32* %retval, align 4, !dbg !9355
  br label %return, !dbg !9355

set_output_flag:                                  ; preds = %if.then38, %if.then26
  call void @llvm.dbg.label(metadata !9356), !dbg !9357
  %27 = load i32, i32* %ret, align 4, !dbg !9358
  %cmp50 = icmp eq i32 %27, 0, !dbg !9360
  br i1 %cmp50, label %if.then51, label %if.end53, !dbg !9361

if.then51:                                        ; preds = %set_output_flag
  %28 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9362
  %flags52 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %28, i32 0, i32 1, !dbg !9363
  call void @set_bit(i64 1, i64* %flags52) #11, !dbg !9364
  br label %if.end53, !dbg !9364

if.end53:                                         ; preds = %if.then51, %set_output_flag
  %29 = load i32, i32* %ret, align 4, !dbg !9365
  store i32 %29, i32* %retval, align 4, !dbg !9366
  br label %return, !dbg !9366

return:                                           ; preds = %if.end53, %if.end48, %if.then47, %cond.end, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !9367
  ret i32 %30, !dbg !9367
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpio_set_config(%struct.gpio_desc* %desc, i32 %mode) #0 !dbg !9368 {
entry:
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %mode.addr = alloca i32, align 4
  %gc = alloca %struct.gpio_chip*, align 8
  %config = alloca i64, align 8
  %arg = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !9371, metadata !DIExpression()), !dbg !9372
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !9373, metadata !DIExpression()), !dbg !9374
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !9375, metadata !DIExpression()), !dbg !9376
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9377
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %0, i32 0, i32 0, !dbg !9378
  %1 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !9378
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %1, i32 0, i32 5, !dbg !9379
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !9379
  store %struct.gpio_chip* %2, %struct.gpio_chip** %gc, align 8, !dbg !9376
  call void @llvm.dbg.declare(metadata i64* %config, metadata !9380, metadata !DIExpression()), !dbg !9381
  call void @llvm.dbg.declare(metadata i32* %arg, metadata !9382, metadata !DIExpression()), !dbg !9383
  %3 = load i32, i32* %mode.addr, align 4, !dbg !9384
  switch i32 %3, label %sw.default [
    i32 3, label %sw.bb
    i32 5, label %sw.bb
  ], !dbg !9385

sw.bb:                                            ; preds = %entry, %entry
  store i32 1, i32* %arg, align 4, !dbg !9386
  br label %sw.epilog, !dbg !9388

sw.default:                                       ; preds = %entry
  store i32 0, i32* %arg, align 4, !dbg !9389
  br label %sw.epilog, !dbg !9390

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %4 = load i32, i32* %arg, align 4, !dbg !9391
  %shl = shl i32 %4, 8, !dbg !9391
  %conv = zext i32 %shl to i64, !dbg !9391
  %5 = load i32, i32* %mode.addr, align 4, !dbg !9391
  %conv1 = zext i32 %5 to i64, !dbg !9391
  %and = and i64 %conv1, 255, !dbg !9391
  %or = or i64 %conv, %and, !dbg !9391
  store i64 %or, i64* %config, align 8, !dbg !9392
  %6 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9393
  %7 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9394
  %call = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %7) #11, !dbg !9395
  %8 = load i64, i64* %config, align 8, !dbg !9396
  %call2 = call i32 @gpio_do_set_config(%struct.gpio_chip* %6, i32 %call, i64 %8) #11, !dbg !9397
  ret i32 %call2, !dbg !9398
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !9399 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !9400, metadata !DIExpression()), !dbg !9402
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !9404, metadata !DIExpression()), !dbg !9405
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !9072, metadata !DIExpression()), !dbg !9406
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9076, metadata !DIExpression()), !dbg !9408
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !9409, metadata !DIExpression()), !dbg !9410
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !9411, metadata !DIExpression()), !dbg !9412
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !9413
  %1 = load i64, i64* %nr.addr, align 8, !dbg !9414
  %div = sdiv i64 %1, 64, !dbg !9414
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !9415
  %2 = bitcast i64* %add.ptr to i8*, !dbg !9413
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !9416
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9417
  %conv.i = trunc i64 %4 to i32, !dbg !9417
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !9418
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !9419
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !9419
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #12, !dbg !9419
  %7 = load i64, i64* %nr.addr, align 8, !dbg !9420
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !9421
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !9422
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !9424
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !9425

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !9426
  %12 = bitcast i64* %11 to i8*, !dbg !9426
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !9426
  %shr.i = ashr i64 %13, 3, !dbg !9426
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !9426
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !9428
  %and.i = and i64 %14, 7, !dbg !9428
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !9428
  %shl.i = shl i32 1, %sh_prom.i, !dbg !9428
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #7, !dbg !9429, !srcloc !9430
  br label %arch_set_bit.exit, !dbg !9431

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !9432
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !9434
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #7, !dbg !9435, !srcloc !9436
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !9437
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_set_config(%struct.gpio_desc* %desc, i64 %config) #0 !dbg !9438 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %config.addr = alloca i64, align 8
  %gc = alloca %struct.gpio_chip*, align 8
  %__valid = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !9441, metadata !DIExpression()), !dbg !9442
  store i64 %config, i64* %config.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %config.addr, metadata !9443, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !9445, metadata !DIExpression()), !dbg !9446
  br label %do.body, !dbg !9447

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__valid, metadata !9448, metadata !DIExpression()), !dbg !9450
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9450
  %call = call i32 @validate_desc(%struct.gpio_desc* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.gpiod_set_config, i64 0, i64 0)) #11, !dbg !9450
  store i32 %call, i32* %__valid, align 4, !dbg !9450
  %1 = load i32, i32* %__valid, align 4, !dbg !9451
  %cmp = icmp sle i32 %1, 0, !dbg !9451
  br i1 %cmp, label %if.then, label %if.end, !dbg !9450

if.then:                                          ; preds = %do.body
  %2 = load i32, i32* %__valid, align 4, !dbg !9451
  store i32 %2, i32* %retval, align 4, !dbg !9451
  br label %return, !dbg !9451

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !9450

do.end:                                           ; preds = %if.end
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9453
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %3, i32 0, i32 0, !dbg !9454
  %4 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !9454
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %4, i32 0, i32 5, !dbg !9455
  %5 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !9455
  store %struct.gpio_chip* %5, %struct.gpio_chip** %gc, align 8, !dbg !9456
  %6 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9457
  %7 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9458
  %call1 = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %7) #11, !dbg !9459
  %8 = load i64, i64* %config.addr, align 8, !dbg !9460
  %call2 = call i32 @gpio_do_set_config(%struct.gpio_chip* %6, i32 %call1, i64 %8) #11, !dbg !9461
  store i32 %call2, i32* %retval, align 4, !dbg !9462
  br label %return, !dbg !9462

return:                                           ; preds = %do.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !9463
  ret i32 %9, !dbg !9463
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpio_do_set_config(%struct.gpio_chip* %gc, i32 %offset, i64 %config) #0 !dbg !9464 {
entry:
  %retval = alloca i32, align 4
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %offset.addr = alloca i32, align 4
  %config.addr = alloca i64, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !9465, metadata !DIExpression()), !dbg !9466
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !9467, metadata !DIExpression()), !dbg !9468
  store i64 %config, i64* %config.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %config.addr, metadata !9469, metadata !DIExpression()), !dbg !9470
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !9471
  %set_config = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 13, !dbg !9473
  %1 = load i32 (%struct.gpio_chip*, i32, i64)*, i32 (%struct.gpio_chip*, i32, i64)** %set_config, align 8, !dbg !9473
  %tobool = icmp ne i32 (%struct.gpio_chip*, i32, i64)* %1, null, !dbg !9471
  br i1 %tobool, label %if.end, label %if.then, !dbg !9474

if.then:                                          ; preds = %entry
  store i32 -524, i32* %retval, align 4, !dbg !9475
  br label %return, !dbg !9475

if.end:                                           ; preds = %entry
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !9476
  %set_config1 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %2, i32 0, i32 13, !dbg !9477
  %3 = load i32 (%struct.gpio_chip*, i32, i64)*, i32 (%struct.gpio_chip*, i32, i64)** %set_config1, align 8, !dbg !9477
  %4 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !9478
  %5 = load i32, i32* %offset.addr, align 4, !dbg !9479
  %6 = load i64, i64* %config.addr, align 8, !dbg !9480
  %call = call i32 %3(%struct.gpio_chip* %4, i32 %5, i64 %6) #11, !dbg !9476
  store i32 %call, i32* %retval, align 4, !dbg !9481
  br label %return, !dbg !9481

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !9482
  ret i32 %7, !dbg !9482
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_set_debounce(%struct.gpio_desc* %desc, i32 %debounce) #0 !dbg !9483 {
entry:
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %debounce.addr = alloca i32, align 4
  %config = alloca i64, align 8
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !9486, metadata !DIExpression()), !dbg !9487
  store i32 %debounce, i32* %debounce.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %debounce.addr, metadata !9488, metadata !DIExpression()), !dbg !9489
  call void @llvm.dbg.declare(metadata i64* %config, metadata !9490, metadata !DIExpression()), !dbg !9491
  %0 = load i32, i32* %debounce.addr, align 4, !dbg !9492
  %call = call i64 @pinconf_to_config_packed(i32 11, i32 %0) #11, !dbg !9493
  store i64 %call, i64* %config, align 8, !dbg !9494
  %1 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9495
  %2 = load i64, i64* %config, align 8, !dbg !9496
  %call1 = call i32 @gpiod_set_config(%struct.gpio_desc* %1, i64 %2) #11, !dbg !9497
  ret i32 %call1, !dbg !9498
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @pinconf_to_config_packed(i32 %param, i32 %argument) #0 !dbg !9499 {
entry:
  %param.addr = alloca i32, align 4
  %argument.addr = alloca i32, align 4
  store i32 %param, i32* %param.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %param.addr, metadata !9502, metadata !DIExpression()), !dbg !9503
  store i32 %argument, i32* %argument.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argument.addr, metadata !9504, metadata !DIExpression()), !dbg !9505
  %0 = load i32, i32* %argument.addr, align 4, !dbg !9506
  %shl = shl i32 %0, 8, !dbg !9506
  %conv = zext i32 %shl to i64, !dbg !9506
  %1 = load i32, i32* %param.addr, align 4, !dbg !9506
  %conv1 = zext i32 %1 to i64, !dbg !9506
  %and = and i64 %conv1, 255, !dbg !9506
  %or = or i64 %conv, %and, !dbg !9506
  ret i64 %or, !dbg !9507
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_set_transitory(%struct.gpio_desc* %desc, i1 zeroext %transitory) #0 !dbg !9508 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !4869, metadata !DIExpression()), !dbg !9511
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !4878, metadata !DIExpression()), !dbg !9513
  %value.addr.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr.i, metadata !4880, metadata !DIExpression()), !dbg !9514
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %transitory.addr = alloca i8, align 1
  %gc = alloca %struct.gpio_chip*, align 8
  %packed = alloca i64, align 8
  %gpio = alloca i32, align 4
  %rc = alloca i32, align 4
  %__valid = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !9515, metadata !DIExpression()), !dbg !9516
  %frombool = zext i1 %transitory to i8
  store i8 %frombool, i8* %transitory.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %transitory.addr, metadata !9517, metadata !DIExpression()), !dbg !9518
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !9519, metadata !DIExpression()), !dbg !9520
  call void @llvm.dbg.declare(metadata i64* %packed, metadata !9521, metadata !DIExpression()), !dbg !9522
  call void @llvm.dbg.declare(metadata i32* %gpio, metadata !9523, metadata !DIExpression()), !dbg !9524
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !9525, metadata !DIExpression()), !dbg !9526
  br label %do.body, !dbg !9527

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__valid, metadata !9528, metadata !DIExpression()), !dbg !9530
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9530
  %call = call i32 @validate_desc(%struct.gpio_desc* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.gpiod_set_transitory, i64 0, i64 0)) #11, !dbg !9530
  store i32 %call, i32* %__valid, align 4, !dbg !9530
  %1 = load i32, i32* %__valid, align 4, !dbg !9531
  %cmp = icmp sle i32 %1, 0, !dbg !9531
  br i1 %cmp, label %if.then, label %if.end, !dbg !9530

if.then:                                          ; preds = %do.body
  %2 = load i32, i32* %__valid, align 4, !dbg !9531
  store i32 %2, i32* %retval, align 4, !dbg !9531
  br label %return, !dbg !9531

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !9530

do.end:                                           ; preds = %if.end
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9533
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %3, i32 0, i32 1, !dbg !9534
  %4 = load i8, i8* %transitory.addr, align 1, !dbg !9535
  %tobool = trunc i8 %4 to i1, !dbg !9535
  store i64 12, i64* %nr.addr.i, align 8
  store i64* %flags, i64** %addr.addr.i, align 8
  %frombool.i = zext i1 %tobool to i8
  store i8 %frombool.i, i8* %value.addr.i, align 1
  %5 = load i8, i8* %value.addr.i, align 1, !dbg !9536
  %tobool.i = trunc i8 %5 to i1, !dbg !9536
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !9537

if.then.i:                                        ; preds = %do.end
  %6 = load i64, i64* %nr.addr.i, align 8, !dbg !9538
  %7 = load i64*, i64** %addr.addr.i, align 8, !dbg !9539
  call void @set_bit(i64 %6, i64* %7) #12, !dbg !9540
  br label %assign_bit.exit, !dbg !9540

if.else.i:                                        ; preds = %do.end
  %8 = load i64, i64* %nr.addr.i, align 8, !dbg !9541
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !9542
  call void @clear_bit(i64 %8, i64* %9) #12, !dbg !9543
  br label %assign_bit.exit

assign_bit.exit:                                  ; preds = %if.then.i, %if.else.i
  %10 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9544
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %10, i32 0, i32 0, !dbg !9545
  %11 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !9545
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %11, i32 0, i32 5, !dbg !9546
  %12 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !9546
  store %struct.gpio_chip* %12, %struct.gpio_chip** %gc, align 8, !dbg !9547
  %13 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9548
  %set_config = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %13, i32 0, i32 13, !dbg !9550
  %14 = load i32 (%struct.gpio_chip*, i32, i64)*, i32 (%struct.gpio_chip*, i32, i64)** %set_config, align 8, !dbg !9550
  %tobool1 = icmp ne i32 (%struct.gpio_chip*, i32, i64)* %14, null, !dbg !9548
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !9551

if.then2:                                         ; preds = %assign_bit.exit
  store i32 0, i32* %retval, align 4, !dbg !9552
  br label %return, !dbg !9552

if.end3:                                          ; preds = %assign_bit.exit
  %15 = load i8, i8* %transitory.addr, align 1, !dbg !9553
  %tobool4 = trunc i8 %15 to i1, !dbg !9553
  %lnot = xor i1 %tobool4, true, !dbg !9554
  %lnot.ext = zext i1 %lnot to i32, !dbg !9554
  %call5 = call i64 @pinconf_to_config_packed(i32 22, i32 %lnot.ext) #11, !dbg !9555
  store i64 %call5, i64* %packed, align 8, !dbg !9556
  %16 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9557
  %call6 = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %16) #11, !dbg !9558
  store i32 %call6, i32* %gpio, align 4, !dbg !9559
  %17 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9560
  %18 = load i32, i32* %gpio, align 4, !dbg !9561
  %19 = load i64, i64* %packed, align 8, !dbg !9562
  %call7 = call i32 @gpio_do_set_config(%struct.gpio_chip* %17, i32 %18, i64 %19) #11, !dbg !9563
  store i32 %call7, i32* %rc, align 4, !dbg !9564
  %20 = load i32, i32* %rc, align 4, !dbg !9565
  %cmp8 = icmp eq i32 %20, -524, !dbg !9567
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !9568

if.then9:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !9569
  br label %return, !dbg !9569

if.end10:                                         ; preds = %if.end3
  %21 = load i32, i32* %rc, align 4, !dbg !9571
  store i32 %21, i32* %retval, align 4, !dbg !9572
  br label %return, !dbg !9572

return:                                           ; preds = %if.end10, %if.then9, %if.then2, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !9573
  ret i32 %22, !dbg !9573
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_is_active_low(%struct.gpio_desc* %desc) #0 !dbg !9574 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %__valid = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !9575, metadata !DIExpression()), !dbg !9576
  br label %do.body, !dbg !9577

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__valid, metadata !9578, metadata !DIExpression()), !dbg !9580
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9580
  %call = call i32 @validate_desc(%struct.gpio_desc* %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.gpiod_is_active_low, i64 0, i64 0)) #11, !dbg !9580
  store i32 %call, i32* %__valid, align 4, !dbg !9580
  %1 = load i32, i32* %__valid, align 4, !dbg !9581
  %cmp = icmp sle i32 %1, 0, !dbg !9581
  br i1 %cmp, label %if.then, label %if.end, !dbg !9580

if.then:                                          ; preds = %do.body
  %2 = load i32, i32* %__valid, align 4, !dbg !9581
  store i32 %2, i32* %retval, align 4, !dbg !9581
  br label %return, !dbg !9581

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !9580

do.end:                                           ; preds = %if.end
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9583
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %3, i32 0, i32 1, !dbg !9584
  %call1 = call zeroext i1 @test_bit(i64 6, i64* %flags) #11, !dbg !9585
  %conv = zext i1 %call1 to i32, !dbg !9585
  store i32 %conv, i32* %retval, align 4, !dbg !9586
  br label %return, !dbg !9586

return:                                           ; preds = %do.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !9587
  ret i32 %4, !dbg !9587
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @gpiod_toggle_active_low(%struct.gpio_desc* %desc) #0 !dbg !9588 {
entry:
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %__valid = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !9589, metadata !DIExpression()), !dbg !9590
  br label %do.body, !dbg !9591

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__valid, metadata !9592, metadata !DIExpression()), !dbg !9594
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9594
  %call = call i32 @validate_desc(%struct.gpio_desc* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.gpiod_toggle_active_low, i64 0, i64 0)) #11, !dbg !9594
  store i32 %call, i32* %__valid, align 4, !dbg !9594
  %1 = load i32, i32* %__valid, align 4, !dbg !9595
  %cmp = icmp sle i32 %1, 0, !dbg !9595
  br i1 %cmp, label %if.then, label %if.end, !dbg !9594

if.then:                                          ; preds = %do.body
  br label %return, !dbg !9595

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !9594

do.end:                                           ; preds = %if.end
  %2 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !9597
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %2, i32 0, i32 1, !dbg !9598
  call void @change_bit(i64 6, i64* %flags) #11, !dbg !9599
  br label %return, !dbg !9600

return:                                           ; preds = %do.end, %if.then
  ret void, !dbg !9600
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @change_bit(i64 %nr, i64* %addr) #0 !dbg !9601 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !9602, metadata !DIExpression()), !dbg !9604
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !9606, metadata !DIExpression()), !dbg !9607
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !9072, metadata !DIExpression()), !dbg !9608
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9076, metadata !DIExpression()), !dbg !9610
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !9611, metadata !DIExpression()), !dbg !9612
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !9613, metadata !DIExpression()), !dbg !9614
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !9615
  %1 = load i64, i64* %nr.addr, align 8, !dbg !9616
  %div = sdiv i64 %1, 64, !dbg !9616
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !9617
  %2 = bitcast i64* %add.ptr to i8*, !dbg !9615
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !9618
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9619
  %conv.i = trunc i64 %4 to i32, !dbg !9619
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !9620
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !9621
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !9621
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #12, !dbg !9621
  %7 = load i64, i64* %nr.addr, align 8, !dbg !9622
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !9623
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !9624
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !9626
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !9627

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !9628
  %12 = bitcast i64* %11 to i8*, !dbg !9628
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !9628
  %shr.i = ashr i64 %13, 3, !dbg !9628
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !9628
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !9630
  %and.i = and i64 %14, 7, !dbg !9630
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !9630
  %shl.i = shl i32 1, %sh_prom.i, !dbg !9630
  call void asm sideeffect "xorb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #7, !dbg !9631, !srcloc !9632
  br label %arch_change_bit.exit, !dbg !9633

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !9634
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !9636
  call void asm sideeffect " btcq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #7, !dbg !9637, !srcloc !9638
  br label %arch_change_bit.exit

arch_change_bit.exit:                             ; preds = %if.then.i, %if.else.i
  ret void, !dbg !9639
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_get_array_value_complex(i1 zeroext %raw, i1 zeroext %can_sleep, i32 %array_size, %struct.gpio_desc** %desc_array, %struct.gpio_array* %array_info, i64* %value_bitmap) #0 !dbg !9640 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !9653, metadata !DIExpression()), !dbg !9655
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !9661, metadata !DIExpression()), !dbg !9662
  %value.addr.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr.i, metadata !9663, metadata !DIExpression()), !dbg !9664
  %retval = alloca i32, align 4
  %raw.addr = alloca i8, align 1
  %can_sleep.addr = alloca i8, align 1
  %array_size.addr = alloca i32, align 4
  %desc_array.addr = alloca %struct.gpio_desc**, align 8
  %array_info.addr = alloca %struct.gpio_array*, align 8
  %value_bitmap.addr = alloca i64*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %gc = alloca %struct.gpio_chip*, align 8
  %fastpath = alloca [16 x i64], align 16
  %mask = alloca i64*, align 8
  %bits = alloca i64*, align 8
  %first = alloca i32, align 4
  %j = alloca i32, align 4
  %ret56 = alloca i32, align 4
  %__ret_warn_on88 = alloca i32, align 4
  %tmp112 = alloca i64, align 8
  %desc121 = alloca %struct.gpio_desc*, align 8
  %hwgpio = alloca i32, align 4
  %desc154 = alloca %struct.gpio_desc*, align 8
  %hwgpio157 = alloca i32, align 4
  %value = alloca i32, align 4
  %frombool = zext i1 %raw to i8
  store i8 %frombool, i8* %raw.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %raw.addr, metadata !9665, metadata !DIExpression()), !dbg !9666
  %frombool1 = zext i1 %can_sleep to i8
  store i8 %frombool1, i8* %can_sleep.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %can_sleep.addr, metadata !9667, metadata !DIExpression()), !dbg !9668
  store i32 %array_size, i32* %array_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %array_size.addr, metadata !9669, metadata !DIExpression()), !dbg !9670
  store %struct.gpio_desc** %desc_array, %struct.gpio_desc*** %desc_array.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc*** %desc_array.addr, metadata !9671, metadata !DIExpression()), !dbg !9672
  store %struct.gpio_array* %array_info, %struct.gpio_array** %array_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_array** %array_info.addr, metadata !9673, metadata !DIExpression()), !dbg !9674
  store i64* %value_bitmap, i64** %value_bitmap.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %value_bitmap.addr, metadata !9675, metadata !DIExpression()), !dbg !9676
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9677, metadata !DIExpression()), !dbg !9678
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9679, metadata !DIExpression()), !dbg !9680
  store i32 0, i32* %i, align 4, !dbg !9680
  %0 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !9681
  %tobool = icmp ne %struct.gpio_array* %0, null, !dbg !9681
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !9683

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !9684
  %desc = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %1, i32 0, i32 0, !dbg !9685
  %2 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc, align 8, !dbg !9685
  %3 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !9686
  %cmp = icmp eq %struct.gpio_desc** %2, %3, !dbg !9687
  br i1 %cmp, label %land.lhs.true2, label %if.else, !dbg !9688

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load i32, i32* %array_size.addr, align 4, !dbg !9689
  %5 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !9690
  %size = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %5, i32 0, i32 1, !dbg !9691
  %6 = load i32, i32* %size, align 8, !dbg !9691
  %cmp3 = icmp ule i32 %4, %6, !dbg !9692
  br i1 %cmp3, label %land.lhs.true4, label %if.else, !dbg !9693

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %7 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !9694
  %8 = bitcast %struct.gpio_array* %7 to i8*, !dbg !9695
  %9 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !9696
  %10 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !9697
  %size5 = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %10, i32 0, i32 1, !dbg !9698
  %11 = load i32, i32* %size5, align 8, !dbg !9698
  %idx.ext = zext i32 %11 to i64, !dbg !9699
  %add.ptr = getelementptr %struct.gpio_desc*, %struct.gpio_desc** %9, i64 %idx.ext, !dbg !9699
  %12 = bitcast %struct.gpio_desc** %add.ptr to i8*, !dbg !9696
  %cmp6 = icmp eq i8* %8, %12, !dbg !9700
  br i1 %cmp6, label %if.then, label %if.else, !dbg !9701

if.then:                                          ; preds = %land.lhs.true4
  %13 = load i8, i8* %can_sleep.addr, align 1, !dbg !9702
  %tobool7 = trunc i8 %13 to i1, !dbg !9702
  br i1 %tobool7, label %if.end31, label %if.then8, !dbg !9705

if.then8:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9706, metadata !DIExpression()), !dbg !9708
  %14 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !9708
  %chip = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %14, i32 0, i32 2, !dbg !9708
  %15 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !9708
  %can_sleep9 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %15, i32 0, i32 21, !dbg !9708
  %16 = load i8, i8* %can_sleep9, align 8, !dbg !9708
  %tobool10 = trunc i8 %16 to i1, !dbg !9708
  %lnot = xor i1 %tobool10, true, !dbg !9708
  %lnot11 = xor i1 %lnot, true, !dbg !9708
  %lnot.ext = zext i1 %lnot11 to i32, !dbg !9708
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9708
  %17 = load i32, i32* %__ret_warn_on, align 4, !dbg !9709
  %tobool12 = icmp ne i32 %17, 0, !dbg !9709
  %lnot13 = xor i1 %tobool12, true, !dbg !9709
  %lnot15 = xor i1 %lnot13, true, !dbg !9709
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !9709
  %conv = sext i32 %lnot.ext16 to i64, !dbg !9709
  %tobool17 = icmp ne i64 %conv, 0, !dbg !9709
  br i1 %tobool17, label %if.then18, label %if.end, !dbg !9708

if.then18:                                        ; preds = %if.then8
  br label %do.body, !dbg !9709

do.body:                                          ; preds = %if.then18
  br label %do.body19, !dbg !9711

do.body19:                                        ; preds = %do.body
  br label %do.end, !dbg !9713

do.end:                                           ; preds = %do.body19
  br label %do.body20, !dbg !9711

do.body20:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 2659, i32 2305, i64 12) #7, !dbg !9715, !srcloc !9717
  br label %do.end21, !dbg !9715

do.end21:                                         ; preds = %do.body20
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 245) #7, !dbg !9718, !srcloc !9720
  br label %do.body22, !dbg !9711

do.body22:                                        ; preds = %do.end21
  br label %do.end23, !dbg !9721

do.end23:                                         ; preds = %do.body22
  br label %do.end24, !dbg !9711

do.end24:                                         ; preds = %do.end23
  br label %if.end, !dbg !9711

if.end:                                           ; preds = %do.end24, %if.then8
  %18 = load i32, i32* %__ret_warn_on, align 4, !dbg !9708
  %tobool25 = icmp ne i32 %18, 0, !dbg !9708
  %lnot26 = xor i1 %tobool25, true, !dbg !9708
  %lnot28 = xor i1 %lnot26, true, !dbg !9708
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !9708
  %conv30 = sext i32 %lnot.ext29 to i64, !dbg !9708
  store i64 %conv30, i64* %tmp, align 8, !dbg !9709
  %19 = load i64, i64* %tmp, align 8, !dbg !9708
  br label %if.end31, !dbg !9723

if.end31:                                         ; preds = %if.end, %if.then
  %20 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !9724
  %chip32 = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %20, i32 0, i32 2, !dbg !9725
  %21 = load %struct.gpio_chip*, %struct.gpio_chip** %chip32, align 8, !dbg !9725
  %22 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !9726
  %get_mask = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %22, i32 0, i32 3, !dbg !9727
  %23 = load i64*, i64** %get_mask, align 8, !dbg !9727
  %24 = load i64*, i64** %value_bitmap.addr, align 8, !dbg !9728
  %call = call i32 @gpio_chip_get_multiple(%struct.gpio_chip* %21, i64* %23, i64* %24) #11, !dbg !9729
  store i32 %call, i32* %ret, align 4, !dbg !9730
  %25 = load i32, i32* %ret, align 4, !dbg !9731
  %tobool33 = icmp ne i32 %25, 0, !dbg !9731
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !9733

if.then34:                                        ; preds = %if.end31
  %26 = load i32, i32* %ret, align 4, !dbg !9734
  store i32 %26, i32* %retval, align 4, !dbg !9735
  br label %return, !dbg !9735

if.end35:                                         ; preds = %if.end31
  %27 = load i8, i8* %raw.addr, align 1, !dbg !9736
  %tobool36 = trunc i8 %27 to i1, !dbg !9736
  br i1 %tobool36, label %if.end43, label %land.lhs.true37, !dbg !9738

land.lhs.true37:                                  ; preds = %if.end35
  %28 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !9739
  %invert_mask = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %28, i32 0, i32 5, !dbg !9740
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %invert_mask, i64 0, i64 0, !dbg !9739
  %29 = load i32, i32* %array_size.addr, align 4, !dbg !9741
  %call38 = call i32 @bitmap_empty(i64* %arraydecay, i32 %29) #11, !dbg !9742
  %tobool39 = icmp ne i32 %call38, 0, !dbg !9742
  br i1 %tobool39, label %if.end43, label %if.then40, !dbg !9743

if.then40:                                        ; preds = %land.lhs.true37
  %30 = load i64*, i64** %value_bitmap.addr, align 8, !dbg !9744
  %31 = load i64*, i64** %value_bitmap.addr, align 8, !dbg !9745
  %32 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !9746
  %invert_mask41 = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %32, i32 0, i32 5, !dbg !9747
  %arraydecay42 = getelementptr inbounds [0 x i64], [0 x i64]* %invert_mask41, i64 0, i64 0, !dbg !9746
  %33 = load i32, i32* %array_size.addr, align 4, !dbg !9748
  call void @bitmap_xor(i64* %30, i64* %31, i64* %arraydecay42, i32 %33) #11, !dbg !9749
  br label %if.end43, !dbg !9749

if.end43:                                         ; preds = %if.then40, %land.lhs.true37, %if.end35
  %34 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !9750
  %get_mask44 = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %34, i32 0, i32 3, !dbg !9751
  %35 = load i64*, i64** %get_mask44, align 8, !dbg !9751
  %36 = load i32, i32* %array_size.addr, align 4, !dbg !9752
  %conv45 = zext i32 %36 to i64, !dbg !9752
  %call46 = call i64 @find_first_zero_bit(i64* %35, i64 %conv45) #11, !dbg !9753
  %conv47 = trunc i64 %call46 to i32, !dbg !9753
  store i32 %conv47, i32* %i, align 4, !dbg !9754
  %37 = load i32, i32* %i, align 4, !dbg !9755
  %38 = load i32, i32* %array_size.addr, align 4, !dbg !9757
  %cmp48 = icmp eq i32 %37, %38, !dbg !9758
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !9759

if.then50:                                        ; preds = %if.end43
  store i32 0, i32* %retval, align 4, !dbg !9760
  br label %return, !dbg !9760

if.end51:                                         ; preds = %if.end43
  br label %if.end52, !dbg !9761

if.else:                                          ; preds = %land.lhs.true4, %land.lhs.true2, %land.lhs.true, %entry
  store %struct.gpio_array* null, %struct.gpio_array** %array_info.addr, align 8, !dbg !9762
  br label %if.end52

if.end52:                                         ; preds = %if.else, %if.end51
  br label %while.cond, !dbg !9764

while.cond:                                       ; preds = %if.end187, %if.end52
  %39 = load i32, i32* %i, align 4, !dbg !9765
  %40 = load i32, i32* %array_size.addr, align 4, !dbg !9766
  %cmp53 = icmp ult i32 %39, %40, !dbg !9767
  br i1 %cmp53, label %while.body, label %while.end, !dbg !9764

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !9768, metadata !DIExpression()), !dbg !9769
  %41 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !9770
  %42 = load i32, i32* %i, align 4, !dbg !9771
  %idxprom = sext i32 %42 to i64, !dbg !9770
  %arrayidx = getelementptr %struct.gpio_desc*, %struct.gpio_desc** %41, i64 %idxprom, !dbg !9770
  %43 = load %struct.gpio_desc*, %struct.gpio_desc** %arrayidx, align 8, !dbg !9770
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %43, i32 0, i32 0, !dbg !9772
  %44 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !9772
  %chip55 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %44, i32 0, i32 5, !dbg !9773
  %45 = load %struct.gpio_chip*, %struct.gpio_chip** %chip55, align 8, !dbg !9773
  store %struct.gpio_chip* %45, %struct.gpio_chip** %gc, align 8, !dbg !9769
  call void @llvm.dbg.declare(metadata [16 x i64]* %fastpath, metadata !9774, metadata !DIExpression()), !dbg !9776
  call void @llvm.dbg.declare(metadata i64** %mask, metadata !9777, metadata !DIExpression()), !dbg !9778
  call void @llvm.dbg.declare(metadata i64** %bits, metadata !9779, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.declare(metadata i32* %first, metadata !9781, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9783, metadata !DIExpression()), !dbg !9784
  call void @llvm.dbg.declare(metadata i32* %ret56, metadata !9785, metadata !DIExpression()), !dbg !9786
  %46 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9787
  %ngpio = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %46, i32 0, i32 19, !dbg !9787
  %47 = load i16, i16* %ngpio, align 4, !dbg !9787
  %conv57 = zext i16 %47 to i32, !dbg !9787
  %cmp58 = icmp sle i32 %conv57, 512, !dbg !9787
  %lnot60 = xor i1 %cmp58, true, !dbg !9787
  %lnot62 = xor i1 %lnot60, true, !dbg !9787
  %lnot.ext63 = zext i1 %lnot62 to i32, !dbg !9787
  %conv64 = sext i32 %lnot.ext63 to i64, !dbg !9787
  %tobool65 = icmp ne i64 %conv64, 0, !dbg !9787
  br i1 %tobool65, label %if.then66, label %if.else68, !dbg !9789

if.then66:                                        ; preds = %while.body
  %arraydecay67 = getelementptr inbounds [16 x i64], [16 x i64]* %fastpath, i64 0, i64 0, !dbg !9790
  store i64* %arraydecay67, i64** %mask, align 8, !dbg !9792
  br label %if.end77, !dbg !9793

if.else68:                                        ; preds = %while.body
  %48 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9794
  %ngpio69 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %48, i32 0, i32 19, !dbg !9794
  %49 = load i16, i16* %ngpio69, align 4, !dbg !9794
  %conv70 = zext i16 %49 to i64, !dbg !9794
  %add = add i64 %conv70, 64, !dbg !9794
  %sub = sub i64 %add, 1, !dbg !9794
  %div = udiv i64 %sub, 64, !dbg !9794
  %mul = mul i64 2, %div, !dbg !9796
  %50 = load i8, i8* %can_sleep.addr, align 1, !dbg !9797
  %tobool71 = trunc i8 %50 to i1, !dbg !9797
  %51 = zext i1 %tobool71 to i64, !dbg !9797
  %cond = select i1 %tobool71, i32 3264, i32 2592, !dbg !9797
  %call73 = call i8* @kmalloc_array(i64 %mul, i64 8, i32 %cond) #11, !dbg !9798
  %52 = bitcast i8* %call73 to i64*, !dbg !9798
  store i64* %52, i64** %mask, align 8, !dbg !9799
  %53 = load i64*, i64** %mask, align 8, !dbg !9800
  %tobool74 = icmp ne i64* %53, null, !dbg !9800
  br i1 %tobool74, label %if.end76, label %if.then75, !dbg !9802

if.then75:                                        ; preds = %if.else68
  store i32 -12, i32* %retval, align 4, !dbg !9803
  br label %return, !dbg !9803

if.end76:                                         ; preds = %if.else68
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then66
  %54 = load i64*, i64** %mask, align 8, !dbg !9804
  %55 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9805
  %ngpio78 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %55, i32 0, i32 19, !dbg !9805
  %56 = load i16, i16* %ngpio78, align 4, !dbg !9805
  %conv79 = zext i16 %56 to i64, !dbg !9805
  %add80 = add i64 %conv79, 64, !dbg !9805
  %sub81 = sub i64 %add80, 1, !dbg !9805
  %div82 = udiv i64 %sub81, 64, !dbg !9805
  %add.ptr83 = getelementptr i64, i64* %54, i64 %div82, !dbg !9806
  store i64* %add.ptr83, i64** %bits, align 8, !dbg !9807
  %57 = load i64*, i64** %mask, align 8, !dbg !9808
  %58 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9809
  %ngpio84 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %58, i32 0, i32 19, !dbg !9810
  %59 = load i16, i16* %ngpio84, align 4, !dbg !9810
  %conv85 = zext i16 %59 to i32, !dbg !9809
  call void @bitmap_zero(i64* %57, i32 %conv85) #11, !dbg !9811
  %60 = load i8, i8* %can_sleep.addr, align 1, !dbg !9812
  %tobool86 = trunc i8 %60 to i1, !dbg !9812
  br i1 %tobool86, label %if.end119, label %if.then87, !dbg !9814

if.then87:                                        ; preds = %if.end77
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on88, metadata !9815, metadata !DIExpression()), !dbg !9817
  %61 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9817
  %can_sleep89 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %61, i32 0, i32 21, !dbg !9817
  %62 = load i8, i8* %can_sleep89, align 8, !dbg !9817
  %tobool90 = trunc i8 %62 to i1, !dbg !9817
  %lnot91 = xor i1 %tobool90, true, !dbg !9817
  %lnot93 = xor i1 %lnot91, true, !dbg !9817
  %lnot.ext94 = zext i1 %lnot93 to i32, !dbg !9817
  store i32 %lnot.ext94, i32* %__ret_warn_on88, align 4, !dbg !9817
  %63 = load i32, i32* %__ret_warn_on88, align 4, !dbg !9818
  %tobool95 = icmp ne i32 %63, 0, !dbg !9818
  %lnot96 = xor i1 %tobool95, true, !dbg !9818
  %lnot98 = xor i1 %lnot96, true, !dbg !9818
  %lnot.ext99 = zext i1 %lnot98 to i32, !dbg !9818
  %conv100 = sext i32 %lnot.ext99 to i64, !dbg !9818
  %tobool101 = icmp ne i64 %conv100, 0, !dbg !9818
  br i1 %tobool101, label %if.then102, label %if.end111, !dbg !9817

if.then102:                                       ; preds = %if.then87
  br label %do.body103, !dbg !9818

do.body103:                                       ; preds = %if.then102
  br label %do.body104, !dbg !9820

do.body104:                                       ; preds = %do.body103
  br label %do.end105, !dbg !9822

do.end105:                                        ; preds = %do.body104
  br label %do.body106, !dbg !9820

do.body106:                                       ; preds = %do.end105
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 2698, i32 2305, i64 12) #7, !dbg !9824, !srcloc !9826
  br label %do.end107, !dbg !9824

do.end107:                                        ; preds = %do.body106
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 246) #7, !dbg !9827, !srcloc !9829
  br label %do.body108, !dbg !9820

do.body108:                                       ; preds = %do.end107
  br label %do.end109, !dbg !9830

do.end109:                                        ; preds = %do.body108
  br label %do.end110, !dbg !9820

do.end110:                                        ; preds = %do.end109
  br label %if.end111, !dbg !9820

if.end111:                                        ; preds = %do.end110, %if.then87
  %64 = load i32, i32* %__ret_warn_on88, align 4, !dbg !9817
  %tobool113 = icmp ne i32 %64, 0, !dbg !9817
  %lnot114 = xor i1 %tobool113, true, !dbg !9817
  %lnot116 = xor i1 %lnot114, true, !dbg !9817
  %lnot.ext117 = zext i1 %lnot116 to i32, !dbg !9817
  %conv118 = sext i32 %lnot.ext117 to i64, !dbg !9817
  store i64 %conv118, i64* %tmp112, align 8, !dbg !9818
  %65 = load i64, i64* %tmp112, align 8, !dbg !9817
  br label %if.end119, !dbg !9832

if.end119:                                        ; preds = %if.end111, %if.end77
  %66 = load i32, i32* %i, align 4, !dbg !9833
  store i32 %66, i32* %first, align 4, !dbg !9834
  br label %do.body120, !dbg !9835

do.body120:                                       ; preds = %land.end, %if.end119
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc121, metadata !9836, metadata !DIExpression()), !dbg !9838
  %67 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !9839
  %68 = load i32, i32* %i, align 4, !dbg !9840
  %idxprom122 = sext i32 %68 to i64, !dbg !9839
  %arrayidx123 = getelementptr %struct.gpio_desc*, %struct.gpio_desc** %67, i64 %idxprom122, !dbg !9839
  %69 = load %struct.gpio_desc*, %struct.gpio_desc** %arrayidx123, align 8, !dbg !9839
  store %struct.gpio_desc* %69, %struct.gpio_desc** %desc121, align 8, !dbg !9838
  call void @llvm.dbg.declare(metadata i32* %hwgpio, metadata !9841, metadata !DIExpression()), !dbg !9842
  %70 = load %struct.gpio_desc*, %struct.gpio_desc** %desc121, align 8, !dbg !9843
  %call124 = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %70) #11, !dbg !9844
  store i32 %call124, i32* %hwgpio, align 4, !dbg !9842
  %71 = load i32, i32* %hwgpio, align 4, !dbg !9845
  %conv125 = sext i32 %71 to i64, !dbg !9845
  %72 = load i64*, i64** %mask, align 8, !dbg !9846
  call void @__set_bit(i64 %conv125, i64* %72) #11, !dbg !9847
  %73 = load i32, i32* %i, align 4, !dbg !9848
  %inc = add i32 %73, 1, !dbg !9848
  store i32 %inc, i32* %i, align 4, !dbg !9848
  %74 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !9849
  %tobool126 = icmp ne %struct.gpio_array* %74, null, !dbg !9849
  br i1 %tobool126, label %if.then127, label %if.end133, !dbg !9851

if.then127:                                       ; preds = %do.body120
  %75 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !9852
  %get_mask128 = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %75, i32 0, i32 3, !dbg !9853
  %76 = load i64*, i64** %get_mask128, align 8, !dbg !9853
  %77 = load i32, i32* %array_size.addr, align 4, !dbg !9854
  %conv129 = zext i32 %77 to i64, !dbg !9854
  %78 = load i32, i32* %i, align 4, !dbg !9855
  %conv130 = sext i32 %78 to i64, !dbg !9855
  %call131 = call i64 @find_next_zero_bit(i64* %76, i64 %conv129, i64 %conv130) #11, !dbg !9856
  %conv132 = trunc i64 %call131 to i32, !dbg !9856
  store i32 %conv132, i32* %i, align 4, !dbg !9857
  br label %if.end133, !dbg !9858

if.end133:                                        ; preds = %if.then127, %do.body120
  br label %do.cond, !dbg !9859

do.cond:                                          ; preds = %if.end133
  %79 = load i32, i32* %i, align 4, !dbg !9860
  %80 = load i32, i32* %array_size.addr, align 4, !dbg !9861
  %cmp134 = icmp ult i32 %79, %80, !dbg !9862
  br i1 %cmp134, label %land.rhs, label %land.end, !dbg !9863

land.rhs:                                         ; preds = %do.cond
  %81 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !9864
  %82 = load i32, i32* %i, align 4, !dbg !9865
  %idxprom136 = sext i32 %82 to i64, !dbg !9864
  %arrayidx137 = getelementptr %struct.gpio_desc*, %struct.gpio_desc** %81, i64 %idxprom136, !dbg !9864
  %83 = load %struct.gpio_desc*, %struct.gpio_desc** %arrayidx137, align 8, !dbg !9864
  %gdev138 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %83, i32 0, i32 0, !dbg !9866
  %84 = load %struct.gpio_device*, %struct.gpio_device** %gdev138, align 8, !dbg !9866
  %chip139 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %84, i32 0, i32 5, !dbg !9867
  %85 = load %struct.gpio_chip*, %struct.gpio_chip** %chip139, align 8, !dbg !9867
  %86 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9868
  %cmp140 = icmp eq %struct.gpio_chip* %85, %86, !dbg !9869
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %87 = phi i1 [ false, %do.cond ], [ %cmp140, %land.rhs ], !dbg !9870
  br i1 %87, label %do.body120, label %do.end142, !dbg !9859, !llvm.loop !9871

do.end142:                                        ; preds = %land.end
  %88 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !9873
  %89 = load i64*, i64** %mask, align 8, !dbg !9874
  %90 = load i64*, i64** %bits, align 8, !dbg !9875
  %call143 = call i32 @gpio_chip_get_multiple(%struct.gpio_chip* %88, i64* %89, i64* %90) #11, !dbg !9876
  store i32 %call143, i32* %ret56, align 4, !dbg !9877
  %91 = load i32, i32* %ret56, align 4, !dbg !9878
  %tobool144 = icmp ne i32 %91, 0, !dbg !9878
  br i1 %tobool144, label %if.then145, label %if.end151, !dbg !9880

if.then145:                                       ; preds = %do.end142
  %92 = load i64*, i64** %mask, align 8, !dbg !9881
  %arraydecay146 = getelementptr inbounds [16 x i64], [16 x i64]* %fastpath, i64 0, i64 0, !dbg !9884
  %cmp147 = icmp ne i64* %92, %arraydecay146, !dbg !9885
  br i1 %cmp147, label %if.then149, label %if.end150, !dbg !9886

if.then149:                                       ; preds = %if.then145
  %93 = load i64*, i64** %mask, align 8, !dbg !9887
  %94 = bitcast i64* %93 to i8*, !dbg !9887
  call void @kfree(i8* %94) #11, !dbg !9888
  br label %if.end150, !dbg !9888

if.end150:                                        ; preds = %if.then149, %if.then145
  %95 = load i32, i32* %ret56, align 4, !dbg !9889
  store i32 %95, i32* %retval, align 4, !dbg !9890
  br label %return, !dbg !9890

if.end151:                                        ; preds = %do.end142
  %96 = load i32, i32* %first, align 4, !dbg !9891
  store i32 %96, i32* %j, align 4, !dbg !9892
  br label %for.cond, !dbg !9893

for.cond:                                         ; preds = %if.end182, %if.end151
  %97 = load i32, i32* %j, align 4, !dbg !9894
  %98 = load i32, i32* %i, align 4, !dbg !9895
  %cmp152 = icmp slt i32 %97, %98, !dbg !9896
  br i1 %cmp152, label %for.body, label %for.end, !dbg !9897

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc154, metadata !9898, metadata !DIExpression()), !dbg !9899
  %99 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !9900
  %100 = load i32, i32* %j, align 4, !dbg !9901
  %idxprom155 = sext i32 %100 to i64, !dbg !9900
  %arrayidx156 = getelementptr %struct.gpio_desc*, %struct.gpio_desc** %99, i64 %idxprom155, !dbg !9900
  %101 = load %struct.gpio_desc*, %struct.gpio_desc** %arrayidx156, align 8, !dbg !9900
  store %struct.gpio_desc* %101, %struct.gpio_desc** %desc154, align 8, !dbg !9899
  call void @llvm.dbg.declare(metadata i32* %hwgpio157, metadata !9902, metadata !DIExpression()), !dbg !9903
  %102 = load %struct.gpio_desc*, %struct.gpio_desc** %desc154, align 8, !dbg !9904
  %call158 = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %102) #11, !dbg !9905
  store i32 %call158, i32* %hwgpio157, align 4, !dbg !9903
  call void @llvm.dbg.declare(metadata i32* %value, metadata !9906, metadata !DIExpression()), !dbg !9907
  %103 = load i32, i32* %hwgpio157, align 4, !dbg !9908
  %conv159 = sext i32 %103 to i64, !dbg !9908
  %104 = load i64*, i64** %bits, align 8, !dbg !9909
  %call160 = call zeroext i1 @test_bit(i64 %conv159, i64* %104) #11, !dbg !9910
  %conv161 = zext i1 %call160 to i32, !dbg !9910
  store i32 %conv161, i32* %value, align 4, !dbg !9907
  %105 = load i8, i8* %raw.addr, align 1, !dbg !9911
  %tobool162 = trunc i8 %105 to i1, !dbg !9911
  br i1 %tobool162, label %if.end170, label %land.lhs.true163, !dbg !9913

land.lhs.true163:                                 ; preds = %for.body
  %106 = load %struct.gpio_desc*, %struct.gpio_desc** %desc154, align 8, !dbg !9914
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %106, i32 0, i32 1, !dbg !9915
  %call164 = call zeroext i1 @test_bit(i64 6, i64* %flags) #11, !dbg !9916
  br i1 %call164, label %if.then166, label %if.end170, !dbg !9917

if.then166:                                       ; preds = %land.lhs.true163
  %107 = load i32, i32* %value, align 4, !dbg !9918
  %tobool167 = icmp ne i32 %107, 0, !dbg !9919
  %lnot168 = xor i1 %tobool167, true, !dbg !9919
  %lnot.ext169 = zext i1 %lnot168 to i32, !dbg !9919
  store i32 %lnot.ext169, i32* %value, align 4, !dbg !9920
  br label %if.end170, !dbg !9921

if.end170:                                        ; preds = %if.then166, %land.lhs.true163, %for.body
  %108 = load i32, i32* %j, align 4, !dbg !9922
  %conv171 = sext i32 %108 to i64, !dbg !9922
  %109 = load i64*, i64** %value_bitmap.addr, align 8, !dbg !9923
  %110 = load i32, i32* %value, align 4, !dbg !9924
  %tobool172 = icmp ne i32 %110, 0, !dbg !9924
  store i64 %conv171, i64* %nr.addr.i, align 8
  store i64* %109, i64** %addr.addr.i, align 8
  %frombool.i = zext i1 %tobool172 to i8
  store i8 %frombool.i, i8* %value.addr.i, align 1
  %111 = load i8, i8* %value.addr.i, align 1, !dbg !9925
  %tobool.i = trunc i8 %111 to i1, !dbg !9925
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !9927

if.then.i:                                        ; preds = %if.end170
  %112 = load i64, i64* %nr.addr.i, align 8, !dbg !9928
  %113 = load i64*, i64** %addr.addr.i, align 8, !dbg !9929
  call void @__set_bit(i64 %112, i64* %113) #12, !dbg !9930
  br label %__assign_bit.exit, !dbg !9930

if.else.i:                                        ; preds = %if.end170
  %114 = load i64, i64* %nr.addr.i, align 8, !dbg !9931
  %115 = load i64*, i64** %addr.addr.i, align 8, !dbg !9932
  call void @__clear_bit(i64 %114, i64* %115) #12, !dbg !9933
  br label %__assign_bit.exit

__assign_bit.exit:                                ; preds = %if.then.i, %if.else.i
  %116 = load %struct.gpio_desc*, %struct.gpio_desc** %desc154, align 8, !dbg !9934
  %call173 = call i32 @desc_to_gpio(%struct.gpio_desc* %116) #11, !dbg !9935
  %117 = load i32, i32* %value, align 4, !dbg !9936
  call void @trace_gpio_value(i32 %call173, i32 1, i32 %117) #11, !dbg !9937
  %118 = load i32, i32* %j, align 4, !dbg !9938
  %inc174 = add i32 %118, 1, !dbg !9938
  store i32 %inc174, i32* %j, align 4, !dbg !9938
  %119 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !9939
  %tobool175 = icmp ne %struct.gpio_array* %119, null, !dbg !9939
  br i1 %tobool175, label %if.then176, label %if.end182, !dbg !9941

if.then176:                                       ; preds = %__assign_bit.exit
  %120 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !9942
  %get_mask177 = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %120, i32 0, i32 3, !dbg !9943
  %121 = load i64*, i64** %get_mask177, align 8, !dbg !9943
  %122 = load i32, i32* %i, align 4, !dbg !9944
  %conv178 = sext i32 %122 to i64, !dbg !9944
  %123 = load i32, i32* %j, align 4, !dbg !9945
  %conv179 = sext i32 %123 to i64, !dbg !9945
  %call180 = call i64 @find_next_zero_bit(i64* %121, i64 %conv178, i64 %conv179) #11, !dbg !9946
  %conv181 = trunc i64 %call180 to i32, !dbg !9946
  store i32 %conv181, i32* %j, align 4, !dbg !9947
  br label %if.end182, !dbg !9948

if.end182:                                        ; preds = %if.then176, %__assign_bit.exit
  br label %for.cond, !dbg !9949, !llvm.loop !9950

for.end:                                          ; preds = %for.cond
  %124 = load i64*, i64** %mask, align 8, !dbg !9952
  %arraydecay183 = getelementptr inbounds [16 x i64], [16 x i64]* %fastpath, i64 0, i64 0, !dbg !9954
  %cmp184 = icmp ne i64* %124, %arraydecay183, !dbg !9955
  br i1 %cmp184, label %if.then186, label %if.end187, !dbg !9956

if.then186:                                       ; preds = %for.end
  %125 = load i64*, i64** %mask, align 8, !dbg !9957
  %126 = bitcast i64* %125 to i8*, !dbg !9957
  call void @kfree(i8* %126) #11, !dbg !9958
  br label %if.end187, !dbg !9958

if.end187:                                        ; preds = %if.then186, %for.end
  br label %while.cond, !dbg !9764, !llvm.loop !9959

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !9961
  br label %return, !dbg !9961

return:                                           ; preds = %while.end, %if.end150, %if.then75, %if.then50, %if.then34
  %127 = load i32, i32* %retval, align 4, !dbg !9962
  ret i32 %127, !dbg !9962
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpio_chip_get_multiple(%struct.gpio_chip* %gc, i64* %mask, i64* %bits) #0 !dbg !9963 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !9653, metadata !DIExpression()), !dbg !9964
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !9661, metadata !DIExpression()), !dbg !9972
  %value.addr.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr.i, metadata !9663, metadata !DIExpression()), !dbg !9973
  %retval = alloca i32, align 4
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %mask.addr = alloca i64*, align 8
  %bits.addr = alloca i64*, align 8
  %i = alloca i32, align 4
  %value = alloca i32, align 4
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !9974, metadata !DIExpression()), !dbg !9975
  store i64* %mask, i64** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %mask.addr, metadata !9976, metadata !DIExpression()), !dbg !9977
  store i64* %bits, i64** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %bits.addr, metadata !9978, metadata !DIExpression()), !dbg !9979
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !9980
  %get_multiple = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 10, !dbg !9981
  %1 = load i32 (%struct.gpio_chip*, i64*, i64*)*, i32 (%struct.gpio_chip*, i64*, i64*)** %get_multiple, align 8, !dbg !9981
  %tobool = icmp ne i32 (%struct.gpio_chip*, i64*, i64*)* %1, null, !dbg !9980
  br i1 %tobool, label %if.then, label %if.else, !dbg !9982

if.then:                                          ; preds = %entry
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !9983
  %get_multiple1 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %2, i32 0, i32 10, !dbg !9985
  %3 = load i32 (%struct.gpio_chip*, i64*, i64*)*, i32 (%struct.gpio_chip*, i64*, i64*)** %get_multiple1, align 8, !dbg !9985
  %4 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !9986
  %5 = load i64*, i64** %mask.addr, align 8, !dbg !9987
  %6 = load i64*, i64** %bits.addr, align 8, !dbg !9988
  %call = call i32 %3(%struct.gpio_chip* %4, i64* %5, i64* %6) #11, !dbg !9983
  store i32 %call, i32* %retval, align 4, !dbg !9989
  br label %return, !dbg !9989

if.else:                                          ; preds = %entry
  %7 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !9990
  %get = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %7, i32 0, i32 9, !dbg !9991
  %8 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %get, align 8, !dbg !9991
  %tobool2 = icmp ne i32 (%struct.gpio_chip*, i32)* %8, null, !dbg !9990
  br i1 %tobool2, label %if.then3, label %if.end21, !dbg !9992

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9993, metadata !DIExpression()), !dbg !9994
  call void @llvm.dbg.declare(metadata i32* %value, metadata !9995, metadata !DIExpression()), !dbg !9996
  %9 = load i64*, i64** %mask.addr, align 8, !dbg !9997
  %10 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !9997
  %ngpio = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %10, i32 0, i32 19, !dbg !9997
  %11 = load i16, i16* %ngpio, align 4, !dbg !9997
  %conv = zext i16 %11 to i64, !dbg !9997
  %call4 = call i64 @find_first_bit(i64* %9, i64 %conv) #11, !dbg !9997
  %conv5 = trunc i64 %call4 to i32, !dbg !9997
  store i32 %conv5, i32* %i, align 4, !dbg !9997
  br label %for.cond, !dbg !9997

for.cond:                                         ; preds = %for.inc, %if.then3
  %12 = load i32, i32* %i, align 4, !dbg !9998
  %13 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !9998
  %ngpio6 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %13, i32 0, i32 19, !dbg !9998
  %14 = load i16, i16* %ngpio6, align 4, !dbg !9998
  %conv7 = zext i16 %14 to i32, !dbg !9998
  %cmp = icmp slt i32 %12, %conv7, !dbg !9998
  br i1 %cmp, label %for.body, label %for.end, !dbg !9997

for.body:                                         ; preds = %for.cond
  %15 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !9999
  %get9 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %15, i32 0, i32 9, !dbg !10000
  %16 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %get9, align 8, !dbg !10000
  %17 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !10001
  %18 = load i32, i32* %i, align 4, !dbg !10002
  %call10 = call i32 %16(%struct.gpio_chip* %17, i32 %18) #11, !dbg !9999
  store i32 %call10, i32* %value, align 4, !dbg !10003
  %19 = load i32, i32* %value, align 4, !dbg !10004
  %cmp11 = icmp slt i32 %19, 0, !dbg !10006
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !10007

if.then13:                                        ; preds = %for.body
  %20 = load i32, i32* %value, align 4, !dbg !10008
  store i32 %20, i32* %retval, align 4, !dbg !10009
  br label %return, !dbg !10009

if.end:                                           ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !10010
  %conv14 = sext i32 %21 to i64, !dbg !10010
  %22 = load i64*, i64** %bits.addr, align 8, !dbg !10011
  %23 = load i32, i32* %value, align 4, !dbg !10012
  %tobool15 = icmp ne i32 %23, 0, !dbg !10012
  store i64 %conv14, i64* %nr.addr.i, align 8
  store i64* %22, i64** %addr.addr.i, align 8
  %frombool.i = zext i1 %tobool15 to i8
  store i8 %frombool.i, i8* %value.addr.i, align 1
  %24 = load i8, i8* %value.addr.i, align 1, !dbg !10013
  %tobool.i = trunc i8 %24 to i1, !dbg !10013
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !10014

if.then.i:                                        ; preds = %if.end
  %25 = load i64, i64* %nr.addr.i, align 8, !dbg !10015
  %26 = load i64*, i64** %addr.addr.i, align 8, !dbg !10016
  call void @__set_bit(i64 %25, i64* %26) #12, !dbg !10017
  br label %__assign_bit.exit, !dbg !10017

if.else.i:                                        ; preds = %if.end
  %27 = load i64, i64* %nr.addr.i, align 8, !dbg !10018
  %28 = load i64*, i64** %addr.addr.i, align 8, !dbg !10019
  call void @__clear_bit(i64 %27, i64* %28) #12, !dbg !10020
  br label %__assign_bit.exit

__assign_bit.exit:                                ; preds = %if.then.i, %if.else.i
  br label %for.inc, !dbg !10021

for.inc:                                          ; preds = %__assign_bit.exit
  %29 = load i64*, i64** %mask.addr, align 8, !dbg !9998
  %30 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !9998
  %ngpio16 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %30, i32 0, i32 19, !dbg !9998
  %31 = load i16, i16* %ngpio16, align 4, !dbg !9998
  %conv17 = zext i16 %31 to i64, !dbg !9998
  %32 = load i32, i32* %i, align 4, !dbg !9998
  %add = add i32 %32, 1, !dbg !9998
  %conv18 = sext i32 %add to i64, !dbg !9998
  %call19 = call i64 @find_next_bit(i64* %29, i64 %conv17, i64 %conv18) #11, !dbg !9998
  %conv20 = trunc i64 %call19 to i32, !dbg !9998
  store i32 %conv20, i32* %i, align 4, !dbg !9998
  br label %for.cond, !dbg !9998, !llvm.loop !10022

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !10024
  br label %return, !dbg !10024

if.end21:                                         ; preds = %if.else
  br label %if.end22

if.end22:                                         ; preds = %if.end21
  store i32 -5, i32* %retval, align 4, !dbg !10025
  br label %return, !dbg !10025

return:                                           ; preds = %if.end22, %for.end, %if.then13, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !10026
  ret i32 %33, !dbg !10026
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @bitmap_empty(i64* %src, i32 %nbits) #0 !dbg !10027 {
entry:
  %retval = alloca i32, align 4
  %src.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  store i64* %src, i64** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src.addr, metadata !10033, metadata !DIExpression()), !dbg !10034
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !10035, metadata !DIExpression()), !dbg !10036
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !10037
  %1 = call i1 @llvm.is.constant.i32(i32 %0), !dbg !10037
  br i1 %1, label %land.lhs.true, label %if.end, !dbg !10037

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %nbits.addr, align 4, !dbg !10037
  %cmp = icmp ule i32 %2, 64, !dbg !10037
  br i1 %cmp, label %land.lhs.true1, label %if.end, !dbg !10037

land.lhs.true1:                                   ; preds = %land.lhs.true
  %3 = load i32, i32* %nbits.addr, align 4, !dbg !10037
  %cmp2 = icmp ugt i32 %3, 0, !dbg !10037
  br i1 %cmp2, label %if.then, label %if.end, !dbg !10039

if.then:                                          ; preds = %land.lhs.true1
  %4 = load i64*, i64** %src.addr, align 8, !dbg !10040
  %5 = load i64, i64* %4, align 8, !dbg !10041
  %6 = load i32, i32* %nbits.addr, align 4, !dbg !10042
  %sub = sub i32 0, %6, !dbg !10042
  %and = and i32 %sub, 63, !dbg !10042
  %sh_prom = zext i32 %and to i64, !dbg !10042
  %shr = lshr i64 -1, %sh_prom, !dbg !10042
  %and3 = and i64 %5, %shr, !dbg !10043
  %tobool = icmp ne i64 %and3, 0, !dbg !10044
  %lnot = xor i1 %tobool, true, !dbg !10044
  %lnot.ext = zext i1 %lnot to i32, !dbg !10044
  store i32 %lnot.ext, i32* %retval, align 4, !dbg !10045
  br label %return, !dbg !10045

if.end:                                           ; preds = %land.lhs.true1, %land.lhs.true, %entry
  %7 = load i64*, i64** %src.addr, align 8, !dbg !10046
  %8 = load i32, i32* %nbits.addr, align 4, !dbg !10047
  %conv = zext i32 %8 to i64, !dbg !10047
  %call = call i64 @find_first_bit(i64* %7, i64 %conv) #11, !dbg !10048
  %9 = load i32, i32* %nbits.addr, align 4, !dbg !10049
  %conv4 = zext i32 %9 to i64, !dbg !10049
  %cmp5 = icmp eq i64 %call, %conv4, !dbg !10050
  %conv6 = zext i1 %cmp5 to i32, !dbg !10050
  store i32 %conv6, i32* %retval, align 4, !dbg !10051
  br label %return, !dbg !10051

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !10052
  ret i32 %10, !dbg !10052
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bitmap_xor(i64* %dst, i64* %src1, i64* %src2, i32 %nbits) #0 !dbg !10053 {
entry:
  %dst.addr = alloca i64*, align 8
  %src1.addr = alloca i64*, align 8
  %src2.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  store i64* %dst, i64** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.addr, metadata !10056, metadata !DIExpression()), !dbg !10057
  store i64* %src1, i64** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src1.addr, metadata !10058, metadata !DIExpression()), !dbg !10059
  store i64* %src2, i64** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src2.addr, metadata !10060, metadata !DIExpression()), !dbg !10061
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !10062, metadata !DIExpression()), !dbg !10063
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !10064
  %1 = call i1 @llvm.is.constant.i32(i32 %0), !dbg !10064
  br i1 %1, label %land.lhs.true, label %if.else, !dbg !10064

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %nbits.addr, align 4, !dbg !10064
  %cmp = icmp ule i32 %2, 64, !dbg !10064
  br i1 %cmp, label %land.lhs.true1, label %if.else, !dbg !10064

land.lhs.true1:                                   ; preds = %land.lhs.true
  %3 = load i32, i32* %nbits.addr, align 4, !dbg !10064
  %cmp2 = icmp ugt i32 %3, 0, !dbg !10064
  br i1 %cmp2, label %if.then, label %if.else, !dbg !10066

if.then:                                          ; preds = %land.lhs.true1
  %4 = load i64*, i64** %src1.addr, align 8, !dbg !10067
  %5 = load i64, i64* %4, align 8, !dbg !10068
  %6 = load i64*, i64** %src2.addr, align 8, !dbg !10069
  %7 = load i64, i64* %6, align 8, !dbg !10070
  %xor = xor i64 %5, %7, !dbg !10071
  %8 = load i64*, i64** %dst.addr, align 8, !dbg !10072
  store i64 %xor, i64* %8, align 8, !dbg !10073
  br label %if.end, !dbg !10074

if.else:                                          ; preds = %land.lhs.true1, %land.lhs.true, %entry
  %9 = load i64*, i64** %dst.addr, align 8, !dbg !10075
  %10 = load i64*, i64** %src1.addr, align 8, !dbg !10076
  %11 = load i64*, i64** %src2.addr, align 8, !dbg !10077
  %12 = load i32, i32* %nbits.addr, align 4, !dbg !10078
  call void @__bitmap_xor(i64* %9, i64* %10, i64* %11, i32 %12) #11, !dbg !10079
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !10080
}

; Function Attrs: noredzone
declare dso_local i64 @find_first_zero_bit(i64*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !10081 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5563, metadata !DIExpression()), !dbg !10082
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5573, metadata !DIExpression()), !dbg !10086
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5575, metadata !DIExpression()), !dbg !10087
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5577, metadata !DIExpression()), !dbg !10088
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5579, metadata !DIExpression()), !dbg !10089
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5585, metadata !DIExpression()), !dbg !10091
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5591, metadata !DIExpression()), !dbg !10093
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5600, metadata !DIExpression()), !dbg !10096
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5602, metadata !DIExpression()), !dbg !10097
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5604, metadata !DIExpression()), !dbg !10098
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5606, metadata !DIExpression()), !dbg !10099
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5608, metadata !DIExpression()), !dbg !10100
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5610, metadata !DIExpression()), !dbg !10101
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5612, metadata !DIExpression()), !dbg !10102
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5614, metadata !DIExpression()), !dbg !10103
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10104, metadata !DIExpression()), !dbg !10105
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10106, metadata !DIExpression()), !dbg !10107
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10108, metadata !DIExpression()), !dbg !10109
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !10110, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !10112, metadata !DIExpression()), !dbg !10115
  %0 = load i64, i64* %n.addr, align 8, !dbg !10115
  store i64 %0, i64* %__a, align 8, !dbg !10115
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !10116, metadata !DIExpression()), !dbg !10115
  %1 = load i64, i64* %size.addr, align 8, !dbg !10115
  store i64 %1, i64* %__b, align 8, !dbg !10115
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !10117, metadata !DIExpression()), !dbg !10115
  store i64* %bytes, i64** %__d, align 8, !dbg !10115
  %cmp = icmp eq i64* %__a, %__b, !dbg !10115
  %conv = zext i1 %cmp to i32, !dbg !10115
  %2 = load i64*, i64** %__d, align 8, !dbg !10115
  %cmp1 = icmp eq i64* %__a, %2, !dbg !10115
  %conv2 = zext i1 %cmp1 to i32, !dbg !10115
  %3 = load i64, i64* %__a, align 8, !dbg !10115
  %4 = load i64, i64* %__b, align 8, !dbg !10115
  %5 = load i64*, i64** %__d, align 8, !dbg !10115
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !10115
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !10115
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !10115
  store i64 %8, i64* %5, align 8, !dbg !10115
  %frombool = zext i1 %7 to i8, !dbg !10115
  store i8 %frombool, i8* %tmp, align 1, !dbg !10115
  %9 = load i8, i8* %tmp, align 1, !dbg !10115
  %tobool = trunc i8 %9 to i1, !dbg !10115
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !10119
  %lnot = xor i1 %call, true, !dbg !10119
  %lnot3 = xor i1 %lnot, true, !dbg !10119
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !10119
  %conv4 = sext i32 %lnot.ext to i64, !dbg !10119
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !10119
  br i1 %tobool5, label %if.then, label %if.end, !dbg !10120

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !10121
  br label %return, !dbg !10121

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !10122
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !10123
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !10124

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !10125
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !10126
  br i1 %13, label %if.then6, label %if.end8, !dbg !10127

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !10128
  %15 = load i32, i32* %flags.addr, align 4, !dbg !10129
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !10130
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #7, !dbg !10131
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !10132

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !10133
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !10134
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !10135

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !10136
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !10137
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !10138
  %call.i.i = call i32 @get_order(i64 %21) #14, !dbg !10139
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !10100
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !10140
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !10141
  %24 = load i32, i32* %order.i.i, align 4, !dbg !10142
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !10143
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !10144
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !10145
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #12, !dbg !10146
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !10146
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !10146
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !10146
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !10146
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !10147
  br label %kmalloc.exit, !dbg !10147

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !10148
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10149
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !10149
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !10150

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !10151
  br label %kmalloc_index.exit.i, !dbg !10151

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10152
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !10153
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !10154

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10155
  br label %kmalloc_index.exit.i, !dbg !10155

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10156
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !10157
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !10158

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10159
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !10160
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !10161

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !10162
  br label %kmalloc_index.exit.i, !dbg !10162

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10163
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !10164
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !10165

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10166
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !10167
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !10168

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !10169
  br label %kmalloc_index.exit.i, !dbg !10169

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10170
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !10171
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !10172

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10173
  br label %kmalloc_index.exit.i, !dbg !10173

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10174
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !10175
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !10176

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !10177
  br label %kmalloc_index.exit.i, !dbg !10177

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10178
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !10179
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !10180

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !10181
  br label %kmalloc_index.exit.i, !dbg !10181

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10182
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !10183
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !10184

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !10185
  br label %kmalloc_index.exit.i, !dbg !10185

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10186
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !10187
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !10188

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !10189
  br label %kmalloc_index.exit.i, !dbg !10189

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10190
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !10191
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !10192

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !10193
  br label %kmalloc_index.exit.i, !dbg !10193

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10194
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !10195
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !10196

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !10197
  br label %kmalloc_index.exit.i, !dbg !10197

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10198
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !10199
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !10200

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !10201
  br label %kmalloc_index.exit.i, !dbg !10201

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10202
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !10203
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !10204

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !10205
  br label %kmalloc_index.exit.i, !dbg !10205

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10206
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !10207
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !10208

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !10209
  br label %kmalloc_index.exit.i, !dbg !10209

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10210
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !10211
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !10212

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !10213
  br label %kmalloc_index.exit.i, !dbg !10213

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10214
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !10215
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !10216

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !10217
  br label %kmalloc_index.exit.i, !dbg !10217

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10218
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !10219
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !10220

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !10221
  br label %kmalloc_index.exit.i, !dbg !10221

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10222
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !10223
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !10224

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !10225
  br label %kmalloc_index.exit.i, !dbg !10225

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10226
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !10227
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !10228

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !10229
  br label %kmalloc_index.exit.i, !dbg !10229

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10230
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !10231
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !10232

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !10233
  br label %kmalloc_index.exit.i, !dbg !10233

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10234
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !10235
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !10236

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !10237
  br label %kmalloc_index.exit.i, !dbg !10237

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10238
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !10239
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !10240

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !10241
  br label %kmalloc_index.exit.i, !dbg !10241

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10242
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !10243
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !10244

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !10245
  br label %kmalloc_index.exit.i, !dbg !10245

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10246
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !10247
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !10248

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !10249
  br label %kmalloc_index.exit.i, !dbg !10249

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10250
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !10251
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !10252

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !10253
  br label %kmalloc_index.exit.i, !dbg !10253

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10254
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !10255
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !10256

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !10257
  br label %kmalloc_index.exit.i, !dbg !10257

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10258
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !10259
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !10260

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !10261
  br label %kmalloc_index.exit.i, !dbg !10261

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10262
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !10263
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !10264

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !10265
  br label %kmalloc_index.exit.i, !dbg !10265

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.46, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !10266, !srcloc !5790
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 107) #7, !dbg !10267, !srcloc !5794
  unreachable, !dbg !10268

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !10269
  store i32 %59, i32* %index.i, align 4, !dbg !10270
  %60 = load i32, i32* %index.i, align 4, !dbg !10271
  %tobool.i = icmp ne i32 %60, 0, !dbg !10271
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !10272

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !10273
  br label %kmalloc.exit, !dbg !10273

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !10274
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10275
  %and.i.i = and i32 %62, 17, !dbg !10275
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !10275
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !10275
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !10275
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10275
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !10276

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !10277
  br label %kmalloc_type.exit.i, !dbg !10277

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10278
  %and2.i.i = and i32 %63, 1, !dbg !10279
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !10278
  %64 = zext i1 %tobool3.i.i to i64, !dbg !10278
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !10278
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !10280
  br label %kmalloc_type.exit.i, !dbg !10280

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !10281
  %idxprom.i = zext i32 %65 to i64, !dbg !10282
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !10282
  %66 = load i32, i32* %index.i, align 4, !dbg !10283
  %idxprom6.i = zext i32 %66 to i64, !dbg !10282
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !10282
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !10282
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !10284
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !10285
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10286
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10287
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #12, !dbg !10288
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !10288
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !10288
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !10288
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !10288
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !10088
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10289
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !10290
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !10291
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10292
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #12, !dbg !10293
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !10294
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !10295
  store i8* %76, i8** %retval.i, align 8, !dbg !10296
  br label %kmalloc.exit, !dbg !10296

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !10297
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !10298
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #12, !dbg !10299
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !10299
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !10299
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !10299
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !10299
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !10300
  br label %kmalloc.exit, !dbg !10300

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !10301
  store i8* %79, i8** %retval, align 8, !dbg !10302
  br label %return, !dbg !10302

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !10303
  %81 = load i32, i32* %flags.addr, align 4, !dbg !10304
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #11, !dbg !10305
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !10305
  %maskedptr = and i64 %ptrint, 7, !dbg !10305
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !10305
  call void @llvm.assume(i1 %maskcond), !dbg !10305
  store i8* %call9, i8** %retval, align 8, !dbg !10306
  br label %return, !dbg !10306

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !10307
  ret i8* %82, !dbg !10307
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bitmap_zero(i64* %dst, i32 %nbits) #0 !dbg !10308 {
entry:
  %dst.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  %len = alloca i32, align 4
  store i64* %dst, i64** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.addr, metadata !10311, metadata !DIExpression()), !dbg !10312
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !10313, metadata !DIExpression()), !dbg !10314
  call void @llvm.dbg.declare(metadata i32* %len, metadata !10315, metadata !DIExpression()), !dbg !10316
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !10317
  %conv = zext i32 %0 to i64, !dbg !10317
  %add = add i64 %conv, 64, !dbg !10317
  %sub = sub i64 %add, 1, !dbg !10317
  %div = udiv i64 %sub, 64, !dbg !10317
  %mul = mul i64 %div, 8, !dbg !10318
  %conv1 = trunc i64 %mul to i32, !dbg !10317
  store i32 %conv1, i32* %len, align 4, !dbg !10316
  %1 = load i64*, i64** %dst.addr, align 8, !dbg !10319
  %2 = bitcast i64* %1 to i8*, !dbg !10320
  %3 = load i32, i32* %len, align 4, !dbg !10321
  %conv2 = zext i32 %3 to i64, !dbg !10321
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 %conv2, i1 false), !dbg !10320
  ret void, !dbg !10322
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__set_bit(i64 %nr, i64* %addr) #0 !dbg !10323 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !10324, metadata !DIExpression()), !dbg !10326
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !10328, metadata !DIExpression()), !dbg !10329
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !10330, metadata !DIExpression()), !dbg !10332
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !10334, metadata !DIExpression()), !dbg !10335
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !10336, metadata !DIExpression()), !dbg !10337
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !10338, metadata !DIExpression()), !dbg !10339
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !10340
  %1 = load i64, i64* %nr.addr, align 8, !dbg !10341
  %div = sdiv i64 %1, 64, !dbg !10341
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !10342
  %2 = bitcast i64* %add.ptr to i8*, !dbg !10340
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !10343
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !10344
  %conv.i = trunc i64 %4 to i32, !dbg !10344
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !10345
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !10346
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !10346
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #12, !dbg !10346
  %7 = load i64, i64* %nr.addr, align 8, !dbg !10347
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !10348
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !10349
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !10350
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #7, !dbg !10351, !srcloc !10352
  ret void, !dbg !10353
}

; Function Attrs: noredzone
declare dso_local i64 @find_next_zero_bit(i64*, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_gpio_value(i32 %gpio, i32 %get, i32 %value) #0 !dbg !10354 {
entry:
  %gpio.addr = alloca i32, align 4
  %get.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store i32 %gpio, i32* %gpio.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gpio.addr, metadata !10355, metadata !DIExpression()), !dbg !10356
  store i32 %get, i32* %get.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %get.addr, metadata !10357, metadata !DIExpression()), !dbg !10356
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !10358, metadata !DIExpression()), !dbg !10356
  ret void, !dbg !10356
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_get_raw_value(%struct.gpio_desc* %desc) #0 !dbg !10359 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %__valid = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !10360, metadata !DIExpression()), !dbg !10361
  br label %do.body, !dbg !10362

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__valid, metadata !10363, metadata !DIExpression()), !dbg !10365
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10365
  %call = call i32 @validate_desc(%struct.gpio_desc* %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.gpiod_get_raw_value, i64 0, i64 0)) #11, !dbg !10365
  store i32 %call, i32* %__valid, align 4, !dbg !10365
  %1 = load i32, i32* %__valid, align 4, !dbg !10366
  %cmp = icmp sle i32 %1, 0, !dbg !10366
  br i1 %cmp, label %if.then, label %if.end, !dbg !10365

if.then:                                          ; preds = %do.body
  %2 = load i32, i32* %__valid, align 4, !dbg !10366
  store i32 %2, i32* %retval, align 4, !dbg !10366
  br label %return, !dbg !10366

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !10365

do.end:                                           ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10368, metadata !DIExpression()), !dbg !10370
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10370
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %3, i32 0, i32 0, !dbg !10370
  %4 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !10370
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %4, i32 0, i32 5, !dbg !10370
  %5 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !10370
  %can_sleep = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %5, i32 0, i32 21, !dbg !10370
  %6 = load i8, i8* %can_sleep, align 8, !dbg !10370
  %tobool = trunc i8 %6 to i1, !dbg !10370
  %lnot = xor i1 %tobool, true, !dbg !10370
  %lnot1 = xor i1 %lnot, true, !dbg !10370
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10370
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !10370
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !10371
  %tobool2 = icmp ne i32 %7, 0, !dbg !10371
  %lnot3 = xor i1 %tobool2, true, !dbg !10371
  %lnot5 = xor i1 %lnot3, true, !dbg !10371
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !10371
  %conv = sext i32 %lnot.ext6 to i64, !dbg !10371
  %tobool7 = icmp ne i64 %conv, 0, !dbg !10371
  br i1 %tobool7, label %if.then8, label %if.end17, !dbg !10370

if.then8:                                         ; preds = %do.end
  br label %do.body9, !dbg !10371

do.body9:                                         ; preds = %if.then8
  br label %do.body10, !dbg !10373

do.body10:                                        ; preds = %do.body9
  br label %do.end11, !dbg !10375

do.end11:                                         ; preds = %do.body10
  br label %do.body12, !dbg !10373

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 2758, i32 2305, i64 12) #7, !dbg !10377, !srcloc !10379
  br label %do.end13, !dbg !10377

do.end13:                                         ; preds = %do.body12
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 247) #7, !dbg !10380, !srcloc !10382
  br label %do.body14, !dbg !10373

do.body14:                                        ; preds = %do.end13
  br label %do.end15, !dbg !10383

do.end15:                                         ; preds = %do.body14
  br label %do.end16, !dbg !10373

do.end16:                                         ; preds = %do.end15
  br label %if.end17, !dbg !10373

if.end17:                                         ; preds = %do.end16, %do.end
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !10370
  %tobool18 = icmp ne i32 %8, 0, !dbg !10370
  %lnot19 = xor i1 %tobool18, true, !dbg !10370
  %lnot21 = xor i1 %lnot19, true, !dbg !10370
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !10370
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !10370
  store i64 %conv23, i64* %tmp, align 8, !dbg !10371
  %9 = load i64, i64* %tmp, align 8, !dbg !10370
  %10 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10385
  %call24 = call i32 @gpiod_get_raw_value_commit(%struct.gpio_desc* %10) #11, !dbg !10386
  store i32 %call24, i32* %retval, align 4, !dbg !10387
  br label %return, !dbg !10387

return:                                           ; preds = %if.end17, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !10388
  ret i32 %11, !dbg !10388
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpiod_get_raw_value_commit(%struct.gpio_desc* %desc) #0 !dbg !10389 {
entry:
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %gc = alloca %struct.gpio_chip*, align 8
  %offset = alloca i32, align 4
  %value = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !10390, metadata !DIExpression()), !dbg !10391
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !10392, metadata !DIExpression()), !dbg !10393
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !10394, metadata !DIExpression()), !dbg !10395
  call void @llvm.dbg.declare(metadata i32* %value, metadata !10396, metadata !DIExpression()), !dbg !10397
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10398
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %0, i32 0, i32 0, !dbg !10399
  %1 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !10399
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %1, i32 0, i32 5, !dbg !10400
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !10400
  store %struct.gpio_chip* %2, %struct.gpio_chip** %gc, align 8, !dbg !10401
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10402
  %call = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %3) #11, !dbg !10403
  store i32 %call, i32* %offset, align 4, !dbg !10404
  %4 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !10405
  %get = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %4, i32 0, i32 9, !dbg !10406
  %5 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %get, align 8, !dbg !10406
  %tobool = icmp ne i32 (%struct.gpio_chip*, i32)* %5, null, !dbg !10405
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10405

cond.true:                                        ; preds = %entry
  %6 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !10407
  %get1 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %6, i32 0, i32 9, !dbg !10408
  %7 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %get1, align 8, !dbg !10408
  %8 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !10409
  %9 = load i32, i32* %offset, align 4, !dbg !10410
  %call2 = call i32 %7(%struct.gpio_chip* %8, i32 %9) #11, !dbg !10407
  br label %cond.end, !dbg !10405

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10405

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call2, %cond.true ], [ -5, %cond.false ], !dbg !10405
  store i32 %cond, i32* %value, align 4, !dbg !10411
  %10 = load i32, i32* %value, align 4, !dbg !10412
  %cmp = icmp slt i32 %10, 0, !dbg !10413
  br i1 %cmp, label %cond.true3, label %cond.false4, !dbg !10412

cond.true3:                                       ; preds = %cond.end
  %11 = load i32, i32* %value, align 4, !dbg !10414
  br label %cond.end7, !dbg !10412

cond.false4:                                      ; preds = %cond.end
  %12 = load i32, i32* %value, align 4, !dbg !10415
  %tobool5 = icmp ne i32 %12, 0, !dbg !10416
  %lnot = xor i1 %tobool5, true, !dbg !10416
  %lnot6 = xor i1 %lnot, true, !dbg !10417
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !10417
  br label %cond.end7, !dbg !10412

cond.end7:                                        ; preds = %cond.false4, %cond.true3
  %cond8 = phi i32 [ %11, %cond.true3 ], [ %lnot.ext, %cond.false4 ], !dbg !10412
  store i32 %cond8, i32* %value, align 4, !dbg !10418
  %13 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10419
  %call9 = call i32 @desc_to_gpio(%struct.gpio_desc* %13) #11, !dbg !10420
  %14 = load i32, i32* %value, align 4, !dbg !10421
  call void @trace_gpio_value(i32 %call9, i32 1, i32 %14) #11, !dbg !10422
  %15 = load i32, i32* %value, align 4, !dbg !10423
  ret i32 %15, !dbg !10424
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_get_value(%struct.gpio_desc* %desc) #0 !dbg !10425 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %value = alloca i32, align 4
  %__valid = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !10426, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.declare(metadata i32* %value, metadata !10428, metadata !DIExpression()), !dbg !10429
  br label %do.body, !dbg !10430

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__valid, metadata !10431, metadata !DIExpression()), !dbg !10433
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10433
  %call = call i32 @validate_desc(%struct.gpio_desc* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.gpiod_get_value, i64 0, i64 0)) #11, !dbg !10433
  store i32 %call, i32* %__valid, align 4, !dbg !10433
  %1 = load i32, i32* %__valid, align 4, !dbg !10434
  %cmp = icmp sle i32 %1, 0, !dbg !10434
  br i1 %cmp, label %if.then, label %if.end, !dbg !10433

if.then:                                          ; preds = %do.body
  %2 = load i32, i32* %__valid, align 4, !dbg !10434
  store i32 %2, i32* %retval, align 4, !dbg !10434
  br label %return, !dbg !10434

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !10433

do.end:                                           ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10436, metadata !DIExpression()), !dbg !10438
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10438
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %3, i32 0, i32 0, !dbg !10438
  %4 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !10438
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %4, i32 0, i32 5, !dbg !10438
  %5 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !10438
  %can_sleep = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %5, i32 0, i32 21, !dbg !10438
  %6 = load i8, i8* %can_sleep, align 8, !dbg !10438
  %tobool = trunc i8 %6 to i1, !dbg !10438
  %lnot = xor i1 %tobool, true, !dbg !10438
  %lnot1 = xor i1 %lnot, true, !dbg !10438
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10438
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !10438
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !10439
  %tobool2 = icmp ne i32 %7, 0, !dbg !10439
  %lnot3 = xor i1 %tobool2, true, !dbg !10439
  %lnot5 = xor i1 %lnot3, true, !dbg !10439
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !10439
  %conv = sext i32 %lnot.ext6 to i64, !dbg !10439
  %tobool7 = icmp ne i64 %conv, 0, !dbg !10439
  br i1 %tobool7, label %if.then8, label %if.end17, !dbg !10438

if.then8:                                         ; preds = %do.end
  br label %do.body9, !dbg !10439

do.body9:                                         ; preds = %if.then8
  br label %do.body10, !dbg !10441

do.body10:                                        ; preds = %do.body9
  br label %do.end11, !dbg !10443

do.end11:                                         ; preds = %do.body10
  br label %do.body12, !dbg !10441

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 2779, i32 2305, i64 12) #7, !dbg !10445, !srcloc !10447
  br label %do.end13, !dbg !10445

do.end13:                                         ; preds = %do.body12
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 248) #7, !dbg !10448, !srcloc !10450
  br label %do.body14, !dbg !10441

do.body14:                                        ; preds = %do.end13
  br label %do.end15, !dbg !10451

do.end15:                                         ; preds = %do.body14
  br label %do.end16, !dbg !10441

do.end16:                                         ; preds = %do.end15
  br label %if.end17, !dbg !10441

if.end17:                                         ; preds = %do.end16, %do.end
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !10438
  %tobool18 = icmp ne i32 %8, 0, !dbg !10438
  %lnot19 = xor i1 %tobool18, true, !dbg !10438
  %lnot21 = xor i1 %lnot19, true, !dbg !10438
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !10438
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !10438
  store i64 %conv23, i64* %tmp, align 8, !dbg !10439
  %9 = load i64, i64* %tmp, align 8, !dbg !10438
  %10 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10453
  %call24 = call i32 @gpiod_get_raw_value_commit(%struct.gpio_desc* %10) #11, !dbg !10454
  store i32 %call24, i32* %value, align 4, !dbg !10455
  %11 = load i32, i32* %value, align 4, !dbg !10456
  %cmp25 = icmp slt i32 %11, 0, !dbg !10458
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !10459

if.then27:                                        ; preds = %if.end17
  %12 = load i32, i32* %value, align 4, !dbg !10460
  store i32 %12, i32* %retval, align 4, !dbg !10461
  br label %return, !dbg !10461

if.end28:                                         ; preds = %if.end17
  %13 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10462
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %13, i32 0, i32 1, !dbg !10464
  %call29 = call zeroext i1 @test_bit(i64 6, i64* %flags) #11, !dbg !10465
  br i1 %call29, label %if.then30, label %if.end34, !dbg !10466

if.then30:                                        ; preds = %if.end28
  %14 = load i32, i32* %value, align 4, !dbg !10467
  %tobool31 = icmp ne i32 %14, 0, !dbg !10468
  %lnot32 = xor i1 %tobool31, true, !dbg !10468
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !10468
  store i32 %lnot.ext33, i32* %value, align 4, !dbg !10469
  br label %if.end34, !dbg !10470

if.end34:                                         ; preds = %if.then30, %if.end28
  %15 = load i32, i32* %value, align 4, !dbg !10471
  store i32 %15, i32* %retval, align 4, !dbg !10472
  br label %return, !dbg !10472

return:                                           ; preds = %if.end34, %if.then27, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !10473
  ret i32 %16, !dbg !10473
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_get_raw_array_value(i32 %array_size, %struct.gpio_desc** %desc_array, %struct.gpio_array* %array_info, i64* %value_bitmap) #0 !dbg !10474 {
entry:
  %retval = alloca i32, align 4
  %array_size.addr = alloca i32, align 4
  %desc_array.addr = alloca %struct.gpio_desc**, align 8
  %array_info.addr = alloca %struct.gpio_array*, align 8
  %value_bitmap.addr = alloca i64*, align 8
  store i32 %array_size, i32* %array_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %array_size.addr, metadata !10477, metadata !DIExpression()), !dbg !10478
  store %struct.gpio_desc** %desc_array, %struct.gpio_desc*** %desc_array.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc*** %desc_array.addr, metadata !10479, metadata !DIExpression()), !dbg !10480
  store %struct.gpio_array* %array_info, %struct.gpio_array** %array_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_array** %array_info.addr, metadata !10481, metadata !DIExpression()), !dbg !10482
  store i64* %value_bitmap, i64** %value_bitmap.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %value_bitmap.addr, metadata !10483, metadata !DIExpression()), !dbg !10484
  %0 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !10485
  %tobool = icmp ne %struct.gpio_desc** %0, null, !dbg !10485
  br i1 %tobool, label %if.end, label %if.then, !dbg !10487

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10488
  br label %return, !dbg !10488

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %array_size.addr, align 4, !dbg !10489
  %2 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !10490
  %3 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !10491
  %4 = load i64*, i64** %value_bitmap.addr, align 8, !dbg !10492
  %call = call i32 @gpiod_get_array_value_complex(i1 zeroext true, i1 zeroext false, i32 %1, %struct.gpio_desc** %2, %struct.gpio_array* %3, i64* %4) #11, !dbg !10493
  store i32 %call, i32* %retval, align 4, !dbg !10494
  br label %return, !dbg !10494

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !10495
  ret i32 %5, !dbg !10495
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_get_array_value(i32 %array_size, %struct.gpio_desc** %desc_array, %struct.gpio_array* %array_info, i64* %value_bitmap) #0 !dbg !10496 {
entry:
  %retval = alloca i32, align 4
  %array_size.addr = alloca i32, align 4
  %desc_array.addr = alloca %struct.gpio_desc**, align 8
  %array_info.addr = alloca %struct.gpio_array*, align 8
  %value_bitmap.addr = alloca i64*, align 8
  store i32 %array_size, i32* %array_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %array_size.addr, metadata !10497, metadata !DIExpression()), !dbg !10498
  store %struct.gpio_desc** %desc_array, %struct.gpio_desc*** %desc_array.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc*** %desc_array.addr, metadata !10499, metadata !DIExpression()), !dbg !10500
  store %struct.gpio_array* %array_info, %struct.gpio_array** %array_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_array** %array_info.addr, metadata !10501, metadata !DIExpression()), !dbg !10502
  store i64* %value_bitmap, i64** %value_bitmap.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %value_bitmap.addr, metadata !10503, metadata !DIExpression()), !dbg !10504
  %0 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !10505
  %tobool = icmp ne %struct.gpio_desc** %0, null, !dbg !10505
  br i1 %tobool, label %if.end, label %if.then, !dbg !10507

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10508
  br label %return, !dbg !10508

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %array_size.addr, align 4, !dbg !10509
  %2 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !10510
  %3 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !10511
  %4 = load i64*, i64** %value_bitmap.addr, align 8, !dbg !10512
  %call = call i32 @gpiod_get_array_value_complex(i1 zeroext false, i1 zeroext false, i32 %1, %struct.gpio_desc** %2, %struct.gpio_array* %3, i64* %4) #11, !dbg !10513
  store i32 %call, i32* %retval, align 4, !dbg !10514
  br label %return, !dbg !10514

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !10515
  ret i32 %5, !dbg !10515
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_set_array_value_complex(i1 zeroext %raw, i1 zeroext %can_sleep, i32 %array_size, %struct.gpio_desc** %desc_array, %struct.gpio_array* %array_info, i64* %value_bitmap) #0 !dbg !10516 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !9653, metadata !DIExpression()), !dbg !10517
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !9661, metadata !DIExpression()), !dbg !10524
  %value.addr.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr.i, metadata !9663, metadata !DIExpression()), !dbg !10525
  %retval = alloca i32, align 4
  %raw.addr = alloca i8, align 1
  %can_sleep.addr = alloca i8, align 1
  %array_size.addr = alloca i32, align 4
  %desc_array.addr = alloca %struct.gpio_desc**, align 8
  %array_info.addr = alloca %struct.gpio_array*, align 8
  %value_bitmap.addr = alloca i64*, align 8
  %i = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %gc = alloca %struct.gpio_chip*, align 8
  %fastpath = alloca [16 x i64], align 16
  %mask = alloca i64*, align 8
  %bits = alloca i64*, align 8
  %count = alloca i32, align 4
  %__ret_warn_on83 = alloca i32, align 4
  %tmp107 = alloca i64, align 8
  %desc116 = alloca %struct.gpio_desc*, align 8
  %hwgpio = alloca i32, align 4
  %value = alloca i32, align 4
  %frombool = zext i1 %raw to i8
  store i8 %frombool, i8* %raw.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %raw.addr, metadata !10526, metadata !DIExpression()), !dbg !10527
  %frombool1 = zext i1 %can_sleep to i8
  store i8 %frombool1, i8* %can_sleep.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %can_sleep.addr, metadata !10528, metadata !DIExpression()), !dbg !10529
  store i32 %array_size, i32* %array_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %array_size.addr, metadata !10530, metadata !DIExpression()), !dbg !10531
  store %struct.gpio_desc** %desc_array, %struct.gpio_desc*** %desc_array.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc*** %desc_array.addr, metadata !10532, metadata !DIExpression()), !dbg !10533
  store %struct.gpio_array* %array_info, %struct.gpio_array** %array_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_array** %array_info.addr, metadata !10534, metadata !DIExpression()), !dbg !10535
  store i64* %value_bitmap, i64** %value_bitmap.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %value_bitmap.addr, metadata !10536, metadata !DIExpression()), !dbg !10537
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10538, metadata !DIExpression()), !dbg !10539
  store i32 0, i32* %i, align 4, !dbg !10539
  %0 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !10540
  %tobool = icmp ne %struct.gpio_array* %0, null, !dbg !10540
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !10542

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !10543
  %desc = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %1, i32 0, i32 0, !dbg !10544
  %2 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc, align 8, !dbg !10544
  %3 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !10545
  %cmp = icmp eq %struct.gpio_desc** %2, %3, !dbg !10546
  br i1 %cmp, label %land.lhs.true2, label %if.else, !dbg !10547

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load i32, i32* %array_size.addr, align 4, !dbg !10548
  %5 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !10549
  %size = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %5, i32 0, i32 1, !dbg !10550
  %6 = load i32, i32* %size, align 8, !dbg !10550
  %cmp3 = icmp ule i32 %4, %6, !dbg !10551
  br i1 %cmp3, label %land.lhs.true4, label %if.else, !dbg !10552

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %7 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !10553
  %8 = bitcast %struct.gpio_array* %7 to i8*, !dbg !10554
  %9 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !10555
  %10 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !10556
  %size5 = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %10, i32 0, i32 1, !dbg !10557
  %11 = load i32, i32* %size5, align 8, !dbg !10557
  %idx.ext = zext i32 %11 to i64, !dbg !10558
  %add.ptr = getelementptr %struct.gpio_desc*, %struct.gpio_desc** %9, i64 %idx.ext, !dbg !10558
  %12 = bitcast %struct.gpio_desc** %add.ptr to i8*, !dbg !10555
  %cmp6 = icmp eq i8* %8, %12, !dbg !10559
  br i1 %cmp6, label %if.then, label %if.else, !dbg !10560

if.then:                                          ; preds = %land.lhs.true4
  %13 = load i8, i8* %can_sleep.addr, align 1, !dbg !10561
  %tobool7 = trunc i8 %13 to i1, !dbg !10561
  br i1 %tobool7, label %if.end31, label %if.then8, !dbg !10564

if.then8:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10565, metadata !DIExpression()), !dbg !10567
  %14 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !10567
  %chip = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %14, i32 0, i32 2, !dbg !10567
  %15 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !10567
  %can_sleep9 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %15, i32 0, i32 21, !dbg !10567
  %16 = load i8, i8* %can_sleep9, align 8, !dbg !10567
  %tobool10 = trunc i8 %16 to i1, !dbg !10567
  %lnot = xor i1 %tobool10, true, !dbg !10567
  %lnot11 = xor i1 %lnot, true, !dbg !10567
  %lnot.ext = zext i1 %lnot11 to i32, !dbg !10567
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !10567
  %17 = load i32, i32* %__ret_warn_on, align 4, !dbg !10568
  %tobool12 = icmp ne i32 %17, 0, !dbg !10568
  %lnot13 = xor i1 %tobool12, true, !dbg !10568
  %lnot15 = xor i1 %lnot13, true, !dbg !10568
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !10568
  %conv = sext i32 %lnot.ext16 to i64, !dbg !10568
  %tobool17 = icmp ne i64 %conv, 0, !dbg !10568
  br i1 %tobool17, label %if.then18, label %if.end, !dbg !10567

if.then18:                                        ; preds = %if.then8
  br label %do.body, !dbg !10568

do.body:                                          ; preds = %if.then18
  br label %do.body19, !dbg !10570

do.body19:                                        ; preds = %do.body
  br label %do.end, !dbg !10572

do.end:                                           ; preds = %do.body19
  br label %do.body20, !dbg !10570

do.body20:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 2945, i32 2305, i64 12) #7, !dbg !10574, !srcloc !10576
  br label %do.end21, !dbg !10574

do.end21:                                         ; preds = %do.body20
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 249) #7, !dbg !10577, !srcloc !10579
  br label %do.body22, !dbg !10570

do.body22:                                        ; preds = %do.end21
  br label %do.end23, !dbg !10580

do.end23:                                         ; preds = %do.body22
  br label %do.end24, !dbg !10570

do.end24:                                         ; preds = %do.end23
  br label %if.end, !dbg !10570

if.end:                                           ; preds = %do.end24, %if.then8
  %18 = load i32, i32* %__ret_warn_on, align 4, !dbg !10567
  %tobool25 = icmp ne i32 %18, 0, !dbg !10567
  %lnot26 = xor i1 %tobool25, true, !dbg !10567
  %lnot28 = xor i1 %lnot26, true, !dbg !10567
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !10567
  %conv30 = sext i32 %lnot.ext29 to i64, !dbg !10567
  store i64 %conv30, i64* %tmp, align 8, !dbg !10568
  %19 = load i64, i64* %tmp, align 8, !dbg !10567
  br label %if.end31, !dbg !10582

if.end31:                                         ; preds = %if.end, %if.then
  %20 = load i8, i8* %raw.addr, align 1, !dbg !10583
  %tobool32 = trunc i8 %20 to i1, !dbg !10583
  br i1 %tobool32, label %if.end38, label %land.lhs.true33, !dbg !10585

land.lhs.true33:                                  ; preds = %if.end31
  %21 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !10586
  %invert_mask = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %21, i32 0, i32 5, !dbg !10587
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %invert_mask, i64 0, i64 0, !dbg !10586
  %22 = load i32, i32* %array_size.addr, align 4, !dbg !10588
  %call = call i32 @bitmap_empty(i64* %arraydecay, i32 %22) #11, !dbg !10589
  %tobool34 = icmp ne i32 %call, 0, !dbg !10589
  br i1 %tobool34, label %if.end38, label %if.then35, !dbg !10590

if.then35:                                        ; preds = %land.lhs.true33
  %23 = load i64*, i64** %value_bitmap.addr, align 8, !dbg !10591
  %24 = load i64*, i64** %value_bitmap.addr, align 8, !dbg !10592
  %25 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !10593
  %invert_mask36 = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %25, i32 0, i32 5, !dbg !10594
  %arraydecay37 = getelementptr inbounds [0 x i64], [0 x i64]* %invert_mask36, i64 0, i64 0, !dbg !10593
  %26 = load i32, i32* %array_size.addr, align 4, !dbg !10595
  call void @bitmap_xor(i64* %23, i64* %24, i64* %arraydecay37, i32 %26) #11, !dbg !10596
  br label %if.end38, !dbg !10596

if.end38:                                         ; preds = %if.then35, %land.lhs.true33, %if.end31
  %27 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !10597
  %chip39 = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %27, i32 0, i32 2, !dbg !10598
  %28 = load %struct.gpio_chip*, %struct.gpio_chip** %chip39, align 8, !dbg !10598
  %29 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !10599
  %set_mask = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %29, i32 0, i32 4, !dbg !10600
  %30 = load i64*, i64** %set_mask, align 8, !dbg !10600
  %31 = load i64*, i64** %value_bitmap.addr, align 8, !dbg !10601
  call void @gpio_chip_set_multiple(%struct.gpio_chip* %28, i64* %30, i64* %31) #11, !dbg !10602
  %32 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !10603
  %set_mask40 = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %32, i32 0, i32 4, !dbg !10604
  %33 = load i64*, i64** %set_mask40, align 8, !dbg !10604
  %34 = load i32, i32* %array_size.addr, align 4, !dbg !10605
  %conv41 = zext i32 %34 to i64, !dbg !10605
  %call42 = call i64 @find_first_zero_bit(i64* %33, i64 %conv41) #11, !dbg !10606
  %conv43 = trunc i64 %call42 to i32, !dbg !10606
  store i32 %conv43, i32* %i, align 4, !dbg !10607
  %35 = load i32, i32* %i, align 4, !dbg !10608
  %36 = load i32, i32* %array_size.addr, align 4, !dbg !10610
  %cmp44 = icmp eq i32 %35, %36, !dbg !10611
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !10612

if.then46:                                        ; preds = %if.end38
  store i32 0, i32* %retval, align 4, !dbg !10613
  br label %return, !dbg !10613

if.end47:                                         ; preds = %if.end38
  br label %if.end48, !dbg !10614

if.else:                                          ; preds = %land.lhs.true4, %land.lhs.true2, %land.lhs.true, %entry
  store %struct.gpio_array* null, %struct.gpio_array** %array_info.addr, align 8, !dbg !10615
  br label %if.end48

if.end48:                                         ; preds = %if.else, %if.end47
  br label %while.cond, !dbg !10617

while.cond:                                       ; preds = %if.end188, %if.end48
  %37 = load i32, i32* %i, align 4, !dbg !10618
  %38 = load i32, i32* %array_size.addr, align 4, !dbg !10619
  %cmp49 = icmp ult i32 %37, %38, !dbg !10620
  br i1 %cmp49, label %while.body, label %while.end, !dbg !10617

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !10621, metadata !DIExpression()), !dbg !10622
  %39 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !10623
  %40 = load i32, i32* %i, align 4, !dbg !10624
  %idxprom = sext i32 %40 to i64, !dbg !10623
  %arrayidx = getelementptr %struct.gpio_desc*, %struct.gpio_desc** %39, i64 %idxprom, !dbg !10623
  %41 = load %struct.gpio_desc*, %struct.gpio_desc** %arrayidx, align 8, !dbg !10623
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %41, i32 0, i32 0, !dbg !10625
  %42 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !10625
  %chip51 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %42, i32 0, i32 5, !dbg !10626
  %43 = load %struct.gpio_chip*, %struct.gpio_chip** %chip51, align 8, !dbg !10626
  store %struct.gpio_chip* %43, %struct.gpio_chip** %gc, align 8, !dbg !10622
  call void @llvm.dbg.declare(metadata [16 x i64]* %fastpath, metadata !10627, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.declare(metadata i64** %mask, metadata !10629, metadata !DIExpression()), !dbg !10630
  call void @llvm.dbg.declare(metadata i64** %bits, metadata !10631, metadata !DIExpression()), !dbg !10632
  call void @llvm.dbg.declare(metadata i32* %count, metadata !10633, metadata !DIExpression()), !dbg !10634
  store i32 0, i32* %count, align 4, !dbg !10634
  %44 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !10635
  %ngpio = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %44, i32 0, i32 19, !dbg !10635
  %45 = load i16, i16* %ngpio, align 4, !dbg !10635
  %conv52 = zext i16 %45 to i32, !dbg !10635
  %cmp53 = icmp sle i32 %conv52, 512, !dbg !10635
  %lnot55 = xor i1 %cmp53, true, !dbg !10635
  %lnot57 = xor i1 %lnot55, true, !dbg !10635
  %lnot.ext58 = zext i1 %lnot57 to i32, !dbg !10635
  %conv59 = sext i32 %lnot.ext58 to i64, !dbg !10635
  %tobool60 = icmp ne i64 %conv59, 0, !dbg !10635
  br i1 %tobool60, label %if.then61, label %if.else63, !dbg !10637

if.then61:                                        ; preds = %while.body
  %arraydecay62 = getelementptr inbounds [16 x i64], [16 x i64]* %fastpath, i64 0, i64 0, !dbg !10638
  store i64* %arraydecay62, i64** %mask, align 8, !dbg !10640
  br label %if.end72, !dbg !10641

if.else63:                                        ; preds = %while.body
  %46 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !10642
  %ngpio64 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %46, i32 0, i32 19, !dbg !10642
  %47 = load i16, i16* %ngpio64, align 4, !dbg !10642
  %conv65 = zext i16 %47 to i64, !dbg !10642
  %add = add i64 %conv65, 64, !dbg !10642
  %sub = sub i64 %add, 1, !dbg !10642
  %div = udiv i64 %sub, 64, !dbg !10642
  %mul = mul i64 2, %div, !dbg !10644
  %48 = load i8, i8* %can_sleep.addr, align 1, !dbg !10645
  %tobool66 = trunc i8 %48 to i1, !dbg !10645
  %49 = zext i1 %tobool66 to i64, !dbg !10645
  %cond = select i1 %tobool66, i32 3264, i32 2592, !dbg !10645
  %call68 = call i8* @kmalloc_array(i64 %mul, i64 8, i32 %cond) #11, !dbg !10646
  %50 = bitcast i8* %call68 to i64*, !dbg !10646
  store i64* %50, i64** %mask, align 8, !dbg !10647
  %51 = load i64*, i64** %mask, align 8, !dbg !10648
  %tobool69 = icmp ne i64* %51, null, !dbg !10648
  br i1 %tobool69, label %if.end71, label %if.then70, !dbg !10650

if.then70:                                        ; preds = %if.else63
  store i32 -12, i32* %retval, align 4, !dbg !10651
  br label %return, !dbg !10651

if.end71:                                         ; preds = %if.else63
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.then61
  %52 = load i64*, i64** %mask, align 8, !dbg !10652
  %53 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !10653
  %ngpio73 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %53, i32 0, i32 19, !dbg !10653
  %54 = load i16, i16* %ngpio73, align 4, !dbg !10653
  %conv74 = zext i16 %54 to i64, !dbg !10653
  %add75 = add i64 %conv74, 64, !dbg !10653
  %sub76 = sub i64 %add75, 1, !dbg !10653
  %div77 = udiv i64 %sub76, 64, !dbg !10653
  %add.ptr78 = getelementptr i64, i64* %52, i64 %div77, !dbg !10654
  store i64* %add.ptr78, i64** %bits, align 8, !dbg !10655
  %55 = load i64*, i64** %mask, align 8, !dbg !10656
  %56 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !10657
  %ngpio79 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %56, i32 0, i32 19, !dbg !10658
  %57 = load i16, i16* %ngpio79, align 4, !dbg !10658
  %conv80 = zext i16 %57 to i32, !dbg !10657
  call void @bitmap_zero(i64* %55, i32 %conv80) #11, !dbg !10659
  %58 = load i8, i8* %can_sleep.addr, align 1, !dbg !10660
  %tobool81 = trunc i8 %58 to i1, !dbg !10660
  br i1 %tobool81, label %if.end114, label %if.then82, !dbg !10662

if.then82:                                        ; preds = %if.end72
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on83, metadata !10663, metadata !DIExpression()), !dbg !10665
  %59 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !10665
  %can_sleep84 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %59, i32 0, i32 21, !dbg !10665
  %60 = load i8, i8* %can_sleep84, align 8, !dbg !10665
  %tobool85 = trunc i8 %60 to i1, !dbg !10665
  %lnot86 = xor i1 %tobool85, true, !dbg !10665
  %lnot88 = xor i1 %lnot86, true, !dbg !10665
  %lnot.ext89 = zext i1 %lnot88 to i32, !dbg !10665
  store i32 %lnot.ext89, i32* %__ret_warn_on83, align 4, !dbg !10665
  %61 = load i32, i32* %__ret_warn_on83, align 4, !dbg !10666
  %tobool90 = icmp ne i32 %61, 0, !dbg !10666
  %lnot91 = xor i1 %tobool90, true, !dbg !10666
  %lnot93 = xor i1 %lnot91, true, !dbg !10666
  %lnot.ext94 = zext i1 %lnot93 to i32, !dbg !10666
  %conv95 = sext i32 %lnot.ext94 to i64, !dbg !10666
  %tobool96 = icmp ne i64 %conv95, 0, !dbg !10666
  br i1 %tobool96, label %if.then97, label %if.end106, !dbg !10665

if.then97:                                        ; preds = %if.then82
  br label %do.body98, !dbg !10666

do.body98:                                        ; preds = %if.then97
  br label %do.body99, !dbg !10668

do.body99:                                        ; preds = %do.body98
  br label %do.end100, !dbg !10670

do.end100:                                        ; preds = %do.body99
  br label %do.body101, !dbg !10668

do.body101:                                       ; preds = %do.end100
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 2981, i32 2305, i64 12) #7, !dbg !10672, !srcloc !10674
  br label %do.end102, !dbg !10672

do.end102:                                        ; preds = %do.body101
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 250) #7, !dbg !10675, !srcloc !10677
  br label %do.body103, !dbg !10668

do.body103:                                       ; preds = %do.end102
  br label %do.end104, !dbg !10678

do.end104:                                        ; preds = %do.body103
  br label %do.end105, !dbg !10668

do.end105:                                        ; preds = %do.end104
  br label %if.end106, !dbg !10668

if.end106:                                        ; preds = %do.end105, %if.then82
  %62 = load i32, i32* %__ret_warn_on83, align 4, !dbg !10665
  %tobool108 = icmp ne i32 %62, 0, !dbg !10665
  %lnot109 = xor i1 %tobool108, true, !dbg !10665
  %lnot111 = xor i1 %lnot109, true, !dbg !10665
  %lnot.ext112 = zext i1 %lnot111 to i32, !dbg !10665
  %conv113 = sext i32 %lnot.ext112 to i64, !dbg !10665
  store i64 %conv113, i64* %tmp107, align 8, !dbg !10666
  %63 = load i64, i64* %tmp107, align 8, !dbg !10665
  br label %if.end114, !dbg !10680

if.end114:                                        ; preds = %if.end106, %if.end72
  br label %do.body115, !dbg !10681

do.body115:                                       ; preds = %land.end, %if.end114
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc116, metadata !10682, metadata !DIExpression()), !dbg !10683
  %64 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !10684
  %65 = load i32, i32* %i, align 4, !dbg !10685
  %idxprom117 = sext i32 %65 to i64, !dbg !10684
  %arrayidx118 = getelementptr %struct.gpio_desc*, %struct.gpio_desc** %64, i64 %idxprom117, !dbg !10684
  %66 = load %struct.gpio_desc*, %struct.gpio_desc** %arrayidx118, align 8, !dbg !10684
  store %struct.gpio_desc* %66, %struct.gpio_desc** %desc116, align 8, !dbg !10683
  call void @llvm.dbg.declare(metadata i32* %hwgpio, metadata !10686, metadata !DIExpression()), !dbg !10687
  %67 = load %struct.gpio_desc*, %struct.gpio_desc** %desc116, align 8, !dbg !10688
  %call119 = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %67) #11, !dbg !10689
  store i32 %call119, i32* %hwgpio, align 4, !dbg !10687
  call void @llvm.dbg.declare(metadata i32* %value, metadata !10690, metadata !DIExpression()), !dbg !10691
  %68 = load i32, i32* %i, align 4, !dbg !10692
  %conv120 = sext i32 %68 to i64, !dbg !10692
  %69 = load i64*, i64** %value_bitmap.addr, align 8, !dbg !10693
  %call121 = call zeroext i1 @test_bit(i64 %conv120, i64* %69) #11, !dbg !10694
  %conv122 = zext i1 %call121 to i32, !dbg !10694
  store i32 %conv122, i32* %value, align 4, !dbg !10691
  %70 = load i8, i8* %raw.addr, align 1, !dbg !10695
  %tobool123 = trunc i8 %70 to i1, !dbg !10695
  br i1 %tobool123, label %if.end139, label %land.lhs.true124, !dbg !10697

land.lhs.true124:                                 ; preds = %do.body115
  %71 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !10698
  %tobool125 = icmp ne %struct.gpio_array* %71, null, !dbg !10698
  br i1 %tobool125, label %land.lhs.true126, label %land.lhs.true132, !dbg !10699

land.lhs.true126:                                 ; preds = %land.lhs.true124
  %72 = load i32, i32* %i, align 4, !dbg !10700
  %conv127 = sext i32 %72 to i64, !dbg !10700
  %73 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !10701
  %invert_mask128 = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %73, i32 0, i32 5, !dbg !10702
  %arraydecay129 = getelementptr inbounds [0 x i64], [0 x i64]* %invert_mask128, i64 0, i64 0, !dbg !10701
  %call130 = call zeroext i1 @test_bit(i64 %conv127, i64* %arraydecay129) #11, !dbg !10703
  br i1 %call130, label %if.end139, label %land.lhs.true132, !dbg !10704

land.lhs.true132:                                 ; preds = %land.lhs.true126, %land.lhs.true124
  %74 = load %struct.gpio_desc*, %struct.gpio_desc** %desc116, align 8, !dbg !10705
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %74, i32 0, i32 1, !dbg !10706
  %call133 = call zeroext i1 @test_bit(i64 6, i64* %flags) #11, !dbg !10707
  br i1 %call133, label %if.then135, label %if.end139, !dbg !10708

if.then135:                                       ; preds = %land.lhs.true132
  %75 = load i32, i32* %value, align 4, !dbg !10709
  %tobool136 = icmp ne i32 %75, 0, !dbg !10710
  %lnot137 = xor i1 %tobool136, true, !dbg !10710
  %lnot.ext138 = zext i1 %lnot137 to i32, !dbg !10710
  store i32 %lnot.ext138, i32* %value, align 4, !dbg !10711
  br label %if.end139, !dbg !10712

if.end139:                                        ; preds = %if.then135, %land.lhs.true132, %land.lhs.true126, %do.body115
  %76 = load %struct.gpio_desc*, %struct.gpio_desc** %desc116, align 8, !dbg !10713
  %call140 = call i32 @desc_to_gpio(%struct.gpio_desc* %76) #11, !dbg !10714
  %77 = load i32, i32* %value, align 4, !dbg !10715
  call void @trace_gpio_value(i32 %call140, i32 0, i32 %77) #11, !dbg !10716
  %78 = load %struct.gpio_desc*, %struct.gpio_desc** %desc116, align 8, !dbg !10717
  %flags141 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %78, i32 0, i32 1, !dbg !10718
  %call142 = call zeroext i1 @test_bit(i64 7, i64* %flags141) #11, !dbg !10719
  br i1 %call142, label %land.lhs.true144, label %if.else148, !dbg !10720

land.lhs.true144:                                 ; preds = %if.end139
  %79 = load i8, i8* %raw.addr, align 1, !dbg !10721
  %tobool145 = trunc i8 %79 to i1, !dbg !10721
  br i1 %tobool145, label %if.else148, label %if.then146, !dbg !10722

if.then146:                                       ; preds = %land.lhs.true144
  %80 = load %struct.gpio_desc*, %struct.gpio_desc** %desc116, align 8, !dbg !10723
  %81 = load i32, i32* %value, align 4, !dbg !10725
  %tobool147 = icmp ne i32 %81, 0, !dbg !10725
  call void @gpio_set_open_drain_value_commit(%struct.gpio_desc* %80, i1 zeroext %tobool147) #11, !dbg !10726
  br label %if.end161, !dbg !10727

if.else148:                                       ; preds = %land.lhs.true144, %if.end139
  %82 = load %struct.gpio_desc*, %struct.gpio_desc** %desc116, align 8, !dbg !10728
  %flags149 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %82, i32 0, i32 1, !dbg !10729
  %call150 = call zeroext i1 @test_bit(i64 8, i64* %flags149) #11, !dbg !10730
  br i1 %call150, label %land.lhs.true152, label %if.else156, !dbg !10731

land.lhs.true152:                                 ; preds = %if.else148
  %83 = load i8, i8* %raw.addr, align 1, !dbg !10732
  %tobool153 = trunc i8 %83 to i1, !dbg !10732
  br i1 %tobool153, label %if.else156, label %if.then154, !dbg !10733

if.then154:                                       ; preds = %land.lhs.true152
  %84 = load %struct.gpio_desc*, %struct.gpio_desc** %desc116, align 8, !dbg !10734
  %85 = load i32, i32* %value, align 4, !dbg !10736
  %tobool155 = icmp ne i32 %85, 0, !dbg !10736
  call void @gpio_set_open_source_value_commit(%struct.gpio_desc* %84, i1 zeroext %tobool155) #11, !dbg !10737
  br label %if.end160, !dbg !10738

if.else156:                                       ; preds = %land.lhs.true152, %if.else148
  %86 = load i32, i32* %hwgpio, align 4, !dbg !10739
  %conv157 = sext i32 %86 to i64, !dbg !10739
  %87 = load i64*, i64** %mask, align 8, !dbg !10740
  call void @__set_bit(i64 %conv157, i64* %87) #11, !dbg !10741
  %88 = load i32, i32* %hwgpio, align 4, !dbg !10742
  %conv158 = sext i32 %88 to i64, !dbg !10742
  %89 = load i64*, i64** %bits, align 8, !dbg !10743
  %90 = load i32, i32* %value, align 4, !dbg !10744
  %tobool159 = icmp ne i32 %90, 0, !dbg !10744
  store i64 %conv158, i64* %nr.addr.i, align 8
  store i64* %89, i64** %addr.addr.i, align 8
  %frombool.i = zext i1 %tobool159 to i8
  store i8 %frombool.i, i8* %value.addr.i, align 1
  %91 = load i8, i8* %value.addr.i, align 1, !dbg !10745
  %tobool.i = trunc i8 %91 to i1, !dbg !10745
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !10746

if.then.i:                                        ; preds = %if.else156
  %92 = load i64, i64* %nr.addr.i, align 8, !dbg !10747
  %93 = load i64*, i64** %addr.addr.i, align 8, !dbg !10748
  call void @__set_bit(i64 %92, i64* %93) #12, !dbg !10749
  br label %__assign_bit.exit, !dbg !10749

if.else.i:                                        ; preds = %if.else156
  %94 = load i64, i64* %nr.addr.i, align 8, !dbg !10750
  %95 = load i64*, i64** %addr.addr.i, align 8, !dbg !10751
  call void @__clear_bit(i64 %94, i64* %95) #12, !dbg !10752
  br label %__assign_bit.exit

__assign_bit.exit:                                ; preds = %if.then.i, %if.else.i
  %96 = load i32, i32* %count, align 4, !dbg !10753
  %inc = add i32 %96, 1, !dbg !10753
  store i32 %inc, i32* %count, align 4, !dbg !10753
  br label %if.end160

if.end160:                                        ; preds = %__assign_bit.exit, %if.then154
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %if.then146
  %97 = load i32, i32* %i, align 4, !dbg !10754
  %inc162 = add i32 %97, 1, !dbg !10754
  store i32 %inc162, i32* %i, align 4, !dbg !10754
  %98 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !10755
  %tobool163 = icmp ne %struct.gpio_array* %98, null, !dbg !10755
  br i1 %tobool163, label %if.then164, label %if.end170, !dbg !10757

if.then164:                                       ; preds = %if.end161
  %99 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !10758
  %set_mask165 = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %99, i32 0, i32 4, !dbg !10759
  %100 = load i64*, i64** %set_mask165, align 8, !dbg !10759
  %101 = load i32, i32* %array_size.addr, align 4, !dbg !10760
  %conv166 = zext i32 %101 to i64, !dbg !10760
  %102 = load i32, i32* %i, align 4, !dbg !10761
  %conv167 = sext i32 %102 to i64, !dbg !10761
  %call168 = call i64 @find_next_zero_bit(i64* %100, i64 %conv166, i64 %conv167) #11, !dbg !10762
  %conv169 = trunc i64 %call168 to i32, !dbg !10762
  store i32 %conv169, i32* %i, align 4, !dbg !10763
  br label %if.end170, !dbg !10764

if.end170:                                        ; preds = %if.then164, %if.end161
  br label %do.cond, !dbg !10765

do.cond:                                          ; preds = %if.end170
  %103 = load i32, i32* %i, align 4, !dbg !10766
  %104 = load i32, i32* %array_size.addr, align 4, !dbg !10767
  %cmp171 = icmp ult i32 %103, %104, !dbg !10768
  br i1 %cmp171, label %land.rhs, label %land.end, !dbg !10769

land.rhs:                                         ; preds = %do.cond
  %105 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !10770
  %106 = load i32, i32* %i, align 4, !dbg !10771
  %idxprom173 = sext i32 %106 to i64, !dbg !10770
  %arrayidx174 = getelementptr %struct.gpio_desc*, %struct.gpio_desc** %105, i64 %idxprom173, !dbg !10770
  %107 = load %struct.gpio_desc*, %struct.gpio_desc** %arrayidx174, align 8, !dbg !10770
  %gdev175 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %107, i32 0, i32 0, !dbg !10772
  %108 = load %struct.gpio_device*, %struct.gpio_device** %gdev175, align 8, !dbg !10772
  %chip176 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %108, i32 0, i32 5, !dbg !10773
  %109 = load %struct.gpio_chip*, %struct.gpio_chip** %chip176, align 8, !dbg !10773
  %110 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !10774
  %cmp177 = icmp eq %struct.gpio_chip* %109, %110, !dbg !10775
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %111 = phi i1 [ false, %do.cond ], [ %cmp177, %land.rhs ], !dbg !10776
  br i1 %111, label %do.body115, label %do.end179, !dbg !10765, !llvm.loop !10777

do.end179:                                        ; preds = %land.end
  %112 = load i32, i32* %count, align 4, !dbg !10779
  %cmp180 = icmp ne i32 %112, 0, !dbg !10781
  br i1 %cmp180, label %if.then182, label %if.end183, !dbg !10782

if.then182:                                       ; preds = %do.end179
  %113 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !10783
  %114 = load i64*, i64** %mask, align 8, !dbg !10784
  %115 = load i64*, i64** %bits, align 8, !dbg !10785
  call void @gpio_chip_set_multiple(%struct.gpio_chip* %113, i64* %114, i64* %115) #11, !dbg !10786
  br label %if.end183, !dbg !10786

if.end183:                                        ; preds = %if.then182, %do.end179
  %116 = load i64*, i64** %mask, align 8, !dbg !10787
  %arraydecay184 = getelementptr inbounds [16 x i64], [16 x i64]* %fastpath, i64 0, i64 0, !dbg !10789
  %cmp185 = icmp ne i64* %116, %arraydecay184, !dbg !10790
  br i1 %cmp185, label %if.then187, label %if.end188, !dbg !10791

if.then187:                                       ; preds = %if.end183
  %117 = load i64*, i64** %mask, align 8, !dbg !10792
  %118 = bitcast i64* %117 to i8*, !dbg !10792
  call void @kfree(i8* %118) #11, !dbg !10793
  br label %if.end188, !dbg !10793

if.end188:                                        ; preds = %if.then187, %if.end183
  br label %while.cond, !dbg !10617, !llvm.loop !10794

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !10796
  br label %return, !dbg !10796

return:                                           ; preds = %while.end, %if.then70, %if.then46
  %119 = load i32, i32* %retval, align 4, !dbg !10797
  ret i32 %119, !dbg !10797
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpio_chip_set_multiple(%struct.gpio_chip* %gc, i64* %mask, i64* %bits) #0 !dbg !10798 {
entry:
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %mask.addr = alloca i64*, align 8
  %bits.addr = alloca i64*, align 8
  %i = alloca i32, align 4
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !10799, metadata !DIExpression()), !dbg !10800
  store i64* %mask, i64** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %mask.addr, metadata !10801, metadata !DIExpression()), !dbg !10802
  store i64* %bits, i64** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %bits.addr, metadata !10803, metadata !DIExpression()), !dbg !10804
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !10805
  %set_multiple = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 12, !dbg !10807
  %1 = load void (%struct.gpio_chip*, i64*, i64*)*, void (%struct.gpio_chip*, i64*, i64*)** %set_multiple, align 8, !dbg !10807
  %tobool = icmp ne void (%struct.gpio_chip*, i64*, i64*)* %1, null, !dbg !10805
  br i1 %tobool, label %if.then, label %if.else, !dbg !10808

if.then:                                          ; preds = %entry
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !10809
  %set_multiple1 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %2, i32 0, i32 12, !dbg !10811
  %3 = load void (%struct.gpio_chip*, i64*, i64*)*, void (%struct.gpio_chip*, i64*, i64*)** %set_multiple1, align 8, !dbg !10811
  %4 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !10812
  %5 = load i64*, i64** %mask.addr, align 8, !dbg !10813
  %6 = load i64*, i64** %bits.addr, align 8, !dbg !10814
  call void %3(%struct.gpio_chip* %4, i64* %5, i64* %6) #11, !dbg !10809
  br label %if.end, !dbg !10815

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10816, metadata !DIExpression()), !dbg !10818
  %7 = load i64*, i64** %mask.addr, align 8, !dbg !10819
  %8 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !10819
  %ngpio = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %8, i32 0, i32 19, !dbg !10819
  %9 = load i16, i16* %ngpio, align 4, !dbg !10819
  %conv = zext i16 %9 to i64, !dbg !10819
  %call = call i64 @find_first_bit(i64* %7, i64 %conv) #11, !dbg !10819
  %conv2 = trunc i64 %call to i32, !dbg !10819
  store i32 %conv2, i32* %i, align 4, !dbg !10819
  br label %for.cond, !dbg !10819

for.cond:                                         ; preds = %for.inc, %if.else
  %10 = load i32, i32* %i, align 4, !dbg !10821
  %11 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !10821
  %ngpio3 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %11, i32 0, i32 19, !dbg !10821
  %12 = load i16, i16* %ngpio3, align 4, !dbg !10821
  %conv4 = zext i16 %12 to i32, !dbg !10821
  %cmp = icmp ult i32 %10, %conv4, !dbg !10821
  br i1 %cmp, label %for.body, label %for.end, !dbg !10819

for.body:                                         ; preds = %for.cond
  %13 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !10823
  %set = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %13, i32 0, i32 11, !dbg !10824
  %14 = load void (%struct.gpio_chip*, i32, i32)*, void (%struct.gpio_chip*, i32, i32)** %set, align 8, !dbg !10824
  %15 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !10825
  %16 = load i32, i32* %i, align 4, !dbg !10826
  %17 = load i32, i32* %i, align 4, !dbg !10827
  %conv6 = zext i32 %17 to i64, !dbg !10827
  %18 = load i64*, i64** %bits.addr, align 8, !dbg !10828
  %call7 = call zeroext i1 @test_bit(i64 %conv6, i64* %18) #11, !dbg !10829
  %conv8 = zext i1 %call7 to i32, !dbg !10829
  call void %14(%struct.gpio_chip* %15, i32 %16, i32 %conv8) #11, !dbg !10823
  br label %for.inc, !dbg !10823

for.inc:                                          ; preds = %for.body
  %19 = load i64*, i64** %mask.addr, align 8, !dbg !10821
  %20 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !10821
  %ngpio9 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %20, i32 0, i32 19, !dbg !10821
  %21 = load i16, i16* %ngpio9, align 4, !dbg !10821
  %conv10 = zext i16 %21 to i64, !dbg !10821
  %22 = load i32, i32* %i, align 4, !dbg !10821
  %add = add i32 %22, 1, !dbg !10821
  %conv11 = zext i32 %add to i64, !dbg !10821
  %call12 = call i64 @find_next_bit(i64* %19, i64 %conv10, i64 %conv11) #11, !dbg !10821
  %conv13 = trunc i64 %call12 to i32, !dbg !10821
  store i32 %conv13, i32* %i, align 4, !dbg !10821
  br label %for.cond, !dbg !10821, !llvm.loop !10830

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then
  ret void, !dbg !10832
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpio_set_open_drain_value_commit(%struct.gpio_desc* %desc, i1 zeroext %value) #0 !dbg !10833 {
entry:
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %value.addr = alloca i8, align 1
  %ret = alloca i32, align 4
  %gc = alloca %struct.gpio_chip*, align 8
  %offset = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !10836, metadata !DIExpression()), !dbg !10837
  %frombool = zext i1 %value to i8
  store i8 %frombool, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !10838, metadata !DIExpression()), !dbg !10839
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10840, metadata !DIExpression()), !dbg !10841
  store i32 0, i32* %ret, align 4, !dbg !10841
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !10842, metadata !DIExpression()), !dbg !10843
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10844
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %0, i32 0, i32 0, !dbg !10845
  %1 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !10845
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %1, i32 0, i32 5, !dbg !10846
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !10846
  store %struct.gpio_chip* %2, %struct.gpio_chip** %gc, align 8, !dbg !10843
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !10847, metadata !DIExpression()), !dbg !10848
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10849
  %call = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %3) #11, !dbg !10850
  store i32 %call, i32* %offset, align 4, !dbg !10848
  %4 = load i8, i8* %value.addr, align 1, !dbg !10851
  %tobool = trunc i8 %4 to i1, !dbg !10851
  br i1 %tobool, label %if.then, label %if.else, !dbg !10853

if.then:                                          ; preds = %entry
  %5 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !10854
  %direction_input = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %5, i32 0, i32 7, !dbg !10856
  %6 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %direction_input, align 8, !dbg !10856
  %7 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !10857
  %8 = load i32, i32* %offset, align 4, !dbg !10858
  %call1 = call i32 %6(%struct.gpio_chip* %7, i32 %8) #11, !dbg !10854
  store i32 %call1, i32* %ret, align 4, !dbg !10859
  br label %if.end5, !dbg !10860

if.else:                                          ; preds = %entry
  %9 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !10861
  %direction_output = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %9, i32 0, i32 8, !dbg !10863
  %10 = load i32 (%struct.gpio_chip*, i32, i32)*, i32 (%struct.gpio_chip*, i32, i32)** %direction_output, align 8, !dbg !10863
  %11 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !10864
  %12 = load i32, i32* %offset, align 4, !dbg !10865
  %call2 = call i32 %10(%struct.gpio_chip* %11, i32 %12, i32 0) #11, !dbg !10861
  store i32 %call2, i32* %ret, align 4, !dbg !10866
  %13 = load i32, i32* %ret, align 4, !dbg !10867
  %tobool3 = icmp ne i32 %13, 0, !dbg !10867
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !10869

if.then4:                                         ; preds = %if.else
  %14 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10870
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %14, i32 0, i32 1, !dbg !10871
  call void @set_bit(i64 1, i64* %flags) #11, !dbg !10872
  br label %if.end, !dbg !10872

if.end:                                           ; preds = %if.then4, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  %15 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10873
  %call6 = call i32 @desc_to_gpio(%struct.gpio_desc* %15) #11, !dbg !10874
  %16 = load i8, i8* %value.addr, align 1, !dbg !10875
  %tobool7 = trunc i8 %16 to i1, !dbg !10875
  %conv = zext i1 %tobool7 to i32, !dbg !10875
  %17 = load i32, i32* %ret, align 4, !dbg !10876
  call void @trace_gpio_direction(i32 %call6, i32 %conv, i32 %17) #11, !dbg !10877
  %18 = load i32, i32* %ret, align 4, !dbg !10878
  %cmp = icmp slt i32 %18, 0, !dbg !10880
  br i1 %cmp, label %if.then9, label %if.end13, !dbg !10881

if.then9:                                         ; preds = %if.end5
  %19 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10882
  %call10 = call i32 @desc_to_gpio(%struct.gpio_desc* %19) #11, !dbg !10882
  %20 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10882
  %label = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %20, i32 0, i32 2, !dbg !10882
  %21 = load i8*, i8** %label, align 8, !dbg !10882
  %tobool11 = icmp ne i8* %21, null, !dbg !10882
  br i1 %tobool11, label %cond.true, label %cond.false, !dbg !10882

cond.true:                                        ; preds = %if.then9
  br label %cond.end, !dbg !10882

cond.false:                                       ; preds = %if.then9
  br label %cond.end, !dbg !10882

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %21, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), %cond.false ], !dbg !10882
  %22 = load i32, i32* %ret, align 4, !dbg !10882
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.61, i64 0, i64 0), i32 %call10, i8* %cond, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__func__.gpio_set_open_drain_value_commit, i64 0, i64 0), i32 %22) #13, !dbg !10882
  br label %if.end13, !dbg !10882

if.end13:                                         ; preds = %cond.end, %if.end5
  ret void, !dbg !10883
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpio_set_open_source_value_commit(%struct.gpio_desc* %desc, i1 zeroext %value) #0 !dbg !10884 {
entry:
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %value.addr = alloca i8, align 1
  %ret = alloca i32, align 4
  %gc = alloca %struct.gpio_chip*, align 8
  %offset = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !10885, metadata !DIExpression()), !dbg !10886
  %frombool = zext i1 %value to i8
  store i8 %frombool, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !10887, metadata !DIExpression()), !dbg !10888
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10889, metadata !DIExpression()), !dbg !10890
  store i32 0, i32* %ret, align 4, !dbg !10890
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !10891, metadata !DIExpression()), !dbg !10892
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10893
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %0, i32 0, i32 0, !dbg !10894
  %1 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !10894
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %1, i32 0, i32 5, !dbg !10895
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !10895
  store %struct.gpio_chip* %2, %struct.gpio_chip** %gc, align 8, !dbg !10892
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !10896, metadata !DIExpression()), !dbg !10897
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10898
  %call = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %3) #11, !dbg !10899
  store i32 %call, i32* %offset, align 4, !dbg !10897
  %4 = load i8, i8* %value.addr, align 1, !dbg !10900
  %tobool = trunc i8 %4 to i1, !dbg !10900
  br i1 %tobool, label %if.then, label %if.else, !dbg !10902

if.then:                                          ; preds = %entry
  %5 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !10903
  %direction_output = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %5, i32 0, i32 8, !dbg !10905
  %6 = load i32 (%struct.gpio_chip*, i32, i32)*, i32 (%struct.gpio_chip*, i32, i32)** %direction_output, align 8, !dbg !10905
  %7 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !10906
  %8 = load i32, i32* %offset, align 4, !dbg !10907
  %call1 = call i32 %6(%struct.gpio_chip* %7, i32 %8, i32 1) #11, !dbg !10903
  store i32 %call1, i32* %ret, align 4, !dbg !10908
  %9 = load i32, i32* %ret, align 4, !dbg !10909
  %tobool2 = icmp ne i32 %9, 0, !dbg !10909
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !10911

if.then3:                                         ; preds = %if.then
  %10 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10912
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %10, i32 0, i32 1, !dbg !10913
  call void @set_bit(i64 1, i64* %flags) #11, !dbg !10914
  br label %if.end, !dbg !10914

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end5, !dbg !10915

if.else:                                          ; preds = %entry
  %11 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !10916
  %direction_input = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %11, i32 0, i32 7, !dbg !10918
  %12 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %direction_input, align 8, !dbg !10918
  %13 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !10919
  %14 = load i32, i32* %offset, align 4, !dbg !10920
  %call4 = call i32 %12(%struct.gpio_chip* %13, i32 %14) #11, !dbg !10916
  store i32 %call4, i32* %ret, align 4, !dbg !10921
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.end
  %15 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10922
  %call6 = call i32 @desc_to_gpio(%struct.gpio_desc* %15) #11, !dbg !10923
  %16 = load i8, i8* %value.addr, align 1, !dbg !10924
  %tobool7 = trunc i8 %16 to i1, !dbg !10924
  %lnot = xor i1 %tobool7, true, !dbg !10925
  %lnot.ext = zext i1 %lnot to i32, !dbg !10925
  %17 = load i32, i32* %ret, align 4, !dbg !10926
  call void @trace_gpio_direction(i32 %call6, i32 %lnot.ext, i32 %17) #11, !dbg !10927
  %18 = load i32, i32* %ret, align 4, !dbg !10928
  %cmp = icmp slt i32 %18, 0, !dbg !10930
  br i1 %cmp, label %if.then8, label %if.end12, !dbg !10931

if.then8:                                         ; preds = %if.end5
  %19 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10932
  %call9 = call i32 @desc_to_gpio(%struct.gpio_desc* %19) #11, !dbg !10932
  %20 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10932
  %label = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %20, i32 0, i32 2, !dbg !10932
  %21 = load i8*, i8** %label, align 8, !dbg !10932
  %tobool10 = icmp ne i8* %21, null, !dbg !10932
  br i1 %tobool10, label %cond.true, label %cond.false, !dbg !10932

cond.true:                                        ; preds = %if.then8
  br label %cond.end, !dbg !10932

cond.false:                                       ; preds = %if.then8
  br label %cond.end, !dbg !10932

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %21, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), %cond.false ], !dbg !10932
  %22 = load i32, i32* %ret, align 4, !dbg !10932
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.62, i64 0, i64 0), i32 %call9, i8* %cond, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.gpio_set_open_source_value_commit, i64 0, i64 0), i32 %22) #13, !dbg !10932
  br label %if.end12, !dbg !10932

if.end12:                                         ; preds = %cond.end, %if.end5
  ret void, !dbg !10933
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @gpiod_set_raw_value(%struct.gpio_desc* %desc, i32 %value) #0 !dbg !10934 {
entry:
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %value.addr = alloca i32, align 4
  %__valid = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !10937, metadata !DIExpression()), !dbg !10938
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !10939, metadata !DIExpression()), !dbg !10940
  br label %do.body, !dbg !10941

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__valid, metadata !10942, metadata !DIExpression()), !dbg !10944
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10944
  %call = call i32 @validate_desc(%struct.gpio_desc* %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.gpiod_set_raw_value, i64 0, i64 0)) #11, !dbg !10944
  store i32 %call, i32* %__valid, align 4, !dbg !10944
  %1 = load i32, i32* %__valid, align 4, !dbg !10945
  %cmp = icmp sle i32 %1, 0, !dbg !10945
  br i1 %cmp, label %if.then, label %if.end, !dbg !10944

if.then:                                          ; preds = %do.body
  br label %return, !dbg !10945

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !10944

do.end:                                           ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10947, metadata !DIExpression()), !dbg !10949
  %2 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10949
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %2, i32 0, i32 0, !dbg !10949
  %3 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !10949
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %3, i32 0, i32 5, !dbg !10949
  %4 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !10949
  %can_sleep = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %4, i32 0, i32 21, !dbg !10949
  %5 = load i8, i8* %can_sleep, align 8, !dbg !10949
  %tobool = trunc i8 %5 to i1, !dbg !10949
  %lnot = xor i1 %tobool, true, !dbg !10949
  %lnot1 = xor i1 %lnot, true, !dbg !10949
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10949
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !10949
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !10950
  %tobool2 = icmp ne i32 %6, 0, !dbg !10950
  %lnot3 = xor i1 %tobool2, true, !dbg !10950
  %lnot5 = xor i1 %lnot3, true, !dbg !10950
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !10950
  %conv = sext i32 %lnot.ext6 to i64, !dbg !10950
  %tobool7 = icmp ne i64 %conv, 0, !dbg !10950
  br i1 %tobool7, label %if.then8, label %if.end17, !dbg !10949

if.then8:                                         ; preds = %do.end
  br label %do.body9, !dbg !10950

do.body9:                                         ; preds = %if.then8
  br label %do.body10, !dbg !10952

do.body10:                                        ; preds = %do.body9
  br label %do.end11, !dbg !10954

do.end11:                                         ; preds = %do.body10
  br label %do.body12, !dbg !10952

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 3043, i32 2305, i64 12) #7, !dbg !10956, !srcloc !10958
  br label %do.end13, !dbg !10956

do.end13:                                         ; preds = %do.body12
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 251) #7, !dbg !10959, !srcloc !10961
  br label %do.body14, !dbg !10952

do.body14:                                        ; preds = %do.end13
  br label %do.end15, !dbg !10962

do.end15:                                         ; preds = %do.body14
  br label %do.end16, !dbg !10952

do.end16:                                         ; preds = %do.end15
  br label %if.end17, !dbg !10952

if.end17:                                         ; preds = %do.end16, %do.end
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !10949
  %tobool18 = icmp ne i32 %7, 0, !dbg !10949
  %lnot19 = xor i1 %tobool18, true, !dbg !10949
  %lnot21 = xor i1 %lnot19, true, !dbg !10949
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !10949
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !10949
  store i64 %conv23, i64* %tmp, align 8, !dbg !10950
  %8 = load i64, i64* %tmp, align 8, !dbg !10949
  %9 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10964
  %10 = load i32, i32* %value.addr, align 4, !dbg !10965
  %tobool24 = icmp ne i32 %10, 0, !dbg !10965
  call void @gpiod_set_raw_value_commit(%struct.gpio_desc* %9, i1 zeroext %tobool24) #11, !dbg !10966
  br label %return, !dbg !10967

return:                                           ; preds = %if.end17, %if.then
  ret void, !dbg !10967
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpiod_set_raw_value_commit(%struct.gpio_desc* %desc, i1 zeroext %value) #0 !dbg !10968 {
entry:
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %value.addr = alloca i8, align 1
  %gc = alloca %struct.gpio_chip*, align 8
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !10969, metadata !DIExpression()), !dbg !10970
  %frombool = zext i1 %value to i8
  store i8 %frombool, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !10971, metadata !DIExpression()), !dbg !10972
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !10973, metadata !DIExpression()), !dbg !10974
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10975
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %0, i32 0, i32 0, !dbg !10976
  %1 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !10976
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %1, i32 0, i32 5, !dbg !10977
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !10977
  store %struct.gpio_chip* %2, %struct.gpio_chip** %gc, align 8, !dbg !10978
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10979
  %call = call i32 @desc_to_gpio(%struct.gpio_desc* %3) #11, !dbg !10980
  %4 = load i8, i8* %value.addr, align 1, !dbg !10981
  %tobool = trunc i8 %4 to i1, !dbg !10981
  %conv = zext i1 %tobool to i32, !dbg !10981
  call void @trace_gpio_value(i32 %call, i32 0, i32 %conv) #11, !dbg !10982
  %5 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !10983
  %set = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %5, i32 0, i32 11, !dbg !10984
  %6 = load void (%struct.gpio_chip*, i32, i32)*, void (%struct.gpio_chip*, i32, i32)** %set, align 8, !dbg !10984
  %7 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !10985
  %8 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10986
  %call1 = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %8) #11, !dbg !10987
  %9 = load i8, i8* %value.addr, align 1, !dbg !10988
  %tobool2 = trunc i8 %9 to i1, !dbg !10988
  %conv3 = zext i1 %tobool2 to i32, !dbg !10988
  call void %6(%struct.gpio_chip* %7, i32 %call1, i32 %conv3) #11, !dbg !10983
  ret void, !dbg !10989
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @gpiod_set_value(%struct.gpio_desc* %desc, i32 %value) #0 !dbg !10990 {
entry:
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %value.addr = alloca i32, align 4
  %__valid = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !10991, metadata !DIExpression()), !dbg !10992
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !10993, metadata !DIExpression()), !dbg !10994
  br label %do.body, !dbg !10995

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__valid, metadata !10996, metadata !DIExpression()), !dbg !10998
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !10998
  %call = call i32 @validate_desc(%struct.gpio_desc* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.gpiod_set_value, i64 0, i64 0)) #11, !dbg !10998
  store i32 %call, i32* %__valid, align 4, !dbg !10998
  %1 = load i32, i32* %__valid, align 4, !dbg !10999
  %cmp = icmp sle i32 %1, 0, !dbg !10999
  br i1 %cmp, label %if.then, label %if.end, !dbg !10998

if.then:                                          ; preds = %do.body
  br label %return, !dbg !10999

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !10998

do.end:                                           ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11001, metadata !DIExpression()), !dbg !11003
  %2 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11003
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %2, i32 0, i32 0, !dbg !11003
  %3 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !11003
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %3, i32 0, i32 5, !dbg !11003
  %4 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !11003
  %can_sleep = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %4, i32 0, i32 21, !dbg !11003
  %5 = load i8, i8* %can_sleep, align 8, !dbg !11003
  %tobool = trunc i8 %5 to i1, !dbg !11003
  %lnot = xor i1 %tobool, true, !dbg !11003
  %lnot1 = xor i1 %lnot, true, !dbg !11003
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11003
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !11003
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !11004
  %tobool2 = icmp ne i32 %6, 0, !dbg !11004
  %lnot3 = xor i1 %tobool2, true, !dbg !11004
  %lnot5 = xor i1 %lnot3, true, !dbg !11004
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !11004
  %conv = sext i32 %lnot.ext6 to i64, !dbg !11004
  %tobool7 = icmp ne i64 %conv, 0, !dbg !11004
  br i1 %tobool7, label %if.then8, label %if.end17, !dbg !11003

if.then8:                                         ; preds = %do.end
  br label %do.body9, !dbg !11004

do.body9:                                         ; preds = %if.then8
  br label %do.body10, !dbg !11006

do.body10:                                        ; preds = %do.body9
  br label %do.end11, !dbg !11008

do.end11:                                         ; preds = %do.body10
  br label %do.body12, !dbg !11006

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 3084, i32 2305, i64 12) #7, !dbg !11010, !srcloc !11012
  br label %do.end13, !dbg !11010

do.end13:                                         ; preds = %do.body12
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 252) #7, !dbg !11013, !srcloc !11015
  br label %do.body14, !dbg !11006

do.body14:                                        ; preds = %do.end13
  br label %do.end15, !dbg !11016

do.end15:                                         ; preds = %do.body14
  br label %do.end16, !dbg !11006

do.end16:                                         ; preds = %do.end15
  br label %if.end17, !dbg !11006

if.end17:                                         ; preds = %do.end16, %do.end
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !11003
  %tobool18 = icmp ne i32 %7, 0, !dbg !11003
  %lnot19 = xor i1 %tobool18, true, !dbg !11003
  %lnot21 = xor i1 %lnot19, true, !dbg !11003
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !11003
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !11003
  store i64 %conv23, i64* %tmp, align 8, !dbg !11004
  %8 = load i64, i64* %tmp, align 8, !dbg !11003
  %9 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11018
  %10 = load i32, i32* %value.addr, align 4, !dbg !11019
  call void @gpiod_set_value_nocheck(%struct.gpio_desc* %9, i32 %10) #11, !dbg !11020
  br label %return, !dbg !11021

return:                                           ; preds = %if.end17, %if.then
  ret void, !dbg !11021
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpiod_set_value_nocheck(%struct.gpio_desc* %desc, i32 %value) #0 !dbg !11022 {
entry:
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %value.addr = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !11023, metadata !DIExpression()), !dbg !11024
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !11025, metadata !DIExpression()), !dbg !11026
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11027
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %0, i32 0, i32 1, !dbg !11029
  %call = call zeroext i1 @test_bit(i64 6, i64* %flags) #11, !dbg !11030
  br i1 %call, label %if.then, label %if.end, !dbg !11031

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %value.addr, align 4, !dbg !11032
  %tobool = icmp ne i32 %1, 0, !dbg !11033
  %lnot = xor i1 %tobool, true, !dbg !11033
  %lnot.ext = zext i1 %lnot to i32, !dbg !11033
  store i32 %lnot.ext, i32* %value.addr, align 4, !dbg !11034
  br label %if.end, !dbg !11035

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11036
  %flags1 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %2, i32 0, i32 1, !dbg !11038
  %call2 = call zeroext i1 @test_bit(i64 7, i64* %flags1) #11, !dbg !11039
  br i1 %call2, label %if.then3, label %if.else, !dbg !11040

if.then3:                                         ; preds = %if.end
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11041
  %4 = load i32, i32* %value.addr, align 4, !dbg !11042
  %tobool4 = icmp ne i32 %4, 0, !dbg !11042
  call void @gpio_set_open_drain_value_commit(%struct.gpio_desc* %3, i1 zeroext %tobool4) #11, !dbg !11043
  br label %if.end12, !dbg !11043

if.else:                                          ; preds = %if.end
  %5 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11044
  %flags5 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %5, i32 0, i32 1, !dbg !11046
  %call6 = call zeroext i1 @test_bit(i64 8, i64* %flags5) #11, !dbg !11047
  br i1 %call6, label %if.then7, label %if.else9, !dbg !11048

if.then7:                                         ; preds = %if.else
  %6 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11049
  %7 = load i32, i32* %value.addr, align 4, !dbg !11050
  %tobool8 = icmp ne i32 %7, 0, !dbg !11050
  call void @gpio_set_open_source_value_commit(%struct.gpio_desc* %6, i1 zeroext %tobool8) #11, !dbg !11051
  br label %if.end11, !dbg !11051

if.else9:                                         ; preds = %if.else
  %8 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11052
  %9 = load i32, i32* %value.addr, align 4, !dbg !11053
  %tobool10 = icmp ne i32 %9, 0, !dbg !11053
  call void @gpiod_set_raw_value_commit(%struct.gpio_desc* %8, i1 zeroext %tobool10) #11, !dbg !11054
  br label %if.end11

if.end11:                                         ; preds = %if.else9, %if.then7
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then3
  ret void, !dbg !11055
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_set_raw_array_value(i32 %array_size, %struct.gpio_desc** %desc_array, %struct.gpio_array* %array_info, i64* %value_bitmap) #0 !dbg !11056 {
entry:
  %retval = alloca i32, align 4
  %array_size.addr = alloca i32, align 4
  %desc_array.addr = alloca %struct.gpio_desc**, align 8
  %array_info.addr = alloca %struct.gpio_array*, align 8
  %value_bitmap.addr = alloca i64*, align 8
  store i32 %array_size, i32* %array_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %array_size.addr, metadata !11057, metadata !DIExpression()), !dbg !11058
  store %struct.gpio_desc** %desc_array, %struct.gpio_desc*** %desc_array.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc*** %desc_array.addr, metadata !11059, metadata !DIExpression()), !dbg !11060
  store %struct.gpio_array* %array_info, %struct.gpio_array** %array_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_array** %array_info.addr, metadata !11061, metadata !DIExpression()), !dbg !11062
  store i64* %value_bitmap, i64** %value_bitmap.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %value_bitmap.addr, metadata !11063, metadata !DIExpression()), !dbg !11064
  %0 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !11065
  %tobool = icmp ne %struct.gpio_desc** %0, null, !dbg !11065
  br i1 %tobool, label %if.end, label %if.then, !dbg !11067

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11068
  br label %return, !dbg !11068

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %array_size.addr, align 4, !dbg !11069
  %2 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !11070
  %3 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !11071
  %4 = load i64*, i64** %value_bitmap.addr, align 8, !dbg !11072
  %call = call i32 @gpiod_set_array_value_complex(i1 zeroext true, i1 zeroext false, i32 %1, %struct.gpio_desc** %2, %struct.gpio_array* %3, i64* %4) #11, !dbg !11073
  store i32 %call, i32* %retval, align 4, !dbg !11074
  br label %return, !dbg !11074

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !11075
  ret i32 %5, !dbg !11075
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_set_array_value(i32 %array_size, %struct.gpio_desc** %desc_array, %struct.gpio_array* %array_info, i64* %value_bitmap) #0 !dbg !11076 {
entry:
  %retval = alloca i32, align 4
  %array_size.addr = alloca i32, align 4
  %desc_array.addr = alloca %struct.gpio_desc**, align 8
  %array_info.addr = alloca %struct.gpio_array*, align 8
  %value_bitmap.addr = alloca i64*, align 8
  store i32 %array_size, i32* %array_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %array_size.addr, metadata !11077, metadata !DIExpression()), !dbg !11078
  store %struct.gpio_desc** %desc_array, %struct.gpio_desc*** %desc_array.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc*** %desc_array.addr, metadata !11079, metadata !DIExpression()), !dbg !11080
  store %struct.gpio_array* %array_info, %struct.gpio_array** %array_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_array** %array_info.addr, metadata !11081, metadata !DIExpression()), !dbg !11082
  store i64* %value_bitmap, i64** %value_bitmap.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %value_bitmap.addr, metadata !11083, metadata !DIExpression()), !dbg !11084
  %0 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !11085
  %tobool = icmp ne %struct.gpio_desc** %0, null, !dbg !11085
  br i1 %tobool, label %if.end, label %if.then, !dbg !11087

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11088
  br label %return, !dbg !11088

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %array_size.addr, align 4, !dbg !11089
  %2 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !11090
  %3 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !11091
  %4 = load i64*, i64** %value_bitmap.addr, align 8, !dbg !11092
  %call = call i32 @gpiod_set_array_value_complex(i1 zeroext false, i1 zeroext false, i32 %1, %struct.gpio_desc** %2, %struct.gpio_array* %3, i64* %4) #11, !dbg !11093
  store i32 %call, i32* %retval, align 4, !dbg !11094
  br label %return, !dbg !11094

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !11095
  ret i32 %5, !dbg !11095
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_cansleep(%struct.gpio_desc* %desc) #0 !dbg !11096 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %__valid = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !11097, metadata !DIExpression()), !dbg !11098
  br label %do.body, !dbg !11099

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__valid, metadata !11100, metadata !DIExpression()), !dbg !11102
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11102
  %call = call i32 @validate_desc(%struct.gpio_desc* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.gpiod_cansleep, i64 0, i64 0)) #11, !dbg !11102
  store i32 %call, i32* %__valid, align 4, !dbg !11102
  %1 = load i32, i32* %__valid, align 4, !dbg !11103
  %cmp = icmp sle i32 %1, 0, !dbg !11103
  br i1 %cmp, label %if.then, label %if.end, !dbg !11102

if.then:                                          ; preds = %do.body
  %2 = load i32, i32* %__valid, align 4, !dbg !11103
  store i32 %2, i32* %retval, align 4, !dbg !11103
  br label %return, !dbg !11103

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !11102

do.end:                                           ; preds = %if.end
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11105
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %3, i32 0, i32 0, !dbg !11106
  %4 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !11106
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %4, i32 0, i32 5, !dbg !11107
  %5 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !11107
  %can_sleep = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %5, i32 0, i32 21, !dbg !11108
  %6 = load i8, i8* %can_sleep, align 8, !dbg !11108
  %tobool = trunc i8 %6 to i1, !dbg !11108
  %conv = zext i1 %tobool to i32, !dbg !11105
  store i32 %conv, i32* %retval, align 4, !dbg !11109
  br label %return, !dbg !11109

return:                                           ; preds = %do.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !11110
  ret i32 %7, !dbg !11110
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_set_consumer_name(%struct.gpio_desc* %desc, i8* %name) #0 !dbg !11111 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %name.addr = alloca i8*, align 8
  %__valid = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !11112, metadata !DIExpression()), !dbg !11113
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !11114, metadata !DIExpression()), !dbg !11115
  br label %do.body, !dbg !11116

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__valid, metadata !11117, metadata !DIExpression()), !dbg !11119
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11119
  %call = call i32 @validate_desc(%struct.gpio_desc* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.gpiod_set_consumer_name, i64 0, i64 0)) #11, !dbg !11119
  store i32 %call, i32* %__valid, align 4, !dbg !11119
  %1 = load i32, i32* %__valid, align 4, !dbg !11120
  %cmp = icmp sle i32 %1, 0, !dbg !11120
  br i1 %cmp, label %if.then, label %if.end, !dbg !11119

if.then:                                          ; preds = %do.body
  %2 = load i32, i32* %__valid, align 4, !dbg !11120
  store i32 %2, i32* %retval, align 4, !dbg !11120
  br label %return, !dbg !11120

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !11119

do.end:                                           ; preds = %if.end
  %3 = load i8*, i8** %name.addr, align 8, !dbg !11122
  %tobool = icmp ne i8* %3, null, !dbg !11122
  br i1 %tobool, label %if.then1, label %if.end6, !dbg !11124

if.then1:                                         ; preds = %do.end
  %4 = load i8*, i8** %name.addr, align 8, !dbg !11125
  %call2 = call i8* @kstrdup_const(i8* %4, i32 3264) #11, !dbg !11127
  store i8* %call2, i8** %name.addr, align 8, !dbg !11128
  %5 = load i8*, i8** %name.addr, align 8, !dbg !11129
  %tobool3 = icmp ne i8* %5, null, !dbg !11129
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !11131

if.then4:                                         ; preds = %if.then1
  store i32 -12, i32* %retval, align 4, !dbg !11132
  br label %return, !dbg !11132

if.end5:                                          ; preds = %if.then1
  br label %if.end6, !dbg !11133

if.end6:                                          ; preds = %if.end5, %do.end
  %6 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11134
  %label = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %6, i32 0, i32 2, !dbg !11135
  %7 = load i8*, i8** %label, align 8, !dbg !11135
  call void @kfree_const(i8* %7) #11, !dbg !11136
  %8 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11137
  %9 = load i8*, i8** %name.addr, align 8, !dbg !11138
  call void @desc_set_label(%struct.gpio_desc* %8, i8* %9) #11, !dbg !11139
  store i32 0, i32* %retval, align 4, !dbg !11140
  br label %return, !dbg !11140

return:                                           ; preds = %if.end6, %if.then4, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !11141
  ret i32 %10, !dbg !11141
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @desc_set_label(%struct.gpio_desc* %d, i8* %label) #0 !dbg !11142 {
entry:
  %d.addr = alloca %struct.gpio_desc*, align 8
  %label.addr = alloca i8*, align 8
  store %struct.gpio_desc* %d, %struct.gpio_desc** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %d.addr, metadata !11145, metadata !DIExpression()), !dbg !11146
  store i8* %label, i8** %label.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %label.addr, metadata !11147, metadata !DIExpression()), !dbg !11148
  %0 = load i8*, i8** %label.addr, align 8, !dbg !11149
  %1 = load %struct.gpio_desc*, %struct.gpio_desc** %d.addr, align 8, !dbg !11150
  %label1 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %1, i32 0, i32 2, !dbg !11151
  store i8* %0, i8** %label1, align 8, !dbg !11152
  ret void, !dbg !11153
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_to_irq(%struct.gpio_desc* %desc) #0 !dbg !11154 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %gc = alloca %struct.gpio_chip*, align 8
  %offset = alloca i32, align 4
  %retirq = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !11155, metadata !DIExpression()), !dbg !11156
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !11157, metadata !DIExpression()), !dbg !11158
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !11159, metadata !DIExpression()), !dbg !11160
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11161
  %tobool = icmp ne %struct.gpio_desc* %0, null, !dbg !11161
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !11163

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11164
  %2 = bitcast %struct.gpio_desc* %1 to i8*, !dbg !11164
  %call = call zeroext i1 @IS_ERR(i8* %2) #11, !dbg !11165
  br i1 %call, label %if.then, label %lor.lhs.false1, !dbg !11166

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11167
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %3, i32 0, i32 0, !dbg !11168
  %4 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !11168
  %tobool2 = icmp ne %struct.gpio_device* %4, null, !dbg !11167
  br i1 %tobool2, label %lor.lhs.false3, label %if.then, !dbg !11169

lor.lhs.false3:                                   ; preds = %lor.lhs.false1
  %5 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11170
  %gdev4 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %5, i32 0, i32 0, !dbg !11171
  %6 = load %struct.gpio_device*, %struct.gpio_device** %gdev4, align 8, !dbg !11171
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %6, i32 0, i32 5, !dbg !11172
  %7 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !11172
  %tobool5 = icmp ne %struct.gpio_chip* %7, null, !dbg !11170
  br i1 %tobool5, label %if.end, label %if.then, !dbg !11173

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false1, %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !11174
  br label %return, !dbg !11174

if.end:                                           ; preds = %lor.lhs.false3
  %8 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11175
  %gdev6 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %8, i32 0, i32 0, !dbg !11176
  %9 = load %struct.gpio_device*, %struct.gpio_device** %gdev6, align 8, !dbg !11176
  %chip7 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %9, i32 0, i32 5, !dbg !11177
  %10 = load %struct.gpio_chip*, %struct.gpio_chip** %chip7, align 8, !dbg !11177
  store %struct.gpio_chip* %10, %struct.gpio_chip** %gc, align 8, !dbg !11178
  %11 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11179
  %call8 = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %11) #11, !dbg !11180
  store i32 %call8, i32* %offset, align 4, !dbg !11181
  %12 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !11182
  %to_irq = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %12, i32 0, i32 14, !dbg !11184
  %13 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %to_irq, align 8, !dbg !11184
  %tobool9 = icmp ne i32 (%struct.gpio_chip*, i32)* %13, null, !dbg !11182
  br i1 %tobool9, label %if.then10, label %if.end16, !dbg !11185

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %retirq, metadata !11186, metadata !DIExpression()), !dbg !11188
  %14 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !11189
  %to_irq11 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %14, i32 0, i32 14, !dbg !11190
  %15 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %to_irq11, align 8, !dbg !11190
  %16 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !11191
  %17 = load i32, i32* %offset, align 4, !dbg !11192
  %call12 = call i32 %15(%struct.gpio_chip* %16, i32 %17) #11, !dbg !11189
  store i32 %call12, i32* %retirq, align 4, !dbg !11188
  %18 = load i32, i32* %retirq, align 4, !dbg !11193
  %tobool13 = icmp ne i32 %18, 0, !dbg !11193
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !11195

if.then14:                                        ; preds = %if.then10
  store i32 -6, i32* %retval, align 4, !dbg !11196
  br label %return, !dbg !11196

if.end15:                                         ; preds = %if.then10
  %19 = load i32, i32* %retirq, align 4, !dbg !11197
  store i32 %19, i32* %retval, align 4, !dbg !11198
  br label %return, !dbg !11198

if.end16:                                         ; preds = %if.end
  store i32 -6, i32* %retval, align 4, !dbg !11199
  br label %return, !dbg !11199

return:                                           ; preds = %if.end16, %if.end15, %if.then14, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !11200
  ret i32 %20, !dbg !11200
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !11201 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11204, metadata !DIExpression()), !dbg !11205
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !11206
  %1 = ptrtoint i8* %0 to i64, !dbg !11207
  ret i64 %1, !dbg !11208
}

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @gpiochip_disable_irq(%struct.gpio_chip* %gc, i32 %offset) #0 !dbg !11209 {
entry:
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %offset.addr = alloca i32, align 4
  %desc = alloca %struct.gpio_desc*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !11210, metadata !DIExpression()), !dbg !11211
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !11212, metadata !DIExpression()), !dbg !11213
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc, metadata !11214, metadata !DIExpression()), !dbg !11215
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !11216
  %1 = load i32, i32* %offset.addr, align 4, !dbg !11217
  %call = call %struct.gpio_desc* @gpiochip_get_desc(%struct.gpio_chip* %0, i32 %1) #11, !dbg !11218
  store %struct.gpio_desc* %call, %struct.gpio_desc** %desc, align 8, !dbg !11215
  %2 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11219
  %3 = bitcast %struct.gpio_desc* %2 to i8*, !dbg !11219
  %call1 = call zeroext i1 @IS_ERR(i8* %3) #11, !dbg !11221
  br i1 %call1, label %if.end25, label %land.lhs.true, !dbg !11222

land.lhs.true:                                    ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11223, metadata !DIExpression()), !dbg !11225
  %4 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11225
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %4, i32 0, i32 1, !dbg !11225
  %call2 = call zeroext i1 @test_bit(i64 9, i64* %flags) #11, !dbg !11225
  %lnot = xor i1 %call2, true, !dbg !11225
  %lnot3 = xor i1 %lnot, true, !dbg !11225
  %lnot4 = xor i1 %lnot3, true, !dbg !11225
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !11225
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !11225
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !11226
  %tobool = icmp ne i32 %5, 0, !dbg !11226
  %lnot5 = xor i1 %tobool, true, !dbg !11226
  %lnot7 = xor i1 %lnot5, true, !dbg !11226
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !11226
  %conv = sext i32 %lnot.ext8 to i64, !dbg !11226
  %tobool9 = icmp ne i64 %conv, 0, !dbg !11226
  br i1 %tobool9, label %if.then, label %if.end, !dbg !11225

if.then:                                          ; preds = %land.lhs.true
  br label %do.body, !dbg !11226

do.body:                                          ; preds = %if.then
  br label %do.body10, !dbg !11228

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !11230

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !11228

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 3292, i32 2305, i64 12) #7, !dbg !11232, !srcloc !11234
  br label %do.end12, !dbg !11232

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 253) #7, !dbg !11235, !srcloc !11237
  br label %do.body13, !dbg !11228

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !11238

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !11228

do.end15:                                         ; preds = %do.end14
  br label %if.end, !dbg !11228

if.end:                                           ; preds = %do.end15, %land.lhs.true
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !11225
  %tobool16 = icmp ne i32 %6, 0, !dbg !11225
  %lnot17 = xor i1 %tobool16, true, !dbg !11225
  %lnot19 = xor i1 %lnot17, true, !dbg !11225
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !11225
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !11225
  store i64 %conv21, i64* %tmp, align 8, !dbg !11226
  %7 = load i64, i64* %tmp, align 8, !dbg !11225
  %tobool22 = icmp ne i64 %7, 0, !dbg !11240
  br i1 %tobool22, label %if.end25, label %if.then23, !dbg !11241

if.then23:                                        ; preds = %if.end
  %8 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11242
  %flags24 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %8, i32 0, i32 1, !dbg !11243
  call void @clear_bit(i64 10, i64* %flags24) #11, !dbg !11244
  br label %if.end25, !dbg !11244

if.end25:                                         ; preds = %if.then23, %if.end, %entry
  ret void, !dbg !11245
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @gpiochip_enable_irq(%struct.gpio_chip* %gc, i32 %offset) #0 !dbg !11246 {
entry:
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %offset.addr = alloca i32, align 4
  %desc = alloca %struct.gpio_desc*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on24 = alloca i32, align 4
  %tmp53 = alloca i64, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !11247, metadata !DIExpression()), !dbg !11248
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !11249, metadata !DIExpression()), !dbg !11250
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc, metadata !11251, metadata !DIExpression()), !dbg !11252
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !11253
  %1 = load i32, i32* %offset.addr, align 4, !dbg !11254
  %call = call %struct.gpio_desc* @gpiochip_get_desc(%struct.gpio_chip* %0, i32 %1) #11, !dbg !11255
  store %struct.gpio_desc* %call, %struct.gpio_desc** %desc, align 8, !dbg !11252
  %2 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11256
  %3 = bitcast %struct.gpio_desc* %2 to i8*, !dbg !11256
  %call1 = call zeroext i1 @IS_ERR(i8* %3) #11, !dbg !11258
  br i1 %call1, label %if.end61, label %land.lhs.true, !dbg !11259

land.lhs.true:                                    ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11260, metadata !DIExpression()), !dbg !11262
  %4 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11262
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %4, i32 0, i32 1, !dbg !11262
  %call2 = call zeroext i1 @test_bit(i64 9, i64* %flags) #11, !dbg !11262
  %lnot = xor i1 %call2, true, !dbg !11262
  %lnot3 = xor i1 %lnot, true, !dbg !11262
  %lnot4 = xor i1 %lnot3, true, !dbg !11262
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !11262
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !11262
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !11263
  %tobool = icmp ne i32 %5, 0, !dbg !11263
  %lnot5 = xor i1 %tobool, true, !dbg !11263
  %lnot7 = xor i1 %lnot5, true, !dbg !11263
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !11263
  %conv = sext i32 %lnot.ext8 to i64, !dbg !11263
  %tobool9 = icmp ne i64 %conv, 0, !dbg !11263
  br i1 %tobool9, label %if.then, label %if.end, !dbg !11262

if.then:                                          ; preds = %land.lhs.true
  br label %do.body, !dbg !11263

do.body:                                          ; preds = %if.then
  br label %do.body10, !dbg !11265

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !11267

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !11265

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 3302, i32 2305, i64 12) #7, !dbg !11269, !srcloc !11271
  br label %do.end12, !dbg !11269

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 254) #7, !dbg !11272, !srcloc !11274
  br label %do.body13, !dbg !11265

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !11275

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !11265

do.end15:                                         ; preds = %do.end14
  br label %if.end, !dbg !11265

if.end:                                           ; preds = %do.end15, %land.lhs.true
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !11262
  %tobool16 = icmp ne i32 %6, 0, !dbg !11262
  %lnot17 = xor i1 %tobool16, true, !dbg !11262
  %lnot19 = xor i1 %lnot17, true, !dbg !11262
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !11262
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !11262
  store i64 %conv21, i64* %tmp, align 8, !dbg !11263
  %7 = load i64, i64* %tmp, align 8, !dbg !11262
  %tobool22 = icmp ne i64 %7, 0, !dbg !11277
  br i1 %tobool22, label %if.end61, label %if.then23, !dbg !11278

if.then23:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on24, metadata !11279, metadata !DIExpression()), !dbg !11282
  %8 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11282
  %flags25 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %8, i32 0, i32 1, !dbg !11282
  %call26 = call zeroext i1 @test_bit(i64 1, i64* %flags25) #11, !dbg !11282
  br i1 %call26, label %land.rhs, label %land.end, !dbg !11282

land.rhs:                                         ; preds = %if.then23
  %9 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11282
  %flags28 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %9, i32 0, i32 1, !dbg !11282
  %call29 = call zeroext i1 @test_bit(i64 7, i64* %flags28) #11, !dbg !11282
  %lnot30 = xor i1 %call29, true, !dbg !11282
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then23
  %10 = phi i1 [ false, %if.then23 ], [ %lnot30, %land.rhs ], !dbg !11283
  %lnot32 = xor i1 %10, true, !dbg !11282
  %lnot34 = xor i1 %lnot32, true, !dbg !11282
  %lnot.ext35 = zext i1 %lnot34 to i32, !dbg !11282
  store i32 %lnot.ext35, i32* %__ret_warn_on24, align 4, !dbg !11282
  %11 = load i32, i32* %__ret_warn_on24, align 4, !dbg !11284
  %tobool36 = icmp ne i32 %11, 0, !dbg !11284
  %lnot37 = xor i1 %tobool36, true, !dbg !11284
  %lnot39 = xor i1 %lnot37, true, !dbg !11284
  %lnot.ext40 = zext i1 %lnot39 to i32, !dbg !11284
  %conv41 = sext i32 %lnot.ext40 to i64, !dbg !11284
  %tobool42 = icmp ne i64 %conv41, 0, !dbg !11284
  br i1 %tobool42, label %if.then43, label %if.end52, !dbg !11282

if.then43:                                        ; preds = %land.end
  br label %do.body44, !dbg !11284

do.body44:                                        ; preds = %if.then43
  br label %do.body45, !dbg !11286

do.body45:                                        ; preds = %do.body44
  br label %do.end46, !dbg !11288

do.end46:                                         ; preds = %do.body45
  br label %do.body47, !dbg !11286

do.body47:                                        ; preds = %do.end46
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 3308, i32 2305, i64 12) #7, !dbg !11290, !srcloc !11292
  br label %do.end48, !dbg !11290

do.end48:                                         ; preds = %do.body47
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 255) #7, !dbg !11293, !srcloc !11295
  br label %do.body49, !dbg !11286

do.body49:                                        ; preds = %do.end48
  br label %do.end50, !dbg !11296

do.end50:                                         ; preds = %do.body49
  br label %do.end51, !dbg !11286

do.end51:                                         ; preds = %do.end50
  br label %if.end52, !dbg !11286

if.end52:                                         ; preds = %do.end51, %land.end
  %12 = load i32, i32* %__ret_warn_on24, align 4, !dbg !11282
  %tobool54 = icmp ne i32 %12, 0, !dbg !11282
  %lnot55 = xor i1 %tobool54, true, !dbg !11282
  %lnot57 = xor i1 %lnot55, true, !dbg !11282
  %lnot.ext58 = zext i1 %lnot57 to i32, !dbg !11282
  %conv59 = sext i32 %lnot.ext58 to i64, !dbg !11282
  store i64 %conv59, i64* %tmp53, align 8, !dbg !11284
  %13 = load i64, i64* %tmp53, align 8, !dbg !11282
  %14 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11298
  %flags60 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %14, i32 0, i32 1, !dbg !11299
  call void @set_bit(i64 10, i64* %flags60) #11, !dbg !11300
  br label %if.end61, !dbg !11301

if.end61:                                         ; preds = %if.end52, %if.end, %entry
  ret void, !dbg !11302
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @gpiochip_line_is_irq(%struct.gpio_chip* %gc, i32 %offset) #0 !dbg !11303 {
entry:
  %retval = alloca i1, align 1
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !11306, metadata !DIExpression()), !dbg !11307
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !11308, metadata !DIExpression()), !dbg !11309
  %0 = load i32, i32* %offset.addr, align 4, !dbg !11310
  %1 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !11312
  %ngpio = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %1, i32 0, i32 19, !dbg !11313
  %2 = load i16, i16* %ngpio, align 4, !dbg !11313
  %conv = zext i16 %2 to i32, !dbg !11312
  %cmp = icmp uge i32 %0, %conv, !dbg !11314
  br i1 %cmp, label %if.then, label %if.end, !dbg !11315

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11316
  br label %return, !dbg !11316

if.end:                                           ; preds = %entry
  %3 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !11317
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %3, i32 0, i32 1, !dbg !11318
  %4 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !11318
  %descs = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %4, i32 0, i32 6, !dbg !11319
  %5 = load %struct.gpio_desc*, %struct.gpio_desc** %descs, align 8, !dbg !11319
  %6 = load i32, i32* %offset.addr, align 4, !dbg !11320
  %idxprom = zext i32 %6 to i64, !dbg !11317
  %arrayidx = getelementptr %struct.gpio_desc, %struct.gpio_desc* %5, i64 %idxprom, !dbg !11317
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %arrayidx, i32 0, i32 1, !dbg !11321
  %call = call zeroext i1 @test_bit(i64 9, i64* %flags) #11, !dbg !11322
  store i1 %call, i1* %retval, align 1, !dbg !11323
  br label %return, !dbg !11323

return:                                           ; preds = %if.end, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !11324
  ret i1 %7, !dbg !11324
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiochip_reqres_irq(%struct.gpio_chip* %gc, i32 %offset) #0 !dbg !11325 {
entry:
  %retval = alloca i32, align 4
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %offset.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !11326, metadata !DIExpression()), !dbg !11327
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !11328, metadata !DIExpression()), !dbg !11329
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11330, metadata !DIExpression()), !dbg !11331
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !11332
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 1, !dbg !11334
  %1 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !11334
  %owner = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %1, i32 0, i32 4, !dbg !11335
  %2 = load %struct.module*, %struct.module** %owner, align 8, !dbg !11335
  %call = call zeroext i1 @try_module_get(%struct.module* %2) #11, !dbg !11336
  br i1 %call, label %if.end, label %if.then, !dbg !11337

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !11338
  br label %return, !dbg !11338

if.end:                                           ; preds = %entry
  %3 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !11339
  %4 = load i32, i32* %offset.addr, align 4, !dbg !11340
  %call1 = call i32 @gpiochip_lock_as_irq(%struct.gpio_chip* %3, i32 %4) #11, !dbg !11341
  store i32 %call1, i32* %ret, align 4, !dbg !11342
  %5 = load i32, i32* %ret, align 4, !dbg !11343
  %tobool = icmp ne i32 %5, 0, !dbg !11343
  br i1 %tobool, label %if.then2, label %if.end6, !dbg !11345

if.then2:                                         ; preds = %if.end
  %6 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !11346
  %gpiodev3 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %6, i32 0, i32 1, !dbg !11346
  %7 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev3, align 8, !dbg !11346
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %7, i32 0, i32 1, !dbg !11346
  %8 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !11346
  %label = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %8, i32 0, i32 0, !dbg !11346
  %9 = load i8*, i8** %label, align 8, !dbg !11346
  %10 = load i32, i32* %offset.addr, align 4, !dbg !11346
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0), i8* %9, i32 %10) #13, !dbg !11346
  %11 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !11348
  %gpiodev4 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %11, i32 0, i32 1, !dbg !11349
  %12 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev4, align 8, !dbg !11349
  %owner5 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %12, i32 0, i32 4, !dbg !11350
  %13 = load %struct.module*, %struct.module** %owner5, align 8, !dbg !11350
  call void @module_put(%struct.module* %13) #11, !dbg !11351
  %14 = load i32, i32* %ret, align 4, !dbg !11352
  store i32 %14, i32* %retval, align 4, !dbg !11353
  br label %return, !dbg !11353

if.end6:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11354
  br label %return, !dbg !11354

return:                                           ; preds = %if.end6, %if.then2, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !11355
  ret i32 %15, !dbg !11355
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @gpiochip_relres_irq(%struct.gpio_chip* %gc, i32 %offset) #0 !dbg !11356 {
entry:
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !11357, metadata !DIExpression()), !dbg !11358
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !11359, metadata !DIExpression()), !dbg !11360
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !11361
  %1 = load i32, i32* %offset.addr, align 4, !dbg !11362
  call void @gpiochip_unlock_as_irq(%struct.gpio_chip* %0, i32 %1) #11, !dbg !11363
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !11364
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %2, i32 0, i32 1, !dbg !11365
  %3 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !11365
  %owner = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %3, i32 0, i32 4, !dbg !11366
  %4 = load %struct.module*, %struct.module** %owner, align 8, !dbg !11366
  call void @module_put(%struct.module* %4) #11, !dbg !11367
  ret void, !dbg !11368
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @gpiochip_line_is_open_drain(%struct.gpio_chip* %gc, i32 %offset) #0 !dbg !11369 {
entry:
  %retval = alloca i1, align 1
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !11370, metadata !DIExpression()), !dbg !11371
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !11372, metadata !DIExpression()), !dbg !11373
  %0 = load i32, i32* %offset.addr, align 4, !dbg !11374
  %1 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !11376
  %ngpio = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %1, i32 0, i32 19, !dbg !11377
  %2 = load i16, i16* %ngpio, align 4, !dbg !11377
  %conv = zext i16 %2 to i32, !dbg !11376
  %cmp = icmp uge i32 %0, %conv, !dbg !11378
  br i1 %cmp, label %if.then, label %if.end, !dbg !11379

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11380
  br label %return, !dbg !11380

if.end:                                           ; preds = %entry
  %3 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !11381
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %3, i32 0, i32 1, !dbg !11382
  %4 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !11382
  %descs = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %4, i32 0, i32 6, !dbg !11383
  %5 = load %struct.gpio_desc*, %struct.gpio_desc** %descs, align 8, !dbg !11383
  %6 = load i32, i32* %offset.addr, align 4, !dbg !11384
  %idxprom = zext i32 %6 to i64, !dbg !11381
  %arrayidx = getelementptr %struct.gpio_desc, %struct.gpio_desc* %5, i64 %idxprom, !dbg !11381
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %arrayidx, i32 0, i32 1, !dbg !11385
  %call = call zeroext i1 @test_bit(i64 7, i64* %flags) #11, !dbg !11386
  store i1 %call, i1* %retval, align 1, !dbg !11387
  br label %return, !dbg !11387

return:                                           ; preds = %if.end, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !11388
  ret i1 %7, !dbg !11388
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @gpiochip_line_is_open_source(%struct.gpio_chip* %gc, i32 %offset) #0 !dbg !11389 {
entry:
  %retval = alloca i1, align 1
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !11390, metadata !DIExpression()), !dbg !11391
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !11392, metadata !DIExpression()), !dbg !11393
  %0 = load i32, i32* %offset.addr, align 4, !dbg !11394
  %1 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !11396
  %ngpio = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %1, i32 0, i32 19, !dbg !11397
  %2 = load i16, i16* %ngpio, align 4, !dbg !11397
  %conv = zext i16 %2 to i32, !dbg !11396
  %cmp = icmp uge i32 %0, %conv, !dbg !11398
  br i1 %cmp, label %if.then, label %if.end, !dbg !11399

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11400
  br label %return, !dbg !11400

if.end:                                           ; preds = %entry
  %3 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !11401
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %3, i32 0, i32 1, !dbg !11402
  %4 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !11402
  %descs = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %4, i32 0, i32 6, !dbg !11403
  %5 = load %struct.gpio_desc*, %struct.gpio_desc** %descs, align 8, !dbg !11403
  %6 = load i32, i32* %offset.addr, align 4, !dbg !11404
  %idxprom = zext i32 %6 to i64, !dbg !11401
  %arrayidx = getelementptr %struct.gpio_desc, %struct.gpio_desc* %5, i64 %idxprom, !dbg !11401
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %arrayidx, i32 0, i32 1, !dbg !11405
  %call = call zeroext i1 @test_bit(i64 8, i64* %flags) #11, !dbg !11406
  store i1 %call, i1* %retval, align 1, !dbg !11407
  br label %return, !dbg !11407

return:                                           ; preds = %if.end, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !11408
  ret i1 %7, !dbg !11408
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @gpiochip_line_is_persistent(%struct.gpio_chip* %gc, i32 %offset) #0 !dbg !11409 {
entry:
  %retval = alloca i1, align 1
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !11410, metadata !DIExpression()), !dbg !11411
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !11412, metadata !DIExpression()), !dbg !11413
  %0 = load i32, i32* %offset.addr, align 4, !dbg !11414
  %1 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !11416
  %ngpio = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %1, i32 0, i32 19, !dbg !11417
  %2 = load i16, i16* %ngpio, align 4, !dbg !11417
  %conv = zext i16 %2 to i32, !dbg !11416
  %cmp = icmp uge i32 %0, %conv, !dbg !11418
  br i1 %cmp, label %if.then, label %if.end, !dbg !11419

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11420
  br label %return, !dbg !11420

if.end:                                           ; preds = %entry
  %3 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !11421
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %3, i32 0, i32 1, !dbg !11422
  %4 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !11422
  %descs = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %4, i32 0, i32 6, !dbg !11423
  %5 = load %struct.gpio_desc*, %struct.gpio_desc** %descs, align 8, !dbg !11423
  %6 = load i32, i32* %offset.addr, align 4, !dbg !11424
  %idxprom = zext i32 %6 to i64, !dbg !11421
  %arrayidx = getelementptr %struct.gpio_desc, %struct.gpio_desc* %5, i64 %idxprom, !dbg !11421
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %arrayidx, i32 0, i32 1, !dbg !11425
  %call = call zeroext i1 @test_bit(i64 12, i64* %flags) #11, !dbg !11426
  %lnot = xor i1 %call, true, !dbg !11427
  store i1 %lnot, i1* %retval, align 1, !dbg !11428
  br label %return, !dbg !11428

return:                                           ; preds = %if.end, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !11429
  ret i1 %7, !dbg !11429
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_get_raw_value_cansleep(%struct.gpio_desc* %desc) #0 !dbg !11430 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %__valid = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !11431, metadata !DIExpression()), !dbg !11432
  br label %do.body, !dbg !11433

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11434

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !11436

do.body1:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %__valid, metadata !11437, metadata !DIExpression()), !dbg !11439
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11439
  %call = call i32 @validate_desc(%struct.gpio_desc* %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.gpiod_get_raw_value_cansleep, i64 0, i64 0)) #11, !dbg !11439
  store i32 %call, i32* %__valid, align 4, !dbg !11439
  %1 = load i32, i32* %__valid, align 4, !dbg !11440
  %cmp = icmp sle i32 %1, 0, !dbg !11440
  br i1 %cmp, label %if.then, label %if.end, !dbg !11439

if.then:                                          ; preds = %do.body1
  %2 = load i32, i32* %__valid, align 4, !dbg !11440
  store i32 %2, i32* %retval, align 4, !dbg !11440
  br label %return, !dbg !11440

if.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !11439

do.end2:                                          ; preds = %if.end
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11442
  %call3 = call i32 @gpiod_get_raw_value_commit(%struct.gpio_desc* %3) #11, !dbg !11443
  store i32 %call3, i32* %retval, align 4, !dbg !11444
  br label %return, !dbg !11444

return:                                           ; preds = %do.end2, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !11445
  ret i32 %4, !dbg !11445
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_get_value_cansleep(%struct.gpio_desc* %desc) #0 !dbg !11446 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %value = alloca i32, align 4
  %__valid = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !11447, metadata !DIExpression()), !dbg !11448
  call void @llvm.dbg.declare(metadata i32* %value, metadata !11449, metadata !DIExpression()), !dbg !11450
  br label %do.body, !dbg !11451

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11452

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !11454

do.body1:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %__valid, metadata !11455, metadata !DIExpression()), !dbg !11457
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11457
  %call = call i32 @validate_desc(%struct.gpio_desc* %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.gpiod_get_value_cansleep, i64 0, i64 0)) #11, !dbg !11457
  store i32 %call, i32* %__valid, align 4, !dbg !11457
  %1 = load i32, i32* %__valid, align 4, !dbg !11458
  %cmp = icmp sle i32 %1, 0, !dbg !11458
  br i1 %cmp, label %if.then, label %if.end, !dbg !11457

if.then:                                          ; preds = %do.body1
  %2 = load i32, i32* %__valid, align 4, !dbg !11458
  store i32 %2, i32* %retval, align 4, !dbg !11458
  br label %return, !dbg !11458

if.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !11457

do.end2:                                          ; preds = %if.end
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11460
  %call3 = call i32 @gpiod_get_raw_value_commit(%struct.gpio_desc* %3) #11, !dbg !11461
  store i32 %call3, i32* %value, align 4, !dbg !11462
  %4 = load i32, i32* %value, align 4, !dbg !11463
  %cmp4 = icmp slt i32 %4, 0, !dbg !11465
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !11466

if.then5:                                         ; preds = %do.end2
  %5 = load i32, i32* %value, align 4, !dbg !11467
  store i32 %5, i32* %retval, align 4, !dbg !11468
  br label %return, !dbg !11468

if.end6:                                          ; preds = %do.end2
  %6 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11469
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %6, i32 0, i32 1, !dbg !11471
  %call7 = call zeroext i1 @test_bit(i64 6, i64* %flags) #11, !dbg !11472
  br i1 %call7, label %if.then8, label %if.end9, !dbg !11473

if.then8:                                         ; preds = %if.end6
  %7 = load i32, i32* %value, align 4, !dbg !11474
  %tobool = icmp ne i32 %7, 0, !dbg !11475
  %lnot = xor i1 %tobool, true, !dbg !11475
  %lnot.ext = zext i1 %lnot to i32, !dbg !11475
  store i32 %lnot.ext, i32* %value, align 4, !dbg !11476
  br label %if.end9, !dbg !11477

if.end9:                                          ; preds = %if.then8, %if.end6
  %8 = load i32, i32* %value, align 4, !dbg !11478
  store i32 %8, i32* %retval, align 4, !dbg !11479
  br label %return, !dbg !11479

return:                                           ; preds = %if.end9, %if.then5, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !11480
  ret i32 %9, !dbg !11480
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_get_raw_array_value_cansleep(i32 %array_size, %struct.gpio_desc** %desc_array, %struct.gpio_array* %array_info, i64* %value_bitmap) #0 !dbg !11481 {
entry:
  %retval = alloca i32, align 4
  %array_size.addr = alloca i32, align 4
  %desc_array.addr = alloca %struct.gpio_desc**, align 8
  %array_info.addr = alloca %struct.gpio_array*, align 8
  %value_bitmap.addr = alloca i64*, align 8
  store i32 %array_size, i32* %array_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %array_size.addr, metadata !11482, metadata !DIExpression()), !dbg !11483
  store %struct.gpio_desc** %desc_array, %struct.gpio_desc*** %desc_array.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc*** %desc_array.addr, metadata !11484, metadata !DIExpression()), !dbg !11485
  store %struct.gpio_array* %array_info, %struct.gpio_array** %array_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_array** %array_info.addr, metadata !11486, metadata !DIExpression()), !dbg !11487
  store i64* %value_bitmap, i64** %value_bitmap.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %value_bitmap.addr, metadata !11488, metadata !DIExpression()), !dbg !11489
  br label %do.body, !dbg !11490

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11491

do.end:                                           ; preds = %do.body
  %0 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !11493
  %tobool = icmp ne %struct.gpio_desc** %0, null, !dbg !11493
  br i1 %tobool, label %if.end, label %if.then, !dbg !11495

if.then:                                          ; preds = %do.end
  store i32 -22, i32* %retval, align 4, !dbg !11496
  br label %return, !dbg !11496

if.end:                                           ; preds = %do.end
  %1 = load i32, i32* %array_size.addr, align 4, !dbg !11497
  %2 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !11498
  %3 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !11499
  %4 = load i64*, i64** %value_bitmap.addr, align 8, !dbg !11500
  %call = call i32 @gpiod_get_array_value_complex(i1 zeroext true, i1 zeroext true, i32 %1, %struct.gpio_desc** %2, %struct.gpio_array* %3, i64* %4) #11, !dbg !11501
  store i32 %call, i32* %retval, align 4, !dbg !11502
  br label %return, !dbg !11502

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !11503
  ret i32 %5, !dbg !11503
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_get_array_value_cansleep(i32 %array_size, %struct.gpio_desc** %desc_array, %struct.gpio_array* %array_info, i64* %value_bitmap) #0 !dbg !11504 {
entry:
  %retval = alloca i32, align 4
  %array_size.addr = alloca i32, align 4
  %desc_array.addr = alloca %struct.gpio_desc**, align 8
  %array_info.addr = alloca %struct.gpio_array*, align 8
  %value_bitmap.addr = alloca i64*, align 8
  store i32 %array_size, i32* %array_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %array_size.addr, metadata !11505, metadata !DIExpression()), !dbg !11506
  store %struct.gpio_desc** %desc_array, %struct.gpio_desc*** %desc_array.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc*** %desc_array.addr, metadata !11507, metadata !DIExpression()), !dbg !11508
  store %struct.gpio_array* %array_info, %struct.gpio_array** %array_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_array** %array_info.addr, metadata !11509, metadata !DIExpression()), !dbg !11510
  store i64* %value_bitmap, i64** %value_bitmap.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %value_bitmap.addr, metadata !11511, metadata !DIExpression()), !dbg !11512
  br label %do.body, !dbg !11513

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11514

do.end:                                           ; preds = %do.body
  %0 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !11516
  %tobool = icmp ne %struct.gpio_desc** %0, null, !dbg !11516
  br i1 %tobool, label %if.end, label %if.then, !dbg !11518

if.then:                                          ; preds = %do.end
  store i32 -22, i32* %retval, align 4, !dbg !11519
  br label %return, !dbg !11519

if.end:                                           ; preds = %do.end
  %1 = load i32, i32* %array_size.addr, align 4, !dbg !11520
  %2 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !11521
  %3 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !11522
  %4 = load i64*, i64** %value_bitmap.addr, align 8, !dbg !11523
  %call = call i32 @gpiod_get_array_value_complex(i1 zeroext false, i1 zeroext true, i32 %1, %struct.gpio_desc** %2, %struct.gpio_array* %3, i64* %4) #11, !dbg !11524
  store i32 %call, i32* %retval, align 4, !dbg !11525
  br label %return, !dbg !11525

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !11526
  ret i32 %5, !dbg !11526
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @gpiod_set_raw_value_cansleep(%struct.gpio_desc* %desc, i32 %value) #0 !dbg !11527 {
entry:
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %value.addr = alloca i32, align 4
  %__valid = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !11528, metadata !DIExpression()), !dbg !11529
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !11530, metadata !DIExpression()), !dbg !11531
  br label %do.body, !dbg !11532

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11533

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !11535

do.body1:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %__valid, metadata !11536, metadata !DIExpression()), !dbg !11538
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11538
  %call = call i32 @validate_desc(%struct.gpio_desc* %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.gpiod_set_raw_value_cansleep, i64 0, i64 0)) #11, !dbg !11538
  store i32 %call, i32* %__valid, align 4, !dbg !11538
  %1 = load i32, i32* %__valid, align 4, !dbg !11539
  %cmp = icmp sle i32 %1, 0, !dbg !11539
  br i1 %cmp, label %if.then, label %if.end, !dbg !11538

if.then:                                          ; preds = %do.body1
  br label %return, !dbg !11539

if.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !11538

do.end2:                                          ; preds = %if.end
  %2 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11541
  %3 = load i32, i32* %value.addr, align 4, !dbg !11542
  %tobool = icmp ne i32 %3, 0, !dbg !11542
  call void @gpiod_set_raw_value_commit(%struct.gpio_desc* %2, i1 zeroext %tobool) #11, !dbg !11543
  br label %return, !dbg !11544

return:                                           ; preds = %do.end2, %if.then
  ret void, !dbg !11544
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @gpiod_set_value_cansleep(%struct.gpio_desc* %desc, i32 %value) #0 !dbg !11545 {
entry:
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %value.addr = alloca i32, align 4
  %__valid = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !11546, metadata !DIExpression()), !dbg !11547
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !11548, metadata !DIExpression()), !dbg !11549
  br label %do.body, !dbg !11550

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11551

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !11553

do.body1:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %__valid, metadata !11554, metadata !DIExpression()), !dbg !11556
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11556
  %call = call i32 @validate_desc(%struct.gpio_desc* %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.gpiod_set_value_cansleep, i64 0, i64 0)) #11, !dbg !11556
  store i32 %call, i32* %__valid, align 4, !dbg !11556
  %1 = load i32, i32* %__valid, align 4, !dbg !11557
  %cmp = icmp sle i32 %1, 0, !dbg !11557
  br i1 %cmp, label %if.then, label %if.end, !dbg !11556

if.then:                                          ; preds = %do.body1
  br label %return, !dbg !11557

if.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !11556

do.end2:                                          ; preds = %if.end
  %2 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !11559
  %3 = load i32, i32* %value.addr, align 4, !dbg !11560
  call void @gpiod_set_value_nocheck(%struct.gpio_desc* %2, i32 %3) #11, !dbg !11561
  br label %return, !dbg !11562

return:                                           ; preds = %do.end2, %if.then
  ret void, !dbg !11562
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_set_raw_array_value_cansleep(i32 %array_size, %struct.gpio_desc** %desc_array, %struct.gpio_array* %array_info, i64* %value_bitmap) #0 !dbg !11563 {
entry:
  %retval = alloca i32, align 4
  %array_size.addr = alloca i32, align 4
  %desc_array.addr = alloca %struct.gpio_desc**, align 8
  %array_info.addr = alloca %struct.gpio_array*, align 8
  %value_bitmap.addr = alloca i64*, align 8
  store i32 %array_size, i32* %array_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %array_size.addr, metadata !11564, metadata !DIExpression()), !dbg !11565
  store %struct.gpio_desc** %desc_array, %struct.gpio_desc*** %desc_array.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc*** %desc_array.addr, metadata !11566, metadata !DIExpression()), !dbg !11567
  store %struct.gpio_array* %array_info, %struct.gpio_array** %array_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_array** %array_info.addr, metadata !11568, metadata !DIExpression()), !dbg !11569
  store i64* %value_bitmap, i64** %value_bitmap.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %value_bitmap.addr, metadata !11570, metadata !DIExpression()), !dbg !11571
  br label %do.body, !dbg !11572

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11573

do.end:                                           ; preds = %do.body
  %0 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !11575
  %tobool = icmp ne %struct.gpio_desc** %0, null, !dbg !11575
  br i1 %tobool, label %if.end, label %if.then, !dbg !11577

if.then:                                          ; preds = %do.end
  store i32 -22, i32* %retval, align 4, !dbg !11578
  br label %return, !dbg !11578

if.end:                                           ; preds = %do.end
  %1 = load i32, i32* %array_size.addr, align 4, !dbg !11579
  %2 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !11580
  %3 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !11581
  %4 = load i64*, i64** %value_bitmap.addr, align 8, !dbg !11582
  %call = call i32 @gpiod_set_array_value_complex(i1 zeroext true, i1 zeroext true, i32 %1, %struct.gpio_desc** %2, %struct.gpio_array* %3, i64* %4) #11, !dbg !11583
  store i32 %call, i32* %retval, align 4, !dbg !11584
  br label %return, !dbg !11584

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !11585
  ret i32 %5, !dbg !11585
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @gpiod_add_lookup_tables(%struct.gpiod_lookup_table** %tables, i64 %n) #0 !dbg !11586 {
entry:
  %tables.addr = alloca %struct.gpiod_lookup_table**, align 8
  %n.addr = alloca i64, align 8
  %i = alloca i32, align 4
  store %struct.gpiod_lookup_table** %tables, %struct.gpiod_lookup_table*** %tables.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpiod_lookup_table*** %tables.addr, metadata !11590, metadata !DIExpression()), !dbg !11591
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11592, metadata !DIExpression()), !dbg !11593
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11594, metadata !DIExpression()), !dbg !11595
  call void @mutex_lock(%struct.mutex* @gpio_lookup_lock) #11, !dbg !11596
  store i32 0, i32* %i, align 4, !dbg !11597
  br label %for.cond, !dbg !11599

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11600
  %conv = zext i32 %0 to i64, !dbg !11600
  %1 = load i64, i64* %n.addr, align 8, !dbg !11602
  %cmp = icmp ult i64 %conv, %1, !dbg !11603
  br i1 %cmp, label %for.body, label %for.end, !dbg !11604

for.body:                                         ; preds = %for.cond
  %2 = load %struct.gpiod_lookup_table**, %struct.gpiod_lookup_table*** %tables.addr, align 8, !dbg !11605
  %3 = load i32, i32* %i, align 4, !dbg !11606
  %idxprom = zext i32 %3 to i64, !dbg !11605
  %arrayidx = getelementptr %struct.gpiod_lookup_table*, %struct.gpiod_lookup_table** %2, i64 %idxprom, !dbg !11605
  %4 = load %struct.gpiod_lookup_table*, %struct.gpiod_lookup_table** %arrayidx, align 8, !dbg !11605
  %list = getelementptr inbounds %struct.gpiod_lookup_table, %struct.gpiod_lookup_table* %4, i32 0, i32 0, !dbg !11607
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* @gpio_lookup_list) #11, !dbg !11608
  br label %for.inc, !dbg !11608

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !11609
  %inc = add i32 %5, 1, !dbg !11609
  store i32 %inc, i32* %i, align 4, !dbg !11609
  br label %for.cond, !dbg !11610, !llvm.loop !11611

for.end:                                          ; preds = %for.cond
  call void @mutex_unlock(%struct.mutex* @gpio_lookup_lock) #11, !dbg !11613
  ret void, !dbg !11614
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !11615 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !11618, metadata !DIExpression()), !dbg !11619
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !11620, metadata !DIExpression()), !dbg !11621
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !11622
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11623
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !11624
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !11624
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11625
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #11, !dbg !11626
  ret void, !dbg !11627
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_set_array_value_cansleep(i32 %array_size, %struct.gpio_desc** %desc_array, %struct.gpio_array* %array_info, i64* %value_bitmap) #0 !dbg !11628 {
entry:
  %retval = alloca i32, align 4
  %array_size.addr = alloca i32, align 4
  %desc_array.addr = alloca %struct.gpio_desc**, align 8
  %array_info.addr = alloca %struct.gpio_array*, align 8
  %value_bitmap.addr = alloca i64*, align 8
  store i32 %array_size, i32* %array_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %array_size.addr, metadata !11629, metadata !DIExpression()), !dbg !11630
  store %struct.gpio_desc** %desc_array, %struct.gpio_desc*** %desc_array.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc*** %desc_array.addr, metadata !11631, metadata !DIExpression()), !dbg !11632
  store %struct.gpio_array* %array_info, %struct.gpio_array** %array_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_array** %array_info.addr, metadata !11633, metadata !DIExpression()), !dbg !11634
  store i64* %value_bitmap, i64** %value_bitmap.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %value_bitmap.addr, metadata !11635, metadata !DIExpression()), !dbg !11636
  br label %do.body, !dbg !11637

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11638

do.end:                                           ; preds = %do.body
  %0 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !11640
  %tobool = icmp ne %struct.gpio_desc** %0, null, !dbg !11640
  br i1 %tobool, label %if.end, label %if.then, !dbg !11642

if.then:                                          ; preds = %do.end
  store i32 -22, i32* %retval, align 4, !dbg !11643
  br label %return, !dbg !11643

if.end:                                           ; preds = %do.end
  %1 = load i32, i32* %array_size.addr, align 4, !dbg !11644
  %2 = load %struct.gpio_desc**, %struct.gpio_desc*** %desc_array.addr, align 8, !dbg !11645
  %3 = load %struct.gpio_array*, %struct.gpio_array** %array_info.addr, align 8, !dbg !11646
  %4 = load i64*, i64** %value_bitmap.addr, align 8, !dbg !11647
  %call = call i32 @gpiod_set_array_value_complex(i1 zeroext false, i1 zeroext true, i32 %1, %struct.gpio_desc** %2, %struct.gpio_array* %3, i64* %4) #11, !dbg !11648
  store i32 %call, i32* %retval, align 4, !dbg !11649
  br label %return, !dbg !11649

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !11650
  ret i32 %5, !dbg !11650
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @gpiod_add_lookup_table(%struct.gpiod_lookup_table* %table) #0 !dbg !11651 {
entry:
  %table.addr = alloca %struct.gpiod_lookup_table*, align 8
  store %struct.gpiod_lookup_table* %table, %struct.gpiod_lookup_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpiod_lookup_table** %table.addr, metadata !11654, metadata !DIExpression()), !dbg !11655
  call void @mutex_lock(%struct.mutex* @gpio_lookup_lock) #11, !dbg !11656
  %0 = load %struct.gpiod_lookup_table*, %struct.gpiod_lookup_table** %table.addr, align 8, !dbg !11657
  %list = getelementptr inbounds %struct.gpiod_lookup_table, %struct.gpiod_lookup_table* %0, i32 0, i32 0, !dbg !11658
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* @gpio_lookup_list) #11, !dbg !11659
  call void @mutex_unlock(%struct.mutex* @gpio_lookup_lock) #11, !dbg !11660
  ret void, !dbg !11661
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @gpiod_remove_lookup_table(%struct.gpiod_lookup_table* %table) #0 !dbg !11662 {
entry:
  %table.addr = alloca %struct.gpiod_lookup_table*, align 8
  store %struct.gpiod_lookup_table* %table, %struct.gpiod_lookup_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpiod_lookup_table** %table.addr, metadata !11663, metadata !DIExpression()), !dbg !11664
  call void @mutex_lock(%struct.mutex* @gpio_lookup_lock) #11, !dbg !11665
  %0 = load %struct.gpiod_lookup_table*, %struct.gpiod_lookup_table** %table.addr, align 8, !dbg !11666
  %list = getelementptr inbounds %struct.gpiod_lookup_table, %struct.gpiod_lookup_table* %0, i32 0, i32 0, !dbg !11667
  call void @list_del(%struct.list_head* %list) #11, !dbg !11668
  call void @mutex_unlock(%struct.mutex* @gpio_lookup_lock) #11, !dbg !11669
  ret void, !dbg !11670
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @gpiod_add_hogs(%struct.gpiod_hog* %hogs) #0 !dbg !11671 {
entry:
  %hogs.addr = alloca %struct.gpiod_hog*, align 8
  %gc = alloca %struct.gpio_chip*, align 8
  %hog = alloca %struct.gpiod_hog*, align 8
  store %struct.gpiod_hog* %hogs, %struct.gpiod_hog** %hogs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpiod_hog** %hogs.addr, metadata !11674, metadata !DIExpression()), !dbg !11675
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !11676, metadata !DIExpression()), !dbg !11677
  call void @llvm.dbg.declare(metadata %struct.gpiod_hog** %hog, metadata !11678, metadata !DIExpression()), !dbg !11679
  call void @mutex_lock(%struct.mutex* @gpio_machine_hogs_mutex) #11, !dbg !11680
  %0 = load %struct.gpiod_hog*, %struct.gpiod_hog** %hogs.addr, align 8, !dbg !11681
  %arrayidx = getelementptr %struct.gpiod_hog, %struct.gpiod_hog* %0, i64 0, !dbg !11681
  store %struct.gpiod_hog* %arrayidx, %struct.gpiod_hog** %hog, align 8, !dbg !11683
  br label %for.cond, !dbg !11684

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.gpiod_hog*, %struct.gpiod_hog** %hog, align 8, !dbg !11685
  %chip_label = getelementptr inbounds %struct.gpiod_hog, %struct.gpiod_hog* %1, i32 0, i32 1, !dbg !11687
  %2 = load i8*, i8** %chip_label, align 8, !dbg !11687
  %tobool = icmp ne i8* %2, null, !dbg !11688
  br i1 %tobool, label %for.body, label %for.end, !dbg !11688

for.body:                                         ; preds = %for.cond
  %3 = load %struct.gpiod_hog*, %struct.gpiod_hog** %hog, align 8, !dbg !11689
  %list = getelementptr inbounds %struct.gpiod_hog, %struct.gpiod_hog* %3, i32 0, i32 0, !dbg !11691
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* @gpio_machine_hogs) #11, !dbg !11692
  %4 = load %struct.gpiod_hog*, %struct.gpiod_hog** %hog, align 8, !dbg !11693
  %chip_label1 = getelementptr inbounds %struct.gpiod_hog, %struct.gpiod_hog* %4, i32 0, i32 1, !dbg !11694
  %5 = load i8*, i8** %chip_label1, align 8, !dbg !11694
  %call = call %struct.gpio_chip* @find_chip_by_name(i8* %5) #11, !dbg !11695
  store %struct.gpio_chip* %call, %struct.gpio_chip** %gc, align 8, !dbg !11696
  %6 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !11697
  %tobool2 = icmp ne %struct.gpio_chip* %6, null, !dbg !11697
  br i1 %tobool2, label %if.then, label %if.end, !dbg !11699

if.then:                                          ; preds = %for.body
  %7 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !11700
  %8 = load %struct.gpiod_hog*, %struct.gpiod_hog** %hog, align 8, !dbg !11701
  call void @gpiochip_machine_hog(%struct.gpio_chip* %7, %struct.gpiod_hog* %8) #11, !dbg !11702
  br label %if.end, !dbg !11702

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !11703

for.inc:                                          ; preds = %if.end
  %9 = load %struct.gpiod_hog*, %struct.gpiod_hog** %hog, align 8, !dbg !11704
  %incdec.ptr = getelementptr %struct.gpiod_hog, %struct.gpiod_hog* %9, i32 1, !dbg !11704
  store %struct.gpiod_hog* %incdec.ptr, %struct.gpiod_hog** %hog, align 8, !dbg !11704
  br label %for.cond, !dbg !11705, !llvm.loop !11706

for.end:                                          ; preds = %for.cond
  call void @mutex_unlock(%struct.mutex* @gpio_machine_hogs_mutex) #11, !dbg !11708
  ret void, !dbg !11709
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.gpio_chip* @find_chip_by_name(i8* %name) #0 !dbg !11710 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !11713, metadata !DIExpression()), !dbg !11714
  %0 = load i8*, i8** %name.addr, align 8, !dbg !11715
  %call = call %struct.gpio_chip* @gpiochip_find(i8* %0, i32 (%struct.gpio_chip*, i8*)* @gpiochip_match_name) #11, !dbg !11716
  ret %struct.gpio_chip* %call, !dbg !11717
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpiochip_machine_hog(%struct.gpio_chip* %gc, %struct.gpiod_hog* %hog) #0 !dbg !11718 {
entry:
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %hog.addr = alloca %struct.gpiod_hog*, align 8
  %desc = alloca %struct.gpio_desc*, align 8
  %rv = alloca i32, align 4
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !11721, metadata !DIExpression()), !dbg !11722
  store %struct.gpiod_hog* %hog, %struct.gpiod_hog** %hog.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpiod_hog** %hog.addr, metadata !11723, metadata !DIExpression()), !dbg !11724
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc, metadata !11725, metadata !DIExpression()), !dbg !11726
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !11727, metadata !DIExpression()), !dbg !11728
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !11729
  %1 = load %struct.gpiod_hog*, %struct.gpiod_hog** %hog.addr, align 8, !dbg !11730
  %chip_hwnum = getelementptr inbounds %struct.gpiod_hog, %struct.gpiod_hog* %1, i32 0, i32 2, !dbg !11731
  %2 = load i16, i16* %chip_hwnum, align 8, !dbg !11731
  %conv = zext i16 %2 to i32, !dbg !11730
  %call = call %struct.gpio_desc* @gpiochip_get_desc(%struct.gpio_chip* %0, i32 %conv) #11, !dbg !11732
  store %struct.gpio_desc* %call, %struct.gpio_desc** %desc, align 8, !dbg !11733
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11734
  %4 = bitcast %struct.gpio_desc* %3 to i8*, !dbg !11734
  %call1 = call zeroext i1 @IS_ERR(i8* %4) #11, !dbg !11736
  br i1 %call1, label %if.then, label %if.end, !dbg !11737

if.then:                                          ; preds = %entry
  %5 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !11738
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %5, i32 0, i32 1, !dbg !11738
  %6 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !11738
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %6, i32 0, i32 1, !dbg !11738
  %7 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !11738
  %label = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %7, i32 0, i32 0, !dbg !11738
  %8 = load i8*, i8** %label, align 8, !dbg !11738
  %9 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11738
  %10 = bitcast %struct.gpio_desc* %9 to i8*, !dbg !11738
  %call2 = call i64 @PTR_ERR(i8* %10) #11, !dbg !11738
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.63, i64 0, i64 0), i8* %8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.gpiochip_machine_hog, i64 0, i64 0), i64 %call2) #13, !dbg !11738
  br label %if.end15, !dbg !11740

if.end:                                           ; preds = %entry
  %11 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11741
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %11, i32 0, i32 1, !dbg !11743
  %call3 = call zeroext i1 @test_bit(i64 11, i64* %flags) #11, !dbg !11744
  br i1 %call3, label %if.then4, label %if.end5, !dbg !11745

if.then4:                                         ; preds = %if.end
  br label %if.end15, !dbg !11746

if.end5:                                          ; preds = %if.end
  %12 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11747
  %13 = load %struct.gpiod_hog*, %struct.gpiod_hog** %hog.addr, align 8, !dbg !11748
  %line_name = getelementptr inbounds %struct.gpiod_hog, %struct.gpiod_hog* %13, i32 0, i32 3, !dbg !11749
  %14 = load i8*, i8** %line_name, align 8, !dbg !11749
  %15 = load %struct.gpiod_hog*, %struct.gpiod_hog** %hog.addr, align 8, !dbg !11750
  %lflags = getelementptr inbounds %struct.gpiod_hog, %struct.gpiod_hog* %15, i32 0, i32 4, !dbg !11751
  %16 = load i64, i64* %lflags, align 8, !dbg !11751
  %17 = load %struct.gpiod_hog*, %struct.gpiod_hog** %hog.addr, align 8, !dbg !11752
  %dflags = getelementptr inbounds %struct.gpiod_hog, %struct.gpiod_hog* %17, i32 0, i32 5, !dbg !11753
  %18 = load i32, i32* %dflags, align 8, !dbg !11753
  %call6 = call i32 @gpiod_hog(%struct.gpio_desc* %12, i8* %14, i64 %16, i32 %18) #11, !dbg !11754
  store i32 %call6, i32* %rv, align 4, !dbg !11755
  %19 = load i32, i32* %rv, align 4, !dbg !11756
  %tobool = icmp ne i32 %19, 0, !dbg !11756
  br i1 %tobool, label %if.then7, label %if.end15, !dbg !11758

if.then7:                                         ; preds = %if.end5
  %20 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11759
  %call8 = call i32 @desc_to_gpio(%struct.gpio_desc* %20) #11, !dbg !11759
  %21 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11759
  %label9 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %21, i32 0, i32 2, !dbg !11759
  %22 = load i8*, i8** %label9, align 8, !dbg !11759
  %tobool10 = icmp ne i8* %22, null, !dbg !11759
  br i1 %tobool10, label %cond.true, label %cond.false, !dbg !11759

cond.true:                                        ; preds = %if.then7
  br label %cond.end, !dbg !11759

cond.false:                                       ; preds = %if.then7
  br label %cond.end, !dbg !11759

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %22, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), %cond.false ], !dbg !11759
  %23 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !11759
  %label11 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %23, i32 0, i32 0, !dbg !11759
  %24 = load i8*, i8** %label11, align 8, !dbg !11759
  %25 = load %struct.gpiod_hog*, %struct.gpiod_hog** %hog.addr, align 8, !dbg !11759
  %chip_hwnum12 = getelementptr inbounds %struct.gpiod_hog, %struct.gpiod_hog* %25, i32 0, i32 2, !dbg !11759
  %26 = load i16, i16* %chip_hwnum12, align 8, !dbg !11759
  %conv13 = zext i16 %26 to i32, !dbg !11759
  %27 = load i32, i32* %rv, align 4, !dbg !11759
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.64, i64 0, i64 0), i32 %call8, i8* %cond, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.gpiochip_machine_hog, i64 0, i64 0), i8* %24, i32 %conv13, i32 %27) #13, !dbg !11759
  br label %if.end15, !dbg !11759

if.end15:                                         ; preds = %if.then, %if.then4, %cond.end, %if.end5
  ret void, !dbg !11760
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.gpio_desc* @fwnode_gpiod_get_index(%struct.fwnode_handle* %fwnode, i8* %con_id, i32 %index, i32 %flags, i8* %label) #0 !dbg !11761 {
entry:
  %fwnode.addr = alloca %struct.fwnode_handle*, align 8
  %con_id.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %desc = alloca %struct.gpio_desc*, align 8
  %prop_name = alloca [32 x i8], align 16
  %i = alloca i32, align 4
  store %struct.fwnode_handle* %fwnode, %struct.fwnode_handle** %fwnode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %fwnode.addr, metadata !11764, metadata !DIExpression()), !dbg !11765
  store i8* %con_id, i8** %con_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con_id.addr, metadata !11766, metadata !DIExpression()), !dbg !11767
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !11768, metadata !DIExpression()), !dbg !11769
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11770, metadata !DIExpression()), !dbg !11771
  store i8* %label, i8** %label.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %label.addr, metadata !11772, metadata !DIExpression()), !dbg !11773
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc, metadata !11774, metadata !DIExpression()), !dbg !11775
  call void @llvm.dbg.declare(metadata [32 x i8]* %prop_name, metadata !11776, metadata !DIExpression()), !dbg !11777
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11778, metadata !DIExpression()), !dbg !11779
  store i32 0, i32* %i, align 4, !dbg !11780
  br label %for.cond, !dbg !11782

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11783
  %conv = zext i32 %0 to i64, !dbg !11783
  %cmp = icmp ult i64 %conv, 2, !dbg !11785
  br i1 %cmp, label %for.body, label %for.end, !dbg !11786

for.body:                                         ; preds = %for.cond
  %1 = load i8*, i8** %con_id.addr, align 8, !dbg !11787
  %tobool = icmp ne i8* %1, null, !dbg !11787
  br i1 %tobool, label %if.then, label %if.else, !dbg !11790

if.then:                                          ; preds = %for.body
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %prop_name, i64 0, i64 0, !dbg !11791
  %2 = load i8*, i8** %con_id.addr, align 8, !dbg !11792
  %3 = load i32, i32* %i, align 4, !dbg !11793
  %idxprom = zext i32 %3 to i64, !dbg !11794
  %arrayidx = getelementptr [2 x i8*], [2 x i8*]* @gpio_suffixes, i64 0, i64 %idxprom, !dbg !11794
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !11794
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0), i8* %2, i8* %4) #11, !dbg !11795
  br label %if.end, !dbg !11795

if.else:                                          ; preds = %for.body
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %prop_name, i64 0, i64 0, !dbg !11796
  %5 = load i32, i32* %i, align 4, !dbg !11797
  %idxprom3 = zext i32 %5 to i64, !dbg !11798
  %arrayidx4 = getelementptr [2 x i8*], [2 x i8*]* @gpio_suffixes, i64 0, i64 %idxprom3, !dbg !11798
  %6 = load i8*, i8** %arrayidx4, align 8, !dbg !11798
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay2, i64 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i8* %6) #11, !dbg !11799
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !11800
  %arraydecay6 = getelementptr inbounds [32 x i8], [32 x i8]* %prop_name, i64 0, i64 0, !dbg !11801
  %8 = load i32, i32* %index.addr, align 4, !dbg !11802
  %9 = load i32, i32* %flags.addr, align 4, !dbg !11803
  %10 = load i8*, i8** %label.addr, align 8, !dbg !11804
  %call7 = call %struct.gpio_desc* @fwnode_get_named_gpiod(%struct.fwnode_handle* %7, i8* %arraydecay6, i32 %8, i32 %9, i8* %10) #11, !dbg !11805
  store %struct.gpio_desc* %call7, %struct.gpio_desc** %desc, align 8, !dbg !11806
  %11 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11807
  %12 = bitcast %struct.gpio_desc* %11 to i8*, !dbg !11807
  %call8 = call zeroext i1 @IS_ERR(i8* %12) #11, !dbg !11809
  br i1 %call8, label %lor.lhs.false, label %if.then12, !dbg !11810

lor.lhs.false:                                    ; preds = %if.end
  %13 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11811
  %14 = bitcast %struct.gpio_desc* %13 to i8*, !dbg !11811
  %call9 = call i64 @PTR_ERR(i8* %14) #11, !dbg !11812
  %cmp10 = icmp ne i64 %call9, -2, !dbg !11813
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !11814

if.then12:                                        ; preds = %lor.lhs.false, %if.end
  br label %for.end, !dbg !11815

if.end13:                                         ; preds = %lor.lhs.false
  br label %for.inc, !dbg !11816

for.inc:                                          ; preds = %if.end13
  %15 = load i32, i32* %i, align 4, !dbg !11817
  %inc = add i32 %15, 1, !dbg !11817
  store i32 %inc, i32* %i, align 4, !dbg !11817
  br label %for.cond, !dbg !11818, !llvm.loop !11819

for.end:                                          ; preds = %if.then12, %for.cond
  %16 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11821
  ret %struct.gpio_desc* %16, !dbg !11822
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.gpio_desc* @fwnode_get_named_gpiod(%struct.fwnode_handle* %fwnode, i8* %propname, i32 %index, i32 %dflags, i8* %label) #0 !dbg !11823 {
entry:
  %retval = alloca %struct.gpio_desc*, align 8
  %fwnode.addr = alloca %struct.fwnode_handle*, align 8
  %propname.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %dflags.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %lflags = alloca i64, align 8
  %desc = alloca %struct.gpio_desc*, align 8
  %ret = alloca i32, align 4
  %__to_of_node_fwnode = alloca %struct.fwnode_handle*, align 8
  %tmp = alloca %struct.device_node*, align 8
  %__mptr = alloca i8*, align 8
  %tmp5 = alloca %struct.device_node*, align 8
  %info = alloca %struct.acpi_gpio_info, align 8
  store %struct.fwnode_handle* %fwnode, %struct.fwnode_handle** %fwnode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %fwnode.addr, metadata !11824, metadata !DIExpression()), !dbg !11825
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !11826, metadata !DIExpression()), !dbg !11827
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !11828, metadata !DIExpression()), !dbg !11829
  store i32 %dflags, i32* %dflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dflags.addr, metadata !11830, metadata !DIExpression()), !dbg !11831
  store i8* %label, i8** %label.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %label.addr, metadata !11832, metadata !DIExpression()), !dbg !11833
  call void @llvm.dbg.declare(metadata i64* %lflags, metadata !11834, metadata !DIExpression()), !dbg !11835
  store i64 0, i64* %lflags, align 8, !dbg !11835
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc, metadata !11836, metadata !DIExpression()), !dbg !11837
  %call = call i8* @ERR_PTR(i64 -19) #11, !dbg !11838
  %0 = bitcast i8* %call to %struct.gpio_desc*, !dbg !11838
  store %struct.gpio_desc* %0, %struct.gpio_desc** %desc, align 8, !dbg !11837
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11839, metadata !DIExpression()), !dbg !11840
  %1 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !11841
  %tobool = icmp ne %struct.fwnode_handle* %1, null, !dbg !11841
  br i1 %tobool, label %if.end, label %if.then, !dbg !11843

if.then:                                          ; preds = %entry
  %call1 = call i8* @ERR_PTR(i64 -22) #11, !dbg !11844
  %2 = bitcast i8* %call1 to %struct.gpio_desc*, !dbg !11844
  store %struct.gpio_desc* %2, %struct.gpio_desc** %retval, align 8, !dbg !11845
  br label %return, !dbg !11845

if.end:                                           ; preds = %entry
  %3 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !11846
  %call2 = call zeroext i1 @is_of_node(%struct.fwnode_handle* %3) #11, !dbg !11848
  br i1 %call2, label %if.then3, label %if.else, !dbg !11849

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %__to_of_node_fwnode, metadata !11850, metadata !DIExpression()), !dbg !11853
  %4 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !11853
  store %struct.fwnode_handle* %4, %struct.fwnode_handle** %__to_of_node_fwnode, align 8, !dbg !11853
  %5 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_of_node_fwnode, align 8, !dbg !11853
  %call4 = call zeroext i1 @is_of_node(%struct.fwnode_handle* %5) #11, !dbg !11853
  br i1 %call4, label %cond.true, label %cond.false, !dbg !11853

cond.true:                                        ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11854, metadata !DIExpression()), !dbg !11856
  %6 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_of_node_fwnode, align 8, !dbg !11856
  %7 = bitcast %struct.fwnode_handle* %6 to i8*, !dbg !11856
  store i8* %7, i8** %__mptr, align 8, !dbg !11856
  br label %do.body, !dbg !11856

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !11857

do.end:                                           ; preds = %do.body
  %8 = load i8*, i8** %__mptr, align 8, !dbg !11856
  %add.ptr = getelementptr i8, i8* %8, i64 -24, !dbg !11856
  %9 = bitcast i8* %add.ptr to %struct.device_node*, !dbg !11856
  store %struct.device_node* %9, %struct.device_node** %tmp5, align 8, !dbg !11857
  %10 = load %struct.device_node*, %struct.device_node** %tmp5, align 8, !dbg !11856
  br label %cond.end, !dbg !11853

cond.false:                                       ; preds = %if.then3
  br label %cond.end, !dbg !11853

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.device_node* [ %10, %do.end ], [ null, %cond.false ], !dbg !11853
  store %struct.device_node* %cond, %struct.device_node** %tmp, align 8, !dbg !11853
  %11 = load %struct.device_node*, %struct.device_node** %tmp, align 8, !dbg !11853
  %12 = load i8*, i8** %propname.addr, align 8, !dbg !11859
  %13 = load i32, i32* %index.addr, align 4, !dbg !11860
  %14 = load i32, i32* %dflags.addr, align 4, !dbg !11861
  %15 = load i8*, i8** %label.addr, align 8, !dbg !11862
  %call6 = call %struct.gpio_desc* @gpiod_get_from_of_node(%struct.device_node* %11, i8* %12, i32 %13, i32 %14, i8* %15) #11, !dbg !11863
  store %struct.gpio_desc* %call6, %struct.gpio_desc** %desc, align 8, !dbg !11864
  %16 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11865
  store %struct.gpio_desc* %16, %struct.gpio_desc** %retval, align 8, !dbg !11866
  br label %return, !dbg !11866

if.else:                                          ; preds = %if.end
  %17 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !11867
  %call7 = call zeroext i1 @is_acpi_node(%struct.fwnode_handle* %17) #11, !dbg !11869
  br i1 %call7, label %if.then8, label %if.end15, !dbg !11870

if.then8:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.acpi_gpio_info* %info, metadata !11871, metadata !DIExpression()), !dbg !11883
  %18 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !11884
  %19 = load i8*, i8** %propname.addr, align 8, !dbg !11885
  %20 = load i32, i32* %index.addr, align 4, !dbg !11886
  %call9 = call %struct.gpio_desc* @acpi_node_get_gpiod(%struct.fwnode_handle* %18, i8* %19, i32 %20, %struct.acpi_gpio_info* %info) #11, !dbg !11887
  store %struct.gpio_desc* %call9, %struct.gpio_desc** %desc, align 8, !dbg !11888
  %21 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11889
  %22 = bitcast %struct.gpio_desc* %21 to i8*, !dbg !11889
  %call10 = call zeroext i1 @IS_ERR(i8* %22) #11, !dbg !11891
  br i1 %call10, label %if.then11, label %if.end12, !dbg !11892

if.then11:                                        ; preds = %if.then8
  %23 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11893
  store %struct.gpio_desc* %23, %struct.gpio_desc** %retval, align 8, !dbg !11894
  br label %return, !dbg !11894

if.end12:                                         ; preds = %if.then8
  %call13 = call i32 @acpi_gpio_update_gpiod_flags(i32* %dflags.addr, %struct.acpi_gpio_info* %info) #11, !dbg !11895
  %call14 = call i32 @acpi_gpio_update_gpiod_lookup_flags(i64* %lflags, %struct.acpi_gpio_info* %info) #11, !dbg !11896
  br label %if.end15, !dbg !11897

if.end15:                                         ; preds = %if.end12, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end15
  %24 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11898
  %25 = load i8*, i8** %label.addr, align 8, !dbg !11899
  %call17 = call i32 @gpiod_request(%struct.gpio_desc* %24, i8* %25) #11, !dbg !11900
  store i32 %call17, i32* %ret, align 4, !dbg !11901
  %26 = load i32, i32* %ret, align 4, !dbg !11902
  %tobool18 = icmp ne i32 %26, 0, !dbg !11902
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !11904

if.then19:                                        ; preds = %if.end16
  %27 = load i32, i32* %ret, align 4, !dbg !11905
  %conv = sext i32 %27 to i64, !dbg !11905
  %call20 = call i8* @ERR_PTR(i64 %conv) #11, !dbg !11906
  %28 = bitcast i8* %call20 to %struct.gpio_desc*, !dbg !11906
  store %struct.gpio_desc* %28, %struct.gpio_desc** %retval, align 8, !dbg !11907
  br label %return, !dbg !11907

if.end21:                                         ; preds = %if.end16
  %29 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11908
  %30 = load i8*, i8** %propname.addr, align 8, !dbg !11909
  %31 = load i64, i64* %lflags, align 8, !dbg !11910
  %32 = load i32, i32* %dflags.addr, align 4, !dbg !11911
  %call22 = call i32 @gpiod_configure_flags(%struct.gpio_desc* %29, i8* %30, i64 %31, i32 %32) #11, !dbg !11912
  store i32 %call22, i32* %ret, align 4, !dbg !11913
  %33 = load i32, i32* %ret, align 4, !dbg !11914
  %cmp = icmp slt i32 %33, 0, !dbg !11916
  br i1 %cmp, label %if.then24, label %if.end27, !dbg !11917

if.then24:                                        ; preds = %if.end21
  %34 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11918
  call void @gpiod_put(%struct.gpio_desc* %34) #11, !dbg !11920
  %35 = load i32, i32* %ret, align 4, !dbg !11921
  %conv25 = sext i32 %35 to i64, !dbg !11921
  %call26 = call i8* @ERR_PTR(i64 %conv25) #11, !dbg !11922
  %36 = bitcast i8* %call26 to %struct.gpio_desc*, !dbg !11922
  store %struct.gpio_desc* %36, %struct.gpio_desc** %retval, align 8, !dbg !11923
  br label %return, !dbg !11923

if.end27:                                         ; preds = %if.end21
  %37 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11924
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %37, i32 0, i32 0, !dbg !11925
  %38 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !11925
  %notifier = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %38, i32 0, i32 12, !dbg !11926
  %39 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11927
  %40 = bitcast %struct.gpio_desc* %39 to i8*, !dbg !11927
  %call28 = call i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head* %notifier, i64 1, i8* %40) #11, !dbg !11928
  %41 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11929
  store %struct.gpio_desc* %41, %struct.gpio_desc** %retval, align 8, !dbg !11930
  br label %return, !dbg !11930

return:                                           ; preds = %if.end27, %if.then24, %if.then19, %if.then11, %cond.end, %if.then
  %42 = load %struct.gpio_desc*, %struct.gpio_desc** %retval, align 8, !dbg !11931
  ret %struct.gpio_desc* %42, !dbg !11931
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_count(%struct.device* %dev, i8* %con_id) #0 !dbg !11932 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %con_id.addr = alloca i8*, align 8
  %count = alloca i32, align 4
  %__to_acpi_device_node_fwnode = alloca %struct.fwnode_handle*, align 8
  %tmp = alloca %struct.acpi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp5 = alloca %struct.acpi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11935, metadata !DIExpression()), !dbg !11936
  store i8* %con_id, i8** %con_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con_id.addr, metadata !11937, metadata !DIExpression()), !dbg !11938
  call void @llvm.dbg.declare(metadata i32* %count, metadata !11939, metadata !DIExpression()), !dbg !11940
  store i32 -2, i32* %count, align 4, !dbg !11940
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11941
  %tobool = icmp ne %struct.device* %0, null, !dbg !11941
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !11943

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11944
  %of_node = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 23, !dbg !11945
  %2 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !11945
  %tobool1 = icmp ne %struct.device_node* %2, null, !dbg !11944
  br i1 %tobool1, label %if.then, label %if.else, !dbg !11946

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11947
  %4 = load i8*, i8** %con_id.addr, align 8, !dbg !11948
  %call = call i32 @of_gpio_get_count(%struct.device* %3, i8* %4) #11, !dbg !11949
  store i32 %call, i32* %count, align 4, !dbg !11950
  br label %if.end10, !dbg !11951

if.else:                                          ; preds = %land.lhs.true, %entry
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11952
  %tobool2 = icmp ne %struct.device* %5, null, !dbg !11952
  br i1 %tobool2, label %land.lhs.true3, label %if.end, !dbg !11954

land.lhs.true3:                                   ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %__to_acpi_device_node_fwnode, metadata !11955, metadata !DIExpression()), !dbg !11957
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11957
  %fwnode = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 24, !dbg !11957
  %7 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !11957
  store %struct.fwnode_handle* %7, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !11957
  %8 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !11957
  %call4 = call zeroext i1 @is_acpi_device_node(%struct.fwnode_handle* %8) #11, !dbg !11957
  br i1 %call4, label %cond.true, label %cond.false, !dbg !11957

cond.true:                                        ; preds = %land.lhs.true3
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11958, metadata !DIExpression()), !dbg !11960
  %9 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !11960
  %10 = bitcast %struct.fwnode_handle* %9 to i8*, !dbg !11960
  store i8* %10, i8** %__mptr, align 8, !dbg !11960
  br label %do.body, !dbg !11960

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !11961

do.end:                                           ; preds = %do.body
  %11 = load i8*, i8** %__mptr, align 8, !dbg !11960
  %add.ptr = getelementptr i8, i8* %11, i64 -16, !dbg !11960
  %12 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !11960
  store %struct.acpi_device* %12, %struct.acpi_device** %tmp5, align 8, !dbg !11961
  %13 = load %struct.acpi_device*, %struct.acpi_device** %tmp5, align 8, !dbg !11960
  br label %cond.end, !dbg !11957

cond.false:                                       ; preds = %land.lhs.true3
  br label %cond.end, !dbg !11957

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.acpi_device* [ %13, %do.end ], [ null, %cond.false ], !dbg !11957
  store %struct.acpi_device* %cond, %struct.acpi_device** %tmp, align 8, !dbg !11957
  %14 = load %struct.acpi_device*, %struct.acpi_device** %tmp, align 8, !dbg !11957
  %call6 = call i8* @acpi_device_handle(%struct.acpi_device* %14) #11, !dbg !11963
  %tobool7 = icmp ne i8* %call6, null, !dbg !11963
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !11964

if.then8:                                         ; preds = %cond.end
  %15 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11965
  %16 = load i8*, i8** %con_id.addr, align 8, !dbg !11966
  %call9 = call i32 @acpi_gpio_count(%struct.device* %15, i8* %16) #11, !dbg !11967
  store i32 %call9, i32* %count, align 4, !dbg !11968
  br label %if.end, !dbg !11969

if.end:                                           ; preds = %if.then8, %cond.end, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then
  %17 = load i32, i32* %count, align 4, !dbg !11970
  %cmp = icmp slt i32 %17, 0, !dbg !11972
  br i1 %cmp, label %if.then11, label %if.end13, !dbg !11973

if.then11:                                        ; preds = %if.end10
  %18 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11974
  %19 = load i8*, i8** %con_id.addr, align 8, !dbg !11975
  %call12 = call i32 @platform_gpio_count(%struct.device* %18, i8* %19) #11, !dbg !11976
  store i32 %call12, i32* %count, align 4, !dbg !11977
  br label %if.end13, !dbg !11978

if.end13:                                         ; preds = %if.then11, %if.end10
  %20 = load i32, i32* %count, align 4, !dbg !11979
  ret i32 %20, !dbg !11980
}

; Function Attrs: noredzone
declare dso_local i32 @of_gpio_get_count(%struct.device*, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @acpi_gpio_count(%struct.device*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @platform_gpio_count(%struct.device* %dev, i8* %con_id) #0 !dbg !11981 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %con_id.addr = alloca i8*, align 8
  %table = alloca %struct.gpiod_lookup_table*, align 8
  %p = alloca %struct.gpiod_lookup*, align 8
  %count = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11982, metadata !DIExpression()), !dbg !11983
  store i8* %con_id, i8** %con_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con_id.addr, metadata !11984, metadata !DIExpression()), !dbg !11985
  call void @llvm.dbg.declare(metadata %struct.gpiod_lookup_table** %table, metadata !11986, metadata !DIExpression()), !dbg !11987
  call void @llvm.dbg.declare(metadata %struct.gpiod_lookup** %p, metadata !11988, metadata !DIExpression()), !dbg !11990
  call void @llvm.dbg.declare(metadata i32* %count, metadata !11991, metadata !DIExpression()), !dbg !11992
  store i32 0, i32* %count, align 4, !dbg !11992
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11993
  %call = call %struct.gpiod_lookup_table* @gpiod_find_lookup_table(%struct.device* %0) #11, !dbg !11994
  store %struct.gpiod_lookup_table* %call, %struct.gpiod_lookup_table** %table, align 8, !dbg !11995
  %1 = load %struct.gpiod_lookup_table*, %struct.gpiod_lookup_table** %table, align 8, !dbg !11996
  %tobool = icmp ne %struct.gpiod_lookup_table* %1, null, !dbg !11996
  br i1 %tobool, label %if.end, label %if.then, !dbg !11998

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval, align 4, !dbg !11999
  br label %return, !dbg !11999

if.end:                                           ; preds = %entry
  %2 = load %struct.gpiod_lookup_table*, %struct.gpiod_lookup_table** %table, align 8, !dbg !12000
  %table1 = getelementptr inbounds %struct.gpiod_lookup_table, %struct.gpiod_lookup_table* %2, i32 0, i32 2, !dbg !12002
  %arrayidx = getelementptr [0 x %struct.gpiod_lookup], [0 x %struct.gpiod_lookup]* %table1, i64 0, i64 0, !dbg !12000
  store %struct.gpiod_lookup* %arrayidx, %struct.gpiod_lookup** %p, align 8, !dbg !12003
  br label %for.cond, !dbg !12004

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load %struct.gpiod_lookup*, %struct.gpiod_lookup** %p, align 8, !dbg !12005
  %key = getelementptr inbounds %struct.gpiod_lookup, %struct.gpiod_lookup* %3, i32 0, i32 0, !dbg !12007
  %4 = load i8*, i8** %key, align 8, !dbg !12007
  %tobool2 = icmp ne i8* %4, null, !dbg !12008
  br i1 %tobool2, label %for.body, label %for.end, !dbg !12008

for.body:                                         ; preds = %for.cond
  %5 = load i8*, i8** %con_id.addr, align 8, !dbg !12009
  %tobool3 = icmp ne i8* %5, null, !dbg !12009
  br i1 %tobool3, label %land.lhs.true, label %lor.lhs.false, !dbg !12012

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.gpiod_lookup*, %struct.gpiod_lookup** %p, align 8, !dbg !12013
  %con_id4 = getelementptr inbounds %struct.gpiod_lookup, %struct.gpiod_lookup* %6, i32 0, i32 2, !dbg !12014
  %7 = load i8*, i8** %con_id4, align 8, !dbg !12014
  %tobool5 = icmp ne i8* %7, null, !dbg !12013
  br i1 %tobool5, label %land.lhs.true6, label %lor.lhs.false, !dbg !12015

land.lhs.true6:                                   ; preds = %land.lhs.true
  %8 = load i8*, i8** %con_id.addr, align 8, !dbg !12016
  %9 = load %struct.gpiod_lookup*, %struct.gpiod_lookup** %p, align 8, !dbg !12017
  %con_id7 = getelementptr inbounds %struct.gpiod_lookup, %struct.gpiod_lookup* %9, i32 0, i32 2, !dbg !12018
  %10 = load i8*, i8** %con_id7, align 8, !dbg !12018
  %call8 = call i32 @strcmp(i8* %8, i8* %10) #11, !dbg !12019
  %tobool9 = icmp ne i32 %call8, 0, !dbg !12019
  br i1 %tobool9, label %lor.lhs.false, label %if.then14, !dbg !12020

lor.lhs.false:                                    ; preds = %land.lhs.true6, %land.lhs.true, %for.body
  %11 = load i8*, i8** %con_id.addr, align 8, !dbg !12021
  %tobool10 = icmp ne i8* %11, null, !dbg !12021
  br i1 %tobool10, label %if.end15, label %land.lhs.true11, !dbg !12022

land.lhs.true11:                                  ; preds = %lor.lhs.false
  %12 = load %struct.gpiod_lookup*, %struct.gpiod_lookup** %p, align 8, !dbg !12023
  %con_id12 = getelementptr inbounds %struct.gpiod_lookup, %struct.gpiod_lookup* %12, i32 0, i32 2, !dbg !12024
  %13 = load i8*, i8** %con_id12, align 8, !dbg !12024
  %tobool13 = icmp ne i8* %13, null, !dbg !12023
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !12025

if.then14:                                        ; preds = %land.lhs.true11, %land.lhs.true6
  %14 = load i32, i32* %count, align 4, !dbg !12026
  %inc = add i32 %14, 1, !dbg !12026
  store i32 %inc, i32* %count, align 4, !dbg !12026
  br label %if.end15, !dbg !12027

if.end15:                                         ; preds = %if.then14, %land.lhs.true11, %lor.lhs.false
  br label %for.inc, !dbg !12028

for.inc:                                          ; preds = %if.end15
  %15 = load %struct.gpiod_lookup*, %struct.gpiod_lookup** %p, align 8, !dbg !12029
  %incdec.ptr = getelementptr %struct.gpiod_lookup, %struct.gpiod_lookup* %15, i32 1, !dbg !12029
  store %struct.gpiod_lookup* %incdec.ptr, %struct.gpiod_lookup** %p, align 8, !dbg !12029
  br label %for.cond, !dbg !12030, !llvm.loop !12031

for.end:                                          ; preds = %for.cond
  %16 = load i32, i32* %count, align 4, !dbg !12033
  %tobool16 = icmp ne i32 %16, 0, !dbg !12033
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !12035

if.then17:                                        ; preds = %for.end
  store i32 -2, i32* %retval, align 4, !dbg !12036
  br label %return, !dbg !12036

if.end18:                                         ; preds = %for.end
  %17 = load i32, i32* %count, align 4, !dbg !12037
  store i32 %17, i32* %retval, align 4, !dbg !12038
  br label %return, !dbg !12038

return:                                           ; preds = %if.end18, %if.then17, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !12039
  ret i32 %18, !dbg !12039
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.gpio_desc* @gpiod_get(%struct.device* %dev, i8* %con_id, i32 %flags) #0 !dbg !12040 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %con_id.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12043, metadata !DIExpression()), !dbg !12044
  store i8* %con_id, i8** %con_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con_id.addr, metadata !12045, metadata !DIExpression()), !dbg !12046
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12047, metadata !DIExpression()), !dbg !12048
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12049
  %1 = load i8*, i8** %con_id.addr, align 8, !dbg !12050
  %2 = load i32, i32* %flags.addr, align 4, !dbg !12051
  %call = call %struct.gpio_desc* @gpiod_get_index(%struct.device* %0, i8* %1, i32 0, i32 %2) #11, !dbg !12052
  ret %struct.gpio_desc* %call, !dbg !12053
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.gpio_desc* @gpiod_get_index(%struct.device* %dev, i8* %con_id, i32 %idx, i32 %flags) #0 !dbg !12054 {
entry:
  %retval = alloca %struct.gpio_desc*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %con_id.addr = alloca i8*, align 8
  %idx.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %lookupflags = alloca i64, align 8
  %desc = alloca %struct.gpio_desc*, align 8
  %ret = alloca i32, align 4
  %devname = alloca i8*, align 8
  %__to_acpi_device_node_fwnode = alloca %struct.fwnode_handle*, align 8
  %tmp = alloca %struct.acpi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp7 = alloca %struct.acpi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12057, metadata !DIExpression()), !dbg !12058
  store i8* %con_id, i8** %con_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con_id.addr, metadata !12059, metadata !DIExpression()), !dbg !12060
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !12061, metadata !DIExpression()), !dbg !12062
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12063, metadata !DIExpression()), !dbg !12064
  call void @llvm.dbg.declare(metadata i64* %lookupflags, metadata !12065, metadata !DIExpression()), !dbg !12066
  store i64 0, i64* %lookupflags, align 8, !dbg !12066
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc, metadata !12067, metadata !DIExpression()), !dbg !12068
  store %struct.gpio_desc* null, %struct.gpio_desc** %desc, align 8, !dbg !12068
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12069, metadata !DIExpression()), !dbg !12070
  call void @llvm.dbg.declare(metadata i8** %devname, metadata !12071, metadata !DIExpression()), !dbg !12072
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12073
  %tobool = icmp ne %struct.device* %0, null, !dbg !12073
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !12073

cond.true:                                        ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12074
  %call = call i8* @dev_name(%struct.device* %1) #11, !dbg !12075
  br label %cond.end, !dbg !12073

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !12073

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), %cond.false ], !dbg !12073
  store i8* %cond, i8** %devname, align 8, !dbg !12072
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12076
  %tobool1 = icmp ne %struct.device* %2, null, !dbg !12076
  br i1 %tobool1, label %if.then, label %if.end15, !dbg !12078

if.then:                                          ; preds = %cond.end
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12079
  %of_node = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 23, !dbg !12082
  %4 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !12082
  %tobool2 = icmp ne %struct.device_node* %4, null, !dbg !12079
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !12083

if.then3:                                         ; preds = %if.then
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12084
  %6 = load i8*, i8** %con_id.addr, align 8, !dbg !12086
  %7 = load i32, i32* %idx.addr, align 4, !dbg !12087
  %call4 = call %struct.gpio_desc* @of_find_gpio(%struct.device* %5, i8* %6, i32 %7, i64* %lookupflags) #11, !dbg !12088
  store %struct.gpio_desc* %call4, %struct.gpio_desc** %desc, align 8, !dbg !12089
  br label %if.end14, !dbg !12090

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %__to_acpi_device_node_fwnode, metadata !12091, metadata !DIExpression()), !dbg !12094
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12094
  %fwnode = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 24, !dbg !12094
  %9 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !12094
  store %struct.fwnode_handle* %9, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !12094
  %10 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !12094
  %call5 = call zeroext i1 @is_acpi_device_node(%struct.fwnode_handle* %10) #11, !dbg !12094
  br i1 %call5, label %cond.true6, label %cond.false8, !dbg !12094

cond.true6:                                       ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12095, metadata !DIExpression()), !dbg !12097
  %11 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !12097
  %12 = bitcast %struct.fwnode_handle* %11 to i8*, !dbg !12097
  store i8* %12, i8** %__mptr, align 8, !dbg !12097
  br label %do.body, !dbg !12097

do.body:                                          ; preds = %cond.true6
  br label %do.end, !dbg !12098

do.end:                                           ; preds = %do.body
  %13 = load i8*, i8** %__mptr, align 8, !dbg !12097
  %add.ptr = getelementptr i8, i8* %13, i64 -16, !dbg !12097
  %14 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !12097
  store %struct.acpi_device* %14, %struct.acpi_device** %tmp7, align 8, !dbg !12098
  %15 = load %struct.acpi_device*, %struct.acpi_device** %tmp7, align 8, !dbg !12097
  br label %cond.end9, !dbg !12094

cond.false8:                                      ; preds = %if.else
  br label %cond.end9, !dbg !12094

cond.end9:                                        ; preds = %cond.false8, %do.end
  %cond10 = phi %struct.acpi_device* [ %15, %do.end ], [ null, %cond.false8 ], !dbg !12094
  store %struct.acpi_device* %cond10, %struct.acpi_device** %tmp, align 8, !dbg !12094
  %16 = load %struct.acpi_device*, %struct.acpi_device** %tmp, align 8, !dbg !12094
  %tobool11 = icmp ne %struct.acpi_device* %16, null, !dbg !12100
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !12101

if.then12:                                        ; preds = %cond.end9
  %17 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12102
  %18 = load i8*, i8** %con_id.addr, align 8, !dbg !12104
  %19 = load i32, i32* %idx.addr, align 4, !dbg !12105
  %call13 = call %struct.gpio_desc* @acpi_find_gpio(%struct.device* %17, i8* %18, i32 %19, i32* %flags.addr, i64* %lookupflags) #11, !dbg !12106
  store %struct.gpio_desc* %call13, %struct.gpio_desc** %desc, align 8, !dbg !12107
  br label %if.end, !dbg !12108

if.end:                                           ; preds = %if.then12, %cond.end9
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then3
  br label %if.end15, !dbg !12109

if.end15:                                         ; preds = %if.end14, %cond.end
  %20 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12110
  %tobool16 = icmp ne %struct.gpio_desc* %20, null, !dbg !12110
  br i1 %tobool16, label %lor.lhs.false, label %if.then18, !dbg !12112

lor.lhs.false:                                    ; preds = %if.end15
  %21 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12113
  %call17 = call i8* @ERR_PTR(i64 -2) #11, !dbg !12114
  %22 = bitcast i8* %call17 to %struct.gpio_desc*, !dbg !12114
  %cmp = icmp eq %struct.gpio_desc* %21, %22, !dbg !12115
  br i1 %cmp, label %if.then18, label %if.end20, !dbg !12116

if.then18:                                        ; preds = %lor.lhs.false, %if.end15
  %23 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12117
  %24 = load i8*, i8** %con_id.addr, align 8, !dbg !12119
  %25 = load i32, i32* %idx.addr, align 4, !dbg !12120
  %call19 = call %struct.gpio_desc* @gpiod_find(%struct.device* %23, i8* %24, i32 %25, i64* %lookupflags) #11, !dbg !12121
  store %struct.gpio_desc* %call19, %struct.gpio_desc** %desc, align 8, !dbg !12122
  br label %if.end20, !dbg !12123

if.end20:                                         ; preds = %if.then18, %lor.lhs.false
  %26 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12124
  %27 = bitcast %struct.gpio_desc* %26 to i8*, !dbg !12124
  %call21 = call zeroext i1 @IS_ERR(i8* %27) #11, !dbg !12126
  br i1 %call21, label %if.then22, label %if.end23, !dbg !12127

if.then22:                                        ; preds = %if.end20
  %28 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12128
  store %struct.gpio_desc* %28, %struct.gpio_desc** %retval, align 8, !dbg !12130
  br label %return, !dbg !12130

if.end23:                                         ; preds = %if.end20
  %29 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12131
  %30 = load i8*, i8** %con_id.addr, align 8, !dbg !12132
  %tobool24 = icmp ne i8* %30, null, !dbg !12132
  br i1 %tobool24, label %cond.true25, label %cond.false26, !dbg !12132

cond.true25:                                      ; preds = %if.end23
  %31 = load i8*, i8** %con_id.addr, align 8, !dbg !12133
  br label %cond.end27, !dbg !12132

cond.false26:                                     ; preds = %if.end23
  %32 = load i8*, i8** %devname, align 8, !dbg !12134
  br label %cond.end27, !dbg !12132

cond.end27:                                       ; preds = %cond.false26, %cond.true25
  %cond28 = phi i8* [ %31, %cond.true25 ], [ %32, %cond.false26 ], !dbg !12132
  %call29 = call i32 @gpiod_request(%struct.gpio_desc* %29, i8* %cond28) #11, !dbg !12135
  store i32 %call29, i32* %ret, align 4, !dbg !12136
  %33 = load i32, i32* %ret, align 4, !dbg !12137
  %cmp30 = icmp slt i32 %33, 0, !dbg !12139
  br i1 %cmp30, label %if.then31, label %if.end43, !dbg !12140

if.then31:                                        ; preds = %cond.end27
  %34 = load i32, i32* %ret, align 4, !dbg !12141
  %cmp32 = icmp eq i32 %34, -16, !dbg !12144
  br i1 %cmp32, label %land.lhs.true, label %if.else40, !dbg !12145

land.lhs.true:                                    ; preds = %if.then31
  %35 = load i32, i32* %flags.addr, align 4, !dbg !12146
  %conv = zext i32 %35 to i64, !dbg !12146
  %and = and i64 %conv, 16, !dbg !12147
  %tobool33 = icmp ne i64 %and, 0, !dbg !12147
  br i1 %tobool33, label %if.then34, label %if.else40, !dbg !12148

if.then34:                                        ; preds = %land.lhs.true
  %36 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12149
  %37 = load i8*, i8** %con_id.addr, align 8, !dbg !12149
  %tobool35 = icmp ne i8* %37, null, !dbg !12149
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !12149

cond.true36:                                      ; preds = %if.then34
  %38 = load i8*, i8** %con_id.addr, align 8, !dbg !12149
  br label %cond.end38, !dbg !12149

cond.false37:                                     ; preds = %if.then34
  %39 = load i8*, i8** %devname, align 8, !dbg !12149
  br label %cond.end38, !dbg !12149

cond.end38:                                       ; preds = %cond.false37, %cond.true36
  %cond39 = phi i8* [ %38, %cond.true36 ], [ %39, %cond.false37 ], !dbg !12149
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %36, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.28, i64 0, i64 0), i8* %cond39) #13, !dbg !12149
  %40 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12151
  store %struct.gpio_desc* %40, %struct.gpio_desc** %retval, align 8, !dbg !12152
  br label %return, !dbg !12152

if.else40:                                        ; preds = %land.lhs.true, %if.then31
  %41 = load i32, i32* %ret, align 4, !dbg !12153
  %conv41 = sext i32 %41 to i64, !dbg !12153
  %call42 = call i8* @ERR_PTR(i64 %conv41) #11, !dbg !12155
  %42 = bitcast i8* %call42 to %struct.gpio_desc*, !dbg !12155
  store %struct.gpio_desc* %42, %struct.gpio_desc** %retval, align 8, !dbg !12156
  br label %return, !dbg !12156

if.end43:                                         ; preds = %cond.end27
  %43 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12157
  %44 = load i8*, i8** %con_id.addr, align 8, !dbg !12158
  %45 = load i64, i64* %lookupflags, align 8, !dbg !12159
  %46 = load i32, i32* %flags.addr, align 4, !dbg !12160
  %call44 = call i32 @gpiod_configure_flags(%struct.gpio_desc* %43, i8* %44, i64 %45, i32 %46) #11, !dbg !12161
  store i32 %call44, i32* %ret, align 4, !dbg !12162
  %47 = load i32, i32* %ret, align 4, !dbg !12163
  %cmp45 = icmp slt i32 %47, 0, !dbg !12165
  br i1 %cmp45, label %if.then47, label %if.end50, !dbg !12166

if.then47:                                        ; preds = %if.end43
  %48 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12167
  call void @gpiod_put(%struct.gpio_desc* %48) #11, !dbg !12169
  %49 = load i32, i32* %ret, align 4, !dbg !12170
  %conv48 = sext i32 %49 to i64, !dbg !12170
  %call49 = call i8* @ERR_PTR(i64 %conv48) #11, !dbg !12171
  %50 = bitcast i8* %call49 to %struct.gpio_desc*, !dbg !12171
  store %struct.gpio_desc* %50, %struct.gpio_desc** %retval, align 8, !dbg !12172
  br label %return, !dbg !12172

if.end50:                                         ; preds = %if.end43
  %51 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12173
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %51, i32 0, i32 0, !dbg !12174
  %52 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !12174
  %notifier = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %52, i32 0, i32 12, !dbg !12175
  %53 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12176
  %54 = bitcast %struct.gpio_desc* %53 to i8*, !dbg !12176
  %call51 = call i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head* %notifier, i64 1, i8* %54) #11, !dbg !12177
  %55 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12178
  store %struct.gpio_desc* %55, %struct.gpio_desc** %retval, align 8, !dbg !12179
  br label %return, !dbg !12179

return:                                           ; preds = %if.end50, %if.then47, %if.else40, %cond.end38, %if.then22
  %56 = load %struct.gpio_desc*, %struct.gpio_desc** %retval, align 8, !dbg !12180
  ret %struct.gpio_desc* %56, !dbg !12180
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.gpio_desc* @gpiod_get_optional(%struct.device* %dev, i8* %con_id, i32 %flags) #0 !dbg !12181 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %con_id.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12182, metadata !DIExpression()), !dbg !12183
  store i8* %con_id, i8** %con_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con_id.addr, metadata !12184, metadata !DIExpression()), !dbg !12185
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12186, metadata !DIExpression()), !dbg !12187
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12188
  %1 = load i8*, i8** %con_id.addr, align 8, !dbg !12189
  %2 = load i32, i32* %flags.addr, align 4, !dbg !12190
  %call = call %struct.gpio_desc* @gpiod_get_index_optional(%struct.device* %0, i8* %1, i32 0, i32 %2) #11, !dbg !12191
  ret %struct.gpio_desc* %call, !dbg !12192
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.gpio_desc* @gpiod_get_index_optional(%struct.device* %dev, i8* %con_id, i32 %index, i32 %flags) #0 !dbg !12193 {
entry:
  %retval = alloca %struct.gpio_desc*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %con_id.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %desc = alloca %struct.gpio_desc*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12194, metadata !DIExpression()), !dbg !12195
  store i8* %con_id, i8** %con_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con_id.addr, metadata !12196, metadata !DIExpression()), !dbg !12197
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !12198, metadata !DIExpression()), !dbg !12199
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12200, metadata !DIExpression()), !dbg !12201
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc, metadata !12202, metadata !DIExpression()), !dbg !12203
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12204
  %1 = load i8*, i8** %con_id.addr, align 8, !dbg !12205
  %2 = load i32, i32* %index.addr, align 4, !dbg !12206
  %3 = load i32, i32* %flags.addr, align 4, !dbg !12207
  %call = call %struct.gpio_desc* @gpiod_get_index(%struct.device* %0, i8* %1, i32 %2, i32 %3) #11, !dbg !12208
  store %struct.gpio_desc* %call, %struct.gpio_desc** %desc, align 8, !dbg !12209
  %4 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12210
  %5 = bitcast %struct.gpio_desc* %4 to i8*, !dbg !12210
  %call1 = call zeroext i1 @IS_ERR(i8* %5) #11, !dbg !12212
  br i1 %call1, label %if.then, label %if.end4, !dbg !12213

if.then:                                          ; preds = %entry
  %6 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12214
  %7 = bitcast %struct.gpio_desc* %6 to i8*, !dbg !12214
  %call2 = call i64 @PTR_ERR(i8* %7) #11, !dbg !12217
  %cmp = icmp eq i64 %call2, -2, !dbg !12218
  br i1 %cmp, label %if.then3, label %if.end, !dbg !12219

if.then3:                                         ; preds = %if.then
  store %struct.gpio_desc* null, %struct.gpio_desc** %retval, align 8, !dbg !12220
  br label %return, !dbg !12220

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !12221

if.end4:                                          ; preds = %if.end, %entry
  %8 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12222
  store %struct.gpio_desc* %8, %struct.gpio_desc** %retval, align 8, !dbg !12223
  br label %return, !dbg !12223

return:                                           ; preds = %if.end4, %if.then3
  %9 = load %struct.gpio_desc*, %struct.gpio_desc** %retval, align 8, !dbg !12224
  ret %struct.gpio_desc* %9, !dbg !12224
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !12225 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12228, metadata !DIExpression()), !dbg !12229
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12230
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12232
  %1 = load i8*, i8** %init_name, align 8, !dbg !12232
  %tobool = icmp ne i8* %1, null, !dbg !12230
  br i1 %tobool, label %if.then, label %if.end, !dbg !12233

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12234
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !12235
  %3 = load i8*, i8** %init_name1, align 8, !dbg !12235
  store i8* %3, i8** %retval, align 8, !dbg !12236
  br label %return, !dbg !12236

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12237
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !12238
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #11, !dbg !12239
  store i8* %call, i8** %retval, align 8, !dbg !12240
  br label %return, !dbg !12240

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !12241
  ret i8* %5, !dbg !12241
}

; Function Attrs: noredzone
declare dso_local %struct.gpio_desc* @of_find_gpio(%struct.device*, i8*, i32, i64*) #2

; Function Attrs: noredzone
declare dso_local %struct.gpio_desc* @acpi_find_gpio(%struct.device*, i8*, i32, i32*, i64*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.gpio_desc* @gpiod_find(%struct.device* %dev, i8* %con_id, i32 %idx, i64* %flags) #0 !dbg !12242 {
entry:
  %retval = alloca %struct.gpio_desc*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %con_id.addr = alloca i8*, align 8
  %idx.addr = alloca i32, align 4
  %flags.addr = alloca i64*, align 8
  %desc = alloca %struct.gpio_desc*, align 8
  %table = alloca %struct.gpiod_lookup_table*, align 8
  %p = alloca %struct.gpiod_lookup*, align 8
  %gc = alloca %struct.gpio_chip*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12245, metadata !DIExpression()), !dbg !12246
  store i8* %con_id, i8** %con_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con_id.addr, metadata !12247, metadata !DIExpression()), !dbg !12248
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !12249, metadata !DIExpression()), !dbg !12250
  store i64* %flags, i64** %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %flags.addr, metadata !12251, metadata !DIExpression()), !dbg !12252
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc, metadata !12253, metadata !DIExpression()), !dbg !12254
  %call = call i8* @ERR_PTR(i64 -2) #11, !dbg !12255
  %0 = bitcast i8* %call to %struct.gpio_desc*, !dbg !12255
  store %struct.gpio_desc* %0, %struct.gpio_desc** %desc, align 8, !dbg !12254
  call void @llvm.dbg.declare(metadata %struct.gpiod_lookup_table** %table, metadata !12256, metadata !DIExpression()), !dbg !12257
  call void @llvm.dbg.declare(metadata %struct.gpiod_lookup** %p, metadata !12258, metadata !DIExpression()), !dbg !12259
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12260
  %call1 = call %struct.gpiod_lookup_table* @gpiod_find_lookup_table(%struct.device* %1) #11, !dbg !12261
  store %struct.gpiod_lookup_table* %call1, %struct.gpiod_lookup_table** %table, align 8, !dbg !12262
  %2 = load %struct.gpiod_lookup_table*, %struct.gpiod_lookup_table** %table, align 8, !dbg !12263
  %tobool = icmp ne %struct.gpiod_lookup_table* %2, null, !dbg !12263
  br i1 %tobool, label %if.end, label %if.then, !dbg !12265

if.then:                                          ; preds = %entry
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12266
  store %struct.gpio_desc* %3, %struct.gpio_desc** %retval, align 8, !dbg !12267
  br label %return, !dbg !12267

if.end:                                           ; preds = %entry
  %4 = load %struct.gpiod_lookup_table*, %struct.gpiod_lookup_table** %table, align 8, !dbg !12268
  %table2 = getelementptr inbounds %struct.gpiod_lookup_table, %struct.gpiod_lookup_table* %4, i32 0, i32 2, !dbg !12270
  %arrayidx = getelementptr [0 x %struct.gpiod_lookup], [0 x %struct.gpiod_lookup]* %table2, i64 0, i64 0, !dbg !12268
  store %struct.gpiod_lookup* %arrayidx, %struct.gpiod_lookup** %p, align 8, !dbg !12271
  br label %for.cond, !dbg !12272

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.gpiod_lookup*, %struct.gpiod_lookup** %p, align 8, !dbg !12273
  %key = getelementptr inbounds %struct.gpiod_lookup, %struct.gpiod_lookup* %5, i32 0, i32 0, !dbg !12275
  %6 = load i8*, i8** %key, align 8, !dbg !12275
  %tobool3 = icmp ne i8* %6, null, !dbg !12276
  br i1 %tobool3, label %for.body, label %for.end, !dbg !12276

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !12277, metadata !DIExpression()), !dbg !12279
  %7 = load %struct.gpiod_lookup*, %struct.gpiod_lookup** %p, align 8, !dbg !12280
  %idx4 = getelementptr inbounds %struct.gpiod_lookup, %struct.gpiod_lookup* %7, i32 0, i32 3, !dbg !12282
  %8 = load i32, i32* %idx4, align 8, !dbg !12282
  %9 = load i32, i32* %idx.addr, align 4, !dbg !12283
  %cmp = icmp ne i32 %8, %9, !dbg !12284
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !12285

if.then5:                                         ; preds = %for.body
  br label %for.inc, !dbg !12286

if.end6:                                          ; preds = %for.body
  %10 = load %struct.gpiod_lookup*, %struct.gpiod_lookup** %p, align 8, !dbg !12287
  %con_id7 = getelementptr inbounds %struct.gpiod_lookup, %struct.gpiod_lookup* %10, i32 0, i32 2, !dbg !12289
  %11 = load i8*, i8** %con_id7, align 8, !dbg !12289
  %tobool8 = icmp ne i8* %11, null, !dbg !12287
  br i1 %tobool8, label %land.lhs.true, label %if.end14, !dbg !12290

land.lhs.true:                                    ; preds = %if.end6
  %12 = load i8*, i8** %con_id.addr, align 8, !dbg !12291
  %tobool9 = icmp ne i8* %12, null, !dbg !12291
  br i1 %tobool9, label %lor.lhs.false, label %if.then13, !dbg !12292

lor.lhs.false:                                    ; preds = %land.lhs.true
  %13 = load %struct.gpiod_lookup*, %struct.gpiod_lookup** %p, align 8, !dbg !12293
  %con_id10 = getelementptr inbounds %struct.gpiod_lookup, %struct.gpiod_lookup* %13, i32 0, i32 2, !dbg !12294
  %14 = load i8*, i8** %con_id10, align 8, !dbg !12294
  %15 = load i8*, i8** %con_id.addr, align 8, !dbg !12295
  %call11 = call i32 @strcmp(i8* %14, i8* %15) #11, !dbg !12296
  %tobool12 = icmp ne i32 %call11, 0, !dbg !12296
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !12297

if.then13:                                        ; preds = %lor.lhs.false, %land.lhs.true
  br label %for.inc, !dbg !12298

if.end14:                                         ; preds = %lor.lhs.false, %if.end6
  %16 = load %struct.gpiod_lookup*, %struct.gpiod_lookup** %p, align 8, !dbg !12299
  %chip_hwnum = getelementptr inbounds %struct.gpiod_lookup, %struct.gpiod_lookup* %16, i32 0, i32 1, !dbg !12301
  %17 = load i16, i16* %chip_hwnum, align 8, !dbg !12301
  %conv = zext i16 %17 to i32, !dbg !12299
  %cmp15 = icmp eq i32 %conv, 65535, !dbg !12302
  br i1 %cmp15, label %if.then17, label %if.end26, !dbg !12303

if.then17:                                        ; preds = %if.end14
  %18 = load %struct.gpiod_lookup*, %struct.gpiod_lookup** %p, align 8, !dbg !12304
  %key18 = getelementptr inbounds %struct.gpiod_lookup, %struct.gpiod_lookup* %18, i32 0, i32 0, !dbg !12306
  %19 = load i8*, i8** %key18, align 8, !dbg !12306
  %call19 = call %struct.gpio_desc* @gpio_name_to_desc(i8* %19) #11, !dbg !12307
  store %struct.gpio_desc* %call19, %struct.gpio_desc** %desc, align 8, !dbg !12308
  %20 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12309
  %tobool20 = icmp ne %struct.gpio_desc* %20, null, !dbg !12309
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !12311

if.then21:                                        ; preds = %if.then17
  %21 = load %struct.gpiod_lookup*, %struct.gpiod_lookup** %p, align 8, !dbg !12312
  %flags22 = getelementptr inbounds %struct.gpiod_lookup, %struct.gpiod_lookup* %21, i32 0, i32 4, !dbg !12314
  %22 = load i64, i64* %flags22, align 8, !dbg !12314
  %23 = load i64*, i64** %flags.addr, align 8, !dbg !12315
  store i64 %22, i64* %23, align 8, !dbg !12316
  %24 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12317
  store %struct.gpio_desc* %24, %struct.gpio_desc** %retval, align 8, !dbg !12318
  br label %return, !dbg !12318

if.end23:                                         ; preds = %if.then17
  %25 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12319
  %26 = load %struct.gpiod_lookup*, %struct.gpiod_lookup** %p, align 8, !dbg !12319
  %key24 = getelementptr inbounds %struct.gpiod_lookup, %struct.gpiod_lookup* %26, i32 0, i32 0, !dbg !12319
  %27 = load i8*, i8** %key24, align 8, !dbg !12319
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %25, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.66, i64 0, i64 0), i8* %27) #13, !dbg !12319
  %call25 = call i8* @ERR_PTR(i64 -517) #11, !dbg !12320
  %28 = bitcast i8* %call25 to %struct.gpio_desc*, !dbg !12320
  store %struct.gpio_desc* %28, %struct.gpio_desc** %retval, align 8, !dbg !12321
  br label %return, !dbg !12321

if.end26:                                         ; preds = %if.end14
  %29 = load %struct.gpiod_lookup*, %struct.gpiod_lookup** %p, align 8, !dbg !12322
  %key27 = getelementptr inbounds %struct.gpiod_lookup, %struct.gpiod_lookup* %29, i32 0, i32 0, !dbg !12323
  %30 = load i8*, i8** %key27, align 8, !dbg !12323
  %call28 = call %struct.gpio_chip* @find_chip_by_name(i8* %30) #11, !dbg !12324
  store %struct.gpio_chip* %call28, %struct.gpio_chip** %gc, align 8, !dbg !12325
  %31 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !12326
  %tobool29 = icmp ne %struct.gpio_chip* %31, null, !dbg !12326
  br i1 %tobool29, label %if.end33, label %if.then30, !dbg !12328

if.then30:                                        ; preds = %if.end26
  %32 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12329
  %33 = load %struct.gpiod_lookup*, %struct.gpiod_lookup** %p, align 8, !dbg !12329
  %key31 = getelementptr inbounds %struct.gpiod_lookup, %struct.gpiod_lookup* %33, i32 0, i32 0, !dbg !12329
  %34 = load i8*, i8** %key31, align 8, !dbg !12329
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %32, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.67, i64 0, i64 0), i8* %34) #13, !dbg !12329
  %call32 = call i8* @ERR_PTR(i64 -517) #11, !dbg !12331
  %35 = bitcast i8* %call32 to %struct.gpio_desc*, !dbg !12331
  store %struct.gpio_desc* %35, %struct.gpio_desc** %retval, align 8, !dbg !12332
  br label %return, !dbg !12332

if.end33:                                         ; preds = %if.end26
  %36 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !12333
  %ngpio = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %36, i32 0, i32 19, !dbg !12335
  %37 = load i16, i16* %ngpio, align 4, !dbg !12335
  %conv34 = zext i16 %37 to i32, !dbg !12333
  %38 = load %struct.gpiod_lookup*, %struct.gpiod_lookup** %p, align 8, !dbg !12336
  %chip_hwnum35 = getelementptr inbounds %struct.gpiod_lookup, %struct.gpiod_lookup* %38, i32 0, i32 1, !dbg !12337
  %39 = load i16, i16* %chip_hwnum35, align 8, !dbg !12337
  %conv36 = zext i16 %39 to i32, !dbg !12336
  %cmp37 = icmp sle i32 %conv34, %conv36, !dbg !12338
  br i1 %cmp37, label %if.then39, label %if.end45, !dbg !12339

if.then39:                                        ; preds = %if.end33
  %40 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12340
  %41 = load i32, i32* %idx.addr, align 4, !dbg !12340
  %42 = load %struct.gpiod_lookup*, %struct.gpiod_lookup** %p, align 8, !dbg !12340
  %chip_hwnum40 = getelementptr inbounds %struct.gpiod_lookup, %struct.gpiod_lookup* %42, i32 0, i32 1, !dbg !12340
  %43 = load i16, i16* %chip_hwnum40, align 8, !dbg !12340
  %conv41 = zext i16 %43 to i32, !dbg !12340
  %44 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !12340
  %ngpio42 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %44, i32 0, i32 19, !dbg !12340
  %45 = load i16, i16* %ngpio42, align 4, !dbg !12340
  %conv43 = zext i16 %45 to i32, !dbg !12340
  %sub = sub i32 %conv43, 1, !dbg !12340
  %46 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !12340
  %label = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %46, i32 0, i32 0, !dbg !12340
  %47 = load i8*, i8** %label, align 8, !dbg !12340
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %40, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.68, i64 0, i64 0), i32 %41, i32 %conv41, i32 %sub, i8* %47) #13, !dbg !12340
  %call44 = call i8* @ERR_PTR(i64 -22) #11, !dbg !12342
  %48 = bitcast i8* %call44 to %struct.gpio_desc*, !dbg !12342
  store %struct.gpio_desc* %48, %struct.gpio_desc** %retval, align 8, !dbg !12343
  br label %return, !dbg !12343

if.end45:                                         ; preds = %if.end33
  %49 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !12344
  %50 = load %struct.gpiod_lookup*, %struct.gpiod_lookup** %p, align 8, !dbg !12345
  %chip_hwnum46 = getelementptr inbounds %struct.gpiod_lookup, %struct.gpiod_lookup* %50, i32 0, i32 1, !dbg !12346
  %51 = load i16, i16* %chip_hwnum46, align 8, !dbg !12346
  %conv47 = zext i16 %51 to i32, !dbg !12345
  %call48 = call %struct.gpio_desc* @gpiochip_get_desc(%struct.gpio_chip* %49, i32 %conv47) #11, !dbg !12347
  store %struct.gpio_desc* %call48, %struct.gpio_desc** %desc, align 8, !dbg !12348
  %52 = load %struct.gpiod_lookup*, %struct.gpiod_lookup** %p, align 8, !dbg !12349
  %flags49 = getelementptr inbounds %struct.gpiod_lookup, %struct.gpiod_lookup* %52, i32 0, i32 4, !dbg !12350
  %53 = load i64, i64* %flags49, align 8, !dbg !12350
  %54 = load i64*, i64** %flags.addr, align 8, !dbg !12351
  store i64 %53, i64* %54, align 8, !dbg !12352
  %55 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12353
  store %struct.gpio_desc* %55, %struct.gpio_desc** %retval, align 8, !dbg !12354
  br label %return, !dbg !12354

for.inc:                                          ; preds = %if.then13, %if.then5
  %56 = load %struct.gpiod_lookup*, %struct.gpiod_lookup** %p, align 8, !dbg !12355
  %incdec.ptr = getelementptr %struct.gpiod_lookup, %struct.gpiod_lookup* %56, i32 1, !dbg !12355
  store %struct.gpiod_lookup* %incdec.ptr, %struct.gpiod_lookup** %p, align 8, !dbg !12355
  br label %for.cond, !dbg !12356, !llvm.loop !12357

for.end:                                          ; preds = %for.cond
  %57 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12359
  store %struct.gpio_desc* %57, %struct.gpio_desc** %retval, align 8, !dbg !12360
  br label %return, !dbg !12360

return:                                           ; preds = %for.end, %if.end45, %if.then39, %if.then30, %if.end23, %if.then21, %if.then
  %58 = load %struct.gpio_desc*, %struct.gpio_desc** %retval, align 8, !dbg !12361
  ret %struct.gpio_desc* %58, !dbg !12361
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @gpiod_put(%struct.gpio_desc* %desc) #0 !dbg !12362 {
entry:
  %desc.addr = alloca %struct.gpio_desc*, align 8
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !12363, metadata !DIExpression()), !dbg !12364
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !12365
  %tobool = icmp ne %struct.gpio_desc* %0, null, !dbg !12365
  br i1 %tobool, label %if.then, label %if.end, !dbg !12367

if.then:                                          ; preds = %entry
  %1 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !12368
  call void @gpiod_free(%struct.gpio_desc* %1) #11, !dbg !12369
  br label %if.end, !dbg !12369

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12370
}

; Function Attrs: noredzone
declare dso_local i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head*, i64, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_of_node(%struct.fwnode_handle* %fwnode) #0 !dbg !12371 {
entry:
  %fwnode.addr = alloca %struct.fwnode_handle*, align 8
  store %struct.fwnode_handle* %fwnode, %struct.fwnode_handle** %fwnode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %fwnode.addr, metadata !12372, metadata !DIExpression()), !dbg !12373
  %0 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !12374
  %1 = bitcast %struct.fwnode_handle* %0 to i8*, !dbg !12374
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %1) #11, !dbg !12375
  br i1 %call, label %land.end, label %land.rhs, !dbg !12376

land.rhs:                                         ; preds = %entry
  %2 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !12377
  %ops = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %2, i32 0, i32 1, !dbg !12378
  %3 = load %struct.fwnode_operations*, %struct.fwnode_operations** %ops, align 8, !dbg !12378
  %cmp = icmp eq %struct.fwnode_operations* %3, @of_fwnode_ops, !dbg !12379
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !12380
  ret i1 %4, !dbg !12381
}

; Function Attrs: noredzone
declare dso_local %struct.gpio_desc* @gpiod_get_from_of_node(%struct.device_node*, i8*, i32, i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_acpi_node(%struct.fwnode_handle* %fwnode) #0 !dbg !12382 {
entry:
  %fwnode.addr = alloca %struct.fwnode_handle*, align 8
  store %struct.fwnode_handle* %fwnode, %struct.fwnode_handle** %fwnode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %fwnode.addr, metadata !12383, metadata !DIExpression()), !dbg !12384
  %0 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !12385
  %call = call zeroext i1 @is_acpi_device_node(%struct.fwnode_handle* %0) #11, !dbg !12386
  br i1 %call, label %lor.end, label %lor.rhs, !dbg !12387

lor.rhs:                                          ; preds = %entry
  %1 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !12388
  %call1 = call zeroext i1 @is_acpi_data_node(%struct.fwnode_handle* %1) #11, !dbg !12389
  br label %lor.end, !dbg !12387

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %call1, %lor.rhs ]
  ret i1 %2, !dbg !12390
}

; Function Attrs: noredzone
declare dso_local %struct.gpio_desc* @acpi_node_get_gpiod(%struct.fwnode_handle*, i8*, i32, %struct.acpi_gpio_info*) #2

; Function Attrs: noredzone
declare dso_local i32 @acpi_gpio_update_gpiod_flags(i32*, %struct.acpi_gpio_info*) #2

; Function Attrs: noredzone
declare dso_local i32 @acpi_gpio_update_gpiod_lookup_flags(i64*, %struct.acpi_gpio_info*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiod_hog(%struct.gpio_desc* %desc, i8* %name, i64 %lflags, i32 %dflags) #0 !dbg !12391 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %name.addr = alloca i8*, align 8
  %lflags.addr = alloca i64, align 8
  %dflags.addr = alloca i32, align 4
  %gc = alloca %struct.gpio_chip*, align 8
  %local_desc = alloca %struct.gpio_desc*, align 8
  %hwnum = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !12392, metadata !DIExpression()), !dbg !12393
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12394, metadata !DIExpression()), !dbg !12395
  store i64 %lflags, i64* %lflags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %lflags.addr, metadata !12396, metadata !DIExpression()), !dbg !12397
  store i32 %dflags, i32* %dflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dflags.addr, metadata !12398, metadata !DIExpression()), !dbg !12399
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !12400, metadata !DIExpression()), !dbg !12401
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %local_desc, metadata !12402, metadata !DIExpression()), !dbg !12403
  call void @llvm.dbg.declare(metadata i32* %hwnum, metadata !12404, metadata !DIExpression()), !dbg !12405
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12406, metadata !DIExpression()), !dbg !12407
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !12408
  %call = call %struct.gpio_chip* @gpiod_to_chip(%struct.gpio_desc* %0) #11, !dbg !12409
  store %struct.gpio_chip* %call, %struct.gpio_chip** %gc, align 8, !dbg !12410
  %1 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !12411
  %call1 = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %1) #11, !dbg !12412
  store i32 %call1, i32* %hwnum, align 4, !dbg !12413
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !12414
  %3 = load i32, i32* %hwnum, align 4, !dbg !12415
  %4 = load i8*, i8** %name.addr, align 8, !dbg !12416
  %5 = load i64, i64* %lflags.addr, align 8, !dbg !12417
  %conv = trunc i64 %5 to i32, !dbg !12417
  %6 = load i32, i32* %dflags.addr, align 4, !dbg !12418
  %call2 = call %struct.gpio_desc* @gpiochip_request_own_desc(%struct.gpio_chip* %2, i32 %3, i8* %4, i32 %conv, i32 %6) #11, !dbg !12419
  store %struct.gpio_desc* %call2, %struct.gpio_desc** %local_desc, align 8, !dbg !12420
  %7 = load %struct.gpio_desc*, %struct.gpio_desc** %local_desc, align 8, !dbg !12421
  %8 = bitcast %struct.gpio_desc* %7 to i8*, !dbg !12421
  %call3 = call zeroext i1 @IS_ERR(i8* %8) #11, !dbg !12423
  br i1 %call3, label %if.then, label %if.end, !dbg !12424

if.then:                                          ; preds = %entry
  %9 = load %struct.gpio_desc*, %struct.gpio_desc** %local_desc, align 8, !dbg !12425
  %10 = bitcast %struct.gpio_desc* %9 to i8*, !dbg !12425
  %call4 = call i64 @PTR_ERR(i8* %10) #11, !dbg !12427
  %conv5 = trunc i64 %call4 to i32, !dbg !12427
  store i32 %conv5, i32* %ret, align 4, !dbg !12428
  %11 = load i8*, i8** %name.addr, align 8, !dbg !12429
  %12 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !12429
  %label = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %12, i32 0, i32 0, !dbg !12429
  %13 = load i8*, i8** %label, align 8, !dbg !12429
  %14 = load i32, i32* %hwnum, align 4, !dbg !12429
  %15 = load i32, i32* %ret, align 4, !dbg !12429
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.29, i64 0, i64 0), i8* %11, i8* %13, i32 %14, i32 %15) #13, !dbg !12429
  %16 = load i32, i32* %ret, align 4, !dbg !12430
  store i32 %16, i32* %retval, align 4, !dbg !12431
  br label %return, !dbg !12431

if.end:                                           ; preds = %entry
  %17 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !12432
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %17, i32 0, i32 1, !dbg !12433
  call void @set_bit(i64 11, i64* %flags) #11, !dbg !12434
  %18 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !12435
  %call7 = call i32 @desc_to_gpio(%struct.gpio_desc* %18) #11, !dbg !12435
  %19 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !12435
  %label8 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %19, i32 0, i32 2, !dbg !12435
  %20 = load i8*, i8** %label8, align 8, !dbg !12435
  %tobool = icmp ne i8* %20, null, !dbg !12435
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !12435

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !12435

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !12435

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %20, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), %cond.false ], !dbg !12435
  %21 = load i32, i32* %dflags.addr, align 4, !dbg !12435
  %conv9 = zext i32 %21 to i64, !dbg !12435
  %and = and i64 %conv9, 2, !dbg !12435
  %tobool10 = icmp ne i64 %and, 0, !dbg !12435
  %22 = zext i1 %tobool10 to i64, !dbg !12435
  %cond11 = select i1 %tobool10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0), !dbg !12435
  %23 = load i32, i32* %dflags.addr, align 4, !dbg !12435
  %conv12 = zext i32 %23 to i64, !dbg !12435
  %and13 = and i64 %conv12, 2, !dbg !12435
  %tobool14 = icmp ne i64 %and13, 0, !dbg !12435
  br i1 %tobool14, label %cond.true15, label %cond.false20, !dbg !12435

cond.true15:                                      ; preds = %cond.end
  %24 = load i32, i32* %dflags.addr, align 4, !dbg !12435
  %conv16 = zext i32 %24 to i64, !dbg !12435
  %and17 = and i64 %conv16, 4, !dbg !12435
  %tobool18 = icmp ne i64 %and17, 0, !dbg !12435
  %25 = zext i1 %tobool18 to i64, !dbg !12435
  %cond19 = select i1 %tobool18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i64 0, i64 0), !dbg !12435
  br label %cond.end21, !dbg !12435

cond.false20:                                     ; preds = %cond.end
  br label %cond.end21, !dbg !12435

cond.end21:                                       ; preds = %cond.false20, %cond.true15
  %cond22 = phi i8* [ %cond19, %cond.true15 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.35, i64 0, i64 0), %cond.false20 ], !dbg !12435
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.30, i64 0, i64 0), i32 %call7, i8* %cond, i8* %cond11, i8* %cond22) #13, !dbg !12435
  store i32 0, i32* %retval, align 4, !dbg !12436
  br label %return, !dbg !12436

return:                                           ; preds = %cond.end21, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !12437
  ret i32 %26, !dbg !12437
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.gpio_descs* @gpiod_get_array(%struct.device* %dev, i8* %con_id, i32 %flags) #0 !dbg !12438 {
entry:
  %map.addr.i128 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %map.addr.i128, metadata !12448, metadata !DIExpression()), !dbg !12452
  %start.addr.i129 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr.i129, metadata !12459, metadata !DIExpression()), !dbg !12460
  %nbits.addr.i130 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr.i130, metadata !12461, metadata !DIExpression()), !dbg !12462
  %map.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %map.addr.i, metadata !12448, metadata !DIExpression()), !dbg !12463
  %start.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr.i, metadata !12459, metadata !DIExpression()), !dbg !12465
  %nbits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr.i, metadata !12461, metadata !DIExpression()), !dbg !12466
  %retval = alloca %struct.gpio_descs*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %con_id.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %desc = alloca %struct.gpio_desc*, align 8
  %descs = alloca %struct.gpio_descs*, align 8
  %array_info = alloca %struct.gpio_array*, align 8
  %gc = alloca %struct.gpio_chip*, align 8
  %count = alloca i32, align 4
  %bitmap_size = alloca i32, align 4
  %array = alloca %struct.gpio_descs*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12467, metadata !DIExpression()), !dbg !12468
  store i8* %con_id, i8** %con_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con_id.addr, metadata !12469, metadata !DIExpression()), !dbg !12470
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12471, metadata !DIExpression()), !dbg !12472
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc, metadata !12473, metadata !DIExpression()), !dbg !12474
  call void @llvm.dbg.declare(metadata %struct.gpio_descs** %descs, metadata !12475, metadata !DIExpression()), !dbg !12476
  call void @llvm.dbg.declare(metadata %struct.gpio_array** %array_info, metadata !12477, metadata !DIExpression()), !dbg !12478
  store %struct.gpio_array* null, %struct.gpio_array** %array_info, align 8, !dbg !12478
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !12479, metadata !DIExpression()), !dbg !12480
  call void @llvm.dbg.declare(metadata i32* %count, metadata !12481, metadata !DIExpression()), !dbg !12482
  call void @llvm.dbg.declare(metadata i32* %bitmap_size, metadata !12483, metadata !DIExpression()), !dbg !12484
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12485
  %1 = load i8*, i8** %con_id.addr, align 8, !dbg !12486
  %call = call i32 @gpiod_count(%struct.device* %0, i8* %1) #11, !dbg !12487
  store i32 %call, i32* %count, align 4, !dbg !12488
  %2 = load i32, i32* %count, align 4, !dbg !12489
  %cmp = icmp slt i32 %2, 0, !dbg !12491
  br i1 %cmp, label %if.then, label %if.end, !dbg !12492

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %count, align 4, !dbg !12493
  %conv = sext i32 %3 to i64, !dbg !12493
  %call1 = call i8* @ERR_PTR(i64 %conv) #11, !dbg !12494
  %4 = bitcast i8* %call1 to %struct.gpio_descs*, !dbg !12494
  store %struct.gpio_descs* %4, %struct.gpio_descs** %retval, align 8, !dbg !12495
  br label %return, !dbg !12495

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %count, align 4, !dbg !12496
  %conv2 = sext i32 %5 to i64, !dbg !12496
  %call3 = call i64 @__ab_c_size(i64 %conv2, i64 8, i64 16) #11, !dbg !12496
  %call4 = call i8* @kzalloc(i64 %call3, i32 3264) #11, !dbg !12497
  %6 = bitcast i8* %call4 to %struct.gpio_descs*, !dbg !12497
  store %struct.gpio_descs* %6, %struct.gpio_descs** %descs, align 8, !dbg !12498
  %7 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12499
  %tobool = icmp ne %struct.gpio_descs* %7, null, !dbg !12499
  br i1 %tobool, label %if.end7, label %if.then5, !dbg !12501

if.then5:                                         ; preds = %if.end
  %call6 = call i8* @ERR_PTR(i64 -12) #11, !dbg !12502
  %8 = bitcast i8* %call6 to %struct.gpio_descs*, !dbg !12502
  store %struct.gpio_descs* %8, %struct.gpio_descs** %retval, align 8, !dbg !12503
  br label %return, !dbg !12503

if.end7:                                          ; preds = %if.end
  %9 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12504
  %ndescs = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %9, i32 0, i32 1, !dbg !12505
  store i32 0, i32* %ndescs, align 8, !dbg !12506
  br label %for.cond, !dbg !12504

for.cond:                                         ; preds = %if.end123, %if.end7
  %10 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12507
  %ndescs8 = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %10, i32 0, i32 1, !dbg !12508
  %11 = load i32, i32* %ndescs8, align 8, !dbg !12508
  %12 = load i32, i32* %count, align 4, !dbg !12509
  %cmp9 = icmp ult i32 %11, %12, !dbg !12510
  br i1 %cmp9, label %for.body, label %for.end, !dbg !12511

for.body:                                         ; preds = %for.cond
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12512
  %14 = load i8*, i8** %con_id.addr, align 8, !dbg !12513
  %15 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12514
  %ndescs11 = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %15, i32 0, i32 1, !dbg !12515
  %16 = load i32, i32* %ndescs11, align 8, !dbg !12515
  %17 = load i32, i32* %flags.addr, align 4, !dbg !12516
  %call12 = call %struct.gpio_desc* @gpiod_get_index(%struct.device* %13, i8* %14, i32 %16, i32 %17) #11, !dbg !12517
  store %struct.gpio_desc* %call12, %struct.gpio_desc** %desc, align 8, !dbg !12518
  %18 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12519
  %19 = bitcast %struct.gpio_desc* %18 to i8*, !dbg !12519
  %call13 = call zeroext i1 @IS_ERR(i8* %19) #11, !dbg !12521
  br i1 %call13, label %if.then14, label %if.end16, !dbg !12522

if.then14:                                        ; preds = %for.body
  %20 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12523
  call void @gpiod_put_array(%struct.gpio_descs* %20) #11, !dbg !12525
  %21 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12526
  %22 = bitcast %struct.gpio_desc* %21 to i8*, !dbg !12526
  %call15 = call i8* @ERR_CAST(i8* %22) #11, !dbg !12527
  %23 = bitcast i8* %call15 to %struct.gpio_descs*, !dbg !12527
  store %struct.gpio_descs* %23, %struct.gpio_descs** %retval, align 8, !dbg !12528
  br label %return, !dbg !12528

if.end16:                                         ; preds = %for.body
  %24 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12529
  %25 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12530
  %desc17 = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %25, i32 0, i32 2, !dbg !12531
  %26 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12532
  %ndescs18 = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %26, i32 0, i32 1, !dbg !12533
  %27 = load i32, i32* %ndescs18, align 8, !dbg !12533
  %idxprom = zext i32 %27 to i64, !dbg !12530
  %arrayidx = getelementptr [0 x %struct.gpio_desc*], [0 x %struct.gpio_desc*]* %desc17, i64 0, i64 %idxprom, !dbg !12530
  store %struct.gpio_desc* %24, %struct.gpio_desc** %arrayidx, align 8, !dbg !12534
  %28 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12535
  %call19 = call %struct.gpio_chip* @gpiod_to_chip(%struct.gpio_desc* %28) #11, !dbg !12536
  store %struct.gpio_chip* %call19, %struct.gpio_chip** %gc, align 8, !dbg !12537
  %29 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12538
  %ndescs20 = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %29, i32 0, i32 1, !dbg !12539
  %30 = load i32, i32* %ndescs20, align 8, !dbg !12539
  %cmp21 = icmp eq i32 %30, 0, !dbg !12540
  br i1 %cmp21, label %land.lhs.true, label %if.end66, !dbg !12541

land.lhs.true:                                    ; preds = %if.end16
  %31 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12542
  %call23 = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %31) #11, !dbg !12543
  %cmp24 = icmp eq i32 %call23, 0, !dbg !12544
  br i1 %cmp24, label %if.then26, label %if.end66, !dbg !12545

if.then26:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.gpio_descs** %array, metadata !12546, metadata !DIExpression()), !dbg !12547
  %32 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !12548
  %ngpio = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %32, i32 0, i32 19, !dbg !12548
  %33 = load i16, i16* %ngpio, align 4, !dbg !12548
  %conv27 = zext i16 %33 to i32, !dbg !12548
  %34 = load i32, i32* %count, align 4, !dbg !12548
  %cmp28 = icmp sgt i32 %conv27, %34, !dbg !12548
  br i1 %cmp28, label %cond.true, label %cond.false, !dbg !12548

cond.true:                                        ; preds = %if.then26
  %35 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !12548
  %ngpio30 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %35, i32 0, i32 19, !dbg !12548
  %36 = load i16, i16* %ngpio30, align 4, !dbg !12548
  %conv31 = zext i16 %36 to i32, !dbg !12548
  br label %cond.end, !dbg !12548

cond.false:                                       ; preds = %if.then26
  %37 = load i32, i32* %count, align 4, !dbg !12548
  br label %cond.end, !dbg !12548

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv31, %cond.true ], [ %37, %cond.false ], !dbg !12548
  %conv32 = sext i32 %cond to i64, !dbg !12548
  %add = add i64 %conv32, 64, !dbg !12548
  %sub = sub i64 %add, 1, !dbg !12548
  %div = udiv i64 %sub, 64, !dbg !12548
  %conv33 = trunc i64 %div to i32, !dbg !12548
  store i32 %conv33, i32* %bitmap_size, align 4, !dbg !12549
  %38 = load i32, i32* %count, align 4, !dbg !12550
  %conv34 = sext i32 %38 to i64, !dbg !12550
  %call35 = call i64 @__ab_c_size(i64 %conv34, i64 8, i64 16) #11, !dbg !12550
  %39 = load i32, i32* %bitmap_size, align 4, !dbg !12551
  %mul = mul i32 3, %39, !dbg !12551
  %conv36 = sext i32 %mul to i64, !dbg !12551
  %call37 = call i64 @__ab_c_size(i64 %conv36, i64 8, i64 40) #11, !dbg !12551
  %add38 = add i64 %call35, %call37, !dbg !12552
  %call39 = call i8* @kzalloc(i64 %add38, i32 3264) #11, !dbg !12553
  %40 = bitcast i8* %call39 to %struct.gpio_descs*, !dbg !12553
  store %struct.gpio_descs* %40, %struct.gpio_descs** %array, align 8, !dbg !12554
  %41 = load %struct.gpio_descs*, %struct.gpio_descs** %array, align 8, !dbg !12555
  %tobool40 = icmp ne %struct.gpio_descs* %41, null, !dbg !12555
  br i1 %tobool40, label %if.end43, label %if.then41, !dbg !12557

if.then41:                                        ; preds = %cond.end
  %42 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12558
  call void @gpiod_put_array(%struct.gpio_descs* %42) #11, !dbg !12560
  %call42 = call i8* @ERR_PTR(i64 -12) #11, !dbg !12561
  %43 = bitcast i8* %call42 to %struct.gpio_descs*, !dbg !12561
  store %struct.gpio_descs* %43, %struct.gpio_descs** %retval, align 8, !dbg !12562
  br label %return, !dbg !12562

if.end43:                                         ; preds = %cond.end
  %44 = load %struct.gpio_descs*, %struct.gpio_descs** %array, align 8, !dbg !12563
  %45 = bitcast %struct.gpio_descs* %44 to i8*, !dbg !12564
  %46 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12565
  %47 = bitcast %struct.gpio_descs* %46 to i8*, !dbg !12564
  %48 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12566
  %ndescs44 = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %48, i32 0, i32 1, !dbg !12566
  %49 = load i32, i32* %ndescs44, align 8, !dbg !12566
  %add45 = add i32 %49, 1, !dbg !12566
  %conv46 = zext i32 %add45 to i64, !dbg !12566
  %call47 = call i64 @__ab_c_size(i64 %conv46, i64 8, i64 16) #11, !dbg !12566
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %47, i64 %call47, i1 false), !dbg !12564
  %50 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12567
  %51 = bitcast %struct.gpio_descs* %50 to i8*, !dbg !12567
  call void @kfree(i8* %51) #11, !dbg !12568
  %52 = load %struct.gpio_descs*, %struct.gpio_descs** %array, align 8, !dbg !12569
  store %struct.gpio_descs* %52, %struct.gpio_descs** %descs, align 8, !dbg !12570
  %53 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12571
  %desc48 = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %53, i32 0, i32 2, !dbg !12572
  %arraydecay = getelementptr inbounds [0 x %struct.gpio_desc*], [0 x %struct.gpio_desc*]* %desc48, i64 0, i64 0, !dbg !12571
  %54 = load i32, i32* %count, align 4, !dbg !12573
  %idx.ext = sext i32 %54 to i64, !dbg !12574
  %add.ptr = getelementptr %struct.gpio_desc*, %struct.gpio_desc** %arraydecay, i64 %idx.ext, !dbg !12574
  %55 = bitcast %struct.gpio_desc** %add.ptr to i8*, !dbg !12575
  %56 = bitcast i8* %55 to %struct.gpio_array*, !dbg !12575
  store %struct.gpio_array* %56, %struct.gpio_array** %array_info, align 8, !dbg !12576
  %57 = load %struct.gpio_array*, %struct.gpio_array** %array_info, align 8, !dbg !12577
  %invert_mask = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %57, i32 0, i32 5, !dbg !12578
  %arraydecay49 = getelementptr inbounds [0 x i64], [0 x i64]* %invert_mask, i64 0, i64 0, !dbg !12577
  %58 = load i32, i32* %bitmap_size, align 4, !dbg !12579
  %idx.ext50 = sext i32 %58 to i64, !dbg !12580
  %add.ptr51 = getelementptr i64, i64* %arraydecay49, i64 %idx.ext50, !dbg !12580
  %59 = load %struct.gpio_array*, %struct.gpio_array** %array_info, align 8, !dbg !12581
  %get_mask = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %59, i32 0, i32 3, !dbg !12582
  store i64* %add.ptr51, i64** %get_mask, align 8, !dbg !12583
  %60 = load %struct.gpio_array*, %struct.gpio_array** %array_info, align 8, !dbg !12584
  %get_mask52 = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %60, i32 0, i32 3, !dbg !12585
  %61 = load i64*, i64** %get_mask52, align 8, !dbg !12585
  %62 = load i32, i32* %bitmap_size, align 4, !dbg !12586
  %idx.ext53 = sext i32 %62 to i64, !dbg !12587
  %add.ptr54 = getelementptr i64, i64* %61, i64 %idx.ext53, !dbg !12587
  %63 = load %struct.gpio_array*, %struct.gpio_array** %array_info, align 8, !dbg !12588
  %set_mask = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %63, i32 0, i32 4, !dbg !12589
  store i64* %add.ptr54, i64** %set_mask, align 8, !dbg !12590
  %64 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12591
  %desc55 = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %64, i32 0, i32 2, !dbg !12592
  %arraydecay56 = getelementptr inbounds [0 x %struct.gpio_desc*], [0 x %struct.gpio_desc*]* %desc55, i64 0, i64 0, !dbg !12591
  %65 = load %struct.gpio_array*, %struct.gpio_array** %array_info, align 8, !dbg !12593
  %desc57 = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %65, i32 0, i32 0, !dbg !12594
  store %struct.gpio_desc** %arraydecay56, %struct.gpio_desc*** %desc57, align 8, !dbg !12595
  %66 = load i32, i32* %count, align 4, !dbg !12596
  %67 = load %struct.gpio_array*, %struct.gpio_array** %array_info, align 8, !dbg !12597
  %size = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %67, i32 0, i32 1, !dbg !12598
  store i32 %66, i32* %size, align 8, !dbg !12599
  %68 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !12600
  %69 = load %struct.gpio_array*, %struct.gpio_array** %array_info, align 8, !dbg !12601
  %chip = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %69, i32 0, i32 2, !dbg !12602
  store %struct.gpio_chip* %68, %struct.gpio_chip** %chip, align 8, !dbg !12603
  %70 = load %struct.gpio_array*, %struct.gpio_array** %array_info, align 8, !dbg !12604
  %get_mask58 = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %70, i32 0, i32 3, !dbg !12605
  %71 = load i64*, i64** %get_mask58, align 8, !dbg !12605
  %72 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12606
  %ndescs59 = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %72, i32 0, i32 1, !dbg !12607
  %73 = load i32, i32* %ndescs59, align 8, !dbg !12607
  %74 = load i32, i32* %count, align 4, !dbg !12608
  %75 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12609
  %ndescs60 = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %75, i32 0, i32 1, !dbg !12610
  %76 = load i32, i32* %ndescs60, align 8, !dbg !12610
  %sub61 = sub i32 %74, %76, !dbg !12611
  store i64* %71, i64** %map.addr.i, align 8
  store i32 %73, i32* %start.addr.i, align 4
  store i32 %sub61, i32* %nbits.addr.i, align 4
  %77 = load i32, i32* %nbits.addr.i, align 4, !dbg !12612
  %78 = call i1 @llvm.is.constant.i32(i32 %77) #7, !dbg !12614
  br i1 %78, label %land.lhs.true.i, label %if.else.i, !dbg !12615

land.lhs.true.i:                                  ; preds = %if.end43
  %79 = load i32, i32* %nbits.addr.i, align 4, !dbg !12616
  %cmp.i = icmp eq i32 %79, 1, !dbg !12617
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !12618

if.then.i:                                        ; preds = %land.lhs.true.i
  %80 = load i32, i32* %start.addr.i, align 4, !dbg !12619
  %conv.i = zext i32 %80 to i64, !dbg !12619
  %81 = load i64*, i64** %map.addr.i, align 8, !dbg !12620
  call void @__set_bit(i64 %conv.i, i64* %81) #12, !dbg !12621
  br label %bitmap_set.exit, !dbg !12621

if.else.i:                                        ; preds = %land.lhs.true.i, %if.end43
  %82 = load i32, i32* %start.addr.i, align 4, !dbg !12622
  %and.i = and i32 %82, 7, !dbg !12624
  %83 = call i1 @llvm.is.constant.i32(i32 %and.i) #7, !dbg !12625
  br i1 %83, label %land.lhs.true1.i, label %if.else14.i, !dbg !12626

land.lhs.true1.i:                                 ; preds = %if.else.i
  %84 = load i32, i32* %start.addr.i, align 4, !dbg !12627
  %and2.i = and i32 %84, 7, !dbg !12627
  %cmp3.i = icmp eq i32 %and2.i, 0, !dbg !12627
  br i1 %cmp3.i, label %land.lhs.true5.i, label %if.else14.i, !dbg !12628

land.lhs.true5.i:                                 ; preds = %land.lhs.true1.i
  %85 = load i32, i32* %nbits.addr.i, align 4, !dbg !12629
  %and6.i = and i32 %85, 7, !dbg !12630
  %86 = call i1 @llvm.is.constant.i32(i32 %and6.i) #7, !dbg !12631
  br i1 %86, label %land.lhs.true7.i, label %if.else14.i, !dbg !12632

land.lhs.true7.i:                                 ; preds = %land.lhs.true5.i
  %87 = load i32, i32* %nbits.addr.i, align 4, !dbg !12633
  %and8.i = and i32 %87, 7, !dbg !12633
  %cmp9.i = icmp eq i32 %and8.i, 0, !dbg !12633
  br i1 %cmp9.i, label %if.then11.i, label %if.else14.i, !dbg !12634

if.then11.i:                                      ; preds = %land.lhs.true7.i
  %88 = load i64*, i64** %map.addr.i, align 8, !dbg !12635
  %89 = bitcast i64* %88 to i8*, !dbg !12636
  %90 = load i32, i32* %start.addr.i, align 4, !dbg !12637
  %div.i = udiv i32 %90, 8, !dbg !12638
  %idx.ext.i = zext i32 %div.i to i64, !dbg !12639
  %add.ptr.i = getelementptr i8, i8* %89, i64 %idx.ext.i, !dbg !12639
  %91 = load i32, i32* %nbits.addr.i, align 4, !dbg !12640
  %div12.i = udiv i32 %91, 8, !dbg !12641
  %conv13.i = zext i32 %div12.i to i64, !dbg !12640
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr.i, i8 -1, i64 %conv13.i, i1 false) #7, !dbg !12642
  br label %if.end.i, !dbg !12642

if.else14.i:                                      ; preds = %land.lhs.true7.i, %land.lhs.true5.i, %land.lhs.true1.i, %if.else.i
  %92 = load i64*, i64** %map.addr.i, align 8, !dbg !12643
  %93 = load i32, i32* %start.addr.i, align 4, !dbg !12644
  %94 = load i32, i32* %nbits.addr.i, align 4, !dbg !12645
  call void @__bitmap_set(i64* %92, i32 %93, i32 %94) #12, !dbg !12646
  br label %if.end.i

if.end.i:                                         ; preds = %if.else14.i, %if.then11.i
  br label %bitmap_set.exit

bitmap_set.exit:                                  ; preds = %if.then.i, %if.end.i
  %95 = load %struct.gpio_array*, %struct.gpio_array** %array_info, align 8, !dbg !12647
  %set_mask62 = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %95, i32 0, i32 4, !dbg !12648
  %96 = load i64*, i64** %set_mask62, align 8, !dbg !12648
  %97 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12649
  %ndescs63 = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %97, i32 0, i32 1, !dbg !12650
  %98 = load i32, i32* %ndescs63, align 8, !dbg !12650
  %99 = load i32, i32* %count, align 4, !dbg !12651
  %100 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12652
  %ndescs64 = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %100, i32 0, i32 1, !dbg !12653
  %101 = load i32, i32* %ndescs64, align 8, !dbg !12653
  %sub65 = sub i32 %99, %101, !dbg !12654
  store i64* %96, i64** %map.addr.i128, align 8
  store i32 %98, i32* %start.addr.i129, align 4
  store i32 %sub65, i32* %nbits.addr.i130, align 4
  %102 = load i32, i32* %nbits.addr.i130, align 4, !dbg !12655
  %103 = call i1 @llvm.is.constant.i32(i32 %102) #7, !dbg !12656
  br i1 %103, label %land.lhs.true.i132, label %if.else.i136, !dbg !12657

land.lhs.true.i132:                               ; preds = %bitmap_set.exit
  %104 = load i32, i32* %nbits.addr.i130, align 4, !dbg !12658
  %cmp.i131 = icmp eq i32 %104, 1, !dbg !12659
  br i1 %cmp.i131, label %if.then.i134, label %if.else.i136, !dbg !12660

if.then.i134:                                     ; preds = %land.lhs.true.i132
  %105 = load i32, i32* %start.addr.i129, align 4, !dbg !12661
  %conv.i133 = zext i32 %105 to i64, !dbg !12661
  %106 = load i64*, i64** %map.addr.i128, align 8, !dbg !12662
  call void @__set_bit(i64 %conv.i133, i64* %106) #12, !dbg !12663
  br label %bitmap_set.exit153, !dbg !12663

if.else.i136:                                     ; preds = %land.lhs.true.i132, %bitmap_set.exit
  %107 = load i32, i32* %start.addr.i129, align 4, !dbg !12664
  %and.i135 = and i32 %107, 7, !dbg !12665
  %108 = call i1 @llvm.is.constant.i32(i32 %and.i135) #7, !dbg !12666
  br i1 %108, label %land.lhs.true1.i139, label %if.else14.i151, !dbg !12667

land.lhs.true1.i139:                              ; preds = %if.else.i136
  %109 = load i32, i32* %start.addr.i129, align 4, !dbg !12668
  %and2.i137 = and i32 %109, 7, !dbg !12668
  %cmp3.i138 = icmp eq i32 %and2.i137, 0, !dbg !12668
  br i1 %cmp3.i138, label %land.lhs.true5.i141, label %if.else14.i151, !dbg !12669

land.lhs.true5.i141:                              ; preds = %land.lhs.true1.i139
  %110 = load i32, i32* %nbits.addr.i130, align 4, !dbg !12670
  %and6.i140 = and i32 %110, 7, !dbg !12671
  %111 = call i1 @llvm.is.constant.i32(i32 %and6.i140) #7, !dbg !12672
  br i1 %111, label %land.lhs.true7.i144, label %if.else14.i151, !dbg !12673

land.lhs.true7.i144:                              ; preds = %land.lhs.true5.i141
  %112 = load i32, i32* %nbits.addr.i130, align 4, !dbg !12674
  %and8.i142 = and i32 %112, 7, !dbg !12674
  %cmp9.i143 = icmp eq i32 %and8.i142, 0, !dbg !12674
  br i1 %cmp9.i143, label %if.then11.i150, label %if.else14.i151, !dbg !12675

if.then11.i150:                                   ; preds = %land.lhs.true7.i144
  %113 = load i64*, i64** %map.addr.i128, align 8, !dbg !12676
  %114 = bitcast i64* %113 to i8*, !dbg !12677
  %115 = load i32, i32* %start.addr.i129, align 4, !dbg !12678
  %div.i145 = udiv i32 %115, 8, !dbg !12679
  %idx.ext.i146 = zext i32 %div.i145 to i64, !dbg !12680
  %add.ptr.i147 = getelementptr i8, i8* %114, i64 %idx.ext.i146, !dbg !12680
  %116 = load i32, i32* %nbits.addr.i130, align 4, !dbg !12681
  %div12.i148 = udiv i32 %116, 8, !dbg !12682
  %conv13.i149 = zext i32 %div12.i148 to i64, !dbg !12681
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr.i147, i8 -1, i64 %conv13.i149, i1 false) #7, !dbg !12683
  br label %if.end.i152, !dbg !12683

if.else14.i151:                                   ; preds = %land.lhs.true7.i144, %land.lhs.true5.i141, %land.lhs.true1.i139, %if.else.i136
  %117 = load i64*, i64** %map.addr.i128, align 8, !dbg !12684
  %118 = load i32, i32* %start.addr.i129, align 4, !dbg !12685
  %119 = load i32, i32* %nbits.addr.i130, align 4, !dbg !12686
  call void @__bitmap_set(i64* %117, i32 %118, i32 %119) #12, !dbg !12687
  br label %if.end.i152

if.end.i152:                                      ; preds = %if.else14.i151, %if.then11.i150
  br label %bitmap_set.exit153

bitmap_set.exit153:                               ; preds = %if.then.i134, %if.end.i152
  %120 = load %struct.gpio_array*, %struct.gpio_array** %array_info, align 8, !dbg !12688
  %121 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12689
  %info = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %121, i32 0, i32 0, !dbg !12690
  store %struct.gpio_array* %120, %struct.gpio_array** %info, align 8, !dbg !12691
  br label %if.end66, !dbg !12692

if.end66:                                         ; preds = %bitmap_set.exit153, %land.lhs.true, %if.end16
  %122 = load %struct.gpio_array*, %struct.gpio_array** %array_info, align 8, !dbg !12693
  %tobool67 = icmp ne %struct.gpio_array* %122, null, !dbg !12693
  br i1 %tobool67, label %land.lhs.true68, label %if.else, !dbg !12695

land.lhs.true68:                                  ; preds = %if.end66
  %123 = load %struct.gpio_array*, %struct.gpio_array** %array_info, align 8, !dbg !12696
  %chip69 = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %123, i32 0, i32 2, !dbg !12697
  %124 = load %struct.gpio_chip*, %struct.gpio_chip** %chip69, align 8, !dbg !12697
  %125 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !12698
  %cmp70 = icmp ne %struct.gpio_chip* %124, %125, !dbg !12699
  br i1 %cmp70, label %if.then72, label %if.else, !dbg !12700

if.then72:                                        ; preds = %land.lhs.true68
  %126 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12701
  %ndescs73 = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %126, i32 0, i32 1, !dbg !12703
  %127 = load i32, i32* %ndescs73, align 8, !dbg !12703
  %conv74 = zext i32 %127 to i64, !dbg !12701
  %128 = load %struct.gpio_array*, %struct.gpio_array** %array_info, align 8, !dbg !12704
  %get_mask75 = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %128, i32 0, i32 3, !dbg !12705
  %129 = load i64*, i64** %get_mask75, align 8, !dbg !12705
  call void @__clear_bit(i64 %conv74, i64* %129) #11, !dbg !12706
  %130 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12707
  %ndescs76 = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %130, i32 0, i32 1, !dbg !12708
  %131 = load i32, i32* %ndescs76, align 8, !dbg !12708
  %conv77 = zext i32 %131 to i64, !dbg !12707
  %132 = load %struct.gpio_array*, %struct.gpio_array** %array_info, align 8, !dbg !12709
  %set_mask78 = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %132, i32 0, i32 4, !dbg !12710
  %133 = load i64*, i64** %set_mask78, align 8, !dbg !12710
  call void @__clear_bit(i64 %conv77, i64* %133) #11, !dbg !12711
  br label %if.end123, !dbg !12712

if.else:                                          ; preds = %land.lhs.true68, %if.end66
  %134 = load %struct.gpio_array*, %struct.gpio_array** %array_info, align 8, !dbg !12713
  %tobool79 = icmp ne %struct.gpio_array* %134, null, !dbg !12713
  br i1 %tobool79, label %land.lhs.true80, label %if.else99, !dbg !12715

land.lhs.true80:                                  ; preds = %if.else
  %135 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12716
  %call81 = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %135) #11, !dbg !12717
  %136 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12718
  %ndescs82 = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %136, i32 0, i32 1, !dbg !12719
  %137 = load i32, i32* %ndescs82, align 8, !dbg !12719
  %cmp83 = icmp ne i32 %call81, %137, !dbg !12720
  br i1 %cmp83, label %if.then85, label %if.else99, !dbg !12721

if.then85:                                        ; preds = %land.lhs.true80
  %138 = load %struct.gpio_array*, %struct.gpio_array** %array_info, align 8, !dbg !12722
  %get_mask86 = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %138, i32 0, i32 3, !dbg !12725
  %139 = load i64*, i64** %get_mask86, align 8, !dbg !12725
  %140 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12726
  %ndescs87 = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %140, i32 0, i32 1, !dbg !12727
  %141 = load i32, i32* %ndescs87, align 8, !dbg !12727
  %call88 = call i32 @bitmap_full(i64* %139, i32 %141) #11, !dbg !12728
  %tobool89 = icmp ne i32 %call88, 0, !dbg !12728
  br i1 %tobool89, label %if.then90, label %if.else91, !dbg !12729

if.then90:                                        ; preds = %if.then85
  store %struct.gpio_array* null, %struct.gpio_array** %array_info, align 8, !dbg !12730
  br label %if.end98, !dbg !12732

if.else91:                                        ; preds = %if.then85
  %142 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12733
  %ndescs92 = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %142, i32 0, i32 1, !dbg !12735
  %143 = load i32, i32* %ndescs92, align 8, !dbg !12735
  %conv93 = zext i32 %143 to i64, !dbg !12733
  %144 = load %struct.gpio_array*, %struct.gpio_array** %array_info, align 8, !dbg !12736
  %get_mask94 = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %144, i32 0, i32 3, !dbg !12737
  %145 = load i64*, i64** %get_mask94, align 8, !dbg !12737
  call void @__clear_bit(i64 %conv93, i64* %145) #11, !dbg !12738
  %146 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12739
  %ndescs95 = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %146, i32 0, i32 1, !dbg !12740
  %147 = load i32, i32* %ndescs95, align 8, !dbg !12740
  %conv96 = zext i32 %147 to i64, !dbg !12739
  %148 = load %struct.gpio_array*, %struct.gpio_array** %array_info, align 8, !dbg !12741
  %set_mask97 = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %148, i32 0, i32 4, !dbg !12742
  %149 = load i64*, i64** %set_mask97, align 8, !dbg !12742
  call void @__clear_bit(i64 %conv96, i64* %149) #11, !dbg !12743
  br label %if.end98

if.end98:                                         ; preds = %if.else91, %if.then90
  br label %if.end122, !dbg !12744

if.else99:                                        ; preds = %land.lhs.true80, %if.else
  %150 = load %struct.gpio_array*, %struct.gpio_array** %array_info, align 8, !dbg !12745
  %tobool100 = icmp ne %struct.gpio_array* %150, null, !dbg !12745
  br i1 %tobool100, label %if.then101, label %if.end121, !dbg !12747

if.then101:                                       ; preds = %if.else99
  %151 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !12748
  %152 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12751
  %ndescs102 = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %152, i32 0, i32 1, !dbg !12752
  %153 = load i32, i32* %ndescs102, align 8, !dbg !12752
  %call103 = call zeroext i1 @gpiochip_line_is_open_drain(%struct.gpio_chip* %151, i32 %153) #11, !dbg !12753
  br i1 %call103, label %if.then108, label %lor.lhs.false, !dbg !12754

lor.lhs.false:                                    ; preds = %if.then101
  %154 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !12755
  %155 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12756
  %ndescs105 = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %155, i32 0, i32 1, !dbg !12757
  %156 = load i32, i32* %ndescs105, align 8, !dbg !12757
  %call106 = call zeroext i1 @gpiochip_line_is_open_source(%struct.gpio_chip* %154, i32 %156) #11, !dbg !12758
  br i1 %call106, label %if.then108, label %if.end112, !dbg !12759

if.then108:                                       ; preds = %lor.lhs.false, %if.then101
  %157 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12760
  %ndescs109 = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %157, i32 0, i32 1, !dbg !12761
  %158 = load i32, i32* %ndescs109, align 8, !dbg !12761
  %conv110 = zext i32 %158 to i64, !dbg !12760
  %159 = load %struct.gpio_array*, %struct.gpio_array** %array_info, align 8, !dbg !12762
  %set_mask111 = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %159, i32 0, i32 4, !dbg !12763
  %160 = load i64*, i64** %set_mask111, align 8, !dbg !12763
  call void @__clear_bit(i64 %conv110, i64* %160) #11, !dbg !12764
  br label %if.end112, !dbg !12764

if.end112:                                        ; preds = %if.then108, %lor.lhs.false
  %161 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12765
  %call113 = call i32 @gpiod_is_active_low(%struct.gpio_desc* %161) #11, !dbg !12767
  %tobool114 = icmp ne i32 %call113, 0, !dbg !12767
  br i1 %tobool114, label %if.then115, label %if.end120, !dbg !12768

if.then115:                                       ; preds = %if.end112
  %162 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12769
  %ndescs116 = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %162, i32 0, i32 1, !dbg !12770
  %163 = load i32, i32* %ndescs116, align 8, !dbg !12770
  %conv117 = zext i32 %163 to i64, !dbg !12769
  %164 = load %struct.gpio_array*, %struct.gpio_array** %array_info, align 8, !dbg !12771
  %invert_mask118 = getelementptr inbounds %struct.gpio_array, %struct.gpio_array* %164, i32 0, i32 5, !dbg !12772
  %arraydecay119 = getelementptr inbounds [0 x i64], [0 x i64]* %invert_mask118, i64 0, i64 0, !dbg !12771
  call void @__set_bit(i64 %conv117, i64* %arraydecay119) #11, !dbg !12773
  br label %if.end120, !dbg !12773

if.end120:                                        ; preds = %if.then115, %if.end112
  br label %if.end121, !dbg !12774

if.end121:                                        ; preds = %if.end120, %if.else99
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.end98
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %if.then72
  %165 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12775
  %ndescs124 = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %165, i32 0, i32 1, !dbg !12776
  %166 = load i32, i32* %ndescs124, align 8, !dbg !12777
  %inc = add i32 %166, 1, !dbg !12777
  store i32 %inc, i32* %ndescs124, align 8, !dbg !12777
  br label %for.cond, !dbg !12778, !llvm.loop !12779

for.end:                                          ; preds = %for.cond
  %167 = load %struct.gpio_array*, %struct.gpio_array** %array_info, align 8, !dbg !12781
  %tobool125 = icmp ne %struct.gpio_array* %167, null, !dbg !12781
  br i1 %tobool125, label %if.then126, label %if.end127, !dbg !12783

if.then126:                                       ; preds = %for.end
  br label %if.end127, !dbg !12784

if.end127:                                        ; preds = %if.then126, %for.end
  %168 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12785
  store %struct.gpio_descs* %168, %struct.gpio_descs** %retval, align 8, !dbg !12786
  br label %return, !dbg !12786

return:                                           ; preds = %if.end127, %if.then41, %if.then14, %if.then5, %if.then
  %169 = load %struct.gpio_descs*, %struct.gpio_descs** %retval, align 8, !dbg !12787
  ret %struct.gpio_descs* %169, !dbg !12787
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__ab_c_size(i64 %a, i64 %b, i64 %c) #0 !dbg !12788 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  %c.addr = alloca i64, align 8
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  %__a3 = alloca i64, align 8
  %__b4 = alloca i64, align 8
  %__d5 = alloca i64*, align 8
  %tmp10 = alloca i8, align 1
  store i64 %a, i64* %a.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !12792, metadata !DIExpression()), !dbg !12793
  store i64 %b, i64* %b.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !12794, metadata !DIExpression()), !dbg !12795
  store i64 %c, i64* %c.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %c.addr, metadata !12796, metadata !DIExpression()), !dbg !12797
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !12798, metadata !DIExpression()), !dbg !12799
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !12800, metadata !DIExpression()), !dbg !12803
  %0 = load i64, i64* %a.addr, align 8, !dbg !12803
  store i64 %0, i64* %__a, align 8, !dbg !12803
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !12804, metadata !DIExpression()), !dbg !12803
  %1 = load i64, i64* %b.addr, align 8, !dbg !12803
  store i64 %1, i64* %__b, align 8, !dbg !12803
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !12805, metadata !DIExpression()), !dbg !12803
  store i64* %bytes, i64** %__d, align 8, !dbg !12803
  %cmp = icmp eq i64* %__a, %__b, !dbg !12803
  %conv = zext i1 %cmp to i32, !dbg !12803
  %2 = load i64*, i64** %__d, align 8, !dbg !12803
  %cmp1 = icmp eq i64* %__a, %2, !dbg !12803
  %conv2 = zext i1 %cmp1 to i32, !dbg !12803
  %3 = load i64, i64* %__a, align 8, !dbg !12803
  %4 = load i64, i64* %__b, align 8, !dbg !12803
  %5 = load i64*, i64** %__d, align 8, !dbg !12803
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !12803
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !12803
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !12803
  store i64 %8, i64* %5, align 8, !dbg !12803
  %frombool = zext i1 %7 to i8, !dbg !12803
  store i8 %frombool, i8* %tmp, align 1, !dbg !12803
  %9 = load i8, i8* %tmp, align 1, !dbg !12803
  %tobool = trunc i8 %9 to i1, !dbg !12803
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !12806
  br i1 %call, label %if.then, label %if.end, !dbg !12807

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, align 8, !dbg !12808
  br label %return, !dbg !12808

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__a3, metadata !12809, metadata !DIExpression()), !dbg !12812
  %10 = load i64, i64* %bytes, align 8, !dbg !12812
  store i64 %10, i64* %__a3, align 8, !dbg !12812
  call void @llvm.dbg.declare(metadata i64* %__b4, metadata !12813, metadata !DIExpression()), !dbg !12812
  %11 = load i64, i64* %c.addr, align 8, !dbg !12812
  store i64 %11, i64* %__b4, align 8, !dbg !12812
  call void @llvm.dbg.declare(metadata i64** %__d5, metadata !12814, metadata !DIExpression()), !dbg !12812
  store i64* %bytes, i64** %__d5, align 8, !dbg !12812
  %cmp6 = icmp eq i64* %__a3, %__b4, !dbg !12812
  %conv7 = zext i1 %cmp6 to i32, !dbg !12812
  %12 = load i64*, i64** %__d5, align 8, !dbg !12812
  %cmp8 = icmp eq i64* %__a3, %12, !dbg !12812
  %conv9 = zext i1 %cmp8 to i32, !dbg !12812
  %13 = load i64, i64* %__a3, align 8, !dbg !12812
  %14 = load i64, i64* %__b4, align 8, !dbg !12812
  %15 = load i64*, i64** %__d5, align 8, !dbg !12812
  %16 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %13, i64 %14), !dbg !12812
  %17 = extractvalue { i64, i1 } %16, 1, !dbg !12812
  %18 = extractvalue { i64, i1 } %16, 0, !dbg !12812
  store i64 %18, i64* %15, align 8, !dbg !12812
  %frombool11 = zext i1 %17 to i8, !dbg !12812
  store i8 %frombool11, i8* %tmp10, align 1, !dbg !12812
  %19 = load i8, i8* %tmp10, align 1, !dbg !12812
  %tobool12 = trunc i8 %19 to i1, !dbg !12812
  %call13 = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool12) #11, !dbg !12815
  br i1 %call13, label %if.then14, label %if.end15, !dbg !12816

if.then14:                                        ; preds = %if.end
  store i64 -1, i64* %retval, align 8, !dbg !12817
  br label %return, !dbg !12817

if.end15:                                         ; preds = %if.end
  %20 = load i64, i64* %bytes, align 8, !dbg !12818
  store i64 %20, i64* %retval, align 8, !dbg !12819
  br label %return, !dbg !12819

return:                                           ; preds = %if.end15, %if.then14, %if.then
  %21 = load i64, i64* %retval, align 8, !dbg !12820
  ret i64 %21, !dbg !12820
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @gpiod_put_array(%struct.gpio_descs* %descs) #0 !dbg !12821 {
entry:
  %descs.addr = alloca %struct.gpio_descs*, align 8
  %i = alloca i32, align 4
  store %struct.gpio_descs* %descs, %struct.gpio_descs** %descs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_descs** %descs.addr, metadata !12824, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12826, metadata !DIExpression()), !dbg !12827
  store i32 0, i32* %i, align 4, !dbg !12828
  br label %for.cond, !dbg !12830

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !12831
  %1 = load %struct.gpio_descs*, %struct.gpio_descs** %descs.addr, align 8, !dbg !12833
  %ndescs = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %1, i32 0, i32 1, !dbg !12834
  %2 = load i32, i32* %ndescs, align 8, !dbg !12834
  %cmp = icmp ult i32 %0, %2, !dbg !12835
  br i1 %cmp, label %for.body, label %for.end, !dbg !12836

for.body:                                         ; preds = %for.cond
  %3 = load %struct.gpio_descs*, %struct.gpio_descs** %descs.addr, align 8, !dbg !12837
  %desc = getelementptr inbounds %struct.gpio_descs, %struct.gpio_descs* %3, i32 0, i32 2, !dbg !12838
  %4 = load i32, i32* %i, align 4, !dbg !12839
  %idxprom = zext i32 %4 to i64, !dbg !12837
  %arrayidx = getelementptr [0 x %struct.gpio_desc*], [0 x %struct.gpio_desc*]* %desc, i64 0, i64 %idxprom, !dbg !12837
  %5 = load %struct.gpio_desc*, %struct.gpio_desc** %arrayidx, align 8, !dbg !12837
  call void @gpiod_put(%struct.gpio_desc* %5) #11, !dbg !12840
  br label %for.inc, !dbg !12840

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !12841
  %inc = add i32 %6, 1, !dbg !12841
  store i32 %inc, i32* %i, align 4, !dbg !12841
  br label %for.cond, !dbg !12842, !llvm.loop !12843

for.end:                                          ; preds = %for.cond
  %7 = load %struct.gpio_descs*, %struct.gpio_descs** %descs.addr, align 8, !dbg !12845
  %8 = bitcast %struct.gpio_descs* %7 to i8*, !dbg !12845
  call void @kfree(i8* %8) #11, !dbg !12846
  ret void, !dbg !12847
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_CAST(i8* %ptr) #0 !dbg !12848 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12851, metadata !DIExpression()), !dbg !12852
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !12853
  ret i8* %0, !dbg !12854
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__clear_bit(i64 %nr, i64* %addr) #0 !dbg !12855 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !12856, metadata !DIExpression()), !dbg !12858
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !12860, metadata !DIExpression()), !dbg !12861
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !10330, metadata !DIExpression()), !dbg !12862
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !10334, metadata !DIExpression()), !dbg !12864
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !12865, metadata !DIExpression()), !dbg !12866
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !12867, metadata !DIExpression()), !dbg !12868
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !12869
  %1 = load i64, i64* %nr.addr, align 8, !dbg !12870
  %div = sdiv i64 %1, 64, !dbg !12870
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !12871
  %2 = bitcast i64* %add.ptr to i8*, !dbg !12869
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !12872
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !12873
  %conv.i = trunc i64 %4 to i32, !dbg !12873
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !12874
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !12875
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !12875
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #12, !dbg !12875
  %7 = load i64, i64* %nr.addr, align 8, !dbg !12876
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !12877
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !12878
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !12879
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #7, !dbg !12880, !srcloc !12881
  ret void, !dbg !12882
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @bitmap_full(i64* %src, i32 %nbits) #0 !dbg !12883 {
entry:
  %retval = alloca i32, align 4
  %src.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  store i64* %src, i64** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src.addr, metadata !12884, metadata !DIExpression()), !dbg !12885
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !12886, metadata !DIExpression()), !dbg !12887
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !12888
  %1 = call i1 @llvm.is.constant.i32(i32 %0), !dbg !12888
  br i1 %1, label %land.lhs.true, label %if.end, !dbg !12888

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %nbits.addr, align 4, !dbg !12888
  %cmp = icmp ule i32 %2, 64, !dbg !12888
  br i1 %cmp, label %land.lhs.true1, label %if.end, !dbg !12888

land.lhs.true1:                                   ; preds = %land.lhs.true
  %3 = load i32, i32* %nbits.addr, align 4, !dbg !12888
  %cmp2 = icmp ugt i32 %3, 0, !dbg !12888
  br i1 %cmp2, label %if.then, label %if.end, !dbg !12890

if.then:                                          ; preds = %land.lhs.true1
  %4 = load i64*, i64** %src.addr, align 8, !dbg !12891
  %5 = load i64, i64* %4, align 8, !dbg !12892
  %neg = xor i64 %5, -1, !dbg !12893
  %6 = load i32, i32* %nbits.addr, align 4, !dbg !12894
  %sub = sub i32 0, %6, !dbg !12894
  %and = and i32 %sub, 63, !dbg !12894
  %sh_prom = zext i32 %and to i64, !dbg !12894
  %shr = lshr i64 -1, %sh_prom, !dbg !12894
  %and3 = and i64 %neg, %shr, !dbg !12895
  %tobool = icmp ne i64 %and3, 0, !dbg !12896
  %lnot = xor i1 %tobool, true, !dbg !12896
  %lnot.ext = zext i1 %lnot to i32, !dbg !12896
  store i32 %lnot.ext, i32* %retval, align 4, !dbg !12897
  br label %return, !dbg !12897

if.end:                                           ; preds = %land.lhs.true1, %land.lhs.true, %entry
  %7 = load i64*, i64** %src.addr, align 8, !dbg !12898
  %8 = load i32, i32* %nbits.addr, align 4, !dbg !12899
  %conv = zext i32 %8 to i64, !dbg !12899
  %call = call i64 @find_first_zero_bit(i64* %7, i64 %conv) #11, !dbg !12900
  %9 = load i32, i32* %nbits.addr, align 4, !dbg !12901
  %conv4 = zext i32 %9 to i64, !dbg !12901
  %cmp5 = icmp eq i64 %call, %conv4, !dbg !12902
  %conv6 = zext i1 %cmp5 to i32, !dbg !12902
  store i32 %conv6, i32* %retval, align 4, !dbg !12903
  br label %return, !dbg !12903

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !12904
  ret i32 %10, !dbg !12904
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.gpio_descs* @gpiod_get_array_optional(%struct.device* %dev, i8* %con_id, i32 %flags) #0 !dbg !12905 {
entry:
  %retval = alloca %struct.gpio_descs*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %con_id.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %descs = alloca %struct.gpio_descs*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12906, metadata !DIExpression()), !dbg !12907
  store i8* %con_id, i8** %con_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con_id.addr, metadata !12908, metadata !DIExpression()), !dbg !12909
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12910, metadata !DIExpression()), !dbg !12911
  call void @llvm.dbg.declare(metadata %struct.gpio_descs** %descs, metadata !12912, metadata !DIExpression()), !dbg !12913
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12914
  %1 = load i8*, i8** %con_id.addr, align 8, !dbg !12915
  %2 = load i32, i32* %flags.addr, align 4, !dbg !12916
  %call = call %struct.gpio_descs* @gpiod_get_array(%struct.device* %0, i8* %1, i32 %2) #11, !dbg !12917
  store %struct.gpio_descs* %call, %struct.gpio_descs** %descs, align 8, !dbg !12918
  %3 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12919
  %4 = bitcast %struct.gpio_descs* %3 to i8*, !dbg !12919
  %call1 = call i64 @PTR_ERR(i8* %4) #11, !dbg !12921
  %cmp = icmp eq i64 %call1, -2, !dbg !12922
  br i1 %cmp, label %if.then, label %if.end, !dbg !12923

if.then:                                          ; preds = %entry
  store %struct.gpio_descs* null, %struct.gpio_descs** %retval, align 8, !dbg !12924
  br label %return, !dbg !12924

if.end:                                           ; preds = %entry
  %5 = load %struct.gpio_descs*, %struct.gpio_descs** %descs, align 8, !dbg !12925
  store %struct.gpio_descs* %5, %struct.gpio_descs** %retval, align 8, !dbg !12926
  br label %return, !dbg !12926

return:                                           ; preds = %if.end, %if.then
  %6 = load %struct.gpio_descs*, %struct.gpio_descs** %retval, align 8, !dbg !12927
  ret %struct.gpio_descs* %6, !dbg !12927
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @gpiolib_dev_init() #5 section ".init.text" !dbg !12928 {
entry:
  %retval = alloca i32, align 4
  %ret = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12931, metadata !DIExpression()), !dbg !12932
  %call = call i32 @bus_register(%struct.bus_type* @gpio_bus_type) #11, !dbg !12933
  store i32 %call, i32* %ret, align 4, !dbg !12934
  %0 = load i32, i32* %ret, align 4, !dbg !12935
  %cmp = icmp slt i32 %0, 0, !dbg !12937
  br i1 %cmp, label %if.then, label %if.end, !dbg !12938

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.69, i64 0, i64 0)) #13, !dbg !12939
  %1 = load i32, i32* %ret, align 4, !dbg !12941
  store i32 %1, i32* %retval, align 4, !dbg !12942
  br label %return, !dbg !12942

if.end:                                           ; preds = %entry
  %call2 = call i32 @alloc_chrdev_region(i32* @gpio_devt, i32 0, i32 256, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.70, i64 0, i64 0)) #11, !dbg !12943
  store i32 %call2, i32* %ret, align 4, !dbg !12944
  %2 = load i32, i32* %ret, align 4, !dbg !12945
  %cmp3 = icmp slt i32 %2, 0, !dbg !12947
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !12948

if.then4:                                         ; preds = %if.end
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.71, i64 0, i64 0)) #13, !dbg !12949
  call void @bus_unregister(%struct.bus_type* @gpio_bus_type) #11, !dbg !12951
  %3 = load i32, i32* %ret, align 4, !dbg !12952
  store i32 %3, i32* %retval, align 4, !dbg !12953
  br label %return, !dbg !12953

if.end6:                                          ; preds = %if.end
  store i8 1, i8* @gpiolib_initialized, align 1, !dbg !12954
  call void @gpiochip_setup_devs() #11, !dbg !12955
  %4 = load i32, i32* %ret, align 4, !dbg !12956
  store i32 %4, i32* %retval, align 4, !dbg !12957
  br label %return, !dbg !12957

return:                                           ; preds = %if.end6, %if.then4, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !12958
  ret i32 %5, !dbg !12958
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !12959 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !12960, metadata !DIExpression()), !dbg !12962
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !12963, metadata !DIExpression()), !dbg !12962
  %0 = load i64, i64* %__edi, align 8, !dbg !12962
  store i64 %0, i64* %__edi, align 8, !dbg !12962
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !12964, metadata !DIExpression()), !dbg !12962
  %1 = load i64, i64* %__esi, align 8, !dbg !12962
  store i64 %1, i64* %__esi, align 8, !dbg !12962
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !12965, metadata !DIExpression()), !dbg !12962
  %2 = load i64, i64* %__edx, align 8, !dbg !12962
  store i64 %2, i64* %__edx, align 8, !dbg !12962
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !12966, metadata !DIExpression()), !dbg !12962
  %3 = load i64, i64* %__ecx, align 8, !dbg !12962
  store i64 %3, i64* %__ecx, align 8, !dbg !12962
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !12967, metadata !DIExpression()), !dbg !12962
  %4 = load i64, i64* %__eax, align 8, !dbg !12962
  store i64 %4, i64* %__eax, align 8, !dbg !12962
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !12962
  %6 = call i64 @llvm.read_register.i64(metadata !4619), !dbg !12968
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #7, !dbg !12968, !srcloc !12971
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !12968
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !12968
  store i64 %asmresult, i64* %__eax, align 8, !dbg !12968
  call void @llvm.write_register.i64(metadata !4619, i64 %asmresult1), !dbg !12968
  %8 = load i64, i64* %__eax, align 8, !dbg !12968
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !12972, metadata !DIExpression()), !dbg !12974
  store i64 -1, i64* %__mask, align 8, !dbg !12974
  %9 = load i64, i64* %__mask, align 8, !dbg !12974
  store i64 %9, i64* %tmp, align 8, !dbg !12974
  %10 = load i64, i64* %tmp, align 8, !dbg !12974
  %and = and i64 %8, %10, !dbg !12968
  store i64 %and, i64* %__ret, align 8, !dbg !12968
  %11 = load i64, i64* %__ret, align 8, !dbg !12962
  store i64 %11, i64* %tmp2, align 8, !dbg !12975
  %12 = load i64, i64* %tmp2, align 8, !dbg !12962
  ret i64 %12, !dbg !12976
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !12977 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !12978, metadata !DIExpression()), !dbg !12980
  %0 = load i64, i64* %__edi, align 8, !dbg !12980
  store i64 %0, i64* %__edi, align 8, !dbg !12980
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !12981, metadata !DIExpression()), !dbg !12980
  %1 = load i64, i64* %__esi, align 8, !dbg !12980
  store i64 %1, i64* %__esi, align 8, !dbg !12980
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !12982, metadata !DIExpression()), !dbg !12980
  %2 = load i64, i64* %__edx, align 8, !dbg !12980
  store i64 %2, i64* %__edx, align 8, !dbg !12980
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !12983, metadata !DIExpression()), !dbg !12980
  %3 = load i64, i64* %__ecx, align 8, !dbg !12980
  store i64 %3, i64* %__ecx, align 8, !dbg !12980
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !12984, metadata !DIExpression()), !dbg !12980
  %4 = load i64, i64* %__eax, align 8, !dbg !12980
  store i64 %4, i64* %__eax, align 8, !dbg !12980
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !12980
  %6 = call i64 @llvm.read_register.i64(metadata !4619), !dbg !12980
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #7, !dbg !12980, !srcloc !12985
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !12980
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !12980
  store i64 %asmresult, i64* %__eax, align 8, !dbg !12980
  call void @llvm.write_register.i64(metadata !4619, i64 %asmresult1), !dbg !12980
  ret void, !dbg !12986
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #6

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !12987 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !12990, metadata !DIExpression()), !dbg !12991
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !12992, metadata !DIExpression()), !dbg !12994
  %0 = load i64, i64* %__edi, align 8, !dbg !12994
  store i64 %0, i64* %__edi, align 8, !dbg !12994
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !12995, metadata !DIExpression()), !dbg !12994
  %1 = load i64, i64* %__esi, align 8, !dbg !12994
  store i64 %1, i64* %__esi, align 8, !dbg !12994
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !12996, metadata !DIExpression()), !dbg !12994
  %2 = load i64, i64* %__edx, align 8, !dbg !12994
  store i64 %2, i64* %__edx, align 8, !dbg !12994
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !12997, metadata !DIExpression()), !dbg !12994
  %3 = load i64, i64* %__ecx, align 8, !dbg !12994
  store i64 %3, i64* %__ecx, align 8, !dbg !12994
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !12998, metadata !DIExpression()), !dbg !12994
  %4 = load i64, i64* %__eax, align 8, !dbg !12994
  store i64 %4, i64* %__eax, align 8, !dbg !12994
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !12994
  %6 = call i64 @llvm.read_register.i64(metadata !4619), !dbg !12994
  %7 = load i64, i64* %f.addr, align 8, !dbg !12994
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #7, !dbg !12994, !srcloc !12999
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !12994
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !12994
  store i64 %asmresult, i64* %__eax, align 8, !dbg !12994
  call void @llvm.write_register.i64(metadata !4619, i64 %asmresult1), !dbg !12994
  ret void, !dbg !13000
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !13001 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !13005, metadata !DIExpression()), !dbg !13006
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !13007, metadata !DIExpression()), !dbg !13008
  ret i1 true, !dbg !13009
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !13010 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !13014, metadata !DIExpression()), !dbg !13015
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13016, metadata !DIExpression()), !dbg !13017
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !13018, metadata !DIExpression()), !dbg !13019
  ret void, !dbg !13020
}

; Function Attrs: noredzone
declare dso_local i32 @ida_alloc_range(%struct.ida*, i32, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !13021 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !13026, metadata !DIExpression()), !dbg !13027
  br label %do.body, !dbg !13028

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13030

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !13028
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !13028
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13028
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !13030
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !13028
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !13032
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !13033
  %conv = zext i1 %cmp to i32, !dbg !13033
  ret i32 %conv, !dbg !13034
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !13035 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !13036, metadata !DIExpression()), !dbg !13037
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !13038, metadata !DIExpression()), !dbg !13039
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13040
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !13041
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !13042
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !13043
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13043
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #11, !dbg !13044
  ret void, !dbg !13045
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !13046 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !13049, metadata !DIExpression()), !dbg !13050
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !13051, metadata !DIExpression()), !dbg !13052
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !13053, metadata !DIExpression()), !dbg !13054
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13055
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13057
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13058
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !13059
  br i1 %call, label %if.end, label %if.then, !dbg !13060

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !13061

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13062
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13063
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !13064
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !13065
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13066
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13067
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !13068
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !13069
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13070
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13071
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !13072
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !13073
  br label %do.body, !dbg !13074

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !13075

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !13077

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !13075

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13079
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13079
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !13079
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !13079
  br label %do.end7, !dbg !13079

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !13075

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !13081
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !13082 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !13085, metadata !DIExpression()), !dbg !13086
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !13087, metadata !DIExpression()), !dbg !13088
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !13089, metadata !DIExpression()), !dbg !13090
  ret i1 true, !dbg !13091
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.gpio_desc* @gpio_name_to_desc(i8* %name) #0 !dbg !13092 {
entry:
  %lock.addr.i48 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i48, metadata !4628, metadata !DIExpression()), !dbg !13095
  %flags.addr.i49 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i49, metadata !4636, metadata !DIExpression()), !dbg !13105
  %tmp.i50 = alloca i32, align 4
  %tmp8.i51 = alloca i32, align 4
  %lock.addr.i46 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i46, metadata !4628, metadata !DIExpression()), !dbg !13106
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4636, metadata !DIExpression()), !dbg !13108
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4646, metadata !DIExpression()), !dbg !13109
  %retval = alloca %struct.gpio_desc*, align 8
  %name.addr = alloca i8*, align 8
  %gdev = alloca %struct.gpio_device*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp21 = alloca %struct.gpio_device*, align 8
  %i = alloca i32, align 4
  %desc = alloca %struct.gpio_desc*, align 8
  %__mptr39 = alloca i8*, align 8
  %tmp43 = alloca %struct.gpio_device*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13116, metadata !DIExpression()), !dbg !13117
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %gdev, metadata !13118, metadata !DIExpression()), !dbg !13119
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13120, metadata !DIExpression()), !dbg !13121
  %0 = load i8*, i8** %name.addr, align 8, !dbg !13122
  %tobool = icmp ne i8* %0, null, !dbg !13122
  br i1 %tobool, label %if.end, label %if.then, !dbg !13124

if.then:                                          ; preds = %entry
  store %struct.gpio_desc* null, %struct.gpio_desc** %retval, align 8, !dbg !13125
  br label %return, !dbg !13125

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !13126

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !13127

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13128, metadata !DIExpression()), !dbg !13130
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13131, metadata !DIExpression()), !dbg !13130
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13130
  %conv = zext i1 %cmp to i32, !dbg !13130
  store i32 1, i32* %tmp, align 4, !dbg !13130
  %1 = load i32, i32* %tmp, align 4, !dbg !13130
  br label %do.body2, !dbg !13132

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !13133

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13134

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !13136, metadata !DIExpression()), !dbg !13139
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !13140, metadata !DIExpression()), !dbg !13139
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !13139
  %conv8 = zext i1 %cmp7 to i32, !dbg !13139
  store i32 1, i32* %tmp9, align 4, !dbg !13139
  %2 = load i32, i32* %tmp9, align 4, !dbg !13139
  %call = call i64 @arch_local_irq_save() #11, !dbg !13141
  store i64 %call, i64* %flags, align 8, !dbg !13141
  br label %do.end, !dbg !13141

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !13134

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !13133

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13142, !srcloc !13143
  br label %do.body12, !dbg !13142

do.body12:                                        ; preds = %do.body11
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13144
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13145
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !13145
  br label %do.end14, !dbg !13146

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !13142

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !13133

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13132

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13127

do.end18:                                         ; preds = %do.end17
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13147, metadata !DIExpression()), !dbg !13149
  %5 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @gpio_devices, i32 0, i32 0), align 8, !dbg !13149
  %6 = bitcast %struct.list_head* %5 to i8*, !dbg !13149
  store i8* %6, i8** %__mptr, align 8, !dbg !13149
  br label %do.body19, !dbg !13149

do.body19:                                        ; preds = %do.end18
  br label %do.end20, !dbg !13150

do.end20:                                         ; preds = %do.body19
  %7 = load i8*, i8** %__mptr, align 8, !dbg !13149
  %add.ptr = getelementptr i8, i8* %7, i64 -864, !dbg !13149
  %8 = bitcast i8* %add.ptr to %struct.gpio_device*, !dbg !13149
  store %struct.gpio_device* %8, %struct.gpio_device** %tmp21, align 8, !dbg !13150
  %9 = load %struct.gpio_device*, %struct.gpio_device** %tmp21, align 8, !dbg !13149
  store %struct.gpio_device* %9, %struct.gpio_device** %gdev, align 8, !dbg !13152
  br label %for.cond, !dbg !13152

for.cond:                                         ; preds = %do.end42, %do.end20
  %10 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !13153
  %list = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %10, i32 0, i32 11, !dbg !13153
  %cmp22 = icmp eq %struct.list_head* %list, @gpio_devices, !dbg !13153
  %lnot = xor i1 %cmp22, true, !dbg !13153
  br i1 %lnot, label %for.body, label %for.end45, !dbg !13152

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13154, metadata !DIExpression()), !dbg !13155
  store i32 0, i32* %i, align 4, !dbg !13156
  br label %for.cond24, !dbg !13157

for.cond24:                                       ; preds = %for.inc, %for.body
  %11 = load i32, i32* %i, align 4, !dbg !13158
  %12 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !13159
  %ngpio = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %12, i32 0, i32 8, !dbg !13160
  %13 = load i16, i16* %ngpio, align 4, !dbg !13160
  %conv25 = zext i16 %13 to i32, !dbg !13159
  %cmp26 = icmp ne i32 %11, %conv25, !dbg !13161
  br i1 %cmp26, label %for.body28, label %for.end, !dbg !13162

for.body28:                                       ; preds = %for.cond24
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc, metadata !13163, metadata !DIExpression()), !dbg !13164
  %14 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !13165
  %descs = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %14, i32 0, i32 6, !dbg !13166
  %15 = load %struct.gpio_desc*, %struct.gpio_desc** %descs, align 8, !dbg !13166
  %16 = load i32, i32* %i, align 4, !dbg !13167
  %idxprom = sext i32 %16 to i64, !dbg !13165
  %arrayidx = getelementptr %struct.gpio_desc, %struct.gpio_desc* %15, i64 %idxprom, !dbg !13165
  store %struct.gpio_desc* %arrayidx, %struct.gpio_desc** %desc, align 8, !dbg !13164
  %17 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !13168
  %name29 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %17, i32 0, i32 3, !dbg !13170
  %18 = load i8*, i8** %name29, align 8, !dbg !13170
  %tobool30 = icmp ne i8* %18, null, !dbg !13168
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !13171

if.then31:                                        ; preds = %for.body28
  br label %for.inc, !dbg !13172

if.end32:                                         ; preds = %for.body28
  %19 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !13173
  %name33 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %19, i32 0, i32 3, !dbg !13174
  %20 = load i8*, i8** %name33, align 8, !dbg !13174
  %21 = load i8*, i8** %name.addr, align 8, !dbg !13175
  %call34 = call i32 @strcmp(i8* %20, i8* %21) #11, !dbg !13176
  %tobool35 = icmp ne i32 %call34, 0, !dbg !13176
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !13177

if.then36:                                        ; preds = %if.end32
  %22 = load i64, i64* %flags, align 8, !dbg !13178
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i48, align 8
  store i64 %22, i64* %flags.addr.i49, align 8
  call void @llvm.dbg.declare(metadata !265, metadata !4706, metadata !DIExpression()) #7, !dbg !13179
  call void @llvm.dbg.declare(metadata !265, metadata !4710, metadata !DIExpression()) #7, !dbg !13179
  store i32 1, i32* %tmp.i50, align 4, !dbg !13179
  %23 = load i32, i32* %tmp.i50, align 4, !dbg !13179
  call void @llvm.dbg.declare(metadata !265, metadata !4711, metadata !DIExpression()) #7, !dbg !13180
  call void @llvm.dbg.declare(metadata !265, metadata !4717, metadata !DIExpression()) #7, !dbg !13180
  store i32 1, i32* %tmp8.i51, align 4, !dbg !13180
  %24 = load i32, i32* %tmp8.i51, align 4, !dbg !13180
  %25 = load i64, i64* %flags.addr.i49, align 8, !dbg !13181
  call void @arch_local_irq_restore(i64 %25) #12, !dbg !13181
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13182, !srcloc !4721
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i48, align 8, !dbg !13183
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !13183
  %rlock.i52 = bitcast %union.anon* %27 to %struct.raw_spinlock*, !dbg !13183
  %28 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !13184
  store %struct.gpio_desc* %28, %struct.gpio_desc** %retval, align 8, !dbg !13185
  br label %return, !dbg !13185

if.end37:                                         ; preds = %if.end32
  br label %for.inc, !dbg !13186

for.inc:                                          ; preds = %if.end37, %if.then31
  %29 = load i32, i32* %i, align 4, !dbg !13187
  %inc = add i32 %29, 1, !dbg !13187
  store i32 %inc, i32* %i, align 4, !dbg !13187
  br label %for.cond24, !dbg !13188, !llvm.loop !13189

for.end:                                          ; preds = %for.cond24
  br label %for.inc38, !dbg !13191

for.inc38:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i8** %__mptr39, metadata !13192, metadata !DIExpression()), !dbg !13194
  %30 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !13194
  %list40 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %30, i32 0, i32 11, !dbg !13194
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list40, i32 0, i32 0, !dbg !13194
  %31 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13194
  %32 = bitcast %struct.list_head* %31 to i8*, !dbg !13194
  store i8* %32, i8** %__mptr39, align 8, !dbg !13194
  br label %do.body41, !dbg !13194

do.body41:                                        ; preds = %for.inc38
  br label %do.end42, !dbg !13195

do.end42:                                         ; preds = %do.body41
  %33 = load i8*, i8** %__mptr39, align 8, !dbg !13194
  %add.ptr44 = getelementptr i8, i8* %33, i64 -864, !dbg !13194
  %34 = bitcast i8* %add.ptr44 to %struct.gpio_device*, !dbg !13194
  store %struct.gpio_device* %34, %struct.gpio_device** %tmp43, align 8, !dbg !13195
  %35 = load %struct.gpio_device*, %struct.gpio_device** %tmp43, align 8, !dbg !13194
  store %struct.gpio_device* %35, %struct.gpio_device** %gdev, align 8, !dbg !13153
  br label %for.cond, !dbg !13153, !llvm.loop !13197

for.end45:                                        ; preds = %for.cond
  %36 = load i64, i64* %flags, align 8, !dbg !13199
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i46, align 8
  store i64 %36, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !265, metadata !4706, metadata !DIExpression()) #7, !dbg !13200
  call void @llvm.dbg.declare(metadata !265, metadata !4710, metadata !DIExpression()) #7, !dbg !13200
  store i32 1, i32* %tmp.i, align 4, !dbg !13200
  %37 = load i32, i32* %tmp.i, align 4, !dbg !13200
  call void @llvm.dbg.declare(metadata !265, metadata !4711, metadata !DIExpression()) #7, !dbg !13201
  call void @llvm.dbg.declare(metadata !265, metadata !4717, metadata !DIExpression()) #7, !dbg !13201
  store i32 1, i32* %tmp8.i, align 4, !dbg !13201
  %38 = load i32, i32* %tmp8.i, align 4, !dbg !13201
  %39 = load i64, i64* %flags.addr.i, align 8, !dbg !13202
  call void @arch_local_irq_restore(i64 %39) #12, !dbg !13202
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13203, !srcloc !4721
  %40 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i46, align 8, !dbg !13204
  %41 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %40, i32 0, i32 0, !dbg !13204
  %rlock.i47 = bitcast %union.anon* %41 to %struct.raw_spinlock*, !dbg !13204
  store %struct.gpio_desc* null, %struct.gpio_desc** %retval, align 8, !dbg !13205
  br label %return, !dbg !13205

return:                                           ; preds = %for.end45, %if.then36, %if.then
  %42 = load %struct.gpio_desc*, %struct.gpio_desc** %retval, align 8, !dbg !13206
  ret %struct.gpio_desc* %42, !dbg !13206
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @device_property_string_array_count(%struct.device* %dev, i8* %propname) #0 !dbg !13207 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %propname.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13209, metadata !DIExpression()), !dbg !13210
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !13211, metadata !DIExpression()), !dbg !13212
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13213
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !13214
  %call = call i32 @device_property_read_string_array(%struct.device* %0, i8* %1, i8** null, i64 0) #11, !dbg !13215
  ret i32 %call, !dbg !13216
}

; Function Attrs: noredzone
declare dso_local i32 @device_property_read_string_array(%struct.device*, i8*, i8**, i64) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @of_gpio_need_valid_mask(%struct.gpio_chip*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64* @gpiochip_allocate_mask(%struct.gpio_chip* %gc) #0 !dbg !13217 {
entry:
  %retval = alloca i64*, align 8
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %p = alloca i64*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !13220, metadata !DIExpression()), !dbg !13221
  call void @llvm.dbg.declare(metadata i64** %p, metadata !13222, metadata !DIExpression()), !dbg !13223
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13224
  %ngpio = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 19, !dbg !13225
  %1 = load i16, i16* %ngpio, align 4, !dbg !13225
  %conv = zext i16 %1 to i32, !dbg !13224
  %call = call i64* @bitmap_alloc(i32 %conv, i32 3264) #11, !dbg !13226
  store i64* %call, i64** %p, align 8, !dbg !13227
  %2 = load i64*, i64** %p, align 8, !dbg !13228
  %tobool = icmp ne i64* %2, null, !dbg !13228
  br i1 %tobool, label %if.end, label %if.then, !dbg !13230

if.then:                                          ; preds = %entry
  store i64* null, i64** %retval, align 8, !dbg !13231
  br label %return, !dbg !13231

if.end:                                           ; preds = %entry
  %3 = load i64*, i64** %p, align 8, !dbg !13232
  %4 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13233
  %ngpio1 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %4, i32 0, i32 19, !dbg !13234
  %5 = load i16, i16* %ngpio1, align 4, !dbg !13234
  %conv2 = zext i16 %5 to i32, !dbg !13233
  call void @bitmap_fill(i64* %3, i32 %conv2) #11, !dbg !13235
  %6 = load i64*, i64** %p, align 8, !dbg !13236
  store i64* %6, i64** %retval, align 8, !dbg !13237
  br label %return, !dbg !13237

return:                                           ; preds = %if.end, %if.then
  %7 = load i64*, i64** %retval, align 8, !dbg !13238
  ret i64* %7, !dbg !13238
}

; Function Attrs: noredzone
declare dso_local i64* @bitmap_alloc(i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bitmap_fill(i64* %dst, i32 %nbits) #0 !dbg !13239 {
entry:
  %dst.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  %len = alloca i32, align 4
  store i64* %dst, i64** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.addr, metadata !13240, metadata !DIExpression()), !dbg !13241
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !13242, metadata !DIExpression()), !dbg !13243
  call void @llvm.dbg.declare(metadata i32* %len, metadata !13244, metadata !DIExpression()), !dbg !13245
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !13246
  %conv = zext i32 %0 to i64, !dbg !13246
  %add = add i64 %conv, 64, !dbg !13246
  %sub = sub i64 %add, 1, !dbg !13246
  %div = udiv i64 %sub, 64, !dbg !13246
  %mul = mul i64 %div, 8, !dbg !13247
  %conv1 = trunc i64 %mul to i32, !dbg !13246
  store i32 %conv1, i32* %len, align 4, !dbg !13245
  %1 = load i64*, i64** %dst.addr, align 8, !dbg !13248
  %2 = bitcast i64* %1 to i8*, !dbg !13249
  %3 = load i32, i32* %len, align 4, !dbg !13250
  %conv2 = zext i32 %3 to i64, !dbg !13250
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 -1, i64 %conv2, i1 false), !dbg !13249
  ret void, !dbg !13251
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noredzone
declare dso_local i32 @gpiolib_cdev_register(%struct.gpio_device*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpiochip_sysfs_register(%struct.gpio_device* %gdev) #0 !dbg !13252 {
entry:
  %gdev.addr = alloca %struct.gpio_device*, align 8
  store %struct.gpio_device* %gdev, %struct.gpio_device** %gdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %gdev.addr, metadata !13253, metadata !DIExpression()), !dbg !13254
  ret i32 0, !dbg !13255
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpiodevice_release(%struct.device* %dev) #0 !dbg !13256 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %gdev = alloca %struct.gpio_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13257, metadata !DIExpression()), !dbg !13258
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %gdev, metadata !13259, metadata !DIExpression()), !dbg !13260
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13261
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #11, !dbg !13262
  %1 = bitcast i8* %call to %struct.gpio_device*, !dbg !13262
  store %struct.gpio_device* %1, %struct.gpio_device** %gdev, align 8, !dbg !13260
  %2 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !13263
  %list = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %2, i32 0, i32 11, !dbg !13264
  call void @list_del(%struct.list_head* %list) #11, !dbg !13265
  %3 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !13266
  %id = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %3, i32 0, i32 0, !dbg !13267
  %4 = load i32, i32* %id, align 8, !dbg !13267
  call void @ida_free(%struct.ida* @gpio_ida, i32 %4) #11, !dbg !13268
  %5 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !13269
  %label = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %5, i32 0, i32 9, !dbg !13270
  %6 = load i8*, i8** %label, align 8, !dbg !13270
  call void @kfree_const(i8* %6) #11, !dbg !13271
  %7 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !13272
  %descs = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %7, i32 0, i32 6, !dbg !13273
  %8 = load %struct.gpio_desc*, %struct.gpio_desc** %descs, align 8, !dbg !13273
  %9 = bitcast %struct.gpio_desc* %8 to i8*, !dbg !13272
  call void @kfree(i8* %9) #11, !dbg !13274
  %10 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !13275
  %11 = bitcast %struct.gpio_device* %10 to i8*, !dbg !13275
  call void @kfree(i8* %11) #11, !dbg !13276
  ret void, !dbg !13277
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #0 !dbg !13278 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13281, metadata !DIExpression()), !dbg !13282
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13283
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !13284
  %1 = load i8*, i8** %driver_data, align 8, !dbg !13284
  ret i8* %1, !dbg !13285
}

; Function Attrs: noredzone
declare dso_local void @bitmap_free(i64*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !13286 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !13287, metadata !DIExpression()), !dbg !13288
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13289
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #11, !dbg !13291
  br i1 %call, label %if.end, label %if.then, !dbg !13292

if.then:                                          ; preds = %entry
  br label %return, !dbg !13293

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13294
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !13295
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !13295
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13296
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !13297
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13297
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #11, !dbg !13298
  br label %return, !dbg !13299

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13299
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !13300 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !13303, metadata !DIExpression()), !dbg !13304
  ret i1 true, !dbg !13305
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !13306 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !13307, metadata !DIExpression()), !dbg !13308
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !13309, metadata !DIExpression()), !dbg !13310
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13311
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13312
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !13313
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !13314
  br label %do.body, !dbg !13315

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !13316

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !13318

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !13316

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13320
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13320
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !13320
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !13320
  br label %do.end5, !dbg !13320

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !13316

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !13322
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kcalloc(%struct.device* %dev, i64 %n, i64 %size, i32 %flags) #0 !dbg !13323 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13326, metadata !DIExpression()), !dbg !13327
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !13328, metadata !DIExpression()), !dbg !13329
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13330, metadata !DIExpression()), !dbg !13331
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13332, metadata !DIExpression()), !dbg !13333
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13334
  %1 = load i64, i64* %n.addr, align 8, !dbg !13335
  %2 = load i64, i64* %size.addr, align 8, !dbg !13336
  %3 = load i32, i32* %flags.addr, align 4, !dbg !13337
  %or = or i32 %3, 256, !dbg !13338
  %call = call i8* @devm_kmalloc_array(%struct.device* %0, i64 %1, i64 %2, i32 %or) #11, !dbg !13339
  ret i8* %call, !dbg !13340
}

; Function Attrs: noredzone
declare dso_local void @irq_set_chained_handler_and_data(i32, void (%struct.irq_desc*)*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kmalloc_array(%struct.device* %dev, i64 %n, i64 %size, i32 %flags) #0 !dbg !13341 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13342, metadata !DIExpression()), !dbg !13343
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !13344, metadata !DIExpression()), !dbg !13345
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13346, metadata !DIExpression()), !dbg !13347
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13348, metadata !DIExpression()), !dbg !13349
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !13350, metadata !DIExpression()), !dbg !13351
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !13352, metadata !DIExpression()), !dbg !13355
  %0 = load i64, i64* %n.addr, align 8, !dbg !13355
  store i64 %0, i64* %__a, align 8, !dbg !13355
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !13356, metadata !DIExpression()), !dbg !13355
  %1 = load i64, i64* %size.addr, align 8, !dbg !13355
  store i64 %1, i64* %__b, align 8, !dbg !13355
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !13357, metadata !DIExpression()), !dbg !13355
  store i64* %bytes, i64** %__d, align 8, !dbg !13355
  %cmp = icmp eq i64* %__a, %__b, !dbg !13355
  %conv = zext i1 %cmp to i32, !dbg !13355
  %2 = load i64*, i64** %__d, align 8, !dbg !13355
  %cmp1 = icmp eq i64* %__a, %2, !dbg !13355
  %conv2 = zext i1 %cmp1 to i32, !dbg !13355
  %3 = load i64, i64* %__a, align 8, !dbg !13355
  %4 = load i64, i64* %__b, align 8, !dbg !13355
  %5 = load i64*, i64** %__d, align 8, !dbg !13355
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !13355
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !13355
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !13355
  store i64 %8, i64* %5, align 8, !dbg !13355
  %frombool = zext i1 %7 to i8, !dbg !13355
  store i8 %frombool, i8* %tmp, align 1, !dbg !13355
  %9 = load i8, i8* %tmp, align 1, !dbg !13355
  %tobool = trunc i8 %9 to i1, !dbg !13355
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !13358
  %lnot = xor i1 %call, true, !dbg !13358
  %lnot3 = xor i1 %lnot, true, !dbg !13358
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !13358
  %conv4 = sext i32 %lnot.ext to i64, !dbg !13358
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !13358
  br i1 %tobool5, label %if.then, label %if.end, !dbg !13359

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !13360
  br label %return, !dbg !13360

if.end:                                           ; preds = %entry
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13361
  %11 = load i64, i64* %bytes, align 8, !dbg !13362
  %12 = load i32, i32* %flags.addr, align 4, !dbg !13363
  %call6 = call noalias i8* @devm_kmalloc(%struct.device* %10, i64 %11, i32 %12) #11, !dbg !13364
  store i8* %call6, i8** %retval, align 8, !dbg !13365
  br label %return, !dbg !13365

return:                                           ; preds = %if.end, %if.then
  %13 = load i8*, i8** %retval, align 8, !dbg !13366
  ret i8* %13, !dbg !13366
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !13367 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !13370, metadata !DIExpression()), !dbg !13371
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !13372
  %tobool = trunc i8 %0 to i1, !dbg !13372
  %lnot = xor i1 %tobool, true, !dbg !13372
  %lnot1 = xor i1 %lnot, true, !dbg !13372
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !13372
  %conv = sext i32 %lnot.ext to i64, !dbg !13372
  %tobool2 = icmp ne i64 %conv, 0, !dbg !13372
  ret i1 %tobool2, !dbg !13373
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @devm_kmalloc(%struct.device*, i64, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #9

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #10 !dbg !13374 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !13378, metadata !DIExpression()), !dbg !13382
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !13384, metadata !DIExpression()), !dbg !13385
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13386, metadata !DIExpression()), !dbg !13387
  %0 = load i64, i64* %size.addr, align 8, !dbg !13388
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !13390
  br i1 %1, label %if.then, label %if.end447, !dbg !13391

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !13392
  %tobool = icmp ne i64 %2, 0, !dbg !13392
  br i1 %tobool, label %if.end, label %if.then1, !dbg !13395

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !13396
  br label %return, !dbg !13396

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !13397
  %cmp = icmp ult i64 %3, 4096, !dbg !13399
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !13400

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !13401
  br label %return, !dbg !13401

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub = sub i64 %4, 1, !dbg !13402
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !13402
  br i1 %5, label %cond.true, label %cond.false442, !dbg !13402

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub4 = sub i64 %6, 1, !dbg !13402
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !13402
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !13402

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub6 = sub i64 %8, 1, !dbg !13402
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !13402
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !13402

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !13402

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub9 = sub i64 %9, 1, !dbg !13402
  %and = and i64 %sub9, -9223372036854775808, !dbg !13402
  %tobool10 = icmp ne i64 %and, 0, !dbg !13402
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !13402

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !13402

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub13 = sub i64 %10, 1, !dbg !13402
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !13402
  %tobool15 = icmp ne i64 %and14, 0, !dbg !13402
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !13402

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !13402

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub18 = sub i64 %11, 1, !dbg !13402
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !13402
  %tobool20 = icmp ne i64 %and19, 0, !dbg !13402
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !13402

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !13402

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub23 = sub i64 %12, 1, !dbg !13402
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !13402
  %tobool25 = icmp ne i64 %and24, 0, !dbg !13402
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !13402

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !13402

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub28 = sub i64 %13, 1, !dbg !13402
  %and29 = and i64 %sub28, 576460752303423488, !dbg !13402
  %tobool30 = icmp ne i64 %and29, 0, !dbg !13402
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !13402

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !13402

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub33 = sub i64 %14, 1, !dbg !13402
  %and34 = and i64 %sub33, 288230376151711744, !dbg !13402
  %tobool35 = icmp ne i64 %and34, 0, !dbg !13402
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !13402

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !13402

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub38 = sub i64 %15, 1, !dbg !13402
  %and39 = and i64 %sub38, 144115188075855872, !dbg !13402
  %tobool40 = icmp ne i64 %and39, 0, !dbg !13402
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !13402

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !13402

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub43 = sub i64 %16, 1, !dbg !13402
  %and44 = and i64 %sub43, 72057594037927936, !dbg !13402
  %tobool45 = icmp ne i64 %and44, 0, !dbg !13402
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !13402

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !13402

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub48 = sub i64 %17, 1, !dbg !13402
  %and49 = and i64 %sub48, 36028797018963968, !dbg !13402
  %tobool50 = icmp ne i64 %and49, 0, !dbg !13402
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !13402

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !13402

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub53 = sub i64 %18, 1, !dbg !13402
  %and54 = and i64 %sub53, 18014398509481984, !dbg !13402
  %tobool55 = icmp ne i64 %and54, 0, !dbg !13402
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !13402

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !13402

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub58 = sub i64 %19, 1, !dbg !13402
  %and59 = and i64 %sub58, 9007199254740992, !dbg !13402
  %tobool60 = icmp ne i64 %and59, 0, !dbg !13402
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !13402

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !13402

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub63 = sub i64 %20, 1, !dbg !13402
  %and64 = and i64 %sub63, 4503599627370496, !dbg !13402
  %tobool65 = icmp ne i64 %and64, 0, !dbg !13402
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !13402

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !13402

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub68 = sub i64 %21, 1, !dbg !13402
  %and69 = and i64 %sub68, 2251799813685248, !dbg !13402
  %tobool70 = icmp ne i64 %and69, 0, !dbg !13402
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !13402

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !13402

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub73 = sub i64 %22, 1, !dbg !13402
  %and74 = and i64 %sub73, 1125899906842624, !dbg !13402
  %tobool75 = icmp ne i64 %and74, 0, !dbg !13402
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !13402

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !13402

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub78 = sub i64 %23, 1, !dbg !13402
  %and79 = and i64 %sub78, 562949953421312, !dbg !13402
  %tobool80 = icmp ne i64 %and79, 0, !dbg !13402
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !13402

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !13402

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub83 = sub i64 %24, 1, !dbg !13402
  %and84 = and i64 %sub83, 281474976710656, !dbg !13402
  %tobool85 = icmp ne i64 %and84, 0, !dbg !13402
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !13402

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !13402

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub88 = sub i64 %25, 1, !dbg !13402
  %and89 = and i64 %sub88, 140737488355328, !dbg !13402
  %tobool90 = icmp ne i64 %and89, 0, !dbg !13402
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !13402

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !13402

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub93 = sub i64 %26, 1, !dbg !13402
  %and94 = and i64 %sub93, 70368744177664, !dbg !13402
  %tobool95 = icmp ne i64 %and94, 0, !dbg !13402
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !13402

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !13402

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub98 = sub i64 %27, 1, !dbg !13402
  %and99 = and i64 %sub98, 35184372088832, !dbg !13402
  %tobool100 = icmp ne i64 %and99, 0, !dbg !13402
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !13402

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !13402

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub103 = sub i64 %28, 1, !dbg !13402
  %and104 = and i64 %sub103, 17592186044416, !dbg !13402
  %tobool105 = icmp ne i64 %and104, 0, !dbg !13402
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !13402

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !13402

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub108 = sub i64 %29, 1, !dbg !13402
  %and109 = and i64 %sub108, 8796093022208, !dbg !13402
  %tobool110 = icmp ne i64 %and109, 0, !dbg !13402
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !13402

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !13402

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub113 = sub i64 %30, 1, !dbg !13402
  %and114 = and i64 %sub113, 4398046511104, !dbg !13402
  %tobool115 = icmp ne i64 %and114, 0, !dbg !13402
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !13402

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !13402

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub118 = sub i64 %31, 1, !dbg !13402
  %and119 = and i64 %sub118, 2199023255552, !dbg !13402
  %tobool120 = icmp ne i64 %and119, 0, !dbg !13402
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !13402

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !13402

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub123 = sub i64 %32, 1, !dbg !13402
  %and124 = and i64 %sub123, 1099511627776, !dbg !13402
  %tobool125 = icmp ne i64 %and124, 0, !dbg !13402
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !13402

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !13402

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub128 = sub i64 %33, 1, !dbg !13402
  %and129 = and i64 %sub128, 549755813888, !dbg !13402
  %tobool130 = icmp ne i64 %and129, 0, !dbg !13402
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !13402

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !13402

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub133 = sub i64 %34, 1, !dbg !13402
  %and134 = and i64 %sub133, 274877906944, !dbg !13402
  %tobool135 = icmp ne i64 %and134, 0, !dbg !13402
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !13402

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !13402

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub138 = sub i64 %35, 1, !dbg !13402
  %and139 = and i64 %sub138, 137438953472, !dbg !13402
  %tobool140 = icmp ne i64 %and139, 0, !dbg !13402
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !13402

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !13402

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub143 = sub i64 %36, 1, !dbg !13402
  %and144 = and i64 %sub143, 68719476736, !dbg !13402
  %tobool145 = icmp ne i64 %and144, 0, !dbg !13402
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !13402

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !13402

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub148 = sub i64 %37, 1, !dbg !13402
  %and149 = and i64 %sub148, 34359738368, !dbg !13402
  %tobool150 = icmp ne i64 %and149, 0, !dbg !13402
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !13402

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !13402

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub153 = sub i64 %38, 1, !dbg !13402
  %and154 = and i64 %sub153, 17179869184, !dbg !13402
  %tobool155 = icmp ne i64 %and154, 0, !dbg !13402
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !13402

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !13402

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub158 = sub i64 %39, 1, !dbg !13402
  %and159 = and i64 %sub158, 8589934592, !dbg !13402
  %tobool160 = icmp ne i64 %and159, 0, !dbg !13402
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !13402

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !13402

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub163 = sub i64 %40, 1, !dbg !13402
  %and164 = and i64 %sub163, 4294967296, !dbg !13402
  %tobool165 = icmp ne i64 %and164, 0, !dbg !13402
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !13402

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !13402

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub168 = sub i64 %41, 1, !dbg !13402
  %and169 = and i64 %sub168, 2147483648, !dbg !13402
  %tobool170 = icmp ne i64 %and169, 0, !dbg !13402
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !13402

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !13402

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub173 = sub i64 %42, 1, !dbg !13402
  %and174 = and i64 %sub173, 1073741824, !dbg !13402
  %tobool175 = icmp ne i64 %and174, 0, !dbg !13402
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !13402

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !13402

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub178 = sub i64 %43, 1, !dbg !13402
  %and179 = and i64 %sub178, 536870912, !dbg !13402
  %tobool180 = icmp ne i64 %and179, 0, !dbg !13402
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !13402

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !13402

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub183 = sub i64 %44, 1, !dbg !13402
  %and184 = and i64 %sub183, 268435456, !dbg !13402
  %tobool185 = icmp ne i64 %and184, 0, !dbg !13402
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !13402

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !13402

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub188 = sub i64 %45, 1, !dbg !13402
  %and189 = and i64 %sub188, 134217728, !dbg !13402
  %tobool190 = icmp ne i64 %and189, 0, !dbg !13402
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !13402

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !13402

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub193 = sub i64 %46, 1, !dbg !13402
  %and194 = and i64 %sub193, 67108864, !dbg !13402
  %tobool195 = icmp ne i64 %and194, 0, !dbg !13402
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !13402

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !13402

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub198 = sub i64 %47, 1, !dbg !13402
  %and199 = and i64 %sub198, 33554432, !dbg !13402
  %tobool200 = icmp ne i64 %and199, 0, !dbg !13402
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !13402

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !13402

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub203 = sub i64 %48, 1, !dbg !13402
  %and204 = and i64 %sub203, 16777216, !dbg !13402
  %tobool205 = icmp ne i64 %and204, 0, !dbg !13402
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !13402

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !13402

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub208 = sub i64 %49, 1, !dbg !13402
  %and209 = and i64 %sub208, 8388608, !dbg !13402
  %tobool210 = icmp ne i64 %and209, 0, !dbg !13402
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !13402

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !13402

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub213 = sub i64 %50, 1, !dbg !13402
  %and214 = and i64 %sub213, 4194304, !dbg !13402
  %tobool215 = icmp ne i64 %and214, 0, !dbg !13402
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !13402

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !13402

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub218 = sub i64 %51, 1, !dbg !13402
  %and219 = and i64 %sub218, 2097152, !dbg !13402
  %tobool220 = icmp ne i64 %and219, 0, !dbg !13402
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !13402

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !13402

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub223 = sub i64 %52, 1, !dbg !13402
  %and224 = and i64 %sub223, 1048576, !dbg !13402
  %tobool225 = icmp ne i64 %and224, 0, !dbg !13402
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !13402

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !13402

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub228 = sub i64 %53, 1, !dbg !13402
  %and229 = and i64 %sub228, 524288, !dbg !13402
  %tobool230 = icmp ne i64 %and229, 0, !dbg !13402
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !13402

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !13402

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub233 = sub i64 %54, 1, !dbg !13402
  %and234 = and i64 %sub233, 262144, !dbg !13402
  %tobool235 = icmp ne i64 %and234, 0, !dbg !13402
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !13402

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !13402

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub238 = sub i64 %55, 1, !dbg !13402
  %and239 = and i64 %sub238, 131072, !dbg !13402
  %tobool240 = icmp ne i64 %and239, 0, !dbg !13402
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !13402

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !13402

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub243 = sub i64 %56, 1, !dbg !13402
  %and244 = and i64 %sub243, 65536, !dbg !13402
  %tobool245 = icmp ne i64 %and244, 0, !dbg !13402
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !13402

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !13402

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub248 = sub i64 %57, 1, !dbg !13402
  %and249 = and i64 %sub248, 32768, !dbg !13402
  %tobool250 = icmp ne i64 %and249, 0, !dbg !13402
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !13402

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !13402

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub253 = sub i64 %58, 1, !dbg !13402
  %and254 = and i64 %sub253, 16384, !dbg !13402
  %tobool255 = icmp ne i64 %and254, 0, !dbg !13402
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !13402

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !13402

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub258 = sub i64 %59, 1, !dbg !13402
  %and259 = and i64 %sub258, 8192, !dbg !13402
  %tobool260 = icmp ne i64 %and259, 0, !dbg !13402
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !13402

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !13402

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub263 = sub i64 %60, 1, !dbg !13402
  %and264 = and i64 %sub263, 4096, !dbg !13402
  %tobool265 = icmp ne i64 %and264, 0, !dbg !13402
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !13402

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !13402

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub268 = sub i64 %61, 1, !dbg !13402
  %and269 = and i64 %sub268, 2048, !dbg !13402
  %tobool270 = icmp ne i64 %and269, 0, !dbg !13402
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !13402

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !13402

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub273 = sub i64 %62, 1, !dbg !13402
  %and274 = and i64 %sub273, 1024, !dbg !13402
  %tobool275 = icmp ne i64 %and274, 0, !dbg !13402
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !13402

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !13402

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub278 = sub i64 %63, 1, !dbg !13402
  %and279 = and i64 %sub278, 512, !dbg !13402
  %tobool280 = icmp ne i64 %and279, 0, !dbg !13402
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !13402

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !13402

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub283 = sub i64 %64, 1, !dbg !13402
  %and284 = and i64 %sub283, 256, !dbg !13402
  %tobool285 = icmp ne i64 %and284, 0, !dbg !13402
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !13402

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !13402

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub288 = sub i64 %65, 1, !dbg !13402
  %and289 = and i64 %sub288, 128, !dbg !13402
  %tobool290 = icmp ne i64 %and289, 0, !dbg !13402
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !13402

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !13402

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub293 = sub i64 %66, 1, !dbg !13402
  %and294 = and i64 %sub293, 64, !dbg !13402
  %tobool295 = icmp ne i64 %and294, 0, !dbg !13402
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !13402

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !13402

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub298 = sub i64 %67, 1, !dbg !13402
  %and299 = and i64 %sub298, 32, !dbg !13402
  %tobool300 = icmp ne i64 %and299, 0, !dbg !13402
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !13402

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !13402

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub303 = sub i64 %68, 1, !dbg !13402
  %and304 = and i64 %sub303, 16, !dbg !13402
  %tobool305 = icmp ne i64 %and304, 0, !dbg !13402
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !13402

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !13402

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub308 = sub i64 %69, 1, !dbg !13402
  %and309 = and i64 %sub308, 8, !dbg !13402
  %tobool310 = icmp ne i64 %and309, 0, !dbg !13402
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !13402

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !13402

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub313 = sub i64 %70, 1, !dbg !13402
  %and314 = and i64 %sub313, 4, !dbg !13402
  %tobool315 = icmp ne i64 %and314, 0, !dbg !13402
  %71 = zext i1 %tobool315 to i64, !dbg !13402
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !13402
  br label %cond.end, !dbg !13402

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !13402
  br label %cond.end317, !dbg !13402

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !13402
  br label %cond.end319, !dbg !13402

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !13402
  br label %cond.end321, !dbg !13402

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !13402
  br label %cond.end323, !dbg !13402

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !13402
  br label %cond.end325, !dbg !13402

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !13402
  br label %cond.end327, !dbg !13402

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !13402
  br label %cond.end329, !dbg !13402

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !13402
  br label %cond.end331, !dbg !13402

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !13402
  br label %cond.end333, !dbg !13402

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !13402
  br label %cond.end335, !dbg !13402

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !13402
  br label %cond.end337, !dbg !13402

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !13402
  br label %cond.end339, !dbg !13402

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !13402
  br label %cond.end341, !dbg !13402

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !13402
  br label %cond.end343, !dbg !13402

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !13402
  br label %cond.end345, !dbg !13402

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !13402
  br label %cond.end347, !dbg !13402

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !13402
  br label %cond.end349, !dbg !13402

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !13402
  br label %cond.end351, !dbg !13402

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !13402
  br label %cond.end353, !dbg !13402

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !13402
  br label %cond.end355, !dbg !13402

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !13402
  br label %cond.end357, !dbg !13402

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !13402
  br label %cond.end359, !dbg !13402

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !13402
  br label %cond.end361, !dbg !13402

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !13402
  br label %cond.end363, !dbg !13402

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !13402
  br label %cond.end365, !dbg !13402

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !13402
  br label %cond.end367, !dbg !13402

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !13402
  br label %cond.end369, !dbg !13402

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !13402
  br label %cond.end371, !dbg !13402

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !13402
  br label %cond.end373, !dbg !13402

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !13402
  br label %cond.end375, !dbg !13402

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !13402
  br label %cond.end377, !dbg !13402

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !13402
  br label %cond.end379, !dbg !13402

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !13402
  br label %cond.end381, !dbg !13402

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !13402
  br label %cond.end383, !dbg !13402

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !13402
  br label %cond.end385, !dbg !13402

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !13402
  br label %cond.end387, !dbg !13402

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !13402
  br label %cond.end389, !dbg !13402

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !13402
  br label %cond.end391, !dbg !13402

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !13402
  br label %cond.end393, !dbg !13402

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !13402
  br label %cond.end395, !dbg !13402

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !13402
  br label %cond.end397, !dbg !13402

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !13402
  br label %cond.end399, !dbg !13402

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !13402
  br label %cond.end401, !dbg !13402

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !13402
  br label %cond.end403, !dbg !13402

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !13402
  br label %cond.end405, !dbg !13402

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !13402
  br label %cond.end407, !dbg !13402

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !13402
  br label %cond.end409, !dbg !13402

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !13402
  br label %cond.end411, !dbg !13402

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !13402
  br label %cond.end413, !dbg !13402

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !13402
  br label %cond.end415, !dbg !13402

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !13402
  br label %cond.end417, !dbg !13402

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !13402
  br label %cond.end419, !dbg !13402

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !13402
  br label %cond.end421, !dbg !13402

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !13402
  br label %cond.end423, !dbg !13402

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !13402
  br label %cond.end425, !dbg !13402

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !13402
  br label %cond.end427, !dbg !13402

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !13402
  br label %cond.end429, !dbg !13402

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !13402
  br label %cond.end431, !dbg !13402

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !13402
  br label %cond.end433, !dbg !13402

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !13402
  br label %cond.end435, !dbg !13402

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !13402
  br label %cond.end437, !dbg !13402

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !13402
  br label %cond.end440, !dbg !13402

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !13402

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !13402
  br label %cond.end444, !dbg !13402

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !13402
  %sub443 = sub i64 %72, 1, !dbg !13402
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !13402
  br label %cond.end444, !dbg !13402

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !13402
  %sub446 = sub i32 %cond445, 12, !dbg !13403
  %add = add i32 %sub446, 1, !dbg !13404
  store i32 %add, i32* %retval, align 4, !dbg !13405
  br label %return, !dbg !13405

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !13406
  %dec = add i64 %73, -1, !dbg !13406
  store i64 %dec, i64* %size.addr, align 8, !dbg !13406
  %74 = load i64, i64* %size.addr, align 8, !dbg !13407
  %shr = lshr i64 %74, 12, !dbg !13407
  store i64 %shr, i64* %size.addr, align 8, !dbg !13407
  %75 = load i64, i64* %size.addr, align 8, !dbg !13408
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !13385
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !13409
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !13410
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #6, !dbg !13409, !srcloc !13411
  store i32 %78, i32* %bitpos.i, align 4, !dbg !13409
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !13412
  %add.i = add i32 %79, 1, !dbg !13413
  store i32 %add.i, i32* %retval, align 4, !dbg !13414
  br label %return, !dbg !13414

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !13415
  ret i32 %80, !dbg !13415
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #10 !dbg !13416 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !13378, metadata !DIExpression()), !dbg !13420
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !13384, metadata !DIExpression()), !dbg !13422
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !13423, metadata !DIExpression()), !dbg !13424
  %0 = load i64, i64* %n.addr, align 8, !dbg !13425
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !13422
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !13426
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !13427
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #6, !dbg !13426, !srcloc !13411
  store i32 %3, i32* %bitpos.i, align 4, !dbg !13426
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !13428
  %add.i = add i32 %4, 1, !dbg !13429
  %sub = sub i32 %add.i, 1, !dbg !13430
  ret i32 %sub, !dbg !13431
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !13432 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !13436, metadata !DIExpression()), !dbg !13437
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !13438, metadata !DIExpression()), !dbg !13439
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13440, metadata !DIExpression()), !dbg !13441
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13442, metadata !DIExpression()), !dbg !13443
  %0 = load i8*, i8** %object.addr, align 8, !dbg !13444
  ret i8* %0, !dbg !13445
}

; Function Attrs: noredzone
declare dso_local %struct.irq_desc* @irq_to_desc(i32) #2

; Function Attrs: noredzone
declare dso_local void @irq_set_chip_and_handler_name(i32, %struct.irq_chip*, void (%struct.irq_desc*)*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @irq_set_status_flags(i32 %irq, i64 %set) #0 !dbg !13446 {
entry:
  %irq.addr = alloca i32, align 4
  %set.addr = alloca i64, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !13449, metadata !DIExpression()), !dbg !13450
  store i64 %set, i64* %set.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %set.addr, metadata !13451, metadata !DIExpression()), !dbg !13452
  %0 = load i32, i32* %irq.addr, align 4, !dbg !13453
  %1 = load i64, i64* %set.addr, align 8, !dbg !13454
  call void @irq_modify_status(i32 %0, i64 0, i64 %1) #11, !dbg !13455
  ret void, !dbg !13456
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @irq_clear_status_flags(i32 %irq, i64 %clr) #0 !dbg !13457 {
entry:
  %irq.addr = alloca i32, align 4
  %clr.addr = alloca i64, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !13458, metadata !DIExpression()), !dbg !13459
  store i64 %clr, i64* %clr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %clr.addr, metadata !13460, metadata !DIExpression()), !dbg !13461
  %0 = load i32, i32* %irq.addr, align 4, !dbg !13462
  %1 = load i64, i64* %clr.addr, align 8, !dbg !13463
  call void @irq_modify_status(i32 %0, i64 %1, i64 0) #11, !dbg !13464
  ret void, !dbg !13465
}

; Function Attrs: noredzone
declare dso_local void @irq_modify_status(i32, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @gpiochip_hierarchy_is_hierarchical(%struct.gpio_chip* %gc) #0 !dbg !13466 {
entry:
  %gc.addr = alloca %struct.gpio_chip*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !13469, metadata !DIExpression()), !dbg !13470
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13471
  %irq = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 35, !dbg !13472
  %parent_domain = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq, i32 0, i32 4, !dbg !13473
  %1 = load %struct.irq_domain*, %struct.irq_domain** %parent_domain, align 8, !dbg !13473
  %tobool = icmp ne %struct.irq_domain* %1, null, !dbg !13474
  %lnot = xor i1 %tobool, true, !dbg !13474
  %lnot1 = xor i1 %lnot, true, !dbg !13475
  ret i1 %lnot1, !dbg !13476
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpiochip_hierarchy_add_domain(%struct.gpio_chip* %gc) #0 !dbg !13477 {
entry:
  %retval = alloca i32, align 4
  %gc.addr = alloca %struct.gpio_chip*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !13478, metadata !DIExpression()), !dbg !13479
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13480
  %irq = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 35, !dbg !13482
  %child_to_parent_hwirq = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq, i32 0, i32 5, !dbg !13483
  %1 = load i32 (%struct.gpio_chip*, i32, i32, i32*, i32*)*, i32 (%struct.gpio_chip*, i32, i32, i32*, i32*)** %child_to_parent_hwirq, align 8, !dbg !13483
  %tobool = icmp ne i32 (%struct.gpio_chip*, i32, i32, i32*, i32*)* %1, null, !dbg !13480
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13484

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13485
  %irq1 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %2, i32 0, i32 35, !dbg !13486
  %fwnode = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq1, i32 0, i32 3, !dbg !13487
  %3 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !13487
  %tobool2 = icmp ne %struct.fwnode_handle* %3, null, !dbg !13485
  br i1 %tobool2, label %if.end, label %if.then, !dbg !13488

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13489
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %4, i32 0, i32 1, !dbg !13489
  %5 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !13489
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %5, i32 0, i32 1, !dbg !13489
  %6 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13489
  %label = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %6, i32 0, i32 0, !dbg !13489
  %7 = load i8*, i8** %label, align 8, !dbg !13489
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.49, i64 0, i64 0), i8* %7) #13, !dbg !13489
  store i32 -22, i32* %retval, align 4, !dbg !13491
  br label %return, !dbg !13491

if.end:                                           ; preds = %lor.lhs.false
  %8 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13492
  %irq3 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %8, i32 0, i32 35, !dbg !13494
  %child_offset_to_irq = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq3, i32 0, i32 7, !dbg !13495
  %9 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %child_offset_to_irq, align 8, !dbg !13495
  %tobool4 = icmp ne i32 (%struct.gpio_chip*, i32)* %9, null, !dbg !13492
  br i1 %tobool4, label %if.end8, label %if.then5, !dbg !13496

if.then5:                                         ; preds = %if.end
  %10 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13497
  %irq6 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %10, i32 0, i32 35, !dbg !13498
  %child_offset_to_irq7 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq6, i32 0, i32 7, !dbg !13499
  store i32 (%struct.gpio_chip*, i32)* @gpiochip_child_offset_to_irq_noop, i32 (%struct.gpio_chip*, i32)** %child_offset_to_irq7, align 8, !dbg !13500
  br label %if.end8, !dbg !13497

if.end8:                                          ; preds = %if.then5, %if.end
  %11 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13501
  %irq9 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %11, i32 0, i32 35, !dbg !13503
  %populate_parent_alloc_arg = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq9, i32 0, i32 6, !dbg !13504
  %12 = load i8* (%struct.gpio_chip*, i32, i32)*, i8* (%struct.gpio_chip*, i32, i32)** %populate_parent_alloc_arg, align 8, !dbg !13504
  %tobool10 = icmp ne i8* (%struct.gpio_chip*, i32, i32)* %12, null, !dbg !13501
  br i1 %tobool10, label %if.end14, label %if.then11, !dbg !13505

if.then11:                                        ; preds = %if.end8
  %13 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13506
  %irq12 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %13, i32 0, i32 35, !dbg !13507
  %populate_parent_alloc_arg13 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq12, i32 0, i32 6, !dbg !13508
  store i8* (%struct.gpio_chip*, i32, i32)* @gpiochip_populate_parent_fwspec_twocell, i8* (%struct.gpio_chip*, i32, i32)** %populate_parent_alloc_arg13, align 8, !dbg !13509
  br label %if.end14, !dbg !13506

if.end14:                                         ; preds = %if.then11, %if.end8
  %14 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13510
  %irq15 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %14, i32 0, i32 35, !dbg !13511
  %child_irq_domain_ops = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq15, i32 0, i32 8, !dbg !13512
  call void @gpiochip_hierarchy_setup_domain_ops(%struct.irq_domain_ops* %child_irq_domain_ops) #11, !dbg !13513
  %15 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13514
  %irq16 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %15, i32 0, i32 35, !dbg !13515
  %parent_domain = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq16, i32 0, i32 4, !dbg !13516
  %16 = load %struct.irq_domain*, %struct.irq_domain** %parent_domain, align 8, !dbg !13516
  %17 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13517
  %ngpio = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %17, i32 0, i32 19, !dbg !13518
  %18 = load i16, i16* %ngpio, align 4, !dbg !13518
  %conv = zext i16 %18 to i32, !dbg !13517
  %19 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13519
  %irq17 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %19, i32 0, i32 35, !dbg !13520
  %fwnode18 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq17, i32 0, i32 3, !dbg !13521
  %20 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode18, align 8, !dbg !13521
  %21 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13522
  %irq19 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %21, i32 0, i32 35, !dbg !13523
  %child_irq_domain_ops20 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq19, i32 0, i32 8, !dbg !13524
  %22 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13525
  %23 = bitcast %struct.gpio_chip* %22 to i8*, !dbg !13525
  %call = call %struct.irq_domain* @irq_domain_create_hierarchy(%struct.irq_domain* %16, i32 0, i32 %conv, %struct.fwnode_handle* %20, %struct.irq_domain_ops* %child_irq_domain_ops20, i8* %23) #11, !dbg !13526
  %24 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13527
  %irq21 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %24, i32 0, i32 35, !dbg !13528
  %domain = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq21, i32 0, i32 1, !dbg !13529
  store %struct.irq_domain* %call, %struct.irq_domain** %domain, align 8, !dbg !13530
  %25 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13531
  %irq22 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %25, i32 0, i32 35, !dbg !13533
  %domain23 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq22, i32 0, i32 1, !dbg !13534
  %26 = load %struct.irq_domain*, %struct.irq_domain** %domain23, align 8, !dbg !13534
  %tobool24 = icmp ne %struct.irq_domain* %26, null, !dbg !13531
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !13535

if.then25:                                        ; preds = %if.end14
  store i32 -12, i32* %retval, align 4, !dbg !13536
  br label %return, !dbg !13536

if.end26:                                         ; preds = %if.end14
  %27 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13537
  %28 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13538
  %irq27 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %28, i32 0, i32 35, !dbg !13539
  %chip = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq27, i32 0, i32 0, !dbg !13540
  %29 = load %struct.irq_chip*, %struct.irq_chip** %chip, align 8, !dbg !13540
  call void @gpiochip_set_hierarchical_irqchip(%struct.gpio_chip* %27, %struct.irq_chip* %29) #11, !dbg !13541
  store i32 0, i32* %retval, align 4, !dbg !13542
  br label %return, !dbg !13542

return:                                           ; preds = %if.end26, %if.then25, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !13543
  ret i32 %30, !dbg !13543
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpiochip_child_offset_to_irq_noop(%struct.gpio_chip* %gc, i32 %offset) #0 !dbg !13544 {
entry:
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !13545, metadata !DIExpression()), !dbg !13546
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !13547, metadata !DIExpression()), !dbg !13548
  %0 = load i32, i32* %offset.addr, align 4, !dbg !13549
  ret i32 %0, !dbg !13550
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpiochip_hierarchy_setup_domain_ops(%struct.irq_domain_ops* %ops) #0 !dbg !13551 {
entry:
  %ops.addr = alloca %struct.irq_domain_ops*, align 8
  store %struct.irq_domain_ops* %ops, %struct.irq_domain_ops** %ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_domain_ops** %ops.addr, metadata !13555, metadata !DIExpression()), !dbg !13556
  %0 = load %struct.irq_domain_ops*, %struct.irq_domain_ops** %ops.addr, align 8, !dbg !13557
  %activate = getelementptr inbounds %struct.irq_domain_ops, %struct.irq_domain_ops* %0, i32 0, i32 7, !dbg !13558
  store i32 (%struct.irq_domain*, %struct.irq_data*, i1)* @gpiochip_irq_domain_activate, i32 (%struct.irq_domain*, %struct.irq_data*, i1)** %activate, align 8, !dbg !13559
  %1 = load %struct.irq_domain_ops*, %struct.irq_domain_ops** %ops.addr, align 8, !dbg !13560
  %deactivate = getelementptr inbounds %struct.irq_domain_ops, %struct.irq_domain_ops* %1, i32 0, i32 8, !dbg !13561
  store void (%struct.irq_domain*, %struct.irq_data*)* @gpiochip_irq_domain_deactivate, void (%struct.irq_domain*, %struct.irq_data*)** %deactivate, align 8, !dbg !13562
  %2 = load %struct.irq_domain_ops*, %struct.irq_domain_ops** %ops.addr, align 8, !dbg !13563
  %alloc = getelementptr inbounds %struct.irq_domain_ops, %struct.irq_domain_ops* %2, i32 0, i32 5, !dbg !13564
  store i32 (%struct.irq_domain*, i32, i32, i8*)* @gpiochip_hierarchy_irq_domain_alloc, i32 (%struct.irq_domain*, i32, i32, i8*)** %alloc, align 8, !dbg !13565
  %3 = load %struct.irq_domain_ops*, %struct.irq_domain_ops** %ops.addr, align 8, !dbg !13566
  %free = getelementptr inbounds %struct.irq_domain_ops, %struct.irq_domain_ops* %3, i32 0, i32 6, !dbg !13567
  store void (%struct.irq_domain*, i32, i32)* @irq_domain_free_irqs_common, void (%struct.irq_domain*, i32, i32)** %free, align 8, !dbg !13568
  %4 = load %struct.irq_domain_ops*, %struct.irq_domain_ops** %ops.addr, align 8, !dbg !13569
  %translate = getelementptr inbounds %struct.irq_domain_ops, %struct.irq_domain_ops* %4, i32 0, i32 9, !dbg !13571
  %5 = load i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)** %translate, align 8, !dbg !13571
  %tobool = icmp ne i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* %5, null, !dbg !13569
  br i1 %tobool, label %if.end, label %if.then, !dbg !13572

if.then:                                          ; preds = %entry
  %6 = load %struct.irq_domain_ops*, %struct.irq_domain_ops** %ops.addr, align 8, !dbg !13573
  %translate1 = getelementptr inbounds %struct.irq_domain_ops, %struct.irq_domain_ops* %6, i32 0, i32 9, !dbg !13574
  store i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* @gpiochip_hierarchy_irq_domain_translate, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)** %translate1, align 8, !dbg !13575
  br label %if.end, !dbg !13573

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !13576
}

; Function Attrs: noredzone
declare dso_local %struct.irq_domain* @irq_domain_create_hierarchy(%struct.irq_domain*, i32, i32, %struct.fwnode_handle*, %struct.irq_domain_ops*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpiochip_set_hierarchical_irqchip(%struct.gpio_chip* %gc, %struct.irq_chip* %irqchip) #0 !dbg !13577 {
entry:
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %irqchip.addr = alloca %struct.irq_chip*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %fwspec = alloca %struct.irq_fwspec, align 8
  %parent_hwirq = alloca i32, align 4
  %parent_type = alloca i32, align 4
  %girq = alloca %struct.gpio_irq_chip*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !13580, metadata !DIExpression()), !dbg !13581
  store %struct.irq_chip* %irqchip, %struct.irq_chip** %irqchip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_chip** %irqchip.addr, metadata !13582, metadata !DIExpression()), !dbg !13583
  %0 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13584
  %irq = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %0, i32 0, i32 35, !dbg !13586
  %fwnode = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq, i32 0, i32 3, !dbg !13587
  %1 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !13587
  %call = call zeroext i1 @is_of_node(%struct.fwnode_handle* %1) #11, !dbg !13588
  br i1 %call, label %if.then, label %if.end, !dbg !13589

if.then:                                          ; preds = %entry
  br label %return, !dbg !13590

if.end:                                           ; preds = %entry
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13591
  %irq1 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %2, i32 0, i32 35, !dbg !13593
  %fwnode2 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq1, i32 0, i32 3, !dbg !13594
  %3 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode2, align 8, !dbg !13594
  %call3 = call zeroext i1 @is_fwnode_irqchip(%struct.fwnode_handle* %3) #11, !dbg !13595
  br i1 %call3, label %if.then4, label %if.end25, !dbg !13596

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13597, metadata !DIExpression()), !dbg !13599
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13600, metadata !DIExpression()), !dbg !13601
  store i32 0, i32* %i, align 4, !dbg !13602
  br label %for.cond, !dbg !13604

for.cond:                                         ; preds = %for.inc, %if.then4
  %4 = load i32, i32* %i, align 4, !dbg !13605
  %5 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13607
  %ngpio = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %5, i32 0, i32 19, !dbg !13608
  %6 = load i16, i16* %ngpio, align 4, !dbg !13608
  %conv = zext i16 %6 to i32, !dbg !13607
  %cmp = icmp slt i32 %4, %conv, !dbg !13609
  br i1 %cmp, label %for.body, label %for.end, !dbg !13610

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.irq_fwspec* %fwspec, metadata !13611, metadata !DIExpression()), !dbg !13613
  call void @llvm.dbg.declare(metadata i32* %parent_hwirq, metadata !13614, metadata !DIExpression()), !dbg !13615
  call void @llvm.dbg.declare(metadata i32* %parent_type, metadata !13616, metadata !DIExpression()), !dbg !13617
  call void @llvm.dbg.declare(metadata %struct.gpio_irq_chip** %girq, metadata !13618, metadata !DIExpression()), !dbg !13619
  %7 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13620
  %irq6 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %7, i32 0, i32 35, !dbg !13621
  store %struct.gpio_irq_chip* %irq6, %struct.gpio_irq_chip** %girq, align 8, !dbg !13619
  %8 = load %struct.gpio_irq_chip*, %struct.gpio_irq_chip** %girq, align 8, !dbg !13622
  %child_to_parent_hwirq = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %8, i32 0, i32 5, !dbg !13623
  %9 = load i32 (%struct.gpio_chip*, i32, i32, i32*, i32*)*, i32 (%struct.gpio_chip*, i32, i32, i32*, i32*)** %child_to_parent_hwirq, align 8, !dbg !13623
  %10 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13624
  %11 = load i32, i32* %i, align 4, !dbg !13625
  %call7 = call i32 %9(%struct.gpio_chip* %10, i32 %11, i32 1, i32* %parent_hwirq, i32* %parent_type) #11, !dbg !13622
  store i32 %call7, i32* %ret, align 4, !dbg !13626
  %12 = load i32, i32* %ret, align 4, !dbg !13627
  %tobool = icmp ne i32 %12, 0, !dbg !13627
  br i1 %tobool, label %if.then8, label %if.end9, !dbg !13629

if.then8:                                         ; preds = %for.body
  %13 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13630
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %13, i32 0, i32 1, !dbg !13630
  %14 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !13630
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %14, i32 0, i32 1, !dbg !13630
  %15 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13630
  %label = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %15, i32 0, i32 0, !dbg !13630
  %16 = load i8*, i8** %label, align 8, !dbg !13630
  %17 = load i32, i32* %i, align 4, !dbg !13630
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.52, i64 0, i64 0), i8* %16, i32 %17) #13, !dbg !13630
  br label %for.inc, !dbg !13632

if.end9:                                          ; preds = %for.body
  %18 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13633
  %irq10 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %18, i32 0, i32 35, !dbg !13634
  %fwnode11 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq10, i32 0, i32 3, !dbg !13635
  %19 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode11, align 8, !dbg !13635
  %fwnode12 = getelementptr inbounds %struct.irq_fwspec, %struct.irq_fwspec* %fwspec, i32 0, i32 0, !dbg !13636
  store %struct.fwnode_handle* %19, %struct.fwnode_handle** %fwnode12, align 8, !dbg !13637
  %20 = load %struct.gpio_irq_chip*, %struct.gpio_irq_chip** %girq, align 8, !dbg !13638
  %child_offset_to_irq = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %20, i32 0, i32 7, !dbg !13639
  %21 = load i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)** %child_offset_to_irq, align 8, !dbg !13639
  %22 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13640
  %23 = load i32, i32* %i, align 4, !dbg !13641
  %call13 = call i32 %21(%struct.gpio_chip* %22, i32 %23) #11, !dbg !13638
  %param = getelementptr inbounds %struct.irq_fwspec, %struct.irq_fwspec* %fwspec, i32 0, i32 2, !dbg !13642
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %param, i64 0, i64 0, !dbg !13643
  store i32 %call13, i32* %arrayidx, align 4, !dbg !13644
  %param14 = getelementptr inbounds %struct.irq_fwspec, %struct.irq_fwspec* %fwspec, i32 0, i32 2, !dbg !13645
  %arrayidx15 = getelementptr [16 x i32], [16 x i32]* %param14, i64 0, i64 1, !dbg !13646
  store i32 1, i32* %arrayidx15, align 4, !dbg !13647
  %param_count = getelementptr inbounds %struct.irq_fwspec, %struct.irq_fwspec* %fwspec, i32 0, i32 1, !dbg !13648
  store i32 2, i32* %param_count, align 8, !dbg !13649
  %24 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13650
  %irq16 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %24, i32 0, i32 35, !dbg !13651
  %domain = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq16, i32 0, i32 1, !dbg !13652
  %25 = load %struct.irq_domain*, %struct.irq_domain** %domain, align 8, !dbg !13652
  %26 = bitcast %struct.irq_fwspec* %fwspec to i8*, !dbg !13653
  %call17 = call i32 @__irq_domain_alloc_irqs(%struct.irq_domain* %25, i32 -1, i32 1, i32 -1, i8* %26, i1 zeroext false, %struct.irq_affinity_desc* null) #11, !dbg !13654
  store i32 %call17, i32* %ret, align 4, !dbg !13655
  %27 = load i32, i32* %ret, align 4, !dbg !13656
  %cmp18 = icmp slt i32 %27, 0, !dbg !13658
  br i1 %cmp18, label %if.then20, label %if.end24, !dbg !13659

if.then20:                                        ; preds = %if.end9
  %28 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13660
  %gpiodev21 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %28, i32 0, i32 1, !dbg !13660
  %29 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev21, align 8, !dbg !13660
  %dev22 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %29, i32 0, i32 1, !dbg !13660
  %30 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13660
  %label23 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %30, i32 0, i32 0, !dbg !13660
  %31 = load i8*, i8** %label23, align 8, !dbg !13660
  %32 = load i32, i32* %i, align 4, !dbg !13660
  %33 = load i32, i32* %parent_hwirq, align 4, !dbg !13660
  %34 = load i32, i32* %ret, align 4, !dbg !13660
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev22, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.53, i64 0, i64 0), i8* %31, i32 %32, i32 %33, i32 %34) #13, !dbg !13660
  br label %if.end24, !dbg !13662

if.end24:                                         ; preds = %if.then20, %if.end9
  br label %for.inc, !dbg !13663

for.inc:                                          ; preds = %if.end24, %if.then8
  %35 = load i32, i32* %i, align 4, !dbg !13664
  %inc = add i32 %35, 1, !dbg !13664
  store i32 %inc, i32* %i, align 4, !dbg !13664
  br label %for.cond, !dbg !13665, !llvm.loop !13666

for.end:                                          ; preds = %for.cond
  br label %if.end25, !dbg !13668

if.end25:                                         ; preds = %for.end, %if.end
  %36 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13669
  %gpiodev26 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %36, i32 0, i32 1, !dbg !13669
  %37 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev26, align 8, !dbg !13669
  %dev27 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %37, i32 0, i32 1, !dbg !13669
  %38 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !13669
  %label28 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %38, i32 0, i32 0, !dbg !13669
  %39 = load i8*, i8** %label28, align 8, !dbg !13669
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev27, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.54, i64 0, i64 0), i8* %39, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.gpiochip_set_hierarchical_irqchip, i64 0, i64 0)) #13, !dbg !13669
  br label %return, !dbg !13670

return:                                           ; preds = %if.end25, %if.then
  ret void, !dbg !13671
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpiochip_hierarchy_irq_domain_alloc(%struct.irq_domain* %d, i32 %irq, i32 %nr_irqs, i8* %data) #0 !dbg !13672 {
entry:
  %retval = alloca i32, align 4
  %d.addr = alloca %struct.irq_domain*, align 8
  %irq.addr = alloca i32, align 4
  %nr_irqs.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %gc = alloca %struct.gpio_chip*, align 8
  %hwirq = alloca i64, align 8
  %type = alloca i32, align 4
  %fwspec = alloca %struct.irq_fwspec*, align 8
  %parent_arg = alloca i8*, align 8
  %parent_hwirq = alloca i32, align 4
  %parent_type = alloca i32, align 4
  %girq = alloca %struct.gpio_irq_chip*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.irq_domain* %d, %struct.irq_domain** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %d.addr, metadata !13673, metadata !DIExpression()), !dbg !13674
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !13675, metadata !DIExpression()), !dbg !13676
  store i32 %nr_irqs, i32* %nr_irqs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr_irqs.addr, metadata !13677, metadata !DIExpression()), !dbg !13678
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !13679, metadata !DIExpression()), !dbg !13680
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !13681, metadata !DIExpression()), !dbg !13682
  %0 = load %struct.irq_domain*, %struct.irq_domain** %d.addr, align 8, !dbg !13683
  %host_data = getelementptr inbounds %struct.irq_domain, %struct.irq_domain* %0, i32 0, i32 3, !dbg !13684
  %1 = load i8*, i8** %host_data, align 8, !dbg !13684
  %2 = bitcast i8* %1 to %struct.gpio_chip*, !dbg !13683
  store %struct.gpio_chip* %2, %struct.gpio_chip** %gc, align 8, !dbg !13682
  call void @llvm.dbg.declare(metadata i64* %hwirq, metadata !13685, metadata !DIExpression()), !dbg !13686
  call void @llvm.dbg.declare(metadata i32* %type, metadata !13687, metadata !DIExpression()), !dbg !13688
  store i32 0, i32* %type, align 4, !dbg !13688
  call void @llvm.dbg.declare(metadata %struct.irq_fwspec** %fwspec, metadata !13689, metadata !DIExpression()), !dbg !13690
  %3 = load i8*, i8** %data.addr, align 8, !dbg !13691
  %4 = bitcast i8* %3 to %struct.irq_fwspec*, !dbg !13691
  store %struct.irq_fwspec* %4, %struct.irq_fwspec** %fwspec, align 8, !dbg !13690
  call void @llvm.dbg.declare(metadata i8** %parent_arg, metadata !13692, metadata !DIExpression()), !dbg !13693
  call void @llvm.dbg.declare(metadata i32* %parent_hwirq, metadata !13694, metadata !DIExpression()), !dbg !13695
  call void @llvm.dbg.declare(metadata i32* %parent_type, metadata !13696, metadata !DIExpression()), !dbg !13697
  call void @llvm.dbg.declare(metadata %struct.gpio_irq_chip** %girq, metadata !13698, metadata !DIExpression()), !dbg !13699
  %5 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !13700
  %irq1 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %5, i32 0, i32 35, !dbg !13701
  store %struct.gpio_irq_chip* %irq1, %struct.gpio_irq_chip** %girq, align 8, !dbg !13699
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13702, metadata !DIExpression()), !dbg !13703
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !13704, metadata !DIExpression()), !dbg !13706
  %6 = load i32, i32* %nr_irqs.addr, align 4, !dbg !13706
  %cmp = icmp ne i32 %6, 1, !dbg !13706
  %lnot = xor i1 %cmp, true, !dbg !13706
  %lnot2 = xor i1 %lnot, true, !dbg !13706
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !13706
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !13706
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !13707
  %tobool = icmp ne i32 %7, 0, !dbg !13707
  %lnot3 = xor i1 %tobool, true, !dbg !13707
  %lnot5 = xor i1 %lnot3, true, !dbg !13707
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !13707
  %conv = sext i32 %lnot.ext6 to i64, !dbg !13707
  %tobool7 = icmp ne i64 %conv, 0, !dbg !13707
  br i1 %tobool7, label %if.then, label %if.end, !dbg !13706

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13707

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !13709

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !13711

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !13709

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 1120, i32 2305, i64 12) #7, !dbg !13713, !srcloc !13715
  br label %do.end10, !dbg !13713

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 237) #7, !dbg !13716, !srcloc !13718
  br label %do.body11, !dbg !13709

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !13719

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !13709

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !13709

if.end:                                           ; preds = %do.end13, %entry
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !13706
  %tobool14 = icmp ne i32 %8, 0, !dbg !13706
  %lnot15 = xor i1 %tobool14, true, !dbg !13706
  %lnot17 = xor i1 %lnot15, true, !dbg !13706
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !13706
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !13706
  store i64 %conv19, i64* %tmp, align 8, !dbg !13707
  %9 = load i64, i64* %tmp, align 8, !dbg !13706
  %10 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !13721
  %irq20 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %10, i32 0, i32 35, !dbg !13722
  %child_irq_domain_ops = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq20, i32 0, i32 8, !dbg !13723
  %translate = getelementptr inbounds %struct.irq_domain_ops, %struct.irq_domain_ops* %child_irq_domain_ops, i32 0, i32 9, !dbg !13724
  %11 = load i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)** %translate, align 8, !dbg !13724
  %12 = load %struct.irq_domain*, %struct.irq_domain** %d.addr, align 8, !dbg !13725
  %13 = load %struct.irq_fwspec*, %struct.irq_fwspec** %fwspec, align 8, !dbg !13726
  %call = call i32 %11(%struct.irq_domain* %12, %struct.irq_fwspec* %13, i64* %hwirq, i32* %type) #11, !dbg !13721
  store i32 %call, i32* %ret, align 4, !dbg !13727
  %14 = load i32, i32* %ret, align 4, !dbg !13728
  %tobool21 = icmp ne i32 %14, 0, !dbg !13728
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !13730

if.then22:                                        ; preds = %if.end
  %15 = load i32, i32* %ret, align 4, !dbg !13731
  store i32 %15, i32* %retval, align 4, !dbg !13732
  br label %return, !dbg !13732

if.end23:                                         ; preds = %if.end
  %16 = load %struct.gpio_irq_chip*, %struct.gpio_irq_chip** %girq, align 8, !dbg !13733
  %child_to_parent_hwirq = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %16, i32 0, i32 5, !dbg !13734
  %17 = load i32 (%struct.gpio_chip*, i32, i32, i32*, i32*)*, i32 (%struct.gpio_chip*, i32, i32, i32*, i32*)** %child_to_parent_hwirq, align 8, !dbg !13734
  %18 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !13735
  %19 = load i64, i64* %hwirq, align 8, !dbg !13736
  %conv24 = trunc i64 %19 to i32, !dbg !13736
  %20 = load i32, i32* %type, align 4, !dbg !13737
  %call25 = call i32 %17(%struct.gpio_chip* %18, i32 %conv24, i32 %20, i32* %parent_hwirq, i32* %parent_type) #11, !dbg !13733
  store i32 %call25, i32* %ret, align 4, !dbg !13738
  %21 = load i32, i32* %ret, align 4, !dbg !13739
  %tobool26 = icmp ne i32 %21, 0, !dbg !13739
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !13741

if.then27:                                        ; preds = %if.end23
  %22 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !13742
  %gpiodev = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %22, i32 0, i32 1, !dbg !13742
  %23 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev, align 8, !dbg !13742
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %23, i32 0, i32 1, !dbg !13742
  %24 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !13742
  %label = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %24, i32 0, i32 0, !dbg !13742
  %25 = load i8*, i8** %label, align 8, !dbg !13742
  %26 = load i64, i64* %hwirq, align 8, !dbg !13742
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.50, i64 0, i64 0), i8* %25, i64 %26) #13, !dbg !13742
  %27 = load i32, i32* %ret, align 4, !dbg !13744
  store i32 %27, i32* %retval, align 4, !dbg !13745
  br label %return, !dbg !13745

if.end28:                                         ; preds = %if.end23
  %28 = load %struct.irq_domain*, %struct.irq_domain** %d.addr, align 8, !dbg !13746
  %29 = load i32, i32* %irq.addr, align 4, !dbg !13747
  %30 = load i64, i64* %hwirq, align 8, !dbg !13748
  %31 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !13749
  %irq29 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %31, i32 0, i32 35, !dbg !13750
  %chip = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq29, i32 0, i32 0, !dbg !13751
  %32 = load %struct.irq_chip*, %struct.irq_chip** %chip, align 8, !dbg !13751
  %33 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !13752
  %34 = bitcast %struct.gpio_chip* %33 to i8*, !dbg !13752
  %35 = load %struct.gpio_irq_chip*, %struct.gpio_irq_chip** %girq, align 8, !dbg !13753
  %handler = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %35, i32 0, i32 9, !dbg !13754
  %36 = load void (%struct.irq_desc*)*, void (%struct.irq_desc*)** %handler, align 8, !dbg !13754
  call void @irq_domain_set_info(%struct.irq_domain* %28, i32 %29, i64 %30, %struct.irq_chip* %32, i8* %34, void (%struct.irq_desc*)* %36, i8* null, i8* null) #11, !dbg !13755
  %37 = load i32, i32* %irq.addr, align 4, !dbg !13756
  call void @irq_set_probe(i32 %37) #11, !dbg !13757
  %38 = load %struct.gpio_irq_chip*, %struct.gpio_irq_chip** %girq, align 8, !dbg !13758
  %populate_parent_alloc_arg = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %38, i32 0, i32 6, !dbg !13759
  %39 = load i8* (%struct.gpio_chip*, i32, i32)*, i8* (%struct.gpio_chip*, i32, i32)** %populate_parent_alloc_arg, align 8, !dbg !13759
  %40 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !13760
  %41 = load i32, i32* %parent_hwirq, align 4, !dbg !13761
  %42 = load i32, i32* %parent_type, align 4, !dbg !13762
  %call30 = call i8* %39(%struct.gpio_chip* %40, i32 %41, i32 %42) #11, !dbg !13758
  store i8* %call30, i8** %parent_arg, align 8, !dbg !13763
  %43 = load i8*, i8** %parent_arg, align 8, !dbg !13764
  %tobool31 = icmp ne i8* %43, null, !dbg !13764
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !13766

if.then32:                                        ; preds = %if.end28
  store i32 -12, i32* %retval, align 4, !dbg !13767
  br label %return, !dbg !13767

if.end33:                                         ; preds = %if.end28
  %44 = load i32, i32* %irq.addr, align 4, !dbg !13768
  %45 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !13769
  %irq34 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %45, i32 0, i32 35, !dbg !13770
  %lock_key = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq34, i32 0, i32 11, !dbg !13771
  %46 = load %struct.lock_class_key*, %struct.lock_class_key** %lock_key, align 8, !dbg !13771
  %47 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !13772
  %irq35 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %47, i32 0, i32 35, !dbg !13773
  %request_key = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq35, i32 0, i32 12, !dbg !13774
  %48 = load %struct.lock_class_key*, %struct.lock_class_key** %request_key, align 8, !dbg !13774
  call void @irq_set_lockdep_class(i32 %44, %struct.lock_class_key* %46, %struct.lock_class_key* %48) #11, !dbg !13775
  %49 = load %struct.irq_domain*, %struct.irq_domain** %d.addr, align 8, !dbg !13776
  %50 = load i32, i32* %irq.addr, align 4, !dbg !13777
  %51 = load i8*, i8** %parent_arg, align 8, !dbg !13778
  %call36 = call i32 @irq_domain_alloc_irqs_parent(%struct.irq_domain* %49, i32 %50, i32 1, i8* %51) #11, !dbg !13779
  store i32 %call36, i32* %ret, align 4, !dbg !13780
  %52 = load %struct.irq_domain*, %struct.irq_domain** %d.addr, align 8, !dbg !13781
  %parent = getelementptr inbounds %struct.irq_domain, %struct.irq_domain* %52, i32 0, i32 9, !dbg !13783
  %53 = load %struct.irq_domain*, %struct.irq_domain** %parent, align 8, !dbg !13783
  %call37 = call zeroext i1 @irq_domain_is_msi(%struct.irq_domain* %53) #11, !dbg !13784
  br i1 %call37, label %land.lhs.true, label %if.end42, !dbg !13785

land.lhs.true:                                    ; preds = %if.end33
  %54 = load i32, i32* %ret, align 4, !dbg !13786
  %cmp39 = icmp eq i32 %54, -17, !dbg !13787
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !13788

if.then41:                                        ; preds = %land.lhs.true
  store i32 0, i32* %ret, align 4, !dbg !13789
  br label %if.end42, !dbg !13790

if.end42:                                         ; preds = %if.then41, %land.lhs.true, %if.end33
  %55 = load i32, i32* %ret, align 4, !dbg !13791
  %tobool43 = icmp ne i32 %55, 0, !dbg !13791
  br i1 %tobool43, label %if.then44, label %if.end48, !dbg !13793

if.then44:                                        ; preds = %if.end42
  %56 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !13794
  %gpiodev45 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %56, i32 0, i32 1, !dbg !13794
  %57 = load %struct.gpio_device*, %struct.gpio_device** %gpiodev45, align 8, !dbg !13794
  %dev46 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %57, i32 0, i32 1, !dbg !13794
  %58 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !13794
  %label47 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %58, i32 0, i32 0, !dbg !13794
  %59 = load i8*, i8** %label47, align 8, !dbg !13794
  %60 = load i32, i32* %parent_hwirq, align 4, !dbg !13794
  %61 = load i64, i64* %hwirq, align 8, !dbg !13794
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev46, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.51, i64 0, i64 0), i8* %59, i32 %60, i64 %61) #13, !dbg !13794
  br label %if.end48, !dbg !13794

if.end48:                                         ; preds = %if.then44, %if.end42
  %62 = load i8*, i8** %parent_arg, align 8, !dbg !13795
  call void @kfree(i8* %62) #11, !dbg !13796
  %63 = load i32, i32* %ret, align 4, !dbg !13797
  store i32 %63, i32* %retval, align 4, !dbg !13798
  br label %return, !dbg !13798

return:                                           ; preds = %if.end48, %if.then32, %if.then27, %if.then22
  %64 = load i32, i32* %retval, align 4, !dbg !13799
  ret i32 %64, !dbg !13799
}

; Function Attrs: noredzone
declare dso_local void @irq_domain_free_irqs_common(%struct.irq_domain*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpiochip_hierarchy_irq_domain_translate(%struct.irq_domain* %d, %struct.irq_fwspec* %fwspec, i64* %hwirq, i32* %type) #0 !dbg !13800 {
entry:
  %retval = alloca i32, align 4
  %d.addr = alloca %struct.irq_domain*, align 8
  %fwspec.addr = alloca %struct.irq_fwspec*, align 8
  %hwirq.addr = alloca i64*, align 8
  %type.addr = alloca i32*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.irq_domain* %d, %struct.irq_domain** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %d.addr, metadata !13801, metadata !DIExpression()), !dbg !13802
  store %struct.irq_fwspec* %fwspec, %struct.irq_fwspec** %fwspec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_fwspec** %fwspec.addr, metadata !13803, metadata !DIExpression()), !dbg !13804
  store i64* %hwirq, i64** %hwirq.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %hwirq.addr, metadata !13805, metadata !DIExpression()), !dbg !13806
  store i32* %type, i32** %type.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %type.addr, metadata !13807, metadata !DIExpression()), !dbg !13808
  %0 = load %struct.irq_fwspec*, %struct.irq_fwspec** %fwspec.addr, align 8, !dbg !13809
  %fwnode = getelementptr inbounds %struct.irq_fwspec, %struct.irq_fwspec* %0, i32 0, i32 0, !dbg !13811
  %1 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !13811
  %call = call zeroext i1 @is_of_node(%struct.fwnode_handle* %1) #11, !dbg !13812
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !13813

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.irq_fwspec*, %struct.irq_fwspec** %fwspec.addr, align 8, !dbg !13814
  %param_count = getelementptr inbounds %struct.irq_fwspec, %struct.irq_fwspec* %2, i32 0, i32 1, !dbg !13815
  %3 = load i32, i32* %param_count, align 8, !dbg !13815
  %cmp = icmp eq i32 %3, 2, !dbg !13816
  br i1 %cmp, label %if.then, label %if.end, !dbg !13817

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.irq_domain*, %struct.irq_domain** %d.addr, align 8, !dbg !13818
  %5 = load %struct.irq_fwspec*, %struct.irq_fwspec** %fwspec.addr, align 8, !dbg !13820
  %6 = load i64*, i64** %hwirq.addr, align 8, !dbg !13821
  %7 = load i32*, i32** %type.addr, align 8, !dbg !13822
  %call1 = call i32 @irq_domain_translate_twocell(%struct.irq_domain* %4, %struct.irq_fwspec* %5, i64* %6, i32* %7) #11, !dbg !13823
  store i32 %call1, i32* %retval, align 4, !dbg !13824
  br label %return, !dbg !13824

if.end:                                           ; preds = %land.lhs.true, %entry
  %8 = load %struct.irq_fwspec*, %struct.irq_fwspec** %fwspec.addr, align 8, !dbg !13825
  %fwnode2 = getelementptr inbounds %struct.irq_fwspec, %struct.irq_fwspec* %8, i32 0, i32 0, !dbg !13827
  %9 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode2, align 8, !dbg !13827
  %call3 = call zeroext i1 @is_fwnode_irqchip(%struct.fwnode_handle* %9) #11, !dbg !13828
  br i1 %call3, label %if.then4, label %if.end30, !dbg !13829

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13830, metadata !DIExpression()), !dbg !13832
  %10 = load %struct.irq_domain*, %struct.irq_domain** %d.addr, align 8, !dbg !13833
  %11 = load %struct.irq_fwspec*, %struct.irq_fwspec** %fwspec.addr, align 8, !dbg !13834
  %12 = load i64*, i64** %hwirq.addr, align 8, !dbg !13835
  %13 = load i32*, i32** %type.addr, align 8, !dbg !13836
  %call5 = call i32 @irq_domain_translate_twocell(%struct.irq_domain* %10, %struct.irq_fwspec* %11, i64* %12, i32* %13) #11, !dbg !13837
  store i32 %call5, i32* %ret, align 4, !dbg !13838
  %14 = load i32, i32* %ret, align 4, !dbg !13839
  %tobool = icmp ne i32 %14, 0, !dbg !13839
  br i1 %tobool, label %if.then6, label %if.end7, !dbg !13841

if.then6:                                         ; preds = %if.then4
  %15 = load i32, i32* %ret, align 4, !dbg !13842
  store i32 %15, i32* %retval, align 4, !dbg !13843
  br label %return, !dbg !13843

if.end7:                                          ; preds = %if.then4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !13844, metadata !DIExpression()), !dbg !13846
  %16 = load i32*, i32** %type.addr, align 8, !dbg !13846
  %17 = load i32, i32* %16, align 4, !dbg !13846
  %cmp8 = icmp eq i32 %17, 0, !dbg !13846
  %lnot = xor i1 %cmp8, true, !dbg !13846
  %lnot9 = xor i1 %lnot, true, !dbg !13846
  %lnot.ext = zext i1 %lnot9 to i32, !dbg !13846
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !13846
  %18 = load i32, i32* %__ret_warn_on, align 4, !dbg !13847
  %tobool10 = icmp ne i32 %18, 0, !dbg !13847
  %lnot11 = xor i1 %tobool10, true, !dbg !13847
  %lnot13 = xor i1 %lnot11, true, !dbg !13847
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !13847
  %conv = sext i32 %lnot.ext14 to i64, !dbg !13847
  %tobool15 = icmp ne i64 %conv, 0, !dbg !13847
  br i1 %tobool15, label %if.then16, label %if.end23, !dbg !13846

if.then16:                                        ; preds = %if.end7
  br label %do.body, !dbg !13847

do.body:                                          ; preds = %if.then16
  br label %do.body17, !dbg !13849

do.body17:                                        ; preds = %do.body
  br label %do.end, !dbg !13851

do.end:                                           ; preds = %do.body17
  br label %do.body18, !dbg !13849

do.body18:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 1095, i32 2305, i64 12) #7, !dbg !13853, !srcloc !13855
  br label %do.end19, !dbg !13853

do.end19:                                         ; preds = %do.body18
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 236) #7, !dbg !13856, !srcloc !13858
  br label %do.body20, !dbg !13849

do.body20:                                        ; preds = %do.end19
  br label %do.end21, !dbg !13859

do.end21:                                         ; preds = %do.body20
  br label %do.end22, !dbg !13849

do.end22:                                         ; preds = %do.end21
  br label %if.end23, !dbg !13849

if.end23:                                         ; preds = %do.end22, %if.end7
  %19 = load i32, i32* %__ret_warn_on, align 4, !dbg !13846
  %tobool24 = icmp ne i32 %19, 0, !dbg !13846
  %lnot25 = xor i1 %tobool24, true, !dbg !13846
  %lnot27 = xor i1 %lnot25, true, !dbg !13846
  %lnot.ext28 = zext i1 %lnot27 to i32, !dbg !13846
  %conv29 = sext i32 %lnot.ext28 to i64, !dbg !13846
  store i64 %conv29, i64* %tmp, align 8, !dbg !13847
  %20 = load i64, i64* %tmp, align 8, !dbg !13846
  store i32 0, i32* %retval, align 4, !dbg !13861
  br label %return, !dbg !13861

if.end30:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !13862
  br label %return, !dbg !13862

return:                                           ; preds = %if.end30, %if.end23, %if.then6, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !13863
  ret i32 %21, !dbg !13863
}

; Function Attrs: noredzone
declare dso_local void @irq_domain_set_info(%struct.irq_domain*, i32, i64, %struct.irq_chip*, i8*, void (%struct.irq_desc*)*, i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @irq_set_probe(i32 %irq) #0 !dbg !13864 {
entry:
  %irq.addr = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !13865, metadata !DIExpression()), !dbg !13866
  %0 = load i32, i32* %irq.addr, align 4, !dbg !13867
  call void @irq_modify_status(i32 %0, i64 1024, i64 0) #11, !dbg !13868
  ret void, !dbg !13869
}

; Function Attrs: noredzone
declare dso_local i32 @irq_domain_alloc_irqs_parent(%struct.irq_domain*, i32, i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @irq_domain_is_msi(%struct.irq_domain* %domain) #0 !dbg !13870 {
entry:
  %domain.addr = alloca %struct.irq_domain*, align 8
  store %struct.irq_domain* %domain, %struct.irq_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %domain.addr, metadata !13873, metadata !DIExpression()), !dbg !13874
  %0 = load %struct.irq_domain*, %struct.irq_domain** %domain.addr, align 8, !dbg !13875
  %flags = getelementptr inbounds %struct.irq_domain, %struct.irq_domain* %0, i32 0, i32 4, !dbg !13876
  %1 = load i32, i32* %flags, align 8, !dbg !13876
  %and = and i32 %1, 16, !dbg !13877
  %tobool = icmp ne i32 %and, 0, !dbg !13875
  ret i1 %tobool, !dbg !13878
}

; Function Attrs: noredzone
declare dso_local i32 @irq_domain_translate_twocell(%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_fwnode_irqchip(%struct.fwnode_handle* %fwnode) #0 !dbg !13879 {
entry:
  %fwnode.addr = alloca %struct.fwnode_handle*, align 8
  store %struct.fwnode_handle* %fwnode, %struct.fwnode_handle** %fwnode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %fwnode.addr, metadata !13882, metadata !DIExpression()), !dbg !13883
  %0 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !13884
  %tobool = icmp ne %struct.fwnode_handle* %0, null, !dbg !13884
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !13885

land.rhs:                                         ; preds = %entry
  %1 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !13886
  %ops = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %1, i32 0, i32 1, !dbg !13887
  %2 = load %struct.fwnode_operations*, %struct.fwnode_operations** %ops, align 8, !dbg !13887
  %cmp = icmp eq %struct.fwnode_operations* %2, @irqchip_fwnode_ops, !dbg !13888
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !13889
  ret i1 %3, !dbg !13890
}

; Function Attrs: noredzone
declare dso_local i32 @__irq_domain_alloc_irqs(%struct.irq_domain*, i32, i32, i32, i8*, i1 zeroext, %struct.irq_affinity_desc*) #2

; Function Attrs: noredzone
declare dso_local void @acpi_gpiochip_free_interrupts(%struct.gpio_chip*) #2

; Function Attrs: noredzone
declare dso_local i32 @irq_find_mapping(%struct.irq_domain*, i64) #2

; Function Attrs: noredzone
declare dso_local void @irq_dispose_mapping(i32) #2

; Function Attrs: noredzone
declare dso_local void @irq_domain_remove(%struct.irq_domain*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpiochip_irq_reqres(%struct.irq_data* %d) #0 !dbg !13891 {
entry:
  %d.addr = alloca %struct.irq_data*, align 8
  %gc = alloca %struct.gpio_chip*, align 8
  store %struct.irq_data* %d, %struct.irq_data** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %d.addr, metadata !13892, metadata !DIExpression()), !dbg !13893
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !13894, metadata !DIExpression()), !dbg !13895
  %0 = load %struct.irq_data*, %struct.irq_data** %d.addr, align 8, !dbg !13896
  %call = call i8* @irq_data_get_irq_chip_data(%struct.irq_data* %0) #11, !dbg !13897
  %1 = bitcast i8* %call to %struct.gpio_chip*, !dbg !13897
  store %struct.gpio_chip* %1, %struct.gpio_chip** %gc, align 8, !dbg !13895
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !13898
  %3 = load %struct.irq_data*, %struct.irq_data** %d.addr, align 8, !dbg !13899
  %hwirq = getelementptr inbounds %struct.irq_data, %struct.irq_data* %3, i32 0, i32 2, !dbg !13900
  %4 = load i64, i64* %hwirq, align 8, !dbg !13900
  %conv = trunc i64 %4 to i32, !dbg !13899
  %call1 = call i32 @gpiochip_reqres_irq(%struct.gpio_chip* %2, i32 %conv) #11, !dbg !13901
  ret i32 %call1, !dbg !13902
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpiochip_irq_enable(%struct.irq_data* %d) #0 !dbg !13903 {
entry:
  %d.addr = alloca %struct.irq_data*, align 8
  %gc = alloca %struct.gpio_chip*, align 8
  store %struct.irq_data* %d, %struct.irq_data** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %d.addr, metadata !13904, metadata !DIExpression()), !dbg !13905
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !13906, metadata !DIExpression()), !dbg !13907
  %0 = load %struct.irq_data*, %struct.irq_data** %d.addr, align 8, !dbg !13908
  %call = call i8* @irq_data_get_irq_chip_data(%struct.irq_data* %0) #11, !dbg !13909
  %1 = bitcast i8* %call to %struct.gpio_chip*, !dbg !13909
  store %struct.gpio_chip* %1, %struct.gpio_chip** %gc, align 8, !dbg !13907
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !13910
  %3 = load %struct.irq_data*, %struct.irq_data** %d.addr, align 8, !dbg !13911
  %hwirq = getelementptr inbounds %struct.irq_data, %struct.irq_data* %3, i32 0, i32 2, !dbg !13912
  %4 = load i64, i64* %hwirq, align 8, !dbg !13912
  %conv = trunc i64 %4 to i32, !dbg !13911
  call void @gpiochip_enable_irq(%struct.gpio_chip* %2, i32 %conv) #11, !dbg !13913
  %5 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !13914
  %irq = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %5, i32 0, i32 35, !dbg !13915
  %irq_enable = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq, i32 0, i32 23, !dbg !13916
  %6 = load void (%struct.irq_data*)*, void (%struct.irq_data*)** %irq_enable, align 8, !dbg !13916
  %7 = load %struct.irq_data*, %struct.irq_data** %d.addr, align 8, !dbg !13917
  call void %6(%struct.irq_data* %7) #11, !dbg !13914
  ret void, !dbg !13918
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @irq_data_get_irq_chip_data(%struct.irq_data* %d) #0 !dbg !13919 {
entry:
  %d.addr = alloca %struct.irq_data*, align 8
  store %struct.irq_data* %d, %struct.irq_data** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %d.addr, metadata !13922, metadata !DIExpression()), !dbg !13923
  %0 = load %struct.irq_data*, %struct.irq_data** %d.addr, align 8, !dbg !13924
  %chip_data = getelementptr inbounds %struct.irq_data, %struct.irq_data* %0, i32 0, i32 7, !dbg !13925
  %1 = load i8*, i8** %chip_data, align 8, !dbg !13925
  ret i8* %1, !dbg !13926
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @irq_domain_is_hierarchy(%struct.irq_domain* %domain) #0 !dbg !13927 {
entry:
  %domain.addr = alloca %struct.irq_domain*, align 8
  store %struct.irq_domain* %domain, %struct.irq_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %domain.addr, metadata !13928, metadata !DIExpression()), !dbg !13929
  %0 = load %struct.irq_domain*, %struct.irq_domain** %domain.addr, align 8, !dbg !13930
  %flags = getelementptr inbounds %struct.irq_domain, %struct.irq_domain* %0, i32 0, i32 4, !dbg !13931
  %1 = load i32, i32* %flags, align 8, !dbg !13931
  %and = and i32 %1, 1, !dbg !13932
  %tobool = icmp ne i32 %and, 0, !dbg !13930
  ret i1 %tobool, !dbg !13933
}

; Function Attrs: noredzone
declare dso_local i32 @irq_create_fwspec_mapping(%struct.irq_fwspec*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @irq_create_mapping(%struct.irq_domain* %host, i64 %hwirq) #0 !dbg !13934 {
entry:
  %host.addr = alloca %struct.irq_domain*, align 8
  %hwirq.addr = alloca i64, align 8
  store %struct.irq_domain* %host, %struct.irq_domain** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %host.addr, metadata !13937, metadata !DIExpression()), !dbg !13938
  store i64 %hwirq, i64* %hwirq.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %hwirq.addr, metadata !13939, metadata !DIExpression()), !dbg !13940
  %0 = load %struct.irq_domain*, %struct.irq_domain** %host.addr, align 8, !dbg !13941
  %1 = load i64, i64* %hwirq.addr, align 8, !dbg !13942
  %call = call i32 @irq_create_mapping_affinity(%struct.irq_domain* %0, i64 %1, %struct.irq_affinity_desc* null) #11, !dbg !13943
  ret i32 %call, !dbg !13944
}

; Function Attrs: noredzone
declare dso_local i32 @irq_create_mapping_affinity(%struct.irq_domain*, i64, %struct.irq_affinity_desc*) #2

; Function Attrs: noredzone
declare dso_local i32 @irq_domain_xlate_twocell(%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpiochip_irq_relres(%struct.irq_data* %d) #0 !dbg !13945 {
entry:
  %d.addr = alloca %struct.irq_data*, align 8
  %gc = alloca %struct.gpio_chip*, align 8
  store %struct.irq_data* %d, %struct.irq_data** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %d.addr, metadata !13946, metadata !DIExpression()), !dbg !13947
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !13948, metadata !DIExpression()), !dbg !13949
  %0 = load %struct.irq_data*, %struct.irq_data** %d.addr, align 8, !dbg !13950
  %call = call i8* @irq_data_get_irq_chip_data(%struct.irq_data* %0) #11, !dbg !13951
  %1 = bitcast i8* %call to %struct.gpio_chip*, !dbg !13951
  store %struct.gpio_chip* %1, %struct.gpio_chip** %gc, align 8, !dbg !13949
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !13952
  %3 = load %struct.irq_data*, %struct.irq_data** %d.addr, align 8, !dbg !13953
  %hwirq = getelementptr inbounds %struct.irq_data, %struct.irq_data* %3, i32 0, i32 2, !dbg !13954
  %4 = load i64, i64* %hwirq, align 8, !dbg !13954
  %conv = trunc i64 %4 to i32, !dbg !13953
  call void @gpiochip_relres_irq(%struct.gpio_chip* %2, i32 %conv) #11, !dbg !13955
  ret void, !dbg !13956
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpiochip_irq_disable(%struct.irq_data* %d) #0 !dbg !13957 {
entry:
  %d.addr = alloca %struct.irq_data*, align 8
  %gc = alloca %struct.gpio_chip*, align 8
  store %struct.irq_data* %d, %struct.irq_data** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %d.addr, metadata !13958, metadata !DIExpression()), !dbg !13959
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !13960, metadata !DIExpression()), !dbg !13961
  %0 = load %struct.irq_data*, %struct.irq_data** %d.addr, align 8, !dbg !13962
  %call = call i8* @irq_data_get_irq_chip_data(%struct.irq_data* %0) #11, !dbg !13963
  %1 = bitcast i8* %call to %struct.gpio_chip*, !dbg !13963
  store %struct.gpio_chip* %1, %struct.gpio_chip** %gc, align 8, !dbg !13961
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !13964
  %irq = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %2, i32 0, i32 35, !dbg !13965
  %irq_disable = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq, i32 0, i32 24, !dbg !13966
  %3 = load void (%struct.irq_data*)*, void (%struct.irq_data*)** %irq_disable, align 8, !dbg !13966
  %4 = load %struct.irq_data*, %struct.irq_data** %d.addr, align 8, !dbg !13967
  call void %3(%struct.irq_data* %4) #11, !dbg !13964
  %5 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !13968
  %6 = load %struct.irq_data*, %struct.irq_data** %d.addr, align 8, !dbg !13969
  %hwirq = getelementptr inbounds %struct.irq_data, %struct.irq_data* %6, i32 0, i32 2, !dbg !13970
  %7 = load i64, i64* %hwirq, align 8, !dbg !13970
  %conv = trunc i64 %7 to i32, !dbg !13969
  call void @gpiochip_disable_irq(%struct.gpio_chip* %5, i32 %conv) #11, !dbg !13971
  ret void, !dbg !13972
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpiochip_irq_mask(%struct.irq_data* %d) #0 !dbg !13973 {
entry:
  %d.addr = alloca %struct.irq_data*, align 8
  %gc = alloca %struct.gpio_chip*, align 8
  store %struct.irq_data* %d, %struct.irq_data** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %d.addr, metadata !13974, metadata !DIExpression()), !dbg !13975
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !13976, metadata !DIExpression()), !dbg !13977
  %0 = load %struct.irq_data*, %struct.irq_data** %d.addr, align 8, !dbg !13978
  %call = call i8* @irq_data_get_irq_chip_data(%struct.irq_data* %0) #11, !dbg !13979
  %1 = bitcast i8* %call to %struct.gpio_chip*, !dbg !13979
  store %struct.gpio_chip* %1, %struct.gpio_chip** %gc, align 8, !dbg !13977
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !13980
  %irq = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %2, i32 0, i32 35, !dbg !13982
  %irq_mask = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq, i32 0, i32 26, !dbg !13983
  %3 = load void (%struct.irq_data*)*, void (%struct.irq_data*)** %irq_mask, align 8, !dbg !13983
  %tobool = icmp ne void (%struct.irq_data*)* %3, null, !dbg !13980
  br i1 %tobool, label %if.then, label %if.end, !dbg !13984

if.then:                                          ; preds = %entry
  %4 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !13985
  %irq1 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %4, i32 0, i32 35, !dbg !13986
  %irq_mask2 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq1, i32 0, i32 26, !dbg !13987
  %5 = load void (%struct.irq_data*)*, void (%struct.irq_data*)** %irq_mask2, align 8, !dbg !13987
  %6 = load %struct.irq_data*, %struct.irq_data** %d.addr, align 8, !dbg !13988
  call void %5(%struct.irq_data* %6) #11, !dbg !13985
  br label %if.end, !dbg !13985

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !13989
  %8 = load %struct.irq_data*, %struct.irq_data** %d.addr, align 8, !dbg !13990
  %hwirq = getelementptr inbounds %struct.irq_data, %struct.irq_data* %8, i32 0, i32 2, !dbg !13991
  %9 = load i64, i64* %hwirq, align 8, !dbg !13991
  %conv = trunc i64 %9 to i32, !dbg !13990
  call void @gpiochip_disable_irq(%struct.gpio_chip* %7, i32 %conv) #11, !dbg !13992
  ret void, !dbg !13993
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpiochip_irq_unmask(%struct.irq_data* %d) #0 !dbg !13994 {
entry:
  %d.addr = alloca %struct.irq_data*, align 8
  %gc = alloca %struct.gpio_chip*, align 8
  store %struct.irq_data* %d, %struct.irq_data** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %d.addr, metadata !13995, metadata !DIExpression()), !dbg !13996
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !13997, metadata !DIExpression()), !dbg !13998
  %0 = load %struct.irq_data*, %struct.irq_data** %d.addr, align 8, !dbg !13999
  %call = call i8* @irq_data_get_irq_chip_data(%struct.irq_data* %0) #11, !dbg !14000
  %1 = bitcast i8* %call to %struct.gpio_chip*, !dbg !14000
  store %struct.gpio_chip* %1, %struct.gpio_chip** %gc, align 8, !dbg !13998
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !14001
  %3 = load %struct.irq_data*, %struct.irq_data** %d.addr, align 8, !dbg !14002
  %hwirq = getelementptr inbounds %struct.irq_data, %struct.irq_data* %3, i32 0, i32 2, !dbg !14003
  %4 = load i64, i64* %hwirq, align 8, !dbg !14003
  %conv = trunc i64 %4 to i32, !dbg !14002
  call void @gpiochip_enable_irq(%struct.gpio_chip* %2, i32 %conv) #11, !dbg !14004
  %5 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !14005
  %irq = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %5, i32 0, i32 35, !dbg !14007
  %irq_unmask = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq, i32 0, i32 25, !dbg !14008
  %6 = load void (%struct.irq_data*)*, void (%struct.irq_data*)** %irq_unmask, align 8, !dbg !14008
  %tobool = icmp ne void (%struct.irq_data*)* %6, null, !dbg !14005
  br i1 %tobool, label %if.then, label %if.end, !dbg !14009

if.then:                                          ; preds = %entry
  %7 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !14010
  %irq1 = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %7, i32 0, i32 35, !dbg !14011
  %irq_unmask2 = getelementptr inbounds %struct.gpio_irq_chip, %struct.gpio_irq_chip* %irq1, i32 0, i32 25, !dbg !14012
  %8 = load void (%struct.irq_data*)*, void (%struct.irq_data*)** %irq_unmask2, align 8, !dbg !14012
  %9 = load %struct.irq_data*, %struct.irq_data** %d.addr, align 8, !dbg !14013
  call void %8(%struct.irq_data* %9) #11, !dbg !14010
  br label %if.end, !dbg !14010

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !14014
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #0 !dbg !14015 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !14018, metadata !DIExpression()), !dbg !14020
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !14022, metadata !DIExpression()), !dbg !14023
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !14024, metadata !DIExpression()), !dbg !14026
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !14027, metadata !DIExpression()), !dbg !14029
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !14031, metadata !DIExpression()), !dbg !14032
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !14033, metadata !DIExpression()), !dbg !14034
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !14035, metadata !DIExpression()), !dbg !14036
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !14037
  %1 = load i64, i64* %nr.addr, align 8, !dbg !14038
  %div = sdiv i64 %1, 64, !dbg !14038
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !14039
  %2 = bitcast i64* %add.ptr to i8*, !dbg !14037
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !14040
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !14041
  %conv.i = trunc i64 %4 to i32, !dbg !14041
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !14042
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !14043
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !14043
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #12, !dbg !14043
  %7 = load i64, i64* %nr.addr, align 8, !dbg !14044
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !14045
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !14026
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !14026
  %11 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #7, !dbg !14026, !srcloc !14046
  store i8 %11, i8* %c.i, align 1, !dbg !14026
  %12 = load i8, i8* %c.i, align 1, !dbg !14026
  %tobool.i = trunc i8 %12 to i1, !dbg !14026
  %frombool.i = zext i1 %tobool.i to i8, !dbg !14026
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !14026
  %13 = load i8, i8* %tmp.i, align 1, !dbg !14026
  %tobool1.i = trunc i8 %13 to i1, !dbg !14026
  ret i1 %tobool1.i, !dbg !14047
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !14048 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !14049, metadata !DIExpression()), !dbg !14050
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !14051, metadata !DIExpression()), !dbg !14052
  ret i1 true, !dbg !14053
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpiod_unexport(%struct.gpio_desc* %desc) #0 !dbg !14054 {
entry:
  %desc.addr = alloca %struct.gpio_desc*, align 8
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !14055, metadata !DIExpression()), !dbg !14056
  ret void, !dbg !14057
}

; Function Attrs: noredzone
declare dso_local i64 @find_first_bit(i64*, i64) #2

; Function Attrs: noredzone
declare dso_local i64 @find_next_bit(i64*, i64, i64) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #8

; Function Attrs: noredzone
declare dso_local void @__bitmap_xor(i64*, i64*, i64*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpiochip_match_name(%struct.gpio_chip* %gc, i8* %data) #0 !dbg !14058 {
entry:
  %gc.addr = alloca %struct.gpio_chip*, align 8
  %data.addr = alloca i8*, align 8
  %name = alloca i8*, align 8
  store %struct.gpio_chip* %gc, %struct.gpio_chip** %gc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc.addr, metadata !14059, metadata !DIExpression()), !dbg !14060
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !14061, metadata !DIExpression()), !dbg !14062
  call void @llvm.dbg.declare(metadata i8** %name, metadata !14063, metadata !DIExpression()), !dbg !14064
  %0 = load i8*, i8** %data.addr, align 8, !dbg !14065
  store i8* %0, i8** %name, align 8, !dbg !14064
  %1 = load %struct.gpio_chip*, %struct.gpio_chip** %gc.addr, align 8, !dbg !14066
  %label = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %1, i32 0, i32 0, !dbg !14067
  %2 = load i8*, i8** %label, align 8, !dbg !14067
  %3 = load i8*, i8** %name, align 8, !dbg !14068
  %call = call i32 @strcmp(i8* %2, i8* %3) #11, !dbg !14069
  %tobool = icmp ne i32 %call, 0, !dbg !14070
  %lnot = xor i1 %tobool, true, !dbg !14070
  %lnot.ext = zext i1 %lnot to i32, !dbg !14070
  ret i32 %lnot.ext, !dbg !14071
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.gpiod_lookup_table* @gpiod_find_lookup_table(%struct.device* %dev) #0 !dbg !14072 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %dev_id = alloca i8*, align 8
  %table = alloca %struct.gpiod_lookup_table*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.gpiod_lookup_table*, align 8
  %__mptr13 = alloca i8*, align 8
  %tmp17 = alloca %struct.gpiod_lookup_table*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14075, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.declare(metadata i8** %dev_id, metadata !14077, metadata !DIExpression()), !dbg !14078
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14079
  %tobool = icmp ne %struct.device* %0, null, !dbg !14079
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14079

cond.true:                                        ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14080
  %call = call i8* @dev_name(%struct.device* %1) #11, !dbg !14081
  br label %cond.end, !dbg !14079

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14079

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ null, %cond.false ], !dbg !14079
  store i8* %cond, i8** %dev_id, align 8, !dbg !14078
  call void @llvm.dbg.declare(metadata %struct.gpiod_lookup_table** %table, metadata !14082, metadata !DIExpression()), !dbg !14083
  call void @mutex_lock(%struct.mutex* @gpio_lookup_lock) #11, !dbg !14084
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14085, metadata !DIExpression()), !dbg !14088
  %2 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @gpio_lookup_list, i32 0, i32 0), align 8, !dbg !14088
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !14088
  store i8* %3, i8** %__mptr, align 8, !dbg !14088
  br label %do.body, !dbg !14088

do.body:                                          ; preds = %cond.end
  br label %do.end, !dbg !14089

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !14088
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !14088
  %5 = bitcast i8* %add.ptr to %struct.gpiod_lookup_table*, !dbg !14088
  store %struct.gpiod_lookup_table* %5, %struct.gpiod_lookup_table** %tmp, align 8, !dbg !14089
  %6 = load %struct.gpiod_lookup_table*, %struct.gpiod_lookup_table** %tmp, align 8, !dbg !14088
  store %struct.gpiod_lookup_table* %6, %struct.gpiod_lookup_table** %table, align 8, !dbg !14091
  br label %for.cond, !dbg !14091

for.cond:                                         ; preds = %do.end16, %do.end
  %7 = load %struct.gpiod_lookup_table*, %struct.gpiod_lookup_table** %table, align 8, !dbg !14092
  %list = getelementptr inbounds %struct.gpiod_lookup_table, %struct.gpiod_lookup_table* %7, i32 0, i32 0, !dbg !14092
  %cmp = icmp eq %struct.list_head* %list, @gpio_lookup_list, !dbg !14092
  %lnot = xor i1 %cmp, true, !dbg !14092
  br i1 %lnot, label %for.body, label %for.end, !dbg !14091

for.body:                                         ; preds = %for.cond
  %8 = load %struct.gpiod_lookup_table*, %struct.gpiod_lookup_table** %table, align 8, !dbg !14094
  %dev_id1 = getelementptr inbounds %struct.gpiod_lookup_table, %struct.gpiod_lookup_table* %8, i32 0, i32 1, !dbg !14097
  %9 = load i8*, i8** %dev_id1, align 8, !dbg !14097
  %tobool2 = icmp ne i8* %9, null, !dbg !14094
  br i1 %tobool2, label %land.lhs.true, label %if.else, !dbg !14098

land.lhs.true:                                    ; preds = %for.body
  %10 = load i8*, i8** %dev_id, align 8, !dbg !14099
  %tobool3 = icmp ne i8* %10, null, !dbg !14099
  br i1 %tobool3, label %if.then, label %if.else, !dbg !14100

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.gpiod_lookup_table*, %struct.gpiod_lookup_table** %table, align 8, !dbg !14101
  %dev_id4 = getelementptr inbounds %struct.gpiod_lookup_table, %struct.gpiod_lookup_table* %11, i32 0, i32 1, !dbg !14104
  %12 = load i8*, i8** %dev_id4, align 8, !dbg !14104
  %13 = load i8*, i8** %dev_id, align 8, !dbg !14105
  %call5 = call i32 @strcmp(i8* %12, i8* %13) #11, !dbg !14106
  %tobool6 = icmp ne i32 %call5, 0, !dbg !14106
  br i1 %tobool6, label %if.end, label %if.then7, !dbg !14107

if.then7:                                         ; preds = %if.then
  br label %found, !dbg !14108

if.end:                                           ; preds = %if.then
  br label %if.end12, !dbg !14109

if.else:                                          ; preds = %land.lhs.true, %for.body
  %14 = load i8*, i8** %dev_id, align 8, !dbg !14110
  %15 = load %struct.gpiod_lookup_table*, %struct.gpiod_lookup_table** %table, align 8, !dbg !14113
  %dev_id8 = getelementptr inbounds %struct.gpiod_lookup_table, %struct.gpiod_lookup_table* %15, i32 0, i32 1, !dbg !14114
  %16 = load i8*, i8** %dev_id8, align 8, !dbg !14114
  %cmp9 = icmp eq i8* %14, %16, !dbg !14115
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !14116

if.then10:                                        ; preds = %if.else
  br label %found, !dbg !14117

if.end11:                                         ; preds = %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end
  br label %for.inc, !dbg !14118

for.inc:                                          ; preds = %if.end12
  call void @llvm.dbg.declare(metadata i8** %__mptr13, metadata !14119, metadata !DIExpression()), !dbg !14121
  %17 = load %struct.gpiod_lookup_table*, %struct.gpiod_lookup_table** %table, align 8, !dbg !14121
  %list14 = getelementptr inbounds %struct.gpiod_lookup_table, %struct.gpiod_lookup_table* %17, i32 0, i32 0, !dbg !14121
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list14, i32 0, i32 0, !dbg !14121
  %18 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !14121
  %19 = bitcast %struct.list_head* %18 to i8*, !dbg !14121
  store i8* %19, i8** %__mptr13, align 8, !dbg !14121
  br label %do.body15, !dbg !14121

do.body15:                                        ; preds = %for.inc
  br label %do.end16, !dbg !14122

do.end16:                                         ; preds = %do.body15
  %20 = load i8*, i8** %__mptr13, align 8, !dbg !14121
  %add.ptr18 = getelementptr i8, i8* %20, i64 0, !dbg !14121
  %21 = bitcast i8* %add.ptr18 to %struct.gpiod_lookup_table*, !dbg !14121
  store %struct.gpiod_lookup_table* %21, %struct.gpiod_lookup_table** %tmp17, align 8, !dbg !14122
  %22 = load %struct.gpiod_lookup_table*, %struct.gpiod_lookup_table** %tmp17, align 8, !dbg !14121
  store %struct.gpiod_lookup_table* %22, %struct.gpiod_lookup_table** %table, align 8, !dbg !14092
  br label %for.cond, !dbg !14092, !llvm.loop !14124

for.end:                                          ; preds = %for.cond
  store %struct.gpiod_lookup_table* null, %struct.gpiod_lookup_table** %table, align 8, !dbg !14126
  br label %found, !dbg !14127

found:                                            ; preds = %for.end, %if.then10, %if.then7
  call void @llvm.dbg.label(metadata !14128), !dbg !14129
  call void @mutex_unlock(%struct.mutex* @gpio_lookup_lock) #11, !dbg !14130
  %23 = load %struct.gpiod_lookup_table*, %struct.gpiod_lookup_table** %table, align 8, !dbg !14131
  ret %struct.gpiod_lookup_table* %23, !dbg !14132
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !14133 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !14138, metadata !DIExpression()), !dbg !14139
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !14140
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !14141
  %1 = load i8*, i8** %name, align 8, !dbg !14141
  ret i8* %1, !dbg !14142
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR_OR_NULL(i8* %ptr) #0 !dbg !14143 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !14144, metadata !DIExpression()), !dbg !14145
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !14146
  %tobool = icmp ne i8* %0, null, !dbg !14146
  %lnot = xor i1 %tobool, true, !dbg !14146
  %lnot1 = xor i1 %lnot, true, !dbg !14146
  %lnot2 = xor i1 %lnot1, true, !dbg !14146
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !14146
  %conv = sext i32 %lnot.ext to i64, !dbg !14146
  %tobool3 = icmp ne i64 %conv, 0, !dbg !14146
  br i1 %tobool3, label %lor.end, label %lor.rhs, !dbg !14147

lor.rhs:                                          ; preds = %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !14148
  %2 = ptrtoint i8* %1 to i64, !dbg !14148
  %3 = inttoptr i64 %2 to i8*, !dbg !14148
  %4 = ptrtoint i8* %3 to i64, !dbg !14148
  %cmp = icmp uge i64 %4, -4095, !dbg !14148
  %lnot5 = xor i1 %cmp, true, !dbg !14148
  %lnot7 = xor i1 %lnot5, true, !dbg !14148
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !14148
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !14148
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !14147
  br label %lor.end, !dbg !14147

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i1 [ true, %entry ], [ %tobool10, %lor.rhs ]
  ret i1 %5, !dbg !14149
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_acpi_data_node(%struct.fwnode_handle*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #1

; Function Attrs: noredzone
declare dso_local void @__bitmap_set(i64*, i32, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @bus_register(%struct.bus_type*) #2

; Function Attrs: noredzone
declare dso_local i32 @alloc_chrdev_region(i32*, i32, i32, i8*) #2

; Function Attrs: noredzone
declare dso_local void @bus_unregister(%struct.bus_type*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpiochip_setup_devs() #0 !dbg !14150 {
entry:
  %gdev = alloca %struct.gpio_device*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.gpio_device*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp5 = alloca %struct.gpio_device*, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %gdev, metadata !14151, metadata !DIExpression()), !dbg !14152
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14153, metadata !DIExpression()), !dbg !14154
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14155, metadata !DIExpression()), !dbg !14158
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @gpio_devices, i32 0, i32 0), align 8, !dbg !14158
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !14158
  store i8* %1, i8** %__mptr, align 8, !dbg !14158
  br label %do.body, !dbg !14158

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14159

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14158
  %add.ptr = getelementptr i8, i8* %2, i64 -864, !dbg !14158
  %3 = bitcast i8* %add.ptr to %struct.gpio_device*, !dbg !14158
  store %struct.gpio_device* %3, %struct.gpio_device** %tmp, align 8, !dbg !14159
  %4 = load %struct.gpio_device*, %struct.gpio_device** %tmp, align 8, !dbg !14158
  store %struct.gpio_device* %4, %struct.gpio_device** %gdev, align 8, !dbg !14161
  br label %for.cond, !dbg !14161

for.cond:                                         ; preds = %do.end4, %do.end
  %5 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !14162
  %list = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %5, i32 0, i32 11, !dbg !14162
  %cmp = icmp eq %struct.list_head* %list, @gpio_devices, !dbg !14162
  %lnot = xor i1 %cmp, true, !dbg !14162
  br i1 %lnot, label %for.body, label %for.end, !dbg !14161

for.body:                                         ; preds = %for.cond
  %6 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !14164
  %call = call i32 @gpiochip_setup_dev(%struct.gpio_device* %6) #11, !dbg !14166
  store i32 %call, i32* %ret, align 4, !dbg !14167
  %7 = load i32, i32* %ret, align 4, !dbg !14168
  %tobool = icmp ne i32 %7, 0, !dbg !14168
  br i1 %tobool, label %if.then, label %if.end, !dbg !14170

if.then:                                          ; preds = %for.body
  %8 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !14171
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %8, i32 0, i32 1, !dbg !14171
  %9 = load i32, i32* %ret, align 4, !dbg !14171
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.72, i64 0, i64 0), i32 %9) #13, !dbg !14171
  br label %if.end, !dbg !14171

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !14172

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !14173, metadata !DIExpression()), !dbg !14175
  %10 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !14175
  %list2 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %10, i32 0, i32 11, !dbg !14175
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list2, i32 0, i32 0, !dbg !14175
  %11 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !14175
  %12 = bitcast %struct.list_head* %11 to i8*, !dbg !14175
  store i8* %12, i8** %__mptr1, align 8, !dbg !14175
  br label %do.body3, !dbg !14175

do.body3:                                         ; preds = %for.inc
  br label %do.end4, !dbg !14176

do.end4:                                          ; preds = %do.body3
  %13 = load i8*, i8** %__mptr1, align 8, !dbg !14175
  %add.ptr6 = getelementptr i8, i8* %13, i64 -864, !dbg !14175
  %14 = bitcast i8* %add.ptr6 to %struct.gpio_device*, !dbg !14175
  store %struct.gpio_device* %14, %struct.gpio_device** %tmp5, align 8, !dbg !14176
  %15 = load %struct.gpio_device*, %struct.gpio_device** %tmp5, align 8, !dbg !14175
  store %struct.gpio_device* %15, %struct.gpio_device** %gdev, align 8, !dbg !14162
  br label %for.cond, !dbg !14162, !llvm.loop !14178

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14180
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone willreturn }
attributes #9 = { nounwind willreturn }
attributes #10 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noredzone }
attributes #12 = { noredzone nounwind }
attributes #13 = { cold noredzone }
attributes #14 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4619}
!llvm.module.flags = !{!4620, !4621, !4622, !4623}
!llvm.ident = !{!4624}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "gpio_lock", scope: !2, file: !3, line: 71, type: !251, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !217, globals: !4585, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/gpio/gpiolib.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !18, !24, !30, !39, !47, !53, !59, !66, !74, !80, !94, !101, !109, !115, !120, !145, !157, !166, !194, !200, !207}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !14, line: 65, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17}
!16 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !19, line: 16, baseType: !7, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22, !23}
!21 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !25, line: 54, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !31, line: 296, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36, !37, !38}
!33 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!35 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!36 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!37 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!38 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !40, line: 9, baseType: !7, size: 32, elements: !41)
!40 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!41 = !{!42, !43, !44, !45, !46}
!42 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!43 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!44 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!45 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!46 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !48, line: 26, baseType: !7, size: 32, elements: !49)
!48 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!49 = !{!50, !51, !52}
!50 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !54, line: 44, baseType: !7, size: 32, elements: !55)
!54 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!55 = !{!56, !57, !58}
!56 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!57 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!58 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !60, line: 343, baseType: !7, size: 32, elements: !61)
!60 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!61 = !{!62, !63, !64, !65}
!62 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!63 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!64 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!65 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !67, line: 524, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71, !72, !73}
!69 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!72 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!73 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!74 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !67, line: 502, baseType: !7, size: 32, elements: !75)
!75 = !{!76, !77, !78, !79}
!76 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!77 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!78 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!79 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!80 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !81, line: 76, baseType: !7, size: 32, elements: !82)
!81 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!82 = !{!83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93}
!83 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!84 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!85 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!86 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!87 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!88 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!89 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!90 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!91 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!92 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!93 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!94 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqchip_irq_state", file: !95, line: 478, baseType: !7, size: 32, elements: !96)
!95 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!96 = !{!97, !98, !99, !100}
!97 = !DIEnumerator(name: "IRQCHIP_STATE_PENDING", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "IRQCHIP_STATE_ACTIVE", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "IRQCHIP_STATE_MASKED", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "IRQCHIP_STATE_LINE_LEVEL", value: 3, isUnsigned: true)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_gc_flags", file: !102, line: 1084, baseType: !7, size: 32, elements: !103)
!102 = !DIFile(filename: "./include/linux/irq.h", directory: "/home/lizy2001/genbc/linux")
!103 = !{!104, !105, !106, !107, !108}
!104 = !DIEnumerator(name: "IRQ_GC_INIT_MASK_CACHE", value: 1, isUnsigned: true)
!105 = !DIEnumerator(name: "IRQ_GC_INIT_NESTED_LOCK", value: 2, isUnsigned: true)
!106 = !DIEnumerator(name: "IRQ_GC_MASK_CACHE_PER_TYPE", value: 4, isUnsigned: true)
!107 = !DIEnumerator(name: "IRQ_GC_NO_MASK", value: 8, isUnsigned: true)
!108 = !DIEnumerator(name: "IRQ_GC_BE_IO", value: 16, isUnsigned: true)
!109 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !110, line: 11, baseType: !7, size: 32, elements: !111)
!110 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!111 = !{!112, !113, !114}
!112 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!113 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!114 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!115 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 10, baseType: !7, size: 32, elements: !117)
!116 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!117 = !{!118, !119}
!118 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!119 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!120 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !102, line: 76, baseType: !7, size: 32, elements: !121)
!121 = !{!122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144}
!122 = !DIEnumerator(name: "IRQ_TYPE_NONE", value: 0, isUnsigned: true)
!123 = !DIEnumerator(name: "IRQ_TYPE_EDGE_RISING", value: 1, isUnsigned: true)
!124 = !DIEnumerator(name: "IRQ_TYPE_EDGE_FALLING", value: 2, isUnsigned: true)
!125 = !DIEnumerator(name: "IRQ_TYPE_EDGE_BOTH", value: 3, isUnsigned: true)
!126 = !DIEnumerator(name: "IRQ_TYPE_LEVEL_HIGH", value: 4, isUnsigned: true)
!127 = !DIEnumerator(name: "IRQ_TYPE_LEVEL_LOW", value: 8, isUnsigned: true)
!128 = !DIEnumerator(name: "IRQ_TYPE_LEVEL_MASK", value: 12, isUnsigned: true)
!129 = !DIEnumerator(name: "IRQ_TYPE_SENSE_MASK", value: 15, isUnsigned: true)
!130 = !DIEnumerator(name: "IRQ_TYPE_DEFAULT", value: 15, isUnsigned: true)
!131 = !DIEnumerator(name: "IRQ_TYPE_PROBE", value: 16, isUnsigned: true)
!132 = !DIEnumerator(name: "IRQ_LEVEL", value: 256, isUnsigned: true)
!133 = !DIEnumerator(name: "IRQ_PER_CPU", value: 512, isUnsigned: true)
!134 = !DIEnumerator(name: "IRQ_NOPROBE", value: 1024, isUnsigned: true)
!135 = !DIEnumerator(name: "IRQ_NOREQUEST", value: 2048, isUnsigned: true)
!136 = !DIEnumerator(name: "IRQ_NOAUTOEN", value: 4096, isUnsigned: true)
!137 = !DIEnumerator(name: "IRQ_NO_BALANCING", value: 8192, isUnsigned: true)
!138 = !DIEnumerator(name: "IRQ_MOVE_PCNTXT", value: 16384, isUnsigned: true)
!139 = !DIEnumerator(name: "IRQ_NESTED_THREAD", value: 32768, isUnsigned: true)
!140 = !DIEnumerator(name: "IRQ_NOTHREAD", value: 65536, isUnsigned: true)
!141 = !DIEnumerator(name: "IRQ_PER_CPU_DEVID", value: 131072, isUnsigned: true)
!142 = !DIEnumerator(name: "IRQ_IS_POLLED", value: 262144, isUnsigned: true)
!143 = !DIEnumerator(name: "IRQ_DISABLE_UNLAZY", value: 524288, isUnsigned: true)
!144 = !DIEnumerator(name: "IRQ_HIDDEN", value: 1048576, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_lookup_flags", file: !146, line: 8, baseType: !7, size: 32, elements: !147)
!146 = !DIFile(filename: "./include/linux/gpio/machine.h", directory: "/home/lizy2001/genbc/linux")
!147 = !{!148, !149, !150, !151, !152, !153, !154, !155, !156}
!148 = !DIEnumerator(name: "GPIO_ACTIVE_HIGH", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "GPIO_ACTIVE_LOW", value: 1, isUnsigned: true)
!150 = !DIEnumerator(name: "GPIO_OPEN_DRAIN", value: 2, isUnsigned: true)
!151 = !DIEnumerator(name: "GPIO_OPEN_SOURCE", value: 4, isUnsigned: true)
!152 = !DIEnumerator(name: "GPIO_PERSISTENT", value: 0, isUnsigned: true)
!153 = !DIEnumerator(name: "GPIO_TRANSITORY", value: 8, isUnsigned: true)
!154 = !DIEnumerator(name: "GPIO_PULL_UP", value: 16, isUnsigned: true)
!155 = !DIEnumerator(name: "GPIO_PULL_DOWN", value: 32, isUnsigned: true)
!156 = !DIEnumerator(name: "GPIO_LOOKUP_FLAGS_DEFAULT", value: 0, isUnsigned: true)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpiod_flags", file: !158, line: 49, baseType: !7, size: 32, elements: !159)
!158 = !DIFile(filename: "./include/linux/gpio/consumer.h", directory: "/home/lizy2001/genbc/linux")
!159 = !{!160, !161, !162, !163, !164, !165}
!160 = !DIEnumerator(name: "GPIOD_ASIS", value: 0, isUnsigned: true)
!161 = !DIEnumerator(name: "GPIOD_IN", value: 1, isUnsigned: true)
!162 = !DIEnumerator(name: "GPIOD_OUT_LOW", value: 3, isUnsigned: true)
!163 = !DIEnumerator(name: "GPIOD_OUT_HIGH", value: 7, isUnsigned: true)
!164 = !DIEnumerator(name: "GPIOD_OUT_LOW_OPEN_DRAIN", value: 11, isUnsigned: true)
!165 = !DIEnumerator(name: "GPIOD_OUT_HIGH_OPEN_DRAIN", value: 15, isUnsigned: true)
!166 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pin_config_param", file: !167, line: 111, baseType: !7, size: 32, elements: !168)
!167 = !DIFile(filename: "./include/linux/pinctrl/pinconf-generic.h", directory: "/home/lizy2001/genbc/linux")
!168 = !{!169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193}
!169 = !DIEnumerator(name: "PIN_CONFIG_BIAS_BUS_HOLD", value: 0, isUnsigned: true)
!170 = !DIEnumerator(name: "PIN_CONFIG_BIAS_DISABLE", value: 1, isUnsigned: true)
!171 = !DIEnumerator(name: "PIN_CONFIG_BIAS_HIGH_IMPEDANCE", value: 2, isUnsigned: true)
!172 = !DIEnumerator(name: "PIN_CONFIG_BIAS_PULL_DOWN", value: 3, isUnsigned: true)
!173 = !DIEnumerator(name: "PIN_CONFIG_BIAS_PULL_PIN_DEFAULT", value: 4, isUnsigned: true)
!174 = !DIEnumerator(name: "PIN_CONFIG_BIAS_PULL_UP", value: 5, isUnsigned: true)
!175 = !DIEnumerator(name: "PIN_CONFIG_DRIVE_OPEN_DRAIN", value: 6, isUnsigned: true)
!176 = !DIEnumerator(name: "PIN_CONFIG_DRIVE_OPEN_SOURCE", value: 7, isUnsigned: true)
!177 = !DIEnumerator(name: "PIN_CONFIG_DRIVE_PUSH_PULL", value: 8, isUnsigned: true)
!178 = !DIEnumerator(name: "PIN_CONFIG_DRIVE_STRENGTH", value: 9, isUnsigned: true)
!179 = !DIEnumerator(name: "PIN_CONFIG_DRIVE_STRENGTH_UA", value: 10, isUnsigned: true)
!180 = !DIEnumerator(name: "PIN_CONFIG_INPUT_DEBOUNCE", value: 11, isUnsigned: true)
!181 = !DIEnumerator(name: "PIN_CONFIG_INPUT_ENABLE", value: 12, isUnsigned: true)
!182 = !DIEnumerator(name: "PIN_CONFIG_INPUT_SCHMITT", value: 13, isUnsigned: true)
!183 = !DIEnumerator(name: "PIN_CONFIG_INPUT_SCHMITT_ENABLE", value: 14, isUnsigned: true)
!184 = !DIEnumerator(name: "PIN_CONFIG_LOW_POWER_MODE", value: 15, isUnsigned: true)
!185 = !DIEnumerator(name: "PIN_CONFIG_OUTPUT_ENABLE", value: 16, isUnsigned: true)
!186 = !DIEnumerator(name: "PIN_CONFIG_OUTPUT", value: 17, isUnsigned: true)
!187 = !DIEnumerator(name: "PIN_CONFIG_POWER_SOURCE", value: 18, isUnsigned: true)
!188 = !DIEnumerator(name: "PIN_CONFIG_SLEEP_HARDWARE_STATE", value: 19, isUnsigned: true)
!189 = !DIEnumerator(name: "PIN_CONFIG_SLEW_RATE", value: 20, isUnsigned: true)
!190 = !DIEnumerator(name: "PIN_CONFIG_SKEW_DELAY", value: 21, isUnsigned: true)
!191 = !DIEnumerator(name: "PIN_CONFIG_PERSIST_STATE", value: 22, isUnsigned: true)
!192 = !DIEnumerator(name: "PIN_CONFIG_END", value: 127, isUnsigned: true)
!193 = !DIEnumerator(name: "PIN_CONFIG_MAX", value: 255, isUnsigned: true)
!194 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !195, line: 337, baseType: !7, size: 32, elements: !196)
!195 = !DIFile(filename: "./include/uapi/linux/gpio.h", directory: "/home/lizy2001/genbc/linux")
!196 = !{!197, !198, !199}
!197 = !DIEnumerator(name: "GPIOLINE_CHANGED_REQUESTED", value: 1, isUnsigned: true)
!198 = !DIEnumerator(name: "GPIOLINE_CHANGED_RELEASED", value: 2, isUnsigned: true)
!199 = !DIEnumerator(name: "GPIOLINE_CHANGED_CONFIG", value: 3, isUnsigned: true)
!200 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !201, line: 305, baseType: !7, size: 32, elements: !202)
!201 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!202 = !{!203, !204, !205, !206}
!203 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!204 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!205 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!206 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!207 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !81, line: 191, baseType: !7, size: 32, elements: !208)
!208 = !{!209, !210, !211, !212, !213, !214, !215, !216}
!209 = !DIEnumerator(name: "IRQ_DOMAIN_FLAG_HIERARCHY", value: 1, isUnsigned: true)
!210 = !DIEnumerator(name: "IRQ_DOMAIN_NAME_ALLOCATED", value: 2, isUnsigned: true)
!211 = !DIEnumerator(name: "IRQ_DOMAIN_FLAG_IPI_PER_CPU", value: 4, isUnsigned: true)
!212 = !DIEnumerator(name: "IRQ_DOMAIN_FLAG_IPI_SINGLE", value: 8, isUnsigned: true)
!213 = !DIEnumerator(name: "IRQ_DOMAIN_FLAG_MSI", value: 16, isUnsigned: true)
!214 = !DIEnumerator(name: "IRQ_DOMAIN_FLAG_MSI_REMAP", value: 32, isUnsigned: true)
!215 = !DIEnumerator(name: "IRQ_DOMAIN_MSI_NOMASK_QUIRK", value: 64, isUnsigned: true)
!216 = !DIEnumerator(name: "IRQ_DOMAIN_FLAG_NONCORE", value: 65536, isUnsigned: true)
!217 = !{!218, !219, !814, !651, !4261, !224, !3618, !342, !3758, !4553, !4556, !4557, !4566, !4568, !4570, !327, !4571, !923, !339, !7, !292}
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !220, size: 64)
!220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_device", file: !221, line: 46, size: 7360, elements: !222)
!221 = !DIFile(filename: "drivers/gpio/gpiolib.h", directory: "/home/lizy2001/genbc/linux")
!222 = !{!223, !225, !4092, !4093, !4094, !4095, !4231, !4240, !4241, !4242, !4243, !4244, !4245}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !220, file: !221, line: 47, baseType: !224, size: 32)
!224 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !220, file: !221, line: 48, baseType: !226, size: 5568, offset: 64)
!226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !60, line: 461, size: 5568, elements: !227)
!227 = !{!228, !3324, !3326, !3329, !3330, !3381, !3472, !3473, !3474, !3475, !3476, !3485, !3590, !3603, !4019, !4020, !4024, !4026, !4027, !4028, !4032, !4038, !4039, !4042, !4043, !4044, !4045, !4046, !4047, !4048, !4080, !4081, !4082, !4085, !4088, !4089, !4090, !4091}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !226, file: !60, line: 462, baseType: !229, size: 512)
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !230, line: 64, size: 512, elements: !231)
!230 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!231 = !{!232, !236, !243, !245, !305, !3187, !3314, !3319, !3320, !3321, !3322, !3323}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !229, file: !230, line: 65, baseType: !233, size: 64)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64)
!234 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !235)
!235 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !229, file: !230, line: 66, baseType: !237, size: 128, offset: 64)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !238, line: 178, size: 128, elements: !239)
!238 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!239 = !{!240, !242}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !237, file: !238, line: 179, baseType: !241, size: 64)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 64)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !237, file: !238, line: 179, baseType: !241, size: 64, offset: 64)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !229, file: !230, line: 67, baseType: !244, size: 64, offset: 192)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !229, file: !230, line: 68, baseType: !246, size: 64, offset: 256)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !230, line: 192, size: 704, elements: !248)
!248 = !{!249, !250, !266, !267}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !247, file: !230, line: 193, baseType: !237, size: 128)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !247, file: !230, line: 194, baseType: !251, offset: 128)
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !252, line: 83, baseType: !253)
!252 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !252, line: 71, elements: !254)
!254 = !{!255}
!255 = !DIDerivedType(tag: DW_TAG_member, scope: !253, file: !252, line: 72, baseType: !256)
!256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !253, file: !252, line: 72, elements: !257)
!257 = !{!258}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !256, file: !252, line: 73, baseType: !259)
!259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !252, line: 20, elements: !260)
!260 = !{!261}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !259, file: !252, line: 21, baseType: !262)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !263, line: 25, baseType: !264)
!263 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !263, line: 25, elements: !265)
!265 = !{}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !247, file: !230, line: 195, baseType: !229, size: 512, offset: 128)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !247, file: !230, line: 196, baseType: !268, size: 64, offset: 640)
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !270)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !230, line: 156, size: 192, elements: !271)
!271 = !{!272, !277, !282}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !270, file: !230, line: 157, baseType: !273, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !274)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64)
!275 = !DISubroutineType(types: !276)
!276 = !{!224, !246, !244}
!277 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !270, file: !230, line: 158, baseType: !278, size: 64, offset: 64)
!278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !279)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!280 = !DISubroutineType(types: !281)
!281 = !{!233, !246, !244}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !270, file: !230, line: 159, baseType: !283, size: 64, offset: 128)
!283 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !284)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!285 = !DISubroutineType(types: !286)
!286 = !{!224, !246, !244, !287}
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !230, line: 148, size: 20736, elements: !289)
!289 = !{!290, !295, !299, !300, !304}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !288, file: !230, line: 149, baseType: !291, size: 192)
!291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !292, size: 192, elements: !293)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64)
!293 = !{!294}
!294 = !DISubrange(count: 3)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !288, file: !230, line: 150, baseType: !296, size: 4096, offset: 192)
!296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !292, size: 4096, elements: !297)
!297 = !{!298}
!298 = !DISubrange(count: 64)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !288, file: !230, line: 151, baseType: !224, size: 32, offset: 4288)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !288, file: !230, line: 152, baseType: !301, size: 16384, offset: 4320)
!301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !235, size: 16384, elements: !302)
!302 = !{!303}
!303 = !DISubrange(count: 2048)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !288, file: !230, line: 153, baseType: !224, size: 32, offset: 20704)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !229, file: !230, line: 69, baseType: !306, size: 64, offset: 320)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 64)
!307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !230, line: 138, size: 448, elements: !308)
!308 = !{!309, !313, !343, !345, !3149, !3177, !3181}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !307, file: !230, line: 139, baseType: !310, size: 64)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!311 = !DISubroutineType(types: !312)
!312 = !{null, !244}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !307, file: !230, line: 140, baseType: !314, size: 64, offset: 64)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!315 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !316)
!316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !317, line: 230, size: 128, elements: !318)
!317 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!318 = !{!319, !335}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !316, file: !317, line: 231, baseType: !320, size: 64)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64)
!321 = !DISubroutineType(types: !322)
!322 = !{!323, !244, !328, !292}
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !238, line: 60, baseType: !324)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !325, line: 73, baseType: !326)
!325 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!326 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !325, line: 15, baseType: !327)
!327 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !317, line: 30, size: 128, elements: !330)
!330 = !{!331, !332}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !329, file: !317, line: 31, baseType: !233, size: 64)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !329, file: !317, line: 32, baseType: !333, size: 16, offset: 64)
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !238, line: 19, baseType: !334)
!334 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !316, file: !317, line: 232, baseType: !336, size: 64, offset: 64)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64)
!337 = !DISubroutineType(types: !338)
!338 = !{!323, !244, !328, !233, !339}
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !238, line: 55, baseType: !340)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !325, line: 72, baseType: !341)
!341 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !325, line: 16, baseType: !342)
!342 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !307, file: !230, line: 141, baseType: !344, size: 64, offset: 128)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !307, file: !230, line: 142, baseType: !346, size: 64, offset: 192)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !348, size: 64)
!348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !349)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !317, line: 84, size: 320, elements: !350)
!350 = !{!351, !352, !356, !3146, !3147}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !349, file: !317, line: 85, baseType: !233, size: 64)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !349, file: !317, line: 86, baseType: !353, size: 64, offset: 64)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!354 = !DISubroutineType(types: !355)
!355 = !{!333, !244, !328, !224}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !349, file: !317, line: 88, baseType: !357, size: 64, offset: 128)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!358 = !DISubroutineType(types: !359)
!359 = !{!333, !244, !360, !224}
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !317, line: 168, size: 448, elements: !362)
!362 = !{!363, !364, !365, !366, !3141, !3142}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !361, file: !317, line: 169, baseType: !329, size: 128)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !361, file: !317, line: 170, baseType: !339, size: 64, offset: 128)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !361, file: !317, line: 171, baseType: !218, size: 64, offset: 192)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !361, file: !317, line: 172, baseType: !367, size: 64, offset: 256)
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!368 = !DISubroutineType(types: !369)
!369 = !{!323, !370, !244, !360, !292, !549, !339}
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !31, line: 916, size: 1856, align: 32, elements: !372)
!372 = !{!373, !391, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3124, !3125, !3134, !3135, !3136, !3137, !3138, !3139, !3140}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !371, file: !31, line: 920, baseType: !374, size: 128)
!374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !371, file: !31, line: 917, size: 128, elements: !375)
!375 = !{!376, !382}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !374, file: !31, line: 918, baseType: !377, size: 64)
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !378, line: 58, size: 64, elements: !379)
!378 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!379 = !{!380}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !377, file: !378, line: 59, baseType: !381, size: 64)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !374, file: !31, line: 919, baseType: !383, size: 128, align: 64)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !238, line: 216, size: 128, align: 64, elements: !384)
!384 = !{!385, !387}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !383, file: !238, line: 217, baseType: !386, size: 64)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !383, file: !238, line: 218, baseType: !388, size: 64, offset: 64)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64)
!389 = !DISubroutineType(types: !390)
!390 = !{null, !386}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !371, file: !31, line: 921, baseType: !392, size: 128, offset: 128)
!392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !393, line: 8, size: 128, elements: !394)
!393 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!394 = !{!395, !399}
!395 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !392, file: !393, line: 9, baseType: !396, size: 64)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !398, line: 18, flags: DIFlagFwdDecl)
!398 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!399 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !392, file: !393, line: 10, baseType: !400, size: 64, offset: 64)
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 64)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !398, line: 89, size: 1536, elements: !402)
!402 = !{!403, !404, !414, !422, !423, !446, !3074, !3076, !3088, !3089, !3090, !3091, !3092, !3098, !3099, !3100}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !401, file: !398, line: 91, baseType: !7, size: 32)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !401, file: !398, line: 92, baseType: !405, size: 32, offset: 32)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !406, line: 277, baseType: !407)
!406 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !406, line: 277, size: 32, elements: !408)
!408 = !{!409}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !407, file: !406, line: 277, baseType: !410, size: 32)
!410 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !406, line: 70, baseType: !411)
!411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !406, line: 65, size: 32, elements: !412)
!412 = !{!413}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !411, file: !406, line: 66, baseType: !7, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !401, file: !398, line: 93, baseType: !415, size: 128, offset: 64)
!415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !416, line: 38, size: 128, elements: !417)
!416 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!417 = !{!418, !420}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !415, file: !416, line: 39, baseType: !419, size: 64)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !415, file: !416, line: 39, baseType: !421, size: 64, offset: 64)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !401, file: !398, line: 94, baseType: !400, size: 64, offset: 192)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !401, file: !398, line: 95, baseType: !424, size: 128, offset: 256)
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !398, line: 47, size: 128, elements: !425)
!425 = !{!426, !442}
!426 = !DIDerivedType(tag: DW_TAG_member, scope: !424, file: !398, line: 48, baseType: !427, size: 64)
!427 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !424, file: !398, line: 48, size: 64, elements: !428)
!428 = !{!429, !438}
!429 = !DIDerivedType(tag: DW_TAG_member, scope: !427, file: !398, line: 49, baseType: !430, size: 64)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !427, file: !398, line: 49, size: 64, elements: !431)
!431 = !{!432, !437}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !430, file: !398, line: 50, baseType: !433, size: 32)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !434, line: 21, baseType: !435)
!434 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!435 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !436, line: 27, baseType: !7)
!436 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!437 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !430, file: !398, line: 50, baseType: !433, size: 32, offset: 32)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !427, file: !398, line: 52, baseType: !439, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !434, line: 23, baseType: !440)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !436, line: 31, baseType: !441)
!441 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !424, file: !398, line: 54, baseType: !443, size: 64, offset: 64)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!444 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !445)
!445 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !401, file: !398, line: 96, baseType: !447, size: 64, offset: 384)
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 64)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !31, line: 610, size: 4224, elements: !449)
!449 = !{!450, !451, !452, !460, !467, !468, !616, !2778, !2779, !2780, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !3042, !3050, !3051, !3052, !3070, !3071, !3072, !3073}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !448, file: !31, line: 611, baseType: !333, size: 16)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !448, file: !31, line: 612, baseType: !334, size: 16, offset: 16)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !448, file: !31, line: 613, baseType: !453, size: 32, offset: 32)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !454, line: 23, baseType: !455)
!454 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !454, line: 21, size: 32, elements: !456)
!456 = !{!457}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !455, file: !454, line: 22, baseType: !458, size: 32)
!458 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !238, line: 32, baseType: !459)
!459 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !325, line: 49, baseType: !7)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !448, file: !31, line: 614, baseType: !461, size: 32, offset: 64)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !454, line: 28, baseType: !462)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !454, line: 26, size: 32, elements: !463)
!463 = !{!464}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !462, file: !454, line: 27, baseType: !465, size: 32)
!465 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !238, line: 33, baseType: !466)
!466 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !325, line: 50, baseType: !7)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !448, file: !31, line: 615, baseType: !7, size: 32, offset: 96)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !448, file: !31, line: 622, baseType: !469, size: 64, offset: 128)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64)
!470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !471)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !31, line: 1864, size: 1536, align: 512, elements: !472)
!472 = !{!473, !477, !490, !494, !500, !504, !510, !514, !518, !522, !526, !527, !533, !537, !563, !592, !596, !602, !607, !611, !612}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !471, file: !31, line: 1865, baseType: !474, size: 64)
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!475 = !DISubroutineType(types: !476)
!476 = !{!400, !447, !400, !7}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !471, file: !31, line: 1866, baseType: !478, size: 64, offset: 64)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!479 = !DISubroutineType(types: !480)
!480 = !{!233, !400, !447, !481}
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !483, line: 10, size: 128, elements: !484)
!483 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!484 = !{!485, !489}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !482, file: !483, line: 11, baseType: !486, size: 64)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64)
!487 = !DISubroutineType(types: !488)
!488 = !{null, !218}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !482, file: !483, line: 12, baseType: !218, size: 64, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !471, file: !31, line: 1867, baseType: !491, size: 64, offset: 128)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!492 = !DISubroutineType(types: !493)
!493 = !{!224, !447, !224}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !471, file: !31, line: 1868, baseType: !495, size: 64, offset: 192)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!496 = !DISubroutineType(types: !497)
!497 = !{!498, !447, !224}
!498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 64)
!499 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !31, line: 581, flags: DIFlagFwdDecl)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !471, file: !31, line: 1870, baseType: !501, size: 64, offset: 256)
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !502, size: 64)
!502 = !DISubroutineType(types: !503)
!503 = !{!224, !400, !292, !224}
!504 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !471, file: !31, line: 1872, baseType: !505, size: 64, offset: 320)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64)
!506 = !DISubroutineType(types: !507)
!507 = !{!224, !447, !400, !333, !508}
!508 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !238, line: 30, baseType: !509)
!509 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !471, file: !31, line: 1873, baseType: !511, size: 64, offset: 384)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64)
!512 = !DISubroutineType(types: !513)
!513 = !{!224, !400, !447, !400}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !471, file: !31, line: 1874, baseType: !515, size: 64, offset: 448)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = !DISubroutineType(types: !517)
!517 = !{!224, !447, !400}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !471, file: !31, line: 1875, baseType: !519, size: 64, offset: 512)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!520 = !DISubroutineType(types: !521)
!521 = !{!224, !447, !400, !233}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !471, file: !31, line: 1876, baseType: !523, size: 64, offset: 576)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64)
!524 = !DISubroutineType(types: !525)
!525 = !{!224, !447, !400, !333}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !471, file: !31, line: 1877, baseType: !515, size: 64, offset: 640)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !471, file: !31, line: 1878, baseType: !528, size: 64, offset: 704)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 64)
!529 = !DISubroutineType(types: !530)
!530 = !{!224, !447, !400, !333, !531}
!531 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !238, line: 16, baseType: !532)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !238, line: 13, baseType: !433)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !471, file: !31, line: 1879, baseType: !534, size: 64, offset: 768)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64)
!535 = !DISubroutineType(types: !536)
!536 = !{!224, !447, !400, !447, !400, !7}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !471, file: !31, line: 1881, baseType: !538, size: 64, offset: 832)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!539 = !DISubroutineType(types: !540)
!540 = !{!224, !400, !541}
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !31, line: 219, size: 640, elements: !543)
!543 = !{!544, !545, !546, !547, !548, !552, !560, !561, !562}
!544 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !542, file: !31, line: 220, baseType: !7, size: 32)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !542, file: !31, line: 221, baseType: !333, size: 16, offset: 32)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !542, file: !31, line: 222, baseType: !453, size: 32, offset: 64)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !542, file: !31, line: 223, baseType: !461, size: 32, offset: 96)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !542, file: !31, line: 224, baseType: !549, size: 64, offset: 128)
!549 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !238, line: 46, baseType: !550)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !325, line: 88, baseType: !551)
!551 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !542, file: !31, line: 225, baseType: !553, size: 128, offset: 192)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !554, line: 13, size: 128, elements: !555)
!554 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!555 = !{!556, !559}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !553, file: !554, line: 14, baseType: !557, size: 64)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !554, line: 8, baseType: !558)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !436, line: 30, baseType: !551)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !553, file: !554, line: 15, baseType: !327, size: 64, offset: 64)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !542, file: !31, line: 226, baseType: !553, size: 128, offset: 320)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !542, file: !31, line: 227, baseType: !553, size: 128, offset: 448)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !542, file: !31, line: 234, baseType: !370, size: 64, offset: 576)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !471, file: !31, line: 1882, baseType: !564, size: 64, offset: 896)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!565 = !DISubroutineType(types: !566)
!566 = !{!224, !567, !569, !433, !7}
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !392)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !571, line: 22, size: 1152, elements: !572)
!571 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!572 = !{!573, !574, !575, !576, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !570, file: !571, line: 23, baseType: !433, size: 32)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !570, file: !571, line: 24, baseType: !333, size: 16, offset: 32)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !570, file: !571, line: 25, baseType: !7, size: 32, offset: 64)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !570, file: !571, line: 26, baseType: !577, size: 32, offset: 96)
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !238, line: 104, baseType: !433)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !570, file: !571, line: 27, baseType: !439, size: 64, offset: 128)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !570, file: !571, line: 28, baseType: !439, size: 64, offset: 192)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !570, file: !571, line: 37, baseType: !439, size: 64, offset: 256)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !570, file: !571, line: 38, baseType: !531, size: 32, offset: 320)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !570, file: !571, line: 39, baseType: !531, size: 32, offset: 352)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !570, file: !571, line: 40, baseType: !453, size: 32, offset: 384)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !570, file: !571, line: 41, baseType: !461, size: 32, offset: 416)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !570, file: !571, line: 42, baseType: !549, size: 64, offset: 448)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !570, file: !571, line: 43, baseType: !553, size: 128, offset: 512)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !570, file: !571, line: 44, baseType: !553, size: 128, offset: 640)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !570, file: !571, line: 45, baseType: !553, size: 128, offset: 768)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !570, file: !571, line: 46, baseType: !553, size: 128, offset: 896)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !570, file: !571, line: 47, baseType: !439, size: 64, offset: 1024)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !570, file: !571, line: 48, baseType: !439, size: 64, offset: 1088)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !471, file: !31, line: 1883, baseType: !593, size: 64, offset: 960)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!594 = !DISubroutineType(types: !595)
!595 = !{!323, !400, !292, !339}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !471, file: !31, line: 1884, baseType: !597, size: 64, offset: 1024)
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = !DISubroutineType(types: !599)
!599 = !{!224, !447, !600, !439, !439}
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64)
!601 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !31, line: 50, flags: DIFlagFwdDecl)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !471, file: !31, line: 1886, baseType: !603, size: 64, offset: 1088)
!603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64)
!604 = !DISubroutineType(types: !605)
!605 = !{!224, !447, !606, !224}
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !471, file: !31, line: 1887, baseType: !608, size: 64, offset: 1152)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = !DISubroutineType(types: !610)
!610 = !{!224, !447, !400, !370, !7, !333}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !471, file: !31, line: 1890, baseType: !523, size: 64, offset: 1216)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !471, file: !31, line: 1891, baseType: !613, size: 64, offset: 1280)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = !DISubroutineType(types: !615)
!615 = !{!224, !447, !498, !224}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !448, file: !31, line: 623, baseType: !617, size: 64, offset: 192)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !31, line: 1416, size: 9472, elements: !619)
!619 = !{!620, !621, !622, !623, !624, !625, !675, !2385, !2467, !2550, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2566, !2570, !2571, !2574, !2575, !2578, !2579, !2580, !2621, !2648, !2649, !2650, !2651, !2652, !2653, !2656, !2658, !2665, !2666, !2668, !2669, !2670, !2729, !2730, !2745, !2746, !2747, !2748, !2749, !2752, !2753, !2754, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !618, file: !31, line: 1417, baseType: !237, size: 128)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !618, file: !31, line: 1418, baseType: !531, size: 32, offset: 128)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !618, file: !31, line: 1419, baseType: !445, size: 8, offset: 160)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !618, file: !31, line: 1420, baseType: !342, size: 64, offset: 192)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !618, file: !31, line: 1421, baseType: !549, size: 64, offset: 256)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !618, file: !31, line: 1422, baseType: !626, size: 64, offset: 320)
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !31, line: 2228, size: 576, elements: !628)
!628 = !{!629, !630, !631, !638, !642, !646, !650, !654, !655, !665, !668, !669, !670, !672, !673, !674}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !627, file: !31, line: 2229, baseType: !233, size: 64)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !627, file: !31, line: 2230, baseType: !224, size: 32, offset: 64)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !627, file: !31, line: 2238, baseType: !632, size: 64, offset: 128)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!633 = !DISubroutineType(types: !634)
!634 = !{!224, !635}
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64)
!636 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !637, line: 28, flags: DIFlagFwdDecl)
!637 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!638 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !627, file: !31, line: 2239, baseType: !639, size: 64, offset: 192)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !641)
!641 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !31, line: 70, flags: DIFlagFwdDecl)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !627, file: !31, line: 2240, baseType: !643, size: 64, offset: 256)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = !DISubroutineType(types: !645)
!645 = !{!400, !626, !224, !233, !218}
!646 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !627, file: !31, line: 2242, baseType: !647, size: 64, offset: 320)
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!648 = !DISubroutineType(types: !649)
!649 = !{null, !617}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !627, file: !31, line: 2243, baseType: !651, size: 64, offset: 384)
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 64)
!652 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !653, line: 76, flags: DIFlagFwdDecl)
!653 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!654 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !627, file: !31, line: 2244, baseType: !626, size: 64, offset: 448)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !627, file: !31, line: 2245, baseType: !656, size: 64, offset: 512)
!656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !238, line: 182, size: 64, elements: !657)
!657 = !{!658}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !656, file: !238, line: 183, baseType: !659, size: 64)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !238, line: 186, size: 128, elements: !661)
!661 = !{!662, !663}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !660, file: !238, line: 187, baseType: !659, size: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !660, file: !238, line: 187, baseType: !664, size: 64, offset: 64)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !627, file: !31, line: 2247, baseType: !666, offset: 576)
!666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !667, line: 187, elements: !265)
!667 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!668 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !627, file: !31, line: 2248, baseType: !666, offset: 576)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !627, file: !31, line: 2249, baseType: !666, offset: 576)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !627, file: !31, line: 2250, baseType: !671, offset: 576)
!671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !666, elements: !293)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !627, file: !31, line: 2252, baseType: !666, offset: 576)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !627, file: !31, line: 2253, baseType: !666, offset: 576)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !627, file: !31, line: 2254, baseType: !666, offset: 576)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !618, file: !31, line: 1423, baseType: !676, size: 64, offset: 384)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !678)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !31, line: 1935, size: 1472, elements: !679)
!679 = !{!680, !684, !688, !689, !693, !699, !703, !704, !705, !709, !713, !714, !715, !716, !722, !727, !728, !784, !785, !786, !787, !2369, !2384}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !678, file: !31, line: 1936, baseType: !681, size: 64)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = !DISubroutineType(types: !683)
!683 = !{!447, !617}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !678, file: !31, line: 1937, baseType: !685, size: 64, offset: 64)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = !DISubroutineType(types: !687)
!687 = !{null, !447}
!688 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !678, file: !31, line: 1938, baseType: !685, size: 64, offset: 128)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !678, file: !31, line: 1940, baseType: !690, size: 64, offset: 192)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!691 = !DISubroutineType(types: !692)
!692 = !{null, !447, !224}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !678, file: !31, line: 1941, baseType: !694, size: 64, offset: 256)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = !DISubroutineType(types: !696)
!696 = !{!224, !447, !697}
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !31, line: 289, flags: DIFlagFwdDecl)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !678, file: !31, line: 1942, baseType: !700, size: 64, offset: 320)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DISubroutineType(types: !702)
!702 = !{!224, !447}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !678, file: !31, line: 1943, baseType: !685, size: 64, offset: 384)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !678, file: !31, line: 1944, baseType: !647, size: 64, offset: 448)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !678, file: !31, line: 1945, baseType: !706, size: 64, offset: 512)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!707 = !DISubroutineType(types: !708)
!708 = !{!224, !617, !224}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !678, file: !31, line: 1946, baseType: !710, size: 64, offset: 576)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DISubroutineType(types: !712)
!712 = !{!224, !617}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !678, file: !31, line: 1947, baseType: !710, size: 64, offset: 640)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !678, file: !31, line: 1948, baseType: !710, size: 64, offset: 704)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !678, file: !31, line: 1949, baseType: !710, size: 64, offset: 768)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !678, file: !31, line: 1950, baseType: !717, size: 64, offset: 832)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DISubroutineType(types: !719)
!719 = !{!224, !400, !720}
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64)
!721 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !31, line: 57, flags: DIFlagFwdDecl)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !678, file: !31, line: 1951, baseType: !723, size: 64, offset: 896)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!724 = !DISubroutineType(types: !725)
!725 = !{!224, !617, !726, !292}
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !678, file: !31, line: 1952, baseType: !647, size: 64, offset: 960)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !678, file: !31, line: 1954, baseType: !729, size: 64, offset: 1024)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DISubroutineType(types: !731)
!731 = !{!224, !732, !400}
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !734, line: 16, size: 896, elements: !735)
!734 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!735 = !{!736, !737, !738, !739, !740, !741, !742, !743, !757, !779, !780, !783}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !733, file: !734, line: 17, baseType: !292, size: 64)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !733, file: !734, line: 18, baseType: !339, size: 64, offset: 64)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !733, file: !734, line: 19, baseType: !339, size: 64, offset: 128)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !733, file: !734, line: 20, baseType: !339, size: 64, offset: 192)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !733, file: !734, line: 21, baseType: !339, size: 64, offset: 256)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !733, file: !734, line: 22, baseType: !549, size: 64, offset: 320)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !733, file: !734, line: 23, baseType: !549, size: 64, offset: 384)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !733, file: !734, line: 24, baseType: !744, size: 192, offset: 448)
!744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !745, line: 53, size: 192, elements: !746)
!745 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!746 = !{!747, !755, !756}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !744, file: !745, line: 54, baseType: !748, size: 64)
!748 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !749, line: 13, baseType: !750)
!749 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!750 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !238, line: 175, baseType: !751)
!751 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !238, line: 173, size: 64, elements: !752)
!752 = !{!753}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !751, file: !238, line: 174, baseType: !754, size: 64)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !434, line: 22, baseType: !558)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !744, file: !745, line: 55, baseType: !251, offset: 64)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !744, file: !745, line: 59, baseType: !237, size: 128, offset: 64)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !733, file: !734, line: 25, baseType: !758, size: 64, offset: 640)
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !760)
!760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !734, line: 31, size: 256, elements: !761)
!761 = !{!762, !767, !771, !775}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !760, file: !734, line: 32, baseType: !763, size: 64)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = !DISubroutineType(types: !765)
!765 = !{!218, !732, !766}
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !760, file: !734, line: 33, baseType: !768, size: 64, offset: 64)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DISubroutineType(types: !770)
!770 = !{null, !732, !218}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !760, file: !734, line: 34, baseType: !772, size: 64, offset: 128)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!773 = !DISubroutineType(types: !774)
!774 = !{!218, !732, !218, !766}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !760, file: !734, line: 35, baseType: !776, size: 64, offset: 192)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DISubroutineType(types: !778)
!778 = !{!224, !732, !218}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !733, file: !734, line: 26, baseType: !224, size: 32, offset: 704)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !733, file: !734, line: 27, baseType: !781, size: 64, offset: 768)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !371)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !733, file: !734, line: 28, baseType: !218, size: 64, offset: 832)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !678, file: !31, line: 1955, baseType: !729, size: 64, offset: 1088)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !678, file: !31, line: 1956, baseType: !729, size: 64, offset: 1152)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !678, file: !31, line: 1957, baseType: !729, size: 64, offset: 1216)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !678, file: !31, line: 1963, baseType: !788, size: 64, offset: 1280)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = !DISubroutineType(types: !790)
!790 = !{!224, !617, !791, !814}
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !793, line: 68, size: 512, align: 128, elements: !794)
!793 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!794 = !{!795, !796, !2361, !2368}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !792, file: !793, line: 69, baseType: !342, size: 64)
!796 = !DIDerivedType(tag: DW_TAG_member, scope: !792, file: !793, line: 77, baseType: !797, size: 320, offset: 64)
!797 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !792, file: !793, line: 77, size: 320, elements: !798)
!798 = !{!799, !1020, !1025, !1053, !1061, !1067, !2353, !2360}
!799 = !DIDerivedType(tag: DW_TAG_member, scope: !797, file: !793, line: 78, baseType: !800, size: 320)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !797, file: !793, line: 78, size: 320, elements: !801)
!801 = !{!802, !803, !1018, !1019}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !800, file: !793, line: 84, baseType: !237, size: 128)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !800, file: !793, line: 86, baseType: !804, size: 64, offset: 128)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !31, line: 451, size: 1216, align: 64, elements: !806)
!806 = !{!807, !808, !816, !817, !822, !837, !846, !847, !848, !849, !1011, !1012, !1015, !1016, !1017}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !805, file: !31, line: 452, baseType: !447, size: 64)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !805, file: !31, line: 453, baseType: !809, size: 128, offset: 64)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !810, line: 292, size: 128, elements: !811)
!810 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!811 = !{!812, !813, !815}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !809, file: !810, line: 293, baseType: !251)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !809, file: !810, line: 295, baseType: !814, size: 32)
!814 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !238, line: 148, baseType: !7)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !809, file: !810, line: 296, baseType: !218, size: 64, offset: 64)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !805, file: !31, line: 454, baseType: !814, size: 32, offset: 192)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !805, file: !31, line: 455, baseType: !818, size: 32, offset: 224)
!818 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !238, line: 168, baseType: !819)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !238, line: 166, size: 32, elements: !820)
!820 = !{!821}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !819, file: !238, line: 167, baseType: !224, size: 32)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !805, file: !31, line: 460, baseType: !823, size: 128, offset: 256)
!823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !824, line: 125, size: 128, elements: !825)
!824 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!825 = !{!826, !836}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !823, file: !824, line: 126, baseType: !827, size: 64)
!827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !824, line: 31, size: 64, elements: !828)
!828 = !{!829}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !827, file: !824, line: 32, baseType: !830, size: 64)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !824, line: 24, size: 192, align: 64, elements: !832)
!832 = !{!833, !834, !835}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !831, file: !824, line: 25, baseType: !342, size: 64)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !831, file: !824, line: 26, baseType: !830, size: 64, offset: 64)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !831, file: !824, line: 27, baseType: !830, size: 64, offset: 128)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !823, file: !824, line: 127, baseType: !830, size: 64, offset: 64)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !805, file: !31, line: 461, baseType: !838, size: 256, offset: 384)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !839, line: 35, size: 256, elements: !840)
!839 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!840 = !{!841, !842, !843, !845}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !838, file: !839, line: 36, baseType: !748, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !838, file: !839, line: 42, baseType: !748, size: 64, offset: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !838, file: !839, line: 46, baseType: !844, offset: 128)
!844 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !252, line: 29, baseType: !259)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !838, file: !839, line: 47, baseType: !237, size: 128, offset: 128)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !805, file: !31, line: 462, baseType: !342, size: 64, offset: 640)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !805, file: !31, line: 463, baseType: !342, size: 64, offset: 704)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !805, file: !31, line: 464, baseType: !342, size: 64, offset: 768)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !805, file: !31, line: 465, baseType: !850, size: 64, offset: 832)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !852)
!852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !31, line: 367, size: 1408, elements: !853)
!853 = !{!854, !858, !862, !866, !870, !874, !880, !886, !890, !895, !899, !903, !907, !975, !979, !985, !986, !987, !991, !996, !1000, !1007}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !852, file: !31, line: 368, baseType: !855, size: 64)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!856 = !DISubroutineType(types: !857)
!857 = !{!224, !791, !697}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !852, file: !31, line: 369, baseType: !859, size: 64, offset: 64)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = !DISubroutineType(types: !861)
!861 = !{!224, !370, !791}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !852, file: !31, line: 372, baseType: !863, size: 64, offset: 128)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = !DISubroutineType(types: !865)
!865 = !{!224, !804, !697}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !852, file: !31, line: 375, baseType: !867, size: 64, offset: 192)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = !DISubroutineType(types: !869)
!869 = !{!224, !791}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !852, file: !31, line: 381, baseType: !871, size: 64, offset: 256)
!871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 64)
!872 = !DISubroutineType(types: !873)
!873 = !{!224, !370, !804, !241, !7}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !852, file: !31, line: 383, baseType: !875, size: 64, offset: 320)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64)
!876 = !DISubroutineType(types: !877)
!877 = !{null, !878}
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 64)
!879 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !31, line: 290, flags: DIFlagFwdDecl)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !852, file: !31, line: 385, baseType: !881, size: 64, offset: 384)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!882 = !DISubroutineType(types: !883)
!883 = !{!224, !370, !804, !549, !7, !7, !884, !885}
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !852, file: !31, line: 388, baseType: !887, size: 64, offset: 448)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = !DISubroutineType(types: !889)
!889 = !{!224, !370, !804, !549, !7, !7, !791, !218}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !852, file: !31, line: 393, baseType: !891, size: 64, offset: 512)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = !DISubroutineType(types: !893)
!893 = !{!894, !804, !894}
!894 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !238, line: 125, baseType: !439)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !852, file: !31, line: 394, baseType: !896, size: 64, offset: 576)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = !DISubroutineType(types: !898)
!898 = !{null, !791, !7, !7}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !852, file: !31, line: 395, baseType: !900, size: 64, offset: 640)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DISubroutineType(types: !902)
!902 = !{!224, !791, !814}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !852, file: !31, line: 396, baseType: !904, size: 64, offset: 704)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DISubroutineType(types: !906)
!906 = !{null, !791}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !852, file: !31, line: 397, baseType: !908, size: 64, offset: 768)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DISubroutineType(types: !910)
!910 = !{!323, !911, !933}
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !31, line: 320, size: 384, elements: !913)
!913 = !{!914, !915, !916, !920, !921, !922, !925, !926}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !912, file: !31, line: 321, baseType: !370, size: 64)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !912, file: !31, line: 326, baseType: !549, size: 64, offset: 64)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !912, file: !31, line: 327, baseType: !917, size: 64, offset: 128)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DISubroutineType(types: !919)
!919 = !{null, !911, !327, !327}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !912, file: !31, line: 328, baseType: !218, size: 64, offset: 192)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !912, file: !31, line: 329, baseType: !224, size: 32, offset: 256)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !912, file: !31, line: 330, baseType: !923, size: 16, offset: 288)
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !434, line: 19, baseType: !924)
!924 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !436, line: 24, baseType: !334)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !912, file: !31, line: 331, baseType: !923, size: 16, offset: 304)
!926 = !DIDerivedType(tag: DW_TAG_member, scope: !912, file: !31, line: 332, baseType: !927, size: 64, offset: 320)
!927 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !912, file: !31, line: 332, size: 64, elements: !928)
!928 = !{!929, !930}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !927, file: !31, line: 333, baseType: !7, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !927, file: !31, line: 334, baseType: !931, size: 64)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !31, line: 334, flags: DIFlagFwdDecl)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !935, line: 29, size: 320, elements: !936)
!935 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!936 = !{!937, !938, !939, !940, !966}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !934, file: !935, line: 35, baseType: !7, size: 32)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !934, file: !935, line: 36, baseType: !339, size: 64, offset: 64)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !934, file: !935, line: 37, baseType: !339, size: 64, offset: 128)
!940 = !DIDerivedType(tag: DW_TAG_member, scope: !934, file: !935, line: 38, baseType: !941, size: 64, offset: 192)
!941 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !934, file: !935, line: 38, size: 64, elements: !942)
!942 = !{!943, !951, !958, !962}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !941, file: !935, line: 39, baseType: !944, size: 64)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64)
!945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !946)
!946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !947, line: 17, size: 128, elements: !948)
!947 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!948 = !{!949, !950}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !946, file: !947, line: 19, baseType: !218, size: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !946, file: !947, line: 20, baseType: !340, size: 64, offset: 64)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !941, file: !935, line: 40, baseType: !952, size: 64)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!953 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !954)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !935, line: 15, size: 128, elements: !955)
!955 = !{!956, !957}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !954, file: !935, line: 16, baseType: !218, size: 64)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !954, file: !935, line: 17, baseType: !339, size: 64, offset: 64)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !941, file: !935, line: 41, baseType: !959, size: 64)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !961)
!961 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !935, line: 41, flags: DIFlagFwdDecl)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !941, file: !935, line: 42, baseType: !963, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64)
!964 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !965, line: 53, flags: DIFlagFwdDecl)
!965 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!966 = !DIDerivedType(tag: DW_TAG_member, scope: !934, file: !935, line: 44, baseType: !967, size: 64, offset: 256)
!967 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !934, file: !935, line: 44, size: 64, elements: !968)
!968 = !{!969, !970}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !967, file: !935, line: 45, baseType: !342, size: 64)
!970 = !DIDerivedType(tag: DW_TAG_member, scope: !967, file: !935, line: 46, baseType: !971, size: 64)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !967, file: !935, line: 46, size: 64, elements: !972)
!972 = !{!973, !974}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !971, file: !935, line: 47, baseType: !7, size: 32)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !971, file: !935, line: 48, baseType: !7, size: 32, offset: 32)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !852, file: !31, line: 402, baseType: !976, size: 64, offset: 832)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 64)
!977 = !DISubroutineType(types: !978)
!978 = !{!224, !804, !791, !791, !5}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !852, file: !31, line: 404, baseType: !980, size: 64, offset: 896)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DISubroutineType(types: !982)
!982 = !{!508, !791, !983}
!983 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !984, line: 305, baseType: !7)
!984 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!985 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !852, file: !31, line: 405, baseType: !904, size: 64, offset: 960)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !852, file: !31, line: 406, baseType: !867, size: 64, offset: 1024)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !852, file: !31, line: 407, baseType: !988, size: 64, offset: 1088)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64)
!989 = !DISubroutineType(types: !990)
!990 = !{!224, !791, !342, !342}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !852, file: !31, line: 409, baseType: !992, size: 64, offset: 1152)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!993 = !DISubroutineType(types: !994)
!994 = !{null, !791, !995, !995}
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !852, file: !31, line: 410, baseType: !997, size: 64, offset: 1216)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!998 = !DISubroutineType(types: !999)
!999 = !{!224, !804, !791}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !852, file: !31, line: 413, baseType: !1001, size: 64, offset: 1280)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{!224, !1004, !370, !1006}
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !31, line: 61, flags: DIFlagFwdDecl)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !852, file: !31, line: 415, baseType: !1008, size: 64, offset: 1344)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DISubroutineType(types: !1010)
!1010 = !{null, !370}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !805, file: !31, line: 466, baseType: !342, size: 64, offset: 896)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !805, file: !31, line: 467, baseType: !1013, size: 32, offset: 960)
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1014, line: 8, baseType: !433)
!1014 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !805, file: !31, line: 468, baseType: !251, offset: 992)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !805, file: !31, line: 469, baseType: !237, size: 128, offset: 1024)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !805, file: !31, line: 470, baseType: !218, size: 64, offset: 1152)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !800, file: !793, line: 87, baseType: !342, size: 64, offset: 192)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !800, file: !793, line: 94, baseType: !342, size: 64, offset: 256)
!1020 = !DIDerivedType(tag: DW_TAG_member, scope: !797, file: !793, line: 96, baseType: !1021, size: 64)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !797, file: !793, line: 96, size: 64, elements: !1022)
!1022 = !{!1023}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1021, file: !793, line: 101, baseType: !1024, size: 64)
!1024 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !238, line: 143, baseType: !439)
!1025 = !DIDerivedType(tag: DW_TAG_member, scope: !797, file: !793, line: 103, baseType: !1026, size: 320)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !797, file: !793, line: 103, size: 320, elements: !1027)
!1027 = !{!1028, !1038, !1041, !1042}
!1028 = !DIDerivedType(tag: DW_TAG_member, scope: !1026, file: !793, line: 104, baseType: !1029, size: 128)
!1029 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1026, file: !793, line: 104, size: 128, elements: !1030)
!1030 = !{!1031, !1032}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1029, file: !793, line: 105, baseType: !237, size: 128)
!1032 = !DIDerivedType(tag: DW_TAG_member, scope: !1029, file: !793, line: 106, baseType: !1033, size: 128)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1029, file: !793, line: 106, size: 128, elements: !1034)
!1034 = !{!1035, !1036, !1037}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1033, file: !793, line: 107, baseType: !791, size: 64)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1033, file: !793, line: 109, baseType: !224, size: 32, offset: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1033, file: !793, line: 110, baseType: !224, size: 32, offset: 96)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1026, file: !793, line: 117, baseType: !1039, size: 64, offset: 128)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1040 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !793, line: 117, flags: DIFlagFwdDecl)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1026, file: !793, line: 119, baseType: !218, size: 64, offset: 192)
!1042 = !DIDerivedType(tag: DW_TAG_member, scope: !1026, file: !793, line: 120, baseType: !1043, size: 64, offset: 256)
!1043 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1026, file: !793, line: 120, size: 64, elements: !1044)
!1044 = !{!1045, !1046, !1047}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1043, file: !793, line: 121, baseType: !218, size: 64)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1043, file: !793, line: 122, baseType: !342, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, scope: !1043, file: !793, line: 123, baseType: !1048, size: 32)
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1043, file: !793, line: 123, size: 32, elements: !1049)
!1049 = !{!1050, !1051, !1052}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1048, file: !793, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1048, file: !793, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1048, file: !793, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1053 = !DIDerivedType(tag: DW_TAG_member, scope: !797, file: !793, line: 130, baseType: !1054, size: 192)
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !797, file: !793, line: 130, size: 192, elements: !1055)
!1055 = !{!1056, !1057, !1058, !1059, !1060}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1054, file: !793, line: 131, baseType: !342, size: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1054, file: !793, line: 134, baseType: !445, size: 8, offset: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1054, file: !793, line: 135, baseType: !445, size: 8, offset: 72)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1054, file: !793, line: 136, baseType: !818, size: 32, offset: 96)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1054, file: !793, line: 137, baseType: !7, size: 32, offset: 128)
!1061 = !DIDerivedType(tag: DW_TAG_member, scope: !797, file: !793, line: 139, baseType: !1062, size: 256)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !797, file: !793, line: 139, size: 256, elements: !1063)
!1063 = !{!1064, !1065, !1066}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1062, file: !793, line: 140, baseType: !342, size: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1062, file: !793, line: 141, baseType: !818, size: 32, offset: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1062, file: !793, line: 143, baseType: !237, size: 128, offset: 128)
!1067 = !DIDerivedType(tag: DW_TAG_member, scope: !797, file: !793, line: 145, baseType: !1068, size: 256)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !797, file: !793, line: 145, size: 256, elements: !1069)
!1069 = !{!1070, !1071, !1074, !1075, !2352}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1068, file: !793, line: 146, baseType: !342, size: 64)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1068, file: !793, line: 147, baseType: !1072, size: 64, offset: 64)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1073, line: 509, baseType: !791)
!1073 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1068, file: !793, line: 148, baseType: !342, size: 64, offset: 128)
!1075 = !DIDerivedType(tag: DW_TAG_member, scope: !1068, file: !793, line: 149, baseType: !1076, size: 64, offset: 192)
!1076 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1068, file: !793, line: 149, size: 64, elements: !1077)
!1077 = !{!1078, !2351}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1076, file: !793, line: 150, baseType: !1079, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !793, line: 388, size: 7296, elements: !1081)
!1081 = !{!1082, !2347}
!1082 = !DIDerivedType(tag: DW_TAG_member, scope: !1080, file: !793, line: 389, baseType: !1083, size: 7296)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1080, file: !793, line: 389, size: 7296, elements: !1084)
!1084 = !{!1085, !1123, !1124, !1125, !1129, !1130, !1131, !1132, !1133, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1174, !1182, !1185, !1225, !1226, !2331, !2332, !2335, !2336, !2337, !2340, !2341, !2342, !2345, !2346}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1083, file: !793, line: 390, baseType: !1086, size: 64)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !793, line: 305, size: 1472, elements: !1088)
!1088 = !{!1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1103, !1104, !1109, !1110, !1113, !1117, !1118, !1119, !1120, !1121}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1087, file: !793, line: 308, baseType: !342, size: 64)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1087, file: !793, line: 309, baseType: !342, size: 64, offset: 64)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1087, file: !793, line: 313, baseType: !1086, size: 64, offset: 128)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1087, file: !793, line: 313, baseType: !1086, size: 64, offset: 192)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1087, file: !793, line: 315, baseType: !831, size: 192, align: 64, offset: 256)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1087, file: !793, line: 323, baseType: !342, size: 64, offset: 448)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1087, file: !793, line: 327, baseType: !1079, size: 64, offset: 512)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1087, file: !793, line: 333, baseType: !1097, size: 64, offset: 576)
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1073, line: 284, baseType: !1098)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1073, line: 284, size: 64, elements: !1099)
!1099 = !{!1100}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1098, file: !1073, line: 284, baseType: !1101, size: 64)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1102, line: 19, baseType: !342)
!1102 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1087, file: !793, line: 334, baseType: !342, size: 64, offset: 640)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1087, file: !793, line: 343, baseType: !1105, size: 256, offset: 704)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1087, file: !793, line: 340, size: 256, elements: !1106)
!1106 = !{!1107, !1108}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1105, file: !793, line: 341, baseType: !831, size: 192, align: 64)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1105, file: !793, line: 342, baseType: !342, size: 64, offset: 192)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1087, file: !793, line: 351, baseType: !237, size: 128, offset: 960)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1087, file: !793, line: 353, baseType: !1111, size: 64, offset: 1088)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !793, line: 353, flags: DIFlagFwdDecl)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1087, file: !793, line: 356, baseType: !1114, size: 64, offset: 1152)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1116)
!1116 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !793, line: 356, flags: DIFlagFwdDecl)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1087, file: !793, line: 359, baseType: !342, size: 64, offset: 1216)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1087, file: !793, line: 361, baseType: !370, size: 64, offset: 1280)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1087, file: !793, line: 362, baseType: !218, size: 64, offset: 1344)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1087, file: !793, line: 365, baseType: !748, size: 64, offset: 1408)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1087, file: !793, line: 373, baseType: !1122, offset: 1472)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !793, line: 296, elements: !265)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1083, file: !793, line: 391, baseType: !827, size: 64, offset: 64)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1083, file: !793, line: 392, baseType: !439, size: 64, offset: 128)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1083, file: !793, line: 394, baseType: !1126, size: 64, offset: 192)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = !DISubroutineType(types: !1128)
!1128 = !{!342, !370, !342, !342, !342, !342}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1083, file: !793, line: 398, baseType: !342, size: 64, offset: 256)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1083, file: !793, line: 399, baseType: !342, size: 64, offset: 320)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1083, file: !793, line: 405, baseType: !342, size: 64, offset: 384)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1083, file: !793, line: 406, baseType: !342, size: 64, offset: 448)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1083, file: !793, line: 407, baseType: !1134, size: 64, offset: 512)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64)
!1135 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1073, line: 286, baseType: !1136)
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1073, line: 286, size: 64, elements: !1137)
!1137 = !{!1138}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1136, file: !1073, line: 286, baseType: !1139, size: 64)
!1139 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1102, line: 18, baseType: !342)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1083, file: !793, line: 416, baseType: !818, size: 32, offset: 576)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1083, file: !793, line: 428, baseType: !818, size: 32, offset: 608)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1083, file: !793, line: 437, baseType: !818, size: 32, offset: 640)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1083, file: !793, line: 447, baseType: !818, size: 32, offset: 672)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1083, file: !793, line: 450, baseType: !748, size: 64, offset: 704)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1083, file: !793, line: 452, baseType: !224, size: 32, offset: 768)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1083, file: !793, line: 454, baseType: !251, offset: 800)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1083, file: !793, line: 457, baseType: !838, size: 256, offset: 832)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1083, file: !793, line: 459, baseType: !237, size: 128, offset: 1088)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1083, file: !793, line: 466, baseType: !342, size: 64, offset: 1216)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1083, file: !793, line: 467, baseType: !342, size: 64, offset: 1280)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1083, file: !793, line: 469, baseType: !342, size: 64, offset: 1344)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1083, file: !793, line: 470, baseType: !342, size: 64, offset: 1408)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1083, file: !793, line: 471, baseType: !750, size: 64, offset: 1472)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1083, file: !793, line: 472, baseType: !342, size: 64, offset: 1536)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1083, file: !793, line: 473, baseType: !342, size: 64, offset: 1600)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1083, file: !793, line: 474, baseType: !342, size: 64, offset: 1664)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1083, file: !793, line: 475, baseType: !342, size: 64, offset: 1728)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1083, file: !793, line: 477, baseType: !251, offset: 1792)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1083, file: !793, line: 478, baseType: !342, size: 64, offset: 1792)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1083, file: !793, line: 478, baseType: !342, size: 64, offset: 1856)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1083, file: !793, line: 478, baseType: !342, size: 64, offset: 1920)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1083, file: !793, line: 478, baseType: !342, size: 64, offset: 1984)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1083, file: !793, line: 479, baseType: !342, size: 64, offset: 2048)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1083, file: !793, line: 479, baseType: !342, size: 64, offset: 2112)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1083, file: !793, line: 479, baseType: !342, size: 64, offset: 2176)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1083, file: !793, line: 480, baseType: !342, size: 64, offset: 2240)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1083, file: !793, line: 480, baseType: !342, size: 64, offset: 2304)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1083, file: !793, line: 480, baseType: !342, size: 64, offset: 2368)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1083, file: !793, line: 480, baseType: !342, size: 64, offset: 2432)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1083, file: !793, line: 482, baseType: !1171, size: 2816, offset: 2496)
!1171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 2816, elements: !1172)
!1172 = !{!1173}
!1173 = !DISubrange(count: 44)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1083, file: !793, line: 488, baseType: !1175, size: 256, offset: 5312)
!1175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1176, line: 60, size: 256, elements: !1177)
!1176 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1177 = !{!1178}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1175, file: !1176, line: 61, baseType: !1179, size: 256)
!1179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !748, size: 256, elements: !1180)
!1180 = !{!1181}
!1181 = !DISubrange(count: 4)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1083, file: !793, line: 490, baseType: !1183, size: 64, offset: 5568)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64)
!1184 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !793, line: 490, flags: DIFlagFwdDecl)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1083, file: !793, line: 493, baseType: !1186, size: 896, offset: 5632)
!1186 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1187, line: 53, baseType: !1188)
!1187 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1187, line: 13, size: 896, elements: !1189)
!1189 = !{!1190, !1191, !1192, !1193, !1196, !1197, !1198, !1199, !1219, !1220, !1221}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1188, file: !1187, line: 18, baseType: !439, size: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1188, file: !1187, line: 28, baseType: !750, size: 64, offset: 64)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1188, file: !1187, line: 31, baseType: !838, size: 256, offset: 128)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1188, file: !1187, line: 32, baseType: !1194, size: 64, offset: 384)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64)
!1195 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1187, line: 32, flags: DIFlagFwdDecl)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1188, file: !1187, line: 37, baseType: !334, size: 16, offset: 448)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1188, file: !1187, line: 40, baseType: !744, size: 192, offset: 512)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1188, file: !1187, line: 41, baseType: !218, size: 64, offset: 704)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1188, file: !1187, line: 42, baseType: !1200, size: 64, offset: 768)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1202)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1203, line: 13, size: 896, elements: !1204)
!1203 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1204 = !{!1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1202, file: !1203, line: 14, baseType: !218, size: 64)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1202, file: !1203, line: 15, baseType: !342, size: 64, offset: 64)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1202, file: !1203, line: 17, baseType: !342, size: 64, offset: 128)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1202, file: !1203, line: 17, baseType: !342, size: 64, offset: 192)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1202, file: !1203, line: 19, baseType: !327, size: 64, offset: 256)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1202, file: !1203, line: 21, baseType: !327, size: 64, offset: 320)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1202, file: !1203, line: 22, baseType: !327, size: 64, offset: 384)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1202, file: !1203, line: 23, baseType: !327, size: 64, offset: 448)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1202, file: !1203, line: 24, baseType: !327, size: 64, offset: 512)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1202, file: !1203, line: 25, baseType: !327, size: 64, offset: 576)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1202, file: !1203, line: 26, baseType: !327, size: 64, offset: 640)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1202, file: !1203, line: 27, baseType: !327, size: 64, offset: 704)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1202, file: !1203, line: 28, baseType: !327, size: 64, offset: 768)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1202, file: !1203, line: 29, baseType: !327, size: 64, offset: 832)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1188, file: !1187, line: 44, baseType: !818, size: 32, offset: 832)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1188, file: !1187, line: 50, baseType: !923, size: 16, offset: 864)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1188, file: !1187, line: 51, baseType: !1222, size: 16, offset: 880)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !434, line: 18, baseType: !1223)
!1223 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !436, line: 23, baseType: !1224)
!1224 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1083, file: !793, line: 495, baseType: !342, size: 64, offset: 6528)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1083, file: !793, line: 497, baseType: !1227, size: 64, offset: 6592)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !793, line: 381, size: 384, elements: !1229)
!1229 = !{!1230, !1231, !2330}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1228, file: !793, line: 382, baseType: !818, size: 32)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1228, file: !793, line: 383, baseType: !1232, size: 128, offset: 64)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !793, line: 376, size: 128, elements: !1233)
!1233 = !{!1234, !2328}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1232, file: !793, line: 377, baseType: !1235, size: 64)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !965, line: 640, size: 48640, elements: !1237)
!1237 = !{!1238, !1244, !1246, !1247, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1264, !1282, !1293, !1378, !1379, !1380, !1391, !1392, !1394, !1395, !1396, !1397, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1476, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1514, !1516, !1517, !1518, !1530, !1531, !1532, !1533, !1534, !1535, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1559, !1564, !1748, !1749, !1750, !1751, !1755, !1758, !1761, !1764, !1767, !1771, !1872, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1918, !1919, !1920, !1921, !1922, !1927, !1928, !1929, !1932, !1933, !1936, !1939, !1942, !1945, !1988, !1991, !1992, !2071, !2072, !2075, !2076, !2079, !2080, !2081, !2085, !2086, !2087, !2100, !2101, !2102, !2112, !2117, !2118, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1236, file: !965, line: 646, baseType: !1239, size: 128)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1240, line: 56, size: 128, elements: !1241)
!1240 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1241 = !{!1242, !1243}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1239, file: !1240, line: 57, baseType: !342, size: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1239, file: !1240, line: 58, baseType: !433, size: 32, offset: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1236, file: !965, line: 649, baseType: !1245, size: 64, offset: 128)
!1245 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !327)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1236, file: !965, line: 657, baseType: !218, size: 64, offset: 192)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1236, file: !965, line: 658, baseType: !1248, size: 32, offset: 256)
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1249, line: 113, baseType: !1250)
!1249 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1249, line: 111, size: 32, elements: !1251)
!1251 = !{!1252}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1250, file: !1249, line: 112, baseType: !818, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1236, file: !965, line: 660, baseType: !7, size: 32, offset: 288)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1236, file: !965, line: 661, baseType: !7, size: 32, offset: 320)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1236, file: !965, line: 684, baseType: !224, size: 32, offset: 352)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1236, file: !965, line: 686, baseType: !224, size: 32, offset: 384)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1236, file: !965, line: 687, baseType: !224, size: 32, offset: 416)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1236, file: !965, line: 688, baseType: !224, size: 32, offset: 448)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1236, file: !965, line: 689, baseType: !7, size: 32, offset: 480)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1236, file: !965, line: 691, baseType: !1261, size: 64, offset: 512)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1263)
!1263 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !965, line: 691, flags: DIFlagFwdDecl)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1236, file: !965, line: 692, baseType: !1265, size: 832, offset: 576)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !965, line: 451, size: 832, elements: !1266)
!1266 = !{!1267, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1265, file: !965, line: 453, baseType: !1268, size: 128)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !965, line: 325, size: 128, elements: !1269)
!1269 = !{!1270, !1271}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1268, file: !965, line: 326, baseType: !342, size: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1268, file: !965, line: 327, baseType: !433, size: 32, offset: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1265, file: !965, line: 454, baseType: !831, size: 192, align: 64, offset: 128)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1265, file: !965, line: 455, baseType: !237, size: 128, offset: 320)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1265, file: !965, line: 456, baseType: !7, size: 32, offset: 448)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1265, file: !965, line: 458, baseType: !439, size: 64, offset: 512)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1265, file: !965, line: 459, baseType: !439, size: 64, offset: 576)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1265, file: !965, line: 460, baseType: !439, size: 64, offset: 640)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1265, file: !965, line: 461, baseType: !439, size: 64, offset: 704)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1265, file: !965, line: 463, baseType: !439, size: 64, offset: 768)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1265, file: !965, line: 465, baseType: !1281, offset: 832)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !965, line: 415, elements: !265)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1236, file: !965, line: 693, baseType: !1283, size: 384, offset: 1408)
!1283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !965, line: 489, size: 384, elements: !1284)
!1284 = !{!1285, !1286, !1287, !1288, !1289, !1290, !1291}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1283, file: !965, line: 490, baseType: !237, size: 128)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1283, file: !965, line: 491, baseType: !342, size: 64, offset: 128)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1283, file: !965, line: 492, baseType: !342, size: 64, offset: 192)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1283, file: !965, line: 493, baseType: !7, size: 32, offset: 256)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1283, file: !965, line: 494, baseType: !334, size: 16, offset: 288)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1283, file: !965, line: 495, baseType: !334, size: 16, offset: 304)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1283, file: !965, line: 497, baseType: !1292, size: 64, offset: 320)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1236, file: !965, line: 697, baseType: !1294, size: 1792, offset: 1792)
!1294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !965, line: 507, size: 1792, elements: !1295)
!1295 = !{!1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1375, !1376}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1294, file: !965, line: 508, baseType: !831, size: 192, align: 64)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1294, file: !965, line: 515, baseType: !439, size: 64, offset: 192)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1294, file: !965, line: 516, baseType: !439, size: 64, offset: 256)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1294, file: !965, line: 517, baseType: !439, size: 64, offset: 320)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1294, file: !965, line: 518, baseType: !439, size: 64, offset: 384)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1294, file: !965, line: 519, baseType: !439, size: 64, offset: 448)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1294, file: !965, line: 526, baseType: !754, size: 64, offset: 512)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1294, file: !965, line: 527, baseType: !439, size: 64, offset: 576)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1294, file: !965, line: 528, baseType: !7, size: 32, offset: 640)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1294, file: !965, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1294, file: !965, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1294, file: !965, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1294, file: !965, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1294, file: !965, line: 563, baseType: !1310, size: 512, offset: 704)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !14, line: 118, size: 512, elements: !1311)
!1311 = !{!1312, !1320, !1321, !1326, !1369, !1372, !1373, !1374}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1310, file: !14, line: 119, baseType: !1313, size: 256)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1314, line: 9, size: 256, elements: !1315)
!1314 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1315 = !{!1316, !1317}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1313, file: !1314, line: 10, baseType: !831, size: 192, align: 64)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1313, file: !1314, line: 11, baseType: !1318, size: 64, offset: 192)
!1318 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1319, line: 29, baseType: !754)
!1319 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1310, file: !14, line: 120, baseType: !1318, size: 64, offset: 256)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1310, file: !14, line: 121, baseType: !1322, size: 64, offset: 320)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1323 = !DISubroutineType(types: !1324)
!1324 = !{!13, !1325}
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1310, file: !14, line: 122, baseType: !1327, size: 64, offset: 384)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !14, line: 159, size: 512, align: 512, elements: !1329)
!1329 = !{!1330, !1350, !1351, !1354, !1359, !1360, !1364, !1368}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1328, file: !14, line: 160, baseType: !1331, size: 64)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !14, line: 214, size: 4608, align: 512, elements: !1333)
!1333 = !{!1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1332, file: !14, line: 215, baseType: !844)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1332, file: !14, line: 216, baseType: !7, size: 32)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1332, file: !14, line: 217, baseType: !7, size: 32, offset: 32)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1332, file: !14, line: 218, baseType: !7, size: 32, offset: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1332, file: !14, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1332, file: !14, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1332, file: !14, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1332, file: !14, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1332, file: !14, line: 233, baseType: !1318, size: 64, offset: 128)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1332, file: !14, line: 234, baseType: !1325, size: 64, offset: 192)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1332, file: !14, line: 235, baseType: !1318, size: 64, offset: 256)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1332, file: !14, line: 236, baseType: !1325, size: 64, offset: 320)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1332, file: !14, line: 237, baseType: !1347, size: 4096, offset: 512)
!1347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1328, size: 4096, elements: !1348)
!1348 = !{!1349}
!1349 = !DISubrange(count: 8)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1328, file: !14, line: 161, baseType: !7, size: 32, offset: 64)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1328, file: !14, line: 162, baseType: !1352, size: 32, offset: 96)
!1352 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !238, line: 27, baseType: !1353)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !325, line: 96, baseType: !224)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1328, file: !14, line: 163, baseType: !1355, size: 32, offset: 128)
!1355 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !406, line: 276, baseType: !1356)
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !406, line: 276, size: 32, elements: !1357)
!1357 = !{!1358}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1356, file: !406, line: 276, baseType: !410, size: 32)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1328, file: !14, line: 164, baseType: !1325, size: 64, offset: 192)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1328, file: !14, line: 165, baseType: !1361, size: 128, offset: 256)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1314, line: 14, size: 128, elements: !1362)
!1362 = !{!1363}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1361, file: !1314, line: 15, baseType: !823, size: 128)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1328, file: !14, line: 166, baseType: !1365, size: 64, offset: 384)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!1366 = !DISubroutineType(types: !1367)
!1367 = !{!1318}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1328, file: !14, line: 167, baseType: !1318, size: 64, offset: 448)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1310, file: !14, line: 123, baseType: !1370, size: 8, offset: 448)
!1370 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !434, line: 17, baseType: !1371)
!1371 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !436, line: 21, baseType: !445)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1310, file: !14, line: 124, baseType: !1370, size: 8, offset: 456)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1310, file: !14, line: 125, baseType: !1370, size: 8, offset: 464)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1310, file: !14, line: 126, baseType: !1370, size: 8, offset: 472)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1294, file: !965, line: 572, baseType: !1310, size: 512, offset: 1216)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1294, file: !965, line: 580, baseType: !1377, size: 64, offset: 1728)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1236, file: !965, line: 721, baseType: !7, size: 32, offset: 3584)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1236, file: !965, line: 722, baseType: !224, size: 32, offset: 3616)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1236, file: !965, line: 723, baseType: !1381, size: 64, offset: 3648)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!1382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1383)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1384, line: 17, baseType: !1385)
!1384 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1384, line: 17, size: 64, elements: !1386)
!1386 = !{!1387}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1385, file: !1384, line: 17, baseType: !1388, size: 64)
!1388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 64, elements: !1389)
!1389 = !{!1390}
!1390 = !DISubrange(count: 1)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1236, file: !965, line: 724, baseType: !1383, size: 64, offset: 3712)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1236, file: !965, line: 749, baseType: !1393, offset: 3776)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !965, line: 290, elements: !265)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1236, file: !965, line: 751, baseType: !237, size: 128, offset: 3776)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1236, file: !965, line: 757, baseType: !1079, size: 64, offset: 3904)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1236, file: !965, line: 758, baseType: !1079, size: 64, offset: 3968)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1236, file: !965, line: 761, baseType: !1398, size: 320, offset: 4032)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1176, line: 34, size: 320, elements: !1399)
!1399 = !{!1400, !1401}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1398, file: !1176, line: 35, baseType: !439, size: 64)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1398, file: !1176, line: 36, baseType: !1402, size: 256, offset: 64)
!1402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1086, size: 256, elements: !1180)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1236, file: !965, line: 766, baseType: !224, size: 32, offset: 4352)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1236, file: !965, line: 767, baseType: !224, size: 32, offset: 4384)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1236, file: !965, line: 768, baseType: !224, size: 32, offset: 4416)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1236, file: !965, line: 770, baseType: !224, size: 32, offset: 4448)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1236, file: !965, line: 772, baseType: !342, size: 64, offset: 4480)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1236, file: !965, line: 775, baseType: !7, size: 32, offset: 4544)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1236, file: !965, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1236, file: !965, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1236, file: !965, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1236, file: !965, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1236, file: !965, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1236, file: !965, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1236, file: !965, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1236, file: !965, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1236, file: !965, line: 831, baseType: !342, size: 64, offset: 4672)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1236, file: !965, line: 833, baseType: !1419, size: 384, offset: 4736)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !19, line: 25, size: 384, elements: !1420)
!1420 = !{!1421, !1426}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1419, file: !19, line: 26, baseType: !1422, size: 64)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1423 = !DISubroutineType(types: !1424)
!1424 = !{!327, !1425}
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 64)
!1426 = !DIDerivedType(tag: DW_TAG_member, scope: !1419, file: !19, line: 27, baseType: !1427, size: 320, offset: 64)
!1427 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1419, file: !19, line: 27, size: 320, elements: !1428)
!1428 = !{!1429, !1439, !1466}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1427, file: !19, line: 36, baseType: !1430, size: 320)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1427, file: !19, line: 29, size: 320, elements: !1431)
!1431 = !{!1432, !1434, !1435, !1436, !1437, !1438}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1430, file: !19, line: 30, baseType: !1433, size: 64)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1430, file: !19, line: 31, baseType: !433, size: 32, offset: 64)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1430, file: !19, line: 32, baseType: !433, size: 32, offset: 96)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1430, file: !19, line: 33, baseType: !433, size: 32, offset: 128)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1430, file: !19, line: 34, baseType: !439, size: 64, offset: 192)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1430, file: !19, line: 35, baseType: !1433, size: 64, offset: 256)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1427, file: !19, line: 46, baseType: !1440, size: 192)
!1440 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1427, file: !19, line: 38, size: 192, elements: !1441)
!1441 = !{!1442, !1443, !1444, !1465}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1440, file: !19, line: 39, baseType: !1352, size: 32)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1440, file: !19, line: 40, baseType: !18, size: 32, offset: 32)
!1444 = !DIDerivedType(tag: DW_TAG_member, scope: !1440, file: !19, line: 41, baseType: !1445, size: 64, offset: 64)
!1445 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1440, file: !19, line: 41, size: 64, elements: !1446)
!1446 = !{!1447, !1455}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1445, file: !19, line: 42, baseType: !1448, size: 64)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64)
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1450, line: 7, size: 128, elements: !1451)
!1450 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1451 = !{!1452, !1454}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1449, file: !1450, line: 8, baseType: !1453, size: 64)
!1453 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !325, line: 93, baseType: !551)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1449, file: !1450, line: 9, baseType: !551, size: 64, offset: 64)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1445, file: !19, line: 43, baseType: !1456, size: 64)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1458, line: 7, size: 64, elements: !1459)
!1458 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1459 = !{!1460, !1464}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1457, file: !1458, line: 8, baseType: !1461, size: 32)
!1461 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1458, line: 5, baseType: !1462)
!1462 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !434, line: 20, baseType: !1463)
!1463 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !436, line: 26, baseType: !224)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1457, file: !1458, line: 9, baseType: !1462, size: 32, offset: 32)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1440, file: !19, line: 45, baseType: !439, size: 64, offset: 128)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1427, file: !19, line: 54, baseType: !1467, size: 256)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1427, file: !19, line: 48, size: 256, elements: !1468)
!1468 = !{!1469, !1472, !1473, !1474, !1475}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1467, file: !19, line: 49, baseType: !1470, size: 64)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64)
!1471 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !19, line: 14, flags: DIFlagFwdDecl)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1467, file: !19, line: 50, baseType: !224, size: 32, offset: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1467, file: !19, line: 51, baseType: !224, size: 32, offset: 96)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1467, file: !19, line: 52, baseType: !342, size: 64, offset: 128)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1467, file: !19, line: 53, baseType: !342, size: 64, offset: 192)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1236, file: !965, line: 835, baseType: !1477, size: 32, offset: 5120)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !238, line: 22, baseType: !1478)
!1478 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !325, line: 28, baseType: !224)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1236, file: !965, line: 836, baseType: !1477, size: 32, offset: 5152)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1236, file: !965, line: 840, baseType: !342, size: 64, offset: 5184)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1236, file: !965, line: 849, baseType: !1235, size: 64, offset: 5248)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1236, file: !965, line: 852, baseType: !1235, size: 64, offset: 5312)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1236, file: !965, line: 857, baseType: !237, size: 128, offset: 5376)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1236, file: !965, line: 858, baseType: !237, size: 128, offset: 5504)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1236, file: !965, line: 859, baseType: !1235, size: 64, offset: 5632)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1236, file: !965, line: 867, baseType: !237, size: 128, offset: 5696)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1236, file: !965, line: 868, baseType: !237, size: 128, offset: 5824)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1236, file: !965, line: 871, baseType: !1489, size: 64, offset: 5952)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !40, line: 59, size: 768, elements: !1491)
!1491 = !{!1492, !1493, !1494, !1495, !1497, !1498, !1505, !1506}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1490, file: !40, line: 61, baseType: !1248, size: 32)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1490, file: !40, line: 62, baseType: !7, size: 32, offset: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1490, file: !40, line: 63, baseType: !251, offset: 64)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1490, file: !40, line: 65, baseType: !1496, size: 256, offset: 64)
!1496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !656, size: 256, elements: !1180)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1490, file: !40, line: 66, baseType: !656, size: 64, offset: 320)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1490, file: !40, line: 68, baseType: !1499, size: 128, offset: 384)
!1499 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1500, line: 40, baseType: !1501)
!1500 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1500, line: 36, size: 128, elements: !1502)
!1502 = !{!1503, !1504}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1501, file: !1500, line: 37, baseType: !251)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1501, file: !1500, line: 38, baseType: !237, size: 128)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1490, file: !40, line: 69, baseType: !383, size: 128, align: 64, offset: 512)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1490, file: !40, line: 70, baseType: !1507, size: 128, offset: 640)
!1507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1508, size: 128, elements: !1389)
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !40, line: 54, size: 128, elements: !1509)
!1509 = !{!1510, !1511}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1508, file: !40, line: 55, baseType: !224, size: 32)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1508, file: !40, line: 56, baseType: !1512, size: 64, offset: 64)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 64)
!1513 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !40, line: 56, flags: DIFlagFwdDecl)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1236, file: !965, line: 872, baseType: !1515, size: 512, offset: 6016)
!1515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !660, size: 512, elements: !1180)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1236, file: !965, line: 873, baseType: !237, size: 128, offset: 6528)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1236, file: !965, line: 874, baseType: !237, size: 128, offset: 6656)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1236, file: !965, line: 876, baseType: !1519, size: 64, offset: 6784)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 64)
!1520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1521, line: 26, size: 192, elements: !1522)
!1521 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1522 = !{!1523, !1524}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1520, file: !1521, line: 27, baseType: !7, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1520, file: !1521, line: 28, baseType: !1525, size: 128, offset: 64)
!1525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1526, line: 43, size: 128, elements: !1527)
!1526 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1527 = !{!1528, !1529}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1525, file: !1526, line: 44, baseType: !844)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1525, file: !1526, line: 45, baseType: !237, size: 128)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1236, file: !965, line: 879, baseType: !726, size: 64, offset: 6848)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1236, file: !965, line: 882, baseType: !726, size: 64, offset: 6912)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1236, file: !965, line: 884, baseType: !439, size: 64, offset: 6976)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1236, file: !965, line: 885, baseType: !439, size: 64, offset: 7040)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1236, file: !965, line: 890, baseType: !439, size: 64, offset: 7104)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1236, file: !965, line: 891, baseType: !1536, size: 128, offset: 7168)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !965, line: 242, size: 128, elements: !1537)
!1537 = !{!1538, !1539, !1540}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1536, file: !965, line: 244, baseType: !439, size: 64)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1536, file: !965, line: 245, baseType: !439, size: 64, offset: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1536, file: !965, line: 246, baseType: !844, offset: 128)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1236, file: !965, line: 900, baseType: !342, size: 64, offset: 7296)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1236, file: !965, line: 901, baseType: !342, size: 64, offset: 7360)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1236, file: !965, line: 904, baseType: !439, size: 64, offset: 7424)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1236, file: !965, line: 907, baseType: !439, size: 64, offset: 7488)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1236, file: !965, line: 910, baseType: !342, size: 64, offset: 7552)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1236, file: !965, line: 911, baseType: !342, size: 64, offset: 7616)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1236, file: !965, line: 914, baseType: !1548, size: 640, offset: 7680)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1549, line: 123, size: 640, elements: !1550)
!1549 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1550 = !{!1551, !1557, !1558}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1548, file: !1549, line: 124, baseType: !1552, size: 576)
!1552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1553, size: 576, elements: !293)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1549, line: 108, size: 192, elements: !1554)
!1554 = !{!1555, !1556}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1553, file: !1549, line: 109, baseType: !439, size: 64)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1553, file: !1549, line: 110, baseType: !1361, size: 128, offset: 64)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1548, file: !1549, line: 125, baseType: !7, size: 32, offset: 576)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1548, file: !1549, line: 126, baseType: !7, size: 32, offset: 608)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1236, file: !965, line: 917, baseType: !1560, size: 192, offset: 8320)
!1560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1549, line: 134, size: 192, elements: !1561)
!1561 = !{!1562, !1563}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1560, file: !1549, line: 135, baseType: !383, size: 128, align: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1560, file: !1549, line: 136, baseType: !7, size: 32, offset: 128)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1236, file: !965, line: 923, baseType: !1565, size: 64, offset: 8512)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 64)
!1566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1567)
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1568, line: 111, size: 1280, elements: !1569)
!1568 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1569 = !{!1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1589, !1590, !1591, !1592, !1593, !1594, !1701, !1702, !1703, !1704, !1730, !1733, !1743}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1567, file: !1568, line: 112, baseType: !818, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1567, file: !1568, line: 120, baseType: !453, size: 32, offset: 32)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1567, file: !1568, line: 121, baseType: !461, size: 32, offset: 64)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1567, file: !1568, line: 122, baseType: !453, size: 32, offset: 96)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1567, file: !1568, line: 123, baseType: !461, size: 32, offset: 128)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1567, file: !1568, line: 124, baseType: !453, size: 32, offset: 160)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1567, file: !1568, line: 125, baseType: !461, size: 32, offset: 192)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1567, file: !1568, line: 126, baseType: !453, size: 32, offset: 224)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1567, file: !1568, line: 127, baseType: !461, size: 32, offset: 256)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1567, file: !1568, line: 128, baseType: !7, size: 32, offset: 288)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1567, file: !1568, line: 129, baseType: !1581, size: 64, offset: 320)
!1581 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1582, line: 26, baseType: !1583)
!1582 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1582, line: 24, size: 64, elements: !1584)
!1584 = !{!1585}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1583, file: !1582, line: 25, baseType: !1586, size: 64)
!1586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !435, size: 64, elements: !1587)
!1587 = !{!1588}
!1588 = !DISubrange(count: 2)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1567, file: !1568, line: 130, baseType: !1581, size: 64, offset: 384)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1567, file: !1568, line: 131, baseType: !1581, size: 64, offset: 448)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1567, file: !1568, line: 132, baseType: !1581, size: 64, offset: 512)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1567, file: !1568, line: 133, baseType: !1581, size: 64, offset: 576)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1567, file: !1568, line: 135, baseType: !445, size: 8, offset: 640)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1567, file: !1568, line: 137, baseType: !1595, size: 64, offset: 704)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 64)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1597, line: 189, size: 1664, elements: !1598)
!1597 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1598 = !{!1599, !1600, !1603, !1608, !1609, !1612, !1613, !1618, !1619, !1620, !1621, !1623, !1624, !1625, !1626, !1627, !1665, !1686}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1596, file: !1597, line: 190, baseType: !1248, size: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1596, file: !1597, line: 191, baseType: !1601, size: 32, offset: 32)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1597, line: 28, baseType: !1602)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !238, line: 98, baseType: !1462)
!1603 = !DIDerivedType(tag: DW_TAG_member, scope: !1596, file: !1597, line: 192, baseType: !1604, size: 192, offset: 64)
!1604 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1596, file: !1597, line: 192, size: 192, elements: !1605)
!1605 = !{!1606, !1607}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1604, file: !1597, line: 193, baseType: !237, size: 128)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1604, file: !1597, line: 194, baseType: !831, size: 192, align: 64)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1596, file: !1597, line: 199, baseType: !838, size: 256, offset: 256)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1596, file: !1597, line: 200, baseType: !1610, size: 64, offset: 512)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64)
!1611 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1597, line: 200, flags: DIFlagFwdDecl)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1596, file: !1597, line: 201, baseType: !218, size: 64, offset: 576)
!1613 = !DIDerivedType(tag: DW_TAG_member, scope: !1596, file: !1597, line: 202, baseType: !1614, size: 64, offset: 640)
!1614 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1596, file: !1597, line: 202, size: 64, elements: !1615)
!1615 = !{!1616, !1617}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1614, file: !1597, line: 203, baseType: !557, size: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1614, file: !1597, line: 204, baseType: !557, size: 64)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1596, file: !1597, line: 206, baseType: !557, size: 64, offset: 704)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1596, file: !1597, line: 207, baseType: !453, size: 32, offset: 768)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1596, file: !1597, line: 208, baseType: !461, size: 32, offset: 800)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1596, file: !1597, line: 209, baseType: !1622, size: 32, offset: 832)
!1622 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1597, line: 31, baseType: !577)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1596, file: !1597, line: 210, baseType: !334, size: 16, offset: 864)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1596, file: !1597, line: 211, baseType: !334, size: 16, offset: 880)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1596, file: !1597, line: 215, baseType: !1224, size: 16, offset: 896)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1596, file: !1597, line: 222, baseType: !342, size: 64, offset: 960)
!1627 = !DIDerivedType(tag: DW_TAG_member, scope: !1596, file: !1597, line: 239, baseType: !1628, size: 320, offset: 1024)
!1628 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1596, file: !1597, line: 239, size: 320, elements: !1629)
!1629 = !{!1630, !1657}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1628, file: !1597, line: 240, baseType: !1631, size: 320)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1597, line: 108, size: 320, elements: !1632)
!1632 = !{!1633, !1634, !1646, !1649, !1656}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1631, file: !1597, line: 110, baseType: !342, size: 64)
!1634 = !DIDerivedType(tag: DW_TAG_member, scope: !1631, file: !1597, line: 111, baseType: !1635, size: 64, offset: 64)
!1635 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1631, file: !1597, line: 111, size: 64, elements: !1636)
!1636 = !{!1637, !1645}
!1637 = !DIDerivedType(tag: DW_TAG_member, scope: !1635, file: !1597, line: 112, baseType: !1638, size: 64)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1635, file: !1597, line: 112, size: 64, elements: !1639)
!1639 = !{!1640, !1641}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1638, file: !1597, line: 114, baseType: !923, size: 16)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1638, file: !1597, line: 115, baseType: !1642, size: 48, offset: 16)
!1642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !235, size: 48, elements: !1643)
!1643 = !{!1644}
!1644 = !DISubrange(count: 6)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1635, file: !1597, line: 121, baseType: !342, size: 64)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1631, file: !1597, line: 123, baseType: !1647, size: 64, offset: 128)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64)
!1648 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1597, line: 96, flags: DIFlagFwdDecl)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1631, file: !1597, line: 124, baseType: !1650, size: 64, offset: 192)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1597, line: 102, size: 192, elements: !1652)
!1652 = !{!1653, !1654, !1655}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1651, file: !1597, line: 103, baseType: !383, size: 128, align: 64)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1651, file: !1597, line: 104, baseType: !1248, size: 32, offset: 128)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1651, file: !1597, line: 105, baseType: !508, size: 8, offset: 160)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1631, file: !1597, line: 125, baseType: !233, size: 64, offset: 256)
!1657 = !DIDerivedType(tag: DW_TAG_member, scope: !1628, file: !1597, line: 241, baseType: !1658, size: 320)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1628, file: !1597, line: 241, size: 320, elements: !1659)
!1659 = !{!1660, !1661, !1662, !1663, !1664}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1658, file: !1597, line: 242, baseType: !342, size: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1658, file: !1597, line: 243, baseType: !342, size: 64, offset: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1658, file: !1597, line: 244, baseType: !1647, size: 64, offset: 128)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1658, file: !1597, line: 245, baseType: !1650, size: 64, offset: 192)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1658, file: !1597, line: 246, baseType: !292, size: 64, offset: 256)
!1665 = !DIDerivedType(tag: DW_TAG_member, scope: !1596, file: !1597, line: 254, baseType: !1666, size: 256, offset: 1344)
!1666 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1596, file: !1597, line: 254, size: 256, elements: !1667)
!1667 = !{!1668, !1674}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1666, file: !1597, line: 255, baseType: !1669, size: 256)
!1669 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1597, line: 128, size: 256, elements: !1670)
!1670 = !{!1671, !1672}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1669, file: !1597, line: 129, baseType: !218, size: 64)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1669, file: !1597, line: 130, baseType: !1673, size: 256)
!1673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !218, size: 256, elements: !1180)
!1674 = !DIDerivedType(tag: DW_TAG_member, scope: !1666, file: !1597, line: 256, baseType: !1675, size: 256)
!1675 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1666, file: !1597, line: 256, size: 256, elements: !1676)
!1676 = !{!1677, !1678}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1675, file: !1597, line: 258, baseType: !237, size: 128)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1675, file: !1597, line: 259, baseType: !1679, size: 128, offset: 128)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1680, line: 22, size: 128, elements: !1681)
!1680 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1681 = !{!1682, !1685}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1679, file: !1680, line: 23, baseType: !1683, size: 64)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64)
!1684 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1680, line: 23, flags: DIFlagFwdDecl)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1679, file: !1680, line: 24, baseType: !342, size: 64, offset: 64)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1596, file: !1597, line: 274, baseType: !1687, size: 64, offset: 1600)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1597, line: 170, size: 192, elements: !1689)
!1689 = !{!1690, !1699, !1700}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1688, file: !1597, line: 171, baseType: !1691, size: 64)
!1691 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1597, line: 165, baseType: !1692)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 64)
!1693 = !DISubroutineType(types: !1694)
!1694 = !{!224, !1595, !1695, !1697, !1595}
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 64)
!1696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1648)
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 64)
!1698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1669)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1688, file: !1597, line: 172, baseType: !1595, size: 64, offset: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1688, file: !1597, line: 173, baseType: !1647, size: 64, offset: 128)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1567, file: !1568, line: 138, baseType: !1595, size: 64, offset: 768)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1567, file: !1568, line: 139, baseType: !1595, size: 64, offset: 832)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1567, file: !1568, line: 140, baseType: !1595, size: 64, offset: 896)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1567, file: !1568, line: 145, baseType: !1705, size: 64, offset: 960)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64)
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1707, line: 13, size: 896, elements: !1708)
!1707 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1708 = !{!1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1706, file: !1707, line: 14, baseType: !1248, size: 32)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1706, file: !1707, line: 15, baseType: !818, size: 32, offset: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1706, file: !1707, line: 16, baseType: !818, size: 32, offset: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1706, file: !1707, line: 21, baseType: !748, size: 64, offset: 128)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1706, file: !1707, line: 27, baseType: !342, size: 64, offset: 192)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1706, file: !1707, line: 28, baseType: !342, size: 64, offset: 256)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1706, file: !1707, line: 29, baseType: !748, size: 64, offset: 320)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1706, file: !1707, line: 32, baseType: !660, size: 128, offset: 384)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1706, file: !1707, line: 33, baseType: !453, size: 32, offset: 512)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1706, file: !1707, line: 37, baseType: !748, size: 64, offset: 576)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1706, file: !1707, line: 44, baseType: !1720, size: 256, offset: 640)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1721, line: 15, size: 256, elements: !1722)
!1721 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1722 = !{!1723, !1724, !1725, !1726, !1727, !1728, !1729}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1720, file: !1721, line: 16, baseType: !844)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1720, file: !1721, line: 18, baseType: !224, size: 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1720, file: !1721, line: 19, baseType: !224, size: 32, offset: 32)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1720, file: !1721, line: 20, baseType: !224, size: 32, offset: 64)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1720, file: !1721, line: 21, baseType: !224, size: 32, offset: 96)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1720, file: !1721, line: 22, baseType: !342, size: 64, offset: 128)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1720, file: !1721, line: 23, baseType: !342, size: 64, offset: 192)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1567, file: !1568, line: 146, baseType: !1731, size: 64, offset: 1024)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64)
!1732 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !454, line: 18, flags: DIFlagFwdDecl)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1567, file: !1568, line: 147, baseType: !1734, size: 64, offset: 1088)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1568, line: 25, size: 64, elements: !1736)
!1736 = !{!1737, !1738, !1739}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1735, file: !1568, line: 26, baseType: !818, size: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1735, file: !1568, line: 27, baseType: !224, size: 32, offset: 32)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1735, file: !1568, line: 28, baseType: !1740, offset: 64)
!1740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !461, elements: !1741)
!1741 = !{!1742}
!1742 = !DISubrange(count: 0)
!1743 = !DIDerivedType(tag: DW_TAG_member, scope: !1567, file: !1568, line: 149, baseType: !1744, size: 128, offset: 1152)
!1744 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1567, file: !1568, line: 149, size: 128, elements: !1745)
!1745 = !{!1746, !1747}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1744, file: !1568, line: 150, baseType: !224, size: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1744, file: !1568, line: 151, baseType: !383, size: 128, align: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1236, file: !965, line: 926, baseType: !1565, size: 64, offset: 8576)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1236, file: !965, line: 929, baseType: !1565, size: 64, offset: 8640)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1236, file: !965, line: 933, baseType: !1595, size: 64, offset: 8704)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1236, file: !965, line: 943, baseType: !1752, size: 128, offset: 8768)
!1752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !235, size: 128, elements: !1753)
!1753 = !{!1754}
!1754 = !DISubrange(count: 16)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1236, file: !965, line: 945, baseType: !1756, size: 64, offset: 8896)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 64)
!1757 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !965, line: 49, flags: DIFlagFwdDecl)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1236, file: !965, line: 956, baseType: !1759, size: 64, offset: 8960)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64)
!1760 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !965, line: 45, flags: DIFlagFwdDecl)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1236, file: !965, line: 959, baseType: !1762, size: 64, offset: 9024)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64)
!1763 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !965, line: 959, flags: DIFlagFwdDecl)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1236, file: !965, line: 962, baseType: !1765, size: 64, offset: 9088)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64)
!1766 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !965, line: 66, flags: DIFlagFwdDecl)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1236, file: !965, line: 966, baseType: !1768, size: 64, offset: 9152)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 64)
!1769 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1770, line: 35, flags: DIFlagFwdDecl)
!1770 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1236, file: !965, line: 969, baseType: !1772, size: 64, offset: 9216)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1774, line: 82, size: 7296, elements: !1775)
!1774 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1775 = !{!1776, !1777, !1778, !1779, !1780, !1781, !1782, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1811, !1820, !1821, !1823, !1824, !1825, !1828, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1858, !1859, !1866, !1867, !1868, !1869, !1870, !1871}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1773, file: !1774, line: 83, baseType: !1248, size: 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1773, file: !1774, line: 84, baseType: !818, size: 32, offset: 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1773, file: !1774, line: 85, baseType: !224, size: 32, offset: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1773, file: !1774, line: 86, baseType: !237, size: 128, offset: 128)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1773, file: !1774, line: 88, baseType: !1499, size: 128, offset: 256)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1773, file: !1774, line: 91, baseType: !1235, size: 64, offset: 384)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1773, file: !1774, line: 94, baseType: !1783, size: 192, offset: 448)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1784, line: 30, size: 192, elements: !1785)
!1784 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1785 = !{!1786, !1787}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1783, file: !1784, line: 31, baseType: !237, size: 128)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1783, file: !1784, line: 32, baseType: !1788, size: 64, offset: 128)
!1788 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1789, line: 25, baseType: !1790)
!1789 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1789, line: 23, size: 64, elements: !1791)
!1791 = !{!1792}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1790, file: !1789, line: 24, baseType: !1388, size: 64)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1773, file: !1774, line: 97, baseType: !656, size: 64, offset: 640)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1773, file: !1774, line: 100, baseType: !224, size: 32, offset: 704)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1773, file: !1774, line: 106, baseType: !224, size: 32, offset: 736)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1773, file: !1774, line: 107, baseType: !1235, size: 64, offset: 768)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1773, file: !1774, line: 110, baseType: !224, size: 32, offset: 832)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1773, file: !1774, line: 111, baseType: !7, size: 32, offset: 864)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1773, file: !1774, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1773, file: !1774, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1773, file: !1774, line: 128, baseType: !224, size: 32, offset: 928)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1773, file: !1774, line: 129, baseType: !237, size: 128, offset: 960)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1773, file: !1774, line: 132, baseType: !1310, size: 512, offset: 1088)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1773, file: !1774, line: 133, baseType: !1318, size: 64, offset: 1600)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1773, file: !1774, line: 140, baseType: !1806, size: 256, offset: 1664)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1807, size: 256, elements: !1587)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1774, line: 38, size: 128, elements: !1808)
!1808 = !{!1809, !1810}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1807, file: !1774, line: 39, baseType: !439, size: 64)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1807, file: !1774, line: 40, baseType: !439, size: 64, offset: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1773, file: !1774, line: 146, baseType: !1812, size: 192, offset: 1920)
!1812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1774, line: 66, size: 192, elements: !1813)
!1813 = !{!1814}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1812, file: !1774, line: 67, baseType: !1815, size: 192)
!1815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1774, line: 47, size: 192, elements: !1816)
!1816 = !{!1817, !1818, !1819}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1815, file: !1774, line: 48, baseType: !750, size: 64)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1815, file: !1774, line: 49, baseType: !750, size: 64, offset: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1815, file: !1774, line: 50, baseType: !750, size: 64, offset: 128)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1773, file: !1774, line: 150, baseType: !1548, size: 640, offset: 2112)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1773, file: !1774, line: 153, baseType: !1822, size: 256, offset: 2752)
!1822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1489, size: 256, elements: !1180)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1773, file: !1774, line: 159, baseType: !1489, size: 64, offset: 3008)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1773, file: !1774, line: 162, baseType: !224, size: 32, offset: 3072)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1773, file: !1774, line: 164, baseType: !1826, size: 64, offset: 3136)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64)
!1827 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1774, line: 164, flags: DIFlagFwdDecl)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1773, file: !1774, line: 175, baseType: !1829, size: 32, offset: 3200)
!1829 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !406, line: 805, baseType: !1830)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !406, line: 798, size: 32, elements: !1831)
!1831 = !{!1832, !1833}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1830, file: !406, line: 803, baseType: !405, size: 32)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1830, file: !406, line: 804, baseType: !251, offset: 32)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1773, file: !1774, line: 176, baseType: !439, size: 64, offset: 3264)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1773, file: !1774, line: 176, baseType: !439, size: 64, offset: 3328)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1773, file: !1774, line: 176, baseType: !439, size: 64, offset: 3392)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1773, file: !1774, line: 176, baseType: !439, size: 64, offset: 3456)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1773, file: !1774, line: 177, baseType: !439, size: 64, offset: 3520)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1773, file: !1774, line: 178, baseType: !439, size: 64, offset: 3584)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1773, file: !1774, line: 179, baseType: !1536, size: 128, offset: 3648)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1773, file: !1774, line: 180, baseType: !342, size: 64, offset: 3776)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1773, file: !1774, line: 180, baseType: !342, size: 64, offset: 3840)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1773, file: !1774, line: 180, baseType: !342, size: 64, offset: 3904)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1773, file: !1774, line: 180, baseType: !342, size: 64, offset: 3968)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1773, file: !1774, line: 181, baseType: !342, size: 64, offset: 4032)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1773, file: !1774, line: 181, baseType: !342, size: 64, offset: 4096)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1773, file: !1774, line: 181, baseType: !342, size: 64, offset: 4160)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1773, file: !1774, line: 181, baseType: !342, size: 64, offset: 4224)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1773, file: !1774, line: 182, baseType: !342, size: 64, offset: 4288)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1773, file: !1774, line: 182, baseType: !342, size: 64, offset: 4352)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1773, file: !1774, line: 182, baseType: !342, size: 64, offset: 4416)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1773, file: !1774, line: 182, baseType: !342, size: 64, offset: 4480)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1773, file: !1774, line: 183, baseType: !342, size: 64, offset: 4544)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1773, file: !1774, line: 183, baseType: !342, size: 64, offset: 4608)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1773, file: !1774, line: 184, baseType: !1856, offset: 4672)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1857, line: 12, elements: !265)
!1857 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1773, file: !1774, line: 192, baseType: !441, size: 64, offset: 4672)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1773, file: !1774, line: 203, baseType: !1860, size: 2048, offset: 4736)
!1860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1861, size: 2048, elements: !1753)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1862, line: 43, size: 128, elements: !1863)
!1862 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1863 = !{!1864, !1865}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1861, file: !1862, line: 44, baseType: !341, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1861, file: !1862, line: 45, baseType: !341, size: 64, offset: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1773, file: !1774, line: 220, baseType: !508, size: 8, offset: 6784)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1773, file: !1774, line: 221, baseType: !1224, size: 16, offset: 6800)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1773, file: !1774, line: 222, baseType: !1224, size: 16, offset: 6816)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1773, file: !1774, line: 224, baseType: !1079, size: 64, offset: 6848)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1773, file: !1774, line: 227, baseType: !744, size: 192, offset: 6912)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1773, file: !1774, line: 233, baseType: !744, size: 192, offset: 7104)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1236, file: !965, line: 970, baseType: !1873, size: 64, offset: 9280)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1774, line: 20, size: 16576, elements: !1875)
!1875 = !{!1876, !1877, !1878, !1879}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1874, file: !1774, line: 21, baseType: !251)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1874, file: !1774, line: 22, baseType: !1248, size: 32)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1874, file: !1774, line: 23, baseType: !1499, size: 128, offset: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1874, file: !1774, line: 24, baseType: !1880, size: 16384, offset: 192)
!1880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1881, size: 16384, elements: !297)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1784, line: 49, size: 256, elements: !1882)
!1882 = !{!1883}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1881, file: !1784, line: 50, baseType: !1884, size: 256)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1784, line: 35, size: 256, elements: !1885)
!1885 = !{!1886, !1893, !1894, !1900}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1884, file: !1784, line: 37, baseType: !1887, size: 64)
!1887 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1888, line: 19, baseType: !1889)
!1888 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1888, line: 18, baseType: !1891)
!1891 = !DISubroutineType(types: !1892)
!1892 = !{null, !224}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1884, file: !1784, line: 38, baseType: !342, size: 64, offset: 64)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1884, file: !1784, line: 44, baseType: !1895, size: 64, offset: 128)
!1895 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1888, line: 22, baseType: !1896)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 64)
!1897 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1888, line: 21, baseType: !1898)
!1898 = !DISubroutineType(types: !1899)
!1899 = !{null}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1884, file: !1784, line: 46, baseType: !1788, size: 64, offset: 192)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1236, file: !965, line: 971, baseType: !1788, size: 64, offset: 9344)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1236, file: !965, line: 972, baseType: !1788, size: 64, offset: 9408)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1236, file: !965, line: 974, baseType: !1788, size: 64, offset: 9472)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1236, file: !965, line: 975, baseType: !1783, size: 192, offset: 9536)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1236, file: !965, line: 976, baseType: !342, size: 64, offset: 9728)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1236, file: !965, line: 977, baseType: !339, size: 64, offset: 9792)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1236, file: !965, line: 978, baseType: !7, size: 32, offset: 9856)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1236, file: !965, line: 980, baseType: !386, size: 64, offset: 9920)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1236, file: !965, line: 989, baseType: !1910, size: 128, offset: 9984)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1911, line: 35, size: 128, elements: !1912)
!1911 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1912 = !{!1913, !1914, !1915}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1910, file: !1911, line: 36, baseType: !224, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1910, file: !1911, line: 37, baseType: !818, size: 32, offset: 32)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1910, file: !1911, line: 38, baseType: !1916, size: 64, offset: 64)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 64)
!1917 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1911, line: 23, flags: DIFlagFwdDecl)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1236, file: !965, line: 992, baseType: !439, size: 64, offset: 10112)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1236, file: !965, line: 993, baseType: !439, size: 64, offset: 10176)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1236, file: !965, line: 996, baseType: !251, offset: 10240)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1236, file: !965, line: 999, baseType: !844, offset: 10240)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1236, file: !965, line: 1001, baseType: !1923, size: 64, offset: 10240)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !965, line: 636, size: 64, elements: !1924)
!1924 = !{!1925}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1923, file: !965, line: 637, baseType: !1926, size: 64)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1236, file: !965, line: 1005, baseType: !823, size: 128, offset: 10304)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1236, file: !965, line: 1007, baseType: !1235, size: 64, offset: 10432)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1236, file: !965, line: 1009, baseType: !1930, size: 64, offset: 10496)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64)
!1931 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !965, line: 1009, flags: DIFlagFwdDecl)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1236, file: !965, line: 1043, baseType: !218, size: 64, offset: 10560)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1236, file: !965, line: 1046, baseType: !1934, size: 64, offset: 10624)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !965, line: 41, flags: DIFlagFwdDecl)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1236, file: !965, line: 1050, baseType: !1937, size: 64, offset: 10688)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64)
!1938 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !965, line: 42, flags: DIFlagFwdDecl)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1236, file: !965, line: 1054, baseType: !1940, size: 64, offset: 10752)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 64)
!1941 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !965, line: 55, flags: DIFlagFwdDecl)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1236, file: !965, line: 1056, baseType: !1943, size: 64, offset: 10816)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64)
!1944 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !965, line: 40, flags: DIFlagFwdDecl)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1236, file: !965, line: 1058, baseType: !1946, size: 64, offset: 10880)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1948, line: 99, size: 704, elements: !1949)
!1948 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1949 = !{!1950, !1951, !1952, !1953, !1954, !1955, !1956, !1975, !1976}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1947, file: !1948, line: 100, baseType: !748, size: 64)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1947, file: !1948, line: 101, baseType: !818, size: 32, offset: 64)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1947, file: !1948, line: 102, baseType: !818, size: 32, offset: 96)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1947, file: !1948, line: 105, baseType: !251, offset: 128)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1947, file: !1948, line: 107, baseType: !334, size: 16, offset: 128)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1947, file: !1948, line: 109, baseType: !809, size: 128, offset: 192)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1947, file: !1948, line: 110, baseType: !1957, size: 64, offset: 320)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 64)
!1958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1948, line: 73, size: 448, elements: !1959)
!1959 = !{!1960, !1963, !1964, !1969, !1974}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1958, file: !1948, line: 74, baseType: !1961, size: 64)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!1962 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !1948, line: 74, flags: DIFlagFwdDecl)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !1958, file: !1948, line: 75, baseType: !1946, size: 64, offset: 64)
!1964 = !DIDerivedType(tag: DW_TAG_member, scope: !1958, file: !1948, line: 83, baseType: !1965, size: 128, offset: 128)
!1965 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1958, file: !1948, line: 83, size: 128, elements: !1966)
!1966 = !{!1967, !1968}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !1965, file: !1948, line: 84, baseType: !237, size: 128)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !1965, file: !1948, line: 85, baseType: !1039, size: 64)
!1969 = !DIDerivedType(tag: DW_TAG_member, scope: !1958, file: !1948, line: 87, baseType: !1970, size: 128, offset: 256)
!1970 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1958, file: !1948, line: 87, size: 128, elements: !1971)
!1971 = !{!1972, !1973}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !1970, file: !1948, line: 88, baseType: !660, size: 128)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !1970, file: !1948, line: 89, baseType: !383, size: 128, align: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1958, file: !1948, line: 92, baseType: !7, size: 32, offset: 384)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1947, file: !1948, line: 111, baseType: !656, size: 64, offset: 384)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1947, file: !1948, line: 113, baseType: !1977, size: 256, offset: 448)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1978, line: 102, size: 256, elements: !1979)
!1978 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1979 = !{!1980, !1981, !1982}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1977, file: !1978, line: 103, baseType: !748, size: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1977, file: !1978, line: 104, baseType: !237, size: 128, offset: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1977, file: !1978, line: 105, baseType: !1983, size: 64, offset: 192)
!1983 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1978, line: 21, baseType: !1984)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 64)
!1985 = !DISubroutineType(types: !1986)
!1986 = !{null, !1987}
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 64)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1236, file: !965, line: 1061, baseType: !1989, size: 64, offset: 10944)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 64)
!1990 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !965, line: 43, flags: DIFlagFwdDecl)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1236, file: !965, line: 1064, baseType: !342, size: 64, offset: 11008)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1236, file: !965, line: 1065, baseType: !1993, size: 64, offset: 11072)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 64)
!1994 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1784, line: 14, baseType: !1995)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1784, line: 12, size: 384, elements: !1996)
!1996 = !{!1997}
!1997 = !DIDerivedType(tag: DW_TAG_member, scope: !1995, file: !1784, line: 13, baseType: !1998, size: 384)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1995, file: !1784, line: 13, size: 384, elements: !1999)
!1999 = !{!2000, !2001, !2002, !2003}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !1998, file: !1784, line: 13, baseType: !224, size: 32)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !1998, file: !1784, line: 13, baseType: !224, size: 32, offset: 32)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !1998, file: !1784, line: 13, baseType: !224, size: 32, offset: 64)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !1998, file: !1784, line: 13, baseType: !2004, size: 256, offset: 128)
!2004 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2005, line: 32, size: 256, elements: !2006)
!2005 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2006 = !{!2007, !2012, !2025, !2031, !2040, !2060, !2065}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2004, file: !2005, line: 37, baseType: !2008, size: 64)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2004, file: !2005, line: 34, size: 64, elements: !2009)
!2009 = !{!2010, !2011}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2008, file: !2005, line: 35, baseType: !1478, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2008, file: !2005, line: 36, baseType: !459, size: 32, offset: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2004, file: !2005, line: 45, baseType: !2013, size: 192)
!2013 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2004, file: !2005, line: 40, size: 192, elements: !2014)
!2014 = !{!2015, !2017, !2018, !2024}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2013, file: !2005, line: 41, baseType: !2016, size: 32)
!2016 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !325, line: 95, baseType: !224)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2013, file: !2005, line: 42, baseType: !224, size: 32, offset: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2013, file: !2005, line: 43, baseType: !2019, size: 64, offset: 64)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2005, line: 11, baseType: !2020)
!2020 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2005, line: 8, size: 64, elements: !2021)
!2021 = !{!2022, !2023}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2020, file: !2005, line: 9, baseType: !224, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2020, file: !2005, line: 10, baseType: !218, size: 64)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2013, file: !2005, line: 44, baseType: !224, size: 32, offset: 128)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2004, file: !2005, line: 52, baseType: !2026, size: 128)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2004, file: !2005, line: 48, size: 128, elements: !2027)
!2027 = !{!2028, !2029, !2030}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2026, file: !2005, line: 49, baseType: !1478, size: 32)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2026, file: !2005, line: 50, baseType: !459, size: 32, offset: 32)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2026, file: !2005, line: 51, baseType: !2019, size: 64, offset: 64)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2004, file: !2005, line: 61, baseType: !2032, size: 256)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2004, file: !2005, line: 55, size: 256, elements: !2033)
!2033 = !{!2034, !2035, !2036, !2037, !2039}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2032, file: !2005, line: 56, baseType: !1478, size: 32)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2032, file: !2005, line: 57, baseType: !459, size: 32, offset: 32)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2032, file: !2005, line: 58, baseType: !224, size: 32, offset: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2032, file: !2005, line: 59, baseType: !2038, size: 64, offset: 128)
!2038 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !325, line: 94, baseType: !326)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2032, file: !2005, line: 60, baseType: !2038, size: 64, offset: 192)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2004, file: !2005, line: 95, baseType: !2041, size: 256)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2004, file: !2005, line: 64, size: 256, elements: !2042)
!2042 = !{!2043, !2044}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2041, file: !2005, line: 65, baseType: !218, size: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, scope: !2041, file: !2005, line: 77, baseType: !2045, size: 192, offset: 64)
!2045 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2041, file: !2005, line: 77, size: 192, elements: !2046)
!2046 = !{!2047, !2048, !2055}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2045, file: !2005, line: 82, baseType: !1224, size: 16)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2045, file: !2005, line: 88, baseType: !2049, size: 192)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2045, file: !2005, line: 84, size: 192, elements: !2050)
!2050 = !{!2051, !2053, !2054}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2049, file: !2005, line: 85, baseType: !2052, size: 64)
!2052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !235, size: 64, elements: !1348)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2049, file: !2005, line: 86, baseType: !218, size: 64, offset: 64)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2049, file: !2005, line: 87, baseType: !218, size: 64, offset: 128)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2045, file: !2005, line: 93, baseType: !2056, size: 96)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2045, file: !2005, line: 90, size: 96, elements: !2057)
!2057 = !{!2058, !2059}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2056, file: !2005, line: 91, baseType: !2052, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2056, file: !2005, line: 92, baseType: !435, size: 32, offset: 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2004, file: !2005, line: 101, baseType: !2061, size: 128)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2004, file: !2005, line: 98, size: 128, elements: !2062)
!2062 = !{!2063, !2064}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2061, file: !2005, line: 99, baseType: !327, size: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2061, file: !2005, line: 100, baseType: !224, size: 32, offset: 64)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2004, file: !2005, line: 108, baseType: !2066, size: 128)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2004, file: !2005, line: 104, size: 128, elements: !2067)
!2067 = !{!2068, !2069, !2070}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2066, file: !2005, line: 105, baseType: !218, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2066, file: !2005, line: 106, baseType: !224, size: 32, offset: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2066, file: !2005, line: 107, baseType: !7, size: 32, offset: 96)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1236, file: !965, line: 1067, baseType: !1856, offset: 11136)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1236, file: !965, line: 1099, baseType: !2073, size: 64, offset: 11136)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2074 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !965, line: 56, flags: DIFlagFwdDecl)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1236, file: !965, line: 1103, baseType: !237, size: 128, offset: 11200)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1236, file: !965, line: 1104, baseType: !2077, size: 64, offset: 11328)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2078 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !965, line: 46, flags: DIFlagFwdDecl)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1236, file: !965, line: 1105, baseType: !744, size: 192, offset: 11392)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1236, file: !965, line: 1106, baseType: !7, size: 32, offset: 11584)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1236, file: !965, line: 1109, baseType: !2082, size: 128, offset: 11648)
!2082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2083, size: 128, elements: !1587)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64)
!2084 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !965, line: 51, flags: DIFlagFwdDecl)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1236, file: !965, line: 1110, baseType: !744, size: 192, offset: 11776)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1236, file: !965, line: 1111, baseType: !237, size: 128, offset: 11968)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1236, file: !965, line: 1173, baseType: !2088, size: 64, offset: 12096)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2090, line: 62, size: 256, align: 256, elements: !2091)
!2090 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2091 = !{!2092, !2093, !2094, !2099}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2089, file: !2090, line: 75, baseType: !435, size: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2089, file: !2090, line: 90, baseType: !435, size: 32, offset: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2089, file: !2090, line: 124, baseType: !2095, size: 64, offset: 64)
!2095 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2089, file: !2090, line: 109, size: 64, elements: !2096)
!2096 = !{!2097, !2098}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2095, file: !2090, line: 110, baseType: !440, size: 64)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2095, file: !2090, line: 112, baseType: !440, size: 64)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2089, file: !2090, line: 144, baseType: !435, size: 32, offset: 128)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1236, file: !965, line: 1174, baseType: !433, size: 32, offset: 12160)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1236, file: !965, line: 1179, baseType: !342, size: 64, offset: 12224)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1236, file: !965, line: 1182, baseType: !2103, size: 128, offset: 12288)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1176, line: 76, size: 128, elements: !2104)
!2104 = !{!2105, !2110, !2111}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2103, file: !1176, line: 85, baseType: !2106, size: 64)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2107, line: 7, size: 64, elements: !2108)
!2107 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2108 = !{!2109}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2106, file: !2107, line: 12, baseType: !1385, size: 64)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2103, file: !1176, line: 88, baseType: !508, size: 8, offset: 64)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2103, file: !1176, line: 95, baseType: !508, size: 8, offset: 72)
!2112 = !DIDerivedType(tag: DW_TAG_member, scope: !1236, file: !965, line: 1184, baseType: !2113, size: 128, offset: 12416)
!2113 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1236, file: !965, line: 1184, size: 128, elements: !2114)
!2114 = !{!2115, !2116}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2113, file: !965, line: 1185, baseType: !1248, size: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2113, file: !965, line: 1186, baseType: !383, size: 128, align: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1236, file: !965, line: 1190, baseType: !963, size: 64, offset: 12544)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1236, file: !965, line: 1192, baseType: !2119, size: 128, offset: 12608)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1176, line: 64, size: 128, elements: !2120)
!2120 = !{!2121, !2122, !2123}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2119, file: !1176, line: 65, baseType: !791, size: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2119, file: !1176, line: 67, baseType: !435, size: 32, offset: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2119, file: !1176, line: 68, baseType: !435, size: 32, offset: 96)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1236, file: !965, line: 1206, baseType: !224, size: 32, offset: 12736)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1236, file: !965, line: 1207, baseType: !224, size: 32, offset: 12768)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1236, file: !965, line: 1209, baseType: !342, size: 64, offset: 12800)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1236, file: !965, line: 1219, baseType: !439, size: 64, offset: 12864)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1236, file: !965, line: 1220, baseType: !439, size: 64, offset: 12928)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1236, file: !965, line: 1317, baseType: !224, size: 32, offset: 12992)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1236, file: !965, line: 1319, baseType: !1235, size: 64, offset: 13056)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1236, file: !965, line: 1322, baseType: !2132, size: 64, offset: 13120)
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 64)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2134, line: 56, size: 512, elements: !2135)
!2134 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2135 = !{!2136, !2137, !2138, !2139, !2140, !2141, !2142, !2144}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2133, file: !2134, line: 57, baseType: !2132, size: 64)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2133, file: !2134, line: 58, baseType: !218, size: 64, offset: 64)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2133, file: !2134, line: 59, baseType: !342, size: 64, offset: 128)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2133, file: !2134, line: 60, baseType: !342, size: 64, offset: 192)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2133, file: !2134, line: 61, baseType: !884, size: 64, offset: 256)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2133, file: !2134, line: 62, baseType: !7, size: 32, offset: 320)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2133, file: !2134, line: 63, baseType: !2143, size: 64, offset: 384)
!2143 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !238, line: 153, baseType: !439)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2133, file: !2134, line: 64, baseType: !2145, size: 64, offset: 448)
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 64)
!2146 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1236, file: !965, line: 1326, baseType: !1248, size: 32, offset: 13184)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1236, file: !965, line: 1342, baseType: !218, size: 64, offset: 13248)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1236, file: !965, line: 1343, baseType: !440, size: 64, offset: 13312)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1236, file: !965, line: 1344, baseType: !439, size: 64, offset: 13376)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1236, file: !965, line: 1345, baseType: !440, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1236, file: !965, line: 1346, baseType: !440, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1236, file: !965, line: 1347, baseType: !440, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1236, file: !965, line: 1348, baseType: !383, size: 128, align: 64, offset: 13504)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1236, file: !965, line: 1358, baseType: !2156, size: 34816, offset: 13824)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2157, line: 485, size: 34816, elements: !2158)
!2157 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2158 = !{!2159, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2188, !2189, !2190, !2191, !2192, !2193, !2196, !2197, !2198}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2156, file: !2157, line: 487, baseType: !2160, size: 192)
!2160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2161, size: 192, elements: !293)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2162, line: 16, size: 64, elements: !2163)
!2162 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2163 = !{!2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2161, file: !2162, line: 17, baseType: !923, size: 16)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2161, file: !2162, line: 18, baseType: !923, size: 16, offset: 16)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2161, file: !2162, line: 19, baseType: !923, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2161, file: !2162, line: 19, baseType: !923, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2161, file: !2162, line: 19, baseType: !923, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2161, file: !2162, line: 19, baseType: !923, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2161, file: !2162, line: 19, baseType: !923, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2161, file: !2162, line: 20, baseType: !923, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2161, file: !2162, line: 20, baseType: !923, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2161, file: !2162, line: 20, baseType: !923, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2161, file: !2162, line: 20, baseType: !923, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2161, file: !2162, line: 20, baseType: !923, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2161, file: !2162, line: 20, baseType: !923, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2156, file: !2157, line: 491, baseType: !342, size: 64, offset: 192)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2156, file: !2157, line: 495, baseType: !334, size: 16, offset: 256)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2156, file: !2157, line: 496, baseType: !334, size: 16, offset: 272)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2156, file: !2157, line: 497, baseType: !334, size: 16, offset: 288)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2156, file: !2157, line: 498, baseType: !334, size: 16, offset: 304)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2156, file: !2157, line: 502, baseType: !342, size: 64, offset: 320)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2156, file: !2157, line: 503, baseType: !342, size: 64, offset: 384)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2156, file: !2157, line: 514, baseType: !2185, size: 256, offset: 448)
!2185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2186, size: 256, elements: !1180)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 64)
!2187 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2157, line: 483, flags: DIFlagFwdDecl)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2156, file: !2157, line: 516, baseType: !342, size: 64, offset: 704)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2156, file: !2157, line: 518, baseType: !342, size: 64, offset: 768)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2156, file: !2157, line: 520, baseType: !342, size: 64, offset: 832)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2156, file: !2157, line: 521, baseType: !342, size: 64, offset: 896)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2156, file: !2157, line: 522, baseType: !342, size: 64, offset: 960)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2156, file: !2157, line: 528, baseType: !2194, size: 64, offset: 1024)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64)
!2195 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2157, line: 10, flags: DIFlagFwdDecl)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2156, file: !2157, line: 535, baseType: !342, size: 64, offset: 1088)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2156, file: !2157, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2156, file: !2157, line: 540, baseType: !2199, size: 33280, offset: 1536)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2200, line: 317, size: 33280, elements: !2201)
!2200 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2201 = !{!2202, !2203, !2204}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2199, file: !2200, line: 330, baseType: !7, size: 32)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2199, file: !2200, line: 337, baseType: !342, size: 64, offset: 64)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2199, file: !2200, line: 348, baseType: !2205, size: 32768, offset: 512)
!2205 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2200, line: 304, size: 32768, elements: !2206)
!2206 = !{!2207, !2222, !2261, !2311, !2324}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2205, file: !2200, line: 305, baseType: !2208, size: 896)
!2208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2200, line: 12, size: 896, elements: !2209)
!2209 = !{!2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2221}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2208, file: !2200, line: 13, baseType: !433, size: 32)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2208, file: !2200, line: 14, baseType: !433, size: 32, offset: 32)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2208, file: !2200, line: 15, baseType: !433, size: 32, offset: 64)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2208, file: !2200, line: 16, baseType: !433, size: 32, offset: 96)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2208, file: !2200, line: 17, baseType: !433, size: 32, offset: 128)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2208, file: !2200, line: 18, baseType: !433, size: 32, offset: 160)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2208, file: !2200, line: 19, baseType: !433, size: 32, offset: 192)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2208, file: !2200, line: 22, baseType: !2218, size: 640, offset: 224)
!2218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !433, size: 640, elements: !2219)
!2219 = !{!2220}
!2220 = !DISubrange(count: 20)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2208, file: !2200, line: 25, baseType: !433, size: 32, offset: 864)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2205, file: !2200, line: 306, baseType: !2223, size: 4096, align: 128)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2200, line: 34, size: 4096, align: 128, elements: !2224)
!2224 = !{!2225, !2226, !2227, !2228, !2229, !2244, !2245, !2246, !2250, !2252, !2256}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2223, file: !2200, line: 35, baseType: !923, size: 16)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2223, file: !2200, line: 36, baseType: !923, size: 16, offset: 16)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2223, file: !2200, line: 37, baseType: !923, size: 16, offset: 32)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2223, file: !2200, line: 38, baseType: !923, size: 16, offset: 48)
!2229 = !DIDerivedType(tag: DW_TAG_member, scope: !2223, file: !2200, line: 39, baseType: !2230, size: 128, offset: 64)
!2230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2223, file: !2200, line: 39, size: 128, elements: !2231)
!2231 = !{!2232, !2237}
!2232 = !DIDerivedType(tag: DW_TAG_member, scope: !2230, file: !2200, line: 40, baseType: !2233, size: 128)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2230, file: !2200, line: 40, size: 128, elements: !2234)
!2234 = !{!2235, !2236}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2233, file: !2200, line: 41, baseType: !439, size: 64)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2233, file: !2200, line: 42, baseType: !439, size: 64, offset: 64)
!2237 = !DIDerivedType(tag: DW_TAG_member, scope: !2230, file: !2200, line: 44, baseType: !2238, size: 128)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2230, file: !2200, line: 44, size: 128, elements: !2239)
!2239 = !{!2240, !2241, !2242, !2243}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2238, file: !2200, line: 45, baseType: !433, size: 32)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2238, file: !2200, line: 46, baseType: !433, size: 32, offset: 32)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2238, file: !2200, line: 47, baseType: !433, size: 32, offset: 64)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2238, file: !2200, line: 48, baseType: !433, size: 32, offset: 96)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2223, file: !2200, line: 51, baseType: !433, size: 32, offset: 192)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2223, file: !2200, line: 52, baseType: !433, size: 32, offset: 224)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2223, file: !2200, line: 55, baseType: !2247, size: 1024, offset: 256)
!2247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !433, size: 1024, elements: !2248)
!2248 = !{!2249}
!2249 = !DISubrange(count: 32)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2223, file: !2200, line: 58, baseType: !2251, size: 2048, offset: 1280)
!2251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !433, size: 2048, elements: !297)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2223, file: !2200, line: 60, baseType: !2253, size: 384, offset: 3328)
!2253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !433, size: 384, elements: !2254)
!2254 = !{!2255}
!2255 = !DISubrange(count: 12)
!2256 = !DIDerivedType(tag: DW_TAG_member, scope: !2223, file: !2200, line: 62, baseType: !2257, size: 384, offset: 3712)
!2257 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2223, file: !2200, line: 62, size: 384, elements: !2258)
!2258 = !{!2259, !2260}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2257, file: !2200, line: 63, baseType: !2253, size: 384)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2257, file: !2200, line: 64, baseType: !2253, size: 384)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2205, file: !2200, line: 307, baseType: !2262, size: 1088)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2200, line: 79, size: 1088, elements: !2263)
!2263 = !{!2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2310}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2262, file: !2200, line: 80, baseType: !433, size: 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2262, file: !2200, line: 81, baseType: !433, size: 32, offset: 32)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2262, file: !2200, line: 82, baseType: !433, size: 32, offset: 64)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2262, file: !2200, line: 83, baseType: !433, size: 32, offset: 96)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2262, file: !2200, line: 84, baseType: !433, size: 32, offset: 128)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2262, file: !2200, line: 85, baseType: !433, size: 32, offset: 160)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2262, file: !2200, line: 86, baseType: !433, size: 32, offset: 192)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2262, file: !2200, line: 88, baseType: !2218, size: 640, offset: 224)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2262, file: !2200, line: 89, baseType: !1370, size: 8, offset: 864)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2262, file: !2200, line: 90, baseType: !1370, size: 8, offset: 872)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2262, file: !2200, line: 91, baseType: !1370, size: 8, offset: 880)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2262, file: !2200, line: 92, baseType: !1370, size: 8, offset: 888)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2262, file: !2200, line: 93, baseType: !1370, size: 8, offset: 896)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2262, file: !2200, line: 94, baseType: !1370, size: 8, offset: 904)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2262, file: !2200, line: 95, baseType: !2279, size: 64, offset: 960)
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2280, size: 64)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2281, line: 11, size: 128, elements: !2282)
!2281 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2282 = !{!2283, !2284}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2280, file: !2281, line: 12, baseType: !327, size: 64)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2280, file: !2281, line: 13, baseType: !2285, size: 64, offset: 64)
!2285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2286, size: 64)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2287, line: 56, size: 1344, elements: !2288)
!2287 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2288 = !{!2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2286, file: !2287, line: 61, baseType: !342, size: 64)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2286, file: !2287, line: 62, baseType: !342, size: 64, offset: 64)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2286, file: !2287, line: 63, baseType: !342, size: 64, offset: 128)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2286, file: !2287, line: 64, baseType: !342, size: 64, offset: 192)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2286, file: !2287, line: 65, baseType: !342, size: 64, offset: 256)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2286, file: !2287, line: 66, baseType: !342, size: 64, offset: 320)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2286, file: !2287, line: 68, baseType: !342, size: 64, offset: 384)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2286, file: !2287, line: 69, baseType: !342, size: 64, offset: 448)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2286, file: !2287, line: 70, baseType: !342, size: 64, offset: 512)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2286, file: !2287, line: 71, baseType: !342, size: 64, offset: 576)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2286, file: !2287, line: 72, baseType: !342, size: 64, offset: 640)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2286, file: !2287, line: 73, baseType: !342, size: 64, offset: 704)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2286, file: !2287, line: 74, baseType: !342, size: 64, offset: 768)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2286, file: !2287, line: 75, baseType: !342, size: 64, offset: 832)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2286, file: !2287, line: 76, baseType: !342, size: 64, offset: 896)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2286, file: !2287, line: 81, baseType: !342, size: 64, offset: 960)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2286, file: !2287, line: 83, baseType: !342, size: 64, offset: 1024)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2286, file: !2287, line: 84, baseType: !342, size: 64, offset: 1088)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2286, file: !2287, line: 85, baseType: !342, size: 64, offset: 1152)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2286, file: !2287, line: 86, baseType: !342, size: 64, offset: 1216)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2286, file: !2287, line: 87, baseType: !342, size: 64, offset: 1280)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2262, file: !2200, line: 96, baseType: !433, size: 32, offset: 1024)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2205, file: !2200, line: 308, baseType: !2312, size: 4608, align: 512)
!2312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2200, line: 289, size: 4608, align: 512, elements: !2313)
!2313 = !{!2314, !2315, !2322}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2312, file: !2200, line: 290, baseType: !2223, size: 4096, align: 128)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2312, file: !2200, line: 291, baseType: !2316, size: 512, offset: 4096)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2200, line: 268, size: 512, elements: !2317)
!2317 = !{!2318, !2319, !2320}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2316, file: !2200, line: 269, baseType: !439, size: 64)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2316, file: !2200, line: 270, baseType: !439, size: 64, offset: 64)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2316, file: !2200, line: 271, baseType: !2321, size: 384, offset: 128)
!2321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !439, size: 384, elements: !1643)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2312, file: !2200, line: 292, baseType: !2323, offset: 4608)
!2323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1370, elements: !1741)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2205, file: !2200, line: 309, baseType: !2325, size: 32768)
!2325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1370, size: 32768, elements: !2326)
!2326 = !{!2327}
!2327 = !DISubrange(count: 4096)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1232, file: !793, line: 378, baseType: !2329, size: 64, offset: 64)
!2329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1228, file: !793, line: 384, baseType: !1520, size: 192, offset: 192)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1083, file: !793, line: 500, baseType: !251, offset: 6656)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1083, file: !793, line: 501, baseType: !2333, size: 64, offset: 6656)
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 64)
!2334 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !793, line: 387, flags: DIFlagFwdDecl)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1083, file: !793, line: 516, baseType: !1731, size: 64, offset: 6720)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1083, file: !793, line: 519, baseType: !370, size: 64, offset: 6784)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1083, file: !793, line: 521, baseType: !2338, size: 64, offset: 6848)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 64)
!2339 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !793, line: 521, flags: DIFlagFwdDecl)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1083, file: !793, line: 545, baseType: !818, size: 32, offset: 6912)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1083, file: !793, line: 548, baseType: !508, size: 8, offset: 6944)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1083, file: !793, line: 550, baseType: !2343, offset: 6952)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2344, line: 142, elements: !265)
!2344 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1083, file: !793, line: 554, baseType: !1977, size: 256, offset: 6976)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1083, file: !793, line: 557, baseType: !433, size: 32, offset: 7232)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1080, file: !793, line: 565, baseType: !2348, offset: 7296)
!2348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, elements: !2349)
!2349 = !{!2350}
!2350 = !DISubrange(count: -1)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1076, file: !793, line: 151, baseType: !818, size: 32)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1068, file: !793, line: 156, baseType: !251, offset: 256)
!2353 = !DIDerivedType(tag: DW_TAG_member, scope: !797, file: !793, line: 159, baseType: !2354, size: 128)
!2354 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !797, file: !793, line: 159, size: 128, elements: !2355)
!2355 = !{!2356, !2359}
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2354, file: !793, line: 161, baseType: !2357, size: 64)
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2358, size: 64)
!2358 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !793, line: 161, flags: DIFlagFwdDecl)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2354, file: !793, line: 162, baseType: !218, size: 64, offset: 64)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !797, file: !793, line: 176, baseType: !383, size: 128, align: 64)
!2361 = !DIDerivedType(tag: DW_TAG_member, scope: !792, file: !793, line: 179, baseType: !2362, size: 32, offset: 384)
!2362 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !792, file: !793, line: 179, size: 32, elements: !2363)
!2363 = !{!2364, !2365, !2366, !2367}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2362, file: !793, line: 184, baseType: !818, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2362, file: !793, line: 192, baseType: !7, size: 32)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2362, file: !793, line: 194, baseType: !7, size: 32)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2362, file: !793, line: 195, baseType: !224, size: 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !792, file: !793, line: 199, baseType: !818, size: 32, offset: 416)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !678, file: !31, line: 1964, baseType: !2370, size: 64, offset: 1344)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64)
!2371 = !DISubroutineType(types: !2372)
!2372 = !{!327, !617, !2373}
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 64)
!2374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2375, line: 12, size: 256, elements: !2376)
!2375 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2376 = !{!2377, !2378, !2379, !2380, !2381}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2374, file: !2375, line: 13, baseType: !814, size: 32)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2374, file: !2375, line: 16, baseType: !224, size: 32, offset: 32)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2374, file: !2375, line: 23, baseType: !342, size: 64, offset: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2374, file: !2375, line: 30, baseType: !342, size: 64, offset: 128)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2374, file: !2375, line: 33, baseType: !2382, size: 64, offset: 192)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 64)
!2383 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !793, line: 27, flags: DIFlagFwdDecl)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !678, file: !31, line: 1966, baseType: !2370, size: 64, offset: 1408)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !618, file: !31, line: 1424, baseType: !2386, size: 64, offset: 448)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 64)
!2387 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2388)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !25, line: 322, size: 704, elements: !2389)
!2389 = !{!2390, !2436, !2440, !2444, !2445, !2446, !2447, !2448, !2453, !2458, !2462}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2388, file: !25, line: 323, baseType: !2391, size: 64)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 64)
!2392 = !DISubroutineType(types: !2393)
!2393 = !{!224, !2394}
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 64)
!2395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !25, line: 294, size: 1600, elements: !2396)
!2396 = !{!2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2421, !2422, !2423}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2395, file: !25, line: 295, baseType: !660, size: 128)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2395, file: !25, line: 296, baseType: !237, size: 128, offset: 128)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2395, file: !25, line: 297, baseType: !237, size: 128, offset: 256)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2395, file: !25, line: 298, baseType: !237, size: 128, offset: 384)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2395, file: !25, line: 299, baseType: !744, size: 192, offset: 512)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2395, file: !25, line: 300, baseType: !251, offset: 704)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2395, file: !25, line: 301, baseType: !818, size: 32, offset: 704)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2395, file: !25, line: 302, baseType: !617, size: 64, offset: 768)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2395, file: !25, line: 303, baseType: !2406, size: 64, offset: 832)
!2406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !25, line: 68, size: 64, elements: !2407)
!2407 = !{!2408, !2420}
!2408 = !DIDerivedType(tag: DW_TAG_member, scope: !2406, file: !25, line: 69, baseType: !2409, size: 32)
!2409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2406, file: !25, line: 69, size: 32, elements: !2410)
!2410 = !{!2411, !2412, !2413}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2409, file: !25, line: 70, baseType: !453, size: 32)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2409, file: !25, line: 71, baseType: !461, size: 32)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2409, file: !25, line: 72, baseType: !2414, size: 32)
!2414 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2415, line: 24, baseType: !2416)
!2415 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2415, line: 22, size: 32, elements: !2417)
!2417 = !{!2418}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2416, file: !2415, line: 23, baseType: !2419, size: 32)
!2419 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2415, line: 20, baseType: !459)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2406, file: !25, line: 74, baseType: !24, size: 32, offset: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2395, file: !25, line: 304, baseType: !549, size: 64, offset: 896)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2395, file: !25, line: 305, baseType: !342, size: 64, offset: 960)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2395, file: !25, line: 306, baseType: !2424, size: 576, offset: 1024)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !25, line: 205, size: 576, elements: !2425)
!2425 = !{!2426, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2424, file: !25, line: 206, baseType: !2427, size: 64)
!2427 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !25, line: 66, baseType: !551)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2424, file: !25, line: 207, baseType: !2427, size: 64, offset: 64)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2424, file: !25, line: 208, baseType: !2427, size: 64, offset: 128)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2424, file: !25, line: 209, baseType: !2427, size: 64, offset: 192)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2424, file: !25, line: 210, baseType: !2427, size: 64, offset: 256)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2424, file: !25, line: 211, baseType: !2427, size: 64, offset: 320)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2424, file: !25, line: 212, baseType: !2427, size: 64, offset: 384)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2424, file: !25, line: 213, baseType: !557, size: 64, offset: 448)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2424, file: !25, line: 214, baseType: !557, size: 64, offset: 512)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2388, file: !25, line: 324, baseType: !2437, size: 64, offset: 64)
!2437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2438, size: 64)
!2438 = !DISubroutineType(types: !2439)
!2439 = !{!2394, !617, !224}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2388, file: !25, line: 325, baseType: !2441, size: 64, offset: 128)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 64)
!2442 = !DISubroutineType(types: !2443)
!2443 = !{null, !2394}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2388, file: !25, line: 326, baseType: !2391, size: 64, offset: 192)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2388, file: !25, line: 327, baseType: !2391, size: 64, offset: 256)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2388, file: !25, line: 328, baseType: !2391, size: 64, offset: 320)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2388, file: !25, line: 329, baseType: !706, size: 64, offset: 384)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2388, file: !25, line: 332, baseType: !2449, size: 64, offset: 448)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 64)
!2450 = !DISubroutineType(types: !2451)
!2451 = !{!2452, !447}
!2452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2388, file: !25, line: 333, baseType: !2454, size: 64, offset: 512)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 64)
!2455 = !DISubroutineType(types: !2456)
!2456 = !{!224, !447, !2457}
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 64)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2388, file: !25, line: 335, baseType: !2459, size: 64, offset: 576)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 64)
!2460 = !DISubroutineType(types: !2461)
!2461 = !{!224, !447, !2452}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2388, file: !25, line: 337, baseType: !2463, size: 64, offset: 640)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 64)
!2464 = !DISubroutineType(types: !2465)
!2465 = !{!224, !617, !2466}
!2466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 64)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !618, file: !31, line: 1425, baseType: !2468, size: 64, offset: 512)
!2468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2469, size: 64)
!2469 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2470)
!2470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !25, line: 428, size: 704, elements: !2471)
!2471 = !{!2472, !2476, !2477, !2481, !2482, !2483, !2498, !2521, !2525, !2526, !2549}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2470, file: !25, line: 429, baseType: !2473, size: 64)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 64)
!2474 = !DISubroutineType(types: !2475)
!2475 = !{!224, !617, !224, !224, !567}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2470, file: !25, line: 430, baseType: !706, size: 64, offset: 64)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2470, file: !25, line: 431, baseType: !2478, size: 64, offset: 128)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 64)
!2479 = !DISubroutineType(types: !2480)
!2480 = !{!224, !617, !7}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2470, file: !25, line: 432, baseType: !2478, size: 64, offset: 192)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2470, file: !25, line: 433, baseType: !706, size: 64, offset: 256)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2470, file: !25, line: 434, baseType: !2484, size: 64, offset: 320)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 64)
!2485 = !DISubroutineType(types: !2486)
!2486 = !{!224, !617, !224, !2487}
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 64)
!2488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !25, line: 415, size: 256, elements: !2489)
!2489 = !{!2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2488, file: !25, line: 416, baseType: !224, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2488, file: !25, line: 417, baseType: !7, size: 32, offset: 32)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2488, file: !25, line: 418, baseType: !7, size: 32, offset: 64)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2488, file: !25, line: 420, baseType: !7, size: 32, offset: 96)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2488, file: !25, line: 421, baseType: !7, size: 32, offset: 128)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2488, file: !25, line: 422, baseType: !7, size: 32, offset: 160)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2488, file: !25, line: 423, baseType: !7, size: 32, offset: 192)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2488, file: !25, line: 424, baseType: !7, size: 32, offset: 224)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2470, file: !25, line: 435, baseType: !2499, size: 64, offset: 384)
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 64)
!2500 = !DISubroutineType(types: !2501)
!2501 = !{!224, !617, !2406, !2502}
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 64)
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !25, line: 343, size: 960, elements: !2504)
!2504 = !{!2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2503, file: !25, line: 344, baseType: !224, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2503, file: !25, line: 345, baseType: !439, size: 64, offset: 64)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2503, file: !25, line: 346, baseType: !439, size: 64, offset: 128)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2503, file: !25, line: 347, baseType: !439, size: 64, offset: 192)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2503, file: !25, line: 348, baseType: !439, size: 64, offset: 256)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2503, file: !25, line: 349, baseType: !439, size: 64, offset: 320)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2503, file: !25, line: 350, baseType: !439, size: 64, offset: 384)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2503, file: !25, line: 351, baseType: !754, size: 64, offset: 448)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2503, file: !25, line: 353, baseType: !754, size: 64, offset: 512)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2503, file: !25, line: 354, baseType: !224, size: 32, offset: 576)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2503, file: !25, line: 355, baseType: !224, size: 32, offset: 608)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2503, file: !25, line: 356, baseType: !439, size: 64, offset: 640)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2503, file: !25, line: 357, baseType: !439, size: 64, offset: 704)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2503, file: !25, line: 358, baseType: !439, size: 64, offset: 768)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2503, file: !25, line: 359, baseType: !754, size: 64, offset: 832)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2503, file: !25, line: 360, baseType: !224, size: 32, offset: 896)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2470, file: !25, line: 436, baseType: !2522, size: 64, offset: 448)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 64)
!2523 = !DISubroutineType(types: !2524)
!2524 = !{!224, !617, !2466, !2502}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2470, file: !25, line: 438, baseType: !2499, size: 64, offset: 512)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2470, file: !25, line: 439, baseType: !2527, size: 64, offset: 576)
!2527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 64)
!2528 = !DISubroutineType(types: !2529)
!2529 = !{!224, !617, !2530}
!2530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2531, size: 64)
!2531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !25, line: 409, size: 1408, elements: !2532)
!2532 = !{!2533, !2534}
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2531, file: !25, line: 410, baseType: !7, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2531, file: !25, line: 411, baseType: !2535, size: 1344, offset: 64)
!2535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2536, size: 1344, elements: !293)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !25, line: 395, size: 448, elements: !2537)
!2537 = !{!2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2548}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2536, file: !25, line: 396, baseType: !7, size: 32)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2536, file: !25, line: 397, baseType: !7, size: 32, offset: 32)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2536, file: !25, line: 399, baseType: !7, size: 32, offset: 64)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2536, file: !25, line: 400, baseType: !7, size: 32, offset: 96)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2536, file: !25, line: 401, baseType: !7, size: 32, offset: 128)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2536, file: !25, line: 402, baseType: !7, size: 32, offset: 160)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2536, file: !25, line: 403, baseType: !7, size: 32, offset: 192)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2536, file: !25, line: 404, baseType: !441, size: 64, offset: 256)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2536, file: !25, line: 405, baseType: !2547, size: 64, offset: 320)
!2547 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !238, line: 126, baseType: !439)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2536, file: !25, line: 406, baseType: !2547, size: 64, offset: 384)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2470, file: !25, line: 440, baseType: !2478, size: 64, offset: 640)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !618, file: !31, line: 1426, baseType: !2551, size: 64, offset: 576)
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 64)
!2552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2553)
!2553 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !31, line: 49, flags: DIFlagFwdDecl)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !618, file: !31, line: 1427, baseType: !342, size: 64, offset: 640)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !618, file: !31, line: 1428, baseType: !342, size: 64, offset: 704)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !618, file: !31, line: 1429, baseType: !342, size: 64, offset: 768)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !618, file: !31, line: 1430, baseType: !400, size: 64, offset: 832)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !618, file: !31, line: 1431, baseType: !838, size: 256, offset: 896)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !618, file: !31, line: 1432, baseType: !224, size: 32, offset: 1152)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !618, file: !31, line: 1433, baseType: !818, size: 32, offset: 1184)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !618, file: !31, line: 1437, baseType: !2562, size: 64, offset: 1216)
!2562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 64)
!2563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2564, size: 64)
!2564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2565)
!2565 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !31, line: 1437, flags: DIFlagFwdDecl)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !618, file: !31, line: 1449, baseType: !2567, size: 64, offset: 1280)
!2567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !416, line: 34, size: 64, elements: !2568)
!2568 = !{!2569}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2567, file: !416, line: 35, baseType: !419, size: 64)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !618, file: !31, line: 1450, baseType: !237, size: 128, offset: 1344)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !618, file: !31, line: 1451, baseType: !2572, size: 64, offset: 1472)
!2572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2573, size: 64)
!2573 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !31, line: 699, flags: DIFlagFwdDecl)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !618, file: !31, line: 1452, baseType: !1943, size: 64, offset: 1536)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !618, file: !31, line: 1453, baseType: !2576, size: 64, offset: 1600)
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 64)
!2577 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !31, line: 1453, flags: DIFlagFwdDecl)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !618, file: !31, line: 1454, baseType: !660, size: 128, offset: 1664)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !618, file: !31, line: 1455, baseType: !7, size: 32, offset: 1792)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !618, file: !31, line: 1456, baseType: !2581, size: 2432, offset: 1856)
!2581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !25, line: 518, size: 2432, elements: !2582)
!2582 = !{!2583, !2584, !2585, !2587, !2619}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2581, file: !25, line: 519, baseType: !7, size: 32)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2581, file: !25, line: 520, baseType: !838, size: 256, offset: 64)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2581, file: !25, line: 521, baseType: !2586, size: 192, offset: 320)
!2586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !447, size: 192, elements: !293)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2581, file: !25, line: 522, baseType: !2588, size: 1728, offset: 512)
!2588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2589, size: 1728, elements: !293)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !25, line: 222, size: 576, elements: !2590)
!2590 = !{!2591, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2589, file: !25, line: 223, baseType: !2592, size: 64)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 64)
!2593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !25, line: 443, size: 256, elements: !2594)
!2594 = !{!2595, !2596, !2609, !2610}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2593, file: !25, line: 444, baseType: !224, size: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2593, file: !25, line: 445, baseType: !2597, size: 64, offset: 64)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 64)
!2598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2599)
!2599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !25, line: 310, size: 512, elements: !2600)
!2600 = !{!2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608}
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2599, file: !25, line: 311, baseType: !706, size: 64)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2599, file: !25, line: 312, baseType: !706, size: 64, offset: 64)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2599, file: !25, line: 313, baseType: !706, size: 64, offset: 128)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2599, file: !25, line: 314, baseType: !706, size: 64, offset: 192)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2599, file: !25, line: 315, baseType: !2391, size: 64, offset: 256)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2599, file: !25, line: 316, baseType: !2391, size: 64, offset: 320)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2599, file: !25, line: 317, baseType: !2391, size: 64, offset: 384)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2599, file: !25, line: 318, baseType: !2463, size: 64, offset: 448)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2593, file: !25, line: 446, baseType: !651, size: 64, offset: 128)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2593, file: !25, line: 447, baseType: !2592, size: 64, offset: 192)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2589, file: !25, line: 224, baseType: !224, size: 32, offset: 64)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2589, file: !25, line: 226, baseType: !237, size: 128, offset: 128)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2589, file: !25, line: 227, baseType: !342, size: 64, offset: 256)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2589, file: !25, line: 228, baseType: !7, size: 32, offset: 320)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2589, file: !25, line: 229, baseType: !7, size: 32, offset: 352)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2589, file: !25, line: 230, baseType: !2427, size: 64, offset: 384)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2589, file: !25, line: 231, baseType: !2427, size: 64, offset: 448)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2589, file: !25, line: 232, baseType: !218, size: 64, offset: 512)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2581, file: !25, line: 523, baseType: !2620, size: 192, offset: 2240)
!2620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2597, size: 192, elements: !293)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !618, file: !31, line: 1458, baseType: !2622, size: 2112, offset: 4288)
!2622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !31, line: 1410, size: 2112, elements: !2623)
!2623 = !{!2624, !2625, !2626}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2622, file: !31, line: 1411, baseType: !224, size: 32)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2622, file: !31, line: 1412, baseType: !1499, size: 128, offset: 64)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2622, file: !31, line: 1413, baseType: !2627, size: 1920, offset: 192)
!2627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2628, size: 1920, elements: !293)
!2628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2629, line: 12, size: 640, elements: !2630)
!2629 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2630 = !{!2631, !2639, !2641, !2646, !2647}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2628, file: !2629, line: 13, baseType: !2632, size: 320)
!2632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2633, line: 17, size: 320, elements: !2634)
!2633 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2634 = !{!2635, !2636, !2637, !2638}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2632, file: !2633, line: 18, baseType: !224, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2632, file: !2633, line: 19, baseType: !224, size: 32, offset: 32)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2632, file: !2633, line: 20, baseType: !1499, size: 128, offset: 64)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2632, file: !2633, line: 22, baseType: !383, size: 128, align: 64, offset: 192)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2628, file: !2629, line: 14, baseType: !2640, size: 64, offset: 320)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2628, file: !2629, line: 15, baseType: !2642, size: 64, offset: 384)
!2642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2643, line: 16, size: 64, elements: !2644)
!2643 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2644 = !{!2645}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2642, file: !2643, line: 17, baseType: !1235, size: 64)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2628, file: !2629, line: 16, baseType: !1499, size: 128, offset: 448)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2628, file: !2629, line: 17, baseType: !818, size: 32, offset: 576)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !618, file: !31, line: 1465, baseType: !218, size: 64, offset: 6400)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !618, file: !31, line: 1468, baseType: !433, size: 32, offset: 6464)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !618, file: !31, line: 1470, baseType: !557, size: 64, offset: 6528)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !618, file: !31, line: 1471, baseType: !557, size: 64, offset: 6592)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !618, file: !31, line: 1473, baseType: !435, size: 32, offset: 6656)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !618, file: !31, line: 1474, baseType: !2654, size: 64, offset: 6720)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 64)
!2655 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !31, line: 603, flags: DIFlagFwdDecl)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !618, file: !31, line: 1477, baseType: !2657, size: 256, offset: 6784)
!2657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !235, size: 256, elements: !2248)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !618, file: !31, line: 1478, baseType: !2659, size: 128, offset: 7040)
!2659 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2660, line: 18, baseType: !2661)
!2660 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2661 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2660, line: 16, size: 128, elements: !2662)
!2662 = !{!2663}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2661, file: !2660, line: 17, baseType: !2664, size: 128)
!2664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1371, size: 128, elements: !1753)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !618, file: !31, line: 1480, baseType: !7, size: 32, offset: 7168)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !618, file: !31, line: 1481, baseType: !2667, size: 32, offset: 7200)
!2667 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !238, line: 150, baseType: !7)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !618, file: !31, line: 1487, baseType: !744, size: 192, offset: 7232)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !618, file: !31, line: 1493, baseType: !233, size: 64, offset: 7424)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !618, file: !31, line: 1495, baseType: !2671, size: 64, offset: 7488)
!2671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2672, size: 64)
!2672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2673)
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !398, line: 135, size: 1024, align: 512, elements: !2674)
!2674 = !{!2675, !2679, !2680, !2687, !2693, !2697, !2701, !2705, !2706, !2710, !2714, !2719, !2723}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2673, file: !398, line: 136, baseType: !2676, size: 64)
!2676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 64)
!2677 = !DISubroutineType(types: !2678)
!2678 = !{!224, !400, !7}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2673, file: !398, line: 137, baseType: !2676, size: 64, offset: 64)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2673, file: !398, line: 138, baseType: !2681, size: 64, offset: 128)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2682, size: 64)
!2682 = !DISubroutineType(types: !2683)
!2683 = !{!224, !2684, !2686}
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 64)
!2685 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !401)
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2673, file: !398, line: 139, baseType: !2688, size: 64, offset: 192)
!2688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2689, size: 64)
!2689 = !DISubroutineType(types: !2690)
!2690 = !{!224, !2684, !7, !233, !2691}
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2692, size: 64)
!2692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !424)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2673, file: !398, line: 141, baseType: !2694, size: 64, offset: 256)
!2694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2695, size: 64)
!2695 = !DISubroutineType(types: !2696)
!2696 = !{!224, !2684}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2673, file: !398, line: 142, baseType: !2698, size: 64, offset: 320)
!2698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2699, size: 64)
!2699 = !DISubroutineType(types: !2700)
!2700 = !{!224, !400}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2673, file: !398, line: 143, baseType: !2702, size: 64, offset: 384)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 64)
!2703 = !DISubroutineType(types: !2704)
!2704 = !{null, !400}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2673, file: !398, line: 144, baseType: !2702, size: 64, offset: 448)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2673, file: !398, line: 145, baseType: !2707, size: 64, offset: 512)
!2707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2708, size: 64)
!2708 = !DISubroutineType(types: !2709)
!2709 = !{null, !400, !447}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2673, file: !398, line: 146, baseType: !2711, size: 64, offset: 576)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 64)
!2712 = !DISubroutineType(types: !2713)
!2713 = !{!292, !400, !292, !224}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2673, file: !398, line: 147, baseType: !2715, size: 64, offset: 640)
!2715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2716, size: 64)
!2716 = !DISubroutineType(types: !2717)
!2717 = !{!396, !2718}
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 64)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2673, file: !398, line: 148, baseType: !2720, size: 64, offset: 704)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2721, size: 64)
!2721 = !DISubroutineType(types: !2722)
!2722 = !{!224, !567, !508}
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2673, file: !398, line: 149, baseType: !2724, size: 64, offset: 768)
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2725, size: 64)
!2725 = !DISubroutineType(types: !2726)
!2726 = !{!400, !400, !2727}
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 64)
!2728 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !448)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !618, file: !31, line: 1500, baseType: !224, size: 32, offset: 7552)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !618, file: !31, line: 1502, baseType: !2731, size: 448, offset: 7616)
!2731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2375, line: 60, size: 448, elements: !2732)
!2732 = !{!2733, !2738, !2739, !2740, !2741, !2742, !2743}
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2731, file: !2375, line: 61, baseType: !2734, size: 64)
!2734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2735, size: 64)
!2735 = !DISubroutineType(types: !2736)
!2736 = !{!342, !2737, !2373}
!2737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 64)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2731, file: !2375, line: 63, baseType: !2734, size: 64, offset: 64)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2731, file: !2375, line: 66, baseType: !327, size: 64, offset: 128)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2731, file: !2375, line: 67, baseType: !224, size: 32, offset: 192)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2731, file: !2375, line: 68, baseType: !7, size: 32, offset: 224)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2731, file: !2375, line: 71, baseType: !237, size: 128, offset: 256)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2731, file: !2375, line: 77, baseType: !2744, size: 64, offset: 384)
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !618, file: !31, line: 1505, baseType: !748, size: 64, offset: 8064)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !618, file: !31, line: 1508, baseType: !748, size: 64, offset: 8128)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !618, file: !31, line: 1511, baseType: !224, size: 32, offset: 8192)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !618, file: !31, line: 1514, baseType: !1013, size: 32, offset: 8224)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !618, file: !31, line: 1517, baseType: !2750, size: 64, offset: 8256)
!2750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2751, size: 64)
!2751 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1978, line: 18, flags: DIFlagFwdDecl)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !618, file: !31, line: 1518, baseType: !656, size: 64, offset: 8320)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !618, file: !31, line: 1525, baseType: !1731, size: 64, offset: 8384)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !618, file: !31, line: 1532, baseType: !2755, size: 64, offset: 8448)
!2755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2756, line: 52, size: 64, elements: !2757)
!2756 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2757 = !{!2758}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2755, file: !2756, line: 53, baseType: !2759, size: 64)
!2759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2760, size: 64)
!2760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2756, line: 40, size: 256, elements: !2761)
!2761 = !{!2762, !2763, !2768}
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2760, file: !2756, line: 42, baseType: !251)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2760, file: !2756, line: 44, baseType: !2764, size: 192)
!2764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2756, line: 28, size: 192, elements: !2765)
!2765 = !{!2766, !2767}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2764, file: !2756, line: 29, baseType: !237, size: 128)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2764, file: !2756, line: 31, baseType: !327, size: 64, offset: 128)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2760, file: !2756, line: 49, baseType: !327, size: 64, offset: 192)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !618, file: !31, line: 1533, baseType: !2755, size: 64, offset: 8512)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !618, file: !31, line: 1534, baseType: !383, size: 128, align: 64, offset: 8576)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !618, file: !31, line: 1535, baseType: !1977, size: 256, offset: 8704)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !618, file: !31, line: 1537, baseType: !744, size: 192, offset: 8960)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !618, file: !31, line: 1542, baseType: !224, size: 32, offset: 9152)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !618, file: !31, line: 1545, baseType: !251, offset: 9184)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !618, file: !31, line: 1546, baseType: !237, size: 128, offset: 9216)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !618, file: !31, line: 1548, baseType: !251, offset: 9344)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !618, file: !31, line: 1549, baseType: !237, size: 128, offset: 9344)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !448, file: !31, line: 624, baseType: !804, size: 64, offset: 256)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !448, file: !31, line: 631, baseType: !342, size: 64, offset: 320)
!2780 = !DIDerivedType(tag: DW_TAG_member, scope: !448, file: !31, line: 639, baseType: !2781, size: 32, offset: 384)
!2781 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !448, file: !31, line: 639, size: 32, elements: !2782)
!2782 = !{!2783, !2785}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2781, file: !31, line: 640, baseType: !2784, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2781, file: !31, line: 641, baseType: !7, size: 32)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !448, file: !31, line: 643, baseType: !531, size: 32, offset: 416)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !448, file: !31, line: 644, baseType: !549, size: 64, offset: 448)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !448, file: !31, line: 645, baseType: !553, size: 128, offset: 512)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !448, file: !31, line: 646, baseType: !553, size: 128, offset: 640)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !448, file: !31, line: 647, baseType: !553, size: 128, offset: 768)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !448, file: !31, line: 648, baseType: !251, offset: 896)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !448, file: !31, line: 649, baseType: !334, size: 16, offset: 896)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !448, file: !31, line: 650, baseType: !1370, size: 8, offset: 912)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !448, file: !31, line: 651, baseType: !1370, size: 8, offset: 920)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !448, file: !31, line: 652, baseType: !2547, size: 64, offset: 960)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !448, file: !31, line: 659, baseType: !342, size: 64, offset: 1024)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !448, file: !31, line: 660, baseType: !838, size: 256, offset: 1088)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !448, file: !31, line: 662, baseType: !342, size: 64, offset: 1344)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !448, file: !31, line: 663, baseType: !342, size: 64, offset: 1408)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !448, file: !31, line: 665, baseType: !660, size: 128, offset: 1472)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !448, file: !31, line: 666, baseType: !237, size: 128, offset: 1600)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !448, file: !31, line: 675, baseType: !237, size: 128, offset: 1728)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !448, file: !31, line: 676, baseType: !237, size: 128, offset: 1856)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !448, file: !31, line: 677, baseType: !237, size: 128, offset: 1984)
!2805 = !DIDerivedType(tag: DW_TAG_member, scope: !448, file: !31, line: 678, baseType: !2806, size: 128, offset: 2112)
!2806 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !448, file: !31, line: 678, size: 128, elements: !2807)
!2807 = !{!2808, !2809}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2806, file: !31, line: 679, baseType: !656, size: 64)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2806, file: !31, line: 680, baseType: !383, size: 128, align: 64)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !448, file: !31, line: 682, baseType: !750, size: 64, offset: 2240)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !448, file: !31, line: 683, baseType: !750, size: 64, offset: 2304)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !448, file: !31, line: 684, baseType: !818, size: 32, offset: 2368)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !448, file: !31, line: 685, baseType: !818, size: 32, offset: 2400)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !448, file: !31, line: 686, baseType: !818, size: 32, offset: 2432)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !448, file: !31, line: 688, baseType: !818, size: 32, offset: 2464)
!2816 = !DIDerivedType(tag: DW_TAG_member, scope: !448, file: !31, line: 690, baseType: !2817, size: 64, offset: 2496)
!2817 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !448, file: !31, line: 690, size: 64, elements: !2818)
!2818 = !{!2819, !3041}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2817, file: !31, line: 691, baseType: !2820, size: 64)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64)
!2821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2822)
!2822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !31, line: 1822, size: 2048, elements: !2823)
!2823 = !{!2824, !2825, !2829, !2833, !2837, !2838, !2839, !2843, !2856, !2857, !2865, !2869, !2870, !2874, !2875, !2879, !2884, !2885, !2889, !2893, !3001, !3005, !3006, !3010, !3011, !3015, !3019, !3024, !3028, !3032, !3036, !3040}
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2822, file: !31, line: 1823, baseType: !651, size: 64)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2822, file: !31, line: 1824, baseType: !2826, size: 64, offset: 64)
!2826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2827, size: 64)
!2827 = !DISubroutineType(types: !2828)
!2828 = !{!549, !370, !549, !224}
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2822, file: !31, line: 1825, baseType: !2830, size: 64, offset: 128)
!2830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2831, size: 64)
!2831 = !DISubroutineType(types: !2832)
!2832 = !{!323, !370, !292, !339, !766}
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2822, file: !31, line: 1826, baseType: !2834, size: 64, offset: 192)
!2834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2835, size: 64)
!2835 = !DISubroutineType(types: !2836)
!2836 = !{!323, !370, !233, !339, !766}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2822, file: !31, line: 1827, baseType: !908, size: 64, offset: 256)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2822, file: !31, line: 1828, baseType: !908, size: 64, offset: 320)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2822, file: !31, line: 1829, baseType: !2840, size: 64, offset: 384)
!2840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!2841 = !DISubroutineType(types: !2842)
!2842 = !{!224, !911, !508}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2822, file: !31, line: 1830, baseType: !2844, size: 64, offset: 448)
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2845, size: 64)
!2845 = !DISubroutineType(types: !2846)
!2846 = !{!224, !370, !2847}
!2847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2848, size: 64)
!2848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !31, line: 1776, size: 128, elements: !2849)
!2849 = !{!2850, !2855}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2848, file: !31, line: 1777, baseType: !2851, size: 64)
!2851 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !31, line: 1773, baseType: !2852)
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!2853 = !DISubroutineType(types: !2854)
!2854 = !{!224, !2847, !233, !224, !549, !439, !7}
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2848, file: !31, line: 1778, baseType: !549, size: 64, offset: 64)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2822, file: !31, line: 1831, baseType: !2844, size: 64, offset: 512)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2822, file: !31, line: 1832, baseType: !2858, size: 64, offset: 576)
!2858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2859, size: 64)
!2859 = !DISubroutineType(types: !2860)
!2860 = !{!2861, !370, !2863}
!2861 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2862, line: 52, baseType: !7)
!2862 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2864, size: 64)
!2864 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !637, line: 27, flags: DIFlagFwdDecl)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2822, file: !31, line: 1833, baseType: !2866, size: 64, offset: 640)
!2866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2867, size: 64)
!2867 = !DISubroutineType(types: !2868)
!2868 = !{!327, !370, !7, !342}
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2822, file: !31, line: 1834, baseType: !2866, size: 64, offset: 704)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2822, file: !31, line: 1835, baseType: !2871, size: 64, offset: 768)
!2871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2872, size: 64)
!2872 = !DISubroutineType(types: !2873)
!2873 = !{!224, !370, !1086}
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2822, file: !31, line: 1836, baseType: !342, size: 64, offset: 832)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2822, file: !31, line: 1837, baseType: !2876, size: 64, offset: 896)
!2876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2877, size: 64)
!2877 = !DISubroutineType(types: !2878)
!2878 = !{!224, !447, !370}
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2822, file: !31, line: 1838, baseType: !2880, size: 64, offset: 960)
!2880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2881, size: 64)
!2881 = !DISubroutineType(types: !2882)
!2882 = !{!224, !370, !2883}
!2883 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !31, line: 1007, baseType: !218)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2822, file: !31, line: 1839, baseType: !2876, size: 64, offset: 1024)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2822, file: !31, line: 1840, baseType: !2886, size: 64, offset: 1088)
!2886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2887, size: 64)
!2887 = !DISubroutineType(types: !2888)
!2888 = !{!224, !370, !549, !549, !224}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2822, file: !31, line: 1841, baseType: !2890, size: 64, offset: 1152)
!2890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2891, size: 64)
!2891 = !DISubroutineType(types: !2892)
!2892 = !{!224, !224, !370, !224}
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2822, file: !31, line: 1842, baseType: !2894, size: 64, offset: 1216)
!2894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2895, size: 64)
!2895 = !DISubroutineType(types: !2896)
!2896 = !{!224, !370, !224, !2897}
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2898, size: 64)
!2898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !31, line: 1062, size: 1664, elements: !2899)
!2899 = !{!2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2931, !2932, !2933, !2946, !2977}
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !2898, file: !31, line: 1063, baseType: !2897, size: 64)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !2898, file: !31, line: 1064, baseType: !237, size: 128, offset: 64)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !2898, file: !31, line: 1065, baseType: !660, size: 128, offset: 192)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !2898, file: !31, line: 1066, baseType: !237, size: 128, offset: 320)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !2898, file: !31, line: 1069, baseType: !237, size: 128, offset: 448)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !2898, file: !31, line: 1072, baseType: !2883, size: 64, offset: 576)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !2898, file: !31, line: 1073, baseType: !7, size: 32, offset: 640)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !2898, file: !31, line: 1074, baseType: !445, size: 8, offset: 672)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !2898, file: !31, line: 1075, baseType: !7, size: 32, offset: 704)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !2898, file: !31, line: 1076, baseType: !224, size: 32, offset: 736)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !2898, file: !31, line: 1077, baseType: !1499, size: 128, offset: 768)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !2898, file: !31, line: 1078, baseType: !370, size: 64, offset: 896)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !2898, file: !31, line: 1079, baseType: !549, size: 64, offset: 960)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !2898, file: !31, line: 1080, baseType: !549, size: 64, offset: 1024)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !2898, file: !31, line: 1082, baseType: !2915, size: 64, offset: 1088)
!2915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2916, size: 64)
!2916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !31, line: 1314, size: 320, elements: !2917)
!2917 = !{!2918, !2926, !2927, !2928, !2929, !2930}
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !2916, file: !31, line: 1315, baseType: !2919)
!2919 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2920, line: 20, baseType: !2921)
!2920 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2921 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2920, line: 11, elements: !2922)
!2922 = !{!2923}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2921, file: !2920, line: 12, baseType: !2924)
!2924 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !263, line: 33, baseType: !2925)
!2925 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !263, line: 31, elements: !265)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2916, file: !31, line: 1316, baseType: !224, size: 32)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !2916, file: !31, line: 1317, baseType: !224, size: 32, offset: 32)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !2916, file: !31, line: 1318, baseType: !2915, size: 64, offset: 64)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !2916, file: !31, line: 1319, baseType: !370, size: 64, offset: 128)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !2916, file: !31, line: 1320, baseType: !383, size: 128, align: 64, offset: 192)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !2898, file: !31, line: 1084, baseType: !342, size: 64, offset: 1152)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !2898, file: !31, line: 1085, baseType: !342, size: 64, offset: 1216)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !2898, file: !31, line: 1087, baseType: !2934, size: 64, offset: 1280)
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 64)
!2935 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2936)
!2936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !31, line: 1011, size: 128, elements: !2937)
!2937 = !{!2938, !2942}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !2936, file: !31, line: 1012, baseType: !2939, size: 64)
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 64)
!2940 = !DISubroutineType(types: !2941)
!2941 = !{null, !2897, !2897}
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !2936, file: !31, line: 1013, baseType: !2943, size: 64, offset: 64)
!2943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2944, size: 64)
!2944 = !DISubroutineType(types: !2945)
!2945 = !{null, !2897}
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !2898, file: !31, line: 1088, baseType: !2947, size: 64, offset: 1344)
!2947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2948, size: 64)
!2948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2949)
!2949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !31, line: 1016, size: 512, elements: !2950)
!2950 = !{!2951, !2955, !2959, !2960, !2964, !2968, !2972, !2976}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !2949, file: !31, line: 1017, baseType: !2952, size: 64)
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 64)
!2953 = !DISubroutineType(types: !2954)
!2954 = !{!2883, !2883}
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !2949, file: !31, line: 1018, baseType: !2956, size: 64, offset: 64)
!2956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2957, size: 64)
!2957 = !DISubroutineType(types: !2958)
!2958 = !{null, !2883}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !2949, file: !31, line: 1019, baseType: !2943, size: 64, offset: 128)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !2949, file: !31, line: 1020, baseType: !2961, size: 64, offset: 192)
!2961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2962, size: 64)
!2962 = !DISubroutineType(types: !2963)
!2963 = !{!224, !2897, !224}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !2949, file: !31, line: 1021, baseType: !2965, size: 64, offset: 256)
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2966, size: 64)
!2966 = !DISubroutineType(types: !2967)
!2967 = !{!508, !2897}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !2949, file: !31, line: 1022, baseType: !2969, size: 64, offset: 320)
!2969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2970, size: 64)
!2970 = !DISubroutineType(types: !2971)
!2971 = !{!224, !2897, !224, !241}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !2949, file: !31, line: 1023, baseType: !2973, size: 64, offset: 384)
!2973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2974, size: 64)
!2974 = !DISubroutineType(types: !2975)
!2975 = !{null, !2897, !885}
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !2949, file: !31, line: 1024, baseType: !2965, size: 64, offset: 448)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !2898, file: !31, line: 1097, baseType: !2978, size: 256, offset: 1408)
!2978 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2898, file: !31, line: 1089, size: 256, elements: !2979)
!2979 = !{!2980, !2989, !2995}
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !2978, file: !31, line: 1090, baseType: !2981, size: 256)
!2981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !2982, line: 10, size: 256, elements: !2983)
!2982 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!2983 = !{!2984, !2985, !2988}
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2981, file: !2982, line: 11, baseType: !433, size: 32)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2981, file: !2982, line: 12, baseType: !2986, size: 64, offset: 64)
!2986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2987, size: 64)
!2987 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !2982, line: 5, flags: DIFlagFwdDecl)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2981, file: !2982, line: 13, baseType: !237, size: 128, offset: 128)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !2978, file: !31, line: 1091, baseType: !2990, size: 64)
!2990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !2982, line: 17, size: 64, elements: !2991)
!2991 = !{!2992}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2990, file: !2982, line: 18, baseType: !2993, size: 64)
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 64)
!2994 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !2982, line: 16, flags: DIFlagFwdDecl)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !2978, file: !31, line: 1096, baseType: !2996, size: 192)
!2996 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2978, file: !31, line: 1092, size: 192, elements: !2997)
!2997 = !{!2998, !2999, !3000}
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !2996, file: !31, line: 1093, baseType: !237, size: 128)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2996, file: !31, line: 1094, baseType: !224, size: 32, offset: 128)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !2996, file: !31, line: 1095, baseType: !7, size: 32, offset: 160)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2822, file: !31, line: 1843, baseType: !3002, size: 64, offset: 1280)
!3002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3003, size: 64)
!3003 = !DISubroutineType(types: !3004)
!3004 = !{!323, !370, !791, !224, !339, !766, !224}
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2822, file: !31, line: 1844, baseType: !1126, size: 64, offset: 1344)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2822, file: !31, line: 1845, baseType: !3007, size: 64, offset: 1408)
!3007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3008, size: 64)
!3008 = !DISubroutineType(types: !3009)
!3009 = !{!224, !224}
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2822, file: !31, line: 1846, baseType: !2894, size: 64, offset: 1472)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2822, file: !31, line: 1847, baseType: !3012, size: 64, offset: 1536)
!3012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3013, size: 64)
!3013 = !DISubroutineType(types: !3014)
!3014 = !{!323, !963, !370, !766, !339, !7}
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2822, file: !31, line: 1848, baseType: !3016, size: 64, offset: 1600)
!3016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3017, size: 64)
!3017 = !DISubroutineType(types: !3018)
!3018 = !{!323, !370, !766, !963, !339, !7}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2822, file: !31, line: 1849, baseType: !3020, size: 64, offset: 1664)
!3020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3021, size: 64)
!3021 = !DISubroutineType(types: !3022)
!3022 = !{!224, !370, !327, !3023, !885}
!3023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2897, size: 64)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2822, file: !31, line: 1850, baseType: !3025, size: 64, offset: 1728)
!3025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3026, size: 64)
!3026 = !DISubroutineType(types: !3027)
!3027 = !{!327, !370, !224, !549, !549}
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2822, file: !31, line: 1852, baseType: !3029, size: 64, offset: 1792)
!3029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3030, size: 64)
!3030 = !DISubroutineType(types: !3031)
!3031 = !{null, !732, !370}
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2822, file: !31, line: 1856, baseType: !3033, size: 64, offset: 1856)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 64)
!3034 = !DISubroutineType(types: !3035)
!3035 = !{!323, !370, !549, !370, !549, !339, !7}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2822, file: !31, line: 1858, baseType: !3037, size: 64, offset: 1920)
!3037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3038, size: 64)
!3038 = !DISubroutineType(types: !3039)
!3039 = !{!549, !370, !549, !370, !549, !549, !7}
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2822, file: !31, line: 1861, baseType: !2886, size: 64, offset: 1984)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2817, file: !31, line: 692, baseType: !685, size: 64)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !448, file: !31, line: 694, baseType: !3043, size: 64, offset: 2560)
!3043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3044, size: 64)
!3044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !31, line: 1100, size: 384, elements: !3045)
!3045 = !{!3046, !3047, !3048, !3049}
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3044, file: !31, line: 1101, baseType: !251)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3044, file: !31, line: 1102, baseType: !237, size: 128)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3044, file: !31, line: 1103, baseType: !237, size: 128, offset: 128)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3044, file: !31, line: 1104, baseType: !237, size: 128, offset: 256)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !448, file: !31, line: 695, baseType: !805, size: 1216, align: 64, offset: 2624)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !448, file: !31, line: 696, baseType: !237, size: 128, offset: 3840)
!3052 = !DIDerivedType(tag: DW_TAG_member, scope: !448, file: !31, line: 697, baseType: !3053, size: 64, offset: 3968)
!3053 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !448, file: !31, line: 697, size: 64, elements: !3054)
!3054 = !{!3055, !3056, !3057, !3068, !3069}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3053, file: !31, line: 698, baseType: !963, size: 64)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3053, file: !31, line: 699, baseType: !2572, size: 64)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3053, file: !31, line: 700, baseType: !3058, size: 64)
!3058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3059, size: 64)
!3059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !3060, line: 14, size: 832, elements: !3061)
!3060 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!3061 = !{!3062, !3063, !3064, !3065, !3066, !3067}
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3059, file: !3060, line: 15, baseType: !229, size: 512)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3059, file: !3060, line: 16, baseType: !651, size: 64, offset: 512)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3059, file: !3060, line: 17, baseType: !2820, size: 64, offset: 576)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3059, file: !3060, line: 18, baseType: !237, size: 128, offset: 640)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3059, file: !3060, line: 19, baseType: !531, size: 32, offset: 768)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3059, file: !3060, line: 20, baseType: !7, size: 32, offset: 800)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3053, file: !31, line: 701, baseType: !292, size: 64)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3053, file: !31, line: 702, baseType: !7, size: 32)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !448, file: !31, line: 705, baseType: !435, size: 32, offset: 4032)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !448, file: !31, line: 708, baseType: !435, size: 32, offset: 4064)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !448, file: !31, line: 709, baseType: !2654, size: 64, offset: 4096)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !448, file: !31, line: 720, baseType: !218, size: 64, offset: 4160)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !401, file: !398, line: 98, baseType: !3075, size: 256, offset: 448)
!3075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !445, size: 256, elements: !2248)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !401, file: !398, line: 101, baseType: !3077, size: 32, offset: 704)
!3077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3078, line: 25, size: 32, elements: !3079)
!3078 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3079 = !{!3080}
!3080 = !DIDerivedType(tag: DW_TAG_member, scope: !3077, file: !3078, line: 26, baseType: !3081, size: 32)
!3081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3077, file: !3078, line: 26, size: 32, elements: !3082)
!3082 = !{!3083}
!3083 = !DIDerivedType(tag: DW_TAG_member, scope: !3081, file: !3078, line: 30, baseType: !3084, size: 32)
!3084 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3081, file: !3078, line: 30, size: 32, elements: !3085)
!3085 = !{!3086, !3087}
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3084, file: !3078, line: 31, baseType: !251)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3084, file: !3078, line: 32, baseType: !224, size: 32)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !401, file: !398, line: 102, baseType: !2671, size: 64, offset: 768)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !401, file: !398, line: 103, baseType: !617, size: 64, offset: 832)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !401, file: !398, line: 104, baseType: !342, size: 64, offset: 896)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !401, file: !398, line: 105, baseType: !218, size: 64, offset: 960)
!3092 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !398, line: 107, baseType: !3093, size: 128, offset: 1024)
!3093 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !398, line: 107, size: 128, elements: !3094)
!3094 = !{!3095, !3096}
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3093, file: !398, line: 108, baseType: !237, size: 128)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3093, file: !398, line: 109, baseType: !3097, size: 64)
!3097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !401, file: !398, line: 111, baseType: !237, size: 128, offset: 1152)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !401, file: !398, line: 112, baseType: !237, size: 128, offset: 1280)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !401, file: !398, line: 120, baseType: !3101, size: 128, offset: 1408)
!3101 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !398, line: 116, size: 128, elements: !3102)
!3102 = !{!3103, !3104, !3105}
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3101, file: !398, line: 117, baseType: !660, size: 128)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3101, file: !398, line: 118, baseType: !415, size: 128)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3101, file: !398, line: 119, baseType: !383, size: 128, align: 64)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !371, file: !31, line: 922, baseType: !447, size: 64, offset: 256)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !371, file: !31, line: 923, baseType: !2820, size: 64, offset: 320)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !371, file: !31, line: 929, baseType: !251, offset: 384)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !371, file: !31, line: 930, baseType: !30, size: 32, offset: 384)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !371, file: !31, line: 931, baseType: !748, size: 64, offset: 448)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !371, file: !31, line: 932, baseType: !7, size: 32, offset: 512)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !371, file: !31, line: 933, baseType: !2667, size: 32, offset: 544)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !371, file: !31, line: 934, baseType: !744, size: 192, offset: 576)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !371, file: !31, line: 935, baseType: !549, size: 64, offset: 768)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !371, file: !31, line: 936, baseType: !3116, size: 192, offset: 832)
!3116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !31, line: 885, size: 192, elements: !3117)
!3117 = !{!3118, !3119, !3120, !3121, !3122, !3123}
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3116, file: !31, line: 886, baseType: !2919)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3116, file: !31, line: 887, baseType: !1489, size: 64)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3116, file: !31, line: 888, baseType: !39, size: 32, offset: 64)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3116, file: !31, line: 889, baseType: !453, size: 32, offset: 96)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3116, file: !31, line: 889, baseType: !453, size: 32, offset: 128)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3116, file: !31, line: 890, baseType: !224, size: 32, offset: 160)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !371, file: !31, line: 937, baseType: !1565, size: 64, offset: 1024)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !371, file: !31, line: 938, baseType: !3126, size: 256, offset: 1088)
!3126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !31, line: 896, size: 256, elements: !3127)
!3127 = !{!3128, !3129, !3130, !3131, !3132, !3133}
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3126, file: !31, line: 897, baseType: !342, size: 64)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3126, file: !31, line: 898, baseType: !7, size: 32, offset: 64)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3126, file: !31, line: 899, baseType: !7, size: 32, offset: 96)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3126, file: !31, line: 902, baseType: !7, size: 32, offset: 128)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3126, file: !31, line: 903, baseType: !7, size: 32, offset: 160)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3126, file: !31, line: 904, baseType: !549, size: 64, offset: 192)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !371, file: !31, line: 940, baseType: !439, size: 64, offset: 1344)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !371, file: !31, line: 945, baseType: !218, size: 64, offset: 1408)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !371, file: !31, line: 949, baseType: !237, size: 128, offset: 1472)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !371, file: !31, line: 950, baseType: !237, size: 128, offset: 1600)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !371, file: !31, line: 952, baseType: !804, size: 64, offset: 1728)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !371, file: !31, line: 953, baseType: !1013, size: 32, offset: 1792)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !371, file: !31, line: 954, baseType: !1013, size: 32, offset: 1824)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !361, file: !317, line: 174, baseType: !367, size: 64, offset: 320)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !361, file: !317, line: 176, baseType: !3143, size: 64, offset: 384)
!3143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3144, size: 64)
!3144 = !DISubroutineType(types: !3145)
!3145 = !{!224, !370, !244, !360, !1086}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !349, file: !317, line: 90, baseType: !344, size: 64, offset: 192)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !349, file: !317, line: 91, baseType: !3148, size: 64, offset: 256)
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 64)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !307, file: !230, line: 143, baseType: !3150, size: 64, offset: 256)
!3150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3151, size: 64)
!3151 = !DISubroutineType(types: !3152)
!3152 = !{!3153, !244}
!3153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3154, size: 64)
!3154 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3155)
!3155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !48, line: 39, size: 384, elements: !3156)
!3156 = !{!3157, !3158, !3162, !3166, !3172, !3176}
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3155, file: !48, line: 40, baseType: !47, size: 32)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3155, file: !48, line: 41, baseType: !3159, size: 64, offset: 64)
!3159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3160, size: 64)
!3160 = !DISubroutineType(types: !3161)
!3161 = !{!508}
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3155, file: !48, line: 42, baseType: !3163, size: 64, offset: 128)
!3163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3164, size: 64)
!3164 = !DISubroutineType(types: !3165)
!3165 = !{!218}
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3155, file: !48, line: 43, baseType: !3167, size: 64, offset: 192)
!3167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3168, size: 64)
!3168 = !DISubroutineType(types: !3169)
!3169 = !{!2145, !3170}
!3170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3171, size: 64)
!3171 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !48, line: 19, flags: DIFlagFwdDecl)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3155, file: !48, line: 44, baseType: !3173, size: 64, offset: 256)
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 64)
!3174 = !DISubroutineType(types: !3175)
!3175 = !{!2145}
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3155, file: !48, line: 45, baseType: !486, size: 64, offset: 320)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !307, file: !230, line: 144, baseType: !3178, size: 64, offset: 320)
!3178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3179, size: 64)
!3179 = !DISubroutineType(types: !3180)
!3180 = !{!2145, !244}
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !307, file: !230, line: 145, baseType: !3182, size: 64, offset: 384)
!3182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3183, size: 64)
!3183 = !DISubroutineType(types: !3184)
!3184 = !{null, !244, !3185, !3186}
!3185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64)
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !229, file: !230, line: 70, baseType: !3188, size: 64, offset: 384)
!3188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3189, size: 64)
!3189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !637, line: 123, size: 1024, elements: !3190)
!3190 = !{!3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3307, !3308, !3309, !3310, !3311}
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3189, file: !637, line: 124, baseType: !818, size: 32)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3189, file: !637, line: 125, baseType: !818, size: 32, offset: 32)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3189, file: !637, line: 135, baseType: !3188, size: 64, offset: 64)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3189, file: !637, line: 136, baseType: !233, size: 64, offset: 128)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3189, file: !637, line: 138, baseType: !831, size: 192, align: 64, offset: 192)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3189, file: !637, line: 140, baseType: !2145, size: 64, offset: 384)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3189, file: !637, line: 141, baseType: !7, size: 32, offset: 448)
!3198 = !DIDerivedType(tag: DW_TAG_member, scope: !3189, file: !637, line: 142, baseType: !3199, size: 256, offset: 512)
!3199 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3189, file: !637, line: 142, size: 256, elements: !3200)
!3200 = !{!3201, !3247, !3251}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3199, file: !637, line: 143, baseType: !3202, size: 192)
!3202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !637, line: 91, size: 192, elements: !3203)
!3203 = !{!3204, !3205, !3206}
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3202, file: !637, line: 92, baseType: !342, size: 64)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3202, file: !637, line: 94, baseType: !827, size: 64, offset: 64)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3202, file: !637, line: 100, baseType: !3207, size: 64, offset: 128)
!3207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3208, size: 64)
!3208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !637, line: 180, size: 704, elements: !3209)
!3209 = !{!3210, !3211, !3212, !3219, !3220, !3221, !3245, !3246}
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3208, file: !637, line: 182, baseType: !3188, size: 64)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3208, file: !637, line: 183, baseType: !7, size: 32, offset: 64)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3208, file: !637, line: 186, baseType: !3213, size: 192, offset: 128)
!3213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3214, line: 19, size: 192, elements: !3215)
!3214 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3215 = !{!3216, !3217, !3218}
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3213, file: !3214, line: 20, baseType: !809, size: 128)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3213, file: !3214, line: 21, baseType: !7, size: 32, offset: 128)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3213, file: !3214, line: 22, baseType: !7, size: 32, offset: 160)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3208, file: !637, line: 187, baseType: !433, size: 32, offset: 320)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3208, file: !637, line: 188, baseType: !433, size: 32, offset: 352)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3208, file: !637, line: 189, baseType: !3222, size: 64, offset: 384)
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3223, size: 64)
!3223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !637, line: 168, size: 320, elements: !3224)
!3224 = !{!3225, !3229, !3233, !3237, !3241}
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3223, file: !637, line: 169, baseType: !3226, size: 64)
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3227, size: 64)
!3227 = !DISubroutineType(types: !3228)
!3228 = !{!224, !732, !3207}
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3223, file: !637, line: 171, baseType: !3230, size: 64, offset: 64)
!3230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3231, size: 64)
!3231 = !DISubroutineType(types: !3232)
!3232 = !{!224, !3188, !233, !333}
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3223, file: !637, line: 173, baseType: !3234, size: 64, offset: 128)
!3234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3235, size: 64)
!3235 = !DISubroutineType(types: !3236)
!3236 = !{!224, !3188}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3223, file: !637, line: 174, baseType: !3238, size: 64, offset: 192)
!3238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3239, size: 64)
!3239 = !DISubroutineType(types: !3240)
!3240 = !{!224, !3188, !3188, !233}
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3223, file: !637, line: 176, baseType: !3242, size: 64, offset: 256)
!3242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3243, size: 64)
!3243 = !DISubroutineType(types: !3244)
!3244 = !{!224, !732, !3188, !3207}
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3208, file: !637, line: 192, baseType: !237, size: 128, offset: 448)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3208, file: !637, line: 194, baseType: !1499, size: 128, offset: 576)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3199, file: !637, line: 144, baseType: !3248, size: 64)
!3248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !637, line: 103, size: 64, elements: !3249)
!3249 = !{!3250}
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3248, file: !637, line: 104, baseType: !3188, size: 64)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3199, file: !637, line: 145, baseType: !3252, size: 256)
!3252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !637, line: 107, size: 256, elements: !3253)
!3253 = !{!3254, !3302, !3305, !3306}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3252, file: !637, line: 108, baseType: !3255, size: 64)
!3255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3256, size: 64)
!3256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3257)
!3257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !637, line: 217, size: 768, elements: !3258)
!3258 = !{!3259, !3279, !3283, !3284, !3285, !3286, !3287, !3291, !3292, !3293, !3294, !3298}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3257, file: !637, line: 222, baseType: !3260, size: 64)
!3260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3261, size: 64)
!3261 = !DISubroutineType(types: !3262)
!3262 = !{!224, !3263}
!3263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3264, size: 64)
!3264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !637, line: 197, size: 1088, elements: !3265)
!3265 = !{!3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278}
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3264, file: !637, line: 199, baseType: !3188, size: 64)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3264, file: !637, line: 200, baseType: !370, size: 64, offset: 64)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3264, file: !637, line: 201, baseType: !732, size: 64, offset: 128)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3264, file: !637, line: 202, baseType: !218, size: 64, offset: 192)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3264, file: !637, line: 205, baseType: !744, size: 192, offset: 256)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3264, file: !637, line: 206, baseType: !744, size: 192, offset: 448)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3264, file: !637, line: 207, baseType: !224, size: 32, offset: 640)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3264, file: !637, line: 208, baseType: !237, size: 128, offset: 704)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3264, file: !637, line: 209, baseType: !292, size: 64, offset: 832)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3264, file: !637, line: 211, baseType: !339, size: 64, offset: 896)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3264, file: !637, line: 212, baseType: !508, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3264, file: !637, line: 213, baseType: !508, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3264, file: !637, line: 214, baseType: !1114, size: 64, offset: 1024)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3257, file: !637, line: 223, baseType: !3280, size: 64, offset: 64)
!3280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3281, size: 64)
!3281 = !DISubroutineType(types: !3282)
!3282 = !{null, !3263}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3257, file: !637, line: 236, baseType: !776, size: 64, offset: 128)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3257, file: !637, line: 238, baseType: !763, size: 64, offset: 192)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3257, file: !637, line: 239, baseType: !772, size: 64, offset: 256)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3257, file: !637, line: 240, baseType: !768, size: 64, offset: 320)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3257, file: !637, line: 242, baseType: !3288, size: 64, offset: 384)
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3289, size: 64)
!3289 = !DISubroutineType(types: !3290)
!3290 = !{!323, !3263, !292, !339, !549}
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3257, file: !637, line: 252, baseType: !339, size: 64, offset: 448)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3257, file: !637, line: 259, baseType: !508, size: 8, offset: 512)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3257, file: !637, line: 260, baseType: !3288, size: 64, offset: 576)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3257, file: !637, line: 263, baseType: !3295, size: 64, offset: 640)
!3295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3296, size: 64)
!3296 = !DISubroutineType(types: !3297)
!3297 = !{!2861, !3263, !2863}
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3257, file: !637, line: 266, baseType: !3299, size: 64, offset: 704)
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3300, size: 64)
!3300 = !DISubroutineType(types: !3301)
!3301 = !{!224, !3263, !1086}
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3252, file: !637, line: 109, baseType: !3303, size: 64, offset: 64)
!3303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3304, size: 64)
!3304 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !637, line: 31, flags: DIFlagFwdDecl)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3252, file: !637, line: 110, baseType: !549, size: 64, offset: 128)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3252, file: !637, line: 111, baseType: !3188, size: 64, offset: 192)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3189, file: !637, line: 148, baseType: !218, size: 64, offset: 768)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3189, file: !637, line: 154, baseType: !439, size: 64, offset: 832)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3189, file: !637, line: 156, baseType: !334, size: 16, offset: 896)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3189, file: !637, line: 157, baseType: !333, size: 16, offset: 912)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3189, file: !637, line: 158, baseType: !3312, size: 64, offset: 960)
!3312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3313, size: 64)
!3313 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !637, line: 32, flags: DIFlagFwdDecl)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !229, file: !230, line: 71, baseType: !3315, size: 32, offset: 448)
!3315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3316, line: 19, size: 32, elements: !3317)
!3316 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3317 = !{!3318}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3315, file: !3316, line: 20, baseType: !1248, size: 32)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !229, file: !230, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !229, file: !230, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !229, file: !230, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !229, file: !230, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !229, file: !230, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !226, file: !60, line: 463, baseType: !3325, size: 64, offset: 512)
!3325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !226, file: !60, line: 465, baseType: !3327, size: 64, offset: 576)
!3327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3328, size: 64)
!3328 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !60, line: 36, flags: DIFlagFwdDecl)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !226, file: !60, line: 467, baseType: !233, size: 64, offset: 640)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !226, file: !60, line: 468, baseType: !3331, size: 64, offset: 704)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3332, size: 64)
!3332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3333)
!3333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !60, line: 87, size: 384, elements: !3334)
!3334 = !{!3335, !3336, !3337, !3341, !3346, !3350}
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3333, file: !60, line: 88, baseType: !233, size: 64)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3333, file: !60, line: 89, baseType: !346, size: 64, offset: 64)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3333, file: !60, line: 90, baseType: !3338, size: 64, offset: 128)
!3338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3339, size: 64)
!3339 = !DISubroutineType(types: !3340)
!3340 = !{!224, !3325, !287}
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3333, file: !60, line: 91, baseType: !3342, size: 64, offset: 192)
!3342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3343, size: 64)
!3343 = !DISubroutineType(types: !3344)
!3344 = !{!292, !3325, !3345, !3185, !3186}
!3345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3333, file: !60, line: 93, baseType: !3347, size: 64, offset: 256)
!3347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3348, size: 64)
!3348 = !DISubroutineType(types: !3349)
!3349 = !{null, !3325}
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3333, file: !60, line: 95, baseType: !3351, size: 64, offset: 320)
!3351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3352, size: 64)
!3352 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3353)
!3353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !67, line: 278, size: 1472, elements: !3354)
!3354 = !{!3355, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380}
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3353, file: !67, line: 279, baseType: !3356, size: 64)
!3356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3357, size: 64)
!3357 = !DISubroutineType(types: !3358)
!3358 = !{!224, !3325}
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3353, file: !67, line: 280, baseType: !3347, size: 64, offset: 64)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3353, file: !67, line: 281, baseType: !3356, size: 64, offset: 128)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3353, file: !67, line: 282, baseType: !3356, size: 64, offset: 192)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3353, file: !67, line: 283, baseType: !3356, size: 64, offset: 256)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3353, file: !67, line: 284, baseType: !3356, size: 64, offset: 320)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3353, file: !67, line: 285, baseType: !3356, size: 64, offset: 384)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3353, file: !67, line: 286, baseType: !3356, size: 64, offset: 448)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3353, file: !67, line: 287, baseType: !3356, size: 64, offset: 512)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3353, file: !67, line: 288, baseType: !3356, size: 64, offset: 576)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3353, file: !67, line: 289, baseType: !3356, size: 64, offset: 640)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3353, file: !67, line: 290, baseType: !3356, size: 64, offset: 704)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3353, file: !67, line: 291, baseType: !3356, size: 64, offset: 768)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3353, file: !67, line: 292, baseType: !3356, size: 64, offset: 832)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3353, file: !67, line: 293, baseType: !3356, size: 64, offset: 896)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3353, file: !67, line: 294, baseType: !3356, size: 64, offset: 960)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3353, file: !67, line: 295, baseType: !3356, size: 64, offset: 1024)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3353, file: !67, line: 296, baseType: !3356, size: 64, offset: 1088)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3353, file: !67, line: 297, baseType: !3356, size: 64, offset: 1152)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3353, file: !67, line: 298, baseType: !3356, size: 64, offset: 1216)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3353, file: !67, line: 299, baseType: !3356, size: 64, offset: 1280)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3353, file: !67, line: 300, baseType: !3356, size: 64, offset: 1344)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3353, file: !67, line: 301, baseType: !3356, size: 64, offset: 1408)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !226, file: !60, line: 470, baseType: !3382, size: 64, offset: 768)
!3382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3383, size: 64)
!3383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3384, line: 82, size: 1408, elements: !3385)
!3384 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3385 = !{!3386, !3387, !3388, !3389, !3390, !3391, !3392, !3451, !3452, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3461, !3462, !3463, !3467, !3470, !3471}
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3383, file: !3384, line: 83, baseType: !233, size: 64)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3383, file: !3384, line: 84, baseType: !233, size: 64, offset: 64)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3383, file: !3384, line: 85, baseType: !3325, size: 64, offset: 128)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3383, file: !3384, line: 86, baseType: !346, size: 64, offset: 192)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3383, file: !3384, line: 87, baseType: !346, size: 64, offset: 256)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3383, file: !3384, line: 88, baseType: !346, size: 64, offset: 320)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3383, file: !3384, line: 90, baseType: !3393, size: 64, offset: 384)
!3393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3394, size: 64)
!3394 = !DISubroutineType(types: !3395)
!3395 = !{!224, !3325, !3396}
!3396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3397, size: 64)
!3397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !54, line: 95, size: 1152, elements: !3398)
!3398 = !{!3399, !3400, !3401, !3402, !3403, !3404, !3405, !3418, !3431, !3432, !3433, !3434, !3435, !3443, !3444, !3445, !3446, !3447, !3448}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3397, file: !54, line: 96, baseType: !233, size: 64)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3397, file: !54, line: 97, baseType: !3382, size: 64, offset: 64)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3397, file: !54, line: 99, baseType: !651, size: 64, offset: 128)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3397, file: !54, line: 100, baseType: !233, size: 64, offset: 192)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3397, file: !54, line: 102, baseType: !508, size: 8, offset: 256)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3397, file: !54, line: 103, baseType: !53, size: 32, offset: 288)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3397, file: !54, line: 105, baseType: !3406, size: 64, offset: 320)
!3406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3407, size: 64)
!3407 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3408)
!3408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3409, line: 262, size: 1600, elements: !3410)
!3409 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3410 = !{!3411, !3412, !3413, !3417}
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3408, file: !3409, line: 263, baseType: !2657, size: 256)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3408, file: !3409, line: 264, baseType: !2657, size: 256, offset: 256)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3408, file: !3409, line: 265, baseType: !3414, size: 1024, offset: 512)
!3414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !235, size: 1024, elements: !3415)
!3415 = !{!3416}
!3416 = !DISubrange(count: 128)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3408, file: !3409, line: 266, baseType: !2145, size: 64, offset: 1536)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3397, file: !54, line: 106, baseType: !3419, size: 64, offset: 384)
!3419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3420, size: 64)
!3420 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3421)
!3421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3409, line: 210, size: 256, elements: !3422)
!3422 = !{!3423, !3427, !3429, !3430}
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3421, file: !3409, line: 211, baseType: !3424, size: 72)
!3424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1371, size: 72, elements: !3425)
!3425 = !{!3426}
!3426 = !DISubrange(count: 9)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3421, file: !3409, line: 212, baseType: !3428, size: 64, offset: 128)
!3428 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3409, line: 14, baseType: !342)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3421, file: !3409, line: 213, baseType: !435, size: 32, offset: 192)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3421, file: !3409, line: 214, baseType: !435, size: 32, offset: 224)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3397, file: !54, line: 108, baseType: !3356, size: 64, offset: 448)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3397, file: !54, line: 109, baseType: !3347, size: 64, offset: 512)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3397, file: !54, line: 110, baseType: !3356, size: 64, offset: 576)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3397, file: !54, line: 111, baseType: !3347, size: 64, offset: 640)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3397, file: !54, line: 112, baseType: !3436, size: 64, offset: 704)
!3436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3437, size: 64)
!3437 = !DISubroutineType(types: !3438)
!3438 = !{!224, !3325, !3439}
!3439 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !67, line: 52, baseType: !3440)
!3440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !67, line: 50, size: 32, elements: !3441)
!3441 = !{!3442}
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3440, file: !67, line: 51, baseType: !224, size: 32)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3397, file: !54, line: 113, baseType: !3356, size: 64, offset: 768)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3397, file: !54, line: 114, baseType: !346, size: 64, offset: 832)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3397, file: !54, line: 115, baseType: !346, size: 64, offset: 896)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3397, file: !54, line: 117, baseType: !3351, size: 64, offset: 960)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3397, file: !54, line: 118, baseType: !3347, size: 64, offset: 1024)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3397, file: !54, line: 120, baseType: !3449, size: 64, offset: 1088)
!3449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3450, size: 64)
!3450 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !54, line: 120, flags: DIFlagFwdDecl)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3383, file: !3384, line: 91, baseType: !3338, size: 64, offset: 448)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3383, file: !3384, line: 92, baseType: !3356, size: 64, offset: 512)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3383, file: !3384, line: 93, baseType: !3347, size: 64, offset: 576)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3383, file: !3384, line: 94, baseType: !3356, size: 64, offset: 640)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3383, file: !3384, line: 95, baseType: !3347, size: 64, offset: 704)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3383, file: !3384, line: 97, baseType: !3356, size: 64, offset: 768)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3383, file: !3384, line: 98, baseType: !3356, size: 64, offset: 832)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3383, file: !3384, line: 100, baseType: !3436, size: 64, offset: 896)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3383, file: !3384, line: 101, baseType: !3356, size: 64, offset: 960)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3383, file: !3384, line: 103, baseType: !3356, size: 64, offset: 1024)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3383, file: !3384, line: 105, baseType: !3356, size: 64, offset: 1088)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3383, file: !3384, line: 107, baseType: !3351, size: 64, offset: 1152)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3383, file: !3384, line: 109, baseType: !3464, size: 64, offset: 1216)
!3464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3465, size: 64)
!3465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3466)
!3466 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3384, line: 109, flags: DIFlagFwdDecl)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3383, file: !3384, line: 111, baseType: !3468, size: 64, offset: 1280)
!3468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3469, size: 64)
!3469 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3384, line: 111, flags: DIFlagFwdDecl)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3383, file: !3384, line: 112, baseType: !666, offset: 1344)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3383, file: !3384, line: 114, baseType: !508, size: 8, offset: 1344)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !226, file: !60, line: 471, baseType: !3396, size: 64, offset: 832)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !226, file: !60, line: 473, baseType: !218, size: 64, offset: 896)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !226, file: !60, line: 475, baseType: !218, size: 64, offset: 960)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !226, file: !60, line: 480, baseType: !744, size: 192, offset: 1024)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !226, file: !60, line: 484, baseType: !3477, size: 576, offset: 1216)
!3477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !60, line: 361, size: 576, elements: !3478)
!3478 = !{!3479, !3480, !3481, !3482, !3483, !3484}
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3477, file: !60, line: 362, baseType: !237, size: 128)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3477, file: !60, line: 363, baseType: !237, size: 128, offset: 128)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3477, file: !60, line: 364, baseType: !237, size: 128, offset: 256)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3477, file: !60, line: 365, baseType: !237, size: 128, offset: 384)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3477, file: !60, line: 366, baseType: !508, size: 8, offset: 512)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3477, file: !60, line: 367, baseType: !59, size: 32, offset: 544)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !226, file: !60, line: 485, baseType: !3486, size: 2304, offset: 1792)
!3486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !67, line: 565, size: 2304, elements: !3487)
!3487 = !{!3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500, !3501, !3502, !3503, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3570, !3571, !3572, !3573, !3583, !3587}
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3486, file: !67, line: 566, baseType: !3439, size: 32)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3486, file: !67, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3486, file: !67, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3486, file: !67, line: 569, baseType: !508, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3486, file: !67, line: 570, baseType: !508, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3486, file: !67, line: 571, baseType: !508, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3486, file: !67, line: 572, baseType: !508, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3486, file: !67, line: 573, baseType: !508, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3486, file: !67, line: 574, baseType: !508, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3486, file: !67, line: 575, baseType: !508, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3486, file: !67, line: 576, baseType: !508, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3486, file: !67, line: 577, baseType: !433, size: 32, offset: 64)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3486, file: !67, line: 578, baseType: !251, offset: 96)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3486, file: !67, line: 580, baseType: !237, size: 128, offset: 128)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3486, file: !67, line: 581, baseType: !1520, size: 192, offset: 256)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3486, file: !67, line: 582, baseType: !3504, size: 64, offset: 448)
!3504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3505, size: 64)
!3505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3506, line: 43, size: 1472, elements: !3507)
!3506 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3507 = !{!3508, !3509, !3510, !3511, !3512, !3515, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540}
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3505, file: !3506, line: 44, baseType: !233, size: 64)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3505, file: !3506, line: 45, baseType: !224, size: 32, offset: 64)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3505, file: !3506, line: 46, baseType: !237, size: 128, offset: 128)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3505, file: !3506, line: 47, baseType: !251, offset: 256)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3505, file: !3506, line: 48, baseType: !3513, size: 64, offset: 256)
!3513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3514, size: 64)
!3514 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !67, line: 533, flags: DIFlagFwdDecl)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3505, file: !3506, line: 49, baseType: !3516, size: 320, offset: 320)
!3516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3517, line: 11, size: 320, elements: !3518)
!3517 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3518 = !{!3519, !3520, !3521, !3526}
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3516, file: !3517, line: 16, baseType: !660, size: 128)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3516, file: !3517, line: 17, baseType: !342, size: 64, offset: 128)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3516, file: !3517, line: 18, baseType: !3522, size: 64, offset: 192)
!3522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3523, size: 64)
!3523 = !DISubroutineType(types: !3524)
!3524 = !{null, !3525}
!3525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3516, size: 64)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3516, file: !3517, line: 19, baseType: !433, size: 32, offset: 256)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3505, file: !3506, line: 50, baseType: !342, size: 64, offset: 640)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3505, file: !3506, line: 51, baseType: !1318, size: 64, offset: 704)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3505, file: !3506, line: 52, baseType: !1318, size: 64, offset: 768)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3505, file: !3506, line: 53, baseType: !1318, size: 64, offset: 832)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3505, file: !3506, line: 54, baseType: !1318, size: 64, offset: 896)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3505, file: !3506, line: 55, baseType: !1318, size: 64, offset: 960)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3505, file: !3506, line: 56, baseType: !342, size: 64, offset: 1024)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3505, file: !3506, line: 57, baseType: !342, size: 64, offset: 1088)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3505, file: !3506, line: 58, baseType: !342, size: 64, offset: 1152)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3505, file: !3506, line: 59, baseType: !342, size: 64, offset: 1216)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3505, file: !3506, line: 60, baseType: !342, size: 64, offset: 1280)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3505, file: !3506, line: 61, baseType: !3325, size: 64, offset: 1344)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3505, file: !3506, line: 62, baseType: !508, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3505, file: !3506, line: 63, baseType: !508, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3486, file: !67, line: 583, baseType: !508, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3486, file: !67, line: 584, baseType: !508, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3486, file: !67, line: 585, baseType: !508, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3486, file: !67, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3486, file: !67, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3486, file: !67, line: 592, baseType: !1310, size: 512, offset: 576)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3486, file: !67, line: 593, baseType: !439, size: 64, offset: 1088)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3486, file: !67, line: 594, baseType: !1977, size: 256, offset: 1152)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3486, file: !67, line: 595, baseType: !1499, size: 128, offset: 1408)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3486, file: !67, line: 596, baseType: !3513, size: 64, offset: 1536)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3486, file: !67, line: 597, baseType: !818, size: 32, offset: 1600)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3486, file: !67, line: 598, baseType: !818, size: 32, offset: 1632)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3486, file: !67, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3486, file: !67, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3486, file: !67, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3486, file: !67, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3486, file: !67, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3486, file: !67, line: 604, baseType: !508, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3486, file: !67, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3486, file: !67, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3486, file: !67, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3486, file: !67, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3486, file: !67, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3486, file: !67, line: 610, baseType: !7, size: 32, offset: 1696)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3486, file: !67, line: 611, baseType: !66, size: 32, offset: 1728)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3486, file: !67, line: 612, baseType: !74, size: 32, offset: 1760)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3486, file: !67, line: 613, baseType: !224, size: 32, offset: 1792)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3486, file: !67, line: 614, baseType: !224, size: 32, offset: 1824)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3486, file: !67, line: 615, baseType: !439, size: 64, offset: 1856)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3486, file: !67, line: 616, baseType: !439, size: 64, offset: 1920)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3486, file: !67, line: 617, baseType: !439, size: 64, offset: 1984)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3486, file: !67, line: 618, baseType: !439, size: 64, offset: 2048)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3486, file: !67, line: 620, baseType: !3574, size: 64, offset: 2112)
!3574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3575, size: 64)
!3575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !67, line: 536, size: 256, elements: !3576)
!3576 = !{!3577, !3578, !3579, !3580}
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3575, file: !67, line: 537, baseType: !251)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3575, file: !67, line: 538, baseType: !7, size: 32)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3575, file: !67, line: 540, baseType: !237, size: 128, offset: 64)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3575, file: !67, line: 543, baseType: !3581, size: 64, offset: 192)
!3581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3582, size: 64)
!3582 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !67, line: 534, flags: DIFlagFwdDecl)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3486, file: !67, line: 621, baseType: !3584, size: 64, offset: 2176)
!3584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3585, size: 64)
!3585 = !DISubroutineType(types: !3586)
!3586 = !{null, !3325, !1462}
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3486, file: !67, line: 622, baseType: !3588, size: 64, offset: 2240)
!3588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3589, size: 64)
!3589 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !67, line: 622, flags: DIFlagFwdDecl)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !226, file: !60, line: 486, baseType: !3591, size: 64, offset: 4096)
!3591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3592, size: 64)
!3592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !67, line: 642, size: 1792, elements: !3593)
!3593 = !{!3594, !3595, !3596, !3600, !3601, !3602}
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3592, file: !67, line: 643, baseType: !3353, size: 1472)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3592, file: !67, line: 644, baseType: !3356, size: 64, offset: 1472)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3592, file: !67, line: 645, baseType: !3597, size: 64, offset: 1536)
!3597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 64)
!3598 = !DISubroutineType(types: !3599)
!3599 = !{null, !3325, !508}
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3592, file: !67, line: 646, baseType: !3356, size: 64, offset: 1600)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3592, file: !67, line: 647, baseType: !3347, size: 64, offset: 1664)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3592, file: !67, line: 648, baseType: !3347, size: 64, offset: 1728)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !226, file: !60, line: 493, baseType: !3604, size: 64, offset: 4160)
!3604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3605, size: 64)
!3605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !81, line: 162, size: 1088, elements: !3606)
!3606 = !{!3607, !3608, !3609, !3880, !3881, !3882, !3883, !3884, !3885, !4011, !4012, !4013, !4014, !4015, !4016, !4017}
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3605, file: !81, line: 163, baseType: !237, size: 128)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3605, file: !81, line: 164, baseType: !233, size: 64, offset: 128)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3605, file: !81, line: 165, baseType: !3610, size: 64, offset: 192)
!3610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3611, size: 64)
!3611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3612)
!3612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !81, line: 105, size: 640, elements: !3613)
!3613 = !{!3614, !3732, !3743, !3748, !3752, !3759, !3763, !3767, !3872, !3876}
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3612, file: !81, line: 106, baseType: !3615, size: 64)
!3615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3616, size: 64)
!3616 = !DISubroutineType(types: !3617)
!3617 = !{!224, !3604, !3618, !80}
!3618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3619, size: 64)
!3619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3620, line: 51, size: 1344, elements: !3621)
!3620 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3621 = !{!3622, !3623, !3625, !3626, !3716, !3725, !3726, !3727, !3728, !3729, !3730, !3731}
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3619, file: !3620, line: 52, baseType: !233, size: 64)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3619, file: !3620, line: 53, baseType: !3624, size: 32, offset: 64)
!3624 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3620, line: 28, baseType: !433)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3619, file: !3620, line: 54, baseType: !233, size: 64, offset: 128)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3619, file: !3620, line: 55, baseType: !3627, size: 192, offset: 192)
!3627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3628, line: 17, size: 192, elements: !3629)
!3628 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3629 = !{!3630, !3632, !3715}
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3627, file: !3628, line: 18, baseType: !3631, size: 64)
!3631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3627, size: 64)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3627, file: !3628, line: 19, baseType: !3633, size: 64, offset: 64)
!3633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3634, size: 64)
!3634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3635)
!3635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3628, line: 110, size: 1152, elements: !3636)
!3636 = !{!3637, !3641, !3645, !3651, !3657, !3661, !3665, !3670, !3674, !3675, !3679, !3683, !3687, !3698, !3699, !3700, !3701, !3711}
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3635, file: !3628, line: 111, baseType: !3638, size: 64)
!3638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3639, size: 64)
!3639 = !DISubroutineType(types: !3640)
!3640 = !{!3631, !3631}
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3635, file: !3628, line: 112, baseType: !3642, size: 64, offset: 64)
!3642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3643, size: 64)
!3643 = !DISubroutineType(types: !3644)
!3644 = !{null, !3631}
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3635, file: !3628, line: 113, baseType: !3646, size: 64, offset: 128)
!3646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3647, size: 64)
!3647 = !DISubroutineType(types: !3648)
!3648 = !{!508, !3649}
!3649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3650, size: 64)
!3650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3627)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3635, file: !3628, line: 114, baseType: !3652, size: 64, offset: 192)
!3652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3653, size: 64)
!3653 = !DISubroutineType(types: !3654)
!3654 = !{!2145, !3649, !3655}
!3655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3656, size: 64)
!3656 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !226)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3635, file: !3628, line: 116, baseType: !3658, size: 64, offset: 256)
!3658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3659, size: 64)
!3659 = !DISubroutineType(types: !3660)
!3660 = !{!508, !3649, !233}
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3635, file: !3628, line: 118, baseType: !3662, size: 64, offset: 320)
!3662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3663, size: 64)
!3663 = !DISubroutineType(types: !3664)
!3664 = !{!224, !3649, !233, !7, !218, !339}
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3635, file: !3628, line: 123, baseType: !3666, size: 64, offset: 384)
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 64)
!3667 = !DISubroutineType(types: !3668)
!3668 = !{!224, !3649, !233, !3669, !339}
!3669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3635, file: !3628, line: 126, baseType: !3671, size: 64, offset: 448)
!3671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3672, size: 64)
!3672 = !DISubroutineType(types: !3673)
!3673 = !{!233, !3649}
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3635, file: !3628, line: 127, baseType: !3671, size: 64, offset: 512)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3635, file: !3628, line: 128, baseType: !3676, size: 64, offset: 576)
!3676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3677, size: 64)
!3677 = !DISubroutineType(types: !3678)
!3678 = !{!3631, !3649}
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3635, file: !3628, line: 130, baseType: !3680, size: 64, offset: 640)
!3680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3681, size: 64)
!3681 = !DISubroutineType(types: !3682)
!3682 = !{!3631, !3649, !3631}
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3635, file: !3628, line: 133, baseType: !3684, size: 64, offset: 704)
!3684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3685, size: 64)
!3685 = !DISubroutineType(types: !3686)
!3686 = !{!3631, !3649, !233}
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3635, file: !3628, line: 135, baseType: !3688, size: 64, offset: 768)
!3688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3689, size: 64)
!3689 = !DISubroutineType(types: !3690)
!3690 = !{!224, !3649, !233, !233, !7, !7, !3691}
!3691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3692, size: 64)
!3692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3628, line: 43, size: 640, elements: !3693)
!3693 = !{!3694, !3695, !3696}
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3692, file: !3628, line: 44, baseType: !3631, size: 64)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3692, file: !3628, line: 45, baseType: !7, size: 32, offset: 64)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3692, file: !3628, line: 46, baseType: !3697, size: 512, offset: 128)
!3697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !439, size: 512, elements: !1348)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3635, file: !3628, line: 140, baseType: !3680, size: 64, offset: 832)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3635, file: !3628, line: 143, baseType: !3676, size: 64, offset: 896)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3635, file: !3628, line: 145, baseType: !3638, size: 64, offset: 960)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3635, file: !3628, line: 146, baseType: !3702, size: 64, offset: 1024)
!3702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3703, size: 64)
!3703 = !DISubroutineType(types: !3704)
!3704 = !{!224, !3649, !3705}
!3705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3706, size: 64)
!3706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3628, line: 29, size: 128, elements: !3707)
!3707 = !{!3708, !3709, !3710}
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3706, file: !3628, line: 30, baseType: !7, size: 32)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3706, file: !3628, line: 31, baseType: !7, size: 32, offset: 32)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3706, file: !3628, line: 32, baseType: !3649, size: 64, offset: 64)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3635, file: !3628, line: 148, baseType: !3712, size: 64, offset: 1088)
!3712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3713, size: 64)
!3713 = !DISubroutineType(types: !3714)
!3714 = !{!224, !3649, !3325}
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3627, file: !3628, line: 20, baseType: !3325, size: 64, offset: 128)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3619, file: !3620, line: 57, baseType: !3717, size: 64, offset: 384)
!3717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3718, size: 64)
!3718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3620, line: 31, size: 704, elements: !3719)
!3719 = !{!3720, !3721, !3722, !3723, !3724}
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3718, file: !3620, line: 32, baseType: !292, size: 64)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3718, file: !3620, line: 33, baseType: !224, size: 32, offset: 64)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3718, file: !3620, line: 34, baseType: !218, size: 64, offset: 128)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3718, file: !3620, line: 35, baseType: !3717, size: 64, offset: 192)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3718, file: !3620, line: 43, baseType: !361, size: 448, offset: 256)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3619, file: !3620, line: 58, baseType: !3717, size: 64, offset: 448)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3619, file: !3620, line: 59, baseType: !3618, size: 64, offset: 512)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3619, file: !3620, line: 60, baseType: !3618, size: 64, offset: 576)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3619, file: !3620, line: 61, baseType: !3618, size: 64, offset: 640)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3619, file: !3620, line: 63, baseType: !229, size: 512, offset: 704)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3619, file: !3620, line: 65, baseType: !342, size: 64, offset: 1216)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3619, file: !3620, line: 66, baseType: !218, size: 64, offset: 1280)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !3612, file: !81, line: 108, baseType: !3733, size: 64, offset: 64)
!3733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3734, size: 64)
!3734 = !DISubroutineType(types: !3735)
!3735 = !{!224, !3604, !3736, !80}
!3736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3737, size: 64)
!3737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !81, line: 63, size: 640, elements: !3738)
!3738 = !{!3739, !3740, !3741}
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3737, file: !81, line: 64, baseType: !3631, size: 64)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !3737, file: !81, line: 65, baseType: !224, size: 32, offset: 64)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !3737, file: !81, line: 66, baseType: !3742, size: 512, offset: 96)
!3742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !433, size: 512, elements: !1753)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3612, file: !81, line: 110, baseType: !3744, size: 64, offset: 128)
!3744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3745, size: 64)
!3745 = !DISubroutineType(types: !3746)
!3746 = !{!224, !3604, !7, !3747}
!3747 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !238, line: 164, baseType: !342)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !3612, file: !81, line: 111, baseType: !3749, size: 64, offset: 192)
!3749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3750, size: 64)
!3750 = !DISubroutineType(types: !3751)
!3751 = !{null, !3604, !7}
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !3612, file: !81, line: 112, baseType: !3753, size: 64, offset: 256)
!3753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3754, size: 64)
!3754 = !DISubroutineType(types: !3755)
!3755 = !{!224, !3604, !3618, !3756, !7, !3758, !2640}
!3756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3757, size: 64)
!3757 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !433)
!3758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3612, file: !81, line: 117, baseType: !3760, size: 64, offset: 320)
!3760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3761, size: 64)
!3761 = !DISubroutineType(types: !3762)
!3762 = !{!224, !3604, !7, !7, !218}
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3612, file: !81, line: 119, baseType: !3764, size: 64, offset: 384)
!3764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3765, size: 64)
!3765 = !DISubroutineType(types: !3766)
!3766 = !{null, !3604, !7, !7}
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3612, file: !81, line: 121, baseType: !3768, size: 64, offset: 448)
!3768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3769, size: 64)
!3769 = !DISubroutineType(types: !3770)
!3770 = !{!224, !3604, !3771, !508}
!3771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3772, size: 64)
!3772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !102, line: 175, size: 448, elements: !3773)
!3773 = !{!3774, !3775, !3776, !3777, !3789, !3869, !3870, !3871}
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3772, file: !102, line: 176, baseType: !433, size: 32)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !3772, file: !102, line: 177, baseType: !7, size: 32, offset: 32)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq", scope: !3772, file: !102, line: 178, baseType: !342, size: 64, offset: 64)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3772, file: !102, line: 179, baseType: !3778, size: 64, offset: 128)
!3778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3779, size: 64)
!3779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_common_data", file: !102, line: 145, size: 256, elements: !3780)
!3780 = !{!3781, !3782, !3783, !3786}
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "state_use_accessors", scope: !3779, file: !102, line: 146, baseType: !7, size: 32)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !3779, file: !102, line: 150, baseType: !218, size: 64, offset: 64)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "msi_desc", scope: !3779, file: !102, line: 151, baseType: !3784, size: 64, offset: 128)
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 64)
!3785 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_desc", file: !102, line: 127, flags: DIFlagFwdDecl)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "affinity", scope: !3779, file: !102, line: 152, baseType: !3787, size: 64, offset: 192)
!3787 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !1384, line: 756, baseType: !3788)
!3788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1385, size: 64, elements: !1389)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !3772, file: !102, line: 180, baseType: !3790, size: 64, offset: 192)
!3790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3791, size: 64)
!3791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip", file: !102, line: 503, size: 2304, elements: !3792)
!3792 = !{!3793, !3794, !3795, !3799, !3803, !3804, !3805, !3806, !3807, !3808, !3809, !3810, !3816, !3820, !3824, !3825, !3826, !3827, !3828, !3829, !3830, !3831, !3832, !3833, !3837, !3838, !3839, !3845, !3846, !3850, !3854, !3858, !3862, !3866, !3867, !3868}
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "parent_device", scope: !3791, file: !102, line: 504, baseType: !3325, size: 64)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3791, file: !102, line: 505, baseType: !233, size: 64, offset: 64)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "irq_startup", scope: !3791, file: !102, line: 506, baseType: !3796, size: 64, offset: 128)
!3796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3797, size: 64)
!3797 = !DISubroutineType(types: !3798)
!3798 = !{!7, !3771}
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "irq_shutdown", scope: !3791, file: !102, line: 507, baseType: !3800, size: 64, offset: 192)
!3800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3801, size: 64)
!3801 = !DISubroutineType(types: !3802)
!3802 = !{null, !3771}
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "irq_enable", scope: !3791, file: !102, line: 508, baseType: !3800, size: 64, offset: 256)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "irq_disable", scope: !3791, file: !102, line: 509, baseType: !3800, size: 64, offset: 320)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "irq_ack", scope: !3791, file: !102, line: 511, baseType: !3800, size: 64, offset: 384)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask", scope: !3791, file: !102, line: 512, baseType: !3800, size: 64, offset: 448)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask_ack", scope: !3791, file: !102, line: 513, baseType: !3800, size: 64, offset: 512)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "irq_unmask", scope: !3791, file: !102, line: 514, baseType: !3800, size: 64, offset: 576)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "irq_eoi", scope: !3791, file: !102, line: 515, baseType: !3800, size: 64, offset: 640)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_affinity", scope: !3791, file: !102, line: 517, baseType: !3811, size: 64, offset: 704)
!3811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3812, size: 64)
!3812 = !DISubroutineType(types: !3813)
!3813 = !{!224, !3771, !3814, !508}
!3814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3815, size: 64)
!3815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1385)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "irq_retrigger", scope: !3791, file: !102, line: 518, baseType: !3817, size: 64, offset: 768)
!3817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3818, size: 64)
!3818 = !DISubroutineType(types: !3819)
!3819 = !{!224, !3771}
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_type", scope: !3791, file: !102, line: 519, baseType: !3821, size: 64, offset: 832)
!3821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3822, size: 64)
!3822 = !DISubroutineType(types: !3823)
!3823 = !{!224, !3771, !7}
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_wake", scope: !3791, file: !102, line: 520, baseType: !3821, size: 64, offset: 896)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_lock", scope: !3791, file: !102, line: 522, baseType: !3800, size: 64, offset: 960)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_sync_unlock", scope: !3791, file: !102, line: 523, baseType: !3800, size: 64, offset: 1024)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_online", scope: !3791, file: !102, line: 525, baseType: !3800, size: 64, offset: 1088)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_offline", scope: !3791, file: !102, line: 526, baseType: !3800, size: 64, offset: 1152)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "irq_suspend", scope: !3791, file: !102, line: 528, baseType: !3800, size: 64, offset: 1216)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "irq_resume", scope: !3791, file: !102, line: 529, baseType: !3800, size: 64, offset: 1280)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pm_shutdown", scope: !3791, file: !102, line: 530, baseType: !3800, size: 64, offset: 1344)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "irq_calc_mask", scope: !3791, file: !102, line: 532, baseType: !3800, size: 64, offset: 1408)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "irq_print_chip", scope: !3791, file: !102, line: 534, baseType: !3834, size: 64, offset: 1472)
!3834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3835, size: 64)
!3835 = !DISubroutineType(types: !3836)
!3836 = !{null, !3771, !732}
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "irq_request_resources", scope: !3791, file: !102, line: 535, baseType: !3817, size: 64, offset: 1536)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "irq_release_resources", scope: !3791, file: !102, line: 536, baseType: !3800, size: 64, offset: 1600)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "irq_compose_msi_msg", scope: !3791, file: !102, line: 538, baseType: !3840, size: 64, offset: 1664)
!3840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3841, size: 64)
!3841 = !DISubroutineType(types: !3842)
!3842 = !{null, !3771, !3843}
!3843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3844, size: 64)
!3844 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_msg", file: !102, line: 29, flags: DIFlagFwdDecl)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "irq_write_msi_msg", scope: !3791, file: !102, line: 539, baseType: !3840, size: 64, offset: 1728)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "irq_get_irqchip_state", scope: !3791, file: !102, line: 541, baseType: !3847, size: 64, offset: 1792)
!3847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3848, size: 64)
!3848 = !DISubroutineType(types: !3849)
!3849 = !{!224, !3771, !94, !995}
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_irqchip_state", scope: !3791, file: !102, line: 542, baseType: !3851, size: 64, offset: 1856)
!3851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3852, size: 64)
!3852 = !DISubroutineType(types: !3853)
!3853 = !{!224, !3771, !94, !508}
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_vcpu_affinity", scope: !3791, file: !102, line: 544, baseType: !3855, size: 64, offset: 1920)
!3855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3856, size: 64)
!3856 = !DISubroutineType(types: !3857)
!3857 = !{!224, !3771, !218}
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_single", scope: !3791, file: !102, line: 546, baseType: !3859, size: 64, offset: 1984)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 64)
!3860 = !DISubroutineType(types: !3861)
!3861 = !{null, !3771, !7}
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_mask", scope: !3791, file: !102, line: 547, baseType: !3863, size: 64, offset: 2048)
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3864, size: 64)
!3864 = !DISubroutineType(types: !3865)
!3865 = !{null, !3771, !3814}
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_setup", scope: !3791, file: !102, line: 549, baseType: !3817, size: 64, offset: 2112)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_teardown", scope: !3791, file: !102, line: 550, baseType: !3800, size: 64, offset: 2176)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3791, file: !102, line: 552, baseType: !342, size: 64, offset: 2240)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !3772, file: !102, line: 181, baseType: !3604, size: 64, offset: 256)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "parent_data", scope: !3772, file: !102, line: 183, baseType: !3771, size: 64, offset: 320)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "chip_data", scope: !3772, file: !102, line: 185, baseType: !218, size: 64, offset: 384)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !3612, file: !81, line: 122, baseType: !3873, size: 64, offset: 512)
!3873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3874, size: 64)
!3874 = !DISubroutineType(types: !3875)
!3875 = !{null, !3604, !3771}
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !3612, file: !81, line: 123, baseType: !3877, size: 64, offset: 576)
!3877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3878, size: 64)
!3878 = !DISubroutineType(types: !3879)
!3879 = !{!224, !3604, !3736, !3758, !2640}
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !3605, file: !81, line: 166, baseType: !218, size: 64, offset: 256)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3605, file: !81, line: 167, baseType: !7, size: 32, offset: 320)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !3605, file: !81, line: 168, baseType: !7, size: 32, offset: 352)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3605, file: !81, line: 171, baseType: !3631, size: 64, offset: 384)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !3605, file: !81, line: 172, baseType: !80, size: 32, offset: 448)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3605, file: !81, line: 173, baseType: !3886, size: 64, offset: 512)
!3886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3887, size: 64)
!3887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !102, line: 1101, size: 192, elements: !3888)
!3888 = !{!3889, !3890, !3891, !3892, !3893, !3894}
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "irqs_per_chip", scope: !3887, file: !102, line: 1102, baseType: !7, size: 32)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "num_chips", scope: !3887, file: !102, line: 1103, baseType: !7, size: 32, offset: 32)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags_to_clear", scope: !3887, file: !102, line: 1104, baseType: !7, size: 32, offset: 64)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags_to_set", scope: !3887, file: !102, line: 1105, baseType: !7, size: 32, offset: 96)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "gc_flags", scope: !3887, file: !102, line: 1106, baseType: !101, size: 32, offset: 128)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3887, file: !102, line: 1107, baseType: !3895, offset: 192)
!3895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3896, elements: !2349)
!3896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3897, size: 64)
!3897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_generic", file: !102, line: 1051, size: 960, elements: !3898)
!3898 = !{!3899, !3900, !3901, !3905, !3909, !3913, !3914, !3915, !3916, !3917, !3918, !3919, !3920, !3921, !3922, !3923, !3924, !3925, !3926, !3927}
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3897, file: !102, line: 1052, baseType: !844)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "reg_base", scope: !3897, file: !102, line: 1053, baseType: !218, size: 64)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "reg_readl", scope: !3897, file: !102, line: 1054, baseType: !3902, size: 64, offset: 64)
!3902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3903, size: 64)
!3903 = !DISubroutineType(types: !3904)
!3904 = !{!433, !218}
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "reg_writel", scope: !3897, file: !102, line: 1055, baseType: !3906, size: 64, offset: 128)
!3906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3907, size: 64)
!3907 = !DISubroutineType(types: !3908)
!3908 = !{null, !433, !218}
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3897, file: !102, line: 1056, baseType: !3910, size: 64, offset: 192)
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3911, size: 64)
!3911 = !DISubroutineType(types: !3912)
!3912 = !{null, !3896}
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3897, file: !102, line: 1057, baseType: !3910, size: 64, offset: 256)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "irq_base", scope: !3897, file: !102, line: 1058, baseType: !7, size: 32, offset: 320)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cnt", scope: !3897, file: !102, line: 1059, baseType: !7, size: 32, offset: 352)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache", scope: !3897, file: !102, line: 1060, baseType: !433, size: 32, offset: 384)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "type_cache", scope: !3897, file: !102, line: 1061, baseType: !433, size: 32, offset: 416)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "polarity_cache", scope: !3897, file: !102, line: 1062, baseType: !433, size: 32, offset: 448)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "wake_enabled", scope: !3897, file: !102, line: 1063, baseType: !433, size: 32, offset: 480)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "wake_active", scope: !3897, file: !102, line: 1064, baseType: !433, size: 32, offset: 512)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "num_ct", scope: !3897, file: !102, line: 1065, baseType: !7, size: 32, offset: 544)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3897, file: !102, line: 1066, baseType: !218, size: 64, offset: 576)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "installed", scope: !3897, file: !102, line: 1067, baseType: !342, size: 64, offset: 640)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !3897, file: !102, line: 1068, baseType: !342, size: 64, offset: 704)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !3897, file: !102, line: 1069, baseType: !3604, size: 64, offset: 768)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3897, file: !102, line: 1070, baseType: !237, size: 128, offset: 832)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "chip_types", scope: !3897, file: !102, line: 1071, baseType: !3928, offset: 960)
!3928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3929, elements: !2349)
!3929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_type", file: !102, line: 1009, size: 2944, elements: !3930)
!3930 = !{!3931, !3932, !3942, !4008, !4009, !4010}
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !3929, file: !102, line: 1010, baseType: !3791, size: 2304)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !3929, file: !102, line: 1011, baseType: !3933, size: 448, offset: 2304)
!3933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_regs", file: !102, line: 986, size: 448, elements: !3934)
!3934 = !{!3935, !3936, !3937, !3938, !3939, !3940, !3941}
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !3933, file: !102, line: 987, baseType: !342, size: 64)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !3933, file: !102, line: 988, baseType: !342, size: 64, offset: 64)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3933, file: !102, line: 989, baseType: !342, size: 64, offset: 128)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "ack", scope: !3933, file: !102, line: 990, baseType: !342, size: 64, offset: 192)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "eoi", scope: !3933, file: !102, line: 991, baseType: !342, size: 64, offset: 256)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3933, file: !102, line: 992, baseType: !342, size: 64, offset: 320)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !3933, file: !102, line: 993, baseType: !342, size: 64, offset: 384)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !3929, file: !102, line: 1012, baseType: !3943, size: 64, offset: 2752)
!3943 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_flow_handler_t", file: !3944, line: 12, baseType: !3945)
!3944 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!3945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3946, size: 64)
!3946 = !DISubroutineType(types: !3947)
!3947 = !{null, !3948}
!3948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3949, size: 64)
!3949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_desc", file: !3950, line: 55, size: 2880, elements: !3951)
!3950 = !DIFile(filename: "./include/linux/irqdesc.h", directory: "/home/lizy2001/genbc/linux")
!3951 = !{!3952, !3953, !3954, !3955, !3956, !3980, !3981, !3982, !3983, !3984, !3985, !3986, !3987, !3988, !3989, !3990, !3991, !3993, !3994, !3995, !3996, !3997, !3998, !3999, !4000, !4001, !4002, !4003, !4004, !4005, !4006, !4007}
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "irq_common_data", scope: !3949, file: !3950, line: 56, baseType: !3779, size: 256)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "irq_data", scope: !3949, file: !3950, line: 57, baseType: !3772, size: 448, offset: 256)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "kstat_irqs", scope: !3949, file: !3950, line: 58, baseType: !2640, size: 64, offset: 704)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "handle_irq", scope: !3949, file: !3950, line: 59, baseType: !3943, size: 64, offset: 768)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3949, file: !3950, line: 60, baseType: !3957, size: 64, offset: 832)
!3957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3958, size: 64)
!3958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irqaction", file: !95, line: 110, size: 768, elements: !3959)
!3959 = !{!3960, !3966, !3967, !3968, !3969, !3970, !3971, !3972, !3973, !3974, !3975, !3976, !3977}
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !3958, file: !95, line: 111, baseType: !3961, size: 64)
!3961 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !95, line: 92, baseType: !3962)
!3962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3963, size: 64)
!3963 = !DISubroutineType(types: !3964)
!3964 = !{!3965, !224, !218}
!3965 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !110, line: 17, baseType: !109)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !3958, file: !95, line: 112, baseType: !218, size: 64, offset: 64)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_dev_id", scope: !3958, file: !95, line: 113, baseType: !218, size: 64, offset: 128)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3958, file: !95, line: 114, baseType: !3957, size: 64, offset: 192)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "thread_fn", scope: !3958, file: !95, line: 115, baseType: !3961, size: 64, offset: 256)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !3958, file: !95, line: 116, baseType: !1235, size: 64, offset: 320)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3958, file: !95, line: 117, baseType: !3957, size: 64, offset: 384)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !3958, file: !95, line: 118, baseType: !7, size: 32, offset: 448)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3958, file: !95, line: 119, baseType: !7, size: 32, offset: 480)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "thread_flags", scope: !3958, file: !95, line: 120, baseType: !342, size: 64, offset: 512)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "thread_mask", scope: !3958, file: !95, line: 121, baseType: !342, size: 64, offset: 576)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3958, file: !95, line: 122, baseType: !233, size: 64, offset: 640)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3958, file: !95, line: 123, baseType: !3978, size: 64, offset: 704)
!3978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3979, size: 64)
!3979 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !95, line: 123, flags: DIFlagFwdDecl)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "status_use_accessors", scope: !3949, file: !3950, line: 61, baseType: !7, size: 32, offset: 896)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "core_internal_state__do_not_mess_with_it", scope: !3949, file: !3950, line: 62, baseType: !7, size: 32, offset: 928)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3949, file: !3950, line: 63, baseType: !7, size: 32, offset: 960)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "wake_depth", scope: !3949, file: !3950, line: 64, baseType: !7, size: 32, offset: 992)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "tot_count", scope: !3949, file: !3950, line: 65, baseType: !7, size: 32, offset: 1024)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "irq_count", scope: !3949, file: !3950, line: 66, baseType: !7, size: 32, offset: 1056)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "last_unhandled", scope: !3949, file: !3950, line: 67, baseType: !342, size: 64, offset: 1088)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "irqs_unhandled", scope: !3949, file: !3950, line: 68, baseType: !7, size: 32, offset: 1152)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "threads_handled", scope: !3949, file: !3950, line: 69, baseType: !818, size: 32, offset: 1184)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "threads_handled_last", scope: !3949, file: !3950, line: 70, baseType: !224, size: 32, offset: 1216)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3949, file: !3950, line: 71, baseType: !844, offset: 1248)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_enabled", scope: !3949, file: !3950, line: 72, baseType: !3992, size: 64, offset: 1280)
!3992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_affinity", scope: !3949, file: !3950, line: 73, baseType: !3814, size: 64, offset: 1344)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "threads_oneshot", scope: !3949, file: !3950, line: 81, baseType: !342, size: 64, offset: 1408)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "threads_active", scope: !3949, file: !3950, line: 82, baseType: !818, size: 32, offset: 1472)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "wait_for_threads", scope: !3949, file: !3950, line: 83, baseType: !1499, size: 128, offset: 1536)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "nr_actions", scope: !3949, file: !3950, line: 85, baseType: !7, size: 32, offset: 1664)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "no_suspend_depth", scope: !3949, file: !3950, line: 86, baseType: !7, size: 32, offset: 1696)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "cond_suspend_depth", scope: !3949, file: !3950, line: 87, baseType: !7, size: 32, offset: 1728)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "force_resume_depth", scope: !3949, file: !3950, line: 88, baseType: !7, size: 32, offset: 1760)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3949, file: !3950, line: 91, baseType: !3978, size: 64, offset: 1792)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3949, file: !3950, line: 98, baseType: !383, size: 128, align: 64, offset: 1856)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3949, file: !3950, line: 99, baseType: !229, size: 512, offset: 1984)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "request_mutex", scope: !3949, file: !3950, line: 101, baseType: !744, size: 192, offset: 2496)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "parent_irq", scope: !3949, file: !3950, line: 102, baseType: !224, size: 32, offset: 2688)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3949, file: !3950, line: 103, baseType: !651, size: 64, offset: 2752)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3949, file: !3950, line: 104, baseType: !233, size: 64, offset: 2816)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3929, file: !102, line: 1013, baseType: !433, size: 32, offset: 2816)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache_priv", scope: !3929, file: !102, line: 1014, baseType: !433, size: 32, offset: 2848)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache", scope: !3929, file: !102, line: 1015, baseType: !1433, size: 64, offset: 2880)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3605, file: !81, line: 175, baseType: !3604, size: 64, offset: 576)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !3605, file: !81, line: 182, baseType: !3747, size: 64, offset: 640)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !3605, file: !81, line: 183, baseType: !7, size: 32, offset: 704)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !3605, file: !81, line: 184, baseType: !7, size: 32, offset: 736)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !3605, file: !81, line: 185, baseType: !809, size: 128, offset: 768)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !3605, file: !81, line: 186, baseType: !744, size: 192, offset: 896)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !3605, file: !81, line: 187, baseType: !4018, offset: 1088)
!4018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2349)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !226, file: !60, line: 499, baseType: !237, size: 128, offset: 4224)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !226, file: !60, line: 502, baseType: !4021, size: 64, offset: 4352)
!4021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4022, size: 64)
!4022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4023)
!4023 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !60, line: 502, flags: DIFlagFwdDecl)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !226, file: !60, line: 504, baseType: !4025, size: 64, offset: 4416)
!4025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 64)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !226, file: !60, line: 505, baseType: !439, size: 64, offset: 4480)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !226, file: !60, line: 510, baseType: !439, size: 64, offset: 4544)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !226, file: !60, line: 511, baseType: !4029, size: 64, offset: 4608)
!4029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4030, size: 64)
!4030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4031)
!4031 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !60, line: 511, flags: DIFlagFwdDecl)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !226, file: !60, line: 513, baseType: !4033, size: 64, offset: 4672)
!4033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4034, size: 64)
!4034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !60, line: 288, size: 128, elements: !4035)
!4035 = !{!4036, !4037}
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4034, file: !60, line: 293, baseType: !7, size: 32)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4034, file: !60, line: 294, baseType: !342, size: 64, offset: 64)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !226, file: !60, line: 515, baseType: !237, size: 128, offset: 4736)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !226, file: !60, line: 526, baseType: !4040, offset: 4864)
!4040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4041, line: 5, elements: !265)
!4041 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !226, file: !60, line: 528, baseType: !3618, size: 64, offset: 4864)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !226, file: !60, line: 529, baseType: !3631, size: 64, offset: 4928)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !226, file: !60, line: 534, baseType: !531, size: 32, offset: 4992)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !226, file: !60, line: 535, baseType: !433, size: 32, offset: 5024)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !226, file: !60, line: 537, baseType: !251, offset: 5056)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !226, file: !60, line: 538, baseType: !237, size: 128, offset: 5056)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !226, file: !60, line: 540, baseType: !4049, size: 64, offset: 5184)
!4049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4050, size: 64)
!4050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4051, line: 54, size: 960, elements: !4052)
!4051 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4052 = !{!4053, !4054, !4055, !4056, !4057, !4058, !4059, !4063, !4067, !4068, !4069, !4070, !4074, !4078, !4079}
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4050, file: !4051, line: 55, baseType: !233, size: 64)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4050, file: !4051, line: 56, baseType: !651, size: 64, offset: 64)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4050, file: !4051, line: 58, baseType: !346, size: 64, offset: 128)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4050, file: !4051, line: 59, baseType: !346, size: 64, offset: 192)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4050, file: !4051, line: 60, baseType: !244, size: 64, offset: 256)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4050, file: !4051, line: 62, baseType: !3338, size: 64, offset: 320)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4050, file: !4051, line: 63, baseType: !4060, size: 64, offset: 384)
!4060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4061, size: 64)
!4061 = !DISubroutineType(types: !4062)
!4062 = !{!292, !3325, !3345}
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4050, file: !4051, line: 65, baseType: !4064, size: 64, offset: 448)
!4064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4065, size: 64)
!4065 = !DISubroutineType(types: !4066)
!4066 = !{null, !4049}
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4050, file: !4051, line: 66, baseType: !3347, size: 64, offset: 512)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4050, file: !4051, line: 68, baseType: !3356, size: 64, offset: 576)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4050, file: !4051, line: 70, baseType: !3153, size: 64, offset: 640)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4050, file: !4051, line: 71, baseType: !4071, size: 64, offset: 704)
!4071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4072, size: 64)
!4072 = !DISubroutineType(types: !4073)
!4073 = !{!2145, !3325}
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4050, file: !4051, line: 73, baseType: !4075, size: 64, offset: 768)
!4075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4076, size: 64)
!4076 = !DISubroutineType(types: !4077)
!4077 = !{null, !3325, !3185, !3186}
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4050, file: !4051, line: 75, baseType: !3351, size: 64, offset: 832)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4050, file: !4051, line: 77, baseType: !3468, size: 64, offset: 896)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !226, file: !60, line: 541, baseType: !346, size: 64, offset: 5248)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !226, file: !60, line: 543, baseType: !3347, size: 64, offset: 5312)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !226, file: !60, line: 544, baseType: !4083, size: 64, offset: 5376)
!4083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4084, size: 64)
!4084 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !60, line: 45, flags: DIFlagFwdDecl)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !226, file: !60, line: 545, baseType: !4086, size: 64, offset: 5440)
!4086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4087, size: 64)
!4087 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !60, line: 47, flags: DIFlagFwdDecl)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !226, file: !60, line: 547, baseType: !508, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !226, file: !60, line: 548, baseType: !508, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !226, file: !60, line: 549, baseType: !508, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !226, file: !60, line: 550, baseType: !508, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "chrdev", scope: !220, file: !221, line: 49, baseType: !3059, size: 832, offset: 5632)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "mockdev", scope: !220, file: !221, line: 50, baseType: !3325, size: 64, offset: 6464)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !220, file: !221, line: 51, baseType: !651, size: 64, offset: 6528)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !220, file: !221, line: 52, baseType: !4096, size: 64, offset: 6592)
!4096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4097, size: 64)
!4097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_chip", file: !4098, line: 358, size: 4608, elements: !4099)
!4098 = !DIFile(filename: "./include/linux/gpio/driver.h", directory: "/home/lizy2001/genbc/linux")
!4099 = !{!4100, !4101, !4102, !4103, !4104, !4108, !4112, !4113, !4114, !4118, !4119, !4123, !4127, !4131, !4135, !4136, !4140, !4144, !4148, !4149, !4150, !4153, !4154, !4158, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4216, !4217, !4218, !4219}
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !4097, file: !4098, line: 359, baseType: !233, size: 64)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "gpiodev", scope: !4097, file: !4098, line: 360, baseType: !219, size: 64, offset: 64)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4097, file: !4098, line: 361, baseType: !3325, size: 64, offset: 128)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4097, file: !4098, line: 362, baseType: !651, size: 64, offset: 192)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4097, file: !4098, line: 364, baseType: !4105, size: 64, offset: 256)
!4105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4106, size: 64)
!4106 = !DISubroutineType(types: !4107)
!4107 = !{!224, !4096, !7}
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4097, file: !4098, line: 366, baseType: !4109, size: 64, offset: 320)
!4109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4110, size: 64)
!4110 = !DISubroutineType(types: !4111)
!4111 = !{null, !4096, !7}
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "get_direction", scope: !4097, file: !4098, line: 368, baseType: !4105, size: 64, offset: 384)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "direction_input", scope: !4097, file: !4098, line: 370, baseType: !4105, size: 64, offset: 448)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "direction_output", scope: !4097, file: !4098, line: 372, baseType: !4115, size: 64, offset: 512)
!4115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4116, size: 64)
!4116 = !DISubroutineType(types: !4117)
!4117 = !{!224, !4096, !7, !224}
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4097, file: !4098, line: 374, baseType: !4105, size: 64, offset: 576)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "get_multiple", scope: !4097, file: !4098, line: 376, baseType: !4120, size: 64, offset: 640)
!4120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4121, size: 64)
!4121 = !DISubroutineType(types: !4122)
!4122 = !{!224, !4096, !3758, !3758}
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !4097, file: !4098, line: 379, baseType: !4124, size: 64, offset: 704)
!4124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4125, size: 64)
!4125 = !DISubroutineType(types: !4126)
!4126 = !{null, !4096, !7, !224}
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "set_multiple", scope: !4097, file: !4098, line: 381, baseType: !4128, size: 64, offset: 768)
!4128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4129, size: 64)
!4129 = !DISubroutineType(types: !4130)
!4130 = !{null, !4096, !3758, !3758}
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "set_config", scope: !4097, file: !4098, line: 384, baseType: !4132, size: 64, offset: 832)
!4132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4133, size: 64)
!4133 = !DISubroutineType(types: !4134)
!4134 = !{!224, !4096, !7, !342}
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "to_irq", scope: !4097, file: !4098, line: 387, baseType: !4105, size: 64, offset: 896)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "dbg_show", scope: !4097, file: !4098, line: 390, baseType: !4137, size: 64, offset: 960)
!4137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4138, size: 64)
!4138 = !DISubroutineType(types: !4139)
!4139 = !{null, !732, !4096}
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "init_valid_mask", scope: !4097, file: !4098, line: 393, baseType: !4141, size: 64, offset: 1024)
!4141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4142, size: 64)
!4142 = !DISubroutineType(types: !4143)
!4143 = !{!224, !4096, !3758, !7}
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "add_pin_ranges", scope: !4097, file: !4098, line: 397, baseType: !4145, size: 64, offset: 1088)
!4145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4146, size: 64)
!4146 = !DISubroutineType(types: !4147)
!4147 = !{!224, !4096}
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4097, file: !4098, line: 399, baseType: !224, size: 32, offset: 1152)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "ngpio", scope: !4097, file: !4098, line: 400, baseType: !923, size: 16, offset: 1184)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "names", scope: !4097, file: !4098, line: 401, baseType: !4151, size: 64, offset: 1216)
!4151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4152, size: 64)
!4152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !233)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "can_sleep", scope: !4097, file: !4098, line: 402, baseType: !508, size: 8, offset: 1280)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "read_reg", scope: !4097, file: !4098, line: 405, baseType: !4155, size: 64, offset: 1344)
!4155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4156, size: 64)
!4156 = !DISubroutineType(types: !4157)
!4157 = !{!342, !218}
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "write_reg", scope: !4097, file: !4098, line: 406, baseType: !4159, size: 64, offset: 1408)
!4159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4160, size: 64)
!4160 = !DISubroutineType(types: !4161)
!4161 = !{null, !218, !342}
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "be_bits", scope: !4097, file: !4098, line: 407, baseType: !508, size: 8, offset: 1472)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "reg_dat", scope: !4097, file: !4098, line: 408, baseType: !218, size: 64, offset: 1536)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "reg_set", scope: !4097, file: !4098, line: 409, baseType: !218, size: 64, offset: 1600)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "reg_clr", scope: !4097, file: !4098, line: 410, baseType: !218, size: 64, offset: 1664)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "reg_dir_out", scope: !4097, file: !4098, line: 411, baseType: !218, size: 64, offset: 1728)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "reg_dir_in", scope: !4097, file: !4098, line: 412, baseType: !218, size: 64, offset: 1792)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "bgpio_dir_unreadable", scope: !4097, file: !4098, line: 413, baseType: !508, size: 8, offset: 1856)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "bgpio_bits", scope: !4097, file: !4098, line: 414, baseType: !224, size: 32, offset: 1888)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "bgpio_lock", scope: !4097, file: !4098, line: 415, baseType: !251, offset: 1920)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "bgpio_data", scope: !4097, file: !4098, line: 416, baseType: !342, size: 64, offset: 1920)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "bgpio_dir", scope: !4097, file: !4098, line: 417, baseType: !342, size: 64, offset: 1984)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4097, file: !4098, line: 432, baseType: !4174, size: 2304, offset: 2048)
!4174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_irq_chip", file: !4098, line: 31, size: 2304, elements: !4175)
!4175 = !{!4176, !4177, !4178, !4179, !4180, !4181, !4185, !4189, !4193, !4194, !4195, !4196, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4205, !4206, !4210, !4211, !4212, !4213, !4214, !4215}
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !4174, file: !4098, line: 37, baseType: !3790, size: 64)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !4174, file: !4098, line: 45, baseType: !3604, size: 64, offset: 64)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "domain_ops", scope: !4174, file: !4098, line: 52, baseType: !3610, size: 64, offset: 128)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4174, file: !4098, line: 61, baseType: !3631, size: 64, offset: 192)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "parent_domain", scope: !4174, file: !4098, line: 71, baseType: !3604, size: 64, offset: 256)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "child_to_parent_hwirq", scope: !4174, file: !4098, line: 90, baseType: !4182, size: 64, offset: 320)
!4182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4183, size: 64)
!4183 = !DISubroutineType(types: !4184)
!4184 = !{!224, !4096, !7, !7, !2640, !2640}
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "populate_parent_alloc_arg", scope: !4174, file: !4098, line: 105, baseType: !4186, size: 64, offset: 384)
!4186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4187, size: 64)
!4187 = !DISubroutineType(types: !4188)
!4188 = !{!218, !4096, !7, !7}
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "child_offset_to_irq", scope: !4174, file: !4098, line: 117, baseType: !4190, size: 64, offset: 448)
!4190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4191, size: 64)
!4191 = !DISubroutineType(types: !4192)
!4192 = !{!7, !4096, !7}
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "child_irq_domain_ops", scope: !4174, file: !4098, line: 128, baseType: !3612, size: 640, offset: 512)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4174, file: !4098, line: 137, baseType: !3943, size: 64, offset: 1152)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "default_type", scope: !4174, file: !4098, line: 145, baseType: !7, size: 32, offset: 1216)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4174, file: !4098, line: 152, baseType: !4197, size: 64, offset: 1280)
!4197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "request_key", scope: !4174, file: !4098, line: 159, baseType: !4197, size: 64, offset: 1344)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "parent_handler", scope: !4174, file: !4098, line: 167, baseType: !3943, size: 64, offset: 1408)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "parent_handler_data", scope: !4174, file: !4098, line: 175, baseType: !218, size: 64, offset: 1472)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "num_parents", scope: !4174, file: !4098, line: 182, baseType: !7, size: 32, offset: 1536)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "parents", scope: !4174, file: !4098, line: 190, baseType: !2640, size: 64, offset: 1600)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !4174, file: !4098, line: 197, baseType: !2640, size: 64, offset: 1664)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "threaded", scope: !4174, file: !4098, line: 204, baseType: !508, size: 8, offset: 1728)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "init_hw", scope: !4174, file: !4098, line: 212, baseType: !4145, size: 64, offset: 1792)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "init_valid_mask", scope: !4174, file: !4098, line: 223, baseType: !4207, size: 64, offset: 1856)
!4207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4208, size: 64)
!4208 = !DISubroutineType(types: !4209)
!4209 = !{null, !4096, !3758, !7}
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "valid_mask", scope: !4174, file: !4098, line: 233, baseType: !3758, size: 64, offset: 1920)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4174, file: !4098, line: 241, baseType: !7, size: 32, offset: 1984)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "irq_enable", scope: !4174, file: !4098, line: 248, baseType: !3800, size: 64, offset: 2048)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "irq_disable", scope: !4174, file: !4098, line: 255, baseType: !3800, size: 64, offset: 2112)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "irq_unmask", scope: !4174, file: !4098, line: 261, baseType: !3800, size: 64, offset: 2176)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask", scope: !4174, file: !4098, line: 268, baseType: !3800, size: 64, offset: 2240)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "valid_mask", scope: !4097, file: !4098, line: 441, baseType: !3758, size: 64, offset: 4352)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !4097, file: !4098, line: 454, baseType: !3618, size: 64, offset: 4416)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "of_gpio_n_cells", scope: !4097, file: !4098, line: 461, baseType: !7, size: 32, offset: 4480)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "of_xlate", scope: !4097, file: !4098, line: 469, baseType: !4220, size: 64, offset: 4544)
!4220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4221, size: 64)
!4221 = !DISubroutineType(types: !4222)
!4222 = !{!224, !4096, !4223, !1433}
!4223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4224, size: 64)
!4224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4225)
!4225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_phandle_args", file: !3620, line: 74, size: 640, elements: !4226)
!4226 = !{!4227, !4228, !4229}
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "np", scope: !4225, file: !3620, line: 75, baseType: !3618, size: 64)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "args_count", scope: !4225, file: !3620, line: 76, baseType: !224, size: 32, offset: 64)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4225, file: !3620, line: 77, baseType: !4230, size: 512, offset: 96)
!4230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !577, size: 512, elements: !1753)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "descs", scope: !220, file: !221, line: 53, baseType: !4232, size: 64, offset: 6656)
!4232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4233, size: 64)
!4233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_desc", file: !221, line: 99, size: 320, elements: !4234)
!4234 = !{!4235, !4236, !4237, !4238, !4239}
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "gdev", scope: !4233, file: !221, line: 100, baseType: !219, size: 64)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4233, file: !221, line: 101, baseType: !342, size: 64, offset: 64)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !4233, file: !221, line: 121, baseType: !233, size: 64, offset: 128)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4233, file: !221, line: 123, baseType: !233, size: 64, offset: 192)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "debounce_period_us", scope: !4233, file: !221, line: 129, baseType: !7, size: 32, offset: 256)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !220, file: !221, line: 54, baseType: !224, size: 32, offset: 6720)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "ngpio", scope: !220, file: !221, line: 55, baseType: !923, size: 16, offset: 6752)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !220, file: !221, line: 56, baseType: !233, size: 64, offset: 6784)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !220, file: !221, line: 57, baseType: !218, size: 64, offset: 6848)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !220, file: !221, line: 58, baseType: !237, size: 128, offset: 6912)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "notifier", scope: !220, file: !221, line: 59, baseType: !4246, size: 320, offset: 7040)
!4246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !4247, line: 65, size: 320, elements: !4248)
!4247 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!4248 = !{!4249, !4250}
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !4246, file: !4247, line: 66, baseType: !838, size: 256)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4246, file: !4247, line: 67, baseType: !4251, size: 64, offset: 256)
!4251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4252, size: 64)
!4252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !4247, line: 54, size: 192, elements: !4253)
!4253 = !{!4254, !4259, !4260}
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !4252, file: !4247, line: 55, baseType: !4255, size: 64)
!4255 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !4247, line: 51, baseType: !4256)
!4256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4257, size: 64)
!4257 = !DISubroutineType(types: !4258)
!4258 = !{!224, !4251, !342, !218}
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4252, file: !4247, line: 56, baseType: !4251, size: 64, offset: 64)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !4252, file: !4247, line: 57, baseType: !224, size: 32, offset: 128)
!4261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4262, size: 64)
!4262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device", file: !4263, line: 351, size: 10880, elements: !4264)
!4263 = !DIFile(filename: "./include/acpi/acpi_bus.h", directory: "/home/lizy2001/genbc/linux")
!4264 = !{!4265, !4266, !4269, !4270, !4271, !4272, !4273, !4274, !4275, !4284, !4301, !4375, !4404, !4428, !4449, !4453, !4462, !4494, !4508, !4530, !4546, !4547, !4548, !4549, !4550, !4551, !4552}
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "device_type", scope: !4262, file: !4263, line: 352, baseType: !224, size: 32)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !4262, file: !4263, line: 353, baseType: !4267, size: 64, offset: 64)
!4267 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_handle", file: !4268, line: 424, baseType: !218)
!4268 = !DIFile(filename: "./include/acpi/actypes.h", directory: "/home/lizy2001/genbc/linux")
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4262, file: !4263, line: 354, baseType: !3627, size: 192, offset: 128)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4262, file: !4263, line: 355, baseType: !4261, size: 64, offset: 320)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4262, file: !4263, line: 356, baseType: !237, size: 128, offset: 384)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4262, file: !4263, line: 357, baseType: !237, size: 128, offset: 512)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_list", scope: !4262, file: !4263, line: 358, baseType: !237, size: 128, offset: 640)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "del_list", scope: !4262, file: !4263, line: 359, baseType: !237, size: 128, offset: 768)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4262, file: !4263, line: 360, baseType: !4276, size: 32, offset: 896)
!4276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_status", file: !4263, line: 179, size: 32, elements: !4277)
!4277 = !{!4278, !4279, !4280, !4281, !4282, !4283}
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !4276, file: !4263, line: 180, baseType: !433, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !4276, file: !4263, line: 181, baseType: !433, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "show_in_ui", scope: !4276, file: !4263, line: 182, baseType: !433, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "functional", scope: !4276, file: !4263, line: 183, baseType: !433, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "battery_present", scope: !4276, file: !4263, line: 184, baseType: !433, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4276, file: !4263, line: 185, baseType: !433, size: 27, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4262, file: !4263, line: 361, baseType: !4285, size: 32, offset: 928)
!4285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_flags", file: !4263, line: 190, size: 32, elements: !4286)
!4286 = !{!4287, !4288, !4289, !4290, !4291, !4292, !4293, !4294, !4295, !4296, !4297, !4298, !4299, !4300}
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "dynamic_status", scope: !4285, file: !4263, line: 191, baseType: !433, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !4285, file: !4263, line: 192, baseType: !433, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "ejectable", scope: !4285, file: !4263, line: 193, baseType: !433, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "power_manageable", scope: !4285, file: !4263, line: 194, baseType: !433, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !4285, file: !4263, line: 195, baseType: !433, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !4285, file: !4263, line: 196, baseType: !433, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !4285, file: !4263, line: 197, baseType: !433, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_notify", scope: !4285, file: !4263, line: 198, baseType: !433, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "is_dock_station", scope: !4285, file: !4263, line: 199, baseType: !433, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "of_compatible_ok", scope: !4285, file: !4263, line: 200, baseType: !433, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma", scope: !4285, file: !4263, line: 201, baseType: !433, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "cca_seen", scope: !4285, file: !4263, line: 202, baseType: !433, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "enumeration_by_parent", scope: !4285, file: !4263, line: 203, baseType: !433, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4285, file: !4263, line: 204, baseType: !433, size: 19, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "pnp", scope: !4262, file: !4263, line: 362, baseType: !4302, size: 960, offset: 960)
!4302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_pnp", file: !4263, line: 234, size: 960, elements: !4303)
!4303 = !{!4304, !4306, !4313, !4315, !4316, !4317, !4322, !4325}
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "bus_id", scope: !4302, file: !4263, line: 235, baseType: !4305, size: 64)
!4305 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_bus_id", file: !4263, line: 217, baseType: !2052)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4302, file: !4263, line: 236, baseType: !4307, size: 32, offset: 64)
!4307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_pnp_type", file: !4263, line: 227, size: 32, elements: !4308)
!4308 = !{!4309, !4310, !4311, !4312}
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "hardware_id", scope: !4307, file: !4263, line: 228, baseType: !433, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "bus_address", scope: !4307, file: !4263, line: 229, baseType: !433, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "platform_id", scope: !4307, file: !4263, line: 230, baseType: !433, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4307, file: !4263, line: 231, baseType: !433, size: 29, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "bus_address", scope: !4302, file: !4263, line: 237, baseType: !4314, size: 64, offset: 128)
!4314 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_bus_address", file: !4263, line: 218, baseType: !439)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !4302, file: !4263, line: 238, baseType: !292, size: 64, offset: 192)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !4302, file: !4263, line: 239, baseType: !237, size: 128, offset: 256)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "device_name", scope: !4302, file: !4263, line: 240, baseType: !4318, size: 320, offset: 384)
!4318 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_device_name", file: !4263, line: 219, baseType: !4319)
!4319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !235, size: 320, elements: !4320)
!4320 = !{!4321}
!4321 = !DISubrange(count: 40)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "device_class", scope: !4302, file: !4263, line: 241, baseType: !4323, size: 160, offset: 704)
!4323 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_device_class", file: !4263, line: 220, baseType: !4324)
!4324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !235, size: 160, elements: !2219)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "str_obj", scope: !4302, file: !4263, line: 242, baseType: !4326, size: 64, offset: 896)
!4326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4327, size: 64)
!4327 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_object", file: !4268, line: 899, size: 192, elements: !4328)
!4328 = !{!4329, !4331, !4336, !4342, !4349, !4355, !4361, !4369}
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4327, file: !4268, line: 900, baseType: !4330, size: 32)
!4330 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_object_type", file: !4268, line: 635, baseType: !433)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !4327, file: !4268, line: 904, baseType: !4332, size: 128)
!4332 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4327, file: !4268, line: 901, size: 128, elements: !4333)
!4333 = !{!4334, !4335}
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4332, file: !4268, line: 902, baseType: !4330, size: 32)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4332, file: !4268, line: 903, baseType: !439, size: 64, offset: 64)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4327, file: !4268, line: 910, baseType: !4337, size: 128)
!4337 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4327, file: !4268, line: 906, size: 128, elements: !4338)
!4338 = !{!4339, !4340, !4341}
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4337, file: !4268, line: 907, baseType: !4330, size: 32)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4337, file: !4268, line: 908, baseType: !433, size: 32, offset: 32)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4337, file: !4268, line: 909, baseType: !292, size: 64, offset: 64)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !4327, file: !4268, line: 916, baseType: !4343, size: 128)
!4343 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4327, file: !4268, line: 912, size: 128, elements: !4344)
!4344 = !{!4345, !4346, !4347}
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4343, file: !4268, line: 913, baseType: !4330, size: 32)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4343, file: !4268, line: 914, baseType: !433, size: 32, offset: 32)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4343, file: !4268, line: 915, baseType: !4348, size: 64, offset: 64)
!4348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "package", scope: !4327, file: !4268, line: 922, baseType: !4350, size: 128)
!4350 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4327, file: !4268, line: 918, size: 128, elements: !4351)
!4351 = !{!4352, !4353, !4354}
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4350, file: !4268, line: 919, baseType: !4330, size: 32)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4350, file: !4268, line: 920, baseType: !433, size: 32, offset: 32)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !4350, file: !4268, line: 921, baseType: !4326, size: 64, offset: 64)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !4327, file: !4268, line: 928, baseType: !4356, size: 128)
!4356 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4327, file: !4268, line: 924, size: 128, elements: !4357)
!4357 = !{!4358, !4359, !4360}
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4356, file: !4268, line: 925, baseType: !4330, size: 32)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "actual_type", scope: !4356, file: !4268, line: 926, baseType: !4330, size: 32, offset: 32)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !4356, file: !4268, line: 927, baseType: !4267, size: 64, offset: 64)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "processor", scope: !4327, file: !4268, line: 935, baseType: !4362, size: 192)
!4362 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4327, file: !4268, line: 930, size: 192, elements: !4363)
!4363 = !{!4364, !4365, !4366, !4368}
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4362, file: !4268, line: 931, baseType: !4330, size: 32)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "proc_id", scope: !4362, file: !4268, line: 932, baseType: !433, size: 32, offset: 32)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_address", scope: !4362, file: !4268, line: 933, baseType: !4367, size: 64, offset: 64)
!4367 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_io_address", file: !4268, line: 128, baseType: !439)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_length", scope: !4362, file: !4268, line: 934, baseType: !433, size: 32, offset: 128)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "power_resource", scope: !4327, file: !4268, line: 941, baseType: !4370, size: 96)
!4370 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4327, file: !4268, line: 937, size: 96, elements: !4371)
!4371 = !{!4372, !4373, !4374}
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4370, file: !4268, line: 938, baseType: !4330, size: 32)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "system_level", scope: !4370, file: !4268, line: 939, baseType: !433, size: 32, offset: 32)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "resource_order", scope: !4370, file: !4268, line: 940, baseType: !433, size: 32, offset: 64)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4262, file: !4263, line: 363, baseType: !4376, size: 1344, offset: 1920)
!4376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power", file: !4263, line: 275, size: 1344, elements: !4377)
!4377 = !{!4378, !4379, !4389}
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4376, file: !4263, line: 276, baseType: !224, size: 32)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4376, file: !4263, line: 277, baseType: !4380, size: 32, offset: 32)
!4380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power_flags", file: !4263, line: 254, size: 32, elements: !4381)
!4381 = !{!4382, !4383, !4384, !4385, !4386, !4387, !4388}
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_get", scope: !4380, file: !4263, line: 255, baseType: !433, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "power_resources", scope: !4380, file: !4263, line: 256, baseType: !433, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "inrush_current", scope: !4380, file: !4263, line: 257, baseType: !433, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "power_removed", scope: !4380, file: !4263, line: 258, baseType: !433, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_parent", scope: !4380, file: !4263, line: 259, baseType: !433, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "dsw_present", scope: !4380, file: !4263, line: 260, baseType: !433, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4380, file: !4263, line: 261, baseType: !433, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !4376, file: !4263, line: 278, baseType: !4390, size: 1280, offset: 64)
!4390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4391, size: 1280, elements: !4402)
!4391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power_state", file: !4263, line: 264, size: 256, elements: !4392)
!4392 = !{!4393, !4399, !4400, !4401}
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4391, file: !4263, line: 269, baseType: !4394, size: 8)
!4394 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4391, file: !4263, line: 265, size: 8, elements: !4395)
!4395 = !{!4396, !4397, !4398}
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4394, file: !4263, line: 266, baseType: !1370, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_set", scope: !4394, file: !4263, line: 267, baseType: !1370, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4394, file: !4263, line: 268, baseType: !1370, size: 6, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4391, file: !4263, line: 270, baseType: !224, size: 32, offset: 32)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "latency", scope: !4391, file: !4263, line: 271, baseType: !224, size: 32, offset: 64)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4391, file: !4263, line: 272, baseType: !237, size: 128, offset: 128)
!4402 = !{!4403}
!4403 = !DISubrange(count: 5)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4262, file: !4263, line: 364, baseType: !4405, size: 640, offset: 3264)
!4405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup", file: !4263, line: 315, size: 640, elements: !4406)
!4406 = !{!4407, !4408, !4409, !4410, !4411, !4416, !4425, !4426, !4427}
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "gpe_device", scope: !4405, file: !4263, line: 316, baseType: !4267, size: 64)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "gpe_number", scope: !4405, file: !4263, line: 317, baseType: !439, size: 64, offset: 64)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "sleep_state", scope: !4405, file: !4263, line: 318, baseType: !439, size: 64, offset: 128)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4405, file: !4263, line: 319, baseType: !237, size: 128, offset: 192)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4405, file: !4263, line: 320, baseType: !4412, size: 8, offset: 320)
!4412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup_flags", file: !4263, line: 305, size: 8, elements: !4413)
!4413 = !{!4414, !4415}
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4412, file: !4263, line: 306, baseType: !1370, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_present", scope: !4412, file: !4263, line: 307, baseType: !1370, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !4405, file: !4263, line: 321, baseType: !4417, size: 128, offset: 384)
!4417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup_context", file: !4263, line: 310, size: 128, elements: !4418)
!4418 = !{!4419, !4424}
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4417, file: !4263, line: 311, baseType: !4420, size: 64)
!4420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4421, size: 64)
!4421 = !DISubroutineType(types: !4422)
!4422 = !{null, !4423}
!4423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4417, size: 64)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4417, file: !4263, line: 312, baseType: !3325, size: 64, offset: 64)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !4405, file: !4263, line: 322, baseType: !3504, size: 64, offset: 512)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_count", scope: !4405, file: !4263, line: 323, baseType: !224, size: 32, offset: 576)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "enable_count", scope: !4405, file: !4263, line: 324, baseType: !224, size: 32, offset: 608)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "performance", scope: !4262, file: !4263, line: 365, baseType: !4429, size: 192, offset: 3904)
!4429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf", file: !4263, line: 297, size: 192, elements: !4430)
!4430 = !{!4431, !4432, !4436, !4437}
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4429, file: !4263, line: 298, baseType: !224, size: 32)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4429, file: !4263, line: 299, baseType: !4433, size: 8, offset: 32)
!4433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf_flags", file: !4263, line: 283, size: 8, elements: !4434)
!4434 = !{!4435}
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4433, file: !4263, line: 284, baseType: !1370, size: 8, flags: DIFlagBitField, extraData: i64 0)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "state_count", scope: !4429, file: !4263, line: 300, baseType: !224, size: 32, offset: 64)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !4429, file: !4263, line: 301, baseType: !4438, size: 64, offset: 128)
!4438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4439, size: 64)
!4439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf_state", file: !4263, line: 287, size: 64, elements: !4440)
!4440 = !{!4441, !4446, !4447, !4448}
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4439, file: !4263, line: 291, baseType: !4442, size: 8)
!4442 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4439, file: !4263, line: 288, size: 8, elements: !4443)
!4443 = !{!4444, !4445}
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4442, file: !4263, line: 289, baseType: !1370, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4442, file: !4263, line: 290, baseType: !1370, size: 7, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4439, file: !4263, line: 292, baseType: !1370, size: 8, offset: 8)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "performance", scope: !4439, file: !4263, line: 293, baseType: !1370, size: 8, offset: 16)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "latency", scope: !4439, file: !4263, line: 294, baseType: !224, size: 32, offset: 32)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4262, file: !4263, line: 366, baseType: !4450, size: 64, offset: 4096)
!4450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_dir", file: !4263, line: 209, size: 64, elements: !4451)
!4451 = !{!4452}
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4450, file: !4263, line: 210, baseType: !3978, size: 64)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4262, file: !4263, line: 367, baseType: !4454, size: 384, offset: 4160)
!4454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_data", file: !4263, line: 341, size: 384, elements: !4455)
!4455 = !{!4456, !4459, !4460, !4461}
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4454, file: !4263, line: 342, baseType: !4457, size: 64)
!4457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4458, size: 64)
!4458 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4327)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4454, file: !4263, line: 343, baseType: !237, size: 128, offset: 64)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "of_compatible", scope: !4454, file: !4263, line: 344, baseType: !4457, size: 64, offset: 192)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "subnodes", scope: !4454, file: !4263, line: 345, baseType: !237, size: 128, offset: 256)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4262, file: !4263, line: 368, baseType: !4463, size: 64, offset: 4544)
!4463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4464, size: 64)
!4464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_scan_handler", file: !4263, line: 122, size: 1216, elements: !4465)
!4465 = !{!4466, !4467, !4468, !4473, !4477, !4481, !4482, !4483}
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !4464, file: !4263, line: 123, baseType: !3419, size: 64)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "list_node", scope: !4464, file: !4263, line: 124, baseType: !237, size: 128, offset: 64)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4464, file: !4263, line: 125, baseType: !4469, size: 64, offset: 192)
!4469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4470, size: 64)
!4470 = !DISubroutineType(types: !4471)
!4471 = !{!508, !233, !4472}
!4472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3419, size: 64)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !4464, file: !4263, line: 126, baseType: !4474, size: 64, offset: 256)
!4474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4475, size: 64)
!4475 = !DISubroutineType(types: !4476)
!4476 = !{!224, !4261, !3419}
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4464, file: !4263, line: 127, baseType: !4478, size: 64, offset: 320)
!4478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4479, size: 64)
!4479 = !DISubroutineType(types: !4480)
!4480 = !{null, !4261}
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !4464, file: !4263, line: 128, baseType: !3347, size: 64, offset: 384)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "unbind", scope: !4464, file: !4263, line: 129, baseType: !3347, size: 64, offset: 448)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !4464, file: !4263, line: 130, baseType: !4484, size: 704, offset: 512)
!4484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_hotplug_profile", file: !4263, line: 108, size: 704, elements: !4485)
!4485 = !{!4486, !4487, !4491, !4492, !4493}
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4484, file: !4263, line: 109, baseType: !229, size: 512)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "scan_dependent", scope: !4484, file: !4263, line: 110, baseType: !4488, size: 64, offset: 512)
!4488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4489, size: 64)
!4489 = !DISubroutineType(types: !4490)
!4490 = !{!224, !4261}
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "notify_online", scope: !4484, file: !4263, line: 111, baseType: !4478, size: 64, offset: 576)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !4484, file: !4263, line: 112, baseType: !508, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "demand_offline", scope: !4484, file: !4263, line: 113, baseType: !508, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "hp", scope: !4262, file: !4263, line: 369, baseType: !4495, size: 64, offset: 4608)
!4495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4496, size: 64)
!4496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_hotplug_context", file: !4263, line: 138, size: 256, elements: !4497)
!4497 = !{!4498, !4499, !4503, !4507}
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !4496, file: !4263, line: 139, baseType: !4261, size: 64)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !4496, file: !4263, line: 140, baseType: !4500, size: 64, offset: 64)
!4500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4501, size: 64)
!4501 = !DISubroutineType(types: !4502)
!4502 = !{!224, !4261, !433}
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4496, file: !4263, line: 141, baseType: !4504, size: 64, offset: 128)
!4504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4505, size: 64)
!4505 = !DISubroutineType(types: !4506)
!4506 = !{null, !4261, !433}
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !4496, file: !4263, line: 142, baseType: !4478, size: 64, offset: 192)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4262, file: !4263, line: 370, baseType: !4509, size: 64, offset: 4672)
!4509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4510, size: 64)
!4510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_driver", file: !4263, line: 162, size: 2816, elements: !4511)
!4511 = !{!4512, !4516, !4517, !4518, !4519, !4528, !4529}
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4510, file: !4263, line: 163, baseType: !4513, size: 640)
!4513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !235, size: 640, elements: !4514)
!4514 = !{!4515}
!4515 = !DISubrange(count: 80)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4510, file: !4263, line: 164, baseType: !4513, size: 640, offset: 640)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !4510, file: !4263, line: 165, baseType: !3419, size: 64, offset: 1280)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4510, file: !4263, line: 166, baseType: !7, size: 32, offset: 1344)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4510, file: !4263, line: 167, baseType: !4520, size: 192, offset: 1408)
!4520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_ops", file: !4263, line: 154, size: 192, elements: !4521)
!4521 = !{!4522, !4524, !4526}
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !4520, file: !4263, line: 155, baseType: !4523, size: 64)
!4523 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_add", file: !4263, line: 150, baseType: !4488)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4520, file: !4263, line: 156, baseType: !4525, size: 64, offset: 64)
!4525 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_remove", file: !4263, line: 151, baseType: !4488)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !4520, file: !4263, line: 157, baseType: !4527, size: 64, offset: 128)
!4527 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_notify", file: !4263, line: 152, baseType: !4504)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "drv", scope: !4510, file: !4263, line: 168, baseType: !3397, size: 1152, offset: 1600)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4510, file: !4263, line: 169, baseType: !651, size: 64, offset: 2752)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "driver_gpios", scope: !4262, file: !4263, line: 371, baseType: !4531, size: 64, offset: 4736)
!4531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4532, size: 64)
!4532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4533)
!4533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_gpio_mapping", file: !158, line: 663, size: 192, elements: !4534)
!4534 = !{!4535, !4536, !4544, !4545}
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4533, file: !158, line: 664, baseType: !233, size: 64)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4533, file: !158, line: 665, baseType: !4537, size: 64, offset: 64)
!4537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4538, size: 64)
!4538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4539)
!4539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_gpio_params", file: !158, line: 657, size: 96, elements: !4540)
!4540 = !{!4541, !4542, !4543}
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "crs_entry_index", scope: !4539, file: !158, line: 658, baseType: !7, size: 32)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "line_index", scope: !4539, file: !158, line: 659, baseType: !7, size: 32, offset: 32)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "active_low", scope: !4539, file: !158, line: 660, baseType: !508, size: 8, offset: 64)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4533, file: !158, line: 666, baseType: !7, size: 32, offset: 128)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !4533, file: !158, line: 678, baseType: !7, size: 32, offset: 160)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4262, file: !4263, line: 372, baseType: !218, size: 64, offset: 4800)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4262, file: !4263, line: 373, baseType: !226, size: 5568, offset: 4864)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_count", scope: !4262, file: !4263, line: 374, baseType: !7, size: 32, offset: 10432)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "dep_unmet", scope: !4262, file: !4263, line: 375, baseType: !7, size: 32, offset: 10464)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_list", scope: !4262, file: !4263, line: 376, baseType: !237, size: 128, offset: 10496)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_lock", scope: !4262, file: !4263, line: 377, baseType: !744, size: 192, offset: 10624)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4262, file: !4263, line: 378, baseType: !4478, size: 64, offset: 10816)
!4553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4554, size: 64)
!4554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4555)
!4555 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !241)
!4556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4555, size: 64)
!4557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4558, size: 64)
!4558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpiod_hog", file: !146, line: 57, size: 448, elements: !4559)
!4559 = !{!4560, !4561, !4562, !4563, !4564, !4565}
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4558, file: !146, line: 58, baseType: !237, size: 128)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "chip_label", scope: !4558, file: !146, line: 59, baseType: !233, size: 64, offset: 128)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "chip_hwnum", scope: !4558, file: !146, line: 60, baseType: !923, size: 16, offset: 192)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "line_name", scope: !4558, file: !146, line: 61, baseType: !233, size: 64, offset: 256)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "lflags", scope: !4558, file: !146, line: 62, baseType: !342, size: 64, offset: 320)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "dflags", scope: !4558, file: !146, line: 63, baseType: !224, size: 32, offset: 384)
!4566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4567, size: 64)
!4567 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!4568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4569, size: 64)
!4569 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !235)
!4570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!4571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4572, size: 64)
!4572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpiod_lookup_table", file: !146, line: 43, size: 192, elements: !4573)
!4573 = !{!4574, !4575, !4576}
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4572, file: !146, line: 44, baseType: !237, size: 128)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !4572, file: !146, line: 45, baseType: !233, size: 64, offset: 128)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !4572, file: !146, line: 46, baseType: !4577, offset: 192)
!4577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4578, elements: !2349)
!4578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpiod_lookup", file: !146, line: 35, size: 320, elements: !4579)
!4579 = !{!4580, !4581, !4582, !4583, !4584}
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !4578, file: !146, line: 36, baseType: !233, size: 64)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "chip_hwnum", scope: !4578, file: !146, line: 37, baseType: !923, size: 16, offset: 64)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "con_id", scope: !4578, file: !146, line: 38, baseType: !233, size: 64, offset: 128)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !4578, file: !146, line: 39, baseType: !7, size: 32, offset: 192)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4578, file: !146, line: 40, baseType: !342, size: 64, offset: 256)
!4585 = !{!0, !4586, !4588, !4593, !4595, !4597, !4599, !4604, !4606, !4608, !4610, !4612, !4614, !4616}
!4586 = !DIGlobalVariableExpression(var: !4587, expr: !DIExpression())
!4587 = distinct !DIGlobalVariable(name: "gpio_devices", scope: !2, file: !3, line: 75, type: !237, isLocal: false, isDefinition: true)
!4588 = !DIGlobalVariableExpression(var: !4589, expr: !DIExpression())
!4589 = distinct !DIGlobalVariable(name: "__key", scope: !4590, file: !3, line: 678, type: !666, isLocal: true, isDefinition: true)
!4590 = distinct !DISubprogram(name: "gpiochip_add_data_with_key", scope: !3, file: !3, line: 567, type: !4591, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!4591 = !DISubroutineType(types: !4592)
!4592 = !{!224, !4096, !218, !4197, !4197}
!4593 = !DIGlobalVariableExpression(var: !4594, expr: !DIExpression())
!4594 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_gpiolib_dev_init261", scope: !2, file: !3, line: 4365, type: !218, isLocal: true, isDefinition: true)
!4595 = !DIGlobalVariableExpression(var: !4596, expr: !DIExpression())
!4596 = distinct !DIGlobalVariable(name: "gpiolib_initialized", scope: !2, file: !3, line: 89, type: !508, isLocal: true, isDefinition: true)
!4597 = !DIGlobalVariableExpression(var: !4598, expr: !DIExpression())
!4598 = distinct !DIGlobalVariable(name: "gpio_bus_type", scope: !2, file: !3, line: 58, type: !3383, isLocal: true, isDefinition: true)
!4599 = !DIGlobalVariableExpression(var: !4600, expr: !DIExpression())
!4600 = distinct !DIGlobalVariable(name: "gpio_ida", scope: !2, file: !3, line: 55, type: !4601, isLocal: true, isDefinition: true)
!4601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ida", file: !3214, line: 244, size: 128, elements: !4602)
!4602 = !{!4603}
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "xa", scope: !4601, file: !3214, line: 245, baseType: !809, size: 128)
!4604 = !DIGlobalVariableExpression(var: !4605, expr: !DIExpression())
!4605 = distinct !DIGlobalVariable(name: "gpio_devt", scope: !2, file: !3, line: 56, type: !531, isLocal: true, isDefinition: true)
!4606 = !DIGlobalVariableExpression(var: !4607, expr: !DIExpression())
!4607 = distinct !DIGlobalVariable(name: "gpiochip_domain_ops", scope: !2, file: !3, line: 1348, type: !3611, isLocal: true, isDefinition: true)
!4608 = !DIGlobalVariableExpression(var: !4609, expr: !DIExpression())
!4609 = distinct !DIGlobalVariable(name: "gpio_lookup_lock", scope: !2, file: !3, line: 73, type: !744, isLocal: true, isDefinition: true)
!4610 = !DIGlobalVariableExpression(var: !4611, expr: !DIExpression())
!4611 = distinct !DIGlobalVariable(name: "gpio_lookup_list", scope: !2, file: !3, line: 74, type: !237, isLocal: true, isDefinition: true)
!4612 = !DIGlobalVariableExpression(var: !4613, expr: !DIExpression())
!4613 = distinct !DIGlobalVariable(name: "gpio_machine_hogs_mutex", scope: !2, file: !3, line: 77, type: !744, isLocal: true, isDefinition: true)
!4614 = !DIGlobalVariableExpression(var: !4615, expr: !DIExpression())
!4615 = distinct !DIGlobalVariable(name: "gpio_machine_hogs", scope: !2, file: !3, line: 78, type: !237, isLocal: true, isDefinition: true)
!4616 = !DIGlobalVariableExpression(var: !4617, expr: !DIExpression())
!4617 = distinct !DIGlobalVariable(name: "gpio_suffixes", scope: !2, file: !221, line: 73, type: !4618, isLocal: true, isDefinition: true)
!4618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4152, size: 128, elements: !1587)
!4619 = !{!"rsp"}
!4620 = !{i32 7, !"Dwarf Version", i32 4}
!4621 = !{i32 2, !"Debug Info Version", i32 3}
!4622 = !{i32 1, !"wchar_size", i32 2}
!4623 = !{i32 1, !"Code Model", i32 2}
!4624 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4625 = distinct !DISubprogram(name: "gpio_to_desc", scope: !3, file: !3, line: 104, type: !4626, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!4626 = !DISubroutineType(types: !4627)
!4627 = !{!4232, !7}
!4628 = !DILocalVariable(name: "lock", arg: 1, scope: !4629, file: !4630, line: 407, type: !4633)
!4629 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !4630, file: !4630, line: 407, type: !4631, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!4630 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!4631 = !DISubroutineType(types: !4632)
!4632 = !{null, !4633, !342}
!4633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64)
!4634 = !DILocation(line: 407, column: 64, scope: !4629, inlinedAt: !4635)
!4635 = distinct !DILocation(line: 119, column: 2, scope: !4625)
!4636 = !DILocalVariable(name: "flags", arg: 2, scope: !4629, file: !4630, line: 407, type: !342)
!4637 = !DILocation(line: 407, column: 84, scope: !4629, inlinedAt: !4635)
!4638 = !DILocation(line: 407, column: 64, scope: !4629, inlinedAt: !4639)
!4639 = distinct !DILocation(line: 114, column: 4, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 113, column: 40)
!4641 = distinct !DILexicalBlock(scope: !4642, file: !3, line: 112, column: 7)
!4642 = distinct !DILexicalBlock(scope: !4643, file: !3, line: 111, column: 49)
!4643 = distinct !DILexicalBlock(scope: !4644, file: !3, line: 111, column: 2)
!4644 = distinct !DILexicalBlock(scope: !4625, file: !3, line: 111, column: 2)
!4645 = !DILocation(line: 407, column: 84, scope: !4629, inlinedAt: !4639)
!4646 = !DILocalVariable(name: "lock", arg: 1, scope: !4647, file: !4630, line: 327, type: !4633)
!4647 = distinct !DISubprogram(name: "spinlock_check", scope: !4630, file: !4630, line: 327, type: !4648, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!4648 = !DISubroutineType(types: !4649)
!4649 = !{!4650, !4633}
!4650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!4651 = !DILocation(line: 327, column: 67, scope: !4647, inlinedAt: !4652)
!4652 = distinct !DILocation(line: 109, column: 2, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4654, file: !3, line: 109, column: 2)
!4654 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 109, column: 2)
!4655 = distinct !DILexicalBlock(scope: !4656, file: !3, line: 109, column: 2)
!4656 = distinct !DILexicalBlock(scope: !4657, file: !3, line: 109, column: 2)
!4657 = distinct !DILexicalBlock(scope: !4625, file: !3, line: 109, column: 2)
!4658 = !DILocalVariable(name: "gpio", arg: 1, scope: !4625, file: !3, line: 104, type: !7)
!4659 = !DILocation(line: 104, column: 41, scope: !4625)
!4660 = !DILocalVariable(name: "gdev", scope: !4625, file: !3, line: 106, type: !219)
!4661 = !DILocation(line: 106, column: 22, scope: !4625)
!4662 = !DILocalVariable(name: "flags", scope: !4625, file: !3, line: 107, type: !342)
!4663 = !DILocation(line: 107, column: 16, scope: !4625)
!4664 = !DILocation(line: 109, column: 2, scope: !4625)
!4665 = !DILocation(line: 109, column: 2, scope: !4657)
!4666 = !DILocalVariable(name: "__dummy", scope: !4667, file: !3, line: 109, type: !342)
!4667 = distinct !DILexicalBlock(scope: !4656, file: !3, line: 109, column: 2)
!4668 = !DILocation(line: 109, column: 2, scope: !4667)
!4669 = !DILocalVariable(name: "__dummy2", scope: !4667, file: !3, line: 109, type: !342)
!4670 = !DILocation(line: 109, column: 2, scope: !4656)
!4671 = !DILocation(line: 109, column: 2, scope: !4655)
!4672 = !DILocation(line: 109, column: 2, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 109, column: 2)
!4674 = !DILocalVariable(name: "__dummy", scope: !4675, file: !3, line: 109, type: !342)
!4675 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 109, column: 2)
!4676 = distinct !DILexicalBlock(scope: !4673, file: !3, line: 109, column: 2)
!4677 = !DILocation(line: 109, column: 2, scope: !4675)
!4678 = !DILocalVariable(name: "__dummy2", scope: !4675, file: !3, line: 109, type: !342)
!4679 = !DILocation(line: 109, column: 2, scope: !4676)
!4680 = !DILocation(line: 109, column: 2, scope: !4654)
!4681 = !{i32 -2141476471}
!4682 = !DILocation(line: 329, column: 10, scope: !4647, inlinedAt: !4652)
!4683 = !DILocation(line: 329, column: 16, scope: !4647, inlinedAt: !4652)
!4684 = !DILocation(line: 109, column: 2, scope: !4653)
!4685 = !DILocalVariable(name: "__mptr", scope: !4686, file: !3, line: 111, type: !218)
!4686 = distinct !DILexicalBlock(scope: !4644, file: !3, line: 111, column: 2)
!4687 = !DILocation(line: 111, column: 2, scope: !4686)
!4688 = !DILocation(line: 111, column: 2, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4686, file: !3, line: 111, column: 2)
!4690 = !DILocation(line: 111, column: 2, scope: !4644)
!4691 = !DILocation(line: 111, column: 2, scope: !4643)
!4692 = !DILocation(line: 112, column: 7, scope: !4641)
!4693 = !DILocation(line: 112, column: 13, scope: !4641)
!4694 = !DILocation(line: 112, column: 21, scope: !4641)
!4695 = !DILocation(line: 112, column: 18, scope: !4641)
!4696 = !DILocation(line: 112, column: 26, scope: !4641)
!4697 = !DILocation(line: 113, column: 7, scope: !4641)
!4698 = !DILocation(line: 113, column: 13, scope: !4641)
!4699 = !DILocation(line: 113, column: 20, scope: !4641)
!4700 = !DILocation(line: 113, column: 26, scope: !4641)
!4701 = !DILocation(line: 113, column: 18, scope: !4641)
!4702 = !DILocation(line: 113, column: 34, scope: !4641)
!4703 = !DILocation(line: 113, column: 32, scope: !4641)
!4704 = !DILocation(line: 112, column: 7, scope: !4642)
!4705 = !DILocation(line: 114, column: 39, scope: !4640)
!4706 = !DILocalVariable(name: "__dummy", scope: !4707, file: !4630, line: 409, type: !342)
!4707 = distinct !DILexicalBlock(scope: !4708, file: !4630, line: 409, column: 2)
!4708 = distinct !DILexicalBlock(scope: !4629, file: !4630, line: 409, column: 2)
!4709 = !DILocation(line: 409, column: 2, scope: !4707, inlinedAt: !4639)
!4710 = !DILocalVariable(name: "__dummy2", scope: !4707, file: !4630, line: 409, type: !342)
!4711 = !DILocalVariable(name: "__dummy", scope: !4712, file: !4630, line: 409, type: !342)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !4630, line: 409, column: 2)
!4713 = distinct !DILexicalBlock(scope: !4714, file: !4630, line: 409, column: 2)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !4630, line: 409, column: 2)
!4715 = distinct !DILexicalBlock(scope: !4708, file: !4630, line: 409, column: 2)
!4716 = !DILocation(line: 409, column: 2, scope: !4712, inlinedAt: !4639)
!4717 = !DILocalVariable(name: "__dummy2", scope: !4712, file: !4630, line: 409, type: !342)
!4718 = !DILocation(line: 409, column: 2, scope: !4713, inlinedAt: !4639)
!4719 = !DILocation(line: 409, column: 2, scope: !4720, inlinedAt: !4639)
!4720 = distinct !DILexicalBlock(scope: !4715, file: !4630, line: 409, column: 2)
!4721 = !{i32 -2145352320}
!4722 = !DILocation(line: 409, column: 2, scope: !4723, inlinedAt: !4639)
!4723 = distinct !DILexicalBlock(scope: !4720, file: !4630, line: 409, column: 2)
!4724 = !DILocation(line: 115, column: 12, scope: !4640)
!4725 = !DILocation(line: 115, column: 18, scope: !4640)
!4726 = !DILocation(line: 115, column: 24, scope: !4640)
!4727 = !DILocation(line: 115, column: 31, scope: !4640)
!4728 = !DILocation(line: 115, column: 37, scope: !4640)
!4729 = !DILocation(line: 115, column: 29, scope: !4640)
!4730 = !DILocation(line: 115, column: 4, scope: !4640)
!4731 = !DILocation(line: 117, column: 2, scope: !4642)
!4732 = !DILocalVariable(name: "__mptr", scope: !4733, file: !3, line: 111, type: !218)
!4733 = distinct !DILexicalBlock(scope: !4643, file: !3, line: 111, column: 2)
!4734 = !DILocation(line: 111, column: 2, scope: !4733)
!4735 = !DILocation(line: 111, column: 2, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 111, column: 2)
!4737 = distinct !{!4737, !4690, !4738}
!4738 = !DILocation(line: 117, column: 2, scope: !4644)
!4739 = !DILocation(line: 119, column: 37, scope: !4625)
!4740 = !DILocation(line: 409, column: 2, scope: !4707, inlinedAt: !4635)
!4741 = !DILocation(line: 409, column: 2, scope: !4712, inlinedAt: !4635)
!4742 = !DILocation(line: 409, column: 2, scope: !4713, inlinedAt: !4635)
!4743 = !DILocation(line: 409, column: 2, scope: !4720, inlinedAt: !4635)
!4744 = !DILocation(line: 409, column: 2, scope: !4723, inlinedAt: !4635)
!4745 = !DILocation(line: 121, column: 21, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4625, file: !3, line: 121, column: 6)
!4747 = !DILocation(line: 121, column: 7, scope: !4746)
!4748 = !DILocation(line: 121, column: 6, scope: !4625)
!4749 = !DILocalVariable(name: "__ret_warn_on", scope: !4750, file: !3, line: 122, type: !224)
!4750 = distinct !DILexicalBlock(scope: !4746, file: !3, line: 122, column: 3)
!4751 = !DILocation(line: 122, column: 3, scope: !4750)
!4752 = !DILocation(line: 122, column: 3, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4750, file: !3, line: 122, column: 3)
!4754 = !DILocation(line: 122, column: 3, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4753, file: !3, line: 122, column: 3)
!4756 = !DILocation(line: 122, column: 3, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4755, file: !3, line: 122, column: 3)
!4758 = !DILocation(line: 122, column: 3, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4755, file: !3, line: 122, column: 3)
!4760 = !DILocation(line: 122, column: 3, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4759, file: !3, line: 122, column: 3)
!4762 = !DILocation(line: 122, column: 3, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4759, file: !3, line: 122, column: 3)
!4764 = !{i32 -2141471770, i32 -2141471741, i32 -2141471695, i32 -2141471637, i32 -2141471583, i32 -2141471529, i32 -2141471474, i32 -2141471443}
!4765 = !DILocation(line: 122, column: 3, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4759, file: !3, line: 122, column: 3)
!4767 = !{i32 -2141471028, i32 -2141471021, i32 -2141470969, i32 -2141470938, i32 -2141470908}
!4768 = !DILocation(line: 122, column: 3, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4759, file: !3, line: 122, column: 3)
!4770 = !DILocation(line: 122, column: 3, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4755, file: !3, line: 122, column: 3)
!4772 = !DILocation(line: 122, column: 3, scope: !4746)
!4773 = !DILocation(line: 124, column: 2, scope: !4625)
!4774 = !DILocation(line: 125, column: 1, scope: !4625)
!4775 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !4776, file: !4776, line: 666, type: !4777, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!4776 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!4777 = !DISubroutineType(types: !4778)
!4778 = !{!342}
!4779 = !DILocalVariable(name: "f", scope: !4775, file: !4776, line: 668, type: !342)
!4780 = !DILocation(line: 668, column: 16, scope: !4775)
!4781 = !DILocation(line: 670, column: 6, scope: !4775)
!4782 = !DILocation(line: 670, column: 4, scope: !4775)
!4783 = !DILocation(line: 671, column: 2, scope: !4775)
!4784 = !DILocation(line: 672, column: 9, scope: !4775)
!4785 = !DILocation(line: 672, column: 2, scope: !4775)
!4786 = distinct !DISubprogram(name: "gpio_is_valid", scope: !4787, file: !4787, line: 44, type: !4788, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!4787 = !DIFile(filename: "./include/asm-generic/gpio.h", directory: "/home/lizy2001/genbc/linux")
!4788 = !DISubroutineType(types: !4789)
!4789 = !{!508, !224}
!4790 = !DILocalVariable(name: "number", arg: 1, scope: !4786, file: !4787, line: 44, type: !224)
!4791 = !DILocation(line: 44, column: 38, scope: !4786)
!4792 = !DILocation(line: 46, column: 9, scope: !4786)
!4793 = !DILocation(line: 46, column: 16, scope: !4786)
!4794 = !DILocation(line: 46, column: 21, scope: !4786)
!4795 = !DILocation(line: 46, column: 24, scope: !4786)
!4796 = !DILocation(line: 46, column: 31, scope: !4786)
!4797 = !DILocation(line: 0, scope: !4786)
!4798 = !DILocation(line: 46, column: 2, scope: !4786)
!4799 = distinct !DISubprogram(name: "gpiochip_get_desc", scope: !3, file: !3, line: 138, type: !4800, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!4800 = !DISubroutineType(types: !4801)
!4801 = !{!4232, !4096, !7}
!4802 = !DILocalVariable(name: "gc", arg: 1, scope: !4799, file: !3, line: 138, type: !4096)
!4803 = !DILocation(line: 138, column: 55, scope: !4799)
!4804 = !DILocalVariable(name: "hwnum", arg: 2, scope: !4799, file: !3, line: 139, type: !7)
!4805 = !DILocation(line: 139, column: 22, scope: !4799)
!4806 = !DILocalVariable(name: "gdev", scope: !4799, file: !3, line: 141, type: !219)
!4807 = !DILocation(line: 141, column: 22, scope: !4799)
!4808 = !DILocation(line: 141, column: 29, scope: !4799)
!4809 = !DILocation(line: 141, column: 33, scope: !4799)
!4810 = !DILocation(line: 143, column: 6, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 143, column: 6)
!4812 = !DILocation(line: 143, column: 15, scope: !4811)
!4813 = !DILocation(line: 143, column: 21, scope: !4811)
!4814 = !DILocation(line: 143, column: 12, scope: !4811)
!4815 = !DILocation(line: 143, column: 6, scope: !4799)
!4816 = !DILocation(line: 144, column: 10, scope: !4811)
!4817 = !DILocation(line: 144, column: 3, scope: !4811)
!4818 = !DILocation(line: 146, column: 10, scope: !4799)
!4819 = !DILocation(line: 146, column: 16, scope: !4799)
!4820 = !DILocation(line: 146, column: 22, scope: !4799)
!4821 = !DILocation(line: 146, column: 2, scope: !4799)
!4822 = !DILocation(line: 147, column: 1, scope: !4799)
!4823 = distinct !DISubprogram(name: "ERR_PTR", scope: !4824, file: !4824, line: 24, type: !4825, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!4824 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!4825 = !DISubroutineType(types: !4826)
!4826 = !{!218, !327}
!4827 = !DILocalVariable(name: "error", arg: 1, scope: !4823, file: !4824, line: 24, type: !327)
!4828 = !DILocation(line: 24, column: 48, scope: !4823)
!4829 = !DILocation(line: 26, column: 18, scope: !4823)
!4830 = !DILocation(line: 26, column: 9, scope: !4823)
!4831 = !DILocation(line: 26, column: 2, scope: !4823)
!4832 = distinct !DISubprogram(name: "desc_to_gpio", scope: !3, file: !3, line: 160, type: !4833, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!4833 = !DISubroutineType(types: !4834)
!4834 = !{!224, !4835}
!4835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4836, size: 64)
!4836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4233)
!4837 = !DILocalVariable(name: "desc", arg: 1, scope: !4832, file: !3, line: 160, type: !4835)
!4838 = !DILocation(line: 160, column: 42, scope: !4832)
!4839 = !DILocation(line: 162, column: 9, scope: !4832)
!4840 = !DILocation(line: 162, column: 15, scope: !4832)
!4841 = !DILocation(line: 162, column: 21, scope: !4832)
!4842 = !DILocation(line: 162, column: 29, scope: !4832)
!4843 = !DILocation(line: 162, column: 37, scope: !4832)
!4844 = !DILocation(line: 162, column: 43, scope: !4832)
!4845 = !DILocation(line: 162, column: 49, scope: !4832)
!4846 = !DILocation(line: 162, column: 34, scope: !4832)
!4847 = !DILocation(line: 162, column: 26, scope: !4832)
!4848 = !DILocation(line: 162, column: 2, scope: !4832)
!4849 = distinct !DISubprogram(name: "gpiod_to_chip", scope: !3, file: !3, line: 171, type: !4850, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!4850 = !DISubroutineType(types: !4851)
!4851 = !{!4096, !4835}
!4852 = !DILocalVariable(name: "desc", arg: 1, scope: !4849, file: !3, line: 171, type: !4835)
!4853 = !DILocation(line: 171, column: 57, scope: !4849)
!4854 = !DILocation(line: 173, column: 7, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4849, file: !3, line: 173, column: 6)
!4856 = !DILocation(line: 173, column: 12, scope: !4855)
!4857 = !DILocation(line: 173, column: 16, scope: !4855)
!4858 = !DILocation(line: 173, column: 22, scope: !4855)
!4859 = !DILocation(line: 173, column: 6, scope: !4849)
!4860 = !DILocation(line: 174, column: 3, scope: !4855)
!4861 = !DILocation(line: 175, column: 9, scope: !4849)
!4862 = !DILocation(line: 175, column: 15, scope: !4849)
!4863 = !DILocation(line: 175, column: 21, scope: !4849)
!4864 = !DILocation(line: 175, column: 2, scope: !4849)
!4865 = !DILocation(line: 176, column: 1, scope: !4849)
!4866 = distinct !DISubprogram(name: "gpiod_get_direction", scope: !3, file: !3, line: 211, type: !4867, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!4867 = !DISubroutineType(types: !4868)
!4868 = !{!224, !4232}
!4869 = !DILocalVariable(name: "nr", arg: 1, scope: !4870, file: !4871, line: 235, type: !327)
!4870 = distinct !DISubprogram(name: "assign_bit", scope: !4871, file: !4871, line: 235, type: !4872, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!4871 = !DIFile(filename: "./include/linux/bitops.h", directory: "/home/lizy2001/genbc/linux")
!4872 = !DISubroutineType(types: !4873)
!4873 = !{null, !327, !4874, !508}
!4874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4875, size: 64)
!4875 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !342)
!4876 = !DILocation(line: 235, column: 45, scope: !4870, inlinedAt: !4877)
!4877 = distinct !DILocation(line: 239, column: 2, scope: !4866)
!4878 = !DILocalVariable(name: "addr", arg: 2, scope: !4870, file: !4871, line: 235, type: !4874)
!4879 = !DILocation(line: 235, column: 73, scope: !4870, inlinedAt: !4877)
!4880 = !DILocalVariable(name: "value", arg: 3, scope: !4870, file: !4871, line: 236, type: !508)
!4881 = !DILocation(line: 236, column: 17, scope: !4870, inlinedAt: !4877)
!4882 = !DILocalVariable(name: "desc", arg: 1, scope: !4866, file: !3, line: 211, type: !4232)
!4883 = !DILocation(line: 211, column: 43, scope: !4866)
!4884 = !DILocalVariable(name: "gc", scope: !4866, file: !3, line: 213, type: !4096)
!4885 = !DILocation(line: 213, column: 20, scope: !4866)
!4886 = !DILocalVariable(name: "offset", scope: !4866, file: !3, line: 214, type: !7)
!4887 = !DILocation(line: 214, column: 11, scope: !4866)
!4888 = !DILocalVariable(name: "ret", scope: !4866, file: !3, line: 215, type: !224)
!4889 = !DILocation(line: 215, column: 6, scope: !4866)
!4890 = !DILocation(line: 217, column: 21, scope: !4866)
!4891 = !DILocation(line: 217, column: 7, scope: !4866)
!4892 = !DILocation(line: 217, column: 5, scope: !4866)
!4893 = !DILocation(line: 218, column: 28, scope: !4866)
!4894 = !DILocation(line: 218, column: 11, scope: !4866)
!4895 = !DILocation(line: 218, column: 9, scope: !4866)
!4896 = !DILocation(line: 224, column: 33, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 224, column: 6)
!4898 = !DILocation(line: 224, column: 39, scope: !4897)
!4899 = !DILocation(line: 224, column: 6, scope: !4897)
!4900 = !DILocation(line: 224, column: 46, scope: !4897)
!4901 = !DILocation(line: 225, column: 29, scope: !4897)
!4902 = !DILocation(line: 225, column: 35, scope: !4897)
!4903 = !DILocation(line: 225, column: 6, scope: !4897)
!4904 = !DILocation(line: 224, column: 6, scope: !4866)
!4905 = !DILocation(line: 226, column: 3, scope: !4897)
!4906 = !DILocation(line: 228, column: 7, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 228, column: 6)
!4908 = !DILocation(line: 228, column: 11, scope: !4907)
!4909 = !DILocation(line: 228, column: 6, scope: !4866)
!4910 = !DILocation(line: 229, column: 3, scope: !4907)
!4911 = !DILocation(line: 231, column: 8, scope: !4866)
!4912 = !DILocation(line: 231, column: 12, scope: !4866)
!4913 = !DILocation(line: 231, column: 26, scope: !4866)
!4914 = !DILocation(line: 231, column: 30, scope: !4866)
!4915 = !DILocation(line: 231, column: 6, scope: !4866)
!4916 = !DILocation(line: 232, column: 6, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 232, column: 6)
!4918 = !DILocation(line: 232, column: 10, scope: !4917)
!4919 = !DILocation(line: 232, column: 6, scope: !4866)
!4920 = !DILocation(line: 233, column: 10, scope: !4917)
!4921 = !DILocation(line: 233, column: 3, scope: !4917)
!4922 = !DILocation(line: 236, column: 6, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 236, column: 6)
!4924 = !DILocation(line: 236, column: 10, scope: !4923)
!4925 = !DILocation(line: 236, column: 6, scope: !4866)
!4926 = !DILocation(line: 237, column: 7, scope: !4923)
!4927 = !DILocation(line: 237, column: 3, scope: !4923)
!4928 = !DILocation(line: 239, column: 27, scope: !4866)
!4929 = !DILocation(line: 239, column: 33, scope: !4866)
!4930 = !DILocation(line: 239, column: 41, scope: !4866)
!4931 = !DILocation(line: 239, column: 40, scope: !4866)
!4932 = !DILocation(line: 238, column: 6, scope: !4933, inlinedAt: !4877)
!4933 = distinct !DILexicalBlock(scope: !4870, file: !4871, line: 238, column: 6)
!4934 = !DILocation(line: 238, column: 6, scope: !4870, inlinedAt: !4877)
!4935 = !DILocation(line: 239, column: 11, scope: !4933, inlinedAt: !4877)
!4936 = !DILocation(line: 239, column: 15, scope: !4933, inlinedAt: !4877)
!4937 = !DILocation(line: 239, column: 3, scope: !4933, inlinedAt: !4877)
!4938 = !DILocation(line: 241, column: 13, scope: !4933, inlinedAt: !4877)
!4939 = !DILocation(line: 241, column: 17, scope: !4933, inlinedAt: !4877)
!4940 = !DILocation(line: 241, column: 3, scope: !4933, inlinedAt: !4877)
!4941 = !DILocation(line: 241, column: 9, scope: !4866)
!4942 = !DILocation(line: 241, column: 2, scope: !4866)
!4943 = !DILocation(line: 242, column: 1, scope: !4866)
!4944 = distinct !DISubprogram(name: "gpio_chip_hwgpio", scope: !221, file: !221, line: 143, type: !4833, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!4945 = !DILocalVariable(name: "desc", arg: 1, scope: !4944, file: !221, line: 143, type: !4835)
!4946 = !DILocation(line: 143, column: 60, scope: !4944)
!4947 = !DILocation(line: 145, column: 9, scope: !4944)
!4948 = !DILocation(line: 145, column: 17, scope: !4944)
!4949 = !DILocation(line: 145, column: 23, scope: !4944)
!4950 = !DILocation(line: 145, column: 29, scope: !4944)
!4951 = !DILocation(line: 145, column: 14, scope: !4944)
!4952 = !DILocation(line: 145, column: 2, scope: !4944)
!4953 = distinct !DISubprogram(name: "test_bit", scope: !4954, file: !4954, line: 132, type: !4955, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!4954 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!4955 = !DISubroutineType(types: !4956)
!4956 = !{!508, !327, !4957}
!4957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4958, size: 64)
!4958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4875)
!4959 = !DILocalVariable(name: "nr", arg: 1, scope: !4960, file: !4961, line: 210, type: !327)
!4960 = distinct !DISubprogram(name: "variable_test_bit", scope: !4961, file: !4961, line: 210, type: !4955, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!4961 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!4962 = !DILocation(line: 210, column: 52, scope: !4960, inlinedAt: !4963)
!4963 = distinct !DILocation(line: 135, column: 9, scope: !4953)
!4964 = !DILocalVariable(name: "addr", arg: 2, scope: !4960, file: !4961, line: 210, type: !4957)
!4965 = !DILocation(line: 210, column: 86, scope: !4960, inlinedAt: !4963)
!4966 = !DILocalVariable(name: "oldbit", scope: !4960, file: !4961, line: 212, type: !508)
!4967 = !DILocation(line: 212, column: 7, scope: !4960, inlinedAt: !4963)
!4968 = !DILocalVariable(name: "nr", arg: 1, scope: !4969, file: !4961, line: 204, type: !327)
!4969 = distinct !DISubprogram(name: "constant_test_bit", scope: !4961, file: !4961, line: 204, type: !4955, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!4970 = !DILocation(line: 204, column: 52, scope: !4969, inlinedAt: !4971)
!4971 = distinct !DILocation(line: 135, column: 9, scope: !4953)
!4972 = !DILocalVariable(name: "addr", arg: 2, scope: !4969, file: !4961, line: 204, type: !4957)
!4973 = !DILocation(line: 204, column: 86, scope: !4969, inlinedAt: !4971)
!4974 = !DILocalVariable(name: "v", arg: 1, scope: !4975, file: !4976, line: 69, type: !4979)
!4975 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !4976, file: !4976, line: 69, type: !4977, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!4976 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!4977 = !DISubroutineType(types: !4978)
!4978 = !{null, !4979, !339}
!4979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4980, size: 64)
!4980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4981)
!4981 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!4982 = !DILocation(line: 69, column: 73, scope: !4975, inlinedAt: !4983)
!4983 = distinct !DILocation(line: 134, column: 2, scope: !4953)
!4984 = !DILocalVariable(name: "size", arg: 2, scope: !4975, file: !4976, line: 69, type: !339)
!4985 = !DILocation(line: 69, column: 83, scope: !4975, inlinedAt: !4983)
!4986 = !DILocalVariable(name: "nr", arg: 1, scope: !4953, file: !4954, line: 132, type: !327)
!4987 = !DILocation(line: 132, column: 34, scope: !4953)
!4988 = !DILocalVariable(name: "addr", arg: 2, scope: !4953, file: !4954, line: 132, type: !4957)
!4989 = !DILocation(line: 132, column: 68, scope: !4953)
!4990 = !DILocation(line: 134, column: 25, scope: !4953)
!4991 = !DILocation(line: 134, column: 32, scope: !4953)
!4992 = !DILocation(line: 134, column: 30, scope: !4953)
!4993 = !DILocation(line: 71, column: 19, scope: !4975, inlinedAt: !4983)
!4994 = !DILocation(line: 71, column: 22, scope: !4975, inlinedAt: !4983)
!4995 = !DILocation(line: 71, column: 2, scope: !4975, inlinedAt: !4983)
!4996 = !DILocation(line: 72, column: 2, scope: !4975, inlinedAt: !4983)
!4997 = !DILocation(line: 135, column: 9, scope: !4953)
!4998 = !DILocation(line: 206, column: 19, scope: !4969, inlinedAt: !4971)
!4999 = !DILocation(line: 206, column: 22, scope: !4969, inlinedAt: !4971)
!5000 = !DILocation(line: 206, column: 15, scope: !4969, inlinedAt: !4971)
!5001 = !DILocation(line: 207, column: 4, scope: !4969, inlinedAt: !4971)
!5002 = !DILocation(line: 207, column: 9, scope: !4969, inlinedAt: !4971)
!5003 = !DILocation(line: 207, column: 12, scope: !4969, inlinedAt: !4971)
!5004 = !DILocation(line: 206, column: 44, scope: !4969, inlinedAt: !4971)
!5005 = !DILocation(line: 207, column: 37, scope: !4969, inlinedAt: !4971)
!5006 = !DILocation(line: 217, column: 33, scope: !4960, inlinedAt: !4963)
!5007 = !DILocation(line: 217, column: 46, scope: !4960, inlinedAt: !4963)
!5008 = !DILocation(line: 214, column: 2, scope: !4960, inlinedAt: !4963)
!5009 = !{i32 -2147111032, i32 -2147110972}
!5010 = !DILocation(line: 219, column: 9, scope: !4960, inlinedAt: !4963)
!5011 = !DILocation(line: 135, column: 2, scope: !4953)
!5012 = distinct !DISubprogram(name: "gpiochip_line_is_valid", scope: !3, file: !3, line: 462, type: !5013, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!5013 = !DISubroutineType(types: !5014)
!5014 = !{!508, !5015, !7}
!5015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5016, size: 64)
!5016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4097)
!5017 = !DILocalVariable(name: "gc", arg: 1, scope: !5012, file: !3, line: 462, type: !5015)
!5018 = !DILocation(line: 462, column: 53, scope: !5012)
!5019 = !DILocalVariable(name: "offset", arg: 2, scope: !5012, file: !3, line: 463, type: !7)
!5020 = !DILocation(line: 463, column: 18, scope: !5012)
!5021 = !DILocation(line: 466, column: 6, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5012, file: !3, line: 466, column: 6)
!5023 = !DILocation(line: 466, column: 6, scope: !5012)
!5024 = !DILocation(line: 467, column: 3, scope: !5022)
!5025 = !DILocation(line: 468, column: 18, scope: !5012)
!5026 = !DILocation(line: 468, column: 26, scope: !5012)
!5027 = !DILocation(line: 468, column: 30, scope: !5012)
!5028 = !DILocation(line: 468, column: 9, scope: !5012)
!5029 = !DILocation(line: 468, column: 2, scope: !5012)
!5030 = !DILocation(line: 469, column: 1, scope: !5012)
!5031 = !DILocation(line: 327, column: 67, scope: !4647, inlinedAt: !5032)
!5032 = distinct !DILocation(line: 763, column: 2, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5034, file: !3, line: 763, column: 2)
!5034 = distinct !DILexicalBlock(scope: !5035, file: !3, line: 763, column: 2)
!5035 = distinct !DILexicalBlock(scope: !5036, file: !3, line: 763, column: 2)
!5036 = distinct !DILexicalBlock(scope: !5037, file: !3, line: 763, column: 2)
!5037 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 763, column: 2)
!5038 = !DILocation(line: 235, column: 45, scope: !4870, inlinedAt: !5039)
!5039 = distinct !DILocation(line: 710, column: 4, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5041, file: !3, line: 709, column: 10)
!5041 = distinct !DILexicalBlock(scope: !5042, file: !3, line: 706, column: 7)
!5042 = distinct !DILexicalBlock(scope: !5043, file: !3, line: 703, column: 34)
!5043 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 703, column: 2)
!5044 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 703, column: 2)
!5045 = !DILocation(line: 235, column: 73, scope: !4870, inlinedAt: !5039)
!5046 = !DILocation(line: 236, column: 17, scope: !4870, inlinedAt: !5039)
!5047 = !DILocation(line: 235, column: 45, scope: !4870, inlinedAt: !5048)
!5048 = distinct !DILocation(line: 707, column: 4, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5041, file: !3, line: 706, column: 59)
!5050 = !DILocation(line: 235, column: 73, scope: !4870, inlinedAt: !5048)
!5051 = !DILocation(line: 236, column: 17, scope: !4870, inlinedAt: !5048)
!5052 = !DILocation(line: 407, column: 64, scope: !4629, inlinedAt: !5053)
!5053 = distinct !DILocation(line: 676, column: 2, scope: !4590)
!5054 = !DILocation(line: 407, column: 84, scope: !4629, inlinedAt: !5053)
!5055 = !DILocation(line: 407, column: 64, scope: !4629, inlinedAt: !5056)
!5056 = distinct !DILocation(line: 669, column: 3, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5058, file: !3, line: 668, column: 11)
!5058 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 668, column: 6)
!5059 = !DILocation(line: 407, column: 84, scope: !4629, inlinedAt: !5056)
!5060 = !DILocation(line: 407, column: 64, scope: !4629, inlinedAt: !5061)
!5061 = distinct !DILocation(line: 654, column: 4, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5063, file: !3, line: 652, column: 17)
!5063 = distinct !DILexicalBlock(scope: !5064, file: !3, line: 652, column: 7)
!5064 = distinct !DILexicalBlock(scope: !5065, file: !3, line: 650, column: 16)
!5065 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 650, column: 6)
!5066 = !DILocation(line: 407, column: 84, scope: !4629, inlinedAt: !5061)
!5067 = !DILocation(line: 407, column: 64, scope: !4629, inlinedAt: !5068)
!5068 = distinct !DILocation(line: 765, column: 2, scope: !4590)
!5069 = !DILocation(line: 407, column: 84, scope: !4629, inlinedAt: !5068)
!5070 = !DILocation(line: 327, column: 67, scope: !4647, inlinedAt: !5071)
!5071 = distinct !DILocation(line: 641, column: 2, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5073, file: !3, line: 641, column: 2)
!5073 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 641, column: 2)
!5074 = distinct !DILexicalBlock(scope: !5075, file: !3, line: 641, column: 2)
!5075 = distinct !DILexicalBlock(scope: !5076, file: !3, line: 641, column: 2)
!5076 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 641, column: 2)
!5077 = !DILocalVariable(name: "gc", arg: 1, scope: !4590, file: !3, line: 567, type: !4096)
!5078 = !DILocation(line: 567, column: 50, scope: !4590)
!5079 = !DILocalVariable(name: "data", arg: 2, scope: !4590, file: !3, line: 567, type: !218)
!5080 = !DILocation(line: 567, column: 60, scope: !4590)
!5081 = !DILocalVariable(name: "lock_key", arg: 3, scope: !4590, file: !3, line: 568, type: !4197)
!5082 = !DILocation(line: 568, column: 34, scope: !4590)
!5083 = !DILocalVariable(name: "request_key", arg: 4, scope: !4590, file: !3, line: 569, type: !4197)
!5084 = !DILocation(line: 569, column: 34, scope: !4590)
!5085 = !DILocalVariable(name: "flags", scope: !4590, file: !3, line: 571, type: !342)
!5086 = !DILocation(line: 571, column: 16, scope: !4590)
!5087 = !DILocalVariable(name: "ret", scope: !4590, file: !3, line: 572, type: !224)
!5088 = !DILocation(line: 572, column: 7, scope: !4590)
!5089 = !DILocalVariable(name: "i", scope: !4590, file: !3, line: 573, type: !7)
!5090 = !DILocation(line: 573, column: 11, scope: !4590)
!5091 = !DILocalVariable(name: "base", scope: !4590, file: !3, line: 574, type: !224)
!5092 = !DILocation(line: 574, column: 7, scope: !4590)
!5093 = !DILocation(line: 574, column: 14, scope: !4590)
!5094 = !DILocation(line: 574, column: 18, scope: !4590)
!5095 = !DILocalVariable(name: "gdev", scope: !4590, file: !3, line: 575, type: !219)
!5096 = !DILocation(line: 575, column: 22, scope: !4590)
!5097 = !DILocation(line: 581, column: 9, scope: !4590)
!5098 = !DILocation(line: 581, column: 7, scope: !4590)
!5099 = !DILocation(line: 582, column: 7, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 582, column: 6)
!5101 = !DILocation(line: 582, column: 6, scope: !4590)
!5102 = !DILocation(line: 583, column: 3, scope: !5100)
!5103 = !DILocation(line: 584, column: 2, scope: !4590)
!5104 = !DILocation(line: 584, column: 8, scope: !4590)
!5105 = !DILocation(line: 584, column: 12, scope: !4590)
!5106 = !DILocation(line: 584, column: 16, scope: !4590)
!5107 = !DILocation(line: 585, column: 15, scope: !4590)
!5108 = !DILocation(line: 585, column: 2, scope: !4590)
!5109 = !DILocation(line: 585, column: 8, scope: !4590)
!5110 = !DILocation(line: 585, column: 13, scope: !4590)
!5111 = !DILocation(line: 586, column: 16, scope: !4590)
!5112 = !DILocation(line: 586, column: 2, scope: !4590)
!5113 = !DILocation(line: 586, column: 6, scope: !4590)
!5114 = !DILocation(line: 586, column: 14, scope: !4590)
!5115 = !DILocation(line: 587, column: 6, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 587, column: 6)
!5117 = !DILocation(line: 587, column: 10, scope: !5116)
!5118 = !DILocation(line: 587, column: 6, scope: !4590)
!5119 = !DILocation(line: 588, column: 22, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5116, file: !3, line: 587, column: 18)
!5121 = !DILocation(line: 588, column: 26, scope: !5120)
!5122 = !DILocation(line: 588, column: 3, scope: !5120)
!5123 = !DILocation(line: 588, column: 9, scope: !5120)
!5124 = !DILocation(line: 588, column: 13, scope: !5120)
!5125 = !DILocation(line: 588, column: 20, scope: !5120)
!5126 = !DILocation(line: 589, column: 23, scope: !5120)
!5127 = !DILocation(line: 589, column: 27, scope: !5120)
!5128 = !DILocation(line: 589, column: 35, scope: !5120)
!5129 = !DILocation(line: 589, column: 3, scope: !5120)
!5130 = !DILocation(line: 589, column: 9, scope: !5120)
!5131 = !DILocation(line: 589, column: 13, scope: !5120)
!5132 = !DILocation(line: 589, column: 21, scope: !5120)
!5133 = !DILocation(line: 590, column: 2, scope: !5120)
!5134 = !DILocation(line: 594, column: 6, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 594, column: 6)
!5136 = !DILocation(line: 594, column: 10, scope: !5135)
!5137 = !DILocation(line: 594, column: 6, scope: !4590)
!5138 = !DILocation(line: 595, column: 23, scope: !5135)
!5139 = !DILocation(line: 595, column: 27, scope: !5135)
!5140 = !DILocation(line: 595, column: 3, scope: !5135)
!5141 = !DILocation(line: 595, column: 9, scope: !5135)
!5142 = !DILocation(line: 595, column: 13, scope: !5135)
!5143 = !DILocation(line: 595, column: 21, scope: !5135)
!5144 = !DILocation(line: 597, column: 17, scope: !5135)
!5145 = !DILocation(line: 597, column: 23, scope: !5135)
!5146 = !DILocation(line: 597, column: 27, scope: !5135)
!5147 = !DILocation(line: 597, column: 3, scope: !5135)
!5148 = !DILocation(line: 597, column: 7, scope: !5135)
!5149 = !DILocation(line: 597, column: 15, scope: !5135)
!5150 = !DILocation(line: 600, column: 13, scope: !4590)
!5151 = !DILocation(line: 600, column: 2, scope: !4590)
!5152 = !DILocation(line: 600, column: 8, scope: !4590)
!5153 = !DILocation(line: 600, column: 11, scope: !4590)
!5154 = !DILocation(line: 601, column: 6, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 601, column: 6)
!5156 = !DILocation(line: 601, column: 12, scope: !5155)
!5157 = !DILocation(line: 601, column: 15, scope: !5155)
!5158 = !DILocation(line: 601, column: 6, scope: !4590)
!5159 = !DILocation(line: 602, column: 9, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5155, file: !3, line: 601, column: 20)
!5161 = !DILocation(line: 602, column: 15, scope: !5160)
!5162 = !DILocation(line: 602, column: 7, scope: !5160)
!5163 = !DILocation(line: 603, column: 3, scope: !5160)
!5164 = !DILocation(line: 605, column: 16, scope: !4590)
!5165 = !DILocation(line: 605, column: 22, scope: !4590)
!5166 = !DILocation(line: 605, column: 47, scope: !4590)
!5167 = !DILocation(line: 605, column: 53, scope: !4590)
!5168 = !DILocation(line: 605, column: 2, scope: !4590)
!5169 = !DILocation(line: 606, column: 21, scope: !4590)
!5170 = !DILocation(line: 606, column: 27, scope: !4590)
!5171 = !DILocation(line: 606, column: 2, scope: !4590)
!5172 = !DILocation(line: 607, column: 19, scope: !4590)
!5173 = !DILocation(line: 607, column: 25, scope: !4590)
!5174 = !DILocation(line: 607, column: 30, scope: !4590)
!5175 = !DILocation(line: 607, column: 2, scope: !4590)
!5176 = !DILocation(line: 608, column: 6, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 608, column: 6)
!5178 = !DILocation(line: 608, column: 10, scope: !5177)
!5179 = !DILocation(line: 608, column: 17, scope: !5177)
!5180 = !DILocation(line: 608, column: 20, scope: !5177)
!5181 = !DILocation(line: 608, column: 24, scope: !5177)
!5182 = !DILocation(line: 608, column: 32, scope: !5177)
!5183 = !DILocation(line: 608, column: 6, scope: !4590)
!5184 = !DILocation(line: 609, column: 17, scope: !5177)
!5185 = !DILocation(line: 609, column: 21, scope: !5177)
!5186 = !DILocation(line: 609, column: 29, scope: !5177)
!5187 = !DILocation(line: 609, column: 37, scope: !5177)
!5188 = !DILocation(line: 609, column: 3, scope: !5177)
!5189 = !DILocation(line: 609, column: 9, scope: !5177)
!5190 = !DILocation(line: 609, column: 15, scope: !5177)
!5191 = !DILocation(line: 610, column: 11, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5177, file: !3, line: 610, column: 11)
!5193 = !DILocation(line: 610, column: 15, scope: !5192)
!5194 = !DILocation(line: 610, column: 11, scope: !5177)
!5195 = !DILocation(line: 612, column: 17, scope: !5192)
!5196 = !DILocation(line: 612, column: 21, scope: !5192)
!5197 = !DILocation(line: 612, column: 3, scope: !5192)
!5198 = !DILocation(line: 612, column: 9, scope: !5192)
!5199 = !DILocation(line: 612, column: 15, scope: !5192)
!5200 = !DILocation(line: 614, column: 3, scope: !5192)
!5201 = !DILocation(line: 614, column: 9, scope: !5192)
!5202 = !DILocation(line: 614, column: 15, scope: !5192)
!5203 = !DILocation(line: 616, column: 24, scope: !4590)
!5204 = !DILocation(line: 616, column: 28, scope: !4590)
!5205 = !DILocation(line: 616, column: 16, scope: !4590)
!5206 = !DILocation(line: 616, column: 2, scope: !4590)
!5207 = !DILocation(line: 616, column: 8, scope: !4590)
!5208 = !DILocation(line: 616, column: 14, scope: !4590)
!5209 = !DILocation(line: 617, column: 7, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 617, column: 6)
!5211 = !DILocation(line: 617, column: 13, scope: !5210)
!5212 = !DILocation(line: 617, column: 6, scope: !4590)
!5213 = !DILocation(line: 618, column: 7, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 617, column: 20)
!5215 = !DILocation(line: 619, column: 3, scope: !5214)
!5216 = !DILocation(line: 622, column: 6, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 622, column: 6)
!5218 = !DILocation(line: 622, column: 10, scope: !5217)
!5219 = !DILocation(line: 622, column: 16, scope: !5217)
!5220 = !DILocation(line: 622, column: 6, scope: !4590)
!5221 = !DILocation(line: 623, column: 3, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5217, file: !3, line: 622, column: 22)
!5223 = !DILocation(line: 624, column: 7, scope: !5222)
!5224 = !DILocation(line: 625, column: 3, scope: !5222)
!5225 = !DILocation(line: 628, column: 6, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 628, column: 6)
!5227 = !DILocation(line: 628, column: 10, scope: !5226)
!5228 = !DILocation(line: 628, column: 16, scope: !5226)
!5229 = !DILocation(line: 628, column: 6, scope: !4590)
!5230 = !DILocation(line: 629, column: 3, scope: !5226)
!5231 = !DILocation(line: 632, column: 30, scope: !4590)
!5232 = !DILocation(line: 632, column: 34, scope: !4590)
!5233 = !DILocation(line: 632, column: 16, scope: !4590)
!5234 = !DILocation(line: 632, column: 2, scope: !4590)
!5235 = !DILocation(line: 632, column: 8, scope: !4590)
!5236 = !DILocation(line: 632, column: 14, scope: !4590)
!5237 = !DILocation(line: 633, column: 7, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 633, column: 6)
!5239 = !DILocation(line: 633, column: 13, scope: !5238)
!5240 = !DILocation(line: 633, column: 6, scope: !4590)
!5241 = !DILocation(line: 634, column: 7, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 633, column: 20)
!5243 = !DILocation(line: 635, column: 3, scope: !5242)
!5244 = !DILocation(line: 638, column: 16, scope: !4590)
!5245 = !DILocation(line: 638, column: 20, scope: !4590)
!5246 = !DILocation(line: 638, column: 2, scope: !4590)
!5247 = !DILocation(line: 638, column: 8, scope: !4590)
!5248 = !DILocation(line: 638, column: 14, scope: !4590)
!5249 = !DILocation(line: 639, column: 15, scope: !4590)
!5250 = !DILocation(line: 639, column: 2, scope: !4590)
!5251 = !DILocation(line: 639, column: 8, scope: !4590)
!5252 = !DILocation(line: 639, column: 13, scope: !4590)
!5253 = !DILocation(line: 641, column: 2, scope: !4590)
!5254 = !DILocation(line: 641, column: 2, scope: !5076)
!5255 = !DILocalVariable(name: "__dummy", scope: !5256, file: !3, line: 641, type: !342)
!5256 = distinct !DILexicalBlock(scope: !5075, file: !3, line: 641, column: 2)
!5257 = !DILocation(line: 641, column: 2, scope: !5256)
!5258 = !DILocalVariable(name: "__dummy2", scope: !5256, file: !3, line: 641, type: !342)
!5259 = !DILocation(line: 641, column: 2, scope: !5075)
!5260 = !DILocation(line: 641, column: 2, scope: !5074)
!5261 = !DILocation(line: 641, column: 2, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 641, column: 2)
!5263 = !DILocalVariable(name: "__dummy", scope: !5264, file: !3, line: 641, type: !342)
!5264 = distinct !DILexicalBlock(scope: !5265, file: !3, line: 641, column: 2)
!5265 = distinct !DILexicalBlock(scope: !5262, file: !3, line: 641, column: 2)
!5266 = !DILocation(line: 641, column: 2, scope: !5264)
!5267 = !DILocalVariable(name: "__dummy2", scope: !5264, file: !3, line: 641, type: !342)
!5268 = !DILocation(line: 641, column: 2, scope: !5265)
!5269 = !DILocation(line: 641, column: 2, scope: !5073)
!5270 = !{i32 -2141439422}
!5271 = !DILocation(line: 329, column: 10, scope: !4647, inlinedAt: !5071)
!5272 = !DILocation(line: 329, column: 16, scope: !4647, inlinedAt: !5071)
!5273 = !DILocation(line: 641, column: 2, scope: !5072)
!5274 = !DILocation(line: 650, column: 6, scope: !5065)
!5275 = !DILocation(line: 650, column: 11, scope: !5065)
!5276 = !DILocation(line: 650, column: 6, scope: !4590)
!5277 = !DILocation(line: 651, column: 29, scope: !5064)
!5278 = !DILocation(line: 651, column: 33, scope: !5064)
!5279 = !DILocation(line: 651, column: 10, scope: !5064)
!5280 = !DILocation(line: 651, column: 8, scope: !5064)
!5281 = !DILocation(line: 652, column: 7, scope: !5063)
!5282 = !DILocation(line: 652, column: 12, scope: !5063)
!5283 = !DILocation(line: 652, column: 7, scope: !5064)
!5284 = !DILocation(line: 653, column: 10, scope: !5062)
!5285 = !DILocation(line: 653, column: 8, scope: !5062)
!5286 = !DILocation(line: 654, column: 39, scope: !5062)
!5287 = !DILocation(line: 409, column: 2, scope: !4707, inlinedAt: !5061)
!5288 = !DILocation(line: 409, column: 2, scope: !4712, inlinedAt: !5061)
!5289 = !DILocation(line: 409, column: 2, scope: !4713, inlinedAt: !5061)
!5290 = !DILocation(line: 409, column: 2, scope: !4720, inlinedAt: !5061)
!5291 = !DILocation(line: 409, column: 2, scope: !4723, inlinedAt: !5061)
!5292 = !DILocation(line: 655, column: 4, scope: !5062)
!5293 = !DILocation(line: 663, column: 14, scope: !5064)
!5294 = !DILocation(line: 663, column: 3, scope: !5064)
!5295 = !DILocation(line: 663, column: 7, scope: !5064)
!5296 = !DILocation(line: 663, column: 12, scope: !5064)
!5297 = !DILocation(line: 664, column: 2, scope: !5064)
!5298 = !DILocation(line: 665, column: 15, scope: !4590)
!5299 = !DILocation(line: 665, column: 2, scope: !4590)
!5300 = !DILocation(line: 665, column: 8, scope: !4590)
!5301 = !DILocation(line: 665, column: 13, scope: !4590)
!5302 = !DILocation(line: 667, column: 28, scope: !4590)
!5303 = !DILocation(line: 667, column: 8, scope: !4590)
!5304 = !DILocation(line: 667, column: 6, scope: !4590)
!5305 = !DILocation(line: 668, column: 6, scope: !5058)
!5306 = !DILocation(line: 668, column: 6, scope: !4590)
!5307 = !DILocation(line: 669, column: 38, scope: !5057)
!5308 = !DILocation(line: 409, column: 2, scope: !4707, inlinedAt: !5056)
!5309 = !DILocation(line: 409, column: 2, scope: !4712, inlinedAt: !5056)
!5310 = !DILocation(line: 409, column: 2, scope: !4713, inlinedAt: !5056)
!5311 = !DILocation(line: 409, column: 2, scope: !4720, inlinedAt: !5056)
!5312 = !DILocation(line: 409, column: 2, scope: !4723, inlinedAt: !5056)
!5313 = !DILocation(line: 670, column: 3, scope: !5057)
!5314 = !DILocation(line: 673, column: 9, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 673, column: 2)
!5316 = !DILocation(line: 673, column: 7, scope: !5315)
!5317 = !DILocation(line: 673, column: 14, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5315, file: !3, line: 673, column: 2)
!5319 = !DILocation(line: 673, column: 18, scope: !5318)
!5320 = !DILocation(line: 673, column: 22, scope: !5318)
!5321 = !DILocation(line: 673, column: 16, scope: !5318)
!5322 = !DILocation(line: 673, column: 2, scope: !5315)
!5323 = !DILocation(line: 674, column: 25, scope: !5318)
!5324 = !DILocation(line: 674, column: 3, scope: !5318)
!5325 = !DILocation(line: 674, column: 9, scope: !5318)
!5326 = !DILocation(line: 674, column: 15, scope: !5318)
!5327 = !DILocation(line: 674, column: 18, scope: !5318)
!5328 = !DILocation(line: 674, column: 23, scope: !5318)
!5329 = !DILocation(line: 673, column: 30, scope: !5318)
!5330 = !DILocation(line: 673, column: 2, scope: !5318)
!5331 = distinct !{!5331, !5322, !5332}
!5332 = !DILocation(line: 674, column: 25, scope: !5315)
!5333 = !DILocation(line: 676, column: 37, scope: !4590)
!5334 = !DILocation(line: 409, column: 2, scope: !4707, inlinedAt: !5053)
!5335 = !DILocation(line: 409, column: 2, scope: !4712, inlinedAt: !5053)
!5336 = !DILocation(line: 409, column: 2, scope: !4713, inlinedAt: !5053)
!5337 = !DILocation(line: 409, column: 2, scope: !4720, inlinedAt: !5053)
!5338 = !DILocation(line: 409, column: 2, scope: !4723, inlinedAt: !5053)
!5339 = !DILocation(line: 678, column: 2, scope: !4590)
!5340 = !DILocation(line: 678, column: 2, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 678, column: 2)
!5342 = !DILocation(line: 678, column: 2, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5341, file: !3, line: 678, column: 2)
!5344 = !DILocation(line: 684, column: 6, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 684, column: 6)
!5346 = !DILocation(line: 684, column: 10, scope: !5345)
!5347 = !DILocation(line: 684, column: 6, scope: !4590)
!5348 = !DILocation(line: 685, column: 33, scope: !5345)
!5349 = !DILocation(line: 685, column: 9, scope: !5345)
!5350 = !DILocation(line: 685, column: 7, scope: !5345)
!5351 = !DILocation(line: 685, column: 3, scope: !5345)
!5352 = !DILocation(line: 687, column: 36, scope: !5345)
!5353 = !DILocation(line: 687, column: 9, scope: !5345)
!5354 = !DILocation(line: 687, column: 7, scope: !5345)
!5355 = !DILocation(line: 688, column: 6, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 688, column: 6)
!5357 = !DILocation(line: 688, column: 6, scope: !4590)
!5358 = !DILocation(line: 689, column: 3, scope: !5356)
!5359 = !DILocation(line: 691, column: 34, scope: !4590)
!5360 = !DILocation(line: 691, column: 8, scope: !4590)
!5361 = !DILocation(line: 691, column: 6, scope: !4590)
!5362 = !DILocation(line: 692, column: 6, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 692, column: 6)
!5364 = !DILocation(line: 692, column: 6, scope: !4590)
!5365 = !DILocation(line: 693, column: 3, scope: !5363)
!5366 = !DILocation(line: 695, column: 24, scope: !4590)
!5367 = !DILocation(line: 695, column: 8, scope: !4590)
!5368 = !DILocation(line: 695, column: 6, scope: !4590)
!5369 = !DILocation(line: 696, column: 6, scope: !5370)
!5370 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 696, column: 6)
!5371 = !DILocation(line: 696, column: 6, scope: !4590)
!5372 = !DILocation(line: 697, column: 3, scope: !5370)
!5373 = !DILocation(line: 699, column: 33, scope: !4590)
!5374 = !DILocation(line: 699, column: 8, scope: !4590)
!5375 = !DILocation(line: 699, column: 6, scope: !4590)
!5376 = !DILocation(line: 700, column: 6, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 700, column: 6)
!5378 = !DILocation(line: 700, column: 6, scope: !4590)
!5379 = !DILocation(line: 701, column: 3, scope: !5377)
!5380 = !DILocation(line: 703, column: 9, scope: !5044)
!5381 = !DILocation(line: 703, column: 7, scope: !5044)
!5382 = !DILocation(line: 703, column: 14, scope: !5043)
!5383 = !DILocation(line: 703, column: 18, scope: !5043)
!5384 = !DILocation(line: 703, column: 22, scope: !5043)
!5385 = !DILocation(line: 703, column: 16, scope: !5043)
!5386 = !DILocation(line: 703, column: 2, scope: !5044)
!5387 = !DILocalVariable(name: "desc", scope: !5042, file: !3, line: 704, type: !4232)
!5388 = !DILocation(line: 704, column: 21, scope: !5042)
!5389 = !DILocation(line: 704, column: 29, scope: !5042)
!5390 = !DILocation(line: 704, column: 35, scope: !5042)
!5391 = !DILocation(line: 704, column: 41, scope: !5042)
!5392 = !DILocation(line: 706, column: 7, scope: !5041)
!5393 = !DILocation(line: 706, column: 11, scope: !5041)
!5394 = !DILocation(line: 706, column: 25, scope: !5041)
!5395 = !DILocation(line: 706, column: 51, scope: !5041)
!5396 = !DILocation(line: 706, column: 55, scope: !5041)
!5397 = !DILocation(line: 706, column: 28, scope: !5041)
!5398 = !DILocation(line: 706, column: 7, scope: !5042)
!5399 = !DILocation(line: 708, column: 9, scope: !5049)
!5400 = !DILocation(line: 708, column: 15, scope: !5049)
!5401 = !DILocation(line: 708, column: 23, scope: !5049)
!5402 = !DILocation(line: 708, column: 27, scope: !5049)
!5403 = !DILocation(line: 708, column: 41, scope: !5049)
!5404 = !DILocation(line: 708, column: 45, scope: !5049)
!5405 = !DILocation(line: 708, column: 22, scope: !5049)
!5406 = !DILocation(line: 238, column: 6, scope: !4933, inlinedAt: !5048)
!5407 = !DILocation(line: 238, column: 6, scope: !4870, inlinedAt: !5048)
!5408 = !DILocation(line: 239, column: 11, scope: !4933, inlinedAt: !5048)
!5409 = !DILocation(line: 239, column: 15, scope: !4933, inlinedAt: !5048)
!5410 = !DILocation(line: 239, column: 3, scope: !4933, inlinedAt: !5048)
!5411 = !DILocation(line: 241, column: 13, scope: !4933, inlinedAt: !5048)
!5412 = !DILocation(line: 241, column: 17, scope: !4933, inlinedAt: !5048)
!5413 = !DILocation(line: 241, column: 3, scope: !4933, inlinedAt: !5048)
!5414 = !DILocation(line: 709, column: 3, scope: !5049)
!5415 = !DILocation(line: 711, column: 9, scope: !5040)
!5416 = !DILocation(line: 711, column: 15, scope: !5040)
!5417 = !DILocation(line: 711, column: 23, scope: !5040)
!5418 = !DILocation(line: 711, column: 27, scope: !5040)
!5419 = !DILocation(line: 711, column: 22, scope: !5040)
!5420 = !DILocation(line: 238, column: 6, scope: !4933, inlinedAt: !5039)
!5421 = !DILocation(line: 238, column: 6, scope: !4870, inlinedAt: !5039)
!5422 = !DILocation(line: 239, column: 11, scope: !4933, inlinedAt: !5039)
!5423 = !DILocation(line: 239, column: 15, scope: !4933, inlinedAt: !5039)
!5424 = !DILocation(line: 239, column: 3, scope: !4933, inlinedAt: !5039)
!5425 = !DILocation(line: 241, column: 13, scope: !4933, inlinedAt: !5039)
!5426 = !DILocation(line: 241, column: 17, scope: !4933, inlinedAt: !5039)
!5427 = !DILocation(line: 241, column: 3, scope: !4933, inlinedAt: !5039)
!5428 = !DILocation(line: 713, column: 2, scope: !5042)
!5429 = !DILocation(line: 703, column: 30, scope: !5043)
!5430 = !DILocation(line: 703, column: 2, scope: !5043)
!5431 = distinct !{!5431, !5386, !5432}
!5432 = !DILocation(line: 713, column: 2, scope: !5044)
!5433 = !DILocation(line: 715, column: 32, scope: !4590)
!5434 = !DILocation(line: 715, column: 8, scope: !4590)
!5435 = !DILocation(line: 715, column: 6, scope: !4590)
!5436 = !DILocation(line: 716, column: 6, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 716, column: 6)
!5438 = !DILocation(line: 716, column: 6, scope: !4590)
!5439 = !DILocation(line: 717, column: 3, scope: !5437)
!5440 = !DILocation(line: 719, column: 20, scope: !4590)
!5441 = !DILocation(line: 719, column: 2, scope: !4590)
!5442 = !DILocation(line: 721, column: 23, scope: !4590)
!5443 = !DILocation(line: 721, column: 2, scope: !4590)
!5444 = !DILocation(line: 723, column: 41, scope: !4590)
!5445 = !DILocation(line: 723, column: 8, scope: !4590)
!5446 = !DILocation(line: 723, column: 6, scope: !4590)
!5447 = !DILocation(line: 724, column: 6, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 724, column: 6)
!5449 = !DILocation(line: 724, column: 6, scope: !4590)
!5450 = !DILocation(line: 725, column: 3, scope: !5448)
!5451 = !DILocation(line: 727, column: 33, scope: !4590)
!5452 = !DILocation(line: 727, column: 8, scope: !4590)
!5453 = !DILocation(line: 727, column: 6, scope: !4590)
!5454 = !DILocation(line: 728, column: 6, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 728, column: 6)
!5456 = !DILocation(line: 728, column: 6, scope: !4590)
!5457 = !DILocation(line: 729, column: 3, scope: !5455)
!5458 = !DILocation(line: 731, column: 29, scope: !4590)
!5459 = !DILocation(line: 731, column: 33, scope: !4590)
!5460 = !DILocation(line: 731, column: 43, scope: !4590)
!5461 = !DILocation(line: 731, column: 8, scope: !4590)
!5462 = !DILocation(line: 731, column: 6, scope: !4590)
!5463 = !DILocation(line: 732, column: 6, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 732, column: 6)
!5465 = !DILocation(line: 732, column: 6, scope: !4590)
!5466 = !DILocation(line: 733, column: 3, scope: !5464)
!5467 = !DILocation(line: 743, column: 6, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 743, column: 6)
!5469 = !DILocation(line: 743, column: 6, scope: !4590)
!5470 = !DILocation(line: 744, column: 28, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5468, file: !3, line: 743, column: 27)
!5472 = !DILocation(line: 744, column: 9, scope: !5471)
!5473 = !DILocation(line: 744, column: 7, scope: !5471)
!5474 = !DILocation(line: 745, column: 7, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5471, file: !3, line: 745, column: 7)
!5476 = !DILocation(line: 745, column: 7, scope: !5471)
!5477 = !DILocation(line: 746, column: 4, scope: !5475)
!5478 = !DILocation(line: 747, column: 2, scope: !5471)
!5479 = !DILocation(line: 748, column: 2, scope: !4590)
!5480 = !DILabel(scope: !4590, name: "err_remove_irqchip", file: !3, line: 750)
!5481 = !DILocation(line: 750, column: 1, scope: !4590)
!5482 = !DILocation(line: 751, column: 26, scope: !4590)
!5483 = !DILocation(line: 751, column: 2, scope: !4590)
!5484 = !DILabel(scope: !4590, name: "err_remove_irqchip_mask", file: !3, line: 752)
!5485 = !DILocation(line: 752, column: 1, scope: !4590)
!5486 = !DILocation(line: 753, column: 35, scope: !4590)
!5487 = !DILocation(line: 753, column: 2, scope: !4590)
!5488 = !DILabel(scope: !4590, name: "err_remove_acpi_chip", file: !3, line: 754)
!5489 = !DILocation(line: 754, column: 1, scope: !4590)
!5490 = !DILocation(line: 755, column: 23, scope: !4590)
!5491 = !DILocation(line: 755, column: 2, scope: !4590)
!5492 = !DILabel(scope: !4590, name: "err_remove_of_chip", file: !3, line: 756)
!5493 = !DILocation(line: 756, column: 1, scope: !4590)
!5494 = !DILocation(line: 757, column: 21, scope: !4590)
!5495 = !DILocation(line: 757, column: 2, scope: !4590)
!5496 = !DILocation(line: 758, column: 21, scope: !4590)
!5497 = !DILocation(line: 758, column: 2, scope: !4590)
!5498 = !DILabel(scope: !4590, name: "err_free_gpiochip_mask", file: !3, line: 759)
!5499 = !DILocation(line: 759, column: 1, scope: !4590)
!5500 = !DILocation(line: 760, column: 29, scope: !4590)
!5501 = !DILocation(line: 760, column: 2, scope: !4590)
!5502 = !DILocation(line: 761, column: 27, scope: !4590)
!5503 = !DILocation(line: 761, column: 2, scope: !4590)
!5504 = !DILabel(scope: !4590, name: "err_remove_from_list", file: !3, line: 762)
!5505 = !DILocation(line: 762, column: 1, scope: !4590)
!5506 = !DILocation(line: 763, column: 2, scope: !4590)
!5507 = !DILocation(line: 763, column: 2, scope: !5037)
!5508 = !DILocalVariable(name: "__dummy", scope: !5509, file: !3, line: 763, type: !342)
!5509 = distinct !DILexicalBlock(scope: !5036, file: !3, line: 763, column: 2)
!5510 = !DILocation(line: 763, column: 2, scope: !5509)
!5511 = !DILocalVariable(name: "__dummy2", scope: !5509, file: !3, line: 763, type: !342)
!5512 = !DILocation(line: 763, column: 2, scope: !5036)
!5513 = !DILocation(line: 763, column: 2, scope: !5035)
!5514 = !DILocation(line: 763, column: 2, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5035, file: !3, line: 763, column: 2)
!5516 = !DILocalVariable(name: "__dummy", scope: !5517, file: !3, line: 763, type: !342)
!5517 = distinct !DILexicalBlock(scope: !5518, file: !3, line: 763, column: 2)
!5518 = distinct !DILexicalBlock(scope: !5515, file: !3, line: 763, column: 2)
!5519 = !DILocation(line: 763, column: 2, scope: !5517)
!5520 = !DILocalVariable(name: "__dummy2", scope: !5517, file: !3, line: 763, type: !342)
!5521 = !DILocation(line: 763, column: 2, scope: !5518)
!5522 = !DILocation(line: 763, column: 2, scope: !5034)
!5523 = !{i32 -2141438109}
!5524 = !DILocation(line: 329, column: 10, scope: !4647, inlinedAt: !5032)
!5525 = !DILocation(line: 329, column: 16, scope: !4647, inlinedAt: !5032)
!5526 = !DILocation(line: 763, column: 2, scope: !5033)
!5527 = !DILocation(line: 764, column: 12, scope: !4590)
!5528 = !DILocation(line: 764, column: 18, scope: !4590)
!5529 = !DILocation(line: 764, column: 2, scope: !4590)
!5530 = !DILocation(line: 765, column: 37, scope: !4590)
!5531 = !DILocation(line: 409, column: 2, scope: !4707, inlinedAt: !5068)
!5532 = !DILocation(line: 409, column: 2, scope: !4712, inlinedAt: !5068)
!5533 = !DILocation(line: 409, column: 2, scope: !4713, inlinedAt: !5068)
!5534 = !DILocation(line: 409, column: 2, scope: !4720, inlinedAt: !5068)
!5535 = !DILocation(line: 409, column: 2, scope: !4723, inlinedAt: !5068)
!5536 = !DILocation(line: 765, column: 2, scope: !4590)
!5537 = !DILabel(scope: !4590, name: "err_free_label", file: !3, line: 766)
!5538 = !DILocation(line: 766, column: 1, scope: !4590)
!5539 = !DILocation(line: 767, column: 14, scope: !4590)
!5540 = !DILocation(line: 767, column: 20, scope: !4590)
!5541 = !DILocation(line: 767, column: 2, scope: !4590)
!5542 = !DILabel(scope: !4590, name: "err_free_descs", file: !3, line: 768)
!5543 = !DILocation(line: 768, column: 1, scope: !4590)
!5544 = !DILocation(line: 769, column: 8, scope: !4590)
!5545 = !DILocation(line: 769, column: 14, scope: !4590)
!5546 = !DILocation(line: 769, column: 2, scope: !4590)
!5547 = !DILabel(scope: !4590, name: "err_free_ida", file: !3, line: 770)
!5548 = !DILocation(line: 770, column: 1, scope: !4590)
!5549 = !DILocation(line: 771, column: 22, scope: !4590)
!5550 = !DILocation(line: 771, column: 28, scope: !4590)
!5551 = !DILocation(line: 771, column: 2, scope: !4590)
!5552 = !DILabel(scope: !4590, name: "err_free_gdev", file: !3, line: 772)
!5553 = !DILocation(line: 772, column: 1, scope: !4590)
!5554 = !DILocation(line: 774, column: 2, scope: !4590)
!5555 = !DILocation(line: 777, column: 8, scope: !4590)
!5556 = !DILocation(line: 777, column: 2, scope: !4590)
!5557 = !DILocation(line: 778, column: 9, scope: !4590)
!5558 = !DILocation(line: 778, column: 2, scope: !4590)
!5559 = !DILocation(line: 779, column: 1, scope: !4590)
!5560 = distinct !DISubprogram(name: "kzalloc", scope: !201, file: !201, line: 662, type: !5561, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!5561 = !DISubroutineType(types: !5562)
!5562 = !{!218, !339, !814}
!5563 = !DILocalVariable(name: "s", arg: 1, scope: !5564, file: !201, line: 445, type: !1039)
!5564 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !201, file: !201, line: 445, type: !5565, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!5565 = !DISubroutineType(types: !5566)
!5566 = !{!218, !1039, !814, !339}
!5567 = !DILocation(line: 445, column: 72, scope: !5564, inlinedAt: !5568)
!5568 = distinct !DILocation(line: 552, column: 10, scope: !5569, inlinedAt: !5572)
!5569 = distinct !DILexicalBlock(scope: !5570, file: !201, line: 540, column: 34)
!5570 = distinct !DILexicalBlock(scope: !5571, file: !201, line: 540, column: 6)
!5571 = distinct !DISubprogram(name: "kmalloc", scope: !201, file: !201, line: 538, type: !5561, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!5572 = distinct !DILocation(line: 664, column: 9, scope: !5560)
!5573 = !DILocalVariable(name: "flags", arg: 2, scope: !5564, file: !201, line: 446, type: !814)
!5574 = !DILocation(line: 446, column: 9, scope: !5564, inlinedAt: !5568)
!5575 = !DILocalVariable(name: "size", arg: 3, scope: !5564, file: !201, line: 446, type: !339)
!5576 = !DILocation(line: 446, column: 23, scope: !5564, inlinedAt: !5568)
!5577 = !DILocalVariable(name: "ret", scope: !5564, file: !201, line: 448, type: !218)
!5578 = !DILocation(line: 448, column: 8, scope: !5564, inlinedAt: !5568)
!5579 = !DILocalVariable(name: "flags", arg: 1, scope: !5580, file: !201, line: 318, type: !814)
!5580 = distinct !DISubprogram(name: "kmalloc_type", scope: !201, file: !201, line: 318, type: !5581, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!5581 = !DISubroutineType(types: !5582)
!5582 = !{!200, !814}
!5583 = !DILocation(line: 318, column: 67, scope: !5580, inlinedAt: !5584)
!5584 = distinct !DILocation(line: 553, column: 20, scope: !5569, inlinedAt: !5572)
!5585 = !DILocalVariable(name: "size", arg: 1, scope: !5586, file: !201, line: 346, type: !339)
!5586 = distinct !DISubprogram(name: "kmalloc_index", scope: !201, file: !201, line: 346, type: !5587, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!5587 = !DISubroutineType(types: !5588)
!5588 = !{!7, !339}
!5589 = !DILocation(line: 346, column: 58, scope: !5586, inlinedAt: !5590)
!5590 = distinct !DILocation(line: 547, column: 11, scope: !5569, inlinedAt: !5572)
!5591 = !DILocalVariable(name: "size", arg: 1, scope: !5592, file: !201, line: 472, type: !339)
!5592 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !201, file: !201, line: 472, type: !5593, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!5593 = !DISubroutineType(types: !5594)
!5594 = !{!218, !339, !814, !7}
!5595 = !DILocation(line: 472, column: 28, scope: !5592, inlinedAt: !5596)
!5596 = distinct !DILocation(line: 481, column: 9, scope: !5597, inlinedAt: !5598)
!5597 = distinct !DISubprogram(name: "kmalloc_large", scope: !201, file: !201, line: 478, type: !5561, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!5598 = distinct !DILocation(line: 545, column: 11, scope: !5599, inlinedAt: !5572)
!5599 = distinct !DILexicalBlock(scope: !5569, file: !201, line: 544, column: 7)
!5600 = !DILocalVariable(name: "flags", arg: 2, scope: !5592, file: !201, line: 472, type: !814)
!5601 = !DILocation(line: 472, column: 40, scope: !5592, inlinedAt: !5596)
!5602 = !DILocalVariable(name: "order", arg: 3, scope: !5592, file: !201, line: 472, type: !7)
!5603 = !DILocation(line: 472, column: 60, scope: !5592, inlinedAt: !5596)
!5604 = !DILocalVariable(name: "size", arg: 1, scope: !5597, file: !201, line: 478, type: !339)
!5605 = !DILocation(line: 478, column: 51, scope: !5597, inlinedAt: !5598)
!5606 = !DILocalVariable(name: "flags", arg: 2, scope: !5597, file: !201, line: 478, type: !814)
!5607 = !DILocation(line: 478, column: 63, scope: !5597, inlinedAt: !5598)
!5608 = !DILocalVariable(name: "order", scope: !5597, file: !201, line: 480, type: !7)
!5609 = !DILocation(line: 480, column: 15, scope: !5597, inlinedAt: !5598)
!5610 = !DILocalVariable(name: "size", arg: 1, scope: !5571, file: !201, line: 538, type: !339)
!5611 = !DILocation(line: 538, column: 45, scope: !5571, inlinedAt: !5572)
!5612 = !DILocalVariable(name: "flags", arg: 2, scope: !5571, file: !201, line: 538, type: !814)
!5613 = !DILocation(line: 538, column: 57, scope: !5571, inlinedAt: !5572)
!5614 = !DILocalVariable(name: "index", scope: !5569, file: !201, line: 542, type: !7)
!5615 = !DILocation(line: 542, column: 16, scope: !5569, inlinedAt: !5572)
!5616 = !DILocalVariable(name: "size", arg: 1, scope: !5560, file: !201, line: 662, type: !339)
!5617 = !DILocation(line: 662, column: 36, scope: !5560)
!5618 = !DILocalVariable(name: "flags", arg: 2, scope: !5560, file: !201, line: 662, type: !814)
!5619 = !DILocation(line: 662, column: 48, scope: !5560)
!5620 = !DILocation(line: 664, column: 17, scope: !5560)
!5621 = !DILocation(line: 664, column: 23, scope: !5560)
!5622 = !DILocation(line: 664, column: 29, scope: !5560)
!5623 = !DILocation(line: 540, column: 27, scope: !5570, inlinedAt: !5572)
!5624 = !DILocation(line: 540, column: 6, scope: !5570, inlinedAt: !5572)
!5625 = !DILocation(line: 540, column: 6, scope: !5571, inlinedAt: !5572)
!5626 = !DILocation(line: 544, column: 7, scope: !5599, inlinedAt: !5572)
!5627 = !DILocation(line: 544, column: 12, scope: !5599, inlinedAt: !5572)
!5628 = !DILocation(line: 544, column: 7, scope: !5569, inlinedAt: !5572)
!5629 = !DILocation(line: 545, column: 25, scope: !5599, inlinedAt: !5572)
!5630 = !DILocation(line: 545, column: 31, scope: !5599, inlinedAt: !5572)
!5631 = !DILocation(line: 480, column: 33, scope: !5597, inlinedAt: !5598)
!5632 = !DILocation(line: 480, column: 23, scope: !5597, inlinedAt: !5598)
!5633 = !DILocation(line: 481, column: 29, scope: !5597, inlinedAt: !5598)
!5634 = !DILocation(line: 481, column: 35, scope: !5597, inlinedAt: !5598)
!5635 = !DILocation(line: 481, column: 42, scope: !5597, inlinedAt: !5598)
!5636 = !DILocation(line: 474, column: 23, scope: !5592, inlinedAt: !5596)
!5637 = !DILocation(line: 474, column: 29, scope: !5592, inlinedAt: !5596)
!5638 = !DILocation(line: 474, column: 36, scope: !5592, inlinedAt: !5596)
!5639 = !DILocation(line: 474, column: 9, scope: !5592, inlinedAt: !5596)
!5640 = !DILocation(line: 545, column: 4, scope: !5599, inlinedAt: !5572)
!5641 = !DILocation(line: 547, column: 25, scope: !5569, inlinedAt: !5572)
!5642 = !DILocation(line: 348, column: 7, scope: !5643, inlinedAt: !5590)
!5643 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 348, column: 6)
!5644 = !DILocation(line: 348, column: 6, scope: !5586, inlinedAt: !5590)
!5645 = !DILocation(line: 349, column: 3, scope: !5643, inlinedAt: !5590)
!5646 = !DILocation(line: 351, column: 6, scope: !5647, inlinedAt: !5590)
!5647 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 351, column: 6)
!5648 = !DILocation(line: 351, column: 11, scope: !5647, inlinedAt: !5590)
!5649 = !DILocation(line: 351, column: 6, scope: !5586, inlinedAt: !5590)
!5650 = !DILocation(line: 352, column: 3, scope: !5647, inlinedAt: !5590)
!5651 = !DILocation(line: 354, column: 32, scope: !5652, inlinedAt: !5590)
!5652 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 354, column: 6)
!5653 = !DILocation(line: 354, column: 37, scope: !5652, inlinedAt: !5590)
!5654 = !DILocation(line: 354, column: 42, scope: !5652, inlinedAt: !5590)
!5655 = !DILocation(line: 354, column: 45, scope: !5652, inlinedAt: !5590)
!5656 = !DILocation(line: 354, column: 50, scope: !5652, inlinedAt: !5590)
!5657 = !DILocation(line: 354, column: 6, scope: !5586, inlinedAt: !5590)
!5658 = !DILocation(line: 355, column: 3, scope: !5652, inlinedAt: !5590)
!5659 = !DILocation(line: 356, column: 32, scope: !5660, inlinedAt: !5590)
!5660 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 356, column: 6)
!5661 = !DILocation(line: 356, column: 37, scope: !5660, inlinedAt: !5590)
!5662 = !DILocation(line: 356, column: 43, scope: !5660, inlinedAt: !5590)
!5663 = !DILocation(line: 356, column: 46, scope: !5660, inlinedAt: !5590)
!5664 = !DILocation(line: 356, column: 51, scope: !5660, inlinedAt: !5590)
!5665 = !DILocation(line: 356, column: 6, scope: !5586, inlinedAt: !5590)
!5666 = !DILocation(line: 357, column: 3, scope: !5660, inlinedAt: !5590)
!5667 = !DILocation(line: 358, column: 6, scope: !5668, inlinedAt: !5590)
!5668 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 358, column: 6)
!5669 = !DILocation(line: 358, column: 11, scope: !5668, inlinedAt: !5590)
!5670 = !DILocation(line: 358, column: 6, scope: !5586, inlinedAt: !5590)
!5671 = !DILocation(line: 358, column: 26, scope: !5668, inlinedAt: !5590)
!5672 = !DILocation(line: 359, column: 6, scope: !5673, inlinedAt: !5590)
!5673 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 359, column: 6)
!5674 = !DILocation(line: 359, column: 11, scope: !5673, inlinedAt: !5590)
!5675 = !DILocation(line: 359, column: 6, scope: !5586, inlinedAt: !5590)
!5676 = !DILocation(line: 359, column: 26, scope: !5673, inlinedAt: !5590)
!5677 = !DILocation(line: 360, column: 6, scope: !5678, inlinedAt: !5590)
!5678 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 360, column: 6)
!5679 = !DILocation(line: 360, column: 11, scope: !5678, inlinedAt: !5590)
!5680 = !DILocation(line: 360, column: 6, scope: !5586, inlinedAt: !5590)
!5681 = !DILocation(line: 360, column: 26, scope: !5678, inlinedAt: !5590)
!5682 = !DILocation(line: 361, column: 6, scope: !5683, inlinedAt: !5590)
!5683 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 361, column: 6)
!5684 = !DILocation(line: 361, column: 11, scope: !5683, inlinedAt: !5590)
!5685 = !DILocation(line: 361, column: 6, scope: !5586, inlinedAt: !5590)
!5686 = !DILocation(line: 361, column: 26, scope: !5683, inlinedAt: !5590)
!5687 = !DILocation(line: 362, column: 6, scope: !5688, inlinedAt: !5590)
!5688 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 362, column: 6)
!5689 = !DILocation(line: 362, column: 11, scope: !5688, inlinedAt: !5590)
!5690 = !DILocation(line: 362, column: 6, scope: !5586, inlinedAt: !5590)
!5691 = !DILocation(line: 362, column: 26, scope: !5688, inlinedAt: !5590)
!5692 = !DILocation(line: 363, column: 6, scope: !5693, inlinedAt: !5590)
!5693 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 363, column: 6)
!5694 = !DILocation(line: 363, column: 11, scope: !5693, inlinedAt: !5590)
!5695 = !DILocation(line: 363, column: 6, scope: !5586, inlinedAt: !5590)
!5696 = !DILocation(line: 363, column: 26, scope: !5693, inlinedAt: !5590)
!5697 = !DILocation(line: 364, column: 6, scope: !5698, inlinedAt: !5590)
!5698 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 364, column: 6)
!5699 = !DILocation(line: 364, column: 11, scope: !5698, inlinedAt: !5590)
!5700 = !DILocation(line: 364, column: 6, scope: !5586, inlinedAt: !5590)
!5701 = !DILocation(line: 364, column: 26, scope: !5698, inlinedAt: !5590)
!5702 = !DILocation(line: 365, column: 6, scope: !5703, inlinedAt: !5590)
!5703 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 365, column: 6)
!5704 = !DILocation(line: 365, column: 11, scope: !5703, inlinedAt: !5590)
!5705 = !DILocation(line: 365, column: 6, scope: !5586, inlinedAt: !5590)
!5706 = !DILocation(line: 365, column: 26, scope: !5703, inlinedAt: !5590)
!5707 = !DILocation(line: 366, column: 6, scope: !5708, inlinedAt: !5590)
!5708 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 366, column: 6)
!5709 = !DILocation(line: 366, column: 11, scope: !5708, inlinedAt: !5590)
!5710 = !DILocation(line: 366, column: 6, scope: !5586, inlinedAt: !5590)
!5711 = !DILocation(line: 366, column: 26, scope: !5708, inlinedAt: !5590)
!5712 = !DILocation(line: 367, column: 6, scope: !5713, inlinedAt: !5590)
!5713 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 367, column: 6)
!5714 = !DILocation(line: 367, column: 11, scope: !5713, inlinedAt: !5590)
!5715 = !DILocation(line: 367, column: 6, scope: !5586, inlinedAt: !5590)
!5716 = !DILocation(line: 367, column: 26, scope: !5713, inlinedAt: !5590)
!5717 = !DILocation(line: 368, column: 6, scope: !5718, inlinedAt: !5590)
!5718 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 368, column: 6)
!5719 = !DILocation(line: 368, column: 11, scope: !5718, inlinedAt: !5590)
!5720 = !DILocation(line: 368, column: 6, scope: !5586, inlinedAt: !5590)
!5721 = !DILocation(line: 368, column: 26, scope: !5718, inlinedAt: !5590)
!5722 = !DILocation(line: 369, column: 6, scope: !5723, inlinedAt: !5590)
!5723 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 369, column: 6)
!5724 = !DILocation(line: 369, column: 11, scope: !5723, inlinedAt: !5590)
!5725 = !DILocation(line: 369, column: 6, scope: !5586, inlinedAt: !5590)
!5726 = !DILocation(line: 369, column: 26, scope: !5723, inlinedAt: !5590)
!5727 = !DILocation(line: 370, column: 6, scope: !5728, inlinedAt: !5590)
!5728 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 370, column: 6)
!5729 = !DILocation(line: 370, column: 11, scope: !5728, inlinedAt: !5590)
!5730 = !DILocation(line: 370, column: 6, scope: !5586, inlinedAt: !5590)
!5731 = !DILocation(line: 370, column: 26, scope: !5728, inlinedAt: !5590)
!5732 = !DILocation(line: 371, column: 6, scope: !5733, inlinedAt: !5590)
!5733 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 371, column: 6)
!5734 = !DILocation(line: 371, column: 11, scope: !5733, inlinedAt: !5590)
!5735 = !DILocation(line: 371, column: 6, scope: !5586, inlinedAt: !5590)
!5736 = !DILocation(line: 371, column: 26, scope: !5733, inlinedAt: !5590)
!5737 = !DILocation(line: 372, column: 6, scope: !5738, inlinedAt: !5590)
!5738 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 372, column: 6)
!5739 = !DILocation(line: 372, column: 11, scope: !5738, inlinedAt: !5590)
!5740 = !DILocation(line: 372, column: 6, scope: !5586, inlinedAt: !5590)
!5741 = !DILocation(line: 372, column: 26, scope: !5738, inlinedAt: !5590)
!5742 = !DILocation(line: 373, column: 6, scope: !5743, inlinedAt: !5590)
!5743 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 373, column: 6)
!5744 = !DILocation(line: 373, column: 11, scope: !5743, inlinedAt: !5590)
!5745 = !DILocation(line: 373, column: 6, scope: !5586, inlinedAt: !5590)
!5746 = !DILocation(line: 373, column: 26, scope: !5743, inlinedAt: !5590)
!5747 = !DILocation(line: 374, column: 6, scope: !5748, inlinedAt: !5590)
!5748 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 374, column: 6)
!5749 = !DILocation(line: 374, column: 11, scope: !5748, inlinedAt: !5590)
!5750 = !DILocation(line: 374, column: 6, scope: !5586, inlinedAt: !5590)
!5751 = !DILocation(line: 374, column: 26, scope: !5748, inlinedAt: !5590)
!5752 = !DILocation(line: 375, column: 6, scope: !5753, inlinedAt: !5590)
!5753 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 375, column: 6)
!5754 = !DILocation(line: 375, column: 11, scope: !5753, inlinedAt: !5590)
!5755 = !DILocation(line: 375, column: 6, scope: !5586, inlinedAt: !5590)
!5756 = !DILocation(line: 375, column: 27, scope: !5753, inlinedAt: !5590)
!5757 = !DILocation(line: 376, column: 6, scope: !5758, inlinedAt: !5590)
!5758 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 376, column: 6)
!5759 = !DILocation(line: 376, column: 11, scope: !5758, inlinedAt: !5590)
!5760 = !DILocation(line: 376, column: 6, scope: !5586, inlinedAt: !5590)
!5761 = !DILocation(line: 376, column: 32, scope: !5758, inlinedAt: !5590)
!5762 = !DILocation(line: 377, column: 6, scope: !5763, inlinedAt: !5590)
!5763 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 377, column: 6)
!5764 = !DILocation(line: 377, column: 11, scope: !5763, inlinedAt: !5590)
!5765 = !DILocation(line: 377, column: 6, scope: !5586, inlinedAt: !5590)
!5766 = !DILocation(line: 377, column: 32, scope: !5763, inlinedAt: !5590)
!5767 = !DILocation(line: 378, column: 6, scope: !5768, inlinedAt: !5590)
!5768 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 378, column: 6)
!5769 = !DILocation(line: 378, column: 11, scope: !5768, inlinedAt: !5590)
!5770 = !DILocation(line: 378, column: 6, scope: !5586, inlinedAt: !5590)
!5771 = !DILocation(line: 378, column: 32, scope: !5768, inlinedAt: !5590)
!5772 = !DILocation(line: 379, column: 6, scope: !5773, inlinedAt: !5590)
!5773 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 379, column: 6)
!5774 = !DILocation(line: 379, column: 11, scope: !5773, inlinedAt: !5590)
!5775 = !DILocation(line: 379, column: 6, scope: !5586, inlinedAt: !5590)
!5776 = !DILocation(line: 379, column: 33, scope: !5773, inlinedAt: !5590)
!5777 = !DILocation(line: 380, column: 6, scope: !5778, inlinedAt: !5590)
!5778 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 380, column: 6)
!5779 = !DILocation(line: 380, column: 11, scope: !5778, inlinedAt: !5590)
!5780 = !DILocation(line: 380, column: 6, scope: !5586, inlinedAt: !5590)
!5781 = !DILocation(line: 380, column: 33, scope: !5778, inlinedAt: !5590)
!5782 = !DILocation(line: 381, column: 6, scope: !5783, inlinedAt: !5590)
!5783 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 381, column: 6)
!5784 = !DILocation(line: 381, column: 11, scope: !5783, inlinedAt: !5590)
!5785 = !DILocation(line: 381, column: 6, scope: !5586, inlinedAt: !5590)
!5786 = !DILocation(line: 381, column: 33, scope: !5783, inlinedAt: !5590)
!5787 = !DILocation(line: 382, column: 2, scope: !5788, inlinedAt: !5590)
!5788 = distinct !DILexicalBlock(scope: !5789, file: !201, line: 382, column: 2)
!5789 = distinct !DILexicalBlock(scope: !5586, file: !201, line: 382, column: 2)
!5790 = !{i32 -2143881003, i32 -2143880974, i32 -2143880928, i32 -2143880870, i32 -2143880816, i32 -2143880762, i32 -2143880707, i32 -2143880676}
!5791 = !DILocation(line: 382, column: 2, scope: !5792, inlinedAt: !5590)
!5792 = distinct !DILexicalBlock(scope: !5793, file: !201, line: 382, column: 2)
!5793 = distinct !DILexicalBlock(scope: !5789, file: !201, line: 382, column: 2)
!5794 = !{i32 -2143880233, i32 -2143880226, i32 -2143880172, i32 -2143880141, i32 -2143880111}
!5795 = !DILocation(line: 382, column: 2, scope: !5793, inlinedAt: !5590)
!5796 = !DILocation(line: 386, column: 1, scope: !5586, inlinedAt: !5590)
!5797 = !DILocation(line: 547, column: 9, scope: !5569, inlinedAt: !5572)
!5798 = !DILocation(line: 549, column: 8, scope: !5799, inlinedAt: !5572)
!5799 = distinct !DILexicalBlock(scope: !5569, file: !201, line: 549, column: 7)
!5800 = !DILocation(line: 549, column: 7, scope: !5569, inlinedAt: !5572)
!5801 = !DILocation(line: 550, column: 4, scope: !5799, inlinedAt: !5572)
!5802 = !DILocation(line: 553, column: 33, scope: !5569, inlinedAt: !5572)
!5803 = !DILocation(line: 325, column: 6, scope: !5804, inlinedAt: !5584)
!5804 = distinct !DILexicalBlock(scope: !5580, file: !201, line: 325, column: 6)
!5805 = !DILocation(line: 325, column: 6, scope: !5580, inlinedAt: !5584)
!5806 = !DILocation(line: 326, column: 3, scope: !5804, inlinedAt: !5584)
!5807 = !DILocation(line: 332, column: 9, scope: !5580, inlinedAt: !5584)
!5808 = !DILocation(line: 332, column: 15, scope: !5580, inlinedAt: !5584)
!5809 = !DILocation(line: 332, column: 2, scope: !5580, inlinedAt: !5584)
!5810 = !DILocation(line: 336, column: 1, scope: !5580, inlinedAt: !5584)
!5811 = !DILocation(line: 553, column: 5, scope: !5569, inlinedAt: !5572)
!5812 = !DILocation(line: 553, column: 41, scope: !5569, inlinedAt: !5572)
!5813 = !DILocation(line: 554, column: 5, scope: !5569, inlinedAt: !5572)
!5814 = !DILocation(line: 554, column: 12, scope: !5569, inlinedAt: !5572)
!5815 = !DILocation(line: 448, column: 31, scope: !5564, inlinedAt: !5568)
!5816 = !DILocation(line: 448, column: 34, scope: !5564, inlinedAt: !5568)
!5817 = !DILocation(line: 448, column: 14, scope: !5564, inlinedAt: !5568)
!5818 = !DILocation(line: 450, column: 22, scope: !5564, inlinedAt: !5568)
!5819 = !DILocation(line: 450, column: 25, scope: !5564, inlinedAt: !5568)
!5820 = !DILocation(line: 450, column: 30, scope: !5564, inlinedAt: !5568)
!5821 = !DILocation(line: 450, column: 36, scope: !5564, inlinedAt: !5568)
!5822 = !DILocation(line: 450, column: 8, scope: !5564, inlinedAt: !5568)
!5823 = !DILocation(line: 450, column: 6, scope: !5564, inlinedAt: !5568)
!5824 = !DILocation(line: 451, column: 9, scope: !5564, inlinedAt: !5568)
!5825 = !DILocation(line: 552, column: 3, scope: !5569, inlinedAt: !5572)
!5826 = !DILocation(line: 557, column: 19, scope: !5571, inlinedAt: !5572)
!5827 = !DILocation(line: 557, column: 25, scope: !5571, inlinedAt: !5572)
!5828 = !DILocation(line: 557, column: 9, scope: !5571, inlinedAt: !5572)
!5829 = !DILocation(line: 557, column: 2, scope: !5571, inlinedAt: !5572)
!5830 = !DILocation(line: 558, column: 1, scope: !5571, inlinedAt: !5572)
!5831 = !DILocation(line: 664, column: 2, scope: !5560)
!5832 = distinct !DISubprogram(name: "ida_alloc", scope: !3214, file: !3214, line: 271, type: !5833, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!5833 = !DISubroutineType(types: !5834)
!5834 = !{!224, !5835, !814}
!5835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4601, size: 64)
!5836 = !DILocalVariable(name: "ida", arg: 1, scope: !5832, file: !3214, line: 271, type: !5835)
!5837 = !DILocation(line: 271, column: 41, scope: !5832)
!5838 = !DILocalVariable(name: "gfp", arg: 2, scope: !5832, file: !3214, line: 271, type: !814)
!5839 = !DILocation(line: 271, column: 52, scope: !5832)
!5840 = !DILocation(line: 273, column: 25, scope: !5832)
!5841 = !DILocation(line: 273, column: 37, scope: !5832)
!5842 = !DILocation(line: 273, column: 9, scope: !5832)
!5843 = !DILocation(line: 273, column: 2, scope: !5832)
!5844 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !60, file: !60, line: 660, type: !5845, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!5845 = !DISubroutineType(types: !5846)
!5846 = !{null, !3325, !218}
!5847 = !DILocalVariable(name: "dev", arg: 1, scope: !5844, file: !60, line: 660, type: !3325)
!5848 = !DILocation(line: 660, column: 51, scope: !5844)
!5849 = !DILocalVariable(name: "data", arg: 2, scope: !5844, file: !60, line: 660, type: !218)
!5850 = !DILocation(line: 660, column: 62, scope: !5844)
!5851 = !DILocation(line: 662, column: 21, scope: !5844)
!5852 = !DILocation(line: 662, column: 2, scope: !5844)
!5853 = !DILocation(line: 662, column: 7, scope: !5844)
!5854 = !DILocation(line: 662, column: 19, scope: !5844)
!5855 = !DILocation(line: 663, column: 1, scope: !5844)
!5856 = distinct !DISubprogram(name: "kcalloc", scope: !201, file: !201, line: 601, type: !5857, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!5857 = !DISubroutineType(types: !5858)
!5858 = !{!218, !339, !339, !814}
!5859 = !DILocalVariable(name: "n", arg: 1, scope: !5856, file: !201, line: 601, type: !339)
!5860 = !DILocation(line: 601, column: 36, scope: !5856)
!5861 = !DILocalVariable(name: "size", arg: 2, scope: !5856, file: !201, line: 601, type: !339)
!5862 = !DILocation(line: 601, column: 46, scope: !5856)
!5863 = !DILocalVariable(name: "flags", arg: 3, scope: !5856, file: !201, line: 601, type: !814)
!5864 = !DILocation(line: 601, column: 58, scope: !5856)
!5865 = !DILocation(line: 603, column: 23, scope: !5856)
!5866 = !DILocation(line: 603, column: 26, scope: !5856)
!5867 = !DILocation(line: 603, column: 32, scope: !5856)
!5868 = !DILocation(line: 603, column: 38, scope: !5856)
!5869 = !DILocation(line: 603, column: 9, scope: !5856)
!5870 = !DILocation(line: 603, column: 2, scope: !5856)
!5871 = distinct !DISubprogram(name: "gpiochip_find_base", scope: !3, file: !3, line: 180, type: !3008, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!5872 = !DILocalVariable(name: "ngpio", arg: 1, scope: !5871, file: !3, line: 180, type: !224)
!5873 = !DILocation(line: 180, column: 35, scope: !5871)
!5874 = !DILocalVariable(name: "gdev", scope: !5871, file: !3, line: 182, type: !219)
!5875 = !DILocation(line: 182, column: 22, scope: !5871)
!5876 = !DILocalVariable(name: "base", scope: !5871, file: !3, line: 183, type: !224)
!5877 = !DILocation(line: 183, column: 6, scope: !5871)
!5878 = !DILocation(line: 183, column: 29, scope: !5871)
!5879 = !DILocation(line: 183, column: 27, scope: !5871)
!5880 = !DILocalVariable(name: "__mptr", scope: !5881, file: !3, line: 185, type: !218)
!5881 = distinct !DILexicalBlock(scope: !5882, file: !3, line: 185, column: 2)
!5882 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 185, column: 2)
!5883 = !DILocation(line: 185, column: 2, scope: !5881)
!5884 = !DILocation(line: 185, column: 2, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5881, file: !3, line: 185, column: 2)
!5886 = !DILocation(line: 185, column: 2, scope: !5882)
!5887 = !DILocation(line: 185, column: 2, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5882, file: !3, line: 185, column: 2)
!5889 = !DILocation(line: 187, column: 7, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 187, column: 7)
!5891 = distinct !DILexicalBlock(scope: !5888, file: !3, line: 185, column: 57)
!5892 = !DILocation(line: 187, column: 13, scope: !5890)
!5893 = !DILocation(line: 187, column: 20, scope: !5890)
!5894 = !DILocation(line: 187, column: 26, scope: !5890)
!5895 = !DILocation(line: 187, column: 18, scope: !5890)
!5896 = !DILocation(line: 187, column: 35, scope: !5890)
!5897 = !DILocation(line: 187, column: 32, scope: !5890)
!5898 = !DILocation(line: 187, column: 7, scope: !5891)
!5899 = !DILocation(line: 188, column: 4, scope: !5890)
!5900 = !DILocation(line: 191, column: 11, scope: !5890)
!5901 = !DILocation(line: 191, column: 17, scope: !5890)
!5902 = !DILocation(line: 191, column: 24, scope: !5890)
!5903 = !DILocation(line: 191, column: 22, scope: !5890)
!5904 = !DILocation(line: 191, column: 9, scope: !5890)
!5905 = !DILocation(line: 192, column: 2, scope: !5891)
!5906 = !DILocalVariable(name: "__mptr", scope: !5907, file: !3, line: 185, type: !218)
!5907 = distinct !DILexicalBlock(scope: !5888, file: !3, line: 185, column: 2)
!5908 = !DILocation(line: 185, column: 2, scope: !5907)
!5909 = !DILocation(line: 185, column: 2, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 185, column: 2)
!5911 = distinct !{!5911, !5886, !5912}
!5912 = !DILocation(line: 192, column: 2, scope: !5882)
!5913 = !DILocation(line: 194, column: 20, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 194, column: 6)
!5915 = !DILocation(line: 194, column: 6, scope: !5914)
!5916 = !DILocation(line: 194, column: 6, scope: !5871)
!5917 = !DILocation(line: 195, column: 3, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5919, file: !3, line: 195, column: 3)
!5919 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 195, column: 3)
!5920 = distinct !DILexicalBlock(scope: !5914, file: !3, line: 194, column: 27)
!5921 = !DILocation(line: 195, column: 3, scope: !5919)
!5922 = !DILocation(line: 196, column: 10, scope: !5920)
!5923 = !DILocation(line: 196, column: 3, scope: !5920)
!5924 = !DILocation(line: 198, column: 3, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5914, file: !3, line: 197, column: 9)
!5926 = !DILocation(line: 199, column: 3, scope: !5925)
!5927 = !DILocation(line: 201, column: 1, scope: !5871)
!5928 = distinct !DISubprogram(name: "gpiodev_add_to_list", scope: !3, file: !3, line: 252, type: !5929, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!5929 = !DISubroutineType(types: !5930)
!5930 = !{!224, !219}
!5931 = !DILocalVariable(name: "gdev", arg: 1, scope: !5928, file: !3, line: 252, type: !219)
!5932 = !DILocation(line: 252, column: 52, scope: !5928)
!5933 = !DILocalVariable(name: "prev", scope: !5928, file: !3, line: 254, type: !219)
!5934 = !DILocation(line: 254, column: 22, scope: !5928)
!5935 = !DILocalVariable(name: "next", scope: !5928, file: !3, line: 254, type: !219)
!5936 = !DILocation(line: 254, column: 29, scope: !5928)
!5937 = !DILocation(line: 256, column: 6, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5928, file: !3, line: 256, column: 6)
!5939 = !DILocation(line: 256, column: 6, scope: !5928)
!5940 = !DILocation(line: 258, column: 18, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5938, file: !3, line: 256, column: 33)
!5942 = !DILocation(line: 258, column: 24, scope: !5941)
!5943 = !DILocation(line: 258, column: 3, scope: !5941)
!5944 = !DILocation(line: 259, column: 3, scope: !5941)
!5945 = !DILocalVariable(name: "__mptr", scope: !5946, file: !3, line: 262, type: !218)
!5946 = distinct !DILexicalBlock(scope: !5928, file: !3, line: 262, column: 9)
!5947 = !DILocation(line: 262, column: 9, scope: !5946)
!5948 = !DILocation(line: 262, column: 9, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5946, file: !3, line: 262, column: 9)
!5950 = !DILocation(line: 262, column: 7, scope: !5928)
!5951 = !DILocation(line: 263, column: 6, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5928, file: !3, line: 263, column: 6)
!5953 = !DILocation(line: 263, column: 12, scope: !5952)
!5954 = !DILocation(line: 263, column: 19, scope: !5952)
!5955 = !DILocation(line: 263, column: 25, scope: !5952)
!5956 = !DILocation(line: 263, column: 17, scope: !5952)
!5957 = !DILocation(line: 263, column: 34, scope: !5952)
!5958 = !DILocation(line: 263, column: 40, scope: !5952)
!5959 = !DILocation(line: 263, column: 31, scope: !5952)
!5960 = !DILocation(line: 263, column: 6, scope: !5928)
!5961 = !DILocation(line: 265, column: 13, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5952, file: !3, line: 263, column: 46)
!5963 = !DILocation(line: 265, column: 19, scope: !5962)
!5964 = !DILocation(line: 265, column: 3, scope: !5962)
!5965 = !DILocation(line: 266, column: 3, scope: !5962)
!5966 = !DILocalVariable(name: "__mptr", scope: !5967, file: !3, line: 269, type: !218)
!5967 = distinct !DILexicalBlock(scope: !5928, file: !3, line: 269, column: 9)
!5968 = !DILocation(line: 269, column: 9, scope: !5967)
!5969 = !DILocation(line: 269, column: 9, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 269, column: 9)
!5971 = !DILocation(line: 269, column: 7, scope: !5928)
!5972 = !DILocation(line: 270, column: 6, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5928, file: !3, line: 270, column: 6)
!5974 = !DILocation(line: 270, column: 12, scope: !5973)
!5975 = !DILocation(line: 270, column: 19, scope: !5973)
!5976 = !DILocation(line: 270, column: 25, scope: !5973)
!5977 = !DILocation(line: 270, column: 17, scope: !5973)
!5978 = !DILocation(line: 270, column: 34, scope: !5973)
!5979 = !DILocation(line: 270, column: 40, scope: !5973)
!5980 = !DILocation(line: 270, column: 31, scope: !5973)
!5981 = !DILocation(line: 270, column: 6, scope: !5928)
!5982 = !DILocation(line: 272, column: 18, scope: !5983)
!5983 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 270, column: 46)
!5984 = !DILocation(line: 272, column: 24, scope: !5983)
!5985 = !DILocation(line: 272, column: 3, scope: !5983)
!5986 = !DILocation(line: 273, column: 3, scope: !5983)
!5987 = !DILocalVariable(name: "__mptr", scope: !5988, file: !3, line: 276, type: !218)
!5988 = distinct !DILexicalBlock(scope: !5989, file: !3, line: 276, column: 2)
!5989 = distinct !DILexicalBlock(scope: !5928, file: !3, line: 276, column: 2)
!5990 = !DILocation(line: 276, column: 2, scope: !5988)
!5991 = !DILocation(line: 276, column: 2, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5988, file: !3, line: 276, column: 2)
!5993 = !DILocation(line: 276, column: 2, scope: !5989)
!5994 = !DILocalVariable(name: "__mptr", scope: !5995, file: !3, line: 276, type: !218)
!5995 = distinct !DILexicalBlock(scope: !5989, file: !3, line: 276, column: 2)
!5996 = !DILocation(line: 276, column: 2, scope: !5995)
!5997 = !DILocation(line: 276, column: 2, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5995, file: !3, line: 276, column: 2)
!5999 = !DILocation(line: 276, column: 2, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5989, file: !3, line: 276, column: 2)
!6001 = !DILocation(line: 278, column: 8, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 278, column: 7)
!6003 = distinct !DILexicalBlock(scope: !6000, file: !3, line: 276, column: 60)
!6004 = !DILocation(line: 278, column: 14, scope: !6002)
!6005 = !DILocation(line: 278, column: 19, scope: !6002)
!6006 = !DILocation(line: 278, column: 7, scope: !6003)
!6007 = !DILocation(line: 279, column: 4, scope: !6002)
!6008 = !DILocation(line: 282, column: 7, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 282, column: 7)
!6010 = !DILocation(line: 282, column: 13, scope: !6009)
!6011 = !DILocation(line: 282, column: 20, scope: !6009)
!6012 = !DILocation(line: 282, column: 26, scope: !6009)
!6013 = !DILocation(line: 282, column: 18, scope: !6009)
!6014 = !DILocation(line: 282, column: 35, scope: !6009)
!6015 = !DILocation(line: 282, column: 41, scope: !6009)
!6016 = !DILocation(line: 282, column: 32, scope: !6009)
!6017 = !DILocation(line: 283, column: 5, scope: !6009)
!6018 = !DILocation(line: 283, column: 8, scope: !6009)
!6019 = !DILocation(line: 283, column: 14, scope: !6009)
!6020 = !DILocation(line: 283, column: 21, scope: !6009)
!6021 = !DILocation(line: 283, column: 27, scope: !6009)
!6022 = !DILocation(line: 283, column: 19, scope: !6009)
!6023 = !DILocation(line: 283, column: 36, scope: !6009)
!6024 = !DILocation(line: 283, column: 42, scope: !6009)
!6025 = !DILocation(line: 283, column: 33, scope: !6009)
!6026 = !DILocation(line: 282, column: 7, scope: !6003)
!6027 = !DILocation(line: 284, column: 14, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 283, column: 48)
!6029 = !DILocation(line: 284, column: 20, scope: !6028)
!6030 = !DILocation(line: 284, column: 27, scope: !6028)
!6031 = !DILocation(line: 284, column: 33, scope: !6028)
!6032 = !DILocation(line: 284, column: 4, scope: !6028)
!6033 = !DILocation(line: 285, column: 4, scope: !6028)
!6034 = !DILocation(line: 287, column: 2, scope: !6003)
!6035 = !DILocalVariable(name: "__mptr", scope: !6036, file: !3, line: 276, type: !218)
!6036 = distinct !DILexicalBlock(scope: !6000, file: !3, line: 276, column: 2)
!6037 = !DILocation(line: 276, column: 2, scope: !6036)
!6038 = !DILocation(line: 276, column: 2, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6036, file: !3, line: 276, column: 2)
!6040 = distinct !{!6040, !5993, !6041}
!6041 = !DILocation(line: 287, column: 2, scope: !5989)
!6042 = !DILocation(line: 289, column: 2, scope: !5928)
!6043 = !DILocation(line: 290, column: 2, scope: !5928)
!6044 = !DILocation(line: 291, column: 1, scope: !5928)
!6045 = distinct !DISubprogram(name: "gpiochip_set_desc_names", scope: !3, file: !3, line: 338, type: !4146, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!6046 = !DILocalVariable(name: "gc", arg: 1, scope: !6045, file: !3, line: 338, type: !4096)
!6047 = !DILocation(line: 338, column: 54, scope: !6045)
!6048 = !DILocalVariable(name: "gdev", scope: !6045, file: !3, line: 340, type: !219)
!6049 = !DILocation(line: 340, column: 22, scope: !6045)
!6050 = !DILocation(line: 340, column: 29, scope: !6045)
!6051 = !DILocation(line: 340, column: 33, scope: !6045)
!6052 = !DILocalVariable(name: "i", scope: !6045, file: !3, line: 341, type: !224)
!6053 = !DILocation(line: 341, column: 6, scope: !6045)
!6054 = !DILocation(line: 344, column: 9, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6045, file: !3, line: 344, column: 2)
!6056 = !DILocation(line: 344, column: 7, scope: !6055)
!6057 = !DILocation(line: 344, column: 14, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6055, file: !3, line: 344, column: 2)
!6059 = !DILocation(line: 344, column: 19, scope: !6058)
!6060 = !DILocation(line: 344, column: 23, scope: !6058)
!6061 = !DILocation(line: 344, column: 16, scope: !6058)
!6062 = !DILocation(line: 344, column: 2, scope: !6055)
!6063 = !DILocalVariable(name: "gpio", scope: !6064, file: !3, line: 345, type: !4232)
!6064 = distinct !DILexicalBlock(scope: !6058, file: !3, line: 344, column: 35)
!6065 = !DILocation(line: 345, column: 21, scope: !6064)
!6066 = !DILocation(line: 347, column: 28, scope: !6064)
!6067 = !DILocation(line: 347, column: 32, scope: !6064)
!6068 = !DILocation(line: 347, column: 38, scope: !6064)
!6069 = !DILocation(line: 347, column: 10, scope: !6064)
!6070 = !DILocation(line: 347, column: 8, scope: !6064)
!6071 = !DILocation(line: 348, column: 7, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 348, column: 7)
!6073 = !DILocation(line: 348, column: 7, scope: !6064)
!6074 = !DILocation(line: 349, column: 4, scope: !6072)
!6075 = !DILocation(line: 352, column: 2, scope: !6064)
!6076 = !DILocation(line: 344, column: 30, scope: !6058)
!6077 = !DILocation(line: 344, column: 2, scope: !6058)
!6078 = distinct !{!6078, !6062, !6079}
!6079 = !DILocation(line: 352, column: 2, scope: !6055)
!6080 = !DILocation(line: 355, column: 9, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6045, file: !3, line: 355, column: 2)
!6082 = !DILocation(line: 355, column: 7, scope: !6081)
!6083 = !DILocation(line: 355, column: 14, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !6081, file: !3, line: 355, column: 2)
!6085 = !DILocation(line: 355, column: 19, scope: !6084)
!6086 = !DILocation(line: 355, column: 23, scope: !6084)
!6087 = !DILocation(line: 355, column: 16, scope: !6084)
!6088 = !DILocation(line: 355, column: 2, scope: !6081)
!6089 = !DILocation(line: 356, column: 25, scope: !6084)
!6090 = !DILocation(line: 356, column: 29, scope: !6084)
!6091 = !DILocation(line: 356, column: 35, scope: !6084)
!6092 = !DILocation(line: 356, column: 3, scope: !6084)
!6093 = !DILocation(line: 356, column: 9, scope: !6084)
!6094 = !DILocation(line: 356, column: 15, scope: !6084)
!6095 = !DILocation(line: 356, column: 18, scope: !6084)
!6096 = !DILocation(line: 356, column: 23, scope: !6084)
!6097 = !DILocation(line: 355, column: 30, scope: !6084)
!6098 = !DILocation(line: 355, column: 2, scope: !6084)
!6099 = distinct !{!6099, !6088, !6100}
!6100 = !DILocation(line: 356, column: 36, scope: !6081)
!6101 = !DILocation(line: 358, column: 2, scope: !6045)
!6102 = distinct !DISubprogram(name: "devprop_gpiochip_set_names", scope: !3, file: !3, line: 370, type: !4146, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!6103 = !DILocalVariable(name: "chip", arg: 1, scope: !6102, file: !3, line: 370, type: !4096)
!6104 = !DILocation(line: 370, column: 57, scope: !6102)
!6105 = !DILocalVariable(name: "gdev", scope: !6102, file: !3, line: 372, type: !219)
!6106 = !DILocation(line: 372, column: 22, scope: !6102)
!6107 = !DILocation(line: 372, column: 29, scope: !6102)
!6108 = !DILocation(line: 372, column: 35, scope: !6102)
!6109 = !DILocalVariable(name: "dev", scope: !6102, file: !3, line: 373, type: !3325)
!6110 = !DILocation(line: 373, column: 17, scope: !6102)
!6111 = !DILocation(line: 373, column: 23, scope: !6102)
!6112 = !DILocation(line: 373, column: 29, scope: !6102)
!6113 = !DILocalVariable(name: "names", scope: !6102, file: !3, line: 374, type: !3669)
!6114 = !DILocation(line: 374, column: 15, scope: !6102)
!6115 = !DILocalVariable(name: "ret", scope: !6102, file: !3, line: 375, type: !224)
!6116 = !DILocation(line: 375, column: 6, scope: !6102)
!6117 = !DILocalVariable(name: "i", scope: !6102, file: !3, line: 375, type: !224)
!6118 = !DILocation(line: 375, column: 11, scope: !6102)
!6119 = !DILocalVariable(name: "count", scope: !6102, file: !3, line: 376, type: !224)
!6120 = !DILocation(line: 376, column: 6, scope: !6102)
!6121 = !DILocation(line: 379, column: 7, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6102, file: !3, line: 379, column: 6)
!6123 = !DILocation(line: 379, column: 6, scope: !6102)
!6124 = !DILocation(line: 380, column: 3, scope: !6122)
!6125 = !DILocation(line: 382, column: 45, scope: !6102)
!6126 = !DILocation(line: 382, column: 10, scope: !6102)
!6127 = !DILocation(line: 382, column: 8, scope: !6102)
!6128 = !DILocation(line: 383, column: 6, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6102, file: !3, line: 383, column: 6)
!6130 = !DILocation(line: 383, column: 12, scope: !6129)
!6131 = !DILocation(line: 383, column: 6, scope: !6102)
!6132 = !DILocation(line: 384, column: 3, scope: !6129)
!6133 = !DILocation(line: 386, column: 6, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6102, file: !3, line: 386, column: 6)
!6135 = !DILocation(line: 386, column: 14, scope: !6134)
!6136 = !DILocation(line: 386, column: 20, scope: !6134)
!6137 = !DILocation(line: 386, column: 12, scope: !6134)
!6138 = !DILocation(line: 386, column: 6, scope: !6102)
!6139 = !DILocation(line: 387, column: 3, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6134, file: !3, line: 386, column: 27)
!6141 = !DILocation(line: 389, column: 11, scope: !6140)
!6142 = !DILocation(line: 389, column: 17, scope: !6140)
!6143 = !DILocation(line: 389, column: 9, scope: !6140)
!6144 = !DILocation(line: 390, column: 2, scope: !6140)
!6145 = !DILocation(line: 392, column: 18, scope: !6102)
!6146 = !DILocation(line: 392, column: 10, scope: !6102)
!6147 = !DILocation(line: 392, column: 8, scope: !6102)
!6148 = !DILocation(line: 393, column: 7, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6102, file: !3, line: 393, column: 6)
!6150 = !DILocation(line: 393, column: 6, scope: !6102)
!6151 = !DILocation(line: 394, column: 3, scope: !6149)
!6152 = !DILocation(line: 396, column: 42, scope: !6102)
!6153 = !DILocation(line: 397, column: 7, scope: !6102)
!6154 = !DILocation(line: 397, column: 14, scope: !6102)
!6155 = !DILocation(line: 396, column: 8, scope: !6102)
!6156 = !DILocation(line: 396, column: 6, scope: !6102)
!6157 = !DILocation(line: 398, column: 6, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6102, file: !3, line: 398, column: 6)
!6159 = !DILocation(line: 398, column: 10, scope: !6158)
!6160 = !DILocation(line: 398, column: 6, scope: !6102)
!6161 = !DILocation(line: 399, column: 3, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6158, file: !3, line: 398, column: 15)
!6163 = !DILocation(line: 400, column: 9, scope: !6162)
!6164 = !DILocation(line: 400, column: 3, scope: !6162)
!6165 = !DILocation(line: 401, column: 10, scope: !6162)
!6166 = !DILocation(line: 401, column: 3, scope: !6162)
!6167 = !DILocation(line: 404, column: 9, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6102, file: !3, line: 404, column: 2)
!6169 = !DILocation(line: 404, column: 7, scope: !6168)
!6170 = !DILocation(line: 404, column: 14, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 404, column: 2)
!6172 = !DILocation(line: 404, column: 18, scope: !6171)
!6173 = !DILocation(line: 404, column: 16, scope: !6171)
!6174 = !DILocation(line: 404, column: 2, scope: !6168)
!6175 = !DILocation(line: 405, column: 25, scope: !6171)
!6176 = !DILocation(line: 405, column: 31, scope: !6171)
!6177 = !DILocation(line: 405, column: 3, scope: !6171)
!6178 = !DILocation(line: 405, column: 9, scope: !6171)
!6179 = !DILocation(line: 405, column: 15, scope: !6171)
!6180 = !DILocation(line: 405, column: 18, scope: !6171)
!6181 = !DILocation(line: 405, column: 23, scope: !6171)
!6182 = !DILocation(line: 404, column: 26, scope: !6171)
!6183 = !DILocation(line: 404, column: 2, scope: !6171)
!6184 = distinct !{!6184, !6174, !6185}
!6185 = !DILocation(line: 405, column: 32, scope: !6168)
!6186 = !DILocation(line: 407, column: 8, scope: !6102)
!6187 = !DILocation(line: 407, column: 2, scope: !6102)
!6188 = !DILocation(line: 409, column: 2, scope: !6102)
!6189 = !DILocation(line: 410, column: 1, scope: !6102)
!6190 = distinct !DISubprogram(name: "gpiochip_alloc_valid_mask", scope: !3, file: !3, line: 426, type: !4146, scopeLine: 427, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!6191 = !DILocalVariable(name: "gc", arg: 1, scope: !6190, file: !3, line: 426, type: !4096)
!6192 = !DILocation(line: 426, column: 56, scope: !6190)
!6193 = !DILocation(line: 428, column: 32, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6190, file: !3, line: 428, column: 6)
!6195 = !DILocation(line: 428, column: 8, scope: !6194)
!6196 = !DILocation(line: 428, column: 36, scope: !6194)
!6197 = !DILocation(line: 428, column: 39, scope: !6194)
!6198 = !DILocation(line: 428, column: 43, scope: !6194)
!6199 = !DILocation(line: 428, column: 6, scope: !6190)
!6200 = !DILocation(line: 429, column: 3, scope: !6194)
!6201 = !DILocation(line: 431, column: 42, scope: !6190)
!6202 = !DILocation(line: 431, column: 19, scope: !6190)
!6203 = !DILocation(line: 431, column: 2, scope: !6190)
!6204 = !DILocation(line: 431, column: 6, scope: !6190)
!6205 = !DILocation(line: 431, column: 17, scope: !6190)
!6206 = !DILocation(line: 432, column: 7, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6190, file: !3, line: 432, column: 6)
!6208 = !DILocation(line: 432, column: 11, scope: !6207)
!6209 = !DILocation(line: 432, column: 6, scope: !6190)
!6210 = !DILocation(line: 433, column: 3, scope: !6207)
!6211 = !DILocation(line: 435, column: 2, scope: !6190)
!6212 = !DILocation(line: 436, column: 1, scope: !6190)
!6213 = distinct !DISubprogram(name: "gpiochip_init_valid_mask", scope: !3, file: !3, line: 438, type: !4146, scopeLine: 439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!6214 = !DILocalVariable(name: "gc", arg: 1, scope: !6213, file: !3, line: 438, type: !4096)
!6215 = !DILocation(line: 438, column: 55, scope: !6213)
!6216 = !DILocation(line: 440, column: 6, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6213, file: !3, line: 440, column: 6)
!6218 = !DILocation(line: 440, column: 10, scope: !6217)
!6219 = !DILocation(line: 440, column: 6, scope: !6213)
!6220 = !DILocation(line: 441, column: 10, scope: !6217)
!6221 = !DILocation(line: 441, column: 14, scope: !6217)
!6222 = !DILocation(line: 441, column: 30, scope: !6217)
!6223 = !DILocation(line: 442, column: 9, scope: !6217)
!6224 = !DILocation(line: 442, column: 13, scope: !6217)
!6225 = !DILocation(line: 443, column: 9, scope: !6217)
!6226 = !DILocation(line: 443, column: 13, scope: !6217)
!6227 = !DILocation(line: 441, column: 3, scope: !6217)
!6228 = !DILocation(line: 445, column: 2, scope: !6213)
!6229 = !DILocation(line: 446, column: 1, scope: !6213)
!6230 = distinct !DISubprogram(name: "gpiochip_add_pin_ranges", scope: !3, file: !3, line: 454, type: !4146, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!6231 = !DILocalVariable(name: "gc", arg: 1, scope: !6230, file: !3, line: 454, type: !4096)
!6232 = !DILocation(line: 454, column: 54, scope: !6230)
!6233 = !DILocation(line: 456, column: 6, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6230, file: !3, line: 456, column: 6)
!6235 = !DILocation(line: 456, column: 10, scope: !6234)
!6236 = !DILocation(line: 456, column: 6, scope: !6230)
!6237 = !DILocation(line: 457, column: 10, scope: !6234)
!6238 = !DILocation(line: 457, column: 14, scope: !6234)
!6239 = !DILocation(line: 457, column: 29, scope: !6234)
!6240 = !DILocation(line: 457, column: 3, scope: !6234)
!6241 = !DILocation(line: 459, column: 2, scope: !6230)
!6242 = !DILocation(line: 460, column: 1, scope: !6230)
!6243 = distinct !DISubprogram(name: "machine_gpiochip_add", scope: !3, file: !3, line: 540, type: !6244, scopeLine: 541, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!6244 = !DISubroutineType(types: !6245)
!6245 = !{null, !4096}
!6246 = !DILocalVariable(name: "gc", arg: 1, scope: !6243, file: !3, line: 540, type: !4096)
!6247 = !DILocation(line: 540, column: 52, scope: !6243)
!6248 = !DILocalVariable(name: "hog", scope: !6243, file: !3, line: 542, type: !4557)
!6249 = !DILocation(line: 542, column: 20, scope: !6243)
!6250 = !DILocation(line: 544, column: 2, scope: !6243)
!6251 = !DILocalVariable(name: "__mptr", scope: !6252, file: !3, line: 546, type: !218)
!6252 = distinct !DILexicalBlock(scope: !6253, file: !3, line: 546, column: 2)
!6253 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 546, column: 2)
!6254 = !DILocation(line: 546, column: 2, scope: !6252)
!6255 = !DILocation(line: 546, column: 2, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6252, file: !3, line: 546, column: 2)
!6257 = !DILocation(line: 546, column: 2, scope: !6253)
!6258 = !DILocation(line: 546, column: 2, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6253, file: !3, line: 546, column: 2)
!6260 = !DILocation(line: 547, column: 15, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6262, file: !3, line: 547, column: 7)
!6262 = distinct !DILexicalBlock(scope: !6259, file: !3, line: 546, column: 53)
!6263 = !DILocation(line: 547, column: 19, scope: !6261)
!6264 = !DILocation(line: 547, column: 26, scope: !6261)
!6265 = !DILocation(line: 547, column: 31, scope: !6261)
!6266 = !DILocation(line: 547, column: 8, scope: !6261)
!6267 = !DILocation(line: 547, column: 7, scope: !6262)
!6268 = !DILocation(line: 548, column: 25, scope: !6261)
!6269 = !DILocation(line: 548, column: 29, scope: !6261)
!6270 = !DILocation(line: 548, column: 4, scope: !6261)
!6271 = !DILocation(line: 549, column: 2, scope: !6262)
!6272 = !DILocalVariable(name: "__mptr", scope: !6273, file: !3, line: 546, type: !218)
!6273 = distinct !DILexicalBlock(scope: !6259, file: !3, line: 546, column: 2)
!6274 = !DILocation(line: 546, column: 2, scope: !6273)
!6275 = !DILocation(line: 546, column: 2, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6273, file: !3, line: 546, column: 2)
!6277 = distinct !{!6277, !6257, !6278}
!6278 = !DILocation(line: 549, column: 2, scope: !6253)
!6279 = !DILocation(line: 551, column: 2, scope: !6243)
!6280 = !DILocation(line: 552, column: 1, scope: !6243)
!6281 = distinct !DISubprogram(name: "gpiochip_irqchip_init_valid_mask", scope: !3, file: !3, line: 905, type: !4146, scopeLine: 906, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!6282 = !DILocalVariable(name: "gc", arg: 1, scope: !6281, file: !3, line: 905, type: !4096)
!6283 = !DILocation(line: 905, column: 63, scope: !6281)
!6284 = !DILocalVariable(name: "girq", scope: !6281, file: !3, line: 907, type: !6285)
!6285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4174, size: 64)
!6286 = !DILocation(line: 907, column: 24, scope: !6281)
!6287 = !DILocation(line: 907, column: 32, scope: !6281)
!6288 = !DILocation(line: 907, column: 36, scope: !6281)
!6289 = !DILocation(line: 909, column: 7, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6281, file: !3, line: 909, column: 6)
!6291 = !DILocation(line: 909, column: 13, scope: !6290)
!6292 = !DILocation(line: 909, column: 6, scope: !6281)
!6293 = !DILocation(line: 910, column: 3, scope: !6290)
!6294 = !DILocation(line: 912, column: 44, scope: !6281)
!6295 = !DILocation(line: 912, column: 21, scope: !6281)
!6296 = !DILocation(line: 912, column: 2, scope: !6281)
!6297 = !DILocation(line: 912, column: 8, scope: !6281)
!6298 = !DILocation(line: 912, column: 19, scope: !6281)
!6299 = !DILocation(line: 913, column: 7, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6281, file: !3, line: 913, column: 6)
!6301 = !DILocation(line: 913, column: 13, scope: !6300)
!6302 = !DILocation(line: 913, column: 6, scope: !6281)
!6303 = !DILocation(line: 914, column: 3, scope: !6300)
!6304 = !DILocation(line: 916, column: 2, scope: !6281)
!6305 = !DILocation(line: 916, column: 8, scope: !6281)
!6306 = !DILocation(line: 916, column: 24, scope: !6281)
!6307 = !DILocation(line: 916, column: 28, scope: !6281)
!6308 = !DILocation(line: 916, column: 34, scope: !6281)
!6309 = !DILocation(line: 916, column: 46, scope: !6281)
!6310 = !DILocation(line: 916, column: 50, scope: !6281)
!6311 = !DILocation(line: 918, column: 2, scope: !6281)
!6312 = !DILocation(line: 919, column: 1, scope: !6281)
!6313 = distinct !DISubprogram(name: "gpiochip_irqchip_init_hw", scope: !3, file: !3, line: 895, type: !4146, scopeLine: 896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!6314 = !DILocalVariable(name: "gc", arg: 1, scope: !6313, file: !3, line: 895, type: !4096)
!6315 = !DILocation(line: 895, column: 55, scope: !6313)
!6316 = !DILocalVariable(name: "girq", scope: !6313, file: !3, line: 897, type: !6285)
!6317 = !DILocation(line: 897, column: 24, scope: !6313)
!6318 = !DILocation(line: 897, column: 32, scope: !6313)
!6319 = !DILocation(line: 897, column: 36, scope: !6313)
!6320 = !DILocation(line: 899, column: 7, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6313, file: !3, line: 899, column: 6)
!6322 = !DILocation(line: 899, column: 13, scope: !6321)
!6323 = !DILocation(line: 899, column: 6, scope: !6313)
!6324 = !DILocation(line: 900, column: 3, scope: !6321)
!6325 = !DILocation(line: 902, column: 9, scope: !6313)
!6326 = !DILocation(line: 902, column: 15, scope: !6313)
!6327 = !DILocation(line: 902, column: 23, scope: !6313)
!6328 = !DILocation(line: 902, column: 2, scope: !6313)
!6329 = !DILocation(line: 903, column: 1, scope: !6313)
!6330 = distinct !DISubprogram(name: "gpiochip_add_irqchip", scope: !3, file: !3, line: 1513, type: !6331, scopeLine: 1516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!6331 = !DISubroutineType(types: !6332)
!6332 = !{!224, !4096, !4197, !4197}
!6333 = !DILocalVariable(name: "gc", arg: 1, scope: !6330, file: !3, line: 1513, type: !4096)
!6334 = !DILocation(line: 1513, column: 51, scope: !6330)
!6335 = !DILocalVariable(name: "lock_key", arg: 2, scope: !6330, file: !3, line: 1514, type: !4197)
!6336 = !DILocation(line: 1514, column: 28, scope: !6330)
!6337 = !DILocalVariable(name: "request_key", arg: 3, scope: !6330, file: !3, line: 1515, type: !4197)
!6338 = !DILocation(line: 1515, column: 28, scope: !6330)
!6339 = !DILocalVariable(name: "irqchip", scope: !6330, file: !3, line: 1517, type: !3790)
!6340 = !DILocation(line: 1517, column: 19, scope: !6330)
!6341 = !DILocation(line: 1517, column: 29, scope: !6330)
!6342 = !DILocation(line: 1517, column: 33, scope: !6330)
!6343 = !DILocation(line: 1517, column: 37, scope: !6330)
!6344 = !DILocalVariable(name: "ops", scope: !6330, file: !3, line: 1518, type: !3610)
!6345 = !DILocation(line: 1518, column: 31, scope: !6330)
!6346 = !DILocalVariable(name: "np", scope: !6330, file: !3, line: 1519, type: !3618)
!6347 = !DILocation(line: 1519, column: 22, scope: !6330)
!6348 = !DILocalVariable(name: "type", scope: !6330, file: !3, line: 1520, type: !7)
!6349 = !DILocation(line: 1520, column: 15, scope: !6330)
!6350 = !DILocalVariable(name: "i", scope: !6330, file: !3, line: 1521, type: !7)
!6351 = !DILocation(line: 1521, column: 15, scope: !6330)
!6352 = !DILocation(line: 1523, column: 7, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 1523, column: 6)
!6354 = !DILocation(line: 1523, column: 6, scope: !6330)
!6355 = !DILocation(line: 1524, column: 3, scope: !6353)
!6356 = !DILocation(line: 1526, column: 6, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 1526, column: 6)
!6358 = !DILocation(line: 1526, column: 10, scope: !6357)
!6359 = !DILocation(line: 1526, column: 14, scope: !6357)
!6360 = !DILocation(line: 1526, column: 29, scope: !6357)
!6361 = !DILocation(line: 1526, column: 32, scope: !6357)
!6362 = !DILocation(line: 1526, column: 36, scope: !6357)
!6363 = !DILocation(line: 1526, column: 6, scope: !6330)
!6364 = !DILocation(line: 1527, column: 3, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6357, file: !3, line: 1526, column: 47)
!6366 = !DILocation(line: 1528, column: 3, scope: !6365)
!6367 = !DILocation(line: 1531, column: 7, scope: !6330)
!6368 = !DILocation(line: 1531, column: 11, scope: !6330)
!6369 = !DILocation(line: 1531, column: 20, scope: !6330)
!6370 = !DILocation(line: 1531, column: 24, scope: !6330)
!6371 = !DILocation(line: 1531, column: 5, scope: !6330)
!6372 = !DILocation(line: 1532, column: 9, scope: !6330)
!6373 = !DILocation(line: 1532, column: 13, scope: !6330)
!6374 = !DILocation(line: 1532, column: 17, scope: !6330)
!6375 = !DILocation(line: 1532, column: 7, scope: !6330)
!6376 = !DILocalVariable(name: "__ret_warn_on", scope: !6377, file: !3, line: 1539, type: !224)
!6377 = distinct !DILexicalBlock(scope: !6378, file: !3, line: 1539, column: 6)
!6378 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 1539, column: 6)
!6379 = !DILocation(line: 1539, column: 6, scope: !6377)
!6380 = !DILocation(line: 0, scope: !6377)
!6381 = !DILocation(line: 1539, column: 6, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6377, file: !3, line: 1539, column: 6)
!6383 = !DILocation(line: 1539, column: 6, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6382, file: !3, line: 1539, column: 6)
!6385 = !DILocation(line: 1539, column: 6, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6384, file: !3, line: 1539, column: 6)
!6387 = !DILocation(line: 1539, column: 6, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6384, file: !3, line: 1539, column: 6)
!6389 = !DILocation(line: 1539, column: 6, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 1539, column: 6)
!6391 = !DILocation(line: 1539, column: 6, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 1539, column: 6)
!6393 = !{i32 -2141419522, i32 -2141419493, i32 -2141419447, i32 -2141419389, i32 -2141419335, i32 -2141419281, i32 -2141419226, i32 -2141419195}
!6394 = !DILocation(line: 1539, column: 6, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 1539, column: 6)
!6396 = !{i32 -2141418779, i32 -2141418772, i32 -2141418720, i32 -2141418689, i32 -2141418659}
!6397 = !DILocation(line: 1539, column: 6, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 1539, column: 6)
!6399 = !DILocation(line: 1539, column: 6, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6384, file: !3, line: 1539, column: 6)
!6401 = !DILocation(line: 1539, column: 6, scope: !6378)
!6402 = !DILocation(line: 1539, column: 6, scope: !6330)
!6403 = !DILocation(line: 1541, column: 8, scope: !6378)
!6404 = !DILocation(line: 1541, column: 3, scope: !6378)
!6405 = !DILocation(line: 1543, column: 25, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 1543, column: 6)
!6407 = !DILocation(line: 1543, column: 29, scope: !6406)
!6408 = !DILocation(line: 1543, column: 6, scope: !6406)
!6409 = !DILocation(line: 1543, column: 37, scope: !6406)
!6410 = !DILocation(line: 1543, column: 40, scope: !6406)
!6411 = !DILocation(line: 1543, column: 45, scope: !6406)
!6412 = !DILocation(line: 1543, column: 6, scope: !6330)
!6413 = !DILocalVariable(name: "__to_acpi_device_node_fwnode", scope: !6414, file: !3, line: 1544, type: !3631)
!6414 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 1544, column: 3)
!6415 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 1543, column: 63)
!6416 = !DILocation(line: 1544, column: 3, scope: !6414)
!6417 = !DILocalVariable(name: "__mptr", scope: !6418, file: !3, line: 1544, type: !218)
!6418 = distinct !DILexicalBlock(scope: !6414, file: !3, line: 1544, column: 3)
!6419 = !DILocation(line: 1544, column: 3, scope: !6418)
!6420 = !DILocation(line: 1544, column: 3, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6418, file: !3, line: 1544, column: 3)
!6422 = !DILocation(line: 1544, column: 3, scope: !6415)
!6423 = !DILocation(line: 1546, column: 8, scope: !6415)
!6424 = !DILocation(line: 1547, column: 2, scope: !6415)
!6425 = !DILocation(line: 1549, column: 2, scope: !6330)
!6426 = !DILocation(line: 1549, column: 6, scope: !6330)
!6427 = !DILocation(line: 1549, column: 13, scope: !6330)
!6428 = !DILocation(line: 1550, column: 25, scope: !6330)
!6429 = !DILocation(line: 1550, column: 2, scope: !6330)
!6430 = !DILocation(line: 1550, column: 6, scope: !6330)
!6431 = !DILocation(line: 1550, column: 10, scope: !6330)
!6432 = !DILocation(line: 1550, column: 23, scope: !6330)
!6433 = !DILocation(line: 1551, column: 21, scope: !6330)
!6434 = !DILocation(line: 1551, column: 2, scope: !6330)
!6435 = !DILocation(line: 1551, column: 6, scope: !6330)
!6436 = !DILocation(line: 1551, column: 10, scope: !6330)
!6437 = !DILocation(line: 1551, column: 19, scope: !6330)
!6438 = !DILocation(line: 1552, column: 24, scope: !6330)
!6439 = !DILocation(line: 1552, column: 2, scope: !6330)
!6440 = !DILocation(line: 1552, column: 6, scope: !6330)
!6441 = !DILocation(line: 1552, column: 10, scope: !6330)
!6442 = !DILocation(line: 1552, column: 22, scope: !6330)
!6443 = !DILocation(line: 1555, column: 41, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 1555, column: 6)
!6445 = !DILocation(line: 1555, column: 6, scope: !6444)
!6446 = !DILocation(line: 1555, column: 6, scope: !6330)
!6447 = !DILocalVariable(name: "ret", scope: !6448, file: !3, line: 1556, type: !224)
!6448 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 1555, column: 46)
!6449 = !DILocation(line: 1556, column: 7, scope: !6448)
!6450 = !DILocation(line: 1556, column: 43, scope: !6448)
!6451 = !DILocation(line: 1556, column: 13, scope: !6448)
!6452 = !DILocation(line: 1557, column: 7, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6448, file: !3, line: 1557, column: 7)
!6454 = !DILocation(line: 1557, column: 7, scope: !6448)
!6455 = !DILocation(line: 1558, column: 11, scope: !6453)
!6456 = !DILocation(line: 1558, column: 4, scope: !6453)
!6457 = !DILocation(line: 1559, column: 2, scope: !6448)
!6458 = !DILocation(line: 1561, column: 7, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 1561, column: 7)
!6460 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 1559, column: 9)
!6461 = !DILocation(line: 1561, column: 11, scope: !6459)
!6462 = !DILocation(line: 1561, column: 15, scope: !6459)
!6463 = !DILocation(line: 1561, column: 7, scope: !6460)
!6464 = !DILocation(line: 1562, column: 10, scope: !6459)
!6465 = !DILocation(line: 1562, column: 14, scope: !6459)
!6466 = !DILocation(line: 1562, column: 18, scope: !6459)
!6467 = !DILocation(line: 1562, column: 8, scope: !6459)
!6468 = !DILocation(line: 1562, column: 4, scope: !6459)
!6469 = !DILocation(line: 1564, column: 8, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 1564, column: 7)
!6471 = !DILocation(line: 1564, column: 7, scope: !6460)
!6472 = !DILocation(line: 1565, column: 8, scope: !6470)
!6473 = !DILocation(line: 1565, column: 4, scope: !6470)
!6474 = !DILocation(line: 1566, column: 42, scope: !6460)
!6475 = !DILocation(line: 1567, column: 4, scope: !6460)
!6476 = !DILocation(line: 1567, column: 8, scope: !6460)
!6477 = !DILocation(line: 1568, column: 4, scope: !6460)
!6478 = !DILocation(line: 1568, column: 8, scope: !6460)
!6479 = !DILocation(line: 1568, column: 12, scope: !6460)
!6480 = !DILocation(line: 1569, column: 4, scope: !6460)
!6481 = !DILocation(line: 1569, column: 9, scope: !6460)
!6482 = !DILocation(line: 1566, column: 20, scope: !6460)
!6483 = !DILocation(line: 1566, column: 3, scope: !6460)
!6484 = !DILocation(line: 1566, column: 7, scope: !6460)
!6485 = !DILocation(line: 1566, column: 11, scope: !6460)
!6486 = !DILocation(line: 1566, column: 18, scope: !6460)
!6487 = !DILocation(line: 1570, column: 8, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 1570, column: 7)
!6489 = !DILocation(line: 1570, column: 12, scope: !6488)
!6490 = !DILocation(line: 1570, column: 16, scope: !6488)
!6491 = !DILocation(line: 1570, column: 7, scope: !6460)
!6492 = !DILocation(line: 1571, column: 4, scope: !6488)
!6493 = !DILocation(line: 1574, column: 6, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 1574, column: 6)
!6495 = !DILocation(line: 1574, column: 10, scope: !6494)
!6496 = !DILocation(line: 1574, column: 14, scope: !6494)
!6497 = !DILocation(line: 1574, column: 6, scope: !6330)
!6498 = !DILocalVariable(name: "data", scope: !6499, file: !3, line: 1575, type: !218)
!6499 = distinct !DILexicalBlock(scope: !6494, file: !3, line: 1574, column: 30)
!6500 = !DILocation(line: 1575, column: 9, scope: !6499)
!6501 = !DILocation(line: 1575, column: 16, scope: !6499)
!6502 = !DILocation(line: 1575, column: 20, scope: !6499)
!6503 = !DILocation(line: 1575, column: 24, scope: !6499)
!6504 = !DILocation(line: 1575, column: 47, scope: !6499)
!6505 = !DILocation(line: 1577, column: 10, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6499, file: !3, line: 1577, column: 3)
!6507 = !DILocation(line: 1577, column: 8, scope: !6506)
!6508 = !DILocation(line: 1577, column: 15, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6506, file: !3, line: 1577, column: 3)
!6510 = !DILocation(line: 1577, column: 19, scope: !6509)
!6511 = !DILocation(line: 1577, column: 23, scope: !6509)
!6512 = !DILocation(line: 1577, column: 27, scope: !6509)
!6513 = !DILocation(line: 1577, column: 17, scope: !6509)
!6514 = !DILocation(line: 1577, column: 3, scope: !6506)
!6515 = !DILocation(line: 1583, column: 37, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 1577, column: 45)
!6517 = !DILocation(line: 1583, column: 41, scope: !6516)
!6518 = !DILocation(line: 1583, column: 45, scope: !6516)
!6519 = !DILocation(line: 1583, column: 53, scope: !6516)
!6520 = !DILocation(line: 1584, column: 9, scope: !6516)
!6521 = !DILocation(line: 1584, column: 13, scope: !6516)
!6522 = !DILocation(line: 1584, column: 17, scope: !6516)
!6523 = !DILocation(line: 1585, column: 9, scope: !6516)
!6524 = !DILocation(line: 1583, column: 4, scope: !6516)
!6525 = !DILocation(line: 1586, column: 3, scope: !6516)
!6526 = !DILocation(line: 1577, column: 41, scope: !6509)
!6527 = !DILocation(line: 1577, column: 3, scope: !6509)
!6528 = distinct !{!6528, !6514, !6529}
!6529 = !DILocation(line: 1586, column: 3, scope: !6506)
!6530 = !DILocation(line: 1587, column: 2, scope: !6499)
!6531 = !DILocation(line: 1589, column: 25, scope: !6330)
!6532 = !DILocation(line: 1589, column: 2, scope: !6330)
!6533 = !DILocation(line: 1591, column: 35, scope: !6330)
!6534 = !DILocation(line: 1591, column: 2, scope: !6330)
!6535 = !DILocation(line: 1593, column: 2, scope: !6330)
!6536 = !DILocation(line: 1594, column: 1, scope: !6330)
!6537 = distinct !DISubprogram(name: "gpiochip_setup_dev", scope: !3, file: !3, line: 495, type: !5929, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!6538 = !DILocalVariable(name: "gdev", arg: 1, scope: !6537, file: !3, line: 495, type: !219)
!6539 = !DILocation(line: 495, column: 51, scope: !6537)
!6540 = !DILocalVariable(name: "ret", scope: !6537, file: !3, line: 497, type: !224)
!6541 = !DILocation(line: 497, column: 6, scope: !6537)
!6542 = !DILocation(line: 499, column: 8, scope: !6537)
!6543 = !DILocation(line: 499, column: 6, scope: !6537)
!6544 = !DILocation(line: 500, column: 6, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6537, file: !3, line: 500, column: 6)
!6546 = !DILocation(line: 500, column: 6, scope: !6537)
!6547 = !DILocation(line: 501, column: 10, scope: !6545)
!6548 = !DILocation(line: 501, column: 3, scope: !6545)
!6549 = !DILocation(line: 503, column: 32, scope: !6537)
!6550 = !DILocation(line: 503, column: 8, scope: !6537)
!6551 = !DILocation(line: 503, column: 6, scope: !6537)
!6552 = !DILocation(line: 504, column: 6, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6537, file: !3, line: 504, column: 6)
!6554 = !DILocation(line: 504, column: 6, scope: !6537)
!6555 = !DILocation(line: 505, column: 3, scope: !6553)
!6556 = !DILocation(line: 508, column: 2, scope: !6537)
!6557 = !DILocation(line: 508, column: 8, scope: !6537)
!6558 = !DILocation(line: 508, column: 12, scope: !6537)
!6559 = !DILocation(line: 508, column: 20, scope: !6537)
!6560 = !DILocation(line: 512, column: 2, scope: !6537)
!6561 = !DILabel(scope: !6537, name: "err_remove_device", file: !3, line: 514)
!6562 = !DILocation(line: 514, column: 1, scope: !6537)
!6563 = !DILocation(line: 515, column: 2, scope: !6537)
!6564 = !DILocation(line: 516, column: 9, scope: !6537)
!6565 = !DILocation(line: 516, column: 2, scope: !6537)
!6566 = !DILocation(line: 517, column: 1, scope: !6537)
!6567 = distinct !DISubprogram(name: "gpiochip_irqchip_remove", scope: !3, file: !3, line: 1602, type: !6244, scopeLine: 1603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!6568 = !DILocalVariable(name: "gc", arg: 1, scope: !6567, file: !3, line: 1602, type: !4096)
!6569 = !DILocation(line: 1602, column: 55, scope: !6567)
!6570 = !DILocalVariable(name: "irqchip", scope: !6567, file: !3, line: 1604, type: !3790)
!6571 = !DILocation(line: 1604, column: 19, scope: !6567)
!6572 = !DILocation(line: 1604, column: 29, scope: !6567)
!6573 = !DILocation(line: 1604, column: 33, scope: !6567)
!6574 = !DILocation(line: 1604, column: 37, scope: !6567)
!6575 = !DILocalVariable(name: "offset", scope: !6567, file: !3, line: 1605, type: !7)
!6576 = !DILocation(line: 1605, column: 15, scope: !6567)
!6577 = !DILocation(line: 1607, column: 32, scope: !6567)
!6578 = !DILocation(line: 1607, column: 2, scope: !6567)
!6579 = !DILocation(line: 1609, column: 6, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 1609, column: 6)
!6581 = !DILocation(line: 1609, column: 14, scope: !6580)
!6582 = !DILocation(line: 1609, column: 17, scope: !6580)
!6583 = !DILocation(line: 1609, column: 21, scope: !6580)
!6584 = !DILocation(line: 1609, column: 25, scope: !6580)
!6585 = !DILocation(line: 1609, column: 6, scope: !6567)
!6586 = !DILocalVariable(name: "irq", scope: !6587, file: !3, line: 1610, type: !6285)
!6587 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 1609, column: 41)
!6588 = !DILocation(line: 1610, column: 25, scope: !6587)
!6589 = !DILocation(line: 1610, column: 32, scope: !6587)
!6590 = !DILocation(line: 1610, column: 36, scope: !6587)
!6591 = !DILocalVariable(name: "i", scope: !6587, file: !3, line: 1611, type: !7)
!6592 = !DILocation(line: 1611, column: 16, scope: !6587)
!6593 = !DILocation(line: 1613, column: 10, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6587, file: !3, line: 1613, column: 3)
!6595 = !DILocation(line: 1613, column: 8, scope: !6594)
!6596 = !DILocation(line: 1613, column: 15, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 1613, column: 3)
!6598 = !DILocation(line: 1613, column: 19, scope: !6597)
!6599 = !DILocation(line: 1613, column: 24, scope: !6597)
!6600 = !DILocation(line: 1613, column: 17, scope: !6597)
!6601 = !DILocation(line: 1613, column: 3, scope: !6594)
!6602 = !DILocation(line: 1614, column: 37, scope: !6597)
!6603 = !DILocation(line: 1614, column: 42, scope: !6597)
!6604 = !DILocation(line: 1614, column: 50, scope: !6597)
!6605 = !DILocation(line: 1614, column: 4, scope: !6597)
!6606 = !DILocation(line: 1613, column: 38, scope: !6597)
!6607 = !DILocation(line: 1613, column: 3, scope: !6597)
!6608 = distinct !{!6608, !6601, !6609}
!6609 = !DILocation(line: 1615, column: 19, scope: !6594)
!6610 = !DILocation(line: 1616, column: 2, scope: !6587)
!6611 = !DILocation(line: 1619, column: 6, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 1619, column: 6)
!6613 = !DILocation(line: 1619, column: 10, scope: !6612)
!6614 = !DILocation(line: 1619, column: 14, scope: !6612)
!6615 = !DILocation(line: 1619, column: 6, scope: !6567)
!6616 = !DILocalVariable(name: "irq", scope: !6617, file: !3, line: 1620, type: !7)
!6617 = distinct !DILexicalBlock(scope: !6612, file: !3, line: 1619, column: 22)
!6618 = !DILocation(line: 1620, column: 16, scope: !6617)
!6619 = !DILocation(line: 1622, column: 15, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 1622, column: 3)
!6621 = !DILocation(line: 1622, column: 8, scope: !6620)
!6622 = !DILocation(line: 1622, column: 20, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 1622, column: 3)
!6624 = !DILocation(line: 1622, column: 29, scope: !6623)
!6625 = !DILocation(line: 1622, column: 33, scope: !6623)
!6626 = !DILocation(line: 1622, column: 27, scope: !6623)
!6627 = !DILocation(line: 1622, column: 3, scope: !6620)
!6628 = !DILocation(line: 1623, column: 36, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6630, file: !3, line: 1623, column: 8)
!6630 = distinct !DILexicalBlock(scope: !6623, file: !3, line: 1622, column: 50)
!6631 = !DILocation(line: 1623, column: 40, scope: !6629)
!6632 = !DILocation(line: 1623, column: 9, scope: !6629)
!6633 = !DILocation(line: 1623, column: 8, scope: !6630)
!6634 = !DILocation(line: 1624, column: 5, scope: !6629)
!6635 = !DILocation(line: 1626, column: 27, scope: !6630)
!6636 = !DILocation(line: 1626, column: 31, scope: !6630)
!6637 = !DILocation(line: 1626, column: 35, scope: !6630)
!6638 = !DILocation(line: 1626, column: 43, scope: !6630)
!6639 = !DILocation(line: 1626, column: 10, scope: !6630)
!6640 = !DILocation(line: 1626, column: 8, scope: !6630)
!6641 = !DILocation(line: 1627, column: 24, scope: !6630)
!6642 = !DILocation(line: 1627, column: 4, scope: !6630)
!6643 = !DILocation(line: 1628, column: 3, scope: !6630)
!6644 = !DILocation(line: 1622, column: 46, scope: !6623)
!6645 = !DILocation(line: 1622, column: 3, scope: !6623)
!6646 = distinct !{!6646, !6627, !6647}
!6647 = !DILocation(line: 1628, column: 3, scope: !6620)
!6648 = !DILocation(line: 1630, column: 21, scope: !6617)
!6649 = !DILocation(line: 1630, column: 25, scope: !6617)
!6650 = !DILocation(line: 1630, column: 29, scope: !6617)
!6651 = !DILocation(line: 1630, column: 3, scope: !6617)
!6652 = !DILocation(line: 1631, column: 2, scope: !6617)
!6653 = !DILocation(line: 1633, column: 6, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 1633, column: 6)
!6655 = !DILocation(line: 1633, column: 6, scope: !6567)
!6656 = !DILocation(line: 1634, column: 7, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 1634, column: 7)
!6658 = distinct !DILexicalBlock(scope: !6654, file: !3, line: 1633, column: 15)
!6659 = !DILocation(line: 1634, column: 16, scope: !6657)
!6660 = !DILocation(line: 1634, column: 38, scope: !6657)
!6661 = !DILocation(line: 1634, column: 7, scope: !6658)
!6662 = !DILocation(line: 1635, column: 4, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6657, file: !3, line: 1634, column: 62)
!6664 = !DILocation(line: 1635, column: 13, scope: !6663)
!6665 = !DILocation(line: 1635, column: 35, scope: !6663)
!6666 = !DILocation(line: 1636, column: 4, scope: !6663)
!6667 = !DILocation(line: 1636, column: 13, scope: !6663)
!6668 = !DILocation(line: 1636, column: 35, scope: !6663)
!6669 = !DILocation(line: 1637, column: 3, scope: !6663)
!6670 = !DILocation(line: 1638, column: 7, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 1638, column: 7)
!6672 = !DILocation(line: 1638, column: 16, scope: !6671)
!6673 = !DILocation(line: 1638, column: 27, scope: !6671)
!6674 = !DILocation(line: 1638, column: 7, scope: !6658)
!6675 = !DILocation(line: 1639, column: 26, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6671, file: !3, line: 1638, column: 51)
!6677 = !DILocation(line: 1639, column: 30, scope: !6676)
!6678 = !DILocation(line: 1639, column: 34, scope: !6676)
!6679 = !DILocation(line: 1639, column: 4, scope: !6676)
!6680 = !DILocation(line: 1639, column: 13, scope: !6676)
!6681 = !DILocation(line: 1639, column: 24, scope: !6676)
!6682 = !DILocation(line: 1640, column: 27, scope: !6676)
!6683 = !DILocation(line: 1640, column: 31, scope: !6676)
!6684 = !DILocation(line: 1640, column: 35, scope: !6676)
!6685 = !DILocation(line: 1640, column: 4, scope: !6676)
!6686 = !DILocation(line: 1640, column: 13, scope: !6676)
!6687 = !DILocation(line: 1640, column: 25, scope: !6676)
!6688 = !DILocation(line: 1641, column: 3, scope: !6676)
!6689 = !DILocation(line: 1642, column: 2, scope: !6658)
!6690 = !DILocation(line: 1643, column: 2, scope: !6567)
!6691 = !DILocation(line: 1643, column: 6, scope: !6567)
!6692 = !DILocation(line: 1643, column: 10, scope: !6567)
!6693 = !DILocation(line: 1643, column: 21, scope: !6567)
!6694 = !DILocation(line: 1644, column: 2, scope: !6567)
!6695 = !DILocation(line: 1644, column: 6, scope: !6567)
!6696 = !DILocation(line: 1644, column: 10, scope: !6567)
!6697 = !DILocation(line: 1644, column: 22, scope: !6567)
!6698 = !DILocation(line: 1645, column: 2, scope: !6567)
!6699 = !DILocation(line: 1645, column: 6, scope: !6567)
!6700 = !DILocation(line: 1645, column: 10, scope: !6567)
!6701 = !DILocation(line: 1645, column: 15, scope: !6567)
!6702 = !DILocation(line: 1647, column: 35, scope: !6567)
!6703 = !DILocation(line: 1647, column: 2, scope: !6567)
!6704 = !DILocation(line: 1648, column: 1, scope: !6567)
!6705 = distinct !DISubprogram(name: "gpiochip_irqchip_free_valid_mask", scope: !3, file: !3, line: 921, type: !6244, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!6706 = !DILocalVariable(name: "gc", arg: 1, scope: !6705, file: !3, line: 921, type: !4096)
!6707 = !DILocation(line: 921, column: 64, scope: !6705)
!6708 = !DILocation(line: 923, column: 14, scope: !6705)
!6709 = !DILocation(line: 923, column: 18, scope: !6705)
!6710 = !DILocation(line: 923, column: 22, scope: !6705)
!6711 = !DILocation(line: 923, column: 2, scope: !6705)
!6712 = !DILocation(line: 924, column: 2, scope: !6705)
!6713 = !DILocation(line: 924, column: 6, scope: !6705)
!6714 = !DILocation(line: 924, column: 10, scope: !6705)
!6715 = !DILocation(line: 924, column: 21, scope: !6705)
!6716 = !DILocation(line: 925, column: 1, scope: !6705)
!6717 = distinct !DISubprogram(name: "gpiochip_free_hogs", scope: !3, file: !3, line: 4150, type: !6244, scopeLine: 4151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!6718 = !DILocalVariable(name: "gc", arg: 1, scope: !6717, file: !3, line: 4150, type: !4096)
!6719 = !DILocation(line: 4150, column: 50, scope: !6717)
!6720 = !DILocalVariable(name: "id", scope: !6717, file: !3, line: 4152, type: !224)
!6721 = !DILocation(line: 4152, column: 6, scope: !6717)
!6722 = !DILocation(line: 4154, column: 10, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6717, file: !3, line: 4154, column: 2)
!6724 = !DILocation(line: 4154, column: 7, scope: !6723)
!6725 = !DILocation(line: 4154, column: 15, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6723, file: !3, line: 4154, column: 2)
!6727 = !DILocation(line: 4154, column: 20, scope: !6726)
!6728 = !DILocation(line: 4154, column: 24, scope: !6726)
!6729 = !DILocation(line: 4154, column: 18, scope: !6726)
!6730 = !DILocation(line: 4154, column: 2, scope: !6723)
!6731 = !DILocation(line: 4155, column: 33, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6733, file: !3, line: 4155, column: 7)
!6733 = distinct !DILexicalBlock(scope: !6726, file: !3, line: 4154, column: 37)
!6734 = !DILocation(line: 4155, column: 37, scope: !6732)
!6735 = !DILocation(line: 4155, column: 46, scope: !6732)
!6736 = !DILocation(line: 4155, column: 52, scope: !6732)
!6737 = !DILocation(line: 4155, column: 56, scope: !6732)
!6738 = !DILocation(line: 4155, column: 7, scope: !6732)
!6739 = !DILocation(line: 4155, column: 7, scope: !6733)
!6740 = !DILocation(line: 4156, column: 28, scope: !6732)
!6741 = !DILocation(line: 4156, column: 32, scope: !6732)
!6742 = !DILocation(line: 4156, column: 41, scope: !6732)
!6743 = !DILocation(line: 4156, column: 47, scope: !6732)
!6744 = !DILocation(line: 4156, column: 4, scope: !6732)
!6745 = !DILocation(line: 4157, column: 2, scope: !6733)
!6746 = !DILocation(line: 4154, column: 33, scope: !6726)
!6747 = !DILocation(line: 4154, column: 2, scope: !6726)
!6748 = distinct !{!6748, !6730, !6749}
!6749 = !DILocation(line: 4157, column: 2, scope: !6723)
!6750 = !DILocation(line: 4158, column: 1, scope: !6717)
!6751 = distinct !DISubprogram(name: "gpiochip_remove_pin_ranges", scope: !4098, file: !4098, line: 746, type: !6244, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!6752 = !DILocalVariable(name: "gc", arg: 1, scope: !6751, file: !4098, line: 746, type: !4096)
!6753 = !DILocation(line: 746, column: 46, scope: !6751)
!6754 = !DILocation(line: 748, column: 1, scope: !6751)
!6755 = distinct !DISubprogram(name: "gpiochip_free_valid_mask", scope: !3, file: !3, line: 448, type: !6244, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!6756 = !DILocalVariable(name: "gc", arg: 1, scope: !6755, file: !3, line: 448, type: !4096)
!6757 = !DILocation(line: 448, column: 56, scope: !6755)
!6758 = !DILocation(line: 450, column: 14, scope: !6755)
!6759 = !DILocation(line: 450, column: 18, scope: !6755)
!6760 = !DILocation(line: 450, column: 2, scope: !6755)
!6761 = !DILocation(line: 451, column: 2, scope: !6755)
!6762 = !DILocation(line: 451, column: 6, scope: !6755)
!6763 = !DILocation(line: 451, column: 17, scope: !6755)
!6764 = !DILocation(line: 452, column: 1, scope: !6755)
!6765 = distinct !DISubprogram(name: "list_del", scope: !6766, file: !6766, line: 144, type: !6767, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!6766 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!6767 = !DISubroutineType(types: !6768)
!6768 = !{null, !241}
!6769 = !DILocalVariable(name: "entry", arg: 1, scope: !6765, file: !6766, line: 144, type: !241)
!6770 = !DILocation(line: 144, column: 47, scope: !6765)
!6771 = !DILocation(line: 146, column: 19, scope: !6765)
!6772 = !DILocation(line: 146, column: 2, scope: !6765)
!6773 = !DILocation(line: 147, column: 2, scope: !6765)
!6774 = !DILocation(line: 147, column: 9, scope: !6765)
!6775 = !DILocation(line: 147, column: 14, scope: !6765)
!6776 = !DILocation(line: 148, column: 2, scope: !6765)
!6777 = !DILocation(line: 148, column: 9, scope: !6765)
!6778 = !DILocation(line: 148, column: 14, scope: !6765)
!6779 = !DILocation(line: 149, column: 1, scope: !6765)
!6780 = distinct !DISubprogram(name: "gpiochip_get_data", scope: !3, file: !3, line: 789, type: !6781, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!6781 = !DISubroutineType(types: !6782)
!6782 = !{!218, !4096}
!6783 = !DILocalVariable(name: "gc", arg: 1, scope: !6780, file: !3, line: 789, type: !4096)
!6784 = !DILocation(line: 789, column: 43, scope: !6780)
!6785 = !DILocation(line: 791, column: 9, scope: !6780)
!6786 = !DILocation(line: 791, column: 13, scope: !6780)
!6787 = !DILocation(line: 791, column: 22, scope: !6780)
!6788 = !DILocation(line: 791, column: 2, scope: !6780)
!6789 = distinct !DISubprogram(name: "gpiochip_remove", scope: !3, file: !3, line: 801, type: !6244, scopeLine: 802, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!6790 = !DILocation(line: 407, column: 64, scope: !4629, inlinedAt: !6791)
!6791 = distinct !DILocation(line: 828, column: 2, scope: !6789)
!6792 = !DILocation(line: 407, column: 84, scope: !4629, inlinedAt: !6791)
!6793 = !DILocation(line: 327, column: 67, scope: !4647, inlinedAt: !6794)
!6794 = distinct !DILocation(line: 823, column: 2, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6796, file: !3, line: 823, column: 2)
!6796 = distinct !DILexicalBlock(scope: !6797, file: !3, line: 823, column: 2)
!6797 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 823, column: 2)
!6798 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 823, column: 2)
!6799 = distinct !DILexicalBlock(scope: !6789, file: !3, line: 823, column: 2)
!6800 = !DILocalVariable(name: "gc", arg: 1, scope: !6789, file: !3, line: 801, type: !4096)
!6801 = !DILocation(line: 801, column: 40, scope: !6789)
!6802 = !DILocalVariable(name: "gdev", scope: !6789, file: !3, line: 803, type: !219)
!6803 = !DILocation(line: 803, column: 22, scope: !6789)
!6804 = !DILocation(line: 803, column: 29, scope: !6789)
!6805 = !DILocation(line: 803, column: 33, scope: !6789)
!6806 = !DILocalVariable(name: "flags", scope: !6789, file: !3, line: 804, type: !342)
!6807 = !DILocation(line: 804, column: 16, scope: !6789)
!6808 = !DILocalVariable(name: "i", scope: !6789, file: !3, line: 805, type: !7)
!6809 = !DILocation(line: 805, column: 15, scope: !6789)
!6810 = !DILocation(line: 808, column: 28, scope: !6789)
!6811 = !DILocation(line: 808, column: 2, scope: !6789)
!6812 = !DILocation(line: 809, column: 21, scope: !6789)
!6813 = !DILocation(line: 809, column: 2, scope: !6789)
!6814 = !DILocation(line: 811, column: 2, scope: !6789)
!6815 = !DILocation(line: 811, column: 8, scope: !6789)
!6816 = !DILocation(line: 811, column: 13, scope: !6789)
!6817 = !DILocation(line: 812, column: 26, scope: !6789)
!6818 = !DILocation(line: 812, column: 2, scope: !6789)
!6819 = !DILocation(line: 813, column: 23, scope: !6789)
!6820 = !DILocation(line: 813, column: 2, scope: !6789)
!6821 = !DILocation(line: 814, column: 21, scope: !6789)
!6822 = !DILocation(line: 814, column: 2, scope: !6789)
!6823 = !DILocation(line: 815, column: 29, scope: !6789)
!6824 = !DILocation(line: 815, column: 2, scope: !6789)
!6825 = !DILocation(line: 816, column: 27, scope: !6789)
!6826 = !DILocation(line: 816, column: 2, scope: !6789)
!6827 = !DILocation(line: 821, column: 2, scope: !6789)
!6828 = !DILocation(line: 821, column: 8, scope: !6789)
!6829 = !DILocation(line: 821, column: 13, scope: !6789)
!6830 = !DILocation(line: 823, column: 2, scope: !6789)
!6831 = !DILocation(line: 823, column: 2, scope: !6799)
!6832 = !DILocalVariable(name: "__dummy", scope: !6833, file: !3, line: 823, type: !342)
!6833 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 823, column: 2)
!6834 = !DILocation(line: 823, column: 2, scope: !6833)
!6835 = !DILocalVariable(name: "__dummy2", scope: !6833, file: !3, line: 823, type: !342)
!6836 = !DILocation(line: 823, column: 2, scope: !6798)
!6837 = !DILocation(line: 823, column: 2, scope: !6797)
!6838 = !DILocation(line: 823, column: 2, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6797, file: !3, line: 823, column: 2)
!6840 = !DILocalVariable(name: "__dummy", scope: !6841, file: !3, line: 823, type: !342)
!6841 = distinct !DILexicalBlock(scope: !6842, file: !3, line: 823, column: 2)
!6842 = distinct !DILexicalBlock(scope: !6839, file: !3, line: 823, column: 2)
!6843 = !DILocation(line: 823, column: 2, scope: !6841)
!6844 = !DILocalVariable(name: "__dummy2", scope: !6841, file: !3, line: 823, type: !342)
!6845 = !DILocation(line: 823, column: 2, scope: !6842)
!6846 = !DILocation(line: 823, column: 2, scope: !6796)
!6847 = !{i32 -2141436590}
!6848 = !DILocation(line: 329, column: 10, scope: !4647, inlinedAt: !6794)
!6849 = !DILocation(line: 329, column: 16, scope: !4647, inlinedAt: !6794)
!6850 = !DILocation(line: 823, column: 2, scope: !6795)
!6851 = !DILocation(line: 824, column: 9, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6789, file: !3, line: 824, column: 2)
!6853 = !DILocation(line: 824, column: 7, scope: !6852)
!6854 = !DILocation(line: 824, column: 14, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6852, file: !3, line: 824, column: 2)
!6856 = !DILocation(line: 824, column: 18, scope: !6855)
!6857 = !DILocation(line: 824, column: 24, scope: !6855)
!6858 = !DILocation(line: 824, column: 16, scope: !6855)
!6859 = !DILocation(line: 824, column: 2, scope: !6852)
!6860 = !DILocation(line: 825, column: 29, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6862, file: !3, line: 825, column: 7)
!6862 = distinct !DILexicalBlock(scope: !6855, file: !3, line: 824, column: 36)
!6863 = !DILocation(line: 825, column: 33, scope: !6861)
!6864 = !DILocation(line: 825, column: 7, scope: !6861)
!6865 = !DILocation(line: 825, column: 7, scope: !6862)
!6866 = !DILocation(line: 826, column: 4, scope: !6861)
!6867 = !DILocation(line: 827, column: 2, scope: !6862)
!6868 = !DILocation(line: 824, column: 32, scope: !6855)
!6869 = !DILocation(line: 824, column: 2, scope: !6855)
!6870 = distinct !{!6870, !6859, !6871}
!6871 = !DILocation(line: 827, column: 2, scope: !6852)
!6872 = !DILocation(line: 828, column: 37, scope: !6789)
!6873 = !DILocation(line: 409, column: 2, scope: !4707, inlinedAt: !6791)
!6874 = !DILocation(line: 409, column: 2, scope: !4712, inlinedAt: !6791)
!6875 = !DILocation(line: 409, column: 2, scope: !4713, inlinedAt: !6791)
!6876 = !DILocation(line: 409, column: 2, scope: !4720, inlinedAt: !6791)
!6877 = !DILocation(line: 409, column: 2, scope: !4723, inlinedAt: !6791)
!6878 = !DILocation(line: 830, column: 6, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6789, file: !3, line: 830, column: 6)
!6880 = !DILocation(line: 830, column: 11, scope: !6879)
!6881 = !DILocation(line: 830, column: 17, scope: !6879)
!6882 = !DILocation(line: 830, column: 8, scope: !6879)
!6883 = !DILocation(line: 830, column: 6, scope: !6789)
!6884 = !DILocation(line: 831, column: 3, scope: !6879)
!6885 = !DILocation(line: 840, column: 2, scope: !6789)
!6886 = !DILocation(line: 841, column: 14, scope: !6789)
!6887 = !DILocation(line: 841, column: 20, scope: !6789)
!6888 = !DILocation(line: 841, column: 2, scope: !6789)
!6889 = !DILocation(line: 842, column: 1, scope: !6789)
!6890 = distinct !DISubprogram(name: "gpiochip_sysfs_unregister", scope: !6891, file: !6891, line: 18, type: !6892, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!6891 = !DIFile(filename: "drivers/gpio/gpiolib-sysfs.h", directory: "/home/lizy2001/genbc/linux")
!6892 = !DISubroutineType(types: !6893)
!6893 = !{null, !219}
!6894 = !DILocalVariable(name: "gdev", arg: 1, scope: !6890, file: !6891, line: 18, type: !219)
!6895 = !DILocation(line: 18, column: 66, scope: !6890)
!6896 = !DILocation(line: 20, column: 1, scope: !6890)
!6897 = distinct !DISubprogram(name: "gpiochip_is_requested", scope: !3, file: !3, line: 2154, type: !6898, scopeLine: 2155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!6898 = !DISubroutineType(types: !6899)
!6899 = !{!233, !4096, !7}
!6900 = !DILocalVariable(name: "gc", arg: 1, scope: !6897, file: !3, line: 2154, type: !4096)
!6901 = !DILocation(line: 2154, column: 53, scope: !6897)
!6902 = !DILocalVariable(name: "offset", arg: 2, scope: !6897, file: !3, line: 2154, type: !7)
!6903 = !DILocation(line: 2154, column: 66, scope: !6897)
!6904 = !DILocalVariable(name: "desc", scope: !6897, file: !3, line: 2156, type: !4232)
!6905 = !DILocation(line: 2156, column: 20, scope: !6897)
!6906 = !DILocation(line: 2158, column: 6, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6897, file: !3, line: 2158, column: 6)
!6908 = !DILocation(line: 2158, column: 16, scope: !6907)
!6909 = !DILocation(line: 2158, column: 20, scope: !6907)
!6910 = !DILocation(line: 2158, column: 13, scope: !6907)
!6911 = !DILocation(line: 2158, column: 6, scope: !6897)
!6912 = !DILocation(line: 2159, column: 3, scope: !6907)
!6913 = !DILocation(line: 2161, column: 27, scope: !6897)
!6914 = !DILocation(line: 2161, column: 31, scope: !6897)
!6915 = !DILocation(line: 2161, column: 9, scope: !6897)
!6916 = !DILocation(line: 2161, column: 7, scope: !6897)
!6917 = !DILocation(line: 2162, column: 13, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6897, file: !3, line: 2162, column: 6)
!6919 = !DILocation(line: 2162, column: 6, scope: !6918)
!6920 = !DILocation(line: 2162, column: 6, scope: !6897)
!6921 = !DILocation(line: 2163, column: 3, scope: !6918)
!6922 = !DILocation(line: 2165, column: 32, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6897, file: !3, line: 2165, column: 6)
!6924 = !DILocation(line: 2165, column: 38, scope: !6923)
!6925 = !DILocation(line: 2165, column: 6, scope: !6923)
!6926 = !DILocation(line: 2165, column: 45, scope: !6923)
!6927 = !DILocation(line: 2165, column: 6, scope: !6897)
!6928 = !DILocation(line: 2166, column: 3, scope: !6923)
!6929 = !DILocation(line: 2167, column: 9, scope: !6897)
!6930 = !DILocation(line: 2167, column: 15, scope: !6897)
!6931 = !DILocation(line: 2167, column: 2, scope: !6897)
!6932 = !DILocation(line: 2168, column: 1, scope: !6897)
!6933 = distinct !DISubprogram(name: "gpiochip_find", scope: !3, file: !3, line: 856, type: !6934, scopeLine: 859, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!6934 = !DISubroutineType(types: !6935)
!6935 = !{!4096, !218, !6936}
!6936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6937, size: 64)
!6937 = !DISubroutineType(types: !6938)
!6938 = !{!224, !4096, !218}
!6939 = !DILocation(line: 407, column: 64, scope: !4629, inlinedAt: !6940)
!6940 = distinct !DILocation(line: 871, column: 2, scope: !6933)
!6941 = !DILocation(line: 407, column: 84, scope: !4629, inlinedAt: !6940)
!6942 = !DILocation(line: 327, column: 67, scope: !4647, inlinedAt: !6943)
!6943 = distinct !DILocation(line: 864, column: 2, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6945, file: !3, line: 864, column: 2)
!6945 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 864, column: 2)
!6946 = distinct !DILexicalBlock(scope: !6947, file: !3, line: 864, column: 2)
!6947 = distinct !DILexicalBlock(scope: !6948, file: !3, line: 864, column: 2)
!6948 = distinct !DILexicalBlock(scope: !6933, file: !3, line: 864, column: 2)
!6949 = !DILocalVariable(name: "data", arg: 1, scope: !6933, file: !3, line: 856, type: !218)
!6950 = !DILocation(line: 856, column: 39, scope: !6933)
!6951 = !DILocalVariable(name: "match", arg: 2, scope: !6933, file: !3, line: 857, type: !6936)
!6952 = !DILocation(line: 857, column: 11, scope: !6933)
!6953 = !DILocalVariable(name: "gdev", scope: !6933, file: !3, line: 860, type: !219)
!6954 = !DILocation(line: 860, column: 22, scope: !6933)
!6955 = !DILocalVariable(name: "gc", scope: !6933, file: !3, line: 861, type: !4096)
!6956 = !DILocation(line: 861, column: 20, scope: !6933)
!6957 = !DILocalVariable(name: "flags", scope: !6933, file: !3, line: 862, type: !342)
!6958 = !DILocation(line: 862, column: 16, scope: !6933)
!6959 = !DILocation(line: 864, column: 2, scope: !6933)
!6960 = !DILocation(line: 864, column: 2, scope: !6948)
!6961 = !DILocalVariable(name: "__dummy", scope: !6962, file: !3, line: 864, type: !342)
!6962 = distinct !DILexicalBlock(scope: !6947, file: !3, line: 864, column: 2)
!6963 = !DILocation(line: 864, column: 2, scope: !6962)
!6964 = !DILocalVariable(name: "__dummy2", scope: !6962, file: !3, line: 864, type: !342)
!6965 = !DILocation(line: 864, column: 2, scope: !6947)
!6966 = !DILocation(line: 864, column: 2, scope: !6946)
!6967 = !DILocation(line: 864, column: 2, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 864, column: 2)
!6969 = !DILocalVariable(name: "__dummy", scope: !6970, file: !3, line: 864, type: !342)
!6970 = distinct !DILexicalBlock(scope: !6971, file: !3, line: 864, column: 2)
!6971 = distinct !DILexicalBlock(scope: !6968, file: !3, line: 864, column: 2)
!6972 = !DILocation(line: 864, column: 2, scope: !6970)
!6973 = !DILocalVariable(name: "__dummy2", scope: !6970, file: !3, line: 864, type: !342)
!6974 = !DILocation(line: 864, column: 2, scope: !6971)
!6975 = !DILocation(line: 864, column: 2, scope: !6945)
!6976 = !{i32 -2141435275}
!6977 = !DILocation(line: 329, column: 10, scope: !4647, inlinedAt: !6943)
!6978 = !DILocation(line: 329, column: 16, scope: !4647, inlinedAt: !6943)
!6979 = !DILocation(line: 864, column: 2, scope: !6944)
!6980 = !DILocalVariable(name: "__mptr", scope: !6981, file: !3, line: 865, type: !218)
!6981 = distinct !DILexicalBlock(scope: !6982, file: !3, line: 865, column: 2)
!6982 = distinct !DILexicalBlock(scope: !6933, file: !3, line: 865, column: 2)
!6983 = !DILocation(line: 865, column: 2, scope: !6981)
!6984 = !DILocation(line: 865, column: 2, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6981, file: !3, line: 865, column: 2)
!6986 = !DILocation(line: 865, column: 2, scope: !6982)
!6987 = !DILocation(line: 865, column: 2, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6982, file: !3, line: 865, column: 2)
!6989 = !DILocation(line: 866, column: 7, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 866, column: 7)
!6991 = !DILocation(line: 866, column: 13, scope: !6990)
!6992 = !DILocation(line: 866, column: 18, scope: !6990)
!6993 = !DILocation(line: 866, column: 21, scope: !6990)
!6994 = !DILocation(line: 866, column: 27, scope: !6990)
!6995 = !DILocation(line: 866, column: 33, scope: !6990)
!6996 = !DILocation(line: 866, column: 39, scope: !6990)
!6997 = !DILocation(line: 866, column: 7, scope: !6988)
!6998 = !DILocation(line: 867, column: 9, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6990, file: !3, line: 866, column: 46)
!7000 = !DILocation(line: 867, column: 15, scope: !6999)
!7001 = !DILocation(line: 867, column: 7, scope: !6999)
!7002 = !DILocation(line: 868, column: 4, scope: !6999)
!7003 = !DILocation(line: 866, column: 43, scope: !6990)
!7004 = !DILocalVariable(name: "__mptr", scope: !7005, file: !3, line: 865, type: !218)
!7005 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 865, column: 2)
!7006 = !DILocation(line: 865, column: 2, scope: !7005)
!7007 = !DILocation(line: 865, column: 2, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !7005, file: !3, line: 865, column: 2)
!7009 = distinct !{!7009, !6986, !7010}
!7010 = !DILocation(line: 869, column: 3, scope: !6982)
!7011 = !DILocation(line: 871, column: 37, scope: !6933)
!7012 = !DILocation(line: 409, column: 2, scope: !4707, inlinedAt: !6940)
!7013 = !DILocation(line: 409, column: 2, scope: !4712, inlinedAt: !6940)
!7014 = !DILocation(line: 409, column: 2, scope: !4713, inlinedAt: !6940)
!7015 = !DILocation(line: 409, column: 2, scope: !4720, inlinedAt: !6940)
!7016 = !DILocation(line: 409, column: 2, scope: !4723, inlinedAt: !6940)
!7017 = !DILocation(line: 873, column: 9, scope: !6933)
!7018 = !DILocation(line: 873, column: 2, scope: !6933)
!7019 = distinct !DISubprogram(name: "gpiochip_irqchip_irq_valid", scope: !3, file: !3, line: 927, type: !5013, scopeLine: 929, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!7020 = !DILocalVariable(name: "gc", arg: 1, scope: !7019, file: !3, line: 927, type: !5015)
!7021 = !DILocation(line: 927, column: 57, scope: !7019)
!7022 = !DILocalVariable(name: "offset", arg: 2, scope: !7019, file: !3, line: 928, type: !7)
!7023 = !DILocation(line: 928, column: 18, scope: !7019)
!7024 = !DILocation(line: 930, column: 30, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7019, file: !3, line: 930, column: 6)
!7026 = !DILocation(line: 930, column: 34, scope: !7025)
!7027 = !DILocation(line: 930, column: 7, scope: !7025)
!7028 = !DILocation(line: 930, column: 6, scope: !7019)
!7029 = !DILocation(line: 931, column: 3, scope: !7025)
!7030 = !DILocation(line: 933, column: 6, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7019, file: !3, line: 933, column: 6)
!7032 = !DILocation(line: 933, column: 6, scope: !7019)
!7033 = !DILocation(line: 934, column: 3, scope: !7031)
!7034 = !DILocation(line: 935, column: 18, scope: !7019)
!7035 = !DILocation(line: 935, column: 26, scope: !7019)
!7036 = !DILocation(line: 935, column: 30, scope: !7019)
!7037 = !DILocation(line: 935, column: 34, scope: !7019)
!7038 = !DILocation(line: 935, column: 9, scope: !7019)
!7039 = !DILocation(line: 935, column: 2, scope: !7019)
!7040 = !DILocation(line: 936, column: 1, scope: !7019)
!7041 = distinct !DISubprogram(name: "gpiochip_set_nested_irqchip", scope: !3, file: !3, line: 992, type: !7042, scopeLine: 995, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!7042 = !DISubroutineType(types: !7043)
!7043 = !{null, !4096, !3790, !7}
!7044 = !DILocalVariable(name: "gc", arg: 1, scope: !7041, file: !3, line: 992, type: !4096)
!7045 = !DILocation(line: 992, column: 52, scope: !7041)
!7046 = !DILocalVariable(name: "irqchip", arg: 2, scope: !7041, file: !3, line: 993, type: !3790)
!7047 = !DILocation(line: 993, column: 23, scope: !7041)
!7048 = !DILocalVariable(name: "parent_irq", arg: 3, scope: !7041, file: !3, line: 994, type: !7)
!7049 = !DILocation(line: 994, column: 19, scope: !7041)
!7050 = !DILocation(line: 996, column: 32, scope: !7041)
!7051 = !DILocation(line: 996, column: 36, scope: !7041)
!7052 = !DILocation(line: 996, column: 2, scope: !7041)
!7053 = !DILocation(line: 997, column: 1, scope: !7041)
!7054 = distinct !DISubprogram(name: "gpiochip_set_cascaded_irqchip", scope: !3, file: !3, line: 948, type: !7055, scopeLine: 951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!7055 = !DISubroutineType(types: !7056)
!7056 = !{null, !4096, !7, !3943}
!7057 = !DILocalVariable(name: "gc", arg: 1, scope: !7054, file: !3, line: 948, type: !4096)
!7058 = !DILocation(line: 948, column: 61, scope: !7054)
!7059 = !DILocalVariable(name: "parent_irq", arg: 2, scope: !7054, file: !3, line: 949, type: !7)
!7060 = !DILocation(line: 949, column: 21, scope: !7054)
!7061 = !DILocalVariable(name: "parent_handler", arg: 3, scope: !7054, file: !3, line: 950, type: !3943)
!7062 = !DILocation(line: 950, column: 27, scope: !7054)
!7063 = !DILocalVariable(name: "girq", scope: !7054, file: !3, line: 952, type: !6285)
!7064 = !DILocation(line: 952, column: 24, scope: !7054)
!7065 = !DILocation(line: 952, column: 32, scope: !7054)
!7066 = !DILocation(line: 952, column: 36, scope: !7054)
!7067 = !DILocalVariable(name: "dev", scope: !7054, file: !3, line: 953, type: !3325)
!7068 = !DILocation(line: 953, column: 17, scope: !7054)
!7069 = !DILocation(line: 953, column: 24, scope: !7054)
!7070 = !DILocation(line: 953, column: 28, scope: !7054)
!7071 = !DILocation(line: 953, column: 37, scope: !7054)
!7072 = !DILocation(line: 955, column: 7, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7054, file: !3, line: 955, column: 6)
!7074 = !DILocation(line: 955, column: 13, scope: !7073)
!7075 = !DILocation(line: 955, column: 6, scope: !7054)
!7076 = !DILocation(line: 956, column: 3, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7073, file: !3, line: 955, column: 21)
!7078 = !DILocation(line: 958, column: 3, scope: !7077)
!7079 = !DILocation(line: 961, column: 6, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7054, file: !3, line: 961, column: 6)
!7081 = !DILocation(line: 961, column: 6, scope: !7054)
!7082 = !DILocation(line: 962, column: 7, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 962, column: 7)
!7084 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 961, column: 22)
!7085 = !DILocation(line: 962, column: 11, scope: !7083)
!7086 = !DILocation(line: 962, column: 7, scope: !7084)
!7087 = !DILocation(line: 963, column: 4, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 962, column: 22)
!7089 = !DILocation(line: 965, column: 4, scope: !7088)
!7090 = !DILocation(line: 967, column: 32, scope: !7084)
!7091 = !DILocation(line: 967, column: 19, scope: !7084)
!7092 = !DILocation(line: 967, column: 3, scope: !7084)
!7093 = !DILocation(line: 967, column: 9, scope: !7084)
!7094 = !DILocation(line: 967, column: 17, scope: !7084)
!7095 = !DILocation(line: 970, column: 8, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 970, column: 7)
!7097 = !DILocation(line: 970, column: 14, scope: !7096)
!7098 = !DILocation(line: 970, column: 7, scope: !7084)
!7099 = !DILocation(line: 971, column: 4, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7096, file: !3, line: 970, column: 23)
!7101 = !DILocation(line: 972, column: 4, scope: !7100)
!7102 = !DILocation(line: 974, column: 22, scope: !7084)
!7103 = !DILocation(line: 974, column: 3, scope: !7084)
!7104 = !DILocation(line: 974, column: 9, scope: !7084)
!7105 = !DILocation(line: 974, column: 20, scope: !7084)
!7106 = !DILocation(line: 975, column: 3, scope: !7084)
!7107 = !DILocation(line: 975, column: 9, scope: !7084)
!7108 = !DILocation(line: 975, column: 21, scope: !7084)
!7109 = !DILocation(line: 980, column: 36, scope: !7084)
!7110 = !DILocation(line: 980, column: 48, scope: !7084)
!7111 = !DILocation(line: 981, column: 8, scope: !7084)
!7112 = !DILocation(line: 980, column: 3, scope: !7084)
!7113 = !DILocation(line: 982, column: 2, scope: !7084)
!7114 = !DILocation(line: 983, column: 1, scope: !7054)
!7115 = distinct !DISubprogram(name: "gpiochip_populate_parent_fwspec_twocell", scope: !3, file: !3, line: 1233, type: !4187, scopeLine: 1236, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!7116 = !DILocation(line: 445, column: 72, scope: !5564, inlinedAt: !7117)
!7117 = distinct !DILocation(line: 552, column: 10, scope: !5569, inlinedAt: !7118)
!7118 = distinct !DILocation(line: 1239, column: 11, scope: !7115)
!7119 = !DILocation(line: 446, column: 9, scope: !5564, inlinedAt: !7117)
!7120 = !DILocation(line: 446, column: 23, scope: !5564, inlinedAt: !7117)
!7121 = !DILocation(line: 448, column: 8, scope: !5564, inlinedAt: !7117)
!7122 = !DILocation(line: 318, column: 67, scope: !5580, inlinedAt: !7123)
!7123 = distinct !DILocation(line: 553, column: 20, scope: !5569, inlinedAt: !7118)
!7124 = !DILocation(line: 346, column: 58, scope: !5586, inlinedAt: !7125)
!7125 = distinct !DILocation(line: 547, column: 11, scope: !5569, inlinedAt: !7118)
!7126 = !DILocation(line: 472, column: 28, scope: !5592, inlinedAt: !7127)
!7127 = distinct !DILocation(line: 481, column: 9, scope: !5597, inlinedAt: !7128)
!7128 = distinct !DILocation(line: 545, column: 11, scope: !5599, inlinedAt: !7118)
!7129 = !DILocation(line: 472, column: 40, scope: !5592, inlinedAt: !7127)
!7130 = !DILocation(line: 472, column: 60, scope: !5592, inlinedAt: !7127)
!7131 = !DILocation(line: 478, column: 51, scope: !5597, inlinedAt: !7128)
!7132 = !DILocation(line: 478, column: 63, scope: !5597, inlinedAt: !7128)
!7133 = !DILocation(line: 480, column: 15, scope: !5597, inlinedAt: !7128)
!7134 = !DILocation(line: 538, column: 45, scope: !5571, inlinedAt: !7118)
!7135 = !DILocation(line: 538, column: 57, scope: !5571, inlinedAt: !7118)
!7136 = !DILocation(line: 542, column: 16, scope: !5569, inlinedAt: !7118)
!7137 = !DILocalVariable(name: "gc", arg: 1, scope: !7115, file: !3, line: 1233, type: !4096)
!7138 = !DILocation(line: 1233, column: 65, scope: !7115)
!7139 = !DILocalVariable(name: "parent_hwirq", arg: 2, scope: !7115, file: !3, line: 1234, type: !7)
!7140 = !DILocation(line: 1234, column: 24, scope: !7115)
!7141 = !DILocalVariable(name: "parent_type", arg: 3, scope: !7115, file: !3, line: 1235, type: !7)
!7142 = !DILocation(line: 1235, column: 24, scope: !7115)
!7143 = !DILocalVariable(name: "fwspec", scope: !7115, file: !3, line: 1237, type: !3736)
!7144 = !DILocation(line: 1237, column: 21, scope: !7115)
!7145 = !DILocation(line: 540, column: 27, scope: !5570, inlinedAt: !7118)
!7146 = !DILocation(line: 540, column: 6, scope: !5570, inlinedAt: !7118)
!7147 = !DILocation(line: 540, column: 6, scope: !5571, inlinedAt: !7118)
!7148 = !DILocation(line: 544, column: 7, scope: !5599, inlinedAt: !7118)
!7149 = !DILocation(line: 544, column: 12, scope: !5599, inlinedAt: !7118)
!7150 = !DILocation(line: 544, column: 7, scope: !5569, inlinedAt: !7118)
!7151 = !DILocation(line: 545, column: 25, scope: !5599, inlinedAt: !7118)
!7152 = !DILocation(line: 545, column: 31, scope: !5599, inlinedAt: !7118)
!7153 = !DILocation(line: 480, column: 33, scope: !5597, inlinedAt: !7128)
!7154 = !DILocation(line: 480, column: 23, scope: !5597, inlinedAt: !7128)
!7155 = !DILocation(line: 481, column: 29, scope: !5597, inlinedAt: !7128)
!7156 = !DILocation(line: 481, column: 35, scope: !5597, inlinedAt: !7128)
!7157 = !DILocation(line: 481, column: 42, scope: !5597, inlinedAt: !7128)
!7158 = !DILocation(line: 474, column: 23, scope: !5592, inlinedAt: !7127)
!7159 = !DILocation(line: 474, column: 29, scope: !5592, inlinedAt: !7127)
!7160 = !DILocation(line: 474, column: 36, scope: !5592, inlinedAt: !7127)
!7161 = !DILocation(line: 474, column: 9, scope: !5592, inlinedAt: !7127)
!7162 = !DILocation(line: 545, column: 4, scope: !5599, inlinedAt: !7118)
!7163 = !DILocation(line: 547, column: 25, scope: !5569, inlinedAt: !7118)
!7164 = !DILocation(line: 348, column: 7, scope: !5643, inlinedAt: !7125)
!7165 = !DILocation(line: 348, column: 6, scope: !5586, inlinedAt: !7125)
!7166 = !DILocation(line: 349, column: 3, scope: !5643, inlinedAt: !7125)
!7167 = !DILocation(line: 351, column: 6, scope: !5647, inlinedAt: !7125)
!7168 = !DILocation(line: 351, column: 11, scope: !5647, inlinedAt: !7125)
!7169 = !DILocation(line: 351, column: 6, scope: !5586, inlinedAt: !7125)
!7170 = !DILocation(line: 352, column: 3, scope: !5647, inlinedAt: !7125)
!7171 = !DILocation(line: 354, column: 32, scope: !5652, inlinedAt: !7125)
!7172 = !DILocation(line: 354, column: 37, scope: !5652, inlinedAt: !7125)
!7173 = !DILocation(line: 354, column: 42, scope: !5652, inlinedAt: !7125)
!7174 = !DILocation(line: 354, column: 45, scope: !5652, inlinedAt: !7125)
!7175 = !DILocation(line: 354, column: 50, scope: !5652, inlinedAt: !7125)
!7176 = !DILocation(line: 354, column: 6, scope: !5586, inlinedAt: !7125)
!7177 = !DILocation(line: 355, column: 3, scope: !5652, inlinedAt: !7125)
!7178 = !DILocation(line: 356, column: 32, scope: !5660, inlinedAt: !7125)
!7179 = !DILocation(line: 356, column: 37, scope: !5660, inlinedAt: !7125)
!7180 = !DILocation(line: 356, column: 43, scope: !5660, inlinedAt: !7125)
!7181 = !DILocation(line: 356, column: 46, scope: !5660, inlinedAt: !7125)
!7182 = !DILocation(line: 356, column: 51, scope: !5660, inlinedAt: !7125)
!7183 = !DILocation(line: 356, column: 6, scope: !5586, inlinedAt: !7125)
!7184 = !DILocation(line: 357, column: 3, scope: !5660, inlinedAt: !7125)
!7185 = !DILocation(line: 358, column: 6, scope: !5668, inlinedAt: !7125)
!7186 = !DILocation(line: 358, column: 11, scope: !5668, inlinedAt: !7125)
!7187 = !DILocation(line: 358, column: 6, scope: !5586, inlinedAt: !7125)
!7188 = !DILocation(line: 358, column: 26, scope: !5668, inlinedAt: !7125)
!7189 = !DILocation(line: 359, column: 6, scope: !5673, inlinedAt: !7125)
!7190 = !DILocation(line: 359, column: 11, scope: !5673, inlinedAt: !7125)
!7191 = !DILocation(line: 359, column: 6, scope: !5586, inlinedAt: !7125)
!7192 = !DILocation(line: 359, column: 26, scope: !5673, inlinedAt: !7125)
!7193 = !DILocation(line: 360, column: 6, scope: !5678, inlinedAt: !7125)
!7194 = !DILocation(line: 360, column: 11, scope: !5678, inlinedAt: !7125)
!7195 = !DILocation(line: 360, column: 6, scope: !5586, inlinedAt: !7125)
!7196 = !DILocation(line: 360, column: 26, scope: !5678, inlinedAt: !7125)
!7197 = !DILocation(line: 361, column: 6, scope: !5683, inlinedAt: !7125)
!7198 = !DILocation(line: 361, column: 11, scope: !5683, inlinedAt: !7125)
!7199 = !DILocation(line: 361, column: 6, scope: !5586, inlinedAt: !7125)
!7200 = !DILocation(line: 361, column: 26, scope: !5683, inlinedAt: !7125)
!7201 = !DILocation(line: 362, column: 6, scope: !5688, inlinedAt: !7125)
!7202 = !DILocation(line: 362, column: 11, scope: !5688, inlinedAt: !7125)
!7203 = !DILocation(line: 362, column: 6, scope: !5586, inlinedAt: !7125)
!7204 = !DILocation(line: 362, column: 26, scope: !5688, inlinedAt: !7125)
!7205 = !DILocation(line: 363, column: 6, scope: !5693, inlinedAt: !7125)
!7206 = !DILocation(line: 363, column: 11, scope: !5693, inlinedAt: !7125)
!7207 = !DILocation(line: 363, column: 6, scope: !5586, inlinedAt: !7125)
!7208 = !DILocation(line: 363, column: 26, scope: !5693, inlinedAt: !7125)
!7209 = !DILocation(line: 364, column: 6, scope: !5698, inlinedAt: !7125)
!7210 = !DILocation(line: 364, column: 11, scope: !5698, inlinedAt: !7125)
!7211 = !DILocation(line: 364, column: 6, scope: !5586, inlinedAt: !7125)
!7212 = !DILocation(line: 364, column: 26, scope: !5698, inlinedAt: !7125)
!7213 = !DILocation(line: 365, column: 6, scope: !5703, inlinedAt: !7125)
!7214 = !DILocation(line: 365, column: 11, scope: !5703, inlinedAt: !7125)
!7215 = !DILocation(line: 365, column: 6, scope: !5586, inlinedAt: !7125)
!7216 = !DILocation(line: 365, column: 26, scope: !5703, inlinedAt: !7125)
!7217 = !DILocation(line: 366, column: 6, scope: !5708, inlinedAt: !7125)
!7218 = !DILocation(line: 366, column: 11, scope: !5708, inlinedAt: !7125)
!7219 = !DILocation(line: 366, column: 6, scope: !5586, inlinedAt: !7125)
!7220 = !DILocation(line: 366, column: 26, scope: !5708, inlinedAt: !7125)
!7221 = !DILocation(line: 367, column: 6, scope: !5713, inlinedAt: !7125)
!7222 = !DILocation(line: 367, column: 11, scope: !5713, inlinedAt: !7125)
!7223 = !DILocation(line: 367, column: 6, scope: !5586, inlinedAt: !7125)
!7224 = !DILocation(line: 367, column: 26, scope: !5713, inlinedAt: !7125)
!7225 = !DILocation(line: 368, column: 6, scope: !5718, inlinedAt: !7125)
!7226 = !DILocation(line: 368, column: 11, scope: !5718, inlinedAt: !7125)
!7227 = !DILocation(line: 368, column: 6, scope: !5586, inlinedAt: !7125)
!7228 = !DILocation(line: 368, column: 26, scope: !5718, inlinedAt: !7125)
!7229 = !DILocation(line: 369, column: 6, scope: !5723, inlinedAt: !7125)
!7230 = !DILocation(line: 369, column: 11, scope: !5723, inlinedAt: !7125)
!7231 = !DILocation(line: 369, column: 6, scope: !5586, inlinedAt: !7125)
!7232 = !DILocation(line: 369, column: 26, scope: !5723, inlinedAt: !7125)
!7233 = !DILocation(line: 370, column: 6, scope: !5728, inlinedAt: !7125)
!7234 = !DILocation(line: 370, column: 11, scope: !5728, inlinedAt: !7125)
!7235 = !DILocation(line: 370, column: 6, scope: !5586, inlinedAt: !7125)
!7236 = !DILocation(line: 370, column: 26, scope: !5728, inlinedAt: !7125)
!7237 = !DILocation(line: 371, column: 6, scope: !5733, inlinedAt: !7125)
!7238 = !DILocation(line: 371, column: 11, scope: !5733, inlinedAt: !7125)
!7239 = !DILocation(line: 371, column: 6, scope: !5586, inlinedAt: !7125)
!7240 = !DILocation(line: 371, column: 26, scope: !5733, inlinedAt: !7125)
!7241 = !DILocation(line: 372, column: 6, scope: !5738, inlinedAt: !7125)
!7242 = !DILocation(line: 372, column: 11, scope: !5738, inlinedAt: !7125)
!7243 = !DILocation(line: 372, column: 6, scope: !5586, inlinedAt: !7125)
!7244 = !DILocation(line: 372, column: 26, scope: !5738, inlinedAt: !7125)
!7245 = !DILocation(line: 373, column: 6, scope: !5743, inlinedAt: !7125)
!7246 = !DILocation(line: 373, column: 11, scope: !5743, inlinedAt: !7125)
!7247 = !DILocation(line: 373, column: 6, scope: !5586, inlinedAt: !7125)
!7248 = !DILocation(line: 373, column: 26, scope: !5743, inlinedAt: !7125)
!7249 = !DILocation(line: 374, column: 6, scope: !5748, inlinedAt: !7125)
!7250 = !DILocation(line: 374, column: 11, scope: !5748, inlinedAt: !7125)
!7251 = !DILocation(line: 374, column: 6, scope: !5586, inlinedAt: !7125)
!7252 = !DILocation(line: 374, column: 26, scope: !5748, inlinedAt: !7125)
!7253 = !DILocation(line: 375, column: 6, scope: !5753, inlinedAt: !7125)
!7254 = !DILocation(line: 375, column: 11, scope: !5753, inlinedAt: !7125)
!7255 = !DILocation(line: 375, column: 6, scope: !5586, inlinedAt: !7125)
!7256 = !DILocation(line: 375, column: 27, scope: !5753, inlinedAt: !7125)
!7257 = !DILocation(line: 376, column: 6, scope: !5758, inlinedAt: !7125)
!7258 = !DILocation(line: 376, column: 11, scope: !5758, inlinedAt: !7125)
!7259 = !DILocation(line: 376, column: 6, scope: !5586, inlinedAt: !7125)
!7260 = !DILocation(line: 376, column: 32, scope: !5758, inlinedAt: !7125)
!7261 = !DILocation(line: 377, column: 6, scope: !5763, inlinedAt: !7125)
!7262 = !DILocation(line: 377, column: 11, scope: !5763, inlinedAt: !7125)
!7263 = !DILocation(line: 377, column: 6, scope: !5586, inlinedAt: !7125)
!7264 = !DILocation(line: 377, column: 32, scope: !5763, inlinedAt: !7125)
!7265 = !DILocation(line: 378, column: 6, scope: !5768, inlinedAt: !7125)
!7266 = !DILocation(line: 378, column: 11, scope: !5768, inlinedAt: !7125)
!7267 = !DILocation(line: 378, column: 6, scope: !5586, inlinedAt: !7125)
!7268 = !DILocation(line: 378, column: 32, scope: !5768, inlinedAt: !7125)
!7269 = !DILocation(line: 379, column: 6, scope: !5773, inlinedAt: !7125)
!7270 = !DILocation(line: 379, column: 11, scope: !5773, inlinedAt: !7125)
!7271 = !DILocation(line: 379, column: 6, scope: !5586, inlinedAt: !7125)
!7272 = !DILocation(line: 379, column: 33, scope: !5773, inlinedAt: !7125)
!7273 = !DILocation(line: 380, column: 6, scope: !5778, inlinedAt: !7125)
!7274 = !DILocation(line: 380, column: 11, scope: !5778, inlinedAt: !7125)
!7275 = !DILocation(line: 380, column: 6, scope: !5586, inlinedAt: !7125)
!7276 = !DILocation(line: 380, column: 33, scope: !5778, inlinedAt: !7125)
!7277 = !DILocation(line: 381, column: 6, scope: !5783, inlinedAt: !7125)
!7278 = !DILocation(line: 381, column: 11, scope: !5783, inlinedAt: !7125)
!7279 = !DILocation(line: 381, column: 6, scope: !5586, inlinedAt: !7125)
!7280 = !DILocation(line: 381, column: 33, scope: !5783, inlinedAt: !7125)
!7281 = !DILocation(line: 382, column: 2, scope: !5788, inlinedAt: !7125)
!7282 = !DILocation(line: 382, column: 2, scope: !5792, inlinedAt: !7125)
!7283 = !DILocation(line: 382, column: 2, scope: !5793, inlinedAt: !7125)
!7284 = !DILocation(line: 386, column: 1, scope: !5586, inlinedAt: !7125)
!7285 = !DILocation(line: 547, column: 9, scope: !5569, inlinedAt: !7118)
!7286 = !DILocation(line: 549, column: 8, scope: !5799, inlinedAt: !7118)
!7287 = !DILocation(line: 549, column: 7, scope: !5569, inlinedAt: !7118)
!7288 = !DILocation(line: 550, column: 4, scope: !5799, inlinedAt: !7118)
!7289 = !DILocation(line: 553, column: 33, scope: !5569, inlinedAt: !7118)
!7290 = !DILocation(line: 325, column: 6, scope: !5804, inlinedAt: !7123)
!7291 = !DILocation(line: 325, column: 6, scope: !5580, inlinedAt: !7123)
!7292 = !DILocation(line: 326, column: 3, scope: !5804, inlinedAt: !7123)
!7293 = !DILocation(line: 332, column: 9, scope: !5580, inlinedAt: !7123)
!7294 = !DILocation(line: 332, column: 15, scope: !5580, inlinedAt: !7123)
!7295 = !DILocation(line: 332, column: 2, scope: !5580, inlinedAt: !7123)
!7296 = !DILocation(line: 336, column: 1, scope: !5580, inlinedAt: !7123)
!7297 = !DILocation(line: 553, column: 5, scope: !5569, inlinedAt: !7118)
!7298 = !DILocation(line: 553, column: 41, scope: !5569, inlinedAt: !7118)
!7299 = !DILocation(line: 554, column: 5, scope: !5569, inlinedAt: !7118)
!7300 = !DILocation(line: 554, column: 12, scope: !5569, inlinedAt: !7118)
!7301 = !DILocation(line: 448, column: 31, scope: !5564, inlinedAt: !7117)
!7302 = !DILocation(line: 448, column: 34, scope: !5564, inlinedAt: !7117)
!7303 = !DILocation(line: 448, column: 14, scope: !5564, inlinedAt: !7117)
!7304 = !DILocation(line: 450, column: 22, scope: !5564, inlinedAt: !7117)
!7305 = !DILocation(line: 450, column: 25, scope: !5564, inlinedAt: !7117)
!7306 = !DILocation(line: 450, column: 30, scope: !5564, inlinedAt: !7117)
!7307 = !DILocation(line: 450, column: 36, scope: !5564, inlinedAt: !7117)
!7308 = !DILocation(line: 450, column: 8, scope: !5564, inlinedAt: !7117)
!7309 = !DILocation(line: 450, column: 6, scope: !5564, inlinedAt: !7117)
!7310 = !DILocation(line: 451, column: 9, scope: !5564, inlinedAt: !7117)
!7311 = !DILocation(line: 552, column: 3, scope: !5569, inlinedAt: !7118)
!7312 = !DILocation(line: 557, column: 19, scope: !5571, inlinedAt: !7118)
!7313 = !DILocation(line: 557, column: 25, scope: !5571, inlinedAt: !7118)
!7314 = !DILocation(line: 557, column: 9, scope: !5571, inlinedAt: !7118)
!7315 = !DILocation(line: 557, column: 2, scope: !5571, inlinedAt: !7118)
!7316 = !DILocation(line: 558, column: 1, scope: !5571, inlinedAt: !7118)
!7317 = !DILocation(line: 1239, column: 11, scope: !7115)
!7318 = !DILocation(line: 1239, column: 9, scope: !7115)
!7319 = !DILocation(line: 1240, column: 7, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7115, file: !3, line: 1240, column: 6)
!7321 = !DILocation(line: 1240, column: 6, scope: !7115)
!7322 = !DILocation(line: 1241, column: 3, scope: !7320)
!7323 = !DILocation(line: 1243, column: 19, scope: !7115)
!7324 = !DILocation(line: 1243, column: 23, scope: !7115)
!7325 = !DILocation(line: 1243, column: 27, scope: !7115)
!7326 = !DILocation(line: 1243, column: 42, scope: !7115)
!7327 = !DILocation(line: 1243, column: 2, scope: !7115)
!7328 = !DILocation(line: 1243, column: 10, scope: !7115)
!7329 = !DILocation(line: 1243, column: 17, scope: !7115)
!7330 = !DILocation(line: 1244, column: 2, scope: !7115)
!7331 = !DILocation(line: 1244, column: 10, scope: !7115)
!7332 = !DILocation(line: 1244, column: 22, scope: !7115)
!7333 = !DILocation(line: 1245, column: 21, scope: !7115)
!7334 = !DILocation(line: 1245, column: 2, scope: !7115)
!7335 = !DILocation(line: 1245, column: 10, scope: !7115)
!7336 = !DILocation(line: 1245, column: 19, scope: !7115)
!7337 = !DILocation(line: 1246, column: 21, scope: !7115)
!7338 = !DILocation(line: 1246, column: 2, scope: !7115)
!7339 = !DILocation(line: 1246, column: 10, scope: !7115)
!7340 = !DILocation(line: 1246, column: 19, scope: !7115)
!7341 = !DILocation(line: 1248, column: 9, scope: !7115)
!7342 = !DILocation(line: 1248, column: 2, scope: !7115)
!7343 = !DILocation(line: 1249, column: 1, scope: !7115)
!7344 = distinct !DISubprogram(name: "gpiochip_populate_parent_fwspec_fourcell", scope: !3, file: !3, line: 1252, type: !4187, scopeLine: 1255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!7345 = !DILocation(line: 445, column: 72, scope: !5564, inlinedAt: !7346)
!7346 = distinct !DILocation(line: 552, column: 10, scope: !5569, inlinedAt: !7347)
!7347 = distinct !DILocation(line: 1258, column: 11, scope: !7344)
!7348 = !DILocation(line: 446, column: 9, scope: !5564, inlinedAt: !7346)
!7349 = !DILocation(line: 446, column: 23, scope: !5564, inlinedAt: !7346)
!7350 = !DILocation(line: 448, column: 8, scope: !5564, inlinedAt: !7346)
!7351 = !DILocation(line: 318, column: 67, scope: !5580, inlinedAt: !7352)
!7352 = distinct !DILocation(line: 553, column: 20, scope: !5569, inlinedAt: !7347)
!7353 = !DILocation(line: 346, column: 58, scope: !5586, inlinedAt: !7354)
!7354 = distinct !DILocation(line: 547, column: 11, scope: !5569, inlinedAt: !7347)
!7355 = !DILocation(line: 472, column: 28, scope: !5592, inlinedAt: !7356)
!7356 = distinct !DILocation(line: 481, column: 9, scope: !5597, inlinedAt: !7357)
!7357 = distinct !DILocation(line: 545, column: 11, scope: !5599, inlinedAt: !7347)
!7358 = !DILocation(line: 472, column: 40, scope: !5592, inlinedAt: !7356)
!7359 = !DILocation(line: 472, column: 60, scope: !5592, inlinedAt: !7356)
!7360 = !DILocation(line: 478, column: 51, scope: !5597, inlinedAt: !7357)
!7361 = !DILocation(line: 478, column: 63, scope: !5597, inlinedAt: !7357)
!7362 = !DILocation(line: 480, column: 15, scope: !5597, inlinedAt: !7357)
!7363 = !DILocation(line: 538, column: 45, scope: !5571, inlinedAt: !7347)
!7364 = !DILocation(line: 538, column: 57, scope: !5571, inlinedAt: !7347)
!7365 = !DILocation(line: 542, column: 16, scope: !5569, inlinedAt: !7347)
!7366 = !DILocalVariable(name: "gc", arg: 1, scope: !7344, file: !3, line: 1252, type: !4096)
!7367 = !DILocation(line: 1252, column: 66, scope: !7344)
!7368 = !DILocalVariable(name: "parent_hwirq", arg: 2, scope: !7344, file: !3, line: 1253, type: !7)
!7369 = !DILocation(line: 1253, column: 25, scope: !7344)
!7370 = !DILocalVariable(name: "parent_type", arg: 3, scope: !7344, file: !3, line: 1254, type: !7)
!7371 = !DILocation(line: 1254, column: 25, scope: !7344)
!7372 = !DILocalVariable(name: "fwspec", scope: !7344, file: !3, line: 1256, type: !3736)
!7373 = !DILocation(line: 1256, column: 21, scope: !7344)
!7374 = !DILocation(line: 540, column: 27, scope: !5570, inlinedAt: !7347)
!7375 = !DILocation(line: 540, column: 6, scope: !5570, inlinedAt: !7347)
!7376 = !DILocation(line: 540, column: 6, scope: !5571, inlinedAt: !7347)
!7377 = !DILocation(line: 544, column: 7, scope: !5599, inlinedAt: !7347)
!7378 = !DILocation(line: 544, column: 12, scope: !5599, inlinedAt: !7347)
!7379 = !DILocation(line: 544, column: 7, scope: !5569, inlinedAt: !7347)
!7380 = !DILocation(line: 545, column: 25, scope: !5599, inlinedAt: !7347)
!7381 = !DILocation(line: 545, column: 31, scope: !5599, inlinedAt: !7347)
!7382 = !DILocation(line: 480, column: 33, scope: !5597, inlinedAt: !7357)
!7383 = !DILocation(line: 480, column: 23, scope: !5597, inlinedAt: !7357)
!7384 = !DILocation(line: 481, column: 29, scope: !5597, inlinedAt: !7357)
!7385 = !DILocation(line: 481, column: 35, scope: !5597, inlinedAt: !7357)
!7386 = !DILocation(line: 481, column: 42, scope: !5597, inlinedAt: !7357)
!7387 = !DILocation(line: 474, column: 23, scope: !5592, inlinedAt: !7356)
!7388 = !DILocation(line: 474, column: 29, scope: !5592, inlinedAt: !7356)
!7389 = !DILocation(line: 474, column: 36, scope: !5592, inlinedAt: !7356)
!7390 = !DILocation(line: 474, column: 9, scope: !5592, inlinedAt: !7356)
!7391 = !DILocation(line: 545, column: 4, scope: !5599, inlinedAt: !7347)
!7392 = !DILocation(line: 547, column: 25, scope: !5569, inlinedAt: !7347)
!7393 = !DILocation(line: 348, column: 7, scope: !5643, inlinedAt: !7354)
!7394 = !DILocation(line: 348, column: 6, scope: !5586, inlinedAt: !7354)
!7395 = !DILocation(line: 349, column: 3, scope: !5643, inlinedAt: !7354)
!7396 = !DILocation(line: 351, column: 6, scope: !5647, inlinedAt: !7354)
!7397 = !DILocation(line: 351, column: 11, scope: !5647, inlinedAt: !7354)
!7398 = !DILocation(line: 351, column: 6, scope: !5586, inlinedAt: !7354)
!7399 = !DILocation(line: 352, column: 3, scope: !5647, inlinedAt: !7354)
!7400 = !DILocation(line: 354, column: 32, scope: !5652, inlinedAt: !7354)
!7401 = !DILocation(line: 354, column: 37, scope: !5652, inlinedAt: !7354)
!7402 = !DILocation(line: 354, column: 42, scope: !5652, inlinedAt: !7354)
!7403 = !DILocation(line: 354, column: 45, scope: !5652, inlinedAt: !7354)
!7404 = !DILocation(line: 354, column: 50, scope: !5652, inlinedAt: !7354)
!7405 = !DILocation(line: 354, column: 6, scope: !5586, inlinedAt: !7354)
!7406 = !DILocation(line: 355, column: 3, scope: !5652, inlinedAt: !7354)
!7407 = !DILocation(line: 356, column: 32, scope: !5660, inlinedAt: !7354)
!7408 = !DILocation(line: 356, column: 37, scope: !5660, inlinedAt: !7354)
!7409 = !DILocation(line: 356, column: 43, scope: !5660, inlinedAt: !7354)
!7410 = !DILocation(line: 356, column: 46, scope: !5660, inlinedAt: !7354)
!7411 = !DILocation(line: 356, column: 51, scope: !5660, inlinedAt: !7354)
!7412 = !DILocation(line: 356, column: 6, scope: !5586, inlinedAt: !7354)
!7413 = !DILocation(line: 357, column: 3, scope: !5660, inlinedAt: !7354)
!7414 = !DILocation(line: 358, column: 6, scope: !5668, inlinedAt: !7354)
!7415 = !DILocation(line: 358, column: 11, scope: !5668, inlinedAt: !7354)
!7416 = !DILocation(line: 358, column: 6, scope: !5586, inlinedAt: !7354)
!7417 = !DILocation(line: 358, column: 26, scope: !5668, inlinedAt: !7354)
!7418 = !DILocation(line: 359, column: 6, scope: !5673, inlinedAt: !7354)
!7419 = !DILocation(line: 359, column: 11, scope: !5673, inlinedAt: !7354)
!7420 = !DILocation(line: 359, column: 6, scope: !5586, inlinedAt: !7354)
!7421 = !DILocation(line: 359, column: 26, scope: !5673, inlinedAt: !7354)
!7422 = !DILocation(line: 360, column: 6, scope: !5678, inlinedAt: !7354)
!7423 = !DILocation(line: 360, column: 11, scope: !5678, inlinedAt: !7354)
!7424 = !DILocation(line: 360, column: 6, scope: !5586, inlinedAt: !7354)
!7425 = !DILocation(line: 360, column: 26, scope: !5678, inlinedAt: !7354)
!7426 = !DILocation(line: 361, column: 6, scope: !5683, inlinedAt: !7354)
!7427 = !DILocation(line: 361, column: 11, scope: !5683, inlinedAt: !7354)
!7428 = !DILocation(line: 361, column: 6, scope: !5586, inlinedAt: !7354)
!7429 = !DILocation(line: 361, column: 26, scope: !5683, inlinedAt: !7354)
!7430 = !DILocation(line: 362, column: 6, scope: !5688, inlinedAt: !7354)
!7431 = !DILocation(line: 362, column: 11, scope: !5688, inlinedAt: !7354)
!7432 = !DILocation(line: 362, column: 6, scope: !5586, inlinedAt: !7354)
!7433 = !DILocation(line: 362, column: 26, scope: !5688, inlinedAt: !7354)
!7434 = !DILocation(line: 363, column: 6, scope: !5693, inlinedAt: !7354)
!7435 = !DILocation(line: 363, column: 11, scope: !5693, inlinedAt: !7354)
!7436 = !DILocation(line: 363, column: 6, scope: !5586, inlinedAt: !7354)
!7437 = !DILocation(line: 363, column: 26, scope: !5693, inlinedAt: !7354)
!7438 = !DILocation(line: 364, column: 6, scope: !5698, inlinedAt: !7354)
!7439 = !DILocation(line: 364, column: 11, scope: !5698, inlinedAt: !7354)
!7440 = !DILocation(line: 364, column: 6, scope: !5586, inlinedAt: !7354)
!7441 = !DILocation(line: 364, column: 26, scope: !5698, inlinedAt: !7354)
!7442 = !DILocation(line: 365, column: 6, scope: !5703, inlinedAt: !7354)
!7443 = !DILocation(line: 365, column: 11, scope: !5703, inlinedAt: !7354)
!7444 = !DILocation(line: 365, column: 6, scope: !5586, inlinedAt: !7354)
!7445 = !DILocation(line: 365, column: 26, scope: !5703, inlinedAt: !7354)
!7446 = !DILocation(line: 366, column: 6, scope: !5708, inlinedAt: !7354)
!7447 = !DILocation(line: 366, column: 11, scope: !5708, inlinedAt: !7354)
!7448 = !DILocation(line: 366, column: 6, scope: !5586, inlinedAt: !7354)
!7449 = !DILocation(line: 366, column: 26, scope: !5708, inlinedAt: !7354)
!7450 = !DILocation(line: 367, column: 6, scope: !5713, inlinedAt: !7354)
!7451 = !DILocation(line: 367, column: 11, scope: !5713, inlinedAt: !7354)
!7452 = !DILocation(line: 367, column: 6, scope: !5586, inlinedAt: !7354)
!7453 = !DILocation(line: 367, column: 26, scope: !5713, inlinedAt: !7354)
!7454 = !DILocation(line: 368, column: 6, scope: !5718, inlinedAt: !7354)
!7455 = !DILocation(line: 368, column: 11, scope: !5718, inlinedAt: !7354)
!7456 = !DILocation(line: 368, column: 6, scope: !5586, inlinedAt: !7354)
!7457 = !DILocation(line: 368, column: 26, scope: !5718, inlinedAt: !7354)
!7458 = !DILocation(line: 369, column: 6, scope: !5723, inlinedAt: !7354)
!7459 = !DILocation(line: 369, column: 11, scope: !5723, inlinedAt: !7354)
!7460 = !DILocation(line: 369, column: 6, scope: !5586, inlinedAt: !7354)
!7461 = !DILocation(line: 369, column: 26, scope: !5723, inlinedAt: !7354)
!7462 = !DILocation(line: 370, column: 6, scope: !5728, inlinedAt: !7354)
!7463 = !DILocation(line: 370, column: 11, scope: !5728, inlinedAt: !7354)
!7464 = !DILocation(line: 370, column: 6, scope: !5586, inlinedAt: !7354)
!7465 = !DILocation(line: 370, column: 26, scope: !5728, inlinedAt: !7354)
!7466 = !DILocation(line: 371, column: 6, scope: !5733, inlinedAt: !7354)
!7467 = !DILocation(line: 371, column: 11, scope: !5733, inlinedAt: !7354)
!7468 = !DILocation(line: 371, column: 6, scope: !5586, inlinedAt: !7354)
!7469 = !DILocation(line: 371, column: 26, scope: !5733, inlinedAt: !7354)
!7470 = !DILocation(line: 372, column: 6, scope: !5738, inlinedAt: !7354)
!7471 = !DILocation(line: 372, column: 11, scope: !5738, inlinedAt: !7354)
!7472 = !DILocation(line: 372, column: 6, scope: !5586, inlinedAt: !7354)
!7473 = !DILocation(line: 372, column: 26, scope: !5738, inlinedAt: !7354)
!7474 = !DILocation(line: 373, column: 6, scope: !5743, inlinedAt: !7354)
!7475 = !DILocation(line: 373, column: 11, scope: !5743, inlinedAt: !7354)
!7476 = !DILocation(line: 373, column: 6, scope: !5586, inlinedAt: !7354)
!7477 = !DILocation(line: 373, column: 26, scope: !5743, inlinedAt: !7354)
!7478 = !DILocation(line: 374, column: 6, scope: !5748, inlinedAt: !7354)
!7479 = !DILocation(line: 374, column: 11, scope: !5748, inlinedAt: !7354)
!7480 = !DILocation(line: 374, column: 6, scope: !5586, inlinedAt: !7354)
!7481 = !DILocation(line: 374, column: 26, scope: !5748, inlinedAt: !7354)
!7482 = !DILocation(line: 375, column: 6, scope: !5753, inlinedAt: !7354)
!7483 = !DILocation(line: 375, column: 11, scope: !5753, inlinedAt: !7354)
!7484 = !DILocation(line: 375, column: 6, scope: !5586, inlinedAt: !7354)
!7485 = !DILocation(line: 375, column: 27, scope: !5753, inlinedAt: !7354)
!7486 = !DILocation(line: 376, column: 6, scope: !5758, inlinedAt: !7354)
!7487 = !DILocation(line: 376, column: 11, scope: !5758, inlinedAt: !7354)
!7488 = !DILocation(line: 376, column: 6, scope: !5586, inlinedAt: !7354)
!7489 = !DILocation(line: 376, column: 32, scope: !5758, inlinedAt: !7354)
!7490 = !DILocation(line: 377, column: 6, scope: !5763, inlinedAt: !7354)
!7491 = !DILocation(line: 377, column: 11, scope: !5763, inlinedAt: !7354)
!7492 = !DILocation(line: 377, column: 6, scope: !5586, inlinedAt: !7354)
!7493 = !DILocation(line: 377, column: 32, scope: !5763, inlinedAt: !7354)
!7494 = !DILocation(line: 378, column: 6, scope: !5768, inlinedAt: !7354)
!7495 = !DILocation(line: 378, column: 11, scope: !5768, inlinedAt: !7354)
!7496 = !DILocation(line: 378, column: 6, scope: !5586, inlinedAt: !7354)
!7497 = !DILocation(line: 378, column: 32, scope: !5768, inlinedAt: !7354)
!7498 = !DILocation(line: 379, column: 6, scope: !5773, inlinedAt: !7354)
!7499 = !DILocation(line: 379, column: 11, scope: !5773, inlinedAt: !7354)
!7500 = !DILocation(line: 379, column: 6, scope: !5586, inlinedAt: !7354)
!7501 = !DILocation(line: 379, column: 33, scope: !5773, inlinedAt: !7354)
!7502 = !DILocation(line: 380, column: 6, scope: !5778, inlinedAt: !7354)
!7503 = !DILocation(line: 380, column: 11, scope: !5778, inlinedAt: !7354)
!7504 = !DILocation(line: 380, column: 6, scope: !5586, inlinedAt: !7354)
!7505 = !DILocation(line: 380, column: 33, scope: !5778, inlinedAt: !7354)
!7506 = !DILocation(line: 381, column: 6, scope: !5783, inlinedAt: !7354)
!7507 = !DILocation(line: 381, column: 11, scope: !5783, inlinedAt: !7354)
!7508 = !DILocation(line: 381, column: 6, scope: !5586, inlinedAt: !7354)
!7509 = !DILocation(line: 381, column: 33, scope: !5783, inlinedAt: !7354)
!7510 = !DILocation(line: 382, column: 2, scope: !5788, inlinedAt: !7354)
!7511 = !DILocation(line: 382, column: 2, scope: !5792, inlinedAt: !7354)
!7512 = !DILocation(line: 382, column: 2, scope: !5793, inlinedAt: !7354)
!7513 = !DILocation(line: 386, column: 1, scope: !5586, inlinedAt: !7354)
!7514 = !DILocation(line: 547, column: 9, scope: !5569, inlinedAt: !7347)
!7515 = !DILocation(line: 549, column: 8, scope: !5799, inlinedAt: !7347)
!7516 = !DILocation(line: 549, column: 7, scope: !5569, inlinedAt: !7347)
!7517 = !DILocation(line: 550, column: 4, scope: !5799, inlinedAt: !7347)
!7518 = !DILocation(line: 553, column: 33, scope: !5569, inlinedAt: !7347)
!7519 = !DILocation(line: 325, column: 6, scope: !5804, inlinedAt: !7352)
!7520 = !DILocation(line: 325, column: 6, scope: !5580, inlinedAt: !7352)
!7521 = !DILocation(line: 326, column: 3, scope: !5804, inlinedAt: !7352)
!7522 = !DILocation(line: 332, column: 9, scope: !5580, inlinedAt: !7352)
!7523 = !DILocation(line: 332, column: 15, scope: !5580, inlinedAt: !7352)
!7524 = !DILocation(line: 332, column: 2, scope: !5580, inlinedAt: !7352)
!7525 = !DILocation(line: 336, column: 1, scope: !5580, inlinedAt: !7352)
!7526 = !DILocation(line: 553, column: 5, scope: !5569, inlinedAt: !7347)
!7527 = !DILocation(line: 553, column: 41, scope: !5569, inlinedAt: !7347)
!7528 = !DILocation(line: 554, column: 5, scope: !5569, inlinedAt: !7347)
!7529 = !DILocation(line: 554, column: 12, scope: !5569, inlinedAt: !7347)
!7530 = !DILocation(line: 448, column: 31, scope: !5564, inlinedAt: !7346)
!7531 = !DILocation(line: 448, column: 34, scope: !5564, inlinedAt: !7346)
!7532 = !DILocation(line: 448, column: 14, scope: !5564, inlinedAt: !7346)
!7533 = !DILocation(line: 450, column: 22, scope: !5564, inlinedAt: !7346)
!7534 = !DILocation(line: 450, column: 25, scope: !5564, inlinedAt: !7346)
!7535 = !DILocation(line: 450, column: 30, scope: !5564, inlinedAt: !7346)
!7536 = !DILocation(line: 450, column: 36, scope: !5564, inlinedAt: !7346)
!7537 = !DILocation(line: 450, column: 8, scope: !5564, inlinedAt: !7346)
!7538 = !DILocation(line: 450, column: 6, scope: !5564, inlinedAt: !7346)
!7539 = !DILocation(line: 451, column: 9, scope: !5564, inlinedAt: !7346)
!7540 = !DILocation(line: 552, column: 3, scope: !5569, inlinedAt: !7347)
!7541 = !DILocation(line: 557, column: 19, scope: !5571, inlinedAt: !7347)
!7542 = !DILocation(line: 557, column: 25, scope: !5571, inlinedAt: !7347)
!7543 = !DILocation(line: 557, column: 9, scope: !5571, inlinedAt: !7347)
!7544 = !DILocation(line: 557, column: 2, scope: !5571, inlinedAt: !7347)
!7545 = !DILocation(line: 558, column: 1, scope: !5571, inlinedAt: !7347)
!7546 = !DILocation(line: 1258, column: 11, scope: !7344)
!7547 = !DILocation(line: 1258, column: 9, scope: !7344)
!7548 = !DILocation(line: 1259, column: 7, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7344, file: !3, line: 1259, column: 6)
!7550 = !DILocation(line: 1259, column: 6, scope: !7344)
!7551 = !DILocation(line: 1260, column: 3, scope: !7549)
!7552 = !DILocation(line: 1262, column: 19, scope: !7344)
!7553 = !DILocation(line: 1262, column: 23, scope: !7344)
!7554 = !DILocation(line: 1262, column: 27, scope: !7344)
!7555 = !DILocation(line: 1262, column: 42, scope: !7344)
!7556 = !DILocation(line: 1262, column: 2, scope: !7344)
!7557 = !DILocation(line: 1262, column: 10, scope: !7344)
!7558 = !DILocation(line: 1262, column: 17, scope: !7344)
!7559 = !DILocation(line: 1263, column: 2, scope: !7344)
!7560 = !DILocation(line: 1263, column: 10, scope: !7344)
!7561 = !DILocation(line: 1263, column: 22, scope: !7344)
!7562 = !DILocation(line: 1264, column: 2, scope: !7344)
!7563 = !DILocation(line: 1264, column: 10, scope: !7344)
!7564 = !DILocation(line: 1264, column: 19, scope: !7344)
!7565 = !DILocation(line: 1265, column: 21, scope: !7344)
!7566 = !DILocation(line: 1265, column: 2, scope: !7344)
!7567 = !DILocation(line: 1265, column: 10, scope: !7344)
!7568 = !DILocation(line: 1265, column: 19, scope: !7344)
!7569 = !DILocation(line: 1266, column: 2, scope: !7344)
!7570 = !DILocation(line: 1266, column: 10, scope: !7344)
!7571 = !DILocation(line: 1266, column: 19, scope: !7344)
!7572 = !DILocation(line: 1267, column: 21, scope: !7344)
!7573 = !DILocation(line: 1267, column: 2, scope: !7344)
!7574 = !DILocation(line: 1267, column: 10, scope: !7344)
!7575 = !DILocation(line: 1267, column: 19, scope: !7344)
!7576 = !DILocation(line: 1269, column: 9, scope: !7344)
!7577 = !DILocation(line: 1269, column: 2, scope: !7344)
!7578 = !DILocation(line: 1270, column: 1, scope: !7344)
!7579 = distinct !DISubprogram(name: "gpiochip_irq_map", scope: !3, file: !3, line: 1297, type: !3745, scopeLine: 1299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!7580 = !DILocalVariable(name: "d", arg: 1, scope: !7579, file: !3, line: 1297, type: !3604)
!7581 = !DILocation(line: 1297, column: 41, scope: !7579)
!7582 = !DILocalVariable(name: "irq", arg: 2, scope: !7579, file: !3, line: 1297, type: !7)
!7583 = !DILocation(line: 1297, column: 57, scope: !7579)
!7584 = !DILocalVariable(name: "hwirq", arg: 3, scope: !7579, file: !3, line: 1298, type: !3747)
!7585 = !DILocation(line: 1298, column: 24, scope: !7579)
!7586 = !DILocalVariable(name: "gc", scope: !7579, file: !3, line: 1300, type: !4096)
!7587 = !DILocation(line: 1300, column: 20, scope: !7579)
!7588 = !DILocation(line: 1300, column: 25, scope: !7579)
!7589 = !DILocation(line: 1300, column: 28, scope: !7579)
!7590 = !DILocalVariable(name: "ret", scope: !7579, file: !3, line: 1301, type: !224)
!7591 = !DILocation(line: 1301, column: 6, scope: !7579)
!7592 = !DILocation(line: 1303, column: 34, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 1303, column: 6)
!7594 = !DILocation(line: 1303, column: 38, scope: !7593)
!7595 = !DILocation(line: 1303, column: 7, scope: !7593)
!7596 = !DILocation(line: 1303, column: 6, scope: !7579)
!7597 = !DILocation(line: 1304, column: 3, scope: !7593)
!7598 = !DILocation(line: 1306, column: 20, scope: !7579)
!7599 = !DILocation(line: 1306, column: 25, scope: !7579)
!7600 = !DILocation(line: 1306, column: 2, scope: !7579)
!7601 = !DILocation(line: 1311, column: 24, scope: !7579)
!7602 = !DILocation(line: 1311, column: 29, scope: !7579)
!7603 = !DILocation(line: 1311, column: 33, scope: !7579)
!7604 = !DILocation(line: 1311, column: 37, scope: !7579)
!7605 = !DILocation(line: 1311, column: 47, scope: !7579)
!7606 = !DILocation(line: 1311, column: 51, scope: !7579)
!7607 = !DILocation(line: 1311, column: 55, scope: !7579)
!7608 = !DILocation(line: 1311, column: 2, scope: !7579)
!7609 = !DILocation(line: 1312, column: 27, scope: !7579)
!7610 = !DILocation(line: 1312, column: 32, scope: !7579)
!7611 = !DILocation(line: 1312, column: 36, scope: !7579)
!7612 = !DILocation(line: 1312, column: 40, scope: !7579)
!7613 = !DILocation(line: 1312, column: 46, scope: !7579)
!7614 = !DILocation(line: 1312, column: 50, scope: !7579)
!7615 = !DILocation(line: 1312, column: 54, scope: !7579)
!7616 = !DILocation(line: 1312, column: 2, scope: !7579)
!7617 = !DILocation(line: 1314, column: 6, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 1314, column: 6)
!7619 = !DILocation(line: 1314, column: 10, scope: !7618)
!7620 = !DILocation(line: 1314, column: 14, scope: !7618)
!7621 = !DILocation(line: 1314, column: 6, scope: !7579)
!7622 = !DILocation(line: 1315, column: 25, scope: !7618)
!7623 = !DILocation(line: 1315, column: 3, scope: !7618)
!7624 = !DILocation(line: 1316, column: 18, scope: !7579)
!7625 = !DILocation(line: 1316, column: 2, scope: !7579)
!7626 = !DILocation(line: 1318, column: 6, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 1318, column: 6)
!7628 = !DILocation(line: 1318, column: 10, scope: !7627)
!7629 = !DILocation(line: 1318, column: 14, scope: !7627)
!7630 = !DILocation(line: 1318, column: 26, scope: !7627)
!7631 = !DILocation(line: 1318, column: 6, scope: !7579)
!7632 = !DILocation(line: 1319, column: 24, scope: !7627)
!7633 = !DILocation(line: 1319, column: 29, scope: !7627)
!7634 = !DILocation(line: 1319, column: 33, scope: !7627)
!7635 = !DILocation(line: 1319, column: 37, scope: !7627)
!7636 = !DILocation(line: 1319, column: 9, scope: !7627)
!7637 = !DILocation(line: 1319, column: 7, scope: !7627)
!7638 = !DILocation(line: 1319, column: 3, scope: !7627)
!7639 = !DILocation(line: 1320, column: 11, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7627, file: !3, line: 1320, column: 11)
!7641 = !DILocation(line: 1320, column: 15, scope: !7640)
!7642 = !DILocation(line: 1320, column: 19, scope: !7640)
!7643 = !DILocation(line: 1320, column: 11, scope: !7627)
!7644 = !DILocation(line: 1321, column: 24, scope: !7640)
!7645 = !DILocation(line: 1321, column: 29, scope: !7640)
!7646 = !DILocation(line: 1321, column: 33, scope: !7640)
!7647 = !DILocation(line: 1321, column: 37, scope: !7640)
!7648 = !DILocation(line: 1321, column: 41, scope: !7640)
!7649 = !DILocation(line: 1321, column: 9, scope: !7640)
!7650 = !DILocation(line: 1321, column: 7, scope: !7640)
!7651 = !DILocation(line: 1321, column: 3, scope: !7640)
!7652 = !DILocation(line: 1323, column: 6, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 1323, column: 6)
!7654 = !DILocation(line: 1323, column: 10, scope: !7653)
!7655 = !DILocation(line: 1323, column: 6, scope: !7579)
!7656 = !DILocation(line: 1324, column: 10, scope: !7653)
!7657 = !DILocation(line: 1324, column: 3, scope: !7653)
!7658 = !DILocation(line: 1330, column: 6, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 1330, column: 6)
!7660 = !DILocation(line: 1330, column: 10, scope: !7659)
!7661 = !DILocation(line: 1330, column: 14, scope: !7659)
!7662 = !DILocation(line: 1330, column: 27, scope: !7659)
!7663 = !DILocation(line: 1330, column: 6, scope: !7579)
!7664 = !DILocation(line: 1331, column: 20, scope: !7659)
!7665 = !DILocation(line: 1331, column: 25, scope: !7659)
!7666 = !DILocation(line: 1331, column: 29, scope: !7659)
!7667 = !DILocation(line: 1331, column: 33, scope: !7659)
!7668 = !DILocation(line: 1331, column: 3, scope: !7659)
!7669 = !DILocation(line: 1333, column: 2, scope: !7579)
!7670 = !DILocation(line: 1334, column: 1, scope: !7579)
!7671 = distinct !DISubprogram(name: "irq_set_lockdep_class", scope: !3950, file: !3950, line: 256, type: !7672, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!7672 = !DISubroutineType(types: !7673)
!7673 = !{null, !7, !4197, !4197}
!7674 = !DILocalVariable(name: "irq", arg: 1, scope: !7671, file: !3950, line: 256, type: !7)
!7675 = !DILocation(line: 256, column: 36, scope: !7671)
!7676 = !DILocalVariable(name: "lock_class", arg: 2, scope: !7671, file: !3950, line: 256, type: !4197)
!7677 = !DILocation(line: 256, column: 64, scope: !7671)
!7678 = !DILocalVariable(name: "request_class", arg: 3, scope: !7671, file: !3950, line: 257, type: !4197)
!7679 = !DILocation(line: 257, column: 32, scope: !7671)
!7680 = !DILocalVariable(name: "desc", scope: !7671, file: !3950, line: 259, type: !3948)
!7681 = !DILocation(line: 259, column: 19, scope: !7671)
!7682 = !DILocation(line: 259, column: 38, scope: !7671)
!7683 = !DILocation(line: 259, column: 26, scope: !7671)
!7684 = !DILocation(line: 261, column: 6, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7671, file: !3950, line: 261, column: 6)
!7686 = !DILocation(line: 261, column: 6, scope: !7671)
!7687 = !DILocation(line: 262, column: 3, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7685, file: !3950, line: 261, column: 12)
!7689 = !DILocation(line: 262, column: 3, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7688, file: !3950, line: 262, column: 3)
!7691 = !DILocation(line: 263, column: 3, scope: !7688)
!7692 = !DILocation(line: 263, column: 3, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7688, file: !3950, line: 263, column: 3)
!7694 = !DILocation(line: 264, column: 2, scope: !7688)
!7695 = !DILocation(line: 265, column: 1, scope: !7671)
!7696 = distinct !DISubprogram(name: "irq_set_chip_and_handler", scope: !102, file: !102, line: 712, type: !7697, scopeLine: 714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!7697 = !DISubroutineType(types: !7698)
!7698 = !{null, !7, !3790, !3943}
!7699 = !DILocalVariable(name: "irq", arg: 1, scope: !7696, file: !102, line: 712, type: !7)
!7700 = !DILocation(line: 712, column: 58, scope: !7696)
!7701 = !DILocalVariable(name: "chip", arg: 2, scope: !7696, file: !102, line: 712, type: !3790)
!7702 = !DILocation(line: 712, column: 80, scope: !7696)
!7703 = !DILocalVariable(name: "handle", arg: 3, scope: !7696, file: !102, line: 713, type: !3943)
!7704 = !DILocation(line: 713, column: 29, scope: !7696)
!7705 = !DILocation(line: 715, column: 32, scope: !7696)
!7706 = !DILocation(line: 715, column: 37, scope: !7696)
!7707 = !DILocation(line: 715, column: 43, scope: !7696)
!7708 = !DILocation(line: 715, column: 2, scope: !7696)
!7709 = !DILocation(line: 716, column: 1, scope: !7696)
!7710 = distinct !DISubprogram(name: "irq_set_nested_thread", scope: !102, file: !102, line: 786, type: !7711, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!7711 = !DISubroutineType(types: !7712)
!7712 = !{null, !7, !508}
!7713 = !DILocalVariable(name: "irq", arg: 1, scope: !7710, file: !102, line: 786, type: !7)
!7714 = !DILocation(line: 786, column: 55, scope: !7710)
!7715 = !DILocalVariable(name: "nest", arg: 2, scope: !7710, file: !102, line: 786, type: !508)
!7716 = !DILocation(line: 786, column: 65, scope: !7710)
!7717 = !DILocation(line: 788, column: 6, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7710, file: !102, line: 788, column: 6)
!7719 = !DILocation(line: 788, column: 6, scope: !7710)
!7720 = !DILocation(line: 789, column: 24, scope: !7718)
!7721 = !DILocation(line: 789, column: 3, scope: !7718)
!7722 = !DILocation(line: 791, column: 26, scope: !7718)
!7723 = !DILocation(line: 791, column: 3, scope: !7718)
!7724 = !DILocation(line: 792, column: 1, scope: !7710)
!7725 = distinct !DISubprogram(name: "irq_set_noprobe", scope: !102, file: !102, line: 766, type: !7726, scopeLine: 767, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!7726 = !DISubroutineType(types: !7727)
!7727 = !{null, !7}
!7728 = !DILocalVariable(name: "irq", arg: 1, scope: !7725, file: !102, line: 766, type: !7)
!7729 = !DILocation(line: 766, column: 49, scope: !7725)
!7730 = !DILocation(line: 768, column: 20, scope: !7725)
!7731 = !DILocation(line: 768, column: 2, scope: !7725)
!7732 = !DILocation(line: 769, column: 1, scope: !7725)
!7733 = distinct !DISubprogram(name: "gpiochip_irq_unmap", scope: !3, file: !3, line: 1337, type: !3750, scopeLine: 1338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!7734 = !DILocalVariable(name: "d", arg: 1, scope: !7733, file: !3, line: 1337, type: !3604)
!7735 = !DILocation(line: 1337, column: 44, scope: !7733)
!7736 = !DILocalVariable(name: "irq", arg: 2, scope: !7733, file: !3, line: 1337, type: !7)
!7737 = !DILocation(line: 1337, column: 60, scope: !7733)
!7738 = !DILocalVariable(name: "gc", scope: !7733, file: !3, line: 1339, type: !4096)
!7739 = !DILocation(line: 1339, column: 20, scope: !7733)
!7740 = !DILocation(line: 1339, column: 25, scope: !7733)
!7741 = !DILocation(line: 1339, column: 28, scope: !7733)
!7742 = !DILocation(line: 1341, column: 6, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7733, file: !3, line: 1341, column: 6)
!7744 = !DILocation(line: 1341, column: 10, scope: !7743)
!7745 = !DILocation(line: 1341, column: 14, scope: !7743)
!7746 = !DILocation(line: 1341, column: 6, scope: !7733)
!7747 = !DILocation(line: 1342, column: 25, scope: !7743)
!7748 = !DILocation(line: 1342, column: 3, scope: !7743)
!7749 = !DILocation(line: 1343, column: 27, scope: !7733)
!7750 = !DILocation(line: 1343, column: 2, scope: !7733)
!7751 = !DILocation(line: 1344, column: 20, scope: !7733)
!7752 = !DILocation(line: 1344, column: 2, scope: !7733)
!7753 = !DILocation(line: 1345, column: 1, scope: !7733)
!7754 = distinct !DISubprogram(name: "gpiochip_irq_domain_activate", scope: !3, file: !3, line: 1370, type: !3769, scopeLine: 1372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!7755 = !DILocalVariable(name: "domain", arg: 1, scope: !7754, file: !3, line: 1370, type: !3604)
!7756 = !DILocation(line: 1370, column: 53, scope: !7754)
!7757 = !DILocalVariable(name: "data", arg: 2, scope: !7754, file: !3, line: 1371, type: !3771)
!7758 = !DILocation(line: 1371, column: 23, scope: !7754)
!7759 = !DILocalVariable(name: "reserve", arg: 3, scope: !7754, file: !3, line: 1371, type: !508)
!7760 = !DILocation(line: 1371, column: 34, scope: !7754)
!7761 = !DILocalVariable(name: "gc", scope: !7754, file: !3, line: 1373, type: !4096)
!7762 = !DILocation(line: 1373, column: 20, scope: !7754)
!7763 = !DILocation(line: 1373, column: 25, scope: !7754)
!7764 = !DILocation(line: 1373, column: 33, scope: !7754)
!7765 = !DILocation(line: 1375, column: 30, scope: !7754)
!7766 = !DILocation(line: 1375, column: 34, scope: !7754)
!7767 = !DILocation(line: 1375, column: 40, scope: !7754)
!7768 = !DILocation(line: 1375, column: 9, scope: !7754)
!7769 = !DILocation(line: 1375, column: 2, scope: !7754)
!7770 = distinct !DISubprogram(name: "gpiochip_lock_as_irq", scope: !3, file: !3, line: 3216, type: !4106, scopeLine: 3217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!7771 = !DILocalVariable(name: "gc", arg: 1, scope: !7770, file: !3, line: 3216, type: !4096)
!7772 = !DILocation(line: 3216, column: 44, scope: !7770)
!7773 = !DILocalVariable(name: "offset", arg: 2, scope: !7770, file: !3, line: 3216, type: !7)
!7774 = !DILocation(line: 3216, column: 61, scope: !7770)
!7775 = !DILocalVariable(name: "desc", scope: !7770, file: !3, line: 3218, type: !4232)
!7776 = !DILocation(line: 3218, column: 20, scope: !7770)
!7777 = !DILocation(line: 3220, column: 27, scope: !7770)
!7778 = !DILocation(line: 3220, column: 31, scope: !7770)
!7779 = !DILocation(line: 3220, column: 9, scope: !7770)
!7780 = !DILocation(line: 3220, column: 7, scope: !7770)
!7781 = !DILocation(line: 3221, column: 13, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7770, file: !3, line: 3221, column: 6)
!7783 = !DILocation(line: 3221, column: 6, scope: !7782)
!7784 = !DILocation(line: 3221, column: 6, scope: !7770)
!7785 = !DILocation(line: 3222, column: 18, scope: !7782)
!7786 = !DILocation(line: 3222, column: 10, scope: !7782)
!7787 = !DILocation(line: 3222, column: 3, scope: !7782)
!7788 = !DILocation(line: 3228, column: 7, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7770, file: !3, line: 3228, column: 6)
!7790 = !DILocation(line: 3228, column: 11, scope: !7789)
!7791 = !DILocation(line: 3228, column: 21, scope: !7789)
!7792 = !DILocation(line: 3228, column: 24, scope: !7789)
!7793 = !DILocation(line: 3228, column: 28, scope: !7789)
!7794 = !DILocation(line: 3228, column: 6, scope: !7770)
!7795 = !DILocalVariable(name: "dir", scope: !7796, file: !3, line: 3229, type: !224)
!7796 = distinct !DILexicalBlock(scope: !7789, file: !3, line: 3228, column: 43)
!7797 = !DILocation(line: 3229, column: 7, scope: !7796)
!7798 = !DILocation(line: 3229, column: 33, scope: !7796)
!7799 = !DILocation(line: 3229, column: 13, scope: !7796)
!7800 = !DILocation(line: 3231, column: 7, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7796, file: !3, line: 3231, column: 7)
!7802 = !DILocation(line: 3231, column: 11, scope: !7801)
!7803 = !DILocation(line: 3231, column: 7, scope: !7796)
!7804 = !DILocation(line: 3232, column: 4, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7801, file: !3, line: 3231, column: 16)
!7806 = !DILocation(line: 3234, column: 11, scope: !7805)
!7807 = !DILocation(line: 3234, column: 4, scope: !7805)
!7808 = !DILocation(line: 3236, column: 2, scope: !7796)
!7809 = !DILocation(line: 3239, column: 29, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7770, file: !3, line: 3239, column: 6)
!7811 = !DILocation(line: 3239, column: 35, scope: !7810)
!7812 = !DILocation(line: 3239, column: 6, scope: !7810)
!7813 = !DILocation(line: 3239, column: 42, scope: !7810)
!7814 = !DILocation(line: 3240, column: 34, scope: !7810)
!7815 = !DILocation(line: 3240, column: 40, scope: !7810)
!7816 = !DILocation(line: 3240, column: 7, scope: !7810)
!7817 = !DILocation(line: 3239, column: 6, scope: !7770)
!7818 = !DILocation(line: 3241, column: 3, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7810, file: !3, line: 3240, column: 48)
!7820 = !DILocation(line: 3244, column: 3, scope: !7819)
!7821 = !DILocation(line: 3247, column: 29, scope: !7770)
!7822 = !DILocation(line: 3247, column: 35, scope: !7770)
!7823 = !DILocation(line: 3247, column: 2, scope: !7770)
!7824 = !DILocation(line: 3248, column: 32, scope: !7770)
!7825 = !DILocation(line: 3248, column: 38, scope: !7770)
!7826 = !DILocation(line: 3248, column: 2, scope: !7770)
!7827 = !DILocation(line: 3255, column: 7, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7770, file: !3, line: 3255, column: 6)
!7829 = !DILocation(line: 3255, column: 13, scope: !7828)
!7830 = !DILocation(line: 3255, column: 6, scope: !7770)
!7831 = !DILocation(line: 3256, column: 18, scope: !7828)
!7832 = !DILocation(line: 3256, column: 3, scope: !7828)
!7833 = !DILocation(line: 3258, column: 2, scope: !7770)
!7834 = !DILocation(line: 3259, column: 1, scope: !7770)
!7835 = distinct !DISubprogram(name: "gpiochip_irq_domain_deactivate", scope: !3, file: !3, line: 1388, type: !3874, scopeLine: 1390, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!7836 = !DILocalVariable(name: "domain", arg: 1, scope: !7835, file: !3, line: 1388, type: !3604)
!7837 = !DILocation(line: 1388, column: 56, scope: !7835)
!7838 = !DILocalVariable(name: "data", arg: 2, scope: !7835, file: !3, line: 1389, type: !3771)
!7839 = !DILocation(line: 1389, column: 26, scope: !7835)
!7840 = !DILocalVariable(name: "gc", scope: !7835, file: !3, line: 1391, type: !4096)
!7841 = !DILocation(line: 1391, column: 20, scope: !7835)
!7842 = !DILocation(line: 1391, column: 25, scope: !7835)
!7843 = !DILocation(line: 1391, column: 33, scope: !7835)
!7844 = !DILocation(line: 1393, column: 32, scope: !7835)
!7845 = !DILocation(line: 1393, column: 36, scope: !7835)
!7846 = !DILocation(line: 1393, column: 42, scope: !7835)
!7847 = !DILocation(line: 1393, column: 9, scope: !7835)
!7848 = !DILocation(line: 1393, column: 2, scope: !7835)
!7849 = distinct !DISubprogram(name: "gpiochip_unlock_as_irq", scope: !3, file: !3, line: 3270, type: !4110, scopeLine: 3271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!7850 = !DILocalVariable(name: "gc", arg: 1, scope: !7849, file: !3, line: 3270, type: !4096)
!7851 = !DILocation(line: 3270, column: 47, scope: !7849)
!7852 = !DILocalVariable(name: "offset", arg: 2, scope: !7849, file: !3, line: 3270, type: !7)
!7853 = !DILocation(line: 3270, column: 64, scope: !7849)
!7854 = !DILocalVariable(name: "desc", scope: !7849, file: !3, line: 3272, type: !4232)
!7855 = !DILocation(line: 3272, column: 20, scope: !7849)
!7856 = !DILocation(line: 3274, column: 27, scope: !7849)
!7857 = !DILocation(line: 3274, column: 31, scope: !7849)
!7858 = !DILocation(line: 3274, column: 9, scope: !7849)
!7859 = !DILocation(line: 3274, column: 7, scope: !7849)
!7860 = !DILocation(line: 3275, column: 13, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7849, file: !3, line: 3275, column: 6)
!7862 = !DILocation(line: 3275, column: 6, scope: !7861)
!7863 = !DILocation(line: 3275, column: 6, scope: !7849)
!7864 = !DILocation(line: 3276, column: 3, scope: !7861)
!7865 = !DILocation(line: 3278, column: 31, scope: !7849)
!7866 = !DILocation(line: 3278, column: 37, scope: !7849)
!7867 = !DILocation(line: 3278, column: 2, scope: !7849)
!7868 = !DILocation(line: 3279, column: 34, scope: !7849)
!7869 = !DILocation(line: 3279, column: 40, scope: !7849)
!7870 = !DILocation(line: 3279, column: 2, scope: !7849)
!7871 = !DILocation(line: 3282, column: 6, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7849, file: !3, line: 3282, column: 6)
!7873 = !DILocation(line: 3282, column: 12, scope: !7872)
!7874 = !DILocation(line: 3282, column: 18, scope: !7872)
!7875 = !DILocation(line: 3282, column: 29, scope: !7872)
!7876 = !DILocation(line: 3282, column: 35, scope: !7872)
!7877 = !DILocation(line: 3282, column: 22, scope: !7872)
!7878 = !DILocation(line: 3282, column: 6, scope: !7849)
!7879 = !DILocation(line: 3283, column: 18, scope: !7872)
!7880 = !DILocation(line: 3283, column: 3, scope: !7872)
!7881 = !DILocation(line: 3284, column: 1, scope: !7849)
!7882 = distinct !DISubprogram(name: "gpiochip_irqchip_add_key", scope: !3, file: !3, line: 1677, type: !7883, scopeLine: 1685, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!7883 = !DISubroutineType(types: !7884)
!7884 = !{!224, !4096, !3790, !7, !3943, !7, !508, !4197, !4197}
!7885 = !DILocalVariable(name: "gc", arg: 1, scope: !7882, file: !3, line: 1677, type: !4096)
!7886 = !DILocation(line: 1677, column: 48, scope: !7882)
!7887 = !DILocalVariable(name: "irqchip", arg: 2, scope: !7882, file: !3, line: 1678, type: !3790)
!7888 = !DILocation(line: 1678, column: 26, scope: !7882)
!7889 = !DILocalVariable(name: "first_irq", arg: 3, scope: !7882, file: !3, line: 1679, type: !7)
!7890 = !DILocation(line: 1679, column: 22, scope: !7882)
!7891 = !DILocalVariable(name: "handler", arg: 4, scope: !7882, file: !3, line: 1680, type: !3943)
!7892 = !DILocation(line: 1680, column: 28, scope: !7882)
!7893 = !DILocalVariable(name: "type", arg: 5, scope: !7882, file: !3, line: 1681, type: !7)
!7894 = !DILocation(line: 1681, column: 22, scope: !7882)
!7895 = !DILocalVariable(name: "threaded", arg: 6, scope: !7882, file: !3, line: 1682, type: !508)
!7896 = !DILocation(line: 1682, column: 14, scope: !7882)
!7897 = !DILocalVariable(name: "lock_key", arg: 7, scope: !7882, file: !3, line: 1683, type: !4197)
!7898 = !DILocation(line: 1683, column: 32, scope: !7882)
!7899 = !DILocalVariable(name: "request_key", arg: 8, scope: !7882, file: !3, line: 1684, type: !4197)
!7900 = !DILocation(line: 1684, column: 32, scope: !7882)
!7901 = !DILocalVariable(name: "of_node", scope: !7882, file: !3, line: 1686, type: !3618)
!7902 = !DILocation(line: 1686, column: 22, scope: !7882)
!7903 = !DILocation(line: 1688, column: 7, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7882, file: !3, line: 1688, column: 6)
!7905 = !DILocation(line: 1688, column: 10, scope: !7904)
!7906 = !DILocation(line: 1688, column: 14, scope: !7904)
!7907 = !DILocation(line: 1688, column: 6, scope: !7882)
!7908 = !DILocation(line: 1689, column: 3, scope: !7904)
!7909 = !DILocation(line: 1691, column: 7, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7882, file: !3, line: 1691, column: 6)
!7911 = !DILocation(line: 1691, column: 11, scope: !7910)
!7912 = !DILocation(line: 1691, column: 6, scope: !7882)
!7913 = !DILocation(line: 1692, column: 3, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7910, file: !3, line: 1691, column: 19)
!7915 = !DILocation(line: 1693, column: 3, scope: !7914)
!7916 = !DILocation(line: 1695, column: 21, scope: !7882)
!7917 = !DILocation(line: 1695, column: 2, scope: !7882)
!7918 = !DILocation(line: 1695, column: 6, scope: !7882)
!7919 = !DILocation(line: 1695, column: 10, scope: !7882)
!7920 = !DILocation(line: 1695, column: 19, scope: !7882)
!7921 = !DILocation(line: 1696, column: 12, scope: !7882)
!7922 = !DILocation(line: 1696, column: 16, scope: !7882)
!7923 = !DILocation(line: 1696, column: 24, scope: !7882)
!7924 = !DILocation(line: 1696, column: 10, scope: !7882)
!7925 = !DILocation(line: 1703, column: 6, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7882, file: !3, line: 1703, column: 6)
!7927 = !DILocation(line: 1703, column: 10, scope: !7926)
!7928 = !DILocation(line: 1703, column: 6, scope: !7882)
!7929 = !DILocation(line: 1704, column: 13, scope: !7926)
!7930 = !DILocation(line: 1704, column: 17, scope: !7926)
!7931 = !DILocation(line: 1704, column: 11, scope: !7926)
!7932 = !DILocation(line: 1704, column: 3, scope: !7926)
!7933 = !DILocalVariable(name: "__ret_warn_on", scope: !7934, file: !3, line: 1711, type: !224)
!7934 = distinct !DILexicalBlock(scope: !7935, file: !3, line: 1711, column: 6)
!7935 = distinct !DILexicalBlock(scope: !7882, file: !3, line: 1711, column: 6)
!7936 = !DILocation(line: 1711, column: 6, scope: !7934)
!7937 = !DILocation(line: 0, scope: !7934)
!7938 = !DILocation(line: 1711, column: 6, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7934, file: !3, line: 1711, column: 6)
!7940 = !DILocation(line: 1711, column: 6, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7939, file: !3, line: 1711, column: 6)
!7942 = !DILocation(line: 1711, column: 6, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7941, file: !3, line: 1711, column: 6)
!7944 = !DILocation(line: 1711, column: 6, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7941, file: !3, line: 1711, column: 6)
!7946 = !DILocation(line: 1711, column: 6, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7945, file: !3, line: 1711, column: 6)
!7948 = !DILocation(line: 1711, column: 6, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7945, file: !3, line: 1711, column: 6)
!7950 = !{i32 -2141414695, i32 -2141414666, i32 -2141414620, i32 -2141414562, i32 -2141414508, i32 -2141414454, i32 -2141414399, i32 -2141414368}
!7951 = !DILocation(line: 1711, column: 6, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7945, file: !3, line: 1711, column: 6)
!7953 = !{i32 -2141413952, i32 -2141413945, i32 -2141413893, i32 -2141413862, i32 -2141413832}
!7954 = !DILocation(line: 1711, column: 6, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7945, file: !3, line: 1711, column: 6)
!7956 = !DILocation(line: 1711, column: 6, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7941, file: !3, line: 1711, column: 6)
!7958 = !DILocation(line: 1711, column: 6, scope: !7935)
!7959 = !DILocation(line: 1711, column: 6, scope: !7882)
!7960 = !DILocation(line: 1713, column: 8, scope: !7935)
!7961 = !DILocation(line: 1713, column: 3, scope: !7935)
!7962 = !DILocation(line: 1714, column: 25, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7882, file: !3, line: 1714, column: 6)
!7964 = !DILocation(line: 1714, column: 29, scope: !7963)
!7965 = !DILocation(line: 1714, column: 6, scope: !7963)
!7966 = !DILocation(line: 1714, column: 37, scope: !7963)
!7967 = !DILocation(line: 1714, column: 40, scope: !7963)
!7968 = !DILocation(line: 1714, column: 45, scope: !7963)
!7969 = !DILocation(line: 1714, column: 6, scope: !7882)
!7970 = !DILocalVariable(name: "__to_acpi_device_node_fwnode", scope: !7971, file: !3, line: 1715, type: !3631)
!7971 = distinct !DILexicalBlock(scope: !7972, file: !3, line: 1715, column: 3)
!7972 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 1714, column: 63)
!7973 = !DILocation(line: 1715, column: 3, scope: !7971)
!7974 = !DILocalVariable(name: "__mptr", scope: !7975, file: !3, line: 1715, type: !218)
!7975 = distinct !DILexicalBlock(scope: !7971, file: !3, line: 1715, column: 3)
!7976 = !DILocation(line: 1715, column: 3, scope: !7975)
!7977 = !DILocation(line: 1715, column: 3, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7975, file: !3, line: 1715, column: 3)
!7979 = !DILocation(line: 1715, column: 3, scope: !7972)
!7980 = !DILocation(line: 1717, column: 8, scope: !7972)
!7981 = !DILocation(line: 1718, column: 2, scope: !7972)
!7982 = !DILocation(line: 1720, column: 17, scope: !7882)
!7983 = !DILocation(line: 1720, column: 2, scope: !7882)
!7984 = !DILocation(line: 1720, column: 6, scope: !7882)
!7985 = !DILocation(line: 1720, column: 10, scope: !7882)
!7986 = !DILocation(line: 1720, column: 15, scope: !7882)
!7987 = !DILocation(line: 1721, column: 20, scope: !7882)
!7988 = !DILocation(line: 1721, column: 2, scope: !7882)
!7989 = !DILocation(line: 1721, column: 6, scope: !7882)
!7990 = !DILocation(line: 1721, column: 10, scope: !7882)
!7991 = !DILocation(line: 1721, column: 18, scope: !7882)
!7992 = !DILocation(line: 1722, column: 25, scope: !7882)
!7993 = !DILocation(line: 1722, column: 2, scope: !7882)
!7994 = !DILocation(line: 1722, column: 6, scope: !7882)
!7995 = !DILocation(line: 1722, column: 10, scope: !7882)
!7996 = !DILocation(line: 1722, column: 23, scope: !7882)
!7997 = !DILocation(line: 1723, column: 2, scope: !7882)
!7998 = !DILocation(line: 1723, column: 6, scope: !7882)
!7999 = !DILocation(line: 1723, column: 13, scope: !7882)
!8000 = !DILocation(line: 1724, column: 21, scope: !7882)
!8001 = !DILocation(line: 1724, column: 2, scope: !7882)
!8002 = !DILocation(line: 1724, column: 6, scope: !7882)
!8003 = !DILocation(line: 1724, column: 10, scope: !7882)
!8004 = !DILocation(line: 1724, column: 19, scope: !7882)
!8005 = !DILocation(line: 1725, column: 24, scope: !7882)
!8006 = !DILocation(line: 1725, column: 2, scope: !7882)
!8007 = !DILocation(line: 1725, column: 6, scope: !7882)
!8008 = !DILocation(line: 1725, column: 10, scope: !7882)
!8009 = !DILocation(line: 1725, column: 22, scope: !7882)
!8010 = !DILocation(line: 1726, column: 41, scope: !7882)
!8011 = !DILocation(line: 1727, column: 6, scope: !7882)
!8012 = !DILocation(line: 1727, column: 10, scope: !7882)
!8013 = !DILocation(line: 1727, column: 17, scope: !7882)
!8014 = !DILocation(line: 1728, column: 28, scope: !7882)
!8015 = !DILocation(line: 1726, column: 19, scope: !7882)
!8016 = !DILocation(line: 1726, column: 2, scope: !7882)
!8017 = !DILocation(line: 1726, column: 6, scope: !7882)
!8018 = !DILocation(line: 1726, column: 10, scope: !7882)
!8019 = !DILocation(line: 1726, column: 17, scope: !7882)
!8020 = !DILocation(line: 1729, column: 7, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !7882, file: !3, line: 1729, column: 6)
!8022 = !DILocation(line: 1729, column: 11, scope: !8021)
!8023 = !DILocation(line: 1729, column: 15, scope: !8021)
!8024 = !DILocation(line: 1729, column: 6, scope: !7882)
!8025 = !DILocation(line: 1730, column: 3, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8021, file: !3, line: 1729, column: 23)
!8027 = !DILocation(line: 1730, column: 7, scope: !8026)
!8028 = !DILocation(line: 1730, column: 11, scope: !8026)
!8029 = !DILocation(line: 1730, column: 16, scope: !8026)
!8030 = !DILocation(line: 1731, column: 3, scope: !8026)
!8031 = !DILocation(line: 1734, column: 25, scope: !7882)
!8032 = !DILocation(line: 1734, column: 2, scope: !7882)
!8033 = !DILocation(line: 1736, column: 35, scope: !7882)
!8034 = !DILocation(line: 1736, column: 2, scope: !7882)
!8035 = !DILocation(line: 1738, column: 2, scope: !7882)
!8036 = !DILocation(line: 1739, column: 1, scope: !7882)
!8037 = distinct !DISubprogram(name: "has_acpi_companion", scope: !8038, file: !8038, line: 84, type: !8039, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!8038 = !DIFile(filename: "./include/linux/acpi.h", directory: "/home/lizy2001/genbc/linux")
!8039 = !DISubroutineType(types: !8040)
!8040 = !{!508, !3325}
!8041 = !DILocalVariable(name: "dev", arg: 1, scope: !8037, file: !8038, line: 84, type: !3325)
!8042 = !DILocation(line: 84, column: 54, scope: !8037)
!8043 = !DILocation(line: 86, column: 29, scope: !8037)
!8044 = !DILocation(line: 86, column: 34, scope: !8037)
!8045 = !DILocation(line: 86, column: 9, scope: !8037)
!8046 = !DILocation(line: 86, column: 2, scope: !8037)
!8047 = distinct !DISubprogram(name: "acpi_device_handle", scope: !8038, file: !8038, line: 38, type: !8048, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!8048 = !DISubroutineType(types: !8049)
!8049 = !{!4267, !4261}
!8050 = !DILocalVariable(name: "adev", arg: 1, scope: !8047, file: !8038, line: 38, type: !4261)
!8051 = !DILocation(line: 38, column: 66, scope: !8047)
!8052 = !DILocation(line: 40, column: 9, scope: !8047)
!8053 = !DILocation(line: 40, column: 16, scope: !8047)
!8054 = !DILocation(line: 40, column: 22, scope: !8047)
!8055 = !DILocation(line: 40, column: 2, scope: !8047)
!8056 = distinct !DISubprogram(name: "gpiochip_to_irq", scope: !3, file: !3, line: 1397, type: !4106, scopeLine: 1398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!8057 = !DILocalVariable(name: "gc", arg: 1, scope: !8056, file: !3, line: 1397, type: !4096)
!8058 = !DILocation(line: 1397, column: 46, scope: !8056)
!8059 = !DILocalVariable(name: "offset", arg: 2, scope: !8056, file: !3, line: 1397, type: !7)
!8060 = !DILocation(line: 1397, column: 59, scope: !8056)
!8061 = !DILocalVariable(name: "domain", scope: !8056, file: !3, line: 1399, type: !3604)
!8062 = !DILocation(line: 1399, column: 21, scope: !8056)
!8063 = !DILocation(line: 1399, column: 30, scope: !8056)
!8064 = !DILocation(line: 1399, column: 34, scope: !8056)
!8065 = !DILocation(line: 1399, column: 38, scope: !8056)
!8066 = !DILocation(line: 1401, column: 34, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !8056, file: !3, line: 1401, column: 6)
!8068 = !DILocation(line: 1401, column: 38, scope: !8067)
!8069 = !DILocation(line: 1401, column: 7, scope: !8067)
!8070 = !DILocation(line: 1401, column: 6, scope: !8056)
!8071 = !DILocation(line: 1402, column: 3, scope: !8067)
!8072 = !DILocation(line: 1405, column: 30, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8056, file: !3, line: 1405, column: 6)
!8074 = !DILocation(line: 1405, column: 6, scope: !8073)
!8075 = !DILocation(line: 1405, column: 6, scope: !8056)
!8076 = !DILocalVariable(name: "spec", scope: !8077, file: !3, line: 1406, type: !3737)
!8077 = distinct !DILexicalBlock(scope: !8073, file: !3, line: 1405, column: 39)
!8078 = !DILocation(line: 1406, column: 21, scope: !8077)
!8079 = !DILocation(line: 1408, column: 17, scope: !8077)
!8080 = !DILocation(line: 1408, column: 25, scope: !8077)
!8081 = !DILocation(line: 1408, column: 8, scope: !8077)
!8082 = !DILocation(line: 1408, column: 15, scope: !8077)
!8083 = !DILocation(line: 1409, column: 8, scope: !8077)
!8084 = !DILocation(line: 1409, column: 20, scope: !8077)
!8085 = !DILocation(line: 1410, column: 19, scope: !8077)
!8086 = !DILocation(line: 1410, column: 23, scope: !8077)
!8087 = !DILocation(line: 1410, column: 27, scope: !8077)
!8088 = !DILocation(line: 1410, column: 47, scope: !8077)
!8089 = !DILocation(line: 1410, column: 51, scope: !8077)
!8090 = !DILocation(line: 1410, column: 8, scope: !8077)
!8091 = !DILocation(line: 1410, column: 3, scope: !8077)
!8092 = !DILocation(line: 1410, column: 17, scope: !8077)
!8093 = !DILocation(line: 1411, column: 8, scope: !8077)
!8094 = !DILocation(line: 1411, column: 3, scope: !8077)
!8095 = !DILocation(line: 1411, column: 17, scope: !8077)
!8096 = !DILocation(line: 1413, column: 10, scope: !8077)
!8097 = !DILocation(line: 1413, column: 3, scope: !8077)
!8098 = !DILocation(line: 1417, column: 28, scope: !8056)
!8099 = !DILocation(line: 1417, column: 36, scope: !8056)
!8100 = !DILocation(line: 1417, column: 9, scope: !8056)
!8101 = !DILocation(line: 1417, column: 2, scope: !8056)
!8102 = !DILocation(line: 1418, column: 1, scope: !8056)
!8103 = distinct !DISubprogram(name: "gpiochip_set_irq_hooks", scope: !3, file: !3, line: 1468, type: !6244, scopeLine: 1469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!8104 = !DILocalVariable(name: "gc", arg: 1, scope: !8103, file: !3, line: 1468, type: !4096)
!8105 = !DILocation(line: 1468, column: 54, scope: !8103)
!8106 = !DILocalVariable(name: "irqchip", scope: !8103, file: !3, line: 1470, type: !3790)
!8107 = !DILocation(line: 1470, column: 19, scope: !8103)
!8108 = !DILocation(line: 1470, column: 29, scope: !8103)
!8109 = !DILocation(line: 1470, column: 33, scope: !8103)
!8110 = !DILocation(line: 1470, column: 37, scope: !8103)
!8111 = !DILocation(line: 1472, column: 7, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 1472, column: 6)
!8113 = !DILocation(line: 1472, column: 16, scope: !8112)
!8114 = !DILocation(line: 1472, column: 38, scope: !8112)
!8115 = !DILocation(line: 1473, column: 7, scope: !8112)
!8116 = !DILocation(line: 1473, column: 16, scope: !8112)
!8117 = !DILocation(line: 1472, column: 6, scope: !8103)
!8118 = !DILocation(line: 1474, column: 3, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8112, file: !3, line: 1473, column: 39)
!8120 = !DILocation(line: 1474, column: 12, scope: !8119)
!8121 = !DILocation(line: 1474, column: 34, scope: !8119)
!8122 = !DILocation(line: 1475, column: 3, scope: !8119)
!8123 = !DILocation(line: 1475, column: 12, scope: !8119)
!8124 = !DILocation(line: 1475, column: 34, scope: !8119)
!8125 = !DILocation(line: 1476, column: 2, scope: !8119)
!8126 = !DILocalVariable(name: "__ret_warn_on", scope: !8127, file: !3, line: 1477, type: !224)
!8127 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 1477, column: 6)
!8128 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 1477, column: 6)
!8129 = !DILocation(line: 1477, column: 6, scope: !8127)
!8130 = !DILocation(line: 1477, column: 6, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8127, file: !3, line: 1477, column: 6)
!8132 = !DILocation(line: 1477, column: 6, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 1477, column: 6)
!8134 = !DILocation(line: 1477, column: 6, scope: !8135)
!8135 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 1477, column: 6)
!8136 = !DILocation(line: 1477, column: 6, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 1477, column: 6)
!8138 = !{i32 -2141422080, i32 -2141422051, i32 -2141422005, i32 -2141421947, i32 -2141421893, i32 -2141421839, i32 -2141421784, i32 -2141421753}
!8139 = !DILocation(line: 1477, column: 6, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 1477, column: 6)
!8141 = !{i32 -2141421348, i32 -2141421341, i32 -2141421289, i32 -2141421258, i32 -2141421228}
!8142 = !DILocation(line: 1477, column: 6, scope: !8143)
!8143 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 1477, column: 6)
!8144 = !DILocation(line: 1477, column: 6, scope: !8128)
!8145 = !DILocation(line: 1477, column: 6, scope: !8103)
!8146 = !DILocation(line: 1478, column: 3, scope: !8128)
!8147 = !DILocation(line: 1480, column: 6, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 1480, column: 6)
!8149 = !DILocation(line: 1480, column: 15, scope: !8148)
!8150 = !DILocation(line: 1480, column: 26, scope: !8148)
!8151 = !DILocation(line: 1480, column: 6, scope: !8103)
!8152 = !DILocation(line: 1485, column: 3, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8148, file: !3, line: 1480, column: 50)
!8154 = !DILocation(line: 1487, column: 3, scope: !8153)
!8155 = !DILocation(line: 1490, column: 6, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 1490, column: 6)
!8157 = !DILocation(line: 1490, column: 15, scope: !8156)
!8158 = !DILocation(line: 1490, column: 6, scope: !8103)
!8159 = !DILocation(line: 1491, column: 25, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8156, file: !3, line: 1490, column: 28)
!8161 = !DILocation(line: 1491, column: 34, scope: !8160)
!8162 = !DILocation(line: 1491, column: 3, scope: !8160)
!8163 = !DILocation(line: 1491, column: 7, scope: !8160)
!8164 = !DILocation(line: 1491, column: 11, scope: !8160)
!8165 = !DILocation(line: 1491, column: 23, scope: !8160)
!8166 = !DILocation(line: 1492, column: 3, scope: !8160)
!8167 = !DILocation(line: 1492, column: 12, scope: !8160)
!8168 = !DILocation(line: 1492, column: 24, scope: !8160)
!8169 = !DILocation(line: 1493, column: 2, scope: !8160)
!8170 = !DILocation(line: 1494, column: 22, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !8156, file: !3, line: 1493, column: 9)
!8172 = !DILocation(line: 1494, column: 31, scope: !8171)
!8173 = !DILocation(line: 1494, column: 3, scope: !8171)
!8174 = !DILocation(line: 1494, column: 7, scope: !8171)
!8175 = !DILocation(line: 1494, column: 11, scope: !8171)
!8176 = !DILocation(line: 1494, column: 20, scope: !8171)
!8177 = !DILocation(line: 1495, column: 3, scope: !8171)
!8178 = !DILocation(line: 1495, column: 12, scope: !8171)
!8179 = !DILocation(line: 1495, column: 21, scope: !8171)
!8180 = !DILocation(line: 1498, column: 6, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 1498, column: 6)
!8182 = !DILocation(line: 1498, column: 15, scope: !8181)
!8183 = !DILocation(line: 1498, column: 6, scope: !8103)
!8184 = !DILocation(line: 1499, column: 24, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !8181, file: !3, line: 1498, column: 27)
!8186 = !DILocation(line: 1499, column: 33, scope: !8185)
!8187 = !DILocation(line: 1499, column: 3, scope: !8185)
!8188 = !DILocation(line: 1499, column: 7, scope: !8185)
!8189 = !DILocation(line: 1499, column: 11, scope: !8185)
!8190 = !DILocation(line: 1499, column: 22, scope: !8185)
!8191 = !DILocation(line: 1500, column: 3, scope: !8185)
!8192 = !DILocation(line: 1500, column: 12, scope: !8185)
!8193 = !DILocation(line: 1500, column: 23, scope: !8185)
!8194 = !DILocation(line: 1501, column: 2, scope: !8185)
!8195 = !DILocation(line: 1502, column: 24, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8181, file: !3, line: 1501, column: 9)
!8197 = !DILocation(line: 1502, column: 33, scope: !8196)
!8198 = !DILocation(line: 1502, column: 3, scope: !8196)
!8199 = !DILocation(line: 1502, column: 7, scope: !8196)
!8200 = !DILocation(line: 1502, column: 11, scope: !8196)
!8201 = !DILocation(line: 1502, column: 22, scope: !8196)
!8202 = !DILocation(line: 1503, column: 3, scope: !8196)
!8203 = !DILocation(line: 1503, column: 12, scope: !8196)
!8204 = !DILocation(line: 1503, column: 23, scope: !8196)
!8205 = !DILocation(line: 1505, column: 1, scope: !8103)
!8206 = distinct !DISubprogram(name: "gpiochip_irqchip_add_domain", scope: !3, file: !3, line: 1749, type: !8207, scopeLine: 1751, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!8207 = !DISubroutineType(types: !8208)
!8208 = !{!224, !4096, !3604}
!8209 = !DILocalVariable(name: "gc", arg: 1, scope: !8206, file: !3, line: 1749, type: !4096)
!8210 = !DILocation(line: 1749, column: 51, scope: !8206)
!8211 = !DILocalVariable(name: "domain", arg: 2, scope: !8206, file: !3, line: 1750, type: !3604)
!8212 = !DILocation(line: 1750, column: 24, scope: !8206)
!8213 = !DILocation(line: 1752, column: 7, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8206, file: !3, line: 1752, column: 6)
!8215 = !DILocation(line: 1752, column: 6, scope: !8206)
!8216 = !DILocation(line: 1753, column: 3, scope: !8214)
!8217 = !DILocation(line: 1755, column: 2, scope: !8206)
!8218 = !DILocation(line: 1755, column: 6, scope: !8206)
!8219 = !DILocation(line: 1755, column: 13, scope: !8206)
!8220 = !DILocation(line: 1756, column: 19, scope: !8206)
!8221 = !DILocation(line: 1756, column: 2, scope: !8206)
!8222 = !DILocation(line: 1756, column: 6, scope: !8206)
!8223 = !DILocation(line: 1756, column: 10, scope: !8206)
!8224 = !DILocation(line: 1756, column: 17, scope: !8206)
!8225 = !DILocation(line: 1758, column: 2, scope: !8206)
!8226 = !DILocation(line: 1759, column: 1, scope: !8206)
!8227 = distinct !DISubprogram(name: "gpiochip_generic_request", scope: !3, file: !3, line: 1791, type: !4106, scopeLine: 1792, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!8228 = !DILocalVariable(name: "gc", arg: 1, scope: !8227, file: !3, line: 1791, type: !4096)
!8229 = !DILocation(line: 1791, column: 48, scope: !8227)
!8230 = !DILocalVariable(name: "offset", arg: 2, scope: !8227, file: !3, line: 1791, type: !7)
!8231 = !DILocation(line: 1791, column: 61, scope: !8227)
!8232 = !DILocation(line: 1798, column: 30, scope: !8227)
!8233 = !DILocation(line: 1798, column: 34, scope: !8227)
!8234 = !DILocation(line: 1798, column: 43, scope: !8227)
!8235 = !DILocation(line: 1798, column: 50, scope: !8227)
!8236 = !DILocation(line: 1798, column: 48, scope: !8227)
!8237 = !DILocation(line: 1798, column: 9, scope: !8227)
!8238 = !DILocation(line: 1798, column: 2, scope: !8227)
!8239 = distinct !DISubprogram(name: "pinctrl_gpio_request", scope: !8240, file: !8240, line: 71, type: !8241, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!8240 = !DIFile(filename: "./include/linux/pinctrl/consumer.h", directory: "/home/lizy2001/genbc/linux")
!8241 = !DISubroutineType(types: !8242)
!8242 = !{!224, !7}
!8243 = !DILocalVariable(name: "gpio", arg: 1, scope: !8239, file: !8240, line: 71, type: !7)
!8244 = !DILocation(line: 71, column: 49, scope: !8239)
!8245 = !DILocation(line: 73, column: 2, scope: !8239)
!8246 = distinct !DISubprogram(name: "gpiochip_generic_free", scope: !3, file: !3, line: 1807, type: !4110, scopeLine: 1808, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!8247 = !DILocalVariable(name: "gc", arg: 1, scope: !8246, file: !3, line: 1807, type: !4096)
!8248 = !DILocation(line: 1807, column: 46, scope: !8246)
!8249 = !DILocalVariable(name: "offset", arg: 2, scope: !8246, file: !3, line: 1807, type: !7)
!8250 = !DILocation(line: 1807, column: 59, scope: !8246)
!8251 = !DILocation(line: 1814, column: 20, scope: !8246)
!8252 = !DILocation(line: 1814, column: 24, scope: !8246)
!8253 = !DILocation(line: 1814, column: 33, scope: !8246)
!8254 = !DILocation(line: 1814, column: 40, scope: !8246)
!8255 = !DILocation(line: 1814, column: 38, scope: !8246)
!8256 = !DILocation(line: 1814, column: 2, scope: !8246)
!8257 = !DILocation(line: 1815, column: 1, scope: !8246)
!8258 = distinct !DISubprogram(name: "pinctrl_gpio_free", scope: !8240, file: !8240, line: 76, type: !7726, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!8259 = !DILocalVariable(name: "gpio", arg: 1, scope: !8258, file: !8240, line: 76, type: !7)
!8260 = !DILocation(line: 76, column: 47, scope: !8258)
!8261 = !DILocation(line: 78, column: 1, scope: !8258)
!8262 = distinct !DISubprogram(name: "gpiochip_generic_config", scope: !3, file: !3, line: 1824, type: !4133, scopeLine: 1826, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!8263 = !DILocalVariable(name: "gc", arg: 1, scope: !8262, file: !3, line: 1824, type: !4096)
!8264 = !DILocation(line: 1824, column: 47, scope: !8262)
!8265 = !DILocalVariable(name: "offset", arg: 2, scope: !8262, file: !3, line: 1824, type: !7)
!8266 = !DILocation(line: 1824, column: 60, scope: !8262)
!8267 = !DILocalVariable(name: "config", arg: 3, scope: !8262, file: !3, line: 1825, type: !342)
!8268 = !DILocation(line: 1825, column: 22, scope: !8262)
!8269 = !DILocation(line: 1827, column: 33, scope: !8262)
!8270 = !DILocation(line: 1827, column: 37, scope: !8262)
!8271 = !DILocation(line: 1827, column: 46, scope: !8262)
!8272 = !DILocation(line: 1827, column: 53, scope: !8262)
!8273 = !DILocation(line: 1827, column: 51, scope: !8262)
!8274 = !DILocation(line: 1827, column: 61, scope: !8262)
!8275 = !DILocation(line: 1827, column: 9, scope: !8262)
!8276 = !DILocation(line: 1827, column: 2, scope: !8262)
!8277 = distinct !DISubprogram(name: "pinctrl_gpio_set_config", scope: !8240, file: !8240, line: 90, type: !8278, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!8278 = !DISubroutineType(types: !8279)
!8279 = !{!224, !7, !342}
!8280 = !DILocalVariable(name: "gpio", arg: 1, scope: !8277, file: !8240, line: 90, type: !7)
!8281 = !DILocation(line: 90, column: 52, scope: !8277)
!8282 = !DILocalVariable(name: "config", arg: 2, scope: !8277, file: !8240, line: 90, type: !342)
!8283 = !DILocation(line: 90, column: 72, scope: !8277)
!8284 = !DILocation(line: 92, column: 2, scope: !8277)
!8285 = distinct !DISubprogram(name: "gpiod_request", scope: !3, file: !3, line: 2061, type: !8286, scopeLine: 2062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!8286 = !DISubroutineType(types: !8287)
!8287 = !{!224, !4232, !233}
!8288 = !DILocalVariable(name: "desc", arg: 1, scope: !8285, file: !3, line: 2061, type: !4232)
!8289 = !DILocation(line: 2061, column: 37, scope: !8285)
!8290 = !DILocalVariable(name: "label", arg: 2, scope: !8285, file: !3, line: 2061, type: !233)
!8291 = !DILocation(line: 2061, column: 55, scope: !8285)
!8292 = !DILocalVariable(name: "ret", scope: !8285, file: !3, line: 2063, type: !224)
!8293 = !DILocation(line: 2063, column: 6, scope: !8285)
!8294 = !DILocalVariable(name: "gdev", scope: !8285, file: !3, line: 2064, type: !219)
!8295 = !DILocation(line: 2064, column: 22, scope: !8285)
!8296 = !DILocation(line: 2066, column: 2, scope: !8285)
!8297 = !DILocalVariable(name: "__valid", scope: !8298, file: !3, line: 2066, type: !224)
!8298 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 2066, column: 2)
!8299 = !DILocation(line: 2066, column: 2, scope: !8298)
!8300 = !DILocation(line: 2066, column: 2, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8298, file: !3, line: 2066, column: 2)
!8302 = !DILocation(line: 2067, column: 9, scope: !8285)
!8303 = !DILocation(line: 2067, column: 15, scope: !8285)
!8304 = !DILocation(line: 2067, column: 7, scope: !8285)
!8305 = !DILocation(line: 2069, column: 21, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 2069, column: 6)
!8307 = !DILocation(line: 2069, column: 27, scope: !8306)
!8308 = !DILocation(line: 2069, column: 6, scope: !8306)
!8309 = !DILocation(line: 2069, column: 6, scope: !8285)
!8310 = !DILocation(line: 2070, column: 30, scope: !8311)
!8311 = distinct !DILexicalBlock(scope: !8306, file: !3, line: 2069, column: 35)
!8312 = !DILocation(line: 2070, column: 36, scope: !8311)
!8313 = !DILocation(line: 2070, column: 9, scope: !8311)
!8314 = !DILocation(line: 2070, column: 7, scope: !8311)
!8315 = !DILocation(line: 2071, column: 7, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 2071, column: 7)
!8317 = !DILocation(line: 2071, column: 11, scope: !8316)
!8318 = !DILocation(line: 2071, column: 7, scope: !8311)
!8319 = !DILocation(line: 2072, column: 15, scope: !8316)
!8320 = !DILocation(line: 2072, column: 21, scope: !8316)
!8321 = !DILocation(line: 2072, column: 4, scope: !8316)
!8322 = !DILocation(line: 2074, column: 16, scope: !8316)
!8323 = !DILocation(line: 2074, column: 22, scope: !8316)
!8324 = !DILocation(line: 2074, column: 4, scope: !8316)
!8325 = !DILocation(line: 2075, column: 2, scope: !8311)
!8326 = !DILocation(line: 2077, column: 6, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 2077, column: 6)
!8328 = !DILocation(line: 2077, column: 6, scope: !8285)
!8329 = !DILocation(line: 2078, column: 3, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8331, file: !3, line: 2078, column: 3)
!8331 = distinct !DILexicalBlock(scope: !8327, file: !3, line: 2078, column: 3)
!8332 = !DILocation(line: 2078, column: 3, scope: !8331)
!8333 = !DILocation(line: 2078, column: 3, scope: !8327)
!8334 = !DILocation(line: 2080, column: 9, scope: !8285)
!8335 = !DILocation(line: 2080, column: 2, scope: !8285)
!8336 = !DILocation(line: 2081, column: 1, scope: !8285)
!8337 = distinct !DISubprogram(name: "validate_desc", scope: !3, file: !3, line: 2029, type: !8338, scopeLine: 2030, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!8338 = !DISubroutineType(types: !8339)
!8339 = !{!224, !4835, !233}
!8340 = !DILocalVariable(name: "desc", arg: 1, scope: !8337, file: !3, line: 2029, type: !4835)
!8341 = !DILocation(line: 2029, column: 50, scope: !8337)
!8342 = !DILocalVariable(name: "func", arg: 2, scope: !8337, file: !3, line: 2029, type: !233)
!8343 = !DILocation(line: 2029, column: 68, scope: !8337)
!8344 = !DILocation(line: 2031, column: 7, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !8337, file: !3, line: 2031, column: 6)
!8346 = !DILocation(line: 2031, column: 6, scope: !8337)
!8347 = !DILocation(line: 2032, column: 3, scope: !8345)
!8348 = !DILocation(line: 2033, column: 13, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8337, file: !3, line: 2033, column: 6)
!8350 = !DILocation(line: 2033, column: 6, scope: !8349)
!8351 = !DILocation(line: 2033, column: 6, scope: !8337)
!8352 = !DILocation(line: 2034, column: 3, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8349, file: !3, line: 2033, column: 20)
!8354 = !DILocation(line: 2035, column: 18, scope: !8353)
!8355 = !DILocation(line: 2035, column: 10, scope: !8353)
!8356 = !DILocation(line: 2035, column: 3, scope: !8353)
!8357 = !DILocation(line: 2037, column: 7, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8337, file: !3, line: 2037, column: 6)
!8359 = !DILocation(line: 2037, column: 13, scope: !8358)
!8360 = !DILocation(line: 2037, column: 6, scope: !8337)
!8361 = !DILocation(line: 2038, column: 3, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8358, file: !3, line: 2037, column: 19)
!8363 = !DILocation(line: 2039, column: 3, scope: !8362)
!8364 = !DILocation(line: 2041, column: 7, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8337, file: !3, line: 2041, column: 6)
!8366 = !DILocation(line: 2041, column: 13, scope: !8365)
!8367 = !DILocation(line: 2041, column: 19, scope: !8365)
!8368 = !DILocation(line: 2041, column: 6, scope: !8337)
!8369 = !DILocation(line: 2042, column: 3, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8365, file: !3, line: 2041, column: 25)
!8371 = !DILocation(line: 2044, column: 3, scope: !8370)
!8372 = !DILocation(line: 2046, column: 2, scope: !8337)
!8373 = !DILocation(line: 2047, column: 1, scope: !8337)
!8374 = distinct !DISubprogram(name: "try_module_get", scope: !8375, file: !8375, line: 751, type: !8376, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!8375 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!8376 = !DISubroutineType(types: !8377)
!8377 = !{!508, !651}
!8378 = !DILocalVariable(name: "module", arg: 1, scope: !8374, file: !8375, line: 751, type: !651)
!8379 = !DILocation(line: 751, column: 50, scope: !8374)
!8380 = !DILocation(line: 753, column: 2, scope: !8374)
!8381 = distinct !DISubprogram(name: "gpiod_request_commit", scope: !3, file: !3, line: 1967, type: !8286, scopeLine: 1968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!8382 = !DILocation(line: 327, column: 67, scope: !4647, inlinedAt: !8383)
!8383 = distinct !DILocation(line: 2016, column: 3, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8385, file: !3, line: 2016, column: 3)
!8385 = distinct !DILexicalBlock(scope: !8386, file: !3, line: 2016, column: 3)
!8386 = distinct !DILexicalBlock(scope: !8387, file: !3, line: 2016, column: 3)
!8387 = distinct !DILexicalBlock(scope: !8388, file: !3, line: 2016, column: 3)
!8388 = distinct !DILexicalBlock(scope: !8389, file: !3, line: 2016, column: 3)
!8389 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 2012, column: 25)
!8390 = distinct !DILexicalBlock(scope: !8381, file: !3, line: 2012, column: 6)
!8391 = !DILocation(line: 407, column: 64, scope: !4629, inlinedAt: !8392)
!8392 = distinct !DILocation(line: 2014, column: 3, scope: !8389)
!8393 = !DILocation(line: 407, column: 84, scope: !4629, inlinedAt: !8392)
!8394 = !DILocation(line: 327, column: 67, scope: !4647, inlinedAt: !8395)
!8395 = distinct !DILocation(line: 2003, column: 3, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8397, file: !3, line: 2003, column: 3)
!8397 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 2003, column: 3)
!8398 = distinct !DILexicalBlock(scope: !8399, file: !3, line: 2003, column: 3)
!8399 = distinct !DILexicalBlock(scope: !8400, file: !3, line: 2003, column: 3)
!8400 = distinct !DILexicalBlock(scope: !8401, file: !3, line: 2003, column: 3)
!8401 = distinct !DILexicalBlock(scope: !8402, file: !3, line: 1995, column: 19)
!8402 = distinct !DILexicalBlock(scope: !8381, file: !3, line: 1995, column: 6)
!8403 = !DILocation(line: 407, column: 64, scope: !4629, inlinedAt: !8404)
!8404 = distinct !DILocation(line: 1997, column: 3, scope: !8401)
!8405 = !DILocation(line: 407, column: 84, scope: !4629, inlinedAt: !8404)
!8406 = !DILocation(line: 407, column: 64, scope: !4629, inlinedAt: !8407)
!8407 = distinct !DILocation(line: 2019, column: 2, scope: !8381)
!8408 = !DILocation(line: 407, column: 84, scope: !4629, inlinedAt: !8407)
!8409 = !DILocation(line: 327, column: 67, scope: !4647, inlinedAt: !8410)
!8410 = distinct !DILocation(line: 1980, column: 2, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 1980, column: 2)
!8412 = distinct !DILexicalBlock(scope: !8413, file: !3, line: 1980, column: 2)
!8413 = distinct !DILexicalBlock(scope: !8414, file: !3, line: 1980, column: 2)
!8414 = distinct !DILexicalBlock(scope: !8415, file: !3, line: 1980, column: 2)
!8415 = distinct !DILexicalBlock(scope: !8381, file: !3, line: 1980, column: 2)
!8416 = !DILocalVariable(name: "desc", arg: 1, scope: !8381, file: !3, line: 1967, type: !4232)
!8417 = !DILocation(line: 1967, column: 51, scope: !8381)
!8418 = !DILocalVariable(name: "label", arg: 2, scope: !8381, file: !3, line: 1967, type: !233)
!8419 = !DILocation(line: 1967, column: 69, scope: !8381)
!8420 = !DILocalVariable(name: "gc", scope: !8381, file: !3, line: 1969, type: !4096)
!8421 = !DILocation(line: 1969, column: 20, scope: !8381)
!8422 = !DILocation(line: 1969, column: 25, scope: !8381)
!8423 = !DILocation(line: 1969, column: 31, scope: !8381)
!8424 = !DILocation(line: 1969, column: 37, scope: !8381)
!8425 = !DILocalVariable(name: "ret", scope: !8381, file: !3, line: 1970, type: !224)
!8426 = !DILocation(line: 1970, column: 8, scope: !8381)
!8427 = !DILocalVariable(name: "flags", scope: !8381, file: !3, line: 1971, type: !342)
!8428 = !DILocation(line: 1971, column: 17, scope: !8381)
!8429 = !DILocalVariable(name: "offset", scope: !8381, file: !3, line: 1972, type: !7)
!8430 = !DILocation(line: 1972, column: 12, scope: !8381)
!8431 = !DILocation(line: 1974, column: 6, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8381, file: !3, line: 1974, column: 6)
!8433 = !DILocation(line: 1974, column: 6, scope: !8381)
!8434 = !DILocation(line: 1975, column: 25, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8432, file: !3, line: 1974, column: 13)
!8436 = !DILocation(line: 1975, column: 11, scope: !8435)
!8437 = !DILocation(line: 1975, column: 9, scope: !8435)
!8438 = !DILocation(line: 1976, column: 8, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8435, file: !3, line: 1976, column: 7)
!8440 = !DILocation(line: 1976, column: 7, scope: !8435)
!8441 = !DILocation(line: 1977, column: 4, scope: !8439)
!8442 = !DILocation(line: 1978, column: 2, scope: !8435)
!8443 = !DILocation(line: 1980, column: 2, scope: !8381)
!8444 = !DILocation(line: 1980, column: 2, scope: !8415)
!8445 = !DILocalVariable(name: "__dummy", scope: !8446, file: !3, line: 1980, type: !342)
!8446 = distinct !DILexicalBlock(scope: !8414, file: !3, line: 1980, column: 2)
!8447 = !DILocation(line: 1980, column: 2, scope: !8446)
!8448 = !DILocalVariable(name: "__dummy2", scope: !8446, file: !3, line: 1980, type: !342)
!8449 = !DILocation(line: 1980, column: 2, scope: !8414)
!8450 = !DILocation(line: 1980, column: 2, scope: !8413)
!8451 = !DILocation(line: 1980, column: 2, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8413, file: !3, line: 1980, column: 2)
!8453 = !DILocalVariable(name: "__dummy", scope: !8454, file: !3, line: 1980, type: !342)
!8454 = distinct !DILexicalBlock(scope: !8455, file: !3, line: 1980, column: 2)
!8455 = distinct !DILexicalBlock(scope: !8452, file: !3, line: 1980, column: 2)
!8456 = !DILocation(line: 1980, column: 2, scope: !8454)
!8457 = !DILocalVariable(name: "__dummy2", scope: !8454, file: !3, line: 1980, type: !342)
!8458 = !DILocation(line: 1980, column: 2, scope: !8455)
!8459 = !DILocation(line: 1980, column: 2, scope: !8412)
!8460 = !{i32 -2141409406}
!8461 = !DILocation(line: 329, column: 10, scope: !4647, inlinedAt: !8410)
!8462 = !DILocation(line: 329, column: 16, scope: !4647, inlinedAt: !8410)
!8463 = !DILocation(line: 1980, column: 2, scope: !8411)
!8464 = !DILocation(line: 1986, column: 40, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8381, file: !3, line: 1986, column: 6)
!8466 = !DILocation(line: 1986, column: 46, scope: !8465)
!8467 = !DILocation(line: 1986, column: 6, scope: !8465)
!8468 = !DILocation(line: 1986, column: 53, scope: !8465)
!8469 = !DILocation(line: 1986, column: 6, scope: !8381)
!8470 = !DILocation(line: 1987, column: 18, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 1986, column: 59)
!8472 = !DILocation(line: 1987, column: 24, scope: !8471)
!8473 = !DILocation(line: 1987, column: 3, scope: !8471)
!8474 = !DILocation(line: 1988, column: 7, scope: !8471)
!8475 = !DILocation(line: 1989, column: 2, scope: !8471)
!8476 = !DILocation(line: 1990, column: 15, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 1989, column: 9)
!8478 = !DILocation(line: 1990, column: 3, scope: !8477)
!8479 = !DILocation(line: 1991, column: 7, scope: !8477)
!8480 = !DILocation(line: 1992, column: 3, scope: !8477)
!8481 = !DILocation(line: 1995, column: 6, scope: !8402)
!8482 = !DILocation(line: 1995, column: 10, scope: !8402)
!8483 = !DILocation(line: 1995, column: 6, scope: !8381)
!8484 = !DILocation(line: 1997, column: 38, scope: !8401)
!8485 = !DILocation(line: 409, column: 2, scope: !4707, inlinedAt: !8404)
!8486 = !DILocation(line: 409, column: 2, scope: !4712, inlinedAt: !8404)
!8487 = !DILocation(line: 409, column: 2, scope: !4713, inlinedAt: !8404)
!8488 = !DILocation(line: 409, column: 2, scope: !4720, inlinedAt: !8404)
!8489 = !DILocation(line: 409, column: 2, scope: !4723, inlinedAt: !8404)
!8490 = !DILocation(line: 1998, column: 29, scope: !8401)
!8491 = !DILocation(line: 1998, column: 12, scope: !8401)
!8492 = !DILocation(line: 1998, column: 10, scope: !8401)
!8493 = !DILocation(line: 1999, column: 30, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8401, file: !3, line: 1999, column: 7)
!8495 = !DILocation(line: 1999, column: 34, scope: !8494)
!8496 = !DILocation(line: 1999, column: 7, scope: !8494)
!8497 = !DILocation(line: 1999, column: 7, scope: !8401)
!8498 = !DILocation(line: 2000, column: 10, scope: !8494)
!8499 = !DILocation(line: 2000, column: 14, scope: !8494)
!8500 = !DILocation(line: 2000, column: 22, scope: !8494)
!8501 = !DILocation(line: 2000, column: 26, scope: !8494)
!8502 = !DILocation(line: 2000, column: 8, scope: !8494)
!8503 = !DILocation(line: 2000, column: 4, scope: !8494)
!8504 = !DILocation(line: 2002, column: 8, scope: !8494)
!8505 = !DILocation(line: 2003, column: 3, scope: !8401)
!8506 = !DILocation(line: 2003, column: 3, scope: !8400)
!8507 = !DILocalVariable(name: "__dummy", scope: !8508, file: !3, line: 2003, type: !342)
!8508 = distinct !DILexicalBlock(scope: !8399, file: !3, line: 2003, column: 3)
!8509 = !DILocation(line: 2003, column: 3, scope: !8508)
!8510 = !DILocalVariable(name: "__dummy2", scope: !8508, file: !3, line: 2003, type: !342)
!8511 = !DILocation(line: 2003, column: 3, scope: !8399)
!8512 = !DILocation(line: 2003, column: 3, scope: !8398)
!8513 = !DILocation(line: 2003, column: 3, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 2003, column: 3)
!8515 = !DILocalVariable(name: "__dummy", scope: !8516, file: !3, line: 2003, type: !342)
!8516 = distinct !DILexicalBlock(scope: !8517, file: !3, line: 2003, column: 3)
!8517 = distinct !DILexicalBlock(scope: !8514, file: !3, line: 2003, column: 3)
!8518 = !DILocation(line: 2003, column: 3, scope: !8516)
!8519 = !DILocalVariable(name: "__dummy2", scope: !8516, file: !3, line: 2003, type: !342)
!8520 = !DILocation(line: 2003, column: 3, scope: !8517)
!8521 = !DILocation(line: 2003, column: 3, scope: !8397)
!8522 = !{i32 -2141408386}
!8523 = !DILocation(line: 329, column: 10, scope: !4647, inlinedAt: !8395)
!8524 = !DILocation(line: 329, column: 16, scope: !4647, inlinedAt: !8395)
!8525 = !DILocation(line: 2003, column: 3, scope: !8396)
!8526 = !DILocation(line: 2005, column: 7, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8401, file: !3, line: 2005, column: 7)
!8528 = !DILocation(line: 2005, column: 11, scope: !8527)
!8529 = !DILocation(line: 2005, column: 7, scope: !8401)
!8530 = !DILocation(line: 2006, column: 19, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8527, file: !3, line: 2005, column: 16)
!8532 = !DILocation(line: 2006, column: 4, scope: !8531)
!8533 = !DILocation(line: 2007, column: 16, scope: !8531)
!8534 = !DILocation(line: 2007, column: 4, scope: !8531)
!8535 = !DILocation(line: 2008, column: 31, scope: !8531)
!8536 = !DILocation(line: 2008, column: 37, scope: !8531)
!8537 = !DILocation(line: 2008, column: 4, scope: !8531)
!8538 = !DILocation(line: 2009, column: 4, scope: !8531)
!8539 = !DILocation(line: 2011, column: 2, scope: !8401)
!8540 = !DILocation(line: 2012, column: 6, scope: !8390)
!8541 = !DILocation(line: 2012, column: 10, scope: !8390)
!8542 = !DILocation(line: 2012, column: 6, scope: !8381)
!8543 = !DILocation(line: 2014, column: 38, scope: !8389)
!8544 = !DILocation(line: 409, column: 2, scope: !4707, inlinedAt: !8392)
!8545 = !DILocation(line: 409, column: 2, scope: !4712, inlinedAt: !8392)
!8546 = !DILocation(line: 409, column: 2, scope: !4713, inlinedAt: !8392)
!8547 = !DILocation(line: 409, column: 2, scope: !4720, inlinedAt: !8392)
!8548 = !DILocation(line: 409, column: 2, scope: !4723, inlinedAt: !8392)
!8549 = !DILocation(line: 2015, column: 23, scope: !8389)
!8550 = !DILocation(line: 2015, column: 3, scope: !8389)
!8551 = !DILocation(line: 2016, column: 3, scope: !8389)
!8552 = !DILocation(line: 2016, column: 3, scope: !8388)
!8553 = !DILocalVariable(name: "__dummy", scope: !8554, file: !3, line: 2016, type: !342)
!8554 = distinct !DILexicalBlock(scope: !8387, file: !3, line: 2016, column: 3)
!8555 = !DILocation(line: 2016, column: 3, scope: !8554)
!8556 = !DILocalVariable(name: "__dummy2", scope: !8554, file: !3, line: 2016, type: !342)
!8557 = !DILocation(line: 2016, column: 3, scope: !8387)
!8558 = !DILocation(line: 2016, column: 3, scope: !8386)
!8559 = !DILocation(line: 2016, column: 3, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8386, file: !3, line: 2016, column: 3)
!8561 = !DILocalVariable(name: "__dummy", scope: !8562, file: !3, line: 2016, type: !342)
!8562 = distinct !DILexicalBlock(scope: !8563, file: !3, line: 2016, column: 3)
!8563 = distinct !DILexicalBlock(scope: !8560, file: !3, line: 2016, column: 3)
!8564 = !DILocation(line: 2016, column: 3, scope: !8562)
!8565 = !DILocalVariable(name: "__dummy2", scope: !8562, file: !3, line: 2016, type: !342)
!8566 = !DILocation(line: 2016, column: 3, scope: !8563)
!8567 = !DILocation(line: 2016, column: 3, scope: !8385)
!8568 = !{i32 -2141407360}
!8569 = !DILocation(line: 329, column: 10, scope: !4647, inlinedAt: !8383)
!8570 = !DILocation(line: 329, column: 16, scope: !4647, inlinedAt: !8383)
!8571 = !DILocation(line: 2016, column: 3, scope: !8384)
!8572 = !DILocation(line: 2017, column: 2, scope: !8389)
!8573 = !DILabel(scope: !8381, name: "done", file: !3, line: 2018)
!8574 = !DILocation(line: 2018, column: 1, scope: !8381)
!8575 = !DILocation(line: 2019, column: 37, scope: !8381)
!8576 = !DILocation(line: 409, column: 2, scope: !4707, inlinedAt: !8407)
!8577 = !DILocation(line: 409, column: 2, scope: !4712, inlinedAt: !8407)
!8578 = !DILocation(line: 409, column: 2, scope: !4713, inlinedAt: !8407)
!8579 = !DILocation(line: 409, column: 2, scope: !4720, inlinedAt: !8407)
!8580 = !DILocation(line: 409, column: 2, scope: !4723, inlinedAt: !8407)
!8581 = !DILocation(line: 2020, column: 9, scope: !8381)
!8582 = !DILocation(line: 2020, column: 2, scope: !8381)
!8583 = !DILocation(line: 2021, column: 1, scope: !8381)
!8584 = distinct !DISubprogram(name: "module_put", scope: !8375, file: !8375, line: 756, type: !8585, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!8585 = !DISubroutineType(types: !8586)
!8586 = !{null, !651}
!8587 = !DILocalVariable(name: "module", arg: 1, scope: !8584, file: !8375, line: 756, type: !651)
!8588 = !DILocation(line: 756, column: 46, scope: !8584)
!8589 = !DILocation(line: 758, column: 1, scope: !8584)
!8590 = distinct !DISubprogram(name: "gpiod_free", scope: !3, file: !3, line: 2131, type: !8591, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!8591 = !DISubroutineType(types: !8592)
!8592 = !{null, !4232}
!8593 = !DILocalVariable(name: "desc", arg: 1, scope: !8590, file: !3, line: 2131, type: !4232)
!8594 = !DILocation(line: 2131, column: 35, scope: !8590)
!8595 = !DILocation(line: 2133, column: 6, scope: !8596)
!8596 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 2133, column: 6)
!8597 = !DILocation(line: 2133, column: 11, scope: !8596)
!8598 = !DILocation(line: 2133, column: 14, scope: !8596)
!8599 = !DILocation(line: 2133, column: 20, scope: !8596)
!8600 = !DILocation(line: 2133, column: 25, scope: !8596)
!8601 = !DILocation(line: 2133, column: 46, scope: !8596)
!8602 = !DILocation(line: 2133, column: 28, scope: !8596)
!8603 = !DILocation(line: 2133, column: 6, scope: !8590)
!8604 = !DILocation(line: 2134, column: 14, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8596, file: !3, line: 2133, column: 53)
!8606 = !DILocation(line: 2134, column: 20, scope: !8605)
!8607 = !DILocation(line: 2134, column: 26, scope: !8605)
!8608 = !DILocation(line: 2134, column: 3, scope: !8605)
!8609 = !DILocation(line: 2135, column: 15, scope: !8605)
!8610 = !DILocation(line: 2135, column: 21, scope: !8605)
!8611 = !DILocation(line: 2135, column: 27, scope: !8605)
!8612 = !DILocation(line: 2135, column: 3, scope: !8605)
!8613 = !DILocation(line: 2136, column: 2, scope: !8605)
!8614 = !DILocalVariable(name: "__ret_warn_on", scope: !8615, file: !3, line: 2137, type: !224)
!8615 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 2137, column: 3)
!8616 = distinct !DILexicalBlock(scope: !8596, file: !3, line: 2136, column: 9)
!8617 = !DILocation(line: 2137, column: 3, scope: !8615)
!8618 = !DILocation(line: 2137, column: 3, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8615, file: !3, line: 2137, column: 3)
!8620 = !DILocation(line: 2137, column: 3, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8619, file: !3, line: 2137, column: 3)
!8622 = !DILocation(line: 2137, column: 3, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8621, file: !3, line: 2137, column: 3)
!8624 = !DILocation(line: 2137, column: 3, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8621, file: !3, line: 2137, column: 3)
!8626 = !{i32 -2141401971, i32 -2141401942, i32 -2141401896, i32 -2141401838, i32 -2141401784, i32 -2141401730, i32 -2141401675, i32 -2141401644}
!8627 = !DILocation(line: 2137, column: 3, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8621, file: !3, line: 2137, column: 3)
!8629 = !{i32 -2141401239, i32 -2141401232, i32 -2141401180, i32 -2141401149, i32 -2141401119}
!8630 = !DILocation(line: 2137, column: 3, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8621, file: !3, line: 2137, column: 3)
!8632 = !DILocation(line: 2139, column: 1, scope: !8590)
!8633 = distinct !DISubprogram(name: "gpiod_free_commit", scope: !3, file: !3, line: 2083, type: !8634, scopeLine: 2084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!8634 = !DISubroutineType(types: !8635)
!8635 = !{!508, !4232}
!8636 = !DILocation(line: 327, column: 67, scope: !4647, inlinedAt: !8637)
!8637 = distinct !DILocation(line: 2101, column: 4, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8639, file: !3, line: 2101, column: 4)
!8639 = distinct !DILexicalBlock(scope: !8640, file: !3, line: 2101, column: 4)
!8640 = distinct !DILexicalBlock(scope: !8641, file: !3, line: 2101, column: 4)
!8641 = distinct !DILexicalBlock(scope: !8642, file: !3, line: 2101, column: 4)
!8642 = distinct !DILexicalBlock(scope: !8643, file: !3, line: 2101, column: 4)
!8643 = distinct !DILexicalBlock(scope: !8644, file: !3, line: 2097, column: 17)
!8644 = distinct !DILexicalBlock(scope: !8645, file: !3, line: 2097, column: 7)
!8645 = distinct !DILexicalBlock(scope: !8646, file: !3, line: 2096, column: 52)
!8646 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 2096, column: 6)
!8647 = !DILocation(line: 407, column: 64, scope: !4629, inlinedAt: !8648)
!8648 = distinct !DILocation(line: 2098, column: 4, scope: !8643)
!8649 = !DILocation(line: 407, column: 84, scope: !4629, inlinedAt: !8648)
!8650 = !DILocation(line: 407, column: 64, scope: !4629, inlinedAt: !8651)
!8651 = distinct !DILocation(line: 2124, column: 2, scope: !8633)
!8652 = !DILocation(line: 407, column: 84, scope: !4629, inlinedAt: !8651)
!8653 = !DILocation(line: 327, column: 67, scope: !4647, inlinedAt: !8654)
!8654 = distinct !DILocation(line: 2093, column: 2, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 2093, column: 2)
!8656 = distinct !DILexicalBlock(scope: !8657, file: !3, line: 2093, column: 2)
!8657 = distinct !DILexicalBlock(scope: !8658, file: !3, line: 2093, column: 2)
!8658 = distinct !DILexicalBlock(scope: !8659, file: !3, line: 2093, column: 2)
!8659 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 2093, column: 2)
!8660 = !DILocalVariable(name: "desc", arg: 1, scope: !8633, file: !3, line: 2083, type: !4232)
!8661 = !DILocation(line: 2083, column: 49, scope: !8633)
!8662 = !DILocalVariable(name: "ret", scope: !8633, file: !3, line: 2085, type: !508)
!8663 = !DILocation(line: 2085, column: 9, scope: !8633)
!8664 = !DILocalVariable(name: "flags", scope: !8633, file: !3, line: 2086, type: !342)
!8665 = !DILocation(line: 2086, column: 17, scope: !8633)
!8666 = !DILocalVariable(name: "gc", scope: !8633, file: !3, line: 2087, type: !4096)
!8667 = !DILocation(line: 2087, column: 20, scope: !8633)
!8668 = !DILocation(line: 2089, column: 2, scope: !8633)
!8669 = !DILocation(line: 2089, column: 2, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 2089, column: 2)
!8671 = !DILocation(line: 2089, column: 2, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8670, file: !3, line: 2089, column: 2)
!8673 = !DILocation(line: 2091, column: 17, scope: !8633)
!8674 = !DILocation(line: 2091, column: 2, scope: !8633)
!8675 = !DILocation(line: 2093, column: 2, scope: !8633)
!8676 = !DILocation(line: 2093, column: 2, scope: !8659)
!8677 = !DILocalVariable(name: "__dummy", scope: !8678, file: !3, line: 2093, type: !342)
!8678 = distinct !DILexicalBlock(scope: !8658, file: !3, line: 2093, column: 2)
!8679 = !DILocation(line: 2093, column: 2, scope: !8678)
!8680 = !DILocalVariable(name: "__dummy2", scope: !8678, file: !3, line: 2093, type: !342)
!8681 = !DILocation(line: 2093, column: 2, scope: !8658)
!8682 = !DILocation(line: 2093, column: 2, scope: !8657)
!8683 = !DILocation(line: 2093, column: 2, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8657, file: !3, line: 2093, column: 2)
!8685 = !DILocalVariable(name: "__dummy", scope: !8686, file: !3, line: 2093, type: !342)
!8686 = distinct !DILexicalBlock(scope: !8687, file: !3, line: 2093, column: 2)
!8687 = distinct !DILexicalBlock(scope: !8684, file: !3, line: 2093, column: 2)
!8688 = !DILocation(line: 2093, column: 2, scope: !8686)
!8689 = !DILocalVariable(name: "__dummy2", scope: !8686, file: !3, line: 2093, type: !342)
!8690 = !DILocation(line: 2093, column: 2, scope: !8687)
!8691 = !DILocation(line: 2093, column: 2, scope: !8656)
!8692 = !{i32 -2141405243}
!8693 = !DILocation(line: 329, column: 10, scope: !4647, inlinedAt: !8654)
!8694 = !DILocation(line: 329, column: 16, scope: !4647, inlinedAt: !8654)
!8695 = !DILocation(line: 2093, column: 2, scope: !8655)
!8696 = !DILocation(line: 2095, column: 7, scope: !8633)
!8697 = !DILocation(line: 2095, column: 13, scope: !8633)
!8698 = !DILocation(line: 2095, column: 19, scope: !8633)
!8699 = !DILocation(line: 2095, column: 5, scope: !8633)
!8700 = !DILocation(line: 2096, column: 6, scope: !8646)
!8701 = !DILocation(line: 2096, column: 9, scope: !8646)
!8702 = !DILocation(line: 2096, column: 38, scope: !8646)
!8703 = !DILocation(line: 2096, column: 44, scope: !8646)
!8704 = !DILocation(line: 2096, column: 12, scope: !8646)
!8705 = !DILocation(line: 2096, column: 6, scope: !8633)
!8706 = !DILocation(line: 2097, column: 7, scope: !8644)
!8707 = !DILocation(line: 2097, column: 11, scope: !8644)
!8708 = !DILocation(line: 2097, column: 7, scope: !8645)
!8709 = !DILocation(line: 2098, column: 39, scope: !8643)
!8710 = !DILocation(line: 409, column: 2, scope: !4707, inlinedAt: !8648)
!8711 = !DILocation(line: 409, column: 2, scope: !4712, inlinedAt: !8648)
!8712 = !DILocation(line: 409, column: 2, scope: !4713, inlinedAt: !8648)
!8713 = !DILocation(line: 409, column: 2, scope: !4720, inlinedAt: !8648)
!8714 = !DILocation(line: 409, column: 2, scope: !4723, inlinedAt: !8648)
!8715 = !DILocation(line: 2099, column: 4, scope: !8643)
!8716 = !DILocation(line: 2099, column: 4, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8718, file: !3, line: 2099, column: 4)
!8718 = distinct !DILexicalBlock(scope: !8643, file: !3, line: 2099, column: 4)
!8719 = !DILocation(line: 2099, column: 4, scope: !8718)
!8720 = !DILocation(line: 2099, column: 4, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8717, file: !3, line: 2099, column: 4)
!8722 = !DILocation(line: 2099, column: 4, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 2099, column: 4)
!8724 = !DILocation(line: 2100, column: 4, scope: !8643)
!8725 = !DILocation(line: 2100, column: 8, scope: !8643)
!8726 = !DILocation(line: 2100, column: 13, scope: !8643)
!8727 = !DILocation(line: 2100, column: 34, scope: !8643)
!8728 = !DILocation(line: 2100, column: 17, scope: !8643)
!8729 = !DILocation(line: 2101, column: 4, scope: !8643)
!8730 = !DILocation(line: 2101, column: 4, scope: !8642)
!8731 = !DILocalVariable(name: "__dummy", scope: !8732, file: !3, line: 2101, type: !342)
!8732 = distinct !DILexicalBlock(scope: !8641, file: !3, line: 2101, column: 4)
!8733 = !DILocation(line: 2101, column: 4, scope: !8732)
!8734 = !DILocalVariable(name: "__dummy2", scope: !8732, file: !3, line: 2101, type: !342)
!8735 = !DILocation(line: 2101, column: 4, scope: !8641)
!8736 = !DILocation(line: 2101, column: 4, scope: !8640)
!8737 = !DILocation(line: 2101, column: 4, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8640, file: !3, line: 2101, column: 4)
!8739 = !DILocalVariable(name: "__dummy", scope: !8740, file: !3, line: 2101, type: !342)
!8740 = distinct !DILexicalBlock(scope: !8741, file: !3, line: 2101, column: 4)
!8741 = distinct !DILexicalBlock(scope: !8738, file: !3, line: 2101, column: 4)
!8742 = !DILocation(line: 2101, column: 4, scope: !8740)
!8743 = !DILocalVariable(name: "__dummy2", scope: !8740, file: !3, line: 2101, type: !342)
!8744 = !DILocation(line: 2101, column: 4, scope: !8741)
!8745 = !DILocation(line: 2101, column: 4, scope: !8639)
!8746 = !{i32 -2141404122}
!8747 = !DILocation(line: 329, column: 10, scope: !4647, inlinedAt: !8637)
!8748 = !DILocation(line: 329, column: 16, scope: !4647, inlinedAt: !8637)
!8749 = !DILocation(line: 2101, column: 4, scope: !8638)
!8750 = !DILocation(line: 2102, column: 3, scope: !8643)
!8751 = !DILocation(line: 2103, column: 15, scope: !8645)
!8752 = !DILocation(line: 2103, column: 21, scope: !8645)
!8753 = !DILocation(line: 2103, column: 3, scope: !8645)
!8754 = !DILocation(line: 2104, column: 18, scope: !8645)
!8755 = !DILocation(line: 2104, column: 3, scope: !8645)
!8756 = !DILocation(line: 2105, column: 31, scope: !8645)
!8757 = !DILocation(line: 2105, column: 37, scope: !8645)
!8758 = !DILocation(line: 2105, column: 3, scope: !8645)
!8759 = !DILocation(line: 2106, column: 30, scope: !8645)
!8760 = !DILocation(line: 2106, column: 36, scope: !8645)
!8761 = !DILocation(line: 2106, column: 3, scope: !8645)
!8762 = !DILocation(line: 2107, column: 31, scope: !8645)
!8763 = !DILocation(line: 2107, column: 37, scope: !8645)
!8764 = !DILocation(line: 2107, column: 3, scope: !8645)
!8765 = !DILocation(line: 2108, column: 32, scope: !8645)
!8766 = !DILocation(line: 2108, column: 38, scope: !8645)
!8767 = !DILocation(line: 2108, column: 3, scope: !8645)
!8768 = !DILocation(line: 2109, column: 28, scope: !8645)
!8769 = !DILocation(line: 2109, column: 34, scope: !8645)
!8770 = !DILocation(line: 2109, column: 3, scope: !8645)
!8771 = !DILocation(line: 2110, column: 30, scope: !8645)
!8772 = !DILocation(line: 2110, column: 36, scope: !8645)
!8773 = !DILocation(line: 2110, column: 3, scope: !8645)
!8774 = !DILocation(line: 2111, column: 33, scope: !8645)
!8775 = !DILocation(line: 2111, column: 39, scope: !8645)
!8776 = !DILocation(line: 2111, column: 3, scope: !8645)
!8777 = !DILocation(line: 2112, column: 32, scope: !8645)
!8778 = !DILocation(line: 2112, column: 38, scope: !8645)
!8779 = !DILocation(line: 2112, column: 3, scope: !8645)
!8780 = !DILocation(line: 2113, column: 33, scope: !8645)
!8781 = !DILocation(line: 2113, column: 39, scope: !8645)
!8782 = !DILocation(line: 2113, column: 3, scope: !8645)
!8783 = !DILocation(line: 2114, column: 30, scope: !8645)
!8784 = !DILocation(line: 2114, column: 36, scope: !8645)
!8785 = !DILocation(line: 2114, column: 3, scope: !8645)
!8786 = !DILocation(line: 2119, column: 3, scope: !8645)
!8787 = !DILocation(line: 2119, column: 3, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8645, file: !3, line: 2119, column: 3)
!8789 = !DILocation(line: 2119, column: 3, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8788, file: !3, line: 2119, column: 3)
!8791 = !DILocation(line: 2119, column: 3, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8788, file: !3, line: 2119, column: 3)
!8793 = !DILocation(line: 2121, column: 7, scope: !8645)
!8794 = !DILocation(line: 2122, column: 2, scope: !8645)
!8795 = !DILocation(line: 2124, column: 37, scope: !8633)
!8796 = !DILocation(line: 409, column: 2, scope: !4707, inlinedAt: !8651)
!8797 = !DILocation(line: 409, column: 2, scope: !4712, inlinedAt: !8651)
!8798 = !DILocation(line: 409, column: 2, scope: !4713, inlinedAt: !8651)
!8799 = !DILocation(line: 409, column: 2, scope: !4720, inlinedAt: !8651)
!8800 = !DILocation(line: 409, column: 2, scope: !4723, inlinedAt: !8651)
!8801 = !DILocation(line: 2125, column: 32, scope: !8633)
!8802 = !DILocation(line: 2125, column: 38, scope: !8633)
!8803 = !DILocation(line: 2125, column: 44, scope: !8633)
!8804 = !DILocation(line: 2126, column: 37, scope: !8633)
!8805 = !DILocation(line: 2125, column: 2, scope: !8633)
!8806 = !DILocation(line: 2128, column: 9, scope: !8633)
!8807 = !DILocation(line: 2128, column: 2, scope: !8633)
!8808 = distinct !DISubprogram(name: "IS_ERR", scope: !4824, file: !4824, line: 34, type: !8809, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!8809 = !DISubroutineType(types: !8810)
!8810 = !{!508, !2145}
!8811 = !DILocalVariable(name: "ptr", arg: 1, scope: !8808, file: !4824, line: 34, type: !2145)
!8812 = !DILocation(line: 34, column: 60, scope: !8808)
!8813 = !DILocation(line: 36, column: 9, scope: !8808)
!8814 = !DILocation(line: 36, column: 2, scope: !8808)
!8815 = distinct !DISubprogram(name: "gpiochip_request_own_desc", scope: !3, file: !3, line: 2192, type: !8816, scopeLine: 2197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!8816 = !DISubroutineType(types: !8817)
!8817 = !{!4232, !4096, !7, !233, !145, !157}
!8818 = !DILocalVariable(name: "gc", arg: 1, scope: !8815, file: !3, line: 2192, type: !4096)
!8819 = !DILocation(line: 2192, column: 63, scope: !8815)
!8820 = !DILocalVariable(name: "hwnum", arg: 2, scope: !8815, file: !3, line: 2193, type: !7)
!8821 = !DILocation(line: 2193, column: 23, scope: !8815)
!8822 = !DILocalVariable(name: "label", arg: 3, scope: !8815, file: !3, line: 2194, type: !233)
!8823 = !DILocation(line: 2194, column: 22, scope: !8815)
!8824 = !DILocalVariable(name: "lflags", arg: 4, scope: !8815, file: !3, line: 2195, type: !145)
!8825 = !DILocation(line: 2195, column: 33, scope: !8815)
!8826 = !DILocalVariable(name: "dflags", arg: 5, scope: !8815, file: !3, line: 2196, type: !157)
!8827 = !DILocation(line: 2196, column: 27, scope: !8815)
!8828 = !DILocalVariable(name: "desc", scope: !8815, file: !3, line: 2198, type: !4232)
!8829 = !DILocation(line: 2198, column: 20, scope: !8815)
!8830 = !DILocation(line: 2198, column: 45, scope: !8815)
!8831 = !DILocation(line: 2198, column: 49, scope: !8815)
!8832 = !DILocation(line: 2198, column: 27, scope: !8815)
!8833 = !DILocalVariable(name: "ret", scope: !8815, file: !3, line: 2199, type: !224)
!8834 = !DILocation(line: 2199, column: 6, scope: !8815)
!8835 = !DILocation(line: 2201, column: 13, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8815, file: !3, line: 2201, column: 6)
!8837 = !DILocation(line: 2201, column: 6, scope: !8836)
!8838 = !DILocation(line: 2201, column: 6, scope: !8815)
!8839 = !DILocation(line: 2202, column: 3, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 2201, column: 20)
!8841 = !DILocation(line: 2203, column: 10, scope: !8840)
!8842 = !DILocation(line: 2203, column: 3, scope: !8840)
!8843 = !DILocation(line: 2206, column: 29, scope: !8815)
!8844 = !DILocation(line: 2206, column: 35, scope: !8815)
!8845 = !DILocation(line: 2206, column: 8, scope: !8815)
!8846 = !DILocation(line: 2206, column: 6, scope: !8815)
!8847 = !DILocation(line: 2207, column: 6, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8815, file: !3, line: 2207, column: 6)
!8849 = !DILocation(line: 2207, column: 10, scope: !8848)
!8850 = !DILocation(line: 2207, column: 6, scope: !8815)
!8851 = !DILocation(line: 2208, column: 18, scope: !8848)
!8852 = !DILocation(line: 2208, column: 10, scope: !8848)
!8853 = !DILocation(line: 2208, column: 3, scope: !8848)
!8854 = !DILocation(line: 2210, column: 30, scope: !8815)
!8855 = !DILocation(line: 2210, column: 36, scope: !8815)
!8856 = !DILocation(line: 2210, column: 43, scope: !8815)
!8857 = !DILocation(line: 2210, column: 51, scope: !8815)
!8858 = !DILocation(line: 2210, column: 8, scope: !8815)
!8859 = !DILocation(line: 2210, column: 6, scope: !8815)
!8860 = !DILocation(line: 2211, column: 6, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8815, file: !3, line: 2211, column: 6)
!8862 = !DILocation(line: 2211, column: 6, scope: !8815)
!8863 = !DILocation(line: 2212, column: 3, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8861, file: !3, line: 2211, column: 11)
!8865 = !DILocation(line: 2213, column: 21, scope: !8864)
!8866 = !DILocation(line: 2213, column: 3, scope: !8864)
!8867 = !DILocation(line: 2214, column: 18, scope: !8864)
!8868 = !DILocation(line: 2214, column: 10, scope: !8864)
!8869 = !DILocation(line: 2214, column: 3, scope: !8864)
!8870 = !DILocation(line: 2217, column: 9, scope: !8815)
!8871 = !DILocation(line: 2217, column: 2, scope: !8815)
!8872 = !DILocation(line: 2218, column: 1, scope: !8815)
!8873 = distinct !DISubprogram(name: "gpiod_configure_flags", scope: !3, file: !3, line: 3865, type: !8874, scopeLine: 3867, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!8874 = !DISubroutineType(types: !8875)
!8875 = !{!224, !4232, !233, !342, !157}
!8876 = !DILocalVariable(name: "desc", arg: 1, scope: !8873, file: !3, line: 3865, type: !4232)
!8877 = !DILocation(line: 3865, column: 45, scope: !8873)
!8878 = !DILocalVariable(name: "con_id", arg: 2, scope: !8873, file: !3, line: 3865, type: !233)
!8879 = !DILocation(line: 3865, column: 63, scope: !8873)
!8880 = !DILocalVariable(name: "lflags", arg: 3, scope: !8873, file: !3, line: 3866, type: !342)
!8881 = !DILocation(line: 3866, column: 17, scope: !8873)
!8882 = !DILocalVariable(name: "dflags", arg: 4, scope: !8873, file: !3, line: 3866, type: !157)
!8883 = !DILocation(line: 3866, column: 42, scope: !8873)
!8884 = !DILocalVariable(name: "ret", scope: !8873, file: !3, line: 3868, type: !224)
!8885 = !DILocation(line: 3868, column: 6, scope: !8873)
!8886 = !DILocation(line: 3870, column: 6, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8873, file: !3, line: 3870, column: 6)
!8888 = !DILocation(line: 3870, column: 13, scope: !8887)
!8889 = !DILocation(line: 3870, column: 6, scope: !8873)
!8890 = !DILocation(line: 3871, column: 29, scope: !8887)
!8891 = !DILocation(line: 3871, column: 35, scope: !8887)
!8892 = !DILocation(line: 3871, column: 3, scope: !8887)
!8893 = !DILocation(line: 3873, column: 6, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8873, file: !3, line: 3873, column: 6)
!8895 = !DILocation(line: 3873, column: 13, scope: !8894)
!8896 = !DILocation(line: 3873, column: 6, scope: !8873)
!8897 = !DILocation(line: 3874, column: 29, scope: !8894)
!8898 = !DILocation(line: 3874, column: 35, scope: !8894)
!8899 = !DILocation(line: 3874, column: 3, scope: !8894)
!8900 = !DILocation(line: 3875, column: 11, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 3875, column: 11)
!8902 = !DILocation(line: 3875, column: 18, scope: !8901)
!8903 = !DILocation(line: 3875, column: 11, scope: !8894)
!8904 = !DILocation(line: 3882, column: 29, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !8901, file: !3, line: 3875, column: 48)
!8906 = !DILocation(line: 3882, column: 35, scope: !8905)
!8907 = !DILocation(line: 3882, column: 3, scope: !8905)
!8908 = !DILocation(line: 3883, column: 3, scope: !8905)
!8909 = !DILocation(line: 3885, column: 2, scope: !8905)
!8910 = !DILocation(line: 3887, column: 6, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8873, file: !3, line: 3887, column: 6)
!8912 = !DILocation(line: 3887, column: 13, scope: !8911)
!8913 = !DILocation(line: 3887, column: 6, scope: !8873)
!8914 = !DILocation(line: 3888, column: 30, scope: !8911)
!8915 = !DILocation(line: 3888, column: 36, scope: !8911)
!8916 = !DILocation(line: 3888, column: 3, scope: !8911)
!8917 = !DILocation(line: 3890, column: 7, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8873, file: !3, line: 3890, column: 6)
!8919 = !DILocation(line: 3890, column: 14, scope: !8918)
!8920 = !DILocation(line: 3890, column: 30, scope: !8918)
!8921 = !DILocation(line: 3890, column: 34, scope: !8918)
!8922 = !DILocation(line: 3890, column: 41, scope: !8918)
!8923 = !DILocation(line: 3890, column: 6, scope: !8873)
!8924 = !DILocation(line: 3891, column: 3, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8918, file: !3, line: 3890, column: 60)
!8926 = !DILocation(line: 3893, column: 3, scope: !8925)
!8927 = !DILocation(line: 3896, column: 6, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8873, file: !3, line: 3896, column: 6)
!8929 = !DILocation(line: 3896, column: 13, scope: !8928)
!8930 = !DILocation(line: 3896, column: 6, scope: !8873)
!8931 = !DILocation(line: 3897, column: 26, scope: !8928)
!8932 = !DILocation(line: 3897, column: 32, scope: !8928)
!8933 = !DILocation(line: 3897, column: 3, scope: !8928)
!8934 = !DILocation(line: 3898, column: 11, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8928, file: !3, line: 3898, column: 11)
!8936 = !DILocation(line: 3898, column: 18, scope: !8935)
!8937 = !DILocation(line: 3898, column: 11, scope: !8928)
!8938 = !DILocation(line: 3899, column: 28, scope: !8935)
!8939 = !DILocation(line: 3899, column: 34, scope: !8935)
!8940 = !DILocation(line: 3899, column: 3, scope: !8935)
!8941 = !DILocation(line: 3901, column: 29, scope: !8873)
!8942 = !DILocation(line: 3901, column: 36, scope: !8873)
!8943 = !DILocation(line: 3901, column: 43, scope: !8873)
!8944 = !DILocation(line: 3901, column: 35, scope: !8873)
!8945 = !DILocation(line: 3901, column: 8, scope: !8873)
!8946 = !DILocation(line: 3901, column: 6, scope: !8873)
!8947 = !DILocation(line: 3902, column: 6, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8873, file: !3, line: 3902, column: 6)
!8949 = !DILocation(line: 3902, column: 10, scope: !8948)
!8950 = !DILocation(line: 3902, column: 6, scope: !8873)
!8951 = !DILocation(line: 3903, column: 10, scope: !8948)
!8952 = !DILocation(line: 3903, column: 3, scope: !8948)
!8953 = !DILocation(line: 3906, column: 8, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8873, file: !3, line: 3906, column: 6)
!8955 = !DILocation(line: 3906, column: 15, scope: !8954)
!8956 = !DILocation(line: 3906, column: 6, scope: !8873)
!8957 = !DILocation(line: 3907, column: 3, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8959, file: !3, line: 3907, column: 3)
!8959 = distinct !DILexicalBlock(scope: !8960, file: !3, line: 3907, column: 3)
!8960 = distinct !DILexicalBlock(scope: !8954, file: !3, line: 3906, column: 43)
!8961 = !DILocation(line: 3907, column: 3, scope: !8959)
!8962 = !DILocation(line: 3908, column: 3, scope: !8960)
!8963 = !DILocation(line: 3912, column: 6, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8873, file: !3, line: 3912, column: 6)
!8965 = !DILocation(line: 3912, column: 13, scope: !8964)
!8966 = !DILocation(line: 3912, column: 6, scope: !8873)
!8967 = !DILocation(line: 3913, column: 32, scope: !8964)
!8968 = !DILocation(line: 3914, column: 8, scope: !8964)
!8969 = !DILocation(line: 3914, column: 15, scope: !8964)
!8970 = !DILocation(line: 3914, column: 6, scope: !8964)
!8971 = !DILocation(line: 3914, column: 5, scope: !8964)
!8972 = !DILocation(line: 3913, column: 9, scope: !8964)
!8973 = !DILocation(line: 3913, column: 7, scope: !8964)
!8974 = !DILocation(line: 3913, column: 3, scope: !8964)
!8975 = !DILocation(line: 3916, column: 31, scope: !8964)
!8976 = !DILocation(line: 3916, column: 9, scope: !8964)
!8977 = !DILocation(line: 3916, column: 7, scope: !8964)
!8978 = !DILocation(line: 3918, column: 9, scope: !8873)
!8979 = !DILocation(line: 3918, column: 2, scope: !8873)
!8980 = !DILocation(line: 3919, column: 1, scope: !8873)
!8981 = distinct !DISubprogram(name: "gpiochip_free_own_desc", scope: !3, file: !3, line: 2228, type: !8591, scopeLine: 2229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!8982 = !DILocalVariable(name: "desc", arg: 1, scope: !8981, file: !3, line: 2228, type: !4232)
!8983 = !DILocation(line: 2228, column: 47, scope: !8981)
!8984 = !DILocation(line: 2230, column: 6, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8981, file: !3, line: 2230, column: 6)
!8986 = !DILocation(line: 2230, column: 6, scope: !8981)
!8987 = !DILocation(line: 2231, column: 21, scope: !8985)
!8988 = !DILocation(line: 2231, column: 3, scope: !8985)
!8989 = !DILocation(line: 2232, column: 1, scope: !8981)
!8990 = distinct !DISubprogram(name: "gpiod_direction_input", scope: !3, file: !3, line: 2303, type: !4867, scopeLine: 2304, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!8991 = !DILocalVariable(name: "desc", arg: 1, scope: !8990, file: !3, line: 2303, type: !4232)
!8992 = !DILocation(line: 2303, column: 45, scope: !8990)
!8993 = !DILocalVariable(name: "gc", scope: !8990, file: !3, line: 2305, type: !4096)
!8994 = !DILocation(line: 2305, column: 20, scope: !8990)
!8995 = !DILocalVariable(name: "ret", scope: !8990, file: !3, line: 2306, type: !224)
!8996 = !DILocation(line: 2306, column: 8, scope: !8990)
!8997 = !DILocation(line: 2308, column: 2, scope: !8990)
!8998 = !DILocalVariable(name: "__valid", scope: !8999, file: !3, line: 2308, type: !224)
!8999 = distinct !DILexicalBlock(scope: !8990, file: !3, line: 2308, column: 2)
!9000 = !DILocation(line: 2308, column: 2, scope: !8999)
!9001 = !DILocation(line: 2308, column: 2, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8999, file: !3, line: 2308, column: 2)
!9003 = !DILocation(line: 2309, column: 7, scope: !8990)
!9004 = !DILocation(line: 2309, column: 13, scope: !8990)
!9005 = !DILocation(line: 2309, column: 19, scope: !8990)
!9006 = !DILocation(line: 2309, column: 5, scope: !8990)
!9007 = !DILocation(line: 2316, column: 7, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !8990, file: !3, line: 2316, column: 6)
!9009 = !DILocation(line: 2316, column: 11, scope: !9008)
!9010 = !DILocation(line: 2316, column: 15, scope: !9008)
!9011 = !DILocation(line: 2316, column: 18, scope: !9008)
!9012 = !DILocation(line: 2316, column: 22, scope: !9008)
!9013 = !DILocation(line: 2316, column: 6, scope: !8990)
!9014 = !DILocation(line: 2317, column: 3, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !9008, file: !3, line: 2316, column: 39)
!9016 = !DILocation(line: 2320, column: 3, scope: !9015)
!9017 = !DILocation(line: 2329, column: 6, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !8990, file: !3, line: 2329, column: 6)
!9019 = !DILocation(line: 2329, column: 10, scope: !9018)
!9020 = !DILocation(line: 2329, column: 6, scope: !8990)
!9021 = !DILocation(line: 2330, column: 9, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !9018, file: !3, line: 2329, column: 27)
!9023 = !DILocation(line: 2330, column: 13, scope: !9022)
!9024 = !DILocation(line: 2330, column: 29, scope: !9022)
!9025 = !DILocation(line: 2330, column: 50, scope: !9022)
!9026 = !DILocation(line: 2330, column: 33, scope: !9022)
!9027 = !DILocation(line: 2330, column: 7, scope: !9022)
!9028 = !DILocation(line: 2331, column: 2, scope: !9022)
!9029 = !DILocation(line: 2331, column: 13, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9018, file: !3, line: 2331, column: 13)
!9031 = !DILocation(line: 2331, column: 17, scope: !9030)
!9032 = !DILocation(line: 2331, column: 31, scope: !9030)
!9033 = !DILocation(line: 2332, column: 6, scope: !9030)
!9034 = !DILocation(line: 2332, column: 10, scope: !9030)
!9035 = !DILocation(line: 2332, column: 24, scope: !9030)
!9036 = !DILocation(line: 2332, column: 45, scope: !9030)
!9037 = !DILocation(line: 2332, column: 28, scope: !9030)
!9038 = !DILocation(line: 2332, column: 52, scope: !9030)
!9039 = !DILocation(line: 2331, column: 13, scope: !9018)
!9040 = !DILocation(line: 2333, column: 3, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9030, file: !3, line: 2332, column: 59)
!9042 = !DILocation(line: 2336, column: 3, scope: !9041)
!9043 = !DILocation(line: 2338, column: 6, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !8990, file: !3, line: 2338, column: 6)
!9045 = !DILocation(line: 2338, column: 10, scope: !9044)
!9046 = !DILocation(line: 2338, column: 6, scope: !8990)
!9047 = !DILocation(line: 2339, column: 27, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9044, file: !3, line: 2338, column: 16)
!9049 = !DILocation(line: 2339, column: 33, scope: !9048)
!9050 = !DILocation(line: 2339, column: 3, scope: !9048)
!9051 = !DILocation(line: 2340, column: 23, scope: !9048)
!9052 = !DILocation(line: 2340, column: 9, scope: !9048)
!9053 = !DILocation(line: 2340, column: 7, scope: !9048)
!9054 = !DILocation(line: 2341, column: 2, scope: !9048)
!9055 = !DILocation(line: 2343, column: 36, scope: !8990)
!9056 = !DILocation(line: 2343, column: 23, scope: !8990)
!9057 = !DILocation(line: 2343, column: 46, scope: !8990)
!9058 = !DILocation(line: 2343, column: 2, scope: !8990)
!9059 = !DILocation(line: 2345, column: 9, scope: !8990)
!9060 = !DILocation(line: 2345, column: 2, scope: !8990)
!9061 = !DILocation(line: 2346, column: 1, scope: !8990)
!9062 = distinct !DISubprogram(name: "clear_bit", scope: !9063, file: !9063, line: 39, type: !9064, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!9063 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!9064 = !DISubroutineType(types: !9065)
!9065 = !{null, !327, !4874}
!9066 = !DILocalVariable(name: "nr", arg: 1, scope: !9067, file: !4961, line: 72, type: !327)
!9067 = distinct !DISubprogram(name: "arch_clear_bit", scope: !4961, file: !4961, line: 72, type: !9064, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!9068 = !DILocation(line: 72, column: 21, scope: !9067, inlinedAt: !9069)
!9069 = distinct !DILocation(line: 42, column: 2, scope: !9062)
!9070 = !DILocalVariable(name: "addr", arg: 2, scope: !9067, file: !4961, line: 72, type: !4874)
!9071 = !DILocation(line: 72, column: 49, scope: !9067, inlinedAt: !9069)
!9072 = !DILocalVariable(name: "v", arg: 1, scope: !9073, file: !4976, line: 84, type: !4979)
!9073 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !4976, file: !4976, line: 84, type: !4977, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!9074 = !DILocation(line: 84, column: 74, scope: !9073, inlinedAt: !9075)
!9075 = distinct !DILocation(line: 41, column: 2, scope: !9062)
!9076 = !DILocalVariable(name: "size", arg: 2, scope: !9073, file: !4976, line: 84, type: !339)
!9077 = !DILocation(line: 84, column: 84, scope: !9073, inlinedAt: !9075)
!9078 = !DILocalVariable(name: "nr", arg: 1, scope: !9062, file: !9063, line: 39, type: !327)
!9079 = !DILocation(line: 39, column: 35, scope: !9062)
!9080 = !DILocalVariable(name: "addr", arg: 2, scope: !9062, file: !9063, line: 39, type: !4874)
!9081 = !DILocation(line: 39, column: 63, scope: !9062)
!9082 = !DILocation(line: 41, column: 26, scope: !9062)
!9083 = !DILocation(line: 41, column: 33, scope: !9062)
!9084 = !DILocation(line: 41, column: 31, scope: !9062)
!9085 = !DILocation(line: 86, column: 20, scope: !9073, inlinedAt: !9075)
!9086 = !DILocation(line: 86, column: 23, scope: !9073, inlinedAt: !9075)
!9087 = !DILocation(line: 86, column: 2, scope: !9073, inlinedAt: !9075)
!9088 = !DILocation(line: 87, column: 2, scope: !9073, inlinedAt: !9075)
!9089 = !DILocation(line: 42, column: 17, scope: !9062)
!9090 = !DILocation(line: 42, column: 21, scope: !9062)
!9091 = !DILocation(line: 74, column: 27, scope: !9092, inlinedAt: !9069)
!9092 = distinct !DILexicalBlock(scope: !9067, file: !4961, line: 74, column: 6)
!9093 = !DILocation(line: 74, column: 6, scope: !9092, inlinedAt: !9069)
!9094 = !DILocation(line: 74, column: 6, scope: !9067, inlinedAt: !9069)
!9095 = !DILocation(line: 76, column: 6, scope: !9096, inlinedAt: !9069)
!9096 = distinct !DILexicalBlock(scope: !9092, file: !4961, line: 74, column: 32)
!9097 = !DILocation(line: 77, column: 13, scope: !9096, inlinedAt: !9069)
!9098 = !DILocation(line: 77, column: 12, scope: !9096, inlinedAt: !9069)
!9099 = !DILocation(line: 75, column: 3, scope: !9096, inlinedAt: !9069)
!9100 = !{i32 -2147119386}
!9101 = !DILocation(line: 78, column: 2, scope: !9096, inlinedAt: !9069)
!9102 = !DILocation(line: 80, column: 8, scope: !9103, inlinedAt: !9069)
!9103 = distinct !DILexicalBlock(scope: !9092, file: !4961, line: 78, column: 9)
!9104 = !DILocation(line: 80, column: 32, scope: !9103, inlinedAt: !9069)
!9105 = !DILocation(line: 79, column: 3, scope: !9103, inlinedAt: !9069)
!9106 = !{i32 -2147119254}
!9107 = !DILocation(line: 43, column: 1, scope: !9062)
!9108 = distinct !DISubprogram(name: "gpio_set_bias", scope: !3, file: !3, line: 2274, type: !4867, scopeLine: 2275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!9109 = !DILocalVariable(name: "desc", arg: 1, scope: !9108, file: !3, line: 2274, type: !4232)
!9110 = !DILocation(line: 2274, column: 44, scope: !9108)
!9111 = !DILocalVariable(name: "bias", scope: !9108, file: !3, line: 2276, type: !224)
!9112 = !DILocation(line: 2276, column: 6, scope: !9108)
!9113 = !DILocalVariable(name: "ret", scope: !9108, file: !3, line: 2277, type: !224)
!9114 = !DILocation(line: 2277, column: 6, scope: !9108)
!9115 = !DILocation(line: 2279, column: 35, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9108, file: !3, line: 2279, column: 6)
!9117 = !DILocation(line: 2279, column: 41, scope: !9116)
!9118 = !DILocation(line: 2279, column: 6, scope: !9116)
!9119 = !DILocation(line: 2279, column: 6, scope: !9108)
!9120 = !DILocation(line: 2280, column: 8, scope: !9116)
!9121 = !DILocation(line: 2280, column: 3, scope: !9116)
!9122 = !DILocation(line: 2281, column: 35, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9116, file: !3, line: 2281, column: 11)
!9124 = !DILocation(line: 2281, column: 41, scope: !9123)
!9125 = !DILocation(line: 2281, column: 11, scope: !9123)
!9126 = !DILocation(line: 2281, column: 11, scope: !9116)
!9127 = !DILocation(line: 2282, column: 8, scope: !9123)
!9128 = !DILocation(line: 2282, column: 3, scope: !9123)
!9129 = !DILocation(line: 2283, column: 37, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9123, file: !3, line: 2283, column: 11)
!9131 = !DILocation(line: 2283, column: 43, scope: !9130)
!9132 = !DILocation(line: 2283, column: 11, scope: !9130)
!9133 = !DILocation(line: 2283, column: 11, scope: !9123)
!9134 = !DILocation(line: 2284, column: 8, scope: !9130)
!9135 = !DILocation(line: 2284, column: 3, scope: !9130)
!9136 = !DILocation(line: 2286, column: 6, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9108, file: !3, line: 2286, column: 6)
!9138 = !DILocation(line: 2286, column: 6, scope: !9108)
!9139 = !DILocation(line: 2287, column: 25, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 2286, column: 12)
!9141 = !DILocation(line: 2287, column: 31, scope: !9140)
!9142 = !DILocation(line: 2287, column: 9, scope: !9140)
!9143 = !DILocation(line: 2287, column: 7, scope: !9140)
!9144 = !DILocation(line: 2288, column: 7, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9140, file: !3, line: 2288, column: 7)
!9146 = !DILocation(line: 2288, column: 11, scope: !9145)
!9147 = !DILocation(line: 2288, column: 7, scope: !9140)
!9148 = !DILocation(line: 2289, column: 11, scope: !9145)
!9149 = !DILocation(line: 2289, column: 4, scope: !9145)
!9150 = !DILocation(line: 2290, column: 2, scope: !9140)
!9151 = !DILocation(line: 2291, column: 2, scope: !9108)
!9152 = !DILocation(line: 2292, column: 1, scope: !9108)
!9153 = distinct !DISubprogram(name: "trace_gpio_direction", scope: !9154, file: !9154, line: 10, type: !9155, scopeLine: 10, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!9154 = !DIFile(filename: "./include/trace/events/gpio.h", directory: "/home/lizy2001/genbc/linux")
!9155 = !DISubroutineType(types: !9156)
!9156 = !{null, !7, !224, !224}
!9157 = !DILocalVariable(name: "gpio", arg: 1, scope: !9153, file: !9154, line: 10, type: !7)
!9158 = !DILocation(line: 10, column: 1, scope: !9153)
!9159 = !DILocalVariable(name: "in", arg: 2, scope: !9153, file: !9154, line: 10, type: !224)
!9160 = !DILocalVariable(name: "err", arg: 3, scope: !9153, file: !9154, line: 10, type: !224)
!9161 = distinct !DISubprogram(name: "gpiod_direction_output_raw", scope: !3, file: !3, line: 2403, type: !9162, scopeLine: 2404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!9162 = !DISubroutineType(types: !9163)
!9163 = !{!224, !4232, !224}
!9164 = !DILocalVariable(name: "desc", arg: 1, scope: !9161, file: !3, line: 2403, type: !4232)
!9165 = !DILocation(line: 2403, column: 50, scope: !9161)
!9166 = !DILocalVariable(name: "value", arg: 2, scope: !9161, file: !3, line: 2403, type: !224)
!9167 = !DILocation(line: 2403, column: 60, scope: !9161)
!9168 = !DILocation(line: 2405, column: 2, scope: !9161)
!9169 = !DILocalVariable(name: "__valid", scope: !9170, file: !3, line: 2405, type: !224)
!9170 = distinct !DILexicalBlock(scope: !9161, file: !3, line: 2405, column: 2)
!9171 = !DILocation(line: 2405, column: 2, scope: !9170)
!9172 = !DILocation(line: 2405, column: 2, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9170, file: !3, line: 2405, column: 2)
!9174 = !DILocation(line: 2406, column: 43, scope: !9161)
!9175 = !DILocation(line: 2406, column: 49, scope: !9161)
!9176 = !DILocation(line: 2406, column: 9, scope: !9161)
!9177 = !DILocation(line: 2406, column: 2, scope: !9161)
!9178 = !DILocation(line: 2407, column: 1, scope: !9161)
!9179 = distinct !DISubprogram(name: "gpiod_direction_output_raw_commit", scope: !3, file: !3, line: 2349, type: !9162, scopeLine: 2350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!9180 = !DILocalVariable(name: "desc", arg: 1, scope: !9179, file: !3, line: 2349, type: !4232)
!9181 = !DILocation(line: 2349, column: 64, scope: !9179)
!9182 = !DILocalVariable(name: "value", arg: 2, scope: !9179, file: !3, line: 2349, type: !224)
!9183 = !DILocation(line: 2349, column: 74, scope: !9179)
!9184 = !DILocalVariable(name: "gc", scope: !9179, file: !3, line: 2351, type: !4096)
!9185 = !DILocation(line: 2351, column: 20, scope: !9179)
!9186 = !DILocation(line: 2351, column: 25, scope: !9179)
!9187 = !DILocation(line: 2351, column: 31, scope: !9179)
!9188 = !DILocation(line: 2351, column: 37, scope: !9179)
!9189 = !DILocalVariable(name: "val", scope: !9179, file: !3, line: 2352, type: !224)
!9190 = !DILocation(line: 2352, column: 6, scope: !9179)
!9191 = !DILocation(line: 2352, column: 14, scope: !9179)
!9192 = !DILocation(line: 2352, column: 13, scope: !9179)
!9193 = !DILocation(line: 2352, column: 12, scope: !9179)
!9194 = !DILocalVariable(name: "ret", scope: !9179, file: !3, line: 2353, type: !224)
!9195 = !DILocation(line: 2353, column: 6, scope: !9179)
!9196 = !DILocation(line: 2360, column: 7, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9179, file: !3, line: 2360, column: 6)
!9198 = !DILocation(line: 2360, column: 11, scope: !9197)
!9199 = !DILocation(line: 2360, column: 15, scope: !9197)
!9200 = !DILocation(line: 2360, column: 19, scope: !9197)
!9201 = !DILocation(line: 2360, column: 23, scope: !9197)
!9202 = !DILocation(line: 2360, column: 6, scope: !9179)
!9203 = !DILocation(line: 2361, column: 3, scope: !9204)
!9204 = distinct !DILexicalBlock(scope: !9197, file: !3, line: 2360, column: 41)
!9205 = !DILocation(line: 2364, column: 3, scope: !9204)
!9206 = !DILocation(line: 2367, column: 6, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9179, file: !3, line: 2367, column: 6)
!9208 = !DILocation(line: 2367, column: 10, scope: !9207)
!9209 = !DILocation(line: 2367, column: 6, scope: !9179)
!9210 = !DILocation(line: 2368, column: 9, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9207, file: !3, line: 2367, column: 28)
!9212 = !DILocation(line: 2368, column: 13, scope: !9211)
!9213 = !DILocation(line: 2368, column: 30, scope: !9211)
!9214 = !DILocation(line: 2368, column: 51, scope: !9211)
!9215 = !DILocation(line: 2368, column: 34, scope: !9211)
!9216 = !DILocation(line: 2368, column: 58, scope: !9211)
!9217 = !DILocation(line: 2368, column: 7, scope: !9211)
!9218 = !DILocation(line: 2369, column: 2, scope: !9211)
!9219 = !DILocation(line: 2371, column: 7, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9221, file: !3, line: 2371, column: 7)
!9221 = distinct !DILexicalBlock(scope: !9207, file: !3, line: 2369, column: 9)
!9222 = !DILocation(line: 2371, column: 11, scope: !9220)
!9223 = !DILocation(line: 2371, column: 25, scope: !9220)
!9224 = !DILocation(line: 2372, column: 7, scope: !9220)
!9225 = !DILocation(line: 2372, column: 11, scope: !9220)
!9226 = !DILocation(line: 2372, column: 25, scope: !9220)
!9227 = !DILocation(line: 2372, column: 46, scope: !9220)
!9228 = !DILocation(line: 2372, column: 29, scope: !9220)
!9229 = !DILocation(line: 2371, column: 7, scope: !9221)
!9230 = !DILocation(line: 2373, column: 4, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9220, file: !3, line: 2372, column: 54)
!9232 = !DILocation(line: 2376, column: 4, scope: !9231)
!9233 = !DILocation(line: 2382, column: 3, scope: !9221)
!9234 = !DILocation(line: 2382, column: 7, scope: !9221)
!9235 = !DILocation(line: 2382, column: 11, scope: !9221)
!9236 = !DILocation(line: 2382, column: 32, scope: !9221)
!9237 = !DILocation(line: 2382, column: 15, scope: !9221)
!9238 = !DILocation(line: 2382, column: 39, scope: !9221)
!9239 = !DILocation(line: 2385, column: 7, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9179, file: !3, line: 2385, column: 6)
!9241 = !DILocation(line: 2385, column: 6, scope: !9179)
!9242 = !DILocation(line: 2386, column: 25, scope: !9240)
!9243 = !DILocation(line: 2386, column: 31, scope: !9240)
!9244 = !DILocation(line: 2386, column: 3, scope: !9240)
!9245 = !DILocation(line: 2387, column: 32, scope: !9179)
!9246 = !DILocation(line: 2387, column: 19, scope: !9179)
!9247 = !DILocation(line: 2387, column: 42, scope: !9179)
!9248 = !DILocation(line: 2387, column: 2, scope: !9179)
!9249 = !DILocation(line: 2388, column: 36, scope: !9179)
!9250 = !DILocation(line: 2388, column: 23, scope: !9179)
!9251 = !DILocation(line: 2388, column: 46, scope: !9179)
!9252 = !DILocation(line: 2388, column: 2, scope: !9179)
!9253 = !DILocation(line: 2389, column: 9, scope: !9179)
!9254 = !DILocation(line: 2389, column: 2, scope: !9179)
!9255 = !DILocation(line: 2390, column: 1, scope: !9179)
!9256 = distinct !DISubprogram(name: "gpiod_direction_output", scope: !3, file: !3, line: 2422, type: !9162, scopeLine: 2423, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!9257 = !DILocalVariable(name: "desc", arg: 1, scope: !9256, file: !3, line: 2422, type: !4232)
!9258 = !DILocation(line: 2422, column: 46, scope: !9256)
!9259 = !DILocalVariable(name: "value", arg: 2, scope: !9256, file: !3, line: 2422, type: !224)
!9260 = !DILocation(line: 2422, column: 56, scope: !9256)
!9261 = !DILocalVariable(name: "ret", scope: !9256, file: !3, line: 2424, type: !224)
!9262 = !DILocation(line: 2424, column: 6, scope: !9256)
!9263 = !DILocation(line: 2426, column: 2, scope: !9256)
!9264 = !DILocalVariable(name: "__valid", scope: !9265, file: !3, line: 2426, type: !224)
!9265 = distinct !DILexicalBlock(scope: !9256, file: !3, line: 2426, column: 2)
!9266 = !DILocation(line: 2426, column: 2, scope: !9265)
!9267 = !DILocation(line: 2426, column: 2, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9265, file: !3, line: 2426, column: 2)
!9269 = !DILocation(line: 2427, column: 33, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9256, file: !3, line: 2427, column: 6)
!9271 = !DILocation(line: 2427, column: 39, scope: !9270)
!9272 = !DILocation(line: 2427, column: 6, scope: !9270)
!9273 = !DILocation(line: 2427, column: 6, scope: !9256)
!9274 = !DILocation(line: 2428, column: 12, scope: !9270)
!9275 = !DILocation(line: 2428, column: 11, scope: !9270)
!9276 = !DILocation(line: 2428, column: 9, scope: !9270)
!9277 = !DILocation(line: 2428, column: 3, scope: !9270)
!9278 = !DILocation(line: 2430, column: 13, scope: !9270)
!9279 = !DILocation(line: 2430, column: 12, scope: !9270)
!9280 = !DILocation(line: 2430, column: 11, scope: !9270)
!9281 = !DILocation(line: 2430, column: 9, scope: !9270)
!9282 = !DILocation(line: 2433, column: 34, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !9256, file: !3, line: 2433, column: 6)
!9284 = !DILocation(line: 2433, column: 40, scope: !9283)
!9285 = !DILocation(line: 2433, column: 6, scope: !9283)
!9286 = !DILocation(line: 2433, column: 47, scope: !9283)
!9287 = !DILocation(line: 2434, column: 37, scope: !9283)
!9288 = !DILocation(line: 2434, column: 43, scope: !9283)
!9289 = !DILocation(line: 2434, column: 6, scope: !9283)
!9290 = !DILocation(line: 2433, column: 6, scope: !9256)
!9291 = !DILocation(line: 2435, column: 3, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9283, file: !3, line: 2434, column: 51)
!9293 = !DILocation(line: 2438, column: 3, scope: !9292)
!9294 = !DILocation(line: 2441, column: 33, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9256, file: !3, line: 2441, column: 6)
!9296 = !DILocation(line: 2441, column: 39, scope: !9295)
!9297 = !DILocation(line: 2441, column: 6, scope: !9295)
!9298 = !DILocation(line: 2441, column: 6, scope: !9256)
!9299 = !DILocation(line: 2443, column: 25, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9295, file: !3, line: 2441, column: 47)
!9301 = !DILocation(line: 2443, column: 9, scope: !9300)
!9302 = !DILocation(line: 2443, column: 7, scope: !9300)
!9303 = !DILocation(line: 2444, column: 8, scope: !9304)
!9304 = distinct !DILexicalBlock(scope: !9300, file: !3, line: 2444, column: 7)
!9305 = !DILocation(line: 2444, column: 7, scope: !9300)
!9306 = !DILocation(line: 2445, column: 4, scope: !9304)
!9307 = !DILocation(line: 2447, column: 7, scope: !9308)
!9308 = distinct !DILexicalBlock(scope: !9300, file: !3, line: 2447, column: 7)
!9309 = !DILocation(line: 2447, column: 7, scope: !9300)
!9310 = !DILocation(line: 2448, column: 32, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !9308, file: !3, line: 2447, column: 14)
!9312 = !DILocation(line: 2448, column: 10, scope: !9311)
!9313 = !DILocation(line: 2448, column: 8, scope: !9311)
!9314 = !DILocation(line: 2449, column: 4, scope: !9311)
!9315 = !DILocation(line: 2451, column: 2, scope: !9300)
!9316 = !DILocation(line: 2452, column: 39, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9295, file: !3, line: 2452, column: 11)
!9318 = !DILocation(line: 2452, column: 45, scope: !9317)
!9319 = !DILocation(line: 2452, column: 11, scope: !9317)
!9320 = !DILocation(line: 2452, column: 11, scope: !9295)
!9321 = !DILocation(line: 2453, column: 25, scope: !9322)
!9322 = distinct !DILexicalBlock(scope: !9317, file: !3, line: 2452, column: 53)
!9323 = !DILocation(line: 2453, column: 9, scope: !9322)
!9324 = !DILocation(line: 2453, column: 7, scope: !9322)
!9325 = !DILocation(line: 2454, column: 8, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 2454, column: 7)
!9327 = !DILocation(line: 2454, column: 7, scope: !9322)
!9328 = !DILocation(line: 2455, column: 4, scope: !9326)
!9329 = !DILocation(line: 2457, column: 8, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 2457, column: 7)
!9331 = !DILocation(line: 2457, column: 7, scope: !9322)
!9332 = !DILocation(line: 2458, column: 32, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9330, file: !3, line: 2457, column: 15)
!9334 = !DILocation(line: 2458, column: 10, scope: !9333)
!9335 = !DILocation(line: 2458, column: 8, scope: !9333)
!9336 = !DILocation(line: 2459, column: 4, scope: !9333)
!9337 = !DILocation(line: 2461, column: 2, scope: !9322)
!9338 = !DILocation(line: 2462, column: 19, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9317, file: !3, line: 2461, column: 9)
!9340 = !DILocation(line: 2462, column: 3, scope: !9339)
!9341 = !DILocation(line: 2441, column: 44, scope: !9295)
!9342 = !DILabel(scope: !9256, name: "set_output_value", file: !3, line: 2465)
!9343 = !DILocation(line: 2465, column: 1, scope: !9256)
!9344 = !DILocation(line: 2466, column: 22, scope: !9256)
!9345 = !DILocation(line: 2466, column: 8, scope: !9256)
!9346 = !DILocation(line: 2466, column: 6, scope: !9256)
!9347 = !DILocation(line: 2467, column: 6, scope: !9348)
!9348 = distinct !DILexicalBlock(scope: !9256, file: !3, line: 2467, column: 6)
!9349 = !DILocation(line: 2467, column: 6, scope: !9256)
!9350 = !DILocation(line: 2468, column: 10, scope: !9348)
!9351 = !DILocation(line: 2468, column: 3, scope: !9348)
!9352 = !DILocation(line: 2469, column: 43, scope: !9256)
!9353 = !DILocation(line: 2469, column: 49, scope: !9256)
!9354 = !DILocation(line: 2469, column: 9, scope: !9256)
!9355 = !DILocation(line: 2469, column: 2, scope: !9256)
!9356 = !DILabel(scope: !9256, name: "set_output_flag", file: !3, line: 2471)
!9357 = !DILocation(line: 2471, column: 1, scope: !9256)
!9358 = !DILocation(line: 2478, column: 6, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9256, file: !3, line: 2478, column: 6)
!9360 = !DILocation(line: 2478, column: 10, scope: !9359)
!9361 = !DILocation(line: 2478, column: 6, scope: !9256)
!9362 = !DILocation(line: 2479, column: 25, scope: !9359)
!9363 = !DILocation(line: 2479, column: 31, scope: !9359)
!9364 = !DILocation(line: 2479, column: 3, scope: !9359)
!9365 = !DILocation(line: 2480, column: 9, scope: !9256)
!9366 = !DILocation(line: 2480, column: 2, scope: !9256)
!9367 = !DILocation(line: 2481, column: 1, scope: !9256)
!9368 = distinct !DISubprogram(name: "gpio_set_config", scope: !3, file: !3, line: 2254, type: !9369, scopeLine: 2255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!9369 = !DISubroutineType(types: !9370)
!9370 = !{!224, !4232, !166}
!9371 = !DILocalVariable(name: "desc", arg: 1, scope: !9368, file: !3, line: 2254, type: !4232)
!9372 = !DILocation(line: 2254, column: 46, scope: !9368)
!9373 = !DILocalVariable(name: "mode", arg: 2, scope: !9368, file: !3, line: 2254, type: !166)
!9374 = !DILocation(line: 2254, column: 74, scope: !9368)
!9375 = !DILocalVariable(name: "gc", scope: !9368, file: !3, line: 2256, type: !4096)
!9376 = !DILocation(line: 2256, column: 20, scope: !9368)
!9377 = !DILocation(line: 2256, column: 25, scope: !9368)
!9378 = !DILocation(line: 2256, column: 31, scope: !9368)
!9379 = !DILocation(line: 2256, column: 37, scope: !9368)
!9380 = !DILocalVariable(name: "config", scope: !9368, file: !3, line: 2257, type: !342)
!9381 = !DILocation(line: 2257, column: 16, scope: !9368)
!9382 = !DILocalVariable(name: "arg", scope: !9368, file: !3, line: 2258, type: !7)
!9383 = !DILocation(line: 2258, column: 11, scope: !9368)
!9384 = !DILocation(line: 2260, column: 10, scope: !9368)
!9385 = !DILocation(line: 2260, column: 2, scope: !9368)
!9386 = !DILocation(line: 2263, column: 7, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9368, file: !3, line: 2260, column: 16)
!9388 = !DILocation(line: 2264, column: 3, scope: !9387)
!9389 = !DILocation(line: 2267, column: 7, scope: !9387)
!9390 = !DILocation(line: 2268, column: 2, scope: !9387)
!9391 = !DILocation(line: 2270, column: 11, scope: !9368)
!9392 = !DILocation(line: 2270, column: 9, scope: !9368)
!9393 = !DILocation(line: 2271, column: 28, scope: !9368)
!9394 = !DILocation(line: 2271, column: 49, scope: !9368)
!9395 = !DILocation(line: 2271, column: 32, scope: !9368)
!9396 = !DILocation(line: 2271, column: 56, scope: !9368)
!9397 = !DILocation(line: 2271, column: 9, scope: !9368)
!9398 = !DILocation(line: 2271, column: 2, scope: !9368)
!9399 = distinct !DISubprogram(name: "set_bit", scope: !9063, file: !9063, line: 26, type: !9064, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!9400 = !DILocalVariable(name: "nr", arg: 1, scope: !9401, file: !4961, line: 52, type: !327)
!9401 = distinct !DISubprogram(name: "arch_set_bit", scope: !4961, file: !4961, line: 52, type: !9064, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!9402 = !DILocation(line: 52, column: 19, scope: !9401, inlinedAt: !9403)
!9403 = distinct !DILocation(line: 29, column: 2, scope: !9399)
!9404 = !DILocalVariable(name: "addr", arg: 2, scope: !9401, file: !4961, line: 52, type: !4874)
!9405 = !DILocation(line: 52, column: 47, scope: !9401, inlinedAt: !9403)
!9406 = !DILocation(line: 84, column: 74, scope: !9073, inlinedAt: !9407)
!9407 = distinct !DILocation(line: 28, column: 2, scope: !9399)
!9408 = !DILocation(line: 84, column: 84, scope: !9073, inlinedAt: !9407)
!9409 = !DILocalVariable(name: "nr", arg: 1, scope: !9399, file: !9063, line: 26, type: !327)
!9410 = !DILocation(line: 26, column: 33, scope: !9399)
!9411 = !DILocalVariable(name: "addr", arg: 2, scope: !9399, file: !9063, line: 26, type: !4874)
!9412 = !DILocation(line: 26, column: 61, scope: !9399)
!9413 = !DILocation(line: 28, column: 26, scope: !9399)
!9414 = !DILocation(line: 28, column: 33, scope: !9399)
!9415 = !DILocation(line: 28, column: 31, scope: !9399)
!9416 = !DILocation(line: 86, column: 20, scope: !9073, inlinedAt: !9407)
!9417 = !DILocation(line: 86, column: 23, scope: !9073, inlinedAt: !9407)
!9418 = !DILocation(line: 86, column: 2, scope: !9073, inlinedAt: !9407)
!9419 = !DILocation(line: 87, column: 2, scope: !9073, inlinedAt: !9407)
!9420 = !DILocation(line: 29, column: 15, scope: !9399)
!9421 = !DILocation(line: 29, column: 19, scope: !9399)
!9422 = !DILocation(line: 54, column: 27, scope: !9423, inlinedAt: !9403)
!9423 = distinct !DILexicalBlock(scope: !9401, file: !4961, line: 54, column: 6)
!9424 = !DILocation(line: 54, column: 6, scope: !9423, inlinedAt: !9403)
!9425 = !DILocation(line: 54, column: 6, scope: !9401, inlinedAt: !9403)
!9426 = !DILocation(line: 56, column: 6, scope: !9427, inlinedAt: !9403)
!9427 = distinct !DILexicalBlock(scope: !9423, file: !4961, line: 54, column: 32)
!9428 = !DILocation(line: 57, column: 12, scope: !9427, inlinedAt: !9403)
!9429 = !DILocation(line: 55, column: 3, scope: !9427, inlinedAt: !9403)
!9430 = !{i32 -2147120348}
!9431 = !DILocation(line: 59, column: 2, scope: !9427, inlinedAt: !9403)
!9432 = !DILocation(line: 61, column: 8, scope: !9433, inlinedAt: !9403)
!9433 = distinct !DILexicalBlock(scope: !9423, file: !4961, line: 59, column: 9)
!9434 = !DILocation(line: 61, column: 32, scope: !9433, inlinedAt: !9403)
!9435 = !DILocation(line: 60, column: 3, scope: !9433, inlinedAt: !9403)
!9436 = !{i32 -2147120216}
!9437 = !DILocation(line: 30, column: 1, scope: !9399)
!9438 = distinct !DISubprogram(name: "gpiod_set_config", scope: !3, file: !3, line: 2493, type: !9439, scopeLine: 2494, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!9439 = !DISubroutineType(types: !9440)
!9440 = !{!224, !4232, !342}
!9441 = !DILocalVariable(name: "desc", arg: 1, scope: !9438, file: !3, line: 2493, type: !4232)
!9442 = !DILocation(line: 2493, column: 40, scope: !9438)
!9443 = !DILocalVariable(name: "config", arg: 2, scope: !9438, file: !3, line: 2493, type: !342)
!9444 = !DILocation(line: 2493, column: 60, scope: !9438)
!9445 = !DILocalVariable(name: "gc", scope: !9438, file: !3, line: 2495, type: !4096)
!9446 = !DILocation(line: 2495, column: 20, scope: !9438)
!9447 = !DILocation(line: 2497, column: 2, scope: !9438)
!9448 = !DILocalVariable(name: "__valid", scope: !9449, file: !3, line: 2497, type: !224)
!9449 = distinct !DILexicalBlock(scope: !9438, file: !3, line: 2497, column: 2)
!9450 = !DILocation(line: 2497, column: 2, scope: !9449)
!9451 = !DILocation(line: 2497, column: 2, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9449, file: !3, line: 2497, column: 2)
!9453 = !DILocation(line: 2498, column: 7, scope: !9438)
!9454 = !DILocation(line: 2498, column: 13, scope: !9438)
!9455 = !DILocation(line: 2498, column: 19, scope: !9438)
!9456 = !DILocation(line: 2498, column: 5, scope: !9438)
!9457 = !DILocation(line: 2500, column: 28, scope: !9438)
!9458 = !DILocation(line: 2500, column: 49, scope: !9438)
!9459 = !DILocation(line: 2500, column: 32, scope: !9438)
!9460 = !DILocation(line: 2500, column: 56, scope: !9438)
!9461 = !DILocation(line: 2500, column: 9, scope: !9438)
!9462 = !DILocation(line: 2500, column: 2, scope: !9438)
!9463 = !DILocation(line: 2501, column: 1, scope: !9438)
!9464 = distinct !DISubprogram(name: "gpio_do_set_config", scope: !3, file: !3, line: 2245, type: !4133, scopeLine: 2247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!9465 = !DILocalVariable(name: "gc", arg: 1, scope: !9464, file: !3, line: 2245, type: !4096)
!9466 = !DILocation(line: 2245, column: 49, scope: !9464)
!9467 = !DILocalVariable(name: "offset", arg: 2, scope: !9464, file: !3, line: 2245, type: !7)
!9468 = !DILocation(line: 2245, column: 66, scope: !9464)
!9469 = !DILocalVariable(name: "config", arg: 3, scope: !9464, file: !3, line: 2246, type: !342)
!9470 = !DILocation(line: 2246, column: 24, scope: !9464)
!9471 = !DILocation(line: 2248, column: 7, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9464, file: !3, line: 2248, column: 6)
!9473 = !DILocation(line: 2248, column: 11, scope: !9472)
!9474 = !DILocation(line: 2248, column: 6, scope: !9464)
!9475 = !DILocation(line: 2249, column: 3, scope: !9472)
!9476 = !DILocation(line: 2251, column: 9, scope: !9464)
!9477 = !DILocation(line: 2251, column: 13, scope: !9464)
!9478 = !DILocation(line: 2251, column: 24, scope: !9464)
!9479 = !DILocation(line: 2251, column: 28, scope: !9464)
!9480 = !DILocation(line: 2251, column: 36, scope: !9464)
!9481 = !DILocation(line: 2251, column: 2, scope: !9464)
!9482 = !DILocation(line: 2252, column: 1, scope: !9464)
!9483 = distinct !DISubprogram(name: "gpiod_set_debounce", scope: !3, file: !3, line: 2513, type: !9484, scopeLine: 2514, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!9484 = !DISubroutineType(types: !9485)
!9485 = !{!224, !4232, !7}
!9486 = !DILocalVariable(name: "desc", arg: 1, scope: !9483, file: !3, line: 2513, type: !4232)
!9487 = !DILocation(line: 2513, column: 42, scope: !9483)
!9488 = !DILocalVariable(name: "debounce", arg: 2, scope: !9483, file: !3, line: 2513, type: !7)
!9489 = !DILocation(line: 2513, column: 57, scope: !9483)
!9490 = !DILocalVariable(name: "config", scope: !9483, file: !3, line: 2515, type: !342)
!9491 = !DILocation(line: 2515, column: 16, scope: !9483)
!9492 = !DILocation(line: 2517, column: 63, scope: !9483)
!9493 = !DILocation(line: 2517, column: 11, scope: !9483)
!9494 = !DILocation(line: 2517, column: 9, scope: !9483)
!9495 = !DILocation(line: 2518, column: 26, scope: !9483)
!9496 = !DILocation(line: 2518, column: 32, scope: !9483)
!9497 = !DILocation(line: 2518, column: 9, scope: !9483)
!9498 = !DILocation(line: 2518, column: 2, scope: !9483)
!9499 = distinct !DISubprogram(name: "pinconf_to_config_packed", scope: !167, file: !167, line: 161, type: !9500, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!9500 = !DISubroutineType(types: !9501)
!9501 = !{!342, !166, !433}
!9502 = !DILocalVariable(name: "param", arg: 1, scope: !9499, file: !167, line: 161, type: !166)
!9503 = !DILocation(line: 161, column: 76, scope: !9499)
!9504 = !DILocalVariable(name: "argument", arg: 2, scope: !9499, file: !167, line: 162, type: !433)
!9505 = !DILocation(line: 162, column: 16, scope: !9499)
!9506 = !DILocation(line: 164, column: 9, scope: !9499)
!9507 = !DILocation(line: 164, column: 2, scope: !9499)
!9508 = distinct !DISubprogram(name: "gpiod_set_transitory", scope: !3, file: !3, line: 2530, type: !9509, scopeLine: 2531, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!9509 = !DISubroutineType(types: !9510)
!9510 = !{!224, !4232, !508}
!9511 = !DILocation(line: 235, column: 45, scope: !4870, inlinedAt: !9512)
!9512 = distinct !DILocation(line: 2542, column: 2, scope: !9508)
!9513 = !DILocation(line: 235, column: 73, scope: !4870, inlinedAt: !9512)
!9514 = !DILocation(line: 236, column: 17, scope: !4870, inlinedAt: !9512)
!9515 = !DILocalVariable(name: "desc", arg: 1, scope: !9508, file: !3, line: 2530, type: !4232)
!9516 = !DILocation(line: 2530, column: 44, scope: !9508)
!9517 = !DILocalVariable(name: "transitory", arg: 2, scope: !9508, file: !3, line: 2530, type: !508)
!9518 = !DILocation(line: 2530, column: 55, scope: !9508)
!9519 = !DILocalVariable(name: "gc", scope: !9508, file: !3, line: 2532, type: !4096)
!9520 = !DILocation(line: 2532, column: 20, scope: !9508)
!9521 = !DILocalVariable(name: "packed", scope: !9508, file: !3, line: 2533, type: !342)
!9522 = !DILocation(line: 2533, column: 16, scope: !9508)
!9523 = !DILocalVariable(name: "gpio", scope: !9508, file: !3, line: 2534, type: !224)
!9524 = !DILocation(line: 2534, column: 6, scope: !9508)
!9525 = !DILocalVariable(name: "rc", scope: !9508, file: !3, line: 2535, type: !224)
!9526 = !DILocation(line: 2535, column: 6, scope: !9508)
!9527 = !DILocation(line: 2537, column: 2, scope: !9508)
!9528 = !DILocalVariable(name: "__valid", scope: !9529, file: !3, line: 2537, type: !224)
!9529 = distinct !DILexicalBlock(scope: !9508, file: !3, line: 2537, column: 2)
!9530 = !DILocation(line: 2537, column: 2, scope: !9529)
!9531 = !DILocation(line: 2537, column: 2, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9529, file: !3, line: 2537, column: 2)
!9533 = !DILocation(line: 2542, column: 31, scope: !9508)
!9534 = !DILocation(line: 2542, column: 37, scope: !9508)
!9535 = !DILocation(line: 2542, column: 44, scope: !9508)
!9536 = !DILocation(line: 238, column: 6, scope: !4933, inlinedAt: !9512)
!9537 = !DILocation(line: 238, column: 6, scope: !4870, inlinedAt: !9512)
!9538 = !DILocation(line: 239, column: 11, scope: !4933, inlinedAt: !9512)
!9539 = !DILocation(line: 239, column: 15, scope: !4933, inlinedAt: !9512)
!9540 = !DILocation(line: 239, column: 3, scope: !4933, inlinedAt: !9512)
!9541 = !DILocation(line: 241, column: 13, scope: !4933, inlinedAt: !9512)
!9542 = !DILocation(line: 241, column: 17, scope: !4933, inlinedAt: !9512)
!9543 = !DILocation(line: 241, column: 3, scope: !4933, inlinedAt: !9512)
!9544 = !DILocation(line: 2545, column: 7, scope: !9508)
!9545 = !DILocation(line: 2545, column: 13, scope: !9508)
!9546 = !DILocation(line: 2545, column: 19, scope: !9508)
!9547 = !DILocation(line: 2545, column: 5, scope: !9508)
!9548 = !DILocation(line: 2546, column: 7, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9508, file: !3, line: 2546, column: 6)
!9550 = !DILocation(line: 2546, column: 11, scope: !9549)
!9551 = !DILocation(line: 2546, column: 6, scope: !9508)
!9552 = !DILocation(line: 2547, column: 3, scope: !9549)
!9553 = !DILocation(line: 2550, column: 9, scope: !9508)
!9554 = !DILocation(line: 2550, column: 8, scope: !9508)
!9555 = !DILocation(line: 2549, column: 11, scope: !9508)
!9556 = !DILocation(line: 2549, column: 9, scope: !9508)
!9557 = !DILocation(line: 2551, column: 26, scope: !9508)
!9558 = !DILocation(line: 2551, column: 9, scope: !9508)
!9559 = !DILocation(line: 2551, column: 7, scope: !9508)
!9560 = !DILocation(line: 2552, column: 26, scope: !9508)
!9561 = !DILocation(line: 2552, column: 30, scope: !9508)
!9562 = !DILocation(line: 2552, column: 36, scope: !9508)
!9563 = !DILocation(line: 2552, column: 7, scope: !9508)
!9564 = !DILocation(line: 2552, column: 5, scope: !9508)
!9565 = !DILocation(line: 2553, column: 6, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9508, file: !3, line: 2553, column: 6)
!9567 = !DILocation(line: 2553, column: 9, scope: !9566)
!9568 = !DILocation(line: 2553, column: 6, scope: !9508)
!9569 = !DILocation(line: 2556, column: 3, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9566, file: !3, line: 2553, column: 23)
!9571 = !DILocation(line: 2559, column: 9, scope: !9508)
!9572 = !DILocation(line: 2559, column: 2, scope: !9508)
!9573 = !DILocation(line: 2560, column: 1, scope: !9508)
!9574 = distinct !DISubprogram(name: "gpiod_is_active_low", scope: !3, file: !3, line: 2569, type: !4833, scopeLine: 2570, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!9575 = !DILocalVariable(name: "desc", arg: 1, scope: !9574, file: !3, line: 2569, type: !4835)
!9576 = !DILocation(line: 2569, column: 49, scope: !9574)
!9577 = !DILocation(line: 2571, column: 2, scope: !9574)
!9578 = !DILocalVariable(name: "__valid", scope: !9579, file: !3, line: 2571, type: !224)
!9579 = distinct !DILexicalBlock(scope: !9574, file: !3, line: 2571, column: 2)
!9580 = !DILocation(line: 2571, column: 2, scope: !9579)
!9581 = !DILocation(line: 2571, column: 2, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9579, file: !3, line: 2571, column: 2)
!9583 = !DILocation(line: 2572, column: 36, scope: !9574)
!9584 = !DILocation(line: 2572, column: 42, scope: !9574)
!9585 = !DILocation(line: 2572, column: 9, scope: !9574)
!9586 = !DILocation(line: 2572, column: 2, scope: !9574)
!9587 = !DILocation(line: 2573, column: 1, scope: !9574)
!9588 = distinct !DISubprogram(name: "gpiod_toggle_active_low", scope: !3, file: !3, line: 2580, type: !8591, scopeLine: 2581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!9589 = !DILocalVariable(name: "desc", arg: 1, scope: !9588, file: !3, line: 2580, type: !4232)
!9590 = !DILocation(line: 2580, column: 48, scope: !9588)
!9591 = !DILocation(line: 2582, column: 2, scope: !9588)
!9592 = !DILocalVariable(name: "__valid", scope: !9593, file: !3, line: 2582, type: !224)
!9593 = distinct !DILexicalBlock(scope: !9588, file: !3, line: 2582, column: 2)
!9594 = !DILocation(line: 2582, column: 2, scope: !9593)
!9595 = !DILocation(line: 2582, column: 2, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9593, file: !3, line: 2582, column: 2)
!9597 = !DILocation(line: 2583, column: 31, scope: !9588)
!9598 = !DILocation(line: 2583, column: 37, scope: !9588)
!9599 = !DILocation(line: 2583, column: 2, scope: !9588)
!9600 = !DILocation(line: 2584, column: 1, scope: !9588)
!9601 = distinct !DISubprogram(name: "change_bit", scope: !9063, file: !9063, line: 55, type: !9064, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!9602 = !DILocalVariable(name: "nr", arg: 1, scope: !9603, file: !4961, line: 123, type: !327)
!9603 = distinct !DISubprogram(name: "arch_change_bit", scope: !4961, file: !4961, line: 123, type: !9064, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!9604 = !DILocation(line: 123, column: 22, scope: !9603, inlinedAt: !9605)
!9605 = distinct !DILocation(line: 58, column: 2, scope: !9601)
!9606 = !DILocalVariable(name: "addr", arg: 2, scope: !9603, file: !4961, line: 123, type: !4874)
!9607 = !DILocation(line: 123, column: 50, scope: !9603, inlinedAt: !9605)
!9608 = !DILocation(line: 84, column: 74, scope: !9073, inlinedAt: !9609)
!9609 = distinct !DILocation(line: 57, column: 2, scope: !9601)
!9610 = !DILocation(line: 84, column: 84, scope: !9073, inlinedAt: !9609)
!9611 = !DILocalVariable(name: "nr", arg: 1, scope: !9601, file: !9063, line: 55, type: !327)
!9612 = !DILocation(line: 55, column: 36, scope: !9601)
!9613 = !DILocalVariable(name: "addr", arg: 2, scope: !9601, file: !9063, line: 55, type: !4874)
!9614 = !DILocation(line: 55, column: 64, scope: !9601)
!9615 = !DILocation(line: 57, column: 26, scope: !9601)
!9616 = !DILocation(line: 57, column: 33, scope: !9601)
!9617 = !DILocation(line: 57, column: 31, scope: !9601)
!9618 = !DILocation(line: 86, column: 20, scope: !9073, inlinedAt: !9609)
!9619 = !DILocation(line: 86, column: 23, scope: !9073, inlinedAt: !9609)
!9620 = !DILocation(line: 86, column: 2, scope: !9073, inlinedAt: !9609)
!9621 = !DILocation(line: 87, column: 2, scope: !9073, inlinedAt: !9609)
!9622 = !DILocation(line: 58, column: 18, scope: !9601)
!9623 = !DILocation(line: 58, column: 22, scope: !9601)
!9624 = !DILocation(line: 125, column: 27, scope: !9625, inlinedAt: !9605)
!9625 = distinct !DILexicalBlock(scope: !9603, file: !4961, line: 125, column: 6)
!9626 = !DILocation(line: 125, column: 6, scope: !9625, inlinedAt: !9605)
!9627 = !DILocation(line: 125, column: 6, scope: !9603, inlinedAt: !9605)
!9628 = !DILocation(line: 127, column: 6, scope: !9629, inlinedAt: !9605)
!9629 = distinct !DILexicalBlock(scope: !9625, file: !4961, line: 125, column: 32)
!9630 = !DILocation(line: 128, column: 12, scope: !9629, inlinedAt: !9605)
!9631 = !DILocation(line: 126, column: 3, scope: !9629, inlinedAt: !9605)
!9632 = !{i32 -2147117233}
!9633 = !DILocation(line: 129, column: 2, scope: !9629, inlinedAt: !9605)
!9634 = !DILocation(line: 131, column: 8, scope: !9635, inlinedAt: !9605)
!9635 = distinct !DILexicalBlock(scope: !9625, file: !4961, line: 129, column: 9)
!9636 = !DILocation(line: 131, column: 32, scope: !9635, inlinedAt: !9605)
!9637 = !DILocation(line: 130, column: 3, scope: !9635, inlinedAt: !9605)
!9638 = !{i32 -2147117101}
!9639 = !DILocation(line: 59, column: 1, scope: !9601)
!9640 = distinct !DISubprogram(name: "gpiod_get_array_value_complex", scope: !3, file: !3, line: 2642, type: !9641, scopeLine: 2647, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!9641 = !DISubroutineType(types: !9642)
!9642 = !{!224, !508, !508, !7, !9643, !9644, !3758}
!9643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4232, size: 64)
!9644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9645, size: 64)
!9645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_array", file: !221, line: 75, size: 320, elements: !9646)
!9646 = !{!9647, !9648, !9649, !9650, !9651, !9652}
!9647 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !9645, file: !221, line: 76, baseType: !9643, size: 64)
!9648 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9645, file: !221, line: 77, baseType: !7, size: 32, offset: 64)
!9649 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !9645, file: !221, line: 78, baseType: !4096, size: 64, offset: 128)
!9650 = !DIDerivedType(tag: DW_TAG_member, name: "get_mask", scope: !9645, file: !221, line: 79, baseType: !3758, size: 64, offset: 192)
!9651 = !DIDerivedType(tag: DW_TAG_member, name: "set_mask", scope: !9645, file: !221, line: 80, baseType: !3758, size: 64, offset: 256)
!9652 = !DIDerivedType(tag: DW_TAG_member, name: "invert_mask", scope: !9645, file: !221, line: 81, baseType: !2348, offset: 320)
!9653 = !DILocalVariable(name: "nr", arg: 1, scope: !9654, file: !4871, line: 244, type: !327)
!9654 = distinct !DISubprogram(name: "__assign_bit", scope: !4871, file: !4871, line: 244, type: !4872, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!9655 = !DILocation(line: 244, column: 47, scope: !9654, inlinedAt: !9656)
!9656 = distinct !DILocation(line: 2729, column: 4, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9658, file: !3, line: 2722, column: 28)
!9658 = distinct !DILexicalBlock(scope: !9659, file: !3, line: 2722, column: 3)
!9659 = distinct !DILexicalBlock(scope: !9660, file: !3, line: 2722, column: 3)
!9660 = distinct !DILexicalBlock(scope: !9640, file: !3, line: 2678, column: 25)
!9661 = !DILocalVariable(name: "addr", arg: 2, scope: !9654, file: !4871, line: 244, type: !4874)
!9662 = !DILocation(line: 244, column: 75, scope: !9654, inlinedAt: !9656)
!9663 = !DILocalVariable(name: "value", arg: 3, scope: !9654, file: !4871, line: 245, type: !508)
!9664 = !DILocation(line: 245, column: 12, scope: !9654, inlinedAt: !9656)
!9665 = !DILocalVariable(name: "raw", arg: 1, scope: !9640, file: !3, line: 2642, type: !508)
!9666 = !DILocation(line: 2642, column: 40, scope: !9640)
!9667 = !DILocalVariable(name: "can_sleep", arg: 2, scope: !9640, file: !3, line: 2642, type: !508)
!9668 = !DILocation(line: 2642, column: 50, scope: !9640)
!9669 = !DILocalVariable(name: "array_size", arg: 3, scope: !9640, file: !3, line: 2643, type: !7)
!9670 = !DILocation(line: 2643, column: 20, scope: !9640)
!9671 = !DILocalVariable(name: "desc_array", arg: 4, scope: !9640, file: !3, line: 2644, type: !9643)
!9672 = !DILocation(line: 2644, column: 26, scope: !9640)
!9673 = !DILocalVariable(name: "array_info", arg: 5, scope: !9640, file: !3, line: 2645, type: !9644)
!9674 = !DILocation(line: 2645, column: 26, scope: !9640)
!9675 = !DILocalVariable(name: "value_bitmap", arg: 6, scope: !9640, file: !3, line: 2646, type: !3758)
!9676 = !DILocation(line: 2646, column: 22, scope: !9640)
!9677 = !DILocalVariable(name: "ret", scope: !9640, file: !3, line: 2648, type: !224)
!9678 = !DILocation(line: 2648, column: 6, scope: !9640)
!9679 = !DILocalVariable(name: "i", scope: !9640, file: !3, line: 2648, type: !224)
!9680 = !DILocation(line: 2648, column: 11, scope: !9640)
!9681 = !DILocation(line: 2655, column: 6, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9640, file: !3, line: 2655, column: 6)
!9683 = !DILocation(line: 2655, column: 17, scope: !9682)
!9684 = !DILocation(line: 2655, column: 20, scope: !9682)
!9685 = !DILocation(line: 2655, column: 32, scope: !9682)
!9686 = !DILocation(line: 2655, column: 40, scope: !9682)
!9687 = !DILocation(line: 2655, column: 37, scope: !9682)
!9688 = !DILocation(line: 2655, column: 51, scope: !9682)
!9689 = !DILocation(line: 2656, column: 6, scope: !9682)
!9690 = !DILocation(line: 2656, column: 20, scope: !9682)
!9691 = !DILocation(line: 2656, column: 32, scope: !9682)
!9692 = !DILocation(line: 2656, column: 17, scope: !9682)
!9693 = !DILocation(line: 2656, column: 37, scope: !9682)
!9694 = !DILocation(line: 2657, column: 14, scope: !9682)
!9695 = !DILocation(line: 2657, column: 6, scope: !9682)
!9696 = !DILocation(line: 2657, column: 28, scope: !9682)
!9697 = !DILocation(line: 2657, column: 41, scope: !9682)
!9698 = !DILocation(line: 2657, column: 53, scope: !9682)
!9699 = !DILocation(line: 2657, column: 39, scope: !9682)
!9700 = !DILocation(line: 2657, column: 25, scope: !9682)
!9701 = !DILocation(line: 2655, column: 6, scope: !9640)
!9702 = !DILocation(line: 2658, column: 8, scope: !9703)
!9703 = distinct !DILexicalBlock(scope: !9704, file: !3, line: 2658, column: 7)
!9704 = distinct !DILexicalBlock(scope: !9682, file: !3, line: 2657, column: 59)
!9705 = !DILocation(line: 2658, column: 7, scope: !9704)
!9706 = !DILocalVariable(name: "__ret_warn_on", scope: !9707, file: !3, line: 2659, type: !224)
!9707 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 2659, column: 4)
!9708 = !DILocation(line: 2659, column: 4, scope: !9707)
!9709 = !DILocation(line: 2659, column: 4, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !9707, file: !3, line: 2659, column: 4)
!9711 = !DILocation(line: 2659, column: 4, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9710, file: !3, line: 2659, column: 4)
!9713 = !DILocation(line: 2659, column: 4, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9712, file: !3, line: 2659, column: 4)
!9715 = !DILocation(line: 2659, column: 4, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9712, file: !3, line: 2659, column: 4)
!9717 = !{i32 -2141395284, i32 -2141395255, i32 -2141395209, i32 -2141395151, i32 -2141395097, i32 -2141395043, i32 -2141394988, i32 -2141394957}
!9718 = !DILocation(line: 2659, column: 4, scope: !9719)
!9719 = distinct !DILexicalBlock(scope: !9712, file: !3, line: 2659, column: 4)
!9720 = !{i32 -2141394552, i32 -2141394545, i32 -2141394493, i32 -2141394462, i32 -2141394432}
!9721 = !DILocation(line: 2659, column: 4, scope: !9722)
!9722 = distinct !DILexicalBlock(scope: !9712, file: !3, line: 2659, column: 4)
!9723 = !DILocation(line: 2659, column: 4, scope: !9703)
!9724 = !DILocation(line: 2661, column: 32, scope: !9704)
!9725 = !DILocation(line: 2661, column: 44, scope: !9704)
!9726 = !DILocation(line: 2662, column: 11, scope: !9704)
!9727 = !DILocation(line: 2662, column: 23, scope: !9704)
!9728 = !DILocation(line: 2663, column: 11, scope: !9704)
!9729 = !DILocation(line: 2661, column: 9, scope: !9704)
!9730 = !DILocation(line: 2661, column: 7, scope: !9704)
!9731 = !DILocation(line: 2664, column: 7, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9704, file: !3, line: 2664, column: 7)
!9733 = !DILocation(line: 2664, column: 7, scope: !9704)
!9734 = !DILocation(line: 2665, column: 11, scope: !9732)
!9735 = !DILocation(line: 2665, column: 4, scope: !9732)
!9736 = !DILocation(line: 2667, column: 8, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9704, file: !3, line: 2667, column: 7)
!9738 = !DILocation(line: 2667, column: 12, scope: !9737)
!9739 = !DILocation(line: 2667, column: 29, scope: !9737)
!9740 = !DILocation(line: 2667, column: 41, scope: !9737)
!9741 = !DILocation(line: 2667, column: 54, scope: !9737)
!9742 = !DILocation(line: 2667, column: 16, scope: !9737)
!9743 = !DILocation(line: 2667, column: 7, scope: !9704)
!9744 = !DILocation(line: 2668, column: 15, scope: !9737)
!9745 = !DILocation(line: 2668, column: 29, scope: !9737)
!9746 = !DILocation(line: 2669, column: 8, scope: !9737)
!9747 = !DILocation(line: 2669, column: 20, scope: !9737)
!9748 = !DILocation(line: 2669, column: 33, scope: !9737)
!9749 = !DILocation(line: 2668, column: 4, scope: !9737)
!9750 = !DILocation(line: 2671, column: 27, scope: !9704)
!9751 = !DILocation(line: 2671, column: 39, scope: !9704)
!9752 = !DILocation(line: 2671, column: 49, scope: !9704)
!9753 = !DILocation(line: 2671, column: 7, scope: !9704)
!9754 = !DILocation(line: 2671, column: 5, scope: !9704)
!9755 = !DILocation(line: 2672, column: 7, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9704, file: !3, line: 2672, column: 7)
!9757 = !DILocation(line: 2672, column: 12, scope: !9756)
!9758 = !DILocation(line: 2672, column: 9, scope: !9756)
!9759 = !DILocation(line: 2672, column: 7, scope: !9704)
!9760 = !DILocation(line: 2673, column: 4, scope: !9756)
!9761 = !DILocation(line: 2674, column: 2, scope: !9704)
!9762 = !DILocation(line: 2675, column: 14, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !9682, file: !3, line: 2674, column: 9)
!9764 = !DILocation(line: 2678, column: 2, scope: !9640)
!9765 = !DILocation(line: 2678, column: 9, scope: !9640)
!9766 = !DILocation(line: 2678, column: 13, scope: !9640)
!9767 = !DILocation(line: 2678, column: 11, scope: !9640)
!9768 = !DILocalVariable(name: "gc", scope: !9660, file: !3, line: 2679, type: !4096)
!9769 = !DILocation(line: 2679, column: 21, scope: !9660)
!9770 = !DILocation(line: 2679, column: 26, scope: !9660)
!9771 = !DILocation(line: 2679, column: 37, scope: !9660)
!9772 = !DILocation(line: 2679, column: 41, scope: !9660)
!9773 = !DILocation(line: 2679, column: 47, scope: !9660)
!9774 = !DILocalVariable(name: "fastpath", scope: !9660, file: !3, line: 2680, type: !9775)
!9775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 1024, elements: !1753)
!9776 = !DILocation(line: 2680, column: 17, scope: !9660)
!9777 = !DILocalVariable(name: "mask", scope: !9660, file: !3, line: 2681, type: !3758)
!9778 = !DILocation(line: 2681, column: 18, scope: !9660)
!9779 = !DILocalVariable(name: "bits", scope: !9660, file: !3, line: 2681, type: !3758)
!9780 = !DILocation(line: 2681, column: 25, scope: !9660)
!9781 = !DILocalVariable(name: "first", scope: !9660, file: !3, line: 2682, type: !224)
!9782 = !DILocation(line: 2682, column: 7, scope: !9660)
!9783 = !DILocalVariable(name: "j", scope: !9660, file: !3, line: 2682, type: !224)
!9784 = !DILocation(line: 2682, column: 14, scope: !9660)
!9785 = !DILocalVariable(name: "ret", scope: !9660, file: !3, line: 2682, type: !224)
!9786 = !DILocation(line: 2682, column: 17, scope: !9660)
!9787 = !DILocation(line: 2684, column: 7, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9660, file: !3, line: 2684, column: 7)
!9789 = !DILocation(line: 2684, column: 7, scope: !9660)
!9790 = !DILocation(line: 2685, column: 11, scope: !9791)
!9791 = distinct !DILexicalBlock(scope: !9788, file: !3, line: 2684, column: 44)
!9792 = !DILocation(line: 2685, column: 9, scope: !9791)
!9793 = !DILocation(line: 2686, column: 3, scope: !9791)
!9794 = !DILocation(line: 2687, column: 29, scope: !9795)
!9795 = distinct !DILexicalBlock(scope: !9788, file: !3, line: 2686, column: 10)
!9796 = !DILocation(line: 2687, column: 27, scope: !9795)
!9797 = !DILocation(line: 2689, column: 9, scope: !9795)
!9798 = !DILocation(line: 2687, column: 11, scope: !9795)
!9799 = !DILocation(line: 2687, column: 9, scope: !9795)
!9800 = !DILocation(line: 2690, column: 9, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9795, file: !3, line: 2690, column: 8)
!9802 = !DILocation(line: 2690, column: 8, scope: !9795)
!9803 = !DILocation(line: 2691, column: 5, scope: !9801)
!9804 = !DILocation(line: 2694, column: 10, scope: !9660)
!9805 = !DILocation(line: 2694, column: 17, scope: !9660)
!9806 = !DILocation(line: 2694, column: 15, scope: !9660)
!9807 = !DILocation(line: 2694, column: 8, scope: !9660)
!9808 = !DILocation(line: 2695, column: 15, scope: !9660)
!9809 = !DILocation(line: 2695, column: 21, scope: !9660)
!9810 = !DILocation(line: 2695, column: 25, scope: !9660)
!9811 = !DILocation(line: 2695, column: 3, scope: !9660)
!9812 = !DILocation(line: 2697, column: 8, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !9660, file: !3, line: 2697, column: 7)
!9814 = !DILocation(line: 2697, column: 7, scope: !9660)
!9815 = !DILocalVariable(name: "__ret_warn_on", scope: !9816, file: !3, line: 2698, type: !224)
!9816 = distinct !DILexicalBlock(scope: !9813, file: !3, line: 2698, column: 4)
!9817 = !DILocation(line: 2698, column: 4, scope: !9816)
!9818 = !DILocation(line: 2698, column: 4, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !9816, file: !3, line: 2698, column: 4)
!9820 = !DILocation(line: 2698, column: 4, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9819, file: !3, line: 2698, column: 4)
!9822 = !DILocation(line: 2698, column: 4, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9821, file: !3, line: 2698, column: 4)
!9824 = !DILocation(line: 2698, column: 4, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9821, file: !3, line: 2698, column: 4)
!9826 = !{i32 -2141392827, i32 -2141392798, i32 -2141392752, i32 -2141392694, i32 -2141392640, i32 -2141392586, i32 -2141392531, i32 -2141392500}
!9827 = !DILocation(line: 2698, column: 4, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9821, file: !3, line: 2698, column: 4)
!9829 = !{i32 -2141392095, i32 -2141392088, i32 -2141392036, i32 -2141392005, i32 -2141391975}
!9830 = !DILocation(line: 2698, column: 4, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9821, file: !3, line: 2698, column: 4)
!9832 = !DILocation(line: 2698, column: 4, scope: !9813)
!9833 = !DILocation(line: 2701, column: 11, scope: !9660)
!9834 = !DILocation(line: 2701, column: 9, scope: !9660)
!9835 = !DILocation(line: 2702, column: 3, scope: !9660)
!9836 = !DILocalVariable(name: "desc", scope: !9837, file: !3, line: 2703, type: !4835)
!9837 = distinct !DILexicalBlock(scope: !9660, file: !3, line: 2702, column: 6)
!9838 = !DILocation(line: 2703, column: 28, scope: !9837)
!9839 = !DILocation(line: 2703, column: 35, scope: !9837)
!9840 = !DILocation(line: 2703, column: 46, scope: !9837)
!9841 = !DILocalVariable(name: "hwgpio", scope: !9837, file: !3, line: 2704, type: !224)
!9842 = !DILocation(line: 2704, column: 8, scope: !9837)
!9843 = !DILocation(line: 2704, column: 34, scope: !9837)
!9844 = !DILocation(line: 2704, column: 17, scope: !9837)
!9845 = !DILocation(line: 2706, column: 14, scope: !9837)
!9846 = !DILocation(line: 2706, column: 22, scope: !9837)
!9847 = !DILocation(line: 2706, column: 4, scope: !9837)
!9848 = !DILocation(line: 2707, column: 5, scope: !9837)
!9849 = !DILocation(line: 2709, column: 8, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9837, file: !3, line: 2709, column: 8)
!9851 = !DILocation(line: 2709, column: 8, scope: !9837)
!9852 = !DILocation(line: 2710, column: 28, scope: !9850)
!9853 = !DILocation(line: 2710, column: 40, scope: !9850)
!9854 = !DILocation(line: 2711, column: 14, scope: !9850)
!9855 = !DILocation(line: 2711, column: 26, scope: !9850)
!9856 = !DILocation(line: 2710, column: 9, scope: !9850)
!9857 = !DILocation(line: 2710, column: 7, scope: !9850)
!9858 = !DILocation(line: 2710, column: 5, scope: !9850)
!9859 = !DILocation(line: 2712, column: 3, scope: !9837)
!9860 = !DILocation(line: 2712, column: 13, scope: !9660)
!9861 = !DILocation(line: 2712, column: 17, scope: !9660)
!9862 = !DILocation(line: 2712, column: 15, scope: !9660)
!9863 = !DILocation(line: 2712, column: 29, scope: !9660)
!9864 = !DILocation(line: 2713, column: 6, scope: !9660)
!9865 = !DILocation(line: 2713, column: 17, scope: !9660)
!9866 = !DILocation(line: 2713, column: 21, scope: !9660)
!9867 = !DILocation(line: 2713, column: 27, scope: !9660)
!9868 = !DILocation(line: 2713, column: 35, scope: !9660)
!9869 = !DILocation(line: 2713, column: 32, scope: !9660)
!9870 = !DILocation(line: 0, scope: !9660)
!9871 = distinct !{!9871, !9835, !9872}
!9872 = !DILocation(line: 2713, column: 38, scope: !9660)
!9873 = !DILocation(line: 2715, column: 32, scope: !9660)
!9874 = !DILocation(line: 2715, column: 36, scope: !9660)
!9875 = !DILocation(line: 2715, column: 42, scope: !9660)
!9876 = !DILocation(line: 2715, column: 9, scope: !9660)
!9877 = !DILocation(line: 2715, column: 7, scope: !9660)
!9878 = !DILocation(line: 2716, column: 7, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9660, file: !3, line: 2716, column: 7)
!9880 = !DILocation(line: 2716, column: 7, scope: !9660)
!9881 = !DILocation(line: 2717, column: 8, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9883, file: !3, line: 2717, column: 8)
!9883 = distinct !DILexicalBlock(scope: !9879, file: !3, line: 2716, column: 12)
!9884 = !DILocation(line: 2717, column: 16, scope: !9882)
!9885 = !DILocation(line: 2717, column: 13, scope: !9882)
!9886 = !DILocation(line: 2717, column: 8, scope: !9883)
!9887 = !DILocation(line: 2718, column: 11, scope: !9882)
!9888 = !DILocation(line: 2718, column: 5, scope: !9882)
!9889 = !DILocation(line: 2719, column: 11, scope: !9883)
!9890 = !DILocation(line: 2719, column: 4, scope: !9883)
!9891 = !DILocation(line: 2722, column: 12, scope: !9659)
!9892 = !DILocation(line: 2722, column: 10, scope: !9659)
!9893 = !DILocation(line: 2722, column: 8, scope: !9659)
!9894 = !DILocation(line: 2722, column: 19, scope: !9658)
!9895 = !DILocation(line: 2722, column: 23, scope: !9658)
!9896 = !DILocation(line: 2722, column: 21, scope: !9658)
!9897 = !DILocation(line: 2722, column: 3, scope: !9659)
!9898 = !DILocalVariable(name: "desc", scope: !9657, file: !3, line: 2723, type: !4835)
!9899 = !DILocation(line: 2723, column: 28, scope: !9657)
!9900 = !DILocation(line: 2723, column: 35, scope: !9657)
!9901 = !DILocation(line: 2723, column: 46, scope: !9657)
!9902 = !DILocalVariable(name: "hwgpio", scope: !9657, file: !3, line: 2724, type: !224)
!9903 = !DILocation(line: 2724, column: 8, scope: !9657)
!9904 = !DILocation(line: 2724, column: 34, scope: !9657)
!9905 = !DILocation(line: 2724, column: 17, scope: !9657)
!9906 = !DILocalVariable(name: "value", scope: !9657, file: !3, line: 2725, type: !224)
!9907 = !DILocation(line: 2725, column: 8, scope: !9657)
!9908 = !DILocation(line: 2725, column: 25, scope: !9657)
!9909 = !DILocation(line: 2725, column: 33, scope: !9657)
!9910 = !DILocation(line: 2725, column: 16, scope: !9657)
!9911 = !DILocation(line: 2727, column: 9, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9657, file: !3, line: 2727, column: 8)
!9913 = !DILocation(line: 2727, column: 13, scope: !9912)
!9914 = !DILocation(line: 2727, column: 43, scope: !9912)
!9915 = !DILocation(line: 2727, column: 49, scope: !9912)
!9916 = !DILocation(line: 2727, column: 16, scope: !9912)
!9917 = !DILocation(line: 2727, column: 8, scope: !9657)
!9918 = !DILocation(line: 2728, column: 14, scope: !9912)
!9919 = !DILocation(line: 2728, column: 13, scope: !9912)
!9920 = !DILocation(line: 2728, column: 11, scope: !9912)
!9921 = !DILocation(line: 2728, column: 5, scope: !9912)
!9922 = !DILocation(line: 2729, column: 17, scope: !9657)
!9923 = !DILocation(line: 2729, column: 20, scope: !9657)
!9924 = !DILocation(line: 2729, column: 34, scope: !9657)
!9925 = !DILocation(line: 247, column: 6, scope: !9926, inlinedAt: !9656)
!9926 = distinct !DILexicalBlock(scope: !9654, file: !4871, line: 247, column: 6)
!9927 = !DILocation(line: 247, column: 6, scope: !9654, inlinedAt: !9656)
!9928 = !DILocation(line: 248, column: 13, scope: !9926, inlinedAt: !9656)
!9929 = !DILocation(line: 248, column: 17, scope: !9926, inlinedAt: !9656)
!9930 = !DILocation(line: 248, column: 3, scope: !9926, inlinedAt: !9656)
!9931 = !DILocation(line: 250, column: 15, scope: !9926, inlinedAt: !9656)
!9932 = !DILocation(line: 250, column: 19, scope: !9926, inlinedAt: !9656)
!9933 = !DILocation(line: 250, column: 3, scope: !9926, inlinedAt: !9656)
!9934 = !DILocation(line: 2730, column: 34, scope: !9657)
!9935 = !DILocation(line: 2730, column: 21, scope: !9657)
!9936 = !DILocation(line: 2730, column: 44, scope: !9657)
!9937 = !DILocation(line: 2730, column: 4, scope: !9657)
!9938 = !DILocation(line: 2731, column: 5, scope: !9657)
!9939 = !DILocation(line: 2733, column: 8, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9657, file: !3, line: 2733, column: 8)
!9941 = !DILocation(line: 2733, column: 8, scope: !9657)
!9942 = !DILocation(line: 2734, column: 28, scope: !9940)
!9943 = !DILocation(line: 2734, column: 40, scope: !9940)
!9944 = !DILocation(line: 2734, column: 50, scope: !9940)
!9945 = !DILocation(line: 2735, column: 14, scope: !9940)
!9946 = !DILocation(line: 2734, column: 9, scope: !9940)
!9947 = !DILocation(line: 2734, column: 7, scope: !9940)
!9948 = !DILocation(line: 2734, column: 5, scope: !9940)
!9949 = !DILocation(line: 2722, column: 3, scope: !9658)
!9950 = distinct !{!9950, !9897, !9951}
!9951 = !DILocation(line: 2736, column: 3, scope: !9659)
!9952 = !DILocation(line: 2738, column: 7, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9660, file: !3, line: 2738, column: 7)
!9954 = !DILocation(line: 2738, column: 15, scope: !9953)
!9955 = !DILocation(line: 2738, column: 12, scope: !9953)
!9956 = !DILocation(line: 2738, column: 7, scope: !9660)
!9957 = !DILocation(line: 2739, column: 10, scope: !9953)
!9958 = !DILocation(line: 2739, column: 4, scope: !9953)
!9959 = distinct !{!9959, !9764, !9960}
!9960 = !DILocation(line: 2740, column: 2, scope: !9640)
!9961 = !DILocation(line: 2741, column: 2, scope: !9640)
!9962 = !DILocation(line: 2742, column: 1, scope: !9640)
!9963 = distinct !DISubprogram(name: "gpio_chip_get_multiple", scope: !3, file: !3, line: 2623, type: !4121, scopeLine: 2625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!9964 = !DILocation(line: 244, column: 47, scope: !9654, inlinedAt: !9965)
!9965 = distinct !DILocation(line: 2635, column: 4, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9967, file: !3, line: 2631, column: 40)
!9967 = distinct !DILexicalBlock(scope: !9968, file: !3, line: 2631, column: 3)
!9968 = distinct !DILexicalBlock(scope: !9969, file: !3, line: 2631, column: 3)
!9969 = distinct !DILexicalBlock(scope: !9970, file: !3, line: 2628, column: 22)
!9970 = distinct !DILexicalBlock(scope: !9971, file: !3, line: 2628, column: 13)
!9971 = distinct !DILexicalBlock(scope: !9963, file: !3, line: 2626, column: 6)
!9972 = !DILocation(line: 244, column: 75, scope: !9654, inlinedAt: !9965)
!9973 = !DILocation(line: 245, column: 12, scope: !9654, inlinedAt: !9965)
!9974 = !DILocalVariable(name: "gc", arg: 1, scope: !9963, file: !3, line: 2623, type: !4096)
!9975 = !DILocation(line: 2623, column: 53, scope: !9963)
!9976 = !DILocalVariable(name: "mask", arg: 2, scope: !9963, file: !3, line: 2624, type: !3758)
!9977 = !DILocation(line: 2624, column: 22, scope: !9963)
!9978 = !DILocalVariable(name: "bits", arg: 3, scope: !9963, file: !3, line: 2624, type: !3758)
!9979 = !DILocation(line: 2624, column: 43, scope: !9963)
!9980 = !DILocation(line: 2626, column: 6, scope: !9971)
!9981 = !DILocation(line: 2626, column: 10, scope: !9971)
!9982 = !DILocation(line: 2626, column: 6, scope: !9963)
!9983 = !DILocation(line: 2627, column: 10, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9971, file: !3, line: 2626, column: 24)
!9985 = !DILocation(line: 2627, column: 14, scope: !9984)
!9986 = !DILocation(line: 2627, column: 27, scope: !9984)
!9987 = !DILocation(line: 2627, column: 31, scope: !9984)
!9988 = !DILocation(line: 2627, column: 37, scope: !9984)
!9989 = !DILocation(line: 2627, column: 3, scope: !9984)
!9990 = !DILocation(line: 2628, column: 13, scope: !9970)
!9991 = !DILocation(line: 2628, column: 17, scope: !9970)
!9992 = !DILocation(line: 2628, column: 13, scope: !9971)
!9993 = !DILocalVariable(name: "i", scope: !9969, file: !3, line: 2629, type: !224)
!9994 = !DILocation(line: 2629, column: 7, scope: !9969)
!9995 = !DILocalVariable(name: "value", scope: !9969, file: !3, line: 2629, type: !224)
!9996 = !DILocation(line: 2629, column: 10, scope: !9969)
!9997 = !DILocation(line: 2631, column: 3, scope: !9968)
!9998 = !DILocation(line: 2631, column: 3, scope: !9967)
!9999 = !DILocation(line: 2632, column: 12, scope: !9966)
!10000 = !DILocation(line: 2632, column: 16, scope: !9966)
!10001 = !DILocation(line: 2632, column: 20, scope: !9966)
!10002 = !DILocation(line: 2632, column: 24, scope: !9966)
!10003 = !DILocation(line: 2632, column: 10, scope: !9966)
!10004 = !DILocation(line: 2633, column: 8, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 2633, column: 8)
!10006 = !DILocation(line: 2633, column: 14, scope: !10005)
!10007 = !DILocation(line: 2633, column: 8, scope: !9966)
!10008 = !DILocation(line: 2634, column: 12, scope: !10005)
!10009 = !DILocation(line: 2634, column: 5, scope: !10005)
!10010 = !DILocation(line: 2635, column: 17, scope: !9966)
!10011 = !DILocation(line: 2635, column: 20, scope: !9966)
!10012 = !DILocation(line: 2635, column: 26, scope: !9966)
!10013 = !DILocation(line: 247, column: 6, scope: !9926, inlinedAt: !9965)
!10014 = !DILocation(line: 247, column: 6, scope: !9654, inlinedAt: !9965)
!10015 = !DILocation(line: 248, column: 13, scope: !9926, inlinedAt: !9965)
!10016 = !DILocation(line: 248, column: 17, scope: !9926, inlinedAt: !9965)
!10017 = !DILocation(line: 248, column: 3, scope: !9926, inlinedAt: !9965)
!10018 = !DILocation(line: 250, column: 15, scope: !9926, inlinedAt: !9965)
!10019 = !DILocation(line: 250, column: 19, scope: !9926, inlinedAt: !9965)
!10020 = !DILocation(line: 250, column: 3, scope: !9926, inlinedAt: !9965)
!10021 = !DILocation(line: 2636, column: 3, scope: !9966)
!10022 = distinct !{!10022, !9997, !10023}
!10023 = !DILocation(line: 2636, column: 3, scope: !9968)
!10024 = !DILocation(line: 2637, column: 3, scope: !9969)
!10025 = !DILocation(line: 2639, column: 2, scope: !9963)
!10026 = !DILocation(line: 2640, column: 1, scope: !9963)
!10027 = distinct !DISubprogram(name: "bitmap_empty", scope: !10028, file: !10028, line: 382, type: !10029, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!10028 = !DIFile(filename: "./include/linux/bitmap.h", directory: "/home/lizy2001/genbc/linux")
!10029 = !DISubroutineType(types: !10030)
!10030 = !{!224, !10031, !7}
!10031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10032, size: 64)
!10032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !342)
!10033 = !DILocalVariable(name: "src", arg: 1, scope: !10027, file: !10028, line: 382, type: !10031)
!10034 = !DILocation(line: 382, column: 53, scope: !10027)
!10035 = !DILocalVariable(name: "nbits", arg: 2, scope: !10027, file: !10028, line: 382, type: !7)
!10036 = !DILocation(line: 382, column: 67, scope: !10027)
!10037 = !DILocation(line: 384, column: 6, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10027, file: !10028, line: 384, column: 6)
!10039 = !DILocation(line: 384, column: 6, scope: !10027)
!10040 = !DILocation(line: 385, column: 14, scope: !10038)
!10041 = !DILocation(line: 385, column: 13, scope: !10038)
!10042 = !DILocation(line: 385, column: 20, scope: !10038)
!10043 = !DILocation(line: 385, column: 18, scope: !10038)
!10044 = !DILocation(line: 385, column: 10, scope: !10038)
!10045 = !DILocation(line: 385, column: 3, scope: !10038)
!10046 = !DILocation(line: 387, column: 24, scope: !10027)
!10047 = !DILocation(line: 387, column: 29, scope: !10027)
!10048 = !DILocation(line: 387, column: 9, scope: !10027)
!10049 = !DILocation(line: 387, column: 39, scope: !10027)
!10050 = !DILocation(line: 387, column: 36, scope: !10027)
!10051 = !DILocation(line: 387, column: 2, scope: !10027)
!10052 = !DILocation(line: 388, column: 1, scope: !10027)
!10053 = distinct !DISubprogram(name: "bitmap_xor", scope: !10028, file: !10028, line: 300, type: !10054, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!10054 = !DISubroutineType(types: !10055)
!10055 = !{null, !3758, !10031, !10031, !7}
!10056 = !DILocalVariable(name: "dst", arg: 1, scope: !10053, file: !10028, line: 300, type: !3758)
!10057 = !DILocation(line: 300, column: 46, scope: !10053)
!10058 = !DILocalVariable(name: "src1", arg: 2, scope: !10053, file: !10028, line: 300, type: !10031)
!10059 = !DILocation(line: 300, column: 72, scope: !10053)
!10060 = !DILocalVariable(name: "src2", arg: 3, scope: !10053, file: !10028, line: 301, type: !10031)
!10061 = !DILocation(line: 301, column: 25, scope: !10053)
!10062 = !DILocalVariable(name: "nbits", arg: 4, scope: !10053, file: !10028, line: 301, type: !7)
!10063 = !DILocation(line: 301, column: 44, scope: !10053)
!10064 = !DILocation(line: 303, column: 6, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10053, file: !10028, line: 303, column: 6)
!10066 = !DILocation(line: 303, column: 6, scope: !10053)
!10067 = !DILocation(line: 304, column: 11, scope: !10065)
!10068 = !DILocation(line: 304, column: 10, scope: !10065)
!10069 = !DILocation(line: 304, column: 19, scope: !10065)
!10070 = !DILocation(line: 304, column: 18, scope: !10065)
!10071 = !DILocation(line: 304, column: 16, scope: !10065)
!10072 = !DILocation(line: 304, column: 4, scope: !10065)
!10073 = !DILocation(line: 304, column: 8, scope: !10065)
!10074 = !DILocation(line: 304, column: 3, scope: !10065)
!10075 = !DILocation(line: 306, column: 16, scope: !10065)
!10076 = !DILocation(line: 306, column: 21, scope: !10065)
!10077 = !DILocation(line: 306, column: 27, scope: !10065)
!10078 = !DILocation(line: 306, column: 33, scope: !10065)
!10079 = !DILocation(line: 306, column: 3, scope: !10065)
!10080 = !DILocation(line: 307, column: 1, scope: !10053)
!10081 = distinct !DISubprogram(name: "kmalloc_array", scope: !201, file: !201, line: 584, type: !5857, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!10082 = !DILocation(line: 445, column: 72, scope: !5564, inlinedAt: !10083)
!10083 = distinct !DILocation(line: 552, column: 10, scope: !5569, inlinedAt: !10084)
!10084 = distinct !DILocation(line: 591, column: 10, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10081, file: !201, line: 590, column: 6)
!10086 = !DILocation(line: 446, column: 9, scope: !5564, inlinedAt: !10083)
!10087 = !DILocation(line: 446, column: 23, scope: !5564, inlinedAt: !10083)
!10088 = !DILocation(line: 448, column: 8, scope: !5564, inlinedAt: !10083)
!10089 = !DILocation(line: 318, column: 67, scope: !5580, inlinedAt: !10090)
!10090 = distinct !DILocation(line: 553, column: 20, scope: !5569, inlinedAt: !10084)
!10091 = !DILocation(line: 346, column: 58, scope: !5586, inlinedAt: !10092)
!10092 = distinct !DILocation(line: 547, column: 11, scope: !5569, inlinedAt: !10084)
!10093 = !DILocation(line: 472, column: 28, scope: !5592, inlinedAt: !10094)
!10094 = distinct !DILocation(line: 481, column: 9, scope: !5597, inlinedAt: !10095)
!10095 = distinct !DILocation(line: 545, column: 11, scope: !5599, inlinedAt: !10084)
!10096 = !DILocation(line: 472, column: 40, scope: !5592, inlinedAt: !10094)
!10097 = !DILocation(line: 472, column: 60, scope: !5592, inlinedAt: !10094)
!10098 = !DILocation(line: 478, column: 51, scope: !5597, inlinedAt: !10095)
!10099 = !DILocation(line: 478, column: 63, scope: !5597, inlinedAt: !10095)
!10100 = !DILocation(line: 480, column: 15, scope: !5597, inlinedAt: !10095)
!10101 = !DILocation(line: 538, column: 45, scope: !5571, inlinedAt: !10084)
!10102 = !DILocation(line: 538, column: 57, scope: !5571, inlinedAt: !10084)
!10103 = !DILocation(line: 542, column: 16, scope: !5569, inlinedAt: !10084)
!10104 = !DILocalVariable(name: "n", arg: 1, scope: !10081, file: !201, line: 584, type: !339)
!10105 = !DILocation(line: 584, column: 42, scope: !10081)
!10106 = !DILocalVariable(name: "size", arg: 2, scope: !10081, file: !201, line: 584, type: !339)
!10107 = !DILocation(line: 584, column: 52, scope: !10081)
!10108 = !DILocalVariable(name: "flags", arg: 3, scope: !10081, file: !201, line: 584, type: !814)
!10109 = !DILocation(line: 584, column: 64, scope: !10081)
!10110 = !DILocalVariable(name: "bytes", scope: !10081, file: !201, line: 586, type: !339)
!10111 = !DILocation(line: 586, column: 9, scope: !10081)
!10112 = !DILocalVariable(name: "__a", scope: !10113, file: !201, line: 588, type: !339)
!10113 = distinct !DILexicalBlock(scope: !10114, file: !201, line: 588, column: 6)
!10114 = distinct !DILexicalBlock(scope: !10081, file: !201, line: 588, column: 6)
!10115 = !DILocation(line: 588, column: 6, scope: !10113)
!10116 = !DILocalVariable(name: "__b", scope: !10113, file: !201, line: 588, type: !339)
!10117 = !DILocalVariable(name: "__d", scope: !10113, file: !201, line: 588, type: !10118)
!10118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!10119 = !DILocation(line: 588, column: 6, scope: !10114)
!10120 = !DILocation(line: 588, column: 6, scope: !10081)
!10121 = !DILocation(line: 589, column: 3, scope: !10114)
!10122 = !DILocation(line: 590, column: 27, scope: !10085)
!10123 = !DILocation(line: 590, column: 6, scope: !10085)
!10124 = !DILocation(line: 590, column: 30, scope: !10085)
!10125 = !DILocation(line: 590, column: 54, scope: !10085)
!10126 = !DILocation(line: 590, column: 33, scope: !10085)
!10127 = !DILocation(line: 590, column: 6, scope: !10081)
!10128 = !DILocation(line: 591, column: 18, scope: !10085)
!10129 = !DILocation(line: 591, column: 25, scope: !10085)
!10130 = !DILocation(line: 540, column: 27, scope: !5570, inlinedAt: !10084)
!10131 = !DILocation(line: 540, column: 6, scope: !5570, inlinedAt: !10084)
!10132 = !DILocation(line: 540, column: 6, scope: !5571, inlinedAt: !10084)
!10133 = !DILocation(line: 544, column: 7, scope: !5599, inlinedAt: !10084)
!10134 = !DILocation(line: 544, column: 12, scope: !5599, inlinedAt: !10084)
!10135 = !DILocation(line: 544, column: 7, scope: !5569, inlinedAt: !10084)
!10136 = !DILocation(line: 545, column: 25, scope: !5599, inlinedAt: !10084)
!10137 = !DILocation(line: 545, column: 31, scope: !5599, inlinedAt: !10084)
!10138 = !DILocation(line: 480, column: 33, scope: !5597, inlinedAt: !10095)
!10139 = !DILocation(line: 480, column: 23, scope: !5597, inlinedAt: !10095)
!10140 = !DILocation(line: 481, column: 29, scope: !5597, inlinedAt: !10095)
!10141 = !DILocation(line: 481, column: 35, scope: !5597, inlinedAt: !10095)
!10142 = !DILocation(line: 481, column: 42, scope: !5597, inlinedAt: !10095)
!10143 = !DILocation(line: 474, column: 23, scope: !5592, inlinedAt: !10094)
!10144 = !DILocation(line: 474, column: 29, scope: !5592, inlinedAt: !10094)
!10145 = !DILocation(line: 474, column: 36, scope: !5592, inlinedAt: !10094)
!10146 = !DILocation(line: 474, column: 9, scope: !5592, inlinedAt: !10094)
!10147 = !DILocation(line: 545, column: 4, scope: !5599, inlinedAt: !10084)
!10148 = !DILocation(line: 547, column: 25, scope: !5569, inlinedAt: !10084)
!10149 = !DILocation(line: 348, column: 7, scope: !5643, inlinedAt: !10092)
!10150 = !DILocation(line: 348, column: 6, scope: !5586, inlinedAt: !10092)
!10151 = !DILocation(line: 349, column: 3, scope: !5643, inlinedAt: !10092)
!10152 = !DILocation(line: 351, column: 6, scope: !5647, inlinedAt: !10092)
!10153 = !DILocation(line: 351, column: 11, scope: !5647, inlinedAt: !10092)
!10154 = !DILocation(line: 351, column: 6, scope: !5586, inlinedAt: !10092)
!10155 = !DILocation(line: 352, column: 3, scope: !5647, inlinedAt: !10092)
!10156 = !DILocation(line: 354, column: 32, scope: !5652, inlinedAt: !10092)
!10157 = !DILocation(line: 354, column: 37, scope: !5652, inlinedAt: !10092)
!10158 = !DILocation(line: 354, column: 42, scope: !5652, inlinedAt: !10092)
!10159 = !DILocation(line: 354, column: 45, scope: !5652, inlinedAt: !10092)
!10160 = !DILocation(line: 354, column: 50, scope: !5652, inlinedAt: !10092)
!10161 = !DILocation(line: 354, column: 6, scope: !5586, inlinedAt: !10092)
!10162 = !DILocation(line: 355, column: 3, scope: !5652, inlinedAt: !10092)
!10163 = !DILocation(line: 356, column: 32, scope: !5660, inlinedAt: !10092)
!10164 = !DILocation(line: 356, column: 37, scope: !5660, inlinedAt: !10092)
!10165 = !DILocation(line: 356, column: 43, scope: !5660, inlinedAt: !10092)
!10166 = !DILocation(line: 356, column: 46, scope: !5660, inlinedAt: !10092)
!10167 = !DILocation(line: 356, column: 51, scope: !5660, inlinedAt: !10092)
!10168 = !DILocation(line: 356, column: 6, scope: !5586, inlinedAt: !10092)
!10169 = !DILocation(line: 357, column: 3, scope: !5660, inlinedAt: !10092)
!10170 = !DILocation(line: 358, column: 6, scope: !5668, inlinedAt: !10092)
!10171 = !DILocation(line: 358, column: 11, scope: !5668, inlinedAt: !10092)
!10172 = !DILocation(line: 358, column: 6, scope: !5586, inlinedAt: !10092)
!10173 = !DILocation(line: 358, column: 26, scope: !5668, inlinedAt: !10092)
!10174 = !DILocation(line: 359, column: 6, scope: !5673, inlinedAt: !10092)
!10175 = !DILocation(line: 359, column: 11, scope: !5673, inlinedAt: !10092)
!10176 = !DILocation(line: 359, column: 6, scope: !5586, inlinedAt: !10092)
!10177 = !DILocation(line: 359, column: 26, scope: !5673, inlinedAt: !10092)
!10178 = !DILocation(line: 360, column: 6, scope: !5678, inlinedAt: !10092)
!10179 = !DILocation(line: 360, column: 11, scope: !5678, inlinedAt: !10092)
!10180 = !DILocation(line: 360, column: 6, scope: !5586, inlinedAt: !10092)
!10181 = !DILocation(line: 360, column: 26, scope: !5678, inlinedAt: !10092)
!10182 = !DILocation(line: 361, column: 6, scope: !5683, inlinedAt: !10092)
!10183 = !DILocation(line: 361, column: 11, scope: !5683, inlinedAt: !10092)
!10184 = !DILocation(line: 361, column: 6, scope: !5586, inlinedAt: !10092)
!10185 = !DILocation(line: 361, column: 26, scope: !5683, inlinedAt: !10092)
!10186 = !DILocation(line: 362, column: 6, scope: !5688, inlinedAt: !10092)
!10187 = !DILocation(line: 362, column: 11, scope: !5688, inlinedAt: !10092)
!10188 = !DILocation(line: 362, column: 6, scope: !5586, inlinedAt: !10092)
!10189 = !DILocation(line: 362, column: 26, scope: !5688, inlinedAt: !10092)
!10190 = !DILocation(line: 363, column: 6, scope: !5693, inlinedAt: !10092)
!10191 = !DILocation(line: 363, column: 11, scope: !5693, inlinedAt: !10092)
!10192 = !DILocation(line: 363, column: 6, scope: !5586, inlinedAt: !10092)
!10193 = !DILocation(line: 363, column: 26, scope: !5693, inlinedAt: !10092)
!10194 = !DILocation(line: 364, column: 6, scope: !5698, inlinedAt: !10092)
!10195 = !DILocation(line: 364, column: 11, scope: !5698, inlinedAt: !10092)
!10196 = !DILocation(line: 364, column: 6, scope: !5586, inlinedAt: !10092)
!10197 = !DILocation(line: 364, column: 26, scope: !5698, inlinedAt: !10092)
!10198 = !DILocation(line: 365, column: 6, scope: !5703, inlinedAt: !10092)
!10199 = !DILocation(line: 365, column: 11, scope: !5703, inlinedAt: !10092)
!10200 = !DILocation(line: 365, column: 6, scope: !5586, inlinedAt: !10092)
!10201 = !DILocation(line: 365, column: 26, scope: !5703, inlinedAt: !10092)
!10202 = !DILocation(line: 366, column: 6, scope: !5708, inlinedAt: !10092)
!10203 = !DILocation(line: 366, column: 11, scope: !5708, inlinedAt: !10092)
!10204 = !DILocation(line: 366, column: 6, scope: !5586, inlinedAt: !10092)
!10205 = !DILocation(line: 366, column: 26, scope: !5708, inlinedAt: !10092)
!10206 = !DILocation(line: 367, column: 6, scope: !5713, inlinedAt: !10092)
!10207 = !DILocation(line: 367, column: 11, scope: !5713, inlinedAt: !10092)
!10208 = !DILocation(line: 367, column: 6, scope: !5586, inlinedAt: !10092)
!10209 = !DILocation(line: 367, column: 26, scope: !5713, inlinedAt: !10092)
!10210 = !DILocation(line: 368, column: 6, scope: !5718, inlinedAt: !10092)
!10211 = !DILocation(line: 368, column: 11, scope: !5718, inlinedAt: !10092)
!10212 = !DILocation(line: 368, column: 6, scope: !5586, inlinedAt: !10092)
!10213 = !DILocation(line: 368, column: 26, scope: !5718, inlinedAt: !10092)
!10214 = !DILocation(line: 369, column: 6, scope: !5723, inlinedAt: !10092)
!10215 = !DILocation(line: 369, column: 11, scope: !5723, inlinedAt: !10092)
!10216 = !DILocation(line: 369, column: 6, scope: !5586, inlinedAt: !10092)
!10217 = !DILocation(line: 369, column: 26, scope: !5723, inlinedAt: !10092)
!10218 = !DILocation(line: 370, column: 6, scope: !5728, inlinedAt: !10092)
!10219 = !DILocation(line: 370, column: 11, scope: !5728, inlinedAt: !10092)
!10220 = !DILocation(line: 370, column: 6, scope: !5586, inlinedAt: !10092)
!10221 = !DILocation(line: 370, column: 26, scope: !5728, inlinedAt: !10092)
!10222 = !DILocation(line: 371, column: 6, scope: !5733, inlinedAt: !10092)
!10223 = !DILocation(line: 371, column: 11, scope: !5733, inlinedAt: !10092)
!10224 = !DILocation(line: 371, column: 6, scope: !5586, inlinedAt: !10092)
!10225 = !DILocation(line: 371, column: 26, scope: !5733, inlinedAt: !10092)
!10226 = !DILocation(line: 372, column: 6, scope: !5738, inlinedAt: !10092)
!10227 = !DILocation(line: 372, column: 11, scope: !5738, inlinedAt: !10092)
!10228 = !DILocation(line: 372, column: 6, scope: !5586, inlinedAt: !10092)
!10229 = !DILocation(line: 372, column: 26, scope: !5738, inlinedAt: !10092)
!10230 = !DILocation(line: 373, column: 6, scope: !5743, inlinedAt: !10092)
!10231 = !DILocation(line: 373, column: 11, scope: !5743, inlinedAt: !10092)
!10232 = !DILocation(line: 373, column: 6, scope: !5586, inlinedAt: !10092)
!10233 = !DILocation(line: 373, column: 26, scope: !5743, inlinedAt: !10092)
!10234 = !DILocation(line: 374, column: 6, scope: !5748, inlinedAt: !10092)
!10235 = !DILocation(line: 374, column: 11, scope: !5748, inlinedAt: !10092)
!10236 = !DILocation(line: 374, column: 6, scope: !5586, inlinedAt: !10092)
!10237 = !DILocation(line: 374, column: 26, scope: !5748, inlinedAt: !10092)
!10238 = !DILocation(line: 375, column: 6, scope: !5753, inlinedAt: !10092)
!10239 = !DILocation(line: 375, column: 11, scope: !5753, inlinedAt: !10092)
!10240 = !DILocation(line: 375, column: 6, scope: !5586, inlinedAt: !10092)
!10241 = !DILocation(line: 375, column: 27, scope: !5753, inlinedAt: !10092)
!10242 = !DILocation(line: 376, column: 6, scope: !5758, inlinedAt: !10092)
!10243 = !DILocation(line: 376, column: 11, scope: !5758, inlinedAt: !10092)
!10244 = !DILocation(line: 376, column: 6, scope: !5586, inlinedAt: !10092)
!10245 = !DILocation(line: 376, column: 32, scope: !5758, inlinedAt: !10092)
!10246 = !DILocation(line: 377, column: 6, scope: !5763, inlinedAt: !10092)
!10247 = !DILocation(line: 377, column: 11, scope: !5763, inlinedAt: !10092)
!10248 = !DILocation(line: 377, column: 6, scope: !5586, inlinedAt: !10092)
!10249 = !DILocation(line: 377, column: 32, scope: !5763, inlinedAt: !10092)
!10250 = !DILocation(line: 378, column: 6, scope: !5768, inlinedAt: !10092)
!10251 = !DILocation(line: 378, column: 11, scope: !5768, inlinedAt: !10092)
!10252 = !DILocation(line: 378, column: 6, scope: !5586, inlinedAt: !10092)
!10253 = !DILocation(line: 378, column: 32, scope: !5768, inlinedAt: !10092)
!10254 = !DILocation(line: 379, column: 6, scope: !5773, inlinedAt: !10092)
!10255 = !DILocation(line: 379, column: 11, scope: !5773, inlinedAt: !10092)
!10256 = !DILocation(line: 379, column: 6, scope: !5586, inlinedAt: !10092)
!10257 = !DILocation(line: 379, column: 33, scope: !5773, inlinedAt: !10092)
!10258 = !DILocation(line: 380, column: 6, scope: !5778, inlinedAt: !10092)
!10259 = !DILocation(line: 380, column: 11, scope: !5778, inlinedAt: !10092)
!10260 = !DILocation(line: 380, column: 6, scope: !5586, inlinedAt: !10092)
!10261 = !DILocation(line: 380, column: 33, scope: !5778, inlinedAt: !10092)
!10262 = !DILocation(line: 381, column: 6, scope: !5783, inlinedAt: !10092)
!10263 = !DILocation(line: 381, column: 11, scope: !5783, inlinedAt: !10092)
!10264 = !DILocation(line: 381, column: 6, scope: !5586, inlinedAt: !10092)
!10265 = !DILocation(line: 381, column: 33, scope: !5783, inlinedAt: !10092)
!10266 = !DILocation(line: 382, column: 2, scope: !5788, inlinedAt: !10092)
!10267 = !DILocation(line: 382, column: 2, scope: !5792, inlinedAt: !10092)
!10268 = !DILocation(line: 382, column: 2, scope: !5793, inlinedAt: !10092)
!10269 = !DILocation(line: 386, column: 1, scope: !5586, inlinedAt: !10092)
!10270 = !DILocation(line: 547, column: 9, scope: !5569, inlinedAt: !10084)
!10271 = !DILocation(line: 549, column: 8, scope: !5799, inlinedAt: !10084)
!10272 = !DILocation(line: 549, column: 7, scope: !5569, inlinedAt: !10084)
!10273 = !DILocation(line: 550, column: 4, scope: !5799, inlinedAt: !10084)
!10274 = !DILocation(line: 553, column: 33, scope: !5569, inlinedAt: !10084)
!10275 = !DILocation(line: 325, column: 6, scope: !5804, inlinedAt: !10090)
!10276 = !DILocation(line: 325, column: 6, scope: !5580, inlinedAt: !10090)
!10277 = !DILocation(line: 326, column: 3, scope: !5804, inlinedAt: !10090)
!10278 = !DILocation(line: 332, column: 9, scope: !5580, inlinedAt: !10090)
!10279 = !DILocation(line: 332, column: 15, scope: !5580, inlinedAt: !10090)
!10280 = !DILocation(line: 332, column: 2, scope: !5580, inlinedAt: !10090)
!10281 = !DILocation(line: 336, column: 1, scope: !5580, inlinedAt: !10090)
!10282 = !DILocation(line: 553, column: 5, scope: !5569, inlinedAt: !10084)
!10283 = !DILocation(line: 553, column: 41, scope: !5569, inlinedAt: !10084)
!10284 = !DILocation(line: 554, column: 5, scope: !5569, inlinedAt: !10084)
!10285 = !DILocation(line: 554, column: 12, scope: !5569, inlinedAt: !10084)
!10286 = !DILocation(line: 448, column: 31, scope: !5564, inlinedAt: !10083)
!10287 = !DILocation(line: 448, column: 34, scope: !5564, inlinedAt: !10083)
!10288 = !DILocation(line: 448, column: 14, scope: !5564, inlinedAt: !10083)
!10289 = !DILocation(line: 450, column: 22, scope: !5564, inlinedAt: !10083)
!10290 = !DILocation(line: 450, column: 25, scope: !5564, inlinedAt: !10083)
!10291 = !DILocation(line: 450, column: 30, scope: !5564, inlinedAt: !10083)
!10292 = !DILocation(line: 450, column: 36, scope: !5564, inlinedAt: !10083)
!10293 = !DILocation(line: 450, column: 8, scope: !5564, inlinedAt: !10083)
!10294 = !DILocation(line: 450, column: 6, scope: !5564, inlinedAt: !10083)
!10295 = !DILocation(line: 451, column: 9, scope: !5564, inlinedAt: !10083)
!10296 = !DILocation(line: 552, column: 3, scope: !5569, inlinedAt: !10084)
!10297 = !DILocation(line: 557, column: 19, scope: !5571, inlinedAt: !10084)
!10298 = !DILocation(line: 557, column: 25, scope: !5571, inlinedAt: !10084)
!10299 = !DILocation(line: 557, column: 9, scope: !5571, inlinedAt: !10084)
!10300 = !DILocation(line: 557, column: 2, scope: !5571, inlinedAt: !10084)
!10301 = !DILocation(line: 558, column: 1, scope: !5571, inlinedAt: !10084)
!10302 = !DILocation(line: 591, column: 3, scope: !10085)
!10303 = !DILocation(line: 592, column: 19, scope: !10081)
!10304 = !DILocation(line: 592, column: 26, scope: !10081)
!10305 = !DILocation(line: 592, column: 9, scope: !10081)
!10306 = !DILocation(line: 592, column: 2, scope: !10081)
!10307 = !DILocation(line: 593, column: 1, scope: !10081)
!10308 = distinct !DISubprogram(name: "bitmap_zero", scope: !10028, file: !10028, line: 235, type: !10309, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!10309 = !DISubroutineType(types: !10310)
!10310 = !{null, !3758, !7}
!10311 = !DILocalVariable(name: "dst", arg: 1, scope: !10308, file: !10028, line: 235, type: !3758)
!10312 = !DILocation(line: 235, column: 47, scope: !10308)
!10313 = !DILocalVariable(name: "nbits", arg: 2, scope: !10308, file: !10028, line: 235, type: !7)
!10314 = !DILocation(line: 235, column: 65, scope: !10308)
!10315 = !DILocalVariable(name: "len", scope: !10308, file: !10028, line: 237, type: !7)
!10316 = !DILocation(line: 237, column: 15, scope: !10308)
!10317 = !DILocation(line: 237, column: 21, scope: !10308)
!10318 = !DILocation(line: 237, column: 42, scope: !10308)
!10319 = !DILocation(line: 238, column: 9, scope: !10308)
!10320 = !DILocation(line: 238, column: 2, scope: !10308)
!10321 = !DILocation(line: 238, column: 17, scope: !10308)
!10322 = !DILocation(line: 239, column: 1, scope: !10308)
!10323 = distinct !DISubprogram(name: "__set_bit", scope: !4954, file: !4954, line: 25, type: !9064, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!10324 = !DILocalVariable(name: "nr", arg: 1, scope: !10325, file: !4961, line: 66, type: !327)
!10325 = distinct !DISubprogram(name: "arch___set_bit", scope: !4961, file: !4961, line: 66, type: !9064, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!10326 = !DILocation(line: 66, column: 21, scope: !10325, inlinedAt: !10327)
!10327 = distinct !DILocation(line: 28, column: 2, scope: !10323)
!10328 = !DILocalVariable(name: "addr", arg: 2, scope: !10325, file: !4961, line: 66, type: !4874)
!10329 = !DILocation(line: 66, column: 49, scope: !10325, inlinedAt: !10327)
!10330 = !DILocalVariable(name: "v", arg: 1, scope: !10331, file: !4976, line: 39, type: !4979)
!10331 = distinct !DISubprogram(name: "instrument_write", scope: !4976, file: !4976, line: 39, type: !4977, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!10332 = !DILocation(line: 39, column: 67, scope: !10331, inlinedAt: !10333)
!10333 = distinct !DILocation(line: 27, column: 2, scope: !10323)
!10334 = !DILocalVariable(name: "size", arg: 2, scope: !10331, file: !4976, line: 39, type: !339)
!10335 = !DILocation(line: 39, column: 77, scope: !10331, inlinedAt: !10333)
!10336 = !DILocalVariable(name: "nr", arg: 1, scope: !10323, file: !4954, line: 25, type: !327)
!10337 = !DILocation(line: 25, column: 35, scope: !10323)
!10338 = !DILocalVariable(name: "addr", arg: 2, scope: !10323, file: !4954, line: 25, type: !4874)
!10339 = !DILocation(line: 25, column: 63, scope: !10323)
!10340 = !DILocation(line: 27, column: 19, scope: !10323)
!10341 = !DILocation(line: 27, column: 26, scope: !10323)
!10342 = !DILocation(line: 27, column: 24, scope: !10323)
!10343 = !DILocation(line: 41, column: 20, scope: !10331, inlinedAt: !10333)
!10344 = !DILocation(line: 41, column: 23, scope: !10331, inlinedAt: !10333)
!10345 = !DILocation(line: 41, column: 2, scope: !10331, inlinedAt: !10333)
!10346 = !DILocation(line: 42, column: 2, scope: !10331, inlinedAt: !10333)
!10347 = !DILocation(line: 28, column: 17, scope: !10323)
!10348 = !DILocation(line: 28, column: 21, scope: !10323)
!10349 = !DILocation(line: 68, column: 44, scope: !10325, inlinedAt: !10327)
!10350 = !DILocation(line: 68, column: 56, scope: !10325, inlinedAt: !10327)
!10351 = !DILocation(line: 68, column: 2, scope: !10325, inlinedAt: !10327)
!10352 = !{i32 -2147119708}
!10353 = !DILocation(line: 29, column: 1, scope: !10323)
!10354 = distinct !DISubprogram(name: "trace_gpio_value", scope: !9154, file: !9154, line: 32, type: !9155, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!10355 = !DILocalVariable(name: "gpio", arg: 1, scope: !10354, file: !9154, line: 32, type: !7)
!10356 = !DILocation(line: 32, column: 1, scope: !10354)
!10357 = !DILocalVariable(name: "get", arg: 2, scope: !10354, file: !9154, line: 32, type: !224)
!10358 = !DILocalVariable(name: "value", arg: 3, scope: !10354, file: !9154, line: 32, type: !224)
!10359 = distinct !DISubprogram(name: "gpiod_get_raw_value", scope: !3, file: !3, line: 2754, type: !4833, scopeLine: 2755, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!10360 = !DILocalVariable(name: "desc", arg: 1, scope: !10359, file: !3, line: 2754, type: !4835)
!10361 = !DILocation(line: 2754, column: 49, scope: !10359)
!10362 = !DILocation(line: 2756, column: 2, scope: !10359)
!10363 = !DILocalVariable(name: "__valid", scope: !10364, file: !3, line: 2756, type: !224)
!10364 = distinct !DILexicalBlock(scope: !10359, file: !3, line: 2756, column: 2)
!10365 = !DILocation(line: 2756, column: 2, scope: !10364)
!10366 = !DILocation(line: 2756, column: 2, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10364, file: !3, line: 2756, column: 2)
!10368 = !DILocalVariable(name: "__ret_warn_on", scope: !10369, file: !3, line: 2758, type: !224)
!10369 = distinct !DILexicalBlock(scope: !10359, file: !3, line: 2758, column: 2)
!10370 = !DILocation(line: 2758, column: 2, scope: !10369)
!10371 = !DILocation(line: 2758, column: 2, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10369, file: !3, line: 2758, column: 2)
!10373 = !DILocation(line: 2758, column: 2, scope: !10374)
!10374 = distinct !DILexicalBlock(scope: !10372, file: !3, line: 2758, column: 2)
!10375 = !DILocation(line: 2758, column: 2, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10374, file: !3, line: 2758, column: 2)
!10377 = !DILocation(line: 2758, column: 2, scope: !10378)
!10378 = distinct !DILexicalBlock(scope: !10374, file: !3, line: 2758, column: 2)
!10379 = !{i32 -2141391260, i32 -2141391231, i32 -2141391185, i32 -2141391127, i32 -2141391073, i32 -2141391019, i32 -2141390964, i32 -2141390933}
!10380 = !DILocation(line: 2758, column: 2, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !10374, file: !3, line: 2758, column: 2)
!10382 = !{i32 -2141390528, i32 -2141390521, i32 -2141390469, i32 -2141390438, i32 -2141390408}
!10383 = !DILocation(line: 2758, column: 2, scope: !10384)
!10384 = distinct !DILexicalBlock(scope: !10374, file: !3, line: 2758, column: 2)
!10385 = !DILocation(line: 2759, column: 36, scope: !10359)
!10386 = !DILocation(line: 2759, column: 9, scope: !10359)
!10387 = !DILocation(line: 2759, column: 2, scope: !10359)
!10388 = !DILocation(line: 2760, column: 1, scope: !10359)
!10389 = distinct !DISubprogram(name: "gpiod_get_raw_value_commit", scope: !3, file: !3, line: 2609, type: !4833, scopeLine: 2610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!10390 = !DILocalVariable(name: "desc", arg: 1, scope: !10389, file: !3, line: 2609, type: !4835)
!10391 = !DILocation(line: 2609, column: 63, scope: !10389)
!10392 = !DILocalVariable(name: "gc", scope: !10389, file: !3, line: 2611, type: !4096)
!10393 = !DILocation(line: 2611, column: 20, scope: !10389)
!10394 = !DILocalVariable(name: "offset", scope: !10389, file: !3, line: 2612, type: !224)
!10395 = !DILocation(line: 2612, column: 6, scope: !10389)
!10396 = !DILocalVariable(name: "value", scope: !10389, file: !3, line: 2613, type: !224)
!10397 = !DILocation(line: 2613, column: 6, scope: !10389)
!10398 = !DILocation(line: 2615, column: 7, scope: !10389)
!10399 = !DILocation(line: 2615, column: 13, scope: !10389)
!10400 = !DILocation(line: 2615, column: 19, scope: !10389)
!10401 = !DILocation(line: 2615, column: 5, scope: !10389)
!10402 = !DILocation(line: 2616, column: 28, scope: !10389)
!10403 = !DILocation(line: 2616, column: 11, scope: !10389)
!10404 = !DILocation(line: 2616, column: 9, scope: !10389)
!10405 = !DILocation(line: 2617, column: 10, scope: !10389)
!10406 = !DILocation(line: 2617, column: 14, scope: !10389)
!10407 = !DILocation(line: 2617, column: 20, scope: !10389)
!10408 = !DILocation(line: 2617, column: 24, scope: !10389)
!10409 = !DILocation(line: 2617, column: 28, scope: !10389)
!10410 = !DILocation(line: 2617, column: 32, scope: !10389)
!10411 = !DILocation(line: 2617, column: 8, scope: !10389)
!10412 = !DILocation(line: 2618, column: 10, scope: !10389)
!10413 = !DILocation(line: 2618, column: 16, scope: !10389)
!10414 = !DILocation(line: 2618, column: 22, scope: !10389)
!10415 = !DILocation(line: 2618, column: 32, scope: !10389)
!10416 = !DILocation(line: 2618, column: 31, scope: !10389)
!10417 = !DILocation(line: 2618, column: 30, scope: !10389)
!10418 = !DILocation(line: 2618, column: 8, scope: !10389)
!10419 = !DILocation(line: 2619, column: 32, scope: !10389)
!10420 = !DILocation(line: 2619, column: 19, scope: !10389)
!10421 = !DILocation(line: 2619, column: 42, scope: !10389)
!10422 = !DILocation(line: 2619, column: 2, scope: !10389)
!10423 = !DILocation(line: 2620, column: 9, scope: !10389)
!10424 = !DILocation(line: 2620, column: 2, scope: !10389)
!10425 = distinct !DISubprogram(name: "gpiod_get_value", scope: !3, file: !3, line: 2773, type: !4833, scopeLine: 2774, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!10426 = !DILocalVariable(name: "desc", arg: 1, scope: !10425, file: !3, line: 2773, type: !4835)
!10427 = !DILocation(line: 2773, column: 45, scope: !10425)
!10428 = !DILocalVariable(name: "value", scope: !10425, file: !3, line: 2775, type: !224)
!10429 = !DILocation(line: 2775, column: 6, scope: !10425)
!10430 = !DILocation(line: 2777, column: 2, scope: !10425)
!10431 = !DILocalVariable(name: "__valid", scope: !10432, file: !3, line: 2777, type: !224)
!10432 = distinct !DILexicalBlock(scope: !10425, file: !3, line: 2777, column: 2)
!10433 = !DILocation(line: 2777, column: 2, scope: !10432)
!10434 = !DILocation(line: 2777, column: 2, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10432, file: !3, line: 2777, column: 2)
!10436 = !DILocalVariable(name: "__ret_warn_on", scope: !10437, file: !3, line: 2779, type: !224)
!10437 = distinct !DILexicalBlock(scope: !10425, file: !3, line: 2779, column: 2)
!10438 = !DILocation(line: 2779, column: 2, scope: !10437)
!10439 = !DILocation(line: 2779, column: 2, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !10437, file: !3, line: 2779, column: 2)
!10441 = !DILocation(line: 2779, column: 2, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10440, file: !3, line: 2779, column: 2)
!10443 = !DILocation(line: 2779, column: 2, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10442, file: !3, line: 2779, column: 2)
!10445 = !DILocation(line: 2779, column: 2, scope: !10446)
!10446 = distinct !DILexicalBlock(scope: !10442, file: !3, line: 2779, column: 2)
!10447 = !{i32 -2141389590, i32 -2141389561, i32 -2141389515, i32 -2141389457, i32 -2141389403, i32 -2141389349, i32 -2141389294, i32 -2141389263}
!10448 = !DILocation(line: 2779, column: 2, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10442, file: !3, line: 2779, column: 2)
!10450 = !{i32 -2141388858, i32 -2141388851, i32 -2141388799, i32 -2141388768, i32 -2141388738}
!10451 = !DILocation(line: 2779, column: 2, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10442, file: !3, line: 2779, column: 2)
!10453 = !DILocation(line: 2781, column: 37, scope: !10425)
!10454 = !DILocation(line: 2781, column: 10, scope: !10425)
!10455 = !DILocation(line: 2781, column: 8, scope: !10425)
!10456 = !DILocation(line: 2782, column: 6, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10425, file: !3, line: 2782, column: 6)
!10458 = !DILocation(line: 2782, column: 12, scope: !10457)
!10459 = !DILocation(line: 2782, column: 6, scope: !10425)
!10460 = !DILocation(line: 2783, column: 10, scope: !10457)
!10461 = !DILocation(line: 2783, column: 3, scope: !10457)
!10462 = !DILocation(line: 2785, column: 33, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10425, file: !3, line: 2785, column: 6)
!10464 = !DILocation(line: 2785, column: 39, scope: !10463)
!10465 = !DILocation(line: 2785, column: 6, scope: !10463)
!10466 = !DILocation(line: 2785, column: 6, scope: !10425)
!10467 = !DILocation(line: 2786, column: 12, scope: !10463)
!10468 = !DILocation(line: 2786, column: 11, scope: !10463)
!10469 = !DILocation(line: 2786, column: 9, scope: !10463)
!10470 = !DILocation(line: 2786, column: 3, scope: !10463)
!10471 = !DILocation(line: 2788, column: 9, scope: !10425)
!10472 = !DILocation(line: 2788, column: 2, scope: !10425)
!10473 = !DILocation(line: 2789, column: 1, scope: !10425)
!10474 = distinct !DISubprogram(name: "gpiod_get_raw_array_value", scope: !3, file: !3, line: 2806, type: !10475, scopeLine: 2810, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!10475 = !DISubroutineType(types: !10476)
!10476 = !{!224, !7, !9643, !9644, !3758}
!10477 = !DILocalVariable(name: "array_size", arg: 1, scope: !10474, file: !3, line: 2806, type: !7)
!10478 = !DILocation(line: 2806, column: 44, scope: !10474)
!10479 = !DILocalVariable(name: "desc_array", arg: 2, scope: !10474, file: !3, line: 2807, type: !9643)
!10480 = !DILocation(line: 2807, column: 29, scope: !10474)
!10481 = !DILocalVariable(name: "array_info", arg: 3, scope: !10474, file: !3, line: 2808, type: !9644)
!10482 = !DILocation(line: 2808, column: 29, scope: !10474)
!10483 = !DILocalVariable(name: "value_bitmap", arg: 4, scope: !10474, file: !3, line: 2809, type: !3758)
!10484 = !DILocation(line: 2809, column: 25, scope: !10474)
!10485 = !DILocation(line: 2811, column: 7, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10474, file: !3, line: 2811, column: 6)
!10487 = !DILocation(line: 2811, column: 6, scope: !10474)
!10488 = !DILocation(line: 2812, column: 3, scope: !10486)
!10489 = !DILocation(line: 2813, column: 52, scope: !10474)
!10490 = !DILocation(line: 2814, column: 11, scope: !10474)
!10491 = !DILocation(line: 2814, column: 23, scope: !10474)
!10492 = !DILocation(line: 2815, column: 11, scope: !10474)
!10493 = !DILocation(line: 2813, column: 9, scope: !10474)
!10494 = !DILocation(line: 2813, column: 2, scope: !10474)
!10495 = !DILocation(line: 2816, column: 1, scope: !10474)
!10496 = distinct !DISubprogram(name: "gpiod_get_array_value", scope: !3, file: !3, line: 2832, type: !10475, scopeLine: 2836, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!10497 = !DILocalVariable(name: "array_size", arg: 1, scope: !10496, file: !3, line: 2832, type: !7)
!10498 = !DILocation(line: 2832, column: 40, scope: !10496)
!10499 = !DILocalVariable(name: "desc_array", arg: 2, scope: !10496, file: !3, line: 2833, type: !9643)
!10500 = !DILocation(line: 2833, column: 25, scope: !10496)
!10501 = !DILocalVariable(name: "array_info", arg: 3, scope: !10496, file: !3, line: 2834, type: !9644)
!10502 = !DILocation(line: 2834, column: 25, scope: !10496)
!10503 = !DILocalVariable(name: "value_bitmap", arg: 4, scope: !10496, file: !3, line: 2835, type: !3758)
!10504 = !DILocation(line: 2835, column: 21, scope: !10496)
!10505 = !DILocation(line: 2837, column: 7, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 2837, column: 6)
!10507 = !DILocation(line: 2837, column: 6, scope: !10496)
!10508 = !DILocation(line: 2838, column: 3, scope: !10506)
!10509 = !DILocation(line: 2839, column: 53, scope: !10496)
!10510 = !DILocation(line: 2840, column: 11, scope: !10496)
!10511 = !DILocation(line: 2840, column: 23, scope: !10496)
!10512 = !DILocation(line: 2841, column: 11, scope: !10496)
!10513 = !DILocation(line: 2839, column: 9, scope: !10496)
!10514 = !DILocation(line: 2839, column: 2, scope: !10496)
!10515 = !DILocation(line: 2842, column: 1, scope: !10496)
!10516 = distinct !DISubprogram(name: "gpiod_set_array_value_complex", scope: !3, file: !3, line: 2928, type: !9641, scopeLine: 2933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!10517 = !DILocation(line: 244, column: 47, scope: !9654, inlinedAt: !10518)
!10518 = distinct !DILocation(line: 3008, column: 5, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10520, file: !3, line: 3006, column: 11)
!10520 = distinct !DILexicalBlock(scope: !10521, file: !3, line: 3004, column: 15)
!10521 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 3002, column: 8)
!10522 = distinct !DILexicalBlock(scope: !10523, file: !3, line: 2983, column: 6)
!10523 = distinct !DILexicalBlock(scope: !10516, file: !3, line: 2961, column: 25)
!10524 = !DILocation(line: 244, column: 75, scope: !9654, inlinedAt: !10518)
!10525 = !DILocation(line: 245, column: 12, scope: !9654, inlinedAt: !10518)
!10526 = !DILocalVariable(name: "raw", arg: 1, scope: !10516, file: !3, line: 2928, type: !508)
!10527 = !DILocation(line: 2928, column: 40, scope: !10516)
!10528 = !DILocalVariable(name: "can_sleep", arg: 2, scope: !10516, file: !3, line: 2928, type: !508)
!10529 = !DILocation(line: 2928, column: 50, scope: !10516)
!10530 = !DILocalVariable(name: "array_size", arg: 3, scope: !10516, file: !3, line: 2929, type: !7)
!10531 = !DILocation(line: 2929, column: 20, scope: !10516)
!10532 = !DILocalVariable(name: "desc_array", arg: 4, scope: !10516, file: !3, line: 2930, type: !9643)
!10533 = !DILocation(line: 2930, column: 26, scope: !10516)
!10534 = !DILocalVariable(name: "array_info", arg: 5, scope: !10516, file: !3, line: 2931, type: !9644)
!10535 = !DILocation(line: 2931, column: 26, scope: !10516)
!10536 = !DILocalVariable(name: "value_bitmap", arg: 6, scope: !10516, file: !3, line: 2932, type: !3758)
!10537 = !DILocation(line: 2932, column: 22, scope: !10516)
!10538 = !DILocalVariable(name: "i", scope: !10516, file: !3, line: 2934, type: !224)
!10539 = !DILocation(line: 2934, column: 6, scope: !10516)
!10540 = !DILocation(line: 2941, column: 6, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10516, file: !3, line: 2941, column: 6)
!10542 = !DILocation(line: 2941, column: 17, scope: !10541)
!10543 = !DILocation(line: 2941, column: 20, scope: !10541)
!10544 = !DILocation(line: 2941, column: 32, scope: !10541)
!10545 = !DILocation(line: 2941, column: 40, scope: !10541)
!10546 = !DILocation(line: 2941, column: 37, scope: !10541)
!10547 = !DILocation(line: 2941, column: 51, scope: !10541)
!10548 = !DILocation(line: 2942, column: 6, scope: !10541)
!10549 = !DILocation(line: 2942, column: 20, scope: !10541)
!10550 = !DILocation(line: 2942, column: 32, scope: !10541)
!10551 = !DILocation(line: 2942, column: 17, scope: !10541)
!10552 = !DILocation(line: 2942, column: 37, scope: !10541)
!10553 = !DILocation(line: 2943, column: 14, scope: !10541)
!10554 = !DILocation(line: 2943, column: 6, scope: !10541)
!10555 = !DILocation(line: 2943, column: 28, scope: !10541)
!10556 = !DILocation(line: 2943, column: 41, scope: !10541)
!10557 = !DILocation(line: 2943, column: 53, scope: !10541)
!10558 = !DILocation(line: 2943, column: 39, scope: !10541)
!10559 = !DILocation(line: 2943, column: 25, scope: !10541)
!10560 = !DILocation(line: 2941, column: 6, scope: !10516)
!10561 = !DILocation(line: 2944, column: 8, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10563, file: !3, line: 2944, column: 7)
!10563 = distinct !DILexicalBlock(scope: !10541, file: !3, line: 2943, column: 59)
!10564 = !DILocation(line: 2944, column: 7, scope: !10563)
!10565 = !DILocalVariable(name: "__ret_warn_on", scope: !10566, file: !3, line: 2945, type: !224)
!10566 = distinct !DILexicalBlock(scope: !10562, file: !3, line: 2945, column: 4)
!10567 = !DILocation(line: 2945, column: 4, scope: !10566)
!10568 = !DILocation(line: 2945, column: 4, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !10566, file: !3, line: 2945, column: 4)
!10570 = !DILocation(line: 2945, column: 4, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10569, file: !3, line: 2945, column: 4)
!10572 = !DILocation(line: 2945, column: 4, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !10571, file: !3, line: 2945, column: 4)
!10574 = !DILocation(line: 2945, column: 4, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10571, file: !3, line: 2945, column: 4)
!10576 = !{i32 -2141386777, i32 -2141386748, i32 -2141386702, i32 -2141386644, i32 -2141386590, i32 -2141386536, i32 -2141386481, i32 -2141386450}
!10577 = !DILocation(line: 2945, column: 4, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10571, file: !3, line: 2945, column: 4)
!10579 = !{i32 -2141386045, i32 -2141386038, i32 -2141385986, i32 -2141385955, i32 -2141385925}
!10580 = !DILocation(line: 2945, column: 4, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10571, file: !3, line: 2945, column: 4)
!10582 = !DILocation(line: 2945, column: 4, scope: !10562)
!10583 = !DILocation(line: 2947, column: 8, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10563, file: !3, line: 2947, column: 7)
!10585 = !DILocation(line: 2947, column: 12, scope: !10584)
!10586 = !DILocation(line: 2947, column: 29, scope: !10584)
!10587 = !DILocation(line: 2947, column: 41, scope: !10584)
!10588 = !DILocation(line: 2947, column: 54, scope: !10584)
!10589 = !DILocation(line: 2947, column: 16, scope: !10584)
!10590 = !DILocation(line: 2947, column: 7, scope: !10563)
!10591 = !DILocation(line: 2948, column: 15, scope: !10584)
!10592 = !DILocation(line: 2948, column: 29, scope: !10584)
!10593 = !DILocation(line: 2949, column: 8, scope: !10584)
!10594 = !DILocation(line: 2949, column: 20, scope: !10584)
!10595 = !DILocation(line: 2949, column: 33, scope: !10584)
!10596 = !DILocation(line: 2948, column: 4, scope: !10584)
!10597 = !DILocation(line: 2951, column: 26, scope: !10563)
!10598 = !DILocation(line: 2951, column: 38, scope: !10563)
!10599 = !DILocation(line: 2951, column: 44, scope: !10563)
!10600 = !DILocation(line: 2951, column: 56, scope: !10563)
!10601 = !DILocation(line: 2952, column: 12, scope: !10563)
!10602 = !DILocation(line: 2951, column: 3, scope: !10563)
!10603 = !DILocation(line: 2954, column: 27, scope: !10563)
!10604 = !DILocation(line: 2954, column: 39, scope: !10563)
!10605 = !DILocation(line: 2954, column: 49, scope: !10563)
!10606 = !DILocation(line: 2954, column: 7, scope: !10563)
!10607 = !DILocation(line: 2954, column: 5, scope: !10563)
!10608 = !DILocation(line: 2955, column: 7, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10563, file: !3, line: 2955, column: 7)
!10610 = !DILocation(line: 2955, column: 12, scope: !10609)
!10611 = !DILocation(line: 2955, column: 9, scope: !10609)
!10612 = !DILocation(line: 2955, column: 7, scope: !10563)
!10613 = !DILocation(line: 2956, column: 4, scope: !10609)
!10614 = !DILocation(line: 2957, column: 2, scope: !10563)
!10615 = !DILocation(line: 2958, column: 14, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10541, file: !3, line: 2957, column: 9)
!10617 = !DILocation(line: 2961, column: 2, scope: !10516)
!10618 = !DILocation(line: 2961, column: 9, scope: !10516)
!10619 = !DILocation(line: 2961, column: 13, scope: !10516)
!10620 = !DILocation(line: 2961, column: 11, scope: !10516)
!10621 = !DILocalVariable(name: "gc", scope: !10523, file: !3, line: 2962, type: !4096)
!10622 = !DILocation(line: 2962, column: 21, scope: !10523)
!10623 = !DILocation(line: 2962, column: 26, scope: !10523)
!10624 = !DILocation(line: 2962, column: 37, scope: !10523)
!10625 = !DILocation(line: 2962, column: 41, scope: !10523)
!10626 = !DILocation(line: 2962, column: 47, scope: !10523)
!10627 = !DILocalVariable(name: "fastpath", scope: !10523, file: !3, line: 2963, type: !9775)
!10628 = !DILocation(line: 2963, column: 17, scope: !10523)
!10629 = !DILocalVariable(name: "mask", scope: !10523, file: !3, line: 2964, type: !3758)
!10630 = !DILocation(line: 2964, column: 18, scope: !10523)
!10631 = !DILocalVariable(name: "bits", scope: !10523, file: !3, line: 2964, type: !3758)
!10632 = !DILocation(line: 2964, column: 25, scope: !10523)
!10633 = !DILocalVariable(name: "count", scope: !10523, file: !3, line: 2965, type: !224)
!10634 = !DILocation(line: 2965, column: 7, scope: !10523)
!10635 = !DILocation(line: 2967, column: 7, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10523, file: !3, line: 2967, column: 7)
!10637 = !DILocation(line: 2967, column: 7, scope: !10523)
!10638 = !DILocation(line: 2968, column: 11, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !10636, file: !3, line: 2967, column: 44)
!10640 = !DILocation(line: 2968, column: 9, scope: !10639)
!10641 = !DILocation(line: 2969, column: 3, scope: !10639)
!10642 = !DILocation(line: 2970, column: 29, scope: !10643)
!10643 = distinct !DILexicalBlock(scope: !10636, file: !3, line: 2969, column: 10)
!10644 = !DILocation(line: 2970, column: 27, scope: !10643)
!10645 = !DILocation(line: 2972, column: 9, scope: !10643)
!10646 = !DILocation(line: 2970, column: 11, scope: !10643)
!10647 = !DILocation(line: 2970, column: 9, scope: !10643)
!10648 = !DILocation(line: 2973, column: 9, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10643, file: !3, line: 2973, column: 8)
!10650 = !DILocation(line: 2973, column: 8, scope: !10643)
!10651 = !DILocation(line: 2974, column: 5, scope: !10649)
!10652 = !DILocation(line: 2977, column: 10, scope: !10523)
!10653 = !DILocation(line: 2977, column: 17, scope: !10523)
!10654 = !DILocation(line: 2977, column: 15, scope: !10523)
!10655 = !DILocation(line: 2977, column: 8, scope: !10523)
!10656 = !DILocation(line: 2978, column: 15, scope: !10523)
!10657 = !DILocation(line: 2978, column: 21, scope: !10523)
!10658 = !DILocation(line: 2978, column: 25, scope: !10523)
!10659 = !DILocation(line: 2978, column: 3, scope: !10523)
!10660 = !DILocation(line: 2980, column: 8, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10523, file: !3, line: 2980, column: 7)
!10662 = !DILocation(line: 2980, column: 7, scope: !10523)
!10663 = !DILocalVariable(name: "__ret_warn_on", scope: !10664, file: !3, line: 2981, type: !224)
!10664 = distinct !DILexicalBlock(scope: !10661, file: !3, line: 2981, column: 4)
!10665 = !DILocation(line: 2981, column: 4, scope: !10664)
!10666 = !DILocation(line: 2981, column: 4, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10664, file: !3, line: 2981, column: 4)
!10668 = !DILocation(line: 2981, column: 4, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10667, file: !3, line: 2981, column: 4)
!10670 = !DILocation(line: 2981, column: 4, scope: !10671)
!10671 = distinct !DILexicalBlock(scope: !10669, file: !3, line: 2981, column: 4)
!10672 = !DILocation(line: 2981, column: 4, scope: !10673)
!10673 = distinct !DILexicalBlock(scope: !10669, file: !3, line: 2981, column: 4)
!10674 = !{i32 -2141384320, i32 -2141384291, i32 -2141384245, i32 -2141384187, i32 -2141384133, i32 -2141384079, i32 -2141384024, i32 -2141383993}
!10675 = !DILocation(line: 2981, column: 4, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10669, file: !3, line: 2981, column: 4)
!10677 = !{i32 -2141383588, i32 -2141383581, i32 -2141383529, i32 -2141383498, i32 -2141383468}
!10678 = !DILocation(line: 2981, column: 4, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10669, file: !3, line: 2981, column: 4)
!10680 = !DILocation(line: 2981, column: 4, scope: !10661)
!10681 = !DILocation(line: 2983, column: 3, scope: !10523)
!10682 = !DILocalVariable(name: "desc", scope: !10522, file: !3, line: 2984, type: !4232)
!10683 = !DILocation(line: 2984, column: 22, scope: !10522)
!10684 = !DILocation(line: 2984, column: 29, scope: !10522)
!10685 = !DILocation(line: 2984, column: 40, scope: !10522)
!10686 = !DILocalVariable(name: "hwgpio", scope: !10522, file: !3, line: 2985, type: !224)
!10687 = !DILocation(line: 2985, column: 8, scope: !10522)
!10688 = !DILocation(line: 2985, column: 34, scope: !10522)
!10689 = !DILocation(line: 2985, column: 17, scope: !10522)
!10690 = !DILocalVariable(name: "value", scope: !10522, file: !3, line: 2986, type: !224)
!10691 = !DILocation(line: 2986, column: 8, scope: !10522)
!10692 = !DILocation(line: 2986, column: 25, scope: !10522)
!10693 = !DILocation(line: 2986, column: 28, scope: !10522)
!10694 = !DILocation(line: 2986, column: 16, scope: !10522)
!10695 = !DILocation(line: 2993, column: 9, scope: !10696)
!10696 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 2993, column: 8)
!10697 = !DILocation(line: 2993, column: 13, scope: !10696)
!10698 = !DILocation(line: 2993, column: 18, scope: !10696)
!10699 = !DILocation(line: 2993, column: 29, scope: !10696)
!10700 = !DILocation(line: 2994, column: 17, scope: !10696)
!10701 = !DILocation(line: 2994, column: 20, scope: !10696)
!10702 = !DILocation(line: 2994, column: 32, scope: !10696)
!10703 = !DILocation(line: 2994, column: 8, scope: !10696)
!10704 = !DILocation(line: 2994, column: 46, scope: !10696)
!10705 = !DILocation(line: 2995, column: 35, scope: !10696)
!10706 = !DILocation(line: 2995, column: 41, scope: !10696)
!10707 = !DILocation(line: 2995, column: 8, scope: !10696)
!10708 = !DILocation(line: 2993, column: 8, scope: !10522)
!10709 = !DILocation(line: 2996, column: 14, scope: !10696)
!10710 = !DILocation(line: 2996, column: 13, scope: !10696)
!10711 = !DILocation(line: 2996, column: 11, scope: !10696)
!10712 = !DILocation(line: 2996, column: 5, scope: !10696)
!10713 = !DILocation(line: 2997, column: 34, scope: !10522)
!10714 = !DILocation(line: 2997, column: 21, scope: !10522)
!10715 = !DILocation(line: 2997, column: 44, scope: !10522)
!10716 = !DILocation(line: 2997, column: 4, scope: !10522)
!10717 = !DILocation(line: 3002, column: 35, scope: !10521)
!10718 = !DILocation(line: 3002, column: 41, scope: !10521)
!10719 = !DILocation(line: 3002, column: 8, scope: !10521)
!10720 = !DILocation(line: 3002, column: 48, scope: !10521)
!10721 = !DILocation(line: 3002, column: 52, scope: !10521)
!10722 = !DILocation(line: 3002, column: 8, scope: !10522)
!10723 = !DILocation(line: 3003, column: 38, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10521, file: !3, line: 3002, column: 57)
!10725 = !DILocation(line: 3003, column: 44, scope: !10724)
!10726 = !DILocation(line: 3003, column: 5, scope: !10724)
!10727 = !DILocation(line: 3004, column: 4, scope: !10724)
!10728 = !DILocation(line: 3004, column: 43, scope: !10520)
!10729 = !DILocation(line: 3004, column: 49, scope: !10520)
!10730 = !DILocation(line: 3004, column: 15, scope: !10520)
!10731 = !DILocation(line: 3004, column: 56, scope: !10520)
!10732 = !DILocation(line: 3004, column: 60, scope: !10520)
!10733 = !DILocation(line: 3004, column: 15, scope: !10521)
!10734 = !DILocation(line: 3005, column: 39, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10520, file: !3, line: 3004, column: 65)
!10736 = !DILocation(line: 3005, column: 45, scope: !10735)
!10737 = !DILocation(line: 3005, column: 5, scope: !10735)
!10738 = !DILocation(line: 3006, column: 4, scope: !10735)
!10739 = !DILocation(line: 3007, column: 15, scope: !10519)
!10740 = !DILocation(line: 3007, column: 23, scope: !10519)
!10741 = !DILocation(line: 3007, column: 5, scope: !10519)
!10742 = !DILocation(line: 3008, column: 18, scope: !10519)
!10743 = !DILocation(line: 3008, column: 26, scope: !10519)
!10744 = !DILocation(line: 3008, column: 32, scope: !10519)
!10745 = !DILocation(line: 247, column: 6, scope: !9926, inlinedAt: !10518)
!10746 = !DILocation(line: 247, column: 6, scope: !9654, inlinedAt: !10518)
!10747 = !DILocation(line: 248, column: 13, scope: !9926, inlinedAt: !10518)
!10748 = !DILocation(line: 248, column: 17, scope: !9926, inlinedAt: !10518)
!10749 = !DILocation(line: 248, column: 3, scope: !9926, inlinedAt: !10518)
!10750 = !DILocation(line: 250, column: 15, scope: !9926, inlinedAt: !10518)
!10751 = !DILocation(line: 250, column: 19, scope: !9926, inlinedAt: !10518)
!10752 = !DILocation(line: 250, column: 3, scope: !9926, inlinedAt: !10518)
!10753 = !DILocation(line: 3009, column: 10, scope: !10519)
!10754 = !DILocation(line: 3011, column: 5, scope: !10522)
!10755 = !DILocation(line: 3013, column: 8, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 3013, column: 8)
!10757 = !DILocation(line: 3013, column: 8, scope: !10522)
!10758 = !DILocation(line: 3014, column: 28, scope: !10756)
!10759 = !DILocation(line: 3014, column: 40, scope: !10756)
!10760 = !DILocation(line: 3015, column: 14, scope: !10756)
!10761 = !DILocation(line: 3015, column: 26, scope: !10756)
!10762 = !DILocation(line: 3014, column: 9, scope: !10756)
!10763 = !DILocation(line: 3014, column: 7, scope: !10756)
!10764 = !DILocation(line: 3014, column: 5, scope: !10756)
!10765 = !DILocation(line: 3016, column: 3, scope: !10522)
!10766 = !DILocation(line: 3016, column: 13, scope: !10523)
!10767 = !DILocation(line: 3016, column: 17, scope: !10523)
!10768 = !DILocation(line: 3016, column: 15, scope: !10523)
!10769 = !DILocation(line: 3016, column: 29, scope: !10523)
!10770 = !DILocation(line: 3017, column: 6, scope: !10523)
!10771 = !DILocation(line: 3017, column: 17, scope: !10523)
!10772 = !DILocation(line: 3017, column: 21, scope: !10523)
!10773 = !DILocation(line: 3017, column: 27, scope: !10523)
!10774 = !DILocation(line: 3017, column: 35, scope: !10523)
!10775 = !DILocation(line: 3017, column: 32, scope: !10523)
!10776 = !DILocation(line: 0, scope: !10523)
!10777 = distinct !{!10777, !10681, !10778}
!10778 = !DILocation(line: 3017, column: 38, scope: !10523)
!10779 = !DILocation(line: 3019, column: 7, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !10523, file: !3, line: 3019, column: 7)
!10781 = !DILocation(line: 3019, column: 13, scope: !10780)
!10782 = !DILocation(line: 3019, column: 7, scope: !10523)
!10783 = !DILocation(line: 3020, column: 27, scope: !10780)
!10784 = !DILocation(line: 3020, column: 31, scope: !10780)
!10785 = !DILocation(line: 3020, column: 37, scope: !10780)
!10786 = !DILocation(line: 3020, column: 4, scope: !10780)
!10787 = !DILocation(line: 3022, column: 7, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !10523, file: !3, line: 3022, column: 7)
!10789 = !DILocation(line: 3022, column: 15, scope: !10788)
!10790 = !DILocation(line: 3022, column: 12, scope: !10788)
!10791 = !DILocation(line: 3022, column: 7, scope: !10523)
!10792 = !DILocation(line: 3023, column: 10, scope: !10788)
!10793 = !DILocation(line: 3023, column: 4, scope: !10788)
!10794 = distinct !{!10794, !10617, !10795}
!10795 = !DILocation(line: 3024, column: 2, scope: !10516)
!10796 = !DILocation(line: 3025, column: 2, scope: !10516)
!10797 = !DILocation(line: 3026, column: 1, scope: !10516)
!10798 = distinct !DISubprogram(name: "gpio_chip_set_multiple", scope: !3, file: !3, line: 2914, type: !4129, scopeLine: 2916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!10799 = !DILocalVariable(name: "gc", arg: 1, scope: !10798, file: !3, line: 2914, type: !4096)
!10800 = !DILocation(line: 2914, column: 54, scope: !10798)
!10801 = !DILocalVariable(name: "mask", arg: 2, scope: !10798, file: !3, line: 2915, type: !3758)
!10802 = !DILocation(line: 2915, column: 23, scope: !10798)
!10803 = !DILocalVariable(name: "bits", arg: 3, scope: !10798, file: !3, line: 2915, type: !3758)
!10804 = !DILocation(line: 2915, column: 44, scope: !10798)
!10805 = !DILocation(line: 2917, column: 6, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10798, file: !3, line: 2917, column: 6)
!10807 = !DILocation(line: 2917, column: 10, scope: !10806)
!10808 = !DILocation(line: 2917, column: 6, scope: !10798)
!10809 = !DILocation(line: 2918, column: 3, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !10806, file: !3, line: 2917, column: 24)
!10811 = !DILocation(line: 2918, column: 7, scope: !10810)
!10812 = !DILocation(line: 2918, column: 20, scope: !10810)
!10813 = !DILocation(line: 2918, column: 24, scope: !10810)
!10814 = !DILocation(line: 2918, column: 30, scope: !10810)
!10815 = !DILocation(line: 2919, column: 2, scope: !10810)
!10816 = !DILocalVariable(name: "i", scope: !10817, file: !3, line: 2920, type: !7)
!10817 = distinct !DILexicalBlock(scope: !10806, file: !3, line: 2919, column: 9)
!10818 = !DILocation(line: 2920, column: 16, scope: !10817)
!10819 = !DILocation(line: 2923, column: 3, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10817, file: !3, line: 2923, column: 3)
!10821 = !DILocation(line: 2923, column: 3, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10820, file: !3, line: 2923, column: 3)
!10823 = !DILocation(line: 2924, column: 4, scope: !10822)
!10824 = !DILocation(line: 2924, column: 8, scope: !10822)
!10825 = !DILocation(line: 2924, column: 12, scope: !10822)
!10826 = !DILocation(line: 2924, column: 16, scope: !10822)
!10827 = !DILocation(line: 2924, column: 28, scope: !10822)
!10828 = !DILocation(line: 2924, column: 31, scope: !10822)
!10829 = !DILocation(line: 2924, column: 19, scope: !10822)
!10830 = distinct !{!10830, !10819, !10831}
!10831 = !DILocation(line: 2924, column: 36, scope: !10820)
!10832 = !DILocation(line: 2926, column: 1, scope: !10798)
!10833 = distinct !DISubprogram(name: "gpio_set_open_drain_value_commit", scope: !3, file: !3, line: 2850, type: !10834, scopeLine: 2851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!10834 = !DISubroutineType(types: !10835)
!10835 = !{null, !4232, !508}
!10836 = !DILocalVariable(name: "desc", arg: 1, scope: !10833, file: !3, line: 2850, type: !4232)
!10837 = !DILocation(line: 2850, column: 64, scope: !10833)
!10838 = !DILocalVariable(name: "value", arg: 2, scope: !10833, file: !3, line: 2850, type: !508)
!10839 = !DILocation(line: 2850, column: 75, scope: !10833)
!10840 = !DILocalVariable(name: "ret", scope: !10833, file: !3, line: 2852, type: !224)
!10841 = !DILocation(line: 2852, column: 6, scope: !10833)
!10842 = !DILocalVariable(name: "gc", scope: !10833, file: !3, line: 2853, type: !4096)
!10843 = !DILocation(line: 2853, column: 20, scope: !10833)
!10844 = !DILocation(line: 2853, column: 25, scope: !10833)
!10845 = !DILocation(line: 2853, column: 31, scope: !10833)
!10846 = !DILocation(line: 2853, column: 37, scope: !10833)
!10847 = !DILocalVariable(name: "offset", scope: !10833, file: !3, line: 2854, type: !224)
!10848 = !DILocation(line: 2854, column: 6, scope: !10833)
!10849 = !DILocation(line: 2854, column: 32, scope: !10833)
!10850 = !DILocation(line: 2854, column: 15, scope: !10833)
!10851 = !DILocation(line: 2856, column: 6, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10833, file: !3, line: 2856, column: 6)
!10853 = !DILocation(line: 2856, column: 6, scope: !10833)
!10854 = !DILocation(line: 2857, column: 9, scope: !10855)
!10855 = distinct !DILexicalBlock(scope: !10852, file: !3, line: 2856, column: 13)
!10856 = !DILocation(line: 2857, column: 13, scope: !10855)
!10857 = !DILocation(line: 2857, column: 29, scope: !10855)
!10858 = !DILocation(line: 2857, column: 33, scope: !10855)
!10859 = !DILocation(line: 2857, column: 7, scope: !10855)
!10860 = !DILocation(line: 2858, column: 2, scope: !10855)
!10861 = !DILocation(line: 2859, column: 9, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10852, file: !3, line: 2858, column: 9)
!10863 = !DILocation(line: 2859, column: 13, scope: !10862)
!10864 = !DILocation(line: 2859, column: 30, scope: !10862)
!10865 = !DILocation(line: 2859, column: 34, scope: !10862)
!10866 = !DILocation(line: 2859, column: 7, scope: !10862)
!10867 = !DILocation(line: 2860, column: 8, scope: !10868)
!10868 = distinct !DILexicalBlock(scope: !10862, file: !3, line: 2860, column: 7)
!10869 = !DILocation(line: 2860, column: 7, scope: !10862)
!10870 = !DILocation(line: 2861, column: 26, scope: !10868)
!10871 = !DILocation(line: 2861, column: 32, scope: !10868)
!10872 = !DILocation(line: 2861, column: 4, scope: !10868)
!10873 = !DILocation(line: 2863, column: 36, scope: !10833)
!10874 = !DILocation(line: 2863, column: 23, scope: !10833)
!10875 = !DILocation(line: 2863, column: 43, scope: !10833)
!10876 = !DILocation(line: 2863, column: 50, scope: !10833)
!10877 = !DILocation(line: 2863, column: 2, scope: !10833)
!10878 = !DILocation(line: 2864, column: 6, scope: !10879)
!10879 = distinct !DILexicalBlock(scope: !10833, file: !3, line: 2864, column: 6)
!10880 = !DILocation(line: 2864, column: 10, scope: !10879)
!10881 = !DILocation(line: 2864, column: 6, scope: !10833)
!10882 = !DILocation(line: 2865, column: 3, scope: !10879)
!10883 = !DILocation(line: 2868, column: 1, scope: !10833)
!10884 = distinct !DISubprogram(name: "gpio_set_open_source_value_commit", scope: !3, file: !3, line: 2875, type: !10834, scopeLine: 2876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!10885 = !DILocalVariable(name: "desc", arg: 1, scope: !10884, file: !3, line: 2875, type: !4232)
!10886 = !DILocation(line: 2875, column: 65, scope: !10884)
!10887 = !DILocalVariable(name: "value", arg: 2, scope: !10884, file: !3, line: 2875, type: !508)
!10888 = !DILocation(line: 2875, column: 76, scope: !10884)
!10889 = !DILocalVariable(name: "ret", scope: !10884, file: !3, line: 2877, type: !224)
!10890 = !DILocation(line: 2877, column: 6, scope: !10884)
!10891 = !DILocalVariable(name: "gc", scope: !10884, file: !3, line: 2878, type: !4096)
!10892 = !DILocation(line: 2878, column: 20, scope: !10884)
!10893 = !DILocation(line: 2878, column: 25, scope: !10884)
!10894 = !DILocation(line: 2878, column: 31, scope: !10884)
!10895 = !DILocation(line: 2878, column: 37, scope: !10884)
!10896 = !DILocalVariable(name: "offset", scope: !10884, file: !3, line: 2879, type: !224)
!10897 = !DILocation(line: 2879, column: 6, scope: !10884)
!10898 = !DILocation(line: 2879, column: 32, scope: !10884)
!10899 = !DILocation(line: 2879, column: 15, scope: !10884)
!10900 = !DILocation(line: 2881, column: 6, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10884, file: !3, line: 2881, column: 6)
!10902 = !DILocation(line: 2881, column: 6, scope: !10884)
!10903 = !DILocation(line: 2882, column: 9, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10901, file: !3, line: 2881, column: 13)
!10905 = !DILocation(line: 2882, column: 13, scope: !10904)
!10906 = !DILocation(line: 2882, column: 30, scope: !10904)
!10907 = !DILocation(line: 2882, column: 34, scope: !10904)
!10908 = !DILocation(line: 2882, column: 7, scope: !10904)
!10909 = !DILocation(line: 2883, column: 8, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10904, file: !3, line: 2883, column: 7)
!10911 = !DILocation(line: 2883, column: 7, scope: !10904)
!10912 = !DILocation(line: 2884, column: 26, scope: !10910)
!10913 = !DILocation(line: 2884, column: 32, scope: !10910)
!10914 = !DILocation(line: 2884, column: 4, scope: !10910)
!10915 = !DILocation(line: 2885, column: 2, scope: !10904)
!10916 = !DILocation(line: 2886, column: 9, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10901, file: !3, line: 2885, column: 9)
!10918 = !DILocation(line: 2886, column: 13, scope: !10917)
!10919 = !DILocation(line: 2886, column: 29, scope: !10917)
!10920 = !DILocation(line: 2886, column: 33, scope: !10917)
!10921 = !DILocation(line: 2886, column: 7, scope: !10917)
!10922 = !DILocation(line: 2888, column: 36, scope: !10884)
!10923 = !DILocation(line: 2888, column: 23, scope: !10884)
!10924 = !DILocation(line: 2888, column: 44, scope: !10884)
!10925 = !DILocation(line: 2888, column: 43, scope: !10884)
!10926 = !DILocation(line: 2888, column: 51, scope: !10884)
!10927 = !DILocation(line: 2888, column: 2, scope: !10884)
!10928 = !DILocation(line: 2889, column: 6, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10884, file: !3, line: 2889, column: 6)
!10930 = !DILocation(line: 2889, column: 10, scope: !10929)
!10931 = !DILocation(line: 2889, column: 6, scope: !10884)
!10932 = !DILocation(line: 2890, column: 3, scope: !10929)
!10933 = !DILocation(line: 2893, column: 1, scope: !10884)
!10934 = distinct !DISubprogram(name: "gpiod_set_raw_value", scope: !3, file: !3, line: 3039, type: !10935, scopeLine: 3040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!10935 = !DISubroutineType(types: !10936)
!10936 = !{null, !4232, !224}
!10937 = !DILocalVariable(name: "desc", arg: 1, scope: !10934, file: !3, line: 3039, type: !4232)
!10938 = !DILocation(line: 3039, column: 44, scope: !10934)
!10939 = !DILocalVariable(name: "value", arg: 2, scope: !10934, file: !3, line: 3039, type: !224)
!10940 = !DILocation(line: 3039, column: 54, scope: !10934)
!10941 = !DILocation(line: 3041, column: 2, scope: !10934)
!10942 = !DILocalVariable(name: "__valid", scope: !10943, file: !3, line: 3041, type: !224)
!10943 = distinct !DILexicalBlock(scope: !10934, file: !3, line: 3041, column: 2)
!10944 = !DILocation(line: 3041, column: 2, scope: !10943)
!10945 = !DILocation(line: 3041, column: 2, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10943, file: !3, line: 3041, column: 2)
!10947 = !DILocalVariable(name: "__ret_warn_on", scope: !10948, file: !3, line: 3043, type: !224)
!10948 = distinct !DILexicalBlock(scope: !10934, file: !3, line: 3043, column: 2)
!10949 = !DILocation(line: 3043, column: 2, scope: !10948)
!10950 = !DILocation(line: 3043, column: 2, scope: !10951)
!10951 = distinct !DILexicalBlock(scope: !10948, file: !3, line: 3043, column: 2)
!10952 = !DILocation(line: 3043, column: 2, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10951, file: !3, line: 3043, column: 2)
!10954 = !DILocation(line: 3043, column: 2, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10953, file: !3, line: 3043, column: 2)
!10956 = !DILocation(line: 3043, column: 2, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !10953, file: !3, line: 3043, column: 2)
!10958 = !{i32 -2141382757, i32 -2141382728, i32 -2141382682, i32 -2141382624, i32 -2141382570, i32 -2141382516, i32 -2141382461, i32 -2141382430}
!10959 = !DILocation(line: 3043, column: 2, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !10953, file: !3, line: 3043, column: 2)
!10961 = !{i32 -2141382025, i32 -2141382018, i32 -2141381966, i32 -2141381935, i32 -2141381905}
!10962 = !DILocation(line: 3043, column: 2, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10953, file: !3, line: 3043, column: 2)
!10964 = !DILocation(line: 3044, column: 29, scope: !10934)
!10965 = !DILocation(line: 3044, column: 35, scope: !10934)
!10966 = !DILocation(line: 3044, column: 2, scope: !10934)
!10967 = !DILocation(line: 3045, column: 1, scope: !10934)
!10968 = distinct !DISubprogram(name: "gpiod_set_raw_value_commit", scope: !3, file: !3, line: 2895, type: !10834, scopeLine: 2896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!10969 = !DILocalVariable(name: "desc", arg: 1, scope: !10968, file: !3, line: 2895, type: !4232)
!10970 = !DILocation(line: 2895, column: 58, scope: !10968)
!10971 = !DILocalVariable(name: "value", arg: 2, scope: !10968, file: !3, line: 2895, type: !508)
!10972 = !DILocation(line: 2895, column: 69, scope: !10968)
!10973 = !DILocalVariable(name: "gc", scope: !10968, file: !3, line: 2897, type: !4096)
!10974 = !DILocation(line: 2897, column: 20, scope: !10968)
!10975 = !DILocation(line: 2899, column: 7, scope: !10968)
!10976 = !DILocation(line: 2899, column: 13, scope: !10968)
!10977 = !DILocation(line: 2899, column: 19, scope: !10968)
!10978 = !DILocation(line: 2899, column: 5, scope: !10968)
!10979 = !DILocation(line: 2900, column: 32, scope: !10968)
!10980 = !DILocation(line: 2900, column: 19, scope: !10968)
!10981 = !DILocation(line: 2900, column: 42, scope: !10968)
!10982 = !DILocation(line: 2900, column: 2, scope: !10968)
!10983 = !DILocation(line: 2901, column: 2, scope: !10968)
!10984 = !DILocation(line: 2901, column: 6, scope: !10968)
!10985 = !DILocation(line: 2901, column: 10, scope: !10968)
!10986 = !DILocation(line: 2901, column: 31, scope: !10968)
!10987 = !DILocation(line: 2901, column: 14, scope: !10968)
!10988 = !DILocation(line: 2901, column: 38, scope: !10968)
!10989 = !DILocation(line: 2902, column: 1, scope: !10968)
!10990 = distinct !DISubprogram(name: "gpiod_set_value", scope: !3, file: !3, line: 3080, type: !10935, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!10991 = !DILocalVariable(name: "desc", arg: 1, scope: !10990, file: !3, line: 3080, type: !4232)
!10992 = !DILocation(line: 3080, column: 40, scope: !10990)
!10993 = !DILocalVariable(name: "value", arg: 2, scope: !10990, file: !3, line: 3080, type: !224)
!10994 = !DILocation(line: 3080, column: 50, scope: !10990)
!10995 = !DILocation(line: 3082, column: 2, scope: !10990)
!10996 = !DILocalVariable(name: "__valid", scope: !10997, file: !3, line: 3082, type: !224)
!10997 = distinct !DILexicalBlock(scope: !10990, file: !3, line: 3082, column: 2)
!10998 = !DILocation(line: 3082, column: 2, scope: !10997)
!10999 = !DILocation(line: 3082, column: 2, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !10997, file: !3, line: 3082, column: 2)
!11001 = !DILocalVariable(name: "__ret_warn_on", scope: !11002, file: !3, line: 3084, type: !224)
!11002 = distinct !DILexicalBlock(scope: !10990, file: !3, line: 3084, column: 2)
!11003 = !DILocation(line: 3084, column: 2, scope: !11002)
!11004 = !DILocation(line: 3084, column: 2, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !11002, file: !3, line: 3084, column: 2)
!11006 = !DILocation(line: 3084, column: 2, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !11005, file: !3, line: 3084, column: 2)
!11008 = !DILocation(line: 3084, column: 2, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !11007, file: !3, line: 3084, column: 2)
!11010 = !DILocation(line: 3084, column: 2, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !11007, file: !3, line: 3084, column: 2)
!11012 = !{i32 -2141381089, i32 -2141381060, i32 -2141381014, i32 -2141380956, i32 -2141380902, i32 -2141380848, i32 -2141380793, i32 -2141380762}
!11013 = !DILocation(line: 3084, column: 2, scope: !11014)
!11014 = distinct !DILexicalBlock(scope: !11007, file: !3, line: 3084, column: 2)
!11015 = !{i32 -2141380357, i32 -2141380350, i32 -2141380298, i32 -2141380267, i32 -2141380237}
!11016 = !DILocation(line: 3084, column: 2, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !11007, file: !3, line: 3084, column: 2)
!11018 = !DILocation(line: 3085, column: 26, scope: !10990)
!11019 = !DILocation(line: 3085, column: 32, scope: !10990)
!11020 = !DILocation(line: 3085, column: 2, scope: !10990)
!11021 = !DILocation(line: 3086, column: 1, scope: !10990)
!11022 = distinct !DISubprogram(name: "gpiod_set_value_nocheck", scope: !3, file: !3, line: 3057, type: !10935, scopeLine: 3058, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11023 = !DILocalVariable(name: "desc", arg: 1, scope: !11022, file: !3, line: 3057, type: !4232)
!11024 = !DILocation(line: 3057, column: 55, scope: !11022)
!11025 = !DILocalVariable(name: "value", arg: 2, scope: !11022, file: !3, line: 3057, type: !224)
!11026 = !DILocation(line: 3057, column: 65, scope: !11022)
!11027 = !DILocation(line: 3059, column: 33, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11022, file: !3, line: 3059, column: 6)
!11029 = !DILocation(line: 3059, column: 39, scope: !11028)
!11030 = !DILocation(line: 3059, column: 6, scope: !11028)
!11031 = !DILocation(line: 3059, column: 6, scope: !11022)
!11032 = !DILocation(line: 3060, column: 12, scope: !11028)
!11033 = !DILocation(line: 3060, column: 11, scope: !11028)
!11034 = !DILocation(line: 3060, column: 9, scope: !11028)
!11035 = !DILocation(line: 3060, column: 3, scope: !11028)
!11036 = !DILocation(line: 3061, column: 33, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !11022, file: !3, line: 3061, column: 6)
!11038 = !DILocation(line: 3061, column: 39, scope: !11037)
!11039 = !DILocation(line: 3061, column: 6, scope: !11037)
!11040 = !DILocation(line: 3061, column: 6, scope: !11022)
!11041 = !DILocation(line: 3062, column: 36, scope: !11037)
!11042 = !DILocation(line: 3062, column: 42, scope: !11037)
!11043 = !DILocation(line: 3062, column: 3, scope: !11037)
!11044 = !DILocation(line: 3063, column: 39, scope: !11045)
!11045 = distinct !DILexicalBlock(scope: !11037, file: !3, line: 3063, column: 11)
!11046 = !DILocation(line: 3063, column: 45, scope: !11045)
!11047 = !DILocation(line: 3063, column: 11, scope: !11045)
!11048 = !DILocation(line: 3063, column: 11, scope: !11037)
!11049 = !DILocation(line: 3064, column: 37, scope: !11045)
!11050 = !DILocation(line: 3064, column: 43, scope: !11045)
!11051 = !DILocation(line: 3064, column: 3, scope: !11045)
!11052 = !DILocation(line: 3066, column: 30, scope: !11045)
!11053 = !DILocation(line: 3066, column: 36, scope: !11045)
!11054 = !DILocation(line: 3066, column: 3, scope: !11045)
!11055 = !DILocation(line: 3067, column: 1, scope: !11022)
!11056 = distinct !DISubprogram(name: "gpiod_set_raw_array_value", scope: !3, file: !3, line: 3102, type: !10475, scopeLine: 3106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11057 = !DILocalVariable(name: "array_size", arg: 1, scope: !11056, file: !3, line: 3102, type: !7)
!11058 = !DILocation(line: 3102, column: 44, scope: !11056)
!11059 = !DILocalVariable(name: "desc_array", arg: 2, scope: !11056, file: !3, line: 3103, type: !9643)
!11060 = !DILocation(line: 3103, column: 29, scope: !11056)
!11061 = !DILocalVariable(name: "array_info", arg: 3, scope: !11056, file: !3, line: 3104, type: !9644)
!11062 = !DILocation(line: 3104, column: 29, scope: !11056)
!11063 = !DILocalVariable(name: "value_bitmap", arg: 4, scope: !11056, file: !3, line: 3105, type: !3758)
!11064 = !DILocation(line: 3105, column: 25, scope: !11056)
!11065 = !DILocation(line: 3107, column: 7, scope: !11066)
!11066 = distinct !DILexicalBlock(scope: !11056, file: !3, line: 3107, column: 6)
!11067 = !DILocation(line: 3107, column: 6, scope: !11056)
!11068 = !DILocation(line: 3108, column: 3, scope: !11066)
!11069 = !DILocation(line: 3109, column: 52, scope: !11056)
!11070 = !DILocation(line: 3110, column: 6, scope: !11056)
!11071 = !DILocation(line: 3110, column: 18, scope: !11056)
!11072 = !DILocation(line: 3110, column: 30, scope: !11056)
!11073 = !DILocation(line: 3109, column: 9, scope: !11056)
!11074 = !DILocation(line: 3109, column: 2, scope: !11056)
!11075 = !DILocation(line: 3111, column: 1, scope: !11056)
!11076 = distinct !DISubprogram(name: "gpiod_set_array_value", scope: !3, file: !3, line: 3127, type: !10475, scopeLine: 3131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11077 = !DILocalVariable(name: "array_size", arg: 1, scope: !11076, file: !3, line: 3127, type: !7)
!11078 = !DILocation(line: 3127, column: 40, scope: !11076)
!11079 = !DILocalVariable(name: "desc_array", arg: 2, scope: !11076, file: !3, line: 3128, type: !9643)
!11080 = !DILocation(line: 3128, column: 25, scope: !11076)
!11081 = !DILocalVariable(name: "array_info", arg: 3, scope: !11076, file: !3, line: 3129, type: !9644)
!11082 = !DILocation(line: 3129, column: 25, scope: !11076)
!11083 = !DILocalVariable(name: "value_bitmap", arg: 4, scope: !11076, file: !3, line: 3130, type: !3758)
!11084 = !DILocation(line: 3130, column: 21, scope: !11076)
!11085 = !DILocation(line: 3132, column: 7, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11076, file: !3, line: 3132, column: 6)
!11087 = !DILocation(line: 3132, column: 6, scope: !11076)
!11088 = !DILocation(line: 3133, column: 3, scope: !11086)
!11089 = !DILocation(line: 3134, column: 53, scope: !11076)
!11090 = !DILocation(line: 3135, column: 11, scope: !11076)
!11091 = !DILocation(line: 3135, column: 23, scope: !11076)
!11092 = !DILocation(line: 3136, column: 11, scope: !11076)
!11093 = !DILocation(line: 3134, column: 9, scope: !11076)
!11094 = !DILocation(line: 3134, column: 2, scope: !11076)
!11095 = !DILocation(line: 3137, column: 1, scope: !11076)
!11096 = distinct !DISubprogram(name: "gpiod_cansleep", scope: !3, file: !3, line: 3145, type: !4833, scopeLine: 3146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11097 = !DILocalVariable(name: "desc", arg: 1, scope: !11096, file: !3, line: 3145, type: !4835)
!11098 = !DILocation(line: 3145, column: 44, scope: !11096)
!11099 = !DILocation(line: 3147, column: 2, scope: !11096)
!11100 = !DILocalVariable(name: "__valid", scope: !11101, file: !3, line: 3147, type: !224)
!11101 = distinct !DILexicalBlock(scope: !11096, file: !3, line: 3147, column: 2)
!11102 = !DILocation(line: 3147, column: 2, scope: !11101)
!11103 = !DILocation(line: 3147, column: 2, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11101, file: !3, line: 3147, column: 2)
!11105 = !DILocation(line: 3148, column: 9, scope: !11096)
!11106 = !DILocation(line: 3148, column: 15, scope: !11096)
!11107 = !DILocation(line: 3148, column: 21, scope: !11096)
!11108 = !DILocation(line: 3148, column: 27, scope: !11096)
!11109 = !DILocation(line: 3148, column: 2, scope: !11096)
!11110 = !DILocation(line: 3149, column: 1, scope: !11096)
!11111 = distinct !DISubprogram(name: "gpiod_set_consumer_name", scope: !3, file: !3, line: 3157, type: !8286, scopeLine: 3158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11112 = !DILocalVariable(name: "desc", arg: 1, scope: !11111, file: !3, line: 3157, type: !4232)
!11113 = !DILocation(line: 3157, column: 47, scope: !11111)
!11114 = !DILocalVariable(name: "name", arg: 2, scope: !11111, file: !3, line: 3157, type: !233)
!11115 = !DILocation(line: 3157, column: 65, scope: !11111)
!11116 = !DILocation(line: 3159, column: 2, scope: !11111)
!11117 = !DILocalVariable(name: "__valid", scope: !11118, file: !3, line: 3159, type: !224)
!11118 = distinct !DILexicalBlock(scope: !11111, file: !3, line: 3159, column: 2)
!11119 = !DILocation(line: 3159, column: 2, scope: !11118)
!11120 = !DILocation(line: 3159, column: 2, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11118, file: !3, line: 3159, column: 2)
!11122 = !DILocation(line: 3160, column: 6, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !11111, file: !3, line: 3160, column: 6)
!11124 = !DILocation(line: 3160, column: 6, scope: !11111)
!11125 = !DILocation(line: 3161, column: 24, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11123, file: !3, line: 3160, column: 12)
!11127 = !DILocation(line: 3161, column: 10, scope: !11126)
!11128 = !DILocation(line: 3161, column: 8, scope: !11126)
!11129 = !DILocation(line: 3162, column: 8, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11126, file: !3, line: 3162, column: 7)
!11131 = !DILocation(line: 3162, column: 7, scope: !11126)
!11132 = !DILocation(line: 3163, column: 4, scope: !11130)
!11133 = !DILocation(line: 3164, column: 2, scope: !11126)
!11134 = !DILocation(line: 3166, column: 14, scope: !11111)
!11135 = !DILocation(line: 3166, column: 20, scope: !11111)
!11136 = !DILocation(line: 3166, column: 2, scope: !11111)
!11137 = !DILocation(line: 3167, column: 17, scope: !11111)
!11138 = !DILocation(line: 3167, column: 23, scope: !11111)
!11139 = !DILocation(line: 3167, column: 2, scope: !11111)
!11140 = !DILocation(line: 3169, column: 2, scope: !11111)
!11141 = !DILocation(line: 3170, column: 1, scope: !11111)
!11142 = distinct !DISubprogram(name: "desc_set_label", scope: !3, file: !3, line: 91, type: !11143, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11143 = !DISubroutineType(types: !11144)
!11144 = !{null, !4232, !233}
!11145 = !DILocalVariable(name: "d", arg: 1, scope: !11142, file: !3, line: 91, type: !4232)
!11146 = !DILocation(line: 91, column: 53, scope: !11142)
!11147 = !DILocalVariable(name: "label", arg: 2, scope: !11142, file: !3, line: 91, type: !233)
!11148 = !DILocation(line: 91, column: 68, scope: !11142)
!11149 = !DILocation(line: 93, column: 13, scope: !11142)
!11150 = !DILocation(line: 93, column: 2, scope: !11142)
!11151 = !DILocation(line: 93, column: 5, scope: !11142)
!11152 = !DILocation(line: 93, column: 11, scope: !11142)
!11153 = !DILocation(line: 94, column: 1, scope: !11142)
!11154 = distinct !DISubprogram(name: "gpiod_to_irq", scope: !3, file: !3, line: 3180, type: !4833, scopeLine: 3181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11155 = !DILocalVariable(name: "desc", arg: 1, scope: !11154, file: !3, line: 3180, type: !4835)
!11156 = !DILocation(line: 3180, column: 42, scope: !11154)
!11157 = !DILocalVariable(name: "gc", scope: !11154, file: !3, line: 3182, type: !4096)
!11158 = !DILocation(line: 3182, column: 20, scope: !11154)
!11159 = !DILocalVariable(name: "offset", scope: !11154, file: !3, line: 3183, type: !224)
!11160 = !DILocation(line: 3183, column: 6, scope: !11154)
!11161 = !DILocation(line: 3190, column: 7, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !11154, file: !3, line: 3190, column: 6)
!11163 = !DILocation(line: 3190, column: 12, scope: !11162)
!11164 = !DILocation(line: 3190, column: 22, scope: !11162)
!11165 = !DILocation(line: 3190, column: 15, scope: !11162)
!11166 = !DILocation(line: 3190, column: 28, scope: !11162)
!11167 = !DILocation(line: 3190, column: 32, scope: !11162)
!11168 = !DILocation(line: 3190, column: 38, scope: !11162)
!11169 = !DILocation(line: 3190, column: 43, scope: !11162)
!11170 = !DILocation(line: 3190, column: 47, scope: !11162)
!11171 = !DILocation(line: 3190, column: 53, scope: !11162)
!11172 = !DILocation(line: 3190, column: 59, scope: !11162)
!11173 = !DILocation(line: 3190, column: 6, scope: !11154)
!11174 = !DILocation(line: 3191, column: 3, scope: !11162)
!11175 = !DILocation(line: 3193, column: 7, scope: !11154)
!11176 = !DILocation(line: 3193, column: 13, scope: !11154)
!11177 = !DILocation(line: 3193, column: 19, scope: !11154)
!11178 = !DILocation(line: 3193, column: 5, scope: !11154)
!11179 = !DILocation(line: 3194, column: 28, scope: !11154)
!11180 = !DILocation(line: 3194, column: 11, scope: !11154)
!11181 = !DILocation(line: 3194, column: 9, scope: !11154)
!11182 = !DILocation(line: 3195, column: 6, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11154, file: !3, line: 3195, column: 6)
!11184 = !DILocation(line: 3195, column: 10, scope: !11183)
!11185 = !DILocation(line: 3195, column: 6, scope: !11154)
!11186 = !DILocalVariable(name: "retirq", scope: !11187, file: !3, line: 3196, type: !224)
!11187 = distinct !DILexicalBlock(scope: !11183, file: !3, line: 3195, column: 18)
!11188 = !DILocation(line: 3196, column: 7, scope: !11187)
!11189 = !DILocation(line: 3196, column: 16, scope: !11187)
!11190 = !DILocation(line: 3196, column: 20, scope: !11187)
!11191 = !DILocation(line: 3196, column: 27, scope: !11187)
!11192 = !DILocation(line: 3196, column: 31, scope: !11187)
!11193 = !DILocation(line: 3199, column: 8, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !11187, file: !3, line: 3199, column: 7)
!11195 = !DILocation(line: 3199, column: 7, scope: !11187)
!11196 = !DILocation(line: 3200, column: 4, scope: !11194)
!11197 = !DILocation(line: 3202, column: 10, scope: !11187)
!11198 = !DILocation(line: 3202, column: 3, scope: !11187)
!11199 = !DILocation(line: 3204, column: 2, scope: !11154)
!11200 = !DILocation(line: 3205, column: 1, scope: !11154)
!11201 = distinct !DISubprogram(name: "PTR_ERR", scope: !4824, file: !4824, line: 29, type: !11202, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11202 = !DISubroutineType(types: !11203)
!11203 = !{!327, !2145}
!11204 = !DILocalVariable(name: "ptr", arg: 1, scope: !11201, file: !4824, line: 29, type: !2145)
!11205 = !DILocation(line: 29, column: 61, scope: !11201)
!11206 = !DILocation(line: 31, column: 16, scope: !11201)
!11207 = !DILocation(line: 31, column: 9, scope: !11201)
!11208 = !DILocation(line: 31, column: 2, scope: !11201)
!11209 = distinct !DISubprogram(name: "gpiochip_disable_irq", scope: !3, file: !3, line: 3287, type: !4110, scopeLine: 3288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11210 = !DILocalVariable(name: "gc", arg: 1, scope: !11209, file: !3, line: 3287, type: !4096)
!11211 = !DILocation(line: 3287, column: 45, scope: !11209)
!11212 = !DILocalVariable(name: "offset", arg: 2, scope: !11209, file: !3, line: 3287, type: !7)
!11213 = !DILocation(line: 3287, column: 62, scope: !11209)
!11214 = !DILocalVariable(name: "desc", scope: !11209, file: !3, line: 3289, type: !4232)
!11215 = !DILocation(line: 3289, column: 20, scope: !11209)
!11216 = !DILocation(line: 3289, column: 45, scope: !11209)
!11217 = !DILocation(line: 3289, column: 49, scope: !11209)
!11218 = !DILocation(line: 3289, column: 27, scope: !11209)
!11219 = !DILocation(line: 3291, column: 14, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11209, file: !3, line: 3291, column: 6)
!11221 = !DILocation(line: 3291, column: 7, scope: !11220)
!11222 = !DILocation(line: 3291, column: 20, scope: !11220)
!11223 = !DILocalVariable(name: "__ret_warn_on", scope: !11224, file: !3, line: 3292, type: !224)
!11224 = distinct !DILexicalBlock(scope: !11220, file: !3, line: 3292, column: 7)
!11225 = !DILocation(line: 3292, column: 7, scope: !11224)
!11226 = !DILocation(line: 3292, column: 7, scope: !11227)
!11227 = distinct !DILexicalBlock(scope: !11224, file: !3, line: 3292, column: 7)
!11228 = !DILocation(line: 3292, column: 7, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11227, file: !3, line: 3292, column: 7)
!11230 = !DILocation(line: 3292, column: 7, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 3292, column: 7)
!11232 = !DILocation(line: 3292, column: 7, scope: !11233)
!11233 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 3292, column: 7)
!11234 = !{i32 -2141377711, i32 -2141377682, i32 -2141377636, i32 -2141377578, i32 -2141377524, i32 -2141377470, i32 -2141377415, i32 -2141377384}
!11235 = !DILocation(line: 3292, column: 7, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 3292, column: 7)
!11237 = !{i32 -2141376979, i32 -2141376972, i32 -2141376920, i32 -2141376889, i32 -2141376859}
!11238 = !DILocation(line: 3292, column: 7, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 3292, column: 7)
!11240 = !DILocation(line: 3292, column: 7, scope: !11220)
!11241 = !DILocation(line: 3291, column: 6, scope: !11209)
!11242 = !DILocation(line: 3293, column: 35, scope: !11220)
!11243 = !DILocation(line: 3293, column: 41, scope: !11220)
!11244 = !DILocation(line: 3293, column: 3, scope: !11220)
!11245 = !DILocation(line: 3294, column: 1, scope: !11209)
!11246 = distinct !DISubprogram(name: "gpiochip_enable_irq", scope: !3, file: !3, line: 3297, type: !4110, scopeLine: 3298, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11247 = !DILocalVariable(name: "gc", arg: 1, scope: !11246, file: !3, line: 3297, type: !4096)
!11248 = !DILocation(line: 3297, column: 44, scope: !11246)
!11249 = !DILocalVariable(name: "offset", arg: 2, scope: !11246, file: !3, line: 3297, type: !7)
!11250 = !DILocation(line: 3297, column: 61, scope: !11246)
!11251 = !DILocalVariable(name: "desc", scope: !11246, file: !3, line: 3299, type: !4232)
!11252 = !DILocation(line: 3299, column: 20, scope: !11246)
!11253 = !DILocation(line: 3299, column: 45, scope: !11246)
!11254 = !DILocation(line: 3299, column: 49, scope: !11246)
!11255 = !DILocation(line: 3299, column: 27, scope: !11246)
!11256 = !DILocation(line: 3301, column: 14, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11246, file: !3, line: 3301, column: 6)
!11258 = !DILocation(line: 3301, column: 7, scope: !11257)
!11259 = !DILocation(line: 3301, column: 20, scope: !11257)
!11260 = !DILocalVariable(name: "__ret_warn_on", scope: !11261, file: !3, line: 3302, type: !224)
!11261 = distinct !DILexicalBlock(scope: !11257, file: !3, line: 3302, column: 7)
!11262 = !DILocation(line: 3302, column: 7, scope: !11261)
!11263 = !DILocation(line: 3302, column: 7, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11261, file: !3, line: 3302, column: 7)
!11265 = !DILocation(line: 3302, column: 7, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11264, file: !3, line: 3302, column: 7)
!11267 = !DILocation(line: 3302, column: 7, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11266, file: !3, line: 3302, column: 7)
!11269 = !DILocation(line: 3302, column: 7, scope: !11270)
!11270 = distinct !DILexicalBlock(scope: !11266, file: !3, line: 3302, column: 7)
!11271 = !{i32 -2141376147, i32 -2141376118, i32 -2141376072, i32 -2141376014, i32 -2141375960, i32 -2141375906, i32 -2141375851, i32 -2141375820}
!11272 = !DILocation(line: 3302, column: 7, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11266, file: !3, line: 3302, column: 7)
!11274 = !{i32 -2141375415, i32 -2141375408, i32 -2141375356, i32 -2141375325, i32 -2141375295}
!11275 = !DILocation(line: 3302, column: 7, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11266, file: !3, line: 3302, column: 7)
!11277 = !DILocation(line: 3302, column: 7, scope: !11257)
!11278 = !DILocation(line: 3301, column: 6, scope: !11246)
!11279 = !DILocalVariable(name: "__ret_warn_on", scope: !11280, file: !3, line: 3307, type: !224)
!11280 = distinct !DILexicalBlock(scope: !11281, file: !3, line: 3307, column: 3)
!11281 = distinct !DILexicalBlock(scope: !11257, file: !3, line: 3302, column: 59)
!11282 = !DILocation(line: 3307, column: 3, scope: !11280)
!11283 = !DILocation(line: 0, scope: !11280)
!11284 = !DILocation(line: 3307, column: 3, scope: !11285)
!11285 = distinct !DILexicalBlock(scope: !11280, file: !3, line: 3307, column: 3)
!11286 = !DILocation(line: 3307, column: 3, scope: !11287)
!11287 = distinct !DILexicalBlock(scope: !11285, file: !3, line: 3307, column: 3)
!11288 = !DILocation(line: 3307, column: 3, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11287, file: !3, line: 3307, column: 3)
!11290 = !DILocation(line: 3307, column: 3, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11287, file: !3, line: 3307, column: 3)
!11292 = !{i32 -2141374657, i32 -2141374628, i32 -2141374582, i32 -2141374524, i32 -2141374470, i32 -2141374416, i32 -2141374361, i32 -2141374330}
!11293 = !DILocation(line: 3307, column: 3, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11287, file: !3, line: 3307, column: 3)
!11295 = !{i32 -2141373925, i32 -2141373918, i32 -2141373866, i32 -2141373835, i32 -2141373805}
!11296 = !DILocation(line: 3307, column: 3, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11287, file: !3, line: 3307, column: 3)
!11298 = !DILocation(line: 3309, column: 33, scope: !11281)
!11299 = !DILocation(line: 3309, column: 39, scope: !11281)
!11300 = !DILocation(line: 3309, column: 3, scope: !11281)
!11301 = !DILocation(line: 3310, column: 2, scope: !11281)
!11302 = !DILocation(line: 3311, column: 1, scope: !11246)
!11303 = distinct !DISubprogram(name: "gpiochip_line_is_irq", scope: !3, file: !3, line: 3314, type: !11304, scopeLine: 3315, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11304 = !DISubroutineType(types: !11305)
!11305 = !{!508, !4096, !7}
!11306 = !DILocalVariable(name: "gc", arg: 1, scope: !11303, file: !3, line: 3314, type: !4096)
!11307 = !DILocation(line: 3314, column: 45, scope: !11303)
!11308 = !DILocalVariable(name: "offset", arg: 2, scope: !11303, file: !3, line: 3314, type: !7)
!11309 = !DILocation(line: 3314, column: 62, scope: !11303)
!11310 = !DILocation(line: 3316, column: 6, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11303, file: !3, line: 3316, column: 6)
!11312 = !DILocation(line: 3316, column: 16, scope: !11311)
!11313 = !DILocation(line: 3316, column: 20, scope: !11311)
!11314 = !DILocation(line: 3316, column: 13, scope: !11311)
!11315 = !DILocation(line: 3316, column: 6, scope: !11303)
!11316 = !DILocation(line: 3317, column: 3, scope: !11311)
!11317 = !DILocation(line: 3319, column: 37, scope: !11303)
!11318 = !DILocation(line: 3319, column: 41, scope: !11303)
!11319 = !DILocation(line: 3319, column: 50, scope: !11303)
!11320 = !DILocation(line: 3319, column: 56, scope: !11303)
!11321 = !DILocation(line: 3319, column: 64, scope: !11303)
!11322 = !DILocation(line: 3319, column: 9, scope: !11303)
!11323 = !DILocation(line: 3319, column: 2, scope: !11303)
!11324 = !DILocation(line: 3320, column: 1, scope: !11303)
!11325 = distinct !DISubprogram(name: "gpiochip_reqres_irq", scope: !3, file: !3, line: 3323, type: !4106, scopeLine: 3324, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11326 = !DILocalVariable(name: "gc", arg: 1, scope: !11325, file: !3, line: 3323, type: !4096)
!11327 = !DILocation(line: 3323, column: 43, scope: !11325)
!11328 = !DILocalVariable(name: "offset", arg: 2, scope: !11325, file: !3, line: 3323, type: !7)
!11329 = !DILocation(line: 3323, column: 60, scope: !11325)
!11330 = !DILocalVariable(name: "ret", scope: !11325, file: !3, line: 3325, type: !224)
!11331 = !DILocation(line: 3325, column: 6, scope: !11325)
!11332 = !DILocation(line: 3327, column: 22, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11325, file: !3, line: 3327, column: 6)
!11334 = !DILocation(line: 3327, column: 26, scope: !11333)
!11335 = !DILocation(line: 3327, column: 35, scope: !11333)
!11336 = !DILocation(line: 3327, column: 7, scope: !11333)
!11337 = !DILocation(line: 3327, column: 6, scope: !11325)
!11338 = !DILocation(line: 3328, column: 3, scope: !11333)
!11339 = !DILocation(line: 3330, column: 29, scope: !11325)
!11340 = !DILocation(line: 3330, column: 33, scope: !11325)
!11341 = !DILocation(line: 3330, column: 8, scope: !11325)
!11342 = !DILocation(line: 3330, column: 6, scope: !11325)
!11343 = !DILocation(line: 3331, column: 6, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11325, file: !3, line: 3331, column: 6)
!11345 = !DILocation(line: 3331, column: 6, scope: !11325)
!11346 = !DILocation(line: 3332, column: 3, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11344, file: !3, line: 3331, column: 11)
!11348 = !DILocation(line: 3333, column: 14, scope: !11347)
!11349 = !DILocation(line: 3333, column: 18, scope: !11347)
!11350 = !DILocation(line: 3333, column: 27, scope: !11347)
!11351 = !DILocation(line: 3333, column: 3, scope: !11347)
!11352 = !DILocation(line: 3334, column: 10, scope: !11347)
!11353 = !DILocation(line: 3334, column: 3, scope: !11347)
!11354 = !DILocation(line: 3336, column: 2, scope: !11325)
!11355 = !DILocation(line: 3337, column: 1, scope: !11325)
!11356 = distinct !DISubprogram(name: "gpiochip_relres_irq", scope: !3, file: !3, line: 3340, type: !4110, scopeLine: 3341, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11357 = !DILocalVariable(name: "gc", arg: 1, scope: !11356, file: !3, line: 3340, type: !4096)
!11358 = !DILocation(line: 3340, column: 44, scope: !11356)
!11359 = !DILocalVariable(name: "offset", arg: 2, scope: !11356, file: !3, line: 3340, type: !7)
!11360 = !DILocation(line: 3340, column: 61, scope: !11356)
!11361 = !DILocation(line: 3342, column: 25, scope: !11356)
!11362 = !DILocation(line: 3342, column: 29, scope: !11356)
!11363 = !DILocation(line: 3342, column: 2, scope: !11356)
!11364 = !DILocation(line: 3343, column: 13, scope: !11356)
!11365 = !DILocation(line: 3343, column: 17, scope: !11356)
!11366 = !DILocation(line: 3343, column: 26, scope: !11356)
!11367 = !DILocation(line: 3343, column: 2, scope: !11356)
!11368 = !DILocation(line: 3344, column: 1, scope: !11356)
!11369 = distinct !DISubprogram(name: "gpiochip_line_is_open_drain", scope: !3, file: !3, line: 3347, type: !11304, scopeLine: 3348, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11370 = !DILocalVariable(name: "gc", arg: 1, scope: !11369, file: !3, line: 3347, type: !4096)
!11371 = !DILocation(line: 3347, column: 52, scope: !11369)
!11372 = !DILocalVariable(name: "offset", arg: 2, scope: !11369, file: !3, line: 3347, type: !7)
!11373 = !DILocation(line: 3347, column: 69, scope: !11369)
!11374 = !DILocation(line: 3349, column: 6, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11369, file: !3, line: 3349, column: 6)
!11376 = !DILocation(line: 3349, column: 16, scope: !11375)
!11377 = !DILocation(line: 3349, column: 20, scope: !11375)
!11378 = !DILocation(line: 3349, column: 13, scope: !11375)
!11379 = !DILocation(line: 3349, column: 6, scope: !11369)
!11380 = !DILocation(line: 3350, column: 3, scope: !11375)
!11381 = !DILocation(line: 3352, column: 36, scope: !11369)
!11382 = !DILocation(line: 3352, column: 40, scope: !11369)
!11383 = !DILocation(line: 3352, column: 49, scope: !11369)
!11384 = !DILocation(line: 3352, column: 55, scope: !11369)
!11385 = !DILocation(line: 3352, column: 63, scope: !11369)
!11386 = !DILocation(line: 3352, column: 9, scope: !11369)
!11387 = !DILocation(line: 3352, column: 2, scope: !11369)
!11388 = !DILocation(line: 3353, column: 1, scope: !11369)
!11389 = distinct !DISubprogram(name: "gpiochip_line_is_open_source", scope: !3, file: !3, line: 3356, type: !11304, scopeLine: 3357, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11390 = !DILocalVariable(name: "gc", arg: 1, scope: !11389, file: !3, line: 3356, type: !4096)
!11391 = !DILocation(line: 3356, column: 53, scope: !11389)
!11392 = !DILocalVariable(name: "offset", arg: 2, scope: !11389, file: !3, line: 3356, type: !7)
!11393 = !DILocation(line: 3356, column: 70, scope: !11389)
!11394 = !DILocation(line: 3358, column: 6, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !11389, file: !3, line: 3358, column: 6)
!11396 = !DILocation(line: 3358, column: 16, scope: !11395)
!11397 = !DILocation(line: 3358, column: 20, scope: !11395)
!11398 = !DILocation(line: 3358, column: 13, scope: !11395)
!11399 = !DILocation(line: 3358, column: 6, scope: !11389)
!11400 = !DILocation(line: 3359, column: 3, scope: !11395)
!11401 = !DILocation(line: 3361, column: 37, scope: !11389)
!11402 = !DILocation(line: 3361, column: 41, scope: !11389)
!11403 = !DILocation(line: 3361, column: 50, scope: !11389)
!11404 = !DILocation(line: 3361, column: 56, scope: !11389)
!11405 = !DILocation(line: 3361, column: 64, scope: !11389)
!11406 = !DILocation(line: 3361, column: 9, scope: !11389)
!11407 = !DILocation(line: 3361, column: 2, scope: !11389)
!11408 = !DILocation(line: 3362, column: 1, scope: !11389)
!11409 = distinct !DISubprogram(name: "gpiochip_line_is_persistent", scope: !3, file: !3, line: 3365, type: !11304, scopeLine: 3366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11410 = !DILocalVariable(name: "gc", arg: 1, scope: !11409, file: !3, line: 3365, type: !4096)
!11411 = !DILocation(line: 3365, column: 52, scope: !11409)
!11412 = !DILocalVariable(name: "offset", arg: 2, scope: !11409, file: !3, line: 3365, type: !7)
!11413 = !DILocation(line: 3365, column: 69, scope: !11409)
!11414 = !DILocation(line: 3367, column: 6, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11409, file: !3, line: 3367, column: 6)
!11416 = !DILocation(line: 3367, column: 16, scope: !11415)
!11417 = !DILocation(line: 3367, column: 20, scope: !11415)
!11418 = !DILocation(line: 3367, column: 13, scope: !11415)
!11419 = !DILocation(line: 3367, column: 6, scope: !11409)
!11420 = !DILocation(line: 3368, column: 3, scope: !11415)
!11421 = !DILocation(line: 3370, column: 37, scope: !11409)
!11422 = !DILocation(line: 3370, column: 41, scope: !11409)
!11423 = !DILocation(line: 3370, column: 50, scope: !11409)
!11424 = !DILocation(line: 3370, column: 56, scope: !11409)
!11425 = !DILocation(line: 3370, column: 64, scope: !11409)
!11426 = !DILocation(line: 3370, column: 10, scope: !11409)
!11427 = !DILocation(line: 3370, column: 9, scope: !11409)
!11428 = !DILocation(line: 3370, column: 2, scope: !11409)
!11429 = !DILocation(line: 3371, column: 1, scope: !11409)
!11430 = distinct !DISubprogram(name: "gpiod_get_raw_value_cansleep", scope: !3, file: !3, line: 3383, type: !4833, scopeLine: 3384, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11431 = !DILocalVariable(name: "desc", arg: 1, scope: !11430, file: !3, line: 3383, type: !4835)
!11432 = !DILocation(line: 3383, column: 58, scope: !11430)
!11433 = !DILocation(line: 3385, column: 2, scope: !11430)
!11434 = !DILocation(line: 3385, column: 2, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11430, file: !3, line: 3385, column: 2)
!11436 = !DILocation(line: 3386, column: 2, scope: !11430)
!11437 = !DILocalVariable(name: "__valid", scope: !11438, file: !3, line: 3386, type: !224)
!11438 = distinct !DILexicalBlock(scope: !11430, file: !3, line: 3386, column: 2)
!11439 = !DILocation(line: 3386, column: 2, scope: !11438)
!11440 = !DILocation(line: 3386, column: 2, scope: !11441)
!11441 = distinct !DILexicalBlock(scope: !11438, file: !3, line: 3386, column: 2)
!11442 = !DILocation(line: 3387, column: 36, scope: !11430)
!11443 = !DILocation(line: 3387, column: 9, scope: !11430)
!11444 = !DILocation(line: 3387, column: 2, scope: !11430)
!11445 = !DILocation(line: 3388, column: 1, scope: !11430)
!11446 = distinct !DISubprogram(name: "gpiod_get_value_cansleep", scope: !3, file: !3, line: 3400, type: !4833, scopeLine: 3401, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11447 = !DILocalVariable(name: "desc", arg: 1, scope: !11446, file: !3, line: 3400, type: !4835)
!11448 = !DILocation(line: 3400, column: 54, scope: !11446)
!11449 = !DILocalVariable(name: "value", scope: !11446, file: !3, line: 3402, type: !224)
!11450 = !DILocation(line: 3402, column: 6, scope: !11446)
!11451 = !DILocation(line: 3404, column: 2, scope: !11446)
!11452 = !DILocation(line: 3404, column: 2, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11446, file: !3, line: 3404, column: 2)
!11454 = !DILocation(line: 3405, column: 2, scope: !11446)
!11455 = !DILocalVariable(name: "__valid", scope: !11456, file: !3, line: 3405, type: !224)
!11456 = distinct !DILexicalBlock(scope: !11446, file: !3, line: 3405, column: 2)
!11457 = !DILocation(line: 3405, column: 2, scope: !11456)
!11458 = !DILocation(line: 3405, column: 2, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11456, file: !3, line: 3405, column: 2)
!11460 = !DILocation(line: 3406, column: 37, scope: !11446)
!11461 = !DILocation(line: 3406, column: 10, scope: !11446)
!11462 = !DILocation(line: 3406, column: 8, scope: !11446)
!11463 = !DILocation(line: 3407, column: 6, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11446, file: !3, line: 3407, column: 6)
!11465 = !DILocation(line: 3407, column: 12, scope: !11464)
!11466 = !DILocation(line: 3407, column: 6, scope: !11446)
!11467 = !DILocation(line: 3408, column: 10, scope: !11464)
!11468 = !DILocation(line: 3408, column: 3, scope: !11464)
!11469 = !DILocation(line: 3410, column: 33, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11446, file: !3, line: 3410, column: 6)
!11471 = !DILocation(line: 3410, column: 39, scope: !11470)
!11472 = !DILocation(line: 3410, column: 6, scope: !11470)
!11473 = !DILocation(line: 3410, column: 6, scope: !11446)
!11474 = !DILocation(line: 3411, column: 12, scope: !11470)
!11475 = !DILocation(line: 3411, column: 11, scope: !11470)
!11476 = !DILocation(line: 3411, column: 9, scope: !11470)
!11477 = !DILocation(line: 3411, column: 3, scope: !11470)
!11478 = !DILocation(line: 3413, column: 9, scope: !11446)
!11479 = !DILocation(line: 3413, column: 2, scope: !11446)
!11480 = !DILocation(line: 3414, column: 1, scope: !11446)
!11481 = distinct !DISubprogram(name: "gpiod_get_raw_array_value_cansleep", scope: !3, file: !3, line: 3430, type: !10475, scopeLine: 3434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11482 = !DILocalVariable(name: "array_size", arg: 1, scope: !11481, file: !3, line: 3430, type: !7)
!11483 = !DILocation(line: 3430, column: 53, scope: !11481)
!11484 = !DILocalVariable(name: "desc_array", arg: 2, scope: !11481, file: !3, line: 3431, type: !9643)
!11485 = !DILocation(line: 3431, column: 31, scope: !11481)
!11486 = !DILocalVariable(name: "array_info", arg: 3, scope: !11481, file: !3, line: 3432, type: !9644)
!11487 = !DILocation(line: 3432, column: 31, scope: !11481)
!11488 = !DILocalVariable(name: "value_bitmap", arg: 4, scope: !11481, file: !3, line: 3433, type: !3758)
!11489 = !DILocation(line: 3433, column: 27, scope: !11481)
!11490 = !DILocation(line: 3435, column: 2, scope: !11481)
!11491 = !DILocation(line: 3435, column: 2, scope: !11492)
!11492 = distinct !DILexicalBlock(scope: !11481, file: !3, line: 3435, column: 2)
!11493 = !DILocation(line: 3436, column: 7, scope: !11494)
!11494 = distinct !DILexicalBlock(scope: !11481, file: !3, line: 3436, column: 6)
!11495 = !DILocation(line: 3436, column: 6, scope: !11481)
!11496 = !DILocation(line: 3437, column: 3, scope: !11494)
!11497 = !DILocation(line: 3438, column: 51, scope: !11481)
!11498 = !DILocation(line: 3439, column: 11, scope: !11481)
!11499 = !DILocation(line: 3439, column: 23, scope: !11481)
!11500 = !DILocation(line: 3440, column: 11, scope: !11481)
!11501 = !DILocation(line: 3438, column: 9, scope: !11481)
!11502 = !DILocation(line: 3438, column: 2, scope: !11481)
!11503 = !DILocation(line: 3441, column: 1, scope: !11481)
!11504 = distinct !DISubprogram(name: "gpiod_get_array_value_cansleep", scope: !3, file: !3, line: 3456, type: !10475, scopeLine: 3460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11505 = !DILocalVariable(name: "array_size", arg: 1, scope: !11504, file: !3, line: 3456, type: !7)
!11506 = !DILocation(line: 3456, column: 49, scope: !11504)
!11507 = !DILocalVariable(name: "desc_array", arg: 2, scope: !11504, file: !3, line: 3457, type: !9643)
!11508 = !DILocation(line: 3457, column: 27, scope: !11504)
!11509 = !DILocalVariable(name: "array_info", arg: 3, scope: !11504, file: !3, line: 3458, type: !9644)
!11510 = !DILocation(line: 3458, column: 27, scope: !11504)
!11511 = !DILocalVariable(name: "value_bitmap", arg: 4, scope: !11504, file: !3, line: 3459, type: !3758)
!11512 = !DILocation(line: 3459, column: 23, scope: !11504)
!11513 = !DILocation(line: 3461, column: 2, scope: !11504)
!11514 = !DILocation(line: 3461, column: 2, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11504, file: !3, line: 3461, column: 2)
!11516 = !DILocation(line: 3462, column: 7, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11504, file: !3, line: 3462, column: 6)
!11518 = !DILocation(line: 3462, column: 6, scope: !11504)
!11519 = !DILocation(line: 3463, column: 3, scope: !11517)
!11520 = !DILocation(line: 3464, column: 52, scope: !11504)
!11521 = !DILocation(line: 3465, column: 11, scope: !11504)
!11522 = !DILocation(line: 3465, column: 23, scope: !11504)
!11523 = !DILocation(line: 3466, column: 11, scope: !11504)
!11524 = !DILocation(line: 3464, column: 9, scope: !11504)
!11525 = !DILocation(line: 3464, column: 2, scope: !11504)
!11526 = !DILocation(line: 3467, column: 1, scope: !11504)
!11527 = distinct !DISubprogram(name: "gpiod_set_raw_value_cansleep", scope: !3, file: !3, line: 3480, type: !10935, scopeLine: 3481, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11528 = !DILocalVariable(name: "desc", arg: 1, scope: !11527, file: !3, line: 3480, type: !4232)
!11529 = !DILocation(line: 3480, column: 53, scope: !11527)
!11530 = !DILocalVariable(name: "value", arg: 2, scope: !11527, file: !3, line: 3480, type: !224)
!11531 = !DILocation(line: 3480, column: 63, scope: !11527)
!11532 = !DILocation(line: 3482, column: 2, scope: !11527)
!11533 = !DILocation(line: 3482, column: 2, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11527, file: !3, line: 3482, column: 2)
!11535 = !DILocation(line: 3483, column: 2, scope: !11527)
!11536 = !DILocalVariable(name: "__valid", scope: !11537, file: !3, line: 3483, type: !224)
!11537 = distinct !DILexicalBlock(scope: !11527, file: !3, line: 3483, column: 2)
!11538 = !DILocation(line: 3483, column: 2, scope: !11537)
!11539 = !DILocation(line: 3483, column: 2, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11537, file: !3, line: 3483, column: 2)
!11541 = !DILocation(line: 3484, column: 29, scope: !11527)
!11542 = !DILocation(line: 3484, column: 35, scope: !11527)
!11543 = !DILocation(line: 3484, column: 2, scope: !11527)
!11544 = !DILocation(line: 3485, column: 1, scope: !11527)
!11545 = distinct !DISubprogram(name: "gpiod_set_value_cansleep", scope: !3, file: !3, line: 3498, type: !10935, scopeLine: 3499, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11546 = !DILocalVariable(name: "desc", arg: 1, scope: !11545, file: !3, line: 3498, type: !4232)
!11547 = !DILocation(line: 3498, column: 49, scope: !11545)
!11548 = !DILocalVariable(name: "value", arg: 2, scope: !11545, file: !3, line: 3498, type: !224)
!11549 = !DILocation(line: 3498, column: 59, scope: !11545)
!11550 = !DILocation(line: 3500, column: 2, scope: !11545)
!11551 = !DILocation(line: 3500, column: 2, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 3500, column: 2)
!11553 = !DILocation(line: 3501, column: 2, scope: !11545)
!11554 = !DILocalVariable(name: "__valid", scope: !11555, file: !3, line: 3501, type: !224)
!11555 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 3501, column: 2)
!11556 = !DILocation(line: 3501, column: 2, scope: !11555)
!11557 = !DILocation(line: 3501, column: 2, scope: !11558)
!11558 = distinct !DILexicalBlock(scope: !11555, file: !3, line: 3501, column: 2)
!11559 = !DILocation(line: 3502, column: 26, scope: !11545)
!11560 = !DILocation(line: 3502, column: 32, scope: !11545)
!11561 = !DILocation(line: 3502, column: 2, scope: !11545)
!11562 = !DILocation(line: 3503, column: 1, scope: !11545)
!11563 = distinct !DISubprogram(name: "gpiod_set_raw_array_value_cansleep", scope: !3, file: !3, line: 3518, type: !10475, scopeLine: 3522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11564 = !DILocalVariable(name: "array_size", arg: 1, scope: !11563, file: !3, line: 3518, type: !7)
!11565 = !DILocation(line: 3518, column: 53, scope: !11563)
!11566 = !DILocalVariable(name: "desc_array", arg: 2, scope: !11563, file: !3, line: 3519, type: !9643)
!11567 = !DILocation(line: 3519, column: 31, scope: !11563)
!11568 = !DILocalVariable(name: "array_info", arg: 3, scope: !11563, file: !3, line: 3520, type: !9644)
!11569 = !DILocation(line: 3520, column: 31, scope: !11563)
!11570 = !DILocalVariable(name: "value_bitmap", arg: 4, scope: !11563, file: !3, line: 3521, type: !3758)
!11571 = !DILocation(line: 3521, column: 27, scope: !11563)
!11572 = !DILocation(line: 3523, column: 2, scope: !11563)
!11573 = !DILocation(line: 3523, column: 2, scope: !11574)
!11574 = distinct !DILexicalBlock(scope: !11563, file: !3, line: 3523, column: 2)
!11575 = !DILocation(line: 3524, column: 7, scope: !11576)
!11576 = distinct !DILexicalBlock(scope: !11563, file: !3, line: 3524, column: 6)
!11577 = !DILocation(line: 3524, column: 6, scope: !11563)
!11578 = !DILocation(line: 3525, column: 3, scope: !11576)
!11579 = !DILocation(line: 3526, column: 51, scope: !11563)
!11580 = !DILocation(line: 3526, column: 63, scope: !11563)
!11581 = !DILocation(line: 3527, column: 11, scope: !11563)
!11582 = !DILocation(line: 3527, column: 23, scope: !11563)
!11583 = !DILocation(line: 3526, column: 9, scope: !11563)
!11584 = !DILocation(line: 3526, column: 2, scope: !11563)
!11585 = !DILocation(line: 3528, column: 1, scope: !11563)
!11586 = distinct !DISubprogram(name: "gpiod_add_lookup_tables", scope: !3, file: !3, line: 3536, type: !11587, scopeLine: 3537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11587 = !DISubroutineType(types: !11588)
!11588 = !{null, !11589, !339}
!11589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4571, size: 64)
!11590 = !DILocalVariable(name: "tables", arg: 1, scope: !11586, file: !3, line: 3536, type: !11589)
!11591 = !DILocation(line: 3536, column: 58, scope: !11586)
!11592 = !DILocalVariable(name: "n", arg: 2, scope: !11586, file: !3, line: 3536, type: !339)
!11593 = !DILocation(line: 3536, column: 73, scope: !11586)
!11594 = !DILocalVariable(name: "i", scope: !11586, file: !3, line: 3538, type: !7)
!11595 = !DILocation(line: 3538, column: 15, scope: !11586)
!11596 = !DILocation(line: 3540, column: 2, scope: !11586)
!11597 = !DILocation(line: 3542, column: 9, scope: !11598)
!11598 = distinct !DILexicalBlock(scope: !11586, file: !3, line: 3542, column: 2)
!11599 = !DILocation(line: 3542, column: 7, scope: !11598)
!11600 = !DILocation(line: 3542, column: 14, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11598, file: !3, line: 3542, column: 2)
!11602 = !DILocation(line: 3542, column: 18, scope: !11601)
!11603 = !DILocation(line: 3542, column: 16, scope: !11601)
!11604 = !DILocation(line: 3542, column: 2, scope: !11598)
!11605 = !DILocation(line: 3543, column: 18, scope: !11601)
!11606 = !DILocation(line: 3543, column: 25, scope: !11601)
!11607 = !DILocation(line: 3543, column: 29, scope: !11601)
!11608 = !DILocation(line: 3543, column: 3, scope: !11601)
!11609 = !DILocation(line: 3542, column: 22, scope: !11601)
!11610 = !DILocation(line: 3542, column: 2, scope: !11601)
!11611 = distinct !{!11611, !11604, !11612}
!11612 = !DILocation(line: 3543, column: 52, scope: !11598)
!11613 = !DILocation(line: 3545, column: 2, scope: !11586)
!11614 = !DILocation(line: 3546, column: 1, scope: !11586)
!11615 = distinct !DISubprogram(name: "list_add_tail", scope: !6766, file: !6766, line: 98, type: !11616, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11616 = !DISubroutineType(types: !11617)
!11617 = !{null, !241, !241}
!11618 = !DILocalVariable(name: "new", arg: 1, scope: !11615, file: !6766, line: 98, type: !241)
!11619 = !DILocation(line: 98, column: 52, scope: !11615)
!11620 = !DILocalVariable(name: "head", arg: 2, scope: !11615, file: !6766, line: 98, type: !241)
!11621 = !DILocation(line: 98, column: 75, scope: !11615)
!11622 = !DILocation(line: 100, column: 13, scope: !11615)
!11623 = !DILocation(line: 100, column: 18, scope: !11615)
!11624 = !DILocation(line: 100, column: 24, scope: !11615)
!11625 = !DILocation(line: 100, column: 30, scope: !11615)
!11626 = !DILocation(line: 100, column: 2, scope: !11615)
!11627 = !DILocation(line: 101, column: 1, scope: !11615)
!11628 = distinct !DISubprogram(name: "gpiod_set_array_value_cansleep", scope: !3, file: !3, line: 3560, type: !10475, scopeLine: 3564, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11629 = !DILocalVariable(name: "array_size", arg: 1, scope: !11628, file: !3, line: 3560, type: !7)
!11630 = !DILocation(line: 3560, column: 49, scope: !11628)
!11631 = !DILocalVariable(name: "desc_array", arg: 2, scope: !11628, file: !3, line: 3561, type: !9643)
!11632 = !DILocation(line: 3561, column: 27, scope: !11628)
!11633 = !DILocalVariable(name: "array_info", arg: 3, scope: !11628, file: !3, line: 3562, type: !9644)
!11634 = !DILocation(line: 3562, column: 27, scope: !11628)
!11635 = !DILocalVariable(name: "value_bitmap", arg: 4, scope: !11628, file: !3, line: 3563, type: !3758)
!11636 = !DILocation(line: 3563, column: 23, scope: !11628)
!11637 = !DILocation(line: 3565, column: 2, scope: !11628)
!11638 = !DILocation(line: 3565, column: 2, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11628, file: !3, line: 3565, column: 2)
!11640 = !DILocation(line: 3566, column: 7, scope: !11641)
!11641 = distinct !DILexicalBlock(scope: !11628, file: !3, line: 3566, column: 6)
!11642 = !DILocation(line: 3566, column: 6, scope: !11628)
!11643 = !DILocation(line: 3567, column: 3, scope: !11641)
!11644 = !DILocation(line: 3568, column: 52, scope: !11628)
!11645 = !DILocation(line: 3569, column: 11, scope: !11628)
!11646 = !DILocation(line: 3569, column: 23, scope: !11628)
!11647 = !DILocation(line: 3570, column: 11, scope: !11628)
!11648 = !DILocation(line: 3568, column: 9, scope: !11628)
!11649 = !DILocation(line: 3568, column: 2, scope: !11628)
!11650 = !DILocation(line: 3571, column: 1, scope: !11628)
!11651 = distinct !DISubprogram(name: "gpiod_add_lookup_table", scope: !3, file: !3, line: 3578, type: !11652, scopeLine: 3579, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11652 = !DISubroutineType(types: !11653)
!11653 = !{null, !4571}
!11654 = !DILocalVariable(name: "table", arg: 1, scope: !11651, file: !3, line: 3578, type: !4571)
!11655 = !DILocation(line: 3578, column: 56, scope: !11651)
!11656 = !DILocation(line: 3580, column: 2, scope: !11651)
!11657 = !DILocation(line: 3582, column: 17, scope: !11651)
!11658 = !DILocation(line: 3582, column: 24, scope: !11651)
!11659 = !DILocation(line: 3582, column: 2, scope: !11651)
!11660 = !DILocation(line: 3584, column: 2, scope: !11651)
!11661 = !DILocation(line: 3585, column: 1, scope: !11651)
!11662 = distinct !DISubprogram(name: "gpiod_remove_lookup_table", scope: !3, file: !3, line: 3592, type: !11652, scopeLine: 3593, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11663 = !DILocalVariable(name: "table", arg: 1, scope: !11662, file: !3, line: 3592, type: !4571)
!11664 = !DILocation(line: 3592, column: 59, scope: !11662)
!11665 = !DILocation(line: 3594, column: 2, scope: !11662)
!11666 = !DILocation(line: 3596, column: 12, scope: !11662)
!11667 = !DILocation(line: 3596, column: 19, scope: !11662)
!11668 = !DILocation(line: 3596, column: 2, scope: !11662)
!11669 = !DILocation(line: 3598, column: 2, scope: !11662)
!11670 = !DILocation(line: 3599, column: 1, scope: !11662)
!11671 = distinct !DISubprogram(name: "gpiod_add_hogs", scope: !3, file: !3, line: 3606, type: !11672, scopeLine: 3607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11672 = !DISubroutineType(types: !11673)
!11673 = !{null, !4557}
!11674 = !DILocalVariable(name: "hogs", arg: 1, scope: !11671, file: !3, line: 3606, type: !4557)
!11675 = !DILocation(line: 3606, column: 39, scope: !11671)
!11676 = !DILocalVariable(name: "gc", scope: !11671, file: !3, line: 3608, type: !4096)
!11677 = !DILocation(line: 3608, column: 20, scope: !11671)
!11678 = !DILocalVariable(name: "hog", scope: !11671, file: !3, line: 3609, type: !4557)
!11679 = !DILocation(line: 3609, column: 20, scope: !11671)
!11680 = !DILocation(line: 3611, column: 2, scope: !11671)
!11681 = !DILocation(line: 3613, column: 14, scope: !11682)
!11682 = distinct !DILexicalBlock(scope: !11671, file: !3, line: 3613, column: 2)
!11683 = !DILocation(line: 3613, column: 11, scope: !11682)
!11684 = !DILocation(line: 3613, column: 7, scope: !11682)
!11685 = !DILocation(line: 3613, column: 23, scope: !11686)
!11686 = distinct !DILexicalBlock(scope: !11682, file: !3, line: 3613, column: 2)
!11687 = !DILocation(line: 3613, column: 28, scope: !11686)
!11688 = !DILocation(line: 3613, column: 2, scope: !11682)
!11689 = !DILocation(line: 3614, column: 18, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11686, file: !3, line: 3613, column: 47)
!11691 = !DILocation(line: 3614, column: 23, scope: !11690)
!11692 = !DILocation(line: 3614, column: 3, scope: !11690)
!11693 = !DILocation(line: 3620, column: 26, scope: !11690)
!11694 = !DILocation(line: 3620, column: 31, scope: !11690)
!11695 = !DILocation(line: 3620, column: 8, scope: !11690)
!11696 = !DILocation(line: 3620, column: 6, scope: !11690)
!11697 = !DILocation(line: 3621, column: 7, scope: !11698)
!11698 = distinct !DILexicalBlock(scope: !11690, file: !3, line: 3621, column: 7)
!11699 = !DILocation(line: 3621, column: 7, scope: !11690)
!11700 = !DILocation(line: 3622, column: 25, scope: !11698)
!11701 = !DILocation(line: 3622, column: 29, scope: !11698)
!11702 = !DILocation(line: 3622, column: 4, scope: !11698)
!11703 = !DILocation(line: 3623, column: 2, scope: !11690)
!11704 = !DILocation(line: 3613, column: 43, scope: !11686)
!11705 = !DILocation(line: 3613, column: 2, scope: !11686)
!11706 = distinct !{!11706, !11688, !11707}
!11707 = !DILocation(line: 3623, column: 2, scope: !11682)
!11708 = !DILocation(line: 3625, column: 2, scope: !11671)
!11709 = !DILocation(line: 3626, column: 1, scope: !11671)
!11710 = distinct !DISubprogram(name: "find_chip_by_name", scope: !3, file: !3, line: 884, type: !11711, scopeLine: 885, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11711 = !DISubroutineType(types: !11712)
!11712 = !{!4096, !233}
!11713 = !DILocalVariable(name: "name", arg: 1, scope: !11710, file: !3, line: 884, type: !233)
!11714 = !DILocation(line: 884, column: 56, scope: !11710)
!11715 = !DILocation(line: 886, column: 31, scope: !11710)
!11716 = !DILocation(line: 886, column: 9, scope: !11710)
!11717 = !DILocation(line: 886, column: 2, scope: !11710)
!11718 = distinct !DISubprogram(name: "gpiochip_machine_hog", scope: !3, file: !3, line: 519, type: !11719, scopeLine: 520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11719 = !DISubroutineType(types: !11720)
!11720 = !{null, !4096, !4557}
!11721 = !DILocalVariable(name: "gc", arg: 1, scope: !11718, file: !3, line: 519, type: !4096)
!11722 = !DILocation(line: 519, column: 52, scope: !11718)
!11723 = !DILocalVariable(name: "hog", arg: 2, scope: !11718, file: !3, line: 519, type: !4557)
!11724 = !DILocation(line: 519, column: 74, scope: !11718)
!11725 = !DILocalVariable(name: "desc", scope: !11718, file: !3, line: 521, type: !4232)
!11726 = !DILocation(line: 521, column: 20, scope: !11718)
!11727 = !DILocalVariable(name: "rv", scope: !11718, file: !3, line: 522, type: !224)
!11728 = !DILocation(line: 522, column: 6, scope: !11718)
!11729 = !DILocation(line: 524, column: 27, scope: !11718)
!11730 = !DILocation(line: 524, column: 31, scope: !11718)
!11731 = !DILocation(line: 524, column: 36, scope: !11718)
!11732 = !DILocation(line: 524, column: 9, scope: !11718)
!11733 = !DILocation(line: 524, column: 7, scope: !11718)
!11734 = !DILocation(line: 525, column: 13, scope: !11735)
!11735 = distinct !DILexicalBlock(scope: !11718, file: !3, line: 525, column: 6)
!11736 = !DILocation(line: 525, column: 6, scope: !11735)
!11737 = !DILocation(line: 525, column: 6, scope: !11718)
!11738 = !DILocation(line: 526, column: 3, scope: !11739)
!11739 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 525, column: 20)
!11740 = !DILocation(line: 528, column: 3, scope: !11739)
!11741 = !DILocation(line: 531, column: 32, scope: !11742)
!11742 = distinct !DILexicalBlock(scope: !11718, file: !3, line: 531, column: 6)
!11743 = !DILocation(line: 531, column: 38, scope: !11742)
!11744 = !DILocation(line: 531, column: 6, scope: !11742)
!11745 = !DILocation(line: 531, column: 6, scope: !11718)
!11746 = !DILocation(line: 532, column: 3, scope: !11742)
!11747 = !DILocation(line: 534, column: 17, scope: !11718)
!11748 = !DILocation(line: 534, column: 23, scope: !11718)
!11749 = !DILocation(line: 534, column: 28, scope: !11718)
!11750 = !DILocation(line: 534, column: 39, scope: !11718)
!11751 = !DILocation(line: 534, column: 44, scope: !11718)
!11752 = !DILocation(line: 534, column: 52, scope: !11718)
!11753 = !DILocation(line: 534, column: 57, scope: !11718)
!11754 = !DILocation(line: 534, column: 7, scope: !11718)
!11755 = !DILocation(line: 534, column: 5, scope: !11718)
!11756 = !DILocation(line: 535, column: 6, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11718, file: !3, line: 535, column: 6)
!11758 = !DILocation(line: 535, column: 6, scope: !11718)
!11759 = !DILocation(line: 536, column: 3, scope: !11757)
!11760 = !DILocation(line: 538, column: 1, scope: !11718)
!11761 = distinct !DISubprogram(name: "fwnode_gpiod_get_index", scope: !3, file: !3, line: 3768, type: !11762, scopeLine: 3772, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11762 = !DISubroutineType(types: !11763)
!11763 = !{!4232, !3631, !233, !224, !157, !233}
!11764 = !DILocalVariable(name: "fwnode", arg: 1, scope: !11761, file: !3, line: 3768, type: !3631)
!11765 = !DILocation(line: 3768, column: 64, scope: !11761)
!11766 = !DILocalVariable(name: "con_id", arg: 2, scope: !11761, file: !3, line: 3769, type: !233)
!11767 = !DILocation(line: 3769, column: 19, scope: !11761)
!11768 = !DILocalVariable(name: "index", arg: 3, scope: !11761, file: !3, line: 3769, type: !224)
!11769 = !DILocation(line: 3769, column: 31, scope: !11761)
!11770 = !DILocalVariable(name: "flags", arg: 4, scope: !11761, file: !3, line: 3770, type: !157)
!11771 = !DILocation(line: 3770, column: 24, scope: !11761)
!11772 = !DILocalVariable(name: "label", arg: 5, scope: !11761, file: !3, line: 3771, type: !233)
!11773 = !DILocation(line: 3771, column: 19, scope: !11761)
!11774 = !DILocalVariable(name: "desc", scope: !11761, file: !3, line: 3773, type: !4232)
!11775 = !DILocation(line: 3773, column: 20, scope: !11761)
!11776 = !DILocalVariable(name: "prop_name", scope: !11761, file: !3, line: 3774, type: !2657)
!11777 = !DILocation(line: 3774, column: 7, scope: !11761)
!11778 = !DILocalVariable(name: "i", scope: !11761, file: !3, line: 3775, type: !7)
!11779 = !DILocation(line: 3775, column: 15, scope: !11761)
!11780 = !DILocation(line: 3777, column: 9, scope: !11781)
!11781 = distinct !DILexicalBlock(scope: !11761, file: !3, line: 3777, column: 2)
!11782 = !DILocation(line: 3777, column: 7, scope: !11781)
!11783 = !DILocation(line: 3777, column: 14, scope: !11784)
!11784 = distinct !DILexicalBlock(scope: !11781, file: !3, line: 3777, column: 2)
!11785 = !DILocation(line: 3777, column: 16, scope: !11784)
!11786 = !DILocation(line: 3777, column: 2, scope: !11781)
!11787 = !DILocation(line: 3778, column: 7, scope: !11788)
!11788 = distinct !DILexicalBlock(scope: !11789, file: !3, line: 3778, column: 7)
!11789 = distinct !DILexicalBlock(scope: !11784, file: !3, line: 3777, column: 50)
!11790 = !DILocation(line: 3778, column: 7, scope: !11789)
!11791 = !DILocation(line: 3779, column: 13, scope: !11788)
!11792 = !DILocation(line: 3780, column: 10, scope: !11788)
!11793 = !DILocation(line: 3780, column: 32, scope: !11788)
!11794 = !DILocation(line: 3780, column: 18, scope: !11788)
!11795 = !DILocation(line: 3779, column: 4, scope: !11788)
!11796 = !DILocation(line: 3782, column: 13, scope: !11788)
!11797 = !DILocation(line: 3783, column: 24, scope: !11788)
!11798 = !DILocation(line: 3783, column: 10, scope: !11788)
!11799 = !DILocation(line: 3782, column: 4, scope: !11788)
!11800 = !DILocation(line: 3785, column: 33, scope: !11789)
!11801 = !DILocation(line: 3785, column: 41, scope: !11789)
!11802 = !DILocation(line: 3785, column: 52, scope: !11789)
!11803 = !DILocation(line: 3785, column: 59, scope: !11789)
!11804 = !DILocation(line: 3786, column: 12, scope: !11789)
!11805 = !DILocation(line: 3785, column: 10, scope: !11789)
!11806 = !DILocation(line: 3785, column: 8, scope: !11789)
!11807 = !DILocation(line: 3787, column: 15, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11789, file: !3, line: 3787, column: 7)
!11809 = !DILocation(line: 3787, column: 8, scope: !11808)
!11810 = !DILocation(line: 3787, column: 21, scope: !11808)
!11811 = !DILocation(line: 3787, column: 33, scope: !11808)
!11812 = !DILocation(line: 3787, column: 25, scope: !11808)
!11813 = !DILocation(line: 3787, column: 39, scope: !11808)
!11814 = !DILocation(line: 3787, column: 7, scope: !11789)
!11815 = !DILocation(line: 3788, column: 4, scope: !11808)
!11816 = !DILocation(line: 3789, column: 2, scope: !11789)
!11817 = !DILocation(line: 3777, column: 46, scope: !11784)
!11818 = !DILocation(line: 3777, column: 2, scope: !11784)
!11819 = distinct !{!11819, !11786, !11820}
!11820 = !DILocation(line: 3789, column: 2, scope: !11781)
!11821 = !DILocation(line: 3791, column: 9, scope: !11761)
!11822 = !DILocation(line: 3791, column: 2, scope: !11761)
!11823 = distinct !DISubprogram(name: "fwnode_get_named_gpiod", scope: !3, file: !3, line: 4031, type: !11762, scopeLine: 4035, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11824 = !DILocalVariable(name: "fwnode", arg: 1, scope: !11823, file: !3, line: 4031, type: !3631)
!11825 = !DILocation(line: 4031, column: 64, scope: !11823)
!11826 = !DILocalVariable(name: "propname", arg: 2, scope: !11823, file: !3, line: 4032, type: !233)
!11827 = !DILocation(line: 4032, column: 19, scope: !11823)
!11828 = !DILocalVariable(name: "index", arg: 3, scope: !11823, file: !3, line: 4032, type: !224)
!11829 = !DILocation(line: 4032, column: 33, scope: !11823)
!11830 = !DILocalVariable(name: "dflags", arg: 4, scope: !11823, file: !3, line: 4033, type: !157)
!11831 = !DILocation(line: 4033, column: 24, scope: !11823)
!11832 = !DILocalVariable(name: "label", arg: 5, scope: !11823, file: !3, line: 4034, type: !233)
!11833 = !DILocation(line: 4034, column: 19, scope: !11823)
!11834 = !DILocalVariable(name: "lflags", scope: !11823, file: !3, line: 4036, type: !342)
!11835 = !DILocation(line: 4036, column: 16, scope: !11823)
!11836 = !DILocalVariable(name: "desc", scope: !11823, file: !3, line: 4037, type: !4232)
!11837 = !DILocation(line: 4037, column: 20, scope: !11823)
!11838 = !DILocation(line: 4037, column: 27, scope: !11823)
!11839 = !DILocalVariable(name: "ret", scope: !11823, file: !3, line: 4038, type: !224)
!11840 = !DILocation(line: 4038, column: 6, scope: !11823)
!11841 = !DILocation(line: 4040, column: 7, scope: !11842)
!11842 = distinct !DILexicalBlock(scope: !11823, file: !3, line: 4040, column: 6)
!11843 = !DILocation(line: 4040, column: 6, scope: !11823)
!11844 = !DILocation(line: 4041, column: 10, scope: !11842)
!11845 = !DILocation(line: 4041, column: 3, scope: !11842)
!11846 = !DILocation(line: 4043, column: 17, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11823, file: !3, line: 4043, column: 6)
!11848 = !DILocation(line: 4043, column: 6, scope: !11847)
!11849 = !DILocation(line: 4043, column: 6, scope: !11823)
!11850 = !DILocalVariable(name: "__to_of_node_fwnode", scope: !11851, file: !3, line: 4044, type: !3631)
!11851 = distinct !DILexicalBlock(scope: !11852, file: !3, line: 4044, column: 33)
!11852 = distinct !DILexicalBlock(scope: !11847, file: !3, line: 4043, column: 26)
!11853 = !DILocation(line: 4044, column: 33, scope: !11851)
!11854 = !DILocalVariable(name: "__mptr", scope: !11855, file: !3, line: 4044, type: !218)
!11855 = distinct !DILexicalBlock(scope: !11851, file: !3, line: 4044, column: 33)
!11856 = !DILocation(line: 4044, column: 33, scope: !11855)
!11857 = !DILocation(line: 4044, column: 33, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !11855, file: !3, line: 4044, column: 33)
!11859 = !DILocation(line: 4045, column: 12, scope: !11852)
!11860 = !DILocation(line: 4045, column: 22, scope: !11852)
!11861 = !DILocation(line: 4046, column: 12, scope: !11852)
!11862 = !DILocation(line: 4047, column: 12, scope: !11852)
!11863 = !DILocation(line: 4044, column: 10, scope: !11852)
!11864 = !DILocation(line: 4044, column: 8, scope: !11852)
!11865 = !DILocation(line: 4048, column: 10, scope: !11852)
!11866 = !DILocation(line: 4048, column: 3, scope: !11852)
!11867 = !DILocation(line: 4049, column: 26, scope: !11868)
!11868 = distinct !DILexicalBlock(scope: !11847, file: !3, line: 4049, column: 13)
!11869 = !DILocation(line: 4049, column: 13, scope: !11868)
!11870 = !DILocation(line: 4049, column: 13, scope: !11847)
!11871 = !DILocalVariable(name: "info", scope: !11872, file: !3, line: 4050, type: !11873)
!11872 = distinct !DILexicalBlock(scope: !11868, file: !3, line: 4049, column: 35)
!11873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_gpio_info", file: !11874, line: 23, size: 256, elements: !11875)
!11874 = !DIFile(filename: "drivers/gpio/gpiolib-acpi.h", directory: "/home/lizy2001/genbc/linux")
!11875 = !{!11876, !11877, !11878, !11879, !11880, !11881, !11882}
!11876 = !DIDerivedType(tag: DW_TAG_member, name: "adev", scope: !11873, file: !11874, line: 24, baseType: !4261, size: 64)
!11877 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11873, file: !11874, line: 25, baseType: !157, size: 32, offset: 64)
!11878 = !DIDerivedType(tag: DW_TAG_member, name: "gpioint", scope: !11873, file: !11874, line: 26, baseType: !508, size: 8, offset: 96)
!11879 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config", scope: !11873, file: !11874, line: 27, baseType: !224, size: 32, offset: 128)
!11880 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !11873, file: !11874, line: 28, baseType: !224, size: 32, offset: 160)
!11881 = !DIDerivedType(tag: DW_TAG_member, name: "triggering", scope: !11873, file: !11874, line: 29, baseType: !224, size: 32, offset: 192)
!11882 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !11873, file: !11874, line: 30, baseType: !7, size: 32, offset: 224)
!11883 = !DILocation(line: 4050, column: 25, scope: !11872)
!11884 = !DILocation(line: 4052, column: 30, scope: !11872)
!11885 = !DILocation(line: 4052, column: 38, scope: !11872)
!11886 = !DILocation(line: 4052, column: 48, scope: !11872)
!11887 = !DILocation(line: 4052, column: 10, scope: !11872)
!11888 = !DILocation(line: 4052, column: 8, scope: !11872)
!11889 = !DILocation(line: 4053, column: 14, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11872, file: !3, line: 4053, column: 7)
!11891 = !DILocation(line: 4053, column: 7, scope: !11890)
!11892 = !DILocation(line: 4053, column: 7, scope: !11872)
!11893 = !DILocation(line: 4054, column: 11, scope: !11890)
!11894 = !DILocation(line: 4054, column: 4, scope: !11890)
!11895 = !DILocation(line: 4056, column: 3, scope: !11872)
!11896 = !DILocation(line: 4057, column: 3, scope: !11872)
!11897 = !DILocation(line: 4058, column: 2, scope: !11872)
!11898 = !DILocation(line: 4061, column: 22, scope: !11823)
!11899 = !DILocation(line: 4061, column: 28, scope: !11823)
!11900 = !DILocation(line: 4061, column: 8, scope: !11823)
!11901 = !DILocation(line: 4061, column: 6, scope: !11823)
!11902 = !DILocation(line: 4062, column: 6, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11823, file: !3, line: 4062, column: 6)
!11904 = !DILocation(line: 4062, column: 6, scope: !11823)
!11905 = !DILocation(line: 4063, column: 18, scope: !11903)
!11906 = !DILocation(line: 4063, column: 10, scope: !11903)
!11907 = !DILocation(line: 4063, column: 3, scope: !11903)
!11908 = !DILocation(line: 4065, column: 30, scope: !11823)
!11909 = !DILocation(line: 4065, column: 36, scope: !11823)
!11910 = !DILocation(line: 4065, column: 46, scope: !11823)
!11911 = !DILocation(line: 4065, column: 54, scope: !11823)
!11912 = !DILocation(line: 4065, column: 8, scope: !11823)
!11913 = !DILocation(line: 4065, column: 6, scope: !11823)
!11914 = !DILocation(line: 4066, column: 6, scope: !11915)
!11915 = distinct !DILexicalBlock(scope: !11823, file: !3, line: 4066, column: 6)
!11916 = !DILocation(line: 4066, column: 10, scope: !11915)
!11917 = !DILocation(line: 4066, column: 6, scope: !11823)
!11918 = !DILocation(line: 4067, column: 13, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11915, file: !3, line: 4066, column: 15)
!11920 = !DILocation(line: 4067, column: 3, scope: !11919)
!11921 = !DILocation(line: 4068, column: 18, scope: !11919)
!11922 = !DILocation(line: 4068, column: 10, scope: !11919)
!11923 = !DILocation(line: 4068, column: 3, scope: !11919)
!11924 = !DILocation(line: 4071, column: 32, scope: !11823)
!11925 = !DILocation(line: 4071, column: 38, scope: !11823)
!11926 = !DILocation(line: 4071, column: 44, scope: !11823)
!11927 = !DILocation(line: 4072, column: 38, scope: !11823)
!11928 = !DILocation(line: 4071, column: 2, scope: !11823)
!11929 = !DILocation(line: 4074, column: 9, scope: !11823)
!11930 = !DILocation(line: 4074, column: 2, scope: !11823)
!11931 = !DILocation(line: 4075, column: 1, scope: !11823)
!11932 = distinct !DISubprogram(name: "gpiod_count", scope: !3, file: !3, line: 3801, type: !11933, scopeLine: 3802, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11933 = !DISubroutineType(types: !11934)
!11934 = !{!224, !3325, !233}
!11935 = !DILocalVariable(name: "dev", arg: 1, scope: !11932, file: !3, line: 3801, type: !3325)
!11936 = !DILocation(line: 3801, column: 32, scope: !11932)
!11937 = !DILocalVariable(name: "con_id", arg: 2, scope: !11932, file: !3, line: 3801, type: !233)
!11938 = !DILocation(line: 3801, column: 49, scope: !11932)
!11939 = !DILocalVariable(name: "count", scope: !11932, file: !3, line: 3803, type: !224)
!11940 = !DILocation(line: 3803, column: 6, scope: !11932)
!11941 = !DILocation(line: 3805, column: 31, scope: !11942)
!11942 = distinct !DILexicalBlock(scope: !11932, file: !3, line: 3805, column: 6)
!11943 = !DILocation(line: 3805, column: 35, scope: !11942)
!11944 = !DILocation(line: 3805, column: 38, scope: !11942)
!11945 = !DILocation(line: 3805, column: 43, scope: !11942)
!11946 = !DILocation(line: 3805, column: 6, scope: !11932)
!11947 = !DILocation(line: 3806, column: 29, scope: !11942)
!11948 = !DILocation(line: 3806, column: 34, scope: !11942)
!11949 = !DILocation(line: 3806, column: 11, scope: !11942)
!11950 = !DILocation(line: 3806, column: 9, scope: !11942)
!11951 = !DILocation(line: 3806, column: 3, scope: !11942)
!11952 = !DILocation(line: 3807, column: 38, scope: !11953)
!11953 = distinct !DILexicalBlock(scope: !11942, file: !3, line: 3807, column: 11)
!11954 = !DILocation(line: 3807, column: 42, scope: !11953)
!11955 = !DILocalVariable(name: "__to_acpi_device_node_fwnode", scope: !11956, file: !3, line: 3807, type: !3631)
!11956 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 3807, column: 45)
!11957 = !DILocation(line: 3807, column: 45, scope: !11956)
!11958 = !DILocalVariable(name: "__mptr", scope: !11959, file: !3, line: 3807, type: !218)
!11959 = distinct !DILexicalBlock(scope: !11956, file: !3, line: 3807, column: 45)
!11960 = !DILocation(line: 3807, column: 45, scope: !11959)
!11961 = !DILocation(line: 3807, column: 45, scope: !11962)
!11962 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 3807, column: 45)
!11963 = !DILocation(line: 3807, column: 45, scope: !11953)
!11964 = !DILocation(line: 3807, column: 11, scope: !11942)
!11965 = !DILocation(line: 3808, column: 27, scope: !11953)
!11966 = !DILocation(line: 3808, column: 32, scope: !11953)
!11967 = !DILocation(line: 3808, column: 11, scope: !11953)
!11968 = !DILocation(line: 3808, column: 9, scope: !11953)
!11969 = !DILocation(line: 3808, column: 3, scope: !11953)
!11970 = !DILocation(line: 3810, column: 6, scope: !11971)
!11971 = distinct !DILexicalBlock(scope: !11932, file: !3, line: 3810, column: 6)
!11972 = !DILocation(line: 3810, column: 12, scope: !11971)
!11973 = !DILocation(line: 3810, column: 6, scope: !11932)
!11974 = !DILocation(line: 3811, column: 31, scope: !11971)
!11975 = !DILocation(line: 3811, column: 36, scope: !11971)
!11976 = !DILocation(line: 3811, column: 11, scope: !11971)
!11977 = !DILocation(line: 3811, column: 9, scope: !11971)
!11978 = !DILocation(line: 3811, column: 3, scope: !11971)
!11979 = !DILocation(line: 3813, column: 9, scope: !11932)
!11980 = !DILocation(line: 3813, column: 2, scope: !11932)
!11981 = distinct !DISubprogram(name: "platform_gpio_count", scope: !3, file: !3, line: 3726, type: !11933, scopeLine: 3727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!11982 = !DILocalVariable(name: "dev", arg: 1, scope: !11981, file: !3, line: 3726, type: !3325)
!11983 = !DILocation(line: 3726, column: 47, scope: !11981)
!11984 = !DILocalVariable(name: "con_id", arg: 2, scope: !11981, file: !3, line: 3726, type: !233)
!11985 = !DILocation(line: 3726, column: 64, scope: !11981)
!11986 = !DILocalVariable(name: "table", scope: !11981, file: !3, line: 3728, type: !4571)
!11987 = !DILocation(line: 3728, column: 29, scope: !11981)
!11988 = !DILocalVariable(name: "p", scope: !11981, file: !3, line: 3729, type: !11989)
!11989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4578, size: 64)
!11990 = !DILocation(line: 3729, column: 23, scope: !11981)
!11991 = !DILocalVariable(name: "count", scope: !11981, file: !3, line: 3730, type: !7)
!11992 = !DILocation(line: 3730, column: 15, scope: !11981)
!11993 = !DILocation(line: 3732, column: 34, scope: !11981)
!11994 = !DILocation(line: 3732, column: 10, scope: !11981)
!11995 = !DILocation(line: 3732, column: 8, scope: !11981)
!11996 = !DILocation(line: 3733, column: 7, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11981, file: !3, line: 3733, column: 6)
!11998 = !DILocation(line: 3733, column: 6, scope: !11981)
!11999 = !DILocation(line: 3734, column: 3, scope: !11997)
!12000 = !DILocation(line: 3736, column: 12, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !11981, file: !3, line: 3736, column: 2)
!12002 = !DILocation(line: 3736, column: 19, scope: !12001)
!12003 = !DILocation(line: 3736, column: 9, scope: !12001)
!12004 = !DILocation(line: 3736, column: 7, scope: !12001)
!12005 = !DILocation(line: 3736, column: 29, scope: !12006)
!12006 = distinct !DILexicalBlock(scope: !12001, file: !3, line: 3736, column: 2)
!12007 = !DILocation(line: 3736, column: 32, scope: !12006)
!12008 = !DILocation(line: 3736, column: 2, scope: !12001)
!12009 = !DILocation(line: 3737, column: 8, scope: !12010)
!12010 = distinct !DILexicalBlock(scope: !12011, file: !3, line: 3737, column: 7)
!12011 = distinct !DILexicalBlock(scope: !12006, file: !3, line: 3736, column: 42)
!12012 = !DILocation(line: 3737, column: 15, scope: !12010)
!12013 = !DILocation(line: 3737, column: 18, scope: !12010)
!12014 = !DILocation(line: 3737, column: 21, scope: !12010)
!12015 = !DILocation(line: 3737, column: 28, scope: !12010)
!12016 = !DILocation(line: 3737, column: 39, scope: !12010)
!12017 = !DILocation(line: 3737, column: 47, scope: !12010)
!12018 = !DILocation(line: 3737, column: 50, scope: !12010)
!12019 = !DILocation(line: 3737, column: 32, scope: !12010)
!12020 = !DILocation(line: 3737, column: 59, scope: !12010)
!12021 = !DILocation(line: 3738, column: 9, scope: !12010)
!12022 = !DILocation(line: 3738, column: 16, scope: !12010)
!12023 = !DILocation(line: 3738, column: 20, scope: !12010)
!12024 = !DILocation(line: 3738, column: 23, scope: !12010)
!12025 = !DILocation(line: 3737, column: 7, scope: !12011)
!12026 = !DILocation(line: 3739, column: 9, scope: !12010)
!12027 = !DILocation(line: 3739, column: 4, scope: !12010)
!12028 = !DILocation(line: 3740, column: 2, scope: !12011)
!12029 = !DILocation(line: 3736, column: 38, scope: !12006)
!12030 = !DILocation(line: 3736, column: 2, scope: !12006)
!12031 = distinct !{!12031, !12008, !12032}
!12032 = !DILocation(line: 3740, column: 2, scope: !12001)
!12033 = !DILocation(line: 3741, column: 7, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !11981, file: !3, line: 3741, column: 6)
!12035 = !DILocation(line: 3741, column: 6, scope: !11981)
!12036 = !DILocation(line: 3742, column: 3, scope: !12034)
!12037 = !DILocation(line: 3744, column: 9, scope: !11981)
!12038 = !DILocation(line: 3744, column: 2, scope: !11981)
!12039 = !DILocation(line: 3745, column: 1, scope: !11981)
!12040 = distinct !DISubprogram(name: "gpiod_get", scope: !3, file: !3, line: 3827, type: !12041, scopeLine: 3829, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!12041 = !DISubroutineType(types: !12042)
!12042 = !{!4232, !3325, !233, !157}
!12043 = !DILocalVariable(name: "dev", arg: 1, scope: !12040, file: !3, line: 3827, type: !3325)
!12044 = !DILocation(line: 3827, column: 57, scope: !12040)
!12045 = !DILocalVariable(name: "con_id", arg: 2, scope: !12040, file: !3, line: 3827, type: !233)
!12046 = !DILocation(line: 3827, column: 74, scope: !12040)
!12047 = !DILocalVariable(name: "flags", arg: 3, scope: !12040, file: !3, line: 3828, type: !157)
!12048 = !DILocation(line: 3828, column: 24, scope: !12040)
!12049 = !DILocation(line: 3830, column: 25, scope: !12040)
!12050 = !DILocation(line: 3830, column: 30, scope: !12040)
!12051 = !DILocation(line: 3830, column: 41, scope: !12040)
!12052 = !DILocation(line: 3830, column: 9, scope: !12040)
!12053 = !DILocation(line: 3830, column: 2, scope: !12040)
!12054 = distinct !DISubprogram(name: "gpiod_get_index", scope: !3, file: !3, line: 3935, type: !12055, scopeLine: 3939, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!12055 = !DISubroutineType(types: !12056)
!12056 = !{!4232, !3325, !233, !7, !157}
!12057 = !DILocalVariable(name: "dev", arg: 1, scope: !12054, file: !3, line: 3935, type: !3325)
!12058 = !DILocation(line: 3935, column: 63, scope: !12054)
!12059 = !DILocalVariable(name: "con_id", arg: 2, scope: !12054, file: !3, line: 3936, type: !233)
!12060 = !DILocation(line: 3936, column: 25, scope: !12054)
!12061 = !DILocalVariable(name: "idx", arg: 3, scope: !12054, file: !3, line: 3937, type: !7)
!12062 = !DILocation(line: 3937, column: 26, scope: !12054)
!12063 = !DILocalVariable(name: "flags", arg: 4, scope: !12054, file: !3, line: 3938, type: !157)
!12064 = !DILocation(line: 3938, column: 30, scope: !12054)
!12065 = !DILocalVariable(name: "lookupflags", scope: !12054, file: !3, line: 3940, type: !342)
!12066 = !DILocation(line: 3940, column: 16, scope: !12054)
!12067 = !DILocalVariable(name: "desc", scope: !12054, file: !3, line: 3941, type: !4232)
!12068 = !DILocation(line: 3941, column: 20, scope: !12054)
!12069 = !DILocalVariable(name: "ret", scope: !12054, file: !3, line: 3942, type: !224)
!12070 = !DILocation(line: 3942, column: 6, scope: !12054)
!12071 = !DILocalVariable(name: "devname", scope: !12054, file: !3, line: 3944, type: !233)
!12072 = !DILocation(line: 3944, column: 14, scope: !12054)
!12073 = !DILocation(line: 3944, column: 24, scope: !12054)
!12074 = !DILocation(line: 3944, column: 39, scope: !12054)
!12075 = !DILocation(line: 3944, column: 30, scope: !12054)
!12076 = !DILocation(line: 3948, column: 6, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12054, file: !3, line: 3948, column: 6)
!12078 = !DILocation(line: 3948, column: 6, scope: !12054)
!12079 = !DILocation(line: 3950, column: 32, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !12081, file: !3, line: 3950, column: 7)
!12081 = distinct !DILexicalBlock(scope: !12077, file: !3, line: 3948, column: 11)
!12082 = !DILocation(line: 3950, column: 37, scope: !12080)
!12083 = !DILocation(line: 3950, column: 7, scope: !12081)
!12084 = !DILocation(line: 3952, column: 24, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !12080, file: !3, line: 3950, column: 46)
!12086 = !DILocation(line: 3952, column: 29, scope: !12085)
!12087 = !DILocation(line: 3952, column: 37, scope: !12085)
!12088 = !DILocation(line: 3952, column: 11, scope: !12085)
!12089 = !DILocation(line: 3952, column: 9, scope: !12085)
!12090 = !DILocation(line: 3953, column: 3, scope: !12085)
!12091 = !DILocalVariable(name: "__to_acpi_device_node_fwnode", scope: !12092, file: !3, line: 3953, type: !3631)
!12092 = distinct !DILexicalBlock(scope: !12093, file: !3, line: 3953, column: 14)
!12093 = distinct !DILexicalBlock(scope: !12080, file: !3, line: 3953, column: 14)
!12094 = !DILocation(line: 3953, column: 14, scope: !12092)
!12095 = !DILocalVariable(name: "__mptr", scope: !12096, file: !3, line: 3953, type: !218)
!12096 = distinct !DILexicalBlock(scope: !12092, file: !3, line: 3953, column: 14)
!12097 = !DILocation(line: 3953, column: 14, scope: !12096)
!12098 = !DILocation(line: 3953, column: 14, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12096, file: !3, line: 3953, column: 14)
!12100 = !DILocation(line: 3953, column: 14, scope: !12093)
!12101 = !DILocation(line: 3953, column: 14, scope: !12080)
!12102 = !DILocation(line: 3955, column: 26, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12093, file: !3, line: 3953, column: 35)
!12104 = !DILocation(line: 3955, column: 31, scope: !12103)
!12105 = !DILocation(line: 3955, column: 39, scope: !12103)
!12106 = !DILocation(line: 3955, column: 11, scope: !12103)
!12107 = !DILocation(line: 3955, column: 9, scope: !12103)
!12108 = !DILocation(line: 3956, column: 3, scope: !12103)
!12109 = !DILocation(line: 3957, column: 2, scope: !12081)
!12110 = !DILocation(line: 3963, column: 7, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !12054, file: !3, line: 3963, column: 6)
!12112 = !DILocation(line: 3963, column: 12, scope: !12111)
!12113 = !DILocation(line: 3963, column: 15, scope: !12111)
!12114 = !DILocation(line: 3963, column: 23, scope: !12111)
!12115 = !DILocation(line: 3963, column: 20, scope: !12111)
!12116 = !DILocation(line: 3963, column: 6, scope: !12054)
!12117 = !DILocation(line: 3965, column: 21, scope: !12118)
!12118 = distinct !DILexicalBlock(scope: !12111, file: !3, line: 3963, column: 41)
!12119 = !DILocation(line: 3965, column: 26, scope: !12118)
!12120 = !DILocation(line: 3965, column: 34, scope: !12118)
!12121 = !DILocation(line: 3965, column: 10, scope: !12118)
!12122 = !DILocation(line: 3965, column: 8, scope: !12118)
!12123 = !DILocation(line: 3966, column: 2, scope: !12118)
!12124 = !DILocation(line: 3968, column: 13, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12054, file: !3, line: 3968, column: 6)
!12126 = !DILocation(line: 3968, column: 6, scope: !12125)
!12127 = !DILocation(line: 3968, column: 6, scope: !12054)
!12128 = !DILocation(line: 3970, column: 10, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12125, file: !3, line: 3968, column: 20)
!12130 = !DILocation(line: 3970, column: 3, scope: !12129)
!12131 = !DILocation(line: 3977, column: 22, scope: !12054)
!12132 = !DILocation(line: 3977, column: 28, scope: !12054)
!12133 = !DILocation(line: 3977, column: 37, scope: !12054)
!12134 = !DILocation(line: 3977, column: 46, scope: !12054)
!12135 = !DILocation(line: 3977, column: 8, scope: !12054)
!12136 = !DILocation(line: 3977, column: 6, scope: !12054)
!12137 = !DILocation(line: 3978, column: 6, scope: !12138)
!12138 = distinct !DILexicalBlock(scope: !12054, file: !3, line: 3978, column: 6)
!12139 = !DILocation(line: 3978, column: 10, scope: !12138)
!12140 = !DILocation(line: 3978, column: 6, scope: !12054)
!12141 = !DILocation(line: 3979, column: 7, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12143, file: !3, line: 3979, column: 7)
!12143 = distinct !DILexicalBlock(scope: !12138, file: !3, line: 3978, column: 15)
!12144 = !DILocation(line: 3979, column: 11, scope: !12142)
!12145 = !DILocation(line: 3979, column: 21, scope: !12142)
!12146 = !DILocation(line: 3979, column: 24, scope: !12142)
!12147 = !DILocation(line: 3979, column: 30, scope: !12142)
!12148 = !DILocation(line: 3979, column: 7, scope: !12143)
!12149 = !DILocation(line: 3988, column: 4, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12142, file: !3, line: 3979, column: 62)
!12151 = !DILocation(line: 3990, column: 11, scope: !12150)
!12152 = !DILocation(line: 3990, column: 4, scope: !12150)
!12153 = !DILocation(line: 3992, column: 19, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !12142, file: !3, line: 3991, column: 10)
!12155 = !DILocation(line: 3992, column: 11, scope: !12154)
!12156 = !DILocation(line: 3992, column: 4, scope: !12154)
!12157 = !DILocation(line: 3996, column: 30, scope: !12054)
!12158 = !DILocation(line: 3996, column: 36, scope: !12054)
!12159 = !DILocation(line: 3996, column: 44, scope: !12054)
!12160 = !DILocation(line: 3996, column: 57, scope: !12054)
!12161 = !DILocation(line: 3996, column: 8, scope: !12054)
!12162 = !DILocation(line: 3996, column: 6, scope: !12054)
!12163 = !DILocation(line: 3997, column: 6, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !12054, file: !3, line: 3997, column: 6)
!12165 = !DILocation(line: 3997, column: 10, scope: !12164)
!12166 = !DILocation(line: 3997, column: 6, scope: !12054)
!12167 = !DILocation(line: 3999, column: 13, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12164, file: !3, line: 3997, column: 15)
!12169 = !DILocation(line: 3999, column: 3, scope: !12168)
!12170 = !DILocation(line: 4000, column: 18, scope: !12168)
!12171 = !DILocation(line: 4000, column: 10, scope: !12168)
!12172 = !DILocation(line: 4000, column: 3, scope: !12168)
!12173 = !DILocation(line: 4003, column: 32, scope: !12054)
!12174 = !DILocation(line: 4003, column: 38, scope: !12054)
!12175 = !DILocation(line: 4003, column: 44, scope: !12054)
!12176 = !DILocation(line: 4004, column: 38, scope: !12054)
!12177 = !DILocation(line: 4003, column: 2, scope: !12054)
!12178 = !DILocation(line: 4006, column: 9, scope: !12054)
!12179 = !DILocation(line: 4006, column: 2, scope: !12054)
!12180 = !DILocation(line: 4007, column: 1, scope: !12054)
!12181 = distinct !DISubprogram(name: "gpiod_get_optional", scope: !3, file: !3, line: 3844, type: !12041, scopeLine: 3847, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!12182 = !DILocalVariable(name: "dev", arg: 1, scope: !12181, file: !3, line: 3844, type: !3325)
!12183 = !DILocation(line: 3844, column: 66, scope: !12181)
!12184 = !DILocalVariable(name: "con_id", arg: 2, scope: !12181, file: !3, line: 3845, type: !233)
!12185 = !DILocation(line: 3845, column: 21, scope: !12181)
!12186 = !DILocalVariable(name: "flags", arg: 3, scope: !12181, file: !3, line: 3846, type: !157)
!12187 = !DILocation(line: 3846, column: 26, scope: !12181)
!12188 = !DILocation(line: 3848, column: 34, scope: !12181)
!12189 = !DILocation(line: 3848, column: 39, scope: !12181)
!12190 = !DILocation(line: 3848, column: 50, scope: !12181)
!12191 = !DILocation(line: 3848, column: 9, scope: !12181)
!12192 = !DILocation(line: 3848, column: 2, scope: !12181)
!12193 = distinct !DISubprogram(name: "gpiod_get_index_optional", scope: !3, file: !3, line: 4090, type: !12055, scopeLine: 4094, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!12194 = !DILocalVariable(name: "dev", arg: 1, scope: !12193, file: !3, line: 4090, type: !3325)
!12195 = !DILocation(line: 4090, column: 72, scope: !12193)
!12196 = !DILocalVariable(name: "con_id", arg: 2, scope: !12193, file: !3, line: 4091, type: !233)
!12197 = !DILocation(line: 4091, column: 20, scope: !12193)
!12198 = !DILocalVariable(name: "index", arg: 3, scope: !12193, file: !3, line: 4092, type: !7)
!12199 = !DILocation(line: 4092, column: 21, scope: !12193)
!12200 = !DILocalVariable(name: "flags", arg: 4, scope: !12193, file: !3, line: 4093, type: !157)
!12201 = !DILocation(line: 4093, column: 25, scope: !12193)
!12202 = !DILocalVariable(name: "desc", scope: !12193, file: !3, line: 4095, type: !4232)
!12203 = !DILocation(line: 4095, column: 20, scope: !12193)
!12204 = !DILocation(line: 4097, column: 25, scope: !12193)
!12205 = !DILocation(line: 4097, column: 30, scope: !12193)
!12206 = !DILocation(line: 4097, column: 38, scope: !12193)
!12207 = !DILocation(line: 4097, column: 45, scope: !12193)
!12208 = !DILocation(line: 4097, column: 9, scope: !12193)
!12209 = !DILocation(line: 4097, column: 7, scope: !12193)
!12210 = !DILocation(line: 4098, column: 13, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12193, file: !3, line: 4098, column: 6)
!12212 = !DILocation(line: 4098, column: 6, scope: !12211)
!12213 = !DILocation(line: 4098, column: 6, scope: !12193)
!12214 = !DILocation(line: 4099, column: 15, scope: !12215)
!12215 = distinct !DILexicalBlock(scope: !12216, file: !3, line: 4099, column: 7)
!12216 = distinct !DILexicalBlock(scope: !12211, file: !3, line: 4098, column: 20)
!12217 = !DILocation(line: 4099, column: 7, scope: !12215)
!12218 = !DILocation(line: 4099, column: 21, scope: !12215)
!12219 = !DILocation(line: 4099, column: 7, scope: !12216)
!12220 = !DILocation(line: 4100, column: 4, scope: !12215)
!12221 = !DILocation(line: 4101, column: 2, scope: !12216)
!12222 = !DILocation(line: 4103, column: 9, scope: !12193)
!12223 = !DILocation(line: 4103, column: 2, scope: !12193)
!12224 = !DILocation(line: 4104, column: 1, scope: !12193)
!12225 = distinct !DISubprogram(name: "dev_name", scope: !60, file: !60, line: 609, type: !12226, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!12226 = !DISubroutineType(types: !12227)
!12227 = !{!233, !3655}
!12228 = !DILocalVariable(name: "dev", arg: 1, scope: !12225, file: !60, line: 609, type: !3655)
!12229 = !DILocation(line: 609, column: 57, scope: !12225)
!12230 = !DILocation(line: 612, column: 6, scope: !12231)
!12231 = distinct !DILexicalBlock(scope: !12225, file: !60, line: 612, column: 6)
!12232 = !DILocation(line: 612, column: 11, scope: !12231)
!12233 = !DILocation(line: 612, column: 6, scope: !12225)
!12234 = !DILocation(line: 613, column: 10, scope: !12231)
!12235 = !DILocation(line: 613, column: 15, scope: !12231)
!12236 = !DILocation(line: 613, column: 3, scope: !12231)
!12237 = !DILocation(line: 615, column: 23, scope: !12225)
!12238 = !DILocation(line: 615, column: 28, scope: !12225)
!12239 = !DILocation(line: 615, column: 9, scope: !12225)
!12240 = !DILocation(line: 615, column: 2, scope: !12225)
!12241 = !DILocation(line: 616, column: 1, scope: !12225)
!12242 = distinct !DISubprogram(name: "gpiod_find", scope: !3, file: !3, line: 3660, type: !12243, scopeLine: 3662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!12243 = !DISubroutineType(types: !12244)
!12244 = !{!4232, !3325, !233, !7, !3758}
!12245 = !DILocalVariable(name: "dev", arg: 1, scope: !12242, file: !3, line: 3660, type: !3325)
!12246 = !DILocation(line: 3660, column: 52, scope: !12242)
!12247 = !DILocalVariable(name: "con_id", arg: 2, scope: !12242, file: !3, line: 3660, type: !233)
!12248 = !DILocation(line: 3660, column: 69, scope: !12242)
!12249 = !DILocalVariable(name: "idx", arg: 3, scope: !12242, file: !3, line: 3661, type: !7)
!12250 = !DILocation(line: 3661, column: 22, scope: !12242)
!12251 = !DILocalVariable(name: "flags", arg: 4, scope: !12242, file: !3, line: 3661, type: !3758)
!12252 = !DILocation(line: 3661, column: 42, scope: !12242)
!12253 = !DILocalVariable(name: "desc", scope: !12242, file: !3, line: 3663, type: !4232)
!12254 = !DILocation(line: 3663, column: 20, scope: !12242)
!12255 = !DILocation(line: 3663, column: 27, scope: !12242)
!12256 = !DILocalVariable(name: "table", scope: !12242, file: !3, line: 3664, type: !4571)
!12257 = !DILocation(line: 3664, column: 29, scope: !12242)
!12258 = !DILocalVariable(name: "p", scope: !12242, file: !3, line: 3665, type: !11989)
!12259 = !DILocation(line: 3665, column: 23, scope: !12242)
!12260 = !DILocation(line: 3667, column: 34, scope: !12242)
!12261 = !DILocation(line: 3667, column: 10, scope: !12242)
!12262 = !DILocation(line: 3667, column: 8, scope: !12242)
!12263 = !DILocation(line: 3668, column: 7, scope: !12264)
!12264 = distinct !DILexicalBlock(scope: !12242, file: !3, line: 3668, column: 6)
!12265 = !DILocation(line: 3668, column: 6, scope: !12242)
!12266 = !DILocation(line: 3669, column: 10, scope: !12264)
!12267 = !DILocation(line: 3669, column: 3, scope: !12264)
!12268 = !DILocation(line: 3671, column: 12, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12242, file: !3, line: 3671, column: 2)
!12270 = !DILocation(line: 3671, column: 19, scope: !12269)
!12271 = !DILocation(line: 3671, column: 9, scope: !12269)
!12272 = !DILocation(line: 3671, column: 7, scope: !12269)
!12273 = !DILocation(line: 3671, column: 29, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12269, file: !3, line: 3671, column: 2)
!12275 = !DILocation(line: 3671, column: 32, scope: !12274)
!12276 = !DILocation(line: 3671, column: 2, scope: !12269)
!12277 = !DILocalVariable(name: "gc", scope: !12278, file: !3, line: 3672, type: !4096)
!12278 = distinct !DILexicalBlock(scope: !12274, file: !3, line: 3671, column: 42)
!12279 = !DILocation(line: 3672, column: 21, scope: !12278)
!12280 = !DILocation(line: 3675, column: 7, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 3675, column: 7)
!12282 = !DILocation(line: 3675, column: 10, scope: !12281)
!12283 = !DILocation(line: 3675, column: 17, scope: !12281)
!12284 = !DILocation(line: 3675, column: 14, scope: !12281)
!12285 = !DILocation(line: 3675, column: 7, scope: !12278)
!12286 = !DILocation(line: 3676, column: 4, scope: !12281)
!12287 = !DILocation(line: 3679, column: 7, scope: !12288)
!12288 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 3679, column: 7)
!12289 = !DILocation(line: 3679, column: 10, scope: !12288)
!12290 = !DILocation(line: 3679, column: 17, scope: !12288)
!12291 = !DILocation(line: 3679, column: 22, scope: !12288)
!12292 = !DILocation(line: 3679, column: 29, scope: !12288)
!12293 = !DILocation(line: 3679, column: 39, scope: !12288)
!12294 = !DILocation(line: 3679, column: 42, scope: !12288)
!12295 = !DILocation(line: 3679, column: 50, scope: !12288)
!12296 = !DILocation(line: 3679, column: 32, scope: !12288)
!12297 = !DILocation(line: 3679, column: 7, scope: !12278)
!12298 = !DILocation(line: 3680, column: 4, scope: !12288)
!12299 = !DILocation(line: 3682, column: 7, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 3682, column: 7)
!12301 = !DILocation(line: 3682, column: 10, scope: !12300)
!12302 = !DILocation(line: 3682, column: 21, scope: !12300)
!12303 = !DILocation(line: 3682, column: 7, scope: !12278)
!12304 = !DILocation(line: 3683, column: 29, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12300, file: !3, line: 3682, column: 33)
!12306 = !DILocation(line: 3683, column: 32, scope: !12305)
!12307 = !DILocation(line: 3683, column: 11, scope: !12305)
!12308 = !DILocation(line: 3683, column: 9, scope: !12305)
!12309 = !DILocation(line: 3684, column: 8, scope: !12310)
!12310 = distinct !DILexicalBlock(scope: !12305, file: !3, line: 3684, column: 8)
!12311 = !DILocation(line: 3684, column: 8, scope: !12305)
!12312 = !DILocation(line: 3685, column: 14, scope: !12313)
!12313 = distinct !DILexicalBlock(scope: !12310, file: !3, line: 3684, column: 14)
!12314 = !DILocation(line: 3685, column: 17, scope: !12313)
!12315 = !DILocation(line: 3685, column: 6, scope: !12313)
!12316 = !DILocation(line: 3685, column: 12, scope: !12313)
!12317 = !DILocation(line: 3686, column: 12, scope: !12313)
!12318 = !DILocation(line: 3686, column: 5, scope: !12313)
!12319 = !DILocation(line: 3689, column: 4, scope: !12305)
!12320 = !DILocation(line: 3691, column: 11, scope: !12305)
!12321 = !DILocation(line: 3691, column: 4, scope: !12305)
!12322 = !DILocation(line: 3694, column: 26, scope: !12278)
!12323 = !DILocation(line: 3694, column: 29, scope: !12278)
!12324 = !DILocation(line: 3694, column: 8, scope: !12278)
!12325 = !DILocation(line: 3694, column: 6, scope: !12278)
!12326 = !DILocation(line: 3696, column: 8, scope: !12327)
!12327 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 3696, column: 7)
!12328 = !DILocation(line: 3696, column: 7, scope: !12278)
!12329 = !DILocation(line: 3704, column: 4, scope: !12330)
!12330 = distinct !DILexicalBlock(scope: !12327, file: !3, line: 3696, column: 12)
!12331 = !DILocation(line: 3706, column: 11, scope: !12330)
!12332 = !DILocation(line: 3706, column: 4, scope: !12330)
!12333 = !DILocation(line: 3709, column: 7, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 3709, column: 7)
!12335 = !DILocation(line: 3709, column: 11, scope: !12334)
!12336 = !DILocation(line: 3709, column: 20, scope: !12334)
!12337 = !DILocation(line: 3709, column: 23, scope: !12334)
!12338 = !DILocation(line: 3709, column: 17, scope: !12334)
!12339 = !DILocation(line: 3709, column: 7, scope: !12278)
!12340 = !DILocation(line: 3710, column: 4, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12334, file: !3, line: 3709, column: 35)
!12342 = !DILocation(line: 3714, column: 11, scope: !12341)
!12343 = !DILocation(line: 3714, column: 4, scope: !12341)
!12344 = !DILocation(line: 3717, column: 28, scope: !12278)
!12345 = !DILocation(line: 3717, column: 32, scope: !12278)
!12346 = !DILocation(line: 3717, column: 35, scope: !12278)
!12347 = !DILocation(line: 3717, column: 10, scope: !12278)
!12348 = !DILocation(line: 3717, column: 8, scope: !12278)
!12349 = !DILocation(line: 3718, column: 12, scope: !12278)
!12350 = !DILocation(line: 3718, column: 15, scope: !12278)
!12351 = !DILocation(line: 3718, column: 4, scope: !12278)
!12352 = !DILocation(line: 3718, column: 10, scope: !12278)
!12353 = !DILocation(line: 3720, column: 10, scope: !12278)
!12354 = !DILocation(line: 3720, column: 3, scope: !12278)
!12355 = !DILocation(line: 3671, column: 38, scope: !12274)
!12356 = !DILocation(line: 3671, column: 2, scope: !12274)
!12357 = distinct !{!12357, !12276, !12358}
!12358 = !DILocation(line: 3721, column: 2, scope: !12269)
!12359 = !DILocation(line: 3723, column: 9, scope: !12242)
!12360 = !DILocation(line: 3723, column: 2, scope: !12242)
!12361 = !DILocation(line: 3724, column: 1, scope: !12242)
!12362 = distinct !DISubprogram(name: "gpiod_put", scope: !3, file: !3, line: 4316, type: !8591, scopeLine: 4317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!12363 = !DILocalVariable(name: "desc", arg: 1, scope: !12362, file: !3, line: 4316, type: !4232)
!12364 = !DILocation(line: 4316, column: 34, scope: !12362)
!12365 = !DILocation(line: 4318, column: 6, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12362, file: !3, line: 4318, column: 6)
!12367 = !DILocation(line: 4318, column: 6, scope: !12362)
!12368 = !DILocation(line: 4319, column: 14, scope: !12366)
!12369 = !DILocation(line: 4319, column: 3, scope: !12366)
!12370 = !DILocation(line: 4320, column: 1, scope: !12362)
!12371 = distinct !DISubprogram(name: "is_of_node", scope: !3620, file: !3620, line: 155, type: !3647, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!12372 = !DILocalVariable(name: "fwnode", arg: 1, scope: !12371, file: !3620, line: 155, type: !3649)
!12373 = !DILocation(line: 155, column: 59, scope: !12371)
!12374 = !DILocation(line: 157, column: 25, scope: !12371)
!12375 = !DILocation(line: 157, column: 10, scope: !12371)
!12376 = !DILocation(line: 157, column: 33, scope: !12371)
!12377 = !DILocation(line: 157, column: 36, scope: !12371)
!12378 = !DILocation(line: 157, column: 44, scope: !12371)
!12379 = !DILocation(line: 157, column: 48, scope: !12371)
!12380 = !DILocation(line: 0, scope: !12371)
!12381 = !DILocation(line: 157, column: 2, scope: !12371)
!12382 = distinct !DISubprogram(name: "is_acpi_node", scope: !4263, file: !4263, line: 400, type: !3647, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!12383 = !DILocalVariable(name: "fwnode", arg: 1, scope: !12382, file: !4263, line: 400, type: !3649)
!12384 = !DILocation(line: 400, column: 61, scope: !12382)
!12385 = !DILocation(line: 402, column: 30, scope: !12382)
!12386 = !DILocation(line: 402, column: 10, scope: !12382)
!12387 = !DILocation(line: 402, column: 38, scope: !12382)
!12388 = !DILocation(line: 402, column: 59, scope: !12382)
!12389 = !DILocation(line: 402, column: 41, scope: !12382)
!12390 = !DILocation(line: 402, column: 2, scope: !12382)
!12391 = distinct !DISubprogram(name: "gpiod_hog", scope: !3, file: !3, line: 4115, type: !8874, scopeLine: 4117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!12392 = !DILocalVariable(name: "desc", arg: 1, scope: !12391, file: !3, line: 4115, type: !4232)
!12393 = !DILocation(line: 4115, column: 33, scope: !12391)
!12394 = !DILocalVariable(name: "name", arg: 2, scope: !12391, file: !3, line: 4115, type: !233)
!12395 = !DILocation(line: 4115, column: 51, scope: !12391)
!12396 = !DILocalVariable(name: "lflags", arg: 3, scope: !12391, file: !3, line: 4116, type: !342)
!12397 = !DILocation(line: 4116, column: 22, scope: !12391)
!12398 = !DILocalVariable(name: "dflags", arg: 4, scope: !12391, file: !3, line: 4116, type: !157)
!12399 = !DILocation(line: 4116, column: 47, scope: !12391)
!12400 = !DILocalVariable(name: "gc", scope: !12391, file: !3, line: 4118, type: !4096)
!12401 = !DILocation(line: 4118, column: 20, scope: !12391)
!12402 = !DILocalVariable(name: "local_desc", scope: !12391, file: !3, line: 4119, type: !4232)
!12403 = !DILocation(line: 4119, column: 20, scope: !12391)
!12404 = !DILocalVariable(name: "hwnum", scope: !12391, file: !3, line: 4120, type: !224)
!12405 = !DILocation(line: 4120, column: 6, scope: !12391)
!12406 = !DILocalVariable(name: "ret", scope: !12391, file: !3, line: 4121, type: !224)
!12407 = !DILocation(line: 4121, column: 6, scope: !12391)
!12408 = !DILocation(line: 4123, column: 21, scope: !12391)
!12409 = !DILocation(line: 4123, column: 7, scope: !12391)
!12410 = !DILocation(line: 4123, column: 5, scope: !12391)
!12411 = !DILocation(line: 4124, column: 27, scope: !12391)
!12412 = !DILocation(line: 4124, column: 10, scope: !12391)
!12413 = !DILocation(line: 4124, column: 8, scope: !12391)
!12414 = !DILocation(line: 4126, column: 41, scope: !12391)
!12415 = !DILocation(line: 4126, column: 45, scope: !12391)
!12416 = !DILocation(line: 4126, column: 52, scope: !12391)
!12417 = !DILocation(line: 4127, column: 13, scope: !12391)
!12418 = !DILocation(line: 4127, column: 21, scope: !12391)
!12419 = !DILocation(line: 4126, column: 15, scope: !12391)
!12420 = !DILocation(line: 4126, column: 13, scope: !12391)
!12421 = !DILocation(line: 4128, column: 13, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12391, file: !3, line: 4128, column: 6)
!12423 = !DILocation(line: 4128, column: 6, scope: !12422)
!12424 = !DILocation(line: 4128, column: 6, scope: !12391)
!12425 = !DILocation(line: 4129, column: 17, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !12422, file: !3, line: 4128, column: 26)
!12427 = !DILocation(line: 4129, column: 9, scope: !12426)
!12428 = !DILocation(line: 4129, column: 7, scope: !12426)
!12429 = !DILocation(line: 4130, column: 3, scope: !12426)
!12430 = !DILocation(line: 4132, column: 10, scope: !12426)
!12431 = !DILocation(line: 4132, column: 3, scope: !12426)
!12432 = !DILocation(line: 4136, column: 27, scope: !12391)
!12433 = !DILocation(line: 4136, column: 33, scope: !12391)
!12434 = !DILocation(line: 4136, column: 2, scope: !12391)
!12435 = !DILocation(line: 4138, column: 2, scope: !12391)
!12436 = !DILocation(line: 4143, column: 2, scope: !12391)
!12437 = !DILocation(line: 4144, column: 1, scope: !12391)
!12438 = distinct !DISubprogram(name: "gpiod_get_array", scope: !3, file: !3, line: 4172, type: !12439, scopeLine: 4175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!12439 = !DISubroutineType(types: !12440)
!12440 = !{!12441, !3325, !233, !157}
!12441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12442, size: 64)
!12442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_descs", file: !158, line: 33, size: 128, elements: !12443)
!12443 = !{!12444, !12445, !12446}
!12444 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !12442, file: !158, line: 34, baseType: !9644, size: 64)
!12445 = !DIDerivedType(tag: DW_TAG_member, name: "ndescs", scope: !12442, file: !158, line: 35, baseType: !7, size: 32, offset: 64)
!12446 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !12442, file: !158, line: 36, baseType: !12447, offset: 128)
!12447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4232, elements: !2349)
!12448 = !DILocalVariable(name: "map", arg: 1, scope: !12449, file: !10028, line: 405, type: !3758)
!12449 = distinct !DISubprogram(name: "bitmap_set", scope: !10028, file: !10028, line: 405, type: !12450, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!12450 = !DISubroutineType(types: !12451)
!12451 = !{null, !3758, !7, !7}
!12452 = !DILocation(line: 405, column: 55, scope: !12449, inlinedAt: !12453)
!12453 = distinct !DILocation(line: 4234, column: 4, scope: !12454)
!12454 = distinct !DILexicalBlock(scope: !12455, file: !3, line: 4204, column: 58)
!12455 = distinct !DILexicalBlock(scope: !12456, file: !3, line: 4204, column: 7)
!12456 = distinct !DILexicalBlock(scope: !12457, file: !3, line: 4190, column: 51)
!12457 = distinct !DILexicalBlock(scope: !12458, file: !3, line: 4190, column: 2)
!12458 = distinct !DILexicalBlock(scope: !12438, file: !3, line: 4190, column: 2)
!12459 = !DILocalVariable(name: "start", arg: 2, scope: !12449, file: !10028, line: 405, type: !7)
!12460 = !DILocation(line: 405, column: 73, scope: !12449, inlinedAt: !12453)
!12461 = !DILocalVariable(name: "nbits", arg: 3, scope: !12449, file: !10028, line: 406, type: !7)
!12462 = !DILocation(line: 406, column: 16, scope: !12449, inlinedAt: !12453)
!12463 = !DILocation(line: 405, column: 55, scope: !12449, inlinedAt: !12464)
!12464 = distinct !DILocation(line: 4232, column: 4, scope: !12454)
!12465 = !DILocation(line: 405, column: 73, scope: !12449, inlinedAt: !12464)
!12466 = !DILocation(line: 406, column: 16, scope: !12449, inlinedAt: !12464)
!12467 = !DILocalVariable(name: "dev", arg: 1, scope: !12438, file: !3, line: 4172, type: !3325)
!12468 = !DILocation(line: 4172, column: 64, scope: !12438)
!12469 = !DILocalVariable(name: "con_id", arg: 2, scope: !12438, file: !3, line: 4173, type: !233)
!12470 = !DILocation(line: 4173, column: 19, scope: !12438)
!12471 = !DILocalVariable(name: "flags", arg: 3, scope: !12438, file: !3, line: 4174, type: !157)
!12472 = !DILocation(line: 4174, column: 24, scope: !12438)
!12473 = !DILocalVariable(name: "desc", scope: !12438, file: !3, line: 4176, type: !4232)
!12474 = !DILocation(line: 4176, column: 20, scope: !12438)
!12475 = !DILocalVariable(name: "descs", scope: !12438, file: !3, line: 4177, type: !12441)
!12476 = !DILocation(line: 4177, column: 21, scope: !12438)
!12477 = !DILocalVariable(name: "array_info", scope: !12438, file: !3, line: 4178, type: !9644)
!12478 = !DILocation(line: 4178, column: 21, scope: !12438)
!12479 = !DILocalVariable(name: "gc", scope: !12438, file: !3, line: 4179, type: !4096)
!12480 = !DILocation(line: 4179, column: 20, scope: !12438)
!12481 = !DILocalVariable(name: "count", scope: !12438, file: !3, line: 4180, type: !224)
!12482 = !DILocation(line: 4180, column: 6, scope: !12438)
!12483 = !DILocalVariable(name: "bitmap_size", scope: !12438, file: !3, line: 4180, type: !224)
!12484 = !DILocation(line: 4180, column: 13, scope: !12438)
!12485 = !DILocation(line: 4182, column: 22, scope: !12438)
!12486 = !DILocation(line: 4182, column: 27, scope: !12438)
!12487 = !DILocation(line: 4182, column: 10, scope: !12438)
!12488 = !DILocation(line: 4182, column: 8, scope: !12438)
!12489 = !DILocation(line: 4183, column: 6, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12438, file: !3, line: 4183, column: 6)
!12491 = !DILocation(line: 4183, column: 12, scope: !12490)
!12492 = !DILocation(line: 4183, column: 6, scope: !12438)
!12493 = !DILocation(line: 4184, column: 18, scope: !12490)
!12494 = !DILocation(line: 4184, column: 10, scope: !12490)
!12495 = !DILocation(line: 4184, column: 3, scope: !12490)
!12496 = !DILocation(line: 4186, column: 18, scope: !12438)
!12497 = !DILocation(line: 4186, column: 10, scope: !12438)
!12498 = !DILocation(line: 4186, column: 8, scope: !12438)
!12499 = !DILocation(line: 4187, column: 7, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12438, file: !3, line: 4187, column: 6)
!12501 = !DILocation(line: 4187, column: 6, scope: !12438)
!12502 = !DILocation(line: 4188, column: 10, scope: !12500)
!12503 = !DILocation(line: 4188, column: 3, scope: !12500)
!12504 = !DILocation(line: 4190, column: 7, scope: !12458)
!12505 = !DILocation(line: 4190, column: 14, scope: !12458)
!12506 = !DILocation(line: 4190, column: 21, scope: !12458)
!12507 = !DILocation(line: 4190, column: 26, scope: !12457)
!12508 = !DILocation(line: 4190, column: 33, scope: !12457)
!12509 = !DILocation(line: 4190, column: 42, scope: !12457)
!12510 = !DILocation(line: 4190, column: 40, scope: !12457)
!12511 = !DILocation(line: 4190, column: 2, scope: !12458)
!12512 = !DILocation(line: 4191, column: 26, scope: !12456)
!12513 = !DILocation(line: 4191, column: 31, scope: !12456)
!12514 = !DILocation(line: 4191, column: 39, scope: !12456)
!12515 = !DILocation(line: 4191, column: 46, scope: !12456)
!12516 = !DILocation(line: 4191, column: 54, scope: !12456)
!12517 = !DILocation(line: 4191, column: 10, scope: !12456)
!12518 = !DILocation(line: 4191, column: 8, scope: !12456)
!12519 = !DILocation(line: 4192, column: 14, scope: !12520)
!12520 = distinct !DILexicalBlock(scope: !12456, file: !3, line: 4192, column: 7)
!12521 = !DILocation(line: 4192, column: 7, scope: !12520)
!12522 = !DILocation(line: 4192, column: 7, scope: !12456)
!12523 = !DILocation(line: 4193, column: 20, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12520, file: !3, line: 4192, column: 21)
!12525 = !DILocation(line: 4193, column: 4, scope: !12524)
!12526 = !DILocation(line: 4194, column: 20, scope: !12524)
!12527 = !DILocation(line: 4194, column: 11, scope: !12524)
!12528 = !DILocation(line: 4194, column: 4, scope: !12524)
!12529 = !DILocation(line: 4197, column: 32, scope: !12456)
!12530 = !DILocation(line: 4197, column: 3, scope: !12456)
!12531 = !DILocation(line: 4197, column: 10, scope: !12456)
!12532 = !DILocation(line: 4197, column: 15, scope: !12456)
!12533 = !DILocation(line: 4197, column: 22, scope: !12456)
!12534 = !DILocation(line: 4197, column: 30, scope: !12456)
!12535 = !DILocation(line: 4199, column: 22, scope: !12456)
!12536 = !DILocation(line: 4199, column: 8, scope: !12456)
!12537 = !DILocation(line: 4199, column: 6, scope: !12456)
!12538 = !DILocation(line: 4204, column: 7, scope: !12455)
!12539 = !DILocation(line: 4204, column: 14, scope: !12455)
!12540 = !DILocation(line: 4204, column: 21, scope: !12455)
!12541 = !DILocation(line: 4204, column: 26, scope: !12455)
!12542 = !DILocation(line: 4204, column: 46, scope: !12455)
!12543 = !DILocation(line: 4204, column: 29, scope: !12455)
!12544 = !DILocation(line: 4204, column: 52, scope: !12455)
!12545 = !DILocation(line: 4204, column: 7, scope: !12456)
!12546 = !DILocalVariable(name: "array", scope: !12454, file: !3, line: 4205, type: !12441)
!12547 = !DILocation(line: 4205, column: 23, scope: !12454)
!12548 = !DILocation(line: 4207, column: 18, scope: !12454)
!12549 = !DILocation(line: 4207, column: 16, scope: !12454)
!12550 = !DILocation(line: 4210, column: 20, scope: !12454)
!12551 = !DILocation(line: 4211, column: 6, scope: !12454)
!12552 = !DILocation(line: 4210, column: 52, scope: !12454)
!12553 = !DILocation(line: 4210, column: 12, scope: !12454)
!12554 = !DILocation(line: 4210, column: 10, scope: !12454)
!12555 = !DILocation(line: 4213, column: 9, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12454, file: !3, line: 4213, column: 8)
!12557 = !DILocation(line: 4213, column: 8, scope: !12454)
!12558 = !DILocation(line: 4214, column: 21, scope: !12559)
!12559 = distinct !DILexicalBlock(scope: !12556, file: !3, line: 4213, column: 16)
!12560 = !DILocation(line: 4214, column: 5, scope: !12559)
!12561 = !DILocation(line: 4215, column: 12, scope: !12559)
!12562 = !DILocation(line: 4215, column: 5, scope: !12559)
!12563 = !DILocation(line: 4218, column: 11, scope: !12454)
!12564 = !DILocation(line: 4218, column: 4, scope: !12454)
!12565 = !DILocation(line: 4218, column: 18, scope: !12454)
!12566 = !DILocation(line: 4219, column: 11, scope: !12454)
!12567 = !DILocation(line: 4220, column: 10, scope: !12454)
!12568 = !DILocation(line: 4220, column: 4, scope: !12454)
!12569 = !DILocation(line: 4222, column: 12, scope: !12454)
!12570 = !DILocation(line: 4222, column: 10, scope: !12454)
!12571 = !DILocation(line: 4223, column: 26, scope: !12454)
!12572 = !DILocation(line: 4223, column: 33, scope: !12454)
!12573 = !DILocation(line: 4223, column: 40, scope: !12454)
!12574 = !DILocation(line: 4223, column: 38, scope: !12454)
!12575 = !DILocation(line: 4223, column: 17, scope: !12454)
!12576 = !DILocation(line: 4223, column: 15, scope: !12454)
!12577 = !DILocation(line: 4224, column: 27, scope: !12454)
!12578 = !DILocation(line: 4224, column: 39, scope: !12454)
!12579 = !DILocation(line: 4225, column: 9, scope: !12454)
!12580 = !DILocation(line: 4224, column: 51, scope: !12454)
!12581 = !DILocation(line: 4224, column: 4, scope: !12454)
!12582 = !DILocation(line: 4224, column: 16, scope: !12454)
!12583 = !DILocation(line: 4224, column: 25, scope: !12454)
!12584 = !DILocation(line: 4226, column: 27, scope: !12454)
!12585 = !DILocation(line: 4226, column: 39, scope: !12454)
!12586 = !DILocation(line: 4227, column: 9, scope: !12454)
!12587 = !DILocation(line: 4226, column: 48, scope: !12454)
!12588 = !DILocation(line: 4226, column: 4, scope: !12454)
!12589 = !DILocation(line: 4226, column: 16, scope: !12454)
!12590 = !DILocation(line: 4226, column: 25, scope: !12454)
!12591 = !DILocation(line: 4229, column: 23, scope: !12454)
!12592 = !DILocation(line: 4229, column: 30, scope: !12454)
!12593 = !DILocation(line: 4229, column: 4, scope: !12454)
!12594 = !DILocation(line: 4229, column: 16, scope: !12454)
!12595 = !DILocation(line: 4229, column: 21, scope: !12454)
!12596 = !DILocation(line: 4230, column: 23, scope: !12454)
!12597 = !DILocation(line: 4230, column: 4, scope: !12454)
!12598 = !DILocation(line: 4230, column: 16, scope: !12454)
!12599 = !DILocation(line: 4230, column: 21, scope: !12454)
!12600 = !DILocation(line: 4231, column: 23, scope: !12454)
!12601 = !DILocation(line: 4231, column: 4, scope: !12454)
!12602 = !DILocation(line: 4231, column: 16, scope: !12454)
!12603 = !DILocation(line: 4231, column: 21, scope: !12454)
!12604 = !DILocation(line: 4232, column: 15, scope: !12454)
!12605 = !DILocation(line: 4232, column: 27, scope: !12454)
!12606 = !DILocation(line: 4232, column: 37, scope: !12454)
!12607 = !DILocation(line: 4232, column: 44, scope: !12454)
!12608 = !DILocation(line: 4233, column: 8, scope: !12454)
!12609 = !DILocation(line: 4233, column: 16, scope: !12454)
!12610 = !DILocation(line: 4233, column: 23, scope: !12454)
!12611 = !DILocation(line: 4233, column: 14, scope: !12454)
!12612 = !DILocation(line: 408, column: 27, scope: !12613, inlinedAt: !12464)
!12613 = distinct !DILexicalBlock(scope: !12449, file: !10028, line: 408, column: 6)
!12614 = !DILocation(line: 408, column: 6, scope: !12613, inlinedAt: !12464)
!12615 = !DILocation(line: 408, column: 34, scope: !12613, inlinedAt: !12464)
!12616 = !DILocation(line: 408, column: 37, scope: !12613, inlinedAt: !12464)
!12617 = !DILocation(line: 408, column: 43, scope: !12613, inlinedAt: !12464)
!12618 = !DILocation(line: 408, column: 6, scope: !12449, inlinedAt: !12464)
!12619 = !DILocation(line: 409, column: 13, scope: !12613, inlinedAt: !12464)
!12620 = !DILocation(line: 409, column: 20, scope: !12613, inlinedAt: !12464)
!12621 = !DILocation(line: 409, column: 3, scope: !12613, inlinedAt: !12464)
!12622 = !DILocation(line: 410, column: 32, scope: !12623, inlinedAt: !12464)
!12623 = distinct !DILexicalBlock(scope: !12613, file: !10028, line: 410, column: 11)
!12624 = !DILocation(line: 410, column: 38, scope: !12623, inlinedAt: !12464)
!12625 = !DILocation(line: 410, column: 11, scope: !12623, inlinedAt: !12464)
!12626 = !DILocation(line: 410, column: 57, scope: !12623, inlinedAt: !12464)
!12627 = !DILocation(line: 411, column: 4, scope: !12623, inlinedAt: !12464)
!12628 = !DILocation(line: 411, column: 44, scope: !12623, inlinedAt: !12464)
!12629 = !DILocation(line: 412, column: 25, scope: !12623, inlinedAt: !12464)
!12630 = !DILocation(line: 412, column: 31, scope: !12623, inlinedAt: !12464)
!12631 = !DILocation(line: 412, column: 4, scope: !12623, inlinedAt: !12464)
!12632 = !DILocation(line: 412, column: 50, scope: !12623, inlinedAt: !12464)
!12633 = !DILocation(line: 413, column: 4, scope: !12623, inlinedAt: !12464)
!12634 = !DILocation(line: 410, column: 11, scope: !12613, inlinedAt: !12464)
!12635 = !DILocation(line: 414, column: 18, scope: !12623, inlinedAt: !12464)
!12636 = !DILocation(line: 414, column: 10, scope: !12623, inlinedAt: !12464)
!12637 = !DILocation(line: 414, column: 24, scope: !12623, inlinedAt: !12464)
!12638 = !DILocation(line: 414, column: 30, scope: !12623, inlinedAt: !12464)
!12639 = !DILocation(line: 414, column: 22, scope: !12623, inlinedAt: !12464)
!12640 = !DILocation(line: 414, column: 41, scope: !12623, inlinedAt: !12464)
!12641 = !DILocation(line: 414, column: 47, scope: !12623, inlinedAt: !12464)
!12642 = !DILocation(line: 414, column: 3, scope: !12623, inlinedAt: !12464)
!12643 = !DILocation(line: 416, column: 16, scope: !12623, inlinedAt: !12464)
!12644 = !DILocation(line: 416, column: 21, scope: !12623, inlinedAt: !12464)
!12645 = !DILocation(line: 416, column: 28, scope: !12623, inlinedAt: !12464)
!12646 = !DILocation(line: 416, column: 3, scope: !12623, inlinedAt: !12464)
!12647 = !DILocation(line: 4234, column: 15, scope: !12454)
!12648 = !DILocation(line: 4234, column: 27, scope: !12454)
!12649 = !DILocation(line: 4234, column: 37, scope: !12454)
!12650 = !DILocation(line: 4234, column: 44, scope: !12454)
!12651 = !DILocation(line: 4235, column: 8, scope: !12454)
!12652 = !DILocation(line: 4235, column: 16, scope: !12454)
!12653 = !DILocation(line: 4235, column: 23, scope: !12454)
!12654 = !DILocation(line: 4235, column: 14, scope: !12454)
!12655 = !DILocation(line: 408, column: 27, scope: !12613, inlinedAt: !12453)
!12656 = !DILocation(line: 408, column: 6, scope: !12613, inlinedAt: !12453)
!12657 = !DILocation(line: 408, column: 34, scope: !12613, inlinedAt: !12453)
!12658 = !DILocation(line: 408, column: 37, scope: !12613, inlinedAt: !12453)
!12659 = !DILocation(line: 408, column: 43, scope: !12613, inlinedAt: !12453)
!12660 = !DILocation(line: 408, column: 6, scope: !12449, inlinedAt: !12453)
!12661 = !DILocation(line: 409, column: 13, scope: !12613, inlinedAt: !12453)
!12662 = !DILocation(line: 409, column: 20, scope: !12613, inlinedAt: !12453)
!12663 = !DILocation(line: 409, column: 3, scope: !12613, inlinedAt: !12453)
!12664 = !DILocation(line: 410, column: 32, scope: !12623, inlinedAt: !12453)
!12665 = !DILocation(line: 410, column: 38, scope: !12623, inlinedAt: !12453)
!12666 = !DILocation(line: 410, column: 11, scope: !12623, inlinedAt: !12453)
!12667 = !DILocation(line: 410, column: 57, scope: !12623, inlinedAt: !12453)
!12668 = !DILocation(line: 411, column: 4, scope: !12623, inlinedAt: !12453)
!12669 = !DILocation(line: 411, column: 44, scope: !12623, inlinedAt: !12453)
!12670 = !DILocation(line: 412, column: 25, scope: !12623, inlinedAt: !12453)
!12671 = !DILocation(line: 412, column: 31, scope: !12623, inlinedAt: !12453)
!12672 = !DILocation(line: 412, column: 4, scope: !12623, inlinedAt: !12453)
!12673 = !DILocation(line: 412, column: 50, scope: !12623, inlinedAt: !12453)
!12674 = !DILocation(line: 413, column: 4, scope: !12623, inlinedAt: !12453)
!12675 = !DILocation(line: 410, column: 11, scope: !12613, inlinedAt: !12453)
!12676 = !DILocation(line: 414, column: 18, scope: !12623, inlinedAt: !12453)
!12677 = !DILocation(line: 414, column: 10, scope: !12623, inlinedAt: !12453)
!12678 = !DILocation(line: 414, column: 24, scope: !12623, inlinedAt: !12453)
!12679 = !DILocation(line: 414, column: 30, scope: !12623, inlinedAt: !12453)
!12680 = !DILocation(line: 414, column: 22, scope: !12623, inlinedAt: !12453)
!12681 = !DILocation(line: 414, column: 41, scope: !12623, inlinedAt: !12453)
!12682 = !DILocation(line: 414, column: 47, scope: !12623, inlinedAt: !12453)
!12683 = !DILocation(line: 414, column: 3, scope: !12623, inlinedAt: !12453)
!12684 = !DILocation(line: 416, column: 16, scope: !12623, inlinedAt: !12453)
!12685 = !DILocation(line: 416, column: 21, scope: !12623, inlinedAt: !12453)
!12686 = !DILocation(line: 416, column: 28, scope: !12623, inlinedAt: !12453)
!12687 = !DILocation(line: 416, column: 3, scope: !12623, inlinedAt: !12453)
!12688 = !DILocation(line: 4236, column: 18, scope: !12454)
!12689 = !DILocation(line: 4236, column: 4, scope: !12454)
!12690 = !DILocation(line: 4236, column: 11, scope: !12454)
!12691 = !DILocation(line: 4236, column: 16, scope: !12454)
!12692 = !DILocation(line: 4237, column: 3, scope: !12454)
!12693 = !DILocation(line: 4239, column: 7, scope: !12694)
!12694 = distinct !DILexicalBlock(scope: !12456, file: !3, line: 4239, column: 7)
!12695 = !DILocation(line: 4239, column: 18, scope: !12694)
!12696 = !DILocation(line: 4239, column: 21, scope: !12694)
!12697 = !DILocation(line: 4239, column: 33, scope: !12694)
!12698 = !DILocation(line: 4239, column: 41, scope: !12694)
!12699 = !DILocation(line: 4239, column: 38, scope: !12694)
!12700 = !DILocation(line: 4239, column: 7, scope: !12456)
!12701 = !DILocation(line: 4240, column: 16, scope: !12702)
!12702 = distinct !DILexicalBlock(scope: !12694, file: !3, line: 4239, column: 45)
!12703 = !DILocation(line: 4240, column: 23, scope: !12702)
!12704 = !DILocation(line: 4240, column: 31, scope: !12702)
!12705 = !DILocation(line: 4240, column: 43, scope: !12702)
!12706 = !DILocation(line: 4240, column: 4, scope: !12702)
!12707 = !DILocation(line: 4241, column: 16, scope: !12702)
!12708 = !DILocation(line: 4241, column: 23, scope: !12702)
!12709 = !DILocation(line: 4241, column: 31, scope: !12702)
!12710 = !DILocation(line: 4241, column: 43, scope: !12702)
!12711 = !DILocation(line: 4241, column: 4, scope: !12702)
!12712 = !DILocation(line: 4242, column: 3, scope: !12702)
!12713 = !DILocation(line: 4247, column: 12, scope: !12714)
!12714 = distinct !DILexicalBlock(scope: !12694, file: !3, line: 4247, column: 12)
!12715 = !DILocation(line: 4247, column: 23, scope: !12714)
!12716 = !DILocation(line: 4248, column: 24, scope: !12714)
!12717 = !DILocation(line: 4248, column: 7, scope: !12714)
!12718 = !DILocation(line: 4248, column: 33, scope: !12714)
!12719 = !DILocation(line: 4248, column: 40, scope: !12714)
!12720 = !DILocation(line: 4248, column: 30, scope: !12714)
!12721 = !DILocation(line: 4247, column: 12, scope: !12694)
!12722 = !DILocation(line: 4254, column: 20, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12724, file: !3, line: 4254, column: 8)
!12724 = distinct !DILexicalBlock(scope: !12714, file: !3, line: 4248, column: 48)
!12725 = !DILocation(line: 4254, column: 32, scope: !12723)
!12726 = !DILocation(line: 4254, column: 42, scope: !12723)
!12727 = !DILocation(line: 4254, column: 49, scope: !12723)
!12728 = !DILocation(line: 4254, column: 8, scope: !12723)
!12729 = !DILocation(line: 4254, column: 8, scope: !12724)
!12730 = !DILocation(line: 4255, column: 16, scope: !12731)
!12731 = distinct !DILexicalBlock(scope: !12723, file: !3, line: 4254, column: 58)
!12732 = !DILocation(line: 4256, column: 4, scope: !12731)
!12733 = !DILocation(line: 4257, column: 17, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12723, file: !3, line: 4256, column: 11)
!12735 = !DILocation(line: 4257, column: 24, scope: !12734)
!12736 = !DILocation(line: 4258, column: 10, scope: !12734)
!12737 = !DILocation(line: 4258, column: 22, scope: !12734)
!12738 = !DILocation(line: 4257, column: 5, scope: !12734)
!12739 = !DILocation(line: 4259, column: 17, scope: !12734)
!12740 = !DILocation(line: 4259, column: 24, scope: !12734)
!12741 = !DILocation(line: 4260, column: 10, scope: !12734)
!12742 = !DILocation(line: 4260, column: 22, scope: !12734)
!12743 = !DILocation(line: 4259, column: 5, scope: !12734)
!12744 = !DILocation(line: 4262, column: 3, scope: !12724)
!12745 = !DILocation(line: 4262, column: 14, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !12714, file: !3, line: 4262, column: 14)
!12747 = !DILocation(line: 4262, column: 14, scope: !12714)
!12748 = !DILocation(line: 4264, column: 36, scope: !12749)
!12749 = distinct !DILexicalBlock(scope: !12750, file: !3, line: 4264, column: 8)
!12750 = distinct !DILexicalBlock(scope: !12746, file: !3, line: 4262, column: 26)
!12751 = !DILocation(line: 4264, column: 40, scope: !12749)
!12752 = !DILocation(line: 4264, column: 47, scope: !12749)
!12753 = !DILocation(line: 4264, column: 8, scope: !12749)
!12754 = !DILocation(line: 4264, column: 55, scope: !12749)
!12755 = !DILocation(line: 4265, column: 37, scope: !12749)
!12756 = !DILocation(line: 4265, column: 41, scope: !12749)
!12757 = !DILocation(line: 4265, column: 48, scope: !12749)
!12758 = !DILocation(line: 4265, column: 8, scope: !12749)
!12759 = !DILocation(line: 4264, column: 8, scope: !12750)
!12760 = !DILocation(line: 4266, column: 17, scope: !12749)
!12761 = !DILocation(line: 4266, column: 24, scope: !12749)
!12762 = !DILocation(line: 4267, column: 10, scope: !12749)
!12763 = !DILocation(line: 4267, column: 22, scope: !12749)
!12764 = !DILocation(line: 4266, column: 5, scope: !12749)
!12765 = !DILocation(line: 4269, column: 28, scope: !12766)
!12766 = distinct !DILexicalBlock(scope: !12750, file: !3, line: 4269, column: 8)
!12767 = !DILocation(line: 4269, column: 8, scope: !12766)
!12768 = !DILocation(line: 4269, column: 8, scope: !12750)
!12769 = !DILocation(line: 4270, column: 15, scope: !12766)
!12770 = !DILocation(line: 4270, column: 22, scope: !12766)
!12771 = !DILocation(line: 4271, column: 8, scope: !12766)
!12772 = !DILocation(line: 4271, column: 20, scope: !12766)
!12773 = !DILocation(line: 4270, column: 5, scope: !12766)
!12774 = !DILocation(line: 4272, column: 3, scope: !12750)
!12775 = !DILocation(line: 4274, column: 3, scope: !12456)
!12776 = !DILocation(line: 4274, column: 10, scope: !12456)
!12777 = !DILocation(line: 4274, column: 16, scope: !12456)
!12778 = !DILocation(line: 4190, column: 2, scope: !12457)
!12779 = distinct !{!12779, !12511, !12780}
!12780 = !DILocation(line: 4275, column: 2, scope: !12458)
!12781 = !DILocation(line: 4276, column: 6, scope: !12782)
!12782 = distinct !DILexicalBlock(scope: !12438, file: !3, line: 4276, column: 6)
!12783 = !DILocation(line: 4276, column: 6, scope: !12438)
!12784 = !DILocation(line: 4277, column: 3, scope: !12782)
!12785 = !DILocation(line: 4282, column: 9, scope: !12438)
!12786 = !DILocation(line: 4282, column: 2, scope: !12438)
!12787 = !DILocation(line: 4283, column: 1, scope: !12438)
!12788 = distinct !DISubprogram(name: "__ab_c_size", scope: !12789, file: !12789, line: 301, type: !12790, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!12789 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!12790 = !DISubroutineType(types: !12791)
!12791 = !{!339, !339, !339, !339}
!12792 = !DILocalVariable(name: "a", arg: 1, scope: !12788, file: !12789, line: 301, type: !339)
!12793 = !DILocation(line: 301, column: 54, scope: !12788)
!12794 = !DILocalVariable(name: "b", arg: 2, scope: !12788, file: !12789, line: 301, type: !339)
!12795 = !DILocation(line: 301, column: 64, scope: !12788)
!12796 = !DILocalVariable(name: "c", arg: 3, scope: !12788, file: !12789, line: 301, type: !339)
!12797 = !DILocation(line: 301, column: 74, scope: !12788)
!12798 = !DILocalVariable(name: "bytes", scope: !12788, file: !12789, line: 303, type: !339)
!12799 = !DILocation(line: 303, column: 9, scope: !12788)
!12800 = !DILocalVariable(name: "__a", scope: !12801, file: !12789, line: 305, type: !339)
!12801 = distinct !DILexicalBlock(scope: !12802, file: !12789, line: 305, column: 6)
!12802 = distinct !DILexicalBlock(scope: !12788, file: !12789, line: 305, column: 6)
!12803 = !DILocation(line: 305, column: 6, scope: !12801)
!12804 = !DILocalVariable(name: "__b", scope: !12801, file: !12789, line: 305, type: !339)
!12805 = !DILocalVariable(name: "__d", scope: !12801, file: !12789, line: 305, type: !10118)
!12806 = !DILocation(line: 305, column: 6, scope: !12802)
!12807 = !DILocation(line: 305, column: 6, scope: !12788)
!12808 = !DILocation(line: 306, column: 3, scope: !12802)
!12809 = !DILocalVariable(name: "__a", scope: !12810, file: !12789, line: 307, type: !339)
!12810 = distinct !DILexicalBlock(scope: !12811, file: !12789, line: 307, column: 6)
!12811 = distinct !DILexicalBlock(scope: !12788, file: !12789, line: 307, column: 6)
!12812 = !DILocation(line: 307, column: 6, scope: !12810)
!12813 = !DILocalVariable(name: "__b", scope: !12810, file: !12789, line: 307, type: !339)
!12814 = !DILocalVariable(name: "__d", scope: !12810, file: !12789, line: 307, type: !10118)
!12815 = !DILocation(line: 307, column: 6, scope: !12811)
!12816 = !DILocation(line: 307, column: 6, scope: !12788)
!12817 = !DILocation(line: 308, column: 3, scope: !12811)
!12818 = !DILocation(line: 310, column: 9, scope: !12788)
!12819 = !DILocation(line: 310, column: 2, scope: !12788)
!12820 = !DILocation(line: 311, column: 1, scope: !12788)
!12821 = distinct !DISubprogram(name: "gpiod_put_array", scope: !3, file: !3, line: 4327, type: !12822, scopeLine: 4328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!12822 = !DISubroutineType(types: !12823)
!12823 = !{null, !12441}
!12824 = !DILocalVariable(name: "descs", arg: 1, scope: !12821, file: !3, line: 4327, type: !12441)
!12825 = !DILocation(line: 4327, column: 41, scope: !12821)
!12826 = !DILocalVariable(name: "i", scope: !12821, file: !3, line: 4329, type: !7)
!12827 = !DILocation(line: 4329, column: 15, scope: !12821)
!12828 = !DILocation(line: 4331, column: 9, scope: !12829)
!12829 = distinct !DILexicalBlock(scope: !12821, file: !3, line: 4331, column: 2)
!12830 = !DILocation(line: 4331, column: 7, scope: !12829)
!12831 = !DILocation(line: 4331, column: 14, scope: !12832)
!12832 = distinct !DILexicalBlock(scope: !12829, file: !3, line: 4331, column: 2)
!12833 = !DILocation(line: 4331, column: 18, scope: !12832)
!12834 = !DILocation(line: 4331, column: 25, scope: !12832)
!12835 = !DILocation(line: 4331, column: 16, scope: !12832)
!12836 = !DILocation(line: 4331, column: 2, scope: !12829)
!12837 = !DILocation(line: 4332, column: 13, scope: !12832)
!12838 = !DILocation(line: 4332, column: 20, scope: !12832)
!12839 = !DILocation(line: 4332, column: 25, scope: !12832)
!12840 = !DILocation(line: 4332, column: 3, scope: !12832)
!12841 = !DILocation(line: 4331, column: 34, scope: !12832)
!12842 = !DILocation(line: 4331, column: 2, scope: !12832)
!12843 = distinct !{!12843, !12836, !12844}
!12844 = !DILocation(line: 4332, column: 27, scope: !12829)
!12845 = !DILocation(line: 4334, column: 8, scope: !12821)
!12846 = !DILocation(line: 4334, column: 2, scope: !12821)
!12847 = !DILocation(line: 4335, column: 1, scope: !12821)
!12848 = distinct !DISubprogram(name: "ERR_CAST", scope: !4824, file: !4824, line: 51, type: !12849, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!12849 = !DISubroutineType(types: !12850)
!12850 = !{!218, !2145}
!12851 = !DILocalVariable(name: "ptr", arg: 1, scope: !12848, file: !4824, line: 51, type: !2145)
!12852 = !DILocation(line: 51, column: 64, scope: !12848)
!12853 = !DILocation(line: 54, column: 18, scope: !12848)
!12854 = !DILocation(line: 54, column: 2, scope: !12848)
!12855 = distinct !DISubprogram(name: "__clear_bit", scope: !4954, file: !4954, line: 40, type: !9064, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!12856 = !DILocalVariable(name: "nr", arg: 1, scope: !12857, file: !4961, line: 92, type: !327)
!12857 = distinct !DISubprogram(name: "arch___clear_bit", scope: !4961, file: !4961, line: 92, type: !9064, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!12858 = !DILocation(line: 92, column: 23, scope: !12857, inlinedAt: !12859)
!12859 = distinct !DILocation(line: 43, column: 2, scope: !12855)
!12860 = !DILocalVariable(name: "addr", arg: 2, scope: !12857, file: !4961, line: 92, type: !4874)
!12861 = !DILocation(line: 92, column: 51, scope: !12857, inlinedAt: !12859)
!12862 = !DILocation(line: 39, column: 67, scope: !10331, inlinedAt: !12863)
!12863 = distinct !DILocation(line: 42, column: 2, scope: !12855)
!12864 = !DILocation(line: 39, column: 77, scope: !10331, inlinedAt: !12863)
!12865 = !DILocalVariable(name: "nr", arg: 1, scope: !12855, file: !4954, line: 40, type: !327)
!12866 = !DILocation(line: 40, column: 37, scope: !12855)
!12867 = !DILocalVariable(name: "addr", arg: 2, scope: !12855, file: !4954, line: 40, type: !4874)
!12868 = !DILocation(line: 40, column: 65, scope: !12855)
!12869 = !DILocation(line: 42, column: 19, scope: !12855)
!12870 = !DILocation(line: 42, column: 26, scope: !12855)
!12871 = !DILocation(line: 42, column: 24, scope: !12855)
!12872 = !DILocation(line: 41, column: 20, scope: !10331, inlinedAt: !12863)
!12873 = !DILocation(line: 41, column: 23, scope: !10331, inlinedAt: !12863)
!12874 = !DILocation(line: 41, column: 2, scope: !10331, inlinedAt: !12863)
!12875 = !DILocation(line: 42, column: 2, scope: !10331, inlinedAt: !12863)
!12876 = !DILocation(line: 43, column: 19, scope: !12855)
!12877 = !DILocation(line: 43, column: 23, scope: !12855)
!12878 = !DILocation(line: 94, column: 44, scope: !12857, inlinedAt: !12859)
!12879 = !DILocation(line: 94, column: 56, scope: !12857, inlinedAt: !12859)
!12880 = !DILocation(line: 94, column: 2, scope: !12857, inlinedAt: !12859)
!12881 = !{i32 -2147118497}
!12882 = !DILocation(line: 44, column: 1, scope: !12855)
!12883 = distinct !DISubprogram(name: "bitmap_full", scope: !10028, file: !10028, line: 390, type: !10029, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!12884 = !DILocalVariable(name: "src", arg: 1, scope: !12883, file: !10028, line: 390, type: !10031)
!12885 = !DILocation(line: 390, column: 52, scope: !12883)
!12886 = !DILocalVariable(name: "nbits", arg: 2, scope: !12883, file: !10028, line: 390, type: !7)
!12887 = !DILocation(line: 390, column: 70, scope: !12883)
!12888 = !DILocation(line: 392, column: 6, scope: !12889)
!12889 = distinct !DILexicalBlock(scope: !12883, file: !10028, line: 392, column: 6)
!12890 = !DILocation(line: 392, column: 6, scope: !12883)
!12891 = !DILocation(line: 393, column: 16, scope: !12889)
!12892 = !DILocation(line: 393, column: 15, scope: !12889)
!12893 = !DILocation(line: 393, column: 13, scope: !12889)
!12894 = !DILocation(line: 393, column: 23, scope: !12889)
!12895 = !DILocation(line: 393, column: 21, scope: !12889)
!12896 = !DILocation(line: 393, column: 10, scope: !12889)
!12897 = !DILocation(line: 393, column: 3, scope: !12889)
!12898 = !DILocation(line: 395, column: 29, scope: !12883)
!12899 = !DILocation(line: 395, column: 34, scope: !12883)
!12900 = !DILocation(line: 395, column: 9, scope: !12883)
!12901 = !DILocation(line: 395, column: 44, scope: !12883)
!12902 = !DILocation(line: 395, column: 41, scope: !12883)
!12903 = !DILocation(line: 395, column: 2, scope: !12883)
!12904 = !DILocation(line: 396, column: 1, scope: !12883)
!12905 = distinct !DISubprogram(name: "gpiod_get_array_optional", scope: !3, file: !3, line: 4296, type: !12439, scopeLine: 4299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !265)
!12906 = !DILocalVariable(name: "dev", arg: 1, scope: !12905, file: !3, line: 4296, type: !3325)
!12907 = !DILocation(line: 4296, column: 73, scope: !12905)
!12908 = !DILocalVariable(name: "con_id", arg: 2, scope: !12905, file: !3, line: 4297, type: !233)
!12909 = !DILocation(line: 4297, column: 20, scope: !12905)
!12910 = !DILocalVariable(name: "flags", arg: 3, scope: !12905, file: !3, line: 4298, type: !157)
!12911 = !DILocation(line: 4298, column: 25, scope: !12905)
!12912 = !DILocalVariable(name: "descs", scope: !12905, file: !3, line: 4300, type: !12441)
!12913 = !DILocation(line: 4300, column: 21, scope: !12905)
!12914 = !DILocation(line: 4302, column: 26, scope: !12905)
!12915 = !DILocation(line: 4302, column: 31, scope: !12905)
!12916 = !DILocation(line: 4302, column: 39, scope: !12905)
!12917 = !DILocation(line: 4302, column: 10, scope: !12905)
!12918 = !DILocation(line: 4302, column: 8, scope: !12905)
!12919 = !DILocation(line: 4303, column: 14, scope: !12920)
!12920 = distinct !DILexicalBlock(scope: !12905, file: !3, line: 4303, column: 6)
!12921 = !DILocation(line: 4303, column: 6, scope: !12920)
!12922 = !DILocation(line: 4303, column: 21, scope: !12920)
!12923 = !DILocation(line: 4303, column: 6, scope: !12905)
!12924 = !DILocation(line: 4304, column: 3, scope: !12920)
!12925 = !DILocation(line: 4306, column: 9, scope: !12905)
!12926 = !DILocation(line: 4306, column: 2, scope: !12905)
!12927 = !DILocation(line: 4307, column: 1, scope: !12905)
!12928 = distinct !DISubprogram(name: "gpiolib_dev_init", scope: !3, file: !3, line: 4338, type: !12929, scopeLine: 4339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!12929 = !DISubroutineType(types: !12930)
!12930 = !{!224}
!12931 = !DILocalVariable(name: "ret", scope: !12928, file: !3, line: 4340, type: !224)
!12932 = !DILocation(line: 4340, column: 6, scope: !12928)
!12933 = !DILocation(line: 4343, column: 8, scope: !12928)
!12934 = !DILocation(line: 4343, column: 6, scope: !12928)
!12935 = !DILocation(line: 4344, column: 6, scope: !12936)
!12936 = distinct !DILexicalBlock(scope: !12928, file: !3, line: 4344, column: 6)
!12937 = !DILocation(line: 4344, column: 10, scope: !12936)
!12938 = !DILocation(line: 4344, column: 6, scope: !12928)
!12939 = !DILocation(line: 4345, column: 3, scope: !12940)
!12940 = distinct !DILexicalBlock(scope: !12936, file: !3, line: 4344, column: 15)
!12941 = !DILocation(line: 4346, column: 10, scope: !12940)
!12942 = !DILocation(line: 4346, column: 3, scope: !12940)
!12943 = !DILocation(line: 4349, column: 8, scope: !12928)
!12944 = !DILocation(line: 4349, column: 6, scope: !12928)
!12945 = !DILocation(line: 4350, column: 6, scope: !12946)
!12946 = distinct !DILexicalBlock(scope: !12928, file: !3, line: 4350, column: 6)
!12947 = !DILocation(line: 4350, column: 10, scope: !12946)
!12948 = !DILocation(line: 4350, column: 6, scope: !12928)
!12949 = !DILocation(line: 4351, column: 3, scope: !12950)
!12950 = distinct !DILexicalBlock(scope: !12946, file: !3, line: 4350, column: 15)
!12951 = !DILocation(line: 4352, column: 3, scope: !12950)
!12952 = !DILocation(line: 4353, column: 10, scope: !12950)
!12953 = !DILocation(line: 4353, column: 3, scope: !12950)
!12954 = !DILocation(line: 4356, column: 22, scope: !12928)
!12955 = !DILocation(line: 4357, column: 2, scope: !12928)
!12956 = !DILocation(line: 4363, column: 9, scope: !12928)
!12957 = !DILocation(line: 4363, column: 2, scope: !12928)
!12958 = !DILocation(line: 4364, column: 1, scope: !12928)
!12959 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !4776, file: !4776, line: 646, type: !4777, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!12960 = !DILocalVariable(name: "__ret", scope: !12961, file: !4776, line: 648, type: !342)
!12961 = distinct !DILexicalBlock(scope: !12959, file: !4776, line: 648, column: 9)
!12962 = !DILocation(line: 648, column: 9, scope: !12961)
!12963 = !DILocalVariable(name: "__edi", scope: !12961, file: !4776, line: 648, type: !342)
!12964 = !DILocalVariable(name: "__esi", scope: !12961, file: !4776, line: 648, type: !342)
!12965 = !DILocalVariable(name: "__edx", scope: !12961, file: !4776, line: 648, type: !342)
!12966 = !DILocalVariable(name: "__ecx", scope: !12961, file: !4776, line: 648, type: !342)
!12967 = !DILocalVariable(name: "__eax", scope: !12961, file: !4776, line: 648, type: !342)
!12968 = !DILocation(line: 648, column: 9, scope: !12969)
!12969 = distinct !DILexicalBlock(scope: !12970, file: !4776, line: 648, column: 9)
!12970 = distinct !DILexicalBlock(scope: !12961, file: !4776, line: 648, column: 9)
!12971 = !{i32 -2145665889, i32 -2145663574, i32 -2145663340, i32 -2145663289, i32 -2145663261, i32 -2145663236, i32 -2145663552, i32 -2145663539, i32 -2145663101, i32 -2145662982, i32 -2145663447, i32 -2145663420, i32 -2145663392, i32 -2145663362}
!12972 = !DILocalVariable(name: "__mask", scope: !12973, file: !4776, line: 648, type: !342)
!12973 = distinct !DILexicalBlock(scope: !12969, file: !4776, line: 648, column: 9)
!12974 = !DILocation(line: 648, column: 9, scope: !12973)
!12975 = !DILocation(line: 648, column: 9, scope: !12970)
!12976 = !DILocation(line: 648, column: 2, scope: !12959)
!12977 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !4776, file: !4776, line: 656, type: !1898, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!12978 = !DILocalVariable(name: "__edi", scope: !12979, file: !4776, line: 658, type: !342)
!12979 = distinct !DILexicalBlock(scope: !12977, file: !4776, line: 658, column: 2)
!12980 = !DILocation(line: 658, column: 2, scope: !12979)
!12981 = !DILocalVariable(name: "__esi", scope: !12979, file: !4776, line: 658, type: !342)
!12982 = !DILocalVariable(name: "__edx", scope: !12979, file: !4776, line: 658, type: !342)
!12983 = !DILocalVariable(name: "__ecx", scope: !12979, file: !4776, line: 658, type: !342)
!12984 = !DILocalVariable(name: "__eax", scope: !12979, file: !4776, line: 658, type: !342)
!12985 = !{i32 -2145658795, i32 -2145658063, i32 -2145657829, i32 -2145657778, i32 -2145657750, i32 -2145657725, i32 -2145658041, i32 -2145658028, i32 -2145657590, i32 -2145657471, i32 -2145657936, i32 -2145657909, i32 -2145657881, i32 -2145657851}
!12986 = !DILocation(line: 659, column: 1, scope: !12977)
!12987 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !4776, file: !4776, line: 651, type: !12988, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!12988 = !DISubroutineType(types: !12989)
!12989 = !{null, !342}
!12990 = !DILocalVariable(name: "f", arg: 1, scope: !12987, file: !4776, line: 651, type: !342)
!12991 = !DILocation(line: 651, column: 65, scope: !12987)
!12992 = !DILocalVariable(name: "__edi", scope: !12993, file: !4776, line: 653, type: !342)
!12993 = distinct !DILexicalBlock(scope: !12987, file: !4776, line: 653, column: 2)
!12994 = !DILocation(line: 653, column: 2, scope: !12993)
!12995 = !DILocalVariable(name: "__esi", scope: !12993, file: !4776, line: 653, type: !342)
!12996 = !DILocalVariable(name: "__edx", scope: !12993, file: !4776, line: 653, type: !342)
!12997 = !DILocalVariable(name: "__ecx", scope: !12993, file: !4776, line: 653, type: !342)
!12998 = !DILocalVariable(name: "__eax", scope: !12993, file: !4776, line: 653, type: !342)
!12999 = !{i32 -2145661422, i32 -2145660672, i32 -2145660438, i32 -2145660387, i32 -2145660359, i32 -2145660334, i32 -2145660650, i32 -2145660637, i32 -2145660199, i32 -2145660080, i32 -2145660545, i32 -2145660518, i32 -2145660490, i32 -2145660460}
!13000 = !DILocation(line: 654, column: 1, scope: !12987)
!13001 = distinct !DISubprogram(name: "kasan_check_read", scope: !13002, file: !13002, line: 34, type: !13003, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13002 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!13003 = !DISubroutineType(types: !13004)
!13004 = !{!508, !4979, !7}
!13005 = !DILocalVariable(name: "p", arg: 1, scope: !13001, file: !13002, line: 34, type: !4979)
!13006 = !DILocation(line: 34, column: 58, scope: !13001)
!13007 = !DILocalVariable(name: "size", arg: 2, scope: !13001, file: !13002, line: 34, type: !7)
!13008 = !DILocation(line: 34, column: 74, scope: !13001)
!13009 = !DILocation(line: 36, column: 2, scope: !13001)
!13010 = distinct !DISubprogram(name: "kcsan_check_access", scope: !13011, file: !13011, line: 178, type: !13012, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13011 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!13012 = !DISubroutineType(types: !13013)
!13013 = !{null, !4979, !339, !224}
!13014 = !DILocalVariable(name: "ptr", arg: 1, scope: !13010, file: !13011, line: 178, type: !4979)
!13015 = !DILocation(line: 178, column: 60, scope: !13010)
!13016 = !DILocalVariable(name: "size", arg: 2, scope: !13010, file: !13011, line: 178, type: !339)
!13017 = !DILocation(line: 178, column: 72, scope: !13010)
!13018 = !DILocalVariable(name: "type", arg: 3, scope: !13010, file: !13011, line: 179, type: !224)
!13019 = !DILocation(line: 179, column: 15, scope: !13010)
!13020 = !DILocation(line: 179, column: 23, scope: !13010)
!13021 = distinct !DISubprogram(name: "list_empty", scope: !6766, file: !6766, line: 280, type: !13022, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13022 = !DISubroutineType(types: !13023)
!13023 = !{!224, !13024}
!13024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13025, size: 64)
!13025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !237)
!13026 = !DILocalVariable(name: "head", arg: 1, scope: !13021, file: !6766, line: 280, type: !13024)
!13027 = !DILocation(line: 280, column: 54, scope: !13021)
!13028 = !DILocation(line: 282, column: 9, scope: !13029)
!13029 = distinct !DILexicalBlock(scope: !13021, file: !6766, line: 282, column: 9)
!13030 = !DILocation(line: 282, column: 9, scope: !13031)
!13031 = distinct !DILexicalBlock(scope: !13029, file: !6766, line: 282, column: 9)
!13032 = !DILocation(line: 282, column: 34, scope: !13021)
!13033 = !DILocation(line: 282, column: 31, scope: !13021)
!13034 = !DILocation(line: 282, column: 2, scope: !13021)
!13035 = distinct !DISubprogram(name: "list_add", scope: !6766, file: !6766, line: 84, type: !11616, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13036 = !DILocalVariable(name: "new", arg: 1, scope: !13035, file: !6766, line: 84, type: !241)
!13037 = !DILocation(line: 84, column: 47, scope: !13035)
!13038 = !DILocalVariable(name: "head", arg: 2, scope: !13035, file: !6766, line: 84, type: !241)
!13039 = !DILocation(line: 84, column: 70, scope: !13035)
!13040 = !DILocation(line: 86, column: 13, scope: !13035)
!13041 = !DILocation(line: 86, column: 18, scope: !13035)
!13042 = !DILocation(line: 86, column: 24, scope: !13035)
!13043 = !DILocation(line: 86, column: 30, scope: !13035)
!13044 = !DILocation(line: 86, column: 2, scope: !13035)
!13045 = !DILocation(line: 87, column: 1, scope: !13035)
!13046 = distinct !DISubprogram(name: "__list_add", scope: !6766, file: !6766, line: 63, type: !13047, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13047 = !DISubroutineType(types: !13048)
!13048 = !{null, !241, !241, !241}
!13049 = !DILocalVariable(name: "new", arg: 1, scope: !13046, file: !6766, line: 63, type: !241)
!13050 = !DILocation(line: 63, column: 49, scope: !13046)
!13051 = !DILocalVariable(name: "prev", arg: 2, scope: !13046, file: !6766, line: 64, type: !241)
!13052 = !DILocation(line: 64, column: 28, scope: !13046)
!13053 = !DILocalVariable(name: "next", arg: 3, scope: !13046, file: !6766, line: 65, type: !241)
!13054 = !DILocation(line: 65, column: 28, scope: !13046)
!13055 = !DILocation(line: 67, column: 24, scope: !13056)
!13056 = distinct !DILexicalBlock(scope: !13046, file: !6766, line: 67, column: 6)
!13057 = !DILocation(line: 67, column: 29, scope: !13056)
!13058 = !DILocation(line: 67, column: 35, scope: !13056)
!13059 = !DILocation(line: 67, column: 7, scope: !13056)
!13060 = !DILocation(line: 67, column: 6, scope: !13046)
!13061 = !DILocation(line: 68, column: 3, scope: !13056)
!13062 = !DILocation(line: 70, column: 15, scope: !13046)
!13063 = !DILocation(line: 70, column: 2, scope: !13046)
!13064 = !DILocation(line: 70, column: 8, scope: !13046)
!13065 = !DILocation(line: 70, column: 13, scope: !13046)
!13066 = !DILocation(line: 71, column: 14, scope: !13046)
!13067 = !DILocation(line: 71, column: 2, scope: !13046)
!13068 = !DILocation(line: 71, column: 7, scope: !13046)
!13069 = !DILocation(line: 71, column: 12, scope: !13046)
!13070 = !DILocation(line: 72, column: 14, scope: !13046)
!13071 = !DILocation(line: 72, column: 2, scope: !13046)
!13072 = !DILocation(line: 72, column: 7, scope: !13046)
!13073 = !DILocation(line: 72, column: 12, scope: !13046)
!13074 = !DILocation(line: 73, column: 2, scope: !13046)
!13075 = !DILocation(line: 73, column: 2, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13046, file: !6766, line: 73, column: 2)
!13077 = !DILocation(line: 73, column: 2, scope: !13078)
!13078 = distinct !DILexicalBlock(scope: !13076, file: !6766, line: 73, column: 2)
!13079 = !DILocation(line: 73, column: 2, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13076, file: !6766, line: 73, column: 2)
!13081 = !DILocation(line: 74, column: 1, scope: !13046)
!13082 = distinct !DISubprogram(name: "__list_add_valid", scope: !6766, file: !6766, line: 45, type: !13083, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13083 = !DISubroutineType(types: !13084)
!13084 = !{!508, !241, !241, !241}
!13085 = !DILocalVariable(name: "new", arg: 1, scope: !13082, file: !6766, line: 45, type: !241)
!13086 = !DILocation(line: 45, column: 55, scope: !13082)
!13087 = !DILocalVariable(name: "prev", arg: 2, scope: !13082, file: !6766, line: 46, type: !241)
!13088 = !DILocation(line: 46, column: 23, scope: !13082)
!13089 = !DILocalVariable(name: "next", arg: 3, scope: !13082, file: !6766, line: 47, type: !241)
!13090 = !DILocation(line: 47, column: 23, scope: !13082)
!13091 = !DILocation(line: 49, column: 2, scope: !13082)
!13092 = distinct !DISubprogram(name: "gpio_name_to_desc", scope: !3, file: !3, line: 299, type: !13093, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13093 = !DISubroutineType(types: !13094)
!13094 = !{!4232, !4152}
!13095 = !DILocation(line: 407, column: 64, scope: !4629, inlinedAt: !13096)
!13096 = distinct !DILocation(line: 319, column: 5, scope: !13097)
!13097 = distinct !DILexicalBlock(scope: !13098, file: !3, line: 318, column: 35)
!13098 = distinct !DILexicalBlock(scope: !13099, file: !3, line: 318, column: 8)
!13099 = distinct !DILexicalBlock(scope: !13100, file: !3, line: 312, column: 38)
!13100 = distinct !DILexicalBlock(scope: !13101, file: !3, line: 312, column: 3)
!13101 = distinct !DILexicalBlock(scope: !13102, file: !3, line: 312, column: 3)
!13102 = distinct !DILexicalBlock(scope: !13103, file: !3, line: 309, column: 49)
!13103 = distinct !DILexicalBlock(scope: !13104, file: !3, line: 309, column: 2)
!13104 = distinct !DILexicalBlock(scope: !13092, file: !3, line: 309, column: 2)
!13105 = !DILocation(line: 407, column: 84, scope: !4629, inlinedAt: !13096)
!13106 = !DILocation(line: 407, column: 64, scope: !4629, inlinedAt: !13107)
!13107 = distinct !DILocation(line: 325, column: 2, scope: !13092)
!13108 = !DILocation(line: 407, column: 84, scope: !4629, inlinedAt: !13107)
!13109 = !DILocation(line: 327, column: 67, scope: !4647, inlinedAt: !13110)
!13110 = distinct !DILocation(line: 307, column: 2, scope: !13111)
!13111 = distinct !DILexicalBlock(scope: !13112, file: !3, line: 307, column: 2)
!13112 = distinct !DILexicalBlock(scope: !13113, file: !3, line: 307, column: 2)
!13113 = distinct !DILexicalBlock(scope: !13114, file: !3, line: 307, column: 2)
!13114 = distinct !DILexicalBlock(scope: !13115, file: !3, line: 307, column: 2)
!13115 = distinct !DILexicalBlock(scope: !13092, file: !3, line: 307, column: 2)
!13116 = !DILocalVariable(name: "name", arg: 1, scope: !13092, file: !3, line: 299, type: !4152)
!13117 = !DILocation(line: 299, column: 63, scope: !13092)
!13118 = !DILocalVariable(name: "gdev", scope: !13092, file: !3, line: 301, type: !219)
!13119 = !DILocation(line: 301, column: 22, scope: !13092)
!13120 = !DILocalVariable(name: "flags", scope: !13092, file: !3, line: 302, type: !342)
!13121 = !DILocation(line: 302, column: 16, scope: !13092)
!13122 = !DILocation(line: 304, column: 7, scope: !13123)
!13123 = distinct !DILexicalBlock(scope: !13092, file: !3, line: 304, column: 6)
!13124 = !DILocation(line: 304, column: 6, scope: !13092)
!13125 = !DILocation(line: 305, column: 3, scope: !13123)
!13126 = !DILocation(line: 307, column: 2, scope: !13092)
!13127 = !DILocation(line: 307, column: 2, scope: !13115)
!13128 = !DILocalVariable(name: "__dummy", scope: !13129, file: !3, line: 307, type: !342)
!13129 = distinct !DILexicalBlock(scope: !13114, file: !3, line: 307, column: 2)
!13130 = !DILocation(line: 307, column: 2, scope: !13129)
!13131 = !DILocalVariable(name: "__dummy2", scope: !13129, file: !3, line: 307, type: !342)
!13132 = !DILocation(line: 307, column: 2, scope: !13114)
!13133 = !DILocation(line: 307, column: 2, scope: !13113)
!13134 = !DILocation(line: 307, column: 2, scope: !13135)
!13135 = distinct !DILexicalBlock(scope: !13113, file: !3, line: 307, column: 2)
!13136 = !DILocalVariable(name: "__dummy", scope: !13137, file: !3, line: 307, type: !342)
!13137 = distinct !DILexicalBlock(scope: !13138, file: !3, line: 307, column: 2)
!13138 = distinct !DILexicalBlock(scope: !13135, file: !3, line: 307, column: 2)
!13139 = !DILocation(line: 307, column: 2, scope: !13137)
!13140 = !DILocalVariable(name: "__dummy2", scope: !13137, file: !3, line: 307, type: !342)
!13141 = !DILocation(line: 307, column: 2, scope: !13138)
!13142 = !DILocation(line: 307, column: 2, scope: !13112)
!13143 = !{i32 -2141455905}
!13144 = !DILocation(line: 329, column: 10, scope: !4647, inlinedAt: !13110)
!13145 = !DILocation(line: 329, column: 16, scope: !4647, inlinedAt: !13110)
!13146 = !DILocation(line: 307, column: 2, scope: !13111)
!13147 = !DILocalVariable(name: "__mptr", scope: !13148, file: !3, line: 309, type: !218)
!13148 = distinct !DILexicalBlock(scope: !13104, file: !3, line: 309, column: 2)
!13149 = !DILocation(line: 309, column: 2, scope: !13148)
!13150 = !DILocation(line: 309, column: 2, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !13148, file: !3, line: 309, column: 2)
!13152 = !DILocation(line: 309, column: 2, scope: !13104)
!13153 = !DILocation(line: 309, column: 2, scope: !13103)
!13154 = !DILocalVariable(name: "i", scope: !13102, file: !3, line: 310, type: !224)
!13155 = !DILocation(line: 310, column: 7, scope: !13102)
!13156 = !DILocation(line: 312, column: 10, scope: !13101)
!13157 = !DILocation(line: 312, column: 8, scope: !13101)
!13158 = !DILocation(line: 312, column: 15, scope: !13100)
!13159 = !DILocation(line: 312, column: 20, scope: !13100)
!13160 = !DILocation(line: 312, column: 26, scope: !13100)
!13161 = !DILocation(line: 312, column: 17, scope: !13100)
!13162 = !DILocation(line: 312, column: 3, scope: !13101)
!13163 = !DILocalVariable(name: "desc", scope: !13099, file: !3, line: 313, type: !4232)
!13164 = !DILocation(line: 313, column: 22, scope: !13099)
!13165 = !DILocation(line: 313, column: 30, scope: !13099)
!13166 = !DILocation(line: 313, column: 36, scope: !13099)
!13167 = !DILocation(line: 313, column: 42, scope: !13099)
!13168 = !DILocation(line: 315, column: 9, scope: !13169)
!13169 = distinct !DILexicalBlock(scope: !13099, file: !3, line: 315, column: 8)
!13170 = !DILocation(line: 315, column: 15, scope: !13169)
!13171 = !DILocation(line: 315, column: 8, scope: !13099)
!13172 = !DILocation(line: 316, column: 5, scope: !13169)
!13173 = !DILocation(line: 318, column: 16, scope: !13098)
!13174 = !DILocation(line: 318, column: 22, scope: !13098)
!13175 = !DILocation(line: 318, column: 28, scope: !13098)
!13176 = !DILocation(line: 318, column: 9, scope: !13098)
!13177 = !DILocation(line: 318, column: 8, scope: !13099)
!13178 = !DILocation(line: 319, column: 40, scope: !13097)
!13179 = !DILocation(line: 409, column: 2, scope: !4707, inlinedAt: !13096)
!13180 = !DILocation(line: 409, column: 2, scope: !4712, inlinedAt: !13096)
!13181 = !DILocation(line: 409, column: 2, scope: !4713, inlinedAt: !13096)
!13182 = !DILocation(line: 409, column: 2, scope: !4720, inlinedAt: !13096)
!13183 = !DILocation(line: 409, column: 2, scope: !4723, inlinedAt: !13096)
!13184 = !DILocation(line: 320, column: 12, scope: !13097)
!13185 = !DILocation(line: 320, column: 5, scope: !13097)
!13186 = !DILocation(line: 322, column: 3, scope: !13099)
!13187 = !DILocation(line: 312, column: 33, scope: !13100)
!13188 = !DILocation(line: 312, column: 3, scope: !13100)
!13189 = distinct !{!13189, !13162, !13190}
!13190 = !DILocation(line: 322, column: 3, scope: !13101)
!13191 = !DILocation(line: 323, column: 2, scope: !13102)
!13192 = !DILocalVariable(name: "__mptr", scope: !13193, file: !3, line: 309, type: !218)
!13193 = distinct !DILexicalBlock(scope: !13103, file: !3, line: 309, column: 2)
!13194 = !DILocation(line: 309, column: 2, scope: !13193)
!13195 = !DILocation(line: 309, column: 2, scope: !13196)
!13196 = distinct !DILexicalBlock(scope: !13193, file: !3, line: 309, column: 2)
!13197 = distinct !{!13197, !13152, !13198}
!13198 = !DILocation(line: 323, column: 2, scope: !13104)
!13199 = !DILocation(line: 325, column: 37, scope: !13092)
!13200 = !DILocation(line: 409, column: 2, scope: !4707, inlinedAt: !13107)
!13201 = !DILocation(line: 409, column: 2, scope: !4712, inlinedAt: !13107)
!13202 = !DILocation(line: 409, column: 2, scope: !4713, inlinedAt: !13107)
!13203 = !DILocation(line: 409, column: 2, scope: !4720, inlinedAt: !13107)
!13204 = !DILocation(line: 409, column: 2, scope: !4723, inlinedAt: !13107)
!13205 = !DILocation(line: 327, column: 2, scope: !13092)
!13206 = !DILocation(line: 328, column: 1, scope: !13092)
!13207 = distinct !DISubprogram(name: "device_property_string_array_count", scope: !13208, file: !13208, line: 173, type: !11933, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13208 = !DIFile(filename: "./include/linux/property.h", directory: "/home/lizy2001/genbc/linux")
!13209 = !DILocalVariable(name: "dev", arg: 1, scope: !13207, file: !13208, line: 173, type: !3325)
!13210 = !DILocation(line: 173, column: 69, scope: !13207)
!13211 = !DILocalVariable(name: "propname", arg: 2, scope: !13207, file: !13208, line: 174, type: !233)
!13212 = !DILocation(line: 174, column: 24, scope: !13207)
!13213 = !DILocation(line: 176, column: 43, scope: !13207)
!13214 = !DILocation(line: 176, column: 48, scope: !13207)
!13215 = !DILocation(line: 176, column: 9, scope: !13207)
!13216 = !DILocation(line: 176, column: 2, scope: !13207)
!13217 = distinct !DISubprogram(name: "gpiochip_allocate_mask", scope: !3, file: !3, line: 412, type: !13218, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13218 = !DISubroutineType(types: !13219)
!13219 = !{!3758, !4096}
!13220 = !DILocalVariable(name: "gc", arg: 1, scope: !13217, file: !3, line: 412, type: !4096)
!13221 = !DILocation(line: 412, column: 64, scope: !13217)
!13222 = !DILocalVariable(name: "p", scope: !13217, file: !3, line: 414, type: !3758)
!13223 = !DILocation(line: 414, column: 17, scope: !13217)
!13224 = !DILocation(line: 416, column: 19, scope: !13217)
!13225 = !DILocation(line: 416, column: 23, scope: !13217)
!13226 = !DILocation(line: 416, column: 6, scope: !13217)
!13227 = !DILocation(line: 416, column: 4, scope: !13217)
!13228 = !DILocation(line: 417, column: 7, scope: !13229)
!13229 = distinct !DILexicalBlock(scope: !13217, file: !3, line: 417, column: 6)
!13230 = !DILocation(line: 417, column: 6, scope: !13217)
!13231 = !DILocation(line: 418, column: 3, scope: !13229)
!13232 = !DILocation(line: 421, column: 14, scope: !13217)
!13233 = !DILocation(line: 421, column: 17, scope: !13217)
!13234 = !DILocation(line: 421, column: 21, scope: !13217)
!13235 = !DILocation(line: 421, column: 2, scope: !13217)
!13236 = !DILocation(line: 423, column: 9, scope: !13217)
!13237 = !DILocation(line: 423, column: 2, scope: !13217)
!13238 = !DILocation(line: 424, column: 1, scope: !13217)
!13239 = distinct !DISubprogram(name: "bitmap_fill", scope: !10028, file: !10028, line: 241, type: !10309, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13240 = !DILocalVariable(name: "dst", arg: 1, scope: !13239, file: !10028, line: 241, type: !3758)
!13241 = !DILocation(line: 241, column: 47, scope: !13239)
!13242 = !DILocalVariable(name: "nbits", arg: 2, scope: !13239, file: !10028, line: 241, type: !7)
!13243 = !DILocation(line: 241, column: 65, scope: !13239)
!13244 = !DILocalVariable(name: "len", scope: !13239, file: !10028, line: 243, type: !7)
!13245 = !DILocation(line: 243, column: 15, scope: !13239)
!13246 = !DILocation(line: 243, column: 21, scope: !13239)
!13247 = !DILocation(line: 243, column: 42, scope: !13239)
!13248 = !DILocation(line: 244, column: 9, scope: !13239)
!13249 = !DILocation(line: 244, column: 2, scope: !13239)
!13250 = !DILocation(line: 244, column: 20, scope: !13239)
!13251 = !DILocation(line: 245, column: 1, scope: !13239)
!13252 = distinct !DISubprogram(name: "gpiochip_sysfs_register", scope: !6891, file: !6891, line: 13, type: !5929, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13253 = !DILocalVariable(name: "gdev", arg: 1, scope: !13252, file: !6891, line: 13, type: !219)
!13254 = !DILocation(line: 13, column: 63, scope: !13252)
!13255 = !DILocation(line: 15, column: 2, scope: !13252)
!13256 = distinct !DISubprogram(name: "gpiodevice_release", scope: !3, file: !3, line: 472, type: !3348, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13257 = !DILocalVariable(name: "dev", arg: 1, scope: !13256, file: !3, line: 472, type: !3325)
!13258 = !DILocation(line: 472, column: 47, scope: !13256)
!13259 = !DILocalVariable(name: "gdev", scope: !13256, file: !3, line: 474, type: !219)
!13260 = !DILocation(line: 474, column: 22, scope: !13256)
!13261 = !DILocation(line: 474, column: 45, scope: !13256)
!13262 = !DILocation(line: 474, column: 29, scope: !13256)
!13263 = !DILocation(line: 476, column: 12, scope: !13256)
!13264 = !DILocation(line: 476, column: 18, scope: !13256)
!13265 = !DILocation(line: 476, column: 2, scope: !13256)
!13266 = !DILocation(line: 477, column: 22, scope: !13256)
!13267 = !DILocation(line: 477, column: 28, scope: !13256)
!13268 = !DILocation(line: 477, column: 2, scope: !13256)
!13269 = !DILocation(line: 478, column: 14, scope: !13256)
!13270 = !DILocation(line: 478, column: 20, scope: !13256)
!13271 = !DILocation(line: 478, column: 2, scope: !13256)
!13272 = !DILocation(line: 479, column: 8, scope: !13256)
!13273 = !DILocation(line: 479, column: 14, scope: !13256)
!13274 = !DILocation(line: 479, column: 2, scope: !13256)
!13275 = !DILocation(line: 480, column: 8, scope: !13256)
!13276 = !DILocation(line: 480, column: 2, scope: !13256)
!13277 = !DILocation(line: 481, column: 1, scope: !13256)
!13278 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !60, file: !60, line: 655, type: !13279, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13279 = !DISubroutineType(types: !13280)
!13280 = !{!218, !3655}
!13281 = !DILocalVariable(name: "dev", arg: 1, scope: !13278, file: !60, line: 655, type: !3655)
!13282 = !DILocation(line: 655, column: 58, scope: !13278)
!13283 = !DILocation(line: 657, column: 9, scope: !13278)
!13284 = !DILocation(line: 657, column: 14, scope: !13278)
!13285 = !DILocation(line: 657, column: 2, scope: !13278)
!13286 = distinct !DISubprogram(name: "__list_del_entry", scope: !6766, file: !6766, line: 130, type: !6767, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13287 = !DILocalVariable(name: "entry", arg: 1, scope: !13286, file: !6766, line: 130, type: !241)
!13288 = !DILocation(line: 130, column: 55, scope: !13286)
!13289 = !DILocation(line: 132, column: 30, scope: !13290)
!13290 = distinct !DILexicalBlock(scope: !13286, file: !6766, line: 132, column: 6)
!13291 = !DILocation(line: 132, column: 7, scope: !13290)
!13292 = !DILocation(line: 132, column: 6, scope: !13286)
!13293 = !DILocation(line: 133, column: 3, scope: !13290)
!13294 = !DILocation(line: 135, column: 13, scope: !13286)
!13295 = !DILocation(line: 135, column: 20, scope: !13286)
!13296 = !DILocation(line: 135, column: 26, scope: !13286)
!13297 = !DILocation(line: 135, column: 33, scope: !13286)
!13298 = !DILocation(line: 135, column: 2, scope: !13286)
!13299 = !DILocation(line: 136, column: 1, scope: !13286)
!13300 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !6766, file: !6766, line: 51, type: !13301, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13301 = !DISubroutineType(types: !13302)
!13302 = !{!508, !241}
!13303 = !DILocalVariable(name: "entry", arg: 1, scope: !13300, file: !6766, line: 51, type: !241)
!13304 = !DILocation(line: 51, column: 61, scope: !13300)
!13305 = !DILocation(line: 53, column: 2, scope: !13300)
!13306 = distinct !DISubprogram(name: "__list_del", scope: !6766, file: !6766, line: 110, type: !11616, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13307 = !DILocalVariable(name: "prev", arg: 1, scope: !13306, file: !6766, line: 110, type: !241)
!13308 = !DILocation(line: 110, column: 50, scope: !13306)
!13309 = !DILocalVariable(name: "next", arg: 2, scope: !13306, file: !6766, line: 110, type: !241)
!13310 = !DILocation(line: 110, column: 75, scope: !13306)
!13311 = !DILocation(line: 112, column: 15, scope: !13306)
!13312 = !DILocation(line: 112, column: 2, scope: !13306)
!13313 = !DILocation(line: 112, column: 8, scope: !13306)
!13314 = !DILocation(line: 112, column: 13, scope: !13306)
!13315 = !DILocation(line: 113, column: 2, scope: !13306)
!13316 = !DILocation(line: 113, column: 2, scope: !13317)
!13317 = distinct !DILexicalBlock(scope: !13306, file: !6766, line: 113, column: 2)
!13318 = !DILocation(line: 113, column: 2, scope: !13319)
!13319 = distinct !DILexicalBlock(scope: !13317, file: !6766, line: 113, column: 2)
!13320 = !DILocation(line: 113, column: 2, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13317, file: !6766, line: 113, column: 2)
!13322 = !DILocation(line: 114, column: 1, scope: !13306)
!13323 = distinct !DISubprogram(name: "devm_kcalloc", scope: !60, file: !60, line: 229, type: !13324, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13324 = !DISubroutineType(types: !13325)
!13325 = !{!218, !3325, !339, !339, !814}
!13326 = !DILocalVariable(name: "dev", arg: 1, scope: !13323, file: !60, line: 229, type: !3325)
!13327 = !DILocation(line: 229, column: 49, scope: !13323)
!13328 = !DILocalVariable(name: "n", arg: 2, scope: !13323, file: !60, line: 230, type: !339)
!13329 = !DILocation(line: 230, column: 13, scope: !13323)
!13330 = !DILocalVariable(name: "size", arg: 3, scope: !13323, file: !60, line: 230, type: !339)
!13331 = !DILocation(line: 230, column: 23, scope: !13323)
!13332 = !DILocalVariable(name: "flags", arg: 4, scope: !13323, file: !60, line: 230, type: !814)
!13333 = !DILocation(line: 230, column: 35, scope: !13323)
!13334 = !DILocation(line: 232, column: 28, scope: !13323)
!13335 = !DILocation(line: 232, column: 33, scope: !13323)
!13336 = !DILocation(line: 232, column: 36, scope: !13323)
!13337 = !DILocation(line: 232, column: 42, scope: !13323)
!13338 = !DILocation(line: 232, column: 48, scope: !13323)
!13339 = !DILocation(line: 232, column: 9, scope: !13323)
!13340 = !DILocation(line: 232, column: 2, scope: !13323)
!13341 = distinct !DISubprogram(name: "devm_kmalloc_array", scope: !60, file: !60, line: 219, type: !13324, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13342 = !DILocalVariable(name: "dev", arg: 1, scope: !13341, file: !60, line: 219, type: !3325)
!13343 = !DILocation(line: 219, column: 55, scope: !13341)
!13344 = !DILocalVariable(name: "n", arg: 2, scope: !13341, file: !60, line: 220, type: !339)
!13345 = !DILocation(line: 220, column: 19, scope: !13341)
!13346 = !DILocalVariable(name: "size", arg: 3, scope: !13341, file: !60, line: 220, type: !339)
!13347 = !DILocation(line: 220, column: 29, scope: !13341)
!13348 = !DILocalVariable(name: "flags", arg: 4, scope: !13341, file: !60, line: 220, type: !814)
!13349 = !DILocation(line: 220, column: 41, scope: !13341)
!13350 = !DILocalVariable(name: "bytes", scope: !13341, file: !60, line: 222, type: !339)
!13351 = !DILocation(line: 222, column: 9, scope: !13341)
!13352 = !DILocalVariable(name: "__a", scope: !13353, file: !60, line: 224, type: !339)
!13353 = distinct !DILexicalBlock(scope: !13354, file: !60, line: 224, column: 6)
!13354 = distinct !DILexicalBlock(scope: !13341, file: !60, line: 224, column: 6)
!13355 = !DILocation(line: 224, column: 6, scope: !13353)
!13356 = !DILocalVariable(name: "__b", scope: !13353, file: !60, line: 224, type: !339)
!13357 = !DILocalVariable(name: "__d", scope: !13353, file: !60, line: 224, type: !10118)
!13358 = !DILocation(line: 224, column: 6, scope: !13354)
!13359 = !DILocation(line: 224, column: 6, scope: !13341)
!13360 = !DILocation(line: 225, column: 3, scope: !13354)
!13361 = !DILocation(line: 227, column: 22, scope: !13341)
!13362 = !DILocation(line: 227, column: 27, scope: !13341)
!13363 = !DILocation(line: 227, column: 34, scope: !13341)
!13364 = !DILocation(line: 227, column: 9, scope: !13341)
!13365 = !DILocation(line: 227, column: 2, scope: !13341)
!13366 = !DILocation(line: 228, column: 1, scope: !13341)
!13367 = distinct !DISubprogram(name: "__must_check_overflow", scope: !12789, file: !12789, line: 52, type: !13368, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13368 = !DISubroutineType(types: !13369)
!13369 = !{!508, !508}
!13370 = !DILocalVariable(name: "overflow", arg: 1, scope: !13367, file: !12789, line: 52, type: !508)
!13371 = !DILocation(line: 52, column: 60, scope: !13367)
!13372 = !DILocation(line: 54, column: 9, scope: !13367)
!13373 = !DILocation(line: 54, column: 2, scope: !13367)
!13374 = distinct !DISubprogram(name: "get_order", scope: !13375, file: !13375, line: 29, type: !13376, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13375 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!13376 = !DISubroutineType(types: !13377)
!13377 = !{!224, !342}
!13378 = !DILocalVariable(name: "x", arg: 1, scope: !13379, file: !4961, line: 366, type: !440)
!13379 = distinct !DISubprogram(name: "fls64", scope: !4961, file: !4961, line: 366, type: !13380, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13380 = !DISubroutineType(types: !13381)
!13381 = !{!224, !440}
!13382 = !DILocation(line: 366, column: 40, scope: !13379, inlinedAt: !13383)
!13383 = distinct !DILocation(line: 46, column: 9, scope: !13374)
!13384 = !DILocalVariable(name: "bitpos", scope: !13379, file: !4961, line: 368, type: !224)
!13385 = !DILocation(line: 368, column: 6, scope: !13379, inlinedAt: !13383)
!13386 = !DILocalVariable(name: "size", arg: 1, scope: !13374, file: !13375, line: 29, type: !342)
!13387 = !DILocation(line: 29, column: 63, scope: !13374)
!13388 = !DILocation(line: 31, column: 27, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13374, file: !13375, line: 31, column: 6)
!13390 = !DILocation(line: 31, column: 6, scope: !13389)
!13391 = !DILocation(line: 31, column: 6, scope: !13374)
!13392 = !DILocation(line: 32, column: 8, scope: !13393)
!13393 = distinct !DILexicalBlock(scope: !13394, file: !13375, line: 32, column: 7)
!13394 = distinct !DILexicalBlock(scope: !13389, file: !13375, line: 31, column: 34)
!13395 = !DILocation(line: 32, column: 7, scope: !13394)
!13396 = !DILocation(line: 33, column: 4, scope: !13393)
!13397 = !DILocation(line: 35, column: 7, scope: !13398)
!13398 = distinct !DILexicalBlock(scope: !13394, file: !13375, line: 35, column: 7)
!13399 = !DILocation(line: 35, column: 12, scope: !13398)
!13400 = !DILocation(line: 35, column: 7, scope: !13394)
!13401 = !DILocation(line: 36, column: 4, scope: !13398)
!13402 = !DILocation(line: 38, column: 10, scope: !13394)
!13403 = !DILocation(line: 38, column: 28, scope: !13394)
!13404 = !DILocation(line: 38, column: 41, scope: !13394)
!13405 = !DILocation(line: 38, column: 3, scope: !13394)
!13406 = !DILocation(line: 41, column: 6, scope: !13374)
!13407 = !DILocation(line: 42, column: 7, scope: !13374)
!13408 = !DILocation(line: 46, column: 15, scope: !13374)
!13409 = !DILocation(line: 374, column: 2, scope: !13379, inlinedAt: !13383)
!13410 = !DILocation(line: 376, column: 14, scope: !13379, inlinedAt: !13383)
!13411 = !{i32 331507}
!13412 = !DILocation(line: 377, column: 9, scope: !13379, inlinedAt: !13383)
!13413 = !DILocation(line: 377, column: 16, scope: !13379, inlinedAt: !13383)
!13414 = !DILocation(line: 46, column: 2, scope: !13374)
!13415 = !DILocation(line: 48, column: 1, scope: !13374)
!13416 = distinct !DISubprogram(name: "__ilog2_u64", scope: !13417, file: !13417, line: 30, type: !13418, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13417 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!13418 = !DISubroutineType(types: !13419)
!13419 = !{!224, !439}
!13420 = !DILocation(line: 366, column: 40, scope: !13379, inlinedAt: !13421)
!13421 = distinct !DILocation(line: 32, column: 9, scope: !13416)
!13422 = !DILocation(line: 368, column: 6, scope: !13379, inlinedAt: !13421)
!13423 = !DILocalVariable(name: "n", arg: 1, scope: !13416, file: !13417, line: 30, type: !439)
!13424 = !DILocation(line: 30, column: 21, scope: !13416)
!13425 = !DILocation(line: 32, column: 15, scope: !13416)
!13426 = !DILocation(line: 374, column: 2, scope: !13379, inlinedAt: !13421)
!13427 = !DILocation(line: 376, column: 14, scope: !13379, inlinedAt: !13421)
!13428 = !DILocation(line: 377, column: 9, scope: !13379, inlinedAt: !13421)
!13429 = !DILocation(line: 377, column: 16, scope: !13379, inlinedAt: !13421)
!13430 = !DILocation(line: 32, column: 18, scope: !13416)
!13431 = !DILocation(line: 32, column: 2, scope: !13416)
!13432 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !13433, file: !13433, line: 137, type: !13434, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13433 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!13434 = !DISubroutineType(types: !13435)
!13435 = !{!218, !1039, !2145, !339, !814}
!13436 = !DILocalVariable(name: "s", arg: 1, scope: !13432, file: !13433, line: 137, type: !1039)
!13437 = !DILocation(line: 137, column: 54, scope: !13432)
!13438 = !DILocalVariable(name: "object", arg: 2, scope: !13432, file: !13433, line: 137, type: !2145)
!13439 = !DILocation(line: 137, column: 69, scope: !13432)
!13440 = !DILocalVariable(name: "size", arg: 3, scope: !13432, file: !13433, line: 138, type: !339)
!13441 = !DILocation(line: 138, column: 12, scope: !13432)
!13442 = !DILocalVariable(name: "flags", arg: 4, scope: !13432, file: !13433, line: 138, type: !814)
!13443 = !DILocation(line: 138, column: 24, scope: !13432)
!13444 = !DILocation(line: 140, column: 17, scope: !13432)
!13445 = !DILocation(line: 140, column: 2, scope: !13432)
!13446 = distinct !DISubprogram(name: "irq_set_status_flags", scope: !102, file: !102, line: 756, type: !13447, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13447 = !DISubroutineType(types: !13448)
!13448 = !{null, !7, !342}
!13449 = !DILocalVariable(name: "irq", arg: 1, scope: !13446, file: !102, line: 756, type: !7)
!13450 = !DILocation(line: 756, column: 54, scope: !13446)
!13451 = !DILocalVariable(name: "set", arg: 2, scope: !13446, file: !102, line: 756, type: !342)
!13452 = !DILocation(line: 756, column: 73, scope: !13446)
!13453 = !DILocation(line: 758, column: 20, scope: !13446)
!13454 = !DILocation(line: 758, column: 28, scope: !13446)
!13455 = !DILocation(line: 758, column: 2, scope: !13446)
!13456 = !DILocation(line: 759, column: 1, scope: !13446)
!13457 = distinct !DISubprogram(name: "irq_clear_status_flags", scope: !102, file: !102, line: 761, type: !13447, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13458 = !DILocalVariable(name: "irq", arg: 1, scope: !13457, file: !102, line: 761, type: !7)
!13459 = !DILocation(line: 761, column: 56, scope: !13457)
!13460 = !DILocalVariable(name: "clr", arg: 2, scope: !13457, file: !102, line: 761, type: !342)
!13461 = !DILocation(line: 761, column: 75, scope: !13457)
!13462 = !DILocation(line: 763, column: 20, scope: !13457)
!13463 = !DILocation(line: 763, column: 25, scope: !13457)
!13464 = !DILocation(line: 763, column: 2, scope: !13457)
!13465 = !DILocation(line: 764, column: 1, scope: !13457)
!13466 = distinct !DISubprogram(name: "gpiochip_hierarchy_is_hierarchical", scope: !3, file: !3, line: 1228, type: !13467, scopeLine: 1229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13467 = !DISubroutineType(types: !13468)
!13468 = !{!508, !4096}
!13469 = !DILocalVariable(name: "gc", arg: 1, scope: !13466, file: !3, line: 1228, type: !4096)
!13470 = !DILocation(line: 1228, column: 66, scope: !13466)
!13471 = !DILocation(line: 1230, column: 11, scope: !13466)
!13472 = !DILocation(line: 1230, column: 15, scope: !13466)
!13473 = !DILocation(line: 1230, column: 19, scope: !13466)
!13474 = !DILocation(line: 1230, column: 10, scope: !13466)
!13475 = !DILocation(line: 1230, column: 9, scope: !13466)
!13476 = !DILocation(line: 1230, column: 2, scope: !13466)
!13477 = distinct !DISubprogram(name: "gpiochip_hierarchy_add_domain", scope: !3, file: !3, line: 1195, type: !4146, scopeLine: 1196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13478 = !DILocalVariable(name: "gc", arg: 1, scope: !13477, file: !3, line: 1195, type: !4096)
!13479 = !DILocation(line: 1195, column: 60, scope: !13477)
!13480 = !DILocation(line: 1197, column: 7, scope: !13481)
!13481 = distinct !DILexicalBlock(scope: !13477, file: !3, line: 1197, column: 6)
!13482 = !DILocation(line: 1197, column: 11, scope: !13481)
!13483 = !DILocation(line: 1197, column: 15, scope: !13481)
!13484 = !DILocation(line: 1197, column: 37, scope: !13481)
!13485 = !DILocation(line: 1198, column: 7, scope: !13481)
!13486 = !DILocation(line: 1198, column: 11, scope: !13481)
!13487 = !DILocation(line: 1198, column: 15, scope: !13481)
!13488 = !DILocation(line: 1197, column: 6, scope: !13477)
!13489 = !DILocation(line: 1199, column: 3, scope: !13490)
!13490 = distinct !DILexicalBlock(scope: !13481, file: !3, line: 1198, column: 23)
!13491 = !DILocation(line: 1200, column: 3, scope: !13490)
!13492 = !DILocation(line: 1203, column: 7, scope: !13493)
!13493 = distinct !DILexicalBlock(scope: !13477, file: !3, line: 1203, column: 6)
!13494 = !DILocation(line: 1203, column: 11, scope: !13493)
!13495 = !DILocation(line: 1203, column: 15, scope: !13493)
!13496 = !DILocation(line: 1203, column: 6, scope: !13477)
!13497 = !DILocation(line: 1204, column: 3, scope: !13493)
!13498 = !DILocation(line: 1204, column: 7, scope: !13493)
!13499 = !DILocation(line: 1204, column: 11, scope: !13493)
!13500 = !DILocation(line: 1204, column: 31, scope: !13493)
!13501 = !DILocation(line: 1206, column: 7, scope: !13502)
!13502 = distinct !DILexicalBlock(scope: !13477, file: !3, line: 1206, column: 6)
!13503 = !DILocation(line: 1206, column: 11, scope: !13502)
!13504 = !DILocation(line: 1206, column: 15, scope: !13502)
!13505 = !DILocation(line: 1206, column: 6, scope: !13477)
!13506 = !DILocation(line: 1207, column: 3, scope: !13502)
!13507 = !DILocation(line: 1207, column: 7, scope: !13502)
!13508 = !DILocation(line: 1207, column: 11, scope: !13502)
!13509 = !DILocation(line: 1207, column: 37, scope: !13502)
!13510 = !DILocation(line: 1210, column: 39, scope: !13477)
!13511 = !DILocation(line: 1210, column: 43, scope: !13477)
!13512 = !DILocation(line: 1210, column: 47, scope: !13477)
!13513 = !DILocation(line: 1210, column: 2, scope: !13477)
!13514 = !DILocation(line: 1213, column: 3, scope: !13477)
!13515 = !DILocation(line: 1213, column: 7, scope: !13477)
!13516 = !DILocation(line: 1213, column: 11, scope: !13477)
!13517 = !DILocation(line: 1215, column: 3, scope: !13477)
!13518 = !DILocation(line: 1215, column: 7, scope: !13477)
!13519 = !DILocation(line: 1216, column: 3, scope: !13477)
!13520 = !DILocation(line: 1216, column: 7, scope: !13477)
!13521 = !DILocation(line: 1216, column: 11, scope: !13477)
!13522 = !DILocation(line: 1217, column: 4, scope: !13477)
!13523 = !DILocation(line: 1217, column: 8, scope: !13477)
!13524 = !DILocation(line: 1217, column: 12, scope: !13477)
!13525 = !DILocation(line: 1218, column: 3, scope: !13477)
!13526 = !DILocation(line: 1212, column: 19, scope: !13477)
!13527 = !DILocation(line: 1212, column: 2, scope: !13477)
!13528 = !DILocation(line: 1212, column: 6, scope: !13477)
!13529 = !DILocation(line: 1212, column: 10, scope: !13477)
!13530 = !DILocation(line: 1212, column: 17, scope: !13477)
!13531 = !DILocation(line: 1220, column: 7, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13477, file: !3, line: 1220, column: 6)
!13533 = !DILocation(line: 1220, column: 11, scope: !13532)
!13534 = !DILocation(line: 1220, column: 15, scope: !13532)
!13535 = !DILocation(line: 1220, column: 6, scope: !13477)
!13536 = !DILocation(line: 1221, column: 3, scope: !13532)
!13537 = !DILocation(line: 1223, column: 36, scope: !13477)
!13538 = !DILocation(line: 1223, column: 40, scope: !13477)
!13539 = !DILocation(line: 1223, column: 44, scope: !13477)
!13540 = !DILocation(line: 1223, column: 48, scope: !13477)
!13541 = !DILocation(line: 1223, column: 2, scope: !13477)
!13542 = !DILocation(line: 1225, column: 2, scope: !13477)
!13543 = !DILocation(line: 1226, column: 1, scope: !13477)
!13544 = distinct !DISubprogram(name: "gpiochip_child_offset_to_irq_noop", scope: !3, file: !3, line: 1173, type: !4191, scopeLine: 1175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13545 = !DILocalVariable(name: "gc", arg: 1, scope: !13544, file: !3, line: 1173, type: !4096)
!13546 = !DILocation(line: 1173, column: 73, scope: !13544)
!13547 = !DILocalVariable(name: "offset", arg: 2, scope: !13544, file: !3, line: 1174, type: !7)
!13548 = !DILocation(line: 1174, column: 26, scope: !13544)
!13549 = !DILocation(line: 1176, column: 9, scope: !13544)
!13550 = !DILocation(line: 1176, column: 2, scope: !13544)
!13551 = distinct !DISubprogram(name: "gpiochip_hierarchy_setup_domain_ops", scope: !3, file: !3, line: 1179, type: !13552, scopeLine: 1180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13552 = !DISubroutineType(types: !13553)
!13553 = !{null, !13554}
!13554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3612, size: 64)
!13555 = !DILocalVariable(name: "ops", arg: 1, scope: !13551, file: !3, line: 1179, type: !13554)
!13556 = !DILocation(line: 1179, column: 72, scope: !13551)
!13557 = !DILocation(line: 1181, column: 2, scope: !13551)
!13558 = !DILocation(line: 1181, column: 7, scope: !13551)
!13559 = !DILocation(line: 1181, column: 16, scope: !13551)
!13560 = !DILocation(line: 1182, column: 2, scope: !13551)
!13561 = !DILocation(line: 1182, column: 7, scope: !13551)
!13562 = !DILocation(line: 1182, column: 18, scope: !13551)
!13563 = !DILocation(line: 1183, column: 2, scope: !13551)
!13564 = !DILocation(line: 1183, column: 7, scope: !13551)
!13565 = !DILocation(line: 1183, column: 13, scope: !13551)
!13566 = !DILocation(line: 1184, column: 2, scope: !13551)
!13567 = !DILocation(line: 1184, column: 7, scope: !13551)
!13568 = !DILocation(line: 1184, column: 12, scope: !13551)
!13569 = !DILocation(line: 1191, column: 7, scope: !13570)
!13570 = distinct !DILexicalBlock(scope: !13551, file: !3, line: 1191, column: 6)
!13571 = !DILocation(line: 1191, column: 12, scope: !13570)
!13572 = !DILocation(line: 1191, column: 6, scope: !13551)
!13573 = !DILocation(line: 1192, column: 3, scope: !13570)
!13574 = !DILocation(line: 1192, column: 8, scope: !13570)
!13575 = !DILocation(line: 1192, column: 18, scope: !13570)
!13576 = !DILocation(line: 1193, column: 1, scope: !13551)
!13577 = distinct !DISubprogram(name: "gpiochip_set_hierarchical_irqchip", scope: !3, file: !3, line: 1009, type: !13578, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13578 = !DISubroutineType(types: !13579)
!13579 = !{null, !4096, !3790}
!13580 = !DILocalVariable(name: "gc", arg: 1, scope: !13577, file: !3, line: 1009, type: !4096)
!13581 = !DILocation(line: 1009, column: 65, scope: !13577)
!13582 = !DILocalVariable(name: "irqchip", arg: 2, scope: !13577, file: !3, line: 1010, type: !3790)
!13583 = !DILocation(line: 1010, column: 29, scope: !13577)
!13584 = !DILocation(line: 1013, column: 17, scope: !13585)
!13585 = distinct !DILexicalBlock(scope: !13577, file: !3, line: 1013, column: 6)
!13586 = !DILocation(line: 1013, column: 21, scope: !13585)
!13587 = !DILocation(line: 1013, column: 25, scope: !13585)
!13588 = !DILocation(line: 1013, column: 6, scope: !13585)
!13589 = !DILocation(line: 1013, column: 6, scope: !13577)
!13590 = !DILocation(line: 1014, column: 3, scope: !13585)
!13591 = !DILocation(line: 1024, column: 24, scope: !13592)
!13592 = distinct !DILexicalBlock(scope: !13577, file: !3, line: 1024, column: 6)
!13593 = !DILocation(line: 1024, column: 28, scope: !13592)
!13594 = !DILocation(line: 1024, column: 32, scope: !13592)
!13595 = !DILocation(line: 1024, column: 6, scope: !13592)
!13596 = !DILocation(line: 1024, column: 6, scope: !13577)
!13597 = !DILocalVariable(name: "i", scope: !13598, file: !3, line: 1025, type: !224)
!13598 = distinct !DILexicalBlock(scope: !13592, file: !3, line: 1024, column: 41)
!13599 = !DILocation(line: 1025, column: 7, scope: !13598)
!13600 = !DILocalVariable(name: "ret", scope: !13598, file: !3, line: 1026, type: !224)
!13601 = !DILocation(line: 1026, column: 7, scope: !13598)
!13602 = !DILocation(line: 1028, column: 10, scope: !13603)
!13603 = distinct !DILexicalBlock(scope: !13598, file: !3, line: 1028, column: 3)
!13604 = !DILocation(line: 1028, column: 8, scope: !13603)
!13605 = !DILocation(line: 1028, column: 15, scope: !13606)
!13606 = distinct !DILexicalBlock(scope: !13603, file: !3, line: 1028, column: 3)
!13607 = !DILocation(line: 1028, column: 19, scope: !13606)
!13608 = !DILocation(line: 1028, column: 23, scope: !13606)
!13609 = !DILocation(line: 1028, column: 17, scope: !13606)
!13610 = !DILocation(line: 1028, column: 3, scope: !13603)
!13611 = !DILocalVariable(name: "fwspec", scope: !13612, file: !3, line: 1029, type: !3737)
!13612 = distinct !DILexicalBlock(scope: !13606, file: !3, line: 1028, column: 35)
!13613 = !DILocation(line: 1029, column: 22, scope: !13612)
!13614 = !DILocalVariable(name: "parent_hwirq", scope: !13612, file: !3, line: 1030, type: !7)
!13615 = !DILocation(line: 1030, column: 17, scope: !13612)
!13616 = !DILocalVariable(name: "parent_type", scope: !13612, file: !3, line: 1031, type: !7)
!13617 = !DILocation(line: 1031, column: 17, scope: !13612)
!13618 = !DILocalVariable(name: "girq", scope: !13612, file: !3, line: 1032, type: !6285)
!13619 = !DILocation(line: 1032, column: 26, scope: !13612)
!13620 = !DILocation(line: 1032, column: 34, scope: !13612)
!13621 = !DILocation(line: 1032, column: 38, scope: !13612)
!13622 = !DILocation(line: 1040, column: 10, scope: !13612)
!13623 = !DILocation(line: 1040, column: 16, scope: !13612)
!13624 = !DILocation(line: 1040, column: 38, scope: !13612)
!13625 = !DILocation(line: 1040, column: 42, scope: !13612)
!13626 = !DILocation(line: 1040, column: 8, scope: !13612)
!13627 = !DILocation(line: 1044, column: 8, scope: !13628)
!13628 = distinct !DILexicalBlock(scope: !13612, file: !3, line: 1044, column: 8)
!13629 = !DILocation(line: 1044, column: 8, scope: !13612)
!13630 = !DILocation(line: 1045, column: 5, scope: !13631)
!13631 = distinct !DILexicalBlock(scope: !13628, file: !3, line: 1044, column: 13)
!13632 = !DILocation(line: 1047, column: 5, scope: !13631)
!13633 = !DILocation(line: 1050, column: 20, scope: !13612)
!13634 = !DILocation(line: 1050, column: 24, scope: !13612)
!13635 = !DILocation(line: 1050, column: 28, scope: !13612)
!13636 = !DILocation(line: 1050, column: 11, scope: !13612)
!13637 = !DILocation(line: 1050, column: 18, scope: !13612)
!13638 = !DILocation(line: 1052, column: 22, scope: !13612)
!13639 = !DILocation(line: 1052, column: 28, scope: !13612)
!13640 = !DILocation(line: 1052, column: 48, scope: !13612)
!13641 = !DILocation(line: 1052, column: 52, scope: !13612)
!13642 = !DILocation(line: 1052, column: 11, scope: !13612)
!13643 = !DILocation(line: 1052, column: 4, scope: !13612)
!13644 = !DILocation(line: 1052, column: 20, scope: !13612)
!13645 = !DILocation(line: 1054, column: 11, scope: !13612)
!13646 = !DILocation(line: 1054, column: 4, scope: !13612)
!13647 = !DILocation(line: 1054, column: 20, scope: !13612)
!13648 = !DILocation(line: 1055, column: 11, scope: !13612)
!13649 = !DILocation(line: 1055, column: 23, scope: !13612)
!13650 = !DILocation(line: 1056, column: 34, scope: !13612)
!13651 = !DILocation(line: 1056, column: 38, scope: !13612)
!13652 = !DILocation(line: 1056, column: 42, scope: !13612)
!13653 = !DILocation(line: 1061, column: 13, scope: !13612)
!13654 = !DILocation(line: 1056, column: 10, scope: !13612)
!13655 = !DILocation(line: 1056, column: 8, scope: !13612)
!13656 = !DILocation(line: 1064, column: 8, scope: !13657)
!13657 = distinct !DILexicalBlock(scope: !13612, file: !3, line: 1064, column: 8)
!13658 = !DILocation(line: 1064, column: 12, scope: !13657)
!13659 = !DILocation(line: 1064, column: 8, scope: !13612)
!13660 = !DILocation(line: 1065, column: 5, scope: !13661)
!13661 = distinct !DILexicalBlock(scope: !13657, file: !3, line: 1064, column: 17)
!13662 = !DILocation(line: 1069, column: 4, scope: !13661)
!13663 = !DILocation(line: 1070, column: 3, scope: !13612)
!13664 = !DILocation(line: 1028, column: 31, scope: !13606)
!13665 = !DILocation(line: 1028, column: 3, scope: !13606)
!13666 = distinct !{!13666, !13610, !13667}
!13667 = !DILocation(line: 1070, column: 3, scope: !13603)
!13668 = !DILocation(line: 1071, column: 2, scope: !13598)
!13669 = !DILocation(line: 1073, column: 2, scope: !13577)
!13670 = !DILocation(line: 1075, column: 2, scope: !13577)
!13671 = !DILocation(line: 1076, column: 1, scope: !13577)
!13672 = distinct !DISubprogram(name: "gpiochip_hierarchy_irq_domain_alloc", scope: !3, file: !3, line: 1101, type: !3761, scopeLine: 1105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13673 = !DILocalVariable(name: "d", arg: 1, scope: !13672, file: !3, line: 1101, type: !3604)
!13674 = !DILocation(line: 1101, column: 67, scope: !13672)
!13675 = !DILocalVariable(name: "irq", arg: 2, scope: !13672, file: !3, line: 1102, type: !7)
!13676 = !DILocation(line: 1102, column: 26, scope: !13672)
!13677 = !DILocalVariable(name: "nr_irqs", arg: 3, scope: !13672, file: !3, line: 1103, type: !7)
!13678 = !DILocation(line: 1103, column: 26, scope: !13672)
!13679 = !DILocalVariable(name: "data", arg: 4, scope: !13672, file: !3, line: 1104, type: !218)
!13680 = !DILocation(line: 1104, column: 19, scope: !13672)
!13681 = !DILocalVariable(name: "gc", scope: !13672, file: !3, line: 1106, type: !4096)
!13682 = !DILocation(line: 1106, column: 20, scope: !13672)
!13683 = !DILocation(line: 1106, column: 25, scope: !13672)
!13684 = !DILocation(line: 1106, column: 28, scope: !13672)
!13685 = !DILocalVariable(name: "hwirq", scope: !13672, file: !3, line: 1107, type: !3747)
!13686 = !DILocation(line: 1107, column: 18, scope: !13672)
!13687 = !DILocalVariable(name: "type", scope: !13672, file: !3, line: 1108, type: !7)
!13688 = !DILocation(line: 1108, column: 15, scope: !13672)
!13689 = !DILocalVariable(name: "fwspec", scope: !13672, file: !3, line: 1109, type: !3736)
!13690 = !DILocation(line: 1109, column: 21, scope: !13672)
!13691 = !DILocation(line: 1109, column: 30, scope: !13672)
!13692 = !DILocalVariable(name: "parent_arg", scope: !13672, file: !3, line: 1110, type: !218)
!13693 = !DILocation(line: 1110, column: 8, scope: !13672)
!13694 = !DILocalVariable(name: "parent_hwirq", scope: !13672, file: !3, line: 1111, type: !7)
!13695 = !DILocation(line: 1111, column: 15, scope: !13672)
!13696 = !DILocalVariable(name: "parent_type", scope: !13672, file: !3, line: 1112, type: !7)
!13697 = !DILocation(line: 1112, column: 15, scope: !13672)
!13698 = !DILocalVariable(name: "girq", scope: !13672, file: !3, line: 1113, type: !6285)
!13699 = !DILocation(line: 1113, column: 24, scope: !13672)
!13700 = !DILocation(line: 1113, column: 32, scope: !13672)
!13701 = !DILocation(line: 1113, column: 36, scope: !13672)
!13702 = !DILocalVariable(name: "ret", scope: !13672, file: !3, line: 1114, type: !224)
!13703 = !DILocation(line: 1114, column: 6, scope: !13672)
!13704 = !DILocalVariable(name: "__ret_warn_on", scope: !13705, file: !3, line: 1120, type: !224)
!13705 = distinct !DILexicalBlock(scope: !13672, file: !3, line: 1120, column: 2)
!13706 = !DILocation(line: 1120, column: 2, scope: !13705)
!13707 = !DILocation(line: 1120, column: 2, scope: !13708)
!13708 = distinct !DILexicalBlock(scope: !13705, file: !3, line: 1120, column: 2)
!13709 = !DILocation(line: 1120, column: 2, scope: !13710)
!13710 = distinct !DILexicalBlock(scope: !13708, file: !3, line: 1120, column: 2)
!13711 = !DILocation(line: 1120, column: 2, scope: !13712)
!13712 = distinct !DILexicalBlock(scope: !13710, file: !3, line: 1120, column: 2)
!13713 = !DILocation(line: 1120, column: 2, scope: !13714)
!13714 = distinct !DILexicalBlock(scope: !13710, file: !3, line: 1120, column: 2)
!13715 = !{i32 -2141426755, i32 -2141426726, i32 -2141426680, i32 -2141426622, i32 -2141426568, i32 -2141426514, i32 -2141426459, i32 -2141426428}
!13716 = !DILocation(line: 1120, column: 2, scope: !13717)
!13717 = distinct !DILexicalBlock(scope: !13710, file: !3, line: 1120, column: 2)
!13718 = !{i32 -2141426023, i32 -2141426016, i32 -2141425964, i32 -2141425933, i32 -2141425903}
!13719 = !DILocation(line: 1120, column: 2, scope: !13720)
!13720 = distinct !DILexicalBlock(scope: !13710, file: !3, line: 1120, column: 2)
!13721 = !DILocation(line: 1122, column: 8, scope: !13672)
!13722 = !DILocation(line: 1122, column: 12, scope: !13672)
!13723 = !DILocation(line: 1122, column: 16, scope: !13672)
!13724 = !DILocation(line: 1122, column: 37, scope: !13672)
!13725 = !DILocation(line: 1122, column: 47, scope: !13672)
!13726 = !DILocation(line: 1122, column: 50, scope: !13672)
!13727 = !DILocation(line: 1122, column: 6, scope: !13672)
!13728 = !DILocation(line: 1123, column: 6, scope: !13729)
!13729 = distinct !DILexicalBlock(scope: !13672, file: !3, line: 1123, column: 6)
!13730 = !DILocation(line: 1123, column: 6, scope: !13672)
!13731 = !DILocation(line: 1124, column: 10, scope: !13729)
!13732 = !DILocation(line: 1124, column: 3, scope: !13729)
!13733 = !DILocation(line: 1128, column: 8, scope: !13672)
!13734 = !DILocation(line: 1128, column: 14, scope: !13672)
!13735 = !DILocation(line: 1128, column: 36, scope: !13672)
!13736 = !DILocation(line: 1128, column: 40, scope: !13672)
!13737 = !DILocation(line: 1128, column: 47, scope: !13672)
!13738 = !DILocation(line: 1128, column: 6, scope: !13672)
!13739 = !DILocation(line: 1130, column: 6, scope: !13740)
!13740 = distinct !DILexicalBlock(scope: !13672, file: !3, line: 1130, column: 6)
!13741 = !DILocation(line: 1130, column: 6, scope: !13672)
!13742 = !DILocation(line: 1131, column: 3, scope: !13743)
!13743 = distinct !DILexicalBlock(scope: !13740, file: !3, line: 1130, column: 11)
!13744 = !DILocation(line: 1132, column: 10, scope: !13743)
!13745 = !DILocation(line: 1132, column: 3, scope: !13743)
!13746 = !DILocation(line: 1140, column: 22, scope: !13672)
!13747 = !DILocation(line: 1141, column: 8, scope: !13672)
!13748 = !DILocation(line: 1142, column: 8, scope: !13672)
!13749 = !DILocation(line: 1143, column: 8, scope: !13672)
!13750 = !DILocation(line: 1143, column: 12, scope: !13672)
!13751 = !DILocation(line: 1143, column: 16, scope: !13672)
!13752 = !DILocation(line: 1144, column: 8, scope: !13672)
!13753 = !DILocation(line: 1145, column: 8, scope: !13672)
!13754 = !DILocation(line: 1145, column: 14, scope: !13672)
!13755 = !DILocation(line: 1140, column: 2, scope: !13672)
!13756 = !DILocation(line: 1147, column: 16, scope: !13672)
!13757 = !DILocation(line: 1147, column: 2, scope: !13672)
!13758 = !DILocation(line: 1150, column: 15, scope: !13672)
!13759 = !DILocation(line: 1150, column: 21, scope: !13672)
!13760 = !DILocation(line: 1150, column: 47, scope: !13672)
!13761 = !DILocation(line: 1150, column: 51, scope: !13672)
!13762 = !DILocation(line: 1150, column: 65, scope: !13672)
!13763 = !DILocation(line: 1150, column: 13, scope: !13672)
!13764 = !DILocation(line: 1151, column: 7, scope: !13765)
!13765 = distinct !DILexicalBlock(scope: !13672, file: !3, line: 1151, column: 6)
!13766 = !DILocation(line: 1151, column: 6, scope: !13672)
!13767 = !DILocation(line: 1152, column: 3, scope: !13765)
!13768 = !DILocation(line: 1156, column: 24, scope: !13672)
!13769 = !DILocation(line: 1156, column: 29, scope: !13672)
!13770 = !DILocation(line: 1156, column: 33, scope: !13672)
!13771 = !DILocation(line: 1156, column: 37, scope: !13672)
!13772 = !DILocation(line: 1156, column: 47, scope: !13672)
!13773 = !DILocation(line: 1156, column: 51, scope: !13672)
!13774 = !DILocation(line: 1156, column: 55, scope: !13672)
!13775 = !DILocation(line: 1156, column: 2, scope: !13672)
!13776 = !DILocation(line: 1157, column: 37, scope: !13672)
!13777 = !DILocation(line: 1157, column: 40, scope: !13672)
!13778 = !DILocation(line: 1157, column: 48, scope: !13672)
!13779 = !DILocation(line: 1157, column: 8, scope: !13672)
!13780 = !DILocation(line: 1157, column: 6, scope: !13672)
!13781 = !DILocation(line: 1162, column: 24, scope: !13782)
!13782 = distinct !DILexicalBlock(scope: !13672, file: !3, line: 1162, column: 6)
!13783 = !DILocation(line: 1162, column: 27, scope: !13782)
!13784 = !DILocation(line: 1162, column: 6, scope: !13782)
!13785 = !DILocation(line: 1162, column: 35, scope: !13782)
!13786 = !DILocation(line: 1162, column: 39, scope: !13782)
!13787 = !DILocation(line: 1162, column: 43, scope: !13782)
!13788 = !DILocation(line: 1162, column: 6, scope: !13672)
!13789 = !DILocation(line: 1163, column: 7, scope: !13782)
!13790 = !DILocation(line: 1163, column: 3, scope: !13782)
!13791 = !DILocation(line: 1164, column: 6, scope: !13792)
!13792 = distinct !DILexicalBlock(scope: !13672, file: !3, line: 1164, column: 6)
!13793 = !DILocation(line: 1164, column: 6, scope: !13672)
!13794 = !DILocation(line: 1165, column: 3, scope: !13792)
!13795 = !DILocation(line: 1169, column: 8, scope: !13672)
!13796 = !DILocation(line: 1169, column: 2, scope: !13672)
!13797 = !DILocation(line: 1170, column: 9, scope: !13672)
!13798 = !DILocation(line: 1170, column: 2, scope: !13672)
!13799 = !DILocation(line: 1171, column: 1, scope: !13672)
!13800 = distinct !DISubprogram(name: "gpiochip_hierarchy_irq_domain_translate", scope: !3, file: !3, line: 1078, type: !3878, scopeLine: 1082, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13801 = !DILocalVariable(name: "d", arg: 1, scope: !13800, file: !3, line: 1078, type: !3604)
!13802 = !DILocation(line: 1078, column: 71, scope: !13800)
!13803 = !DILocalVariable(name: "fwspec", arg: 2, scope: !13800, file: !3, line: 1079, type: !3736)
!13804 = !DILocation(line: 1079, column: 29, scope: !13800)
!13805 = !DILocalVariable(name: "hwirq", arg: 3, scope: !13800, file: !3, line: 1080, type: !3758)
!13806 = !DILocation(line: 1080, column: 25, scope: !13800)
!13807 = !DILocalVariable(name: "type", arg: 4, scope: !13800, file: !3, line: 1081, type: !2640)
!13808 = !DILocation(line: 1081, column: 24, scope: !13800)
!13809 = !DILocation(line: 1084, column: 17, scope: !13810)
!13810 = distinct !DILexicalBlock(scope: !13800, file: !3, line: 1084, column: 6)
!13811 = !DILocation(line: 1084, column: 25, scope: !13810)
!13812 = !DILocation(line: 1084, column: 6, scope: !13810)
!13813 = !DILocation(line: 1084, column: 33, scope: !13810)
!13814 = !DILocation(line: 1084, column: 36, scope: !13810)
!13815 = !DILocation(line: 1084, column: 44, scope: !13810)
!13816 = !DILocation(line: 1084, column: 56, scope: !13810)
!13817 = !DILocation(line: 1084, column: 6, scope: !13800)
!13818 = !DILocation(line: 1085, column: 39, scope: !13819)
!13819 = distinct !DILexicalBlock(scope: !13810, file: !3, line: 1084, column: 62)
!13820 = !DILocation(line: 1085, column: 42, scope: !13819)
!13821 = !DILocation(line: 1085, column: 50, scope: !13819)
!13822 = !DILocation(line: 1085, column: 57, scope: !13819)
!13823 = !DILocation(line: 1085, column: 10, scope: !13819)
!13824 = !DILocation(line: 1085, column: 3, scope: !13819)
!13825 = !DILocation(line: 1089, column: 24, scope: !13826)
!13826 = distinct !DILexicalBlock(scope: !13800, file: !3, line: 1089, column: 6)
!13827 = !DILocation(line: 1089, column: 32, scope: !13826)
!13828 = !DILocation(line: 1089, column: 6, scope: !13826)
!13829 = !DILocation(line: 1089, column: 6, scope: !13800)
!13830 = !DILocalVariable(name: "ret", scope: !13831, file: !3, line: 1090, type: !224)
!13831 = distinct !DILexicalBlock(scope: !13826, file: !3, line: 1089, column: 41)
!13832 = !DILocation(line: 1090, column: 7, scope: !13831)
!13833 = !DILocation(line: 1092, column: 38, scope: !13831)
!13834 = !DILocation(line: 1092, column: 41, scope: !13831)
!13835 = !DILocation(line: 1092, column: 49, scope: !13831)
!13836 = !DILocation(line: 1092, column: 56, scope: !13831)
!13837 = !DILocation(line: 1092, column: 9, scope: !13831)
!13838 = !DILocation(line: 1092, column: 7, scope: !13831)
!13839 = !DILocation(line: 1093, column: 7, scope: !13840)
!13840 = distinct !DILexicalBlock(scope: !13831, file: !3, line: 1093, column: 7)
!13841 = !DILocation(line: 1093, column: 7, scope: !13831)
!13842 = !DILocation(line: 1094, column: 11, scope: !13840)
!13843 = !DILocation(line: 1094, column: 4, scope: !13840)
!13844 = !DILocalVariable(name: "__ret_warn_on", scope: !13845, file: !3, line: 1095, type: !224)
!13845 = distinct !DILexicalBlock(scope: !13831, file: !3, line: 1095, column: 3)
!13846 = !DILocation(line: 1095, column: 3, scope: !13845)
!13847 = !DILocation(line: 1095, column: 3, scope: !13848)
!13848 = distinct !DILexicalBlock(scope: !13845, file: !3, line: 1095, column: 3)
!13849 = !DILocation(line: 1095, column: 3, scope: !13850)
!13850 = distinct !DILexicalBlock(scope: !13848, file: !3, line: 1095, column: 3)
!13851 = !DILocation(line: 1095, column: 3, scope: !13852)
!13852 = distinct !DILexicalBlock(scope: !13850, file: !3, line: 1095, column: 3)
!13853 = !DILocation(line: 1095, column: 3, scope: !13854)
!13854 = distinct !DILexicalBlock(scope: !13850, file: !3, line: 1095, column: 3)
!13855 = !{i32 -2141428194, i32 -2141428165, i32 -2141428119, i32 -2141428061, i32 -2141428007, i32 -2141427953, i32 -2141427898, i32 -2141427867}
!13856 = !DILocation(line: 1095, column: 3, scope: !13857)
!13857 = distinct !DILexicalBlock(scope: !13850, file: !3, line: 1095, column: 3)
!13858 = !{i32 -2141427462, i32 -2141427455, i32 -2141427403, i32 -2141427372, i32 -2141427342}
!13859 = !DILocation(line: 1095, column: 3, scope: !13860)
!13860 = distinct !DILexicalBlock(scope: !13850, file: !3, line: 1095, column: 3)
!13861 = !DILocation(line: 1096, column: 3, scope: !13831)
!13862 = !DILocation(line: 1098, column: 2, scope: !13800)
!13863 = !DILocation(line: 1099, column: 1, scope: !13800)
!13864 = distinct !DISubprogram(name: "irq_set_probe", scope: !102, file: !102, line: 771, type: !7726, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13865 = !DILocalVariable(name: "irq", arg: 1, scope: !13864, file: !102, line: 771, type: !7)
!13866 = !DILocation(line: 771, column: 47, scope: !13864)
!13867 = !DILocation(line: 773, column: 20, scope: !13864)
!13868 = !DILocation(line: 773, column: 2, scope: !13864)
!13869 = !DILocation(line: 774, column: 1, scope: !13864)
!13870 = distinct !DISubprogram(name: "irq_domain_is_msi", scope: !81, file: !81, line: 545, type: !13871, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13871 = !DISubroutineType(types: !13872)
!13872 = !{!508, !3604}
!13873 = !DILocalVariable(name: "domain", arg: 1, scope: !13870, file: !81, line: 545, type: !3604)
!13874 = !DILocation(line: 545, column: 57, scope: !13870)
!13875 = !DILocation(line: 547, column: 9, scope: !13870)
!13876 = !DILocation(line: 547, column: 17, scope: !13870)
!13877 = !DILocation(line: 547, column: 23, scope: !13870)
!13878 = !DILocation(line: 547, column: 2, scope: !13870)
!13879 = distinct !DISubprogram(name: "is_fwnode_irqchip", scope: !81, file: !81, line: 290, type: !13880, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13880 = !DISubroutineType(types: !13881)
!13881 = !{!508, !3631}
!13882 = !DILocalVariable(name: "fwnode", arg: 1, scope: !13879, file: !81, line: 290, type: !3631)
!13883 = !DILocation(line: 290, column: 60, scope: !13879)
!13884 = !DILocation(line: 292, column: 9, scope: !13879)
!13885 = !DILocation(line: 292, column: 16, scope: !13879)
!13886 = !DILocation(line: 292, column: 19, scope: !13879)
!13887 = !DILocation(line: 292, column: 27, scope: !13879)
!13888 = !DILocation(line: 292, column: 31, scope: !13879)
!13889 = !DILocation(line: 0, scope: !13879)
!13890 = !DILocation(line: 292, column: 2, scope: !13879)
!13891 = distinct !DISubprogram(name: "gpiochip_irq_reqres", scope: !3, file: !3, line: 1420, type: !3818, scopeLine: 1421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13892 = !DILocalVariable(name: "d", arg: 1, scope: !13891, file: !3, line: 1420, type: !3771)
!13893 = !DILocation(line: 1420, column: 49, scope: !13891)
!13894 = !DILocalVariable(name: "gc", scope: !13891, file: !3, line: 1422, type: !4096)
!13895 = !DILocation(line: 1422, column: 20, scope: !13891)
!13896 = !DILocation(line: 1422, column: 52, scope: !13891)
!13897 = !DILocation(line: 1422, column: 25, scope: !13891)
!13898 = !DILocation(line: 1424, column: 29, scope: !13891)
!13899 = !DILocation(line: 1424, column: 33, scope: !13891)
!13900 = !DILocation(line: 1424, column: 36, scope: !13891)
!13901 = !DILocation(line: 1424, column: 9, scope: !13891)
!13902 = !DILocation(line: 1424, column: 2, scope: !13891)
!13903 = distinct !DISubprogram(name: "gpiochip_irq_enable", scope: !3, file: !3, line: 1452, type: !3801, scopeLine: 1453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13904 = !DILocalVariable(name: "d", arg: 1, scope: !13903, file: !3, line: 1452, type: !3771)
!13905 = !DILocation(line: 1452, column: 50, scope: !13903)
!13906 = !DILocalVariable(name: "gc", scope: !13903, file: !3, line: 1454, type: !4096)
!13907 = !DILocation(line: 1454, column: 20, scope: !13903)
!13908 = !DILocation(line: 1454, column: 52, scope: !13903)
!13909 = !DILocation(line: 1454, column: 25, scope: !13903)
!13910 = !DILocation(line: 1456, column: 22, scope: !13903)
!13911 = !DILocation(line: 1456, column: 26, scope: !13903)
!13912 = !DILocation(line: 1456, column: 29, scope: !13903)
!13913 = !DILocation(line: 1456, column: 2, scope: !13903)
!13914 = !DILocation(line: 1457, column: 2, scope: !13903)
!13915 = !DILocation(line: 1457, column: 6, scope: !13903)
!13916 = !DILocation(line: 1457, column: 10, scope: !13903)
!13917 = !DILocation(line: 1457, column: 21, scope: !13903)
!13918 = !DILocation(line: 1458, column: 1, scope: !13903)
!13919 = distinct !DISubprogram(name: "irq_data_get_irq_chip_data", scope: !102, file: !102, line: 828, type: !13920, scopeLine: 829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13920 = !DISubroutineType(types: !13921)
!13921 = !{!218, !3771}
!13922 = !DILocalVariable(name: "d", arg: 1, scope: !13919, file: !102, line: 828, type: !3771)
!13923 = !DILocation(line: 828, column: 65, scope: !13919)
!13924 = !DILocation(line: 830, column: 9, scope: !13919)
!13925 = !DILocation(line: 830, column: 12, scope: !13919)
!13926 = !DILocation(line: 830, column: 2, scope: !13919)
!13927 = distinct !DISubprogram(name: "irq_domain_is_hierarchy", scope: !81, file: !81, line: 524, type: !13871, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13928 = !DILocalVariable(name: "domain", arg: 1, scope: !13927, file: !81, line: 524, type: !3604)
!13929 = !DILocation(line: 524, column: 63, scope: !13927)
!13930 = !DILocation(line: 526, column: 9, scope: !13927)
!13931 = !DILocation(line: 526, column: 17, scope: !13927)
!13932 = !DILocation(line: 526, column: 23, scope: !13927)
!13933 = !DILocation(line: 526, column: 2, scope: !13927)
!13934 = distinct !DISubprogram(name: "irq_create_mapping", scope: !81, file: !81, line: 393, type: !13935, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13935 = !DISubroutineType(types: !13936)
!13936 = !{!7, !3604, !3747}
!13937 = !DILocalVariable(name: "host", arg: 1, scope: !13934, file: !81, line: 393, type: !3604)
!13938 = !DILocation(line: 393, column: 66, scope: !13934)
!13939 = !DILocalVariable(name: "hwirq", arg: 2, scope: !13934, file: !81, line: 394, type: !3747)
!13940 = !DILocation(line: 394, column: 28, scope: !13934)
!13941 = !DILocation(line: 396, column: 37, scope: !13934)
!13942 = !DILocation(line: 396, column: 43, scope: !13934)
!13943 = !DILocation(line: 396, column: 9, scope: !13934)
!13944 = !DILocation(line: 396, column: 2, scope: !13934)
!13945 = distinct !DISubprogram(name: "gpiochip_irq_relres", scope: !3, file: !3, line: 1427, type: !3801, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13946 = !DILocalVariable(name: "d", arg: 1, scope: !13945, file: !3, line: 1427, type: !3771)
!13947 = !DILocation(line: 1427, column: 50, scope: !13945)
!13948 = !DILocalVariable(name: "gc", scope: !13945, file: !3, line: 1429, type: !4096)
!13949 = !DILocation(line: 1429, column: 20, scope: !13945)
!13950 = !DILocation(line: 1429, column: 52, scope: !13945)
!13951 = !DILocation(line: 1429, column: 25, scope: !13945)
!13952 = !DILocation(line: 1431, column: 22, scope: !13945)
!13953 = !DILocation(line: 1431, column: 26, scope: !13945)
!13954 = !DILocation(line: 1431, column: 29, scope: !13945)
!13955 = !DILocation(line: 1431, column: 2, scope: !13945)
!13956 = !DILocation(line: 1432, column: 1, scope: !13945)
!13957 = distinct !DISubprogram(name: "gpiochip_irq_disable", scope: !3, file: !3, line: 1460, type: !3801, scopeLine: 1461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13958 = !DILocalVariable(name: "d", arg: 1, scope: !13957, file: !3, line: 1460, type: !3771)
!13959 = !DILocation(line: 1460, column: 51, scope: !13957)
!13960 = !DILocalVariable(name: "gc", scope: !13957, file: !3, line: 1462, type: !4096)
!13961 = !DILocation(line: 1462, column: 20, scope: !13957)
!13962 = !DILocation(line: 1462, column: 52, scope: !13957)
!13963 = !DILocation(line: 1462, column: 25, scope: !13957)
!13964 = !DILocation(line: 1464, column: 2, scope: !13957)
!13965 = !DILocation(line: 1464, column: 6, scope: !13957)
!13966 = !DILocation(line: 1464, column: 10, scope: !13957)
!13967 = !DILocation(line: 1464, column: 22, scope: !13957)
!13968 = !DILocation(line: 1465, column: 23, scope: !13957)
!13969 = !DILocation(line: 1465, column: 27, scope: !13957)
!13970 = !DILocation(line: 1465, column: 30, scope: !13957)
!13971 = !DILocation(line: 1465, column: 2, scope: !13957)
!13972 = !DILocation(line: 1466, column: 1, scope: !13957)
!13973 = distinct !DISubprogram(name: "gpiochip_irq_mask", scope: !3, file: !3, line: 1434, type: !3801, scopeLine: 1435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13974 = !DILocalVariable(name: "d", arg: 1, scope: !13973, file: !3, line: 1434, type: !3771)
!13975 = !DILocation(line: 1434, column: 48, scope: !13973)
!13976 = !DILocalVariable(name: "gc", scope: !13973, file: !3, line: 1436, type: !4096)
!13977 = !DILocation(line: 1436, column: 20, scope: !13973)
!13978 = !DILocation(line: 1436, column: 52, scope: !13973)
!13979 = !DILocation(line: 1436, column: 25, scope: !13973)
!13980 = !DILocation(line: 1438, column: 6, scope: !13981)
!13981 = distinct !DILexicalBlock(scope: !13973, file: !3, line: 1438, column: 6)
!13982 = !DILocation(line: 1438, column: 10, scope: !13981)
!13983 = !DILocation(line: 1438, column: 14, scope: !13981)
!13984 = !DILocation(line: 1438, column: 6, scope: !13973)
!13985 = !DILocation(line: 1439, column: 3, scope: !13981)
!13986 = !DILocation(line: 1439, column: 7, scope: !13981)
!13987 = !DILocation(line: 1439, column: 11, scope: !13981)
!13988 = !DILocation(line: 1439, column: 20, scope: !13981)
!13989 = !DILocation(line: 1440, column: 23, scope: !13973)
!13990 = !DILocation(line: 1440, column: 27, scope: !13973)
!13991 = !DILocation(line: 1440, column: 30, scope: !13973)
!13992 = !DILocation(line: 1440, column: 2, scope: !13973)
!13993 = !DILocation(line: 1441, column: 1, scope: !13973)
!13994 = distinct !DISubprogram(name: "gpiochip_irq_unmask", scope: !3, file: !3, line: 1443, type: !3801, scopeLine: 1444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!13995 = !DILocalVariable(name: "d", arg: 1, scope: !13994, file: !3, line: 1443, type: !3771)
!13996 = !DILocation(line: 1443, column: 50, scope: !13994)
!13997 = !DILocalVariable(name: "gc", scope: !13994, file: !3, line: 1445, type: !4096)
!13998 = !DILocation(line: 1445, column: 20, scope: !13994)
!13999 = !DILocation(line: 1445, column: 52, scope: !13994)
!14000 = !DILocation(line: 1445, column: 25, scope: !13994)
!14001 = !DILocation(line: 1447, column: 22, scope: !13994)
!14002 = !DILocation(line: 1447, column: 26, scope: !13994)
!14003 = !DILocation(line: 1447, column: 29, scope: !13994)
!14004 = !DILocation(line: 1447, column: 2, scope: !13994)
!14005 = !DILocation(line: 1448, column: 6, scope: !14006)
!14006 = distinct !DILexicalBlock(scope: !13994, file: !3, line: 1448, column: 6)
!14007 = !DILocation(line: 1448, column: 10, scope: !14006)
!14008 = !DILocation(line: 1448, column: 14, scope: !14006)
!14009 = !DILocation(line: 1448, column: 6, scope: !13994)
!14010 = !DILocation(line: 1449, column: 3, scope: !14006)
!14011 = !DILocation(line: 1449, column: 7, scope: !14006)
!14012 = !DILocation(line: 1449, column: 11, scope: !14006)
!14013 = !DILocation(line: 1449, column: 22, scope: !14006)
!14014 = !DILocation(line: 1450, column: 1, scope: !13994)
!14015 = distinct !DISubprogram(name: "test_and_set_bit", scope: !9063, file: !9063, line: 68, type: !14016, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!14016 = !DISubroutineType(types: !14017)
!14017 = !{!508, !327, !4874}
!14018 = !DILocalVariable(name: "nr", arg: 1, scope: !14019, file: !4961, line: 136, type: !327)
!14019 = distinct !DISubprogram(name: "arch_test_and_set_bit", scope: !4961, file: !4961, line: 136, type: !14016, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!14020 = !DILocation(line: 136, column: 28, scope: !14019, inlinedAt: !14021)
!14021 = distinct !DILocation(line: 71, column: 9, scope: !14015)
!14022 = !DILocalVariable(name: "addr", arg: 2, scope: !14019, file: !4961, line: 136, type: !4874)
!14023 = !DILocation(line: 136, column: 56, scope: !14019, inlinedAt: !14021)
!14024 = !DILocalVariable(name: "c", scope: !14025, file: !4961, line: 138, type: !508)
!14025 = distinct !DILexicalBlock(scope: !14019, file: !4961, line: 138, column: 9)
!14026 = !DILocation(line: 138, column: 9, scope: !14025, inlinedAt: !14021)
!14027 = !DILocalVariable(name: "v", arg: 1, scope: !14028, file: !4976, line: 99, type: !4979)
!14028 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !4976, file: !4976, line: 99, type: !4977, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!14029 = !DILocation(line: 99, column: 79, scope: !14028, inlinedAt: !14030)
!14030 = distinct !DILocation(line: 70, column: 2, scope: !14015)
!14031 = !DILocalVariable(name: "size", arg: 2, scope: !14028, file: !4976, line: 99, type: !339)
!14032 = !DILocation(line: 99, column: 89, scope: !14028, inlinedAt: !14030)
!14033 = !DILocalVariable(name: "nr", arg: 1, scope: !14015, file: !9063, line: 68, type: !327)
!14034 = !DILocation(line: 68, column: 42, scope: !14015)
!14035 = !DILocalVariable(name: "addr", arg: 2, scope: !14015, file: !9063, line: 68, type: !4874)
!14036 = !DILocation(line: 68, column: 70, scope: !14015)
!14037 = !DILocation(line: 70, column: 31, scope: !14015)
!14038 = !DILocation(line: 70, column: 38, scope: !14015)
!14039 = !DILocation(line: 70, column: 36, scope: !14015)
!14040 = !DILocation(line: 101, column: 20, scope: !14028, inlinedAt: !14030)
!14041 = !DILocation(line: 101, column: 23, scope: !14028, inlinedAt: !14030)
!14042 = !DILocation(line: 101, column: 2, scope: !14028, inlinedAt: !14030)
!14043 = !DILocation(line: 102, column: 2, scope: !14028, inlinedAt: !14030)
!14044 = !DILocation(line: 71, column: 31, scope: !14015)
!14045 = !DILocation(line: 71, column: 35, scope: !14015)
!14046 = !{i32 -2147115826, i32 -2147115730}
!14047 = !DILocation(line: 71, column: 2, scope: !14015)
!14048 = distinct !DISubprogram(name: "kasan_check_write", scope: !13002, file: !13002, line: 38, type: !13003, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!14049 = !DILocalVariable(name: "p", arg: 1, scope: !14048, file: !13002, line: 38, type: !4979)
!14050 = !DILocation(line: 38, column: 59, scope: !14048)
!14051 = !DILocalVariable(name: "size", arg: 2, scope: !14048, file: !13002, line: 38, type: !7)
!14052 = !DILocation(line: 38, column: 75, scope: !14048)
!14053 = !DILocation(line: 40, column: 2, scope: !14048)
!14054 = distinct !DISubprogram(name: "gpiod_unexport", scope: !158, file: !158, line: 735, type: !8591, scopeLine: 736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!14055 = !DILocalVariable(name: "desc", arg: 1, scope: !14054, file: !158, line: 735, type: !4232)
!14056 = !DILocation(line: 735, column: 53, scope: !14054)
!14057 = !DILocation(line: 737, column: 1, scope: !14054)
!14058 = distinct !DISubprogram(name: "gpiochip_match_name", scope: !3, file: !3, line: 877, type: !6937, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!14059 = !DILocalVariable(name: "gc", arg: 1, scope: !14058, file: !3, line: 877, type: !4096)
!14060 = !DILocation(line: 877, column: 50, scope: !14058)
!14061 = !DILocalVariable(name: "data", arg: 2, scope: !14058, file: !3, line: 877, type: !218)
!14062 = !DILocation(line: 877, column: 60, scope: !14058)
!14063 = !DILocalVariable(name: "name", scope: !14058, file: !3, line: 879, type: !233)
!14064 = !DILocation(line: 879, column: 14, scope: !14058)
!14065 = !DILocation(line: 879, column: 21, scope: !14058)
!14066 = !DILocation(line: 881, column: 17, scope: !14058)
!14067 = !DILocation(line: 881, column: 21, scope: !14058)
!14068 = !DILocation(line: 881, column: 28, scope: !14058)
!14069 = !DILocation(line: 881, column: 10, scope: !14058)
!14070 = !DILocation(line: 881, column: 9, scope: !14058)
!14071 = !DILocation(line: 881, column: 2, scope: !14058)
!14072 = distinct !DISubprogram(name: "gpiod_find_lookup_table", scope: !3, file: !3, line: 3629, type: !14073, scopeLine: 3630, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!14073 = !DISubroutineType(types: !14074)
!14074 = !{!4571, !3325}
!14075 = !DILocalVariable(name: "dev", arg: 1, scope: !14072, file: !3, line: 3629, type: !3325)
!14076 = !DILocation(line: 3629, column: 74, scope: !14072)
!14077 = !DILocalVariable(name: "dev_id", scope: !14072, file: !3, line: 3631, type: !233)
!14078 = !DILocation(line: 3631, column: 14, scope: !14072)
!14079 = !DILocation(line: 3631, column: 23, scope: !14072)
!14080 = !DILocation(line: 3631, column: 38, scope: !14072)
!14081 = !DILocation(line: 3631, column: 29, scope: !14072)
!14082 = !DILocalVariable(name: "table", scope: !14072, file: !3, line: 3632, type: !4571)
!14083 = !DILocation(line: 3632, column: 29, scope: !14072)
!14084 = !DILocation(line: 3634, column: 2, scope: !14072)
!14085 = !DILocalVariable(name: "__mptr", scope: !14086, file: !3, line: 3636, type: !218)
!14086 = distinct !DILexicalBlock(scope: !14087, file: !3, line: 3636, column: 2)
!14087 = distinct !DILexicalBlock(scope: !14072, file: !3, line: 3636, column: 2)
!14088 = !DILocation(line: 3636, column: 2, scope: !14086)
!14089 = !DILocation(line: 3636, column: 2, scope: !14090)
!14090 = distinct !DILexicalBlock(scope: !14086, file: !3, line: 3636, column: 2)
!14091 = !DILocation(line: 3636, column: 2, scope: !14087)
!14092 = !DILocation(line: 3636, column: 2, scope: !14093)
!14093 = distinct !DILexicalBlock(scope: !14087, file: !3, line: 3636, column: 2)
!14094 = !DILocation(line: 3637, column: 7, scope: !14095)
!14095 = distinct !DILexicalBlock(scope: !14096, file: !3, line: 3637, column: 7)
!14096 = distinct !DILexicalBlock(scope: !14093, file: !3, line: 3636, column: 54)
!14097 = !DILocation(line: 3637, column: 14, scope: !14095)
!14098 = !DILocation(line: 3637, column: 21, scope: !14095)
!14099 = !DILocation(line: 3637, column: 24, scope: !14095)
!14100 = !DILocation(line: 3637, column: 7, scope: !14096)
!14101 = !DILocation(line: 3642, column: 16, scope: !14102)
!14102 = distinct !DILexicalBlock(scope: !14103, file: !3, line: 3642, column: 8)
!14103 = distinct !DILexicalBlock(scope: !14095, file: !3, line: 3637, column: 32)
!14104 = !DILocation(line: 3642, column: 23, scope: !14102)
!14105 = !DILocation(line: 3642, column: 31, scope: !14102)
!14106 = !DILocation(line: 3642, column: 9, scope: !14102)
!14107 = !DILocation(line: 3642, column: 8, scope: !14103)
!14108 = !DILocation(line: 3643, column: 5, scope: !14102)
!14109 = !DILocation(line: 3644, column: 3, scope: !14103)
!14110 = !DILocation(line: 3649, column: 8, scope: !14111)
!14111 = distinct !DILexicalBlock(scope: !14112, file: !3, line: 3649, column: 8)
!14112 = distinct !DILexicalBlock(scope: !14095, file: !3, line: 3644, column: 10)
!14113 = !DILocation(line: 3649, column: 18, scope: !14111)
!14114 = !DILocation(line: 3649, column: 25, scope: !14111)
!14115 = !DILocation(line: 3649, column: 15, scope: !14111)
!14116 = !DILocation(line: 3649, column: 8, scope: !14112)
!14117 = !DILocation(line: 3650, column: 5, scope: !14111)
!14118 = !DILocation(line: 3652, column: 2, scope: !14096)
!14119 = !DILocalVariable(name: "__mptr", scope: !14120, file: !3, line: 3636, type: !218)
!14120 = distinct !DILexicalBlock(scope: !14093, file: !3, line: 3636, column: 2)
!14121 = !DILocation(line: 3636, column: 2, scope: !14120)
!14122 = !DILocation(line: 3636, column: 2, scope: !14123)
!14123 = distinct !DILexicalBlock(scope: !14120, file: !3, line: 3636, column: 2)
!14124 = distinct !{!14124, !14091, !14125}
!14125 = !DILocation(line: 3652, column: 2, scope: !14087)
!14126 = !DILocation(line: 3653, column: 8, scope: !14072)
!14127 = !DILocation(line: 3653, column: 2, scope: !14072)
!14128 = !DILabel(scope: !14072, name: "found", file: !3, line: 3655)
!14129 = !DILocation(line: 3655, column: 1, scope: !14072)
!14130 = !DILocation(line: 3656, column: 2, scope: !14072)
!14131 = !DILocation(line: 3657, column: 9, scope: !14072)
!14132 = !DILocation(line: 3657, column: 2, scope: !14072)
!14133 = distinct !DISubprogram(name: "kobject_name", scope: !230, file: !230, line: 88, type: !14134, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!14134 = !DISubroutineType(types: !14135)
!14135 = !{!233, !14136}
!14136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14137, size: 64)
!14137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !229)
!14138 = !DILocalVariable(name: "kobj", arg: 1, scope: !14133, file: !230, line: 88, type: !14136)
!14139 = !DILocation(line: 88, column: 62, scope: !14133)
!14140 = !DILocation(line: 90, column: 9, scope: !14133)
!14141 = !DILocation(line: 90, column: 15, scope: !14133)
!14142 = !DILocation(line: 90, column: 2, scope: !14133)
!14143 = distinct !DISubprogram(name: "IS_ERR_OR_NULL", scope: !4824, file: !4824, line: 39, type: !8809, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!14144 = !DILocalVariable(name: "ptr", arg: 1, scope: !14143, file: !4824, line: 39, type: !2145)
!14145 = !DILocation(line: 39, column: 68, scope: !14143)
!14146 = !DILocation(line: 41, column: 9, scope: !14143)
!14147 = !DILocation(line: 41, column: 24, scope: !14143)
!14148 = !DILocation(line: 41, column: 27, scope: !14143)
!14149 = !DILocation(line: 41, column: 2, scope: !14143)
!14150 = distinct !DISubprogram(name: "gpiochip_setup_devs", scope: !3, file: !3, line: 554, type: !1898, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !265)
!14151 = !DILocalVariable(name: "gdev", scope: !14150, file: !3, line: 556, type: !219)
!14152 = !DILocation(line: 556, column: 22, scope: !14150)
!14153 = !DILocalVariable(name: "ret", scope: !14150, file: !3, line: 557, type: !224)
!14154 = !DILocation(line: 557, column: 6, scope: !14150)
!14155 = !DILocalVariable(name: "__mptr", scope: !14156, file: !3, line: 559, type: !218)
!14156 = distinct !DILexicalBlock(scope: !14157, file: !3, line: 559, column: 2)
!14157 = distinct !DILexicalBlock(scope: !14150, file: !3, line: 559, column: 2)
!14158 = !DILocation(line: 559, column: 2, scope: !14156)
!14159 = !DILocation(line: 559, column: 2, scope: !14160)
!14160 = distinct !DILexicalBlock(scope: !14156, file: !3, line: 559, column: 2)
!14161 = !DILocation(line: 559, column: 2, scope: !14157)
!14162 = !DILocation(line: 559, column: 2, scope: !14163)
!14163 = distinct !DILexicalBlock(scope: !14157, file: !3, line: 559, column: 2)
!14164 = !DILocation(line: 560, column: 28, scope: !14165)
!14165 = distinct !DILexicalBlock(scope: !14163, file: !3, line: 559, column: 49)
!14166 = !DILocation(line: 560, column: 9, scope: !14165)
!14167 = !DILocation(line: 560, column: 7, scope: !14165)
!14168 = !DILocation(line: 561, column: 7, scope: !14169)
!14169 = distinct !DILexicalBlock(scope: !14165, file: !3, line: 561, column: 7)
!14170 = !DILocation(line: 561, column: 7, scope: !14165)
!14171 = !DILocation(line: 562, column: 4, scope: !14169)
!14172 = !DILocation(line: 564, column: 2, scope: !14165)
!14173 = !DILocalVariable(name: "__mptr", scope: !14174, file: !3, line: 559, type: !218)
!14174 = distinct !DILexicalBlock(scope: !14163, file: !3, line: 559, column: 2)
!14175 = !DILocation(line: 559, column: 2, scope: !14174)
!14176 = !DILocation(line: 559, column: 2, scope: !14177)
!14177 = distinct !DILexicalBlock(scope: !14174, file: !3, line: 559, column: 2)
!14178 = distinct !{!14178, !14161, !14179}
!14179 = !DILocation(line: 564, column: 2, scope: !14157)
!14180 = !DILocation(line: 565, column: 1, scope: !14150)
