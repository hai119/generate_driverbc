; ModuleID = '../bcout/drivers/gpio/gpiolib-cdev.llvm.bc'
source_filename = "drivers/gpio/gpiolib-cdev.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.module = type opaque
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.65, %struct.list_head, %struct.list_head, %union.anon.66 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.63 }
%union.anon.63 = type { %struct.anon.64 }
%struct.anon.64 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.page = type { i64, %union.anon.2, %union.anon.55, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.55 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.56, i32 }
%union.anon.56 = type { %struct.kuid_t }
%struct.kuid_t = type { i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.atomic_t = type { i32 }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.48, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%struct.kgid_t = type { i32 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.34, %union.anon.35, i32 }
%struct.request_queue = type opaque
%union.anon.34 = type { %struct.list_head }
%union.anon.35 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.36 }
%struct.anon.36 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.40 }
%struct.anon.40 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.47, i32, [12 x i8] }
%union.anon.47 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.48 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.49, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.52 }
%union.anon.49 = type { %struct.anon.50 }
%struct.anon.50 = type { i64, i64 }
%union.anon.52 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.65 = type { %struct.list_head }
%union.anon.66 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.57, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.58, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.59, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.62, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.57 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.58 = type { %struct.callback_head }
%union.anon.59 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.swap_info_struct = type opaque
%union.anon.62 = type { %struct.pipe_inode_info* }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.atomic64_t = type { i64 }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.33 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.33 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.60 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.60 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.kmem_cache = type opaque
%struct.gpio_device = type { i32, %struct.device, %struct.cdev, %struct.device*, %struct.module*, %struct.gpio_chip*, %struct.gpio_desc*, i32, i16, i8*, i8*, %struct.list_head, %struct.blocking_notifier_head }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.67, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.67 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type { i32, i32, i64, %struct.irq_common_data*, %struct.irq_chip*, %struct.irq_domain*, %struct.irq_data*, i8* }
%struct.irq_common_data = type { i32, i8*, %struct.msi_desc*, [1 x %struct.cpumask] }
%struct.msi_desc = type opaque
%struct.irq_chip = type { %struct.device*, i8*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, i32 (%struct.irq_data*, %struct.cpumask*, i1)*, i32 (%struct.irq_data*)*, i32 (%struct.irq_data*, i32)*, i32 (%struct.irq_data*, i32)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.seq_file*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.msi_msg*)*, void (%struct.irq_data*, %struct.msi_msg*)*, i32 (%struct.irq_data*, i32, i8*)*, i32 (%struct.irq_data*, i32, i1)*, i32 (%struct.irq_data*, i8*)*, void (%struct.irq_data*, i32)*, void (%struct.irq_data*, %struct.cpumask*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, i64 }
%struct.msi_msg = type opaque
%struct.irq_domain_chip_generic = type { i32, i32, i32, i32, i32, [0 x %struct.irq_chip_generic*] }
%struct.irq_chip_generic = type { %struct.raw_spinlock, i8*, i32 (i8*)*, void (i32, i8*)*, void (%struct.irq_chip_generic*)*, void (%struct.irq_chip_generic*)*, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64, i64, %struct.irq_domain*, %struct.list_head, [0 x %struct.irq_chip_type] }
%struct.irq_chip_type = type { %struct.irq_chip, %struct.irq_chip_regs, void (%struct.irq_desc*)*, i32, i32, i32* }
%struct.irq_chip_regs = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.irq_desc = type { %struct.irq_common_data, %struct.irq_data, i32*, {}*, %struct.irqaction*, i32, i32, i32, i32, i32, i32, i64, i32, %struct.atomic_t, i32, %struct.raw_spinlock, %struct.cpumask*, %struct.cpumask*, i64, %struct.atomic_t, %struct.wait_queue_head, i32, i32, i32, i32, %struct.proc_dir_entry*, %struct.callback_head, %struct.kobject, %struct.mutex, i32, %struct.module*, i8* }
%struct.irqaction = type { i32 (i32, i8*)*, i8*, i8*, %struct.irqaction*, i32 (i32, i8*)*, %struct.task_struct*, %struct.irqaction*, i32, i32, i64, i64, i8*, %struct.proc_dir_entry* }
%struct.proc_dir_entry = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.cdev = type { %struct.kobject, %struct.module*, %struct.file_operations*, %struct.list_head, i32, i32 }
%struct.gpio_chip = type { i8*, %struct.gpio_device*, %struct.device*, %struct.module*, i32 (%struct.gpio_chip*, i32)*, void (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i32, i32)*, i32 (%struct.gpio_chip*, i32)*, i32 (%struct.gpio_chip*, i64*, i64*)*, void (%struct.gpio_chip*, i32, i32)*, void (%struct.gpio_chip*, i64*, i64*)*, i32 (%struct.gpio_chip*, i32, i64)*, i32 (%struct.gpio_chip*, i32)*, void (%struct.seq_file*, %struct.gpio_chip*)*, i32 (%struct.gpio_chip*, i64*, i32)*, i32 (%struct.gpio_chip*)*, i32, i16, i8**, i8, i64 (i8*)*, void (i8*, i64)*, i8, i8*, i8*, i8*, i8*, i8*, i8, i32, %struct.spinlock, i64, i64, %struct.gpio_irq_chip, i64*, %struct.device_node*, i32, i32 (%struct.gpio_chip*, %struct.of_phandle_args*, i32*)* }
%struct.gpio_irq_chip = type { %struct.irq_chip*, %struct.irq_domain*, %struct.irq_domain_ops*, %struct.fwnode_handle*, %struct.irq_domain*, i32 (%struct.gpio_chip*, i32, i32, i32*, i32*)*, i8* (%struct.gpio_chip*, i32, i32)*, i32 (%struct.gpio_chip*, i32)*, %struct.irq_domain_ops, void (%struct.irq_desc*)*, i32, %struct.lock_class_key*, %struct.lock_class_key*, void (%struct.irq_desc*)*, i8*, i32, i32*, i32*, i8, i32 (%struct.gpio_chip*)*, void (%struct.gpio_chip*, i64*, i32)*, i64*, i32, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)* }
%struct.of_phandle_args = type { %struct.device_node*, i32, [16 x i32] }
%struct.gpio_desc = type { %struct.gpio_device*, i64, i8*, i8*, i32 }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.gpio_chardev_data = type { %struct.gpio_device*, %struct.wait_queue_head, %struct.anon.68, %struct.notifier_block, i64*, %struct.atomic_t }
%struct.anon.68 = type { %union.anon.69, [32 x %struct.gpio_v2_line_info_changed] }
%union.anon.69 = type { %struct.__kfifo }
%struct.__kfifo = type { i32, i32, i32, i32, i8* }
%struct.gpio_v2_line_info_changed = type { %struct.gpio_v2_line_info, i64, i32, [5 x i32] }
%struct.gpio_v2_line_info = type { [32 x i8], [32 x i8], i32, i32, i64, [10 x %struct.gpio_v2_line_attribute], [4 x i32] }
%struct.gpio_v2_line_attribute = type { i32, i32, %union.anon.70 }
%union.anon.70 = type { i64 }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.gpioline_info_changed = type { %struct.gpioline_info, i64, i32, [5 x i32] }
%struct.gpioline_info = type { i32, i32, [32 x i8], [32 x i8] }
%struct.gpiochip_info = type { [32 x i8], [32 x i8], i32 }
%struct.gpiohandle_request = type { [64 x i32], i32, [64 x i8], [32 x i8], i32, i32 }
%struct.linehandle_state = type { %struct.gpio_device*, i8*, [64 x %struct.gpio_desc*], i32 }
%struct.gpioevent_request = type { i32, i32, i32, [32 x i8], i32 }
%struct.lineevent_state = type { %struct.gpio_device*, i8*, %struct.gpio_desc*, i32, i32, %struct.wait_queue_head, %struct.anon.71, i64 }
%struct.anon.71 = type { %union.anon.72, [16 x %struct.gpioevent_data] }
%union.anon.72 = type { %struct.__kfifo }
%struct.gpioevent_data = type { i64, i32 }
%struct.gpio_v2_line_request = type { [64 x i32], [32 x i8], %struct.gpio_v2_line_config, i32, i32, [5 x i32], i32 }
%struct.gpio_v2_line_config = type { i64, i32, [5 x i32], [10 x %struct.gpio_v2_line_config_attribute] }
%struct.gpio_v2_line_config_attribute = type { %struct.gpio_v2_line_attribute, i64 }
%struct.linereq = type { %struct.gpio_device*, i8*, i32, %struct.wait_queue_head, i32, %struct.anon.73, %struct.atomic_t, %struct.mutex, [0 x %struct.line] }
%struct.anon.73 = type { %union.anon.74, [0 x %struct.gpio_v2_line_event] }
%union.anon.74 = type { %struct.__kfifo }
%struct.gpio_v2_line_event = type { i64, i32, i32, i32, i32, [6 x i32] }
%struct.line = type { %struct.gpio_desc*, %struct.linereq*, i32, i64, i64, i32, i32, %struct.delayed_work, i32, i32 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.gpiohandle_data = type { [64 x i8] }
%struct.gpio_array = type { %struct.gpio_desc**, i32, %struct.gpio_chip*, i64*, i64*, [0 x i64] }
%struct.gpiohandle_config = type { i32, [64 x i8], [4 x i32] }
%struct.gpio_v2_line_values = type { i64, i64 }

@gpio_fileops = internal constant %struct.file_operations { %struct.module* null, i64 (%struct.file*, i64, i32)* @no_llseek, i64 (%struct.file*, i8*, i64, i64*)* @lineinfo_watch_read, i64 (%struct.file*, i8*, i64, i64*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i32 (%struct.kiocb*, i1)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.poll_table_struct*)* @lineinfo_watch_poll, i64 (%struct.file*, i32, i64)* @gpio_ioctl, i64 (%struct.file*, i32, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* null, i64 0, i32 (%struct.inode*, %struct.file*)* @gpio_chrdev_open, i32 (%struct.file*, i8*)* null, i32 (%struct.inode*, %struct.file*)* @gpio_chrdev_release, i32 (%struct.file*, i64, i64, i32)* null, i32 (i32, %struct.file*, i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)* null, i64 (%struct.file*, i64, i64, i64, i64)* null, i32 (i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)* null, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)* null, i32 (%struct.file*, i64, %struct.file_lock**, i8**)* null, i64 (%struct.file*, i32, i64, i64)* null, void (%struct.seq_file*, %struct.file*)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i32 (%struct.file*, i64, i64, i32)* null }, align 8, !dbg !0
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@.str = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@gpio_lock = external dso_local global %struct.spinlock, align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.2 = private unnamed_addr constant [16 x i8] c"gpio-linehandle\00", align 1
@linehandle_fileops = internal constant %struct.file_operations { %struct.module* null, i64 (%struct.file*, i64, i32)* @noop_llseek, i64 (%struct.file*, i8*, i64, i64*)* null, i64 (%struct.file*, i8*, i64, i64*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i32 (%struct.kiocb*, i1)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.poll_table_struct*)* null, i64 (%struct.file*, i32, i64)* @linehandle_ioctl, i64 (%struct.file*, i32, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* null, i64 0, i32 (%struct.inode*, %struct.file*)* null, i32 (%struct.file*, i8*)* null, i32 (%struct.inode*, %struct.file*)* @linehandle_release, i32 (%struct.file*, i64, i64, i32)* null, i32 (i32, %struct.file*, i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)* null, i64 (%struct.file*, i64, i64, i64, i64)* null, i32 (i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)* null, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)* null, i32 (%struct.file*, i64, %struct.file_lock**, i8**)* null, i64 (%struct.file*, i32, i64, i64)* null, void (%struct.seq_file*, %struct.file*)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i32 (%struct.file*, i64, i64, i32)* null }, align 8, !dbg !4538
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.3 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@lineevent_create.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4540
@.str.4 = private unnamed_addr constant [10 x i8] c"&le->wait\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"gpio-event\00", align 1
@lineevent_fileops = internal constant %struct.file_operations { %struct.module* null, i64 (%struct.file*, i64, i32)* @noop_llseek, i64 (%struct.file*, i8*, i64, i64*)* @lineevent_read, i64 (%struct.file*, i8*, i64, i64*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i32 (%struct.kiocb*, i1)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.poll_table_struct*)* @lineevent_poll, i64 (%struct.file*, i32, i64)* @lineevent_ioctl, i64 (%struct.file*, i32, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* null, i64 0, i32 (%struct.inode*, %struct.file*)* null, i32 (%struct.file*, i8*)* null, i32 (%struct.inode*, %struct.file*)* @lineevent_release, i32 (%struct.file*, i64, i64, i32)* null, i32 (i32, %struct.file*, i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)* null, i64 (%struct.file*, i64, i64, i64, i64)* null, i32 (i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)* null, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)* null, i32 (%struct.file*, i64, %struct.file_lock**, i8**)* null, i64 (%struct.file*, i32, i64, i64)* null, void (%struct.seq_file*, %struct.file*)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i32 (%struct.file*, i64, i64, i32)* null }, align 8, !dbg !4545
@linereq_create.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4547
@.str.6 = private unnamed_addr constant [18 x i8] c"&lr->config_mutex\00", align 1
@linereq_create.__key.7 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4550
@.str.8 = private unnamed_addr constant [10 x i8] c"&lr->wait\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"gpio-line\00", align 1
@line_fileops = internal constant %struct.file_operations { %struct.module* null, i64 (%struct.file*, i64, i32)* @noop_llseek, i64 (%struct.file*, i8*, i64, i64*)* @linereq_read, i64 (%struct.file*, i8*, i64, i64*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i32 (%struct.kiocb*, i1)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.poll_table_struct*)* @linereq_poll, i64 (%struct.file*, i32, i64)* @linereq_ioctl, i64 (%struct.file*, i32, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* null, i64 0, i32 (%struct.inode*, %struct.file*)* null, i32 (%struct.file*, i8*)* null, i32 (%struct.inode*, %struct.file*)* @linereq_release, i32 (%struct.file*, i64, i64, i32)* null, i32 (i32, %struct.file*, i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)* null, i64 (%struct.file*, i64, i64, i64, i64)* null, i32 (i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)* null, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)* null, i32 (%struct.file*, i64, %struct.file_lock**, i8**)* null, i64 (%struct.file*, i32, i64, i64)* null, void (%struct.seq_file*, %struct.file*)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i32 (%struct.file*, i64, i64, i32)* null }, align 8, !dbg !4552
@system_wq = external dso_local global %struct.workqueue_struct*, align 8
@gpio_chrdev_open.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4554
@.str.10 = private unnamed_addr constant [12 x i8] c"&cdev->wait\00", align 1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @gpiolib_cdev_register(%struct.gpio_device* %gdev, i32 %devt) #0 !dbg !4563 {
entry:
  %retval = alloca i32, align 4
  %gdev.addr = alloca %struct.gpio_device*, align 8
  %devt.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.gpio_device* %gdev, %struct.gpio_device** %gdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %gdev.addr, metadata !4566, metadata !DIExpression()), !dbg !4567
  store i32 %devt, i32* %devt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devt.addr, metadata !4568, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4570, metadata !DIExpression()), !dbg !4571
  %0 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !4572
  %chrdev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %0, i32 0, i32 2, !dbg !4573
  call void @cdev_init(%struct.cdev* %chrdev, %struct.file_operations* @gpio_fileops) #9, !dbg !4574
  %1 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !4575
  %chrdev1 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %1, i32 0, i32 2, !dbg !4576
  %owner = getelementptr inbounds %struct.cdev, %struct.cdev* %chrdev1, i32 0, i32 1, !dbg !4577
  store %struct.module* null, %struct.module** %owner, align 8, !dbg !4578
  %2 = load i32, i32* %devt.addr, align 4, !dbg !4579
  %shr = lshr i32 %2, 20, !dbg !4579
  %shl = shl i32 %shr, 20, !dbg !4579
  %3 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !4579
  %id = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %3, i32 0, i32 0, !dbg !4579
  %4 = load i32, i32* %id, align 8, !dbg !4579
  %or = or i32 %shl, %4, !dbg !4579
  %5 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !4580
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %5, i32 0, i32 1, !dbg !4581
  %devt2 = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 25, !dbg !4582
  store i32 %or, i32* %devt2, align 8, !dbg !4583
  %6 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !4584
  %chrdev3 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %6, i32 0, i32 2, !dbg !4585
  %7 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !4586
  %dev4 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %7, i32 0, i32 1, !dbg !4587
  %call = call i32 @cdev_device_add(%struct.cdev* %chrdev3, %struct.device* %dev4) #9, !dbg !4588
  store i32 %call, i32* %ret, align 4, !dbg !4589
  %8 = load i32, i32* %ret, align 4, !dbg !4590
  %tobool = icmp ne i32 %8, 0, !dbg !4590
  br i1 %tobool, label %if.then, label %if.end, !dbg !4592

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %ret, align 4, !dbg !4593
  store i32 %9, i32* %retval, align 4, !dbg !4594
  br label %return, !dbg !4594

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4595
  br label %return, !dbg !4595

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !4596
  ret i32 %10, !dbg !4596
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noredzone
declare dso_local void @cdev_init(%struct.cdev*, %struct.file_operations*) #2

; Function Attrs: noredzone
declare dso_local i32 @cdev_device_add(%struct.cdev*, %struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @gpiolib_cdev_unregister(%struct.gpio_device* %gdev) #0 !dbg !4597 {
entry:
  %gdev.addr = alloca %struct.gpio_device*, align 8
  store %struct.gpio_device* %gdev, %struct.gpio_device** %gdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %gdev.addr, metadata !4600, metadata !DIExpression()), !dbg !4601
  %0 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !4602
  %chrdev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %0, i32 0, i32 2, !dbg !4603
  %1 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !4604
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %1, i32 0, i32 1, !dbg !4605
  call void @cdev_device_del(%struct.cdev* %chrdev, %struct.device* %dev) #9, !dbg !4606
  ret void, !dbg !4607
}

; Function Attrs: noredzone
declare dso_local void @cdev_device_del(%struct.cdev*, %struct.device*) #2

; Function Attrs: noredzone
declare dso_local i64 @no_llseek(%struct.file*, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @lineinfo_watch_read(%struct.file* %file, i8* %buf, i64 %count, i64* %off) #0 !dbg !4608 {
entry:
  %retval.i.i109 = alloca i1, align 1
  %addr.addr.i.i110 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i110, metadata !4609, metadata !DIExpression()), !dbg !4614
  %bytes.addr.i.i111 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i111, metadata !4626, metadata !DIExpression()), !dbg !4627
  %is_source.addr.i.i112 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i112, metadata !4628, metadata !DIExpression()), !dbg !4629
  %sz.i.i113 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i113, metadata !4630, metadata !DIExpression()), !dbg !4631
  %__ret_warn_on.i.i114 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i114, metadata !4632, metadata !DIExpression()), !dbg !4635
  %tmp.i.i115 = alloca i64, align 8
  %to.addr.i116 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i116, metadata !4636, metadata !DIExpression()), !dbg !4637
  %from.addr.i117 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i117, metadata !4638, metadata !DIExpression()), !dbg !4639
  %n.addr.i118 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i118, metadata !4640, metadata !DIExpression()), !dbg !4641
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !4609, metadata !DIExpression()), !dbg !4642
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !4626, metadata !DIExpression()), !dbg !4647
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !4628, metadata !DIExpression()), !dbg !4648
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !4630, metadata !DIExpression()), !dbg !4649
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !4632, metadata !DIExpression()), !dbg !4650
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !4636, metadata !DIExpression()), !dbg !4651
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !4638, metadata !DIExpression()), !dbg !4652
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !4640, metadata !DIExpression()), !dbg !4653
  %lock.addr.i106 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i106, metadata !4654, metadata !DIExpression()), !dbg !4659
  %lock.addr.i104 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i104, metadata !4654, metadata !DIExpression()), !dbg !4661
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4665, metadata !DIExpression()), !dbg !4672
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4678, metadata !DIExpression()), !dbg !4686
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4688, metadata !DIExpression()), !dbg !4689
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4690, metadata !DIExpression()), !dbg !4691
  %lock.addr.i102 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i102, metadata !4654, metadata !DIExpression()), !dbg !4692
  %pscr_ret__.i97 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i97, metadata !4698, metadata !DIExpression()), !dbg !4704
  %__vpp_verify.i98 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i98, metadata !4707, metadata !DIExpression()), !dbg !4709
  %pfo_val__.i99 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i99, metadata !4710, metadata !DIExpression()), !dbg !4712
  %tmp.i100 = alloca %struct.task_struct*, align 8
  %tmp1.i101 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !4698, metadata !DIExpression()), !dbg !4713
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !4707, metadata !DIExpression()), !dbg !4715
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !4710, metadata !DIExpression()), !dbg !4716
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %lock.addr.i95 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i95, metadata !4654, metadata !DIExpression()), !dbg !4717
  %lock.addr.i93 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i93, metadata !4654, metadata !DIExpression()), !dbg !4721
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4725, metadata !DIExpression()), !dbg !4727
  %retval = alloca i64, align 8
  %file.addr = alloca %struct.file*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %off.addr = alloca i64*, align 8
  %cdev = alloca %struct.gpio_chardev_data*, align 8
  %event = alloca %struct.gpio_v2_line_info_changed, align 8
  %bytes_read = alloca i64, align 8
  %ret = alloca i32, align 4
  %event_size = alloca i64, align 8
  %__tmpq = alloca %struct.anon.68*, align 8
  %tmp = alloca i32, align 4
  %__tmpq11 = alloca %struct.anon.68*, align 8
  %tmp13 = alloca i32, align 4
  %__ret = alloca i32, align 4
  %__wait = alloca %struct.wait_queue_entry, align 8
  %__tmpq30 = alloca %struct.anon.68*, align 8
  %tmp32 = alloca i32, align 4
  %tmp43 = alloca i32, align 4
  %__tmp = alloca %struct.anon.68*, align 8
  %__buf = alloca %struct.gpio_v2_line_info_changed*, align 8
  %__n = alloca i64, align 8
  %__recsize = alloca i64, align 8
  %__kfifo = alloca %struct.__kfifo*, align 8
  %tmp64 = alloca i32, align 4
  %event_v1 = alloca %struct.gpioline_info_changed, align 8
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !4729, metadata !DIExpression()), !dbg !4730
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !4731, metadata !DIExpression()), !dbg !4732
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !4733, metadata !DIExpression()), !dbg !4734
  store i64* %off, i64** %off.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %off.addr, metadata !4735, metadata !DIExpression()), !dbg !4736
  call void @llvm.dbg.declare(metadata %struct.gpio_chardev_data** %cdev, metadata !4737, metadata !DIExpression()), !dbg !4738
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !4739
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !4740
  %1 = load i8*, i8** %private_data, align 8, !dbg !4740
  %2 = bitcast i8* %1 to %struct.gpio_chardev_data*, !dbg !4739
  store %struct.gpio_chardev_data* %2, %struct.gpio_chardev_data** %cdev, align 8, !dbg !4738
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_info_changed* %event, metadata !4741, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.declare(metadata i64* %bytes_read, metadata !4743, metadata !DIExpression()), !dbg !4744
  store i64 0, i64* %bytes_read, align 8, !dbg !4744
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4745, metadata !DIExpression()), !dbg !4746
  call void @llvm.dbg.declare(metadata i64* %event_size, metadata !4747, metadata !DIExpression()), !dbg !4748
  br label %do.body, !dbg !4749

do.body:                                          ; preds = %do.cond88, %entry
  %3 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !4750
  %wait = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %3, i32 0, i32 1, !dbg !4751
  %lock = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait, i32 0, i32 0, !dbg !4752
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4753, !srcloc !4755
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4756
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !4756
  %rlock.i = bitcast %union.anon.1* %5 to %struct.raw_spinlock*, !dbg !4756
  call void @llvm.dbg.declare(metadata %struct.anon.68** %__tmpq, metadata !4758, metadata !DIExpression()), !dbg !4761
  %6 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !4761
  %events = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %6, i32 0, i32 2, !dbg !4761
  store %struct.anon.68* %events, %struct.anon.68** %__tmpq, align 8, !dbg !4761
  %7 = load %struct.anon.68*, %struct.anon.68** %__tmpq, align 8, !dbg !4761
  %8 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %7, i32 0, i32 0, !dbg !4761
  %kfifo = bitcast %union.anon.69* %8 to %struct.__kfifo*, !dbg !4761
  %in = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo, i32 0, i32 0, !dbg !4761
  %9 = load i32, i32* %in, align 8, !dbg !4761
  %10 = load %struct.anon.68*, %struct.anon.68** %__tmpq, align 8, !dbg !4761
  %11 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %10, i32 0, i32 0, !dbg !4761
  %kfifo1 = bitcast %union.anon.69* %11 to %struct.__kfifo*, !dbg !4761
  %out = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo1, i32 0, i32 1, !dbg !4761
  %12 = load i32, i32* %out, align 4, !dbg !4761
  %cmp = icmp eq i32 %9, %12, !dbg !4761
  %conv = zext i1 %cmp to i32, !dbg !4761
  store i32 %conv, i32* %tmp, align 4, !dbg !4761
  %13 = load i32, i32* %tmp, align 4, !dbg !4761
  %tobool = icmp ne i32 %13, 0, !dbg !4762
  br i1 %tobool, label %if.then, label %if.end50, !dbg !4763

if.then:                                          ; preds = %do.body
  %14 = load i64, i64* %bytes_read, align 8, !dbg !4764
  %tobool2 = icmp ne i64 %14, 0, !dbg !4764
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !4765

if.then3:                                         ; preds = %if.then
  %15 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !4766
  %wait4 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %15, i32 0, i32 1, !dbg !4767
  %lock5 = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait4, i32 0, i32 0, !dbg !4768
  store %struct.spinlock* %lock5, %struct.spinlock** %lock.addr.i93, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4769, !srcloc !4771
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i93, align 8, !dbg !4772
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !4772
  %rlock.i94 = bitcast %union.anon.1* %17 to %struct.raw_spinlock*, !dbg !4772
  %18 = load i64, i64* %bytes_read, align 8, !dbg !4774
  store i64 %18, i64* %retval, align 8, !dbg !4775
  br label %return, !dbg !4775

if.end:                                           ; preds = %if.then
  %19 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !4776
  %f_flags = getelementptr inbounds %struct.file, %struct.file* %19, i32 0, i32 7, !dbg !4777
  %20 = load i32, i32* %f_flags, align 8, !dbg !4777
  %and = and i32 %20, 2048, !dbg !4778
  %tobool6 = icmp ne i32 %and, 0, !dbg !4778
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !4779

if.then7:                                         ; preds = %if.end
  %21 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !4780
  %wait8 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %21, i32 0, i32 1, !dbg !4781
  %lock9 = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait8, i32 0, i32 0, !dbg !4782
  store %struct.spinlock* %lock9, %struct.spinlock** %lock.addr.i95, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4783, !srcloc !4771
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i95, align 8, !dbg !4784
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !4784
  %rlock.i96 = bitcast %union.anon.1* %23 to %struct.raw_spinlock*, !dbg !4784
  store i64 -11, i64* %retval, align 8, !dbg !4785
  br label %return, !dbg !4785

if.end10:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.anon.68** %__tmpq11, metadata !4786, metadata !DIExpression()), !dbg !4788
  %24 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !4788
  %events12 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %24, i32 0, i32 2, !dbg !4788
  store %struct.anon.68* %events12, %struct.anon.68** %__tmpq11, align 8, !dbg !4788
  %25 = load %struct.anon.68*, %struct.anon.68** %__tmpq11, align 8, !dbg !4788
  %26 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %25, i32 0, i32 0, !dbg !4788
  %kfifo14 = bitcast %union.anon.69* %26 to %struct.__kfifo*, !dbg !4788
  %in15 = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo14, i32 0, i32 0, !dbg !4788
  %27 = load i32, i32* %in15, align 8, !dbg !4788
  %28 = load %struct.anon.68*, %struct.anon.68** %__tmpq11, align 8, !dbg !4788
  %29 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %28, i32 0, i32 0, !dbg !4788
  %kfifo16 = bitcast %union.anon.69* %29 to %struct.__kfifo*, !dbg !4788
  %out17 = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo16, i32 0, i32 1, !dbg !4788
  %30 = load i32, i32* %out17, align 4, !dbg !4788
  %cmp18 = icmp eq i32 %27, %30, !dbg !4788
  %conv19 = zext i1 %cmp18 to i32, !dbg !4788
  store i32 %conv19, i32* %tmp13, align 4, !dbg !4788
  %31 = load i32, i32* %tmp13, align 4, !dbg !4788
  %tobool20 = icmp ne i32 %31, 0, !dbg !4789
  br i1 %tobool20, label %cond.false, label %cond.true, !dbg !4789

cond.true:                                        ; preds = %if.end10
  br label %cond.end, !dbg !4789

cond.false:                                       ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i32* %__ret, metadata !4790, metadata !DIExpression()), !dbg !4791
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wait, metadata !4792, metadata !DIExpression()), !dbg !4791
  %flags = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %__wait, i32 0, i32 0, !dbg !4791
  store i32 0, i32* %flags, align 8, !dbg !4791
  %private = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %__wait, i32 0, i32 1, !dbg !4791
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !4715
  %32 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !4715
  %33 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #10, !dbg !4716, !srcloc !4804
  store i64 %33, i64* %pfo_val__.i, align 8, !dbg !4716
  %34 = load i64, i64* %pfo_val__.i, align 8, !dbg !4716
  %35 = inttoptr i64 %34 to %struct.task_struct*, !dbg !4716
  store %struct.task_struct* %35, %struct.task_struct** %tmp.i, align 8, !dbg !4716
  %36 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !4716
  store %struct.task_struct* %36, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !4713
  %37 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !4713
  store %struct.task_struct* %37, %struct.task_struct** %tmp1.i, align 8, !dbg !4713
  %38 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !4713
  %39 = bitcast %struct.task_struct* %38 to i8*, !dbg !4791
  store i8* %39, i8** %private, align 8, !dbg !4791
  %func = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %__wait, i32 0, i32 2, !dbg !4791
  store i32 (%struct.wait_queue_entry*, i32, i32, i8*)* @autoremove_wake_function, i32 (%struct.wait_queue_entry*, i32, i32, i8*)** %func, align 8, !dbg !4791
  %entry21 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %__wait, i32 0, i32 3, !dbg !4791
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry21, i32 0, i32 0, !dbg !4791
  %entry22 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %__wait, i32 0, i32 3, !dbg !4791
  store %struct.list_head* %entry22, %struct.list_head** %next, align 8, !dbg !4791
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %entry21, i32 0, i32 1, !dbg !4791
  %entry23 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %__wait, i32 0, i32 3, !dbg !4791
  store %struct.list_head* %entry23, %struct.list_head** %prev, align 8, !dbg !4791
  br label %do.body24, !dbg !4791

do.body24:                                        ; preds = %do.cond, %cond.false
  %40 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !4805
  %wait25 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %40, i32 0, i32 1, !dbg !4805
  %call26 = call i32 @do_wait_intr(%struct.wait_queue_head* %wait25, %struct.wait_queue_entry* %__wait) #9, !dbg !4805
  store i32 %call26, i32* %__ret, align 4, !dbg !4805
  %41 = load i32, i32* %__ret, align 4, !dbg !4807
  %tobool27 = icmp ne i32 %41, 0, !dbg !4807
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !4805

if.then28:                                        ; preds = %do.body24
  br label %do.end, !dbg !4807

if.end29:                                         ; preds = %do.body24
  br label %do.cond, !dbg !4805

do.cond:                                          ; preds = %if.end29
  call void @llvm.dbg.declare(metadata %struct.anon.68** %__tmpq30, metadata !4809, metadata !DIExpression()), !dbg !4811
  %42 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !4811
  %events31 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %42, i32 0, i32 2, !dbg !4811
  store %struct.anon.68* %events31, %struct.anon.68** %__tmpq30, align 8, !dbg !4811
  %43 = load %struct.anon.68*, %struct.anon.68** %__tmpq30, align 8, !dbg !4811
  %44 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %43, i32 0, i32 0, !dbg !4811
  %kfifo33 = bitcast %union.anon.69* %44 to %struct.__kfifo*, !dbg !4811
  %in34 = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo33, i32 0, i32 0, !dbg !4811
  %45 = load i32, i32* %in34, align 8, !dbg !4811
  %46 = load %struct.anon.68*, %struct.anon.68** %__tmpq30, align 8, !dbg !4811
  %47 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %46, i32 0, i32 0, !dbg !4811
  %kfifo35 = bitcast %union.anon.69* %47 to %struct.__kfifo*, !dbg !4811
  %out36 = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo35, i32 0, i32 1, !dbg !4811
  %48 = load i32, i32* %out36, align 4, !dbg !4811
  %cmp37 = icmp eq i32 %45, %48, !dbg !4811
  %conv38 = zext i1 %cmp37 to i32, !dbg !4811
  store i32 %conv38, i32* %tmp32, align 4, !dbg !4811
  %49 = load i32, i32* %tmp32, align 4, !dbg !4811
  %tobool39 = icmp ne i32 %49, 0, !dbg !4791
  %lnot = xor i1 %tobool39, true, !dbg !4791
  %lnot40 = xor i1 %lnot, true, !dbg !4791
  br i1 %lnot40, label %do.body24, label %do.end, !dbg !4805, !llvm.loop !4812

do.end:                                           ; preds = %do.cond, %if.then28
  %50 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !4791
  %wait41 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %50, i32 0, i32 1, !dbg !4791
  call void @__remove_wait_queue(%struct.wait_queue_head* %wait41, %struct.wait_queue_entry* %__wait) #9, !dbg !4791
  store i8* null, i8** %__vpp_verify.i98, align 8, !dbg !4709
  %51 = load i8*, i8** %__vpp_verify.i98, align 8, !dbg !4709
  %52 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #10, !dbg !4712, !srcloc !4804
  store i64 %52, i64* %pfo_val__.i99, align 8, !dbg !4712
  %53 = load i64, i64* %pfo_val__.i99, align 8, !dbg !4712
  %54 = inttoptr i64 %53 to %struct.task_struct*, !dbg !4712
  store %struct.task_struct* %54, %struct.task_struct** %tmp.i100, align 8, !dbg !4712
  %55 = load %struct.task_struct*, %struct.task_struct** %tmp.i100, align 8, !dbg !4712
  store %struct.task_struct* %55, %struct.task_struct** %pscr_ret__.i97, align 8, !dbg !4704
  %56 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i97, align 8, !dbg !4704
  store %struct.task_struct* %56, %struct.task_struct** %tmp1.i101, align 8, !dbg !4704
  %57 = load %struct.task_struct*, %struct.task_struct** %tmp1.i101, align 8, !dbg !4704
  %state = getelementptr inbounds %struct.task_struct, %struct.task_struct* %57, i32 0, i32 1, !dbg !4791
  store volatile i64 0, i64* %state, align 16, !dbg !4791
  %58 = load i32, i32* %__ret, align 4, !dbg !4791
  store i32 %58, i32* %tmp43, align 4, !dbg !4791
  %59 = load i32, i32* %tmp43, align 4, !dbg !4791
  br label %cond.end, !dbg !4789

cond.end:                                         ; preds = %do.end, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %59, %do.end ], !dbg !4789
  store i32 %cond, i32* %ret, align 4, !dbg !4813
  %60 = load i32, i32* %ret, align 4, !dbg !4814
  %tobool44 = icmp ne i32 %60, 0, !dbg !4814
  br i1 %tobool44, label %if.then45, label %if.end49, !dbg !4815

if.then45:                                        ; preds = %cond.end
  %61 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !4816
  %wait46 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %61, i32 0, i32 1, !dbg !4817
  %lock47 = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait46, i32 0, i32 0, !dbg !4818
  store %struct.spinlock* %lock47, %struct.spinlock** %lock.addr.i102, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4819, !srcloc !4771
  %62 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i102, align 8, !dbg !4820
  %63 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %62, i32 0, i32 0, !dbg !4820
  %rlock.i103 = bitcast %union.anon.1* %63 to %struct.raw_spinlock*, !dbg !4820
  %64 = load i32, i32* %ret, align 4, !dbg !4821
  %conv48 = sext i32 %64 to i64, !dbg !4821
  store i64 %conv48, i64* %retval, align 8, !dbg !4822
  br label %return, !dbg !4822

if.end49:                                         ; preds = %cond.end
  br label %if.end50, !dbg !4823

if.end50:                                         ; preds = %if.end49, %do.body
  %65 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !4824
  %watch_abi_version = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %65, i32 0, i32 5, !dbg !4825
  store %struct.atomic_t* %watch_abi_version, %struct.atomic_t** %v.addr.i, align 8
  %66 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !4826
  %67 = bitcast %struct.atomic_t* %66 to i8*, !dbg !4826
  store i8* %67, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %68 = load i8*, i8** %v.addr.i.i, align 8, !dbg !4827
  %69 = load i64, i64* %size.addr.i.i, align 8, !dbg !4828
  %conv.i.i = trunc i64 %69 to i32, !dbg !4828
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %68, i32 %conv.i.i) #11, !dbg !4829
  %70 = load i8*, i8** %v.addr.i.i, align 8, !dbg !4830
  %71 = load i64, i64* %size.addr.i.i, align 8, !dbg !4830
  call void @kcsan_check_access(i8* %70, i64 %71, i32 4) #11, !dbg !4830
  %72 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !4831
  store %struct.atomic_t* %72, %struct.atomic_t** %v.addr.i1.i, align 8
  %73 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !4832
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %73, i32 0, i32 0, !dbg !4832
  %74 = load volatile i32, i32* %counter.i.i, align 4, !dbg !4832
  %cmp52 = icmp eq i32 %74, 2, !dbg !4833
  br i1 %cmp52, label %if.then54, label %if.else, !dbg !4834

if.then54:                                        ; preds = %if.end50
  store i64 288, i64* %event_size, align 8, !dbg !4835
  br label %if.end55, !dbg !4836

if.else:                                          ; preds = %if.end50
  store i64 104, i64* %event_size, align 8, !dbg !4837
  br label %if.end55

if.end55:                                         ; preds = %if.else, %if.then54
  %75 = load i64, i64* %count.addr, align 8, !dbg !4838
  %76 = load i64, i64* %event_size, align 8, !dbg !4839
  %cmp56 = icmp ult i64 %75, %76, !dbg !4840
  br i1 %cmp56, label %if.then58, label %if.end61, !dbg !4841

if.then58:                                        ; preds = %if.end55
  %77 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !4842
  %wait59 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %77, i32 0, i32 1, !dbg !4843
  %lock60 = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait59, i32 0, i32 0, !dbg !4844
  store %struct.spinlock* %lock60, %struct.spinlock** %lock.addr.i104, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4845, !srcloc !4771
  %78 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i104, align 8, !dbg !4846
  %79 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %78, i32 0, i32 0, !dbg !4846
  %rlock.i105 = bitcast %union.anon.1* %79 to %struct.raw_spinlock*, !dbg !4846
  store i64 -22, i64* %retval, align 8, !dbg !4847
  br label %return, !dbg !4847

if.end61:                                         ; preds = %if.end55
  call void @llvm.dbg.declare(metadata %struct.anon.68** %__tmp, metadata !4848, metadata !DIExpression()), !dbg !4850
  %80 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !4850
  %events62 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %80, i32 0, i32 2, !dbg !4850
  store %struct.anon.68* %events62, %struct.anon.68** %__tmp, align 8, !dbg !4850
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_info_changed** %__buf, metadata !4851, metadata !DIExpression()), !dbg !4850
  store %struct.gpio_v2_line_info_changed* %event, %struct.gpio_v2_line_info_changed** %__buf, align 8, !dbg !4850
  call void @llvm.dbg.declare(metadata i64* %__n, metadata !4852, metadata !DIExpression()), !dbg !4850
  store i64 1, i64* %__n, align 8, !dbg !4850
  call void @llvm.dbg.declare(metadata i64* %__recsize, metadata !4853, metadata !DIExpression()), !dbg !4850
  store i64 0, i64* %__recsize, align 8, !dbg !4850
  call void @llvm.dbg.declare(metadata %struct.__kfifo** %__kfifo, metadata !4855, metadata !DIExpression()), !dbg !4850
  %81 = load %struct.anon.68*, %struct.anon.68** %__tmp, align 8, !dbg !4850
  %82 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %81, i32 0, i32 0, !dbg !4850
  %kfifo63 = bitcast %union.anon.69* %82 to %struct.__kfifo*, !dbg !4850
  store %struct.__kfifo* %kfifo63, %struct.__kfifo** %__kfifo, align 8, !dbg !4850
  %83 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo, align 8, !dbg !4850
  %84 = load %struct.gpio_v2_line_info_changed*, %struct.gpio_v2_line_info_changed** %__buf, align 8, !dbg !4850
  %85 = bitcast %struct.gpio_v2_line_info_changed* %84 to i8*, !dbg !4850
  %86 = load i64, i64* %__n, align 8, !dbg !4850
  %conv65 = trunc i64 %86 to i32, !dbg !4850
  %call66 = call i32 @__kfifo_out(%struct.__kfifo* %83, i8* %85, i32 %conv65) #9, !dbg !4850
  store i32 %call66, i32* %tmp64, align 4, !dbg !4850
  %87 = load i32, i32* %tmp64, align 4, !dbg !4850
  %call67 = call i32 @__kfifo_uint_must_check_helper(i32 %87) #9, !dbg !4857
  store i32 %call67, i32* %ret, align 4, !dbg !4858
  %88 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !4859
  %wait68 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %88, i32 0, i32 1, !dbg !4860
  %lock69 = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait68, i32 0, i32 0, !dbg !4861
  store %struct.spinlock* %lock69, %struct.spinlock** %lock.addr.i106, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4862, !srcloc !4771
  %89 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i106, align 8, !dbg !4863
  %90 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %89, i32 0, i32 0, !dbg !4863
  %rlock.i107 = bitcast %union.anon.1* %90 to %struct.raw_spinlock*, !dbg !4863
  %91 = load i32, i32* %ret, align 4, !dbg !4864
  %cmp70 = icmp ne i32 %91, 1, !dbg !4866
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !4867

if.then72:                                        ; preds = %if.end61
  store i32 -5, i32* %ret, align 4, !dbg !4868
  br label %do.end92, !dbg !4870

if.end73:                                         ; preds = %if.end61
  %92 = load i64, i64* %event_size, align 8, !dbg !4871
  %cmp74 = icmp eq i64 %92, 288, !dbg !4872
  br i1 %cmp74, label %if.then76, label %if.else81, !dbg !4873

if.then76:                                        ; preds = %if.end73
  %93 = load i8*, i8** %buf.addr, align 8, !dbg !4874
  %94 = load i64, i64* %bytes_read, align 8, !dbg !4875
  %add.ptr = getelementptr i8, i8* %93, i64 %94, !dbg !4876
  %95 = bitcast %struct.gpio_v2_line_info_changed* %event to i8*, !dbg !4877
  %96 = load i64, i64* %event_size, align 8, !dbg !4878
  store i8* %add.ptr, i8** %to.addr.i, align 8
  store i8* %95, i8** %from.addr.i, align 8
  store i64 %96, i64* %n.addr.i, align 8
  %97 = load i8*, i8** %from.addr.i, align 8, !dbg !4879
  %98 = load i64, i64* %n.addr.i, align 8, !dbg !4879
  store i8* %97, i8** %addr.addr.i.i, align 8
  store i64 %98, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !4649
  %99 = load i32, i32* %sz.i.i, align 4, !dbg !4880
  %cmp.i.i = icmp sge i32 %99, 0, !dbg !4880
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !4880

land.rhs.i.i:                                     ; preds = %if.then76
  %100 = load i32, i32* %sz.i.i, align 4, !dbg !4880
  %conv.i.i108 = sext i32 %100 to i64, !dbg !4880
  %101 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !4880
  %cmp1.i.i = icmp ult i64 %conv.i.i108, %101, !dbg !4880
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.then76
  %102 = phi i1 [ false, %if.then76 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !4882
  %lnot.i.i = xor i1 %102, true, !dbg !4880
  %lnot.ext.i.i = zext i1 %102 to i32, !dbg !4880
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !4880
  br i1 %102, label %if.then.i.i, label %if.end10.i.i, !dbg !4883

if.then.i.i:                                      ; preds = %land.end.i.i
  %103 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !4884
  %104 = call i1 @llvm.is.constant.i64(i64 %103) #6, !dbg !4887
  br i1 %104, label %if.else.i.i, label %if.then5.i.i, !dbg !4888

if.then5.i.i:                                     ; preds = %if.then.i.i
  %105 = load i32, i32* %sz.i.i, align 4, !dbg !4889
  %106 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !4890
  call void @copy_overflow(i32 %105, i64 %106) #11, !dbg !4891
  br label %if.end9.i.i, !dbg !4891

if.else.i.i:                                      ; preds = %if.then.i.i
  %107 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !4892
  %tobool6.i.i = trunc i8 %107 to i1, !dbg !4892
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !4894

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !4895
  br label %if.end.i.i, !dbg !4895

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !4896
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !4897
  br label %check_copy_size.exit.i, !dbg !4897

if.end10.i.i:                                     ; preds = %land.end.i.i
  %108 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !4650
  %cmp11.i.i = icmp ugt i64 %108, 2147483647, !dbg !4650
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !4650
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !4650
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !4650
  %109 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !4898
  %tobool17.i.i = icmp ne i32 %109, 0, !dbg !4898
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !4898
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !4898
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !4898
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !4650

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !4900, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !4904, !srcloc !4906
  br label %if.end31.i.i, !dbg !4907

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %110 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !4650
  %tobool32.i.i = icmp ne i32 %110, 0, !dbg !4650
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !4650
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !4650
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !4650
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !4898
  %111 = load i64, i64* %tmp.i.i, align 8, !dbg !4650
  %tobool38.i.i = icmp ne i64 %111, 0, !dbg !4908
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !4909

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !4910
  br label %check_copy_size.exit.i, !dbg !4910

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %112 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !4911
  %113 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !4912
  %114 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !4913
  %tobool41.i.i = trunc i8 %114 to i1, !dbg !4913
  call void @check_object_size(i8* %112, i64 %113, i1 zeroext %tobool41.i.i) #11, !dbg !4914
  store i1 true, i1* %retval.i.i, align 1, !dbg !4915
  br label %check_copy_size.exit.i, !dbg !4915

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %115 = load i1, i1* %retval.i.i, align 1, !dbg !4916
  %lnot.i = xor i1 %115, true, !dbg !4879
  %lnot.ext.i = zext i1 %115 to i32, !dbg !4879
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !4879
  br i1 %115, label %if.then.i, label %copy_to_user.exit, !dbg !4917

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %116 = load i8*, i8** %to.addr.i, align 8, !dbg !4918
  %117 = load i8*, i8** %from.addr.i, align 8, !dbg !4919
  %118 = load i64, i64* %n.addr.i, align 8, !dbg !4920
  %call2.i = call i64 @_copy_to_user(i8* %116, i8* %117, i64 %118) #11, !dbg !4921
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !4922
  br label %copy_to_user.exit, !dbg !4923

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %119 = load i64, i64* %n.addr.i, align 8, !dbg !4924
  %tobool78 = icmp ne i64 %119, 0, !dbg !4925
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !4926

if.then79:                                        ; preds = %copy_to_user.exit
  store i64 -14, i64* %retval, align 8, !dbg !4927
  br label %return, !dbg !4927

if.end80:                                         ; preds = %copy_to_user.exit
  br label %if.end87, !dbg !4928

if.else81:                                        ; preds = %if.end73
  call void @llvm.dbg.declare(metadata %struct.gpioline_info_changed* %event_v1, metadata !4929, metadata !DIExpression()), !dbg !4942
  call void @gpio_v2_line_info_changed_to_v1(%struct.gpio_v2_line_info_changed* %event, %struct.gpioline_info_changed* %event_v1) #9, !dbg !4943
  %120 = load i8*, i8** %buf.addr, align 8, !dbg !4944
  %121 = load i64, i64* %bytes_read, align 8, !dbg !4945
  %add.ptr82 = getelementptr i8, i8* %120, i64 %121, !dbg !4946
  %122 = bitcast %struct.gpioline_info_changed* %event_v1 to i8*, !dbg !4947
  %123 = load i64, i64* %event_size, align 8, !dbg !4948
  store i8* %add.ptr82, i8** %to.addr.i116, align 8
  store i8* %122, i8** %from.addr.i117, align 8
  store i64 %123, i64* %n.addr.i118, align 8
  %124 = load i8*, i8** %from.addr.i117, align 8, !dbg !4949
  %125 = load i64, i64* %n.addr.i118, align 8, !dbg !4949
  store i8* %124, i8** %addr.addr.i.i110, align 8
  store i64 %125, i64* %bytes.addr.i.i111, align 8
  store i8 1, i8* %is_source.addr.i.i112, align 1
  store i32 -1, i32* %sz.i.i113, align 4, !dbg !4631
  %126 = load i32, i32* %sz.i.i113, align 4, !dbg !4950
  %cmp.i.i119 = icmp sge i32 %126, 0, !dbg !4950
  br i1 %cmp.i.i119, label %land.rhs.i.i122, label %land.end.i.i126, !dbg !4950

land.rhs.i.i122:                                  ; preds = %if.else81
  %127 = load i32, i32* %sz.i.i113, align 4, !dbg !4950
  %conv.i.i120 = sext i32 %127 to i64, !dbg !4950
  %128 = load i64, i64* %bytes.addr.i.i111, align 8, !dbg !4950
  %cmp1.i.i121 = icmp ult i64 %conv.i.i120, %128, !dbg !4950
  br label %land.end.i.i126

land.end.i.i126:                                  ; preds = %land.rhs.i.i122, %if.else81
  %129 = phi i1 [ false, %if.else81 ], [ %cmp1.i.i121, %land.rhs.i.i122 ], !dbg !4951
  %lnot.i.i123 = xor i1 %129, true, !dbg !4950
  %lnot.ext.i.i124 = zext i1 %129 to i32, !dbg !4950
  %conv4.i.i125 = sext i32 %lnot.ext.i.i124 to i64, !dbg !4950
  br i1 %129, label %if.then.i.i127, label %if.end10.i.i142, !dbg !4952

if.then.i.i127:                                   ; preds = %land.end.i.i126
  %130 = load i64, i64* %bytes.addr.i.i111, align 8, !dbg !4953
  %131 = call i1 @llvm.is.constant.i64(i64 %130) #6, !dbg !4954
  br i1 %131, label %if.else.i.i130, label %if.then5.i.i128, !dbg !4955

if.then5.i.i128:                                  ; preds = %if.then.i.i127
  %132 = load i32, i32* %sz.i.i113, align 4, !dbg !4956
  %133 = load i64, i64* %bytes.addr.i.i111, align 8, !dbg !4957
  call void @copy_overflow(i32 %132, i64 %133) #11, !dbg !4958
  br label %if.end9.i.i134, !dbg !4958

if.else.i.i130:                                   ; preds = %if.then.i.i127
  %134 = load i8, i8* %is_source.addr.i.i112, align 1, !dbg !4959
  %tobool6.i.i129 = trunc i8 %134 to i1, !dbg !4959
  br i1 %tobool6.i.i129, label %if.then7.i.i131, label %if.else8.i.i132, !dbg !4960

if.then7.i.i131:                                  ; preds = %if.else.i.i130
  call void @__bad_copy_from() #11, !dbg !4961
  br label %if.end.i.i133, !dbg !4961

if.else8.i.i132:                                  ; preds = %if.else.i.i130
  call void @__bad_copy_to() #11, !dbg !4962
  br label %if.end.i.i133

if.end.i.i133:                                    ; preds = %if.else8.i.i132, %if.then7.i.i131
  br label %if.end9.i.i134

if.end9.i.i134:                                   ; preds = %if.end.i.i133, %if.then5.i.i128
  store i1 false, i1* %retval.i.i109, align 1, !dbg !4963
  br label %check_copy_size.exit.i156, !dbg !4963

if.end10.i.i142:                                  ; preds = %land.end.i.i126
  %135 = load i64, i64* %bytes.addr.i.i111, align 8, !dbg !4635
  %cmp11.i.i135 = icmp ugt i64 %135, 2147483647, !dbg !4635
  %lnot13.i.i136 = xor i1 %cmp11.i.i135, true, !dbg !4635
  %lnot.ext16.i.i137 = zext i1 %cmp11.i.i135 to i32, !dbg !4635
  store i32 %lnot.ext16.i.i137, i32* %__ret_warn_on.i.i114, align 4, !dbg !4635
  %136 = load i32, i32* %__ret_warn_on.i.i114, align 4, !dbg !4964
  %tobool17.i.i138 = icmp ne i32 %136, 0, !dbg !4964
  %lnot18.i.i139 = xor i1 %tobool17.i.i138, true, !dbg !4964
  %lnot.ext21.i.i140 = zext i1 %tobool17.i.i138 to i32, !dbg !4964
  %conv22.i.i141 = sext i32 %lnot.ext21.i.i140 to i64, !dbg !4964
  br i1 %tobool17.i.i138, label %if.then24.i.i143, label %if.end31.i.i149, !dbg !4635

if.then24.i.i143:                                 ; preds = %if.end10.i.i142
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !4965, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !4966, !srcloc !4906
  br label %if.end31.i.i149, !dbg !4967

if.end31.i.i149:                                  ; preds = %if.then24.i.i143, %if.end10.i.i142
  %137 = load i32, i32* %__ret_warn_on.i.i114, align 4, !dbg !4635
  %tobool32.i.i144 = icmp ne i32 %137, 0, !dbg !4635
  %lnot33.i.i145 = xor i1 %tobool32.i.i144, true, !dbg !4635
  %lnot.ext36.i.i146 = zext i1 %tobool32.i.i144 to i32, !dbg !4635
  %conv37.i.i147 = sext i32 %lnot.ext36.i.i146 to i64, !dbg !4635
  store i64 %conv37.i.i147, i64* %tmp.i.i115, align 8, !dbg !4964
  %138 = load i64, i64* %tmp.i.i115, align 8, !dbg !4635
  %tobool38.i.i148 = icmp ne i64 %138, 0, !dbg !4968
  br i1 %tobool38.i.i148, label %if.then39.i.i150, label %if.end40.i.i152, !dbg !4969

if.then39.i.i150:                                 ; preds = %if.end31.i.i149
  store i1 false, i1* %retval.i.i109, align 1, !dbg !4970
  br label %check_copy_size.exit.i156, !dbg !4970

if.end40.i.i152:                                  ; preds = %if.end31.i.i149
  %139 = load i8*, i8** %addr.addr.i.i110, align 8, !dbg !4971
  %140 = load i64, i64* %bytes.addr.i.i111, align 8, !dbg !4972
  %141 = load i8, i8* %is_source.addr.i.i112, align 1, !dbg !4973
  %tobool41.i.i151 = trunc i8 %141 to i1, !dbg !4973
  call void @check_object_size(i8* %139, i64 %140, i1 zeroext %tobool41.i.i151) #11, !dbg !4974
  store i1 true, i1* %retval.i.i109, align 1, !dbg !4975
  br label %check_copy_size.exit.i156, !dbg !4975

check_copy_size.exit.i156:                        ; preds = %if.end40.i.i152, %if.then39.i.i150, %if.end9.i.i134
  %142 = load i1, i1* %retval.i.i109, align 1, !dbg !4976
  %lnot.i153 = xor i1 %142, true, !dbg !4949
  %lnot.ext.i154 = zext i1 %142 to i32, !dbg !4949
  %conv.i155 = sext i32 %lnot.ext.i154 to i64, !dbg !4949
  br i1 %142, label %if.then.i158, label %copy_to_user.exit159, !dbg !4977

if.then.i158:                                     ; preds = %check_copy_size.exit.i156
  %143 = load i8*, i8** %to.addr.i116, align 8, !dbg !4978
  %144 = load i8*, i8** %from.addr.i117, align 8, !dbg !4979
  %145 = load i64, i64* %n.addr.i118, align 8, !dbg !4980
  %call2.i157 = call i64 @_copy_to_user(i8* %143, i8* %144, i64 %145) #11, !dbg !4981
  store i64 %call2.i157, i64* %n.addr.i118, align 8, !dbg !4982
  br label %copy_to_user.exit159, !dbg !4983

copy_to_user.exit159:                             ; preds = %check_copy_size.exit.i156, %if.then.i158
  %146 = load i64, i64* %n.addr.i118, align 8, !dbg !4984
  %tobool84 = icmp ne i64 %146, 0, !dbg !4985
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !4986

if.then85:                                        ; preds = %copy_to_user.exit159
  store i64 -14, i64* %retval, align 8, !dbg !4987
  br label %return, !dbg !4987

if.end86:                                         ; preds = %copy_to_user.exit159
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.end80
  %147 = load i64, i64* %event_size, align 8, !dbg !4988
  %148 = load i64, i64* %bytes_read, align 8, !dbg !4989
  %add = add i64 %148, %147, !dbg !4989
  store i64 %add, i64* %bytes_read, align 8, !dbg !4989
  br label %do.cond88, !dbg !4990

do.cond88:                                        ; preds = %if.end87
  %149 = load i64, i64* %count.addr, align 8, !dbg !4991
  %150 = load i64, i64* %bytes_read, align 8, !dbg !4992
  %add89 = add i64 %150, 288, !dbg !4993
  %cmp90 = icmp uge i64 %149, %add89, !dbg !4994
  br i1 %cmp90, label %do.body, label %do.end92, !dbg !4990, !llvm.loop !4995

do.end92:                                         ; preds = %do.cond88, %if.then72
  %151 = load i64, i64* %bytes_read, align 8, !dbg !4997
  store i64 %151, i64* %retval, align 8, !dbg !4998
  br label %return, !dbg !4998

return:                                           ; preds = %do.end92, %if.then85, %if.then79, %if.then58, %if.then45, %if.then7, %if.then3
  %152 = load i64, i64* %retval, align 8, !dbg !4999
  ret i64 %152, !dbg !4999
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @lineinfo_watch_poll(%struct.file* %file, %struct.poll_table_struct* %pollt) #0 !dbg !5000 {
entry:
  %lock.addr.i10 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i10, metadata !4654, metadata !DIExpression()), !dbg !5001
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4725, metadata !DIExpression()), !dbg !5005
  %file.addr = alloca %struct.file*, align 8
  %pollt.addr = alloca %struct.poll_table_struct*, align 8
  %cdev = alloca %struct.gpio_chardev_data*, align 8
  %events = alloca i32, align 4
  %__ret = alloca i8, align 1
  %__tmpq = alloca %struct.anon.68*, align 8
  %tmp = alloca i32, align 4
  %tmp6 = alloca i8, align 1
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !5007, metadata !DIExpression()), !dbg !5008
  store %struct.poll_table_struct* %pollt, %struct.poll_table_struct** %pollt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.poll_table_struct** %pollt.addr, metadata !5009, metadata !DIExpression()), !dbg !5010
  call void @llvm.dbg.declare(metadata %struct.gpio_chardev_data** %cdev, metadata !5011, metadata !DIExpression()), !dbg !5012
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !5013
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !5014
  %1 = load i8*, i8** %private_data, align 8, !dbg !5014
  %2 = bitcast i8* %1 to %struct.gpio_chardev_data*, !dbg !5013
  store %struct.gpio_chardev_data* %2, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5012
  call void @llvm.dbg.declare(metadata i32* %events, metadata !5015, metadata !DIExpression()), !dbg !5016
  store i32 0, i32* %events, align 4, !dbg !5016
  %3 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !5017
  %4 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5018
  %wait = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %4, i32 0, i32 1, !dbg !5019
  %5 = load %struct.poll_table_struct*, %struct.poll_table_struct** %pollt.addr, align 8, !dbg !5020
  call void @poll_wait(%struct.file* %3, %struct.wait_queue_head* %wait, %struct.poll_table_struct* %5) #9, !dbg !5021
  call void @llvm.dbg.declare(metadata i8* %__ret, metadata !5022, metadata !DIExpression()), !dbg !5023
  %6 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5023
  %wait1 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %6, i32 0, i32 1, !dbg !5023
  %lock = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait1, i32 0, i32 0, !dbg !5023
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5024, !srcloc !4755
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5025
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !5025
  %rlock.i = bitcast %union.anon.1* %8 to %struct.raw_spinlock*, !dbg !5025
  call void @llvm.dbg.declare(metadata %struct.anon.68** %__tmpq, metadata !5026, metadata !DIExpression()), !dbg !5028
  %9 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5028
  %events2 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %9, i32 0, i32 2, !dbg !5028
  store %struct.anon.68* %events2, %struct.anon.68** %__tmpq, align 8, !dbg !5028
  %10 = load %struct.anon.68*, %struct.anon.68** %__tmpq, align 8, !dbg !5028
  %11 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %10, i32 0, i32 0, !dbg !5028
  %kfifo = bitcast %union.anon.69* %11 to %struct.__kfifo*, !dbg !5028
  %in = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo, i32 0, i32 0, !dbg !5028
  %12 = load i32, i32* %in, align 8, !dbg !5028
  %13 = load %struct.anon.68*, %struct.anon.68** %__tmpq, align 8, !dbg !5028
  %14 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %13, i32 0, i32 0, !dbg !5028
  %kfifo3 = bitcast %union.anon.69* %14 to %struct.__kfifo*, !dbg !5028
  %out = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo3, i32 0, i32 1, !dbg !5028
  %15 = load i32, i32* %out, align 4, !dbg !5028
  %cmp = icmp eq i32 %12, %15, !dbg !5028
  %conv = zext i1 %cmp to i32, !dbg !5028
  store i32 %conv, i32* %tmp, align 4, !dbg !5028
  %16 = load i32, i32* %tmp, align 4, !dbg !5028
  %tobool = icmp ne i32 %16, 0, !dbg !5023
  %frombool = zext i1 %tobool to i8, !dbg !5023
  store i8 %frombool, i8* %__ret, align 1, !dbg !5023
  %17 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5023
  %wait4 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %17, i32 0, i32 1, !dbg !5023
  %lock5 = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait4, i32 0, i32 0, !dbg !5023
  store %struct.spinlock* %lock5, %struct.spinlock** %lock.addr.i10, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5029, !srcloc !4771
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i10, align 8, !dbg !5030
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !5030
  %rlock.i11 = bitcast %union.anon.1* %19 to %struct.raw_spinlock*, !dbg !5030
  %20 = load i8, i8* %__ret, align 1, !dbg !5023
  %tobool7 = trunc i8 %20 to i1, !dbg !5023
  %frombool8 = zext i1 %tobool7 to i8, !dbg !5023
  store i8 %frombool8, i8* %tmp6, align 1, !dbg !5023
  %21 = load i8, i8* %tmp6, align 1, !dbg !5023
  %tobool9 = trunc i8 %21 to i1, !dbg !5023
  br i1 %tobool9, label %if.end, label %if.then, !dbg !5031

if.then:                                          ; preds = %entry
  store i32 65, i32* %events, align 4, !dbg !5032
  br label %if.end, !dbg !5033

if.end:                                           ; preds = %if.then, %entry
  %22 = load i32, i32* %events, align 4, !dbg !5034
  ret i32 %22, !dbg !5035
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @gpio_ioctl(%struct.file* %file, i32 %cmd, i64 %arg) #0 !dbg !5036 {
entry:
  %retval.i.i330 = alloca i1, align 1
  %addr.addr.i.i331 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i331, metadata !4609, metadata !DIExpression()), !dbg !5037
  %bytes.addr.i.i332 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i332, metadata !4626, metadata !DIExpression()), !dbg !5052
  %is_source.addr.i.i333 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i333, metadata !4628, metadata !DIExpression()), !dbg !5053
  %sz.i.i334 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i334, metadata !4630, metadata !DIExpression()), !dbg !5054
  %__ret_warn_on.i.i335 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i335, metadata !4632, metadata !DIExpression()), !dbg !5055
  %tmp.i.i336 = alloca i64, align 8
  %to.addr.i337 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i337, metadata !5056, metadata !DIExpression()), !dbg !5057
  %from.addr.i338 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i338, metadata !5058, metadata !DIExpression()), !dbg !5059
  %n.addr.i339 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i339, metadata !5060, metadata !DIExpression()), !dbg !5061
  %retval.i.i279 = alloca i1, align 1
  %addr.addr.i.i280 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i280, metadata !4609, metadata !DIExpression()), !dbg !5062
  %bytes.addr.i.i281 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i281, metadata !4626, metadata !DIExpression()), !dbg !5067
  %is_source.addr.i.i282 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i282, metadata !4628, metadata !DIExpression()), !dbg !5068
  %sz.i.i283 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i283, metadata !4630, metadata !DIExpression()), !dbg !5069
  %__ret_warn_on.i.i284 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i284, metadata !4632, metadata !DIExpression()), !dbg !5070
  %tmp.i.i285 = alloca i64, align 8
  %to.addr.i286 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i286, metadata !4636, metadata !DIExpression()), !dbg !5071
  %from.addr.i287 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i287, metadata !4638, metadata !DIExpression()), !dbg !5072
  %n.addr.i288 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i288, metadata !4640, metadata !DIExpression()), !dbg !5073
  %retval.i.i228 = alloca i1, align 1
  %addr.addr.i.i229 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i229, metadata !4609, metadata !DIExpression()), !dbg !5074
  %bytes.addr.i.i230 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i230, metadata !4626, metadata !DIExpression()), !dbg !5078
  %is_source.addr.i.i231 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i231, metadata !4628, metadata !DIExpression()), !dbg !5079
  %sz.i.i232 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i232, metadata !4630, metadata !DIExpression()), !dbg !5080
  %__ret_warn_on.i.i233 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i233, metadata !4632, metadata !DIExpression()), !dbg !5081
  %tmp.i.i234 = alloca i64, align 8
  %to.addr.i235 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i235, metadata !5056, metadata !DIExpression()), !dbg !5082
  %from.addr.i236 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i236, metadata !5058, metadata !DIExpression()), !dbg !5083
  %n.addr.i237 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i237, metadata !5060, metadata !DIExpression()), !dbg !5084
  %retval.i.i177 = alloca i1, align 1
  %addr.addr.i.i178 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i178, metadata !4609, metadata !DIExpression()), !dbg !5085
  %bytes.addr.i.i179 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i179, metadata !4626, metadata !DIExpression()), !dbg !5090
  %is_source.addr.i.i180 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i180, metadata !4628, metadata !DIExpression()), !dbg !5091
  %sz.i.i181 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i181, metadata !4630, metadata !DIExpression()), !dbg !5092
  %__ret_warn_on.i.i182 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i182, metadata !4632, metadata !DIExpression()), !dbg !5093
  %tmp.i.i183 = alloca i64, align 8
  %to.addr.i184 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i184, metadata !4636, metadata !DIExpression()), !dbg !5094
  %from.addr.i185 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i185, metadata !4638, metadata !DIExpression()), !dbg !5095
  %n.addr.i186 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i186, metadata !4640, metadata !DIExpression()), !dbg !5096
  %retval.i.i127 = alloca i1, align 1
  %addr.addr.i.i128 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i128, metadata !4609, metadata !DIExpression()), !dbg !5097
  %bytes.addr.i.i129 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i129, metadata !4626, metadata !DIExpression()), !dbg !5101
  %is_source.addr.i.i130 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i130, metadata !4628, metadata !DIExpression()), !dbg !5102
  %sz.i.i131 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i131, metadata !4630, metadata !DIExpression()), !dbg !5103
  %__ret_warn_on.i.i132 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i132, metadata !4632, metadata !DIExpression()), !dbg !5104
  %tmp.i.i133 = alloca i64, align 8
  %to.addr.i134 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i134, metadata !5056, metadata !DIExpression()), !dbg !5105
  %from.addr.i135 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i135, metadata !5058, metadata !DIExpression()), !dbg !5106
  %n.addr.i136 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i136, metadata !5060, metadata !DIExpression()), !dbg !5107
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !4609, metadata !DIExpression()), !dbg !5108
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !4626, metadata !DIExpression()), !dbg !5113
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !4628, metadata !DIExpression()), !dbg !5114
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !4630, metadata !DIExpression()), !dbg !5115
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !4632, metadata !DIExpression()), !dbg !5116
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !4636, metadata !DIExpression()), !dbg !5117
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !4638, metadata !DIExpression()), !dbg !5118
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !4640, metadata !DIExpression()), !dbg !5119
  %retval = alloca i64, align 8
  %file.addr = alloca %struct.file*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i64, align 8
  %cdev = alloca %struct.gpio_chardev_data*, align 8
  %gdev = alloca %struct.gpio_device*, align 8
  %gc = alloca %struct.gpio_chip*, align 8
  %ip = alloca i8*, align 8
  %offset = alloca i32, align 4
  %chipinfo = alloca %struct.gpiochip_info, align 4
  %desc = alloca %struct.gpio_desc*, align 8
  %lineinfo = alloca %struct.gpioline_info, align 4
  %lineinfo_v2 = alloca %struct.gpio_v2_line_info, align 8
  %desc49 = alloca %struct.gpio_desc*, align 8
  %lineinfo50 = alloca %struct.gpioline_info, align 4
  %lineinfo_v251 = alloca %struct.gpio_v2_line_info, align 8
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !5120, metadata !DIExpression()), !dbg !5121
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !5122, metadata !DIExpression()), !dbg !5123
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !5124, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.declare(metadata %struct.gpio_chardev_data** %cdev, metadata !5126, metadata !DIExpression()), !dbg !5127
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !5128
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !5129
  %1 = load i8*, i8** %private_data, align 8, !dbg !5129
  %2 = bitcast i8* %1 to %struct.gpio_chardev_data*, !dbg !5128
  store %struct.gpio_chardev_data* %2, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5127
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %gdev, metadata !5130, metadata !DIExpression()), !dbg !5131
  %3 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5132
  %gdev1 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %3, i32 0, i32 0, !dbg !5133
  %4 = load %struct.gpio_device*, %struct.gpio_device** %gdev1, align 8, !dbg !5133
  store %struct.gpio_device* %4, %struct.gpio_device** %gdev, align 8, !dbg !5131
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !5134, metadata !DIExpression()), !dbg !5135
  %5 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5136
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %5, i32 0, i32 5, !dbg !5137
  %6 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !5137
  store %struct.gpio_chip* %6, %struct.gpio_chip** %gc, align 8, !dbg !5135
  call void @llvm.dbg.declare(metadata i8** %ip, metadata !5138, metadata !DIExpression()), !dbg !5139
  %7 = load i64, i64* %arg.addr, align 8, !dbg !5140
  %8 = inttoptr i64 %7 to i8*, !dbg !5141
  store i8* %8, i8** %ip, align 8, !dbg !5139
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !5142, metadata !DIExpression()), !dbg !5143
  %9 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !5144
  %tobool = icmp ne %struct.gpio_chip* %9, null, !dbg !5144
  br i1 %tobool, label %if.end, label %if.then, !dbg !5146

if.then:                                          ; preds = %entry
  store i64 -19, i64* %retval, align 8, !dbg !5147
  br label %return, !dbg !5147

if.end:                                           ; preds = %entry
  %10 = load i32, i32* %cmd.addr, align 4, !dbg !5148
  %conv = zext i32 %10 to i64, !dbg !5148
  %cmp = icmp eq i64 %conv, 2151986177, !dbg !5149
  br i1 %cmp, label %if.then3, label %if.else, !dbg !5150

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.gpiochip_info* %chipinfo, metadata !5151, metadata !DIExpression()), !dbg !5157
  %11 = bitcast %struct.gpiochip_info* %chipinfo to i8*, !dbg !5158
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 68, i1 false), !dbg !5158
  %name = getelementptr inbounds %struct.gpiochip_info, %struct.gpiochip_info* %chipinfo, i32 0, i32 0, !dbg !5159
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !5160
  %12 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5161
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %12, i32 0, i32 1, !dbg !5162
  %call = call i8* @dev_name(%struct.device* %dev) #9, !dbg !5163
  %call4 = call i64 @strscpy(i8* %arraydecay, i8* %call, i64 32) #9, !dbg !5164
  %label = getelementptr inbounds %struct.gpiochip_info, %struct.gpiochip_info* %chipinfo, i32 0, i32 1, !dbg !5165
  %arraydecay5 = getelementptr inbounds [32 x i8], [32 x i8]* %label, i64 0, i64 0, !dbg !5166
  %13 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5167
  %label6 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %13, i32 0, i32 9, !dbg !5168
  %14 = load i8*, i8** %label6, align 8, !dbg !5168
  %call7 = call i64 @strscpy(i8* %arraydecay5, i8* %14, i64 32) #9, !dbg !5169
  %15 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5170
  %ngpio = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %15, i32 0, i32 8, !dbg !5171
  %16 = load i16, i16* %ngpio, align 4, !dbg !5171
  %conv8 = zext i16 %16 to i32, !dbg !5170
  %lines = getelementptr inbounds %struct.gpiochip_info, %struct.gpiochip_info* %chipinfo, i32 0, i32 2, !dbg !5172
  store i32 %conv8, i32* %lines, align 4, !dbg !5173
  %17 = load i8*, i8** %ip, align 8, !dbg !5174
  %18 = bitcast %struct.gpiochip_info* %chipinfo to i8*, !dbg !5175
  store i8* %17, i8** %to.addr.i, align 8
  store i8* %18, i8** %from.addr.i, align 8
  store i64 68, i64* %n.addr.i, align 8
  %19 = load i8*, i8** %from.addr.i, align 8, !dbg !5176
  %20 = load i64, i64* %n.addr.i, align 8, !dbg !5176
  store i8* %19, i8** %addr.addr.i.i, align 8
  store i64 %20, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !5115
  %21 = load i32, i32* %sz.i.i, align 4, !dbg !5177
  %cmp.i.i = icmp sge i32 %21, 0, !dbg !5177
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !5177

land.rhs.i.i:                                     ; preds = %if.then3
  %22 = load i32, i32* %sz.i.i, align 4, !dbg !5177
  %conv.i.i = sext i32 %22 to i64, !dbg !5177
  %23 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !5177
  %cmp1.i.i = icmp ult i64 %conv.i.i, %23, !dbg !5177
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.then3
  %24 = phi i1 [ false, %if.then3 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !5178
  %lnot.i.i = xor i1 %24, true, !dbg !5177
  %lnot.ext.i.i = zext i1 %24 to i32, !dbg !5177
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5177
  br i1 %24, label %if.then.i.i, label %if.end10.i.i, !dbg !5179

if.then.i.i:                                      ; preds = %land.end.i.i
  %25 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !5180
  %26 = call i1 @llvm.is.constant.i64(i64 %25) #6, !dbg !5181
  br i1 %26, label %if.else.i.i, label %if.then5.i.i, !dbg !5182

if.then5.i.i:                                     ; preds = %if.then.i.i
  %27 = load i32, i32* %sz.i.i, align 4, !dbg !5183
  %28 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !5184
  call void @copy_overflow(i32 %27, i64 %28) #11, !dbg !5185
  br label %if.end9.i.i, !dbg !5185

if.else.i.i:                                      ; preds = %if.then.i.i
  %29 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !5186
  %tobool6.i.i = trunc i8 %29 to i1, !dbg !5186
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !5187

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !5188
  br label %if.end.i.i, !dbg !5188

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !5189
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !5190
  br label %check_copy_size.exit.i, !dbg !5190

if.end10.i.i:                                     ; preds = %land.end.i.i
  %30 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !5116
  %cmp11.i.i = icmp ugt i64 %30, 2147483647, !dbg !5116
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !5116
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !5116
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !5116
  %31 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !5191
  %tobool17.i.i = icmp ne i32 %31, 0, !dbg !5191
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !5191
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !5191
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !5191
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !5116

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !5192, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !5193, !srcloc !4906
  br label %if.end31.i.i, !dbg !5194

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %32 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !5116
  %tobool32.i.i = icmp ne i32 %32, 0, !dbg !5116
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !5116
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !5116
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !5116
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !5191
  %33 = load i64, i64* %tmp.i.i, align 8, !dbg !5116
  %tobool38.i.i = icmp ne i64 %33, 0, !dbg !5195
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !5196

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !5197
  br label %check_copy_size.exit.i, !dbg !5197

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %34 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !5198
  %35 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !5199
  %36 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !5200
  %tobool41.i.i = trunc i8 %36 to i1, !dbg !5200
  call void @check_object_size(i8* %34, i64 %35, i1 zeroext %tobool41.i.i) #11, !dbg !5201
  store i1 true, i1* %retval.i.i, align 1, !dbg !5202
  br label %check_copy_size.exit.i, !dbg !5202

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %37 = load i1, i1* %retval.i.i, align 1, !dbg !5203
  %lnot.i = xor i1 %37, true, !dbg !5176
  %lnot.ext.i = zext i1 %37 to i32, !dbg !5176
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !5176
  br i1 %37, label %if.then.i, label %copy_to_user.exit, !dbg !5204

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %38 = load i8*, i8** %to.addr.i, align 8, !dbg !5205
  %39 = load i8*, i8** %from.addr.i, align 8, !dbg !5206
  %40 = load i64, i64* %n.addr.i, align 8, !dbg !5207
  %call2.i = call i64 @_copy_to_user(i8* %38, i8* %39, i64 %40) #11, !dbg !5208
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !5209
  br label %copy_to_user.exit, !dbg !5210

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %41 = load i64, i64* %n.addr.i, align 8, !dbg !5211
  %tobool10 = icmp ne i64 %41, 0, !dbg !5212
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !5213

if.then11:                                        ; preds = %copy_to_user.exit
  store i64 -14, i64* %retval, align 8, !dbg !5214
  br label %return, !dbg !5214

if.end12:                                         ; preds = %copy_to_user.exit
  store i64 0, i64* %retval, align 8, !dbg !5215
  br label %return, !dbg !5215

if.else:                                          ; preds = %if.end
  %42 = load i32, i32* %cmd.addr, align 4, !dbg !5216
  %conv13 = zext i32 %42 to i64, !dbg !5216
  %cmp14 = icmp eq i64 %conv13, 3225990146, !dbg !5217
  br i1 %cmp14, label %if.then16, label %if.else30, !dbg !5218

if.then16:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc, metadata !5219, metadata !DIExpression()), !dbg !5220
  call void @llvm.dbg.declare(metadata %struct.gpioline_info* %lineinfo, metadata !5221, metadata !DIExpression()), !dbg !5222
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_info* %lineinfo_v2, metadata !5223, metadata !DIExpression()), !dbg !5224
  %43 = bitcast %struct.gpioline_info* %lineinfo to i8*, !dbg !5225
  %44 = load i8*, i8** %ip, align 8, !dbg !5226
  store i8* %43, i8** %to.addr.i134, align 8
  store i8* %44, i8** %from.addr.i135, align 8
  store i64 72, i64* %n.addr.i136, align 8
  %45 = load i8*, i8** %to.addr.i134, align 8, !dbg !5227
  %46 = load i64, i64* %n.addr.i136, align 8, !dbg !5227
  store i8* %45, i8** %addr.addr.i.i128, align 8
  store i64 %46, i64* %bytes.addr.i.i129, align 8
  store i8 0, i8* %is_source.addr.i.i130, align 1
  store i32 -1, i32* %sz.i.i131, align 4, !dbg !5103
  %47 = load i32, i32* %sz.i.i131, align 4, !dbg !5228
  %cmp.i.i137 = icmp sge i32 %47, 0, !dbg !5228
  br i1 %cmp.i.i137, label %land.rhs.i.i140, label %land.end.i.i144, !dbg !5228

land.rhs.i.i140:                                  ; preds = %if.then16
  %48 = load i32, i32* %sz.i.i131, align 4, !dbg !5228
  %conv.i.i138 = sext i32 %48 to i64, !dbg !5228
  %49 = load i64, i64* %bytes.addr.i.i129, align 8, !dbg !5228
  %cmp1.i.i139 = icmp ult i64 %conv.i.i138, %49, !dbg !5228
  br label %land.end.i.i144

land.end.i.i144:                                  ; preds = %land.rhs.i.i140, %if.then16
  %50 = phi i1 [ false, %if.then16 ], [ %cmp1.i.i139, %land.rhs.i.i140 ], !dbg !5229
  %lnot.i.i141 = xor i1 %50, true, !dbg !5228
  %lnot.ext.i.i142 = zext i1 %50 to i32, !dbg !5228
  %conv4.i.i143 = sext i32 %lnot.ext.i.i142 to i64, !dbg !5228
  br i1 %50, label %if.then.i.i145, label %if.end10.i.i160, !dbg !5230

if.then.i.i145:                                   ; preds = %land.end.i.i144
  %51 = load i64, i64* %bytes.addr.i.i129, align 8, !dbg !5231
  %52 = call i1 @llvm.is.constant.i64(i64 %51) #6, !dbg !5232
  br i1 %52, label %if.else.i.i148, label %if.then5.i.i146, !dbg !5233

if.then5.i.i146:                                  ; preds = %if.then.i.i145
  %53 = load i32, i32* %sz.i.i131, align 4, !dbg !5234
  %54 = load i64, i64* %bytes.addr.i.i129, align 8, !dbg !5235
  call void @copy_overflow(i32 %53, i64 %54) #11, !dbg !5236
  br label %if.end9.i.i152, !dbg !5236

if.else.i.i148:                                   ; preds = %if.then.i.i145
  %55 = load i8, i8* %is_source.addr.i.i130, align 1, !dbg !5237
  %tobool6.i.i147 = trunc i8 %55 to i1, !dbg !5237
  br i1 %tobool6.i.i147, label %if.then7.i.i149, label %if.else8.i.i150, !dbg !5238

if.then7.i.i149:                                  ; preds = %if.else.i.i148
  call void @__bad_copy_from() #11, !dbg !5239
  br label %if.end.i.i151, !dbg !5239

if.else8.i.i150:                                  ; preds = %if.else.i.i148
  call void @__bad_copy_to() #11, !dbg !5240
  br label %if.end.i.i151

if.end.i.i151:                                    ; preds = %if.else8.i.i150, %if.then7.i.i149
  br label %if.end9.i.i152

if.end9.i.i152:                                   ; preds = %if.end.i.i151, %if.then5.i.i146
  store i1 false, i1* %retval.i.i127, align 1, !dbg !5241
  br label %check_copy_size.exit.i174, !dbg !5241

if.end10.i.i160:                                  ; preds = %land.end.i.i144
  %56 = load i64, i64* %bytes.addr.i.i129, align 8, !dbg !5104
  %cmp11.i.i153 = icmp ugt i64 %56, 2147483647, !dbg !5104
  %lnot13.i.i154 = xor i1 %cmp11.i.i153, true, !dbg !5104
  %lnot.ext16.i.i155 = zext i1 %cmp11.i.i153 to i32, !dbg !5104
  store i32 %lnot.ext16.i.i155, i32* %__ret_warn_on.i.i132, align 4, !dbg !5104
  %57 = load i32, i32* %__ret_warn_on.i.i132, align 4, !dbg !5242
  %tobool17.i.i156 = icmp ne i32 %57, 0, !dbg !5242
  %lnot18.i.i157 = xor i1 %tobool17.i.i156, true, !dbg !5242
  %lnot.ext21.i.i158 = zext i1 %tobool17.i.i156 to i32, !dbg !5242
  %conv22.i.i159 = sext i32 %lnot.ext21.i.i158 to i64, !dbg !5242
  br i1 %tobool17.i.i156, label %if.then24.i.i161, label %if.end31.i.i167, !dbg !5104

if.then24.i.i161:                                 ; preds = %if.end10.i.i160
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !5243, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !5244, !srcloc !4906
  br label %if.end31.i.i167, !dbg !5245

if.end31.i.i167:                                  ; preds = %if.then24.i.i161, %if.end10.i.i160
  %58 = load i32, i32* %__ret_warn_on.i.i132, align 4, !dbg !5104
  %tobool32.i.i162 = icmp ne i32 %58, 0, !dbg !5104
  %lnot33.i.i163 = xor i1 %tobool32.i.i162, true, !dbg !5104
  %lnot.ext36.i.i164 = zext i1 %tobool32.i.i162 to i32, !dbg !5104
  %conv37.i.i165 = sext i32 %lnot.ext36.i.i164 to i64, !dbg !5104
  store i64 %conv37.i.i165, i64* %tmp.i.i133, align 8, !dbg !5242
  %59 = load i64, i64* %tmp.i.i133, align 8, !dbg !5104
  %tobool38.i.i166 = icmp ne i64 %59, 0, !dbg !5246
  br i1 %tobool38.i.i166, label %if.then39.i.i168, label %if.end40.i.i170, !dbg !5247

if.then39.i.i168:                                 ; preds = %if.end31.i.i167
  store i1 false, i1* %retval.i.i127, align 1, !dbg !5248
  br label %check_copy_size.exit.i174, !dbg !5248

if.end40.i.i170:                                  ; preds = %if.end31.i.i167
  %60 = load i8*, i8** %addr.addr.i.i128, align 8, !dbg !5249
  %61 = load i64, i64* %bytes.addr.i.i129, align 8, !dbg !5250
  %62 = load i8, i8* %is_source.addr.i.i130, align 1, !dbg !5251
  %tobool41.i.i169 = trunc i8 %62 to i1, !dbg !5251
  call void @check_object_size(i8* %60, i64 %61, i1 zeroext %tobool41.i.i169) #11, !dbg !5252
  store i1 true, i1* %retval.i.i127, align 1, !dbg !5253
  br label %check_copy_size.exit.i174, !dbg !5253

check_copy_size.exit.i174:                        ; preds = %if.end40.i.i170, %if.then39.i.i168, %if.end9.i.i152
  %63 = load i1, i1* %retval.i.i127, align 1, !dbg !5254
  %lnot.i171 = xor i1 %63, true, !dbg !5227
  %lnot.ext.i172 = zext i1 %63 to i32, !dbg !5227
  %conv.i173 = sext i32 %lnot.ext.i172 to i64, !dbg !5227
  br i1 %63, label %if.then.i176, label %copy_from_user.exit, !dbg !5255

if.then.i176:                                     ; preds = %check_copy_size.exit.i174
  %64 = load i8*, i8** %to.addr.i134, align 8, !dbg !5256
  %65 = load i8*, i8** %from.addr.i135, align 8, !dbg !5257
  %66 = load i64, i64* %n.addr.i136, align 8, !dbg !5258
  %call2.i175 = call i64 @_copy_from_user(i8* %64, i8* %65, i64 %66) #11, !dbg !5259
  store i64 %call2.i175, i64* %n.addr.i136, align 8, !dbg !5260
  br label %copy_from_user.exit, !dbg !5261

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i174, %if.then.i176
  %67 = load i64, i64* %n.addr.i136, align 8, !dbg !5262
  %tobool18 = icmp ne i64 %67, 0, !dbg !5263
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !5264

if.then19:                                        ; preds = %copy_from_user.exit
  store i64 -14, i64* %retval, align 8, !dbg !5265
  br label %return, !dbg !5265

if.end20:                                         ; preds = %copy_from_user.exit
  %68 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !5266
  %line_offset = getelementptr inbounds %struct.gpioline_info, %struct.gpioline_info* %lineinfo, i32 0, i32 0, !dbg !5267
  %69 = load i32, i32* %line_offset, align 4, !dbg !5267
  %call21 = call %struct.gpio_desc* @gpiochip_get_desc(%struct.gpio_chip* %68, i32 %69) #9, !dbg !5268
  store %struct.gpio_desc* %call21, %struct.gpio_desc** %desc, align 8, !dbg !5269
  %70 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !5270
  %71 = bitcast %struct.gpio_desc* %70 to i8*, !dbg !5270
  %call22 = call zeroext i1 @IS_ERR(i8* %71) #9, !dbg !5272
  br i1 %call22, label %if.then23, label %if.end25, !dbg !5273

if.then23:                                        ; preds = %if.end20
  %72 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !5274
  %73 = bitcast %struct.gpio_desc* %72 to i8*, !dbg !5274
  %call24 = call i64 @PTR_ERR(i8* %73) #9, !dbg !5275
  store i64 %call24, i64* %retval, align 8, !dbg !5276
  br label %return, !dbg !5276

if.end25:                                         ; preds = %if.end20
  %74 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !5277
  call void @gpio_desc_to_lineinfo(%struct.gpio_desc* %74, %struct.gpio_v2_line_info* %lineinfo_v2) #9, !dbg !5278
  call void @gpio_v2_line_info_to_v1(%struct.gpio_v2_line_info* %lineinfo_v2, %struct.gpioline_info* %lineinfo) #9, !dbg !5279
  %75 = load i8*, i8** %ip, align 8, !dbg !5280
  %76 = bitcast %struct.gpioline_info* %lineinfo to i8*, !dbg !5281
  store i8* %75, i8** %to.addr.i184, align 8
  store i8* %76, i8** %from.addr.i185, align 8
  store i64 72, i64* %n.addr.i186, align 8
  %77 = load i8*, i8** %from.addr.i185, align 8, !dbg !5282
  %78 = load i64, i64* %n.addr.i186, align 8, !dbg !5282
  store i8* %77, i8** %addr.addr.i.i178, align 8
  store i64 %78, i64* %bytes.addr.i.i179, align 8
  store i8 1, i8* %is_source.addr.i.i180, align 1
  store i32 -1, i32* %sz.i.i181, align 4, !dbg !5092
  %79 = load i32, i32* %sz.i.i181, align 4, !dbg !5283
  %cmp.i.i187 = icmp sge i32 %79, 0, !dbg !5283
  br i1 %cmp.i.i187, label %land.rhs.i.i190, label %land.end.i.i194, !dbg !5283

land.rhs.i.i190:                                  ; preds = %if.end25
  %80 = load i32, i32* %sz.i.i181, align 4, !dbg !5283
  %conv.i.i188 = sext i32 %80 to i64, !dbg !5283
  %81 = load i64, i64* %bytes.addr.i.i179, align 8, !dbg !5283
  %cmp1.i.i189 = icmp ult i64 %conv.i.i188, %81, !dbg !5283
  br label %land.end.i.i194

land.end.i.i194:                                  ; preds = %land.rhs.i.i190, %if.end25
  %82 = phi i1 [ false, %if.end25 ], [ %cmp1.i.i189, %land.rhs.i.i190 ], !dbg !5284
  %lnot.i.i191 = xor i1 %82, true, !dbg !5283
  %lnot.ext.i.i192 = zext i1 %82 to i32, !dbg !5283
  %conv4.i.i193 = sext i32 %lnot.ext.i.i192 to i64, !dbg !5283
  br i1 %82, label %if.then.i.i195, label %if.end10.i.i210, !dbg !5285

if.then.i.i195:                                   ; preds = %land.end.i.i194
  %83 = load i64, i64* %bytes.addr.i.i179, align 8, !dbg !5286
  %84 = call i1 @llvm.is.constant.i64(i64 %83) #6, !dbg !5287
  br i1 %84, label %if.else.i.i198, label %if.then5.i.i196, !dbg !5288

if.then5.i.i196:                                  ; preds = %if.then.i.i195
  %85 = load i32, i32* %sz.i.i181, align 4, !dbg !5289
  %86 = load i64, i64* %bytes.addr.i.i179, align 8, !dbg !5290
  call void @copy_overflow(i32 %85, i64 %86) #11, !dbg !5291
  br label %if.end9.i.i202, !dbg !5291

if.else.i.i198:                                   ; preds = %if.then.i.i195
  %87 = load i8, i8* %is_source.addr.i.i180, align 1, !dbg !5292
  %tobool6.i.i197 = trunc i8 %87 to i1, !dbg !5292
  br i1 %tobool6.i.i197, label %if.then7.i.i199, label %if.else8.i.i200, !dbg !5293

if.then7.i.i199:                                  ; preds = %if.else.i.i198
  call void @__bad_copy_from() #11, !dbg !5294
  br label %if.end.i.i201, !dbg !5294

if.else8.i.i200:                                  ; preds = %if.else.i.i198
  call void @__bad_copy_to() #11, !dbg !5295
  br label %if.end.i.i201

if.end.i.i201:                                    ; preds = %if.else8.i.i200, %if.then7.i.i199
  br label %if.end9.i.i202

if.end9.i.i202:                                   ; preds = %if.end.i.i201, %if.then5.i.i196
  store i1 false, i1* %retval.i.i177, align 1, !dbg !5296
  br label %check_copy_size.exit.i224, !dbg !5296

if.end10.i.i210:                                  ; preds = %land.end.i.i194
  %88 = load i64, i64* %bytes.addr.i.i179, align 8, !dbg !5093
  %cmp11.i.i203 = icmp ugt i64 %88, 2147483647, !dbg !5093
  %lnot13.i.i204 = xor i1 %cmp11.i.i203, true, !dbg !5093
  %lnot.ext16.i.i205 = zext i1 %cmp11.i.i203 to i32, !dbg !5093
  store i32 %lnot.ext16.i.i205, i32* %__ret_warn_on.i.i182, align 4, !dbg !5093
  %89 = load i32, i32* %__ret_warn_on.i.i182, align 4, !dbg !5297
  %tobool17.i.i206 = icmp ne i32 %89, 0, !dbg !5297
  %lnot18.i.i207 = xor i1 %tobool17.i.i206, true, !dbg !5297
  %lnot.ext21.i.i208 = zext i1 %tobool17.i.i206 to i32, !dbg !5297
  %conv22.i.i209 = sext i32 %lnot.ext21.i.i208 to i64, !dbg !5297
  br i1 %tobool17.i.i206, label %if.then24.i.i211, label %if.end31.i.i217, !dbg !5093

if.then24.i.i211:                                 ; preds = %if.end10.i.i210
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !5298, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !5299, !srcloc !4906
  br label %if.end31.i.i217, !dbg !5300

if.end31.i.i217:                                  ; preds = %if.then24.i.i211, %if.end10.i.i210
  %90 = load i32, i32* %__ret_warn_on.i.i182, align 4, !dbg !5093
  %tobool32.i.i212 = icmp ne i32 %90, 0, !dbg !5093
  %lnot33.i.i213 = xor i1 %tobool32.i.i212, true, !dbg !5093
  %lnot.ext36.i.i214 = zext i1 %tobool32.i.i212 to i32, !dbg !5093
  %conv37.i.i215 = sext i32 %lnot.ext36.i.i214 to i64, !dbg !5093
  store i64 %conv37.i.i215, i64* %tmp.i.i183, align 8, !dbg !5297
  %91 = load i64, i64* %tmp.i.i183, align 8, !dbg !5093
  %tobool38.i.i216 = icmp ne i64 %91, 0, !dbg !5301
  br i1 %tobool38.i.i216, label %if.then39.i.i218, label %if.end40.i.i220, !dbg !5302

if.then39.i.i218:                                 ; preds = %if.end31.i.i217
  store i1 false, i1* %retval.i.i177, align 1, !dbg !5303
  br label %check_copy_size.exit.i224, !dbg !5303

if.end40.i.i220:                                  ; preds = %if.end31.i.i217
  %92 = load i8*, i8** %addr.addr.i.i178, align 8, !dbg !5304
  %93 = load i64, i64* %bytes.addr.i.i179, align 8, !dbg !5305
  %94 = load i8, i8* %is_source.addr.i.i180, align 1, !dbg !5306
  %tobool41.i.i219 = trunc i8 %94 to i1, !dbg !5306
  call void @check_object_size(i8* %92, i64 %93, i1 zeroext %tobool41.i.i219) #11, !dbg !5307
  store i1 true, i1* %retval.i.i177, align 1, !dbg !5308
  br label %check_copy_size.exit.i224, !dbg !5308

check_copy_size.exit.i224:                        ; preds = %if.end40.i.i220, %if.then39.i.i218, %if.end9.i.i202
  %95 = load i1, i1* %retval.i.i177, align 1, !dbg !5309
  %lnot.i221 = xor i1 %95, true, !dbg !5282
  %lnot.ext.i222 = zext i1 %95 to i32, !dbg !5282
  %conv.i223 = sext i32 %lnot.ext.i222 to i64, !dbg !5282
  br i1 %95, label %if.then.i226, label %copy_to_user.exit227, !dbg !5310

if.then.i226:                                     ; preds = %check_copy_size.exit.i224
  %96 = load i8*, i8** %to.addr.i184, align 8, !dbg !5311
  %97 = load i8*, i8** %from.addr.i185, align 8, !dbg !5312
  %98 = load i64, i64* %n.addr.i186, align 8, !dbg !5313
  %call2.i225 = call i64 @_copy_to_user(i8* %96, i8* %97, i64 %98) #11, !dbg !5314
  store i64 %call2.i225, i64* %n.addr.i186, align 8, !dbg !5315
  br label %copy_to_user.exit227, !dbg !5316

copy_to_user.exit227:                             ; preds = %check_copy_size.exit.i224, %if.then.i226
  %99 = load i64, i64* %n.addr.i186, align 8, !dbg !5317
  %tobool27 = icmp ne i64 %99, 0, !dbg !5318
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !5319

if.then28:                                        ; preds = %copy_to_user.exit227
  store i64 -14, i64* %retval, align 8, !dbg !5320
  br label %return, !dbg !5320

if.end29:                                         ; preds = %copy_to_user.exit227
  store i64 0, i64* %retval, align 8, !dbg !5321
  br label %return, !dbg !5321

if.else30:                                        ; preds = %if.else
  %100 = load i32, i32* %cmd.addr, align 4, !dbg !5322
  %conv31 = zext i32 %100 to i64, !dbg !5322
  %cmp32 = icmp eq i64 %conv31, 3245126659, !dbg !5323
  br i1 %cmp32, label %if.then34, label %if.else37, !dbg !5324

if.then34:                                        ; preds = %if.else30
  %101 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5325
  %102 = load i8*, i8** %ip, align 8, !dbg !5327
  %call35 = call i32 @linehandle_create(%struct.gpio_device* %101, i8* %102) #9, !dbg !5328
  %conv36 = sext i32 %call35 to i64, !dbg !5328
  store i64 %conv36, i64* %retval, align 8, !dbg !5329
  br label %return, !dbg !5329

if.else37:                                        ; preds = %if.else30
  %103 = load i32, i32* %cmd.addr, align 4, !dbg !5330
  %conv38 = zext i32 %103 to i64, !dbg !5330
  %cmp39 = icmp eq i64 %conv38, 3224417284, !dbg !5331
  br i1 %cmp39, label %if.then41, label %if.else44, !dbg !5332

if.then41:                                        ; preds = %if.else37
  %104 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5333
  %105 = load i8*, i8** %ip, align 8, !dbg !5335
  %call42 = call i32 @lineevent_create(%struct.gpio_device* %104, i8* %105) #9, !dbg !5336
  %conv43 = sext i32 %call42 to i64, !dbg !5336
  store i64 %conv43, i64* %retval, align 8, !dbg !5337
  br label %return, !dbg !5337

if.else44:                                        ; preds = %if.else37
  %106 = load i32, i32* %cmd.addr, align 4, !dbg !5338
  %conv45 = zext i32 %106 to i64, !dbg !5338
  %cmp46 = icmp eq i64 %conv45, 3225990155, !dbg !5339
  br i1 %cmp46, label %if.then48, label %if.else78, !dbg !5340

if.then48:                                        ; preds = %if.else44
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc49, metadata !5341, metadata !DIExpression()), !dbg !5342
  call void @llvm.dbg.declare(metadata %struct.gpioline_info* %lineinfo50, metadata !5343, metadata !DIExpression()), !dbg !5344
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_info* %lineinfo_v251, metadata !5345, metadata !DIExpression()), !dbg !5346
  %107 = bitcast %struct.gpioline_info* %lineinfo50 to i8*, !dbg !5347
  %108 = load i8*, i8** %ip, align 8, !dbg !5348
  store i8* %107, i8** %to.addr.i235, align 8
  store i8* %108, i8** %from.addr.i236, align 8
  store i64 72, i64* %n.addr.i237, align 8
  %109 = load i8*, i8** %to.addr.i235, align 8, !dbg !5349
  %110 = load i64, i64* %n.addr.i237, align 8, !dbg !5349
  store i8* %109, i8** %addr.addr.i.i229, align 8
  store i64 %110, i64* %bytes.addr.i.i230, align 8
  store i8 0, i8* %is_source.addr.i.i231, align 1
  store i32 -1, i32* %sz.i.i232, align 4, !dbg !5080
  %111 = load i32, i32* %sz.i.i232, align 4, !dbg !5350
  %cmp.i.i238 = icmp sge i32 %111, 0, !dbg !5350
  br i1 %cmp.i.i238, label %land.rhs.i.i241, label %land.end.i.i245, !dbg !5350

land.rhs.i.i241:                                  ; preds = %if.then48
  %112 = load i32, i32* %sz.i.i232, align 4, !dbg !5350
  %conv.i.i239 = sext i32 %112 to i64, !dbg !5350
  %113 = load i64, i64* %bytes.addr.i.i230, align 8, !dbg !5350
  %cmp1.i.i240 = icmp ult i64 %conv.i.i239, %113, !dbg !5350
  br label %land.end.i.i245

land.end.i.i245:                                  ; preds = %land.rhs.i.i241, %if.then48
  %114 = phi i1 [ false, %if.then48 ], [ %cmp1.i.i240, %land.rhs.i.i241 ], !dbg !5351
  %lnot.i.i242 = xor i1 %114, true, !dbg !5350
  %lnot.ext.i.i243 = zext i1 %114 to i32, !dbg !5350
  %conv4.i.i244 = sext i32 %lnot.ext.i.i243 to i64, !dbg !5350
  br i1 %114, label %if.then.i.i246, label %if.end10.i.i261, !dbg !5352

if.then.i.i246:                                   ; preds = %land.end.i.i245
  %115 = load i64, i64* %bytes.addr.i.i230, align 8, !dbg !5353
  %116 = call i1 @llvm.is.constant.i64(i64 %115) #6, !dbg !5354
  br i1 %116, label %if.else.i.i249, label %if.then5.i.i247, !dbg !5355

if.then5.i.i247:                                  ; preds = %if.then.i.i246
  %117 = load i32, i32* %sz.i.i232, align 4, !dbg !5356
  %118 = load i64, i64* %bytes.addr.i.i230, align 8, !dbg !5357
  call void @copy_overflow(i32 %117, i64 %118) #11, !dbg !5358
  br label %if.end9.i.i253, !dbg !5358

if.else.i.i249:                                   ; preds = %if.then.i.i246
  %119 = load i8, i8* %is_source.addr.i.i231, align 1, !dbg !5359
  %tobool6.i.i248 = trunc i8 %119 to i1, !dbg !5359
  br i1 %tobool6.i.i248, label %if.then7.i.i250, label %if.else8.i.i251, !dbg !5360

if.then7.i.i250:                                  ; preds = %if.else.i.i249
  call void @__bad_copy_from() #11, !dbg !5361
  br label %if.end.i.i252, !dbg !5361

if.else8.i.i251:                                  ; preds = %if.else.i.i249
  call void @__bad_copy_to() #11, !dbg !5362
  br label %if.end.i.i252

if.end.i.i252:                                    ; preds = %if.else8.i.i251, %if.then7.i.i250
  br label %if.end9.i.i253

if.end9.i.i253:                                   ; preds = %if.end.i.i252, %if.then5.i.i247
  store i1 false, i1* %retval.i.i228, align 1, !dbg !5363
  br label %check_copy_size.exit.i275, !dbg !5363

if.end10.i.i261:                                  ; preds = %land.end.i.i245
  %120 = load i64, i64* %bytes.addr.i.i230, align 8, !dbg !5081
  %cmp11.i.i254 = icmp ugt i64 %120, 2147483647, !dbg !5081
  %lnot13.i.i255 = xor i1 %cmp11.i.i254, true, !dbg !5081
  %lnot.ext16.i.i256 = zext i1 %cmp11.i.i254 to i32, !dbg !5081
  store i32 %lnot.ext16.i.i256, i32* %__ret_warn_on.i.i233, align 4, !dbg !5081
  %121 = load i32, i32* %__ret_warn_on.i.i233, align 4, !dbg !5364
  %tobool17.i.i257 = icmp ne i32 %121, 0, !dbg !5364
  %lnot18.i.i258 = xor i1 %tobool17.i.i257, true, !dbg !5364
  %lnot.ext21.i.i259 = zext i1 %tobool17.i.i257 to i32, !dbg !5364
  %conv22.i.i260 = sext i32 %lnot.ext21.i.i259 to i64, !dbg !5364
  br i1 %tobool17.i.i257, label %if.then24.i.i262, label %if.end31.i.i268, !dbg !5081

if.then24.i.i262:                                 ; preds = %if.end10.i.i261
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !5365, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !5366, !srcloc !4906
  br label %if.end31.i.i268, !dbg !5367

if.end31.i.i268:                                  ; preds = %if.then24.i.i262, %if.end10.i.i261
  %122 = load i32, i32* %__ret_warn_on.i.i233, align 4, !dbg !5081
  %tobool32.i.i263 = icmp ne i32 %122, 0, !dbg !5081
  %lnot33.i.i264 = xor i1 %tobool32.i.i263, true, !dbg !5081
  %lnot.ext36.i.i265 = zext i1 %tobool32.i.i263 to i32, !dbg !5081
  %conv37.i.i266 = sext i32 %lnot.ext36.i.i265 to i64, !dbg !5081
  store i64 %conv37.i.i266, i64* %tmp.i.i234, align 8, !dbg !5364
  %123 = load i64, i64* %tmp.i.i234, align 8, !dbg !5081
  %tobool38.i.i267 = icmp ne i64 %123, 0, !dbg !5368
  br i1 %tobool38.i.i267, label %if.then39.i.i269, label %if.end40.i.i271, !dbg !5369

if.then39.i.i269:                                 ; preds = %if.end31.i.i268
  store i1 false, i1* %retval.i.i228, align 1, !dbg !5370
  br label %check_copy_size.exit.i275, !dbg !5370

if.end40.i.i271:                                  ; preds = %if.end31.i.i268
  %124 = load i8*, i8** %addr.addr.i.i229, align 8, !dbg !5371
  %125 = load i64, i64* %bytes.addr.i.i230, align 8, !dbg !5372
  %126 = load i8, i8* %is_source.addr.i.i231, align 1, !dbg !5373
  %tobool41.i.i270 = trunc i8 %126 to i1, !dbg !5373
  call void @check_object_size(i8* %124, i64 %125, i1 zeroext %tobool41.i.i270) #11, !dbg !5374
  store i1 true, i1* %retval.i.i228, align 1, !dbg !5375
  br label %check_copy_size.exit.i275, !dbg !5375

check_copy_size.exit.i275:                        ; preds = %if.end40.i.i271, %if.then39.i.i269, %if.end9.i.i253
  %127 = load i1, i1* %retval.i.i228, align 1, !dbg !5376
  %lnot.i272 = xor i1 %127, true, !dbg !5349
  %lnot.ext.i273 = zext i1 %127 to i32, !dbg !5349
  %conv.i274 = sext i32 %lnot.ext.i273 to i64, !dbg !5349
  br i1 %127, label %if.then.i277, label %copy_from_user.exit278, !dbg !5377

if.then.i277:                                     ; preds = %check_copy_size.exit.i275
  %128 = load i8*, i8** %to.addr.i235, align 8, !dbg !5378
  %129 = load i8*, i8** %from.addr.i236, align 8, !dbg !5379
  %130 = load i64, i64* %n.addr.i237, align 8, !dbg !5380
  %call2.i276 = call i64 @_copy_from_user(i8* %128, i8* %129, i64 %130) #11, !dbg !5381
  store i64 %call2.i276, i64* %n.addr.i237, align 8, !dbg !5382
  br label %copy_from_user.exit278, !dbg !5383

copy_from_user.exit278:                           ; preds = %check_copy_size.exit.i275, %if.then.i277
  %131 = load i64, i64* %n.addr.i237, align 8, !dbg !5384
  %tobool53 = icmp ne i64 %131, 0, !dbg !5385
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !5386

if.then54:                                        ; preds = %copy_from_user.exit278
  store i64 -14, i64* %retval, align 8, !dbg !5387
  br label %return, !dbg !5387

if.end55:                                         ; preds = %copy_from_user.exit278
  %132 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !5388
  %line_offset56 = getelementptr inbounds %struct.gpioline_info, %struct.gpioline_info* %lineinfo50, i32 0, i32 0, !dbg !5389
  %133 = load i32, i32* %line_offset56, align 4, !dbg !5389
  %call57 = call %struct.gpio_desc* @gpiochip_get_desc(%struct.gpio_chip* %132, i32 %133) #9, !dbg !5390
  store %struct.gpio_desc* %call57, %struct.gpio_desc** %desc49, align 8, !dbg !5391
  %134 = load %struct.gpio_desc*, %struct.gpio_desc** %desc49, align 8, !dbg !5392
  %135 = bitcast %struct.gpio_desc* %134 to i8*, !dbg !5392
  %call58 = call zeroext i1 @IS_ERR(i8* %135) #9, !dbg !5394
  br i1 %call58, label %if.then59, label %if.end61, !dbg !5395

if.then59:                                        ; preds = %if.end55
  %136 = load %struct.gpio_desc*, %struct.gpio_desc** %desc49, align 8, !dbg !5396
  %137 = bitcast %struct.gpio_desc* %136 to i8*, !dbg !5396
  %call60 = call i64 @PTR_ERR(i8* %137) #9, !dbg !5397
  store i64 %call60, i64* %retval, align 8, !dbg !5398
  br label %return, !dbg !5398

if.end61:                                         ; preds = %if.end55
  %138 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5399
  %call62 = call i32 @lineinfo_ensure_abi_version(%struct.gpio_chardev_data* %138, i32 1) #9, !dbg !5401
  %tobool63 = icmp ne i32 %call62, 0, !dbg !5401
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !5402

if.then64:                                        ; preds = %if.end61
  store i64 -1, i64* %retval, align 8, !dbg !5403
  br label %return, !dbg !5403

if.end65:                                         ; preds = %if.end61
  %line_offset66 = getelementptr inbounds %struct.gpioline_info, %struct.gpioline_info* %lineinfo50, i32 0, i32 0, !dbg !5404
  %139 = load i32, i32* %line_offset66, align 4, !dbg !5404
  %conv67 = zext i32 %139 to i64, !dbg !5406
  %140 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5407
  %watched_lines = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %140, i32 0, i32 4, !dbg !5408
  %141 = load i64*, i64** %watched_lines, align 8, !dbg !5408
  %call68 = call zeroext i1 @test_and_set_bit(i64 %conv67, i64* %141) #9, !dbg !5409
  br i1 %call68, label %if.then69, label %if.end70, !dbg !5410

if.then69:                                        ; preds = %if.end65
  store i64 -16, i64* %retval, align 8, !dbg !5411
  br label %return, !dbg !5411

if.end70:                                         ; preds = %if.end65
  %142 = load %struct.gpio_desc*, %struct.gpio_desc** %desc49, align 8, !dbg !5412
  call void @gpio_desc_to_lineinfo(%struct.gpio_desc* %142, %struct.gpio_v2_line_info* %lineinfo_v251) #9, !dbg !5413
  call void @gpio_v2_line_info_to_v1(%struct.gpio_v2_line_info* %lineinfo_v251, %struct.gpioline_info* %lineinfo50) #9, !dbg !5414
  %143 = load i8*, i8** %ip, align 8, !dbg !5415
  %144 = bitcast %struct.gpioline_info* %lineinfo50 to i8*, !dbg !5416
  store i8* %143, i8** %to.addr.i286, align 8
  store i8* %144, i8** %from.addr.i287, align 8
  store i64 72, i64* %n.addr.i288, align 8
  %145 = load i8*, i8** %from.addr.i287, align 8, !dbg !5417
  %146 = load i64, i64* %n.addr.i288, align 8, !dbg !5417
  store i8* %145, i8** %addr.addr.i.i280, align 8
  store i64 %146, i64* %bytes.addr.i.i281, align 8
  store i8 1, i8* %is_source.addr.i.i282, align 1
  store i32 -1, i32* %sz.i.i283, align 4, !dbg !5069
  %147 = load i32, i32* %sz.i.i283, align 4, !dbg !5418
  %cmp.i.i289 = icmp sge i32 %147, 0, !dbg !5418
  br i1 %cmp.i.i289, label %land.rhs.i.i292, label %land.end.i.i296, !dbg !5418

land.rhs.i.i292:                                  ; preds = %if.end70
  %148 = load i32, i32* %sz.i.i283, align 4, !dbg !5418
  %conv.i.i290 = sext i32 %148 to i64, !dbg !5418
  %149 = load i64, i64* %bytes.addr.i.i281, align 8, !dbg !5418
  %cmp1.i.i291 = icmp ult i64 %conv.i.i290, %149, !dbg !5418
  br label %land.end.i.i296

land.end.i.i296:                                  ; preds = %land.rhs.i.i292, %if.end70
  %150 = phi i1 [ false, %if.end70 ], [ %cmp1.i.i291, %land.rhs.i.i292 ], !dbg !5419
  %lnot.i.i293 = xor i1 %150, true, !dbg !5418
  %lnot.ext.i.i294 = zext i1 %150 to i32, !dbg !5418
  %conv4.i.i295 = sext i32 %lnot.ext.i.i294 to i64, !dbg !5418
  br i1 %150, label %if.then.i.i297, label %if.end10.i.i312, !dbg !5420

if.then.i.i297:                                   ; preds = %land.end.i.i296
  %151 = load i64, i64* %bytes.addr.i.i281, align 8, !dbg !5421
  %152 = call i1 @llvm.is.constant.i64(i64 %151) #6, !dbg !5422
  br i1 %152, label %if.else.i.i300, label %if.then5.i.i298, !dbg !5423

if.then5.i.i298:                                  ; preds = %if.then.i.i297
  %153 = load i32, i32* %sz.i.i283, align 4, !dbg !5424
  %154 = load i64, i64* %bytes.addr.i.i281, align 8, !dbg !5425
  call void @copy_overflow(i32 %153, i64 %154) #11, !dbg !5426
  br label %if.end9.i.i304, !dbg !5426

if.else.i.i300:                                   ; preds = %if.then.i.i297
  %155 = load i8, i8* %is_source.addr.i.i282, align 1, !dbg !5427
  %tobool6.i.i299 = trunc i8 %155 to i1, !dbg !5427
  br i1 %tobool6.i.i299, label %if.then7.i.i301, label %if.else8.i.i302, !dbg !5428

if.then7.i.i301:                                  ; preds = %if.else.i.i300
  call void @__bad_copy_from() #11, !dbg !5429
  br label %if.end.i.i303, !dbg !5429

if.else8.i.i302:                                  ; preds = %if.else.i.i300
  call void @__bad_copy_to() #11, !dbg !5430
  br label %if.end.i.i303

if.end.i.i303:                                    ; preds = %if.else8.i.i302, %if.then7.i.i301
  br label %if.end9.i.i304

if.end9.i.i304:                                   ; preds = %if.end.i.i303, %if.then5.i.i298
  store i1 false, i1* %retval.i.i279, align 1, !dbg !5431
  br label %check_copy_size.exit.i326, !dbg !5431

if.end10.i.i312:                                  ; preds = %land.end.i.i296
  %156 = load i64, i64* %bytes.addr.i.i281, align 8, !dbg !5070
  %cmp11.i.i305 = icmp ugt i64 %156, 2147483647, !dbg !5070
  %lnot13.i.i306 = xor i1 %cmp11.i.i305, true, !dbg !5070
  %lnot.ext16.i.i307 = zext i1 %cmp11.i.i305 to i32, !dbg !5070
  store i32 %lnot.ext16.i.i307, i32* %__ret_warn_on.i.i284, align 4, !dbg !5070
  %157 = load i32, i32* %__ret_warn_on.i.i284, align 4, !dbg !5432
  %tobool17.i.i308 = icmp ne i32 %157, 0, !dbg !5432
  %lnot18.i.i309 = xor i1 %tobool17.i.i308, true, !dbg !5432
  %lnot.ext21.i.i310 = zext i1 %tobool17.i.i308 to i32, !dbg !5432
  %conv22.i.i311 = sext i32 %lnot.ext21.i.i310 to i64, !dbg !5432
  br i1 %tobool17.i.i308, label %if.then24.i.i313, label %if.end31.i.i319, !dbg !5070

if.then24.i.i313:                                 ; preds = %if.end10.i.i312
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !5433, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !5434, !srcloc !4906
  br label %if.end31.i.i319, !dbg !5435

if.end31.i.i319:                                  ; preds = %if.then24.i.i313, %if.end10.i.i312
  %158 = load i32, i32* %__ret_warn_on.i.i284, align 4, !dbg !5070
  %tobool32.i.i314 = icmp ne i32 %158, 0, !dbg !5070
  %lnot33.i.i315 = xor i1 %tobool32.i.i314, true, !dbg !5070
  %lnot.ext36.i.i316 = zext i1 %tobool32.i.i314 to i32, !dbg !5070
  %conv37.i.i317 = sext i32 %lnot.ext36.i.i316 to i64, !dbg !5070
  store i64 %conv37.i.i317, i64* %tmp.i.i285, align 8, !dbg !5432
  %159 = load i64, i64* %tmp.i.i285, align 8, !dbg !5070
  %tobool38.i.i318 = icmp ne i64 %159, 0, !dbg !5436
  br i1 %tobool38.i.i318, label %if.then39.i.i320, label %if.end40.i.i322, !dbg !5437

if.then39.i.i320:                                 ; preds = %if.end31.i.i319
  store i1 false, i1* %retval.i.i279, align 1, !dbg !5438
  br label %check_copy_size.exit.i326, !dbg !5438

if.end40.i.i322:                                  ; preds = %if.end31.i.i319
  %160 = load i8*, i8** %addr.addr.i.i280, align 8, !dbg !5439
  %161 = load i64, i64* %bytes.addr.i.i281, align 8, !dbg !5440
  %162 = load i8, i8* %is_source.addr.i.i282, align 1, !dbg !5441
  %tobool41.i.i321 = trunc i8 %162 to i1, !dbg !5441
  call void @check_object_size(i8* %160, i64 %161, i1 zeroext %tobool41.i.i321) #11, !dbg !5442
  store i1 true, i1* %retval.i.i279, align 1, !dbg !5443
  br label %check_copy_size.exit.i326, !dbg !5443

check_copy_size.exit.i326:                        ; preds = %if.end40.i.i322, %if.then39.i.i320, %if.end9.i.i304
  %163 = load i1, i1* %retval.i.i279, align 1, !dbg !5444
  %lnot.i323 = xor i1 %163, true, !dbg !5417
  %lnot.ext.i324 = zext i1 %163 to i32, !dbg !5417
  %conv.i325 = sext i32 %lnot.ext.i324 to i64, !dbg !5417
  br i1 %163, label %if.then.i328, label %copy_to_user.exit329, !dbg !5445

if.then.i328:                                     ; preds = %check_copy_size.exit.i326
  %164 = load i8*, i8** %to.addr.i286, align 8, !dbg !5446
  %165 = load i8*, i8** %from.addr.i287, align 8, !dbg !5447
  %166 = load i64, i64* %n.addr.i288, align 8, !dbg !5448
  %call2.i327 = call i64 @_copy_to_user(i8* %164, i8* %165, i64 %166) #11, !dbg !5449
  store i64 %call2.i327, i64* %n.addr.i288, align 8, !dbg !5450
  br label %copy_to_user.exit329, !dbg !5451

copy_to_user.exit329:                             ; preds = %check_copy_size.exit.i326, %if.then.i328
  %167 = load i64, i64* %n.addr.i288, align 8, !dbg !5452
  %tobool72 = icmp ne i64 %167, 0, !dbg !5453
  br i1 %tobool72, label %if.then73, label %if.end77, !dbg !5454

if.then73:                                        ; preds = %copy_to_user.exit329
  %line_offset74 = getelementptr inbounds %struct.gpioline_info, %struct.gpioline_info* %lineinfo50, i32 0, i32 0, !dbg !5455
  %168 = load i32, i32* %line_offset74, align 4, !dbg !5455
  %conv75 = zext i32 %168 to i64, !dbg !5457
  %169 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5458
  %watched_lines76 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %169, i32 0, i32 4, !dbg !5459
  %170 = load i64*, i64** %watched_lines76, align 8, !dbg !5459
  call void @clear_bit(i64 %conv75, i64* %170) #9, !dbg !5460
  store i64 -14, i64* %retval, align 8, !dbg !5461
  br label %return, !dbg !5461

if.end77:                                         ; preds = %copy_to_user.exit329
  store i64 0, i64* %retval, align 8, !dbg !5462
  br label %return, !dbg !5462

if.else78:                                        ; preds = %if.else44
  %171 = load i32, i32* %cmd.addr, align 4, !dbg !5463
  %conv79 = zext i32 %171 to i64, !dbg !5463
  %cmp80 = icmp eq i64 %conv79, 3238048773, !dbg !5464
  br i1 %cmp80, label %if.then85, label %lor.lhs.false, !dbg !5465

lor.lhs.false:                                    ; preds = %if.else78
  %172 = load i32, i32* %cmd.addr, align 4, !dbg !5466
  %conv82 = zext i32 %172 to i64, !dbg !5466
  %cmp83 = icmp eq i64 %conv82, 3238048774, !dbg !5467
  br i1 %cmp83, label %if.then85, label %if.else91, !dbg !5468

if.then85:                                        ; preds = %lor.lhs.false, %if.else78
  %173 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5469
  %174 = load i8*, i8** %ip, align 8, !dbg !5471
  %175 = load i32, i32* %cmd.addr, align 4, !dbg !5472
  %conv86 = zext i32 %175 to i64, !dbg !5472
  %cmp87 = icmp eq i64 %conv86, 3238048774, !dbg !5473
  %call89 = call i32 @lineinfo_get(%struct.gpio_chardev_data* %173, i8* %174, i1 zeroext %cmp87) #9, !dbg !5474
  %conv90 = sext i32 %call89 to i64, !dbg !5474
  store i64 %conv90, i64* %retval, align 8, !dbg !5475
  br label %return, !dbg !5475

if.else91:                                        ; preds = %lor.lhs.false
  %176 = load i32, i32* %cmd.addr, align 4, !dbg !5476
  %conv92 = zext i32 %176 to i64, !dbg !5476
  %cmp93 = icmp eq i64 %conv92, 3260068871, !dbg !5477
  br i1 %cmp93, label %if.then95, label %if.else98, !dbg !5478

if.then95:                                        ; preds = %if.else91
  %177 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5479
  %178 = load i8*, i8** %ip, align 8, !dbg !5481
  %call96 = call i32 @linereq_create(%struct.gpio_device* %177, i8* %178) #9, !dbg !5482
  %conv97 = sext i32 %call96 to i64, !dbg !5482
  store i64 %conv97, i64* %retval, align 8, !dbg !5483
  br label %return, !dbg !5483

if.else98:                                        ; preds = %if.else91
  %179 = load i32, i32* %cmd.addr, align 4, !dbg !5484
  %conv99 = zext i32 %179 to i64, !dbg !5484
  %cmp100 = icmp eq i64 %conv99, 3221533708, !dbg !5485
  br i1 %cmp100, label %if.then102, label %if.end119, !dbg !5486

if.then102:                                       ; preds = %if.else98
  %180 = bitcast i32* %offset to i8*, !dbg !5487
  %181 = load i8*, i8** %ip, align 8, !dbg !5488
  store i8* %180, i8** %to.addr.i337, align 8
  store i8* %181, i8** %from.addr.i338, align 8
  store i64 4, i64* %n.addr.i339, align 8
  %182 = load i8*, i8** %to.addr.i337, align 8, !dbg !5489
  %183 = load i64, i64* %n.addr.i339, align 8, !dbg !5489
  store i8* %182, i8** %addr.addr.i.i331, align 8
  store i64 %183, i64* %bytes.addr.i.i332, align 8
  store i8 0, i8* %is_source.addr.i.i333, align 1
  store i32 -1, i32* %sz.i.i334, align 4, !dbg !5054
  %184 = load i32, i32* %sz.i.i334, align 4, !dbg !5490
  %cmp.i.i340 = icmp sge i32 %184, 0, !dbg !5490
  br i1 %cmp.i.i340, label %land.rhs.i.i343, label %land.end.i.i347, !dbg !5490

land.rhs.i.i343:                                  ; preds = %if.then102
  %185 = load i32, i32* %sz.i.i334, align 4, !dbg !5490
  %conv.i.i341 = sext i32 %185 to i64, !dbg !5490
  %186 = load i64, i64* %bytes.addr.i.i332, align 8, !dbg !5490
  %cmp1.i.i342 = icmp ult i64 %conv.i.i341, %186, !dbg !5490
  br label %land.end.i.i347

land.end.i.i347:                                  ; preds = %land.rhs.i.i343, %if.then102
  %187 = phi i1 [ false, %if.then102 ], [ %cmp1.i.i342, %land.rhs.i.i343 ], !dbg !5491
  %lnot.i.i344 = xor i1 %187, true, !dbg !5490
  %lnot.ext.i.i345 = zext i1 %187 to i32, !dbg !5490
  %conv4.i.i346 = sext i32 %lnot.ext.i.i345 to i64, !dbg !5490
  br i1 %187, label %if.then.i.i348, label %if.end10.i.i363, !dbg !5492

if.then.i.i348:                                   ; preds = %land.end.i.i347
  %188 = load i64, i64* %bytes.addr.i.i332, align 8, !dbg !5493
  %189 = call i1 @llvm.is.constant.i64(i64 %188) #6, !dbg !5494
  br i1 %189, label %if.else.i.i351, label %if.then5.i.i349, !dbg !5495

if.then5.i.i349:                                  ; preds = %if.then.i.i348
  %190 = load i32, i32* %sz.i.i334, align 4, !dbg !5496
  %191 = load i64, i64* %bytes.addr.i.i332, align 8, !dbg !5497
  call void @copy_overflow(i32 %190, i64 %191) #11, !dbg !5498
  br label %if.end9.i.i355, !dbg !5498

if.else.i.i351:                                   ; preds = %if.then.i.i348
  %192 = load i8, i8* %is_source.addr.i.i333, align 1, !dbg !5499
  %tobool6.i.i350 = trunc i8 %192 to i1, !dbg !5499
  br i1 %tobool6.i.i350, label %if.then7.i.i352, label %if.else8.i.i353, !dbg !5500

if.then7.i.i352:                                  ; preds = %if.else.i.i351
  call void @__bad_copy_from() #11, !dbg !5501
  br label %if.end.i.i354, !dbg !5501

if.else8.i.i353:                                  ; preds = %if.else.i.i351
  call void @__bad_copy_to() #11, !dbg !5502
  br label %if.end.i.i354

if.end.i.i354:                                    ; preds = %if.else8.i.i353, %if.then7.i.i352
  br label %if.end9.i.i355

if.end9.i.i355:                                   ; preds = %if.end.i.i354, %if.then5.i.i349
  store i1 false, i1* %retval.i.i330, align 1, !dbg !5503
  br label %check_copy_size.exit.i377, !dbg !5503

if.end10.i.i363:                                  ; preds = %land.end.i.i347
  %193 = load i64, i64* %bytes.addr.i.i332, align 8, !dbg !5055
  %cmp11.i.i356 = icmp ugt i64 %193, 2147483647, !dbg !5055
  %lnot13.i.i357 = xor i1 %cmp11.i.i356, true, !dbg !5055
  %lnot.ext16.i.i358 = zext i1 %cmp11.i.i356 to i32, !dbg !5055
  store i32 %lnot.ext16.i.i358, i32* %__ret_warn_on.i.i335, align 4, !dbg !5055
  %194 = load i32, i32* %__ret_warn_on.i.i335, align 4, !dbg !5504
  %tobool17.i.i359 = icmp ne i32 %194, 0, !dbg !5504
  %lnot18.i.i360 = xor i1 %tobool17.i.i359, true, !dbg !5504
  %lnot.ext21.i.i361 = zext i1 %tobool17.i.i359 to i32, !dbg !5504
  %conv22.i.i362 = sext i32 %lnot.ext21.i.i361 to i64, !dbg !5504
  br i1 %tobool17.i.i359, label %if.then24.i.i364, label %if.end31.i.i370, !dbg !5055

if.then24.i.i364:                                 ; preds = %if.end10.i.i363
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !5505, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !5506, !srcloc !4906
  br label %if.end31.i.i370, !dbg !5507

if.end31.i.i370:                                  ; preds = %if.then24.i.i364, %if.end10.i.i363
  %195 = load i32, i32* %__ret_warn_on.i.i335, align 4, !dbg !5055
  %tobool32.i.i365 = icmp ne i32 %195, 0, !dbg !5055
  %lnot33.i.i366 = xor i1 %tobool32.i.i365, true, !dbg !5055
  %lnot.ext36.i.i367 = zext i1 %tobool32.i.i365 to i32, !dbg !5055
  %conv37.i.i368 = sext i32 %lnot.ext36.i.i367 to i64, !dbg !5055
  store i64 %conv37.i.i368, i64* %tmp.i.i336, align 8, !dbg !5504
  %196 = load i64, i64* %tmp.i.i336, align 8, !dbg !5055
  %tobool38.i.i369 = icmp ne i64 %196, 0, !dbg !5508
  br i1 %tobool38.i.i369, label %if.then39.i.i371, label %if.end40.i.i373, !dbg !5509

if.then39.i.i371:                                 ; preds = %if.end31.i.i370
  store i1 false, i1* %retval.i.i330, align 1, !dbg !5510
  br label %check_copy_size.exit.i377, !dbg !5510

if.end40.i.i373:                                  ; preds = %if.end31.i.i370
  %197 = load i8*, i8** %addr.addr.i.i331, align 8, !dbg !5511
  %198 = load i64, i64* %bytes.addr.i.i332, align 8, !dbg !5512
  %199 = load i8, i8* %is_source.addr.i.i333, align 1, !dbg !5513
  %tobool41.i.i372 = trunc i8 %199 to i1, !dbg !5513
  call void @check_object_size(i8* %197, i64 %198, i1 zeroext %tobool41.i.i372) #11, !dbg !5514
  store i1 true, i1* %retval.i.i330, align 1, !dbg !5515
  br label %check_copy_size.exit.i377, !dbg !5515

check_copy_size.exit.i377:                        ; preds = %if.end40.i.i373, %if.then39.i.i371, %if.end9.i.i355
  %200 = load i1, i1* %retval.i.i330, align 1, !dbg !5516
  %lnot.i374 = xor i1 %200, true, !dbg !5489
  %lnot.ext.i375 = zext i1 %200 to i32, !dbg !5489
  %conv.i376 = sext i32 %lnot.ext.i375 to i64, !dbg !5489
  br i1 %200, label %if.then.i379, label %copy_from_user.exit380, !dbg !5517

if.then.i379:                                     ; preds = %check_copy_size.exit.i377
  %201 = load i8*, i8** %to.addr.i337, align 8, !dbg !5518
  %202 = load i8*, i8** %from.addr.i338, align 8, !dbg !5519
  %203 = load i64, i64* %n.addr.i339, align 8, !dbg !5520
  %call2.i378 = call i64 @_copy_from_user(i8* %201, i8* %202, i64 %203) #11, !dbg !5521
  store i64 %call2.i378, i64* %n.addr.i339, align 8, !dbg !5522
  br label %copy_from_user.exit380, !dbg !5523

copy_from_user.exit380:                           ; preds = %check_copy_size.exit.i377, %if.then.i379
  %204 = load i64, i64* %n.addr.i339, align 8, !dbg !5524
  %tobool104 = icmp ne i64 %204, 0, !dbg !5525
  br i1 %tobool104, label %if.then105, label %if.end106, !dbg !5526

if.then105:                                       ; preds = %copy_from_user.exit380
  store i64 -14, i64* %retval, align 8, !dbg !5527
  br label %return, !dbg !5527

if.end106:                                        ; preds = %copy_from_user.exit380
  %205 = load i32, i32* %offset, align 4, !dbg !5528
  %206 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5530
  %gdev107 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %206, i32 0, i32 0, !dbg !5531
  %207 = load %struct.gpio_device*, %struct.gpio_device** %gdev107, align 8, !dbg !5531
  %ngpio108 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %207, i32 0, i32 8, !dbg !5532
  %208 = load i16, i16* %ngpio108, align 4, !dbg !5532
  %conv109 = zext i16 %208 to i32, !dbg !5530
  %cmp110 = icmp uge i32 %205, %conv109, !dbg !5533
  br i1 %cmp110, label %if.then112, label %if.end113, !dbg !5534

if.then112:                                       ; preds = %if.end106
  store i64 -22, i64* %retval, align 8, !dbg !5535
  br label %return, !dbg !5535

if.end113:                                        ; preds = %if.end106
  %209 = load i32, i32* %offset, align 4, !dbg !5536
  %conv114 = zext i32 %209 to i64, !dbg !5536
  %210 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5538
  %watched_lines115 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %210, i32 0, i32 4, !dbg !5539
  %211 = load i64*, i64** %watched_lines115, align 8, !dbg !5539
  %call116 = call zeroext i1 @test_and_clear_bit(i64 %conv114, i64* %211) #9, !dbg !5540
  br i1 %call116, label %if.end118, label %if.then117, !dbg !5541

if.then117:                                       ; preds = %if.end113
  store i64 -16, i64* %retval, align 8, !dbg !5542
  br label %return, !dbg !5542

if.end118:                                        ; preds = %if.end113
  store i64 0, i64* %retval, align 8, !dbg !5543
  br label %return, !dbg !5543

if.end119:                                        ; preds = %if.else98
  br label %if.end120

if.end120:                                        ; preds = %if.end119
  br label %if.end121

if.end121:                                        ; preds = %if.end120
  br label %if.end122

if.end122:                                        ; preds = %if.end121
  br label %if.end123

if.end123:                                        ; preds = %if.end122
  br label %if.end124

if.end124:                                        ; preds = %if.end123
  br label %if.end125

if.end125:                                        ; preds = %if.end124
  br label %if.end126

if.end126:                                        ; preds = %if.end125
  store i64 -22, i64* %retval, align 8, !dbg !5544
  br label %return, !dbg !5544

return:                                           ; preds = %if.end126, %if.end118, %if.then117, %if.then112, %if.then105, %if.then95, %if.then85, %if.end77, %if.then73, %if.then69, %if.then64, %if.then59, %if.then54, %if.then41, %if.then34, %if.end29, %if.then28, %if.then23, %if.then19, %if.end12, %if.then11, %if.then
  %212 = load i64, i64* %retval, align 8, !dbg !5545
  ret i64 %212, !dbg !5545
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpio_chrdev_open(%struct.inode* %inode, %struct.file* %file) #0 !dbg !4556 {
entry:
  %retval = alloca i32, align 4
  %inode.addr = alloca %struct.inode*, align 8
  %file.addr = alloca %struct.file*, align 8
  %gdev = alloca %struct.gpio_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.gpio_device*, align 8
  %cdev = alloca %struct.gpio_chardev_data*, align 8
  %ret = alloca i32, align 4
  %__tmp = alloca %struct.anon.68*, align 8
  %__kfifo = alloca %struct.__kfifo*, align 8
  %tmp12 = alloca i8*, align 8
  store %struct.inode* %inode, %struct.inode** %inode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.inode** %inode.addr, metadata !5546, metadata !DIExpression()), !dbg !5547
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !5548, metadata !DIExpression()), !dbg !5549
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %gdev, metadata !5550, metadata !DIExpression()), !dbg !5551
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5552, metadata !DIExpression()), !dbg !5554
  %0 = load %struct.inode*, %struct.inode** %inode.addr, align 8, !dbg !5554
  %1 = getelementptr inbounds %struct.inode, %struct.inode* %0, i32 0, i32 40, !dbg !5554
  %i_cdev = bitcast %union.anon.62* %1 to %struct.cdev**, !dbg !5554
  %2 = load %struct.cdev*, %struct.cdev** %i_cdev, align 8, !dbg !5554
  %3 = bitcast %struct.cdev* %2 to i8*, !dbg !5554
  store i8* %3, i8** %__mptr, align 8, !dbg !5554
  br label %do.body, !dbg !5554

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5555

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !5554
  %add.ptr = getelementptr i8, i8* %4, i64 -704, !dbg !5554
  %5 = bitcast i8* %add.ptr to %struct.gpio_device*, !dbg !5554
  store %struct.gpio_device* %5, %struct.gpio_device** %tmp, align 8, !dbg !5555
  %6 = load %struct.gpio_device*, %struct.gpio_device** %tmp, align 8, !dbg !5554
  store %struct.gpio_device* %6, %struct.gpio_device** %gdev, align 8, !dbg !5551
  call void @llvm.dbg.declare(metadata %struct.gpio_chardev_data** %cdev, metadata !5557, metadata !DIExpression()), !dbg !5558
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5559, metadata !DIExpression()), !dbg !5560
  store i32 -12, i32* %ret, align 4, !dbg !5560
  %7 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5561
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %7, i32 0, i32 5, !dbg !5563
  %8 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !5563
  %tobool = icmp ne %struct.gpio_chip* %8, null, !dbg !5561
  br i1 %tobool, label %if.end, label %if.then, !dbg !5564

if.then:                                          ; preds = %do.end
  store i32 -19, i32* %retval, align 4, !dbg !5565
  br label %return, !dbg !5565

if.end:                                           ; preds = %do.end
  %call = call i8* @kzalloc(i64 9304, i32 3264) #9, !dbg !5566
  %9 = bitcast i8* %call to %struct.gpio_chardev_data*, !dbg !5566
  store %struct.gpio_chardev_data* %9, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5567
  %10 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5568
  %tobool1 = icmp ne %struct.gpio_chardev_data* %10, null, !dbg !5568
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !5570

if.then2:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !5571
  br label %return, !dbg !5571

if.end3:                                          ; preds = %if.end
  %11 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5572
  %chip4 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %11, i32 0, i32 5, !dbg !5573
  %12 = load %struct.gpio_chip*, %struct.gpio_chip** %chip4, align 8, !dbg !5573
  %ngpio = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %12, i32 0, i32 19, !dbg !5574
  %13 = load i16, i16* %ngpio, align 4, !dbg !5574
  %conv = zext i16 %13 to i32, !dbg !5572
  %call5 = call i64* @bitmap_zalloc(i32 %conv, i32 3264) #9, !dbg !5575
  %14 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5576
  %watched_lines = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %14, i32 0, i32 4, !dbg !5577
  store i64* %call5, i64** %watched_lines, align 8, !dbg !5578
  %15 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5579
  %watched_lines6 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %15, i32 0, i32 4, !dbg !5581
  %16 = load i64*, i64** %watched_lines6, align 8, !dbg !5581
  %tobool7 = icmp ne i64* %16, null, !dbg !5579
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !5582

if.then8:                                         ; preds = %if.end3
  br label %out_free_cdev, !dbg !5583

if.end9:                                          ; preds = %if.end3
  br label %do.body10, !dbg !5584

do.body10:                                        ; preds = %if.end9
  %17 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5585
  %wait = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %17, i32 0, i32 1, !dbg !5585
  call void @__init_waitqueue_head(%struct.wait_queue_head* %wait, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0), %struct.lock_class_key* @gpio_chrdev_open.__key) #9, !dbg !5585
  br label %do.end11, !dbg !5585

do.end11:                                         ; preds = %do.body10
  call void @llvm.dbg.declare(metadata %struct.anon.68** %__tmp, metadata !5587, metadata !DIExpression()), !dbg !5589
  %18 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5589
  %events = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %18, i32 0, i32 2, !dbg !5589
  store %struct.anon.68* %events, %struct.anon.68** %__tmp, align 8, !dbg !5589
  call void @llvm.dbg.declare(metadata %struct.__kfifo** %__kfifo, metadata !5590, metadata !DIExpression()), !dbg !5589
  %19 = load %struct.anon.68*, %struct.anon.68** %__tmp, align 8, !dbg !5589
  %20 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %19, i32 0, i32 0, !dbg !5589
  %kfifo = bitcast %union.anon.69* %20 to %struct.__kfifo*, !dbg !5589
  store %struct.__kfifo* %kfifo, %struct.__kfifo** %__kfifo, align 8, !dbg !5589
  %21 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo, align 8, !dbg !5589
  %in = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %21, i32 0, i32 0, !dbg !5589
  store i32 0, i32* %in, align 8, !dbg !5589
  %22 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo, align 8, !dbg !5589
  %out = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %22, i32 0, i32 1, !dbg !5589
  store i32 0, i32* %out, align 4, !dbg !5589
  %23 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo, align 8, !dbg !5589
  %mask = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %23, i32 0, i32 2, !dbg !5589
  store i32 31, i32* %mask, align 8, !dbg !5589
  %24 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo, align 8, !dbg !5589
  %esize = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %24, i32 0, i32 3, !dbg !5589
  store i32 288, i32* %esize, align 4, !dbg !5589
  %25 = load %struct.anon.68*, %struct.anon.68** %__tmp, align 8, !dbg !5589
  %buf = getelementptr inbounds %struct.anon.68, %struct.anon.68* %25, i32 0, i32 1, !dbg !5589
  %arraydecay = getelementptr inbounds [32 x %struct.gpio_v2_line_info_changed], [32 x %struct.gpio_v2_line_info_changed]* %buf, i64 0, i64 0, !dbg !5589
  %26 = bitcast %struct.gpio_v2_line_info_changed* %arraydecay to i8*, !dbg !5589
  %27 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo, align 8, !dbg !5589
  %data = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %27, i32 0, i32 4, !dbg !5589
  store i8* %26, i8** %data, align 8, !dbg !5589
  store i8* %26, i8** %tmp12, align 8, !dbg !5589
  %28 = load i8*, i8** %tmp12, align 8, !dbg !5589
  %29 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5591
  %30 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5592
  %gdev13 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %30, i32 0, i32 0, !dbg !5593
  store %struct.gpio_device* %29, %struct.gpio_device** %gdev13, align 8, !dbg !5594
  %31 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5595
  %lineinfo_changed_nb = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %31, i32 0, i32 3, !dbg !5596
  %notifier_call = getelementptr inbounds %struct.notifier_block, %struct.notifier_block* %lineinfo_changed_nb, i32 0, i32 0, !dbg !5597
  store i32 (%struct.notifier_block*, i64, i8*)* @lineinfo_changed_notify, i32 (%struct.notifier_block*, i64, i8*)** %notifier_call, align 8, !dbg !5598
  %32 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5599
  %notifier = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %32, i32 0, i32 12, !dbg !5600
  %33 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5601
  %lineinfo_changed_nb14 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %33, i32 0, i32 3, !dbg !5602
  %call15 = call i32 @blocking_notifier_chain_register(%struct.blocking_notifier_head* %notifier, %struct.notifier_block* %lineinfo_changed_nb14) #9, !dbg !5603
  store i32 %call15, i32* %ret, align 4, !dbg !5604
  %34 = load i32, i32* %ret, align 4, !dbg !5605
  %tobool16 = icmp ne i32 %34, 0, !dbg !5605
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !5607

if.then17:                                        ; preds = %do.end11
  br label %out_free_bitmap, !dbg !5608

if.end18:                                         ; preds = %do.end11
  %35 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5609
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %35, i32 0, i32 1, !dbg !5610
  %call19 = call %struct.device* @get_device(%struct.device* %dev) #9, !dbg !5611
  %36 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5612
  %37 = bitcast %struct.gpio_chardev_data* %36 to i8*, !dbg !5612
  %38 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !5613
  %private_data = getelementptr inbounds %struct.file, %struct.file* %38, i32 0, i32 15, !dbg !5614
  store i8* %37, i8** %private_data, align 8, !dbg !5615
  %39 = load %struct.inode*, %struct.inode** %inode.addr, align 8, !dbg !5616
  %40 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !5617
  %call20 = call i32 @nonseekable_open(%struct.inode* %39, %struct.file* %40) #9, !dbg !5618
  store i32 %call20, i32* %ret, align 4, !dbg !5619
  %41 = load i32, i32* %ret, align 4, !dbg !5620
  %tobool21 = icmp ne i32 %41, 0, !dbg !5620
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !5622

if.then22:                                        ; preds = %if.end18
  br label %out_unregister_notifier, !dbg !5623

if.end23:                                         ; preds = %if.end18
  %42 = load i32, i32* %ret, align 4, !dbg !5624
  store i32 %42, i32* %retval, align 4, !dbg !5625
  br label %return, !dbg !5625

out_unregister_notifier:                          ; preds = %if.then22
  call void @llvm.dbg.label(metadata !5626), !dbg !5627
  %43 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5628
  %notifier24 = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %43, i32 0, i32 12, !dbg !5629
  %44 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5630
  %lineinfo_changed_nb25 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %44, i32 0, i32 3, !dbg !5631
  %call26 = call i32 @blocking_notifier_chain_unregister(%struct.blocking_notifier_head* %notifier24, %struct.notifier_block* %lineinfo_changed_nb25) #9, !dbg !5632
  br label %out_free_bitmap, !dbg !5632

out_free_bitmap:                                  ; preds = %out_unregister_notifier, %if.then17
  call void @llvm.dbg.label(metadata !5633), !dbg !5634
  %45 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5635
  %watched_lines27 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %45, i32 0, i32 4, !dbg !5636
  %46 = load i64*, i64** %watched_lines27, align 8, !dbg !5636
  call void @bitmap_free(i64* %46) #9, !dbg !5637
  br label %out_free_cdev, !dbg !5637

out_free_cdev:                                    ; preds = %out_free_bitmap, %if.then8
  call void @llvm.dbg.label(metadata !5638), !dbg !5639
  %47 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5640
  %48 = bitcast %struct.gpio_chardev_data* %47 to i8*, !dbg !5640
  call void @kfree(i8* %48) #9, !dbg !5641
  %49 = load i32, i32* %ret, align 4, !dbg !5642
  store i32 %49, i32* %retval, align 4, !dbg !5643
  br label %return, !dbg !5643

return:                                           ; preds = %out_free_cdev, %if.end23, %if.then2, %if.then
  %50 = load i32, i32* %retval, align 4, !dbg !5644
  ret i32 %50, !dbg !5644
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpio_chrdev_release(%struct.inode* %inode, %struct.file* %file) #0 !dbg !5645 {
entry:
  %inode.addr = alloca %struct.inode*, align 8
  %file.addr = alloca %struct.file*, align 8
  %cdev = alloca %struct.gpio_chardev_data*, align 8
  %gdev = alloca %struct.gpio_device*, align 8
  store %struct.inode* %inode, %struct.inode** %inode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.inode** %inode.addr, metadata !5646, metadata !DIExpression()), !dbg !5647
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !5648, metadata !DIExpression()), !dbg !5649
  call void @llvm.dbg.declare(metadata %struct.gpio_chardev_data** %cdev, metadata !5650, metadata !DIExpression()), !dbg !5651
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !5652
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !5653
  %1 = load i8*, i8** %private_data, align 8, !dbg !5653
  %2 = bitcast i8* %1 to %struct.gpio_chardev_data*, !dbg !5652
  store %struct.gpio_chardev_data* %2, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5651
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %gdev, metadata !5654, metadata !DIExpression()), !dbg !5655
  %3 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5656
  %gdev1 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %3, i32 0, i32 0, !dbg !5657
  %4 = load %struct.gpio_device*, %struct.gpio_device** %gdev1, align 8, !dbg !5657
  store %struct.gpio_device* %4, %struct.gpio_device** %gdev, align 8, !dbg !5655
  %5 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5658
  %watched_lines = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %5, i32 0, i32 4, !dbg !5659
  %6 = load i64*, i64** %watched_lines, align 8, !dbg !5659
  call void @bitmap_free(i64* %6) #9, !dbg !5660
  %7 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5661
  %notifier = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %7, i32 0, i32 12, !dbg !5662
  %8 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5663
  %lineinfo_changed_nb = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %8, i32 0, i32 3, !dbg !5664
  %call = call i32 @blocking_notifier_chain_unregister(%struct.blocking_notifier_head* %notifier, %struct.notifier_block* %lineinfo_changed_nb) #9, !dbg !5665
  %9 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !5666
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %9, i32 0, i32 1, !dbg !5667
  call void @put_device(%struct.device* %dev) #9, !dbg !5668
  %10 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !5669
  %11 = bitcast %struct.gpio_chardev_data* %10 to i8*, !dbg !5669
  call void @kfree(i8* %11) #9, !dbg !5670
  ret i32 0, !dbg !5671
}

; Function Attrs: noredzone
declare dso_local i32 @autoremove_wake_function(%struct.wait_queue_entry*, i32, i32, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @do_wait_intr(%struct.wait_queue_head*, %struct.wait_queue_entry*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__remove_wait_queue(%struct.wait_queue_head* %wq_head, %struct.wait_queue_entry* %wq_entry) #0 !dbg !5672 {
entry:
  %wq_head.addr = alloca %struct.wait_queue_head*, align 8
  %wq_entry.addr = alloca %struct.wait_queue_entry*, align 8
  store %struct.wait_queue_head* %wq_head, %struct.wait_queue_head** %wq_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wait_queue_head** %wq_head.addr, metadata !5676, metadata !DIExpression()), !dbg !5677
  store %struct.wait_queue_entry* %wq_entry, %struct.wait_queue_entry** %wq_entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry** %wq_entry.addr, metadata !5678, metadata !DIExpression()), !dbg !5679
  %0 = load %struct.wait_queue_entry*, %struct.wait_queue_entry** %wq_entry.addr, align 8, !dbg !5680
  %entry1 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %0, i32 0, i32 3, !dbg !5681
  call void @list_del(%struct.list_head* %entry1) #9, !dbg !5682
  ret void, !dbg !5683
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__kfifo_uint_must_check_helper(i32 %val) #0 !dbg !5684 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !5687, metadata !DIExpression()), !dbg !5688
  %0 = load i32, i32* %val.addr, align 4, !dbg !5689
  ret i32 %0, !dbg !5690
}

; Function Attrs: noredzone
declare dso_local i32 @__kfifo_out(%struct.__kfifo*, i8*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpio_v2_line_info_changed_to_v1(%struct.gpio_v2_line_info_changed* %lic_v2, %struct.gpioline_info_changed* %lic_v1) #0 !dbg !5691 {
entry:
  %lic_v2.addr = alloca %struct.gpio_v2_line_info_changed*, align 8
  %lic_v1.addr = alloca %struct.gpioline_info_changed*, align 8
  store %struct.gpio_v2_line_info_changed* %lic_v2, %struct.gpio_v2_line_info_changed** %lic_v2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_info_changed** %lic_v2.addr, metadata !5695, metadata !DIExpression()), !dbg !5696
  store %struct.gpioline_info_changed* %lic_v1, %struct.gpioline_info_changed** %lic_v1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpioline_info_changed** %lic_v1.addr, metadata !5697, metadata !DIExpression()), !dbg !5698
  %0 = load %struct.gpio_v2_line_info_changed*, %struct.gpio_v2_line_info_changed** %lic_v2.addr, align 8, !dbg !5699
  %info = getelementptr inbounds %struct.gpio_v2_line_info_changed, %struct.gpio_v2_line_info_changed* %0, i32 0, i32 0, !dbg !5700
  %1 = load %struct.gpioline_info_changed*, %struct.gpioline_info_changed** %lic_v1.addr, align 8, !dbg !5701
  %info1 = getelementptr inbounds %struct.gpioline_info_changed, %struct.gpioline_info_changed* %1, i32 0, i32 0, !dbg !5702
  call void @gpio_v2_line_info_to_v1(%struct.gpio_v2_line_info* %info, %struct.gpioline_info* %info1) #9, !dbg !5703
  %2 = load %struct.gpio_v2_line_info_changed*, %struct.gpio_v2_line_info_changed** %lic_v2.addr, align 8, !dbg !5704
  %timestamp_ns = getelementptr inbounds %struct.gpio_v2_line_info_changed, %struct.gpio_v2_line_info_changed* %2, i32 0, i32 1, !dbg !5705
  %3 = load i64, i64* %timestamp_ns, align 8, !dbg !5705
  %4 = load %struct.gpioline_info_changed*, %struct.gpioline_info_changed** %lic_v1.addr, align 8, !dbg !5706
  %timestamp = getelementptr inbounds %struct.gpioline_info_changed, %struct.gpioline_info_changed* %4, i32 0, i32 1, !dbg !5707
  store i64 %3, i64* %timestamp, align 8, !dbg !5708
  %5 = load %struct.gpio_v2_line_info_changed*, %struct.gpio_v2_line_info_changed** %lic_v2.addr, align 8, !dbg !5709
  %event_type = getelementptr inbounds %struct.gpio_v2_line_info_changed, %struct.gpio_v2_line_info_changed* %5, i32 0, i32 2, !dbg !5710
  %6 = load i32, i32* %event_type, align 8, !dbg !5710
  %7 = load %struct.gpioline_info_changed*, %struct.gpioline_info_changed** %lic_v1.addr, align 8, !dbg !5711
  %event_type2 = getelementptr inbounds %struct.gpioline_info_changed, %struct.gpioline_info_changed* %7, i32 0, i32 2, !dbg !5712
  store i32 %6, i32* %event_type2, align 8, !dbg !5713
  ret void, !dbg !5714
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !5715 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !5719, metadata !DIExpression()), !dbg !5720
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !5721
  call void @__list_del_entry(%struct.list_head* %0) #9, !dbg !5722
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !5723
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !5724
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !5725
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !5726
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !5727
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !5728
  ret void, !dbg !5729
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !5730 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !5731, metadata !DIExpression()), !dbg !5732
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !5733
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #9, !dbg !5735
  br i1 %call, label %if.end, label %if.then, !dbg !5736

if.then:                                          ; preds = %entry
  br label %return, !dbg !5737

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !5738
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !5739
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !5739
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !5740
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !5741
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5741
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #9, !dbg !5742
  br label %return, !dbg !5743

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5743
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !5744 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !5747, metadata !DIExpression()), !dbg !5748
  ret i1 true, !dbg !5749
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !5750 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !5753, metadata !DIExpression()), !dbg !5754
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !5755, metadata !DIExpression()), !dbg !5756
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !5757
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !5758
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !5759
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !5760
  br label %do.body, !dbg !5761

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !5762

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !5764

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !5762

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !5766
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !5766
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !5766
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !5766
  br label %do.end5, !dbg !5766

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !5762

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !5768
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !5769 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5773, metadata !DIExpression()), !dbg !5774
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !5775, metadata !DIExpression()), !dbg !5776
  ret i1 true, !dbg !5777
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !5778 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5782, metadata !DIExpression()), !dbg !5783
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5784, metadata !DIExpression()), !dbg !5785
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !5786, metadata !DIExpression()), !dbg !5787
  ret void, !dbg !5788
}

; Function Attrs: noredzone
declare dso_local i64 @_copy_to_user(i8*, i8*, i64) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #0 !dbg !5789 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !5792, metadata !DIExpression()), !dbg !5793
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !5794, metadata !DIExpression()), !dbg !5795
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5796, metadata !DIExpression()), !dbg !5798
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !5798
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !5799
  %tobool = icmp ne i32 %0, 0, !dbg !5799
  %lnot = xor i1 %tobool, true, !dbg !5799
  %lnot1 = xor i1 %lnot, true, !dbg !5799
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5799
  %conv = sext i32 %lnot.ext to i64, !dbg !5799
  %tobool2 = icmp ne i64 %conv, 0, !dbg !5799
  br i1 %tobool2, label %if.then, label %if.end, !dbg !5798

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5799

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !5801

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !5803

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !5801
  %2 = load i64, i64* %count.addr, align 8, !dbg !5801
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 %1, i64 %2) #9, !dbg !5801
  br label %do.body4, !dbg !5801

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !5805

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !5807

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !5805

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 134, i32 2313, i64 12) #6, !dbg !5809, !srcloc !5811
  br label %do.end8, !dbg !5809

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #6, !dbg !5812, !srcloc !5814
  br label %do.body9, !dbg !5805

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !5815

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !5805

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !5801

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !5817

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !5801

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !5801

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !5798
  %tobool15 = icmp ne i32 %3, 0, !dbg !5798
  %lnot16 = xor i1 %tobool15, true, !dbg !5798
  %lnot18 = xor i1 %lnot16, true, !dbg !5798
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !5798
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !5798
  store i64 %conv20, i64* %tmp, align 8, !dbg !5799
  %4 = load i64, i64* %tmp, align 8, !dbg !5798
  ret void, !dbg !5819
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #2

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #0 !dbg !5820 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5823, metadata !DIExpression()), !dbg !5824
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !5825, metadata !DIExpression()), !dbg !5826
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !5827, metadata !DIExpression()), !dbg !5828
  ret void, !dbg !5829
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpio_v2_line_info_to_v1(%struct.gpio_v2_line_info* %info_v2, %struct.gpioline_info* %info_v1) #0 !dbg !5830 {
entry:
  %info_v2.addr = alloca %struct.gpio_v2_line_info*, align 8
  %info_v1.addr = alloca %struct.gpioline_info*, align 8
  %flagsv2 = alloca i64, align 8
  store %struct.gpio_v2_line_info* %info_v2, %struct.gpio_v2_line_info** %info_v2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_info** %info_v2.addr, metadata !5835, metadata !DIExpression()), !dbg !5836
  store %struct.gpioline_info* %info_v1, %struct.gpioline_info** %info_v1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpioline_info** %info_v1.addr, metadata !5837, metadata !DIExpression()), !dbg !5838
  call void @llvm.dbg.declare(metadata i64* %flagsv2, metadata !5839, metadata !DIExpression()), !dbg !5840
  %0 = load %struct.gpio_v2_line_info*, %struct.gpio_v2_line_info** %info_v2.addr, align 8, !dbg !5841
  %flags = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %0, i32 0, i32 4, !dbg !5842
  %1 = load i64, i64* %flags, align 8, !dbg !5842
  store i64 %1, i64* %flagsv2, align 8, !dbg !5840
  %2 = load %struct.gpioline_info*, %struct.gpioline_info** %info_v1.addr, align 8, !dbg !5843
  %name = getelementptr inbounds %struct.gpioline_info, %struct.gpioline_info* %2, i32 0, i32 2, !dbg !5844
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !5845
  %3 = load %struct.gpio_v2_line_info*, %struct.gpio_v2_line_info** %info_v2.addr, align 8, !dbg !5846
  %name1 = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %3, i32 0, i32 0, !dbg !5847
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %name1, i64 0, i64 0, !dbg !5845
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay, i8* align 8 %arraydecay2, i64 32, i1 false), !dbg !5845
  %4 = load %struct.gpioline_info*, %struct.gpioline_info** %info_v1.addr, align 8, !dbg !5848
  %consumer = getelementptr inbounds %struct.gpioline_info, %struct.gpioline_info* %4, i32 0, i32 3, !dbg !5849
  %arraydecay3 = getelementptr inbounds [32 x i8], [32 x i8]* %consumer, i64 0, i64 0, !dbg !5850
  %5 = load %struct.gpio_v2_line_info*, %struct.gpio_v2_line_info** %info_v2.addr, align 8, !dbg !5851
  %consumer4 = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %5, i32 0, i32 1, !dbg !5852
  %arraydecay5 = getelementptr inbounds [32 x i8], [32 x i8]* %consumer4, i64 0, i64 0, !dbg !5850
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay3, i8* align 8 %arraydecay5, i64 32, i1 false), !dbg !5850
  %6 = load %struct.gpio_v2_line_info*, %struct.gpio_v2_line_info** %info_v2.addr, align 8, !dbg !5853
  %offset = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %6, i32 0, i32 2, !dbg !5854
  %7 = load i32, i32* %offset, align 8, !dbg !5854
  %8 = load %struct.gpioline_info*, %struct.gpioline_info** %info_v1.addr, align 8, !dbg !5855
  %line_offset = getelementptr inbounds %struct.gpioline_info, %struct.gpioline_info* %8, i32 0, i32 0, !dbg !5856
  store i32 %7, i32* %line_offset, align 4, !dbg !5857
  %9 = load %struct.gpioline_info*, %struct.gpioline_info** %info_v1.addr, align 8, !dbg !5858
  %flags6 = getelementptr inbounds %struct.gpioline_info, %struct.gpioline_info* %9, i32 0, i32 1, !dbg !5859
  store i32 0, i32* %flags6, align 4, !dbg !5860
  %10 = load i64, i64* %flagsv2, align 8, !dbg !5861
  %and = and i64 %10, 1, !dbg !5863
  %tobool = icmp ne i64 %and, 0, !dbg !5863
  br i1 %tobool, label %if.then, label %if.end, !dbg !5864

if.then:                                          ; preds = %entry
  %11 = load %struct.gpioline_info*, %struct.gpioline_info** %info_v1.addr, align 8, !dbg !5865
  %flags7 = getelementptr inbounds %struct.gpioline_info, %struct.gpioline_info* %11, i32 0, i32 1, !dbg !5866
  %12 = load i32, i32* %flags7, align 4, !dbg !5867
  %conv = zext i32 %12 to i64, !dbg !5867
  %or = or i64 %conv, 1, !dbg !5867
  %conv8 = trunc i64 %or to i32, !dbg !5867
  store i32 %conv8, i32* %flags7, align 4, !dbg !5867
  br label %if.end, !dbg !5865

if.end:                                           ; preds = %if.then, %entry
  %13 = load i64, i64* %flagsv2, align 8, !dbg !5868
  %and9 = and i64 %13, 8, !dbg !5870
  %tobool10 = icmp ne i64 %and9, 0, !dbg !5870
  br i1 %tobool10, label %if.then11, label %if.end16, !dbg !5871

if.then11:                                        ; preds = %if.end
  %14 = load %struct.gpioline_info*, %struct.gpioline_info** %info_v1.addr, align 8, !dbg !5872
  %flags12 = getelementptr inbounds %struct.gpioline_info, %struct.gpioline_info* %14, i32 0, i32 1, !dbg !5873
  %15 = load i32, i32* %flags12, align 4, !dbg !5874
  %conv13 = zext i32 %15 to i64, !dbg !5874
  %or14 = or i64 %conv13, 2, !dbg !5874
  %conv15 = trunc i64 %or14 to i32, !dbg !5874
  store i32 %conv15, i32* %flags12, align 4, !dbg !5874
  br label %if.end16, !dbg !5872

if.end16:                                         ; preds = %if.then11, %if.end
  %16 = load i64, i64* %flagsv2, align 8, !dbg !5875
  %and17 = and i64 %16, 2, !dbg !5877
  %tobool18 = icmp ne i64 %and17, 0, !dbg !5877
  br i1 %tobool18, label %if.then19, label %if.end24, !dbg !5878

if.then19:                                        ; preds = %if.end16
  %17 = load %struct.gpioline_info*, %struct.gpioline_info** %info_v1.addr, align 8, !dbg !5879
  %flags20 = getelementptr inbounds %struct.gpioline_info, %struct.gpioline_info* %17, i32 0, i32 1, !dbg !5880
  %18 = load i32, i32* %flags20, align 4, !dbg !5881
  %conv21 = zext i32 %18 to i64, !dbg !5881
  %or22 = or i64 %conv21, 4, !dbg !5881
  %conv23 = trunc i64 %or22 to i32, !dbg !5881
  store i32 %conv23, i32* %flags20, align 4, !dbg !5881
  br label %if.end24, !dbg !5879

if.end24:                                         ; preds = %if.then19, %if.end16
  %19 = load i64, i64* %flagsv2, align 8, !dbg !5882
  %and25 = and i64 %19, 64, !dbg !5884
  %tobool26 = icmp ne i64 %and25, 0, !dbg !5884
  br i1 %tobool26, label %if.then27, label %if.end32, !dbg !5885

if.then27:                                        ; preds = %if.end24
  %20 = load %struct.gpioline_info*, %struct.gpioline_info** %info_v1.addr, align 8, !dbg !5886
  %flags28 = getelementptr inbounds %struct.gpioline_info, %struct.gpioline_info* %20, i32 0, i32 1, !dbg !5887
  %21 = load i32, i32* %flags28, align 4, !dbg !5888
  %conv29 = zext i32 %21 to i64, !dbg !5888
  %or30 = or i64 %conv29, 8, !dbg !5888
  %conv31 = trunc i64 %or30 to i32, !dbg !5888
  store i32 %conv31, i32* %flags28, align 4, !dbg !5888
  br label %if.end32, !dbg !5886

if.end32:                                         ; preds = %if.then27, %if.end24
  %22 = load i64, i64* %flagsv2, align 8, !dbg !5889
  %and33 = and i64 %22, 128, !dbg !5891
  %tobool34 = icmp ne i64 %and33, 0, !dbg !5891
  br i1 %tobool34, label %if.then35, label %if.end40, !dbg !5892

if.then35:                                        ; preds = %if.end32
  %23 = load %struct.gpioline_info*, %struct.gpioline_info** %info_v1.addr, align 8, !dbg !5893
  %flags36 = getelementptr inbounds %struct.gpioline_info, %struct.gpioline_info* %23, i32 0, i32 1, !dbg !5894
  %24 = load i32, i32* %flags36, align 4, !dbg !5895
  %conv37 = zext i32 %24 to i64, !dbg !5895
  %or38 = or i64 %conv37, 16, !dbg !5895
  %conv39 = trunc i64 %or38 to i32, !dbg !5895
  store i32 %conv39, i32* %flags36, align 4, !dbg !5895
  br label %if.end40, !dbg !5893

if.end40:                                         ; preds = %if.then35, %if.end32
  %25 = load i64, i64* %flagsv2, align 8, !dbg !5896
  %and41 = and i64 %25, 256, !dbg !5898
  %tobool42 = icmp ne i64 %and41, 0, !dbg !5898
  br i1 %tobool42, label %if.then43, label %if.end48, !dbg !5899

if.then43:                                        ; preds = %if.end40
  %26 = load %struct.gpioline_info*, %struct.gpioline_info** %info_v1.addr, align 8, !dbg !5900
  %flags44 = getelementptr inbounds %struct.gpioline_info, %struct.gpioline_info* %26, i32 0, i32 1, !dbg !5901
  %27 = load i32, i32* %flags44, align 4, !dbg !5902
  %conv45 = zext i32 %27 to i64, !dbg !5902
  %or46 = or i64 %conv45, 32, !dbg !5902
  %conv47 = trunc i64 %or46 to i32, !dbg !5902
  store i32 %conv47, i32* %flags44, align 4, !dbg !5902
  br label %if.end48, !dbg !5900

if.end48:                                         ; preds = %if.then43, %if.end40
  %28 = load i64, i64* %flagsv2, align 8, !dbg !5903
  %and49 = and i64 %28, 512, !dbg !5905
  %tobool50 = icmp ne i64 %and49, 0, !dbg !5905
  br i1 %tobool50, label %if.then51, label %if.end56, !dbg !5906

if.then51:                                        ; preds = %if.end48
  %29 = load %struct.gpioline_info*, %struct.gpioline_info** %info_v1.addr, align 8, !dbg !5907
  %flags52 = getelementptr inbounds %struct.gpioline_info, %struct.gpioline_info* %29, i32 0, i32 1, !dbg !5908
  %30 = load i32, i32* %flags52, align 4, !dbg !5909
  %conv53 = zext i32 %30 to i64, !dbg !5909
  %or54 = or i64 %conv53, 64, !dbg !5909
  %conv55 = trunc i64 %or54 to i32, !dbg !5909
  store i32 %conv55, i32* %flags52, align 4, !dbg !5909
  br label %if.end56, !dbg !5907

if.end56:                                         ; preds = %if.then51, %if.end48
  %31 = load i64, i64* %flagsv2, align 8, !dbg !5910
  %and57 = and i64 %31, 1024, !dbg !5912
  %tobool58 = icmp ne i64 %and57, 0, !dbg !5912
  br i1 %tobool58, label %if.then59, label %if.end64, !dbg !5913

if.then59:                                        ; preds = %if.end56
  %32 = load %struct.gpioline_info*, %struct.gpioline_info** %info_v1.addr, align 8, !dbg !5914
  %flags60 = getelementptr inbounds %struct.gpioline_info, %struct.gpioline_info* %32, i32 0, i32 1, !dbg !5915
  %33 = load i32, i32* %flags60, align 4, !dbg !5916
  %conv61 = zext i32 %33 to i64, !dbg !5916
  %or62 = or i64 %conv61, 128, !dbg !5916
  %conv63 = trunc i64 %or62 to i32, !dbg !5916
  store i32 %conv63, i32* %flags60, align 4, !dbg !5916
  br label %if.end64, !dbg !5914

if.end64:                                         ; preds = %if.then59, %if.end56
  ret void, !dbg !5917
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @poll_wait(%struct.file* %filp, %struct.wait_queue_head* %wait_address, %struct.poll_table_struct* %p) #0 !dbg !5918 {
entry:
  %filp.addr = alloca %struct.file*, align 8
  %wait_address.addr = alloca %struct.wait_queue_head*, align 8
  %p.addr = alloca %struct.poll_table_struct*, align 8
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !5923, metadata !DIExpression()), !dbg !5924
  store %struct.wait_queue_head* %wait_address, %struct.wait_queue_head** %wait_address.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wait_queue_head** %wait_address.addr, metadata !5925, metadata !DIExpression()), !dbg !5926
  store %struct.poll_table_struct* %p, %struct.poll_table_struct** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.poll_table_struct** %p.addr, metadata !5927, metadata !DIExpression()), !dbg !5928
  %0 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !5929
  %tobool = icmp ne %struct.poll_table_struct* %0, null, !dbg !5929
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5931

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !5932
  %_qproc = getelementptr inbounds %struct.poll_table_struct, %struct.poll_table_struct* %1, i32 0, i32 0, !dbg !5933
  %2 = load void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)** %_qproc, align 8, !dbg !5933
  %tobool1 = icmp ne void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)* %2, null, !dbg !5932
  br i1 %tobool1, label %land.lhs.true2, label %if.end, !dbg !5934

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load %struct.wait_queue_head*, %struct.wait_queue_head** %wait_address.addr, align 8, !dbg !5935
  %tobool3 = icmp ne %struct.wait_queue_head* %3, null, !dbg !5935
  br i1 %tobool3, label %if.then, label %if.end, !dbg !5936

if.then:                                          ; preds = %land.lhs.true2
  %4 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !5937
  %_qproc4 = getelementptr inbounds %struct.poll_table_struct, %struct.poll_table_struct* %4, i32 0, i32 0, !dbg !5938
  %5 = load void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)** %_qproc4, align 8, !dbg !5938
  %6 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !5939
  %7 = load %struct.wait_queue_head*, %struct.wait_queue_head** %wait_address.addr, align 8, !dbg !5940
  %8 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !5941
  call void %5(%struct.file* %6, %struct.wait_queue_head* %7, %struct.poll_table_struct* %8) #9, !dbg !5937
  br label %if.end, !dbg !5937

if.end:                                           ; preds = %if.then, %land.lhs.true2, %land.lhs.true, %entry
  ret void, !dbg !5942
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noredzone
declare dso_local i64 @strscpy(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !5943 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5946, metadata !DIExpression()), !dbg !5947
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5948
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !5950
  %1 = load i8*, i8** %init_name, align 8, !dbg !5950
  %tobool = icmp ne i8* %1, null, !dbg !5948
  br i1 %tobool, label %if.then, label %if.end, !dbg !5951

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5952
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !5953
  %3 = load i8*, i8** %init_name1, align 8, !dbg !5953
  store i8* %3, i8** %retval, align 8, !dbg !5954
  br label %return, !dbg !5954

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5955
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !5956
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #9, !dbg !5957
  store i8* %call, i8** %retval, align 8, !dbg !5958
  br label %return, !dbg !5958

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !5959
  ret i8* %5, !dbg !5959
}

; Function Attrs: noredzone
declare dso_local %struct.gpio_desc* @gpiochip_get_desc(%struct.gpio_chip*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !5960 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5964, metadata !DIExpression()), !dbg !5965
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5966
  %1 = ptrtoint i8* %0 to i64, !dbg !5966
  %2 = inttoptr i64 %1 to i8*, !dbg !5966
  %3 = ptrtoint i8* %2 to i64, !dbg !5966
  %cmp = icmp uge i64 %3, -4095, !dbg !5966
  %lnot = xor i1 %cmp, true, !dbg !5966
  %lnot1 = xor i1 %lnot, true, !dbg !5966
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5966
  %conv = sext i32 %lnot.ext to i64, !dbg !5966
  %tobool = icmp ne i64 %conv, 0, !dbg !5966
  ret i1 %tobool, !dbg !5967
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !5968 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5971, metadata !DIExpression()), !dbg !5972
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5973
  %1 = ptrtoint i8* %0 to i64, !dbg !5974
  ret i64 %1, !dbg !5975
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpio_desc_to_lineinfo(%struct.gpio_desc* %desc, %struct.gpio_v2_line_info* %info) #0 !dbg !5976 {
entry:
  %lock.addr.i123 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i123, metadata !5979, metadata !DIExpression()), !dbg !5983
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5985, metadata !DIExpression()), !dbg !5986
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5987, metadata !DIExpression()), !dbg !5992
  %desc.addr = alloca %struct.gpio_desc*, align 8
  %info.addr = alloca %struct.gpio_v2_line_info*, align 8
  %gc = alloca %struct.gpio_chip*, align 8
  %ok_for_pinctrl = alloca i8, align 1
  %flags = alloca i64, align 8
  %debounce_period_us = alloca i32, align 4
  %num_attrs = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  %tmp113 = alloca i32, align 4
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !5999, metadata !DIExpression()), !dbg !6000
  store %struct.gpio_v2_line_info* %info, %struct.gpio_v2_line_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_info** %info.addr, metadata !6001, metadata !DIExpression()), !dbg !6002
  call void @llvm.dbg.declare(metadata %struct.gpio_chip** %gc, metadata !6003, metadata !DIExpression()), !dbg !6004
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !6005
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %0, i32 0, i32 0, !dbg !6006
  %1 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !6006
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %1, i32 0, i32 5, !dbg !6007
  %2 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !6007
  store %struct.gpio_chip* %2, %struct.gpio_chip** %gc, align 8, !dbg !6004
  call void @llvm.dbg.declare(metadata i8* %ok_for_pinctrl, metadata !6008, metadata !DIExpression()), !dbg !6009
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6010, metadata !DIExpression()), !dbg !6011
  call void @llvm.dbg.declare(metadata i32* %debounce_period_us, metadata !6012, metadata !DIExpression()), !dbg !6013
  call void @llvm.dbg.declare(metadata i32* %num_attrs, metadata !6014, metadata !DIExpression()), !dbg !6015
  store i32 0, i32* %num_attrs, align 4, !dbg !6015
  %3 = load %struct.gpio_v2_line_info*, %struct.gpio_v2_line_info** %info.addr, align 8, !dbg !6016
  %4 = bitcast %struct.gpio_v2_line_info* %3 to i8*, !dbg !6017
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 256, i1 false), !dbg !6017
  %5 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !6018
  %call = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %5) #9, !dbg !6019
  %6 = load %struct.gpio_v2_line_info*, %struct.gpio_v2_line_info** %info.addr, align 8, !dbg !6020
  %offset = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %6, i32 0, i32 2, !dbg !6021
  store i32 %call, i32* %offset, align 8, !dbg !6022
  %7 = load %struct.gpio_chip*, %struct.gpio_chip** %gc, align 8, !dbg !6023
  %base = getelementptr inbounds %struct.gpio_chip, %struct.gpio_chip* %7, i32 0, i32 18, !dbg !6024
  %8 = load i32, i32* %base, align 8, !dbg !6024
  %9 = load %struct.gpio_v2_line_info*, %struct.gpio_v2_line_info** %info.addr, align 8, !dbg !6025
  %offset1 = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %9, i32 0, i32 2, !dbg !6026
  %10 = load i32, i32* %offset1, align 8, !dbg !6026
  %add = add i32 %8, %10, !dbg !6027
  %call2 = call zeroext i1 @pinctrl_gpio_can_use_line(i32 %add) #9, !dbg !6028
  %frombool = zext i1 %call2 to i8, !dbg !6029
  store i8 %frombool, i8* %ok_for_pinctrl, align 1, !dbg !6029
  br label %do.body, !dbg !6030

do.body:                                          ; preds = %entry
  br label %do.body3, !dbg !6031

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6032, metadata !DIExpression()), !dbg !6034
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6035, metadata !DIExpression()), !dbg !6034
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6034
  %conv = zext i1 %cmp to i32, !dbg !6034
  store i32 1, i32* %tmp, align 4, !dbg !6034
  %11 = load i32, i32* %tmp, align 4, !dbg !6034
  br label %do.body4, !dbg !6036

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !6037

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !6038

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !6040, metadata !DIExpression()), !dbg !6043
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !6044, metadata !DIExpression()), !dbg !6043
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !6043
  %conv10 = zext i1 %cmp9 to i32, !dbg !6043
  store i32 1, i32* %tmp11, align 4, !dbg !6043
  %12 = load i32, i32* %tmp11, align 4, !dbg !6043
  %call12 = call i64 @arch_local_irq_save() #9, !dbg !6045
  store i64 %call12, i64* %flags, align 8, !dbg !6045
  br label %do.end, !dbg !6045

do.end:                                           ; preds = %do.body6
  br label %do.end13, !dbg !6038

do.end13:                                         ; preds = %do.end
  br label %do.body14, !dbg !6037

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6046, !srcloc !6047
  br label %do.body15, !dbg !6046

do.body15:                                        ; preds = %do.body14
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i, align 8
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6048
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !6049
  %rlock.i = bitcast %union.anon.1* %14 to %struct.raw_spinlock*, !dbg !6049
  br label %do.end17, !dbg !6050

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !6046

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !6037

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !6036

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !6031

do.end21:                                         ; preds = %do.end20
  %15 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !6051
  %name = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %15, i32 0, i32 3, !dbg !6053
  %16 = load i8*, i8** %name, align 8, !dbg !6053
  %tobool = icmp ne i8* %16, null, !dbg !6051
  br i1 %tobool, label %if.then, label %if.end, !dbg !6054

if.then:                                          ; preds = %do.end21
  %17 = load %struct.gpio_v2_line_info*, %struct.gpio_v2_line_info** %info.addr, align 8, !dbg !6055
  %name22 = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %17, i32 0, i32 0, !dbg !6056
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name22, i64 0, i64 0, !dbg !6055
  %18 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !6057
  %name23 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %18, i32 0, i32 3, !dbg !6058
  %19 = load i8*, i8** %name23, align 8, !dbg !6058
  %call24 = call i64 @strscpy(i8* %arraydecay, i8* %19, i64 32) #9, !dbg !6059
  br label %if.end, !dbg !6059

if.end:                                           ; preds = %if.then, %do.end21
  %20 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !6060
  %label = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %20, i32 0, i32 2, !dbg !6062
  %21 = load i8*, i8** %label, align 8, !dbg !6062
  %tobool25 = icmp ne i8* %21, null, !dbg !6060
  br i1 %tobool25, label %if.then26, label %if.end30, !dbg !6063

if.then26:                                        ; preds = %if.end
  %22 = load %struct.gpio_v2_line_info*, %struct.gpio_v2_line_info** %info.addr, align 8, !dbg !6064
  %consumer = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %22, i32 0, i32 1, !dbg !6065
  %arraydecay27 = getelementptr inbounds [32 x i8], [32 x i8]* %consumer, i64 0, i64 0, !dbg !6064
  %23 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !6066
  %label28 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %23, i32 0, i32 2, !dbg !6067
  %24 = load i8*, i8** %label28, align 8, !dbg !6067
  %call29 = call i64 @strscpy(i8* %arraydecay27, i8* %24, i64 32) #9, !dbg !6068
  br label %if.end30, !dbg !6068

if.end30:                                         ; preds = %if.then26, %if.end
  %25 = load %struct.gpio_v2_line_info*, %struct.gpio_v2_line_info** %info.addr, align 8, !dbg !6069
  %flags31 = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %25, i32 0, i32 4, !dbg !6070
  store i64 0, i64* %flags31, align 8, !dbg !6071
  %26 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !6072
  %flags32 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %26, i32 0, i32 1, !dbg !6074
  %call33 = call zeroext i1 @test_bit(i64 0, i64* %flags32) #9, !dbg !6075
  br i1 %call33, label %if.then52, label %lor.lhs.false, !dbg !6076

lor.lhs.false:                                    ; preds = %if.end30
  %27 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !6077
  %flags35 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %27, i32 0, i32 1, !dbg !6078
  %call36 = call zeroext i1 @test_bit(i64 11, i64* %flags35) #9, !dbg !6079
  br i1 %call36, label %if.then52, label %lor.lhs.false38, !dbg !6080

lor.lhs.false38:                                  ; preds = %lor.lhs.false
  %28 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !6081
  %flags39 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %28, i32 0, i32 1, !dbg !6082
  %call40 = call zeroext i1 @test_bit(i64 9, i64* %flags39) #9, !dbg !6083
  br i1 %call40, label %if.then52, label %lor.lhs.false42, !dbg !6084

lor.lhs.false42:                                  ; preds = %lor.lhs.false38
  %29 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !6085
  %flags43 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %29, i32 0, i32 1, !dbg !6086
  %call44 = call zeroext i1 @test_bit(i64 2, i64* %flags43) #9, !dbg !6087
  br i1 %call44, label %if.then52, label %lor.lhs.false46, !dbg !6088

lor.lhs.false46:                                  ; preds = %lor.lhs.false42
  %30 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !6089
  %flags47 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %30, i32 0, i32 1, !dbg !6090
  %call48 = call zeroext i1 @test_bit(i64 3, i64* %flags47) #9, !dbg !6091
  br i1 %call48, label %if.then52, label %lor.lhs.false50, !dbg !6092

lor.lhs.false50:                                  ; preds = %lor.lhs.false46
  %31 = load i8, i8* %ok_for_pinctrl, align 1, !dbg !6093
  %tobool51 = trunc i8 %31 to i1, !dbg !6093
  br i1 %tobool51, label %if.end54, label %if.then52, !dbg !6094

if.then52:                                        ; preds = %lor.lhs.false50, %lor.lhs.false46, %lor.lhs.false42, %lor.lhs.false38, %lor.lhs.false, %if.end30
  %32 = load %struct.gpio_v2_line_info*, %struct.gpio_v2_line_info** %info.addr, align 8, !dbg !6095
  %flags53 = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %32, i32 0, i32 4, !dbg !6096
  %33 = load i64, i64* %flags53, align 8, !dbg !6097
  %or = or i64 %33, 1, !dbg !6097
  store i64 %or, i64* %flags53, align 8, !dbg !6097
  br label %if.end54, !dbg !6095

if.end54:                                         ; preds = %if.then52, %lor.lhs.false50
  %34 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !6098
  %flags55 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %34, i32 0, i32 1, !dbg !6100
  %call56 = call zeroext i1 @test_bit(i64 1, i64* %flags55) #9, !dbg !6101
  br i1 %call56, label %if.then57, label %if.else, !dbg !6102

if.then57:                                        ; preds = %if.end54
  %35 = load %struct.gpio_v2_line_info*, %struct.gpio_v2_line_info** %info.addr, align 8, !dbg !6103
  %flags58 = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %35, i32 0, i32 4, !dbg !6104
  %36 = load i64, i64* %flags58, align 8, !dbg !6105
  %or59 = or i64 %36, 8, !dbg !6105
  store i64 %or59, i64* %flags58, align 8, !dbg !6105
  br label %if.end62, !dbg !6103

if.else:                                          ; preds = %if.end54
  %37 = load %struct.gpio_v2_line_info*, %struct.gpio_v2_line_info** %info.addr, align 8, !dbg !6106
  %flags60 = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %37, i32 0, i32 4, !dbg !6107
  %38 = load i64, i64* %flags60, align 8, !dbg !6108
  %or61 = or i64 %38, 4, !dbg !6108
  store i64 %or61, i64* %flags60, align 8, !dbg !6108
  br label %if.end62

if.end62:                                         ; preds = %if.else, %if.then57
  %39 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !6109
  %flags63 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %39, i32 0, i32 1, !dbg !6111
  %call64 = call zeroext i1 @test_bit(i64 6, i64* %flags63) #9, !dbg !6112
  br i1 %call64, label %if.then65, label %if.end68, !dbg !6113

if.then65:                                        ; preds = %if.end62
  %40 = load %struct.gpio_v2_line_info*, %struct.gpio_v2_line_info** %info.addr, align 8, !dbg !6114
  %flags66 = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %40, i32 0, i32 4, !dbg !6115
  %41 = load i64, i64* %flags66, align 8, !dbg !6116
  %or67 = or i64 %41, 2, !dbg !6116
  store i64 %or67, i64* %flags66, align 8, !dbg !6116
  br label %if.end68, !dbg !6114

if.end68:                                         ; preds = %if.then65, %if.end62
  %42 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !6117
  %flags69 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %42, i32 0, i32 1, !dbg !6119
  %call70 = call zeroext i1 @test_bit(i64 7, i64* %flags69) #9, !dbg !6120
  br i1 %call70, label %if.then71, label %if.end74, !dbg !6121

if.then71:                                        ; preds = %if.end68
  %43 = load %struct.gpio_v2_line_info*, %struct.gpio_v2_line_info** %info.addr, align 8, !dbg !6122
  %flags72 = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %43, i32 0, i32 4, !dbg !6123
  %44 = load i64, i64* %flags72, align 8, !dbg !6124
  %or73 = or i64 %44, 64, !dbg !6124
  store i64 %or73, i64* %flags72, align 8, !dbg !6124
  br label %if.end74, !dbg !6122

if.end74:                                         ; preds = %if.then71, %if.end68
  %45 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !6125
  %flags75 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %45, i32 0, i32 1, !dbg !6127
  %call76 = call zeroext i1 @test_bit(i64 8, i64* %flags75) #9, !dbg !6128
  br i1 %call76, label %if.then77, label %if.end80, !dbg !6129

if.then77:                                        ; preds = %if.end74
  %46 = load %struct.gpio_v2_line_info*, %struct.gpio_v2_line_info** %info.addr, align 8, !dbg !6130
  %flags78 = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %46, i32 0, i32 4, !dbg !6131
  %47 = load i64, i64* %flags78, align 8, !dbg !6132
  %or79 = or i64 %47, 128, !dbg !6132
  store i64 %or79, i64* %flags78, align 8, !dbg !6132
  br label %if.end80, !dbg !6130

if.end80:                                         ; preds = %if.then77, %if.end74
  %48 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !6133
  %flags81 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %48, i32 0, i32 1, !dbg !6135
  %call82 = call zeroext i1 @test_bit(i64 15, i64* %flags81) #9, !dbg !6136
  br i1 %call82, label %if.then83, label %if.end86, !dbg !6137

if.then83:                                        ; preds = %if.end80
  %49 = load %struct.gpio_v2_line_info*, %struct.gpio_v2_line_info** %info.addr, align 8, !dbg !6138
  %flags84 = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %49, i32 0, i32 4, !dbg !6139
  %50 = load i64, i64* %flags84, align 8, !dbg !6140
  %or85 = or i64 %50, 1024, !dbg !6140
  store i64 %or85, i64* %flags84, align 8, !dbg !6140
  br label %if.end86, !dbg !6138

if.end86:                                         ; preds = %if.then83, %if.end80
  %51 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !6141
  %flags87 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %51, i32 0, i32 1, !dbg !6143
  %call88 = call zeroext i1 @test_bit(i64 14, i64* %flags87) #9, !dbg !6144
  br i1 %call88, label %if.then89, label %if.end92, !dbg !6145

if.then89:                                        ; preds = %if.end86
  %52 = load %struct.gpio_v2_line_info*, %struct.gpio_v2_line_info** %info.addr, align 8, !dbg !6146
  %flags90 = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %52, i32 0, i32 4, !dbg !6147
  %53 = load i64, i64* %flags90, align 8, !dbg !6148
  %or91 = or i64 %53, 512, !dbg !6148
  store i64 %or91, i64* %flags90, align 8, !dbg !6148
  br label %if.end92, !dbg !6146

if.end92:                                         ; preds = %if.then89, %if.end86
  %54 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !6149
  %flags93 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %54, i32 0, i32 1, !dbg !6151
  %call94 = call zeroext i1 @test_bit(i64 13, i64* %flags93) #9, !dbg !6152
  br i1 %call94, label %if.then95, label %if.end98, !dbg !6153

if.then95:                                        ; preds = %if.end92
  %55 = load %struct.gpio_v2_line_info*, %struct.gpio_v2_line_info** %info.addr, align 8, !dbg !6154
  %flags96 = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %55, i32 0, i32 4, !dbg !6155
  %56 = load i64, i64* %flags96, align 8, !dbg !6156
  %or97 = or i64 %56, 256, !dbg !6156
  store i64 %or97, i64* %flags96, align 8, !dbg !6156
  br label %if.end98, !dbg !6154

if.end98:                                         ; preds = %if.then95, %if.end92
  %57 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !6157
  %flags99 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %57, i32 0, i32 1, !dbg !6159
  %call100 = call zeroext i1 @test_bit(i64 16, i64* %flags99) #9, !dbg !6160
  br i1 %call100, label %if.then101, label %if.end104, !dbg !6161

if.then101:                                       ; preds = %if.end98
  %58 = load %struct.gpio_v2_line_info*, %struct.gpio_v2_line_info** %info.addr, align 8, !dbg !6162
  %flags102 = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %58, i32 0, i32 4, !dbg !6163
  %59 = load i64, i64* %flags102, align 8, !dbg !6164
  %or103 = or i64 %59, 16, !dbg !6164
  store i64 %or103, i64* %flags102, align 8, !dbg !6164
  br label %if.end104, !dbg !6162

if.end104:                                        ; preds = %if.then101, %if.end98
  %60 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !6165
  %flags105 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %60, i32 0, i32 1, !dbg !6167
  %call106 = call zeroext i1 @test_bit(i64 17, i64* %flags105) #9, !dbg !6168
  br i1 %call106, label %if.then107, label %if.end110, !dbg !6169

if.then107:                                       ; preds = %if.end104
  %61 = load %struct.gpio_v2_line_info*, %struct.gpio_v2_line_info** %info.addr, align 8, !dbg !6170
  %flags108 = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %61, i32 0, i32 4, !dbg !6171
  %62 = load i64, i64* %flags108, align 8, !dbg !6172
  %or109 = or i64 %62, 32, !dbg !6172
  store i64 %or109, i64* %flags108, align 8, !dbg !6172
  br label %if.end110, !dbg !6170

if.end110:                                        ; preds = %if.then107, %if.end104
  br label %do.body111, !dbg !6173

do.body111:                                       ; preds = %if.end110
  br label %do.end112, !dbg !6175

do.end112:                                        ; preds = %do.body111
  %63 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !6173
  %debounce_period_us114 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %63, i32 0, i32 4, !dbg !6173
  %64 = load volatile i32, i32* %debounce_period_us114, align 8, !dbg !6173
  store i32 %64, i32* %tmp113, align 4, !dbg !6175
  %65 = load i32, i32* %tmp113, align 4, !dbg !6173
  store i32 %65, i32* %debounce_period_us, align 4, !dbg !6177
  %66 = load i32, i32* %debounce_period_us, align 4, !dbg !6178
  %tobool115 = icmp ne i32 %66, 0, !dbg !6178
  br i1 %tobool115, label %if.then116, label %if.end121, !dbg !6180

if.then116:                                       ; preds = %do.end112
  %67 = load %struct.gpio_v2_line_info*, %struct.gpio_v2_line_info** %info.addr, align 8, !dbg !6181
  %attrs = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %67, i32 0, i32 5, !dbg !6183
  %68 = load i32, i32* %num_attrs, align 4, !dbg !6184
  %idxprom = zext i32 %68 to i64, !dbg !6181
  %arrayidx = getelementptr [10 x %struct.gpio_v2_line_attribute], [10 x %struct.gpio_v2_line_attribute]* %attrs, i64 0, i64 %idxprom, !dbg !6181
  %id = getelementptr inbounds %struct.gpio_v2_line_attribute, %struct.gpio_v2_line_attribute* %arrayidx, i32 0, i32 0, !dbg !6185
  store i32 3, i32* %id, align 8, !dbg !6186
  %69 = load i32, i32* %debounce_period_us, align 4, !dbg !6187
  %70 = load %struct.gpio_v2_line_info*, %struct.gpio_v2_line_info** %info.addr, align 8, !dbg !6188
  %attrs117 = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %70, i32 0, i32 5, !dbg !6189
  %71 = load i32, i32* %num_attrs, align 4, !dbg !6190
  %idxprom118 = zext i32 %71 to i64, !dbg !6188
  %arrayidx119 = getelementptr [10 x %struct.gpio_v2_line_attribute], [10 x %struct.gpio_v2_line_attribute]* %attrs117, i64 0, i64 %idxprom118, !dbg !6188
  %72 = getelementptr inbounds %struct.gpio_v2_line_attribute, %struct.gpio_v2_line_attribute* %arrayidx119, i32 0, i32 2, !dbg !6191
  %debounce_period_us120 = bitcast %union.anon.70* %72 to i32*, !dbg !6191
  store i32 %69, i32* %debounce_period_us120, align 8, !dbg !6192
  %73 = load i32, i32* %num_attrs, align 4, !dbg !6193
  %inc = add i32 %73, 1, !dbg !6193
  store i32 %inc, i32* %num_attrs, align 4, !dbg !6193
  br label %if.end121, !dbg !6194

if.end121:                                        ; preds = %if.then116, %do.end112
  %74 = load i32, i32* %num_attrs, align 4, !dbg !6195
  %75 = load %struct.gpio_v2_line_info*, %struct.gpio_v2_line_info** %info.addr, align 8, !dbg !6196
  %num_attrs122 = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %75, i32 0, i32 3, !dbg !6197
  store i32 %74, i32* %num_attrs122, align 4, !dbg !6198
  %76 = load i64, i64* %flags, align 8, !dbg !6199
  store %struct.spinlock* @gpio_lock, %struct.spinlock** %lock.addr.i123, align 8
  store i64 %76, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !281, metadata !6200, metadata !DIExpression()) #6, !dbg !6203
  call void @llvm.dbg.declare(metadata !281, metadata !6204, metadata !DIExpression()) #6, !dbg !6203
  store i32 1, i32* %tmp.i, align 4, !dbg !6203
  %77 = load i32, i32* %tmp.i, align 4, !dbg !6203
  call void @llvm.dbg.declare(metadata !281, metadata !6205, metadata !DIExpression()) #6, !dbg !6210
  call void @llvm.dbg.declare(metadata !281, metadata !6211, metadata !DIExpression()) #6, !dbg !6210
  store i32 1, i32* %tmp8.i, align 4, !dbg !6210
  %78 = load i32, i32* %tmp8.i, align 4, !dbg !6210
  %79 = load i64, i64* %flags.addr.i, align 8, !dbg !6212
  call void @arch_local_irq_restore(i64 %79) #11, !dbg !6212
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6213, !srcloc !6215
  %80 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i123, align 8, !dbg !6216
  %81 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %80, i32 0, i32 0, !dbg !6216
  %rlock.i124 = bitcast %union.anon.1* %81 to %struct.raw_spinlock*, !dbg !6216
  ret void, !dbg !6218
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @linehandle_create(%struct.gpio_device* %gdev, i8* %ip) #0 !dbg !6219 {
entry:
  %retval.i.i89 = alloca i1, align 1
  %addr.addr.i.i90 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i90, metadata !4609, metadata !DIExpression()), !dbg !6220
  %bytes.addr.i.i91 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i91, metadata !4626, metadata !DIExpression()), !dbg !6224
  %is_source.addr.i.i92 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i92, metadata !4628, metadata !DIExpression()), !dbg !6225
  %sz.i.i93 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i93, metadata !4630, metadata !DIExpression()), !dbg !6226
  %__ret_warn_on.i.i94 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i94, metadata !4632, metadata !DIExpression()), !dbg !6227
  %tmp.i.i95 = alloca i64, align 8
  %to.addr.i96 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i96, metadata !4636, metadata !DIExpression()), !dbg !6228
  %from.addr.i97 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i97, metadata !4638, metadata !DIExpression()), !dbg !6229
  %n.addr.i98 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i98, metadata !4640, metadata !DIExpression()), !dbg !6230
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !4609, metadata !DIExpression()), !dbg !6231
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !4626, metadata !DIExpression()), !dbg !6235
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !4628, metadata !DIExpression()), !dbg !6236
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !4630, metadata !DIExpression()), !dbg !6237
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !4632, metadata !DIExpression()), !dbg !6238
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !5056, metadata !DIExpression()), !dbg !6239
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !5058, metadata !DIExpression()), !dbg !6240
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !5060, metadata !DIExpression()), !dbg !6241
  %retval = alloca i32, align 4
  %gdev.addr = alloca %struct.gpio_device*, align 8
  %ip.addr = alloca i8*, align 8
  %handlereq = alloca %struct.gpiohandle_request, align 4
  %lh = alloca %struct.linehandle_state*, align 8
  %file = alloca %struct.file*, align 8
  %fd = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %lflags = alloca i32, align 4
  %offset = alloca i32, align 4
  %desc = alloca %struct.gpio_desc*, align 8
  %val = alloca i32, align 4
  store %struct.gpio_device* %gdev, %struct.gpio_device** %gdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %gdev.addr, metadata !6242, metadata !DIExpression()), !dbg !6243
  store i8* %ip, i8** %ip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ip.addr, metadata !6244, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.declare(metadata %struct.gpiohandle_request* %handlereq, metadata !6246, metadata !DIExpression()), !dbg !6257
  call void @llvm.dbg.declare(metadata %struct.linehandle_state** %lh, metadata !6258, metadata !DIExpression()), !dbg !6267
  call void @llvm.dbg.declare(metadata %struct.file** %file, metadata !6268, metadata !DIExpression()), !dbg !6269
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !6270, metadata !DIExpression()), !dbg !6271
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6272, metadata !DIExpression()), !dbg !6273
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6274, metadata !DIExpression()), !dbg !6275
  call void @llvm.dbg.declare(metadata i32* %lflags, metadata !6276, metadata !DIExpression()), !dbg !6277
  %0 = bitcast %struct.gpiohandle_request* %handlereq to i8*, !dbg !6278
  %1 = load i8*, i8** %ip.addr, align 8, !dbg !6279
  store i8* %0, i8** %to.addr.i, align 8
  store i8* %1, i8** %from.addr.i, align 8
  store i64 364, i64* %n.addr.i, align 8
  %2 = load i8*, i8** %to.addr.i, align 8, !dbg !6280
  %3 = load i64, i64* %n.addr.i, align 8, !dbg !6280
  store i8* %2, i8** %addr.addr.i.i, align 8
  store i64 %3, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !6237
  %4 = load i32, i32* %sz.i.i, align 4, !dbg !6281
  %cmp.i.i = icmp sge i32 %4, 0, !dbg !6281
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !6281

land.rhs.i.i:                                     ; preds = %entry
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !6281
  %conv.i.i = sext i32 %5 to i64, !dbg !6281
  %6 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6281
  %cmp1.i.i = icmp ult i64 %conv.i.i, %6, !dbg !6281
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !6282
  %lnot.i.i = xor i1 %7, true, !dbg !6281
  %lnot.ext.i.i = zext i1 %7 to i32, !dbg !6281
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !6281
  br i1 %7, label %if.then.i.i, label %if.end10.i.i, !dbg !6283

if.then.i.i:                                      ; preds = %land.end.i.i
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6284
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #6, !dbg !6285
  br i1 %9, label %if.else.i.i, label %if.then5.i.i, !dbg !6286

if.then5.i.i:                                     ; preds = %if.then.i.i
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !6287
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6288
  call void @copy_overflow(i32 %10, i64 %11) #11, !dbg !6289
  br label %if.end9.i.i, !dbg !6289

if.else.i.i:                                      ; preds = %if.then.i.i
  %12 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !6290
  %tobool6.i.i = trunc i8 %12 to i1, !dbg !6290
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !6291

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !6292
  br label %if.end.i.i, !dbg !6292

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !6293
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !6294
  br label %check_copy_size.exit.i, !dbg !6294

if.end10.i.i:                                     ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6238
  %cmp11.i.i = icmp ugt i64 %13, 2147483647, !dbg !6238
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !6238
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !6238
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !6238
  %14 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !6295
  %tobool17.i.i = icmp ne i32 %14, 0, !dbg !6295
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !6295
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !6295
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !6295
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !6238

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !6296, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !6297, !srcloc !4906
  br label %if.end31.i.i, !dbg !6298

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !6238
  %tobool32.i.i = icmp ne i32 %15, 0, !dbg !6238
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !6238
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !6238
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !6238
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !6295
  %16 = load i64, i64* %tmp.i.i, align 8, !dbg !6238
  %tobool38.i.i = icmp ne i64 %16, 0, !dbg !6299
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !6300

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !6301
  br label %check_copy_size.exit.i, !dbg !6301

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %17 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !6302
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6303
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !6304
  %tobool41.i.i = trunc i8 %19 to i1, !dbg !6304
  call void @check_object_size(i8* %17, i64 %18, i1 zeroext %tobool41.i.i) #11, !dbg !6305
  store i1 true, i1* %retval.i.i, align 1, !dbg !6306
  br label %check_copy_size.exit.i, !dbg !6306

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %20 = load i1, i1* %retval.i.i, align 1, !dbg !6307
  %lnot.i = xor i1 %20, true, !dbg !6280
  %lnot.ext.i = zext i1 %20 to i32, !dbg !6280
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !6280
  br i1 %20, label %if.then.i, label %copy_from_user.exit, !dbg !6308

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %21 = load i8*, i8** %to.addr.i, align 8, !dbg !6309
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !6310
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !6311
  %call2.i = call i64 @_copy_from_user(i8* %21, i8* %22, i64 %23) #11, !dbg !6312
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !6313
  br label %copy_from_user.exit, !dbg !6314

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !6315
  %tobool = icmp ne i64 %24, 0, !dbg !6316
  br i1 %tobool, label %if.then, label %if.end, !dbg !6317

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !6318
  br label %return, !dbg !6318

if.end:                                           ; preds = %copy_from_user.exit
  %lines = getelementptr inbounds %struct.gpiohandle_request, %struct.gpiohandle_request* %handlereq, i32 0, i32 4, !dbg !6319
  %25 = load i32, i32* %lines, align 4, !dbg !6319
  %cmp = icmp eq i32 %25, 0, !dbg !6321
  br i1 %cmp, label %if.then3, label %lor.lhs.false, !dbg !6322

lor.lhs.false:                                    ; preds = %if.end
  %lines1 = getelementptr inbounds %struct.gpiohandle_request, %struct.gpiohandle_request* %handlereq, i32 0, i32 4, !dbg !6323
  %26 = load i32, i32* %lines1, align 4, !dbg !6323
  %cmp2 = icmp ugt i32 %26, 64, !dbg !6324
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !6325

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store i32 -22, i32* %retval, align 4, !dbg !6326
  br label %return, !dbg !6326

if.end4:                                          ; preds = %lor.lhs.false
  %flags = getelementptr inbounds %struct.gpiohandle_request, %struct.gpiohandle_request* %handlereq, i32 0, i32 1, !dbg !6327
  %27 = load i32, i32* %flags, align 4, !dbg !6327
  store i32 %27, i32* %lflags, align 4, !dbg !6328
  %28 = load i32, i32* %lflags, align 4, !dbg !6329
  %call5 = call i32 @linehandle_validate_flags(i32 %28) #9, !dbg !6330
  store i32 %call5, i32* %ret, align 4, !dbg !6331
  %29 = load i32, i32* %ret, align 4, !dbg !6332
  %tobool6 = icmp ne i32 %29, 0, !dbg !6332
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !6334

if.then7:                                         ; preds = %if.end4
  %30 = load i32, i32* %ret, align 4, !dbg !6335
  store i32 %30, i32* %retval, align 4, !dbg !6336
  br label %return, !dbg !6336

if.end8:                                          ; preds = %if.end4
  %call9 = call i8* @kzalloc(i64 536, i32 3264) #9, !dbg !6337
  %31 = bitcast i8* %call9 to %struct.linehandle_state*, !dbg !6337
  store %struct.linehandle_state* %31, %struct.linehandle_state** %lh, align 8, !dbg !6338
  %32 = load %struct.linehandle_state*, %struct.linehandle_state** %lh, align 8, !dbg !6339
  %tobool10 = icmp ne %struct.linehandle_state* %32, null, !dbg !6339
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !6341

if.then11:                                        ; preds = %if.end8
  store i32 -12, i32* %retval, align 4, !dbg !6342
  br label %return, !dbg !6342

if.end12:                                         ; preds = %if.end8
  %33 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !6343
  %34 = load %struct.linehandle_state*, %struct.linehandle_state** %lh, align 8, !dbg !6344
  %gdev13 = getelementptr inbounds %struct.linehandle_state, %struct.linehandle_state* %34, i32 0, i32 0, !dbg !6345
  store %struct.gpio_device* %33, %struct.gpio_device** %gdev13, align 8, !dbg !6346
  %35 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !6347
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %35, i32 0, i32 1, !dbg !6348
  %call14 = call %struct.device* @get_device(%struct.device* %dev) #9, !dbg !6349
  %consumer_label = getelementptr inbounds %struct.gpiohandle_request, %struct.gpiohandle_request* %handlereq, i32 0, i32 3, !dbg !6350
  %arrayidx = getelementptr [32 x i8], [32 x i8]* %consumer_label, i64 0, i64 0, !dbg !6352
  %36 = load i8, i8* %arrayidx, align 4, !dbg !6352
  %conv = sext i8 %36 to i32, !dbg !6352
  %cmp15 = icmp ne i32 %conv, 0, !dbg !6353
  br i1 %cmp15, label %if.then17, label %if.end24, !dbg !6354

if.then17:                                        ; preds = %if.end12
  %consumer_label18 = getelementptr inbounds %struct.gpiohandle_request, %struct.gpiohandle_request* %handlereq, i32 0, i32 3, !dbg !6355
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %consumer_label18, i64 0, i64 0, !dbg !6357
  %call19 = call i8* @kstrndup(i8* %arraydecay, i64 31, i32 3264) #9, !dbg !6358
  %37 = load %struct.linehandle_state*, %struct.linehandle_state** %lh, align 8, !dbg !6359
  %label = getelementptr inbounds %struct.linehandle_state, %struct.linehandle_state* %37, i32 0, i32 1, !dbg !6360
  store i8* %call19, i8** %label, align 8, !dbg !6361
  %38 = load %struct.linehandle_state*, %struct.linehandle_state** %lh, align 8, !dbg !6362
  %label20 = getelementptr inbounds %struct.linehandle_state, %struct.linehandle_state* %38, i32 0, i32 1, !dbg !6364
  %39 = load i8*, i8** %label20, align 8, !dbg !6364
  %tobool21 = icmp ne i8* %39, null, !dbg !6362
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !6365

if.then22:                                        ; preds = %if.then17
  store i32 -12, i32* %ret, align 4, !dbg !6366
  br label %out_free_lh, !dbg !6368

if.end23:                                         ; preds = %if.then17
  br label %if.end24, !dbg !6369

if.end24:                                         ; preds = %if.end23, %if.end12
  %lines25 = getelementptr inbounds %struct.gpiohandle_request, %struct.gpiohandle_request* %handlereq, i32 0, i32 4, !dbg !6370
  %40 = load i32, i32* %lines25, align 4, !dbg !6370
  %41 = load %struct.linehandle_state*, %struct.linehandle_state** %lh, align 8, !dbg !6371
  %num_descs = getelementptr inbounds %struct.linehandle_state, %struct.linehandle_state* %41, i32 0, i32 3, !dbg !6372
  store i32 %40, i32* %num_descs, align 8, !dbg !6373
  store i32 0, i32* %i, align 4, !dbg !6374
  br label %for.cond, !dbg !6376

for.cond:                                         ; preds = %for.inc, %if.end24
  %42 = load i32, i32* %i, align 4, !dbg !6377
  %lines26 = getelementptr inbounds %struct.gpiohandle_request, %struct.gpiohandle_request* %handlereq, i32 0, i32 4, !dbg !6379
  %43 = load i32, i32* %lines26, align 4, !dbg !6379
  %cmp27 = icmp ult i32 %42, %43, !dbg !6380
  br i1 %cmp27, label %for.body, label %for.end, !dbg !6381

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !6382, metadata !DIExpression()), !dbg !6384
  %lineoffsets = getelementptr inbounds %struct.gpiohandle_request, %struct.gpiohandle_request* %handlereq, i32 0, i32 0, !dbg !6385
  %44 = load i32, i32* %i, align 4, !dbg !6386
  %idxprom = sext i32 %44 to i64, !dbg !6387
  %arrayidx29 = getelementptr [64 x i32], [64 x i32]* %lineoffsets, i64 0, i64 %idxprom, !dbg !6387
  %45 = load i32, i32* %arrayidx29, align 4, !dbg !6387
  store i32 %45, i32* %offset, align 4, !dbg !6384
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc, metadata !6388, metadata !DIExpression()), !dbg !6389
  %46 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !6390
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %46, i32 0, i32 5, !dbg !6391
  %47 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !6391
  %48 = load i32, i32* %offset, align 4, !dbg !6392
  %call30 = call %struct.gpio_desc* @gpiochip_get_desc(%struct.gpio_chip* %47, i32 %48) #9, !dbg !6393
  store %struct.gpio_desc* %call30, %struct.gpio_desc** %desc, align 8, !dbg !6389
  %49 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !6394
  %50 = bitcast %struct.gpio_desc* %49 to i8*, !dbg !6394
  %call31 = call zeroext i1 @IS_ERR(i8* %50) #9, !dbg !6396
  br i1 %call31, label %if.then32, label %if.end35, !dbg !6397

if.then32:                                        ; preds = %for.body
  %51 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !6398
  %52 = bitcast %struct.gpio_desc* %51 to i8*, !dbg !6398
  %call33 = call i64 @PTR_ERR(i8* %52) #9, !dbg !6400
  %conv34 = trunc i64 %call33 to i32, !dbg !6400
  store i32 %conv34, i32* %ret, align 4, !dbg !6401
  br label %out_free_lh, !dbg !6402

if.end35:                                         ; preds = %for.body
  %53 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !6403
  %54 = load %struct.linehandle_state*, %struct.linehandle_state** %lh, align 8, !dbg !6404
  %label36 = getelementptr inbounds %struct.linehandle_state, %struct.linehandle_state* %54, i32 0, i32 1, !dbg !6405
  %55 = load i8*, i8** %label36, align 8, !dbg !6405
  %call37 = call i32 @gpiod_request(%struct.gpio_desc* %53, i8* %55) #9, !dbg !6406
  store i32 %call37, i32* %ret, align 4, !dbg !6407
  %56 = load i32, i32* %ret, align 4, !dbg !6408
  %tobool38 = icmp ne i32 %56, 0, !dbg !6408
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !6410

if.then39:                                        ; preds = %if.end35
  br label %out_free_lh, !dbg !6411

if.end40:                                         ; preds = %if.end35
  %57 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !6412
  %58 = load %struct.linehandle_state*, %struct.linehandle_state** %lh, align 8, !dbg !6413
  %descs = getelementptr inbounds %struct.linehandle_state, %struct.linehandle_state* %58, i32 0, i32 2, !dbg !6414
  %59 = load i32, i32* %i, align 4, !dbg !6415
  %idxprom41 = sext i32 %59 to i64, !dbg !6413
  %arrayidx42 = getelementptr [64 x %struct.gpio_desc*], [64 x %struct.gpio_desc*]* %descs, i64 0, i64 %idxprom41, !dbg !6413
  store %struct.gpio_desc* %57, %struct.gpio_desc** %arrayidx42, align 8, !dbg !6416
  %flags43 = getelementptr inbounds %struct.gpiohandle_request, %struct.gpiohandle_request* %handlereq, i32 0, i32 1, !dbg !6417
  %60 = load i32, i32* %flags43, align 4, !dbg !6417
  %61 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !6418
  %flags44 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %61, i32 0, i32 1, !dbg !6419
  call void @linehandle_flags_to_desc_flags(i32 %60, i64* %flags44) #9, !dbg !6420
  %62 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !6421
  %call45 = call i32 @gpiod_set_transitory(%struct.gpio_desc* %62, i1 zeroext false) #9, !dbg !6422
  store i32 %call45, i32* %ret, align 4, !dbg !6423
  %63 = load i32, i32* %ret, align 4, !dbg !6424
  %cmp46 = icmp slt i32 %63, 0, !dbg !6426
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !6427

if.then48:                                        ; preds = %if.end40
  br label %out_free_lh, !dbg !6428

if.end49:                                         ; preds = %if.end40
  %64 = load i32, i32* %lflags, align 4, !dbg !6429
  %conv50 = zext i32 %64 to i64, !dbg !6429
  %and = and i64 %conv50, 2, !dbg !6431
  %tobool51 = icmp ne i64 %and, 0, !dbg !6431
  br i1 %tobool51, label %if.then52, label %if.else, !dbg !6432

if.then52:                                        ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i32* %val, metadata !6433, metadata !DIExpression()), !dbg !6435
  %default_values = getelementptr inbounds %struct.gpiohandle_request, %struct.gpiohandle_request* %handlereq, i32 0, i32 2, !dbg !6436
  %65 = load i32, i32* %i, align 4, !dbg !6437
  %idxprom53 = sext i32 %65 to i64, !dbg !6438
  %arrayidx54 = getelementptr [64 x i8], [64 x i8]* %default_values, i64 0, i64 %idxprom53, !dbg !6438
  %66 = load i8, i8* %arrayidx54, align 1, !dbg !6438
  %tobool55 = icmp ne i8 %66, 0, !dbg !6439
  %lnot = xor i1 %tobool55, true, !dbg !6439
  %lnot56 = xor i1 %lnot, true, !dbg !6440
  %lnot.ext = zext i1 %lnot56 to i32, !dbg !6440
  store i32 %lnot.ext, i32* %val, align 4, !dbg !6435
  %67 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !6441
  %68 = load i32, i32* %val, align 4, !dbg !6442
  %call57 = call i32 @gpiod_direction_output(%struct.gpio_desc* %67, i32 %68) #9, !dbg !6443
  store i32 %call57, i32* %ret, align 4, !dbg !6444
  %69 = load i32, i32* %ret, align 4, !dbg !6445
  %tobool58 = icmp ne i32 %69, 0, !dbg !6445
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !6447

if.then59:                                        ; preds = %if.then52
  br label %out_free_lh, !dbg !6448

if.end60:                                         ; preds = %if.then52
  br label %if.end70, !dbg !6449

if.else:                                          ; preds = %if.end49
  %70 = load i32, i32* %lflags, align 4, !dbg !6450
  %conv61 = zext i32 %70 to i64, !dbg !6450
  %and62 = and i64 %conv61, 1, !dbg !6452
  %tobool63 = icmp ne i64 %and62, 0, !dbg !6452
  br i1 %tobool63, label %if.then64, label %if.end69, !dbg !6453

if.then64:                                        ; preds = %if.else
  %71 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !6454
  %call65 = call i32 @gpiod_direction_input(%struct.gpio_desc* %71) #9, !dbg !6456
  store i32 %call65, i32* %ret, align 4, !dbg !6457
  %72 = load i32, i32* %ret, align 4, !dbg !6458
  %tobool66 = icmp ne i32 %72, 0, !dbg !6458
  br i1 %tobool66, label %if.then67, label %if.end68, !dbg !6460

if.then67:                                        ; preds = %if.then64
  br label %out_free_lh, !dbg !6461

if.end68:                                         ; preds = %if.then64
  br label %if.end69, !dbg !6462

if.end69:                                         ; preds = %if.end68, %if.else
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.end60
  %73 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !6463
  %gdev71 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %73, i32 0, i32 0, !dbg !6464
  %74 = load %struct.gpio_device*, %struct.gpio_device** %gdev71, align 8, !dbg !6464
  %notifier = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %74, i32 0, i32 12, !dbg !6465
  %75 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !6466
  %76 = bitcast %struct.gpio_desc* %75 to i8*, !dbg !6466
  %call72 = call i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head* %notifier, i64 1, i8* %76) #9, !dbg !6467
  br label %for.inc, !dbg !6468

for.inc:                                          ; preds = %if.end70
  %77 = load i32, i32* %i, align 4, !dbg !6469
  %inc = add i32 %77, 1, !dbg !6469
  store i32 %inc, i32* %i, align 4, !dbg !6469
  br label %for.cond, !dbg !6470, !llvm.loop !6471

for.end:                                          ; preds = %for.cond
  %call73 = call i32 @get_unused_fd_flags(i32 524288) #9, !dbg !6473
  store i32 %call73, i32* %fd, align 4, !dbg !6474
  %78 = load i32, i32* %fd, align 4, !dbg !6475
  %cmp74 = icmp slt i32 %78, 0, !dbg !6477
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !6478

if.then76:                                        ; preds = %for.end
  %79 = load i32, i32* %fd, align 4, !dbg !6479
  store i32 %79, i32* %ret, align 4, !dbg !6481
  br label %out_free_lh, !dbg !6482

if.end77:                                         ; preds = %for.end
  %80 = load %struct.linehandle_state*, %struct.linehandle_state** %lh, align 8, !dbg !6483
  %81 = bitcast %struct.linehandle_state* %80 to i8*, !dbg !6483
  %call78 = call %struct.file* @anon_inode_getfile(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), %struct.file_operations* @linehandle_fileops, i8* %81, i32 524288) #9, !dbg !6484
  store %struct.file* %call78, %struct.file** %file, align 8, !dbg !6485
  %82 = load %struct.file*, %struct.file** %file, align 8, !dbg !6486
  %83 = bitcast %struct.file* %82 to i8*, !dbg !6486
  %call79 = call zeroext i1 @IS_ERR(i8* %83) #9, !dbg !6488
  br i1 %call79, label %if.then80, label %if.end83, !dbg !6489

if.then80:                                        ; preds = %if.end77
  %84 = load %struct.file*, %struct.file** %file, align 8, !dbg !6490
  %85 = bitcast %struct.file* %84 to i8*, !dbg !6490
  %call81 = call i64 @PTR_ERR(i8* %85) #9, !dbg !6492
  %conv82 = trunc i64 %call81 to i32, !dbg !6492
  store i32 %conv82, i32* %ret, align 4, !dbg !6493
  br label %out_put_unused_fd, !dbg !6494

if.end83:                                         ; preds = %if.end77
  %86 = load i32, i32* %fd, align 4, !dbg !6495
  %fd84 = getelementptr inbounds %struct.gpiohandle_request, %struct.gpiohandle_request* %handlereq, i32 0, i32 5, !dbg !6496
  store i32 %86, i32* %fd84, align 4, !dbg !6497
  %87 = load i8*, i8** %ip.addr, align 8, !dbg !6498
  %88 = bitcast %struct.gpiohandle_request* %handlereq to i8*, !dbg !6499
  store i8* %87, i8** %to.addr.i96, align 8
  store i8* %88, i8** %from.addr.i97, align 8
  store i64 364, i64* %n.addr.i98, align 8
  %89 = load i8*, i8** %from.addr.i97, align 8, !dbg !6500
  %90 = load i64, i64* %n.addr.i98, align 8, !dbg !6500
  store i8* %89, i8** %addr.addr.i.i90, align 8
  store i64 %90, i64* %bytes.addr.i.i91, align 8
  store i8 1, i8* %is_source.addr.i.i92, align 1
  store i32 -1, i32* %sz.i.i93, align 4, !dbg !6226
  %91 = load i32, i32* %sz.i.i93, align 4, !dbg !6501
  %cmp.i.i99 = icmp sge i32 %91, 0, !dbg !6501
  br i1 %cmp.i.i99, label %land.rhs.i.i102, label %land.end.i.i106, !dbg !6501

land.rhs.i.i102:                                  ; preds = %if.end83
  %92 = load i32, i32* %sz.i.i93, align 4, !dbg !6501
  %conv.i.i100 = sext i32 %92 to i64, !dbg !6501
  %93 = load i64, i64* %bytes.addr.i.i91, align 8, !dbg !6501
  %cmp1.i.i101 = icmp ult i64 %conv.i.i100, %93, !dbg !6501
  br label %land.end.i.i106

land.end.i.i106:                                  ; preds = %land.rhs.i.i102, %if.end83
  %94 = phi i1 [ false, %if.end83 ], [ %cmp1.i.i101, %land.rhs.i.i102 ], !dbg !6502
  %lnot.i.i103 = xor i1 %94, true, !dbg !6501
  %lnot.ext.i.i104 = zext i1 %94 to i32, !dbg !6501
  %conv4.i.i105 = sext i32 %lnot.ext.i.i104 to i64, !dbg !6501
  br i1 %94, label %if.then.i.i107, label %if.end10.i.i122, !dbg !6503

if.then.i.i107:                                   ; preds = %land.end.i.i106
  %95 = load i64, i64* %bytes.addr.i.i91, align 8, !dbg !6504
  %96 = call i1 @llvm.is.constant.i64(i64 %95) #6, !dbg !6505
  br i1 %96, label %if.else.i.i110, label %if.then5.i.i108, !dbg !6506

if.then5.i.i108:                                  ; preds = %if.then.i.i107
  %97 = load i32, i32* %sz.i.i93, align 4, !dbg !6507
  %98 = load i64, i64* %bytes.addr.i.i91, align 8, !dbg !6508
  call void @copy_overflow(i32 %97, i64 %98) #11, !dbg !6509
  br label %if.end9.i.i114, !dbg !6509

if.else.i.i110:                                   ; preds = %if.then.i.i107
  %99 = load i8, i8* %is_source.addr.i.i92, align 1, !dbg !6510
  %tobool6.i.i109 = trunc i8 %99 to i1, !dbg !6510
  br i1 %tobool6.i.i109, label %if.then7.i.i111, label %if.else8.i.i112, !dbg !6511

if.then7.i.i111:                                  ; preds = %if.else.i.i110
  call void @__bad_copy_from() #11, !dbg !6512
  br label %if.end.i.i113, !dbg !6512

if.else8.i.i112:                                  ; preds = %if.else.i.i110
  call void @__bad_copy_to() #11, !dbg !6513
  br label %if.end.i.i113

if.end.i.i113:                                    ; preds = %if.else8.i.i112, %if.then7.i.i111
  br label %if.end9.i.i114

if.end9.i.i114:                                   ; preds = %if.end.i.i113, %if.then5.i.i108
  store i1 false, i1* %retval.i.i89, align 1, !dbg !6514
  br label %check_copy_size.exit.i136, !dbg !6514

if.end10.i.i122:                                  ; preds = %land.end.i.i106
  %100 = load i64, i64* %bytes.addr.i.i91, align 8, !dbg !6227
  %cmp11.i.i115 = icmp ugt i64 %100, 2147483647, !dbg !6227
  %lnot13.i.i116 = xor i1 %cmp11.i.i115, true, !dbg !6227
  %lnot.ext16.i.i117 = zext i1 %cmp11.i.i115 to i32, !dbg !6227
  store i32 %lnot.ext16.i.i117, i32* %__ret_warn_on.i.i94, align 4, !dbg !6227
  %101 = load i32, i32* %__ret_warn_on.i.i94, align 4, !dbg !6515
  %tobool17.i.i118 = icmp ne i32 %101, 0, !dbg !6515
  %lnot18.i.i119 = xor i1 %tobool17.i.i118, true, !dbg !6515
  %lnot.ext21.i.i120 = zext i1 %tobool17.i.i118 to i32, !dbg !6515
  %conv22.i.i121 = sext i32 %lnot.ext21.i.i120 to i64, !dbg !6515
  br i1 %tobool17.i.i118, label %if.then24.i.i123, label %if.end31.i.i129, !dbg !6227

if.then24.i.i123:                                 ; preds = %if.end10.i.i122
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !6516, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !6517, !srcloc !4906
  br label %if.end31.i.i129, !dbg !6518

if.end31.i.i129:                                  ; preds = %if.then24.i.i123, %if.end10.i.i122
  %102 = load i32, i32* %__ret_warn_on.i.i94, align 4, !dbg !6227
  %tobool32.i.i124 = icmp ne i32 %102, 0, !dbg !6227
  %lnot33.i.i125 = xor i1 %tobool32.i.i124, true, !dbg !6227
  %lnot.ext36.i.i126 = zext i1 %tobool32.i.i124 to i32, !dbg !6227
  %conv37.i.i127 = sext i32 %lnot.ext36.i.i126 to i64, !dbg !6227
  store i64 %conv37.i.i127, i64* %tmp.i.i95, align 8, !dbg !6515
  %103 = load i64, i64* %tmp.i.i95, align 8, !dbg !6227
  %tobool38.i.i128 = icmp ne i64 %103, 0, !dbg !6519
  br i1 %tobool38.i.i128, label %if.then39.i.i130, label %if.end40.i.i132, !dbg !6520

if.then39.i.i130:                                 ; preds = %if.end31.i.i129
  store i1 false, i1* %retval.i.i89, align 1, !dbg !6521
  br label %check_copy_size.exit.i136, !dbg !6521

if.end40.i.i132:                                  ; preds = %if.end31.i.i129
  %104 = load i8*, i8** %addr.addr.i.i90, align 8, !dbg !6522
  %105 = load i64, i64* %bytes.addr.i.i91, align 8, !dbg !6523
  %106 = load i8, i8* %is_source.addr.i.i92, align 1, !dbg !6524
  %tobool41.i.i131 = trunc i8 %106 to i1, !dbg !6524
  call void @check_object_size(i8* %104, i64 %105, i1 zeroext %tobool41.i.i131) #11, !dbg !6525
  store i1 true, i1* %retval.i.i89, align 1, !dbg !6526
  br label %check_copy_size.exit.i136, !dbg !6526

check_copy_size.exit.i136:                        ; preds = %if.end40.i.i132, %if.then39.i.i130, %if.end9.i.i114
  %107 = load i1, i1* %retval.i.i89, align 1, !dbg !6527
  %lnot.i133 = xor i1 %107, true, !dbg !6500
  %lnot.ext.i134 = zext i1 %107 to i32, !dbg !6500
  %conv.i135 = sext i32 %lnot.ext.i134 to i64, !dbg !6500
  br i1 %107, label %if.then.i138, label %copy_to_user.exit, !dbg !6528

if.then.i138:                                     ; preds = %check_copy_size.exit.i136
  %108 = load i8*, i8** %to.addr.i96, align 8, !dbg !6529
  %109 = load i8*, i8** %from.addr.i97, align 8, !dbg !6530
  %110 = load i64, i64* %n.addr.i98, align 8, !dbg !6531
  %call2.i137 = call i64 @_copy_to_user(i8* %108, i8* %109, i64 %110) #11, !dbg !6532
  store i64 %call2.i137, i64* %n.addr.i98, align 8, !dbg !6533
  br label %copy_to_user.exit, !dbg !6534

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i136, %if.then.i138
  %111 = load i64, i64* %n.addr.i98, align 8, !dbg !6535
  %tobool86 = icmp ne i64 %111, 0, !dbg !6536
  br i1 %tobool86, label %if.then87, label %if.end88, !dbg !6537

if.then87:                                        ; preds = %copy_to_user.exit
  %112 = load %struct.file*, %struct.file** %file, align 8, !dbg !6538
  call void @fput(%struct.file* %112) #9, !dbg !6540
  %113 = load i32, i32* %fd, align 4, !dbg !6541
  call void @put_unused_fd(i32 %113) #9, !dbg !6542
  store i32 -14, i32* %retval, align 4, !dbg !6543
  br label %return, !dbg !6543

if.end88:                                         ; preds = %copy_to_user.exit
  %114 = load i32, i32* %fd, align 4, !dbg !6544
  %115 = load %struct.file*, %struct.file** %file, align 8, !dbg !6545
  call void @fd_install(i32 %114, %struct.file* %115) #9, !dbg !6546
  store i32 0, i32* %retval, align 4, !dbg !6547
  br label %return, !dbg !6547

out_put_unused_fd:                                ; preds = %if.then80
  call void @llvm.dbg.label(metadata !6548), !dbg !6549
  %116 = load i32, i32* %fd, align 4, !dbg !6550
  call void @put_unused_fd(i32 %116) #9, !dbg !6551
  br label %out_free_lh, !dbg !6551

out_free_lh:                                      ; preds = %out_put_unused_fd, %if.then76, %if.then67, %if.then59, %if.then48, %if.then39, %if.then32, %if.then22
  call void @llvm.dbg.label(metadata !6552), !dbg !6553
  %117 = load %struct.linehandle_state*, %struct.linehandle_state** %lh, align 8, !dbg !6554
  call void @linehandle_free(%struct.linehandle_state* %117) #9, !dbg !6555
  %118 = load i32, i32* %ret, align 4, !dbg !6556
  store i32 %118, i32* %retval, align 4, !dbg !6557
  br label %return, !dbg !6557

return:                                           ; preds = %out_free_lh, %if.end88, %if.then87, %if.then11, %if.then7, %if.then3, %if.then
  %119 = load i32, i32* %retval, align 4, !dbg !6558
  ret i32 %119, !dbg !6558
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @lineevent_create(%struct.gpio_device* %gdev, i8* %ip) #0 !dbg !4542 {
entry:
  %retval.i.i120 = alloca i1, align 1
  %addr.addr.i.i121 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i121, metadata !4609, metadata !DIExpression()), !dbg !6559
  %bytes.addr.i.i122 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i122, metadata !4626, metadata !DIExpression()), !dbg !6563
  %is_source.addr.i.i123 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i123, metadata !4628, metadata !DIExpression()), !dbg !6564
  %sz.i.i124 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i124, metadata !4630, metadata !DIExpression()), !dbg !6565
  %__ret_warn_on.i.i125 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i125, metadata !4632, metadata !DIExpression()), !dbg !6566
  %tmp.i.i126 = alloca i64, align 8
  %to.addr.i127 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i127, metadata !4636, metadata !DIExpression()), !dbg !6567
  %from.addr.i128 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i128, metadata !4638, metadata !DIExpression()), !dbg !6568
  %n.addr.i129 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i129, metadata !4640, metadata !DIExpression()), !dbg !6569
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !4609, metadata !DIExpression()), !dbg !6570
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !4626, metadata !DIExpression()), !dbg !6574
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !4628, metadata !DIExpression()), !dbg !6575
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !4630, metadata !DIExpression()), !dbg !6576
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !4632, metadata !DIExpression()), !dbg !6577
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !5056, metadata !DIExpression()), !dbg !6578
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !5058, metadata !DIExpression()), !dbg !6579
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !5060, metadata !DIExpression()), !dbg !6580
  %retval = alloca i32, align 4
  %gdev.addr = alloca %struct.gpio_device*, align 8
  %ip.addr = alloca i8*, align 8
  %eventreq = alloca %struct.gpioevent_request, align 4
  %le = alloca %struct.lineevent_state*, align 8
  %desc = alloca %struct.gpio_desc*, align 8
  %file = alloca %struct.file*, align 8
  %offset = alloca i32, align 4
  %lflags = alloca i32, align 4
  %eflags = alloca i32, align 4
  %fd = alloca i32, align 4
  %ret = alloca i32, align 4
  %irq = alloca i32, align 4
  %irqflags = alloca i32, align 4
  %__tmp = alloca %struct.anon.71*, align 8
  %__kfifo = alloca %struct.__kfifo*, align 8
  %tmp = alloca i8*, align 8
  store %struct.gpio_device* %gdev, %struct.gpio_device** %gdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %gdev.addr, metadata !6581, metadata !DIExpression()), !dbg !6582
  store i8* %ip, i8** %ip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ip.addr, metadata !6583, metadata !DIExpression()), !dbg !6584
  call void @llvm.dbg.declare(metadata %struct.gpioevent_request* %eventreq, metadata !6585, metadata !DIExpression()), !dbg !6593
  call void @llvm.dbg.declare(metadata %struct.lineevent_state** %le, metadata !6594, metadata !DIExpression()), !dbg !6626
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc, metadata !6627, metadata !DIExpression()), !dbg !6628
  call void @llvm.dbg.declare(metadata %struct.file** %file, metadata !6629, metadata !DIExpression()), !dbg !6630
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !6631, metadata !DIExpression()), !dbg !6632
  call void @llvm.dbg.declare(metadata i32* %lflags, metadata !6633, metadata !DIExpression()), !dbg !6634
  call void @llvm.dbg.declare(metadata i32* %eflags, metadata !6635, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !6637, metadata !DIExpression()), !dbg !6638
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6639, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !6641, metadata !DIExpression()), !dbg !6642
  call void @llvm.dbg.declare(metadata i32* %irqflags, metadata !6643, metadata !DIExpression()), !dbg !6644
  store i32 0, i32* %irqflags, align 4, !dbg !6644
  %0 = bitcast %struct.gpioevent_request* %eventreq to i8*, !dbg !6645
  %1 = load i8*, i8** %ip.addr, align 8, !dbg !6646
  store i8* %0, i8** %to.addr.i, align 8
  store i8* %1, i8** %from.addr.i, align 8
  store i64 48, i64* %n.addr.i, align 8
  %2 = load i8*, i8** %to.addr.i, align 8, !dbg !6647
  %3 = load i64, i64* %n.addr.i, align 8, !dbg !6647
  store i8* %2, i8** %addr.addr.i.i, align 8
  store i64 %3, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !6576
  %4 = load i32, i32* %sz.i.i, align 4, !dbg !6648
  %cmp.i.i = icmp sge i32 %4, 0, !dbg !6648
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !6648

land.rhs.i.i:                                     ; preds = %entry
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !6648
  %conv.i.i = sext i32 %5 to i64, !dbg !6648
  %6 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6648
  %cmp1.i.i = icmp ult i64 %conv.i.i, %6, !dbg !6648
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !6649
  %lnot.i.i = xor i1 %7, true, !dbg !6648
  %lnot.ext.i.i = zext i1 %7 to i32, !dbg !6648
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !6648
  br i1 %7, label %if.then.i.i, label %if.end10.i.i, !dbg !6650

if.then.i.i:                                      ; preds = %land.end.i.i
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6651
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #6, !dbg !6652
  br i1 %9, label %if.else.i.i, label %if.then5.i.i, !dbg !6653

if.then5.i.i:                                     ; preds = %if.then.i.i
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !6654
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6655
  call void @copy_overflow(i32 %10, i64 %11) #11, !dbg !6656
  br label %if.end9.i.i, !dbg !6656

if.else.i.i:                                      ; preds = %if.then.i.i
  %12 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !6657
  %tobool6.i.i = trunc i8 %12 to i1, !dbg !6657
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !6658

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !6659
  br label %if.end.i.i, !dbg !6659

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !6660
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !6661
  br label %check_copy_size.exit.i, !dbg !6661

if.end10.i.i:                                     ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6577
  %cmp11.i.i = icmp ugt i64 %13, 2147483647, !dbg !6577
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !6577
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !6577
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !6577
  %14 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !6662
  %tobool17.i.i = icmp ne i32 %14, 0, !dbg !6662
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !6662
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !6662
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !6662
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !6577

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !6663, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !6664, !srcloc !4906
  br label %if.end31.i.i, !dbg !6665

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !6577
  %tobool32.i.i = icmp ne i32 %15, 0, !dbg !6577
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !6577
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !6577
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !6577
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !6662
  %16 = load i64, i64* %tmp.i.i, align 8, !dbg !6577
  %tobool38.i.i = icmp ne i64 %16, 0, !dbg !6666
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !6667

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !6668
  br label %check_copy_size.exit.i, !dbg !6668

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %17 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !6669
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6670
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !6671
  %tobool41.i.i = trunc i8 %19 to i1, !dbg !6671
  call void @check_object_size(i8* %17, i64 %18, i1 zeroext %tobool41.i.i) #11, !dbg !6672
  store i1 true, i1* %retval.i.i, align 1, !dbg !6673
  br label %check_copy_size.exit.i, !dbg !6673

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %20 = load i1, i1* %retval.i.i, align 1, !dbg !6674
  %lnot.i = xor i1 %20, true, !dbg !6647
  %lnot.ext.i = zext i1 %20 to i32, !dbg !6647
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !6647
  br i1 %20, label %if.then.i, label %copy_from_user.exit, !dbg !6675

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %21 = load i8*, i8** %to.addr.i, align 8, !dbg !6676
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !6677
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !6678
  %call2.i = call i64 @_copy_from_user(i8* %21, i8* %22, i64 %23) #11, !dbg !6679
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !6680
  br label %copy_from_user.exit, !dbg !6681

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !6682
  %tobool = icmp ne i64 %24, 0, !dbg !6683
  br i1 %tobool, label %if.then, label %if.end, !dbg !6684

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !6685
  br label %return, !dbg !6685

if.end:                                           ; preds = %copy_from_user.exit
  %lineoffset = getelementptr inbounds %struct.gpioevent_request, %struct.gpioevent_request* %eventreq, i32 0, i32 0, !dbg !6686
  %25 = load i32, i32* %lineoffset, align 4, !dbg !6686
  store i32 %25, i32* %offset, align 4, !dbg !6687
  %handleflags = getelementptr inbounds %struct.gpioevent_request, %struct.gpioevent_request* %eventreq, i32 0, i32 1, !dbg !6688
  %26 = load i32, i32* %handleflags, align 4, !dbg !6688
  store i32 %26, i32* %lflags, align 4, !dbg !6689
  %eventflags = getelementptr inbounds %struct.gpioevent_request, %struct.gpioevent_request* %eventreq, i32 0, i32 2, !dbg !6690
  %27 = load i32, i32* %eventflags, align 4, !dbg !6690
  store i32 %27, i32* %eflags, align 4, !dbg !6691
  %28 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !6692
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %28, i32 0, i32 5, !dbg !6693
  %29 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !6693
  %30 = load i32, i32* %offset, align 4, !dbg !6694
  %call1 = call %struct.gpio_desc* @gpiochip_get_desc(%struct.gpio_chip* %29, i32 %30) #9, !dbg !6695
  store %struct.gpio_desc* %call1, %struct.gpio_desc** %desc, align 8, !dbg !6696
  %31 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !6697
  %32 = bitcast %struct.gpio_desc* %31 to i8*, !dbg !6697
  %call2 = call zeroext i1 @IS_ERR(i8* %32) #9, !dbg !6699
  br i1 %call2, label %if.then3, label %if.end5, !dbg !6700

if.then3:                                         ; preds = %if.end
  %33 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !6701
  %34 = bitcast %struct.gpio_desc* %33 to i8*, !dbg !6701
  %call4 = call i64 @PTR_ERR(i8* %34) #9, !dbg !6702
  %conv = trunc i64 %call4 to i32, !dbg !6702
  store i32 %conv, i32* %retval, align 4, !dbg !6703
  br label %return, !dbg !6703

if.end5:                                          ; preds = %if.end
  %35 = load i32, i32* %lflags, align 4, !dbg !6704
  %conv6 = zext i32 %35 to i64, !dbg !6704
  %and = and i64 %conv6, -256, !dbg !6706
  %tobool7 = icmp ne i64 %and, 0, !dbg !6706
  br i1 %tobool7, label %if.then11, label %lor.lhs.false, !dbg !6707

lor.lhs.false:                                    ; preds = %if.end5
  %36 = load i32, i32* %eflags, align 4, !dbg !6708
  %conv8 = zext i32 %36 to i64, !dbg !6708
  %and9 = and i64 %conv8, -4, !dbg !6709
  %tobool10 = icmp ne i64 %and9, 0, !dbg !6709
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !6710

if.then11:                                        ; preds = %lor.lhs.false, %if.end5
  store i32 -22, i32* %retval, align 4, !dbg !6711
  br label %return, !dbg !6711

if.end12:                                         ; preds = %lor.lhs.false
  %37 = load i32, i32* %lflags, align 4, !dbg !6712
  %conv13 = zext i32 %37 to i64, !dbg !6712
  %and14 = and i64 %conv13, 2, !dbg !6714
  %tobool15 = icmp ne i64 %and14, 0, !dbg !6714
  br i1 %tobool15, label %if.then24, label %lor.lhs.false16, !dbg !6715

lor.lhs.false16:                                  ; preds = %if.end12
  %38 = load i32, i32* %lflags, align 4, !dbg !6716
  %conv17 = zext i32 %38 to i64, !dbg !6716
  %and18 = and i64 %conv17, 8, !dbg !6717
  %tobool19 = icmp ne i64 %and18, 0, !dbg !6717
  br i1 %tobool19, label %if.then24, label %lor.lhs.false20, !dbg !6718

lor.lhs.false20:                                  ; preds = %lor.lhs.false16
  %39 = load i32, i32* %lflags, align 4, !dbg !6719
  %conv21 = zext i32 %39 to i64, !dbg !6719
  %and22 = and i64 %conv21, 16, !dbg !6720
  %tobool23 = icmp ne i64 %and22, 0, !dbg !6720
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !6721

if.then24:                                        ; preds = %lor.lhs.false20, %lor.lhs.false16, %if.end12
  store i32 -22, i32* %retval, align 4, !dbg !6722
  br label %return, !dbg !6722

if.end25:                                         ; preds = %lor.lhs.false20
  %40 = load i32, i32* %lflags, align 4, !dbg !6723
  %conv26 = zext i32 %40 to i64, !dbg !6723
  %and27 = and i64 %conv26, 128, !dbg !6725
  %tobool28 = icmp ne i64 %and27, 0, !dbg !6725
  br i1 %tobool28, label %land.lhs.true, label %lor.lhs.false32, !dbg !6726

land.lhs.true:                                    ; preds = %if.end25
  %41 = load i32, i32* %lflags, align 4, !dbg !6727
  %conv29 = zext i32 %41 to i64, !dbg !6727
  %and30 = and i64 %conv29, 96, !dbg !6728
  %tobool31 = icmp ne i64 %and30, 0, !dbg !6728
  br i1 %tobool31, label %if.then40, label %lor.lhs.false32, !dbg !6729

lor.lhs.false32:                                  ; preds = %land.lhs.true, %if.end25
  %42 = load i32, i32* %lflags, align 4, !dbg !6730
  %conv33 = zext i32 %42 to i64, !dbg !6730
  %and34 = and i64 %conv33, 64, !dbg !6731
  %tobool35 = icmp ne i64 %and34, 0, !dbg !6731
  br i1 %tobool35, label %land.lhs.true36, label %if.end41, !dbg !6732

land.lhs.true36:                                  ; preds = %lor.lhs.false32
  %43 = load i32, i32* %lflags, align 4, !dbg !6733
  %conv37 = zext i32 %43 to i64, !dbg !6733
  %and38 = and i64 %conv37, 32, !dbg !6734
  %tobool39 = icmp ne i64 %and38, 0, !dbg !6734
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !6735

if.then40:                                        ; preds = %land.lhs.true36, %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !6736
  br label %return, !dbg !6736

if.end41:                                         ; preds = %land.lhs.true36, %lor.lhs.false32
  %call42 = call i8* @kzalloc(i64 336, i32 3264) #9, !dbg !6737
  %44 = bitcast i8* %call42 to %struct.lineevent_state*, !dbg !6737
  store %struct.lineevent_state* %44, %struct.lineevent_state** %le, align 8, !dbg !6738
  %45 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !6739
  %tobool43 = icmp ne %struct.lineevent_state* %45, null, !dbg !6739
  br i1 %tobool43, label %if.end45, label %if.then44, !dbg !6741

if.then44:                                        ; preds = %if.end41
  store i32 -12, i32* %retval, align 4, !dbg !6742
  br label %return, !dbg !6742

if.end45:                                         ; preds = %if.end41
  %46 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !6743
  %47 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !6744
  %gdev46 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %47, i32 0, i32 0, !dbg !6745
  store %struct.gpio_device* %46, %struct.gpio_device** %gdev46, align 8, !dbg !6746
  %48 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !6747
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %48, i32 0, i32 1, !dbg !6748
  %call47 = call %struct.device* @get_device(%struct.device* %dev) #9, !dbg !6749
  %consumer_label = getelementptr inbounds %struct.gpioevent_request, %struct.gpioevent_request* %eventreq, i32 0, i32 3, !dbg !6750
  %arrayidx = getelementptr [32 x i8], [32 x i8]* %consumer_label, i64 0, i64 0, !dbg !6752
  %49 = load i8, i8* %arrayidx, align 4, !dbg !6752
  %conv48 = sext i8 %49 to i32, !dbg !6752
  %cmp = icmp ne i32 %conv48, 0, !dbg !6753
  br i1 %cmp, label %if.then50, label %if.end57, !dbg !6754

if.then50:                                        ; preds = %if.end45
  %consumer_label51 = getelementptr inbounds %struct.gpioevent_request, %struct.gpioevent_request* %eventreq, i32 0, i32 3, !dbg !6755
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %consumer_label51, i64 0, i64 0, !dbg !6757
  %call52 = call i8* @kstrndup(i8* %arraydecay, i64 31, i32 3264) #9, !dbg !6758
  %50 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !6759
  %label = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %50, i32 0, i32 1, !dbg !6760
  store i8* %call52, i8** %label, align 8, !dbg !6761
  %51 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !6762
  %label53 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %51, i32 0, i32 1, !dbg !6764
  %52 = load i8*, i8** %label53, align 8, !dbg !6764
  %tobool54 = icmp ne i8* %52, null, !dbg !6762
  br i1 %tobool54, label %if.end56, label %if.then55, !dbg !6765

if.then55:                                        ; preds = %if.then50
  store i32 -12, i32* %ret, align 4, !dbg !6766
  br label %out_free_le, !dbg !6768

if.end56:                                         ; preds = %if.then50
  br label %if.end57, !dbg !6769

if.end57:                                         ; preds = %if.end56, %if.end45
  %53 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !6770
  %54 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !6771
  %label58 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %54, i32 0, i32 1, !dbg !6772
  %55 = load i8*, i8** %label58, align 8, !dbg !6772
  %call59 = call i32 @gpiod_request(%struct.gpio_desc* %53, i8* %55) #9, !dbg !6773
  store i32 %call59, i32* %ret, align 4, !dbg !6774
  %56 = load i32, i32* %ret, align 4, !dbg !6775
  %tobool60 = icmp ne i32 %56, 0, !dbg !6775
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !6777

if.then61:                                        ; preds = %if.end57
  br label %out_free_le, !dbg !6778

if.end62:                                         ; preds = %if.end57
  %57 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !6779
  %58 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !6780
  %desc63 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %58, i32 0, i32 2, !dbg !6781
  store %struct.gpio_desc* %57, %struct.gpio_desc** %desc63, align 8, !dbg !6782
  %59 = load i32, i32* %eflags, align 4, !dbg !6783
  %60 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !6784
  %eflags64 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %60, i32 0, i32 3, !dbg !6785
  store i32 %59, i32* %eflags64, align 8, !dbg !6786
  %61 = load i32, i32* %lflags, align 4, !dbg !6787
  %62 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !6788
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %62, i32 0, i32 1, !dbg !6789
  call void @linehandle_flags_to_desc_flags(i32 %61, i64* %flags) #9, !dbg !6790
  %63 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !6791
  %call65 = call i32 @gpiod_direction_input(%struct.gpio_desc* %63) #9, !dbg !6792
  store i32 %call65, i32* %ret, align 4, !dbg !6793
  %64 = load i32, i32* %ret, align 4, !dbg !6794
  %tobool66 = icmp ne i32 %64, 0, !dbg !6794
  br i1 %tobool66, label %if.then67, label %if.end68, !dbg !6796

if.then67:                                        ; preds = %if.end62
  br label %out_free_le, !dbg !6797

if.end68:                                         ; preds = %if.end62
  %65 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !6798
  %gdev69 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %65, i32 0, i32 0, !dbg !6799
  %66 = load %struct.gpio_device*, %struct.gpio_device** %gdev69, align 8, !dbg !6799
  %notifier = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %66, i32 0, i32 12, !dbg !6800
  %67 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !6801
  %68 = bitcast %struct.gpio_desc* %67 to i8*, !dbg !6801
  %call70 = call i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head* %notifier, i64 1, i8* %68) #9, !dbg !6802
  %69 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !6803
  %call71 = call i32 @gpiod_to_irq(%struct.gpio_desc* %69) #9, !dbg !6804
  store i32 %call71, i32* %irq, align 4, !dbg !6805
  %70 = load i32, i32* %irq, align 4, !dbg !6806
  %cmp72 = icmp sle i32 %70, 0, !dbg !6808
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !6809

if.then74:                                        ; preds = %if.end68
  store i32 -19, i32* %ret, align 4, !dbg !6810
  br label %out_free_le, !dbg !6812

if.end75:                                         ; preds = %if.end68
  %71 = load i32, i32* %irq, align 4, !dbg !6813
  %72 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !6814
  %irq76 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %72, i32 0, i32 4, !dbg !6815
  store i32 %71, i32* %irq76, align 4, !dbg !6816
  %73 = load i32, i32* %eflags, align 4, !dbg !6817
  %conv77 = zext i32 %73 to i64, !dbg !6817
  %and78 = and i64 %conv77, 1, !dbg !6819
  %tobool79 = icmp ne i64 %and78, 0, !dbg !6819
  br i1 %tobool79, label %if.then80, label %if.end84, !dbg !6820

if.then80:                                        ; preds = %if.end75
  %74 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !6821
  %flags81 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %74, i32 0, i32 1, !dbg !6822
  %call82 = call zeroext i1 @test_bit(i64 6, i64* %flags81) #9, !dbg !6823
  %75 = zext i1 %call82 to i64, !dbg !6823
  %cond = select i1 %call82, i32 2, i32 1, !dbg !6823
  %76 = load i32, i32* %irqflags, align 4, !dbg !6824
  %or = or i32 %76, %cond, !dbg !6824
  store i32 %or, i32* %irqflags, align 4, !dbg !6824
  br label %if.end84, !dbg !6825

if.end84:                                         ; preds = %if.then80, %if.end75
  %77 = load i32, i32* %eflags, align 4, !dbg !6826
  %conv85 = zext i32 %77 to i64, !dbg !6826
  %and86 = and i64 %conv85, 2, !dbg !6828
  %tobool87 = icmp ne i64 %and86, 0, !dbg !6828
  br i1 %tobool87, label %if.then88, label %if.end94, !dbg !6829

if.then88:                                        ; preds = %if.end84
  %78 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !6830
  %flags89 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %78, i32 0, i32 1, !dbg !6831
  %call90 = call zeroext i1 @test_bit(i64 6, i64* %flags89) #9, !dbg !6832
  %79 = zext i1 %call90 to i64, !dbg !6832
  %cond92 = select i1 %call90, i32 1, i32 2, !dbg !6832
  %80 = load i32, i32* %irqflags, align 4, !dbg !6833
  %or93 = or i32 %80, %cond92, !dbg !6833
  store i32 %or93, i32* %irqflags, align 4, !dbg !6833
  br label %if.end94, !dbg !6834

if.end94:                                         ; preds = %if.then88, %if.end84
  %81 = load i32, i32* %irqflags, align 4, !dbg !6835
  %or95 = or i32 %81, 8192, !dbg !6835
  store i32 %or95, i32* %irqflags, align 4, !dbg !6835
  call void @llvm.dbg.declare(metadata %struct.anon.71** %__tmp, metadata !6836, metadata !DIExpression()), !dbg !6839
  %82 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !6839
  %events = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %82, i32 0, i32 6, !dbg !6839
  store %struct.anon.71* %events, %struct.anon.71** %__tmp, align 8, !dbg !6839
  call void @llvm.dbg.declare(metadata %struct.__kfifo** %__kfifo, metadata !6840, metadata !DIExpression()), !dbg !6839
  %83 = load %struct.anon.71*, %struct.anon.71** %__tmp, align 8, !dbg !6839
  %84 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %83, i32 0, i32 0, !dbg !6839
  %kfifo = bitcast %union.anon.72* %84 to %struct.__kfifo*, !dbg !6839
  store %struct.__kfifo* %kfifo, %struct.__kfifo** %__kfifo, align 8, !dbg !6839
  %85 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo, align 8, !dbg !6839
  %in = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %85, i32 0, i32 0, !dbg !6839
  store i32 0, i32* %in, align 8, !dbg !6839
  %86 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo, align 8, !dbg !6839
  %out = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %86, i32 0, i32 1, !dbg !6839
  store i32 0, i32* %out, align 4, !dbg !6839
  %87 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo, align 8, !dbg !6839
  %mask = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %87, i32 0, i32 2, !dbg !6839
  store i32 15, i32* %mask, align 8, !dbg !6839
  %88 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo, align 8, !dbg !6839
  %esize = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %88, i32 0, i32 3, !dbg !6839
  store i32 16, i32* %esize, align 4, !dbg !6839
  %89 = load %struct.anon.71*, %struct.anon.71** %__tmp, align 8, !dbg !6839
  %buf = getelementptr inbounds %struct.anon.71, %struct.anon.71* %89, i32 0, i32 1, !dbg !6839
  %arraydecay96 = getelementptr inbounds [16 x %struct.gpioevent_data], [16 x %struct.gpioevent_data]* %buf, i64 0, i64 0, !dbg !6839
  %90 = bitcast %struct.gpioevent_data* %arraydecay96 to i8*, !dbg !6839
  %91 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo, align 8, !dbg !6839
  %data = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %91, i32 0, i32 4, !dbg !6839
  store i8* %90, i8** %data, align 8, !dbg !6839
  store i8* %90, i8** %tmp, align 8, !dbg !6839
  %92 = load i8*, i8** %tmp, align 8, !dbg !6839
  br label %do.body, !dbg !6841

do.body:                                          ; preds = %if.end94
  %93 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !6842
  %wait = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %93, i32 0, i32 5, !dbg !6842
  call void @__init_waitqueue_head(%struct.wait_queue_head* %wait, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), %struct.lock_class_key* @lineevent_create.__key) #9, !dbg !6842
  br label %do.end, !dbg !6842

do.end:                                           ; preds = %do.body
  %94 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !6844
  %irq97 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %94, i32 0, i32 4, !dbg !6845
  %95 = load i32, i32* %irq97, align 4, !dbg !6845
  %96 = load i32, i32* %irqflags, align 4, !dbg !6846
  %conv98 = sext i32 %96 to i64, !dbg !6846
  %97 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !6847
  %label99 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %97, i32 0, i32 1, !dbg !6848
  %98 = load i8*, i8** %label99, align 8, !dbg !6848
  %99 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !6849
  %100 = bitcast %struct.lineevent_state* %99 to i8*, !dbg !6849
  %call100 = call i32 @request_threaded_irq(i32 %95, i32 (i32, i8*)* @lineevent_irq_handler, i32 (i32, i8*)* @lineevent_irq_thread, i64 %conv98, i8* %98, i8* %100) #9, !dbg !6850
  store i32 %call100, i32* %ret, align 4, !dbg !6851
  %101 = load i32, i32* %ret, align 4, !dbg !6852
  %tobool101 = icmp ne i32 %101, 0, !dbg !6852
  br i1 %tobool101, label %if.then102, label %if.end103, !dbg !6854

if.then102:                                       ; preds = %do.end
  br label %out_free_le, !dbg !6855

if.end103:                                        ; preds = %do.end
  %call104 = call i32 @get_unused_fd_flags(i32 524288) #9, !dbg !6856
  store i32 %call104, i32* %fd, align 4, !dbg !6857
  %102 = load i32, i32* %fd, align 4, !dbg !6858
  %cmp105 = icmp slt i32 %102, 0, !dbg !6860
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !6861

if.then107:                                       ; preds = %if.end103
  %103 = load i32, i32* %fd, align 4, !dbg !6862
  store i32 %103, i32* %ret, align 4, !dbg !6864
  br label %out_free_le, !dbg !6865

if.end108:                                        ; preds = %if.end103
  %104 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !6866
  %105 = bitcast %struct.lineevent_state* %104 to i8*, !dbg !6866
  %call109 = call %struct.file* @anon_inode_getfile(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), %struct.file_operations* @lineevent_fileops, i8* %105, i32 524288) #9, !dbg !6867
  store %struct.file* %call109, %struct.file** %file, align 8, !dbg !6868
  %106 = load %struct.file*, %struct.file** %file, align 8, !dbg !6869
  %107 = bitcast %struct.file* %106 to i8*, !dbg !6869
  %call110 = call zeroext i1 @IS_ERR(i8* %107) #9, !dbg !6871
  br i1 %call110, label %if.then111, label %if.end114, !dbg !6872

if.then111:                                       ; preds = %if.end108
  %108 = load %struct.file*, %struct.file** %file, align 8, !dbg !6873
  %109 = bitcast %struct.file* %108 to i8*, !dbg !6873
  %call112 = call i64 @PTR_ERR(i8* %109) #9, !dbg !6875
  %conv113 = trunc i64 %call112 to i32, !dbg !6875
  store i32 %conv113, i32* %ret, align 4, !dbg !6876
  br label %out_put_unused_fd, !dbg !6877

if.end114:                                        ; preds = %if.end108
  %110 = load i32, i32* %fd, align 4, !dbg !6878
  %fd115 = getelementptr inbounds %struct.gpioevent_request, %struct.gpioevent_request* %eventreq, i32 0, i32 4, !dbg !6879
  store i32 %110, i32* %fd115, align 4, !dbg !6880
  %111 = load i8*, i8** %ip.addr, align 8, !dbg !6881
  %112 = bitcast %struct.gpioevent_request* %eventreq to i8*, !dbg !6882
  store i8* %111, i8** %to.addr.i127, align 8
  store i8* %112, i8** %from.addr.i128, align 8
  store i64 48, i64* %n.addr.i129, align 8
  %113 = load i8*, i8** %from.addr.i128, align 8, !dbg !6883
  %114 = load i64, i64* %n.addr.i129, align 8, !dbg !6883
  store i8* %113, i8** %addr.addr.i.i121, align 8
  store i64 %114, i64* %bytes.addr.i.i122, align 8
  store i8 1, i8* %is_source.addr.i.i123, align 1
  store i32 -1, i32* %sz.i.i124, align 4, !dbg !6565
  %115 = load i32, i32* %sz.i.i124, align 4, !dbg !6884
  %cmp.i.i130 = icmp sge i32 %115, 0, !dbg !6884
  br i1 %cmp.i.i130, label %land.rhs.i.i133, label %land.end.i.i137, !dbg !6884

land.rhs.i.i133:                                  ; preds = %if.end114
  %116 = load i32, i32* %sz.i.i124, align 4, !dbg !6884
  %conv.i.i131 = sext i32 %116 to i64, !dbg !6884
  %117 = load i64, i64* %bytes.addr.i.i122, align 8, !dbg !6884
  %cmp1.i.i132 = icmp ult i64 %conv.i.i131, %117, !dbg !6884
  br label %land.end.i.i137

land.end.i.i137:                                  ; preds = %land.rhs.i.i133, %if.end114
  %118 = phi i1 [ false, %if.end114 ], [ %cmp1.i.i132, %land.rhs.i.i133 ], !dbg !6885
  %lnot.i.i134 = xor i1 %118, true, !dbg !6884
  %lnot.ext.i.i135 = zext i1 %118 to i32, !dbg !6884
  %conv4.i.i136 = sext i32 %lnot.ext.i.i135 to i64, !dbg !6884
  br i1 %118, label %if.then.i.i138, label %if.end10.i.i153, !dbg !6886

if.then.i.i138:                                   ; preds = %land.end.i.i137
  %119 = load i64, i64* %bytes.addr.i.i122, align 8, !dbg !6887
  %120 = call i1 @llvm.is.constant.i64(i64 %119) #6, !dbg !6888
  br i1 %120, label %if.else.i.i141, label %if.then5.i.i139, !dbg !6889

if.then5.i.i139:                                  ; preds = %if.then.i.i138
  %121 = load i32, i32* %sz.i.i124, align 4, !dbg !6890
  %122 = load i64, i64* %bytes.addr.i.i122, align 8, !dbg !6891
  call void @copy_overflow(i32 %121, i64 %122) #11, !dbg !6892
  br label %if.end9.i.i145, !dbg !6892

if.else.i.i141:                                   ; preds = %if.then.i.i138
  %123 = load i8, i8* %is_source.addr.i.i123, align 1, !dbg !6893
  %tobool6.i.i140 = trunc i8 %123 to i1, !dbg !6893
  br i1 %tobool6.i.i140, label %if.then7.i.i142, label %if.else8.i.i143, !dbg !6894

if.then7.i.i142:                                  ; preds = %if.else.i.i141
  call void @__bad_copy_from() #11, !dbg !6895
  br label %if.end.i.i144, !dbg !6895

if.else8.i.i143:                                  ; preds = %if.else.i.i141
  call void @__bad_copy_to() #11, !dbg !6896
  br label %if.end.i.i144

if.end.i.i144:                                    ; preds = %if.else8.i.i143, %if.then7.i.i142
  br label %if.end9.i.i145

if.end9.i.i145:                                   ; preds = %if.end.i.i144, %if.then5.i.i139
  store i1 false, i1* %retval.i.i120, align 1, !dbg !6897
  br label %check_copy_size.exit.i167, !dbg !6897

if.end10.i.i153:                                  ; preds = %land.end.i.i137
  %124 = load i64, i64* %bytes.addr.i.i122, align 8, !dbg !6566
  %cmp11.i.i146 = icmp ugt i64 %124, 2147483647, !dbg !6566
  %lnot13.i.i147 = xor i1 %cmp11.i.i146, true, !dbg !6566
  %lnot.ext16.i.i148 = zext i1 %cmp11.i.i146 to i32, !dbg !6566
  store i32 %lnot.ext16.i.i148, i32* %__ret_warn_on.i.i125, align 4, !dbg !6566
  %125 = load i32, i32* %__ret_warn_on.i.i125, align 4, !dbg !6898
  %tobool17.i.i149 = icmp ne i32 %125, 0, !dbg !6898
  %lnot18.i.i150 = xor i1 %tobool17.i.i149, true, !dbg !6898
  %lnot.ext21.i.i151 = zext i1 %tobool17.i.i149 to i32, !dbg !6898
  %conv22.i.i152 = sext i32 %lnot.ext21.i.i151 to i64, !dbg !6898
  br i1 %tobool17.i.i149, label %if.then24.i.i154, label %if.end31.i.i160, !dbg !6566

if.then24.i.i154:                                 ; preds = %if.end10.i.i153
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !6899, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !6900, !srcloc !4906
  br label %if.end31.i.i160, !dbg !6901

if.end31.i.i160:                                  ; preds = %if.then24.i.i154, %if.end10.i.i153
  %126 = load i32, i32* %__ret_warn_on.i.i125, align 4, !dbg !6566
  %tobool32.i.i155 = icmp ne i32 %126, 0, !dbg !6566
  %lnot33.i.i156 = xor i1 %tobool32.i.i155, true, !dbg !6566
  %lnot.ext36.i.i157 = zext i1 %tobool32.i.i155 to i32, !dbg !6566
  %conv37.i.i158 = sext i32 %lnot.ext36.i.i157 to i64, !dbg !6566
  store i64 %conv37.i.i158, i64* %tmp.i.i126, align 8, !dbg !6898
  %127 = load i64, i64* %tmp.i.i126, align 8, !dbg !6566
  %tobool38.i.i159 = icmp ne i64 %127, 0, !dbg !6902
  br i1 %tobool38.i.i159, label %if.then39.i.i161, label %if.end40.i.i163, !dbg !6903

if.then39.i.i161:                                 ; preds = %if.end31.i.i160
  store i1 false, i1* %retval.i.i120, align 1, !dbg !6904
  br label %check_copy_size.exit.i167, !dbg !6904

if.end40.i.i163:                                  ; preds = %if.end31.i.i160
  %128 = load i8*, i8** %addr.addr.i.i121, align 8, !dbg !6905
  %129 = load i64, i64* %bytes.addr.i.i122, align 8, !dbg !6906
  %130 = load i8, i8* %is_source.addr.i.i123, align 1, !dbg !6907
  %tobool41.i.i162 = trunc i8 %130 to i1, !dbg !6907
  call void @check_object_size(i8* %128, i64 %129, i1 zeroext %tobool41.i.i162) #11, !dbg !6908
  store i1 true, i1* %retval.i.i120, align 1, !dbg !6909
  br label %check_copy_size.exit.i167, !dbg !6909

check_copy_size.exit.i167:                        ; preds = %if.end40.i.i163, %if.then39.i.i161, %if.end9.i.i145
  %131 = load i1, i1* %retval.i.i120, align 1, !dbg !6910
  %lnot.i164 = xor i1 %131, true, !dbg !6883
  %lnot.ext.i165 = zext i1 %131 to i32, !dbg !6883
  %conv.i166 = sext i32 %lnot.ext.i165 to i64, !dbg !6883
  br i1 %131, label %if.then.i169, label %copy_to_user.exit, !dbg !6911

if.then.i169:                                     ; preds = %check_copy_size.exit.i167
  %132 = load i8*, i8** %to.addr.i127, align 8, !dbg !6912
  %133 = load i8*, i8** %from.addr.i128, align 8, !dbg !6913
  %134 = load i64, i64* %n.addr.i129, align 8, !dbg !6914
  %call2.i168 = call i64 @_copy_to_user(i8* %132, i8* %133, i64 %134) #11, !dbg !6915
  store i64 %call2.i168, i64* %n.addr.i129, align 8, !dbg !6916
  br label %copy_to_user.exit, !dbg !6917

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i167, %if.then.i169
  %135 = load i64, i64* %n.addr.i129, align 8, !dbg !6918
  %tobool117 = icmp ne i64 %135, 0, !dbg !6919
  br i1 %tobool117, label %if.then118, label %if.end119, !dbg !6920

if.then118:                                       ; preds = %copy_to_user.exit
  %136 = load %struct.file*, %struct.file** %file, align 8, !dbg !6921
  call void @fput(%struct.file* %136) #9, !dbg !6923
  %137 = load i32, i32* %fd, align 4, !dbg !6924
  call void @put_unused_fd(i32 %137) #9, !dbg !6925
  store i32 -14, i32* %retval, align 4, !dbg !6926
  br label %return, !dbg !6926

if.end119:                                        ; preds = %copy_to_user.exit
  %138 = load i32, i32* %fd, align 4, !dbg !6927
  %139 = load %struct.file*, %struct.file** %file, align 8, !dbg !6928
  call void @fd_install(i32 %138, %struct.file* %139) #9, !dbg !6929
  store i32 0, i32* %retval, align 4, !dbg !6930
  br label %return, !dbg !6930

out_put_unused_fd:                                ; preds = %if.then111
  call void @llvm.dbg.label(metadata !6931), !dbg !6932
  %140 = load i32, i32* %fd, align 4, !dbg !6933
  call void @put_unused_fd(i32 %140) #9, !dbg !6934
  br label %out_free_le, !dbg !6934

out_free_le:                                      ; preds = %out_put_unused_fd, %if.then107, %if.then102, %if.then74, %if.then67, %if.then61, %if.then55
  call void @llvm.dbg.label(metadata !6935), !dbg !6936
  %141 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !6937
  call void @lineevent_free(%struct.lineevent_state* %141) #9, !dbg !6938
  %142 = load i32, i32* %ret, align 4, !dbg !6939
  store i32 %142, i32* %retval, align 4, !dbg !6940
  br label %return, !dbg !6940

return:                                           ; preds = %out_free_le, %if.end119, %if.then118, %if.then44, %if.then40, %if.then24, %if.then11, %if.then3, %if.then
  %143 = load i32, i32* %retval, align 4, !dbg !6941
  ret i32 %143, !dbg !6941
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @lineinfo_ensure_abi_version(%struct.gpio_chardev_data* %cdata, i32 %version) #0 !dbg !6942 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !6945, metadata !DIExpression()), !dbg !6950
  %old.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %old.addr.i.i, metadata !6954, metadata !DIExpression()), !dbg !6955
  %new.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i.i, metadata !6956, metadata !DIExpression()), !dbg !6957
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !6958, metadata !DIExpression()), !dbg !6960
  %__old.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__old.i.i, metadata !6961, metadata !DIExpression()), !dbg !6960
  %__new.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__new.i.i, metadata !6962, metadata !DIExpression()), !dbg !6960
  %__ptr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %__ptr.i.i, metadata !6963, metadata !DIExpression()), !dbg !6960
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6964, metadata !DIExpression()), !dbg !6966
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6968, metadata !DIExpression()), !dbg !6969
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !6970, metadata !DIExpression()), !dbg !6971
  %old.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %old.addr.i, metadata !6972, metadata !DIExpression()), !dbg !6973
  %new.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i, metadata !6974, metadata !DIExpression()), !dbg !6975
  %retval = alloca i32, align 4
  %cdata.addr = alloca %struct.gpio_chardev_data*, align 8
  %version.addr = alloca i32, align 4
  %abiv = alloca i32, align 4
  store %struct.gpio_chardev_data* %cdata, %struct.gpio_chardev_data** %cdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chardev_data** %cdata.addr, metadata !6976, metadata !DIExpression()), !dbg !6977
  store i32 %version, i32* %version.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %version.addr, metadata !6978, metadata !DIExpression()), !dbg !6979
  call void @llvm.dbg.declare(metadata i32* %abiv, metadata !6980, metadata !DIExpression()), !dbg !6981
  %0 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdata.addr, align 8, !dbg !6982
  %watch_abi_version = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %0, i32 0, i32 5, !dbg !6983
  %1 = load i32, i32* %version.addr, align 4, !dbg !6984
  store %struct.atomic_t* %watch_abi_version, %struct.atomic_t** %v.addr.i, align 8
  store i32 0, i32* %old.addr.i, align 4
  store i32 %1, i32* %new.addr.i, align 4
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6985
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !6985
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6986
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !6987
  %conv.i.i = trunc i64 %5 to i32, !dbg !6987
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #11, !dbg !6988
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6989
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !6989
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #11, !dbg !6989
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6990
  %9 = load i32, i32* %old.addr.i, align 4, !dbg !6991
  %10 = load i32, i32* %new.addr.i, align 4, !dbg !6992
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %9, i32* %old.addr.i.i, align 4
  store i32 %10, i32* %new.addr.i.i, align 4
  %11 = load i32, i32* %old.addr.i.i, align 4, !dbg !6960
  store i32 %11, i32* %__old.i.i, align 4, !dbg !6960
  %12 = load i32, i32* %new.addr.i.i, align 4, !dbg !6960
  store i32 %12, i32* %__new.i.i, align 4, !dbg !6960
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6960
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %13, i32 0, i32 0, !dbg !6960
  store i32* %counter.i.i, i32** %__ptr.i.i, align 8, !dbg !6960
  %14 = load i32*, i32** %__ptr.i.i, align 8, !dbg !6960
  %15 = load i32, i32* %__new.i.i, align 4, !dbg !6960
  %16 = load i32, i32* %__old.i.i, align 4, !dbg !6960
  %17 = call i32 asm sideeffect "cmpxchgl $2,$1", "={ax},=*m,r,0,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %14, i32 %15, i32 %16, i32* %14) #6, !dbg !6960, !srcloc !6993
  store i32 %17, i32* %__ret.i.i, align 4, !dbg !6960
  %18 = load i32, i32* %__ret.i.i, align 4, !dbg !6960
  store i32 %18, i32* %tmp.i.i, align 4, !dbg !6960
  %19 = load i32, i32* %tmp.i.i, align 4, !dbg !6960
  store i32 %19, i32* %abiv, align 4, !dbg !6981
  %20 = load i32, i32* %abiv, align 4, !dbg !6994
  %21 = load i32, i32* %version.addr, align 4, !dbg !6996
  %cmp = icmp eq i32 %20, %21, !dbg !6997
  br i1 %cmp, label %if.then, label %if.end, !dbg !6998

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6999
  br label %return, !dbg !6999

if.end:                                           ; preds = %entry
  %22 = load i32, i32* %abiv, align 4, !dbg !7000
  store i32 %22, i32* %retval, align 4, !dbg !7001
  br label %return, !dbg !7001

return:                                           ; preds = %if.end, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !7002
  ret i32 %23, !dbg !7002
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #0 !dbg !7003 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7009, metadata !DIExpression()), !dbg !7012
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7014, metadata !DIExpression()), !dbg !7015
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !7016, metadata !DIExpression()), !dbg !7018
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !6964, metadata !DIExpression()), !dbg !7019
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6968, metadata !DIExpression()), !dbg !7021
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7022, metadata !DIExpression()), !dbg !7023
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7024, metadata !DIExpression()), !dbg !7025
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7026
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7027
  %div = sdiv i64 %1, 64, !dbg !7027
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7028
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7026
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7029
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7030
  %conv.i = trunc i64 %4 to i32, !dbg !7030
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #11, !dbg !7031
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7032
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7032
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #11, !dbg !7032
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7033
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7034
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !7018
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !7018
  %11 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #6, !dbg !7018, !srcloc !7035
  store i8 %11, i8* %c.i, align 1, !dbg !7018
  %12 = load i8, i8* %c.i, align 1, !dbg !7018
  %tobool.i = trunc i8 %12 to i1, !dbg !7018
  %frombool.i = zext i1 %tobool.i to i8, !dbg !7018
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !7018
  %13 = load i8, i8* %tmp.i, align 1, !dbg !7018
  %tobool1.i = trunc i8 %13 to i1, !dbg !7018
  ret i1 %tobool1.i, !dbg !7036
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #0 !dbg !7037 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7040, metadata !DIExpression()), !dbg !7042
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7044, metadata !DIExpression()), !dbg !7045
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7046, metadata !DIExpression()), !dbg !7048
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7050, metadata !DIExpression()), !dbg !7051
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7052, metadata !DIExpression()), !dbg !7053
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7054, metadata !DIExpression()), !dbg !7055
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7056
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7057
  %div = sdiv i64 %1, 64, !dbg !7057
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7058
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7056
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7059
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7060
  %conv.i = trunc i64 %4 to i32, !dbg !7060
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #11, !dbg !7061
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7062
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7062
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #11, !dbg !7062
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7063
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7064
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !7065
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #6, !dbg !7067
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !7068

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !7069
  %12 = bitcast i64* %11 to i8*, !dbg !7069
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !7069
  %shr.i = ashr i64 %13, 3, !dbg !7069
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !7069
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !7071
  %and.i = and i64 %14, 7, !dbg !7071
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !7071
  %shl.i = shl i32 1, %sh_prom.i, !dbg !7071
  %neg.i = xor i32 %shl.i, -1, !dbg !7072
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #6, !dbg !7073, !srcloc !7074
  br label %arch_clear_bit.exit, !dbg !7075

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !7076
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !7078
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #6, !dbg !7079, !srcloc !7080
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !7081
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @lineinfo_get(%struct.gpio_chardev_data* %cdev, i8* %ip, i1 zeroext %watch) #0 !dbg !7082 {
entry:
  %retval.i.i32 = alloca i1, align 1
  %addr.addr.i.i33 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i33, metadata !4609, metadata !DIExpression()), !dbg !7085
  %bytes.addr.i.i34 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i34, metadata !4626, metadata !DIExpression()), !dbg !7089
  %is_source.addr.i.i35 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i35, metadata !4628, metadata !DIExpression()), !dbg !7090
  %sz.i.i36 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i36, metadata !4630, metadata !DIExpression()), !dbg !7091
  %__ret_warn_on.i.i37 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i37, metadata !4632, metadata !DIExpression()), !dbg !7092
  %tmp.i.i38 = alloca i64, align 8
  %to.addr.i39 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i39, metadata !4636, metadata !DIExpression()), !dbg !7093
  %from.addr.i40 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i40, metadata !4638, metadata !DIExpression()), !dbg !7094
  %n.addr.i41 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i41, metadata !4640, metadata !DIExpression()), !dbg !7095
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !4609, metadata !DIExpression()), !dbg !7096
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !4626, metadata !DIExpression()), !dbg !7100
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !4628, metadata !DIExpression()), !dbg !7101
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !4630, metadata !DIExpression()), !dbg !7102
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !4632, metadata !DIExpression()), !dbg !7103
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !5056, metadata !DIExpression()), !dbg !7104
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !5058, metadata !DIExpression()), !dbg !7105
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !5060, metadata !DIExpression()), !dbg !7106
  %retval = alloca i32, align 4
  %cdev.addr = alloca %struct.gpio_chardev_data*, align 8
  %ip.addr = alloca i8*, align 8
  %watch.addr = alloca i8, align 1
  %desc = alloca %struct.gpio_desc*, align 8
  %lineinfo = alloca %struct.gpio_v2_line_info, align 8
  store %struct.gpio_chardev_data* %cdev, %struct.gpio_chardev_data** %cdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_chardev_data** %cdev.addr, metadata !7107, metadata !DIExpression()), !dbg !7108
  store i8* %ip, i8** %ip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ip.addr, metadata !7109, metadata !DIExpression()), !dbg !7110
  %frombool = zext i1 %watch to i8
  store i8 %frombool, i8* %watch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %watch.addr, metadata !7111, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc, metadata !7113, metadata !DIExpression()), !dbg !7114
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_info* %lineinfo, metadata !7115, metadata !DIExpression()), !dbg !7116
  %0 = bitcast %struct.gpio_v2_line_info* %lineinfo to i8*, !dbg !7117
  %1 = load i8*, i8** %ip.addr, align 8, !dbg !7118
  store i8* %0, i8** %to.addr.i, align 8
  store i8* %1, i8** %from.addr.i, align 8
  store i64 256, i64* %n.addr.i, align 8
  %2 = load i8*, i8** %to.addr.i, align 8, !dbg !7119
  %3 = load i64, i64* %n.addr.i, align 8, !dbg !7119
  store i8* %2, i8** %addr.addr.i.i, align 8
  store i64 %3, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !7102
  %4 = load i32, i32* %sz.i.i, align 4, !dbg !7120
  %cmp.i.i = icmp sge i32 %4, 0, !dbg !7120
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !7120

land.rhs.i.i:                                     ; preds = %entry
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !7120
  %conv.i.i = sext i32 %5 to i64, !dbg !7120
  %6 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7120
  %cmp1.i.i = icmp ult i64 %conv.i.i, %6, !dbg !7120
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !7121
  %lnot.i.i = xor i1 %7, true, !dbg !7120
  %lnot.ext.i.i = zext i1 %7 to i32, !dbg !7120
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7120
  br i1 %7, label %if.then.i.i, label %if.end10.i.i, !dbg !7122

if.then.i.i:                                      ; preds = %land.end.i.i
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7123
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #6, !dbg !7124
  br i1 %9, label %if.else.i.i, label %if.then5.i.i, !dbg !7125

if.then5.i.i:                                     ; preds = %if.then.i.i
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !7126
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7127
  call void @copy_overflow(i32 %10, i64 %11) #11, !dbg !7128
  br label %if.end9.i.i, !dbg !7128

if.else.i.i:                                      ; preds = %if.then.i.i
  %12 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7129
  %tobool6.i.i = trunc i8 %12 to i1, !dbg !7129
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !7130

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !7131
  br label %if.end.i.i, !dbg !7131

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !7132
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7133
  br label %check_copy_size.exit.i, !dbg !7133

if.end10.i.i:                                     ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7103
  %cmp11.i.i = icmp ugt i64 %13, 2147483647, !dbg !7103
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !7103
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !7103
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !7103
  %14 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7134
  %tobool17.i.i = icmp ne i32 %14, 0, !dbg !7134
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !7134
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !7134
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !7134
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !7103

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !7135, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !7136, !srcloc !4906
  br label %if.end31.i.i, !dbg !7137

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7103
  %tobool32.i.i = icmp ne i32 %15, 0, !dbg !7103
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !7103
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !7103
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !7103
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !7134
  %16 = load i64, i64* %tmp.i.i, align 8, !dbg !7103
  %tobool38.i.i = icmp ne i64 %16, 0, !dbg !7138
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !7139

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7140
  br label %check_copy_size.exit.i, !dbg !7140

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %17 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !7141
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7142
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7143
  %tobool41.i.i = trunc i8 %19 to i1, !dbg !7143
  call void @check_object_size(i8* %17, i64 %18, i1 zeroext %tobool41.i.i) #11, !dbg !7144
  store i1 true, i1* %retval.i.i, align 1, !dbg !7145
  br label %check_copy_size.exit.i, !dbg !7145

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %20 = load i1, i1* %retval.i.i, align 1, !dbg !7146
  %lnot.i = xor i1 %20, true, !dbg !7119
  %lnot.ext.i = zext i1 %20 to i32, !dbg !7119
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !7119
  br i1 %20, label %if.then.i, label %copy_from_user.exit, !dbg !7147

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %21 = load i8*, i8** %to.addr.i, align 8, !dbg !7148
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !7149
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !7150
  %call2.i = call i64 @_copy_from_user(i8* %21, i8* %22, i64 %23) #11, !dbg !7151
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !7152
  br label %copy_from_user.exit, !dbg !7153

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !7154
  %tobool = icmp ne i64 %24, 0, !dbg !7155
  br i1 %tobool, label %if.then, label %if.end, !dbg !7156

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !7157
  br label %return, !dbg !7157

if.end:                                           ; preds = %copy_from_user.exit
  %padding = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %lineinfo, i32 0, i32 6, !dbg !7158
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %padding, i64 0, i64 0, !dbg !7160
  %25 = bitcast i32* %arraydecay to i8*, !dbg !7160
  %call1 = call i8* @memchr_inv(i8* %25, i32 0, i64 16) #9, !dbg !7161
  %tobool2 = icmp ne i8* %call1, null, !dbg !7161
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !7162

if.then3:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !7163
  br label %return, !dbg !7163

if.end4:                                          ; preds = %if.end
  %26 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev.addr, align 8, !dbg !7164
  %gdev = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %26, i32 0, i32 0, !dbg !7165
  %27 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !7165
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %27, i32 0, i32 5, !dbg !7166
  %28 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !7166
  %offset = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %lineinfo, i32 0, i32 2, !dbg !7167
  %29 = load i32, i32* %offset, align 8, !dbg !7167
  %call5 = call %struct.gpio_desc* @gpiochip_get_desc(%struct.gpio_chip* %28, i32 %29) #9, !dbg !7168
  store %struct.gpio_desc* %call5, %struct.gpio_desc** %desc, align 8, !dbg !7169
  %30 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7170
  %31 = bitcast %struct.gpio_desc* %30 to i8*, !dbg !7170
  %call6 = call zeroext i1 @IS_ERR(i8* %31) #9, !dbg !7172
  br i1 %call6, label %if.then7, label %if.end9, !dbg !7173

if.then7:                                         ; preds = %if.end4
  %32 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7174
  %33 = bitcast %struct.gpio_desc* %32 to i8*, !dbg !7174
  %call8 = call i64 @PTR_ERR(i8* %33) #9, !dbg !7175
  %conv = trunc i64 %call8 to i32, !dbg !7175
  store i32 %conv, i32* %retval, align 4, !dbg !7176
  br label %return, !dbg !7176

if.end9:                                          ; preds = %if.end4
  %34 = load i8, i8* %watch.addr, align 1, !dbg !7177
  %tobool10 = trunc i8 %34 to i1, !dbg !7177
  br i1 %tobool10, label %if.then11, label %if.end21, !dbg !7179

if.then11:                                        ; preds = %if.end9
  %35 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev.addr, align 8, !dbg !7180
  %call12 = call i32 @lineinfo_ensure_abi_version(%struct.gpio_chardev_data* %35, i32 2) #9, !dbg !7183
  %tobool13 = icmp ne i32 %call12, 0, !dbg !7183
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !7184

if.then14:                                        ; preds = %if.then11
  store i32 -1, i32* %retval, align 4, !dbg !7185
  br label %return, !dbg !7185

if.end15:                                         ; preds = %if.then11
  %offset16 = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %lineinfo, i32 0, i32 2, !dbg !7186
  %36 = load i32, i32* %offset16, align 8, !dbg !7186
  %conv17 = zext i32 %36 to i64, !dbg !7188
  %37 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev.addr, align 8, !dbg !7189
  %watched_lines = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %37, i32 0, i32 4, !dbg !7190
  %38 = load i64*, i64** %watched_lines, align 8, !dbg !7190
  %call18 = call zeroext i1 @test_and_set_bit(i64 %conv17, i64* %38) #9, !dbg !7191
  br i1 %call18, label %if.then19, label %if.end20, !dbg !7192

if.then19:                                        ; preds = %if.end15
  store i32 -16, i32* %retval, align 4, !dbg !7193
  br label %return, !dbg !7193

if.end20:                                         ; preds = %if.end15
  br label %if.end21, !dbg !7194

if.end21:                                         ; preds = %if.end20, %if.end9
  %39 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7195
  call void @gpio_desc_to_lineinfo(%struct.gpio_desc* %39, %struct.gpio_v2_line_info* %lineinfo) #9, !dbg !7196
  %40 = load i8*, i8** %ip.addr, align 8, !dbg !7197
  %41 = bitcast %struct.gpio_v2_line_info* %lineinfo to i8*, !dbg !7198
  store i8* %40, i8** %to.addr.i39, align 8
  store i8* %41, i8** %from.addr.i40, align 8
  store i64 256, i64* %n.addr.i41, align 8
  %42 = load i8*, i8** %from.addr.i40, align 8, !dbg !7199
  %43 = load i64, i64* %n.addr.i41, align 8, !dbg !7199
  store i8* %42, i8** %addr.addr.i.i33, align 8
  store i64 %43, i64* %bytes.addr.i.i34, align 8
  store i8 1, i8* %is_source.addr.i.i35, align 1
  store i32 -1, i32* %sz.i.i36, align 4, !dbg !7091
  %44 = load i32, i32* %sz.i.i36, align 4, !dbg !7200
  %cmp.i.i42 = icmp sge i32 %44, 0, !dbg !7200
  br i1 %cmp.i.i42, label %land.rhs.i.i45, label %land.end.i.i49, !dbg !7200

land.rhs.i.i45:                                   ; preds = %if.end21
  %45 = load i32, i32* %sz.i.i36, align 4, !dbg !7200
  %conv.i.i43 = sext i32 %45 to i64, !dbg !7200
  %46 = load i64, i64* %bytes.addr.i.i34, align 8, !dbg !7200
  %cmp1.i.i44 = icmp ult i64 %conv.i.i43, %46, !dbg !7200
  br label %land.end.i.i49

land.end.i.i49:                                   ; preds = %land.rhs.i.i45, %if.end21
  %47 = phi i1 [ false, %if.end21 ], [ %cmp1.i.i44, %land.rhs.i.i45 ], !dbg !7201
  %lnot.i.i46 = xor i1 %47, true, !dbg !7200
  %lnot.ext.i.i47 = zext i1 %47 to i32, !dbg !7200
  %conv4.i.i48 = sext i32 %lnot.ext.i.i47 to i64, !dbg !7200
  br i1 %47, label %if.then.i.i50, label %if.end10.i.i65, !dbg !7202

if.then.i.i50:                                    ; preds = %land.end.i.i49
  %48 = load i64, i64* %bytes.addr.i.i34, align 8, !dbg !7203
  %49 = call i1 @llvm.is.constant.i64(i64 %48) #6, !dbg !7204
  br i1 %49, label %if.else.i.i53, label %if.then5.i.i51, !dbg !7205

if.then5.i.i51:                                   ; preds = %if.then.i.i50
  %50 = load i32, i32* %sz.i.i36, align 4, !dbg !7206
  %51 = load i64, i64* %bytes.addr.i.i34, align 8, !dbg !7207
  call void @copy_overflow(i32 %50, i64 %51) #11, !dbg !7208
  br label %if.end9.i.i57, !dbg !7208

if.else.i.i53:                                    ; preds = %if.then.i.i50
  %52 = load i8, i8* %is_source.addr.i.i35, align 1, !dbg !7209
  %tobool6.i.i52 = trunc i8 %52 to i1, !dbg !7209
  br i1 %tobool6.i.i52, label %if.then7.i.i54, label %if.else8.i.i55, !dbg !7210

if.then7.i.i54:                                   ; preds = %if.else.i.i53
  call void @__bad_copy_from() #11, !dbg !7211
  br label %if.end.i.i56, !dbg !7211

if.else8.i.i55:                                   ; preds = %if.else.i.i53
  call void @__bad_copy_to() #11, !dbg !7212
  br label %if.end.i.i56

if.end.i.i56:                                     ; preds = %if.else8.i.i55, %if.then7.i.i54
  br label %if.end9.i.i57

if.end9.i.i57:                                    ; preds = %if.end.i.i56, %if.then5.i.i51
  store i1 false, i1* %retval.i.i32, align 1, !dbg !7213
  br label %check_copy_size.exit.i79, !dbg !7213

if.end10.i.i65:                                   ; preds = %land.end.i.i49
  %53 = load i64, i64* %bytes.addr.i.i34, align 8, !dbg !7092
  %cmp11.i.i58 = icmp ugt i64 %53, 2147483647, !dbg !7092
  %lnot13.i.i59 = xor i1 %cmp11.i.i58, true, !dbg !7092
  %lnot.ext16.i.i60 = zext i1 %cmp11.i.i58 to i32, !dbg !7092
  store i32 %lnot.ext16.i.i60, i32* %__ret_warn_on.i.i37, align 4, !dbg !7092
  %54 = load i32, i32* %__ret_warn_on.i.i37, align 4, !dbg !7214
  %tobool17.i.i61 = icmp ne i32 %54, 0, !dbg !7214
  %lnot18.i.i62 = xor i1 %tobool17.i.i61, true, !dbg !7214
  %lnot.ext21.i.i63 = zext i1 %tobool17.i.i61 to i32, !dbg !7214
  %conv22.i.i64 = sext i32 %lnot.ext21.i.i63 to i64, !dbg !7214
  br i1 %tobool17.i.i61, label %if.then24.i.i66, label %if.end31.i.i72, !dbg !7092

if.then24.i.i66:                                  ; preds = %if.end10.i.i65
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !7215, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !7216, !srcloc !4906
  br label %if.end31.i.i72, !dbg !7217

if.end31.i.i72:                                   ; preds = %if.then24.i.i66, %if.end10.i.i65
  %55 = load i32, i32* %__ret_warn_on.i.i37, align 4, !dbg !7092
  %tobool32.i.i67 = icmp ne i32 %55, 0, !dbg !7092
  %lnot33.i.i68 = xor i1 %tobool32.i.i67, true, !dbg !7092
  %lnot.ext36.i.i69 = zext i1 %tobool32.i.i67 to i32, !dbg !7092
  %conv37.i.i70 = sext i32 %lnot.ext36.i.i69 to i64, !dbg !7092
  store i64 %conv37.i.i70, i64* %tmp.i.i38, align 8, !dbg !7214
  %56 = load i64, i64* %tmp.i.i38, align 8, !dbg !7092
  %tobool38.i.i71 = icmp ne i64 %56, 0, !dbg !7218
  br i1 %tobool38.i.i71, label %if.then39.i.i73, label %if.end40.i.i75, !dbg !7219

if.then39.i.i73:                                  ; preds = %if.end31.i.i72
  store i1 false, i1* %retval.i.i32, align 1, !dbg !7220
  br label %check_copy_size.exit.i79, !dbg !7220

if.end40.i.i75:                                   ; preds = %if.end31.i.i72
  %57 = load i8*, i8** %addr.addr.i.i33, align 8, !dbg !7221
  %58 = load i64, i64* %bytes.addr.i.i34, align 8, !dbg !7222
  %59 = load i8, i8* %is_source.addr.i.i35, align 1, !dbg !7223
  %tobool41.i.i74 = trunc i8 %59 to i1, !dbg !7223
  call void @check_object_size(i8* %57, i64 %58, i1 zeroext %tobool41.i.i74) #11, !dbg !7224
  store i1 true, i1* %retval.i.i32, align 1, !dbg !7225
  br label %check_copy_size.exit.i79, !dbg !7225

check_copy_size.exit.i79:                         ; preds = %if.end40.i.i75, %if.then39.i.i73, %if.end9.i.i57
  %60 = load i1, i1* %retval.i.i32, align 1, !dbg !7226
  %lnot.i76 = xor i1 %60, true, !dbg !7199
  %lnot.ext.i77 = zext i1 %60 to i32, !dbg !7199
  %conv.i78 = sext i32 %lnot.ext.i77 to i64, !dbg !7199
  br i1 %60, label %if.then.i81, label %copy_to_user.exit, !dbg !7227

if.then.i81:                                      ; preds = %check_copy_size.exit.i79
  %61 = load i8*, i8** %to.addr.i39, align 8, !dbg !7228
  %62 = load i8*, i8** %from.addr.i40, align 8, !dbg !7229
  %63 = load i64, i64* %n.addr.i41, align 8, !dbg !7230
  %call2.i80 = call i64 @_copy_to_user(i8* %61, i8* %62, i64 %63) #11, !dbg !7231
  store i64 %call2.i80, i64* %n.addr.i41, align 8, !dbg !7232
  br label %copy_to_user.exit, !dbg !7233

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i79, %if.then.i81
  %64 = load i64, i64* %n.addr.i41, align 8, !dbg !7234
  %tobool23 = icmp ne i64 %64, 0, !dbg !7235
  br i1 %tobool23, label %if.then24, label %if.end31, !dbg !7236

if.then24:                                        ; preds = %copy_to_user.exit
  %65 = load i8, i8* %watch.addr, align 1, !dbg !7237
  %tobool25 = trunc i8 %65 to i1, !dbg !7237
  br i1 %tobool25, label %if.then26, label %if.end30, !dbg !7240

if.then26:                                        ; preds = %if.then24
  %offset27 = getelementptr inbounds %struct.gpio_v2_line_info, %struct.gpio_v2_line_info* %lineinfo, i32 0, i32 2, !dbg !7241
  %66 = load i32, i32* %offset27, align 8, !dbg !7241
  %conv28 = zext i32 %66 to i64, !dbg !7242
  %67 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev.addr, align 8, !dbg !7243
  %watched_lines29 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %67, i32 0, i32 4, !dbg !7244
  %68 = load i64*, i64** %watched_lines29, align 8, !dbg !7244
  call void @clear_bit(i64 %conv28, i64* %68) #9, !dbg !7245
  br label %if.end30, !dbg !7245

if.end30:                                         ; preds = %if.then26, %if.then24
  store i32 -14, i32* %retval, align 4, !dbg !7246
  br label %return, !dbg !7246

if.end31:                                         ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !7247
  br label %return, !dbg !7247

return:                                           ; preds = %if.end31, %if.end30, %if.then19, %if.then14, %if.then7, %if.then3, %if.then
  %69 = load i32, i32* %retval, align 4, !dbg !7248
  ret i32 %69, !dbg !7248
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @linereq_create(%struct.gpio_device* %gdev, i8* %ip) #0 !dbg !4549 {
entry:
  %retval.i.i169 = alloca i1, align 1
  %addr.addr.i.i170 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i170, metadata !4609, metadata !DIExpression()), !dbg !7249
  %bytes.addr.i.i171 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i171, metadata !4626, metadata !DIExpression()), !dbg !7253
  %is_source.addr.i.i172 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i172, metadata !4628, metadata !DIExpression()), !dbg !7254
  %sz.i.i173 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i173, metadata !4630, metadata !DIExpression()), !dbg !7255
  %__ret_warn_on.i.i174 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i174, metadata !4632, metadata !DIExpression()), !dbg !7256
  %tmp.i.i175 = alloca i64, align 8
  %to.addr.i176 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i176, metadata !4636, metadata !DIExpression()), !dbg !7257
  %from.addr.i177 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i177, metadata !4638, metadata !DIExpression()), !dbg !7258
  %n.addr.i178 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i178, metadata !4640, metadata !DIExpression()), !dbg !7259
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7260, metadata !DIExpression()), !dbg !7264
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !7268, metadata !DIExpression()), !dbg !7269
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7046, metadata !DIExpression()), !dbg !7270
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7050, metadata !DIExpression()), !dbg !7272
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7273, metadata !DIExpression()), !dbg !7274
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !7275, metadata !DIExpression()), !dbg !7276
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !4609, metadata !DIExpression()), !dbg !7277
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !4626, metadata !DIExpression()), !dbg !7281
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !4628, metadata !DIExpression()), !dbg !7282
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !4630, metadata !DIExpression()), !dbg !7283
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !4632, metadata !DIExpression()), !dbg !7284
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !5056, metadata !DIExpression()), !dbg !7285
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !5058, metadata !DIExpression()), !dbg !7286
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !5060, metadata !DIExpression()), !dbg !7287
  %retval = alloca i32, align 4
  %gdev.addr = alloca %struct.gpio_device*, align 8
  %ip.addr = alloca i8*, align 8
  %ulr = alloca %struct.gpio_v2_line_request, align 8
  %lc = alloca %struct.gpio_v2_line_config*, align 8
  %lr = alloca %struct.linereq*, align 8
  %file = alloca %struct.file*, align 8
  %flags = alloca i64, align 8
  %i = alloca i32, align 4
  %fd = alloca i32, align 4
  %ret = alloca i32, align 4
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  %offset = alloca i32, align 4
  %desc = alloca %struct.gpio_desc*, align 8
  %val = alloca i32, align 4
  store %struct.gpio_device* %gdev, %struct.gpio_device** %gdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_device** %gdev.addr, metadata !7288, metadata !DIExpression()), !dbg !7289
  store i8* %ip, i8** %ip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ip.addr, metadata !7290, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_request* %ulr, metadata !7292, metadata !DIExpression()), !dbg !7313
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_config** %lc, metadata !7314, metadata !DIExpression()), !dbg !7316
  call void @llvm.dbg.declare(metadata %struct.linereq** %lr, metadata !7317, metadata !DIExpression()), !dbg !7318
  call void @llvm.dbg.declare(metadata %struct.file** %file, metadata !7319, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7321, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7323, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !7325, metadata !DIExpression()), !dbg !7326
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7327, metadata !DIExpression()), !dbg !7328
  %0 = bitcast %struct.gpio_v2_line_request* %ulr to i8*, !dbg !7329
  %1 = load i8*, i8** %ip.addr, align 8, !dbg !7330
  store i8* %0, i8** %to.addr.i, align 8
  store i8* %1, i8** %from.addr.i, align 8
  store i64 592, i64* %n.addr.i, align 8
  %2 = load i8*, i8** %to.addr.i, align 8, !dbg !7331
  %3 = load i64, i64* %n.addr.i, align 8, !dbg !7331
  store i8* %2, i8** %addr.addr.i.i, align 8
  store i64 %3, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !7283
  %4 = load i32, i32* %sz.i.i, align 4, !dbg !7332
  %cmp.i.i = icmp sge i32 %4, 0, !dbg !7332
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !7332

land.rhs.i.i:                                     ; preds = %entry
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !7332
  %conv.i.i = sext i32 %5 to i64, !dbg !7332
  %6 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7332
  %cmp1.i.i = icmp ult i64 %conv.i.i, %6, !dbg !7332
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !7333
  %lnot.i.i = xor i1 %7, true, !dbg !7332
  %lnot.ext.i.i = zext i1 %7 to i32, !dbg !7332
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7332
  br i1 %7, label %if.then.i.i, label %if.end10.i.i, !dbg !7334

if.then.i.i:                                      ; preds = %land.end.i.i
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7335
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #6, !dbg !7336
  br i1 %9, label %if.else.i.i, label %if.then5.i.i, !dbg !7337

if.then5.i.i:                                     ; preds = %if.then.i.i
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !7338
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7339
  call void @copy_overflow(i32 %10, i64 %11) #11, !dbg !7340
  br label %if.end9.i.i, !dbg !7340

if.else.i.i:                                      ; preds = %if.then.i.i
  %12 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7341
  %tobool6.i.i = trunc i8 %12 to i1, !dbg !7341
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !7342

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !7343
  br label %if.end.i.i, !dbg !7343

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !7344
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7345
  br label %check_copy_size.exit.i, !dbg !7345

if.end10.i.i:                                     ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7284
  %cmp11.i.i = icmp ugt i64 %13, 2147483647, !dbg !7284
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !7284
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !7284
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !7284
  %14 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7346
  %tobool17.i.i = icmp ne i32 %14, 0, !dbg !7346
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !7346
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !7346
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !7346
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !7284

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !7347, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !7348, !srcloc !4906
  br label %if.end31.i.i, !dbg !7349

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7284
  %tobool32.i.i = icmp ne i32 %15, 0, !dbg !7284
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !7284
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !7284
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !7284
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !7346
  %16 = load i64, i64* %tmp.i.i, align 8, !dbg !7284
  %tobool38.i.i = icmp ne i64 %16, 0, !dbg !7350
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !7351

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7352
  br label %check_copy_size.exit.i, !dbg !7352

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %17 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !7353
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7354
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7355
  %tobool41.i.i = trunc i8 %19 to i1, !dbg !7355
  call void @check_object_size(i8* %17, i64 %18, i1 zeroext %tobool41.i.i) #11, !dbg !7356
  store i1 true, i1* %retval.i.i, align 1, !dbg !7357
  br label %check_copy_size.exit.i, !dbg !7357

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %20 = load i1, i1* %retval.i.i, align 1, !dbg !7358
  %lnot.i = xor i1 %20, true, !dbg !7331
  %lnot.ext.i = zext i1 %20 to i32, !dbg !7331
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !7331
  br i1 %20, label %if.then.i, label %copy_from_user.exit, !dbg !7359

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %21 = load i8*, i8** %to.addr.i, align 8, !dbg !7360
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !7361
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !7362
  %call2.i = call i64 @_copy_from_user(i8* %21, i8* %22, i64 %23) #11, !dbg !7363
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !7364
  br label %copy_from_user.exit, !dbg !7365

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !7366
  %tobool = icmp ne i64 %24, 0, !dbg !7367
  br i1 %tobool, label %if.then, label %if.end, !dbg !7368

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !7369
  br label %return, !dbg !7369

if.end:                                           ; preds = %copy_from_user.exit
  %num_lines = getelementptr inbounds %struct.gpio_v2_line_request, %struct.gpio_v2_line_request* %ulr, i32 0, i32 3, !dbg !7370
  %25 = load i32, i32* %num_lines, align 8, !dbg !7370
  %cmp = icmp eq i32 %25, 0, !dbg !7372
  br i1 %cmp, label %if.then3, label %lor.lhs.false, !dbg !7373

lor.lhs.false:                                    ; preds = %if.end
  %num_lines1 = getelementptr inbounds %struct.gpio_v2_line_request, %struct.gpio_v2_line_request* %ulr, i32 0, i32 3, !dbg !7374
  %26 = load i32, i32* %num_lines1, align 8, !dbg !7374
  %cmp2 = icmp ugt i32 %26, 64, !dbg !7375
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !7376

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store i32 -22, i32* %retval, align 4, !dbg !7377
  br label %return, !dbg !7377

if.end4:                                          ; preds = %lor.lhs.false
  %padding = getelementptr inbounds %struct.gpio_v2_line_request, %struct.gpio_v2_line_request* %ulr, i32 0, i32 5, !dbg !7378
  %arraydecay = getelementptr inbounds [5 x i32], [5 x i32]* %padding, i64 0, i64 0, !dbg !7380
  %27 = bitcast i32* %arraydecay to i8*, !dbg !7380
  %call5 = call i8* @memchr_inv(i8* %27, i32 0, i64 20) #9, !dbg !7381
  %tobool6 = icmp ne i8* %call5, null, !dbg !7381
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7382

if.then7:                                         ; preds = %if.end4
  store i32 -22, i32* %retval, align 4, !dbg !7383
  br label %return, !dbg !7383

if.end8:                                          ; preds = %if.end4
  %config = getelementptr inbounds %struct.gpio_v2_line_request, %struct.gpio_v2_line_request* %ulr, i32 0, i32 2, !dbg !7384
  store %struct.gpio_v2_line_config* %config, %struct.gpio_v2_line_config** %lc, align 8, !dbg !7385
  %28 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc, align 8, !dbg !7386
  %num_lines9 = getelementptr inbounds %struct.gpio_v2_line_request, %struct.gpio_v2_line_request* %ulr, i32 0, i32 3, !dbg !7387
  %29 = load i32, i32* %num_lines9, align 8, !dbg !7387
  %call10 = call i32 @gpio_v2_line_config_validate(%struct.gpio_v2_line_config* %28, i32 %29) #9, !dbg !7388
  store i32 %call10, i32* %ret, align 4, !dbg !7389
  %30 = load i32, i32* %ret, align 4, !dbg !7390
  %tobool11 = icmp ne i32 %30, 0, !dbg !7390
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !7392

if.then12:                                        ; preds = %if.end8
  %31 = load i32, i32* %ret, align 4, !dbg !7393
  store i32 %31, i32* %retval, align 4, !dbg !7394
  br label %return, !dbg !7394

if.end13:                                         ; preds = %if.end8
  %num_lines14 = getelementptr inbounds %struct.gpio_v2_line_request, %struct.gpio_v2_line_request* %ulr, i32 0, i32 3, !dbg !7395
  %32 = load i32, i32* %num_lines14, align 8, !dbg !7395
  %conv = zext i32 %32 to i64, !dbg !7395
  %call15 = call i64 @__ab_c_size(i64 %conv, i64 144, i64 104) #9, !dbg !7395
  %call16 = call i8* @kzalloc(i64 %call15, i32 3264) #9, !dbg !7396
  %33 = bitcast i8* %call16 to %struct.linereq*, !dbg !7396
  store %struct.linereq* %33, %struct.linereq** %lr, align 8, !dbg !7397
  %34 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7398
  %tobool17 = icmp ne %struct.linereq* %34, null, !dbg !7398
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !7400

if.then18:                                        ; preds = %if.end13
  store i32 -12, i32* %retval, align 4, !dbg !7401
  br label %return, !dbg !7401

if.end19:                                         ; preds = %if.end13
  %35 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !7402
  %36 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7403
  %gdev20 = getelementptr inbounds %struct.linereq, %struct.linereq* %36, i32 0, i32 0, !dbg !7404
  store %struct.gpio_device* %35, %struct.gpio_device** %gdev20, align 8, !dbg !7405
  %37 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !7406
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %37, i32 0, i32 1, !dbg !7407
  %call21 = call %struct.device* @get_device(%struct.device* %dev) #9, !dbg !7408
  store i32 0, i32* %i, align 4, !dbg !7409
  br label %for.cond, !dbg !7411

for.cond:                                         ; preds = %for.inc, %if.end19
  %38 = load i32, i32* %i, align 4, !dbg !7412
  %num_lines22 = getelementptr inbounds %struct.gpio_v2_line_request, %struct.gpio_v2_line_request* %ulr, i32 0, i32 3, !dbg !7414
  %39 = load i32, i32* %num_lines22, align 8, !dbg !7414
  %cmp23 = icmp ult i32 %38, %39, !dbg !7415
  br i1 %cmp23, label %for.body, label %for.end, !dbg !7416

for.body:                                         ; preds = %for.cond
  %40 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7417
  %41 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7419
  %lines = getelementptr inbounds %struct.linereq, %struct.linereq* %41, i32 0, i32 8, !dbg !7420
  %42 = load i32, i32* %i, align 4, !dbg !7421
  %idxprom = zext i32 %42 to i64, !dbg !7419
  %arrayidx = getelementptr [0 x %struct.line], [0 x %struct.line]* %lines, i64 0, i64 %idxprom, !dbg !7419
  %req = getelementptr inbounds %struct.line, %struct.line* %arrayidx, i32 0, i32 1, !dbg !7422
  store %struct.linereq* %40, %struct.linereq** %req, align 8, !dbg !7423
  br label %do.body, !dbg !7424

do.body:                                          ; preds = %for.body
  br label %do.body25, !dbg !7425

do.body25:                                        ; preds = %do.body
  br label %do.end, !dbg !7427

do.end:                                           ; preds = %do.body25
  br label %do.body26, !dbg !7425

do.body26:                                        ; preds = %do.end
  %43 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7429
  %lines27 = getelementptr inbounds %struct.linereq, %struct.linereq* %43, i32 0, i32 8, !dbg !7429
  %44 = load i32, i32* %i, align 4, !dbg !7429
  %idxprom28 = zext i32 %44 to i64, !dbg !7429
  %arrayidx29 = getelementptr [0 x %struct.line], [0 x %struct.line]* %lines27, i64 0, i64 %idxprom28, !dbg !7429
  %sw_debounced = getelementptr inbounds %struct.line, %struct.line* %arrayidx29, i32 0, i32 8, !dbg !7429
  store volatile i32 0, i32* %sw_debounced, align 8, !dbg !7429
  br label %do.end30, !dbg !7429

do.end30:                                         ; preds = %do.body26
  br label %do.end31, !dbg !7425

do.end31:                                         ; preds = %do.end30
  br label %do.body32, !dbg !7431

do.body32:                                        ; preds = %do.end31
  br label %do.body33, !dbg !7432

do.body33:                                        ; preds = %do.body32
  %45 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7434
  %lines34 = getelementptr inbounds %struct.linereq, %struct.linereq* %45, i32 0, i32 8, !dbg !7434
  %46 = load i32, i32* %i, align 4, !dbg !7434
  %idxprom35 = zext i32 %46 to i64, !dbg !7434
  %arrayidx36 = getelementptr [0 x %struct.line], [0 x %struct.line]* %lines34, i64 0, i64 %idxprom35, !dbg !7434
  %work = getelementptr inbounds %struct.line, %struct.line* %arrayidx36, i32 0, i32 7, !dbg !7434
  %work37 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %work, i32 0, i32 0, !dbg !7434
  call void @__init_work(%struct.work_struct* %work37, i32 0) #9, !dbg !7434
  %47 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7434
  %lines38 = getelementptr inbounds %struct.linereq, %struct.linereq* %47, i32 0, i32 8, !dbg !7434
  %48 = load i32, i32* %i, align 4, !dbg !7434
  %idxprom39 = zext i32 %48 to i64, !dbg !7434
  %arrayidx40 = getelementptr [0 x %struct.line], [0 x %struct.line]* %lines38, i64 0, i64 %idxprom39, !dbg !7434
  %work41 = getelementptr inbounds %struct.line, %struct.line* %arrayidx40, i32 0, i32 7, !dbg !7434
  %work42 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %work41, i32 0, i32 0, !dbg !7434
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work42, i32 0, i32 0, !dbg !7434
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !7434
  store i64 68719476704, i64* %counter, align 8, !dbg !7434
  %49 = bitcast %struct.atomic64_t* %data to i8*, !dbg !7434
  %50 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !7434
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 8, i1 false), !dbg !7434
  %51 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7434
  %lines43 = getelementptr inbounds %struct.linereq, %struct.linereq* %51, i32 0, i32 8, !dbg !7434
  %52 = load i32, i32* %i, align 4, !dbg !7434
  %idxprom44 = zext i32 %52 to i64, !dbg !7434
  %arrayidx45 = getelementptr [0 x %struct.line], [0 x %struct.line]* %lines43, i64 0, i64 %idxprom44, !dbg !7434
  %work46 = getelementptr inbounds %struct.line, %struct.line* %arrayidx45, i32 0, i32 7, !dbg !7434
  %work47 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %work46, i32 0, i32 0, !dbg !7434
  %entry48 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work47, i32 0, i32 1, !dbg !7434
  call void @INIT_LIST_HEAD(%struct.list_head* %entry48) #9, !dbg !7434
  %53 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7434
  %lines49 = getelementptr inbounds %struct.linereq, %struct.linereq* %53, i32 0, i32 8, !dbg !7434
  %54 = load i32, i32* %i, align 4, !dbg !7434
  %idxprom50 = zext i32 %54 to i64, !dbg !7434
  %arrayidx51 = getelementptr [0 x %struct.line], [0 x %struct.line]* %lines49, i64 0, i64 %idxprom50, !dbg !7434
  %work52 = getelementptr inbounds %struct.line, %struct.line* %arrayidx51, i32 0, i32 7, !dbg !7434
  %work53 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %work52, i32 0, i32 0, !dbg !7434
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work53, i32 0, i32 2, !dbg !7434
  store void (%struct.work_struct*)* @debounce_work_func, void (%struct.work_struct*)** %func, align 8, !dbg !7434
  br label %do.end54, !dbg !7434

do.end54:                                         ; preds = %do.body33
  %55 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7432
  %lines55 = getelementptr inbounds %struct.linereq, %struct.linereq* %55, i32 0, i32 8, !dbg !7432
  %56 = load i32, i32* %i, align 4, !dbg !7432
  %idxprom56 = zext i32 %56 to i64, !dbg !7432
  %arrayidx57 = getelementptr [0 x %struct.line], [0 x %struct.line]* %lines55, i64 0, i64 %idxprom56, !dbg !7432
  %work58 = getelementptr inbounds %struct.line, %struct.line* %arrayidx57, i32 0, i32 7, !dbg !7432
  %timer = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %work58, i32 0, i32 1, !dbg !7432
  call void @init_timer_key(%struct.timer_list* %timer, void (%struct.timer_list*)* @delayed_work_timer_fn, i32 2097152, i8* null, %struct.lock_class_key* null) #9, !dbg !7432
  br label %do.end59, !dbg !7432

do.end59:                                         ; preds = %do.end54
  br label %for.inc, !dbg !7436

for.inc:                                          ; preds = %do.end59
  %57 = load i32, i32* %i, align 4, !dbg !7437
  %inc = add i32 %57, 1, !dbg !7437
  store i32 %inc, i32* %i, align 4, !dbg !7437
  br label %for.cond, !dbg !7438, !llvm.loop !7439

for.end:                                          ; preds = %for.cond
  %consumer = getelementptr inbounds %struct.gpio_v2_line_request, %struct.gpio_v2_line_request* %ulr, i32 0, i32 1, !dbg !7441
  %arrayidx60 = getelementptr [32 x i8], [32 x i8]* %consumer, i64 0, i64 0, !dbg !7443
  %58 = load i8, i8* %arrayidx60, align 8, !dbg !7443
  %conv61 = sext i8 %58 to i32, !dbg !7443
  %cmp62 = icmp ne i32 %conv61, 0, !dbg !7444
  br i1 %cmp62, label %if.then64, label %if.end72, !dbg !7445

if.then64:                                        ; preds = %for.end
  %consumer65 = getelementptr inbounds %struct.gpio_v2_line_request, %struct.gpio_v2_line_request* %ulr, i32 0, i32 1, !dbg !7446
  %arraydecay66 = getelementptr inbounds [32 x i8], [32 x i8]* %consumer65, i64 0, i64 0, !dbg !7448
  %call67 = call i8* @kstrndup(i8* %arraydecay66, i64 31, i32 3264) #9, !dbg !7449
  %59 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7450
  %label = getelementptr inbounds %struct.linereq, %struct.linereq* %59, i32 0, i32 1, !dbg !7451
  store i8* %call67, i8** %label, align 8, !dbg !7452
  %60 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7453
  %label68 = getelementptr inbounds %struct.linereq, %struct.linereq* %60, i32 0, i32 1, !dbg !7455
  %61 = load i8*, i8** %label68, align 8, !dbg !7455
  %tobool69 = icmp ne i8* %61, null, !dbg !7453
  br i1 %tobool69, label %if.end71, label %if.then70, !dbg !7456

if.then70:                                        ; preds = %if.then64
  store i32 -12, i32* %ret, align 4, !dbg !7457
  br label %out_free_linereq, !dbg !7459

if.end71:                                         ; preds = %if.then64
  br label %if.end72, !dbg !7460

if.end72:                                         ; preds = %if.end71, %for.end
  br label %do.body73, !dbg !7461

do.body73:                                        ; preds = %if.end72
  %62 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7462
  %config_mutex = getelementptr inbounds %struct.linereq, %struct.linereq* %62, i32 0, i32 7, !dbg !7462
  call void @__mutex_init(%struct.mutex* %config_mutex, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), %struct.lock_class_key* @linereq_create.__key) #9, !dbg !7462
  br label %do.end74, !dbg !7462

do.end74:                                         ; preds = %do.body73
  br label %do.body75, !dbg !7464

do.body75:                                        ; preds = %do.end74
  %63 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7465
  %wait = getelementptr inbounds %struct.linereq, %struct.linereq* %63, i32 0, i32 3, !dbg !7465
  call void @__init_waitqueue_head(%struct.wait_queue_head* %wait, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), %struct.lock_class_key* @linereq_create.__key.7) #9, !dbg !7465
  br label %do.end76, !dbg !7465

do.end76:                                         ; preds = %do.body75
  %event_buffer_size = getelementptr inbounds %struct.gpio_v2_line_request, %struct.gpio_v2_line_request* %ulr, i32 0, i32 4, !dbg !7467
  %64 = load i32, i32* %event_buffer_size, align 4, !dbg !7467
  %65 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7468
  %event_buffer_size77 = getelementptr inbounds %struct.linereq, %struct.linereq* %65, i32 0, i32 4, !dbg !7469
  store i32 %64, i32* %event_buffer_size77, align 8, !dbg !7470
  %66 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7471
  %event_buffer_size78 = getelementptr inbounds %struct.linereq, %struct.linereq* %66, i32 0, i32 4, !dbg !7473
  %67 = load i32, i32* %event_buffer_size78, align 8, !dbg !7473
  %cmp79 = icmp eq i32 %67, 0, !dbg !7474
  br i1 %cmp79, label %if.then81, label %if.else, !dbg !7475

if.then81:                                        ; preds = %do.end76
  %num_lines82 = getelementptr inbounds %struct.gpio_v2_line_request, %struct.gpio_v2_line_request* %ulr, i32 0, i32 3, !dbg !7476
  %68 = load i32, i32* %num_lines82, align 8, !dbg !7476
  %mul = mul i32 %68, 16, !dbg !7477
  %69 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7478
  %event_buffer_size83 = getelementptr inbounds %struct.linereq, %struct.linereq* %69, i32 0, i32 4, !dbg !7479
  store i32 %mul, i32* %event_buffer_size83, align 8, !dbg !7480
  br label %if.end90, !dbg !7478

if.else:                                          ; preds = %do.end76
  %70 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7481
  %event_buffer_size84 = getelementptr inbounds %struct.linereq, %struct.linereq* %70, i32 0, i32 4, !dbg !7483
  %71 = load i32, i32* %event_buffer_size84, align 8, !dbg !7483
  %cmp85 = icmp ugt i32 %71, 1024, !dbg !7484
  br i1 %cmp85, label %if.then87, label %if.end89, !dbg !7485

if.then87:                                        ; preds = %if.else
  %72 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7486
  %event_buffer_size88 = getelementptr inbounds %struct.linereq, %struct.linereq* %72, i32 0, i32 4, !dbg !7487
  store i32 1024, i32* %event_buffer_size88, align 8, !dbg !7488
  br label %if.end89, !dbg !7486

if.end89:                                         ; preds = %if.then87, %if.else
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.then81
  %73 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7489
  %seqno = getelementptr inbounds %struct.linereq, %struct.linereq* %73, i32 0, i32 6, !dbg !7490
  store %struct.atomic_t* %seqno, %struct.atomic_t** %v.addr.i, align 8
  store i32 0, i32* %i.addr.i, align 4
  %74 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7491
  %75 = bitcast %struct.atomic_t* %74 to i8*, !dbg !7491
  store i8* %75, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %76 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7492
  %77 = load i64, i64* %size.addr.i.i, align 8, !dbg !7493
  %conv.i.i168 = trunc i64 %77 to i32, !dbg !7493
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %76, i32 %conv.i.i168) #11, !dbg !7494
  %78 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7495
  %79 = load i64, i64* %size.addr.i.i, align 8, !dbg !7495
  call void @kcsan_check_access(i8* %78, i64 %79, i32 5) #11, !dbg !7495
  %80 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7496
  %81 = load i32, i32* %i.addr.i, align 4, !dbg !7497
  store %struct.atomic_t* %80, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %81, i32* %i.addr.i.i, align 4
  %82 = load i32, i32* %i.addr.i.i, align 4, !dbg !7498
  %83 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7498
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %83, i32 0, i32 0, !dbg !7498
  store volatile i32 %82, i32* %counter.i.i, align 4, !dbg !7498
  %num_lines91 = getelementptr inbounds %struct.gpio_v2_line_request, %struct.gpio_v2_line_request* %ulr, i32 0, i32 3, !dbg !7500
  %84 = load i32, i32* %num_lines91, align 8, !dbg !7500
  %85 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7501
  %num_lines92 = getelementptr inbounds %struct.linereq, %struct.linereq* %85, i32 0, i32 2, !dbg !7502
  store i32 %84, i32* %num_lines92, align 8, !dbg !7503
  store i32 0, i32* %i, align 4, !dbg !7504
  br label %for.cond93, !dbg !7506

for.cond93:                                       ; preds = %for.inc149, %if.end90
  %86 = load i32, i32* %i, align 4, !dbg !7507
  %num_lines94 = getelementptr inbounds %struct.gpio_v2_line_request, %struct.gpio_v2_line_request* %ulr, i32 0, i32 3, !dbg !7509
  %87 = load i32, i32* %num_lines94, align 8, !dbg !7509
  %cmp95 = icmp ult i32 %86, %87, !dbg !7510
  br i1 %cmp95, label %for.body97, label %for.end151, !dbg !7511

for.body97:                                       ; preds = %for.cond93
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !7512, metadata !DIExpression()), !dbg !7514
  %offsets = getelementptr inbounds %struct.gpio_v2_line_request, %struct.gpio_v2_line_request* %ulr, i32 0, i32 0, !dbg !7515
  %88 = load i32, i32* %i, align 4, !dbg !7516
  %idxprom98 = zext i32 %88 to i64, !dbg !7517
  %arrayidx99 = getelementptr [64 x i32], [64 x i32]* %offsets, i64 0, i64 %idxprom98, !dbg !7517
  %89 = load i32, i32* %arrayidx99, align 4, !dbg !7517
  store i32 %89, i32* %offset, align 4, !dbg !7514
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc, metadata !7518, metadata !DIExpression()), !dbg !7519
  %90 = load %struct.gpio_device*, %struct.gpio_device** %gdev.addr, align 8, !dbg !7520
  %chip = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %90, i32 0, i32 5, !dbg !7521
  %91 = load %struct.gpio_chip*, %struct.gpio_chip** %chip, align 8, !dbg !7521
  %92 = load i32, i32* %offset, align 4, !dbg !7522
  %call100 = call %struct.gpio_desc* @gpiochip_get_desc(%struct.gpio_chip* %91, i32 %92) #9, !dbg !7523
  store %struct.gpio_desc* %call100, %struct.gpio_desc** %desc, align 8, !dbg !7519
  %93 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7524
  %94 = bitcast %struct.gpio_desc* %93 to i8*, !dbg !7524
  %call101 = call zeroext i1 @IS_ERR(i8* %94) #9, !dbg !7526
  br i1 %call101, label %if.then102, label %if.end105, !dbg !7527

if.then102:                                       ; preds = %for.body97
  %95 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7528
  %96 = bitcast %struct.gpio_desc* %95 to i8*, !dbg !7528
  %call103 = call i64 @PTR_ERR(i8* %96) #9, !dbg !7530
  %conv104 = trunc i64 %call103 to i32, !dbg !7530
  store i32 %conv104, i32* %ret, align 4, !dbg !7531
  br label %out_free_linereq, !dbg !7532

if.end105:                                        ; preds = %for.body97
  %97 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7533
  %98 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7534
  %label106 = getelementptr inbounds %struct.linereq, %struct.linereq* %98, i32 0, i32 1, !dbg !7535
  %99 = load i8*, i8** %label106, align 8, !dbg !7535
  %call107 = call i32 @gpiod_request(%struct.gpio_desc* %97, i8* %99) #9, !dbg !7536
  store i32 %call107, i32* %ret, align 4, !dbg !7537
  %100 = load i32, i32* %ret, align 4, !dbg !7538
  %tobool108 = icmp ne i32 %100, 0, !dbg !7538
  br i1 %tobool108, label %if.then109, label %if.end110, !dbg !7540

if.then109:                                       ; preds = %if.end105
  br label %out_free_linereq, !dbg !7541

if.end110:                                        ; preds = %if.end105
  %101 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7542
  %102 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7543
  %lines111 = getelementptr inbounds %struct.linereq, %struct.linereq* %102, i32 0, i32 8, !dbg !7544
  %103 = load i32, i32* %i, align 4, !dbg !7545
  %idxprom112 = zext i32 %103 to i64, !dbg !7543
  %arrayidx113 = getelementptr [0 x %struct.line], [0 x %struct.line]* %lines111, i64 0, i64 %idxprom112, !dbg !7543
  %desc114 = getelementptr inbounds %struct.line, %struct.line* %arrayidx113, i32 0, i32 0, !dbg !7546
  store %struct.gpio_desc* %101, %struct.gpio_desc** %desc114, align 8, !dbg !7547
  %104 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc, align 8, !dbg !7548
  %105 = load i32, i32* %i, align 4, !dbg !7549
  %call115 = call i64 @gpio_v2_line_config_flags(%struct.gpio_v2_line_config* %104, i32 %105) #9, !dbg !7550
  store i64 %call115, i64* %flags, align 8, !dbg !7551
  %106 = load i64, i64* %flags, align 8, !dbg !7552
  %107 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7553
  %flags116 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %107, i32 0, i32 1, !dbg !7554
  call void @gpio_v2_line_config_flags_to_desc_flags(i64 %106, i64* %flags116) #9, !dbg !7555
  %108 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7556
  %call117 = call i32 @gpiod_set_transitory(%struct.gpio_desc* %108, i1 zeroext false) #9, !dbg !7557
  store i32 %call117, i32* %ret, align 4, !dbg !7558
  %109 = load i32, i32* %ret, align 4, !dbg !7559
  %cmp118 = icmp slt i32 %109, 0, !dbg !7561
  br i1 %cmp118, label %if.then120, label %if.end121, !dbg !7562

if.then120:                                       ; preds = %if.end110
  br label %out_free_linereq, !dbg !7563

if.end121:                                        ; preds = %if.end110
  %110 = load i64, i64* %flags, align 8, !dbg !7564
  %and = and i64 %110, 8, !dbg !7566
  %tobool122 = icmp ne i64 %and, 0, !dbg !7566
  br i1 %tobool122, label %if.then123, label %if.else129, !dbg !7567

if.then123:                                       ; preds = %if.end121
  call void @llvm.dbg.declare(metadata i32* %val, metadata !7568, metadata !DIExpression()), !dbg !7570
  %111 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc, align 8, !dbg !7571
  %112 = load i32, i32* %i, align 4, !dbg !7572
  %call124 = call i32 @gpio_v2_line_config_output_value(%struct.gpio_v2_line_config* %111, i32 %112) #9, !dbg !7573
  store i32 %call124, i32* %val, align 4, !dbg !7570
  %113 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7574
  %114 = load i32, i32* %val, align 4, !dbg !7575
  %call125 = call i32 @gpiod_direction_output(%struct.gpio_desc* %113, i32 %114) #9, !dbg !7576
  store i32 %call125, i32* %ret, align 4, !dbg !7577
  %115 = load i32, i32* %ret, align 4, !dbg !7578
  %tobool126 = icmp ne i32 %115, 0, !dbg !7578
  br i1 %tobool126, label %if.then127, label %if.end128, !dbg !7580

if.then127:                                       ; preds = %if.then123
  br label %out_free_linereq, !dbg !7581

if.end128:                                        ; preds = %if.then123
  br label %if.end146, !dbg !7582

if.else129:                                       ; preds = %if.end121
  %116 = load i64, i64* %flags, align 8, !dbg !7583
  %and130 = and i64 %116, 4, !dbg !7585
  %tobool131 = icmp ne i64 %and130, 0, !dbg !7585
  br i1 %tobool131, label %if.then132, label %if.end145, !dbg !7586

if.then132:                                       ; preds = %if.else129
  %117 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7587
  %call133 = call i32 @gpiod_direction_input(%struct.gpio_desc* %117) #9, !dbg !7589
  store i32 %call133, i32* %ret, align 4, !dbg !7590
  %118 = load i32, i32* %ret, align 4, !dbg !7591
  %tobool134 = icmp ne i32 %118, 0, !dbg !7591
  br i1 %tobool134, label %if.then135, label %if.end136, !dbg !7593

if.then135:                                       ; preds = %if.then132
  br label %out_free_linereq, !dbg !7594

if.end136:                                        ; preds = %if.then132
  %119 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7595
  %lines137 = getelementptr inbounds %struct.linereq, %struct.linereq* %119, i32 0, i32 8, !dbg !7596
  %120 = load i32, i32* %i, align 4, !dbg !7597
  %idxprom138 = zext i32 %120 to i64, !dbg !7595
  %arrayidx139 = getelementptr [0 x %struct.line], [0 x %struct.line]* %lines137, i64 0, i64 %idxprom138, !dbg !7595
  %121 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc, align 8, !dbg !7598
  %122 = load i32, i32* %i, align 4, !dbg !7599
  %123 = load i64, i64* %flags, align 8, !dbg !7600
  %and140 = and i64 %123, 48, !dbg !7601
  %call141 = call i32 @edge_detector_setup(%struct.line* %arrayidx139, %struct.gpio_v2_line_config* %121, i32 %122, i64 %and140) #9, !dbg !7602
  store i32 %call141, i32* %ret, align 4, !dbg !7603
  %124 = load i32, i32* %ret, align 4, !dbg !7604
  %tobool142 = icmp ne i32 %124, 0, !dbg !7604
  br i1 %tobool142, label %if.then143, label %if.end144, !dbg !7606

if.then143:                                       ; preds = %if.end136
  br label %out_free_linereq, !dbg !7607

if.end144:                                        ; preds = %if.end136
  br label %if.end145, !dbg !7608

if.end145:                                        ; preds = %if.end144, %if.else129
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.end128
  %125 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7609
  %gdev147 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %125, i32 0, i32 0, !dbg !7610
  %126 = load %struct.gpio_device*, %struct.gpio_device** %gdev147, align 8, !dbg !7610
  %notifier = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %126, i32 0, i32 12, !dbg !7611
  %127 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !7612
  %128 = bitcast %struct.gpio_desc* %127 to i8*, !dbg !7612
  %call148 = call i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head* %notifier, i64 1, i8* %128) #9, !dbg !7613
  br label %for.inc149, !dbg !7614

for.inc149:                                       ; preds = %if.end146
  %129 = load i32, i32* %i, align 4, !dbg !7615
  %inc150 = add i32 %129, 1, !dbg !7615
  store i32 %inc150, i32* %i, align 4, !dbg !7615
  br label %for.cond93, !dbg !7616, !llvm.loop !7617

for.end151:                                       ; preds = %for.cond93
  %call152 = call i32 @get_unused_fd_flags(i32 524288) #9, !dbg !7619
  store i32 %call152, i32* %fd, align 4, !dbg !7620
  %130 = load i32, i32* %fd, align 4, !dbg !7621
  %cmp153 = icmp slt i32 %130, 0, !dbg !7623
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !7624

if.then155:                                       ; preds = %for.end151
  %131 = load i32, i32* %fd, align 4, !dbg !7625
  store i32 %131, i32* %ret, align 4, !dbg !7627
  br label %out_free_linereq, !dbg !7628

if.end156:                                        ; preds = %for.end151
  %132 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7629
  %133 = bitcast %struct.linereq* %132 to i8*, !dbg !7629
  %call157 = call %struct.file* @anon_inode_getfile(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), %struct.file_operations* @line_fileops, i8* %133, i32 524288) #9, !dbg !7630
  store %struct.file* %call157, %struct.file** %file, align 8, !dbg !7631
  %134 = load %struct.file*, %struct.file** %file, align 8, !dbg !7632
  %135 = bitcast %struct.file* %134 to i8*, !dbg !7632
  %call158 = call zeroext i1 @IS_ERR(i8* %135) #9, !dbg !7634
  br i1 %call158, label %if.then159, label %if.end162, !dbg !7635

if.then159:                                       ; preds = %if.end156
  %136 = load %struct.file*, %struct.file** %file, align 8, !dbg !7636
  %137 = bitcast %struct.file* %136 to i8*, !dbg !7636
  %call160 = call i64 @PTR_ERR(i8* %137) #9, !dbg !7638
  %conv161 = trunc i64 %call160 to i32, !dbg !7638
  store i32 %conv161, i32* %ret, align 4, !dbg !7639
  br label %out_put_unused_fd, !dbg !7640

if.end162:                                        ; preds = %if.end156
  %138 = load i32, i32* %fd, align 4, !dbg !7641
  %fd163 = getelementptr inbounds %struct.gpio_v2_line_request, %struct.gpio_v2_line_request* %ulr, i32 0, i32 6, !dbg !7642
  store i32 %138, i32* %fd163, align 4, !dbg !7643
  %139 = load i8*, i8** %ip.addr, align 8, !dbg !7644
  %140 = bitcast %struct.gpio_v2_line_request* %ulr to i8*, !dbg !7645
  store i8* %139, i8** %to.addr.i176, align 8
  store i8* %140, i8** %from.addr.i177, align 8
  store i64 592, i64* %n.addr.i178, align 8
  %141 = load i8*, i8** %from.addr.i177, align 8, !dbg !7646
  %142 = load i64, i64* %n.addr.i178, align 8, !dbg !7646
  store i8* %141, i8** %addr.addr.i.i170, align 8
  store i64 %142, i64* %bytes.addr.i.i171, align 8
  store i8 1, i8* %is_source.addr.i.i172, align 1
  store i32 -1, i32* %sz.i.i173, align 4, !dbg !7255
  %143 = load i32, i32* %sz.i.i173, align 4, !dbg !7647
  %cmp.i.i179 = icmp sge i32 %143, 0, !dbg !7647
  br i1 %cmp.i.i179, label %land.rhs.i.i182, label %land.end.i.i186, !dbg !7647

land.rhs.i.i182:                                  ; preds = %if.end162
  %144 = load i32, i32* %sz.i.i173, align 4, !dbg !7647
  %conv.i.i180 = sext i32 %144 to i64, !dbg !7647
  %145 = load i64, i64* %bytes.addr.i.i171, align 8, !dbg !7647
  %cmp1.i.i181 = icmp ult i64 %conv.i.i180, %145, !dbg !7647
  br label %land.end.i.i186

land.end.i.i186:                                  ; preds = %land.rhs.i.i182, %if.end162
  %146 = phi i1 [ false, %if.end162 ], [ %cmp1.i.i181, %land.rhs.i.i182 ], !dbg !7648
  %lnot.i.i183 = xor i1 %146, true, !dbg !7647
  %lnot.ext.i.i184 = zext i1 %146 to i32, !dbg !7647
  %conv4.i.i185 = sext i32 %lnot.ext.i.i184 to i64, !dbg !7647
  br i1 %146, label %if.then.i.i187, label %if.end10.i.i202, !dbg !7649

if.then.i.i187:                                   ; preds = %land.end.i.i186
  %147 = load i64, i64* %bytes.addr.i.i171, align 8, !dbg !7650
  %148 = call i1 @llvm.is.constant.i64(i64 %147) #6, !dbg !7651
  br i1 %148, label %if.else.i.i190, label %if.then5.i.i188, !dbg !7652

if.then5.i.i188:                                  ; preds = %if.then.i.i187
  %149 = load i32, i32* %sz.i.i173, align 4, !dbg !7653
  %150 = load i64, i64* %bytes.addr.i.i171, align 8, !dbg !7654
  call void @copy_overflow(i32 %149, i64 %150) #11, !dbg !7655
  br label %if.end9.i.i194, !dbg !7655

if.else.i.i190:                                   ; preds = %if.then.i.i187
  %151 = load i8, i8* %is_source.addr.i.i172, align 1, !dbg !7656
  %tobool6.i.i189 = trunc i8 %151 to i1, !dbg !7656
  br i1 %tobool6.i.i189, label %if.then7.i.i191, label %if.else8.i.i192, !dbg !7657

if.then7.i.i191:                                  ; preds = %if.else.i.i190
  call void @__bad_copy_from() #11, !dbg !7658
  br label %if.end.i.i193, !dbg !7658

if.else8.i.i192:                                  ; preds = %if.else.i.i190
  call void @__bad_copy_to() #11, !dbg !7659
  br label %if.end.i.i193

if.end.i.i193:                                    ; preds = %if.else8.i.i192, %if.then7.i.i191
  br label %if.end9.i.i194

if.end9.i.i194:                                   ; preds = %if.end.i.i193, %if.then5.i.i188
  store i1 false, i1* %retval.i.i169, align 1, !dbg !7660
  br label %check_copy_size.exit.i216, !dbg !7660

if.end10.i.i202:                                  ; preds = %land.end.i.i186
  %152 = load i64, i64* %bytes.addr.i.i171, align 8, !dbg !7256
  %cmp11.i.i195 = icmp ugt i64 %152, 2147483647, !dbg !7256
  %lnot13.i.i196 = xor i1 %cmp11.i.i195, true, !dbg !7256
  %lnot.ext16.i.i197 = zext i1 %cmp11.i.i195 to i32, !dbg !7256
  store i32 %lnot.ext16.i.i197, i32* %__ret_warn_on.i.i174, align 4, !dbg !7256
  %153 = load i32, i32* %__ret_warn_on.i.i174, align 4, !dbg !7661
  %tobool17.i.i198 = icmp ne i32 %153, 0, !dbg !7661
  %lnot18.i.i199 = xor i1 %tobool17.i.i198, true, !dbg !7661
  %lnot.ext21.i.i200 = zext i1 %tobool17.i.i198 to i32, !dbg !7661
  %conv22.i.i201 = sext i32 %lnot.ext21.i.i200 to i64, !dbg !7661
  br i1 %tobool17.i.i198, label %if.then24.i.i203, label %if.end31.i.i209, !dbg !7256

if.then24.i.i203:                                 ; preds = %if.end10.i.i202
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !7662, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !7663, !srcloc !4906
  br label %if.end31.i.i209, !dbg !7664

if.end31.i.i209:                                  ; preds = %if.then24.i.i203, %if.end10.i.i202
  %154 = load i32, i32* %__ret_warn_on.i.i174, align 4, !dbg !7256
  %tobool32.i.i204 = icmp ne i32 %154, 0, !dbg !7256
  %lnot33.i.i205 = xor i1 %tobool32.i.i204, true, !dbg !7256
  %lnot.ext36.i.i206 = zext i1 %tobool32.i.i204 to i32, !dbg !7256
  %conv37.i.i207 = sext i32 %lnot.ext36.i.i206 to i64, !dbg !7256
  store i64 %conv37.i.i207, i64* %tmp.i.i175, align 8, !dbg !7661
  %155 = load i64, i64* %tmp.i.i175, align 8, !dbg !7256
  %tobool38.i.i208 = icmp ne i64 %155, 0, !dbg !7665
  br i1 %tobool38.i.i208, label %if.then39.i.i210, label %if.end40.i.i212, !dbg !7666

if.then39.i.i210:                                 ; preds = %if.end31.i.i209
  store i1 false, i1* %retval.i.i169, align 1, !dbg !7667
  br label %check_copy_size.exit.i216, !dbg !7667

if.end40.i.i212:                                  ; preds = %if.end31.i.i209
  %156 = load i8*, i8** %addr.addr.i.i170, align 8, !dbg !7668
  %157 = load i64, i64* %bytes.addr.i.i171, align 8, !dbg !7669
  %158 = load i8, i8* %is_source.addr.i.i172, align 1, !dbg !7670
  %tobool41.i.i211 = trunc i8 %158 to i1, !dbg !7670
  call void @check_object_size(i8* %156, i64 %157, i1 zeroext %tobool41.i.i211) #11, !dbg !7671
  store i1 true, i1* %retval.i.i169, align 1, !dbg !7672
  br label %check_copy_size.exit.i216, !dbg !7672

check_copy_size.exit.i216:                        ; preds = %if.end40.i.i212, %if.then39.i.i210, %if.end9.i.i194
  %159 = load i1, i1* %retval.i.i169, align 1, !dbg !7673
  %lnot.i213 = xor i1 %159, true, !dbg !7646
  %lnot.ext.i214 = zext i1 %159 to i32, !dbg !7646
  %conv.i215 = sext i32 %lnot.ext.i214 to i64, !dbg !7646
  br i1 %159, label %if.then.i218, label %copy_to_user.exit, !dbg !7674

if.then.i218:                                     ; preds = %check_copy_size.exit.i216
  %160 = load i8*, i8** %to.addr.i176, align 8, !dbg !7675
  %161 = load i8*, i8** %from.addr.i177, align 8, !dbg !7676
  %162 = load i64, i64* %n.addr.i178, align 8, !dbg !7677
  %call2.i217 = call i64 @_copy_to_user(i8* %160, i8* %161, i64 %162) #11, !dbg !7678
  store i64 %call2.i217, i64* %n.addr.i178, align 8, !dbg !7679
  br label %copy_to_user.exit, !dbg !7680

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i216, %if.then.i218
  %163 = load i64, i64* %n.addr.i178, align 8, !dbg !7681
  %tobool165 = icmp ne i64 %163, 0, !dbg !7682
  br i1 %tobool165, label %if.then166, label %if.end167, !dbg !7683

if.then166:                                       ; preds = %copy_to_user.exit
  %164 = load %struct.file*, %struct.file** %file, align 8, !dbg !7684
  call void @fput(%struct.file* %164) #9, !dbg !7686
  %165 = load i32, i32* %fd, align 4, !dbg !7687
  call void @put_unused_fd(i32 %165) #9, !dbg !7688
  store i32 -14, i32* %retval, align 4, !dbg !7689
  br label %return, !dbg !7689

if.end167:                                        ; preds = %copy_to_user.exit
  %166 = load i32, i32* %fd, align 4, !dbg !7690
  %167 = load %struct.file*, %struct.file** %file, align 8, !dbg !7691
  call void @fd_install(i32 %166, %struct.file* %167) #9, !dbg !7692
  store i32 0, i32* %retval, align 4, !dbg !7693
  br label %return, !dbg !7693

out_put_unused_fd:                                ; preds = %if.then159
  call void @llvm.dbg.label(metadata !7694), !dbg !7695
  %168 = load i32, i32* %fd, align 4, !dbg !7696
  call void @put_unused_fd(i32 %168) #9, !dbg !7697
  br label %out_free_linereq, !dbg !7697

out_free_linereq:                                 ; preds = %out_put_unused_fd, %if.then155, %if.then143, %if.then135, %if.then127, %if.then120, %if.then109, %if.then102, %if.then70
  call void @llvm.dbg.label(metadata !7698), !dbg !7699
  %169 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !7700
  call void @linereq_free(%struct.linereq* %169) #9, !dbg !7701
  %170 = load i32, i32* %ret, align 4, !dbg !7702
  store i32 %170, i32* %retval, align 4, !dbg !7703
  br label %return, !dbg !7703

return:                                           ; preds = %out_free_linereq, %if.end167, %if.then166, %if.then18, %if.then12, %if.then7, %if.then3, %if.then
  %171 = load i32, i32* %retval, align 4, !dbg !7704
  ret i32 %171, !dbg !7704
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_clear_bit(i64 %nr, i64* %addr) #0 !dbg !7705 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7706, metadata !DIExpression()), !dbg !7708
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7710, metadata !DIExpression()), !dbg !7711
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !7712, metadata !DIExpression()), !dbg !7714
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !6964, metadata !DIExpression()), !dbg !7715
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6968, metadata !DIExpression()), !dbg !7717
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7718, metadata !DIExpression()), !dbg !7719
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7720, metadata !DIExpression()), !dbg !7721
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7722
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7723
  %div = sdiv i64 %1, 64, !dbg !7723
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7724
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7722
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7725
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7726
  %conv.i = trunc i64 %4 to i32, !dbg !7726
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #11, !dbg !7727
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7728
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7728
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #11, !dbg !7728
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7729
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7730
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !7714
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !7714
  %11 = call i8 asm sideeffect " btrq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #6, !dbg !7714, !srcloc !7731
  store i8 %11, i8* %c.i, align 1, !dbg !7714
  %12 = load i8, i8* %c.i, align 1, !dbg !7714
  %tobool.i = trunc i8 %12 to i1, !dbg !7714
  %frombool.i = zext i1 %tobool.i to i8, !dbg !7714
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !7714
  %13 = load i8, i8* %tmp.i, align 1, !dbg !7714
  %tobool1.i = trunc i8 %13 to i1, !dbg !7714
  ret i1 %tobool1.i, !dbg !7732
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !7733 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !7738, metadata !DIExpression()), !dbg !7739
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !7740
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !7741
  %1 = load i8*, i8** %name, align 8, !dbg !7741
  ret i8* %1, !dbg !7742
}

; Function Attrs: noredzone
declare dso_local i64 @_copy_from_user(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpio_chip_hwgpio(%struct.gpio_desc* %desc) #0 !dbg !7743 {
entry:
  %desc.addr = alloca %struct.gpio_desc*, align 8
  store %struct.gpio_desc* %desc, %struct.gpio_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc.addr, metadata !7748, metadata !DIExpression()), !dbg !7749
  %0 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !7750
  %1 = load %struct.gpio_desc*, %struct.gpio_desc** %desc.addr, align 8, !dbg !7751
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %1, i32 0, i32 0, !dbg !7752
  %2 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !7752
  %descs = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %2, i32 0, i32 6, !dbg !7753
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %descs, align 8, !dbg !7753
  %arrayidx = getelementptr %struct.gpio_desc, %struct.gpio_desc* %3, i64 0, !dbg !7751
  %sub.ptr.lhs.cast = ptrtoint %struct.gpio_desc* %0 to i64, !dbg !7754
  %sub.ptr.rhs.cast = ptrtoint %struct.gpio_desc* %arrayidx to i64, !dbg !7754
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7754
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 40, !dbg !7754
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !7750
  ret i32 %conv, !dbg !7755
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pinctrl_gpio_can_use_line(i32 %gpio) #0 !dbg !7756 {
entry:
  %gpio.addr = alloca i32, align 4
  store i32 %gpio, i32* %gpio.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gpio.addr, metadata !7760, metadata !DIExpression()), !dbg !7761
  ret i1 true, !dbg !7762
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !7763 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !7767, metadata !DIExpression()), !dbg !7768
  %call = call i64 @arch_local_save_flags() #9, !dbg !7769
  store i64 %call, i64* %f, align 8, !dbg !7770
  call void @arch_local_irq_disable() #9, !dbg !7771
  %0 = load i64, i64* %f, align 8, !dbg !7772
  ret i64 %0, !dbg !7773
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #0 !dbg !7774 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !7780, metadata !DIExpression()), !dbg !7782
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !7784, metadata !DIExpression()), !dbg !7785
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !7786, metadata !DIExpression()), !dbg !7787
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7788, metadata !DIExpression()), !dbg !7790
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7792, metadata !DIExpression()), !dbg !7793
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !4678, metadata !DIExpression()), !dbg !7794
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4688, metadata !DIExpression()), !dbg !7796
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7797, metadata !DIExpression()), !dbg !7798
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7799, metadata !DIExpression()), !dbg !7800
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7801
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7802
  %div = sdiv i64 %1, 64, !dbg !7802
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7803
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7801
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7804
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7805
  %conv.i = trunc i64 %4 to i32, !dbg !7805
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #11, !dbg !7806
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7807
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7807
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #11, !dbg !7807
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7808
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !7808
  br i1 %8, label %cond.true, label %cond.false, !dbg !7808

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !7808
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !7808
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !7809
  %and.i = and i64 %11, 63, !dbg !7810
  %shl.i = shl i64 1, %and.i, !dbg !7811
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !7812
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !7813
  %shr.i = ashr i64 %13, 6, !dbg !7814
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !7812
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !7812
  %and1.i = and i64 %shl.i, %14, !dbg !7815
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !7816
  %conv = zext i1 %cmp.i to i32, !dbg !7808
  br label %cond.end, !dbg !7808

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !7808
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !7808
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !7817
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !7818
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #6, !dbg !7819, !srcloc !7820
  store i8 %19, i8* %oldbit.i, align 1, !dbg !7819
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !7821
  %tobool.i = trunc i8 %20 to i1, !dbg !7821
  %conv2 = zext i1 %tobool.i to i32, !dbg !7808
  br label %cond.end, !dbg !7808

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !7808
  %tobool = icmp ne i32 %cond, 0, !dbg !7808
  ret i1 %tobool, !dbg !7822
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !7823 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !7824, metadata !DIExpression()), !dbg !7826
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7827, metadata !DIExpression()), !dbg !7826
  %0 = load i64, i64* %__edi, align 8, !dbg !7826
  store i64 %0, i64* %__edi, align 8, !dbg !7826
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7828, metadata !DIExpression()), !dbg !7826
  %1 = load i64, i64* %__esi, align 8, !dbg !7826
  store i64 %1, i64* %__esi, align 8, !dbg !7826
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7829, metadata !DIExpression()), !dbg !7826
  %2 = load i64, i64* %__edx, align 8, !dbg !7826
  store i64 %2, i64* %__edx, align 8, !dbg !7826
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7830, metadata !DIExpression()), !dbg !7826
  %3 = load i64, i64* %__ecx, align 8, !dbg !7826
  store i64 %3, i64* %__ecx, align 8, !dbg !7826
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7831, metadata !DIExpression()), !dbg !7826
  %4 = load i64, i64* %__eax, align 8, !dbg !7826
  store i64 %4, i64* %__eax, align 8, !dbg !7826
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !7826
  %6 = call i64 @llvm.read_register.i64(metadata !4557), !dbg !7832
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #6, !dbg !7832, !srcloc !7835
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7832
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7832
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7832
  call void @llvm.write_register.i64(metadata !4557, i64 %asmresult1), !dbg !7832
  %8 = load i64, i64* %__eax, align 8, !dbg !7832
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !7836, metadata !DIExpression()), !dbg !7838
  store i64 -1, i64* %__mask, align 8, !dbg !7838
  %9 = load i64, i64* %__mask, align 8, !dbg !7838
  store i64 %9, i64* %tmp, align 8, !dbg !7838
  %10 = load i64, i64* %tmp, align 8, !dbg !7838
  %and = and i64 %8, %10, !dbg !7832
  store i64 %and, i64* %__ret, align 8, !dbg !7832
  %11 = load i64, i64* %__ret, align 8, !dbg !7826
  store i64 %11, i64* %tmp2, align 8, !dbg !7839
  %12 = load i64, i64* %tmp2, align 8, !dbg !7826
  ret i64 %12, !dbg !7840
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !7841 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7842, metadata !DIExpression()), !dbg !7844
  %0 = load i64, i64* %__edi, align 8, !dbg !7844
  store i64 %0, i64* %__edi, align 8, !dbg !7844
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7845, metadata !DIExpression()), !dbg !7844
  %1 = load i64, i64* %__esi, align 8, !dbg !7844
  store i64 %1, i64* %__esi, align 8, !dbg !7844
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7846, metadata !DIExpression()), !dbg !7844
  %2 = load i64, i64* %__edx, align 8, !dbg !7844
  store i64 %2, i64* %__edx, align 8, !dbg !7844
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7847, metadata !DIExpression()), !dbg !7844
  %3 = load i64, i64* %__ecx, align 8, !dbg !7844
  store i64 %3, i64* %__ecx, align 8, !dbg !7844
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7848, metadata !DIExpression()), !dbg !7844
  %4 = load i64, i64* %__eax, align 8, !dbg !7844
  store i64 %4, i64* %__eax, align 8, !dbg !7844
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !7844
  %6 = call i64 @llvm.read_register.i64(metadata !4557), !dbg !7844
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #6, !dbg !7844, !srcloc !7849
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7844
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7844
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7844
  call void @llvm.write_register.i64(metadata !4557, i64 %asmresult1), !dbg !7844
  ret void, !dbg !7850
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #5

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !7851 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !7854, metadata !DIExpression()), !dbg !7855
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7856, metadata !DIExpression()), !dbg !7858
  %0 = load i64, i64* %__edi, align 8, !dbg !7858
  store i64 %0, i64* %__edi, align 8, !dbg !7858
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7859, metadata !DIExpression()), !dbg !7858
  %1 = load i64, i64* %__esi, align 8, !dbg !7858
  store i64 %1, i64* %__esi, align 8, !dbg !7858
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7860, metadata !DIExpression()), !dbg !7858
  %2 = load i64, i64* %__edx, align 8, !dbg !7858
  store i64 %2, i64* %__edx, align 8, !dbg !7858
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7861, metadata !DIExpression()), !dbg !7858
  %3 = load i64, i64* %__ecx, align 8, !dbg !7858
  store i64 %3, i64* %__ecx, align 8, !dbg !7858
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7862, metadata !DIExpression()), !dbg !7858
  %4 = load i64, i64* %__eax, align 8, !dbg !7858
  store i64 %4, i64* %__eax, align 8, !dbg !7858
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !7858
  %6 = call i64 @llvm.read_register.i64(metadata !4557), !dbg !7858
  %7 = load i64, i64* %f.addr, align 8, !dbg !7858
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #6, !dbg !7858, !srcloc !7863
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !7858
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !7858
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7858
  call void @llvm.write_register.i64(metadata !4557, i64 %asmresult1), !dbg !7858
  ret void, !dbg !7864
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @linehandle_validate_flags(i32 %flags) #0 !dbg !7865 {
entry:
  %retval = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7868, metadata !DIExpression()), !dbg !7869
  %0 = load i32, i32* %flags.addr, align 4, !dbg !7870
  %conv = zext i32 %0 to i64, !dbg !7870
  %and = and i64 %conv, -256, !dbg !7872
  %tobool = icmp ne i64 %and, 0, !dbg !7872
  br i1 %tobool, label %if.then, label %if.end, !dbg !7873

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !7874
  br label %return, !dbg !7874

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %flags.addr, align 4, !dbg !7875
  %conv1 = zext i32 %1 to i64, !dbg !7875
  %and2 = and i64 %conv1, 1, !dbg !7877
  %tobool3 = icmp ne i64 %and2, 0, !dbg !7877
  br i1 %tobool3, label %land.lhs.true, label %if.end8, !dbg !7878

land.lhs.true:                                    ; preds = %if.end
  %2 = load i32, i32* %flags.addr, align 4, !dbg !7879
  %conv4 = zext i32 %2 to i64, !dbg !7879
  %and5 = and i64 %conv4, 2, !dbg !7880
  %tobool6 = icmp ne i64 %and5, 0, !dbg !7880
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7881

if.then7:                                         ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !7882
  br label %return, !dbg !7882

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %3 = load i32, i32* %flags.addr, align 4, !dbg !7883
  %conv9 = zext i32 %3 to i64, !dbg !7883
  %and10 = and i64 %conv9, 8, !dbg !7885
  %tobool11 = icmp ne i64 %and10, 0, !dbg !7885
  br i1 %tobool11, label %land.lhs.true12, label %if.end17, !dbg !7886

land.lhs.true12:                                  ; preds = %if.end8
  %4 = load i32, i32* %flags.addr, align 4, !dbg !7887
  %conv13 = zext i32 %4 to i64, !dbg !7887
  %and14 = and i64 %conv13, 16, !dbg !7888
  %tobool15 = icmp ne i64 %and14, 0, !dbg !7888
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !7889

if.then16:                                        ; preds = %land.lhs.true12
  store i32 -22, i32* %retval, align 4, !dbg !7890
  br label %return, !dbg !7890

if.end17:                                         ; preds = %land.lhs.true12, %if.end8
  %5 = load i32, i32* %flags.addr, align 4, !dbg !7891
  %conv18 = zext i32 %5 to i64, !dbg !7891
  %and19 = and i64 %conv18, 2, !dbg !7893
  %tobool20 = icmp ne i64 %and19, 0, !dbg !7893
  br i1 %tobool20, label %if.end29, label %land.lhs.true21, !dbg !7894

land.lhs.true21:                                  ; preds = %if.end17
  %6 = load i32, i32* %flags.addr, align 4, !dbg !7895
  %conv22 = zext i32 %6 to i64, !dbg !7895
  %and23 = and i64 %conv22, 8, !dbg !7896
  %tobool24 = icmp ne i64 %and23, 0, !dbg !7896
  br i1 %tobool24, label %if.then28, label %lor.lhs.false, !dbg !7897

lor.lhs.false:                                    ; preds = %land.lhs.true21
  %7 = load i32, i32* %flags.addr, align 4, !dbg !7898
  %conv25 = zext i32 %7 to i64, !dbg !7898
  %and26 = and i64 %conv25, 16, !dbg !7899
  %tobool27 = icmp ne i64 %and26, 0, !dbg !7899
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !7900

if.then28:                                        ; preds = %lor.lhs.false, %land.lhs.true21
  store i32 -22, i32* %retval, align 4, !dbg !7901
  br label %return, !dbg !7901

if.end29:                                         ; preds = %lor.lhs.false, %if.end17
  %8 = load i32, i32* %flags.addr, align 4, !dbg !7902
  %conv30 = zext i32 %8 to i64, !dbg !7902
  %and31 = and i64 %conv30, 1, !dbg !7904
  %tobool32 = icmp ne i64 %and31, 0, !dbg !7904
  br i1 %tobool32, label %if.end50, label %lor.lhs.false33, !dbg !7905

lor.lhs.false33:                                  ; preds = %if.end29
  %9 = load i32, i32* %flags.addr, align 4, !dbg !7906
  %conv34 = zext i32 %9 to i64, !dbg !7906
  %and35 = and i64 %conv34, 2, !dbg !7907
  %tobool36 = icmp ne i64 %and35, 0, !dbg !7907
  br i1 %tobool36, label %if.end50, label %land.lhs.true37, !dbg !7908

land.lhs.true37:                                  ; preds = %lor.lhs.false33
  %10 = load i32, i32* %flags.addr, align 4, !dbg !7909
  %conv38 = zext i32 %10 to i64, !dbg !7909
  %and39 = and i64 %conv38, 128, !dbg !7910
  %tobool40 = icmp ne i64 %and39, 0, !dbg !7910
  br i1 %tobool40, label %if.then49, label %lor.lhs.false41, !dbg !7911

lor.lhs.false41:                                  ; preds = %land.lhs.true37
  %11 = load i32, i32* %flags.addr, align 4, !dbg !7912
  %conv42 = zext i32 %11 to i64, !dbg !7912
  %and43 = and i64 %conv42, 32, !dbg !7913
  %tobool44 = icmp ne i64 %and43, 0, !dbg !7913
  br i1 %tobool44, label %if.then49, label %lor.lhs.false45, !dbg !7914

lor.lhs.false45:                                  ; preds = %lor.lhs.false41
  %12 = load i32, i32* %flags.addr, align 4, !dbg !7915
  %conv46 = zext i32 %12 to i64, !dbg !7915
  %and47 = and i64 %conv46, 64, !dbg !7916
  %tobool48 = icmp ne i64 %and47, 0, !dbg !7916
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !7917

if.then49:                                        ; preds = %lor.lhs.false45, %lor.lhs.false41, %land.lhs.true37
  store i32 -22, i32* %retval, align 4, !dbg !7918
  br label %return, !dbg !7918

if.end50:                                         ; preds = %lor.lhs.false45, %lor.lhs.false33, %if.end29
  %13 = load i32, i32* %flags.addr, align 4, !dbg !7919
  %conv51 = zext i32 %13 to i64, !dbg !7919
  %and52 = and i64 %conv51, 128, !dbg !7921
  %tobool53 = icmp ne i64 %and52, 0, !dbg !7921
  br i1 %tobool53, label %land.lhs.true54, label %lor.lhs.false58, !dbg !7922

land.lhs.true54:                                  ; preds = %if.end50
  %14 = load i32, i32* %flags.addr, align 4, !dbg !7923
  %conv55 = zext i32 %14 to i64, !dbg !7923
  %and56 = and i64 %conv55, 96, !dbg !7924
  %tobool57 = icmp ne i64 %and56, 0, !dbg !7924
  br i1 %tobool57, label %if.then66, label %lor.lhs.false58, !dbg !7925

lor.lhs.false58:                                  ; preds = %land.lhs.true54, %if.end50
  %15 = load i32, i32* %flags.addr, align 4, !dbg !7926
  %conv59 = zext i32 %15 to i64, !dbg !7926
  %and60 = and i64 %conv59, 64, !dbg !7927
  %tobool61 = icmp ne i64 %and60, 0, !dbg !7927
  br i1 %tobool61, label %land.lhs.true62, label %if.end67, !dbg !7928

land.lhs.true62:                                  ; preds = %lor.lhs.false58
  %16 = load i32, i32* %flags.addr, align 4, !dbg !7929
  %conv63 = zext i32 %16 to i64, !dbg !7929
  %and64 = and i64 %conv63, 32, !dbg !7930
  %tobool65 = icmp ne i64 %and64, 0, !dbg !7930
  br i1 %tobool65, label %if.then66, label %if.end67, !dbg !7931

if.then66:                                        ; preds = %land.lhs.true62, %land.lhs.true54
  store i32 -22, i32* %retval, align 4, !dbg !7932
  br label %return, !dbg !7932

if.end67:                                         ; preds = %land.lhs.true62, %lor.lhs.false58
  store i32 0, i32* %retval, align 4, !dbg !7933
  br label %return, !dbg !7933

return:                                           ; preds = %if.end67, %if.then66, %if.then49, %if.then28, %if.then16, %if.then7, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !7934
  ret i32 %17, !dbg !7934
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !7935 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !7938, metadata !DIExpression()), !dbg !7942
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !7948, metadata !DIExpression()), !dbg !7949
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !7950, metadata !DIExpression()), !dbg !7951
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !7952, metadata !DIExpression()), !dbg !7953
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !7954, metadata !DIExpression()), !dbg !7958
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !7960, metadata !DIExpression()), !dbg !7964
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !7966, metadata !DIExpression()), !dbg !7970
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !7975, metadata !DIExpression()), !dbg !7976
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !7977, metadata !DIExpression()), !dbg !7978
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7979, metadata !DIExpression()), !dbg !7980
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !7981, metadata !DIExpression()), !dbg !7982
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !7983, metadata !DIExpression()), !dbg !7984
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7985, metadata !DIExpression()), !dbg !7986
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !7987, metadata !DIExpression()), !dbg !7988
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !7989, metadata !DIExpression()), !dbg !7990
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7991, metadata !DIExpression()), !dbg !7992
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7993, metadata !DIExpression()), !dbg !7994
  %0 = load i64, i64* %size.addr, align 8, !dbg !7995
  %1 = load i32, i32* %flags.addr, align 4, !dbg !7996
  %or = or i32 %1, 256, !dbg !7997
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !7998
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #6, !dbg !7999
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !8000

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8001
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !8002
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8003

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !8004
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !8005
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !8006
  %call.i.i = call i32 @get_order(i64 %7) #12, !dbg !8007
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !7984
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !8008
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !8009
  %10 = load i32, i32* %order.i.i, align 4, !dbg !8010
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !8011
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !8012
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !8013
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #11, !dbg !8014
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !8014
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !8014
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !8014
  call void @llvm.assume(i1 %maskcond.i.i.i) #6, !dbg !8014
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !8015
  br label %kmalloc.exit, !dbg !8015

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !8016
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8017
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !8017
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !8019

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !8020
  br label %kmalloc_index.exit.i, !dbg !8020

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8021
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !8023
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !8024

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8025
  br label %kmalloc_index.exit.i, !dbg !8025

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8026
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !8028
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !8029

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8030
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !8031
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !8032

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !8033
  br label %kmalloc_index.exit.i, !dbg !8033

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8034
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !8036
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !8037

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8038
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !8039
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !8040

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !8041
  br label %kmalloc_index.exit.i, !dbg !8041

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8042
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !8044
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !8045

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8046
  br label %kmalloc_index.exit.i, !dbg !8046

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8047
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !8049
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !8050

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !8051
  br label %kmalloc_index.exit.i, !dbg !8051

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8052
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !8054
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !8055

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !8056
  br label %kmalloc_index.exit.i, !dbg !8056

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8057
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !8059
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !8060

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !8061
  br label %kmalloc_index.exit.i, !dbg !8061

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8062
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !8064
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !8065

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !8066
  br label %kmalloc_index.exit.i, !dbg !8066

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8067
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !8069
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !8070

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !8071
  br label %kmalloc_index.exit.i, !dbg !8071

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8072
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !8074
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !8075

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !8076
  br label %kmalloc_index.exit.i, !dbg !8076

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8077
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !8079
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !8080

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !8081
  br label %kmalloc_index.exit.i, !dbg !8081

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8082
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !8084
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !8085

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !8086
  br label %kmalloc_index.exit.i, !dbg !8086

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8087
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !8089
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !8090

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !8091
  br label %kmalloc_index.exit.i, !dbg !8091

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8092
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !8094
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !8095

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !8096
  br label %kmalloc_index.exit.i, !dbg !8096

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8097
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !8099
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !8100

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !8101
  br label %kmalloc_index.exit.i, !dbg !8101

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8102
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !8104
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !8105

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !8106
  br label %kmalloc_index.exit.i, !dbg !8106

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8107
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !8109
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !8110

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !8111
  br label %kmalloc_index.exit.i, !dbg !8111

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8112
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !8114
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !8115

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !8116
  br label %kmalloc_index.exit.i, !dbg !8116

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8117
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !8119
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !8120

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !8121
  br label %kmalloc_index.exit.i, !dbg !8121

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8122
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !8124
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !8125

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !8126
  br label %kmalloc_index.exit.i, !dbg !8126

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8127
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !8129
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !8130

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !8131
  br label %kmalloc_index.exit.i, !dbg !8131

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8132
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !8134
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !8135

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !8136
  br label %kmalloc_index.exit.i, !dbg !8136

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8137
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !8139
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !8140

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !8141
  br label %kmalloc_index.exit.i, !dbg !8141

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8142
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !8144
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !8145

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !8146
  br label %kmalloc_index.exit.i, !dbg !8146

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8147
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !8149
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !8150

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !8151
  br label %kmalloc_index.exit.i, !dbg !8151

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8152
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !8154
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !8155

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !8156
  br label %kmalloc_index.exit.i, !dbg !8156

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8157
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !8159
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !8160

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !8161
  br label %kmalloc_index.exit.i, !dbg !8161

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i32 382, i32 0, i64 12) #6, !dbg !8162, !srcloc !8165
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 200) #6, !dbg !8166, !srcloc !8169
  unreachable, !dbg !8170

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !8171
  store i32 %45, i32* %index.i, align 4, !dbg !8172
  %46 = load i32, i32* %index.i, align 4, !dbg !8173
  %tobool.i = icmp ne i32 %46, 0, !dbg !8173
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !8175

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !8176
  br label %kmalloc.exit, !dbg !8176

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !8177
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8178
  %and.i.i = and i32 %48, 17, !dbg !8178
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !8178
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !8178
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !8178
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8178
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !8180

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !8181
  br label %kmalloc_type.exit.i, !dbg !8181

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8182
  %and2.i.i = and i32 %49, 1, !dbg !8183
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !8182
  %50 = zext i1 %tobool3.i.i to i64, !dbg !8182
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !8182
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !8184
  br label %kmalloc_type.exit.i, !dbg !8184

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !8185
  %idxprom.i = zext i32 %51 to i64, !dbg !8186
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !8186
  %52 = load i32, i32* %index.i, align 4, !dbg !8187
  %idxprom6.i = zext i32 %52 to i64, !dbg !8186
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !8186
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !8186
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !8188
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !8189
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8190
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8191
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #11, !dbg !8192
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !8192
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !8192
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !8192
  call void @llvm.assume(i1 %maskcond.i.i) #6, !dbg !8192
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !7953
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8193
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !8194
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !8195
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8196
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #11, !dbg !8197
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !8198
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !8199
  store i8* %62, i8** %retval.i, align 8, !dbg !8200
  br label %kmalloc.exit, !dbg !8200

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !8201
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !8202
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #11, !dbg !8203
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !8203
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !8203
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !8203
  call void @llvm.assume(i1 %maskcond.i) #6, !dbg !8203
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !8204
  br label %kmalloc.exit, !dbg !8204

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !8205
  ret i8* %65, !dbg !8206
}

; Function Attrs: noredzone
declare dso_local %struct.device* @get_device(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local i8* @kstrndup(i8*, i64, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @gpiod_request(%struct.gpio_desc*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @linehandle_flags_to_desc_flags(i32 %lflags, i64* %flagsp) #0 !dbg !8207 {
entry:
  %nr.addr.i48 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i48, metadata !8210, metadata !DIExpression()), !dbg !8215
  %addr.addr.i49 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i49, metadata !8217, metadata !DIExpression()), !dbg !8218
  %value.addr.i50 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr.i50, metadata !8219, metadata !DIExpression()), !dbg !8220
  %nr.addr.i40 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i40, metadata !8210, metadata !DIExpression()), !dbg !8221
  %addr.addr.i41 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i41, metadata !8217, metadata !DIExpression()), !dbg !8223
  %value.addr.i42 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr.i42, metadata !8219, metadata !DIExpression()), !dbg !8224
  %nr.addr.i32 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i32, metadata !8210, metadata !DIExpression()), !dbg !8225
  %addr.addr.i33 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i33, metadata !8217, metadata !DIExpression()), !dbg !8227
  %value.addr.i34 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr.i34, metadata !8219, metadata !DIExpression()), !dbg !8228
  %nr.addr.i24 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i24, metadata !8210, metadata !DIExpression()), !dbg !8229
  %addr.addr.i25 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i25, metadata !8217, metadata !DIExpression()), !dbg !8231
  %value.addr.i26 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr.i26, metadata !8219, metadata !DIExpression()), !dbg !8232
  %nr.addr.i16 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i16, metadata !8210, metadata !DIExpression()), !dbg !8233
  %addr.addr.i17 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i17, metadata !8217, metadata !DIExpression()), !dbg !8235
  %value.addr.i18 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr.i18, metadata !8219, metadata !DIExpression()), !dbg !8236
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !8210, metadata !DIExpression()), !dbg !8237
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !8217, metadata !DIExpression()), !dbg !8239
  %value.addr.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr.i, metadata !8219, metadata !DIExpression()), !dbg !8240
  %lflags.addr = alloca i32, align 4
  %flagsp.addr = alloca i64*, align 8
  store i32 %lflags, i32* %lflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lflags.addr, metadata !8241, metadata !DIExpression()), !dbg !8242
  store i64* %flagsp, i64** %flagsp.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %flagsp.addr, metadata !8243, metadata !DIExpression()), !dbg !8244
  %0 = load i64*, i64** %flagsp.addr, align 8, !dbg !8245
  %1 = load i32, i32* %lflags.addr, align 4, !dbg !8246
  %conv = zext i32 %1 to i64, !dbg !8246
  %and = and i64 %conv, 4, !dbg !8247
  %tobool = icmp ne i64 %and, 0, !dbg !8246
  store i64 6, i64* %nr.addr.i, align 8
  store i64* %0, i64** %addr.addr.i, align 8
  %frombool.i = zext i1 %tobool to i8
  store i8 %frombool.i, i8* %value.addr.i, align 1
  %2 = load i8, i8* %value.addr.i, align 1, !dbg !8248
  %tobool.i = trunc i8 %2 to i1, !dbg !8248
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !8250

if.then.i:                                        ; preds = %entry
  %3 = load i64, i64* %nr.addr.i, align 8, !dbg !8251
  %4 = load i64*, i64** %addr.addr.i, align 8, !dbg !8252
  call void @set_bit(i64 %3, i64* %4) #11, !dbg !8253
  br label %assign_bit.exit, !dbg !8253

if.else.i:                                        ; preds = %entry
  %5 = load i64, i64* %nr.addr.i, align 8, !dbg !8254
  %6 = load i64*, i64** %addr.addr.i, align 8, !dbg !8255
  call void @clear_bit(i64 %5, i64* %6) #11, !dbg !8256
  br label %assign_bit.exit

assign_bit.exit:                                  ; preds = %if.then.i, %if.else.i
  %7 = load i64*, i64** %flagsp.addr, align 8, !dbg !8257
  %8 = load i32, i32* %lflags.addr, align 4, !dbg !8258
  %conv1 = zext i32 %8 to i64, !dbg !8258
  %and2 = and i64 %conv1, 8, !dbg !8259
  %tobool3 = icmp ne i64 %and2, 0, !dbg !8258
  store i64 7, i64* %nr.addr.i16, align 8
  store i64* %7, i64** %addr.addr.i17, align 8
  %frombool.i19 = zext i1 %tobool3 to i8
  store i8 %frombool.i19, i8* %value.addr.i18, align 1
  %9 = load i8, i8* %value.addr.i18, align 1, !dbg !8260
  %tobool.i20 = trunc i8 %9 to i1, !dbg !8260
  br i1 %tobool.i20, label %if.then.i21, label %if.else.i22, !dbg !8261

if.then.i21:                                      ; preds = %assign_bit.exit
  %10 = load i64, i64* %nr.addr.i16, align 8, !dbg !8262
  %11 = load i64*, i64** %addr.addr.i17, align 8, !dbg !8263
  call void @set_bit(i64 %10, i64* %11) #11, !dbg !8264
  br label %assign_bit.exit23, !dbg !8264

if.else.i22:                                      ; preds = %assign_bit.exit
  %12 = load i64, i64* %nr.addr.i16, align 8, !dbg !8265
  %13 = load i64*, i64** %addr.addr.i17, align 8, !dbg !8266
  call void @clear_bit(i64 %12, i64* %13) #11, !dbg !8267
  br label %assign_bit.exit23

assign_bit.exit23:                                ; preds = %if.then.i21, %if.else.i22
  %14 = load i64*, i64** %flagsp.addr, align 8, !dbg !8268
  %15 = load i32, i32* %lflags.addr, align 4, !dbg !8269
  %conv4 = zext i32 %15 to i64, !dbg !8269
  %and5 = and i64 %conv4, 16, !dbg !8270
  %tobool6 = icmp ne i64 %and5, 0, !dbg !8269
  store i64 8, i64* %nr.addr.i24, align 8
  store i64* %14, i64** %addr.addr.i25, align 8
  %frombool.i27 = zext i1 %tobool6 to i8
  store i8 %frombool.i27, i8* %value.addr.i26, align 1
  %16 = load i8, i8* %value.addr.i26, align 1, !dbg !8271
  %tobool.i28 = trunc i8 %16 to i1, !dbg !8271
  br i1 %tobool.i28, label %if.then.i29, label %if.else.i30, !dbg !8272

if.then.i29:                                      ; preds = %assign_bit.exit23
  %17 = load i64, i64* %nr.addr.i24, align 8, !dbg !8273
  %18 = load i64*, i64** %addr.addr.i25, align 8, !dbg !8274
  call void @set_bit(i64 %17, i64* %18) #11, !dbg !8275
  br label %assign_bit.exit31, !dbg !8275

if.else.i30:                                      ; preds = %assign_bit.exit23
  %19 = load i64, i64* %nr.addr.i24, align 8, !dbg !8276
  %20 = load i64*, i64** %addr.addr.i25, align 8, !dbg !8277
  call void @clear_bit(i64 %19, i64* %20) #11, !dbg !8278
  br label %assign_bit.exit31

assign_bit.exit31:                                ; preds = %if.then.i29, %if.else.i30
  %21 = load i64*, i64** %flagsp.addr, align 8, !dbg !8279
  %22 = load i32, i32* %lflags.addr, align 4, !dbg !8280
  %conv7 = zext i32 %22 to i64, !dbg !8280
  %and8 = and i64 %conv7, 32, !dbg !8281
  %tobool9 = icmp ne i64 %and8, 0, !dbg !8280
  store i64 13, i64* %nr.addr.i32, align 8
  store i64* %21, i64** %addr.addr.i33, align 8
  %frombool.i35 = zext i1 %tobool9 to i8
  store i8 %frombool.i35, i8* %value.addr.i34, align 1
  %23 = load i8, i8* %value.addr.i34, align 1, !dbg !8282
  %tobool.i36 = trunc i8 %23 to i1, !dbg !8282
  br i1 %tobool.i36, label %if.then.i37, label %if.else.i38, !dbg !8283

if.then.i37:                                      ; preds = %assign_bit.exit31
  %24 = load i64, i64* %nr.addr.i32, align 8, !dbg !8284
  %25 = load i64*, i64** %addr.addr.i33, align 8, !dbg !8285
  call void @set_bit(i64 %24, i64* %25) #11, !dbg !8286
  br label %assign_bit.exit39, !dbg !8286

if.else.i38:                                      ; preds = %assign_bit.exit31
  %26 = load i64, i64* %nr.addr.i32, align 8, !dbg !8287
  %27 = load i64*, i64** %addr.addr.i33, align 8, !dbg !8288
  call void @clear_bit(i64 %26, i64* %27) #11, !dbg !8289
  br label %assign_bit.exit39

assign_bit.exit39:                                ; preds = %if.then.i37, %if.else.i38
  %28 = load i64*, i64** %flagsp.addr, align 8, !dbg !8290
  %29 = load i32, i32* %lflags.addr, align 4, !dbg !8291
  %conv10 = zext i32 %29 to i64, !dbg !8291
  %and11 = and i64 %conv10, 64, !dbg !8292
  %tobool12 = icmp ne i64 %and11, 0, !dbg !8291
  store i64 14, i64* %nr.addr.i40, align 8
  store i64* %28, i64** %addr.addr.i41, align 8
  %frombool.i43 = zext i1 %tobool12 to i8
  store i8 %frombool.i43, i8* %value.addr.i42, align 1
  %30 = load i8, i8* %value.addr.i42, align 1, !dbg !8293
  %tobool.i44 = trunc i8 %30 to i1, !dbg !8293
  br i1 %tobool.i44, label %if.then.i45, label %if.else.i46, !dbg !8294

if.then.i45:                                      ; preds = %assign_bit.exit39
  %31 = load i64, i64* %nr.addr.i40, align 8, !dbg !8295
  %32 = load i64*, i64** %addr.addr.i41, align 8, !dbg !8296
  call void @set_bit(i64 %31, i64* %32) #11, !dbg !8297
  br label %assign_bit.exit47, !dbg !8297

if.else.i46:                                      ; preds = %assign_bit.exit39
  %33 = load i64, i64* %nr.addr.i40, align 8, !dbg !8298
  %34 = load i64*, i64** %addr.addr.i41, align 8, !dbg !8299
  call void @clear_bit(i64 %33, i64* %34) #11, !dbg !8300
  br label %assign_bit.exit47

assign_bit.exit47:                                ; preds = %if.then.i45, %if.else.i46
  %35 = load i64*, i64** %flagsp.addr, align 8, !dbg !8301
  %36 = load i32, i32* %lflags.addr, align 4, !dbg !8302
  %conv13 = zext i32 %36 to i64, !dbg !8302
  %and14 = and i64 %conv13, 128, !dbg !8303
  %tobool15 = icmp ne i64 %and14, 0, !dbg !8302
  store i64 15, i64* %nr.addr.i48, align 8
  store i64* %35, i64** %addr.addr.i49, align 8
  %frombool.i51 = zext i1 %tobool15 to i8
  store i8 %frombool.i51, i8* %value.addr.i50, align 1
  %37 = load i8, i8* %value.addr.i50, align 1, !dbg !8304
  %tobool.i52 = trunc i8 %37 to i1, !dbg !8304
  br i1 %tobool.i52, label %if.then.i53, label %if.else.i54, !dbg !8305

if.then.i53:                                      ; preds = %assign_bit.exit47
  %38 = load i64, i64* %nr.addr.i48, align 8, !dbg !8306
  %39 = load i64*, i64** %addr.addr.i49, align 8, !dbg !8307
  call void @set_bit(i64 %38, i64* %39) #11, !dbg !8308
  br label %assign_bit.exit55, !dbg !8308

if.else.i54:                                      ; preds = %assign_bit.exit47
  %40 = load i64, i64* %nr.addr.i48, align 8, !dbg !8309
  %41 = load i64*, i64** %addr.addr.i49, align 8, !dbg !8310
  call void @clear_bit(i64 %40, i64* %41) #11, !dbg !8311
  br label %assign_bit.exit55

assign_bit.exit55:                                ; preds = %if.then.i53, %if.else.i54
  ret void, !dbg !8312
}

; Function Attrs: noredzone
declare dso_local i32 @gpiod_set_transitory(%struct.gpio_desc*, i1 zeroext) #2

; Function Attrs: noredzone
declare dso_local i32 @gpiod_direction_output(%struct.gpio_desc*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @gpiod_direction_input(%struct.gpio_desc*) #2

; Function Attrs: noredzone
declare dso_local i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head*, i64, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @get_unused_fd_flags(i32) #2

; Function Attrs: noredzone
declare dso_local %struct.file* @anon_inode_getfile(i8*, %struct.file_operations*, i8*, i32) #2

; Function Attrs: noredzone
declare dso_local void @fput(%struct.file*) #2

; Function Attrs: noredzone
declare dso_local void @put_unused_fd(i32) #2

; Function Attrs: noredzone
declare dso_local void @fd_install(i32, %struct.file*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @linehandle_free(%struct.linehandle_state* %lh) #0 !dbg !8313 {
entry:
  %lh.addr = alloca %struct.linehandle_state*, align 8
  %i = alloca i32, align 4
  store %struct.linehandle_state* %lh, %struct.linehandle_state** %lh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.linehandle_state** %lh.addr, metadata !8316, metadata !DIExpression()), !dbg !8317
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8318, metadata !DIExpression()), !dbg !8319
  store i32 0, i32* %i, align 4, !dbg !8320
  br label %for.cond, !dbg !8322

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8323
  %1 = load %struct.linehandle_state*, %struct.linehandle_state** %lh.addr, align 8, !dbg !8325
  %num_descs = getelementptr inbounds %struct.linehandle_state, %struct.linehandle_state* %1, i32 0, i32 3, !dbg !8326
  %2 = load i32, i32* %num_descs, align 8, !dbg !8326
  %cmp = icmp ult i32 %0, %2, !dbg !8327
  br i1 %cmp, label %for.body, label %for.end, !dbg !8328

for.body:                                         ; preds = %for.cond
  %3 = load %struct.linehandle_state*, %struct.linehandle_state** %lh.addr, align 8, !dbg !8329
  %descs = getelementptr inbounds %struct.linehandle_state, %struct.linehandle_state* %3, i32 0, i32 2, !dbg !8331
  %4 = load i32, i32* %i, align 4, !dbg !8332
  %idxprom = sext i32 %4 to i64, !dbg !8329
  %arrayidx = getelementptr [64 x %struct.gpio_desc*], [64 x %struct.gpio_desc*]* %descs, i64 0, i64 %idxprom, !dbg !8329
  %5 = load %struct.gpio_desc*, %struct.gpio_desc** %arrayidx, align 8, !dbg !8329
  %tobool = icmp ne %struct.gpio_desc* %5, null, !dbg !8329
  br i1 %tobool, label %if.then, label %if.end, !dbg !8333

if.then:                                          ; preds = %for.body
  %6 = load %struct.linehandle_state*, %struct.linehandle_state** %lh.addr, align 8, !dbg !8334
  %descs1 = getelementptr inbounds %struct.linehandle_state, %struct.linehandle_state* %6, i32 0, i32 2, !dbg !8335
  %7 = load i32, i32* %i, align 4, !dbg !8336
  %idxprom2 = sext i32 %7 to i64, !dbg !8334
  %arrayidx3 = getelementptr [64 x %struct.gpio_desc*], [64 x %struct.gpio_desc*]* %descs1, i64 0, i64 %idxprom2, !dbg !8334
  %8 = load %struct.gpio_desc*, %struct.gpio_desc** %arrayidx3, align 8, !dbg !8334
  call void @gpiod_free(%struct.gpio_desc* %8) #9, !dbg !8337
  br label %if.end, !dbg !8337

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !8338

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4, !dbg !8339
  %inc = add i32 %9, 1, !dbg !8339
  store i32 %inc, i32* %i, align 4, !dbg !8339
  br label %for.cond, !dbg !8340, !llvm.loop !8341

for.end:                                          ; preds = %for.cond
  %10 = load %struct.linehandle_state*, %struct.linehandle_state** %lh.addr, align 8, !dbg !8343
  %label = getelementptr inbounds %struct.linehandle_state, %struct.linehandle_state* %10, i32 0, i32 1, !dbg !8344
  %11 = load i8*, i8** %label, align 8, !dbg !8344
  call void @kfree(i8* %11) #9, !dbg !8345
  %12 = load %struct.linehandle_state*, %struct.linehandle_state** %lh.addr, align 8, !dbg !8346
  %gdev = getelementptr inbounds %struct.linehandle_state, %struct.linehandle_state* %12, i32 0, i32 0, !dbg !8347
  %13 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !8347
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %13, i32 0, i32 1, !dbg !8348
  call void @put_device(%struct.device* %dev) #9, !dbg !8349
  %14 = load %struct.linehandle_state*, %struct.linehandle_state** %lh.addr, align 8, !dbg !8350
  %15 = bitcast %struct.linehandle_state* %14 to i8*, !dbg !8350
  call void @kfree(i8* %15) #9, !dbg !8351
  ret void, !dbg !8352
}

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !8353 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !8357, metadata !DIExpression()), !dbg !8361
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !8363, metadata !DIExpression()), !dbg !8364
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8365, metadata !DIExpression()), !dbg !8366
  %0 = load i64, i64* %size.addr, align 8, !dbg !8367
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !8369
  br i1 %1, label %if.then, label %if.end447, !dbg !8370

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !8371
  %tobool = icmp ne i64 %2, 0, !dbg !8371
  br i1 %tobool, label %if.end, label %if.then1, !dbg !8374

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !8375
  br label %return, !dbg !8375

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !8376
  %cmp = icmp ult i64 %3, 4096, !dbg !8378
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8379

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8380
  br label %return, !dbg !8380

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub = sub i64 %4, 1, !dbg !8381
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !8381
  br i1 %5, label %cond.true, label %cond.false442, !dbg !8381

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub4 = sub i64 %6, 1, !dbg !8381
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !8381
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !8381

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub6 = sub i64 %8, 1, !dbg !8381
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !8381
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !8381

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !8381

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub9 = sub i64 %9, 1, !dbg !8381
  %and = and i64 %sub9, -9223372036854775808, !dbg !8381
  %tobool10 = icmp ne i64 %and, 0, !dbg !8381
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !8381

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !8381

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub13 = sub i64 %10, 1, !dbg !8381
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !8381
  %tobool15 = icmp ne i64 %and14, 0, !dbg !8381
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !8381

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !8381

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub18 = sub i64 %11, 1, !dbg !8381
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !8381
  %tobool20 = icmp ne i64 %and19, 0, !dbg !8381
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !8381

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !8381

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub23 = sub i64 %12, 1, !dbg !8381
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !8381
  %tobool25 = icmp ne i64 %and24, 0, !dbg !8381
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !8381

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !8381

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub28 = sub i64 %13, 1, !dbg !8381
  %and29 = and i64 %sub28, 576460752303423488, !dbg !8381
  %tobool30 = icmp ne i64 %and29, 0, !dbg !8381
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !8381

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !8381

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub33 = sub i64 %14, 1, !dbg !8381
  %and34 = and i64 %sub33, 288230376151711744, !dbg !8381
  %tobool35 = icmp ne i64 %and34, 0, !dbg !8381
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !8381

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !8381

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub38 = sub i64 %15, 1, !dbg !8381
  %and39 = and i64 %sub38, 144115188075855872, !dbg !8381
  %tobool40 = icmp ne i64 %and39, 0, !dbg !8381
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !8381

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !8381

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub43 = sub i64 %16, 1, !dbg !8381
  %and44 = and i64 %sub43, 72057594037927936, !dbg !8381
  %tobool45 = icmp ne i64 %and44, 0, !dbg !8381
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !8381

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !8381

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub48 = sub i64 %17, 1, !dbg !8381
  %and49 = and i64 %sub48, 36028797018963968, !dbg !8381
  %tobool50 = icmp ne i64 %and49, 0, !dbg !8381
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !8381

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !8381

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub53 = sub i64 %18, 1, !dbg !8381
  %and54 = and i64 %sub53, 18014398509481984, !dbg !8381
  %tobool55 = icmp ne i64 %and54, 0, !dbg !8381
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !8381

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !8381

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub58 = sub i64 %19, 1, !dbg !8381
  %and59 = and i64 %sub58, 9007199254740992, !dbg !8381
  %tobool60 = icmp ne i64 %and59, 0, !dbg !8381
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !8381

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !8381

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub63 = sub i64 %20, 1, !dbg !8381
  %and64 = and i64 %sub63, 4503599627370496, !dbg !8381
  %tobool65 = icmp ne i64 %and64, 0, !dbg !8381
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !8381

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !8381

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub68 = sub i64 %21, 1, !dbg !8381
  %and69 = and i64 %sub68, 2251799813685248, !dbg !8381
  %tobool70 = icmp ne i64 %and69, 0, !dbg !8381
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !8381

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !8381

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub73 = sub i64 %22, 1, !dbg !8381
  %and74 = and i64 %sub73, 1125899906842624, !dbg !8381
  %tobool75 = icmp ne i64 %and74, 0, !dbg !8381
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !8381

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !8381

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub78 = sub i64 %23, 1, !dbg !8381
  %and79 = and i64 %sub78, 562949953421312, !dbg !8381
  %tobool80 = icmp ne i64 %and79, 0, !dbg !8381
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !8381

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !8381

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub83 = sub i64 %24, 1, !dbg !8381
  %and84 = and i64 %sub83, 281474976710656, !dbg !8381
  %tobool85 = icmp ne i64 %and84, 0, !dbg !8381
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !8381

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !8381

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub88 = sub i64 %25, 1, !dbg !8381
  %and89 = and i64 %sub88, 140737488355328, !dbg !8381
  %tobool90 = icmp ne i64 %and89, 0, !dbg !8381
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !8381

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !8381

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub93 = sub i64 %26, 1, !dbg !8381
  %and94 = and i64 %sub93, 70368744177664, !dbg !8381
  %tobool95 = icmp ne i64 %and94, 0, !dbg !8381
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !8381

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !8381

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub98 = sub i64 %27, 1, !dbg !8381
  %and99 = and i64 %sub98, 35184372088832, !dbg !8381
  %tobool100 = icmp ne i64 %and99, 0, !dbg !8381
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !8381

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !8381

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub103 = sub i64 %28, 1, !dbg !8381
  %and104 = and i64 %sub103, 17592186044416, !dbg !8381
  %tobool105 = icmp ne i64 %and104, 0, !dbg !8381
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !8381

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !8381

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub108 = sub i64 %29, 1, !dbg !8381
  %and109 = and i64 %sub108, 8796093022208, !dbg !8381
  %tobool110 = icmp ne i64 %and109, 0, !dbg !8381
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !8381

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !8381

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub113 = sub i64 %30, 1, !dbg !8381
  %and114 = and i64 %sub113, 4398046511104, !dbg !8381
  %tobool115 = icmp ne i64 %and114, 0, !dbg !8381
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !8381

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !8381

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub118 = sub i64 %31, 1, !dbg !8381
  %and119 = and i64 %sub118, 2199023255552, !dbg !8381
  %tobool120 = icmp ne i64 %and119, 0, !dbg !8381
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !8381

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !8381

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub123 = sub i64 %32, 1, !dbg !8381
  %and124 = and i64 %sub123, 1099511627776, !dbg !8381
  %tobool125 = icmp ne i64 %and124, 0, !dbg !8381
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !8381

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !8381

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub128 = sub i64 %33, 1, !dbg !8381
  %and129 = and i64 %sub128, 549755813888, !dbg !8381
  %tobool130 = icmp ne i64 %and129, 0, !dbg !8381
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !8381

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !8381

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub133 = sub i64 %34, 1, !dbg !8381
  %and134 = and i64 %sub133, 274877906944, !dbg !8381
  %tobool135 = icmp ne i64 %and134, 0, !dbg !8381
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !8381

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !8381

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub138 = sub i64 %35, 1, !dbg !8381
  %and139 = and i64 %sub138, 137438953472, !dbg !8381
  %tobool140 = icmp ne i64 %and139, 0, !dbg !8381
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !8381

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !8381

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub143 = sub i64 %36, 1, !dbg !8381
  %and144 = and i64 %sub143, 68719476736, !dbg !8381
  %tobool145 = icmp ne i64 %and144, 0, !dbg !8381
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !8381

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !8381

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub148 = sub i64 %37, 1, !dbg !8381
  %and149 = and i64 %sub148, 34359738368, !dbg !8381
  %tobool150 = icmp ne i64 %and149, 0, !dbg !8381
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !8381

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !8381

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub153 = sub i64 %38, 1, !dbg !8381
  %and154 = and i64 %sub153, 17179869184, !dbg !8381
  %tobool155 = icmp ne i64 %and154, 0, !dbg !8381
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !8381

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !8381

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub158 = sub i64 %39, 1, !dbg !8381
  %and159 = and i64 %sub158, 8589934592, !dbg !8381
  %tobool160 = icmp ne i64 %and159, 0, !dbg !8381
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !8381

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !8381

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub163 = sub i64 %40, 1, !dbg !8381
  %and164 = and i64 %sub163, 4294967296, !dbg !8381
  %tobool165 = icmp ne i64 %and164, 0, !dbg !8381
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !8381

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !8381

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub168 = sub i64 %41, 1, !dbg !8381
  %and169 = and i64 %sub168, 2147483648, !dbg !8381
  %tobool170 = icmp ne i64 %and169, 0, !dbg !8381
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !8381

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !8381

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub173 = sub i64 %42, 1, !dbg !8381
  %and174 = and i64 %sub173, 1073741824, !dbg !8381
  %tobool175 = icmp ne i64 %and174, 0, !dbg !8381
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !8381

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !8381

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub178 = sub i64 %43, 1, !dbg !8381
  %and179 = and i64 %sub178, 536870912, !dbg !8381
  %tobool180 = icmp ne i64 %and179, 0, !dbg !8381
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !8381

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !8381

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub183 = sub i64 %44, 1, !dbg !8381
  %and184 = and i64 %sub183, 268435456, !dbg !8381
  %tobool185 = icmp ne i64 %and184, 0, !dbg !8381
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !8381

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !8381

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub188 = sub i64 %45, 1, !dbg !8381
  %and189 = and i64 %sub188, 134217728, !dbg !8381
  %tobool190 = icmp ne i64 %and189, 0, !dbg !8381
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !8381

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !8381

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub193 = sub i64 %46, 1, !dbg !8381
  %and194 = and i64 %sub193, 67108864, !dbg !8381
  %tobool195 = icmp ne i64 %and194, 0, !dbg !8381
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !8381

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !8381

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub198 = sub i64 %47, 1, !dbg !8381
  %and199 = and i64 %sub198, 33554432, !dbg !8381
  %tobool200 = icmp ne i64 %and199, 0, !dbg !8381
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !8381

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !8381

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub203 = sub i64 %48, 1, !dbg !8381
  %and204 = and i64 %sub203, 16777216, !dbg !8381
  %tobool205 = icmp ne i64 %and204, 0, !dbg !8381
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !8381

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !8381

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub208 = sub i64 %49, 1, !dbg !8381
  %and209 = and i64 %sub208, 8388608, !dbg !8381
  %tobool210 = icmp ne i64 %and209, 0, !dbg !8381
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !8381

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !8381

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub213 = sub i64 %50, 1, !dbg !8381
  %and214 = and i64 %sub213, 4194304, !dbg !8381
  %tobool215 = icmp ne i64 %and214, 0, !dbg !8381
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !8381

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !8381

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub218 = sub i64 %51, 1, !dbg !8381
  %and219 = and i64 %sub218, 2097152, !dbg !8381
  %tobool220 = icmp ne i64 %and219, 0, !dbg !8381
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !8381

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !8381

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub223 = sub i64 %52, 1, !dbg !8381
  %and224 = and i64 %sub223, 1048576, !dbg !8381
  %tobool225 = icmp ne i64 %and224, 0, !dbg !8381
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !8381

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !8381

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub228 = sub i64 %53, 1, !dbg !8381
  %and229 = and i64 %sub228, 524288, !dbg !8381
  %tobool230 = icmp ne i64 %and229, 0, !dbg !8381
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !8381

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !8381

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub233 = sub i64 %54, 1, !dbg !8381
  %and234 = and i64 %sub233, 262144, !dbg !8381
  %tobool235 = icmp ne i64 %and234, 0, !dbg !8381
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !8381

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !8381

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub238 = sub i64 %55, 1, !dbg !8381
  %and239 = and i64 %sub238, 131072, !dbg !8381
  %tobool240 = icmp ne i64 %and239, 0, !dbg !8381
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !8381

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !8381

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub243 = sub i64 %56, 1, !dbg !8381
  %and244 = and i64 %sub243, 65536, !dbg !8381
  %tobool245 = icmp ne i64 %and244, 0, !dbg !8381
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !8381

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !8381

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub248 = sub i64 %57, 1, !dbg !8381
  %and249 = and i64 %sub248, 32768, !dbg !8381
  %tobool250 = icmp ne i64 %and249, 0, !dbg !8381
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !8381

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !8381

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub253 = sub i64 %58, 1, !dbg !8381
  %and254 = and i64 %sub253, 16384, !dbg !8381
  %tobool255 = icmp ne i64 %and254, 0, !dbg !8381
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !8381

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !8381

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub258 = sub i64 %59, 1, !dbg !8381
  %and259 = and i64 %sub258, 8192, !dbg !8381
  %tobool260 = icmp ne i64 %and259, 0, !dbg !8381
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !8381

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !8381

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub263 = sub i64 %60, 1, !dbg !8381
  %and264 = and i64 %sub263, 4096, !dbg !8381
  %tobool265 = icmp ne i64 %and264, 0, !dbg !8381
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !8381

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !8381

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub268 = sub i64 %61, 1, !dbg !8381
  %and269 = and i64 %sub268, 2048, !dbg !8381
  %tobool270 = icmp ne i64 %and269, 0, !dbg !8381
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !8381

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !8381

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub273 = sub i64 %62, 1, !dbg !8381
  %and274 = and i64 %sub273, 1024, !dbg !8381
  %tobool275 = icmp ne i64 %and274, 0, !dbg !8381
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !8381

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !8381

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub278 = sub i64 %63, 1, !dbg !8381
  %and279 = and i64 %sub278, 512, !dbg !8381
  %tobool280 = icmp ne i64 %and279, 0, !dbg !8381
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !8381

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !8381

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub283 = sub i64 %64, 1, !dbg !8381
  %and284 = and i64 %sub283, 256, !dbg !8381
  %tobool285 = icmp ne i64 %and284, 0, !dbg !8381
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !8381

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !8381

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub288 = sub i64 %65, 1, !dbg !8381
  %and289 = and i64 %sub288, 128, !dbg !8381
  %tobool290 = icmp ne i64 %and289, 0, !dbg !8381
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !8381

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !8381

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub293 = sub i64 %66, 1, !dbg !8381
  %and294 = and i64 %sub293, 64, !dbg !8381
  %tobool295 = icmp ne i64 %and294, 0, !dbg !8381
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !8381

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !8381

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub298 = sub i64 %67, 1, !dbg !8381
  %and299 = and i64 %sub298, 32, !dbg !8381
  %tobool300 = icmp ne i64 %and299, 0, !dbg !8381
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !8381

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !8381

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub303 = sub i64 %68, 1, !dbg !8381
  %and304 = and i64 %sub303, 16, !dbg !8381
  %tobool305 = icmp ne i64 %and304, 0, !dbg !8381
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !8381

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !8381

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub308 = sub i64 %69, 1, !dbg !8381
  %and309 = and i64 %sub308, 8, !dbg !8381
  %tobool310 = icmp ne i64 %and309, 0, !dbg !8381
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !8381

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !8381

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub313 = sub i64 %70, 1, !dbg !8381
  %and314 = and i64 %sub313, 4, !dbg !8381
  %tobool315 = icmp ne i64 %and314, 0, !dbg !8381
  %71 = zext i1 %tobool315 to i64, !dbg !8381
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !8381
  br label %cond.end, !dbg !8381

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !8381
  br label %cond.end317, !dbg !8381

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !8381
  br label %cond.end319, !dbg !8381

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !8381
  br label %cond.end321, !dbg !8381

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !8381
  br label %cond.end323, !dbg !8381

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !8381
  br label %cond.end325, !dbg !8381

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !8381
  br label %cond.end327, !dbg !8381

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !8381
  br label %cond.end329, !dbg !8381

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !8381
  br label %cond.end331, !dbg !8381

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !8381
  br label %cond.end333, !dbg !8381

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !8381
  br label %cond.end335, !dbg !8381

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !8381
  br label %cond.end337, !dbg !8381

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !8381
  br label %cond.end339, !dbg !8381

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !8381
  br label %cond.end341, !dbg !8381

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !8381
  br label %cond.end343, !dbg !8381

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !8381
  br label %cond.end345, !dbg !8381

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !8381
  br label %cond.end347, !dbg !8381

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !8381
  br label %cond.end349, !dbg !8381

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !8381
  br label %cond.end351, !dbg !8381

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !8381
  br label %cond.end353, !dbg !8381

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !8381
  br label %cond.end355, !dbg !8381

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !8381
  br label %cond.end357, !dbg !8381

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !8381
  br label %cond.end359, !dbg !8381

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !8381
  br label %cond.end361, !dbg !8381

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !8381
  br label %cond.end363, !dbg !8381

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !8381
  br label %cond.end365, !dbg !8381

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !8381
  br label %cond.end367, !dbg !8381

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !8381
  br label %cond.end369, !dbg !8381

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !8381
  br label %cond.end371, !dbg !8381

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !8381
  br label %cond.end373, !dbg !8381

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !8381
  br label %cond.end375, !dbg !8381

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !8381
  br label %cond.end377, !dbg !8381

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !8381
  br label %cond.end379, !dbg !8381

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !8381
  br label %cond.end381, !dbg !8381

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !8381
  br label %cond.end383, !dbg !8381

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !8381
  br label %cond.end385, !dbg !8381

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !8381
  br label %cond.end387, !dbg !8381

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !8381
  br label %cond.end389, !dbg !8381

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !8381
  br label %cond.end391, !dbg !8381

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !8381
  br label %cond.end393, !dbg !8381

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !8381
  br label %cond.end395, !dbg !8381

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !8381
  br label %cond.end397, !dbg !8381

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !8381
  br label %cond.end399, !dbg !8381

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !8381
  br label %cond.end401, !dbg !8381

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !8381
  br label %cond.end403, !dbg !8381

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !8381
  br label %cond.end405, !dbg !8381

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !8381
  br label %cond.end407, !dbg !8381

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !8381
  br label %cond.end409, !dbg !8381

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !8381
  br label %cond.end411, !dbg !8381

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !8381
  br label %cond.end413, !dbg !8381

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !8381
  br label %cond.end415, !dbg !8381

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !8381
  br label %cond.end417, !dbg !8381

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !8381
  br label %cond.end419, !dbg !8381

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !8381
  br label %cond.end421, !dbg !8381

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !8381
  br label %cond.end423, !dbg !8381

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !8381
  br label %cond.end425, !dbg !8381

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !8381
  br label %cond.end427, !dbg !8381

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !8381
  br label %cond.end429, !dbg !8381

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !8381
  br label %cond.end431, !dbg !8381

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !8381
  br label %cond.end433, !dbg !8381

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !8381
  br label %cond.end435, !dbg !8381

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !8381
  br label %cond.end437, !dbg !8381

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !8381
  br label %cond.end440, !dbg !8381

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !8381

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !8381
  br label %cond.end444, !dbg !8381

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !8381
  %sub443 = sub i64 %72, 1, !dbg !8381
  %call = call i32 @__ilog2_u64(i64 %sub443) #12, !dbg !8381
  br label %cond.end444, !dbg !8381

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !8381
  %sub446 = sub i32 %cond445, 12, !dbg !8382
  %add = add i32 %sub446, 1, !dbg !8383
  store i32 %add, i32* %retval, align 4, !dbg !8384
  br label %return, !dbg !8384

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !8385
  %dec = add i64 %73, -1, !dbg !8385
  store i64 %dec, i64* %size.addr, align 8, !dbg !8385
  %74 = load i64, i64* %size.addr, align 8, !dbg !8386
  %shr = lshr i64 %74, 12, !dbg !8386
  store i64 %shr, i64* %size.addr, align 8, !dbg !8386
  %75 = load i64, i64* %size.addr, align 8, !dbg !8387
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !8364
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !8388
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !8389
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #5, !dbg !8388, !srcloc !8390
  store i32 %78, i32* %bitpos.i, align 4, !dbg !8388
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !8391
  %add.i = add i32 %79, 1, !dbg !8392
  store i32 %add.i, i32* %retval, align 4, !dbg !8393
  br label %return, !dbg !8393

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !8394
  ret i32 %80, !dbg !8394
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !8395 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !8357, metadata !DIExpression()), !dbg !8399
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !8363, metadata !DIExpression()), !dbg !8401
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !8402, metadata !DIExpression()), !dbg !8403
  %0 = load i64, i64* %n.addr, align 8, !dbg !8404
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !8401
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !8405
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !8406
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #5, !dbg !8405, !srcloc !8390
  store i32 %3, i32* %bitpos.i, align 4, !dbg !8405
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !8407
  %add.i = add i32 %4, 1, !dbg !8408
  %sub = sub i32 %add.i, 1, !dbg !8409
  ret i32 %sub, !dbg !8410
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !8411 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !8415, metadata !DIExpression()), !dbg !8416
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !8417, metadata !DIExpression()), !dbg !8418
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8419, metadata !DIExpression()), !dbg !8420
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8421, metadata !DIExpression()), !dbg !8422
  %0 = load i8*, i8** %object.addr, align 8, !dbg !8423
  ret i8* %0, !dbg !8424
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !8425 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !8426, metadata !DIExpression()), !dbg !8428
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !8430, metadata !DIExpression()), !dbg !8431
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7046, metadata !DIExpression()), !dbg !8432
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7050, metadata !DIExpression()), !dbg !8434
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !8435, metadata !DIExpression()), !dbg !8436
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !8437, metadata !DIExpression()), !dbg !8438
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !8439
  %1 = load i64, i64* %nr.addr, align 8, !dbg !8440
  %div = sdiv i64 %1, 64, !dbg !8440
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !8441
  %2 = bitcast i64* %add.ptr to i8*, !dbg !8439
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !8442
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8443
  %conv.i = trunc i64 %4 to i32, !dbg !8443
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #11, !dbg !8444
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !8445
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !8445
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #11, !dbg !8445
  %7 = load i64, i64* %nr.addr, align 8, !dbg !8446
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !8447
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !8448
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #6, !dbg !8450
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !8451

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !8452
  %12 = bitcast i64* %11 to i8*, !dbg !8452
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !8452
  %shr.i = ashr i64 %13, 3, !dbg !8452
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !8452
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !8454
  %and.i = and i64 %14, 7, !dbg !8454
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !8454
  %shl.i = shl i32 1, %sh_prom.i, !dbg !8454
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #6, !dbg !8455, !srcloc !8456
  br label %arch_set_bit.exit, !dbg !8457

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !8458
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !8460
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #6, !dbg !8461, !srcloc !8462
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !8463
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !8464 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8465, metadata !DIExpression()), !dbg !8466
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8467, metadata !DIExpression()), !dbg !8468
  ret i1 true, !dbg !8469
}

; Function Attrs: noredzone
declare dso_local i64 @noop_llseek(%struct.file*, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @linehandle_ioctl(%struct.file* %file, i32 %cmd, i64 %arg) #0 !dbg !8470 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !8471, metadata !DIExpression()), !dbg !8473
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !8480, metadata !DIExpression()), !dbg !8481
  %value.addr.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr.i, metadata !8482, metadata !DIExpression()), !dbg !8483
  %retval.i.i58 = alloca i1, align 1
  %addr.addr.i.i59 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i59, metadata !4609, metadata !DIExpression()), !dbg !8484
  %bytes.addr.i.i60 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i60, metadata !4626, metadata !DIExpression()), !dbg !8488
  %is_source.addr.i.i61 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i61, metadata !4628, metadata !DIExpression()), !dbg !8489
  %sz.i.i62 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i62, metadata !4630, metadata !DIExpression()), !dbg !8490
  %__ret_warn_on.i.i63 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i63, metadata !4632, metadata !DIExpression()), !dbg !8491
  %tmp.i.i64 = alloca i64, align 8
  %to.addr.i65 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i65, metadata !5056, metadata !DIExpression()), !dbg !8492
  %from.addr.i66 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i66, metadata !5058, metadata !DIExpression()), !dbg !8493
  %n.addr.i67 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i67, metadata !5060, metadata !DIExpression()), !dbg !8494
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !4609, metadata !DIExpression()), !dbg !8495
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !4626, metadata !DIExpression()), !dbg !8500
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !4628, metadata !DIExpression()), !dbg !8501
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !4630, metadata !DIExpression()), !dbg !8502
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !4632, metadata !DIExpression()), !dbg !8503
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !4636, metadata !DIExpression()), !dbg !8504
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !4638, metadata !DIExpression()), !dbg !8505
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !4640, metadata !DIExpression()), !dbg !8506
  %retval = alloca i64, align 8
  %file.addr = alloca %struct.file*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i64, align 8
  %lh = alloca %struct.linehandle_state*, align 8
  %ip = alloca i8*, align 8
  %ghd = alloca %struct.gpiohandle_data, align 1
  %vals = alloca [1 x i64], align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !8507, metadata !DIExpression()), !dbg !8508
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !8509, metadata !DIExpression()), !dbg !8510
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !8511, metadata !DIExpression()), !dbg !8512
  call void @llvm.dbg.declare(metadata %struct.linehandle_state** %lh, metadata !8513, metadata !DIExpression()), !dbg !8514
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !8515
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !8516
  %1 = load i8*, i8** %private_data, align 8, !dbg !8516
  %2 = bitcast i8* %1 to %struct.linehandle_state*, !dbg !8515
  store %struct.linehandle_state* %2, %struct.linehandle_state** %lh, align 8, !dbg !8514
  call void @llvm.dbg.declare(metadata i8** %ip, metadata !8517, metadata !DIExpression()), !dbg !8518
  %3 = load i64, i64* %arg.addr, align 8, !dbg !8519
  %4 = inttoptr i64 %3 to i8*, !dbg !8520
  store i8* %4, i8** %ip, align 8, !dbg !8518
  call void @llvm.dbg.declare(metadata %struct.gpiohandle_data* %ghd, metadata !8521, metadata !DIExpression()), !dbg !8525
  call void @llvm.dbg.declare(metadata [1 x i64]* %vals, metadata !8526, metadata !DIExpression()), !dbg !8527
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8528, metadata !DIExpression()), !dbg !8529
  %5 = load i32, i32* %cmd.addr, align 4, !dbg !8530
  %conv = zext i32 %5 to i64, !dbg !8530
  %cmp = icmp eq i64 %conv, 3225465864, !dbg !8531
  br i1 %cmp, label %if.then, label %if.else, !dbg !8532

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8533, metadata !DIExpression()), !dbg !8534
  %6 = load %struct.linehandle_state*, %struct.linehandle_state** %lh, align 8, !dbg !8535
  %num_descs = getelementptr inbounds %struct.linehandle_state, %struct.linehandle_state* %6, i32 0, i32 3, !dbg !8536
  %7 = load i32, i32* %num_descs, align 8, !dbg !8536
  %8 = load %struct.linehandle_state*, %struct.linehandle_state** %lh, align 8, !dbg !8537
  %descs = getelementptr inbounds %struct.linehandle_state, %struct.linehandle_state* %8, i32 0, i32 2, !dbg !8538
  %arraydecay = getelementptr inbounds [64 x %struct.gpio_desc*], [64 x %struct.gpio_desc*]* %descs, i64 0, i64 0, !dbg !8537
  %arraydecay2 = getelementptr inbounds [1 x i64], [1 x i64]* %vals, i64 0, i64 0, !dbg !8539
  %call = call i32 @gpiod_get_array_value_complex(i1 zeroext false, i1 zeroext true, i32 %7, %struct.gpio_desc** %arraydecay, %struct.gpio_array* null, i64* %arraydecay2) #9, !dbg !8540
  store i32 %call, i32* %ret, align 4, !dbg !8534
  %9 = load i32, i32* %ret, align 4, !dbg !8541
  %tobool = icmp ne i32 %9, 0, !dbg !8541
  br i1 %tobool, label %if.then3, label %if.end, !dbg !8543

if.then3:                                         ; preds = %if.then
  %10 = load i32, i32* %ret, align 4, !dbg !8544
  %conv4 = sext i32 %10 to i64, !dbg !8544
  store i64 %conv4, i64* %retval, align 8, !dbg !8545
  br label %return, !dbg !8545

if.end:                                           ; preds = %if.then
  %11 = bitcast %struct.gpiohandle_data* %ghd to i8*, !dbg !8546
  call void @llvm.memset.p0i8.i64(i8* align 1 %11, i8 0, i64 64, i1 false), !dbg !8546
  store i32 0, i32* %i, align 4, !dbg !8547
  br label %for.cond, !dbg !8549

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %i, align 4, !dbg !8550
  %13 = load %struct.linehandle_state*, %struct.linehandle_state** %lh, align 8, !dbg !8552
  %num_descs5 = getelementptr inbounds %struct.linehandle_state, %struct.linehandle_state* %13, i32 0, i32 3, !dbg !8553
  %14 = load i32, i32* %num_descs5, align 8, !dbg !8553
  %cmp6 = icmp ult i32 %12, %14, !dbg !8554
  br i1 %cmp6, label %for.body, label %for.end, !dbg !8555

for.body:                                         ; preds = %for.cond
  %15 = load i32, i32* %i, align 4, !dbg !8556
  %conv8 = sext i32 %15 to i64, !dbg !8556
  %arraydecay9 = getelementptr inbounds [1 x i64], [1 x i64]* %vals, i64 0, i64 0, !dbg !8557
  %call10 = call zeroext i1 @test_bit(i64 %conv8, i64* %arraydecay9) #9, !dbg !8558
  %conv11 = zext i1 %call10 to i8, !dbg !8558
  %values = getelementptr inbounds %struct.gpiohandle_data, %struct.gpiohandle_data* %ghd, i32 0, i32 0, !dbg !8559
  %16 = load i32, i32* %i, align 4, !dbg !8560
  %idxprom = sext i32 %16 to i64, !dbg !8561
  %arrayidx = getelementptr [64 x i8], [64 x i8]* %values, i64 0, i64 %idxprom, !dbg !8561
  store i8 %conv11, i8* %arrayidx, align 1, !dbg !8562
  br label %for.inc, !dbg !8561

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !8563
  %inc = add i32 %17, 1, !dbg !8563
  store i32 %inc, i32* %i, align 4, !dbg !8563
  br label %for.cond, !dbg !8564, !llvm.loop !8565

for.end:                                          ; preds = %for.cond
  %18 = load i8*, i8** %ip, align 8, !dbg !8567
  %19 = bitcast %struct.gpiohandle_data* %ghd to i8*, !dbg !8568
  store i8* %18, i8** %to.addr.i, align 8
  store i8* %19, i8** %from.addr.i, align 8
  store i64 64, i64* %n.addr.i, align 8
  %20 = load i8*, i8** %from.addr.i, align 8, !dbg !8569
  %21 = load i64, i64* %n.addr.i, align 8, !dbg !8569
  store i8* %20, i8** %addr.addr.i.i, align 8
  store i64 %21, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !8502
  %22 = load i32, i32* %sz.i.i, align 4, !dbg !8570
  %cmp.i.i = icmp sge i32 %22, 0, !dbg !8570
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !8570

land.rhs.i.i:                                     ; preds = %for.end
  %23 = load i32, i32* %sz.i.i, align 4, !dbg !8570
  %conv.i.i = sext i32 %23 to i64, !dbg !8570
  %24 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8570
  %cmp1.i.i = icmp ult i64 %conv.i.i, %24, !dbg !8570
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %for.end
  %25 = phi i1 [ false, %for.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !8571
  %lnot.i.i = xor i1 %25, true, !dbg !8570
  %lnot.ext.i.i = zext i1 %25 to i32, !dbg !8570
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8570
  br i1 %25, label %if.then.i.i, label %if.end10.i.i, !dbg !8572

if.then.i.i:                                      ; preds = %land.end.i.i
  %26 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8573
  %27 = call i1 @llvm.is.constant.i64(i64 %26) #6, !dbg !8574
  br i1 %27, label %if.else.i.i, label %if.then5.i.i, !dbg !8575

if.then5.i.i:                                     ; preds = %if.then.i.i
  %28 = load i32, i32* %sz.i.i, align 4, !dbg !8576
  %29 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8577
  call void @copy_overflow(i32 %28, i64 %29) #11, !dbg !8578
  br label %if.end9.i.i, !dbg !8578

if.else.i.i:                                      ; preds = %if.then.i.i
  %30 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8579
  %tobool6.i.i = trunc i8 %30 to i1, !dbg !8579
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !8580

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !8581
  br label %if.end.i.i, !dbg !8581

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !8582
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8583
  br label %check_copy_size.exit.i, !dbg !8583

if.end10.i.i:                                     ; preds = %land.end.i.i
  %31 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8503
  %cmp11.i.i = icmp ugt i64 %31, 2147483647, !dbg !8503
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !8503
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !8503
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !8503
  %32 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8584
  %tobool17.i.i = icmp ne i32 %32, 0, !dbg !8584
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !8584
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !8584
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !8584
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !8503

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !8585, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !8586, !srcloc !4906
  br label %if.end31.i.i, !dbg !8587

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %33 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8503
  %tobool32.i.i = icmp ne i32 %33, 0, !dbg !8503
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !8503
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !8503
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !8503
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !8584
  %34 = load i64, i64* %tmp.i.i, align 8, !dbg !8503
  %tobool38.i.i = icmp ne i64 %34, 0, !dbg !8588
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !8589

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8590
  br label %check_copy_size.exit.i, !dbg !8590

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %35 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !8591
  %36 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8592
  %37 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8593
  %tobool41.i.i = trunc i8 %37 to i1, !dbg !8593
  call void @check_object_size(i8* %35, i64 %36, i1 zeroext %tobool41.i.i) #11, !dbg !8594
  store i1 true, i1* %retval.i.i, align 1, !dbg !8595
  br label %check_copy_size.exit.i, !dbg !8595

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %38 = load i1, i1* %retval.i.i, align 1, !dbg !8596
  %lnot.i = xor i1 %38, true, !dbg !8569
  %lnot.ext.i = zext i1 %38 to i32, !dbg !8569
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !8569
  br i1 %38, label %if.then.i, label %copy_to_user.exit, !dbg !8597

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %39 = load i8*, i8** %to.addr.i, align 8, !dbg !8598
  %40 = load i8*, i8** %from.addr.i, align 8, !dbg !8599
  %41 = load i64, i64* %n.addr.i, align 8, !dbg !8600
  %call2.i = call i64 @_copy_to_user(i8* %39, i8* %40, i64 %41) #11, !dbg !8601
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !8602
  br label %copy_to_user.exit, !dbg !8603

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %42 = load i64, i64* %n.addr.i, align 8, !dbg !8604
  %tobool13 = icmp ne i64 %42, 0, !dbg !8605
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !8606

if.then14:                                        ; preds = %copy_to_user.exit
  store i64 -14, i64* %retval, align 8, !dbg !8607
  br label %return, !dbg !8607

if.end15:                                         ; preds = %copy_to_user.exit
  store i64 0, i64* %retval, align 8, !dbg !8608
  br label %return, !dbg !8608

if.else:                                          ; preds = %entry
  %43 = load i32, i32* %cmd.addr, align 4, !dbg !8609
  %conv16 = zext i32 %43 to i64, !dbg !8609
  %cmp17 = icmp eq i64 %conv16, 3225465865, !dbg !8610
  br i1 %cmp17, label %if.then19, label %if.else49, !dbg !8611

if.then19:                                        ; preds = %if.else
  %44 = load %struct.linehandle_state*, %struct.linehandle_state** %lh, align 8, !dbg !8612
  %descs20 = getelementptr inbounds %struct.linehandle_state, %struct.linehandle_state* %44, i32 0, i32 2, !dbg !8614
  %arrayidx21 = getelementptr [64 x %struct.gpio_desc*], [64 x %struct.gpio_desc*]* %descs20, i64 0, i64 0, !dbg !8612
  %45 = load %struct.gpio_desc*, %struct.gpio_desc** %arrayidx21, align 8, !dbg !8612
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %45, i32 0, i32 1, !dbg !8615
  %call22 = call zeroext i1 @test_bit(i64 1, i64* %flags) #9, !dbg !8616
  br i1 %call22, label %if.end24, label %if.then23, !dbg !8617

if.then23:                                        ; preds = %if.then19
  store i64 -1, i64* %retval, align 8, !dbg !8618
  br label %return, !dbg !8618

if.end24:                                         ; preds = %if.then19
  %46 = bitcast %struct.gpiohandle_data* %ghd to i8*, !dbg !8619
  %47 = load i8*, i8** %ip, align 8, !dbg !8620
  store i8* %46, i8** %to.addr.i65, align 8
  store i8* %47, i8** %from.addr.i66, align 8
  store i64 64, i64* %n.addr.i67, align 8
  %48 = load i8*, i8** %to.addr.i65, align 8, !dbg !8621
  %49 = load i64, i64* %n.addr.i67, align 8, !dbg !8621
  store i8* %48, i8** %addr.addr.i.i59, align 8
  store i64 %49, i64* %bytes.addr.i.i60, align 8
  store i8 0, i8* %is_source.addr.i.i61, align 1
  store i32 -1, i32* %sz.i.i62, align 4, !dbg !8490
  %50 = load i32, i32* %sz.i.i62, align 4, !dbg !8622
  %cmp.i.i68 = icmp sge i32 %50, 0, !dbg !8622
  br i1 %cmp.i.i68, label %land.rhs.i.i71, label %land.end.i.i75, !dbg !8622

land.rhs.i.i71:                                   ; preds = %if.end24
  %51 = load i32, i32* %sz.i.i62, align 4, !dbg !8622
  %conv.i.i69 = sext i32 %51 to i64, !dbg !8622
  %52 = load i64, i64* %bytes.addr.i.i60, align 8, !dbg !8622
  %cmp1.i.i70 = icmp ult i64 %conv.i.i69, %52, !dbg !8622
  br label %land.end.i.i75

land.end.i.i75:                                   ; preds = %land.rhs.i.i71, %if.end24
  %53 = phi i1 [ false, %if.end24 ], [ %cmp1.i.i70, %land.rhs.i.i71 ], !dbg !8623
  %lnot.i.i72 = xor i1 %53, true, !dbg !8622
  %lnot.ext.i.i73 = zext i1 %53 to i32, !dbg !8622
  %conv4.i.i74 = sext i32 %lnot.ext.i.i73 to i64, !dbg !8622
  br i1 %53, label %if.then.i.i76, label %if.end10.i.i91, !dbg !8624

if.then.i.i76:                                    ; preds = %land.end.i.i75
  %54 = load i64, i64* %bytes.addr.i.i60, align 8, !dbg !8625
  %55 = call i1 @llvm.is.constant.i64(i64 %54) #6, !dbg !8626
  br i1 %55, label %if.else.i.i79, label %if.then5.i.i77, !dbg !8627

if.then5.i.i77:                                   ; preds = %if.then.i.i76
  %56 = load i32, i32* %sz.i.i62, align 4, !dbg !8628
  %57 = load i64, i64* %bytes.addr.i.i60, align 8, !dbg !8629
  call void @copy_overflow(i32 %56, i64 %57) #11, !dbg !8630
  br label %if.end9.i.i83, !dbg !8630

if.else.i.i79:                                    ; preds = %if.then.i.i76
  %58 = load i8, i8* %is_source.addr.i.i61, align 1, !dbg !8631
  %tobool6.i.i78 = trunc i8 %58 to i1, !dbg !8631
  br i1 %tobool6.i.i78, label %if.then7.i.i80, label %if.else8.i.i81, !dbg !8632

if.then7.i.i80:                                   ; preds = %if.else.i.i79
  call void @__bad_copy_from() #11, !dbg !8633
  br label %if.end.i.i82, !dbg !8633

if.else8.i.i81:                                   ; preds = %if.else.i.i79
  call void @__bad_copy_to() #11, !dbg !8634
  br label %if.end.i.i82

if.end.i.i82:                                     ; preds = %if.else8.i.i81, %if.then7.i.i80
  br label %if.end9.i.i83

if.end9.i.i83:                                    ; preds = %if.end.i.i82, %if.then5.i.i77
  store i1 false, i1* %retval.i.i58, align 1, !dbg !8635
  br label %check_copy_size.exit.i105, !dbg !8635

if.end10.i.i91:                                   ; preds = %land.end.i.i75
  %59 = load i64, i64* %bytes.addr.i.i60, align 8, !dbg !8491
  %cmp11.i.i84 = icmp ugt i64 %59, 2147483647, !dbg !8491
  %lnot13.i.i85 = xor i1 %cmp11.i.i84, true, !dbg !8491
  %lnot.ext16.i.i86 = zext i1 %cmp11.i.i84 to i32, !dbg !8491
  store i32 %lnot.ext16.i.i86, i32* %__ret_warn_on.i.i63, align 4, !dbg !8491
  %60 = load i32, i32* %__ret_warn_on.i.i63, align 4, !dbg !8636
  %tobool17.i.i87 = icmp ne i32 %60, 0, !dbg !8636
  %lnot18.i.i88 = xor i1 %tobool17.i.i87, true, !dbg !8636
  %lnot.ext21.i.i89 = zext i1 %tobool17.i.i87 to i32, !dbg !8636
  %conv22.i.i90 = sext i32 %lnot.ext21.i.i89 to i64, !dbg !8636
  br i1 %tobool17.i.i87, label %if.then24.i.i92, label %if.end31.i.i98, !dbg !8491

if.then24.i.i92:                                  ; preds = %if.end10.i.i91
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !8637, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !8638, !srcloc !4906
  br label %if.end31.i.i98, !dbg !8639

if.end31.i.i98:                                   ; preds = %if.then24.i.i92, %if.end10.i.i91
  %61 = load i32, i32* %__ret_warn_on.i.i63, align 4, !dbg !8491
  %tobool32.i.i93 = icmp ne i32 %61, 0, !dbg !8491
  %lnot33.i.i94 = xor i1 %tobool32.i.i93, true, !dbg !8491
  %lnot.ext36.i.i95 = zext i1 %tobool32.i.i93 to i32, !dbg !8491
  %conv37.i.i96 = sext i32 %lnot.ext36.i.i95 to i64, !dbg !8491
  store i64 %conv37.i.i96, i64* %tmp.i.i64, align 8, !dbg !8636
  %62 = load i64, i64* %tmp.i.i64, align 8, !dbg !8491
  %tobool38.i.i97 = icmp ne i64 %62, 0, !dbg !8640
  br i1 %tobool38.i.i97, label %if.then39.i.i99, label %if.end40.i.i101, !dbg !8641

if.then39.i.i99:                                  ; preds = %if.end31.i.i98
  store i1 false, i1* %retval.i.i58, align 1, !dbg !8642
  br label %check_copy_size.exit.i105, !dbg !8642

if.end40.i.i101:                                  ; preds = %if.end31.i.i98
  %63 = load i8*, i8** %addr.addr.i.i59, align 8, !dbg !8643
  %64 = load i64, i64* %bytes.addr.i.i60, align 8, !dbg !8644
  %65 = load i8, i8* %is_source.addr.i.i61, align 1, !dbg !8645
  %tobool41.i.i100 = trunc i8 %65 to i1, !dbg !8645
  call void @check_object_size(i8* %63, i64 %64, i1 zeroext %tobool41.i.i100) #11, !dbg !8646
  store i1 true, i1* %retval.i.i58, align 1, !dbg !8647
  br label %check_copy_size.exit.i105, !dbg !8647

check_copy_size.exit.i105:                        ; preds = %if.end40.i.i101, %if.then39.i.i99, %if.end9.i.i83
  %66 = load i1, i1* %retval.i.i58, align 1, !dbg !8648
  %lnot.i102 = xor i1 %66, true, !dbg !8621
  %lnot.ext.i103 = zext i1 %66 to i32, !dbg !8621
  %conv.i104 = sext i32 %lnot.ext.i103 to i64, !dbg !8621
  br i1 %66, label %if.then.i107, label %copy_from_user.exit, !dbg !8649

if.then.i107:                                     ; preds = %check_copy_size.exit.i105
  %67 = load i8*, i8** %to.addr.i65, align 8, !dbg !8650
  %68 = load i8*, i8** %from.addr.i66, align 8, !dbg !8651
  %69 = load i64, i64* %n.addr.i67, align 8, !dbg !8652
  %call2.i106 = call i64 @_copy_from_user(i8* %67, i8* %68, i64 %69) #11, !dbg !8653
  store i64 %call2.i106, i64* %n.addr.i67, align 8, !dbg !8654
  br label %copy_from_user.exit, !dbg !8655

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i105, %if.then.i107
  %70 = load i64, i64* %n.addr.i67, align 8, !dbg !8656
  %tobool26 = icmp ne i64 %70, 0, !dbg !8657
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !8658

if.then27:                                        ; preds = %copy_from_user.exit
  store i64 -14, i64* %retval, align 8, !dbg !8659
  br label %return, !dbg !8659

if.end28:                                         ; preds = %copy_from_user.exit
  store i32 0, i32* %i, align 4, !dbg !8660
  br label %for.cond29, !dbg !8661

for.cond29:                                       ; preds = %for.inc40, %if.end28
  %71 = load i32, i32* %i, align 4, !dbg !8662
  %72 = load %struct.linehandle_state*, %struct.linehandle_state** %lh, align 8, !dbg !8663
  %num_descs30 = getelementptr inbounds %struct.linehandle_state, %struct.linehandle_state* %72, i32 0, i32 3, !dbg !8664
  %73 = load i32, i32* %num_descs30, align 8, !dbg !8664
  %cmp31 = icmp ult i32 %71, %73, !dbg !8665
  br i1 %cmp31, label %for.body33, label %for.end42, !dbg !8666

for.body33:                                       ; preds = %for.cond29
  %74 = load i32, i32* %i, align 4, !dbg !8667
  %conv34 = sext i32 %74 to i64, !dbg !8667
  %arraydecay35 = getelementptr inbounds [1 x i64], [1 x i64]* %vals, i64 0, i64 0, !dbg !8668
  %values36 = getelementptr inbounds %struct.gpiohandle_data, %struct.gpiohandle_data* %ghd, i32 0, i32 0, !dbg !8669
  %75 = load i32, i32* %i, align 4, !dbg !8670
  %idxprom37 = sext i32 %75 to i64, !dbg !8671
  %arrayidx38 = getelementptr [64 x i8], [64 x i8]* %values36, i64 0, i64 %idxprom37, !dbg !8671
  %76 = load i8, i8* %arrayidx38, align 1, !dbg !8671
  %tobool39 = icmp ne i8 %76, 0, !dbg !8671
  store i64 %conv34, i64* %nr.addr.i, align 8
  store i64* %arraydecay35, i64** %addr.addr.i, align 8
  %frombool.i = zext i1 %tobool39 to i8
  store i8 %frombool.i, i8* %value.addr.i, align 1
  %77 = load i8, i8* %value.addr.i, align 1, !dbg !8672
  %tobool.i = trunc i8 %77 to i1, !dbg !8672
  br i1 %tobool.i, label %if.then.i108, label %if.else.i, !dbg !8674

if.then.i108:                                     ; preds = %for.body33
  %78 = load i64, i64* %nr.addr.i, align 8, !dbg !8675
  %79 = load i64*, i64** %addr.addr.i, align 8, !dbg !8676
  call void @__set_bit(i64 %78, i64* %79) #11, !dbg !8677
  br label %__assign_bit.exit, !dbg !8677

if.else.i:                                        ; preds = %for.body33
  %80 = load i64, i64* %nr.addr.i, align 8, !dbg !8678
  %81 = load i64*, i64** %addr.addr.i, align 8, !dbg !8679
  call void @__clear_bit(i64 %80, i64* %81) #11, !dbg !8680
  br label %__assign_bit.exit

__assign_bit.exit:                                ; preds = %if.then.i108, %if.else.i
  br label %for.inc40, !dbg !8681

for.inc40:                                        ; preds = %__assign_bit.exit
  %82 = load i32, i32* %i, align 4, !dbg !8682
  %inc41 = add i32 %82, 1, !dbg !8682
  store i32 %inc41, i32* %i, align 4, !dbg !8682
  br label %for.cond29, !dbg !8683, !llvm.loop !8684

for.end42:                                        ; preds = %for.cond29
  %83 = load %struct.linehandle_state*, %struct.linehandle_state** %lh, align 8, !dbg !8686
  %num_descs43 = getelementptr inbounds %struct.linehandle_state, %struct.linehandle_state* %83, i32 0, i32 3, !dbg !8687
  %84 = load i32, i32* %num_descs43, align 8, !dbg !8687
  %85 = load %struct.linehandle_state*, %struct.linehandle_state** %lh, align 8, !dbg !8688
  %descs44 = getelementptr inbounds %struct.linehandle_state, %struct.linehandle_state* %85, i32 0, i32 2, !dbg !8689
  %arraydecay45 = getelementptr inbounds [64 x %struct.gpio_desc*], [64 x %struct.gpio_desc*]* %descs44, i64 0, i64 0, !dbg !8688
  %arraydecay46 = getelementptr inbounds [1 x i64], [1 x i64]* %vals, i64 0, i64 0, !dbg !8690
  %call47 = call i32 @gpiod_set_array_value_complex(i1 zeroext false, i1 zeroext true, i32 %84, %struct.gpio_desc** %arraydecay45, %struct.gpio_array* null, i64* %arraydecay46) #9, !dbg !8691
  %conv48 = sext i32 %call47 to i64, !dbg !8691
  store i64 %conv48, i64* %retval, align 8, !dbg !8692
  br label %return, !dbg !8692

if.else49:                                        ; preds = %if.else
  %86 = load i32, i32* %cmd.addr, align 4, !dbg !8693
  %conv50 = zext i32 %86 to i64, !dbg !8693
  %cmp51 = icmp eq i64 %conv50, 3226776586, !dbg !8695
  br i1 %cmp51, label %if.then53, label %if.end55, !dbg !8696

if.then53:                                        ; preds = %if.else49
  %87 = load %struct.linehandle_state*, %struct.linehandle_state** %lh, align 8, !dbg !8697
  %88 = load i8*, i8** %ip, align 8, !dbg !8699
  %call54 = call i64 @linehandle_set_config(%struct.linehandle_state* %87, i8* %88) #9, !dbg !8700
  store i64 %call54, i64* %retval, align 8, !dbg !8701
  br label %return, !dbg !8701

if.end55:                                         ; preds = %if.else49
  br label %if.end56

if.end56:                                         ; preds = %if.end55
  br label %if.end57

if.end57:                                         ; preds = %if.end56
  store i64 -22, i64* %retval, align 8, !dbg !8702
  br label %return, !dbg !8702

return:                                           ; preds = %if.end57, %if.then53, %for.end42, %if.then27, %if.then23, %if.end15, %if.then14, %if.then3
  %89 = load i64, i64* %retval, align 8, !dbg !8703
  ret i64 %89, !dbg !8703
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @linehandle_release(%struct.inode* %inode, %struct.file* %file) #0 !dbg !8704 {
entry:
  %inode.addr = alloca %struct.inode*, align 8
  %file.addr = alloca %struct.file*, align 8
  store %struct.inode* %inode, %struct.inode** %inode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.inode** %inode.addr, metadata !8705, metadata !DIExpression()), !dbg !8706
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !8707, metadata !DIExpression()), !dbg !8708
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !8709
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !8710
  %1 = load i8*, i8** %private_data, align 8, !dbg !8710
  %2 = bitcast i8* %1 to %struct.linehandle_state*, !dbg !8709
  call void @linehandle_free(%struct.linehandle_state* %2) #9, !dbg !8711
  ret i32 0, !dbg !8712
}

; Function Attrs: noredzone
declare dso_local i32 @gpiod_get_array_value_complex(i1 zeroext, i1 zeroext, i32, %struct.gpio_desc**, %struct.gpio_array*, i64*) #2

; Function Attrs: noredzone
declare dso_local i32 @gpiod_set_array_value_complex(i1 zeroext, i1 zeroext, i32, %struct.gpio_desc**, %struct.gpio_array*, i64*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @linehandle_set_config(%struct.linehandle_state* %lh, i8* %ip) #0 !dbg !8713 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !4609, metadata !DIExpression()), !dbg !8716
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !4626, metadata !DIExpression()), !dbg !8720
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !4628, metadata !DIExpression()), !dbg !8721
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !4630, metadata !DIExpression()), !dbg !8722
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !4632, metadata !DIExpression()), !dbg !8723
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !5056, metadata !DIExpression()), !dbg !8724
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !5058, metadata !DIExpression()), !dbg !8725
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !5060, metadata !DIExpression()), !dbg !8726
  %retval = alloca i64, align 8
  %lh.addr = alloca %struct.linehandle_state*, align 8
  %ip.addr = alloca i8*, align 8
  %gcnf = alloca %struct.gpiohandle_config, align 4
  %desc = alloca %struct.gpio_desc*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %lflags = alloca i32, align 4
  %val = alloca i32, align 4
  store %struct.linehandle_state* %lh, %struct.linehandle_state** %lh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.linehandle_state** %lh.addr, metadata !8727, metadata !DIExpression()), !dbg !8728
  store i8* %ip, i8** %ip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ip.addr, metadata !8729, metadata !DIExpression()), !dbg !8730
  call void @llvm.dbg.declare(metadata %struct.gpiohandle_config* %gcnf, metadata !8731, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc, metadata !8738, metadata !DIExpression()), !dbg !8739
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8740, metadata !DIExpression()), !dbg !8741
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8742, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.declare(metadata i32* %lflags, metadata !8744, metadata !DIExpression()), !dbg !8745
  %0 = bitcast %struct.gpiohandle_config* %gcnf to i8*, !dbg !8746
  %1 = load i8*, i8** %ip.addr, align 8, !dbg !8747
  store i8* %0, i8** %to.addr.i, align 8
  store i8* %1, i8** %from.addr.i, align 8
  store i64 84, i64* %n.addr.i, align 8
  %2 = load i8*, i8** %to.addr.i, align 8, !dbg !8748
  %3 = load i64, i64* %n.addr.i, align 8, !dbg !8748
  store i8* %2, i8** %addr.addr.i.i, align 8
  store i64 %3, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !8722
  %4 = load i32, i32* %sz.i.i, align 4, !dbg !8749
  %cmp.i.i = icmp sge i32 %4, 0, !dbg !8749
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !8749

land.rhs.i.i:                                     ; preds = %entry
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !8749
  %conv.i.i = sext i32 %5 to i64, !dbg !8749
  %6 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8749
  %cmp1.i.i = icmp ult i64 %conv.i.i, %6, !dbg !8749
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !8750
  %lnot.i.i = xor i1 %7, true, !dbg !8749
  %lnot.ext.i.i = zext i1 %7 to i32, !dbg !8749
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8749
  br i1 %7, label %if.then.i.i, label %if.end10.i.i, !dbg !8751

if.then.i.i:                                      ; preds = %land.end.i.i
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8752
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #6, !dbg !8753
  br i1 %9, label %if.else.i.i, label %if.then5.i.i, !dbg !8754

if.then5.i.i:                                     ; preds = %if.then.i.i
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !8755
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8756
  call void @copy_overflow(i32 %10, i64 %11) #11, !dbg !8757
  br label %if.end9.i.i, !dbg !8757

if.else.i.i:                                      ; preds = %if.then.i.i
  %12 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8758
  %tobool6.i.i = trunc i8 %12 to i1, !dbg !8758
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !8759

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !8760
  br label %if.end.i.i, !dbg !8760

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !8761
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8762
  br label %check_copy_size.exit.i, !dbg !8762

if.end10.i.i:                                     ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8723
  %cmp11.i.i = icmp ugt i64 %13, 2147483647, !dbg !8723
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !8723
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !8723
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !8723
  %14 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8763
  %tobool17.i.i = icmp ne i32 %14, 0, !dbg !8763
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !8763
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !8763
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !8763
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !8723

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !8764, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !8765, !srcloc !4906
  br label %if.end31.i.i, !dbg !8766

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8723
  %tobool32.i.i = icmp ne i32 %15, 0, !dbg !8723
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !8723
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !8723
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !8723
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !8763
  %16 = load i64, i64* %tmp.i.i, align 8, !dbg !8723
  %tobool38.i.i = icmp ne i64 %16, 0, !dbg !8767
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !8768

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8769
  br label %check_copy_size.exit.i, !dbg !8769

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %17 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !8770
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8771
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8772
  %tobool41.i.i = trunc i8 %19 to i1, !dbg !8772
  call void @check_object_size(i8* %17, i64 %18, i1 zeroext %tobool41.i.i) #11, !dbg !8773
  store i1 true, i1* %retval.i.i, align 1, !dbg !8774
  br label %check_copy_size.exit.i, !dbg !8774

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %20 = load i1, i1* %retval.i.i, align 1, !dbg !8775
  %lnot.i = xor i1 %20, true, !dbg !8748
  %lnot.ext.i = zext i1 %20 to i32, !dbg !8748
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !8748
  br i1 %20, label %if.then.i, label %copy_from_user.exit, !dbg !8776

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %21 = load i8*, i8** %to.addr.i, align 8, !dbg !8777
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !8778
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !8779
  %call2.i = call i64 @_copy_from_user(i8* %21, i8* %22, i64 %23) #11, !dbg !8780
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !8781
  br label %copy_from_user.exit, !dbg !8782

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !8783
  %tobool = icmp ne i64 %24, 0, !dbg !8784
  br i1 %tobool, label %if.then, label %if.end, !dbg !8785

if.then:                                          ; preds = %copy_from_user.exit
  store i64 -14, i64* %retval, align 8, !dbg !8786
  br label %return, !dbg !8786

if.end:                                           ; preds = %copy_from_user.exit
  %flags = getelementptr inbounds %struct.gpiohandle_config, %struct.gpiohandle_config* %gcnf, i32 0, i32 0, !dbg !8787
  %25 = load i32, i32* %flags, align 4, !dbg !8787
  store i32 %25, i32* %lflags, align 4, !dbg !8788
  %26 = load i32, i32* %lflags, align 4, !dbg !8789
  %call1 = call i32 @linehandle_validate_flags(i32 %26) #9, !dbg !8790
  store i32 %call1, i32* %ret, align 4, !dbg !8791
  %27 = load i32, i32* %ret, align 4, !dbg !8792
  %tobool2 = icmp ne i32 %27, 0, !dbg !8792
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !8794

if.then3:                                         ; preds = %if.end
  %28 = load i32, i32* %ret, align 4, !dbg !8795
  %conv = sext i32 %28 to i64, !dbg !8795
  store i64 %conv, i64* %retval, align 8, !dbg !8796
  br label %return, !dbg !8796

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !8797
  br label %for.cond, !dbg !8799

for.cond:                                         ; preds = %for.inc, %if.end4
  %29 = load i32, i32* %i, align 4, !dbg !8800
  %30 = load %struct.linehandle_state*, %struct.linehandle_state** %lh.addr, align 8, !dbg !8802
  %num_descs = getelementptr inbounds %struct.linehandle_state, %struct.linehandle_state* %30, i32 0, i32 3, !dbg !8803
  %31 = load i32, i32* %num_descs, align 8, !dbg !8803
  %cmp = icmp ult i32 %29, %31, !dbg !8804
  br i1 %cmp, label %for.body, label %for.end, !dbg !8805

for.body:                                         ; preds = %for.cond
  %32 = load %struct.linehandle_state*, %struct.linehandle_state** %lh.addr, align 8, !dbg !8806
  %descs = getelementptr inbounds %struct.linehandle_state, %struct.linehandle_state* %32, i32 0, i32 2, !dbg !8808
  %33 = load i32, i32* %i, align 4, !dbg !8809
  %idxprom = sext i32 %33 to i64, !dbg !8806
  %arrayidx = getelementptr [64 x %struct.gpio_desc*], [64 x %struct.gpio_desc*]* %descs, i64 0, i64 %idxprom, !dbg !8806
  %34 = load %struct.gpio_desc*, %struct.gpio_desc** %arrayidx, align 8, !dbg !8806
  store %struct.gpio_desc* %34, %struct.gpio_desc** %desc, align 8, !dbg !8810
  %flags6 = getelementptr inbounds %struct.gpiohandle_config, %struct.gpiohandle_config* %gcnf, i32 0, i32 0, !dbg !8811
  %35 = load i32, i32* %flags6, align 4, !dbg !8811
  %36 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !8812
  %flags7 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %36, i32 0, i32 1, !dbg !8813
  call void @linehandle_flags_to_desc_flags(i32 %35, i64* %flags7) #9, !dbg !8814
  %37 = load i32, i32* %lflags, align 4, !dbg !8815
  %conv8 = zext i32 %37 to i64, !dbg !8815
  %and = and i64 %conv8, 2, !dbg !8817
  %tobool9 = icmp ne i64 %and, 0, !dbg !8817
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !8818

if.then10:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %val, metadata !8819, metadata !DIExpression()), !dbg !8821
  %default_values = getelementptr inbounds %struct.gpiohandle_config, %struct.gpiohandle_config* %gcnf, i32 0, i32 1, !dbg !8822
  %38 = load i32, i32* %i, align 4, !dbg !8823
  %idxprom11 = sext i32 %38 to i64, !dbg !8824
  %arrayidx12 = getelementptr [64 x i8], [64 x i8]* %default_values, i64 0, i64 %idxprom11, !dbg !8824
  %39 = load i8, i8* %arrayidx12, align 1, !dbg !8824
  %tobool13 = icmp ne i8 %39, 0, !dbg !8825
  %lnot = xor i1 %tobool13, true, !dbg !8825
  %lnot14 = xor i1 %lnot, true, !dbg !8826
  %lnot.ext = zext i1 %lnot14 to i32, !dbg !8826
  store i32 %lnot.ext, i32* %val, align 4, !dbg !8821
  %40 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !8827
  %41 = load i32, i32* %val, align 4, !dbg !8828
  %call15 = call i32 @gpiod_direction_output(%struct.gpio_desc* %40, i32 %41) #9, !dbg !8829
  store i32 %call15, i32* %ret, align 4, !dbg !8830
  %42 = load i32, i32* %ret, align 4, !dbg !8831
  %tobool16 = icmp ne i32 %42, 0, !dbg !8831
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !8833

if.then17:                                        ; preds = %if.then10
  %43 = load i32, i32* %ret, align 4, !dbg !8834
  %conv18 = sext i32 %43 to i64, !dbg !8834
  store i64 %conv18, i64* %retval, align 8, !dbg !8835
  br label %return, !dbg !8835

if.end19:                                         ; preds = %if.then10
  br label %if.end30, !dbg !8836

if.else:                                          ; preds = %for.body
  %44 = load i32, i32* %lflags, align 4, !dbg !8837
  %conv20 = zext i32 %44 to i64, !dbg !8837
  %and21 = and i64 %conv20, 1, !dbg !8839
  %tobool22 = icmp ne i64 %and21, 0, !dbg !8839
  br i1 %tobool22, label %if.then23, label %if.end29, !dbg !8840

if.then23:                                        ; preds = %if.else
  %45 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !8841
  %call24 = call i32 @gpiod_direction_input(%struct.gpio_desc* %45) #9, !dbg !8843
  store i32 %call24, i32* %ret, align 4, !dbg !8844
  %46 = load i32, i32* %ret, align 4, !dbg !8845
  %tobool25 = icmp ne i32 %46, 0, !dbg !8845
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !8847

if.then26:                                        ; preds = %if.then23
  %47 = load i32, i32* %ret, align 4, !dbg !8848
  %conv27 = sext i32 %47 to i64, !dbg !8848
  store i64 %conv27, i64* %retval, align 8, !dbg !8849
  br label %return, !dbg !8849

if.end28:                                         ; preds = %if.then23
  br label %if.end29, !dbg !8850

if.end29:                                         ; preds = %if.end28, %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.end19
  %48 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !8851
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %48, i32 0, i32 0, !dbg !8852
  %49 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !8852
  %notifier = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %49, i32 0, i32 12, !dbg !8853
  %50 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !8854
  %51 = bitcast %struct.gpio_desc* %50 to i8*, !dbg !8854
  %call31 = call i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head* %notifier, i64 3, i8* %51) #9, !dbg !8855
  br label %for.inc, !dbg !8856

for.inc:                                          ; preds = %if.end30
  %52 = load i32, i32* %i, align 4, !dbg !8857
  %inc = add i32 %52, 1, !dbg !8857
  store i32 %inc, i32* %i, align 4, !dbg !8857
  br label %for.cond, !dbg !8858, !llvm.loop !8859

for.end:                                          ; preds = %for.cond
  store i64 0, i64* %retval, align 8, !dbg !8861
  br label %return, !dbg !8861

return:                                           ; preds = %for.end, %if.then26, %if.then17, %if.then3, %if.then
  %53 = load i64, i64* %retval, align 8, !dbg !8862
  ret i64 %53, !dbg !8862
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__set_bit(i64 %nr, i64* %addr) #0 !dbg !8863 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !8864, metadata !DIExpression()), !dbg !8866
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !8868, metadata !DIExpression()), !dbg !8869
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !8870, metadata !DIExpression()), !dbg !8872
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8874, metadata !DIExpression()), !dbg !8875
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !8876, metadata !DIExpression()), !dbg !8877
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !8878, metadata !DIExpression()), !dbg !8879
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !8880
  %1 = load i64, i64* %nr.addr, align 8, !dbg !8881
  %div = sdiv i64 %1, 64, !dbg !8881
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !8882
  %2 = bitcast i64* %add.ptr to i8*, !dbg !8880
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !8883
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8884
  %conv.i = trunc i64 %4 to i32, !dbg !8884
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #11, !dbg !8885
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !8886
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !8886
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #11, !dbg !8886
  %7 = load i64, i64* %nr.addr, align 8, !dbg !8887
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !8888
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !8889
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !8890
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #6, !dbg !8891, !srcloc !8892
  ret void, !dbg !8893
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__clear_bit(i64 %nr, i64* %addr) #0 !dbg !8894 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !8895, metadata !DIExpression()), !dbg !8897
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !8899, metadata !DIExpression()), !dbg !8900
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !8870, metadata !DIExpression()), !dbg !8901
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8874, metadata !DIExpression()), !dbg !8903
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !8904, metadata !DIExpression()), !dbg !8905
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !8906, metadata !DIExpression()), !dbg !8907
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !8908
  %1 = load i64, i64* %nr.addr, align 8, !dbg !8909
  %div = sdiv i64 %1, 64, !dbg !8909
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !8910
  %2 = bitcast i64* %add.ptr to i8*, !dbg !8908
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !8911
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8912
  %conv.i = trunc i64 %4 to i32, !dbg !8912
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #11, !dbg !8913
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !8914
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !8914
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #11, !dbg !8914
  %7 = load i64, i64* %nr.addr, align 8, !dbg !8915
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !8916
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !8917
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !8918
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #6, !dbg !8919, !srcloc !8920
  ret void, !dbg !8921
}

; Function Attrs: noredzone
declare dso_local void @gpiod_free(%struct.gpio_desc*) #2

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noredzone
declare dso_local void @put_device(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local i32 @gpiod_to_irq(%struct.gpio_desc*) #2

; Function Attrs: noredzone
declare dso_local void @__init_waitqueue_head(%struct.wait_queue_head*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @lineevent_irq_handler(i32 %irq, i8* %p) #0 !dbg !8922 {
entry:
  %irq.addr = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %le = alloca %struct.lineevent_state*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !8923, metadata !DIExpression()), !dbg !8924
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8925, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.declare(metadata %struct.lineevent_state** %le, metadata !8927, metadata !DIExpression()), !dbg !8928
  %0 = load i8*, i8** %p.addr, align 8, !dbg !8929
  %1 = bitcast i8* %0 to %struct.lineevent_state*, !dbg !8929
  store %struct.lineevent_state* %1, %struct.lineevent_state** %le, align 8, !dbg !8928
  %call = call i64 @ktime_get_ns() #9, !dbg !8930
  %2 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !8931
  %timestamp = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %2, i32 0, i32 7, !dbg !8932
  store i64 %call, i64* %timestamp, align 8, !dbg !8933
  ret i32 2, !dbg !8934
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @lineevent_irq_thread(i32 %irq, i8* %p) #0 !dbg !8935 {
entry:
  %lock.addr.i45 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i45, metadata !4654, metadata !DIExpression()), !dbg !8936
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4725, metadata !DIExpression()), !dbg !8939
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %le = alloca %struct.lineevent_state*, align 8
  %ge = alloca %struct.gpioevent_data, align 8
  %ret = alloca i32, align 4
  %level = alloca i32, align 4
  %__ret = alloca i32, align 4
  %__tmp = alloca %struct.anon.71*, align 8
  %__buf = alloca %struct.gpioevent_data*, align 8
  %__n = alloca i64, align 8
  %__recsize = alloca i64, align 8
  %__kfifo = alloca %struct.__kfifo*, align 8
  %tmp = alloca i32, align 4
  %tmp38 = alloca i32, align 4
  %tmp43 = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !8941, metadata !DIExpression()), !dbg !8942
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8943, metadata !DIExpression()), !dbg !8944
  call void @llvm.dbg.declare(metadata %struct.lineevent_state** %le, metadata !8945, metadata !DIExpression()), !dbg !8946
  %0 = load i8*, i8** %p.addr, align 8, !dbg !8947
  %1 = bitcast i8* %0 to %struct.lineevent_state*, !dbg !8947
  store %struct.lineevent_state* %1, %struct.lineevent_state** %le, align 8, !dbg !8946
  call void @llvm.dbg.declare(metadata %struct.gpioevent_data* %ge, metadata !8948, metadata !DIExpression()), !dbg !8949
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8950, metadata !DIExpression()), !dbg !8951
  %2 = bitcast %struct.gpioevent_data* %ge to i8*, !dbg !8952
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false), !dbg !8952
  %3 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !8953
  %timestamp = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %3, i32 0, i32 7, !dbg !8955
  %4 = load i64, i64* %timestamp, align 8, !dbg !8955
  %tobool = icmp ne i64 %4, 0, !dbg !8953
  br i1 %tobool, label %if.else, label %if.then, !dbg !8956

if.then:                                          ; preds = %entry
  %call = call i64 @ktime_get_ns() #9, !dbg !8957
  %timestamp1 = getelementptr inbounds %struct.gpioevent_data, %struct.gpioevent_data* %ge, i32 0, i32 0, !dbg !8958
  store i64 %call, i64* %timestamp1, align 8, !dbg !8959
  br label %if.end, !dbg !8960

if.else:                                          ; preds = %entry
  %5 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !8961
  %timestamp2 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %5, i32 0, i32 7, !dbg !8962
  %6 = load i64, i64* %timestamp2, align 8, !dbg !8962
  %timestamp3 = getelementptr inbounds %struct.gpioevent_data, %struct.gpioevent_data* %ge, i32 0, i32 0, !dbg !8963
  store i64 %6, i64* %timestamp3, align 8, !dbg !8964
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !8965
  %eflags = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %7, i32 0, i32 3, !dbg !8967
  %8 = load i32, i32* %eflags, align 8, !dbg !8967
  %conv = zext i32 %8 to i64, !dbg !8965
  %and = and i64 %conv, 1, !dbg !8968
  %tobool4 = icmp ne i64 %and, 0, !dbg !8968
  br i1 %tobool4, label %land.lhs.true, label %if.else16, !dbg !8969

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !8970
  %eflags5 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %9, i32 0, i32 3, !dbg !8971
  %10 = load i32, i32* %eflags5, align 8, !dbg !8971
  %conv6 = zext i32 %10 to i64, !dbg !8970
  %and7 = and i64 %conv6, 2, !dbg !8972
  %tobool8 = icmp ne i64 %and7, 0, !dbg !8972
  br i1 %tobool8, label %if.then9, label %if.else16, !dbg !8973

if.then9:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %level, metadata !8974, metadata !DIExpression()), !dbg !8976
  %11 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !8977
  %desc = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %11, i32 0, i32 2, !dbg !8978
  %12 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !8978
  %call10 = call i32 @gpiod_get_value_cansleep(%struct.gpio_desc* %12) #9, !dbg !8979
  store i32 %call10, i32* %level, align 4, !dbg !8976
  %13 = load i32, i32* %level, align 4, !dbg !8980
  %tobool11 = icmp ne i32 %13, 0, !dbg !8980
  br i1 %tobool11, label %if.then12, label %if.else13, !dbg !8982

if.then12:                                        ; preds = %if.then9
  %id = getelementptr inbounds %struct.gpioevent_data, %struct.gpioevent_data* %ge, i32 0, i32 1, !dbg !8983
  store i32 1, i32* %id, align 8, !dbg !8984
  br label %if.end15, !dbg !8985

if.else13:                                        ; preds = %if.then9
  %id14 = getelementptr inbounds %struct.gpioevent_data, %struct.gpioevent_data* %ge, i32 0, i32 1, !dbg !8986
  store i32 2, i32* %id14, align 8, !dbg !8987
  br label %if.end15

if.end15:                                         ; preds = %if.else13, %if.then12
  br label %if.end33, !dbg !8988

if.else16:                                        ; preds = %land.lhs.true, %if.end
  %14 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !8989
  %eflags17 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %14, i32 0, i32 3, !dbg !8991
  %15 = load i32, i32* %eflags17, align 8, !dbg !8991
  %conv18 = zext i32 %15 to i64, !dbg !8989
  %and19 = and i64 %conv18, 1, !dbg !8992
  %tobool20 = icmp ne i64 %and19, 0, !dbg !8992
  br i1 %tobool20, label %if.then21, label %if.else23, !dbg !8993

if.then21:                                        ; preds = %if.else16
  %id22 = getelementptr inbounds %struct.gpioevent_data, %struct.gpioevent_data* %ge, i32 0, i32 1, !dbg !8994
  store i32 1, i32* %id22, align 8, !dbg !8996
  br label %if.end32, !dbg !8997

if.else23:                                        ; preds = %if.else16
  %16 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !8998
  %eflags24 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %16, i32 0, i32 3, !dbg !9000
  %17 = load i32, i32* %eflags24, align 8, !dbg !9000
  %conv25 = zext i32 %17 to i64, !dbg !8998
  %and26 = and i64 %conv25, 2, !dbg !9001
  %tobool27 = icmp ne i64 %and26, 0, !dbg !9001
  br i1 %tobool27, label %if.then28, label %if.else30, !dbg !9002

if.then28:                                        ; preds = %if.else23
  %id29 = getelementptr inbounds %struct.gpioevent_data, %struct.gpioevent_data* %ge, i32 0, i32 1, !dbg !9003
  store i32 2, i32* %id29, align 8, !dbg !9005
  br label %if.end31, !dbg !9006

if.else30:                                        ; preds = %if.else23
  store i32 0, i32* %retval, align 4, !dbg !9007
  br label %return, !dbg !9007

if.end31:                                         ; preds = %if.then28
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then21
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end15
  call void @llvm.dbg.declare(metadata i32* %__ret, metadata !9009, metadata !DIExpression()), !dbg !9010
  %18 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !9010
  %wait = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %18, i32 0, i32 5, !dbg !9010
  %lock = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait, i32 0, i32 0, !dbg !9010
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9011, !srcloc !4755
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9012
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !9012
  %rlock.i = bitcast %union.anon.1* %20 to %struct.raw_spinlock*, !dbg !9012
  call void @llvm.dbg.declare(metadata %struct.anon.71** %__tmp, metadata !9013, metadata !DIExpression()), !dbg !9015
  %21 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !9015
  %events = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %21, i32 0, i32 6, !dbg !9015
  store %struct.anon.71* %events, %struct.anon.71** %__tmp, align 8, !dbg !9015
  call void @llvm.dbg.declare(metadata %struct.gpioevent_data** %__buf, metadata !9016, metadata !DIExpression()), !dbg !9015
  store %struct.gpioevent_data* %ge, %struct.gpioevent_data** %__buf, align 8, !dbg !9015
  call void @llvm.dbg.declare(metadata i64* %__n, metadata !9017, metadata !DIExpression()), !dbg !9015
  store i64 1, i64* %__n, align 8, !dbg !9015
  call void @llvm.dbg.declare(metadata i64* %__recsize, metadata !9018, metadata !DIExpression()), !dbg !9015
  store i64 0, i64* %__recsize, align 8, !dbg !9015
  call void @llvm.dbg.declare(metadata %struct.__kfifo** %__kfifo, metadata !9019, metadata !DIExpression()), !dbg !9015
  %22 = load %struct.anon.71*, %struct.anon.71** %__tmp, align 8, !dbg !9015
  %23 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %22, i32 0, i32 0, !dbg !9015
  %kfifo = bitcast %union.anon.72* %23 to %struct.__kfifo*, !dbg !9015
  store %struct.__kfifo* %kfifo, %struct.__kfifo** %__kfifo, align 8, !dbg !9015
  %24 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo, align 8, !dbg !9015
  %25 = load %struct.gpioevent_data*, %struct.gpioevent_data** %__buf, align 8, !dbg !9015
  %26 = bitcast %struct.gpioevent_data* %25 to i8*, !dbg !9015
  %27 = load i64, i64* %__n, align 8, !dbg !9015
  %conv34 = trunc i64 %27 to i32, !dbg !9015
  %call35 = call i32 @__kfifo_in(%struct.__kfifo* %24, i8* %26, i32 %conv34) #9, !dbg !9015
  store i32 %call35, i32* %tmp, align 4, !dbg !9015
  %28 = load i32, i32* %tmp, align 4, !dbg !9015
  store i32 %28, i32* %__ret, align 4, !dbg !9010
  %29 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !9010
  %wait36 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %29, i32 0, i32 5, !dbg !9010
  %lock37 = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait36, i32 0, i32 0, !dbg !9010
  store %struct.spinlock* %lock37, %struct.spinlock** %lock.addr.i45, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9020, !srcloc !4771
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i45, align 8, !dbg !9021
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !9021
  %rlock.i46 = bitcast %union.anon.1* %31 to %struct.raw_spinlock*, !dbg !9021
  %32 = load i32, i32* %__ret, align 4, !dbg !9010
  store i32 %32, i32* %tmp38, align 4, !dbg !9010
  %33 = load i32, i32* %tmp38, align 4, !dbg !9010
  store i32 %33, i32* %ret, align 4, !dbg !9022
  %34 = load i32, i32* %ret, align 4, !dbg !9023
  %tobool39 = icmp ne i32 %34, 0, !dbg !9023
  br i1 %tobool39, label %if.then40, label %if.else42, !dbg !9025

if.then40:                                        ; preds = %if.end33
  %35 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !9026
  %wait41 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %35, i32 0, i32 5, !dbg !9026
  call void @__wake_up(%struct.wait_queue_head* %wait41, i32 3, i32 1, i8* inttoptr (i64 1 to i8*)) #9, !dbg !9026
  br label %if.end44, !dbg !9026

if.else42:                                        ; preds = %if.end33
  store i32 0, i32* %tmp43, align 4, !dbg !9027
  %36 = load i32, i32* %tmp43, align 4, !dbg !9030
  br label %if.end44

if.end44:                                         ; preds = %if.else42, %if.then40
  store i32 1, i32* %retval, align 4, !dbg !9031
  br label %return, !dbg !9031

return:                                           ; preds = %if.end44, %if.else30
  %37 = load i32, i32* %retval, align 4, !dbg !9032
  ret i32 %37, !dbg !9032
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @lineevent_free(%struct.lineevent_state* %le) #0 !dbg !9033 {
entry:
  %le.addr = alloca %struct.lineevent_state*, align 8
  store %struct.lineevent_state* %le, %struct.lineevent_state** %le.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lineevent_state** %le.addr, metadata !9036, metadata !DIExpression()), !dbg !9037
  %0 = load %struct.lineevent_state*, %struct.lineevent_state** %le.addr, align 8, !dbg !9038
  %irq = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %0, i32 0, i32 4, !dbg !9040
  %1 = load i32, i32* %irq, align 4, !dbg !9040
  %tobool = icmp ne i32 %1, 0, !dbg !9038
  br i1 %tobool, label %if.then, label %if.end, !dbg !9041

if.then:                                          ; preds = %entry
  %2 = load %struct.lineevent_state*, %struct.lineevent_state** %le.addr, align 8, !dbg !9042
  %irq1 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %2, i32 0, i32 4, !dbg !9043
  %3 = load i32, i32* %irq1, align 4, !dbg !9043
  %4 = load %struct.lineevent_state*, %struct.lineevent_state** %le.addr, align 8, !dbg !9044
  %5 = bitcast %struct.lineevent_state* %4 to i8*, !dbg !9044
  %call = call i8* @free_irq(i32 %3, i8* %5) #9, !dbg !9045
  br label %if.end, !dbg !9045

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.lineevent_state*, %struct.lineevent_state** %le.addr, align 8, !dbg !9046
  %desc = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %6, i32 0, i32 2, !dbg !9048
  %7 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !9048
  %tobool2 = icmp ne %struct.gpio_desc* %7, null, !dbg !9046
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !9049

if.then3:                                         ; preds = %if.end
  %8 = load %struct.lineevent_state*, %struct.lineevent_state** %le.addr, align 8, !dbg !9050
  %desc4 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %8, i32 0, i32 2, !dbg !9051
  %9 = load %struct.gpio_desc*, %struct.gpio_desc** %desc4, align 8, !dbg !9051
  call void @gpiod_free(%struct.gpio_desc* %9) #9, !dbg !9052
  br label %if.end5, !dbg !9052

if.end5:                                          ; preds = %if.then3, %if.end
  %10 = load %struct.lineevent_state*, %struct.lineevent_state** %le.addr, align 8, !dbg !9053
  %label = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %10, i32 0, i32 1, !dbg !9054
  %11 = load i8*, i8** %label, align 8, !dbg !9054
  call void @kfree(i8* %11) #9, !dbg !9055
  %12 = load %struct.lineevent_state*, %struct.lineevent_state** %le.addr, align 8, !dbg !9056
  %gdev = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %12, i32 0, i32 0, !dbg !9057
  %13 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !9057
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %13, i32 0, i32 1, !dbg !9058
  call void @put_device(%struct.device* %dev) #9, !dbg !9059
  %14 = load %struct.lineevent_state*, %struct.lineevent_state** %le.addr, align 8, !dbg !9060
  %15 = bitcast %struct.lineevent_state* %14 to i8*, !dbg !9060
  call void @kfree(i8* %15) #9, !dbg !9061
  ret void, !dbg !9062
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ktime_get_ns() #0 !dbg !9063 {
entry:
  %call = call i64 @ktime_get() #9, !dbg !9067
  %call1 = call i64 @ktime_to_ns(i64 %call) #9, !dbg !9068
  ret i64 %call1, !dbg !9069
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ktime_to_ns(i64 %kt) #0 !dbg !9070 {
entry:
  %kt.addr = alloca i64, align 8
  store i64 %kt, i64* %kt.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %kt.addr, metadata !9074, metadata !DIExpression()), !dbg !9075
  %0 = load i64, i64* %kt.addr, align 8, !dbg !9076
  ret i64 %0, !dbg !9077
}

; Function Attrs: noredzone
declare dso_local i64 @ktime_get() #2

; Function Attrs: noredzone
declare dso_local i32 @gpiod_get_value_cansleep(%struct.gpio_desc*) #2

; Function Attrs: noredzone
declare dso_local i32 @__kfifo_in(%struct.__kfifo*, i8*, i32) #2

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @lineevent_read(%struct.file* %file, i8* %buf, i64 %count, i64* %f_ps) #0 !dbg !9078 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !4609, metadata !DIExpression()), !dbg !9079
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !4626, metadata !DIExpression()), !dbg !9084
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !4628, metadata !DIExpression()), !dbg !9085
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !4630, metadata !DIExpression()), !dbg !9086
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !4632, metadata !DIExpression()), !dbg !9087
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !4636, metadata !DIExpression()), !dbg !9088
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !4638, metadata !DIExpression()), !dbg !9089
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !4640, metadata !DIExpression()), !dbg !9090
  %lock.addr.i87 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i87, metadata !4654, metadata !DIExpression()), !dbg !9091
  %lock.addr.i85 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i85, metadata !4654, metadata !DIExpression()), !dbg !9093
  %pscr_ret__.i80 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i80, metadata !4698, metadata !DIExpression()), !dbg !9099
  %__vpp_verify.i81 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i81, metadata !4707, metadata !DIExpression()), !dbg !9102
  %pfo_val__.i82 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i82, metadata !4710, metadata !DIExpression()), !dbg !9103
  %tmp.i83 = alloca %struct.task_struct*, align 8
  %tmp1.i84 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !4698, metadata !DIExpression()), !dbg !9104
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !4707, metadata !DIExpression()), !dbg !9106
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !4710, metadata !DIExpression()), !dbg !9107
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %lock.addr.i78 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i78, metadata !4654, metadata !DIExpression()), !dbg !9108
  %lock.addr.i76 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i76, metadata !4654, metadata !DIExpression()), !dbg !9112
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4725, metadata !DIExpression()), !dbg !9116
  %retval = alloca i64, align 8
  %file.addr = alloca %struct.file*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %f_ps.addr = alloca i64*, align 8
  %le = alloca %struct.lineevent_state*, align 8
  %ge = alloca %struct.gpioevent_data, align 8
  %bytes_read = alloca i64, align 8
  %ge_size = alloca i64, align 8
  %ret = alloca i32, align 4
  %__tmpq = alloca %struct.anon.71*, align 8
  %tmp = alloca i32, align 4
  %__tmpq14 = alloca %struct.anon.71*, align 8
  %tmp16 = alloca i32, align 4
  %__ret = alloca i32, align 4
  %__wait = alloca %struct.wait_queue_entry, align 8
  %__tmpq34 = alloca %struct.anon.71*, align 8
  %tmp36 = alloca i32, align 4
  %tmp47 = alloca i32, align 4
  %__tmp = alloca %struct.anon.71*, align 8
  %__buf = alloca %struct.gpioevent_data*, align 8
  %__n = alloca i64, align 8
  %__recsize = alloca i64, align 8
  %__kfifo = alloca %struct.__kfifo*, align 8
  %tmp57 = alloca i32, align 4
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !9118, metadata !DIExpression()), !dbg !9119
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9120, metadata !DIExpression()), !dbg !9121
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !9122, metadata !DIExpression()), !dbg !9123
  store i64* %f_ps, i64** %f_ps.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %f_ps.addr, metadata !9124, metadata !DIExpression()), !dbg !9125
  call void @llvm.dbg.declare(metadata %struct.lineevent_state** %le, metadata !9126, metadata !DIExpression()), !dbg !9127
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !9128
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !9129
  %1 = load i8*, i8** %private_data, align 8, !dbg !9129
  %2 = bitcast i8* %1 to %struct.lineevent_state*, !dbg !9128
  store %struct.lineevent_state* %2, %struct.lineevent_state** %le, align 8, !dbg !9127
  call void @llvm.dbg.declare(metadata %struct.gpioevent_data* %ge, metadata !9130, metadata !DIExpression()), !dbg !9131
  call void @llvm.dbg.declare(metadata i64* %bytes_read, metadata !9132, metadata !DIExpression()), !dbg !9133
  store i64 0, i64* %bytes_read, align 8, !dbg !9133
  call void @llvm.dbg.declare(metadata i64* %ge_size, metadata !9134, metadata !DIExpression()), !dbg !9135
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9136, metadata !DIExpression()), !dbg !9137
  %call = call i64 @lineevent_get_size() #9, !dbg !9138
  store i64 %call, i64* %ge_size, align 8, !dbg !9139
  %3 = load i64, i64* %count.addr, align 8, !dbg !9140
  %4 = load i64, i64* %ge_size, align 8, !dbg !9142
  %cmp = icmp ult i64 %3, %4, !dbg !9143
  br i1 %cmp, label %if.then, label %if.end, !dbg !9144

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !9145
  br label %return, !dbg !9145

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !9146

do.body:                                          ; preds = %do.cond71, %if.end
  %5 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !9147
  %wait = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %5, i32 0, i32 5, !dbg !9148
  %lock = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait, i32 0, i32 0, !dbg !9149
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9150, !srcloc !4755
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9151
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !9151
  %rlock.i = bitcast %union.anon.1* %7 to %struct.raw_spinlock*, !dbg !9151
  call void @llvm.dbg.declare(metadata %struct.anon.71** %__tmpq, metadata !9152, metadata !DIExpression()), !dbg !9154
  %8 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !9154
  %events = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %8, i32 0, i32 6, !dbg !9154
  store %struct.anon.71* %events, %struct.anon.71** %__tmpq, align 8, !dbg !9154
  %9 = load %struct.anon.71*, %struct.anon.71** %__tmpq, align 8, !dbg !9154
  %10 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %9, i32 0, i32 0, !dbg !9154
  %kfifo = bitcast %union.anon.72* %10 to %struct.__kfifo*, !dbg !9154
  %in = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo, i32 0, i32 0, !dbg !9154
  %11 = load i32, i32* %in, align 8, !dbg !9154
  %12 = load %struct.anon.71*, %struct.anon.71** %__tmpq, align 8, !dbg !9154
  %13 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %12, i32 0, i32 0, !dbg !9154
  %kfifo1 = bitcast %union.anon.72* %13 to %struct.__kfifo*, !dbg !9154
  %out = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo1, i32 0, i32 1, !dbg !9154
  %14 = load i32, i32* %out, align 4, !dbg !9154
  %cmp2 = icmp eq i32 %11, %14, !dbg !9154
  %conv = zext i1 %cmp2 to i32, !dbg !9154
  store i32 %conv, i32* %tmp, align 4, !dbg !9154
  %15 = load i32, i32* %tmp, align 4, !dbg !9154
  %tobool = icmp ne i32 %15, 0, !dbg !9155
  br i1 %tobool, label %if.then3, label %if.end54, !dbg !9156

if.then3:                                         ; preds = %do.body
  %16 = load i64, i64* %bytes_read, align 8, !dbg !9157
  %tobool4 = icmp ne i64 %16, 0, !dbg !9157
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !9158

if.then5:                                         ; preds = %if.then3
  %17 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !9159
  %wait6 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %17, i32 0, i32 5, !dbg !9160
  %lock7 = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait6, i32 0, i32 0, !dbg !9161
  store %struct.spinlock* %lock7, %struct.spinlock** %lock.addr.i76, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9162, !srcloc !4771
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i76, align 8, !dbg !9163
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !9163
  %rlock.i77 = bitcast %union.anon.1* %19 to %struct.raw_spinlock*, !dbg !9163
  %20 = load i64, i64* %bytes_read, align 8, !dbg !9164
  store i64 %20, i64* %retval, align 8, !dbg !9165
  br label %return, !dbg !9165

if.end8:                                          ; preds = %if.then3
  %21 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !9166
  %f_flags = getelementptr inbounds %struct.file, %struct.file* %21, i32 0, i32 7, !dbg !9167
  %22 = load i32, i32* %f_flags, align 8, !dbg !9167
  %and = and i32 %22, 2048, !dbg !9168
  %tobool9 = icmp ne i32 %and, 0, !dbg !9168
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !9169

if.then10:                                        ; preds = %if.end8
  %23 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !9170
  %wait11 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %23, i32 0, i32 5, !dbg !9171
  %lock12 = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait11, i32 0, i32 0, !dbg !9172
  store %struct.spinlock* %lock12, %struct.spinlock** %lock.addr.i78, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9173, !srcloc !4771
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i78, align 8, !dbg !9174
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !9174
  %rlock.i79 = bitcast %union.anon.1* %25 to %struct.raw_spinlock*, !dbg !9174
  store i64 -11, i64* %retval, align 8, !dbg !9175
  br label %return, !dbg !9175

if.end13:                                         ; preds = %if.end8
  call void @llvm.dbg.declare(metadata %struct.anon.71** %__tmpq14, metadata !9176, metadata !DIExpression()), !dbg !9178
  %26 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !9178
  %events15 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %26, i32 0, i32 6, !dbg !9178
  store %struct.anon.71* %events15, %struct.anon.71** %__tmpq14, align 8, !dbg !9178
  %27 = load %struct.anon.71*, %struct.anon.71** %__tmpq14, align 8, !dbg !9178
  %28 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %27, i32 0, i32 0, !dbg !9178
  %kfifo17 = bitcast %union.anon.72* %28 to %struct.__kfifo*, !dbg !9178
  %in18 = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo17, i32 0, i32 0, !dbg !9178
  %29 = load i32, i32* %in18, align 8, !dbg !9178
  %30 = load %struct.anon.71*, %struct.anon.71** %__tmpq14, align 8, !dbg !9178
  %31 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %30, i32 0, i32 0, !dbg !9178
  %kfifo19 = bitcast %union.anon.72* %31 to %struct.__kfifo*, !dbg !9178
  %out20 = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo19, i32 0, i32 1, !dbg !9178
  %32 = load i32, i32* %out20, align 4, !dbg !9178
  %cmp21 = icmp eq i32 %29, %32, !dbg !9178
  %conv22 = zext i1 %cmp21 to i32, !dbg !9178
  store i32 %conv22, i32* %tmp16, align 4, !dbg !9178
  %33 = load i32, i32* %tmp16, align 4, !dbg !9178
  %tobool23 = icmp ne i32 %33, 0, !dbg !9179
  br i1 %tobool23, label %cond.false, label %cond.true, !dbg !9179

cond.true:                                        ; preds = %if.end13
  br label %cond.end, !dbg !9179

cond.false:                                       ; preds = %if.end13
  call void @llvm.dbg.declare(metadata i32* %__ret, metadata !9180, metadata !DIExpression()), !dbg !9181
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wait, metadata !9182, metadata !DIExpression()), !dbg !9181
  %flags = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %__wait, i32 0, i32 0, !dbg !9181
  store i32 0, i32* %flags, align 8, !dbg !9181
  %private = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %__wait, i32 0, i32 1, !dbg !9181
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !9106
  %34 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !9106
  %35 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #10, !dbg !9107, !srcloc !4804
  store i64 %35, i64* %pfo_val__.i, align 8, !dbg !9107
  %36 = load i64, i64* %pfo_val__.i, align 8, !dbg !9107
  %37 = inttoptr i64 %36 to %struct.task_struct*, !dbg !9107
  store %struct.task_struct* %37, %struct.task_struct** %tmp.i, align 8, !dbg !9107
  %38 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !9107
  store %struct.task_struct* %38, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !9104
  %39 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !9104
  store %struct.task_struct* %39, %struct.task_struct** %tmp1.i, align 8, !dbg !9104
  %40 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !9104
  %41 = bitcast %struct.task_struct* %40 to i8*, !dbg !9181
  store i8* %41, i8** %private, align 8, !dbg !9181
  %func = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %__wait, i32 0, i32 2, !dbg !9181
  store i32 (%struct.wait_queue_entry*, i32, i32, i8*)* @autoremove_wake_function, i32 (%struct.wait_queue_entry*, i32, i32, i8*)** %func, align 8, !dbg !9181
  %entry25 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %__wait, i32 0, i32 3, !dbg !9181
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry25, i32 0, i32 0, !dbg !9181
  %entry26 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %__wait, i32 0, i32 3, !dbg !9181
  store %struct.list_head* %entry26, %struct.list_head** %next, align 8, !dbg !9181
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %entry25, i32 0, i32 1, !dbg !9181
  %entry27 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %__wait, i32 0, i32 3, !dbg !9181
  store %struct.list_head* %entry27, %struct.list_head** %prev, align 8, !dbg !9181
  br label %do.body28, !dbg !9181

do.body28:                                        ; preds = %do.cond, %cond.false
  %42 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !9183
  %wait29 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %42, i32 0, i32 5, !dbg !9183
  %call30 = call i32 @do_wait_intr(%struct.wait_queue_head* %wait29, %struct.wait_queue_entry* %__wait) #9, !dbg !9183
  store i32 %call30, i32* %__ret, align 4, !dbg !9183
  %43 = load i32, i32* %__ret, align 4, !dbg !9185
  %tobool31 = icmp ne i32 %43, 0, !dbg !9185
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !9183

if.then32:                                        ; preds = %do.body28
  br label %do.end, !dbg !9185

if.end33:                                         ; preds = %do.body28
  br label %do.cond, !dbg !9183

do.cond:                                          ; preds = %if.end33
  call void @llvm.dbg.declare(metadata %struct.anon.71** %__tmpq34, metadata !9187, metadata !DIExpression()), !dbg !9189
  %44 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !9189
  %events35 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %44, i32 0, i32 6, !dbg !9189
  store %struct.anon.71* %events35, %struct.anon.71** %__tmpq34, align 8, !dbg !9189
  %45 = load %struct.anon.71*, %struct.anon.71** %__tmpq34, align 8, !dbg !9189
  %46 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %45, i32 0, i32 0, !dbg !9189
  %kfifo37 = bitcast %union.anon.72* %46 to %struct.__kfifo*, !dbg !9189
  %in38 = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo37, i32 0, i32 0, !dbg !9189
  %47 = load i32, i32* %in38, align 8, !dbg !9189
  %48 = load %struct.anon.71*, %struct.anon.71** %__tmpq34, align 8, !dbg !9189
  %49 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %48, i32 0, i32 0, !dbg !9189
  %kfifo39 = bitcast %union.anon.72* %49 to %struct.__kfifo*, !dbg !9189
  %out40 = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo39, i32 0, i32 1, !dbg !9189
  %50 = load i32, i32* %out40, align 4, !dbg !9189
  %cmp41 = icmp eq i32 %47, %50, !dbg !9189
  %conv42 = zext i1 %cmp41 to i32, !dbg !9189
  store i32 %conv42, i32* %tmp36, align 4, !dbg !9189
  %51 = load i32, i32* %tmp36, align 4, !dbg !9189
  %tobool43 = icmp ne i32 %51, 0, !dbg !9181
  %lnot = xor i1 %tobool43, true, !dbg !9181
  %lnot44 = xor i1 %lnot, true, !dbg !9181
  br i1 %lnot44, label %do.body28, label %do.end, !dbg !9183, !llvm.loop !9190

do.end:                                           ; preds = %do.cond, %if.then32
  %52 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !9181
  %wait45 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %52, i32 0, i32 5, !dbg !9181
  call void @__remove_wait_queue(%struct.wait_queue_head* %wait45, %struct.wait_queue_entry* %__wait) #9, !dbg !9181
  store i8* null, i8** %__vpp_verify.i81, align 8, !dbg !9102
  %53 = load i8*, i8** %__vpp_verify.i81, align 8, !dbg !9102
  %54 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #10, !dbg !9103, !srcloc !4804
  store i64 %54, i64* %pfo_val__.i82, align 8, !dbg !9103
  %55 = load i64, i64* %pfo_val__.i82, align 8, !dbg !9103
  %56 = inttoptr i64 %55 to %struct.task_struct*, !dbg !9103
  store %struct.task_struct* %56, %struct.task_struct** %tmp.i83, align 8, !dbg !9103
  %57 = load %struct.task_struct*, %struct.task_struct** %tmp.i83, align 8, !dbg !9103
  store %struct.task_struct* %57, %struct.task_struct** %pscr_ret__.i80, align 8, !dbg !9099
  %58 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i80, align 8, !dbg !9099
  store %struct.task_struct* %58, %struct.task_struct** %tmp1.i84, align 8, !dbg !9099
  %59 = load %struct.task_struct*, %struct.task_struct** %tmp1.i84, align 8, !dbg !9099
  %state = getelementptr inbounds %struct.task_struct, %struct.task_struct* %59, i32 0, i32 1, !dbg !9181
  store volatile i64 0, i64* %state, align 16, !dbg !9181
  %60 = load i32, i32* %__ret, align 4, !dbg !9181
  store i32 %60, i32* %tmp47, align 4, !dbg !9181
  %61 = load i32, i32* %tmp47, align 4, !dbg !9181
  br label %cond.end, !dbg !9179

cond.end:                                         ; preds = %do.end, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %61, %do.end ], !dbg !9179
  store i32 %cond, i32* %ret, align 4, !dbg !9191
  %62 = load i32, i32* %ret, align 4, !dbg !9192
  %tobool48 = icmp ne i32 %62, 0, !dbg !9192
  br i1 %tobool48, label %if.then49, label %if.end53, !dbg !9193

if.then49:                                        ; preds = %cond.end
  %63 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !9194
  %wait50 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %63, i32 0, i32 5, !dbg !9195
  %lock51 = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait50, i32 0, i32 0, !dbg !9196
  store %struct.spinlock* %lock51, %struct.spinlock** %lock.addr.i85, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9197, !srcloc !4771
  %64 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i85, align 8, !dbg !9198
  %65 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %64, i32 0, i32 0, !dbg !9198
  %rlock.i86 = bitcast %union.anon.1* %65 to %struct.raw_spinlock*, !dbg !9198
  %66 = load i32, i32* %ret, align 4, !dbg !9199
  %conv52 = sext i32 %66 to i64, !dbg !9199
  store i64 %conv52, i64* %retval, align 8, !dbg !9200
  br label %return, !dbg !9200

if.end53:                                         ; preds = %cond.end
  br label %if.end54, !dbg !9201

if.end54:                                         ; preds = %if.end53, %do.body
  call void @llvm.dbg.declare(metadata %struct.anon.71** %__tmp, metadata !9202, metadata !DIExpression()), !dbg !9204
  %67 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !9204
  %events55 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %67, i32 0, i32 6, !dbg !9204
  store %struct.anon.71* %events55, %struct.anon.71** %__tmp, align 8, !dbg !9204
  call void @llvm.dbg.declare(metadata %struct.gpioevent_data** %__buf, metadata !9205, metadata !DIExpression()), !dbg !9204
  store %struct.gpioevent_data* %ge, %struct.gpioevent_data** %__buf, align 8, !dbg !9204
  call void @llvm.dbg.declare(metadata i64* %__n, metadata !9206, metadata !DIExpression()), !dbg !9204
  store i64 1, i64* %__n, align 8, !dbg !9204
  call void @llvm.dbg.declare(metadata i64* %__recsize, metadata !9207, metadata !DIExpression()), !dbg !9204
  store i64 0, i64* %__recsize, align 8, !dbg !9204
  call void @llvm.dbg.declare(metadata %struct.__kfifo** %__kfifo, metadata !9208, metadata !DIExpression()), !dbg !9204
  %68 = load %struct.anon.71*, %struct.anon.71** %__tmp, align 8, !dbg !9204
  %69 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %68, i32 0, i32 0, !dbg !9204
  %kfifo56 = bitcast %union.anon.72* %69 to %struct.__kfifo*, !dbg !9204
  store %struct.__kfifo* %kfifo56, %struct.__kfifo** %__kfifo, align 8, !dbg !9204
  %70 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo, align 8, !dbg !9204
  %71 = load %struct.gpioevent_data*, %struct.gpioevent_data** %__buf, align 8, !dbg !9204
  %72 = bitcast %struct.gpioevent_data* %71 to i8*, !dbg !9204
  %73 = load i64, i64* %__n, align 8, !dbg !9204
  %conv58 = trunc i64 %73 to i32, !dbg !9204
  %call59 = call i32 @__kfifo_out(%struct.__kfifo* %70, i8* %72, i32 %conv58) #9, !dbg !9204
  store i32 %call59, i32* %tmp57, align 4, !dbg !9204
  %74 = load i32, i32* %tmp57, align 4, !dbg !9204
  %call60 = call i32 @__kfifo_uint_must_check_helper(i32 %74) #9, !dbg !9209
  store i32 %call60, i32* %ret, align 4, !dbg !9210
  %75 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !9211
  %wait61 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %75, i32 0, i32 5, !dbg !9212
  %lock62 = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait61, i32 0, i32 0, !dbg !9213
  store %struct.spinlock* %lock62, %struct.spinlock** %lock.addr.i87, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9214, !srcloc !4771
  %76 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i87, align 8, !dbg !9215
  %77 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %76, i32 0, i32 0, !dbg !9215
  %rlock.i88 = bitcast %union.anon.1* %77 to %struct.raw_spinlock*, !dbg !9215
  %78 = load i32, i32* %ret, align 4, !dbg !9216
  %cmp63 = icmp ne i32 %78, 1, !dbg !9218
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !9219

if.then65:                                        ; preds = %if.end54
  store i32 -5, i32* %ret, align 4, !dbg !9220
  br label %do.end75, !dbg !9222

if.end66:                                         ; preds = %if.end54
  %79 = load i8*, i8** %buf.addr, align 8, !dbg !9223
  %80 = load i64, i64* %bytes_read, align 8, !dbg !9224
  %add.ptr = getelementptr i8, i8* %79, i64 %80, !dbg !9225
  %81 = bitcast %struct.gpioevent_data* %ge to i8*, !dbg !9226
  %82 = load i64, i64* %ge_size, align 8, !dbg !9227
  store i8* %add.ptr, i8** %to.addr.i, align 8
  store i8* %81, i8** %from.addr.i, align 8
  store i64 %82, i64* %n.addr.i, align 8
  %83 = load i8*, i8** %from.addr.i, align 8, !dbg !9228
  %84 = load i64, i64* %n.addr.i, align 8, !dbg !9228
  store i8* %83, i8** %addr.addr.i.i, align 8
  store i64 %84, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !9086
  %85 = load i32, i32* %sz.i.i, align 4, !dbg !9229
  %cmp.i.i = icmp sge i32 %85, 0, !dbg !9229
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !9229

land.rhs.i.i:                                     ; preds = %if.end66
  %86 = load i32, i32* %sz.i.i, align 4, !dbg !9229
  %conv.i.i = sext i32 %86 to i64, !dbg !9229
  %87 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9229
  %cmp1.i.i = icmp ult i64 %conv.i.i, %87, !dbg !9229
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end66
  %88 = phi i1 [ false, %if.end66 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !9230
  %lnot.i.i = xor i1 %88, true, !dbg !9229
  %lnot.ext.i.i = zext i1 %88 to i32, !dbg !9229
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9229
  br i1 %88, label %if.then.i.i, label %if.end10.i.i, !dbg !9231

if.then.i.i:                                      ; preds = %land.end.i.i
  %89 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9232
  %90 = call i1 @llvm.is.constant.i64(i64 %89) #6, !dbg !9233
  br i1 %90, label %if.else.i.i, label %if.then5.i.i, !dbg !9234

if.then5.i.i:                                     ; preds = %if.then.i.i
  %91 = load i32, i32* %sz.i.i, align 4, !dbg !9235
  %92 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9236
  call void @copy_overflow(i32 %91, i64 %92) #11, !dbg !9237
  br label %if.end9.i.i, !dbg !9237

if.else.i.i:                                      ; preds = %if.then.i.i
  %93 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !9238
  %tobool6.i.i = trunc i8 %93 to i1, !dbg !9238
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !9239

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !9240
  br label %if.end.i.i, !dbg !9240

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !9241
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !9242
  br label %check_copy_size.exit.i, !dbg !9242

if.end10.i.i:                                     ; preds = %land.end.i.i
  %94 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9087
  %cmp11.i.i = icmp ugt i64 %94, 2147483647, !dbg !9087
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !9087
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !9087
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !9087
  %95 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !9243
  %tobool17.i.i = icmp ne i32 %95, 0, !dbg !9243
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !9243
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !9243
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !9243
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !9087

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !9244, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !9245, !srcloc !4906
  br label %if.end31.i.i, !dbg !9246

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %96 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !9087
  %tobool32.i.i = icmp ne i32 %96, 0, !dbg !9087
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !9087
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !9087
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !9087
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !9243
  %97 = load i64, i64* %tmp.i.i, align 8, !dbg !9087
  %tobool38.i.i = icmp ne i64 %97, 0, !dbg !9247
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !9248

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !9249
  br label %check_copy_size.exit.i, !dbg !9249

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %98 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !9250
  %99 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9251
  %100 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !9252
  %tobool41.i.i = trunc i8 %100 to i1, !dbg !9252
  call void @check_object_size(i8* %98, i64 %99, i1 zeroext %tobool41.i.i) #11, !dbg !9253
  store i1 true, i1* %retval.i.i, align 1, !dbg !9254
  br label %check_copy_size.exit.i, !dbg !9254

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %101 = load i1, i1* %retval.i.i, align 1, !dbg !9255
  %lnot.i = xor i1 %101, true, !dbg !9228
  %lnot.ext.i = zext i1 %101 to i32, !dbg !9228
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !9228
  br i1 %101, label %if.then.i, label %copy_to_user.exit, !dbg !9256

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %102 = load i8*, i8** %to.addr.i, align 8, !dbg !9257
  %103 = load i8*, i8** %from.addr.i, align 8, !dbg !9258
  %104 = load i64, i64* %n.addr.i, align 8, !dbg !9259
  %call2.i = call i64 @_copy_to_user(i8* %102, i8* %103, i64 %104) #11, !dbg !9260
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !9261
  br label %copy_to_user.exit, !dbg !9262

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %105 = load i64, i64* %n.addr.i, align 8, !dbg !9263
  %tobool68 = icmp ne i64 %105, 0, !dbg !9264
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !9265

if.then69:                                        ; preds = %copy_to_user.exit
  store i64 -14, i64* %retval, align 8, !dbg !9266
  br label %return, !dbg !9266

if.end70:                                         ; preds = %copy_to_user.exit
  %106 = load i64, i64* %ge_size, align 8, !dbg !9267
  %107 = load i64, i64* %bytes_read, align 8, !dbg !9268
  %add = add i64 %107, %106, !dbg !9268
  store i64 %add, i64* %bytes_read, align 8, !dbg !9268
  br label %do.cond71, !dbg !9269

do.cond71:                                        ; preds = %if.end70
  %108 = load i64, i64* %count.addr, align 8, !dbg !9270
  %109 = load i64, i64* %bytes_read, align 8, !dbg !9271
  %110 = load i64, i64* %ge_size, align 8, !dbg !9272
  %add72 = add i64 %109, %110, !dbg !9273
  %cmp73 = icmp uge i64 %108, %add72, !dbg !9274
  br i1 %cmp73, label %do.body, label %do.end75, !dbg !9269, !llvm.loop !9275

do.end75:                                         ; preds = %do.cond71, %if.then65
  %111 = load i64, i64* %bytes_read, align 8, !dbg !9277
  store i64 %111, i64* %retval, align 8, !dbg !9278
  br label %return, !dbg !9278

return:                                           ; preds = %do.end75, %if.then69, %if.then49, %if.then10, %if.then5, %if.then
  %112 = load i64, i64* %retval, align 8, !dbg !9279
  ret i64 %112, !dbg !9279
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @lineevent_poll(%struct.file* %file, %struct.poll_table_struct* %wait) #0 !dbg !9280 {
entry:
  %lock.addr.i11 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i11, metadata !4654, metadata !DIExpression()), !dbg !9281
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4725, metadata !DIExpression()), !dbg !9285
  %file.addr = alloca %struct.file*, align 8
  %wait.addr = alloca %struct.poll_table_struct*, align 8
  %le = alloca %struct.lineevent_state*, align 8
  %events = alloca i32, align 4
  %__ret = alloca i8, align 1
  %__tmpq = alloca %struct.anon.71*, align 8
  %tmp = alloca i32, align 4
  %tmp7 = alloca i8, align 1
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !9287, metadata !DIExpression()), !dbg !9288
  store %struct.poll_table_struct* %wait, %struct.poll_table_struct** %wait.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.poll_table_struct** %wait.addr, metadata !9289, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.declare(metadata %struct.lineevent_state** %le, metadata !9291, metadata !DIExpression()), !dbg !9292
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !9293
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !9294
  %1 = load i8*, i8** %private_data, align 8, !dbg !9294
  %2 = bitcast i8* %1 to %struct.lineevent_state*, !dbg !9293
  store %struct.lineevent_state* %2, %struct.lineevent_state** %le, align 8, !dbg !9292
  call void @llvm.dbg.declare(metadata i32* %events, metadata !9295, metadata !DIExpression()), !dbg !9296
  store i32 0, i32* %events, align 4, !dbg !9296
  %3 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !9297
  %4 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !9298
  %wait1 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %4, i32 0, i32 5, !dbg !9299
  %5 = load %struct.poll_table_struct*, %struct.poll_table_struct** %wait.addr, align 8, !dbg !9300
  call void @poll_wait(%struct.file* %3, %struct.wait_queue_head* %wait1, %struct.poll_table_struct* %5) #9, !dbg !9301
  call void @llvm.dbg.declare(metadata i8* %__ret, metadata !9302, metadata !DIExpression()), !dbg !9303
  %6 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !9303
  %wait2 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %6, i32 0, i32 5, !dbg !9303
  %lock = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait2, i32 0, i32 0, !dbg !9303
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9304, !srcloc !4755
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9305
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !9305
  %rlock.i = bitcast %union.anon.1* %8 to %struct.raw_spinlock*, !dbg !9305
  call void @llvm.dbg.declare(metadata %struct.anon.71** %__tmpq, metadata !9306, metadata !DIExpression()), !dbg !9308
  %9 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !9308
  %events3 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %9, i32 0, i32 6, !dbg !9308
  store %struct.anon.71* %events3, %struct.anon.71** %__tmpq, align 8, !dbg !9308
  %10 = load %struct.anon.71*, %struct.anon.71** %__tmpq, align 8, !dbg !9308
  %11 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %10, i32 0, i32 0, !dbg !9308
  %kfifo = bitcast %union.anon.72* %11 to %struct.__kfifo*, !dbg !9308
  %in = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo, i32 0, i32 0, !dbg !9308
  %12 = load i32, i32* %in, align 8, !dbg !9308
  %13 = load %struct.anon.71*, %struct.anon.71** %__tmpq, align 8, !dbg !9308
  %14 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %13, i32 0, i32 0, !dbg !9308
  %kfifo4 = bitcast %union.anon.72* %14 to %struct.__kfifo*, !dbg !9308
  %out = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo4, i32 0, i32 1, !dbg !9308
  %15 = load i32, i32* %out, align 4, !dbg !9308
  %cmp = icmp eq i32 %12, %15, !dbg !9308
  %conv = zext i1 %cmp to i32, !dbg !9308
  store i32 %conv, i32* %tmp, align 4, !dbg !9308
  %16 = load i32, i32* %tmp, align 4, !dbg !9308
  %tobool = icmp ne i32 %16, 0, !dbg !9303
  %frombool = zext i1 %tobool to i8, !dbg !9303
  store i8 %frombool, i8* %__ret, align 1, !dbg !9303
  %17 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !9303
  %wait5 = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %17, i32 0, i32 5, !dbg !9303
  %lock6 = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait5, i32 0, i32 0, !dbg !9303
  store %struct.spinlock* %lock6, %struct.spinlock** %lock.addr.i11, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9309, !srcloc !4771
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i11, align 8, !dbg !9310
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !9310
  %rlock.i12 = bitcast %union.anon.1* %19 to %struct.raw_spinlock*, !dbg !9310
  %20 = load i8, i8* %__ret, align 1, !dbg !9303
  %tobool8 = trunc i8 %20 to i1, !dbg !9303
  %frombool9 = zext i1 %tobool8 to i8, !dbg !9303
  store i8 %frombool9, i8* %tmp7, align 1, !dbg !9303
  %21 = load i8, i8* %tmp7, align 1, !dbg !9303
  %tobool10 = trunc i8 %21 to i1, !dbg !9303
  br i1 %tobool10, label %if.end, label %if.then, !dbg !9311

if.then:                                          ; preds = %entry
  store i32 65, i32* %events, align 4, !dbg !9312
  br label %if.end, !dbg !9313

if.end:                                           ; preds = %if.then, %entry
  %22 = load i32, i32* %events, align 4, !dbg !9314
  ret i32 %22, !dbg !9315
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @lineevent_ioctl(%struct.file* %file, i32 %cmd, i64 %arg) #0 !dbg !9316 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !4609, metadata !DIExpression()), !dbg !9317
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !4626, metadata !DIExpression()), !dbg !9323
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !4628, metadata !DIExpression()), !dbg !9324
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !4630, metadata !DIExpression()), !dbg !9325
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !4632, metadata !DIExpression()), !dbg !9326
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !4636, metadata !DIExpression()), !dbg !9327
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !4638, metadata !DIExpression()), !dbg !9328
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !4640, metadata !DIExpression()), !dbg !9329
  %retval = alloca i64, align 8
  %file.addr = alloca %struct.file*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i64, align 8
  %le = alloca %struct.lineevent_state*, align 8
  %ip = alloca i8*, align 8
  %ghd = alloca %struct.gpiohandle_data, align 1
  %val = alloca i32, align 4
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !9330, metadata !DIExpression()), !dbg !9331
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !9332, metadata !DIExpression()), !dbg !9333
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !9334, metadata !DIExpression()), !dbg !9335
  call void @llvm.dbg.declare(metadata %struct.lineevent_state** %le, metadata !9336, metadata !DIExpression()), !dbg !9337
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !9338
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !9339
  %1 = load i8*, i8** %private_data, align 8, !dbg !9339
  %2 = bitcast i8* %1 to %struct.lineevent_state*, !dbg !9338
  store %struct.lineevent_state* %2, %struct.lineevent_state** %le, align 8, !dbg !9337
  call void @llvm.dbg.declare(metadata i8** %ip, metadata !9340, metadata !DIExpression()), !dbg !9341
  %3 = load i64, i64* %arg.addr, align 8, !dbg !9342
  %4 = inttoptr i64 %3 to i8*, !dbg !9343
  store i8* %4, i8** %ip, align 8, !dbg !9341
  call void @llvm.dbg.declare(metadata %struct.gpiohandle_data* %ghd, metadata !9344, metadata !DIExpression()), !dbg !9345
  %5 = load i32, i32* %cmd.addr, align 4, !dbg !9346
  %conv = zext i32 %5 to i64, !dbg !9346
  %cmp = icmp eq i64 %conv, 3225465864, !dbg !9347
  br i1 %cmp, label %if.then, label %if.end10, !dbg !9348

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %val, metadata !9349, metadata !DIExpression()), !dbg !9350
  %6 = bitcast %struct.gpiohandle_data* %ghd to i8*, !dbg !9351
  call void @llvm.memset.p0i8.i64(i8* align 1 %6, i8 0, i64 64, i1 false), !dbg !9351
  %7 = load %struct.lineevent_state*, %struct.lineevent_state** %le, align 8, !dbg !9352
  %desc = getelementptr inbounds %struct.lineevent_state, %struct.lineevent_state* %7, i32 0, i32 2, !dbg !9353
  %8 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !9353
  %call = call i32 @gpiod_get_value_cansleep(%struct.gpio_desc* %8) #9, !dbg !9354
  store i32 %call, i32* %val, align 4, !dbg !9355
  %9 = load i32, i32* %val, align 4, !dbg !9356
  %cmp2 = icmp slt i32 %9, 0, !dbg !9358
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !9359

if.then4:                                         ; preds = %if.then
  %10 = load i32, i32* %val, align 4, !dbg !9360
  %conv5 = sext i32 %10 to i64, !dbg !9360
  store i64 %conv5, i64* %retval, align 8, !dbg !9361
  br label %return, !dbg !9361

if.end:                                           ; preds = %if.then
  %11 = load i32, i32* %val, align 4, !dbg !9362
  %conv6 = trunc i32 %11 to i8, !dbg !9362
  %values = getelementptr inbounds %struct.gpiohandle_data, %struct.gpiohandle_data* %ghd, i32 0, i32 0, !dbg !9363
  %arrayidx = getelementptr [64 x i8], [64 x i8]* %values, i64 0, i64 0, !dbg !9364
  store i8 %conv6, i8* %arrayidx, align 1, !dbg !9365
  %12 = load i8*, i8** %ip, align 8, !dbg !9366
  %13 = bitcast %struct.gpiohandle_data* %ghd to i8*, !dbg !9367
  store i8* %12, i8** %to.addr.i, align 8
  store i8* %13, i8** %from.addr.i, align 8
  store i64 64, i64* %n.addr.i, align 8
  %14 = load i8*, i8** %from.addr.i, align 8, !dbg !9368
  %15 = load i64, i64* %n.addr.i, align 8, !dbg !9368
  store i8* %14, i8** %addr.addr.i.i, align 8
  store i64 %15, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !9325
  %16 = load i32, i32* %sz.i.i, align 4, !dbg !9369
  %cmp.i.i = icmp sge i32 %16, 0, !dbg !9369
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !9369

land.rhs.i.i:                                     ; preds = %if.end
  %17 = load i32, i32* %sz.i.i, align 4, !dbg !9369
  %conv.i.i = sext i32 %17 to i64, !dbg !9369
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9369
  %cmp1.i.i = icmp ult i64 %conv.i.i, %18, !dbg !9369
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end
  %19 = phi i1 [ false, %if.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !9370
  %lnot.i.i = xor i1 %19, true, !dbg !9369
  %lnot.ext.i.i = zext i1 %19 to i32, !dbg !9369
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9369
  br i1 %19, label %if.then.i.i, label %if.end10.i.i, !dbg !9371

if.then.i.i:                                      ; preds = %land.end.i.i
  %20 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9372
  %21 = call i1 @llvm.is.constant.i64(i64 %20) #6, !dbg !9373
  br i1 %21, label %if.else.i.i, label %if.then5.i.i, !dbg !9374

if.then5.i.i:                                     ; preds = %if.then.i.i
  %22 = load i32, i32* %sz.i.i, align 4, !dbg !9375
  %23 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9376
  call void @copy_overflow(i32 %22, i64 %23) #11, !dbg !9377
  br label %if.end9.i.i, !dbg !9377

if.else.i.i:                                      ; preds = %if.then.i.i
  %24 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !9378
  %tobool6.i.i = trunc i8 %24 to i1, !dbg !9378
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !9379

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !9380
  br label %if.end.i.i, !dbg !9380

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !9381
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !9382
  br label %check_copy_size.exit.i, !dbg !9382

if.end10.i.i:                                     ; preds = %land.end.i.i
  %25 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9326
  %cmp11.i.i = icmp ugt i64 %25, 2147483647, !dbg !9326
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !9326
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !9326
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !9326
  %26 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !9383
  %tobool17.i.i = icmp ne i32 %26, 0, !dbg !9383
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !9383
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !9383
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !9383
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !9326

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !9384, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !9385, !srcloc !4906
  br label %if.end31.i.i, !dbg !9386

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %27 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !9326
  %tobool32.i.i = icmp ne i32 %27, 0, !dbg !9326
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !9326
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !9326
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !9326
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !9383
  %28 = load i64, i64* %tmp.i.i, align 8, !dbg !9326
  %tobool38.i.i = icmp ne i64 %28, 0, !dbg !9387
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !9388

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !9389
  br label %check_copy_size.exit.i, !dbg !9389

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %29 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !9390
  %30 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9391
  %31 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !9392
  %tobool41.i.i = trunc i8 %31 to i1, !dbg !9392
  call void @check_object_size(i8* %29, i64 %30, i1 zeroext %tobool41.i.i) #11, !dbg !9393
  store i1 true, i1* %retval.i.i, align 1, !dbg !9394
  br label %check_copy_size.exit.i, !dbg !9394

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %32 = load i1, i1* %retval.i.i, align 1, !dbg !9395
  %lnot.i = xor i1 %32, true, !dbg !9368
  %lnot.ext.i = zext i1 %32 to i32, !dbg !9368
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !9368
  br i1 %32, label %if.then.i, label %copy_to_user.exit, !dbg !9396

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %33 = load i8*, i8** %to.addr.i, align 8, !dbg !9397
  %34 = load i8*, i8** %from.addr.i, align 8, !dbg !9398
  %35 = load i64, i64* %n.addr.i, align 8, !dbg !9399
  %call2.i = call i64 @_copy_to_user(i8* %33, i8* %34, i64 %35) #11, !dbg !9400
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !9401
  br label %copy_to_user.exit, !dbg !9402

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %36 = load i64, i64* %n.addr.i, align 8, !dbg !9403
  %tobool = icmp ne i64 %36, 0, !dbg !9404
  br i1 %tobool, label %if.then8, label %if.end9, !dbg !9405

if.then8:                                         ; preds = %copy_to_user.exit
  store i64 -14, i64* %retval, align 8, !dbg !9406
  br label %return, !dbg !9406

if.end9:                                          ; preds = %copy_to_user.exit
  store i64 0, i64* %retval, align 8, !dbg !9407
  br label %return, !dbg !9407

if.end10:                                         ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !9408
  br label %return, !dbg !9408

return:                                           ; preds = %if.end10, %if.end9, %if.then8, %if.then4
  %37 = load i64, i64* %retval, align 8, !dbg !9409
  ret i64 %37, !dbg !9409
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @lineevent_release(%struct.inode* %inode, %struct.file* %file) #0 !dbg !9410 {
entry:
  %inode.addr = alloca %struct.inode*, align 8
  %file.addr = alloca %struct.file*, align 8
  store %struct.inode* %inode, %struct.inode** %inode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.inode** %inode.addr, metadata !9411, metadata !DIExpression()), !dbg !9412
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !9413, metadata !DIExpression()), !dbg !9414
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !9415
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !9416
  %1 = load i8*, i8** %private_data, align 8, !dbg !9416
  %2 = bitcast i8* %1 to %struct.lineevent_state*, !dbg !9415
  call void @lineevent_free(%struct.lineevent_state* %2) #9, !dbg !9417
  ret i32 0, !dbg !9418
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @lineevent_get_size() #0 !dbg !9419 {
entry:
  ret i64 16, !dbg !9422
}

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #2

; Function Attrs: noredzone
declare dso_local i8* @memchr_inv(i8*, i32, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpio_v2_line_config_validate(%struct.gpio_v2_line_config* %lc, i32 %num_lines) #0 !dbg !9423 {
entry:
  %retval = alloca i32, align 4
  %lc.addr = alloca %struct.gpio_v2_line_config*, align 8
  %num_lines.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.gpio_v2_line_config* %lc, %struct.gpio_v2_line_config** %lc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_config** %lc.addr, metadata !9426, metadata !DIExpression()), !dbg !9427
  store i32 %num_lines, i32* %num_lines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_lines.addr, metadata !9428, metadata !DIExpression()), !dbg !9429
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9430, metadata !DIExpression()), !dbg !9431
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9432, metadata !DIExpression()), !dbg !9433
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9434, metadata !DIExpression()), !dbg !9435
  %0 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !9436
  %num_attrs = getelementptr inbounds %struct.gpio_v2_line_config, %struct.gpio_v2_line_config* %0, i32 0, i32 1, !dbg !9438
  %1 = load i32, i32* %num_attrs, align 8, !dbg !9438
  %cmp = icmp ugt i32 %1, 10, !dbg !9439
  br i1 %cmp, label %if.then, label %if.end, !dbg !9440

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9441
  br label %return, !dbg !9441

if.end:                                           ; preds = %entry
  %2 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !9442
  %padding = getelementptr inbounds %struct.gpio_v2_line_config, %struct.gpio_v2_line_config* %2, i32 0, i32 2, !dbg !9444
  %arraydecay = getelementptr inbounds [5 x i32], [5 x i32]* %padding, i64 0, i64 0, !dbg !9442
  %3 = bitcast i32* %arraydecay to i8*, !dbg !9442
  %call = call i8* @memchr_inv(i8* %3, i32 0, i64 20) #9, !dbg !9445
  %tobool = icmp ne i8* %call, null, !dbg !9445
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !9446

if.then1:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !9447
  br label %return, !dbg !9447

if.end2:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !9448
  br label %for.cond, !dbg !9450

for.cond:                                         ; preds = %for.inc, %if.end2
  %4 = load i32, i32* %i, align 4, !dbg !9451
  %5 = load i32, i32* %num_lines.addr, align 4, !dbg !9453
  %cmp3 = icmp ult i32 %4, %5, !dbg !9454
  br i1 %cmp3, label %for.body, label %for.end, !dbg !9455

for.body:                                         ; preds = %for.cond
  %6 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !9456
  %7 = load i32, i32* %i, align 4, !dbg !9458
  %call4 = call i64 @gpio_v2_line_config_flags(%struct.gpio_v2_line_config* %6, i32 %7) #9, !dbg !9459
  store i64 %call4, i64* %flags, align 8, !dbg !9460
  %8 = load i64, i64* %flags, align 8, !dbg !9461
  %call5 = call i32 @gpio_v2_line_flags_validate(i64 %8) #9, !dbg !9462
  store i32 %call5, i32* %ret, align 4, !dbg !9463
  %9 = load i32, i32* %ret, align 4, !dbg !9464
  %tobool6 = icmp ne i32 %9, 0, !dbg !9464
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !9466

if.then7:                                         ; preds = %for.body
  %10 = load i32, i32* %ret, align 4, !dbg !9467
  store i32 %10, i32* %retval, align 4, !dbg !9468
  br label %return, !dbg !9468

if.end8:                                          ; preds = %for.body
  %11 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !9469
  %12 = load i32, i32* %i, align 4, !dbg !9471
  %call9 = call zeroext i1 @gpio_v2_line_config_debounced(%struct.gpio_v2_line_config* %11, i32 %12) #9, !dbg !9472
  br i1 %call9, label %land.lhs.true, label %if.end12, !dbg !9473

land.lhs.true:                                    ; preds = %if.end8
  %13 = load i64, i64* %flags, align 8, !dbg !9474
  %and = and i64 %13, 4, !dbg !9475
  %tobool10 = icmp ne i64 %and, 0, !dbg !9475
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !9476

if.then11:                                        ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !9477
  br label %return, !dbg !9477

if.end12:                                         ; preds = %land.lhs.true, %if.end8
  br label %for.inc, !dbg !9478

for.inc:                                          ; preds = %if.end12
  %14 = load i32, i32* %i, align 4, !dbg !9479
  %inc = add i32 %14, 1, !dbg !9479
  store i32 %inc, i32* %i, align 4, !dbg !9479
  br label %for.cond, !dbg !9480, !llvm.loop !9481

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !9483
  br label %return, !dbg !9483

return:                                           ; preds = %for.end, %if.then11, %if.then7, %if.then1, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !9484
  ret i32 %15, !dbg !9484
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__ab_c_size(i64 %a, i64 %b, i64 %c) #0 !dbg !9485 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  %c.addr = alloca i64, align 8
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  %__a3 = alloca i64, align 8
  %__b4 = alloca i64, align 8
  %__d5 = alloca i64*, align 8
  %tmp10 = alloca i8, align 1
  store i64 %a, i64* %a.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !9489, metadata !DIExpression()), !dbg !9490
  store i64 %b, i64* %b.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !9491, metadata !DIExpression()), !dbg !9492
  store i64 %c, i64* %c.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %c.addr, metadata !9493, metadata !DIExpression()), !dbg !9494
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !9495, metadata !DIExpression()), !dbg !9496
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !9497, metadata !DIExpression()), !dbg !9500
  %0 = load i64, i64* %a.addr, align 8, !dbg !9500
  store i64 %0, i64* %__a, align 8, !dbg !9500
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !9501, metadata !DIExpression()), !dbg !9500
  %1 = load i64, i64* %b.addr, align 8, !dbg !9500
  store i64 %1, i64* %__b, align 8, !dbg !9500
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !9502, metadata !DIExpression()), !dbg !9500
  store i64* %bytes, i64** %__d, align 8, !dbg !9500
  %cmp = icmp eq i64* %__a, %__b, !dbg !9500
  %conv = zext i1 %cmp to i32, !dbg !9500
  %2 = load i64*, i64** %__d, align 8, !dbg !9500
  %cmp1 = icmp eq i64* %__a, %2, !dbg !9500
  %conv2 = zext i1 %cmp1 to i32, !dbg !9500
  %3 = load i64, i64* %__a, align 8, !dbg !9500
  %4 = load i64, i64* %__b, align 8, !dbg !9500
  %5 = load i64*, i64** %__d, align 8, !dbg !9500
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !9500
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !9500
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !9500
  store i64 %8, i64* %5, align 8, !dbg !9500
  %frombool = zext i1 %7 to i8, !dbg !9500
  store i8 %frombool, i8* %tmp, align 1, !dbg !9500
  %9 = load i8, i8* %tmp, align 1, !dbg !9500
  %tobool = trunc i8 %9 to i1, !dbg !9500
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #9, !dbg !9504
  br i1 %call, label %if.then, label %if.end, !dbg !9505

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, align 8, !dbg !9506
  br label %return, !dbg !9506

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__a3, metadata !9507, metadata !DIExpression()), !dbg !9510
  %10 = load i64, i64* %bytes, align 8, !dbg !9510
  store i64 %10, i64* %__a3, align 8, !dbg !9510
  call void @llvm.dbg.declare(metadata i64* %__b4, metadata !9511, metadata !DIExpression()), !dbg !9510
  %11 = load i64, i64* %c.addr, align 8, !dbg !9510
  store i64 %11, i64* %__b4, align 8, !dbg !9510
  call void @llvm.dbg.declare(metadata i64** %__d5, metadata !9512, metadata !DIExpression()), !dbg !9510
  store i64* %bytes, i64** %__d5, align 8, !dbg !9510
  %cmp6 = icmp eq i64* %__a3, %__b4, !dbg !9510
  %conv7 = zext i1 %cmp6 to i32, !dbg !9510
  %12 = load i64*, i64** %__d5, align 8, !dbg !9510
  %cmp8 = icmp eq i64* %__a3, %12, !dbg !9510
  %conv9 = zext i1 %cmp8 to i32, !dbg !9510
  %13 = load i64, i64* %__a3, align 8, !dbg !9510
  %14 = load i64, i64* %__b4, align 8, !dbg !9510
  %15 = load i64*, i64** %__d5, align 8, !dbg !9510
  %16 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %13, i64 %14), !dbg !9510
  %17 = extractvalue { i64, i1 } %16, 1, !dbg !9510
  %18 = extractvalue { i64, i1 } %16, 0, !dbg !9510
  store i64 %18, i64* %15, align 8, !dbg !9510
  %frombool11 = zext i1 %17 to i8, !dbg !9510
  store i8 %frombool11, i8* %tmp10, align 1, !dbg !9510
  %19 = load i8, i8* %tmp10, align 1, !dbg !9510
  %tobool12 = trunc i8 %19 to i1, !dbg !9510
  %call13 = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool12) #9, !dbg !9513
  br i1 %call13, label %if.then14, label %if.end15, !dbg !9514

if.then14:                                        ; preds = %if.end
  store i64 -1, i64* %retval, align 8, !dbg !9515
  br label %return, !dbg !9515

if.end15:                                         ; preds = %if.end
  %20 = load i64, i64* %bytes, align 8, !dbg !9516
  store i64 %20, i64* %retval, align 8, !dbg !9517
  br label %return, !dbg !9517

return:                                           ; preds = %if.end15, %if.then14, %if.then
  %21 = load i64, i64* %retval, align 8, !dbg !9518
  ret i64 %21, !dbg !9518
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #0 !dbg !9519 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !9522, metadata !DIExpression()), !dbg !9523
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !9524, metadata !DIExpression()), !dbg !9525
  ret void, !dbg !9526
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !9527 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !9528, metadata !DIExpression()), !dbg !9529
  br label %do.body, !dbg !9530

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9531

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !9533

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !9531

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9535
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9535
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !9535
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !9535
  br label %do.end3, !dbg !9535

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !9531

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9537
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9538
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !9539
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !9540
  ret void, !dbg !9541
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debounce_work_func(%struct.work_struct* %work) #0 !dbg !9542 {
entry:
  %i.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i, metadata !9543, metadata !DIExpression()), !dbg !9547
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !9556, metadata !DIExpression()), !dbg !9557
  %__ret.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i.i, metadata !9558, metadata !DIExpression()), !dbg !9560
  %tmp.i.i.i = alloca i32, align 4
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !9561, metadata !DIExpression()), !dbg !9562
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6964, metadata !DIExpression()), !dbg !9563
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6968, metadata !DIExpression()), !dbg !9565
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !9566, metadata !DIExpression()), !dbg !9567
  %work.addr = alloca %struct.work_struct*, align 8
  %le = alloca %struct.gpio_v2_line_event, align 8
  %line = alloca %struct.line*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.line*, align 8
  %lr = alloca %struct.linereq*, align 8
  %level = alloca i32, align 4
  %tmp1 = alloca i32, align 4
  %tmp4 = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !9568, metadata !DIExpression()), !dbg !9569
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_event* %le, metadata !9570, metadata !DIExpression()), !dbg !9571
  call void @llvm.dbg.declare(metadata %struct.line** %line, metadata !9572, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9574, metadata !DIExpression()), !dbg !9576
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !9576
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !9576
  store i8* %1, i8** %__mptr, align 8, !dbg !9576
  br label %do.body, !dbg !9576

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9577

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9576
  %add.ptr = getelementptr i8, i8* %2, i64 -48, !dbg !9576
  %3 = bitcast i8* %add.ptr to %struct.line*, !dbg !9576
  store %struct.line* %3, %struct.line** %tmp, align 8, !dbg !9577
  %4 = load %struct.line*, %struct.line** %tmp, align 8, !dbg !9576
  store %struct.line* %4, %struct.line** %line, align 8, !dbg !9573
  call void @llvm.dbg.declare(metadata %struct.linereq** %lr, metadata !9579, metadata !DIExpression()), !dbg !9580
  call void @llvm.dbg.declare(metadata i32* %level, metadata !9581, metadata !DIExpression()), !dbg !9582
  %5 = load %struct.line*, %struct.line** %line, align 8, !dbg !9583
  %desc = getelementptr inbounds %struct.line, %struct.line* %5, i32 0, i32 0, !dbg !9584
  %6 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !9584
  %call = call i32 @gpiod_get_raw_value_cansleep(%struct.gpio_desc* %6) #9, !dbg !9585
  store i32 %call, i32* %level, align 4, !dbg !9586
  %7 = load i32, i32* %level, align 4, !dbg !9587
  %cmp = icmp slt i32 %7, 0, !dbg !9589
  br i1 %cmp, label %if.then, label %if.end, !dbg !9590

if.then:                                          ; preds = %do.end
  store i32 0, i32* %tmp1, align 4, !dbg !9591
  %8 = load i32, i32* %tmp1, align 4, !dbg !9595
  br label %return, !dbg !9596

if.end:                                           ; preds = %do.end
  br label %do.body2, !dbg !9597

do.body2:                                         ; preds = %if.end
  br label %do.end3, !dbg !9600

do.end3:                                          ; preds = %do.body2
  %9 = load %struct.line*, %struct.line** %line, align 8, !dbg !9597
  %level5 = getelementptr inbounds %struct.line, %struct.line* %9, i32 0, i32 9, !dbg !9597
  %10 = load volatile i32, i32* %level5, align 4, !dbg !9597
  store i32 %10, i32* %tmp4, align 4, !dbg !9600
  %11 = load i32, i32* %tmp4, align 4, !dbg !9597
  %12 = load i32, i32* %level, align 4, !dbg !9602
  %cmp6 = icmp eq i32 %11, %12, !dbg !9603
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !9604

if.then7:                                         ; preds = %do.end3
  br label %return, !dbg !9605

if.end8:                                          ; preds = %do.end3
  br label %do.body9, !dbg !9606

do.body9:                                         ; preds = %if.end8
  br label %do.body10, !dbg !9607

do.body10:                                        ; preds = %do.body9
  br label %do.end11, !dbg !9609

do.end11:                                         ; preds = %do.body10
  br label %do.body12, !dbg !9607

do.body12:                                        ; preds = %do.end11
  %13 = load i32, i32* %level, align 4, !dbg !9611
  %14 = load %struct.line*, %struct.line** %line, align 8, !dbg !9611
  %level13 = getelementptr inbounds %struct.line, %struct.line* %14, i32 0, i32 9, !dbg !9611
  store volatile i32 %13, i32* %level13, align 4, !dbg !9611
  br label %do.end14, !dbg !9611

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !9607

do.end15:                                         ; preds = %do.end14
  %15 = load %struct.line*, %struct.line** %line, align 8, !dbg !9613
  %eflags = getelementptr inbounds %struct.line, %struct.line* %15, i32 0, i32 3, !dbg !9615
  %16 = load i64, i64* %eflags, align 8, !dbg !9615
  %tobool = icmp ne i64 %16, 0, !dbg !9613
  br i1 %tobool, label %if.end17, label %if.then16, !dbg !9616

if.then16:                                        ; preds = %do.end15
  br label %return, !dbg !9617

if.end17:                                         ; preds = %do.end15
  %17 = load %struct.line*, %struct.line** %line, align 8, !dbg !9618
  %desc18 = getelementptr inbounds %struct.line, %struct.line* %17, i32 0, i32 0, !dbg !9620
  %18 = load %struct.gpio_desc*, %struct.gpio_desc** %desc18, align 8, !dbg !9620
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %18, i32 0, i32 1, !dbg !9621
  %call19 = call zeroext i1 @test_bit(i64 6, i64* %flags) #9, !dbg !9622
  br i1 %call19, label %if.then20, label %if.end22, !dbg !9623

if.then20:                                        ; preds = %if.end17
  %19 = load i32, i32* %level, align 4, !dbg !9624
  %tobool21 = icmp ne i32 %19, 0, !dbg !9625
  %lnot = xor i1 %tobool21, true, !dbg !9625
  %lnot.ext = zext i1 %lnot to i32, !dbg !9625
  store i32 %lnot.ext, i32* %level, align 4, !dbg !9626
  br label %if.end22, !dbg !9627

if.end22:                                         ; preds = %if.then20, %if.end17
  %20 = load %struct.line*, %struct.line** %line, align 8, !dbg !9628
  %eflags23 = getelementptr inbounds %struct.line, %struct.line* %20, i32 0, i32 3, !dbg !9630
  %21 = load i64, i64* %eflags23, align 8, !dbg !9630
  %cmp24 = icmp eq i64 %21, 16, !dbg !9631
  br i1 %cmp24, label %land.lhs.true, label %lor.lhs.false, !dbg !9632

land.lhs.true:                                    ; preds = %if.end22
  %22 = load i32, i32* %level, align 4, !dbg !9633
  %tobool25 = icmp ne i32 %22, 0, !dbg !9633
  br i1 %tobool25, label %lor.lhs.false, label %if.then30, !dbg !9634

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end22
  %23 = load %struct.line*, %struct.line** %line, align 8, !dbg !9635
  %eflags26 = getelementptr inbounds %struct.line, %struct.line* %23, i32 0, i32 3, !dbg !9636
  %24 = load i64, i64* %eflags26, align 8, !dbg !9636
  %cmp27 = icmp eq i64 %24, 32, !dbg !9637
  br i1 %cmp27, label %land.lhs.true28, label %if.end31, !dbg !9638

land.lhs.true28:                                  ; preds = %lor.lhs.false
  %25 = load i32, i32* %level, align 4, !dbg !9639
  %tobool29 = icmp ne i32 %25, 0, !dbg !9639
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !9640

if.then30:                                        ; preds = %land.lhs.true28, %land.lhs.true
  br label %return, !dbg !9641

if.end31:                                         ; preds = %land.lhs.true28, %lor.lhs.false
  %26 = bitcast %struct.gpio_v2_line_event* %le to i8*, !dbg !9642
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 48, i1 false), !dbg !9642
  %27 = load %struct.line*, %struct.line** %line, align 8, !dbg !9643
  %req = getelementptr inbounds %struct.line, %struct.line* %27, i32 0, i32 1, !dbg !9644
  %28 = load %struct.linereq*, %struct.linereq** %req, align 8, !dbg !9644
  store %struct.linereq* %28, %struct.linereq** %lr, align 8, !dbg !9645
  %call32 = call i64 @ktime_get_ns() #9, !dbg !9646
  %timestamp_ns = getelementptr inbounds %struct.gpio_v2_line_event, %struct.gpio_v2_line_event* %le, i32 0, i32 0, !dbg !9647
  store i64 %call32, i64* %timestamp_ns, align 8, !dbg !9648
  %29 = load %struct.line*, %struct.line** %line, align 8, !dbg !9649
  %desc33 = getelementptr inbounds %struct.line, %struct.line* %29, i32 0, i32 0, !dbg !9650
  %30 = load %struct.gpio_desc*, %struct.gpio_desc** %desc33, align 8, !dbg !9650
  %call34 = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %30) #9, !dbg !9651
  %offset = getelementptr inbounds %struct.gpio_v2_line_event, %struct.gpio_v2_line_event* %le, i32 0, i32 2, !dbg !9652
  store i32 %call34, i32* %offset, align 4, !dbg !9653
  %31 = load %struct.line*, %struct.line** %line, align 8, !dbg !9654
  %line_seqno = getelementptr inbounds %struct.line, %struct.line* %31, i32 0, i32 6, !dbg !9655
  %32 = load i32, i32* %line_seqno, align 4, !dbg !9656
  %inc = add i32 %32, 1, !dbg !9656
  store i32 %inc, i32* %line_seqno, align 4, !dbg !9656
  %33 = load %struct.line*, %struct.line** %line, align 8, !dbg !9657
  %line_seqno35 = getelementptr inbounds %struct.line, %struct.line* %33, i32 0, i32 6, !dbg !9658
  %34 = load i32, i32* %line_seqno35, align 4, !dbg !9658
  %line_seqno36 = getelementptr inbounds %struct.gpio_v2_line_event, %struct.gpio_v2_line_event* %le, i32 0, i32 4, !dbg !9659
  store i32 %34, i32* %line_seqno36, align 4, !dbg !9660
  %35 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !9661
  %num_lines = getelementptr inbounds %struct.linereq, %struct.linereq* %35, i32 0, i32 2, !dbg !9662
  %36 = load i32, i32* %num_lines, align 8, !dbg !9662
  %cmp37 = icmp eq i32 %36, 1, !dbg !9663
  br i1 %cmp37, label %cond.true, label %cond.false, !dbg !9664

cond.true:                                        ; preds = %if.end31
  %line_seqno38 = getelementptr inbounds %struct.gpio_v2_line_event, %struct.gpio_v2_line_event* %le, i32 0, i32 4, !dbg !9665
  %37 = load i32, i32* %line_seqno38, align 4, !dbg !9665
  br label %cond.end, !dbg !9664

cond.false:                                       ; preds = %if.end31
  %38 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !9666
  %seqno = getelementptr inbounds %struct.linereq, %struct.linereq* %38, i32 0, i32 6, !dbg !9667
  store %struct.atomic_t* %seqno, %struct.atomic_t** %v.addr.i, align 8
  %39 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9668
  %40 = bitcast %struct.atomic_t* %39 to i8*, !dbg !9668
  store i8* %40, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %41 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9669
  %42 = load i64, i64* %size.addr.i.i, align 8, !dbg !9670
  %conv.i.i = trunc i64 %42 to i32, !dbg !9670
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %41, i32 %conv.i.i) #11, !dbg !9671
  %43 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9672
  %44 = load i64, i64* %size.addr.i.i, align 8, !dbg !9672
  call void @kcsan_check_access(i8* %43, i64 %44, i32 7) #11, !dbg !9672
  %45 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9673
  store %struct.atomic_t* %45, %struct.atomic_t** %v.addr.i1.i, align 8
  %46 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !9674
  store i32 1, i32* %i.addr.i.i.i, align 4
  store %struct.atomic_t* %46, %struct.atomic_t** %v.addr.i.i.i, align 8
  %47 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !9675
  %48 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !9560
  store i32 %48, i32* %__ret.i.i.i, align 4, !dbg !9560
  %49 = load i32, i32* %__ret.i.i.i, align 4, !dbg !9560
  %50 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !9560
  %counter.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %50, i32 0, i32 0, !dbg !9560
  %51 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i.i, i32 %49, i32* %counter.i.i.i) #6, !dbg !9560, !srcloc !9676
  store i32 %51, i32* %__ret.i.i.i, align 4, !dbg !9560
  %52 = load i32, i32* %__ret.i.i.i, align 4, !dbg !9560
  store i32 %52, i32* %tmp.i.i.i, align 4, !dbg !9560
  %53 = load i32, i32* %tmp.i.i.i, align 4, !dbg !9560
  %add.i.i.i = add i32 %47, %53, !dbg !9677
  br label %cond.end, !dbg !9664

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %37, %cond.true ], [ %add.i.i.i, %cond.false ], !dbg !9664
  %seqno40 = getelementptr inbounds %struct.gpio_v2_line_event, %struct.gpio_v2_line_event* %le, i32 0, i32 3, !dbg !9678
  store i32 %cond, i32* %seqno40, align 8, !dbg !9679
  %54 = load i32, i32* %level, align 4, !dbg !9680
  %tobool41 = icmp ne i32 %54, 0, !dbg !9680
  br i1 %tobool41, label %if.then42, label %if.else, !dbg !9682

if.then42:                                        ; preds = %cond.end
  %id = getelementptr inbounds %struct.gpio_v2_line_event, %struct.gpio_v2_line_event* %le, i32 0, i32 1, !dbg !9683
  store i32 1, i32* %id, align 8, !dbg !9684
  br label %if.end44, !dbg !9685

if.else:                                          ; preds = %cond.end
  %id43 = getelementptr inbounds %struct.gpio_v2_line_event, %struct.gpio_v2_line_event* %le, i32 0, i32 1, !dbg !9686
  store i32 2, i32* %id43, align 8, !dbg !9687
  br label %if.end44

if.end44:                                         ; preds = %if.else, %if.then42
  %55 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !9688
  call void @linereq_put_event(%struct.linereq* %55, %struct.gpio_v2_line_event* %le) #9, !dbg !9689
  br label %return, !dbg !9690

return:                                           ; preds = %if.end44, %if.then30, %if.then16, %if.then7, %if.then
  ret void, !dbg !9690
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #2

; Function Attrs: noredzone
declare dso_local void @delayed_work_timer_fn(%struct.timer_list*) #2

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @gpio_v2_line_config_flags(%struct.gpio_v2_line_config* %lc, i32 %line_idx) #0 !dbg !9691 {
entry:
  %retval = alloca i64, align 8
  %lc.addr = alloca %struct.gpio_v2_line_config*, align 8
  %line_idx.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %mask = alloca i64, align 8
  store %struct.gpio_v2_line_config* %lc, %struct.gpio_v2_line_config** %lc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_config** %lc.addr, metadata !9694, metadata !DIExpression()), !dbg !9695
  store i32 %line_idx, i32* %line_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %line_idx.addr, metadata !9696, metadata !DIExpression()), !dbg !9697
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9698, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !9700, metadata !DIExpression()), !dbg !9701
  %0 = load i32, i32* %line_idx.addr, align 4, !dbg !9702
  %sh_prom = zext i32 %0 to i64, !dbg !9702
  %shl = shl i64 1, %sh_prom, !dbg !9702
  store i64 %shl, i64* %mask, align 8, !dbg !9701
  store i32 0, i32* %i, align 4, !dbg !9703
  br label %for.cond, !dbg !9705

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !9706
  %2 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !9708
  %num_attrs = getelementptr inbounds %struct.gpio_v2_line_config, %struct.gpio_v2_line_config* %2, i32 0, i32 1, !dbg !9709
  %3 = load i32, i32* %num_attrs, align 8, !dbg !9709
  %cmp = icmp ult i32 %1, %3, !dbg !9710
  br i1 %cmp, label %for.body, label %for.end, !dbg !9711

for.body:                                         ; preds = %for.cond
  %4 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !9712
  %attrs = getelementptr inbounds %struct.gpio_v2_line_config, %struct.gpio_v2_line_config* %4, i32 0, i32 3, !dbg !9715
  %5 = load i32, i32* %i, align 4, !dbg !9716
  %idxprom = zext i32 %5 to i64, !dbg !9712
  %arrayidx = getelementptr [10 x %struct.gpio_v2_line_config_attribute], [10 x %struct.gpio_v2_line_config_attribute]* %attrs, i64 0, i64 %idxprom, !dbg !9712
  %attr = getelementptr inbounds %struct.gpio_v2_line_config_attribute, %struct.gpio_v2_line_config_attribute* %arrayidx, i32 0, i32 0, !dbg !9717
  %id = getelementptr inbounds %struct.gpio_v2_line_attribute, %struct.gpio_v2_line_attribute* %attr, i32 0, i32 0, !dbg !9718
  %6 = load i32, i32* %id, align 8, !dbg !9718
  %cmp1 = icmp eq i32 %6, 1, !dbg !9719
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !9720

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !9721
  %attrs2 = getelementptr inbounds %struct.gpio_v2_line_config, %struct.gpio_v2_line_config* %7, i32 0, i32 3, !dbg !9722
  %8 = load i32, i32* %i, align 4, !dbg !9723
  %idxprom3 = zext i32 %8 to i64, !dbg !9721
  %arrayidx4 = getelementptr [10 x %struct.gpio_v2_line_config_attribute], [10 x %struct.gpio_v2_line_config_attribute]* %attrs2, i64 0, i64 %idxprom3, !dbg !9721
  %mask5 = getelementptr inbounds %struct.gpio_v2_line_config_attribute, %struct.gpio_v2_line_config_attribute* %arrayidx4, i32 0, i32 1, !dbg !9724
  %9 = load i64, i64* %mask5, align 8, !dbg !9724
  %10 = load i64, i64* %mask, align 8, !dbg !9725
  %and = and i64 %9, %10, !dbg !9726
  %tobool = icmp ne i64 %and, 0, !dbg !9726
  br i1 %tobool, label %if.then, label %if.end, !dbg !9727

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !9728
  %attrs6 = getelementptr inbounds %struct.gpio_v2_line_config, %struct.gpio_v2_line_config* %11, i32 0, i32 3, !dbg !9729
  %12 = load i32, i32* %i, align 4, !dbg !9730
  %idxprom7 = zext i32 %12 to i64, !dbg !9728
  %arrayidx8 = getelementptr [10 x %struct.gpio_v2_line_config_attribute], [10 x %struct.gpio_v2_line_config_attribute]* %attrs6, i64 0, i64 %idxprom7, !dbg !9728
  %attr9 = getelementptr inbounds %struct.gpio_v2_line_config_attribute, %struct.gpio_v2_line_config_attribute* %arrayidx8, i32 0, i32 0, !dbg !9731
  %13 = getelementptr inbounds %struct.gpio_v2_line_attribute, %struct.gpio_v2_line_attribute* %attr9, i32 0, i32 2, !dbg !9732
  %flags = bitcast %union.anon.70* %13 to i64*, !dbg !9732
  %14 = load i64, i64* %flags, align 8, !dbg !9732
  store i64 %14, i64* %retval, align 8, !dbg !9733
  br label %return, !dbg !9733

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !9734

for.inc:                                          ; preds = %if.end
  %15 = load i32, i32* %i, align 4, !dbg !9735
  %inc = add i32 %15, 1, !dbg !9735
  store i32 %inc, i32* %i, align 4, !dbg !9735
  br label %for.cond, !dbg !9736, !llvm.loop !9737

for.end:                                          ; preds = %for.cond
  %16 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !9739
  %flags10 = getelementptr inbounds %struct.gpio_v2_line_config, %struct.gpio_v2_line_config* %16, i32 0, i32 0, !dbg !9740
  %17 = load i64, i64* %flags10, align 8, !dbg !9740
  store i64 %17, i64* %retval, align 8, !dbg !9741
  br label %return, !dbg !9741

return:                                           ; preds = %for.end, %if.then
  %18 = load i64, i64* %retval, align 8, !dbg !9742
  ret i64 %18, !dbg !9742
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpio_v2_line_config_flags_to_desc_flags(i64 %flags, i64* %flagsp) #0 !dbg !9743 {
entry:
  %nr.addr.i69 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i69, metadata !8210, metadata !DIExpression()), !dbg !9746
  %addr.addr.i70 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i70, metadata !8217, metadata !DIExpression()), !dbg !9748
  %value.addr.i71 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr.i71, metadata !8219, metadata !DIExpression()), !dbg !9749
  %nr.addr.i61 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i61, metadata !8210, metadata !DIExpression()), !dbg !9750
  %addr.addr.i62 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i62, metadata !8217, metadata !DIExpression()), !dbg !9752
  %value.addr.i63 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr.i63, metadata !8219, metadata !DIExpression()), !dbg !9753
  %nr.addr.i53 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i53, metadata !8210, metadata !DIExpression()), !dbg !9754
  %addr.addr.i54 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i54, metadata !8217, metadata !DIExpression()), !dbg !9756
  %value.addr.i55 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr.i55, metadata !8219, metadata !DIExpression()), !dbg !9757
  %nr.addr.i45 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i45, metadata !8210, metadata !DIExpression()), !dbg !9758
  %addr.addr.i46 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i46, metadata !8217, metadata !DIExpression()), !dbg !9760
  %value.addr.i47 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr.i47, metadata !8219, metadata !DIExpression()), !dbg !9761
  %nr.addr.i37 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i37, metadata !8210, metadata !DIExpression()), !dbg !9762
  %addr.addr.i38 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i38, metadata !8217, metadata !DIExpression()), !dbg !9764
  %value.addr.i39 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr.i39, metadata !8219, metadata !DIExpression()), !dbg !9765
  %nr.addr.i29 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i29, metadata !8210, metadata !DIExpression()), !dbg !9766
  %addr.addr.i30 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i30, metadata !8217, metadata !DIExpression()), !dbg !9768
  %value.addr.i31 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr.i31, metadata !8219, metadata !DIExpression()), !dbg !9769
  %nr.addr.i21 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i21, metadata !8210, metadata !DIExpression()), !dbg !9770
  %addr.addr.i22 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i22, metadata !8217, metadata !DIExpression()), !dbg !9772
  %value.addr.i23 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr.i23, metadata !8219, metadata !DIExpression()), !dbg !9773
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !8210, metadata !DIExpression()), !dbg !9774
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !8217, metadata !DIExpression()), !dbg !9776
  %value.addr.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr.i, metadata !8219, metadata !DIExpression()), !dbg !9777
  %flags.addr = alloca i64, align 8
  %flagsp.addr = alloca i64*, align 8
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !9778, metadata !DIExpression()), !dbg !9779
  store i64* %flagsp, i64** %flagsp.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %flagsp.addr, metadata !9780, metadata !DIExpression()), !dbg !9781
  %0 = load i64*, i64** %flagsp.addr, align 8, !dbg !9782
  %1 = load i64, i64* %flags.addr, align 8, !dbg !9783
  %and = and i64 %1, 2, !dbg !9784
  %tobool = icmp ne i64 %and, 0, !dbg !9783
  store i64 6, i64* %nr.addr.i, align 8
  store i64* %0, i64** %addr.addr.i, align 8
  %frombool.i = zext i1 %tobool to i8
  store i8 %frombool.i, i8* %value.addr.i, align 1
  %2 = load i8, i8* %value.addr.i, align 1, !dbg !9785
  %tobool.i = trunc i8 %2 to i1, !dbg !9785
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !9786

if.then.i:                                        ; preds = %entry
  %3 = load i64, i64* %nr.addr.i, align 8, !dbg !9787
  %4 = load i64*, i64** %addr.addr.i, align 8, !dbg !9788
  call void @set_bit(i64 %3, i64* %4) #11, !dbg !9789
  br label %assign_bit.exit, !dbg !9789

if.else.i:                                        ; preds = %entry
  %5 = load i64, i64* %nr.addr.i, align 8, !dbg !9790
  %6 = load i64*, i64** %addr.addr.i, align 8, !dbg !9791
  call void @clear_bit(i64 %5, i64* %6) #11, !dbg !9792
  br label %assign_bit.exit

assign_bit.exit:                                  ; preds = %if.then.i, %if.else.i
  %7 = load i64, i64* %flags.addr, align 8, !dbg !9793
  %and1 = and i64 %7, 8, !dbg !9795
  %tobool2 = icmp ne i64 %and1, 0, !dbg !9795
  br i1 %tobool2, label %if.then, label %if.else, !dbg !9796

if.then:                                          ; preds = %assign_bit.exit
  %8 = load i64*, i64** %flagsp.addr, align 8, !dbg !9797
  call void @set_bit(i64 1, i64* %8) #9, !dbg !9798
  br label %if.end6, !dbg !9798

if.else:                                          ; preds = %assign_bit.exit
  %9 = load i64, i64* %flags.addr, align 8, !dbg !9799
  %and3 = and i64 %9, 4, !dbg !9801
  %tobool4 = icmp ne i64 %and3, 0, !dbg !9801
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !9802

if.then5:                                         ; preds = %if.else
  %10 = load i64*, i64** %flagsp.addr, align 8, !dbg !9803
  call void @clear_bit(i64 1, i64* %10) #9, !dbg !9804
  br label %if.end, !dbg !9804

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  %11 = load i64*, i64** %flagsp.addr, align 8, !dbg !9805
  %12 = load i64, i64* %flags.addr, align 8, !dbg !9806
  %and7 = and i64 %12, 16, !dbg !9807
  %tobool8 = icmp ne i64 %and7, 0, !dbg !9806
  store i64 16, i64* %nr.addr.i21, align 8
  store i64* %11, i64** %addr.addr.i22, align 8
  %frombool.i24 = zext i1 %tobool8 to i8
  store i8 %frombool.i24, i8* %value.addr.i23, align 1
  %13 = load i8, i8* %value.addr.i23, align 1, !dbg !9808
  %tobool.i25 = trunc i8 %13 to i1, !dbg !9808
  br i1 %tobool.i25, label %if.then.i26, label %if.else.i27, !dbg !9809

if.then.i26:                                      ; preds = %if.end6
  %14 = load i64, i64* %nr.addr.i21, align 8, !dbg !9810
  %15 = load i64*, i64** %addr.addr.i22, align 8, !dbg !9811
  call void @set_bit(i64 %14, i64* %15) #11, !dbg !9812
  br label %assign_bit.exit28, !dbg !9812

if.else.i27:                                      ; preds = %if.end6
  %16 = load i64, i64* %nr.addr.i21, align 8, !dbg !9813
  %17 = load i64*, i64** %addr.addr.i22, align 8, !dbg !9814
  call void @clear_bit(i64 %16, i64* %17) #11, !dbg !9815
  br label %assign_bit.exit28

assign_bit.exit28:                                ; preds = %if.then.i26, %if.else.i27
  %18 = load i64*, i64** %flagsp.addr, align 8, !dbg !9816
  %19 = load i64, i64* %flags.addr, align 8, !dbg !9817
  %and9 = and i64 %19, 32, !dbg !9818
  %tobool10 = icmp ne i64 %and9, 0, !dbg !9817
  store i64 17, i64* %nr.addr.i29, align 8
  store i64* %18, i64** %addr.addr.i30, align 8
  %frombool.i32 = zext i1 %tobool10 to i8
  store i8 %frombool.i32, i8* %value.addr.i31, align 1
  %20 = load i8, i8* %value.addr.i31, align 1, !dbg !9819
  %tobool.i33 = trunc i8 %20 to i1, !dbg !9819
  br i1 %tobool.i33, label %if.then.i34, label %if.else.i35, !dbg !9820

if.then.i34:                                      ; preds = %assign_bit.exit28
  %21 = load i64, i64* %nr.addr.i29, align 8, !dbg !9821
  %22 = load i64*, i64** %addr.addr.i30, align 8, !dbg !9822
  call void @set_bit(i64 %21, i64* %22) #11, !dbg !9823
  br label %assign_bit.exit36, !dbg !9823

if.else.i35:                                      ; preds = %assign_bit.exit28
  %23 = load i64, i64* %nr.addr.i29, align 8, !dbg !9824
  %24 = load i64*, i64** %addr.addr.i30, align 8, !dbg !9825
  call void @clear_bit(i64 %23, i64* %24) #11, !dbg !9826
  br label %assign_bit.exit36

assign_bit.exit36:                                ; preds = %if.then.i34, %if.else.i35
  %25 = load i64*, i64** %flagsp.addr, align 8, !dbg !9827
  %26 = load i64, i64* %flags.addr, align 8, !dbg !9828
  %and11 = and i64 %26, 64, !dbg !9829
  %tobool12 = icmp ne i64 %and11, 0, !dbg !9828
  store i64 7, i64* %nr.addr.i37, align 8
  store i64* %25, i64** %addr.addr.i38, align 8
  %frombool.i40 = zext i1 %tobool12 to i8
  store i8 %frombool.i40, i8* %value.addr.i39, align 1
  %27 = load i8, i8* %value.addr.i39, align 1, !dbg !9830
  %tobool.i41 = trunc i8 %27 to i1, !dbg !9830
  br i1 %tobool.i41, label %if.then.i42, label %if.else.i43, !dbg !9831

if.then.i42:                                      ; preds = %assign_bit.exit36
  %28 = load i64, i64* %nr.addr.i37, align 8, !dbg !9832
  %29 = load i64*, i64** %addr.addr.i38, align 8, !dbg !9833
  call void @set_bit(i64 %28, i64* %29) #11, !dbg !9834
  br label %assign_bit.exit44, !dbg !9834

if.else.i43:                                      ; preds = %assign_bit.exit36
  %30 = load i64, i64* %nr.addr.i37, align 8, !dbg !9835
  %31 = load i64*, i64** %addr.addr.i38, align 8, !dbg !9836
  call void @clear_bit(i64 %30, i64* %31) #11, !dbg !9837
  br label %assign_bit.exit44

assign_bit.exit44:                                ; preds = %if.then.i42, %if.else.i43
  %32 = load i64*, i64** %flagsp.addr, align 8, !dbg !9838
  %33 = load i64, i64* %flags.addr, align 8, !dbg !9839
  %and13 = and i64 %33, 128, !dbg !9840
  %tobool14 = icmp ne i64 %and13, 0, !dbg !9839
  store i64 8, i64* %nr.addr.i45, align 8
  store i64* %32, i64** %addr.addr.i46, align 8
  %frombool.i48 = zext i1 %tobool14 to i8
  store i8 %frombool.i48, i8* %value.addr.i47, align 1
  %34 = load i8, i8* %value.addr.i47, align 1, !dbg !9841
  %tobool.i49 = trunc i8 %34 to i1, !dbg !9841
  br i1 %tobool.i49, label %if.then.i50, label %if.else.i51, !dbg !9842

if.then.i50:                                      ; preds = %assign_bit.exit44
  %35 = load i64, i64* %nr.addr.i45, align 8, !dbg !9843
  %36 = load i64*, i64** %addr.addr.i46, align 8, !dbg !9844
  call void @set_bit(i64 %35, i64* %36) #11, !dbg !9845
  br label %assign_bit.exit52, !dbg !9845

if.else.i51:                                      ; preds = %assign_bit.exit44
  %37 = load i64, i64* %nr.addr.i45, align 8, !dbg !9846
  %38 = load i64*, i64** %addr.addr.i46, align 8, !dbg !9847
  call void @clear_bit(i64 %37, i64* %38) #11, !dbg !9848
  br label %assign_bit.exit52

assign_bit.exit52:                                ; preds = %if.then.i50, %if.else.i51
  %39 = load i64*, i64** %flagsp.addr, align 8, !dbg !9849
  %40 = load i64, i64* %flags.addr, align 8, !dbg !9850
  %and15 = and i64 %40, 256, !dbg !9851
  %tobool16 = icmp ne i64 %and15, 0, !dbg !9850
  store i64 13, i64* %nr.addr.i53, align 8
  store i64* %39, i64** %addr.addr.i54, align 8
  %frombool.i56 = zext i1 %tobool16 to i8
  store i8 %frombool.i56, i8* %value.addr.i55, align 1
  %41 = load i8, i8* %value.addr.i55, align 1, !dbg !9852
  %tobool.i57 = trunc i8 %41 to i1, !dbg !9852
  br i1 %tobool.i57, label %if.then.i58, label %if.else.i59, !dbg !9853

if.then.i58:                                      ; preds = %assign_bit.exit52
  %42 = load i64, i64* %nr.addr.i53, align 8, !dbg !9854
  %43 = load i64*, i64** %addr.addr.i54, align 8, !dbg !9855
  call void @set_bit(i64 %42, i64* %43) #11, !dbg !9856
  br label %assign_bit.exit60, !dbg !9856

if.else.i59:                                      ; preds = %assign_bit.exit52
  %44 = load i64, i64* %nr.addr.i53, align 8, !dbg !9857
  %45 = load i64*, i64** %addr.addr.i54, align 8, !dbg !9858
  call void @clear_bit(i64 %44, i64* %45) #11, !dbg !9859
  br label %assign_bit.exit60

assign_bit.exit60:                                ; preds = %if.then.i58, %if.else.i59
  %46 = load i64*, i64** %flagsp.addr, align 8, !dbg !9860
  %47 = load i64, i64* %flags.addr, align 8, !dbg !9861
  %and17 = and i64 %47, 512, !dbg !9862
  %tobool18 = icmp ne i64 %and17, 0, !dbg !9861
  store i64 14, i64* %nr.addr.i61, align 8
  store i64* %46, i64** %addr.addr.i62, align 8
  %frombool.i64 = zext i1 %tobool18 to i8
  store i8 %frombool.i64, i8* %value.addr.i63, align 1
  %48 = load i8, i8* %value.addr.i63, align 1, !dbg !9863
  %tobool.i65 = trunc i8 %48 to i1, !dbg !9863
  br i1 %tobool.i65, label %if.then.i66, label %if.else.i67, !dbg !9864

if.then.i66:                                      ; preds = %assign_bit.exit60
  %49 = load i64, i64* %nr.addr.i61, align 8, !dbg !9865
  %50 = load i64*, i64** %addr.addr.i62, align 8, !dbg !9866
  call void @set_bit(i64 %49, i64* %50) #11, !dbg !9867
  br label %assign_bit.exit68, !dbg !9867

if.else.i67:                                      ; preds = %assign_bit.exit60
  %51 = load i64, i64* %nr.addr.i61, align 8, !dbg !9868
  %52 = load i64*, i64** %addr.addr.i62, align 8, !dbg !9869
  call void @clear_bit(i64 %51, i64* %52) #11, !dbg !9870
  br label %assign_bit.exit68

assign_bit.exit68:                                ; preds = %if.then.i66, %if.else.i67
  %53 = load i64*, i64** %flagsp.addr, align 8, !dbg !9871
  %54 = load i64, i64* %flags.addr, align 8, !dbg !9872
  %and19 = and i64 %54, 1024, !dbg !9873
  %tobool20 = icmp ne i64 %and19, 0, !dbg !9872
  store i64 15, i64* %nr.addr.i69, align 8
  store i64* %53, i64** %addr.addr.i70, align 8
  %frombool.i72 = zext i1 %tobool20 to i8
  store i8 %frombool.i72, i8* %value.addr.i71, align 1
  %55 = load i8, i8* %value.addr.i71, align 1, !dbg !9874
  %tobool.i73 = trunc i8 %55 to i1, !dbg !9874
  br i1 %tobool.i73, label %if.then.i74, label %if.else.i75, !dbg !9875

if.then.i74:                                      ; preds = %assign_bit.exit68
  %56 = load i64, i64* %nr.addr.i69, align 8, !dbg !9876
  %57 = load i64*, i64** %addr.addr.i70, align 8, !dbg !9877
  call void @set_bit(i64 %56, i64* %57) #11, !dbg !9878
  br label %assign_bit.exit76, !dbg !9878

if.else.i75:                                      ; preds = %assign_bit.exit68
  %58 = load i64, i64* %nr.addr.i69, align 8, !dbg !9879
  %59 = load i64*, i64** %addr.addr.i70, align 8, !dbg !9880
  call void @clear_bit(i64 %58, i64* %59) #11, !dbg !9881
  br label %assign_bit.exit76

assign_bit.exit76:                                ; preds = %if.then.i74, %if.else.i75
  ret void, !dbg !9882
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpio_v2_line_config_output_value(%struct.gpio_v2_line_config* %lc, i32 %line_idx) #0 !dbg !9883 {
entry:
  %retval = alloca i32, align 4
  %lc.addr = alloca %struct.gpio_v2_line_config*, align 8
  %line_idx.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %mask = alloca i64, align 8
  store %struct.gpio_v2_line_config* %lc, %struct.gpio_v2_line_config** %lc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_config** %lc.addr, metadata !9884, metadata !DIExpression()), !dbg !9885
  store i32 %line_idx, i32* %line_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %line_idx.addr, metadata !9886, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9888, metadata !DIExpression()), !dbg !9889
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !9890, metadata !DIExpression()), !dbg !9891
  %0 = load i32, i32* %line_idx.addr, align 4, !dbg !9892
  %sh_prom = zext i32 %0 to i64, !dbg !9892
  %shl = shl i64 1, %sh_prom, !dbg !9892
  store i64 %shl, i64* %mask, align 8, !dbg !9891
  store i32 0, i32* %i, align 4, !dbg !9893
  br label %for.cond, !dbg !9895

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !9896
  %2 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !9898
  %num_attrs = getelementptr inbounds %struct.gpio_v2_line_config, %struct.gpio_v2_line_config* %2, i32 0, i32 1, !dbg !9899
  %3 = load i32, i32* %num_attrs, align 8, !dbg !9899
  %cmp = icmp ult i32 %1, %3, !dbg !9900
  br i1 %cmp, label %for.body, label %for.end, !dbg !9901

for.body:                                         ; preds = %for.cond
  %4 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !9902
  %attrs = getelementptr inbounds %struct.gpio_v2_line_config, %struct.gpio_v2_line_config* %4, i32 0, i32 3, !dbg !9905
  %5 = load i32, i32* %i, align 4, !dbg !9906
  %idxprom = zext i32 %5 to i64, !dbg !9902
  %arrayidx = getelementptr [10 x %struct.gpio_v2_line_config_attribute], [10 x %struct.gpio_v2_line_config_attribute]* %attrs, i64 0, i64 %idxprom, !dbg !9902
  %attr = getelementptr inbounds %struct.gpio_v2_line_config_attribute, %struct.gpio_v2_line_config_attribute* %arrayidx, i32 0, i32 0, !dbg !9907
  %id = getelementptr inbounds %struct.gpio_v2_line_attribute, %struct.gpio_v2_line_attribute* %attr, i32 0, i32 0, !dbg !9908
  %6 = load i32, i32* %id, align 8, !dbg !9908
  %cmp1 = icmp eq i32 %6, 2, !dbg !9909
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !9910

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !9911
  %attrs2 = getelementptr inbounds %struct.gpio_v2_line_config, %struct.gpio_v2_line_config* %7, i32 0, i32 3, !dbg !9912
  %8 = load i32, i32* %i, align 4, !dbg !9913
  %idxprom3 = zext i32 %8 to i64, !dbg !9911
  %arrayidx4 = getelementptr [10 x %struct.gpio_v2_line_config_attribute], [10 x %struct.gpio_v2_line_config_attribute]* %attrs2, i64 0, i64 %idxprom3, !dbg !9911
  %mask5 = getelementptr inbounds %struct.gpio_v2_line_config_attribute, %struct.gpio_v2_line_config_attribute* %arrayidx4, i32 0, i32 1, !dbg !9914
  %9 = load i64, i64* %mask5, align 8, !dbg !9914
  %10 = load i64, i64* %mask, align 8, !dbg !9915
  %and = and i64 %9, %10, !dbg !9916
  %tobool = icmp ne i64 %and, 0, !dbg !9916
  br i1 %tobool, label %if.then, label %if.end, !dbg !9917

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !9918
  %attrs6 = getelementptr inbounds %struct.gpio_v2_line_config, %struct.gpio_v2_line_config* %11, i32 0, i32 3, !dbg !9919
  %12 = load i32, i32* %i, align 4, !dbg !9920
  %idxprom7 = zext i32 %12 to i64, !dbg !9918
  %arrayidx8 = getelementptr [10 x %struct.gpio_v2_line_config_attribute], [10 x %struct.gpio_v2_line_config_attribute]* %attrs6, i64 0, i64 %idxprom7, !dbg !9918
  %attr9 = getelementptr inbounds %struct.gpio_v2_line_config_attribute, %struct.gpio_v2_line_config_attribute* %arrayidx8, i32 0, i32 0, !dbg !9921
  %13 = getelementptr inbounds %struct.gpio_v2_line_attribute, %struct.gpio_v2_line_attribute* %attr9, i32 0, i32 2, !dbg !9922
  %values = bitcast %union.anon.70* %13 to i64*, !dbg !9922
  %14 = load i64, i64* %values, align 8, !dbg !9922
  %15 = load i64, i64* %mask, align 8, !dbg !9923
  %and10 = and i64 %14, %15, !dbg !9924
  %tobool11 = icmp ne i64 %and10, 0, !dbg !9925
  %lnot = xor i1 %tobool11, true, !dbg !9925
  %lnot12 = xor i1 %lnot, true, !dbg !9926
  %lnot.ext = zext i1 %lnot12 to i32, !dbg !9926
  store i32 %lnot.ext, i32* %retval, align 4, !dbg !9927
  br label %return, !dbg !9927

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !9928

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %i, align 4, !dbg !9929
  %inc = add i32 %16, 1, !dbg !9929
  store i32 %inc, i32* %i, align 4, !dbg !9929
  br label %for.cond, !dbg !9930, !llvm.loop !9931

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !9933
  br label %return, !dbg !9933

return:                                           ; preds = %for.end, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !9934
  ret i32 %17, !dbg !9934
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edge_detector_setup(%struct.line* %line, %struct.gpio_v2_line_config* %lc, i32 %line_idx, i64 %eflags) #0 !dbg !9935 {
entry:
  %retval = alloca i32, align 4
  %line.addr = alloca %struct.line*, align 8
  %lc.addr = alloca %struct.gpio_v2_line_config*, align 8
  %line_idx.addr = alloca i32, align 4
  %eflags.addr = alloca i64, align 8
  %debounce_period_us = alloca i32, align 4
  %irqflags = alloca i64, align 8
  %irq = alloca i32, align 4
  %ret = alloca i32, align 4
  %__tmp = alloca %struct.anon.73*, align 8
  %__kfifo = alloca %struct.__kfifo*, align 8
  %tmp = alloca i32, align 4
  %tmp27 = alloca i32, align 4
  store %struct.line* %line, %struct.line** %line.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.line** %line.addr, metadata !9938, metadata !DIExpression()), !dbg !9939
  store %struct.gpio_v2_line_config* %lc, %struct.gpio_v2_line_config** %lc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_config** %lc.addr, metadata !9940, metadata !DIExpression()), !dbg !9941
  store i32 %line_idx, i32* %line_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %line_idx.addr, metadata !9942, metadata !DIExpression()), !dbg !9943
  store i64 %eflags, i64* %eflags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %eflags.addr, metadata !9944, metadata !DIExpression()), !dbg !9945
  call void @llvm.dbg.declare(metadata i32* %debounce_period_us, metadata !9946, metadata !DIExpression()), !dbg !9947
  call void @llvm.dbg.declare(metadata i64* %irqflags, metadata !9948, metadata !DIExpression()), !dbg !9949
  store i64 0, i64* %irqflags, align 8, !dbg !9949
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !9950, metadata !DIExpression()), !dbg !9951
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9952, metadata !DIExpression()), !dbg !9953
  %0 = load i64, i64* %eflags.addr, align 8, !dbg !9954
  %tobool = icmp ne i64 %0, 0, !dbg !9954
  br i1 %tobool, label %land.lhs.true, label %if.end9, !dbg !9956

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !9957
  %req = getelementptr inbounds %struct.line, %struct.line* %1, i32 0, i32 1, !dbg !9957
  %2 = load %struct.linereq*, %struct.linereq** %req, align 8, !dbg !9957
  %events = getelementptr inbounds %struct.linereq, %struct.linereq* %2, i32 0, i32 5, !dbg !9957
  %3 = getelementptr inbounds %struct.anon.73, %struct.anon.73* %events, i32 0, i32 0, !dbg !9957
  %kfifo = bitcast %union.anon.74* %3 to %struct.__kfifo*, !dbg !9957
  %mask = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo, i32 0, i32 2, !dbg !9957
  %4 = load i32, i32* %mask, align 8, !dbg !9957
  %tobool1 = icmp ne i32 %4, 0, !dbg !9957
  br i1 %tobool1, label %if.end9, label %if.then, !dbg !9958

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.anon.73** %__tmp, metadata !9959, metadata !DIExpression()), !dbg !9963
  %5 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !9963
  %req2 = getelementptr inbounds %struct.line, %struct.line* %5, i32 0, i32 1, !dbg !9963
  %6 = load %struct.linereq*, %struct.linereq** %req2, align 8, !dbg !9963
  %events3 = getelementptr inbounds %struct.linereq, %struct.linereq* %6, i32 0, i32 5, !dbg !9963
  store %struct.anon.73* %events3, %struct.anon.73** %__tmp, align 8, !dbg !9963
  call void @llvm.dbg.declare(metadata %struct.__kfifo** %__kfifo, metadata !9964, metadata !DIExpression()), !dbg !9963
  %7 = load %struct.anon.73*, %struct.anon.73** %__tmp, align 8, !dbg !9963
  %8 = getelementptr inbounds %struct.anon.73, %struct.anon.73* %7, i32 0, i32 0, !dbg !9963
  %kfifo4 = bitcast %union.anon.74* %8 to %struct.__kfifo*, !dbg !9963
  store %struct.__kfifo* %kfifo4, %struct.__kfifo** %__kfifo, align 8, !dbg !9963
  %9 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo, align 8, !dbg !9963
  %10 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !9963
  %req5 = getelementptr inbounds %struct.line, %struct.line* %10, i32 0, i32 1, !dbg !9963
  %11 = load %struct.linereq*, %struct.linereq** %req5, align 8, !dbg !9963
  %event_buffer_size = getelementptr inbounds %struct.linereq, %struct.linereq* %11, i32 0, i32 4, !dbg !9963
  %12 = load i32, i32* %event_buffer_size, align 8, !dbg !9963
  %call = call i32 @__kfifo_alloc(%struct.__kfifo* %9, i32 %12, i64 48, i32 3264) #9, !dbg !9963
  store i32 %call, i32* %tmp, align 4, !dbg !9963
  %13 = load i32, i32* %tmp, align 4, !dbg !9963
  %call6 = call i32 @__kfifo_int_must_check_helper(i32 %13) #9, !dbg !9965
  store i32 %call6, i32* %ret, align 4, !dbg !9966
  %14 = load i32, i32* %ret, align 4, !dbg !9967
  %tobool7 = icmp ne i32 %14, 0, !dbg !9967
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !9969

if.then8:                                         ; preds = %if.then
  %15 = load i32, i32* %ret, align 4, !dbg !9970
  store i32 %15, i32* %retval, align 4, !dbg !9971
  br label %return, !dbg !9971

if.end:                                           ; preds = %if.then
  br label %if.end9, !dbg !9972

if.end9:                                          ; preds = %if.end, %land.lhs.true, %entry
  %16 = load i64, i64* %eflags.addr, align 8, !dbg !9973
  %17 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !9974
  %eflags10 = getelementptr inbounds %struct.line, %struct.line* %17, i32 0, i32 3, !dbg !9975
  store i64 %16, i64* %eflags10, align 8, !dbg !9976
  %18 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !9977
  %19 = load i32, i32* %line_idx.addr, align 4, !dbg !9979
  %call11 = call zeroext i1 @gpio_v2_line_config_debounced(%struct.gpio_v2_line_config* %18, i32 %19) #9, !dbg !9980
  br i1 %call11, label %if.then12, label %if.end23, !dbg !9981

if.then12:                                        ; preds = %if.end9
  %20 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !9982
  %21 = load i32, i32* %line_idx.addr, align 4, !dbg !9984
  %call13 = call i32 @gpio_v2_line_config_debounce_period(%struct.gpio_v2_line_config* %20, i32 %21) #9, !dbg !9985
  store i32 %call13, i32* %debounce_period_us, align 4, !dbg !9986
  %22 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !9987
  %23 = load i32, i32* %debounce_period_us, align 4, !dbg !9988
  %call14 = call i32 @debounce_setup(%struct.line* %22, i32 %23) #9, !dbg !9989
  store i32 %call14, i32* %ret, align 4, !dbg !9990
  %24 = load i32, i32* %ret, align 4, !dbg !9991
  %tobool15 = icmp ne i32 %24, 0, !dbg !9991
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !9993

if.then16:                                        ; preds = %if.then12
  %25 = load i32, i32* %ret, align 4, !dbg !9994
  store i32 %25, i32* %retval, align 4, !dbg !9995
  br label %return, !dbg !9995

if.end17:                                         ; preds = %if.then12
  br label %do.body, !dbg !9996

do.body:                                          ; preds = %if.end17
  br label %do.body18, !dbg !9997

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !9999

do.end:                                           ; preds = %do.body18
  br label %do.body19, !dbg !9997

do.body19:                                        ; preds = %do.end
  %26 = load i32, i32* %debounce_period_us, align 4, !dbg !10001
  %27 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !10001
  %desc = getelementptr inbounds %struct.line, %struct.line* %27, i32 0, i32 0, !dbg !10001
  %28 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !10001
  %debounce_period_us20 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %28, i32 0, i32 4, !dbg !10001
  store volatile i32 %26, i32* %debounce_period_us20, align 8, !dbg !10001
  br label %do.end21, !dbg !10001

do.end21:                                         ; preds = %do.body19
  br label %do.end22, !dbg !9997

do.end22:                                         ; preds = %do.end21
  br label %if.end23, !dbg !10003

if.end23:                                         ; preds = %do.end22, %if.end9
  %29 = load i64, i64* %eflags.addr, align 8, !dbg !10004
  %tobool24 = icmp ne i64 %29, 0, !dbg !10004
  br i1 %tobool24, label %lor.lhs.false, label %if.then29, !dbg !10006

lor.lhs.false:                                    ; preds = %if.end23
  br label %do.body25, !dbg !10007

do.body25:                                        ; preds = %lor.lhs.false
  br label %do.end26, !dbg !10009

do.end26:                                         ; preds = %do.body25
  %30 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !10007
  %sw_debounced = getelementptr inbounds %struct.line, %struct.line* %30, i32 0, i32 8, !dbg !10007
  %31 = load volatile i32, i32* %sw_debounced, align 8, !dbg !10007
  store i32 %31, i32* %tmp27, align 4, !dbg !10009
  %32 = load i32, i32* %tmp27, align 4, !dbg !10007
  %tobool28 = icmp ne i32 %32, 0, !dbg !10011
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !10012

if.then29:                                        ; preds = %do.end26, %if.end23
  store i32 0, i32* %retval, align 4, !dbg !10013
  br label %return, !dbg !10013

if.end30:                                         ; preds = %do.end26
  %33 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !10014
  %desc31 = getelementptr inbounds %struct.line, %struct.line* %33, i32 0, i32 0, !dbg !10015
  %34 = load %struct.gpio_desc*, %struct.gpio_desc** %desc31, align 8, !dbg !10015
  %call32 = call i32 @gpiod_to_irq(%struct.gpio_desc* %34) #9, !dbg !10016
  store i32 %call32, i32* %irq, align 4, !dbg !10017
  %35 = load i32, i32* %irq, align 4, !dbg !10018
  %cmp = icmp slt i32 %35, 0, !dbg !10020
  br i1 %cmp, label %if.then33, label %if.end34, !dbg !10021

if.then33:                                        ; preds = %if.end30
  store i32 -6, i32* %retval, align 4, !dbg !10022
  br label %return, !dbg !10022

if.end34:                                         ; preds = %if.end30
  %36 = load i64, i64* %eflags.addr, align 8, !dbg !10023
  %and = and i64 %36, 16, !dbg !10025
  %tobool35 = icmp ne i64 %and, 0, !dbg !10025
  br i1 %tobool35, label %if.then36, label %if.end39, !dbg !10026

if.then36:                                        ; preds = %if.end34
  %37 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !10027
  %desc37 = getelementptr inbounds %struct.line, %struct.line* %37, i32 0, i32 0, !dbg !10028
  %38 = load %struct.gpio_desc*, %struct.gpio_desc** %desc37, align 8, !dbg !10028
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %38, i32 0, i32 1, !dbg !10029
  %call38 = call zeroext i1 @test_bit(i64 6, i64* %flags) #9, !dbg !10030
  %39 = zext i1 %call38 to i64, !dbg !10030
  %cond = select i1 %call38, i32 2, i32 1, !dbg !10030
  %conv = sext i32 %cond to i64, !dbg !10030
  %40 = load i64, i64* %irqflags, align 8, !dbg !10031
  %or = or i64 %40, %conv, !dbg !10031
  store i64 %or, i64* %irqflags, align 8, !dbg !10031
  br label %if.end39, !dbg !10032

if.end39:                                         ; preds = %if.then36, %if.end34
  %41 = load i64, i64* %eflags.addr, align 8, !dbg !10033
  %and40 = and i64 %41, 32, !dbg !10035
  %tobool41 = icmp ne i64 %and40, 0, !dbg !10035
  br i1 %tobool41, label %if.then42, label %if.end50, !dbg !10036

if.then42:                                        ; preds = %if.end39
  %42 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !10037
  %desc43 = getelementptr inbounds %struct.line, %struct.line* %42, i32 0, i32 0, !dbg !10038
  %43 = load %struct.gpio_desc*, %struct.gpio_desc** %desc43, align 8, !dbg !10038
  %flags44 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %43, i32 0, i32 1, !dbg !10039
  %call45 = call zeroext i1 @test_bit(i64 6, i64* %flags44) #9, !dbg !10040
  %44 = zext i1 %call45 to i64, !dbg !10040
  %cond47 = select i1 %call45, i32 1, i32 2, !dbg !10040
  %conv48 = sext i32 %cond47 to i64, !dbg !10040
  %45 = load i64, i64* %irqflags, align 8, !dbg !10041
  %or49 = or i64 %45, %conv48, !dbg !10041
  store i64 %or49, i64* %irqflags, align 8, !dbg !10041
  br label %if.end50, !dbg !10042

if.end50:                                         ; preds = %if.then42, %if.end39
  %46 = load i64, i64* %irqflags, align 8, !dbg !10043
  %or51 = or i64 %46, 8192, !dbg !10043
  store i64 %or51, i64* %irqflags, align 8, !dbg !10043
  %47 = load i32, i32* %irq, align 4, !dbg !10044
  %48 = load i64, i64* %irqflags, align 8, !dbg !10045
  %49 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !10046
  %req52 = getelementptr inbounds %struct.line, %struct.line* %49, i32 0, i32 1, !dbg !10047
  %50 = load %struct.linereq*, %struct.linereq** %req52, align 8, !dbg !10047
  %label = getelementptr inbounds %struct.linereq, %struct.linereq* %50, i32 0, i32 1, !dbg !10048
  %51 = load i8*, i8** %label, align 8, !dbg !10048
  %52 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !10049
  %53 = bitcast %struct.line* %52 to i8*, !dbg !10049
  %call53 = call i32 @request_threaded_irq(i32 %47, i32 (i32, i8*)* @edge_irq_handler, i32 (i32, i8*)* @edge_irq_thread, i64 %48, i8* %51, i8* %53) #9, !dbg !10050
  store i32 %call53, i32* %ret, align 4, !dbg !10051
  %54 = load i32, i32* %ret, align 4, !dbg !10052
  %tobool54 = icmp ne i32 %54, 0, !dbg !10052
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !10054

if.then55:                                        ; preds = %if.end50
  %55 = load i32, i32* %ret, align 4, !dbg !10055
  store i32 %55, i32* %retval, align 4, !dbg !10056
  br label %return, !dbg !10056

if.end56:                                         ; preds = %if.end50
  %56 = load i32, i32* %irq, align 4, !dbg !10057
  %57 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !10058
  %irq57 = getelementptr inbounds %struct.line, %struct.line* %57, i32 0, i32 2, !dbg !10059
  store i32 %56, i32* %irq57, align 8, !dbg !10060
  store i32 0, i32* %retval, align 4, !dbg !10061
  br label %return, !dbg !10061

return:                                           ; preds = %if.end56, %if.then55, %if.then33, %if.then29, %if.then16, %if.then8
  %58 = load i32, i32* %retval, align 4, !dbg !10062
  ret i32 %58, !dbg !10062
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @linereq_free(%struct.linereq* %lr) #0 !dbg !10063 {
entry:
  %lr.addr = alloca %struct.linereq*, align 8
  %i = alloca i32, align 4
  %__tmp = alloca %struct.anon.73*, align 8
  %__kfifo = alloca %struct.__kfifo*, align 8
  store %struct.linereq* %lr, %struct.linereq** %lr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.linereq** %lr.addr, metadata !10066, metadata !DIExpression()), !dbg !10067
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10068, metadata !DIExpression()), !dbg !10069
  store i32 0, i32* %i, align 4, !dbg !10070
  br label %for.cond, !dbg !10072

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10073
  %1 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !10075
  %num_lines = getelementptr inbounds %struct.linereq, %struct.linereq* %1, i32 0, i32 2, !dbg !10076
  %2 = load i32, i32* %num_lines, align 8, !dbg !10076
  %cmp = icmp ult i32 %0, %2, !dbg !10077
  br i1 %cmp, label %for.body, label %for.end, !dbg !10078

for.body:                                         ; preds = %for.cond
  %3 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !10079
  %lines = getelementptr inbounds %struct.linereq, %struct.linereq* %3, i32 0, i32 8, !dbg !10081
  %4 = load i32, i32* %i, align 4, !dbg !10082
  %idxprom = zext i32 %4 to i64, !dbg !10079
  %arrayidx = getelementptr [0 x %struct.line], [0 x %struct.line]* %lines, i64 0, i64 %idxprom, !dbg !10079
  call void @edge_detector_stop(%struct.line* %arrayidx) #9, !dbg !10083
  %5 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !10084
  %lines1 = getelementptr inbounds %struct.linereq, %struct.linereq* %5, i32 0, i32 8, !dbg !10086
  %6 = load i32, i32* %i, align 4, !dbg !10087
  %idxprom2 = zext i32 %6 to i64, !dbg !10084
  %arrayidx3 = getelementptr [0 x %struct.line], [0 x %struct.line]* %lines1, i64 0, i64 %idxprom2, !dbg !10084
  %desc = getelementptr inbounds %struct.line, %struct.line* %arrayidx3, i32 0, i32 0, !dbg !10088
  %7 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !10088
  %tobool = icmp ne %struct.gpio_desc* %7, null, !dbg !10084
  br i1 %tobool, label %if.then, label %if.end, !dbg !10089

if.then:                                          ; preds = %for.body
  %8 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !10090
  %lines4 = getelementptr inbounds %struct.linereq, %struct.linereq* %8, i32 0, i32 8, !dbg !10091
  %9 = load i32, i32* %i, align 4, !dbg !10092
  %idxprom5 = zext i32 %9 to i64, !dbg !10090
  %arrayidx6 = getelementptr [0 x %struct.line], [0 x %struct.line]* %lines4, i64 0, i64 %idxprom5, !dbg !10090
  %desc7 = getelementptr inbounds %struct.line, %struct.line* %arrayidx6, i32 0, i32 0, !dbg !10093
  %10 = load %struct.gpio_desc*, %struct.gpio_desc** %desc7, align 8, !dbg !10093
  call void @gpiod_free(%struct.gpio_desc* %10) #9, !dbg !10094
  br label %if.end, !dbg !10094

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !10095

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4, !dbg !10096
  %inc = add i32 %11, 1, !dbg !10096
  store i32 %inc, i32* %i, align 4, !dbg !10096
  br label %for.cond, !dbg !10097, !llvm.loop !10098

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.anon.73** %__tmp, metadata !10100, metadata !DIExpression()), !dbg !10102
  %12 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !10102
  %events = getelementptr inbounds %struct.linereq, %struct.linereq* %12, i32 0, i32 5, !dbg !10102
  store %struct.anon.73* %events, %struct.anon.73** %__tmp, align 8, !dbg !10102
  call void @llvm.dbg.declare(metadata %struct.__kfifo** %__kfifo, metadata !10103, metadata !DIExpression()), !dbg !10102
  %13 = load %struct.anon.73*, %struct.anon.73** %__tmp, align 8, !dbg !10102
  %14 = getelementptr inbounds %struct.anon.73, %struct.anon.73* %13, i32 0, i32 0, !dbg !10102
  %kfifo = bitcast %union.anon.74* %14 to %struct.__kfifo*, !dbg !10102
  store %struct.__kfifo* %kfifo, %struct.__kfifo** %__kfifo, align 8, !dbg !10102
  %15 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo, align 8, !dbg !10104
  call void @__kfifo_free(%struct.__kfifo* %15) #9, !dbg !10104
  %16 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !10106
  %label = getelementptr inbounds %struct.linereq, %struct.linereq* %16, i32 0, i32 1, !dbg !10107
  %17 = load i8*, i8** %label, align 8, !dbg !10107
  call void @kfree(i8* %17) #9, !dbg !10108
  %18 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !10109
  %gdev = getelementptr inbounds %struct.linereq, %struct.linereq* %18, i32 0, i32 0, !dbg !10110
  %19 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !10110
  %dev = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %19, i32 0, i32 1, !dbg !10111
  call void @put_device(%struct.device* %dev) #9, !dbg !10112
  %20 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !10113
  %21 = bitcast %struct.linereq* %20 to i8*, !dbg !10113
  call void @kfree(i8* %21) #9, !dbg !10114
  ret void, !dbg !10115
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpio_v2_line_flags_validate(i64 %flags) #0 !dbg !10116 {
entry:
  %retval = alloca i32, align 4
  %flags.addr = alloca i64, align 8
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !10117, metadata !DIExpression()), !dbg !10118
  %0 = load i64, i64* %flags.addr, align 8, !dbg !10119
  %and = and i64 %0, -2047, !dbg !10121
  %tobool = icmp ne i64 %and, 0, !dbg !10121
  br i1 %tobool, label %if.then, label %if.end, !dbg !10122

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10123
  br label %return, !dbg !10123

if.end:                                           ; preds = %entry
  %1 = load i64, i64* %flags.addr, align 8, !dbg !10124
  %and1 = and i64 %1, 4, !dbg !10126
  %tobool2 = icmp ne i64 %and1, 0, !dbg !10126
  br i1 %tobool2, label %land.lhs.true, label %if.end6, !dbg !10127

land.lhs.true:                                    ; preds = %if.end
  %2 = load i64, i64* %flags.addr, align 8, !dbg !10128
  %and3 = and i64 %2, 8, !dbg !10129
  %tobool4 = icmp ne i64 %and3, 0, !dbg !10129
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !10130

if.then5:                                         ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !10131
  br label %return, !dbg !10131

if.end6:                                          ; preds = %land.lhs.true, %if.end
  %3 = load i64, i64* %flags.addr, align 8, !dbg !10132
  %and7 = and i64 %3, 48, !dbg !10134
  %tobool8 = icmp ne i64 %and7, 0, !dbg !10134
  br i1 %tobool8, label %land.lhs.true9, label %if.end13, !dbg !10135

land.lhs.true9:                                   ; preds = %if.end6
  %4 = load i64, i64* %flags.addr, align 8, !dbg !10136
  %and10 = and i64 %4, 4, !dbg !10137
  %tobool11 = icmp ne i64 %and10, 0, !dbg !10137
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !10138

if.then12:                                        ; preds = %land.lhs.true9
  store i32 -22, i32* %retval, align 4, !dbg !10139
  br label %return, !dbg !10139

if.end13:                                         ; preds = %land.lhs.true9, %if.end6
  %5 = load i64, i64* %flags.addr, align 8, !dbg !10140
  %and14 = and i64 %5, 64, !dbg !10142
  %tobool15 = icmp ne i64 %and14, 0, !dbg !10142
  br i1 %tobool15, label %land.lhs.true16, label %if.end20, !dbg !10143

land.lhs.true16:                                  ; preds = %if.end13
  %6 = load i64, i64* %flags.addr, align 8, !dbg !10144
  %and17 = and i64 %6, 128, !dbg !10145
  %tobool18 = icmp ne i64 %and17, 0, !dbg !10145
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !10146

if.then19:                                        ; preds = %land.lhs.true16
  store i32 -22, i32* %retval, align 4, !dbg !10147
  br label %return, !dbg !10147

if.end20:                                         ; preds = %land.lhs.true16, %if.end13
  %7 = load i64, i64* %flags.addr, align 8, !dbg !10148
  %and21 = and i64 %7, 192, !dbg !10150
  %tobool22 = icmp ne i64 %and21, 0, !dbg !10150
  br i1 %tobool22, label %land.lhs.true23, label %if.end27, !dbg !10151

land.lhs.true23:                                  ; preds = %if.end20
  %8 = load i64, i64* %flags.addr, align 8, !dbg !10152
  %and24 = and i64 %8, 8, !dbg !10153
  %tobool25 = icmp ne i64 %and24, 0, !dbg !10153
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !10154

if.then26:                                        ; preds = %land.lhs.true23
  store i32 -22, i32* %retval, align 4, !dbg !10155
  br label %return, !dbg !10155

if.end27:                                         ; preds = %land.lhs.true23, %if.end20
  %9 = load i64, i64* %flags.addr, align 8, !dbg !10156
  %and28 = and i64 %9, 1792, !dbg !10158
  %tobool29 = icmp ne i64 %and28, 0, !dbg !10158
  br i1 %tobool29, label %land.lhs.true30, label %if.end34, !dbg !10159

land.lhs.true30:                                  ; preds = %if.end27
  %10 = load i64, i64* %flags.addr, align 8, !dbg !10160
  %and31 = and i64 %10, 12, !dbg !10161
  %tobool32 = icmp ne i64 %and31, 0, !dbg !10161
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !10162

if.then33:                                        ; preds = %land.lhs.true30
  store i32 -22, i32* %retval, align 4, !dbg !10163
  br label %return, !dbg !10163

if.end34:                                         ; preds = %land.lhs.true30, %if.end27
  %11 = load i64, i64* %flags.addr, align 8, !dbg !10164
  %and35 = and i64 %11, 1024, !dbg !10166
  %tobool36 = icmp ne i64 %and35, 0, !dbg !10166
  br i1 %tobool36, label %land.lhs.true37, label %lor.lhs.false, !dbg !10167

land.lhs.true37:                                  ; preds = %if.end34
  %12 = load i64, i64* %flags.addr, align 8, !dbg !10168
  %and38 = and i64 %12, 768, !dbg !10169
  %tobool39 = icmp ne i64 %and38, 0, !dbg !10169
  br i1 %tobool39, label %if.then45, label %lor.lhs.false, !dbg !10170

lor.lhs.false:                                    ; preds = %land.lhs.true37, %if.end34
  %13 = load i64, i64* %flags.addr, align 8, !dbg !10171
  %and40 = and i64 %13, 512, !dbg !10172
  %tobool41 = icmp ne i64 %and40, 0, !dbg !10172
  br i1 %tobool41, label %land.lhs.true42, label %if.end46, !dbg !10173

land.lhs.true42:                                  ; preds = %lor.lhs.false
  %14 = load i64, i64* %flags.addr, align 8, !dbg !10174
  %and43 = and i64 %14, 256, !dbg !10175
  %tobool44 = icmp ne i64 %and43, 0, !dbg !10175
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !10176

if.then45:                                        ; preds = %land.lhs.true42, %land.lhs.true37
  store i32 -22, i32* %retval, align 4, !dbg !10177
  br label %return, !dbg !10177

if.end46:                                         ; preds = %land.lhs.true42, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !10178
  br label %return, !dbg !10178

return:                                           ; preds = %if.end46, %if.then45, %if.then33, %if.then26, %if.then19, %if.then12, %if.then5, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !10179
  ret i32 %15, !dbg !10179
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @gpio_v2_line_config_debounced(%struct.gpio_v2_line_config* %lc, i32 %line_idx) #0 !dbg !10180 {
entry:
  %retval = alloca i1, align 1
  %lc.addr = alloca %struct.gpio_v2_line_config*, align 8
  %line_idx.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %mask = alloca i64, align 8
  store %struct.gpio_v2_line_config* %lc, %struct.gpio_v2_line_config** %lc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_config** %lc.addr, metadata !10183, metadata !DIExpression()), !dbg !10184
  store i32 %line_idx, i32* %line_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %line_idx.addr, metadata !10185, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10187, metadata !DIExpression()), !dbg !10188
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !10189, metadata !DIExpression()), !dbg !10190
  %0 = load i32, i32* %line_idx.addr, align 4, !dbg !10191
  %sh_prom = zext i32 %0 to i64, !dbg !10191
  %shl = shl i64 1, %sh_prom, !dbg !10191
  store i64 %shl, i64* %mask, align 8, !dbg !10190
  store i32 0, i32* %i, align 4, !dbg !10192
  br label %for.cond, !dbg !10194

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !10195
  %2 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !10197
  %num_attrs = getelementptr inbounds %struct.gpio_v2_line_config, %struct.gpio_v2_line_config* %2, i32 0, i32 1, !dbg !10198
  %3 = load i32, i32* %num_attrs, align 8, !dbg !10198
  %cmp = icmp ult i32 %1, %3, !dbg !10199
  br i1 %cmp, label %for.body, label %for.end, !dbg !10200

for.body:                                         ; preds = %for.cond
  %4 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !10201
  %attrs = getelementptr inbounds %struct.gpio_v2_line_config, %struct.gpio_v2_line_config* %4, i32 0, i32 3, !dbg !10204
  %5 = load i32, i32* %i, align 4, !dbg !10205
  %idxprom = zext i32 %5 to i64, !dbg !10201
  %arrayidx = getelementptr [10 x %struct.gpio_v2_line_config_attribute], [10 x %struct.gpio_v2_line_config_attribute]* %attrs, i64 0, i64 %idxprom, !dbg !10201
  %attr = getelementptr inbounds %struct.gpio_v2_line_config_attribute, %struct.gpio_v2_line_config_attribute* %arrayidx, i32 0, i32 0, !dbg !10206
  %id = getelementptr inbounds %struct.gpio_v2_line_attribute, %struct.gpio_v2_line_attribute* %attr, i32 0, i32 0, !dbg !10207
  %6 = load i32, i32* %id, align 8, !dbg !10207
  %cmp1 = icmp eq i32 %6, 3, !dbg !10208
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !10209

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !10210
  %attrs2 = getelementptr inbounds %struct.gpio_v2_line_config, %struct.gpio_v2_line_config* %7, i32 0, i32 3, !dbg !10211
  %8 = load i32, i32* %i, align 4, !dbg !10212
  %idxprom3 = zext i32 %8 to i64, !dbg !10210
  %arrayidx4 = getelementptr [10 x %struct.gpio_v2_line_config_attribute], [10 x %struct.gpio_v2_line_config_attribute]* %attrs2, i64 0, i64 %idxprom3, !dbg !10210
  %mask5 = getelementptr inbounds %struct.gpio_v2_line_config_attribute, %struct.gpio_v2_line_config_attribute* %arrayidx4, i32 0, i32 1, !dbg !10213
  %9 = load i64, i64* %mask5, align 8, !dbg !10213
  %10 = load i64, i64* %mask, align 8, !dbg !10214
  %and = and i64 %9, %10, !dbg !10215
  %tobool = icmp ne i64 %and, 0, !dbg !10215
  br i1 %tobool, label %if.then, label %if.end, !dbg !10216

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !10217
  br label %return, !dbg !10217

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !10218

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4, !dbg !10219
  %inc = add i32 %11, 1, !dbg !10219
  store i32 %inc, i32* %i, align 4, !dbg !10219
  br label %for.cond, !dbg !10220, !llvm.loop !10221

for.end:                                          ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !10223
  br label %return, !dbg !10223

return:                                           ; preds = %for.end, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !10224
  ret i1 %12, !dbg !10224
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !10225 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !10228, metadata !DIExpression()), !dbg !10229
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !10230
  %tobool = trunc i8 %0 to i1, !dbg !10230
  %lnot = xor i1 %tobool, true, !dbg !10230
  %lnot1 = xor i1 %lnot, true, !dbg !10230
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10230
  %conv = sext i32 %lnot.ext to i64, !dbg !10230
  %tobool2 = icmp ne i64 %conv, 0, !dbg !10230
  ret i1 %tobool2, !dbg !10231
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #1

; Function Attrs: noredzone
declare dso_local i32 @gpiod_get_raw_value_cansleep(%struct.gpio_desc*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @linereq_put_event(%struct.linereq* %lr, %struct.gpio_v2_line_event* %le) #0 !dbg !10232 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !4654, metadata !DIExpression()), !dbg !10235
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4725, metadata !DIExpression()), !dbg !10237
  %lr.addr = alloca %struct.linereq*, align 8
  %le.addr = alloca %struct.gpio_v2_line_event*, align 8
  %overflow = alloca i8, align 1
  %__tmpq = alloca %struct.anon.73*, align 8
  %tmp = alloca i32, align 4
  %__tmpl = alloca %struct.anon.73*, align 8
  %tmp1 = alloca i32, align 4
  %__tmp = alloca %struct.anon.73*, align 8
  %__recsize = alloca i64, align 8
  %__kfifo = alloca %struct.__kfifo*, align 8
  %__tmp7 = alloca %struct.anon.73*, align 8
  %__buf = alloca %struct.gpio_v2_line_event*, align 8
  %__n = alloca i64, align 8
  %__recsize9 = alloca i64, align 8
  %__kfifo10 = alloca %struct.__kfifo*, align 8
  %tmp12 = alloca i32, align 4
  %tmp19 = alloca i32, align 4
  store %struct.linereq* %lr, %struct.linereq** %lr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.linereq** %lr.addr, metadata !10239, metadata !DIExpression()), !dbg !10240
  store %struct.gpio_v2_line_event* %le, %struct.gpio_v2_line_event** %le.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_event** %le.addr, metadata !10241, metadata !DIExpression()), !dbg !10242
  call void @llvm.dbg.declare(metadata i8* %overflow, metadata !10243, metadata !DIExpression()), !dbg !10244
  store i8 0, i8* %overflow, align 1, !dbg !10244
  %0 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !10245
  %wait = getelementptr inbounds %struct.linereq, %struct.linereq* %0, i32 0, i32 3, !dbg !10246
  %lock = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait, i32 0, i32 0, !dbg !10247
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10248, !srcloc !4755
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10249
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !10249
  %rlock.i = bitcast %union.anon.1* %2 to %struct.raw_spinlock*, !dbg !10249
  call void @llvm.dbg.declare(metadata %struct.anon.73** %__tmpq, metadata !10250, metadata !DIExpression()), !dbg !10253
  %3 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !10253
  %events = getelementptr inbounds %struct.linereq, %struct.linereq* %3, i32 0, i32 5, !dbg !10253
  store %struct.anon.73* %events, %struct.anon.73** %__tmpq, align 8, !dbg !10253
  call void @llvm.dbg.declare(metadata %struct.anon.73** %__tmpl, metadata !10254, metadata !DIExpression()), !dbg !10256
  %4 = load %struct.anon.73*, %struct.anon.73** %__tmpq, align 8, !dbg !10256
  store %struct.anon.73* %4, %struct.anon.73** %__tmpl, align 8, !dbg !10256
  %5 = load %struct.anon.73*, %struct.anon.73** %__tmpl, align 8, !dbg !10256
  %6 = getelementptr inbounds %struct.anon.73, %struct.anon.73* %5, i32 0, i32 0, !dbg !10256
  %kfifo = bitcast %union.anon.74* %6 to %struct.__kfifo*, !dbg !10256
  %in = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo, i32 0, i32 0, !dbg !10256
  %7 = load i32, i32* %in, align 8, !dbg !10256
  %8 = load %struct.anon.73*, %struct.anon.73** %__tmpl, align 8, !dbg !10256
  %9 = getelementptr inbounds %struct.anon.73, %struct.anon.73* %8, i32 0, i32 0, !dbg !10256
  %kfifo2 = bitcast %union.anon.74* %9 to %struct.__kfifo*, !dbg !10256
  %out = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo2, i32 0, i32 1, !dbg !10256
  %10 = load i32, i32* %out, align 4, !dbg !10256
  %sub = sub i32 %7, %10, !dbg !10256
  store i32 %sub, i32* %tmp1, align 4, !dbg !10256
  %11 = load i32, i32* %tmp1, align 4, !dbg !10256
  %12 = load %struct.anon.73*, %struct.anon.73** %__tmpq, align 8, !dbg !10253
  %13 = getelementptr inbounds %struct.anon.73, %struct.anon.73* %12, i32 0, i32 0, !dbg !10253
  %kfifo3 = bitcast %union.anon.74* %13 to %struct.__kfifo*, !dbg !10253
  %mask = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo3, i32 0, i32 2, !dbg !10253
  %14 = load i32, i32* %mask, align 8, !dbg !10253
  %cmp = icmp ugt i32 %11, %14, !dbg !10253
  %conv = zext i1 %cmp to i32, !dbg !10253
  store i32 %conv, i32* %tmp, align 4, !dbg !10253
  %15 = load i32, i32* %tmp, align 4, !dbg !10253
  %tobool = icmp ne i32 %15, 0, !dbg !10257
  br i1 %tobool, label %if.then, label %if.end, !dbg !10258

if.then:                                          ; preds = %entry
  store i8 1, i8* %overflow, align 1, !dbg !10259
  call void @llvm.dbg.declare(metadata %struct.anon.73** %__tmp, metadata !10261, metadata !DIExpression()), !dbg !10263
  %16 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !10263
  %events4 = getelementptr inbounds %struct.linereq, %struct.linereq* %16, i32 0, i32 5, !dbg !10263
  store %struct.anon.73* %events4, %struct.anon.73** %__tmp, align 8, !dbg !10263
  call void @llvm.dbg.declare(metadata i64* %__recsize, metadata !10264, metadata !DIExpression()), !dbg !10263
  store i64 0, i64* %__recsize, align 8, !dbg !10263
  call void @llvm.dbg.declare(metadata %struct.__kfifo** %__kfifo, metadata !10265, metadata !DIExpression()), !dbg !10263
  %17 = load %struct.anon.73*, %struct.anon.73** %__tmp, align 8, !dbg !10263
  %18 = getelementptr inbounds %struct.anon.73, %struct.anon.73* %17, i32 0, i32 0, !dbg !10263
  %kfifo5 = bitcast %union.anon.74* %18 to %struct.__kfifo*, !dbg !10263
  store %struct.__kfifo* %kfifo5, %struct.__kfifo** %__kfifo, align 8, !dbg !10263
  %19 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo, align 8, !dbg !10266
  %out6 = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %19, i32 0, i32 1, !dbg !10266
  %20 = load i32, i32* %out6, align 4, !dbg !10266
  %inc = add i32 %20, 1, !dbg !10266
  store i32 %inc, i32* %out6, align 4, !dbg !10266
  br label %if.end, !dbg !10268

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata %struct.anon.73** %__tmp7, metadata !10269, metadata !DIExpression()), !dbg !10271
  %21 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !10271
  %events8 = getelementptr inbounds %struct.linereq, %struct.linereq* %21, i32 0, i32 5, !dbg !10271
  store %struct.anon.73* %events8, %struct.anon.73** %__tmp7, align 8, !dbg !10271
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_event** %__buf, metadata !10272, metadata !DIExpression()), !dbg !10271
  %22 = load %struct.gpio_v2_line_event*, %struct.gpio_v2_line_event** %le.addr, align 8, !dbg !10271
  store %struct.gpio_v2_line_event* %22, %struct.gpio_v2_line_event** %__buf, align 8, !dbg !10271
  call void @llvm.dbg.declare(metadata i64* %__n, metadata !10273, metadata !DIExpression()), !dbg !10271
  store i64 1, i64* %__n, align 8, !dbg !10271
  call void @llvm.dbg.declare(metadata i64* %__recsize9, metadata !10274, metadata !DIExpression()), !dbg !10271
  store i64 0, i64* %__recsize9, align 8, !dbg !10271
  call void @llvm.dbg.declare(metadata %struct.__kfifo** %__kfifo10, metadata !10275, metadata !DIExpression()), !dbg !10271
  %23 = load %struct.anon.73*, %struct.anon.73** %__tmp7, align 8, !dbg !10271
  %24 = getelementptr inbounds %struct.anon.73, %struct.anon.73* %23, i32 0, i32 0, !dbg !10271
  %kfifo11 = bitcast %union.anon.74* %24 to %struct.__kfifo*, !dbg !10271
  store %struct.__kfifo* %kfifo11, %struct.__kfifo** %__kfifo10, align 8, !dbg !10271
  %25 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo10, align 8, !dbg !10271
  %26 = load %struct.gpio_v2_line_event*, %struct.gpio_v2_line_event** %__buf, align 8, !dbg !10271
  %27 = bitcast %struct.gpio_v2_line_event* %26 to i8*, !dbg !10271
  %28 = load i64, i64* %__n, align 8, !dbg !10271
  %conv13 = trunc i64 %28 to i32, !dbg !10271
  %call = call i32 @__kfifo_in(%struct.__kfifo* %25, i8* %27, i32 %conv13) #9, !dbg !10271
  store i32 %call, i32* %tmp12, align 4, !dbg !10271
  %29 = load i32, i32* %tmp12, align 4, !dbg !10271
  %30 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !10276
  %wait14 = getelementptr inbounds %struct.linereq, %struct.linereq* %30, i32 0, i32 3, !dbg !10277
  %lock15 = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait14, i32 0, i32 0, !dbg !10278
  store %struct.spinlock* %lock15, %struct.spinlock** %lock.addr.i21, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10279, !srcloc !4771
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !10280
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !10280
  %rlock.i22 = bitcast %union.anon.1* %32 to %struct.raw_spinlock*, !dbg !10280
  %33 = load i8, i8* %overflow, align 1, !dbg !10281
  %tobool16 = trunc i8 %33 to i1, !dbg !10281
  br i1 %tobool16, label %if.else, label %if.then17, !dbg !10283

if.then17:                                        ; preds = %if.end
  %34 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !10284
  %wait18 = getelementptr inbounds %struct.linereq, %struct.linereq* %34, i32 0, i32 3, !dbg !10284
  call void @__wake_up(%struct.wait_queue_head* %wait18, i32 3, i32 1, i8* inttoptr (i64 1 to i8*)) #9, !dbg !10284
  br label %if.end20, !dbg !10284

if.else:                                          ; preds = %if.end
  store i32 0, i32* %tmp19, align 4, !dbg !10285
  %35 = load i32, i32* %tmp19, align 4, !dbg !10288
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then17
  ret void, !dbg !10289
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__kfifo_int_must_check_helper(i32 %val) #0 !dbg !10290 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !10291, metadata !DIExpression()), !dbg !10292
  %0 = load i32, i32* %val.addr, align 4, !dbg !10293
  ret i32 %0, !dbg !10294
}

; Function Attrs: noredzone
declare dso_local i32 @__kfifo_alloc(%struct.__kfifo*, i32, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gpio_v2_line_config_debounce_period(%struct.gpio_v2_line_config* %lc, i32 %line_idx) #0 !dbg !10295 {
entry:
  %retval = alloca i32, align 4
  %lc.addr = alloca %struct.gpio_v2_line_config*, align 8
  %line_idx.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %mask = alloca i64, align 8
  store %struct.gpio_v2_line_config* %lc, %struct.gpio_v2_line_config** %lc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_config** %lc.addr, metadata !10298, metadata !DIExpression()), !dbg !10299
  store i32 %line_idx, i32* %line_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %line_idx.addr, metadata !10300, metadata !DIExpression()), !dbg !10301
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10302, metadata !DIExpression()), !dbg !10303
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !10304, metadata !DIExpression()), !dbg !10305
  %0 = load i32, i32* %line_idx.addr, align 4, !dbg !10306
  %sh_prom = zext i32 %0 to i64, !dbg !10306
  %shl = shl i64 1, %sh_prom, !dbg !10306
  store i64 %shl, i64* %mask, align 8, !dbg !10305
  store i32 0, i32* %i, align 4, !dbg !10307
  br label %for.cond, !dbg !10309

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !10310
  %2 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !10312
  %num_attrs = getelementptr inbounds %struct.gpio_v2_line_config, %struct.gpio_v2_line_config* %2, i32 0, i32 1, !dbg !10313
  %3 = load i32, i32* %num_attrs, align 8, !dbg !10313
  %cmp = icmp ult i32 %1, %3, !dbg !10314
  br i1 %cmp, label %for.body, label %for.end, !dbg !10315

for.body:                                         ; preds = %for.cond
  %4 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !10316
  %attrs = getelementptr inbounds %struct.gpio_v2_line_config, %struct.gpio_v2_line_config* %4, i32 0, i32 3, !dbg !10319
  %5 = load i32, i32* %i, align 4, !dbg !10320
  %idxprom = zext i32 %5 to i64, !dbg !10316
  %arrayidx = getelementptr [10 x %struct.gpio_v2_line_config_attribute], [10 x %struct.gpio_v2_line_config_attribute]* %attrs, i64 0, i64 %idxprom, !dbg !10316
  %attr = getelementptr inbounds %struct.gpio_v2_line_config_attribute, %struct.gpio_v2_line_config_attribute* %arrayidx, i32 0, i32 0, !dbg !10321
  %id = getelementptr inbounds %struct.gpio_v2_line_attribute, %struct.gpio_v2_line_attribute* %attr, i32 0, i32 0, !dbg !10322
  %6 = load i32, i32* %id, align 8, !dbg !10322
  %cmp1 = icmp eq i32 %6, 3, !dbg !10323
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !10324

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !10325
  %attrs2 = getelementptr inbounds %struct.gpio_v2_line_config, %struct.gpio_v2_line_config* %7, i32 0, i32 3, !dbg !10326
  %8 = load i32, i32* %i, align 4, !dbg !10327
  %idxprom3 = zext i32 %8 to i64, !dbg !10325
  %arrayidx4 = getelementptr [10 x %struct.gpio_v2_line_config_attribute], [10 x %struct.gpio_v2_line_config_attribute]* %attrs2, i64 0, i64 %idxprom3, !dbg !10325
  %mask5 = getelementptr inbounds %struct.gpio_v2_line_config_attribute, %struct.gpio_v2_line_config_attribute* %arrayidx4, i32 0, i32 1, !dbg !10328
  %9 = load i64, i64* %mask5, align 8, !dbg !10328
  %10 = load i64, i64* %mask, align 8, !dbg !10329
  %and = and i64 %9, %10, !dbg !10330
  %tobool = icmp ne i64 %and, 0, !dbg !10330
  br i1 %tobool, label %if.then, label %if.end, !dbg !10331

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !10332
  %attrs6 = getelementptr inbounds %struct.gpio_v2_line_config, %struct.gpio_v2_line_config* %11, i32 0, i32 3, !dbg !10333
  %12 = load i32, i32* %i, align 4, !dbg !10334
  %idxprom7 = zext i32 %12 to i64, !dbg !10332
  %arrayidx8 = getelementptr [10 x %struct.gpio_v2_line_config_attribute], [10 x %struct.gpio_v2_line_config_attribute]* %attrs6, i64 0, i64 %idxprom7, !dbg !10332
  %attr9 = getelementptr inbounds %struct.gpio_v2_line_config_attribute, %struct.gpio_v2_line_config_attribute* %arrayidx8, i32 0, i32 0, !dbg !10335
  %13 = getelementptr inbounds %struct.gpio_v2_line_attribute, %struct.gpio_v2_line_attribute* %attr9, i32 0, i32 2, !dbg !10336
  %debounce_period_us = bitcast %union.anon.70* %13 to i32*, !dbg !10336
  %14 = load i32, i32* %debounce_period_us, align 8, !dbg !10336
  store i32 %14, i32* %retval, align 4, !dbg !10337
  br label %return, !dbg !10337

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !10338

for.inc:                                          ; preds = %if.end
  %15 = load i32, i32* %i, align 4, !dbg !10339
  %inc = add i32 %15, 1, !dbg !10339
  store i32 %inc, i32* %i, align 4, !dbg !10339
  br label %for.cond, !dbg !10340, !llvm.loop !10341

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !10343
  br label %return, !dbg !10343

return:                                           ; preds = %for.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !10344
  ret i32 %16, !dbg !10344
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @debounce_setup(%struct.line* %line, i32 %debounce_period_us) #0 !dbg !10345 {
entry:
  %retval = alloca i32, align 4
  %line.addr = alloca %struct.line*, align 8
  %debounce_period_us.addr = alloca i32, align 4
  %irqflags = alloca i64, align 8
  %ret = alloca i32, align 4
  %level = alloca i32, align 4
  %irq = alloca i32, align 4
  store %struct.line* %line, %struct.line** %line.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.line** %line.addr, metadata !10348, metadata !DIExpression()), !dbg !10349
  store i32 %debounce_period_us, i32* %debounce_period_us.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %debounce_period_us.addr, metadata !10350, metadata !DIExpression()), !dbg !10351
  call void @llvm.dbg.declare(metadata i64* %irqflags, metadata !10352, metadata !DIExpression()), !dbg !10353
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10354, metadata !DIExpression()), !dbg !10355
  call void @llvm.dbg.declare(metadata i32* %level, metadata !10356, metadata !DIExpression()), !dbg !10357
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !10358, metadata !DIExpression()), !dbg !10359
  %0 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !10360
  %desc = getelementptr inbounds %struct.line, %struct.line* %0, i32 0, i32 0, !dbg !10361
  %1 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !10361
  %2 = load i32, i32* %debounce_period_us.addr, align 4, !dbg !10362
  %call = call i32 @gpiod_set_debounce(%struct.gpio_desc* %1, i32 %2) #9, !dbg !10363
  store i32 %call, i32* %ret, align 4, !dbg !10364
  %3 = load i32, i32* %ret, align 4, !dbg !10365
  %tobool = icmp ne i32 %3, 0, !dbg !10365
  br i1 %tobool, label %if.end, label %if.then, !dbg !10367

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !10368

do.body:                                          ; preds = %if.then
  br label %do.body1, !dbg !10370

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !10372

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !10370

do.body2:                                         ; preds = %do.end
  %4 = load i32, i32* %debounce_period_us.addr, align 4, !dbg !10374
  %5 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !10374
  %desc3 = getelementptr inbounds %struct.line, %struct.line* %5, i32 0, i32 0, !dbg !10374
  %6 = load %struct.gpio_desc*, %struct.gpio_desc** %desc3, align 8, !dbg !10374
  %debounce_period_us4 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %6, i32 0, i32 4, !dbg !10374
  store volatile i32 %4, i32* %debounce_period_us4, align 8, !dbg !10374
  br label %do.end5, !dbg !10374

do.end5:                                          ; preds = %do.body2
  br label %do.end6, !dbg !10370

do.end6:                                          ; preds = %do.end5
  %7 = load i32, i32* %ret, align 4, !dbg !10376
  store i32 %7, i32* %retval, align 4, !dbg !10377
  br label %return, !dbg !10377

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %ret, align 4, !dbg !10378
  %cmp = icmp ne i32 %8, -524, !dbg !10380
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !10381

if.then7:                                         ; preds = %if.end
  %9 = load i32, i32* %ret, align 4, !dbg !10382
  store i32 %9, i32* %retval, align 4, !dbg !10383
  br label %return, !dbg !10383

if.end8:                                          ; preds = %if.end
  %10 = load i32, i32* %debounce_period_us.addr, align 4, !dbg !10384
  %tobool9 = icmp ne i32 %10, 0, !dbg !10384
  br i1 %tobool9, label %if.then10, label %if.end39, !dbg !10386

if.then10:                                        ; preds = %if.end8
  %11 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !10387
  %desc11 = getelementptr inbounds %struct.line, %struct.line* %11, i32 0, i32 0, !dbg !10389
  %12 = load %struct.gpio_desc*, %struct.gpio_desc** %desc11, align 8, !dbg !10389
  %call12 = call i32 @gpiod_get_raw_value_cansleep(%struct.gpio_desc* %12) #9, !dbg !10390
  store i32 %call12, i32* %level, align 4, !dbg !10391
  %13 = load i32, i32* %level, align 4, !dbg !10392
  %cmp13 = icmp slt i32 %13, 0, !dbg !10394
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !10395

if.then14:                                        ; preds = %if.then10
  %14 = load i32, i32* %level, align 4, !dbg !10396
  store i32 %14, i32* %retval, align 4, !dbg !10397
  br label %return, !dbg !10397

if.end15:                                         ; preds = %if.then10
  %15 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !10398
  %desc16 = getelementptr inbounds %struct.line, %struct.line* %15, i32 0, i32 0, !dbg !10399
  %16 = load %struct.gpio_desc*, %struct.gpio_desc** %desc16, align 8, !dbg !10399
  %call17 = call i32 @gpiod_to_irq(%struct.gpio_desc* %16) #9, !dbg !10400
  store i32 %call17, i32* %irq, align 4, !dbg !10401
  %17 = load i32, i32* %irq, align 4, !dbg !10402
  %cmp18 = icmp slt i32 %17, 0, !dbg !10404
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !10405

if.then19:                                        ; preds = %if.end15
  store i32 -6, i32* %retval, align 4, !dbg !10406
  br label %return, !dbg !10406

if.end20:                                         ; preds = %if.end15
  br label %do.body21, !dbg !10407

do.body21:                                        ; preds = %if.end20
  br label %do.body22, !dbg !10408

do.body22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !10410

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !10408

do.body24:                                        ; preds = %do.end23
  %18 = load i32, i32* %level, align 4, !dbg !10412
  %19 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !10412
  %level25 = getelementptr inbounds %struct.line, %struct.line* %19, i32 0, i32 9, !dbg !10412
  store volatile i32 %18, i32* %level25, align 4, !dbg !10412
  br label %do.end26, !dbg !10412

do.end26:                                         ; preds = %do.body24
  br label %do.end27, !dbg !10408

do.end27:                                         ; preds = %do.end26
  store i64 3, i64* %irqflags, align 8, !dbg !10414
  %20 = load i32, i32* %irq, align 4, !dbg !10415
  %21 = load i64, i64* %irqflags, align 8, !dbg !10416
  %22 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !10417
  %req = getelementptr inbounds %struct.line, %struct.line* %22, i32 0, i32 1, !dbg !10418
  %23 = load %struct.linereq*, %struct.linereq** %req, align 8, !dbg !10418
  %label = getelementptr inbounds %struct.linereq, %struct.linereq* %23, i32 0, i32 1, !dbg !10419
  %24 = load i8*, i8** %label, align 8, !dbg !10419
  %25 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !10420
  %26 = bitcast %struct.line* %25 to i8*, !dbg !10420
  %call28 = call i32 @request_irq(i32 %20, i32 (i32, i8*)* @debounce_irq_handler, i64 %21, i8* %24, i8* %26) #9, !dbg !10421
  store i32 %call28, i32* %ret, align 4, !dbg !10422
  %27 = load i32, i32* %ret, align 4, !dbg !10423
  %tobool29 = icmp ne i32 %27, 0, !dbg !10423
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !10425

if.then30:                                        ; preds = %do.end27
  %28 = load i32, i32* %ret, align 4, !dbg !10426
  store i32 %28, i32* %retval, align 4, !dbg !10427
  br label %return, !dbg !10427

if.end31:                                         ; preds = %do.end27
  br label %do.body32, !dbg !10428

do.body32:                                        ; preds = %if.end31
  br label %do.body33, !dbg !10429

do.body33:                                        ; preds = %do.body32
  br label %do.end34, !dbg !10431

do.end34:                                         ; preds = %do.body33
  br label %do.body35, !dbg !10429

do.body35:                                        ; preds = %do.end34
  %29 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !10433
  %sw_debounced = getelementptr inbounds %struct.line, %struct.line* %29, i32 0, i32 8, !dbg !10433
  store volatile i32 1, i32* %sw_debounced, align 8, !dbg !10433
  br label %do.end36, !dbg !10433

do.end36:                                         ; preds = %do.body35
  br label %do.end37, !dbg !10429

do.end37:                                         ; preds = %do.end36
  %30 = load i32, i32* %irq, align 4, !dbg !10435
  %31 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !10436
  %irq38 = getelementptr inbounds %struct.line, %struct.line* %31, i32 0, i32 2, !dbg !10437
  store i32 %30, i32* %irq38, align 8, !dbg !10438
  br label %if.end39, !dbg !10439

if.end39:                                         ; preds = %do.end37, %if.end8
  store i32 0, i32* %retval, align 4, !dbg !10440
  br label %return, !dbg !10440

return:                                           ; preds = %if.end39, %if.then30, %if.then19, %if.then14, %if.then7, %do.end6
  %32 = load i32, i32* %retval, align 4, !dbg !10441
  ret i32 %32, !dbg !10441
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edge_irq_handler(i32 %irq, i8* %p) #0 !dbg !10442 {
entry:
  %i.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i, metadata !9543, metadata !DIExpression()), !dbg !10443
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !9556, metadata !DIExpression()), !dbg !10448
  %__ret.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i.i, metadata !9558, metadata !DIExpression()), !dbg !10449
  %tmp.i.i.i = alloca i32, align 4
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !9561, metadata !DIExpression()), !dbg !10450
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6964, metadata !DIExpression()), !dbg !10451
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6968, metadata !DIExpression()), !dbg !10453
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !9566, metadata !DIExpression()), !dbg !10454
  %irq.addr = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %line = alloca %struct.line*, align 8
  %lr = alloca %struct.linereq*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10455, metadata !DIExpression()), !dbg !10456
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !10457, metadata !DIExpression()), !dbg !10458
  call void @llvm.dbg.declare(metadata %struct.line** %line, metadata !10459, metadata !DIExpression()), !dbg !10460
  %0 = load i8*, i8** %p.addr, align 8, !dbg !10461
  %1 = bitcast i8* %0 to %struct.line*, !dbg !10461
  store %struct.line* %1, %struct.line** %line, align 8, !dbg !10460
  call void @llvm.dbg.declare(metadata %struct.linereq** %lr, metadata !10462, metadata !DIExpression()), !dbg !10463
  %2 = load %struct.line*, %struct.line** %line, align 8, !dbg !10464
  %req = getelementptr inbounds %struct.line, %struct.line* %2, i32 0, i32 1, !dbg !10465
  %3 = load %struct.linereq*, %struct.linereq** %req, align 8, !dbg !10465
  store %struct.linereq* %3, %struct.linereq** %lr, align 8, !dbg !10463
  %call = call i64 @ktime_get_ns() #9, !dbg !10466
  %4 = load %struct.line*, %struct.line** %line, align 8, !dbg !10467
  %timestamp_ns = getelementptr inbounds %struct.line, %struct.line* %4, i32 0, i32 4, !dbg !10468
  store i64 %call, i64* %timestamp_ns, align 8, !dbg !10469
  %5 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10470
  %num_lines = getelementptr inbounds %struct.linereq, %struct.linereq* %5, i32 0, i32 2, !dbg !10471
  %6 = load i32, i32* %num_lines, align 8, !dbg !10471
  %cmp = icmp ne i32 %6, 1, !dbg !10472
  br i1 %cmp, label %if.then, label %if.end, !dbg !10473

if.then:                                          ; preds = %entry
  %7 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10474
  %seqno = getelementptr inbounds %struct.linereq, %struct.linereq* %7, i32 0, i32 6, !dbg !10475
  store %struct.atomic_t* %seqno, %struct.atomic_t** %v.addr.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10476
  %9 = bitcast %struct.atomic_t* %8 to i8*, !dbg !10476
  store i8* %9, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %10 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10477
  %11 = load i64, i64* %size.addr.i.i, align 8, !dbg !10478
  %conv.i.i = trunc i64 %11 to i32, !dbg !10478
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %10, i32 %conv.i.i) #11, !dbg !10479
  %12 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10480
  %13 = load i64, i64* %size.addr.i.i, align 8, !dbg !10480
  call void @kcsan_check_access(i8* %12, i64 %13, i32 7) #11, !dbg !10480
  %14 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10481
  store %struct.atomic_t* %14, %struct.atomic_t** %v.addr.i1.i, align 8
  %15 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !10482
  store i32 1, i32* %i.addr.i.i.i, align 4
  store %struct.atomic_t* %15, %struct.atomic_t** %v.addr.i.i.i, align 8
  %16 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !10483
  %17 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !10449
  store i32 %17, i32* %__ret.i.i.i, align 4, !dbg !10449
  %18 = load i32, i32* %__ret.i.i.i, align 4, !dbg !10449
  %19 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !10449
  %counter.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %19, i32 0, i32 0, !dbg !10449
  %20 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i.i, i32 %18, i32* %counter.i.i.i) #6, !dbg !10449, !srcloc !9676
  store i32 %20, i32* %__ret.i.i.i, align 4, !dbg !10449
  %21 = load i32, i32* %__ret.i.i.i, align 4, !dbg !10449
  store i32 %21, i32* %tmp.i.i.i, align 4, !dbg !10449
  %22 = load i32, i32* %tmp.i.i.i, align 4, !dbg !10449
  %add.i.i.i = add i32 %16, %22, !dbg !10484
  %23 = load %struct.line*, %struct.line** %line, align 8, !dbg !10485
  %req_seqno = getelementptr inbounds %struct.line, %struct.line* %23, i32 0, i32 5, !dbg !10486
  store i32 %add.i.i.i, i32* %req_seqno, align 8, !dbg !10487
  br label %if.end, !dbg !10485

if.end:                                           ; preds = %if.then, %entry
  ret i32 2, !dbg !10488
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edge_irq_thread(i32 %irq, i8* %p) #0 !dbg !10489 {
entry:
  %i.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i, metadata !9543, metadata !DIExpression()), !dbg !10490
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !9556, metadata !DIExpression()), !dbg !10497
  %__ret.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i.i, metadata !9558, metadata !DIExpression()), !dbg !10498
  %tmp.i.i.i = alloca i32, align 4
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !9561, metadata !DIExpression()), !dbg !10499
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6964, metadata !DIExpression()), !dbg !10500
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6968, metadata !DIExpression()), !dbg !10502
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !9566, metadata !DIExpression()), !dbg !10503
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %line = alloca %struct.line*, align 8
  %lr = alloca %struct.linereq*, align 8
  %le = alloca %struct.gpio_v2_line_event, align 8
  %level = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10504, metadata !DIExpression()), !dbg !10505
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !10506, metadata !DIExpression()), !dbg !10507
  call void @llvm.dbg.declare(metadata %struct.line** %line, metadata !10508, metadata !DIExpression()), !dbg !10509
  %0 = load i8*, i8** %p.addr, align 8, !dbg !10510
  %1 = bitcast i8* %0 to %struct.line*, !dbg !10510
  store %struct.line* %1, %struct.line** %line, align 8, !dbg !10509
  call void @llvm.dbg.declare(metadata %struct.linereq** %lr, metadata !10511, metadata !DIExpression()), !dbg !10512
  %2 = load %struct.line*, %struct.line** %line, align 8, !dbg !10513
  %req = getelementptr inbounds %struct.line, %struct.line* %2, i32 0, i32 1, !dbg !10514
  %3 = load %struct.linereq*, %struct.linereq** %req, align 8, !dbg !10514
  store %struct.linereq* %3, %struct.linereq** %lr, align 8, !dbg !10512
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_event* %le, metadata !10515, metadata !DIExpression()), !dbg !10516
  %4 = bitcast %struct.gpio_v2_line_event* %le to i8*, !dbg !10517
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 48, i1 false), !dbg !10517
  %5 = load %struct.line*, %struct.line** %line, align 8, !dbg !10518
  %timestamp_ns = getelementptr inbounds %struct.line, %struct.line* %5, i32 0, i32 4, !dbg !10519
  %6 = load i64, i64* %timestamp_ns, align 8, !dbg !10519
  %tobool = icmp ne i64 %6, 0, !dbg !10518
  br i1 %tobool, label %if.then, label %if.else, !dbg !10520

if.then:                                          ; preds = %entry
  %7 = load %struct.line*, %struct.line** %line, align 8, !dbg !10521
  %timestamp_ns1 = getelementptr inbounds %struct.line, %struct.line* %7, i32 0, i32 4, !dbg !10523
  %8 = load i64, i64* %timestamp_ns1, align 8, !dbg !10523
  %timestamp_ns2 = getelementptr inbounds %struct.gpio_v2_line_event, %struct.gpio_v2_line_event* %le, i32 0, i32 0, !dbg !10524
  store i64 %8, i64* %timestamp_ns2, align 8, !dbg !10525
  br label %if.end6, !dbg !10526

if.else:                                          ; preds = %entry
  %call = call i64 @ktime_get_ns() #9, !dbg !10527
  %timestamp_ns3 = getelementptr inbounds %struct.gpio_v2_line_event, %struct.gpio_v2_line_event* %le, i32 0, i32 0, !dbg !10528
  store i64 %call, i64* %timestamp_ns3, align 8, !dbg !10529
  %9 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10530
  %num_lines = getelementptr inbounds %struct.linereq, %struct.linereq* %9, i32 0, i32 2, !dbg !10531
  %10 = load i32, i32* %num_lines, align 8, !dbg !10531
  %cmp = icmp ne i32 %10, 1, !dbg !10532
  br i1 %cmp, label %if.then4, label %if.end, !dbg !10533

if.then4:                                         ; preds = %if.else
  %11 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10534
  %seqno = getelementptr inbounds %struct.linereq, %struct.linereq* %11, i32 0, i32 6, !dbg !10535
  store %struct.atomic_t* %seqno, %struct.atomic_t** %v.addr.i, align 8
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10536
  %13 = bitcast %struct.atomic_t* %12 to i8*, !dbg !10536
  store i8* %13, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %14 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10537
  %15 = load i64, i64* %size.addr.i.i, align 8, !dbg !10538
  %conv.i.i = trunc i64 %15 to i32, !dbg !10538
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %14, i32 %conv.i.i) #11, !dbg !10539
  %16 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10540
  %17 = load i64, i64* %size.addr.i.i, align 8, !dbg !10540
  call void @kcsan_check_access(i8* %16, i64 %17, i32 7) #11, !dbg !10540
  %18 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10541
  store %struct.atomic_t* %18, %struct.atomic_t** %v.addr.i1.i, align 8
  %19 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !10542
  store i32 1, i32* %i.addr.i.i.i, align 4
  store %struct.atomic_t* %19, %struct.atomic_t** %v.addr.i.i.i, align 8
  %20 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !10543
  %21 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !10498
  store i32 %21, i32* %__ret.i.i.i, align 4, !dbg !10498
  %22 = load i32, i32* %__ret.i.i.i, align 4, !dbg !10498
  %23 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !10498
  %counter.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %23, i32 0, i32 0, !dbg !10498
  %24 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i.i, i32 %22, i32* %counter.i.i.i) #6, !dbg !10498, !srcloc !9676
  store i32 %24, i32* %__ret.i.i.i, align 4, !dbg !10498
  %25 = load i32, i32* %__ret.i.i.i, align 4, !dbg !10498
  store i32 %25, i32* %tmp.i.i.i, align 4, !dbg !10498
  %26 = load i32, i32* %tmp.i.i.i, align 4, !dbg !10498
  %add.i.i.i = add i32 %20, %26, !dbg !10544
  %27 = load %struct.line*, %struct.line** %line, align 8, !dbg !10545
  %req_seqno = getelementptr inbounds %struct.line, %struct.line* %27, i32 0, i32 5, !dbg !10546
  store i32 %add.i.i.i, i32* %req_seqno, align 8, !dbg !10547
  br label %if.end, !dbg !10545

if.end:                                           ; preds = %if.then4, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  %28 = load %struct.line*, %struct.line** %line, align 8, !dbg !10548
  %timestamp_ns7 = getelementptr inbounds %struct.line, %struct.line* %28, i32 0, i32 4, !dbg !10549
  store i64 0, i64* %timestamp_ns7, align 8, !dbg !10550
  %29 = load %struct.line*, %struct.line** %line, align 8, !dbg !10551
  %eflags = getelementptr inbounds %struct.line, %struct.line* %29, i32 0, i32 3, !dbg !10553
  %30 = load i64, i64* %eflags, align 8, !dbg !10553
  %cmp8 = icmp eq i64 %30, 48, !dbg !10554
  br i1 %cmp8, label %if.then9, label %if.else16, !dbg !10555

if.then9:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i32* %level, metadata !10556, metadata !DIExpression()), !dbg !10558
  %31 = load %struct.line*, %struct.line** %line, align 8, !dbg !10559
  %desc = getelementptr inbounds %struct.line, %struct.line* %31, i32 0, i32 0, !dbg !10560
  %32 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !10560
  %call10 = call i32 @gpiod_get_value_cansleep(%struct.gpio_desc* %32) #9, !dbg !10561
  store i32 %call10, i32* %level, align 4, !dbg !10558
  %33 = load i32, i32* %level, align 4, !dbg !10562
  %tobool11 = icmp ne i32 %33, 0, !dbg !10562
  br i1 %tobool11, label %if.then12, label %if.else13, !dbg !10564

if.then12:                                        ; preds = %if.then9
  %id = getelementptr inbounds %struct.gpio_v2_line_event, %struct.gpio_v2_line_event* %le, i32 0, i32 1, !dbg !10565
  store i32 1, i32* %id, align 8, !dbg !10566
  br label %if.end15, !dbg !10567

if.else13:                                        ; preds = %if.then9
  %id14 = getelementptr inbounds %struct.gpio_v2_line_event, %struct.gpio_v2_line_event* %le, i32 0, i32 1, !dbg !10568
  store i32 2, i32* %id14, align 8, !dbg !10569
  br label %if.end15

if.end15:                                         ; preds = %if.else13, %if.then12
  br label %if.end29, !dbg !10570

if.else16:                                        ; preds = %if.end6
  %34 = load %struct.line*, %struct.line** %line, align 8, !dbg !10571
  %eflags17 = getelementptr inbounds %struct.line, %struct.line* %34, i32 0, i32 3, !dbg !10573
  %35 = load i64, i64* %eflags17, align 8, !dbg !10573
  %cmp18 = icmp eq i64 %35, 16, !dbg !10574
  br i1 %cmp18, label %if.then19, label %if.else21, !dbg !10575

if.then19:                                        ; preds = %if.else16
  %id20 = getelementptr inbounds %struct.gpio_v2_line_event, %struct.gpio_v2_line_event* %le, i32 0, i32 1, !dbg !10576
  store i32 1, i32* %id20, align 8, !dbg !10578
  br label %if.end28, !dbg !10579

if.else21:                                        ; preds = %if.else16
  %36 = load %struct.line*, %struct.line** %line, align 8, !dbg !10580
  %eflags22 = getelementptr inbounds %struct.line, %struct.line* %36, i32 0, i32 3, !dbg !10582
  %37 = load i64, i64* %eflags22, align 8, !dbg !10582
  %cmp23 = icmp eq i64 %37, 32, !dbg !10583
  br i1 %cmp23, label %if.then24, label %if.else26, !dbg !10584

if.then24:                                        ; preds = %if.else21
  %id25 = getelementptr inbounds %struct.gpio_v2_line_event, %struct.gpio_v2_line_event* %le, i32 0, i32 1, !dbg !10585
  store i32 2, i32* %id25, align 8, !dbg !10587
  br label %if.end27, !dbg !10588

if.else26:                                        ; preds = %if.else21
  store i32 0, i32* %retval, align 4, !dbg !10589
  br label %return, !dbg !10589

if.end27:                                         ; preds = %if.then24
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then19
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end15
  %38 = load %struct.line*, %struct.line** %line, align 8, !dbg !10591
  %line_seqno = getelementptr inbounds %struct.line, %struct.line* %38, i32 0, i32 6, !dbg !10592
  %39 = load i32, i32* %line_seqno, align 4, !dbg !10593
  %inc = add i32 %39, 1, !dbg !10593
  store i32 %inc, i32* %line_seqno, align 4, !dbg !10593
  %40 = load %struct.line*, %struct.line** %line, align 8, !dbg !10594
  %line_seqno30 = getelementptr inbounds %struct.line, %struct.line* %40, i32 0, i32 6, !dbg !10595
  %41 = load i32, i32* %line_seqno30, align 4, !dbg !10595
  %line_seqno31 = getelementptr inbounds %struct.gpio_v2_line_event, %struct.gpio_v2_line_event* %le, i32 0, i32 4, !dbg !10596
  store i32 %41, i32* %line_seqno31, align 4, !dbg !10597
  %42 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10598
  %num_lines32 = getelementptr inbounds %struct.linereq, %struct.linereq* %42, i32 0, i32 2, !dbg !10599
  %43 = load i32, i32* %num_lines32, align 8, !dbg !10599
  %cmp33 = icmp eq i32 %43, 1, !dbg !10600
  br i1 %cmp33, label %cond.true, label %cond.false, !dbg !10601

cond.true:                                        ; preds = %if.end29
  %line_seqno34 = getelementptr inbounds %struct.gpio_v2_line_event, %struct.gpio_v2_line_event* %le, i32 0, i32 4, !dbg !10602
  %44 = load i32, i32* %line_seqno34, align 4, !dbg !10602
  br label %cond.end, !dbg !10601

cond.false:                                       ; preds = %if.end29
  %45 = load %struct.line*, %struct.line** %line, align 8, !dbg !10603
  %req_seqno35 = getelementptr inbounds %struct.line, %struct.line* %45, i32 0, i32 5, !dbg !10604
  %46 = load i32, i32* %req_seqno35, align 8, !dbg !10604
  br label %cond.end, !dbg !10601

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %44, %cond.true ], [ %46, %cond.false ], !dbg !10601
  %seqno36 = getelementptr inbounds %struct.gpio_v2_line_event, %struct.gpio_v2_line_event* %le, i32 0, i32 3, !dbg !10605
  store i32 %cond, i32* %seqno36, align 8, !dbg !10606
  %47 = load %struct.line*, %struct.line** %line, align 8, !dbg !10607
  %desc37 = getelementptr inbounds %struct.line, %struct.line* %47, i32 0, i32 0, !dbg !10608
  %48 = load %struct.gpio_desc*, %struct.gpio_desc** %desc37, align 8, !dbg !10608
  %call38 = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %48) #9, !dbg !10609
  %offset = getelementptr inbounds %struct.gpio_v2_line_event, %struct.gpio_v2_line_event* %le, i32 0, i32 2, !dbg !10610
  store i32 %call38, i32* %offset, align 4, !dbg !10611
  %49 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10612
  call void @linereq_put_event(%struct.linereq* %49, %struct.gpio_v2_line_event* %le) #9, !dbg !10613
  store i32 1, i32* %retval, align 4, !dbg !10614
  br label %return, !dbg !10614

return:                                           ; preds = %cond.end, %if.else26
  %50 = load i32, i32* %retval, align 4, !dbg !10615
  ret i32 %50, !dbg !10615
}

; Function Attrs: noredzone
declare dso_local i32 @gpiod_set_debounce(%struct.gpio_desc*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #0 !dbg !10616 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10619, metadata !DIExpression()), !dbg !10620
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !10621, metadata !DIExpression()), !dbg !10622
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !10623, metadata !DIExpression()), !dbg !10624
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10625, metadata !DIExpression()), !dbg !10626
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !10627, metadata !DIExpression()), !dbg !10628
  %0 = load i32, i32* %irq.addr, align 4, !dbg !10629
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !10630
  %2 = load i64, i64* %flags.addr, align 8, !dbg !10631
  %3 = load i8*, i8** %name.addr, align 8, !dbg !10632
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !10633
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #9, !dbg !10634
  ret i32 %call, !dbg !10635
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @debounce_irq_handler(i32 %irq, i8* %p) #0 !dbg !10636 {
entry:
  %retval.i = alloca i64, align 8
  %u.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i, metadata !10637, metadata !DIExpression()), !dbg !10642
  %irq.addr = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %line = alloca %struct.line*, align 8
  %tmp = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10644, metadata !DIExpression()), !dbg !10645
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !10646, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.declare(metadata %struct.line** %line, metadata !10648, metadata !DIExpression()), !dbg !10649
  %0 = load i8*, i8** %p.addr, align 8, !dbg !10650
  %1 = bitcast i8* %0 to %struct.line*, !dbg !10650
  store %struct.line* %1, %struct.line** %line, align 8, !dbg !10649
  %2 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_wq, align 8, !dbg !10651
  %3 = load %struct.line*, %struct.line** %line, align 8, !dbg !10652
  %work = getelementptr inbounds %struct.line, %struct.line* %3, i32 0, i32 7, !dbg !10653
  br label %do.body, !dbg !10654

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10656

do.end:                                           ; preds = %do.body
  %4 = load %struct.line*, %struct.line** %line, align 8, !dbg !10654
  %desc = getelementptr inbounds %struct.line, %struct.line* %4, i32 0, i32 0, !dbg !10654
  %5 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !10654
  %debounce_period_us = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %5, i32 0, i32 4, !dbg !10654
  %6 = load volatile i32, i32* %debounce_period_us, align 8, !dbg !10654
  store i32 %6, i32* %tmp, align 4, !dbg !10656
  %7 = load i32, i32* %tmp, align 4, !dbg !10654
  store i32 %7, i32* %u.addr.i, align 4
  %8 = load i32, i32* %u.addr.i, align 4, !dbg !10658
  %9 = call i1 @llvm.is.constant.i32(i32 %8) #6, !dbg !10660
  br i1 %9, label %if.then.i, label %if.else.i, !dbg !10661

if.then.i:                                        ; preds = %do.end
  %10 = load i32, i32* %u.addr.i, align 4, !dbg !10662
  %call.i = call i32 @jiffies_to_usecs(i64 4611686018427387902) #11, !dbg !10665
  %cmp.i = icmp ugt i32 %10, %call.i, !dbg !10666
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !10667

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !10668
  br label %usecs_to_jiffies.exit, !dbg !10668

if.end.i:                                         ; preds = %if.then.i
  %11 = load i32, i32* %u.addr.i, align 4, !dbg !10669
  %call2.i = call i64 @_usecs_to_jiffies(i32 %11) #11, !dbg !10670
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !10671
  br label %usecs_to_jiffies.exit, !dbg !10671

if.else.i:                                        ; preds = %do.end
  %12 = load i32, i32* %u.addr.i, align 4, !dbg !10672
  %call3.i = call i64 @__usecs_to_jiffies(i32 %12) #11, !dbg !10674
  store i64 %call3.i, i64* %retval.i, align 8, !dbg !10675
  br label %usecs_to_jiffies.exit, !dbg !10675

usecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %13 = load i64, i64* %retval.i, align 8, !dbg !10676
  %call1 = call zeroext i1 @mod_delayed_work(%struct.workqueue_struct* %2, %struct.delayed_work* %work, i64 %13) #9, !dbg !10677
  ret i32 1, !dbg !10678
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mod_delayed_work(%struct.workqueue_struct* %wq, %struct.delayed_work* %dwork, i64 %delay) #0 !dbg !10679 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %dwork.addr = alloca %struct.delayed_work*, align 8
  %delay.addr = alloca i64, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !10683, metadata !DIExpression()), !dbg !10684
  store %struct.delayed_work* %dwork, %struct.delayed_work** %dwork.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.delayed_work** %dwork.addr, metadata !10685, metadata !DIExpression()), !dbg !10686
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !10687, metadata !DIExpression()), !dbg !10688
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !10689
  %1 = load %struct.delayed_work*, %struct.delayed_work** %dwork.addr, align 8, !dbg !10690
  %2 = load i64, i64* %delay.addr, align 8, !dbg !10691
  %call = call zeroext i1 @mod_delayed_work_on(i32 1, %struct.workqueue_struct* %0, %struct.delayed_work* %1, i64 %2) #9, !dbg !10692
  ret i1 %call, !dbg !10693
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @mod_delayed_work_on(i32, %struct.workqueue_struct*, %struct.delayed_work*, i64) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #3

; Function Attrs: noredzone
declare dso_local i32 @jiffies_to_usecs(i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_usecs_to_jiffies(i32 %u) #0 !dbg !10694 {
entry:
  %u.addr = alloca i32, align 4
  store i32 %u, i32* %u.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr, metadata !10695, metadata !DIExpression()), !dbg !10696
  %0 = load i32, i32* %u.addr, align 4, !dbg !10697
  %conv = zext i32 %0 to i64, !dbg !10697
  %add = add i64 %conv, 4000, !dbg !10698
  %sub = sub i64 %add, 1, !dbg !10699
  %div = sdiv i64 %sub, 4000, !dbg !10700
  ret i64 %div, !dbg !10701
}

; Function Attrs: noredzone
declare dso_local i64 @__usecs_to_jiffies(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @linereq_read(%struct.file* %file, i8* %buf, i64 %count, i64* %f_ps) #0 !dbg !10702 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !4609, metadata !DIExpression()), !dbg !10703
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !4626, metadata !DIExpression()), !dbg !10708
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !4628, metadata !DIExpression()), !dbg !10709
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !4630, metadata !DIExpression()), !dbg !10710
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !4632, metadata !DIExpression()), !dbg !10711
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !4636, metadata !DIExpression()), !dbg !10712
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !4638, metadata !DIExpression()), !dbg !10713
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !4640, metadata !DIExpression()), !dbg !10714
  %lock.addr.i86 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i86, metadata !4654, metadata !DIExpression()), !dbg !10715
  %lock.addr.i84 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i84, metadata !4654, metadata !DIExpression()), !dbg !10717
  %pscr_ret__.i79 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i79, metadata !4698, metadata !DIExpression()), !dbg !10723
  %__vpp_verify.i80 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i80, metadata !4707, metadata !DIExpression()), !dbg !10726
  %pfo_val__.i81 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i81, metadata !4710, metadata !DIExpression()), !dbg !10727
  %tmp.i82 = alloca %struct.task_struct*, align 8
  %tmp1.i83 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !4698, metadata !DIExpression()), !dbg !10728
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !4707, metadata !DIExpression()), !dbg !10730
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !4710, metadata !DIExpression()), !dbg !10731
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %lock.addr.i77 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i77, metadata !4654, metadata !DIExpression()), !dbg !10732
  %lock.addr.i75 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i75, metadata !4654, metadata !DIExpression()), !dbg !10736
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4725, metadata !DIExpression()), !dbg !10740
  %retval = alloca i64, align 8
  %file.addr = alloca %struct.file*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %f_ps.addr = alloca i64*, align 8
  %lr = alloca %struct.linereq*, align 8
  %le = alloca %struct.gpio_v2_line_event, align 8
  %bytes_read = alloca i64, align 8
  %ret = alloca i32, align 4
  %__tmpq = alloca %struct.anon.73*, align 8
  %tmp = alloca i32, align 4
  %__tmpq14 = alloca %struct.anon.73*, align 8
  %tmp16 = alloca i32, align 4
  %__ret = alloca i32, align 4
  %__wait = alloca %struct.wait_queue_entry, align 8
  %__tmpq33 = alloca %struct.anon.73*, align 8
  %tmp35 = alloca i32, align 4
  %tmp46 = alloca i32, align 4
  %__tmp = alloca %struct.anon.73*, align 8
  %__buf = alloca %struct.gpio_v2_line_event*, align 8
  %__n = alloca i64, align 8
  %__recsize = alloca i64, align 8
  %__kfifo = alloca %struct.__kfifo*, align 8
  %tmp56 = alloca i32, align 4
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !10742, metadata !DIExpression()), !dbg !10743
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10744, metadata !DIExpression()), !dbg !10745
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10746, metadata !DIExpression()), !dbg !10747
  store i64* %f_ps, i64** %f_ps.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %f_ps.addr, metadata !10748, metadata !DIExpression()), !dbg !10749
  call void @llvm.dbg.declare(metadata %struct.linereq** %lr, metadata !10750, metadata !DIExpression()), !dbg !10751
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !10752
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !10753
  %1 = load i8*, i8** %private_data, align 8, !dbg !10753
  %2 = bitcast i8* %1 to %struct.linereq*, !dbg !10752
  store %struct.linereq* %2, %struct.linereq** %lr, align 8, !dbg !10751
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_event* %le, metadata !10754, metadata !DIExpression()), !dbg !10755
  call void @llvm.dbg.declare(metadata i64* %bytes_read, metadata !10756, metadata !DIExpression()), !dbg !10757
  store i64 0, i64* %bytes_read, align 8, !dbg !10757
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10758, metadata !DIExpression()), !dbg !10759
  %3 = load i64, i64* %count.addr, align 8, !dbg !10760
  %cmp = icmp ult i64 %3, 48, !dbg !10762
  br i1 %cmp, label %if.then, label %if.end, !dbg !10763

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !10764
  br label %return, !dbg !10764

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !10765

do.body:                                          ; preds = %do.cond70, %if.end
  %4 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10766
  %wait = getelementptr inbounds %struct.linereq, %struct.linereq* %4, i32 0, i32 3, !dbg !10767
  %lock = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait, i32 0, i32 0, !dbg !10768
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10769, !srcloc !4755
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10770
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !10770
  %rlock.i = bitcast %union.anon.1* %6 to %struct.raw_spinlock*, !dbg !10770
  call void @llvm.dbg.declare(metadata %struct.anon.73** %__tmpq, metadata !10771, metadata !DIExpression()), !dbg !10773
  %7 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10773
  %events = getelementptr inbounds %struct.linereq, %struct.linereq* %7, i32 0, i32 5, !dbg !10773
  store %struct.anon.73* %events, %struct.anon.73** %__tmpq, align 8, !dbg !10773
  %8 = load %struct.anon.73*, %struct.anon.73** %__tmpq, align 8, !dbg !10773
  %9 = getelementptr inbounds %struct.anon.73, %struct.anon.73* %8, i32 0, i32 0, !dbg !10773
  %kfifo = bitcast %union.anon.74* %9 to %struct.__kfifo*, !dbg !10773
  %in = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo, i32 0, i32 0, !dbg !10773
  %10 = load i32, i32* %in, align 8, !dbg !10773
  %11 = load %struct.anon.73*, %struct.anon.73** %__tmpq, align 8, !dbg !10773
  %12 = getelementptr inbounds %struct.anon.73, %struct.anon.73* %11, i32 0, i32 0, !dbg !10773
  %kfifo1 = bitcast %union.anon.74* %12 to %struct.__kfifo*, !dbg !10773
  %out = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo1, i32 0, i32 1, !dbg !10773
  %13 = load i32, i32* %out, align 4, !dbg !10773
  %cmp2 = icmp eq i32 %10, %13, !dbg !10773
  %conv = zext i1 %cmp2 to i32, !dbg !10773
  store i32 %conv, i32* %tmp, align 4, !dbg !10773
  %14 = load i32, i32* %tmp, align 4, !dbg !10773
  %tobool = icmp ne i32 %14, 0, !dbg !10774
  br i1 %tobool, label %if.then3, label %if.end53, !dbg !10775

if.then3:                                         ; preds = %do.body
  %15 = load i64, i64* %bytes_read, align 8, !dbg !10776
  %tobool4 = icmp ne i64 %15, 0, !dbg !10776
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !10777

if.then5:                                         ; preds = %if.then3
  %16 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10778
  %wait6 = getelementptr inbounds %struct.linereq, %struct.linereq* %16, i32 0, i32 3, !dbg !10779
  %lock7 = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait6, i32 0, i32 0, !dbg !10780
  store %struct.spinlock* %lock7, %struct.spinlock** %lock.addr.i75, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10781, !srcloc !4771
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i75, align 8, !dbg !10782
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !10782
  %rlock.i76 = bitcast %union.anon.1* %18 to %struct.raw_spinlock*, !dbg !10782
  %19 = load i64, i64* %bytes_read, align 8, !dbg !10783
  store i64 %19, i64* %retval, align 8, !dbg !10784
  br label %return, !dbg !10784

if.end8:                                          ; preds = %if.then3
  %20 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !10785
  %f_flags = getelementptr inbounds %struct.file, %struct.file* %20, i32 0, i32 7, !dbg !10786
  %21 = load i32, i32* %f_flags, align 8, !dbg !10786
  %and = and i32 %21, 2048, !dbg !10787
  %tobool9 = icmp ne i32 %and, 0, !dbg !10787
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !10788

if.then10:                                        ; preds = %if.end8
  %22 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10789
  %wait11 = getelementptr inbounds %struct.linereq, %struct.linereq* %22, i32 0, i32 3, !dbg !10790
  %lock12 = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait11, i32 0, i32 0, !dbg !10791
  store %struct.spinlock* %lock12, %struct.spinlock** %lock.addr.i77, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10792, !srcloc !4771
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i77, align 8, !dbg !10793
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !10793
  %rlock.i78 = bitcast %union.anon.1* %24 to %struct.raw_spinlock*, !dbg !10793
  store i64 -11, i64* %retval, align 8, !dbg !10794
  br label %return, !dbg !10794

if.end13:                                         ; preds = %if.end8
  call void @llvm.dbg.declare(metadata %struct.anon.73** %__tmpq14, metadata !10795, metadata !DIExpression()), !dbg !10797
  %25 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10797
  %events15 = getelementptr inbounds %struct.linereq, %struct.linereq* %25, i32 0, i32 5, !dbg !10797
  store %struct.anon.73* %events15, %struct.anon.73** %__tmpq14, align 8, !dbg !10797
  %26 = load %struct.anon.73*, %struct.anon.73** %__tmpq14, align 8, !dbg !10797
  %27 = getelementptr inbounds %struct.anon.73, %struct.anon.73* %26, i32 0, i32 0, !dbg !10797
  %kfifo17 = bitcast %union.anon.74* %27 to %struct.__kfifo*, !dbg !10797
  %in18 = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo17, i32 0, i32 0, !dbg !10797
  %28 = load i32, i32* %in18, align 8, !dbg !10797
  %29 = load %struct.anon.73*, %struct.anon.73** %__tmpq14, align 8, !dbg !10797
  %30 = getelementptr inbounds %struct.anon.73, %struct.anon.73* %29, i32 0, i32 0, !dbg !10797
  %kfifo19 = bitcast %union.anon.74* %30 to %struct.__kfifo*, !dbg !10797
  %out20 = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo19, i32 0, i32 1, !dbg !10797
  %31 = load i32, i32* %out20, align 4, !dbg !10797
  %cmp21 = icmp eq i32 %28, %31, !dbg !10797
  %conv22 = zext i1 %cmp21 to i32, !dbg !10797
  store i32 %conv22, i32* %tmp16, align 4, !dbg !10797
  %32 = load i32, i32* %tmp16, align 4, !dbg !10797
  %tobool23 = icmp ne i32 %32, 0, !dbg !10798
  br i1 %tobool23, label %cond.false, label %cond.true, !dbg !10798

cond.true:                                        ; preds = %if.end13
  br label %cond.end, !dbg !10798

cond.false:                                       ; preds = %if.end13
  call void @llvm.dbg.declare(metadata i32* %__ret, metadata !10799, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wait, metadata !10801, metadata !DIExpression()), !dbg !10800
  %flags = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %__wait, i32 0, i32 0, !dbg !10800
  store i32 0, i32* %flags, align 8, !dbg !10800
  %private = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %__wait, i32 0, i32 1, !dbg !10800
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !10730
  %33 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !10730
  %34 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #10, !dbg !10731, !srcloc !4804
  store i64 %34, i64* %pfo_val__.i, align 8, !dbg !10731
  %35 = load i64, i64* %pfo_val__.i, align 8, !dbg !10731
  %36 = inttoptr i64 %35 to %struct.task_struct*, !dbg !10731
  store %struct.task_struct* %36, %struct.task_struct** %tmp.i, align 8, !dbg !10731
  %37 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !10731
  store %struct.task_struct* %37, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !10728
  %38 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !10728
  store %struct.task_struct* %38, %struct.task_struct** %tmp1.i, align 8, !dbg !10728
  %39 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !10728
  %40 = bitcast %struct.task_struct* %39 to i8*, !dbg !10800
  store i8* %40, i8** %private, align 8, !dbg !10800
  %func = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %__wait, i32 0, i32 2, !dbg !10800
  store i32 (%struct.wait_queue_entry*, i32, i32, i8*)* @autoremove_wake_function, i32 (%struct.wait_queue_entry*, i32, i32, i8*)** %func, align 8, !dbg !10800
  %entry24 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %__wait, i32 0, i32 3, !dbg !10800
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry24, i32 0, i32 0, !dbg !10800
  %entry25 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %__wait, i32 0, i32 3, !dbg !10800
  store %struct.list_head* %entry25, %struct.list_head** %next, align 8, !dbg !10800
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %entry24, i32 0, i32 1, !dbg !10800
  %entry26 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %__wait, i32 0, i32 3, !dbg !10800
  store %struct.list_head* %entry26, %struct.list_head** %prev, align 8, !dbg !10800
  br label %do.body27, !dbg !10800

do.body27:                                        ; preds = %do.cond, %cond.false
  %41 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10802
  %wait28 = getelementptr inbounds %struct.linereq, %struct.linereq* %41, i32 0, i32 3, !dbg !10802
  %call29 = call i32 @do_wait_intr(%struct.wait_queue_head* %wait28, %struct.wait_queue_entry* %__wait) #9, !dbg !10802
  store i32 %call29, i32* %__ret, align 4, !dbg !10802
  %42 = load i32, i32* %__ret, align 4, !dbg !10804
  %tobool30 = icmp ne i32 %42, 0, !dbg !10804
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !10802

if.then31:                                        ; preds = %do.body27
  br label %do.end, !dbg !10804

if.end32:                                         ; preds = %do.body27
  br label %do.cond, !dbg !10802

do.cond:                                          ; preds = %if.end32
  call void @llvm.dbg.declare(metadata %struct.anon.73** %__tmpq33, metadata !10806, metadata !DIExpression()), !dbg !10808
  %43 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10808
  %events34 = getelementptr inbounds %struct.linereq, %struct.linereq* %43, i32 0, i32 5, !dbg !10808
  store %struct.anon.73* %events34, %struct.anon.73** %__tmpq33, align 8, !dbg !10808
  %44 = load %struct.anon.73*, %struct.anon.73** %__tmpq33, align 8, !dbg !10808
  %45 = getelementptr inbounds %struct.anon.73, %struct.anon.73* %44, i32 0, i32 0, !dbg !10808
  %kfifo36 = bitcast %union.anon.74* %45 to %struct.__kfifo*, !dbg !10808
  %in37 = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo36, i32 0, i32 0, !dbg !10808
  %46 = load i32, i32* %in37, align 8, !dbg !10808
  %47 = load %struct.anon.73*, %struct.anon.73** %__tmpq33, align 8, !dbg !10808
  %48 = getelementptr inbounds %struct.anon.73, %struct.anon.73* %47, i32 0, i32 0, !dbg !10808
  %kfifo38 = bitcast %union.anon.74* %48 to %struct.__kfifo*, !dbg !10808
  %out39 = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo38, i32 0, i32 1, !dbg !10808
  %49 = load i32, i32* %out39, align 4, !dbg !10808
  %cmp40 = icmp eq i32 %46, %49, !dbg !10808
  %conv41 = zext i1 %cmp40 to i32, !dbg !10808
  store i32 %conv41, i32* %tmp35, align 4, !dbg !10808
  %50 = load i32, i32* %tmp35, align 4, !dbg !10808
  %tobool42 = icmp ne i32 %50, 0, !dbg !10800
  %lnot = xor i1 %tobool42, true, !dbg !10800
  %lnot43 = xor i1 %lnot, true, !dbg !10800
  br i1 %lnot43, label %do.body27, label %do.end, !dbg !10802, !llvm.loop !10809

do.end:                                           ; preds = %do.cond, %if.then31
  %51 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10800
  %wait44 = getelementptr inbounds %struct.linereq, %struct.linereq* %51, i32 0, i32 3, !dbg !10800
  call void @__remove_wait_queue(%struct.wait_queue_head* %wait44, %struct.wait_queue_entry* %__wait) #9, !dbg !10800
  store i8* null, i8** %__vpp_verify.i80, align 8, !dbg !10726
  %52 = load i8*, i8** %__vpp_verify.i80, align 8, !dbg !10726
  %53 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #10, !dbg !10727, !srcloc !4804
  store i64 %53, i64* %pfo_val__.i81, align 8, !dbg !10727
  %54 = load i64, i64* %pfo_val__.i81, align 8, !dbg !10727
  %55 = inttoptr i64 %54 to %struct.task_struct*, !dbg !10727
  store %struct.task_struct* %55, %struct.task_struct** %tmp.i82, align 8, !dbg !10727
  %56 = load %struct.task_struct*, %struct.task_struct** %tmp.i82, align 8, !dbg !10727
  store %struct.task_struct* %56, %struct.task_struct** %pscr_ret__.i79, align 8, !dbg !10723
  %57 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i79, align 8, !dbg !10723
  store %struct.task_struct* %57, %struct.task_struct** %tmp1.i83, align 8, !dbg !10723
  %58 = load %struct.task_struct*, %struct.task_struct** %tmp1.i83, align 8, !dbg !10723
  %state = getelementptr inbounds %struct.task_struct, %struct.task_struct* %58, i32 0, i32 1, !dbg !10800
  store volatile i64 0, i64* %state, align 16, !dbg !10800
  %59 = load i32, i32* %__ret, align 4, !dbg !10800
  store i32 %59, i32* %tmp46, align 4, !dbg !10800
  %60 = load i32, i32* %tmp46, align 4, !dbg !10800
  br label %cond.end, !dbg !10798

cond.end:                                         ; preds = %do.end, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %60, %do.end ], !dbg !10798
  store i32 %cond, i32* %ret, align 4, !dbg !10810
  %61 = load i32, i32* %ret, align 4, !dbg !10811
  %tobool47 = icmp ne i32 %61, 0, !dbg !10811
  br i1 %tobool47, label %if.then48, label %if.end52, !dbg !10812

if.then48:                                        ; preds = %cond.end
  %62 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10813
  %wait49 = getelementptr inbounds %struct.linereq, %struct.linereq* %62, i32 0, i32 3, !dbg !10814
  %lock50 = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait49, i32 0, i32 0, !dbg !10815
  store %struct.spinlock* %lock50, %struct.spinlock** %lock.addr.i84, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10816, !srcloc !4771
  %63 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i84, align 8, !dbg !10817
  %64 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %63, i32 0, i32 0, !dbg !10817
  %rlock.i85 = bitcast %union.anon.1* %64 to %struct.raw_spinlock*, !dbg !10817
  %65 = load i32, i32* %ret, align 4, !dbg !10818
  %conv51 = sext i32 %65 to i64, !dbg !10818
  store i64 %conv51, i64* %retval, align 8, !dbg !10819
  br label %return, !dbg !10819

if.end52:                                         ; preds = %cond.end
  br label %if.end53, !dbg !10820

if.end53:                                         ; preds = %if.end52, %do.body
  call void @llvm.dbg.declare(metadata %struct.anon.73** %__tmp, metadata !10821, metadata !DIExpression()), !dbg !10823
  %66 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10823
  %events54 = getelementptr inbounds %struct.linereq, %struct.linereq* %66, i32 0, i32 5, !dbg !10823
  store %struct.anon.73* %events54, %struct.anon.73** %__tmp, align 8, !dbg !10823
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_event** %__buf, metadata !10824, metadata !DIExpression()), !dbg !10823
  store %struct.gpio_v2_line_event* %le, %struct.gpio_v2_line_event** %__buf, align 8, !dbg !10823
  call void @llvm.dbg.declare(metadata i64* %__n, metadata !10825, metadata !DIExpression()), !dbg !10823
  store i64 1, i64* %__n, align 8, !dbg !10823
  call void @llvm.dbg.declare(metadata i64* %__recsize, metadata !10826, metadata !DIExpression()), !dbg !10823
  store i64 0, i64* %__recsize, align 8, !dbg !10823
  call void @llvm.dbg.declare(metadata %struct.__kfifo** %__kfifo, metadata !10827, metadata !DIExpression()), !dbg !10823
  %67 = load %struct.anon.73*, %struct.anon.73** %__tmp, align 8, !dbg !10823
  %68 = getelementptr inbounds %struct.anon.73, %struct.anon.73* %67, i32 0, i32 0, !dbg !10823
  %kfifo55 = bitcast %union.anon.74* %68 to %struct.__kfifo*, !dbg !10823
  store %struct.__kfifo* %kfifo55, %struct.__kfifo** %__kfifo, align 8, !dbg !10823
  %69 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo, align 8, !dbg !10823
  %70 = load %struct.gpio_v2_line_event*, %struct.gpio_v2_line_event** %__buf, align 8, !dbg !10823
  %71 = bitcast %struct.gpio_v2_line_event* %70 to i8*, !dbg !10823
  %72 = load i64, i64* %__n, align 8, !dbg !10823
  %conv57 = trunc i64 %72 to i32, !dbg !10823
  %call58 = call i32 @__kfifo_out(%struct.__kfifo* %69, i8* %71, i32 %conv57) #9, !dbg !10823
  store i32 %call58, i32* %tmp56, align 4, !dbg !10823
  %73 = load i32, i32* %tmp56, align 4, !dbg !10823
  %call59 = call i32 @__kfifo_uint_must_check_helper(i32 %73) #9, !dbg !10828
  store i32 %call59, i32* %ret, align 4, !dbg !10829
  %74 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10830
  %wait60 = getelementptr inbounds %struct.linereq, %struct.linereq* %74, i32 0, i32 3, !dbg !10831
  %lock61 = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait60, i32 0, i32 0, !dbg !10832
  store %struct.spinlock* %lock61, %struct.spinlock** %lock.addr.i86, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10833, !srcloc !4771
  %75 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i86, align 8, !dbg !10834
  %76 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %75, i32 0, i32 0, !dbg !10834
  %rlock.i87 = bitcast %union.anon.1* %76 to %struct.raw_spinlock*, !dbg !10834
  %77 = load i32, i32* %ret, align 4, !dbg !10835
  %cmp62 = icmp ne i32 %77, 1, !dbg !10837
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !10838

if.then64:                                        ; preds = %if.end53
  store i32 -5, i32* %ret, align 4, !dbg !10839
  br label %do.end74, !dbg !10841

if.end65:                                         ; preds = %if.end53
  %78 = load i8*, i8** %buf.addr, align 8, !dbg !10842
  %79 = load i64, i64* %bytes_read, align 8, !dbg !10843
  %add.ptr = getelementptr i8, i8* %78, i64 %79, !dbg !10844
  %80 = bitcast %struct.gpio_v2_line_event* %le to i8*, !dbg !10845
  store i8* %add.ptr, i8** %to.addr.i, align 8
  store i8* %80, i8** %from.addr.i, align 8
  store i64 48, i64* %n.addr.i, align 8
  %81 = load i8*, i8** %from.addr.i, align 8, !dbg !10846
  %82 = load i64, i64* %n.addr.i, align 8, !dbg !10846
  store i8* %81, i8** %addr.addr.i.i, align 8
  store i64 %82, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !10710
  %83 = load i32, i32* %sz.i.i, align 4, !dbg !10847
  %cmp.i.i = icmp sge i32 %83, 0, !dbg !10847
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !10847

land.rhs.i.i:                                     ; preds = %if.end65
  %84 = load i32, i32* %sz.i.i, align 4, !dbg !10847
  %conv.i.i = sext i32 %84 to i64, !dbg !10847
  %85 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10847
  %cmp1.i.i = icmp ult i64 %conv.i.i, %85, !dbg !10847
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end65
  %86 = phi i1 [ false, %if.end65 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !10848
  %lnot.i.i = xor i1 %86, true, !dbg !10847
  %lnot.ext.i.i = zext i1 %86 to i32, !dbg !10847
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10847
  br i1 %86, label %if.then.i.i, label %if.end10.i.i, !dbg !10849

if.then.i.i:                                      ; preds = %land.end.i.i
  %87 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10850
  %88 = call i1 @llvm.is.constant.i64(i64 %87) #6, !dbg !10851
  br i1 %88, label %if.else.i.i, label %if.then5.i.i, !dbg !10852

if.then5.i.i:                                     ; preds = %if.then.i.i
  %89 = load i32, i32* %sz.i.i, align 4, !dbg !10853
  %90 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10854
  call void @copy_overflow(i32 %89, i64 %90) #11, !dbg !10855
  br label %if.end9.i.i, !dbg !10855

if.else.i.i:                                      ; preds = %if.then.i.i
  %91 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10856
  %tobool6.i.i = trunc i8 %91 to i1, !dbg !10856
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !10857

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !10858
  br label %if.end.i.i, !dbg !10858

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !10859
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !10860
  br label %check_copy_size.exit.i, !dbg !10860

if.end10.i.i:                                     ; preds = %land.end.i.i
  %92 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10711
  %cmp11.i.i = icmp ugt i64 %92, 2147483647, !dbg !10711
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !10711
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !10711
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !10711
  %93 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10861
  %tobool17.i.i = icmp ne i32 %93, 0, !dbg !10861
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !10861
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !10861
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !10861
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !10711

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !10862, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !10863, !srcloc !4906
  br label %if.end31.i.i, !dbg !10864

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %94 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10711
  %tobool32.i.i = icmp ne i32 %94, 0, !dbg !10711
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !10711
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !10711
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !10711
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !10861
  %95 = load i64, i64* %tmp.i.i, align 8, !dbg !10711
  %tobool38.i.i = icmp ne i64 %95, 0, !dbg !10865
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !10866

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !10867
  br label %check_copy_size.exit.i, !dbg !10867

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %96 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !10868
  %97 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10869
  %98 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10870
  %tobool41.i.i = trunc i8 %98 to i1, !dbg !10870
  call void @check_object_size(i8* %96, i64 %97, i1 zeroext %tobool41.i.i) #11, !dbg !10871
  store i1 true, i1* %retval.i.i, align 1, !dbg !10872
  br label %check_copy_size.exit.i, !dbg !10872

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %99 = load i1, i1* %retval.i.i, align 1, !dbg !10873
  %lnot.i = xor i1 %99, true, !dbg !10846
  %lnot.ext.i = zext i1 %99 to i32, !dbg !10846
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !10846
  br i1 %99, label %if.then.i, label %copy_to_user.exit, !dbg !10874

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %100 = load i8*, i8** %to.addr.i, align 8, !dbg !10875
  %101 = load i8*, i8** %from.addr.i, align 8, !dbg !10876
  %102 = load i64, i64* %n.addr.i, align 8, !dbg !10877
  %call2.i = call i64 @_copy_to_user(i8* %100, i8* %101, i64 %102) #11, !dbg !10878
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !10879
  br label %copy_to_user.exit, !dbg !10880

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %103 = load i64, i64* %n.addr.i, align 8, !dbg !10881
  %tobool67 = icmp ne i64 %103, 0, !dbg !10882
  br i1 %tobool67, label %if.then68, label %if.end69, !dbg !10883

if.then68:                                        ; preds = %copy_to_user.exit
  store i64 -14, i64* %retval, align 8, !dbg !10884
  br label %return, !dbg !10884

if.end69:                                         ; preds = %copy_to_user.exit
  %104 = load i64, i64* %bytes_read, align 8, !dbg !10885
  %add = add i64 %104, 48, !dbg !10885
  store i64 %add, i64* %bytes_read, align 8, !dbg !10885
  br label %do.cond70, !dbg !10886

do.cond70:                                        ; preds = %if.end69
  %105 = load i64, i64* %count.addr, align 8, !dbg !10887
  %106 = load i64, i64* %bytes_read, align 8, !dbg !10888
  %add71 = add i64 %106, 48, !dbg !10889
  %cmp72 = icmp uge i64 %105, %add71, !dbg !10890
  br i1 %cmp72, label %do.body, label %do.end74, !dbg !10886, !llvm.loop !10891

do.end74:                                         ; preds = %do.cond70, %if.then64
  %107 = load i64, i64* %bytes_read, align 8, !dbg !10893
  store i64 %107, i64* %retval, align 8, !dbg !10894
  br label %return, !dbg !10894

return:                                           ; preds = %do.end74, %if.then68, %if.then48, %if.then10, %if.then5, %if.then
  %108 = load i64, i64* %retval, align 8, !dbg !10895
  ret i64 %108, !dbg !10895
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @linereq_poll(%struct.file* %file, %struct.poll_table_struct* %wait) #0 !dbg !10896 {
entry:
  %lock.addr.i11 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i11, metadata !4654, metadata !DIExpression()), !dbg !10897
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4725, metadata !DIExpression()), !dbg !10901
  %file.addr = alloca %struct.file*, align 8
  %wait.addr = alloca %struct.poll_table_struct*, align 8
  %lr = alloca %struct.linereq*, align 8
  %events = alloca i32, align 4
  %__ret = alloca i8, align 1
  %__tmpq = alloca %struct.anon.73*, align 8
  %tmp = alloca i32, align 4
  %tmp7 = alloca i8, align 1
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !10903, metadata !DIExpression()), !dbg !10904
  store %struct.poll_table_struct* %wait, %struct.poll_table_struct** %wait.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.poll_table_struct** %wait.addr, metadata !10905, metadata !DIExpression()), !dbg !10906
  call void @llvm.dbg.declare(metadata %struct.linereq** %lr, metadata !10907, metadata !DIExpression()), !dbg !10908
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !10909
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !10910
  %1 = load i8*, i8** %private_data, align 8, !dbg !10910
  %2 = bitcast i8* %1 to %struct.linereq*, !dbg !10909
  store %struct.linereq* %2, %struct.linereq** %lr, align 8, !dbg !10908
  call void @llvm.dbg.declare(metadata i32* %events, metadata !10911, metadata !DIExpression()), !dbg !10912
  store i32 0, i32* %events, align 4, !dbg !10912
  %3 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !10913
  %4 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10914
  %wait1 = getelementptr inbounds %struct.linereq, %struct.linereq* %4, i32 0, i32 3, !dbg !10915
  %5 = load %struct.poll_table_struct*, %struct.poll_table_struct** %wait.addr, align 8, !dbg !10916
  call void @poll_wait(%struct.file* %3, %struct.wait_queue_head* %wait1, %struct.poll_table_struct* %5) #9, !dbg !10917
  call void @llvm.dbg.declare(metadata i8* %__ret, metadata !10918, metadata !DIExpression()), !dbg !10919
  %6 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10919
  %wait2 = getelementptr inbounds %struct.linereq, %struct.linereq* %6, i32 0, i32 3, !dbg !10919
  %lock = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait2, i32 0, i32 0, !dbg !10919
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10920, !srcloc !4755
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10921
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !10921
  %rlock.i = bitcast %union.anon.1* %8 to %struct.raw_spinlock*, !dbg !10921
  call void @llvm.dbg.declare(metadata %struct.anon.73** %__tmpq, metadata !10922, metadata !DIExpression()), !dbg !10924
  %9 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10924
  %events3 = getelementptr inbounds %struct.linereq, %struct.linereq* %9, i32 0, i32 5, !dbg !10924
  store %struct.anon.73* %events3, %struct.anon.73** %__tmpq, align 8, !dbg !10924
  %10 = load %struct.anon.73*, %struct.anon.73** %__tmpq, align 8, !dbg !10924
  %11 = getelementptr inbounds %struct.anon.73, %struct.anon.73* %10, i32 0, i32 0, !dbg !10924
  %kfifo = bitcast %union.anon.74* %11 to %struct.__kfifo*, !dbg !10924
  %in = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo, i32 0, i32 0, !dbg !10924
  %12 = load i32, i32* %in, align 8, !dbg !10924
  %13 = load %struct.anon.73*, %struct.anon.73** %__tmpq, align 8, !dbg !10924
  %14 = getelementptr inbounds %struct.anon.73, %struct.anon.73* %13, i32 0, i32 0, !dbg !10924
  %kfifo4 = bitcast %union.anon.74* %14 to %struct.__kfifo*, !dbg !10924
  %out = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo4, i32 0, i32 1, !dbg !10924
  %15 = load i32, i32* %out, align 4, !dbg !10924
  %cmp = icmp eq i32 %12, %15, !dbg !10924
  %conv = zext i1 %cmp to i32, !dbg !10924
  store i32 %conv, i32* %tmp, align 4, !dbg !10924
  %16 = load i32, i32* %tmp, align 4, !dbg !10924
  %tobool = icmp ne i32 %16, 0, !dbg !10919
  %frombool = zext i1 %tobool to i8, !dbg !10919
  store i8 %frombool, i8* %__ret, align 1, !dbg !10919
  %17 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10919
  %wait5 = getelementptr inbounds %struct.linereq, %struct.linereq* %17, i32 0, i32 3, !dbg !10919
  %lock6 = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait5, i32 0, i32 0, !dbg !10919
  store %struct.spinlock* %lock6, %struct.spinlock** %lock.addr.i11, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10925, !srcloc !4771
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i11, align 8, !dbg !10926
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !10926
  %rlock.i12 = bitcast %union.anon.1* %19 to %struct.raw_spinlock*, !dbg !10926
  %20 = load i8, i8* %__ret, align 1, !dbg !10919
  %tobool8 = trunc i8 %20 to i1, !dbg !10919
  %frombool9 = zext i1 %tobool8 to i8, !dbg !10919
  store i8 %frombool9, i8* %tmp7, align 1, !dbg !10919
  %21 = load i8, i8* %tmp7, align 1, !dbg !10919
  %tobool10 = trunc i8 %21 to i1, !dbg !10919
  br i1 %tobool10, label %if.end, label %if.then, !dbg !10927

if.then:                                          ; preds = %entry
  store i32 65, i32* %events, align 4, !dbg !10928
  br label %if.end, !dbg !10929

if.end:                                           ; preds = %if.then, %entry
  %22 = load i32, i32* %events, align 4, !dbg !10930
  ret i32 %22, !dbg !10931
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @linereq_ioctl(%struct.file* %file, i32 %cmd, i64 %arg) #0 !dbg !10932 {
entry:
  %retval = alloca i64, align 8
  %file.addr = alloca %struct.file*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i64, align 8
  %lr = alloca %struct.linereq*, align 8
  %ip = alloca i8*, align 8
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !10933, metadata !DIExpression()), !dbg !10934
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !10935, metadata !DIExpression()), !dbg !10936
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !10937, metadata !DIExpression()), !dbg !10938
  call void @llvm.dbg.declare(metadata %struct.linereq** %lr, metadata !10939, metadata !DIExpression()), !dbg !10940
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !10941
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !10942
  %1 = load i8*, i8** %private_data, align 8, !dbg !10942
  %2 = bitcast i8* %1 to %struct.linereq*, !dbg !10941
  store %struct.linereq* %2, %struct.linereq** %lr, align 8, !dbg !10940
  call void @llvm.dbg.declare(metadata i8** %ip, metadata !10943, metadata !DIExpression()), !dbg !10944
  %3 = load i64, i64* %arg.addr, align 8, !dbg !10945
  %4 = inttoptr i64 %3 to i8*, !dbg !10946
  store i8* %4, i8** %ip, align 8, !dbg !10944
  %5 = load i32, i32* %cmd.addr, align 4, !dbg !10947
  %conv = zext i32 %5 to i64, !dbg !10947
  %cmp = icmp eq i64 %conv, 3222320142, !dbg !10949
  br i1 %cmp, label %if.then, label %if.else, !dbg !10950

if.then:                                          ; preds = %entry
  %6 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10951
  %7 = load i8*, i8** %ip, align 8, !dbg !10952
  %call = call i64 @linereq_get_values(%struct.linereq* %6, i8* %7) #9, !dbg !10953
  store i64 %call, i64* %retval, align 8, !dbg !10954
  br label %return, !dbg !10954

if.else:                                          ; preds = %entry
  %8 = load i32, i32* %cmd.addr, align 4, !dbg !10955
  %conv2 = zext i32 %8 to i64, !dbg !10955
  %cmp3 = icmp eq i64 %conv2, 3222320143, !dbg !10957
  br i1 %cmp3, label %if.then5, label %if.else7, !dbg !10958

if.then5:                                         ; preds = %if.else
  %9 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10959
  %10 = load i8*, i8** %ip, align 8, !dbg !10960
  %call6 = call i64 @linereq_set_values(%struct.linereq* %9, i8* %10) #9, !dbg !10961
  store i64 %call6, i64* %retval, align 8, !dbg !10962
  br label %return, !dbg !10962

if.else7:                                         ; preds = %if.else
  %11 = load i32, i32* %cmd.addr, align 4, !dbg !10963
  %conv8 = zext i32 %11 to i64, !dbg !10963
  %cmp9 = icmp eq i64 %conv8, 3239097357, !dbg !10965
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !10966

if.then11:                                        ; preds = %if.else7
  %12 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10967
  %13 = load i8*, i8** %ip, align 8, !dbg !10968
  %call12 = call i64 @linereq_set_config(%struct.linereq* %12, i8* %13) #9, !dbg !10969
  store i64 %call12, i64* %retval, align 8, !dbg !10970
  br label %return, !dbg !10970

if.end:                                           ; preds = %if.else7
  br label %if.end13

if.end13:                                         ; preds = %if.end
  br label %if.end14

if.end14:                                         ; preds = %if.end13
  store i64 -22, i64* %retval, align 8, !dbg !10971
  br label %return, !dbg !10971

return:                                           ; preds = %if.end14, %if.then11, %if.then5, %if.then
  %14 = load i64, i64* %retval, align 8, !dbg !10972
  ret i64 %14, !dbg !10972
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @linereq_release(%struct.inode* %inode, %struct.file* %file) #0 !dbg !10973 {
entry:
  %inode.addr = alloca %struct.inode*, align 8
  %file.addr = alloca %struct.file*, align 8
  %lr = alloca %struct.linereq*, align 8
  store %struct.inode* %inode, %struct.inode** %inode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.inode** %inode.addr, metadata !10974, metadata !DIExpression()), !dbg !10975
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !10976, metadata !DIExpression()), !dbg !10977
  call void @llvm.dbg.declare(metadata %struct.linereq** %lr, metadata !10978, metadata !DIExpression()), !dbg !10979
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !10980
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !10981
  %1 = load i8*, i8** %private_data, align 8, !dbg !10981
  %2 = bitcast i8* %1 to %struct.linereq*, !dbg !10980
  store %struct.linereq* %2, %struct.linereq** %lr, align 8, !dbg !10979
  %3 = load %struct.linereq*, %struct.linereq** %lr, align 8, !dbg !10982
  call void @linereq_free(%struct.linereq* %3) #9, !dbg !10983
  ret i32 0, !dbg !10984
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @linereq_get_values(%struct.linereq* %lr, i8* %ip) #0 !dbg !10985 {
entry:
  %retval.i.i86 = alloca i1, align 1
  %addr.addr.i.i87 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i87, metadata !4609, metadata !DIExpression()), !dbg !10988
  %bytes.addr.i.i88 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i88, metadata !4626, metadata !DIExpression()), !dbg !10992
  %is_source.addr.i.i89 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i89, metadata !4628, metadata !DIExpression()), !dbg !10993
  %sz.i.i90 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i90, metadata !4630, metadata !DIExpression()), !dbg !10994
  %__ret_warn_on.i.i91 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i91, metadata !4632, metadata !DIExpression()), !dbg !10995
  %tmp.i.i92 = alloca i64, align 8
  %to.addr.i93 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i93, metadata !4636, metadata !DIExpression()), !dbg !10996
  %from.addr.i94 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i94, metadata !4638, metadata !DIExpression()), !dbg !10997
  %n.addr.i95 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i95, metadata !4640, metadata !DIExpression()), !dbg !10998
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !4609, metadata !DIExpression()), !dbg !10999
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !4626, metadata !DIExpression()), !dbg !11003
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !4628, metadata !DIExpression()), !dbg !11004
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !4630, metadata !DIExpression()), !dbg !11005
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !4632, metadata !DIExpression()), !dbg !11006
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !5056, metadata !DIExpression()), !dbg !11007
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !5058, metadata !DIExpression()), !dbg !11008
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !5060, metadata !DIExpression()), !dbg !11009
  %retval = alloca i64, align 8
  %lr.addr = alloca %struct.linereq*, align 8
  %ip.addr = alloca i8*, align 8
  %lv = alloca %struct.gpio_v2_line_values, align 8
  %vals = alloca [1 x i64], align 8
  %descs = alloca %struct.gpio_desc**, align 8
  %i = alloca i32, align 4
  %didx = alloca i32, align 4
  %num_get = alloca i32, align 4
  %val = alloca i8, align 1
  %ret = alloca i32, align 4
  store %struct.linereq* %lr, %struct.linereq** %lr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.linereq** %lr.addr, metadata !11010, metadata !DIExpression()), !dbg !11011
  store i8* %ip, i8** %ip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ip.addr, metadata !11012, metadata !DIExpression()), !dbg !11013
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_values* %lv, metadata !11014, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.declare(metadata [1 x i64]* %vals, metadata !11020, metadata !DIExpression()), !dbg !11021
  call void @llvm.dbg.declare(metadata %struct.gpio_desc*** %descs, metadata !11022, metadata !DIExpression()), !dbg !11024
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11025, metadata !DIExpression()), !dbg !11026
  call void @llvm.dbg.declare(metadata i32* %didx, metadata !11027, metadata !DIExpression()), !dbg !11028
  call void @llvm.dbg.declare(metadata i32* %num_get, metadata !11029, metadata !DIExpression()), !dbg !11030
  call void @llvm.dbg.declare(metadata i8* %val, metadata !11031, metadata !DIExpression()), !dbg !11032
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11033, metadata !DIExpression()), !dbg !11034
  %0 = bitcast %struct.gpio_v2_line_values* %lv to i8*, !dbg !11035
  %1 = load i8*, i8** %ip.addr, align 8, !dbg !11036
  store i8* %0, i8** %to.addr.i, align 8
  store i8* %1, i8** %from.addr.i, align 8
  store i64 16, i64* %n.addr.i, align 8
  %2 = load i8*, i8** %to.addr.i, align 8, !dbg !11037
  %3 = load i64, i64* %n.addr.i, align 8, !dbg !11037
  store i8* %2, i8** %addr.addr.i.i, align 8
  store i64 %3, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !11005
  %4 = load i32, i32* %sz.i.i, align 4, !dbg !11038
  %cmp.i.i = icmp sge i32 %4, 0, !dbg !11038
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !11038

land.rhs.i.i:                                     ; preds = %entry
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !11038
  %conv.i.i = sext i32 %5 to i64, !dbg !11038
  %6 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11038
  %cmp1.i.i = icmp ult i64 %conv.i.i, %6, !dbg !11038
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !11039
  %lnot.i.i = xor i1 %7, true, !dbg !11038
  %lnot.ext.i.i = zext i1 %7 to i32, !dbg !11038
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !11038
  br i1 %7, label %if.then.i.i, label %if.end10.i.i, !dbg !11040

if.then.i.i:                                      ; preds = %land.end.i.i
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11041
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #6, !dbg !11042
  br i1 %9, label %if.else.i.i, label %if.then5.i.i, !dbg !11043

if.then5.i.i:                                     ; preds = %if.then.i.i
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !11044
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11045
  call void @copy_overflow(i32 %10, i64 %11) #11, !dbg !11046
  br label %if.end9.i.i, !dbg !11046

if.else.i.i:                                      ; preds = %if.then.i.i
  %12 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !11047
  %tobool6.i.i = trunc i8 %12 to i1, !dbg !11047
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !11048

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !11049
  br label %if.end.i.i, !dbg !11049

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !11050
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !11051
  br label %check_copy_size.exit.i, !dbg !11051

if.end10.i.i:                                     ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11006
  %cmp11.i.i = icmp ugt i64 %13, 2147483647, !dbg !11006
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !11006
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !11006
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !11006
  %14 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !11052
  %tobool17.i.i = icmp ne i32 %14, 0, !dbg !11052
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !11052
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !11052
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !11052
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !11006

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !11053, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !11054, !srcloc !4906
  br label %if.end31.i.i, !dbg !11055

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !11006
  %tobool32.i.i = icmp ne i32 %15, 0, !dbg !11006
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !11006
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !11006
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !11006
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !11052
  %16 = load i64, i64* %tmp.i.i, align 8, !dbg !11006
  %tobool38.i.i = icmp ne i64 %16, 0, !dbg !11056
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !11057

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !11058
  br label %check_copy_size.exit.i, !dbg !11058

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %17 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !11059
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11060
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !11061
  %tobool41.i.i = trunc i8 %19 to i1, !dbg !11061
  call void @check_object_size(i8* %17, i64 %18, i1 zeroext %tobool41.i.i) #11, !dbg !11062
  store i1 true, i1* %retval.i.i, align 1, !dbg !11063
  br label %check_copy_size.exit.i, !dbg !11063

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %20 = load i1, i1* %retval.i.i, align 1, !dbg !11064
  %lnot.i = xor i1 %20, true, !dbg !11037
  %lnot.ext.i = zext i1 %20 to i32, !dbg !11037
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !11037
  br i1 %20, label %if.then.i, label %copy_from_user.exit, !dbg !11065

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %21 = load i8*, i8** %to.addr.i, align 8, !dbg !11066
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !11067
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !11068
  %call2.i = call i64 @_copy_from_user(i8* %21, i8* %22, i64 %23) #11, !dbg !11069
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !11070
  br label %copy_from_user.exit, !dbg !11071

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !11072
  %tobool = icmp ne i64 %24, 0, !dbg !11073
  br i1 %tobool, label %if.then, label %if.end, !dbg !11074

if.then:                                          ; preds = %copy_from_user.exit
  store i64 -14, i64* %retval, align 8, !dbg !11075
  br label %return, !dbg !11075

if.end:                                           ; preds = %copy_from_user.exit
  store i32 0, i32* %num_get, align 4, !dbg !11076
  store i32 0, i32* %i, align 4, !dbg !11078
  br label %for.cond, !dbg !11079

for.cond:                                         ; preds = %for.inc, %if.end
  %25 = load i32, i32* %i, align 4, !dbg !11080
  %26 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !11082
  %num_lines = getelementptr inbounds %struct.linereq, %struct.linereq* %26, i32 0, i32 2, !dbg !11083
  %27 = load i32, i32* %num_lines, align 8, !dbg !11083
  %cmp = icmp ult i32 %25, %27, !dbg !11084
  br i1 %cmp, label %for.body, label %for.end, !dbg !11085

for.body:                                         ; preds = %for.cond
  %mask = getelementptr inbounds %struct.gpio_v2_line_values, %struct.gpio_v2_line_values* %lv, i32 0, i32 1, !dbg !11086
  %28 = load i64, i64* %mask, align 8, !dbg !11086
  %29 = load i32, i32* %i, align 4, !dbg !11089
  %sh_prom = zext i32 %29 to i64, !dbg !11089
  %shl = shl i64 1, %sh_prom, !dbg !11089
  %and = and i64 %28, %shl, !dbg !11090
  %tobool1 = icmp ne i64 %and, 0, !dbg !11090
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !11091

if.then2:                                         ; preds = %for.body
  %30 = load i32, i32* %num_get, align 4, !dbg !11092
  %inc = add i32 %30, 1, !dbg !11092
  store i32 %inc, i32* %num_get, align 4, !dbg !11092
  %31 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !11094
  %lines = getelementptr inbounds %struct.linereq, %struct.linereq* %31, i32 0, i32 8, !dbg !11095
  %32 = load i32, i32* %i, align 4, !dbg !11096
  %idxprom = zext i32 %32 to i64, !dbg !11094
  %arrayidx = getelementptr [0 x %struct.line], [0 x %struct.line]* %lines, i64 0, i64 %idxprom, !dbg !11094
  %desc = getelementptr inbounds %struct.line, %struct.line* %arrayidx, i32 0, i32 0, !dbg !11097
  store %struct.gpio_desc** %desc, %struct.gpio_desc*** %descs, align 8, !dbg !11098
  br label %if.end3, !dbg !11099

if.end3:                                          ; preds = %if.then2, %for.body
  br label %for.inc, !dbg !11100

for.inc:                                          ; preds = %if.end3
  %33 = load i32, i32* %i, align 4, !dbg !11101
  %inc4 = add i32 %33, 1, !dbg !11101
  store i32 %inc4, i32* %i, align 4, !dbg !11101
  br label %for.cond, !dbg !11102, !llvm.loop !11103

for.end:                                          ; preds = %for.cond
  %34 = load i32, i32* %num_get, align 4, !dbg !11105
  %cmp5 = icmp eq i32 %34, 0, !dbg !11107
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !11108

if.then6:                                         ; preds = %for.end
  store i64 -22, i64* %retval, align 8, !dbg !11109
  br label %return, !dbg !11109

if.end7:                                          ; preds = %for.end
  %35 = load i32, i32* %num_get, align 4, !dbg !11110
  %cmp8 = icmp ne i32 %35, 1, !dbg !11112
  br i1 %cmp8, label %if.then9, label %if.end36, !dbg !11113

if.then9:                                         ; preds = %if.end7
  %36 = load i32, i32* %num_get, align 4, !dbg !11114
  %conv = zext i32 %36 to i64, !dbg !11114
  %call10 = call i8* @kmalloc_array(i64 %conv, i64 8, i32 3264) #9, !dbg !11116
  %37 = bitcast i8* %call10 to %struct.gpio_desc**, !dbg !11116
  store %struct.gpio_desc** %37, %struct.gpio_desc*** %descs, align 8, !dbg !11117
  %38 = load %struct.gpio_desc**, %struct.gpio_desc*** %descs, align 8, !dbg !11118
  %tobool11 = icmp ne %struct.gpio_desc** %38, null, !dbg !11118
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !11120

if.then12:                                        ; preds = %if.then9
  store i64 -12, i64* %retval, align 8, !dbg !11121
  br label %return, !dbg !11121

if.end13:                                         ; preds = %if.then9
  store i32 0, i32* %didx, align 4, !dbg !11122
  store i32 0, i32* %i, align 4, !dbg !11124
  br label %for.cond14, !dbg !11125

for.cond14:                                       ; preds = %for.inc33, %if.end13
  %39 = load i32, i32* %i, align 4, !dbg !11126
  %40 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !11128
  %num_lines15 = getelementptr inbounds %struct.linereq, %struct.linereq* %40, i32 0, i32 2, !dbg !11129
  %41 = load i32, i32* %num_lines15, align 8, !dbg !11129
  %cmp16 = icmp ult i32 %39, %41, !dbg !11130
  br i1 %cmp16, label %for.body18, label %for.end35, !dbg !11131

for.body18:                                       ; preds = %for.cond14
  %mask19 = getelementptr inbounds %struct.gpio_v2_line_values, %struct.gpio_v2_line_values* %lv, i32 0, i32 1, !dbg !11132
  %42 = load i64, i64* %mask19, align 8, !dbg !11132
  %43 = load i32, i32* %i, align 4, !dbg !11135
  %sh_prom20 = zext i32 %43 to i64, !dbg !11135
  %shl21 = shl i64 1, %sh_prom20, !dbg !11135
  %and22 = and i64 %42, %shl21, !dbg !11136
  %tobool23 = icmp ne i64 %and22, 0, !dbg !11136
  br i1 %tobool23, label %if.then24, label %if.end32, !dbg !11137

if.then24:                                        ; preds = %for.body18
  %44 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !11138
  %lines25 = getelementptr inbounds %struct.linereq, %struct.linereq* %44, i32 0, i32 8, !dbg !11140
  %45 = load i32, i32* %i, align 4, !dbg !11141
  %idxprom26 = zext i32 %45 to i64, !dbg !11138
  %arrayidx27 = getelementptr [0 x %struct.line], [0 x %struct.line]* %lines25, i64 0, i64 %idxprom26, !dbg !11138
  %desc28 = getelementptr inbounds %struct.line, %struct.line* %arrayidx27, i32 0, i32 0, !dbg !11142
  %46 = load %struct.gpio_desc*, %struct.gpio_desc** %desc28, align 8, !dbg !11142
  %47 = load %struct.gpio_desc**, %struct.gpio_desc*** %descs, align 8, !dbg !11143
  %48 = load i32, i32* %didx, align 4, !dbg !11144
  %idxprom29 = zext i32 %48 to i64, !dbg !11143
  %arrayidx30 = getelementptr %struct.gpio_desc*, %struct.gpio_desc** %47, i64 %idxprom29, !dbg !11143
  store %struct.gpio_desc* %46, %struct.gpio_desc** %arrayidx30, align 8, !dbg !11145
  %49 = load i32, i32* %didx, align 4, !dbg !11146
  %inc31 = add i32 %49, 1, !dbg !11146
  store i32 %inc31, i32* %didx, align 4, !dbg !11146
  br label %if.end32, !dbg !11147

if.end32:                                         ; preds = %if.then24, %for.body18
  br label %for.inc33, !dbg !11148

for.inc33:                                        ; preds = %if.end32
  %50 = load i32, i32* %i, align 4, !dbg !11149
  %inc34 = add i32 %50, 1, !dbg !11149
  store i32 %inc34, i32* %i, align 4, !dbg !11149
  br label %for.cond14, !dbg !11150, !llvm.loop !11151

for.end35:                                        ; preds = %for.cond14
  br label %if.end36, !dbg !11153

if.end36:                                         ; preds = %for.end35, %if.end7
  %51 = load i32, i32* %num_get, align 4, !dbg !11154
  %52 = load %struct.gpio_desc**, %struct.gpio_desc*** %descs, align 8, !dbg !11155
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %vals, i64 0, i64 0, !dbg !11156
  %call37 = call i32 @gpiod_get_array_value_complex(i1 zeroext false, i1 zeroext true, i32 %51, %struct.gpio_desc** %52, %struct.gpio_array* null, i64* %arraydecay) #9, !dbg !11157
  store i32 %call37, i32* %ret, align 4, !dbg !11158
  %53 = load i32, i32* %num_get, align 4, !dbg !11159
  %cmp38 = icmp ne i32 %53, 1, !dbg !11161
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !11162

if.then40:                                        ; preds = %if.end36
  %54 = load %struct.gpio_desc**, %struct.gpio_desc*** %descs, align 8, !dbg !11163
  %55 = bitcast %struct.gpio_desc** %54 to i8*, !dbg !11163
  call void @kfree(i8* %55) #9, !dbg !11164
  br label %if.end41, !dbg !11164

if.end41:                                         ; preds = %if.then40, %if.end36
  %56 = load i32, i32* %ret, align 4, !dbg !11165
  %tobool42 = icmp ne i32 %56, 0, !dbg !11165
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !11167

if.then43:                                        ; preds = %if.end41
  %57 = load i32, i32* %ret, align 4, !dbg !11168
  %conv44 = sext i32 %57 to i64, !dbg !11168
  store i64 %conv44, i64* %retval, align 8, !dbg !11169
  br label %return, !dbg !11169

if.end45:                                         ; preds = %if.end41
  %bits = getelementptr inbounds %struct.gpio_v2_line_values, %struct.gpio_v2_line_values* %lv, i32 0, i32 0, !dbg !11170
  store i64 0, i64* %bits, align 8, !dbg !11171
  store i32 0, i32* %didx, align 4, !dbg !11172
  store i32 0, i32* %i, align 4, !dbg !11174
  br label %for.cond46, !dbg !11175

for.cond46:                                       ; preds = %for.inc79, %if.end45
  %58 = load i32, i32* %i, align 4, !dbg !11176
  %59 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !11178
  %num_lines47 = getelementptr inbounds %struct.linereq, %struct.linereq* %59, i32 0, i32 2, !dbg !11179
  %60 = load i32, i32* %num_lines47, align 8, !dbg !11179
  %cmp48 = icmp ult i32 %58, %60, !dbg !11180
  br i1 %cmp48, label %for.body50, label %for.end81, !dbg !11181

for.body50:                                       ; preds = %for.cond46
  %mask51 = getelementptr inbounds %struct.gpio_v2_line_values, %struct.gpio_v2_line_values* %lv, i32 0, i32 1, !dbg !11182
  %61 = load i64, i64* %mask51, align 8, !dbg !11182
  %62 = load i32, i32* %i, align 4, !dbg !11185
  %sh_prom52 = zext i32 %62 to i64, !dbg !11185
  %shl53 = shl i64 1, %sh_prom52, !dbg !11185
  %and54 = and i64 %61, %shl53, !dbg !11186
  %tobool55 = icmp ne i64 %and54, 0, !dbg !11186
  br i1 %tobool55, label %if.then56, label %if.end78, !dbg !11187

if.then56:                                        ; preds = %for.body50
  %63 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !11188
  %lines57 = getelementptr inbounds %struct.linereq, %struct.linereq* %63, i32 0, i32 8, !dbg !11191
  %64 = load i32, i32* %i, align 4, !dbg !11192
  %idxprom58 = zext i32 %64 to i64, !dbg !11188
  %arrayidx59 = getelementptr [0 x %struct.line], [0 x %struct.line]* %lines57, i64 0, i64 %idxprom58, !dbg !11188
  %sw_debounced = getelementptr inbounds %struct.line, %struct.line* %arrayidx59, i32 0, i32 8, !dbg !11193
  %65 = load i32, i32* %sw_debounced, align 8, !dbg !11193
  %tobool60 = icmp ne i32 %65, 0, !dbg !11188
  br i1 %tobool60, label %if.then61, label %if.else, !dbg !11194

if.then61:                                        ; preds = %if.then56
  %66 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !11195
  %lines62 = getelementptr inbounds %struct.linereq, %struct.linereq* %66, i32 0, i32 8, !dbg !11196
  %67 = load i32, i32* %i, align 4, !dbg !11197
  %idxprom63 = zext i32 %67 to i64, !dbg !11195
  %arrayidx64 = getelementptr [0 x %struct.line], [0 x %struct.line]* %lines62, i64 0, i64 %idxprom63, !dbg !11195
  %call65 = call zeroext i1 @debounced_value(%struct.line* %arrayidx64) #9, !dbg !11198
  %frombool = zext i1 %call65 to i8, !dbg !11199
  store i8 %frombool, i8* %val, align 1, !dbg !11199
  br label %if.end70, !dbg !11200

if.else:                                          ; preds = %if.then56
  %68 = load i32, i32* %didx, align 4, !dbg !11201
  %conv66 = zext i32 %68 to i64, !dbg !11201
  %arraydecay67 = getelementptr inbounds [1 x i64], [1 x i64]* %vals, i64 0, i64 0, !dbg !11202
  %call68 = call zeroext i1 @test_bit(i64 %conv66, i64* %arraydecay67) #9, !dbg !11203
  %frombool69 = zext i1 %call68 to i8, !dbg !11204
  store i8 %frombool69, i8* %val, align 1, !dbg !11204
  br label %if.end70

if.end70:                                         ; preds = %if.else, %if.then61
  %69 = load i8, i8* %val, align 1, !dbg !11205
  %tobool71 = trunc i8 %69 to i1, !dbg !11205
  br i1 %tobool71, label %if.then72, label %if.end76, !dbg !11207

if.then72:                                        ; preds = %if.end70
  %70 = load i32, i32* %i, align 4, !dbg !11208
  %sh_prom73 = zext i32 %70 to i64, !dbg !11208
  %shl74 = shl i64 1, %sh_prom73, !dbg !11208
  %bits75 = getelementptr inbounds %struct.gpio_v2_line_values, %struct.gpio_v2_line_values* %lv, i32 0, i32 0, !dbg !11209
  %71 = load i64, i64* %bits75, align 8, !dbg !11210
  %or = or i64 %71, %shl74, !dbg !11210
  store i64 %or, i64* %bits75, align 8, !dbg !11210
  br label %if.end76, !dbg !11211

if.end76:                                         ; preds = %if.then72, %if.end70
  %72 = load i32, i32* %didx, align 4, !dbg !11212
  %inc77 = add i32 %72, 1, !dbg !11212
  store i32 %inc77, i32* %didx, align 4, !dbg !11212
  br label %if.end78, !dbg !11213

if.end78:                                         ; preds = %if.end76, %for.body50
  br label %for.inc79, !dbg !11214

for.inc79:                                        ; preds = %if.end78
  %73 = load i32, i32* %i, align 4, !dbg !11215
  %inc80 = add i32 %73, 1, !dbg !11215
  store i32 %inc80, i32* %i, align 4, !dbg !11215
  br label %for.cond46, !dbg !11216, !llvm.loop !11217

for.end81:                                        ; preds = %for.cond46
  %74 = load i8*, i8** %ip.addr, align 8, !dbg !11219
  %75 = bitcast %struct.gpio_v2_line_values* %lv to i8*, !dbg !11220
  store i8* %74, i8** %to.addr.i93, align 8
  store i8* %75, i8** %from.addr.i94, align 8
  store i64 16, i64* %n.addr.i95, align 8
  %76 = load i8*, i8** %from.addr.i94, align 8, !dbg !11221
  %77 = load i64, i64* %n.addr.i95, align 8, !dbg !11221
  store i8* %76, i8** %addr.addr.i.i87, align 8
  store i64 %77, i64* %bytes.addr.i.i88, align 8
  store i8 1, i8* %is_source.addr.i.i89, align 1
  store i32 -1, i32* %sz.i.i90, align 4, !dbg !10994
  %78 = load i32, i32* %sz.i.i90, align 4, !dbg !11222
  %cmp.i.i96 = icmp sge i32 %78, 0, !dbg !11222
  br i1 %cmp.i.i96, label %land.rhs.i.i99, label %land.end.i.i103, !dbg !11222

land.rhs.i.i99:                                   ; preds = %for.end81
  %79 = load i32, i32* %sz.i.i90, align 4, !dbg !11222
  %conv.i.i97 = sext i32 %79 to i64, !dbg !11222
  %80 = load i64, i64* %bytes.addr.i.i88, align 8, !dbg !11222
  %cmp1.i.i98 = icmp ult i64 %conv.i.i97, %80, !dbg !11222
  br label %land.end.i.i103

land.end.i.i103:                                  ; preds = %land.rhs.i.i99, %for.end81
  %81 = phi i1 [ false, %for.end81 ], [ %cmp1.i.i98, %land.rhs.i.i99 ], !dbg !11223
  %lnot.i.i100 = xor i1 %81, true, !dbg !11222
  %lnot.ext.i.i101 = zext i1 %81 to i32, !dbg !11222
  %conv4.i.i102 = sext i32 %lnot.ext.i.i101 to i64, !dbg !11222
  br i1 %81, label %if.then.i.i104, label %if.end10.i.i119, !dbg !11224

if.then.i.i104:                                   ; preds = %land.end.i.i103
  %82 = load i64, i64* %bytes.addr.i.i88, align 8, !dbg !11225
  %83 = call i1 @llvm.is.constant.i64(i64 %82) #6, !dbg !11226
  br i1 %83, label %if.else.i.i107, label %if.then5.i.i105, !dbg !11227

if.then5.i.i105:                                  ; preds = %if.then.i.i104
  %84 = load i32, i32* %sz.i.i90, align 4, !dbg !11228
  %85 = load i64, i64* %bytes.addr.i.i88, align 8, !dbg !11229
  call void @copy_overflow(i32 %84, i64 %85) #11, !dbg !11230
  br label %if.end9.i.i111, !dbg !11230

if.else.i.i107:                                   ; preds = %if.then.i.i104
  %86 = load i8, i8* %is_source.addr.i.i89, align 1, !dbg !11231
  %tobool6.i.i106 = trunc i8 %86 to i1, !dbg !11231
  br i1 %tobool6.i.i106, label %if.then7.i.i108, label %if.else8.i.i109, !dbg !11232

if.then7.i.i108:                                  ; preds = %if.else.i.i107
  call void @__bad_copy_from() #11, !dbg !11233
  br label %if.end.i.i110, !dbg !11233

if.else8.i.i109:                                  ; preds = %if.else.i.i107
  call void @__bad_copy_to() #11, !dbg !11234
  br label %if.end.i.i110

if.end.i.i110:                                    ; preds = %if.else8.i.i109, %if.then7.i.i108
  br label %if.end9.i.i111

if.end9.i.i111:                                   ; preds = %if.end.i.i110, %if.then5.i.i105
  store i1 false, i1* %retval.i.i86, align 1, !dbg !11235
  br label %check_copy_size.exit.i133, !dbg !11235

if.end10.i.i119:                                  ; preds = %land.end.i.i103
  %87 = load i64, i64* %bytes.addr.i.i88, align 8, !dbg !10995
  %cmp11.i.i112 = icmp ugt i64 %87, 2147483647, !dbg !10995
  %lnot13.i.i113 = xor i1 %cmp11.i.i112, true, !dbg !10995
  %lnot.ext16.i.i114 = zext i1 %cmp11.i.i112 to i32, !dbg !10995
  store i32 %lnot.ext16.i.i114, i32* %__ret_warn_on.i.i91, align 4, !dbg !10995
  %88 = load i32, i32* %__ret_warn_on.i.i91, align 4, !dbg !11236
  %tobool17.i.i115 = icmp ne i32 %88, 0, !dbg !11236
  %lnot18.i.i116 = xor i1 %tobool17.i.i115, true, !dbg !11236
  %lnot.ext21.i.i117 = zext i1 %tobool17.i.i115 to i32, !dbg !11236
  %conv22.i.i118 = sext i32 %lnot.ext21.i.i117 to i64, !dbg !11236
  br i1 %tobool17.i.i115, label %if.then24.i.i120, label %if.end31.i.i126, !dbg !10995

if.then24.i.i120:                                 ; preds = %if.end10.i.i119
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !11237, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !11238, !srcloc !4906
  br label %if.end31.i.i126, !dbg !11239

if.end31.i.i126:                                  ; preds = %if.then24.i.i120, %if.end10.i.i119
  %89 = load i32, i32* %__ret_warn_on.i.i91, align 4, !dbg !10995
  %tobool32.i.i121 = icmp ne i32 %89, 0, !dbg !10995
  %lnot33.i.i122 = xor i1 %tobool32.i.i121, true, !dbg !10995
  %lnot.ext36.i.i123 = zext i1 %tobool32.i.i121 to i32, !dbg !10995
  %conv37.i.i124 = sext i32 %lnot.ext36.i.i123 to i64, !dbg !10995
  store i64 %conv37.i.i124, i64* %tmp.i.i92, align 8, !dbg !11236
  %90 = load i64, i64* %tmp.i.i92, align 8, !dbg !10995
  %tobool38.i.i125 = icmp ne i64 %90, 0, !dbg !11240
  br i1 %tobool38.i.i125, label %if.then39.i.i127, label %if.end40.i.i129, !dbg !11241

if.then39.i.i127:                                 ; preds = %if.end31.i.i126
  store i1 false, i1* %retval.i.i86, align 1, !dbg !11242
  br label %check_copy_size.exit.i133, !dbg !11242

if.end40.i.i129:                                  ; preds = %if.end31.i.i126
  %91 = load i8*, i8** %addr.addr.i.i87, align 8, !dbg !11243
  %92 = load i64, i64* %bytes.addr.i.i88, align 8, !dbg !11244
  %93 = load i8, i8* %is_source.addr.i.i89, align 1, !dbg !11245
  %tobool41.i.i128 = trunc i8 %93 to i1, !dbg !11245
  call void @check_object_size(i8* %91, i64 %92, i1 zeroext %tobool41.i.i128) #11, !dbg !11246
  store i1 true, i1* %retval.i.i86, align 1, !dbg !11247
  br label %check_copy_size.exit.i133, !dbg !11247

check_copy_size.exit.i133:                        ; preds = %if.end40.i.i129, %if.then39.i.i127, %if.end9.i.i111
  %94 = load i1, i1* %retval.i.i86, align 1, !dbg !11248
  %lnot.i130 = xor i1 %94, true, !dbg !11221
  %lnot.ext.i131 = zext i1 %94 to i32, !dbg !11221
  %conv.i132 = sext i32 %lnot.ext.i131 to i64, !dbg !11221
  br i1 %94, label %if.then.i135, label %copy_to_user.exit, !dbg !11249

if.then.i135:                                     ; preds = %check_copy_size.exit.i133
  %95 = load i8*, i8** %to.addr.i93, align 8, !dbg !11250
  %96 = load i8*, i8** %from.addr.i94, align 8, !dbg !11251
  %97 = load i64, i64* %n.addr.i95, align 8, !dbg !11252
  %call2.i134 = call i64 @_copy_to_user(i8* %95, i8* %96, i64 %97) #11, !dbg !11253
  store i64 %call2.i134, i64* %n.addr.i95, align 8, !dbg !11254
  br label %copy_to_user.exit, !dbg !11255

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i133, %if.then.i135
  %98 = load i64, i64* %n.addr.i95, align 8, !dbg !11256
  %tobool83 = icmp ne i64 %98, 0, !dbg !11257
  br i1 %tobool83, label %if.then84, label %if.end85, !dbg !11258

if.then84:                                        ; preds = %copy_to_user.exit
  store i64 -14, i64* %retval, align 8, !dbg !11259
  br label %return, !dbg !11259

if.end85:                                         ; preds = %copy_to_user.exit
  store i64 0, i64* %retval, align 8, !dbg !11260
  br label %return, !dbg !11260

return:                                           ; preds = %if.end85, %if.then84, %if.then43, %if.then12, %if.then6, %if.then
  %99 = load i64, i64* %retval, align 8, !dbg !11261
  ret i64 %99, !dbg !11261
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @linereq_set_values(%struct.linereq* %lr, i8* %ip) #0 !dbg !11262 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !4609, metadata !DIExpression()), !dbg !11263
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !4626, metadata !DIExpression()), !dbg !11267
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !4628, metadata !DIExpression()), !dbg !11268
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !4630, metadata !DIExpression()), !dbg !11269
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !4632, metadata !DIExpression()), !dbg !11270
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !5056, metadata !DIExpression()), !dbg !11271
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !5058, metadata !DIExpression()), !dbg !11272
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !5060, metadata !DIExpression()), !dbg !11273
  %retval = alloca i64, align 8
  %lr.addr = alloca %struct.linereq*, align 8
  %ip.addr = alloca i8*, align 8
  %lv = alloca %struct.gpio_v2_line_values, align 8
  %ret = alloca i32, align 4
  store %struct.linereq* %lr, %struct.linereq** %lr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.linereq** %lr.addr, metadata !11274, metadata !DIExpression()), !dbg !11275
  store i8* %ip, i8** %ip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ip.addr, metadata !11276, metadata !DIExpression()), !dbg !11277
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_values* %lv, metadata !11278, metadata !DIExpression()), !dbg !11279
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11280, metadata !DIExpression()), !dbg !11281
  %0 = bitcast %struct.gpio_v2_line_values* %lv to i8*, !dbg !11282
  %1 = load i8*, i8** %ip.addr, align 8, !dbg !11283
  store i8* %0, i8** %to.addr.i, align 8
  store i8* %1, i8** %from.addr.i, align 8
  store i64 16, i64* %n.addr.i, align 8
  %2 = load i8*, i8** %to.addr.i, align 8, !dbg !11284
  %3 = load i64, i64* %n.addr.i, align 8, !dbg !11284
  store i8* %2, i8** %addr.addr.i.i, align 8
  store i64 %3, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !11269
  %4 = load i32, i32* %sz.i.i, align 4, !dbg !11285
  %cmp.i.i = icmp sge i32 %4, 0, !dbg !11285
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !11285

land.rhs.i.i:                                     ; preds = %entry
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !11285
  %conv.i.i = sext i32 %5 to i64, !dbg !11285
  %6 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11285
  %cmp1.i.i = icmp ult i64 %conv.i.i, %6, !dbg !11285
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !11286
  %lnot.i.i = xor i1 %7, true, !dbg !11285
  %lnot.ext.i.i = zext i1 %7 to i32, !dbg !11285
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !11285
  br i1 %7, label %if.then.i.i, label %if.end10.i.i, !dbg !11287

if.then.i.i:                                      ; preds = %land.end.i.i
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11288
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #6, !dbg !11289
  br i1 %9, label %if.else.i.i, label %if.then5.i.i, !dbg !11290

if.then5.i.i:                                     ; preds = %if.then.i.i
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !11291
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11292
  call void @copy_overflow(i32 %10, i64 %11) #11, !dbg !11293
  br label %if.end9.i.i, !dbg !11293

if.else.i.i:                                      ; preds = %if.then.i.i
  %12 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !11294
  %tobool6.i.i = trunc i8 %12 to i1, !dbg !11294
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !11295

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !11296
  br label %if.end.i.i, !dbg !11296

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !11297
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !11298
  br label %check_copy_size.exit.i, !dbg !11298

if.end10.i.i:                                     ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11270
  %cmp11.i.i = icmp ugt i64 %13, 2147483647, !dbg !11270
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !11270
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !11270
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !11270
  %14 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !11299
  %tobool17.i.i = icmp ne i32 %14, 0, !dbg !11299
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !11299
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !11299
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !11299
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !11270

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !11300, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !11301, !srcloc !4906
  br label %if.end31.i.i, !dbg !11302

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !11270
  %tobool32.i.i = icmp ne i32 %15, 0, !dbg !11270
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !11270
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !11270
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !11270
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !11299
  %16 = load i64, i64* %tmp.i.i, align 8, !dbg !11270
  %tobool38.i.i = icmp ne i64 %16, 0, !dbg !11303
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !11304

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !11305
  br label %check_copy_size.exit.i, !dbg !11305

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %17 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !11306
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11307
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !11308
  %tobool41.i.i = trunc i8 %19 to i1, !dbg !11308
  call void @check_object_size(i8* %17, i64 %18, i1 zeroext %tobool41.i.i) #11, !dbg !11309
  store i1 true, i1* %retval.i.i, align 1, !dbg !11310
  br label %check_copy_size.exit.i, !dbg !11310

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %20 = load i1, i1* %retval.i.i, align 1, !dbg !11311
  %lnot.i = xor i1 %20, true, !dbg !11284
  %lnot.ext.i = zext i1 %20 to i32, !dbg !11284
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !11284
  br i1 %20, label %if.then.i, label %copy_from_user.exit, !dbg !11312

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %21 = load i8*, i8** %to.addr.i, align 8, !dbg !11313
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !11314
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !11315
  %call2.i = call i64 @_copy_from_user(i8* %21, i8* %22, i64 %23) #11, !dbg !11316
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !11317
  br label %copy_from_user.exit, !dbg !11318

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !11319
  %tobool = icmp ne i64 %24, 0, !dbg !11320
  br i1 %tobool, label %if.then, label %if.end, !dbg !11321

if.then:                                          ; preds = %copy_from_user.exit
  store i64 -14, i64* %retval, align 8, !dbg !11322
  br label %return, !dbg !11322

if.end:                                           ; preds = %copy_from_user.exit
  %25 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !11323
  %config_mutex = getelementptr inbounds %struct.linereq, %struct.linereq* %25, i32 0, i32 7, !dbg !11324
  call void @mutex_lock(%struct.mutex* %config_mutex) #9, !dbg !11325
  %26 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !11326
  %call1 = call i64 @linereq_set_values_unlocked(%struct.linereq* %26, %struct.gpio_v2_line_values* %lv) #9, !dbg !11327
  %conv = trunc i64 %call1 to i32, !dbg !11327
  store i32 %conv, i32* %ret, align 4, !dbg !11328
  %27 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !11329
  %config_mutex2 = getelementptr inbounds %struct.linereq, %struct.linereq* %27, i32 0, i32 7, !dbg !11330
  call void @mutex_unlock(%struct.mutex* %config_mutex2) #9, !dbg !11331
  %28 = load i32, i32* %ret, align 4, !dbg !11332
  %conv3 = sext i32 %28 to i64, !dbg !11332
  store i64 %conv3, i64* %retval, align 8, !dbg !11333
  br label %return, !dbg !11333

return:                                           ; preds = %if.end, %if.then
  %29 = load i64, i64* %retval, align 8, !dbg !11334
  ret i64 %29, !dbg !11334
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @linereq_set_config(%struct.linereq* %lr, i8* %ip) #0 !dbg !11335 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !4609, metadata !DIExpression()), !dbg !11336
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !4626, metadata !DIExpression()), !dbg !11340
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !4628, metadata !DIExpression()), !dbg !11341
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !4630, metadata !DIExpression()), !dbg !11342
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !4632, metadata !DIExpression()), !dbg !11343
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !5056, metadata !DIExpression()), !dbg !11344
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !5058, metadata !DIExpression()), !dbg !11345
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !5060, metadata !DIExpression()), !dbg !11346
  %retval = alloca i64, align 8
  %lr.addr = alloca %struct.linereq*, align 8
  %ip.addr = alloca i8*, align 8
  %lc = alloca %struct.gpio_v2_line_config, align 8
  %ret = alloca i32, align 4
  store %struct.linereq* %lr, %struct.linereq** %lr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.linereq** %lr.addr, metadata !11347, metadata !DIExpression()), !dbg !11348
  store i8* %ip, i8** %ip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ip.addr, metadata !11349, metadata !DIExpression()), !dbg !11350
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_config* %lc, metadata !11351, metadata !DIExpression()), !dbg !11352
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11353, metadata !DIExpression()), !dbg !11354
  %0 = bitcast %struct.gpio_v2_line_config* %lc to i8*, !dbg !11355
  %1 = load i8*, i8** %ip.addr, align 8, !dbg !11356
  store i8* %0, i8** %to.addr.i, align 8
  store i8* %1, i8** %from.addr.i, align 8
  store i64 272, i64* %n.addr.i, align 8
  %2 = load i8*, i8** %to.addr.i, align 8, !dbg !11357
  %3 = load i64, i64* %n.addr.i, align 8, !dbg !11357
  store i8* %2, i8** %addr.addr.i.i, align 8
  store i64 %3, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !11342
  %4 = load i32, i32* %sz.i.i, align 4, !dbg !11358
  %cmp.i.i = icmp sge i32 %4, 0, !dbg !11358
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !11358

land.rhs.i.i:                                     ; preds = %entry
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !11358
  %conv.i.i = sext i32 %5 to i64, !dbg !11358
  %6 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11358
  %cmp1.i.i = icmp ult i64 %conv.i.i, %6, !dbg !11358
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !11359
  %lnot.i.i = xor i1 %7, true, !dbg !11358
  %lnot.ext.i.i = zext i1 %7 to i32, !dbg !11358
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !11358
  br i1 %7, label %if.then.i.i, label %if.end10.i.i, !dbg !11360

if.then.i.i:                                      ; preds = %land.end.i.i
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11361
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #6, !dbg !11362
  br i1 %9, label %if.else.i.i, label %if.then5.i.i, !dbg !11363

if.then5.i.i:                                     ; preds = %if.then.i.i
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !11364
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11365
  call void @copy_overflow(i32 %10, i64 %11) #11, !dbg !11366
  br label %if.end9.i.i, !dbg !11366

if.else.i.i:                                      ; preds = %if.then.i.i
  %12 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !11367
  %tobool6.i.i = trunc i8 %12 to i1, !dbg !11367
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !11368

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !11369
  br label %if.end.i.i, !dbg !11369

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !11370
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !11371
  br label %check_copy_size.exit.i, !dbg !11371

if.end10.i.i:                                     ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11343
  %cmp11.i.i = icmp ugt i64 %13, 2147483647, !dbg !11343
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !11343
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !11343
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !11343
  %14 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !11372
  %tobool17.i.i = icmp ne i32 %14, 0, !dbg !11372
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !11372
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !11372
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !11372
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !11343

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !11373, !srcloc !4903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #6, !dbg !11374, !srcloc !4906
  br label %if.end31.i.i, !dbg !11375

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !11343
  %tobool32.i.i = icmp ne i32 %15, 0, !dbg !11343
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !11343
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !11343
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !11343
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !11372
  %16 = load i64, i64* %tmp.i.i, align 8, !dbg !11343
  %tobool38.i.i = icmp ne i64 %16, 0, !dbg !11376
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !11377

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !11378
  br label %check_copy_size.exit.i, !dbg !11378

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %17 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !11379
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11380
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !11381
  %tobool41.i.i = trunc i8 %19 to i1, !dbg !11381
  call void @check_object_size(i8* %17, i64 %18, i1 zeroext %tobool41.i.i) #11, !dbg !11382
  store i1 true, i1* %retval.i.i, align 1, !dbg !11383
  br label %check_copy_size.exit.i, !dbg !11383

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %20 = load i1, i1* %retval.i.i, align 1, !dbg !11384
  %lnot.i = xor i1 %20, true, !dbg !11357
  %lnot.ext.i = zext i1 %20 to i32, !dbg !11357
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !11357
  br i1 %20, label %if.then.i, label %copy_from_user.exit, !dbg !11385

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %21 = load i8*, i8** %to.addr.i, align 8, !dbg !11386
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !11387
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !11388
  %call2.i = call i64 @_copy_from_user(i8* %21, i8* %22, i64 %23) #11, !dbg !11389
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !11390
  br label %copy_from_user.exit, !dbg !11391

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !11392
  %tobool = icmp ne i64 %24, 0, !dbg !11393
  br i1 %tobool, label %if.then, label %if.end, !dbg !11394

if.then:                                          ; preds = %copy_from_user.exit
  store i64 -14, i64* %retval, align 8, !dbg !11395
  br label %return, !dbg !11395

if.end:                                           ; preds = %copy_from_user.exit
  %25 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !11396
  %num_lines = getelementptr inbounds %struct.linereq, %struct.linereq* %25, i32 0, i32 2, !dbg !11397
  %26 = load i32, i32* %num_lines, align 8, !dbg !11397
  %call1 = call i32 @gpio_v2_line_config_validate(%struct.gpio_v2_line_config* %lc, i32 %26) #9, !dbg !11398
  store i32 %call1, i32* %ret, align 4, !dbg !11399
  %27 = load i32, i32* %ret, align 4, !dbg !11400
  %tobool2 = icmp ne i32 %27, 0, !dbg !11400
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !11402

if.then3:                                         ; preds = %if.end
  %28 = load i32, i32* %ret, align 4, !dbg !11403
  %conv = sext i32 %28 to i64, !dbg !11403
  store i64 %conv, i64* %retval, align 8, !dbg !11404
  br label %return, !dbg !11404

if.end4:                                          ; preds = %if.end
  %29 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !11405
  %config_mutex = getelementptr inbounds %struct.linereq, %struct.linereq* %29, i32 0, i32 7, !dbg !11406
  call void @mutex_lock(%struct.mutex* %config_mutex) #9, !dbg !11407
  %30 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !11408
  %call5 = call i64 @linereq_set_config_unlocked(%struct.linereq* %30, %struct.gpio_v2_line_config* %lc) #9, !dbg !11409
  %conv6 = trunc i64 %call5 to i32, !dbg !11409
  store i32 %conv6, i32* %ret, align 4, !dbg !11410
  %31 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !11411
  %config_mutex7 = getelementptr inbounds %struct.linereq, %struct.linereq* %31, i32 0, i32 7, !dbg !11412
  call void @mutex_unlock(%struct.mutex* %config_mutex7) #9, !dbg !11413
  %32 = load i32, i32* %ret, align 4, !dbg !11414
  %conv8 = sext i32 %32 to i64, !dbg !11414
  store i64 %conv8, i64* %retval, align 8, !dbg !11415
  br label %return, !dbg !11415

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %33 = load i64, i64* %retval, align 8, !dbg !11416
  ret i64 %33, !dbg !11416
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !11417 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !7938, metadata !DIExpression()), !dbg !11420
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !7948, metadata !DIExpression()), !dbg !11424
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !7950, metadata !DIExpression()), !dbg !11425
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !7952, metadata !DIExpression()), !dbg !11426
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !7954, metadata !DIExpression()), !dbg !11427
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !7960, metadata !DIExpression()), !dbg !11429
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !7966, metadata !DIExpression()), !dbg !11431
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !7975, metadata !DIExpression()), !dbg !11434
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !7977, metadata !DIExpression()), !dbg !11435
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7979, metadata !DIExpression()), !dbg !11436
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !7981, metadata !DIExpression()), !dbg !11437
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !7983, metadata !DIExpression()), !dbg !11438
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7985, metadata !DIExpression()), !dbg !11439
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !7987, metadata !DIExpression()), !dbg !11440
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !7989, metadata !DIExpression()), !dbg !11441
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11442, metadata !DIExpression()), !dbg !11443
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11444, metadata !DIExpression()), !dbg !11445
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11446, metadata !DIExpression()), !dbg !11447
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !11448, metadata !DIExpression()), !dbg !11449
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !11450, metadata !DIExpression()), !dbg !11453
  %0 = load i64, i64* %n.addr, align 8, !dbg !11453
  store i64 %0, i64* %__a, align 8, !dbg !11453
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !11454, metadata !DIExpression()), !dbg !11453
  %1 = load i64, i64* %size.addr, align 8, !dbg !11453
  store i64 %1, i64* %__b, align 8, !dbg !11453
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !11455, metadata !DIExpression()), !dbg !11453
  store i64* %bytes, i64** %__d, align 8, !dbg !11453
  %cmp = icmp eq i64* %__a, %__b, !dbg !11453
  %conv = zext i1 %cmp to i32, !dbg !11453
  %2 = load i64*, i64** %__d, align 8, !dbg !11453
  %cmp1 = icmp eq i64* %__a, %2, !dbg !11453
  %conv2 = zext i1 %cmp1 to i32, !dbg !11453
  %3 = load i64, i64* %__a, align 8, !dbg !11453
  %4 = load i64, i64* %__b, align 8, !dbg !11453
  %5 = load i64*, i64** %__d, align 8, !dbg !11453
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !11453
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !11453
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !11453
  store i64 %8, i64* %5, align 8, !dbg !11453
  %frombool = zext i1 %7 to i8, !dbg !11453
  store i8 %frombool, i8* %tmp, align 1, !dbg !11453
  %9 = load i8, i8* %tmp, align 1, !dbg !11453
  %tobool = trunc i8 %9 to i1, !dbg !11453
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #9, !dbg !11456
  %lnot = xor i1 %call, true, !dbg !11456
  %lnot3 = xor i1 %lnot, true, !dbg !11456
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !11456
  %conv4 = sext i32 %lnot.ext to i64, !dbg !11456
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !11456
  br i1 %tobool5, label %if.then, label %if.end, !dbg !11457

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11458
  br label %return, !dbg !11458

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !11459
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !11460
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !11461

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !11462
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !11463
  br i1 %13, label %if.then6, label %if.end8, !dbg !11464

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !11465
  %15 = load i32, i32* %flags.addr, align 4, !dbg !11466
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !11467
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #6, !dbg !11468
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !11469

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !11470
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !11471
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !11472

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !11473
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !11474
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !11475
  %call.i.i = call i32 @get_order(i64 %21) #12, !dbg !11476
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !11438
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !11477
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !11478
  %24 = load i32, i32* %order.i.i, align 4, !dbg !11479
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !11480
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !11481
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !11482
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #11, !dbg !11483
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !11483
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !11483
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !11483
  call void @llvm.assume(i1 %maskcond.i.i.i) #6, !dbg !11483
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !11484
  br label %kmalloc.exit, !dbg !11484

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !11485
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11486
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !11486
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !11487

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !11488
  br label %kmalloc_index.exit.i, !dbg !11488

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11489
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !11490
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !11491

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11492
  br label %kmalloc_index.exit.i, !dbg !11492

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11493
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !11494
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !11495

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11496
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !11497
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !11498

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !11499
  br label %kmalloc_index.exit.i, !dbg !11499

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11500
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !11501
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !11502

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11503
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !11504
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !11505

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !11506
  br label %kmalloc_index.exit.i, !dbg !11506

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11507
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !11508
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !11509

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11510
  br label %kmalloc_index.exit.i, !dbg !11510

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11511
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !11512
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !11513

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !11514
  br label %kmalloc_index.exit.i, !dbg !11514

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11515
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !11516
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !11517

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !11518
  br label %kmalloc_index.exit.i, !dbg !11518

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11519
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !11520
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !11521

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !11522
  br label %kmalloc_index.exit.i, !dbg !11522

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11523
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !11524
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !11525

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !11526
  br label %kmalloc_index.exit.i, !dbg !11526

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11527
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !11528
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !11529

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !11530
  br label %kmalloc_index.exit.i, !dbg !11530

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11531
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !11532
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !11533

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !11534
  br label %kmalloc_index.exit.i, !dbg !11534

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11535
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !11536
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !11537

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !11538
  br label %kmalloc_index.exit.i, !dbg !11538

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11539
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !11540
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !11541

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !11542
  br label %kmalloc_index.exit.i, !dbg !11542

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11543
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !11544
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !11545

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !11546
  br label %kmalloc_index.exit.i, !dbg !11546

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11547
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !11548
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !11549

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !11550
  br label %kmalloc_index.exit.i, !dbg !11550

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11551
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !11552
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !11553

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !11554
  br label %kmalloc_index.exit.i, !dbg !11554

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11555
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !11556
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !11557

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !11558
  br label %kmalloc_index.exit.i, !dbg !11558

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11559
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !11560
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !11561

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !11562
  br label %kmalloc_index.exit.i, !dbg !11562

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11563
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !11564
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !11565

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !11566
  br label %kmalloc_index.exit.i, !dbg !11566

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11567
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !11568
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !11569

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !11570
  br label %kmalloc_index.exit.i, !dbg !11570

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11571
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !11572
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !11573

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !11574
  br label %kmalloc_index.exit.i, !dbg !11574

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11575
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !11576
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !11577

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !11578
  br label %kmalloc_index.exit.i, !dbg !11578

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11579
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !11580
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !11581

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !11582
  br label %kmalloc_index.exit.i, !dbg !11582

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11583
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !11584
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !11585

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !11586
  br label %kmalloc_index.exit.i, !dbg !11586

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11587
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !11588
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !11589

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !11590
  br label %kmalloc_index.exit.i, !dbg !11590

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11591
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !11592
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !11593

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !11594
  br label %kmalloc_index.exit.i, !dbg !11594

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11595
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !11596
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !11597

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !11598
  br label %kmalloc_index.exit.i, !dbg !11598

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11599
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !11600
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !11601

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !11602
  br label %kmalloc_index.exit.i, !dbg !11602

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i32 382, i32 0, i64 12) #6, !dbg !11603, !srcloc !8165
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 200) #6, !dbg !11604, !srcloc !8169
  unreachable, !dbg !11605

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !11606
  store i32 %59, i32* %index.i, align 4, !dbg !11607
  %60 = load i32, i32* %index.i, align 4, !dbg !11608
  %tobool.i = icmp ne i32 %60, 0, !dbg !11608
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !11609

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !11610
  br label %kmalloc.exit, !dbg !11610

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !11611
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11612
  %and.i.i = and i32 %62, 17, !dbg !11612
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !11612
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !11612
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !11612
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !11612
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !11613

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !11614
  br label %kmalloc_type.exit.i, !dbg !11614

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11615
  %and2.i.i = and i32 %63, 1, !dbg !11616
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !11615
  %64 = zext i1 %tobool3.i.i to i64, !dbg !11615
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !11615
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !11617
  br label %kmalloc_type.exit.i, !dbg !11617

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !11618
  %idxprom.i = zext i32 %65 to i64, !dbg !11619
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !11619
  %66 = load i32, i32* %index.i, align 4, !dbg !11620
  %idxprom6.i = zext i32 %66 to i64, !dbg !11619
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !11619
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !11619
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !11621
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !11622
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11623
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11624
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #11, !dbg !11625
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !11625
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !11625
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !11625
  call void @llvm.assume(i1 %maskcond.i.i) #6, !dbg !11625
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !11426
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11626
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !11627
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !11628
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11629
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #11, !dbg !11630
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !11631
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !11632
  store i8* %76, i8** %retval.i, align 8, !dbg !11633
  br label %kmalloc.exit, !dbg !11633

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !11634
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !11635
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #11, !dbg !11636
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !11636
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !11636
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !11636
  call void @llvm.assume(i1 %maskcond.i) #6, !dbg !11636
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !11637
  br label %kmalloc.exit, !dbg !11637

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !11638
  store i8* %79, i8** %retval, align 8, !dbg !11639
  br label %return, !dbg !11639

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !11640
  %81 = load i32, i32* %flags.addr, align 4, !dbg !11641
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #9, !dbg !11642
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !11642
  %maskedptr = and i64 %ptrint, 7, !dbg !11642
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !11642
  call void @llvm.assume(i1 %maskcond), !dbg !11642
  store i8* %call9, i8** %retval, align 8, !dbg !11643
  br label %return, !dbg !11643

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !11644
  ret i8* %82, !dbg !11644
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @debounced_value(%struct.line* %line) #0 !dbg !11645 {
entry:
  %line.addr = alloca %struct.line*, align 8
  %value = alloca i8, align 1
  %tmp = alloca i32, align 4
  store %struct.line* %line, %struct.line** %line.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.line** %line.addr, metadata !11648, metadata !DIExpression()), !dbg !11649
  call void @llvm.dbg.declare(metadata i8* %value, metadata !11650, metadata !DIExpression()), !dbg !11651
  br label %do.body, !dbg !11652

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11654

do.end:                                           ; preds = %do.body
  %0 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !11652
  %level = getelementptr inbounds %struct.line, %struct.line* %0, i32 0, i32 9, !dbg !11652
  %1 = load volatile i32, i32* %level, align 4, !dbg !11652
  store i32 %1, i32* %tmp, align 4, !dbg !11654
  %2 = load i32, i32* %tmp, align 4, !dbg !11652
  %tobool = icmp ne i32 %2, 0, !dbg !11656
  %frombool = zext i1 %tobool to i8, !dbg !11657
  store i8 %frombool, i8* %value, align 1, !dbg !11657
  %3 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !11658
  %desc = getelementptr inbounds %struct.line, %struct.line* %3, i32 0, i32 0, !dbg !11660
  %4 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11660
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %4, i32 0, i32 1, !dbg !11661
  %call = call zeroext i1 @test_bit(i64 6, i64* %flags) #9, !dbg !11662
  br i1 %call, label %if.then, label %if.end, !dbg !11663

if.then:                                          ; preds = %do.end
  %5 = load i8, i8* %value, align 1, !dbg !11664
  %tobool1 = trunc i8 %5 to i1, !dbg !11664
  %lnot = xor i1 %tobool1, true, !dbg !11665
  %frombool2 = zext i1 %lnot to i8, !dbg !11666
  store i8 %frombool2, i8* %value, align 1, !dbg !11666
  br label %if.end, !dbg !11667

if.end:                                           ; preds = %if.then, %do.end
  %6 = load i8, i8* %value, align 1, !dbg !11668
  %tobool3 = trunc i8 %6 to i1, !dbg !11668
  ret i1 %tobool3, !dbg !11669
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @linereq_set_values_unlocked(%struct.linereq* %lr, %struct.gpio_v2_line_values* %lv) #0 !dbg !11670 {
entry:
  %retval = alloca i64, align 8
  %lr.addr = alloca %struct.linereq*, align 8
  %lv.addr = alloca %struct.gpio_v2_line_values*, align 8
  %vals = alloca [1 x i64], align 8
  %descs = alloca %struct.gpio_desc**, align 8
  %i = alloca i32, align 4
  %didx = alloca i32, align 4
  %num_set = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.linereq* %lr, %struct.linereq** %lr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.linereq** %lr.addr, metadata !11674, metadata !DIExpression()), !dbg !11675
  store %struct.gpio_v2_line_values* %lv, %struct.gpio_v2_line_values** %lv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_values** %lv.addr, metadata !11676, metadata !DIExpression()), !dbg !11677
  call void @llvm.dbg.declare(metadata [1 x i64]* %vals, metadata !11678, metadata !DIExpression()), !dbg !11679
  call void @llvm.dbg.declare(metadata %struct.gpio_desc*** %descs, metadata !11680, metadata !DIExpression()), !dbg !11681
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11682, metadata !DIExpression()), !dbg !11683
  call void @llvm.dbg.declare(metadata i32* %didx, metadata !11684, metadata !DIExpression()), !dbg !11685
  call void @llvm.dbg.declare(metadata i32* %num_set, metadata !11686, metadata !DIExpression()), !dbg !11687
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11688, metadata !DIExpression()), !dbg !11689
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %vals, i64 0, i64 0, !dbg !11690
  call void @bitmap_zero(i64* %arraydecay, i32 64) #9, !dbg !11691
  store i32 0, i32* %num_set, align 4, !dbg !11692
  store i32 0, i32* %i, align 4, !dbg !11694
  br label %for.cond, !dbg !11695

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11696
  %1 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !11698
  %num_lines = getelementptr inbounds %struct.linereq, %struct.linereq* %1, i32 0, i32 2, !dbg !11699
  %2 = load i32, i32* %num_lines, align 8, !dbg !11699
  %cmp = icmp ult i32 %0, %2, !dbg !11700
  br i1 %cmp, label %for.body, label %for.end, !dbg !11701

for.body:                                         ; preds = %for.cond
  %3 = load %struct.gpio_v2_line_values*, %struct.gpio_v2_line_values** %lv.addr, align 8, !dbg !11702
  %mask = getelementptr inbounds %struct.gpio_v2_line_values, %struct.gpio_v2_line_values* %3, i32 0, i32 1, !dbg !11705
  %4 = load i64, i64* %mask, align 8, !dbg !11705
  %5 = load i32, i32* %i, align 4, !dbg !11706
  %sh_prom = zext i32 %5 to i64, !dbg !11706
  %shl = shl i64 1, %sh_prom, !dbg !11706
  %and = and i64 %4, %shl, !dbg !11707
  %tobool = icmp ne i64 %and, 0, !dbg !11707
  br i1 %tobool, label %if.then, label %if.end13, !dbg !11708

if.then:                                          ; preds = %for.body
  %6 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !11709
  %lines = getelementptr inbounds %struct.linereq, %struct.linereq* %6, i32 0, i32 8, !dbg !11712
  %7 = load i32, i32* %i, align 4, !dbg !11713
  %idxprom = zext i32 %7 to i64, !dbg !11709
  %arrayidx = getelementptr [0 x %struct.line], [0 x %struct.line]* %lines, i64 0, i64 %idxprom, !dbg !11709
  %desc = getelementptr inbounds %struct.line, %struct.line* %arrayidx, i32 0, i32 0, !dbg !11714
  %8 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11714
  %flags = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %8, i32 0, i32 1, !dbg !11715
  %call = call zeroext i1 @test_bit(i64 1, i64* %flags) #9, !dbg !11716
  br i1 %call, label %if.end, label %if.then1, !dbg !11717

if.then1:                                         ; preds = %if.then
  store i64 -1, i64* %retval, align 8, !dbg !11718
  br label %return, !dbg !11718

if.end:                                           ; preds = %if.then
  %9 = load %struct.gpio_v2_line_values*, %struct.gpio_v2_line_values** %lv.addr, align 8, !dbg !11719
  %bits = getelementptr inbounds %struct.gpio_v2_line_values, %struct.gpio_v2_line_values* %9, i32 0, i32 0, !dbg !11721
  %10 = load i64, i64* %bits, align 8, !dbg !11721
  %11 = load i32, i32* %i, align 4, !dbg !11722
  %sh_prom2 = zext i32 %11 to i64, !dbg !11722
  %shl3 = shl i64 1, %sh_prom2, !dbg !11722
  %and4 = and i64 %10, %shl3, !dbg !11723
  %tobool5 = icmp ne i64 %and4, 0, !dbg !11723
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !11724

if.then6:                                         ; preds = %if.end
  %12 = load i32, i32* %num_set, align 4, !dbg !11725
  %conv = zext i32 %12 to i64, !dbg !11725
  %arraydecay7 = getelementptr inbounds [1 x i64], [1 x i64]* %vals, i64 0, i64 0, !dbg !11726
  call void @__set_bit(i64 %conv, i64* %arraydecay7) #9, !dbg !11727
  br label %if.end8, !dbg !11727

if.end8:                                          ; preds = %if.then6, %if.end
  %13 = load i32, i32* %num_set, align 4, !dbg !11728
  %inc = add i32 %13, 1, !dbg !11728
  store i32 %inc, i32* %num_set, align 4, !dbg !11728
  %14 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !11729
  %lines9 = getelementptr inbounds %struct.linereq, %struct.linereq* %14, i32 0, i32 8, !dbg !11730
  %15 = load i32, i32* %i, align 4, !dbg !11731
  %idxprom10 = zext i32 %15 to i64, !dbg !11729
  %arrayidx11 = getelementptr [0 x %struct.line], [0 x %struct.line]* %lines9, i64 0, i64 %idxprom10, !dbg !11729
  %desc12 = getelementptr inbounds %struct.line, %struct.line* %arrayidx11, i32 0, i32 0, !dbg !11732
  store %struct.gpio_desc** %desc12, %struct.gpio_desc*** %descs, align 8, !dbg !11733
  br label %if.end13, !dbg !11734

if.end13:                                         ; preds = %if.end8, %for.body
  br label %for.inc, !dbg !11735

for.inc:                                          ; preds = %if.end13
  %16 = load i32, i32* %i, align 4, !dbg !11736
  %inc14 = add i32 %16, 1, !dbg !11736
  store i32 %inc14, i32* %i, align 4, !dbg !11736
  br label %for.cond, !dbg !11737, !llvm.loop !11738

for.end:                                          ; preds = %for.cond
  %17 = load i32, i32* %num_set, align 4, !dbg !11740
  %cmp15 = icmp eq i32 %17, 0, !dbg !11742
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !11743

if.then17:                                        ; preds = %for.end
  store i64 -22, i64* %retval, align 8, !dbg !11744
  br label %return, !dbg !11744

if.end18:                                         ; preds = %for.end
  %18 = load i32, i32* %num_set, align 4, !dbg !11745
  %cmp19 = icmp ne i32 %18, 1, !dbg !11747
  br i1 %cmp19, label %if.then21, label %if.end49, !dbg !11748

if.then21:                                        ; preds = %if.end18
  %19 = load i32, i32* %num_set, align 4, !dbg !11749
  %conv22 = zext i32 %19 to i64, !dbg !11749
  %call23 = call i8* @kmalloc_array(i64 %conv22, i64 8, i32 3264) #9, !dbg !11751
  %20 = bitcast i8* %call23 to %struct.gpio_desc**, !dbg !11751
  store %struct.gpio_desc** %20, %struct.gpio_desc*** %descs, align 8, !dbg !11752
  %21 = load %struct.gpio_desc**, %struct.gpio_desc*** %descs, align 8, !dbg !11753
  %tobool24 = icmp ne %struct.gpio_desc** %21, null, !dbg !11753
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !11755

if.then25:                                        ; preds = %if.then21
  store i64 -12, i64* %retval, align 8, !dbg !11756
  br label %return, !dbg !11756

if.end26:                                         ; preds = %if.then21
  store i32 0, i32* %didx, align 4, !dbg !11757
  store i32 0, i32* %i, align 4, !dbg !11759
  br label %for.cond27, !dbg !11760

for.cond27:                                       ; preds = %for.inc46, %if.end26
  %22 = load i32, i32* %i, align 4, !dbg !11761
  %23 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !11763
  %num_lines28 = getelementptr inbounds %struct.linereq, %struct.linereq* %23, i32 0, i32 2, !dbg !11764
  %24 = load i32, i32* %num_lines28, align 8, !dbg !11764
  %cmp29 = icmp ult i32 %22, %24, !dbg !11765
  br i1 %cmp29, label %for.body31, label %for.end48, !dbg !11766

for.body31:                                       ; preds = %for.cond27
  %25 = load %struct.gpio_v2_line_values*, %struct.gpio_v2_line_values** %lv.addr, align 8, !dbg !11767
  %mask32 = getelementptr inbounds %struct.gpio_v2_line_values, %struct.gpio_v2_line_values* %25, i32 0, i32 1, !dbg !11770
  %26 = load i64, i64* %mask32, align 8, !dbg !11770
  %27 = load i32, i32* %i, align 4, !dbg !11771
  %sh_prom33 = zext i32 %27 to i64, !dbg !11771
  %shl34 = shl i64 1, %sh_prom33, !dbg !11771
  %and35 = and i64 %26, %shl34, !dbg !11772
  %tobool36 = icmp ne i64 %and35, 0, !dbg !11772
  br i1 %tobool36, label %if.then37, label %if.end45, !dbg !11773

if.then37:                                        ; preds = %for.body31
  %28 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !11774
  %lines38 = getelementptr inbounds %struct.linereq, %struct.linereq* %28, i32 0, i32 8, !dbg !11776
  %29 = load i32, i32* %i, align 4, !dbg !11777
  %idxprom39 = zext i32 %29 to i64, !dbg !11774
  %arrayidx40 = getelementptr [0 x %struct.line], [0 x %struct.line]* %lines38, i64 0, i64 %idxprom39, !dbg !11774
  %desc41 = getelementptr inbounds %struct.line, %struct.line* %arrayidx40, i32 0, i32 0, !dbg !11778
  %30 = load %struct.gpio_desc*, %struct.gpio_desc** %desc41, align 8, !dbg !11778
  %31 = load %struct.gpio_desc**, %struct.gpio_desc*** %descs, align 8, !dbg !11779
  %32 = load i32, i32* %didx, align 4, !dbg !11780
  %idxprom42 = zext i32 %32 to i64, !dbg !11779
  %arrayidx43 = getelementptr %struct.gpio_desc*, %struct.gpio_desc** %31, i64 %idxprom42, !dbg !11779
  store %struct.gpio_desc* %30, %struct.gpio_desc** %arrayidx43, align 8, !dbg !11781
  %33 = load i32, i32* %didx, align 4, !dbg !11782
  %inc44 = add i32 %33, 1, !dbg !11782
  store i32 %inc44, i32* %didx, align 4, !dbg !11782
  br label %if.end45, !dbg !11783

if.end45:                                         ; preds = %if.then37, %for.body31
  br label %for.inc46, !dbg !11784

for.inc46:                                        ; preds = %if.end45
  %34 = load i32, i32* %i, align 4, !dbg !11785
  %inc47 = add i32 %34, 1, !dbg !11785
  store i32 %inc47, i32* %i, align 4, !dbg !11785
  br label %for.cond27, !dbg !11786, !llvm.loop !11787

for.end48:                                        ; preds = %for.cond27
  br label %if.end49, !dbg !11789

if.end49:                                         ; preds = %for.end48, %if.end18
  %35 = load i32, i32* %num_set, align 4, !dbg !11790
  %36 = load %struct.gpio_desc**, %struct.gpio_desc*** %descs, align 8, !dbg !11791
  %arraydecay50 = getelementptr inbounds [1 x i64], [1 x i64]* %vals, i64 0, i64 0, !dbg !11792
  %call51 = call i32 @gpiod_set_array_value_complex(i1 zeroext false, i1 zeroext true, i32 %35, %struct.gpio_desc** %36, %struct.gpio_array* null, i64* %arraydecay50) #9, !dbg !11793
  store i32 %call51, i32* %ret, align 4, !dbg !11794
  %37 = load i32, i32* %num_set, align 4, !dbg !11795
  %cmp52 = icmp ne i32 %37, 1, !dbg !11797
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !11798

if.then54:                                        ; preds = %if.end49
  %38 = load %struct.gpio_desc**, %struct.gpio_desc*** %descs, align 8, !dbg !11799
  %39 = bitcast %struct.gpio_desc** %38 to i8*, !dbg !11799
  call void @kfree(i8* %39) #9, !dbg !11800
  br label %if.end55, !dbg !11800

if.end55:                                         ; preds = %if.then54, %if.end49
  %40 = load i32, i32* %ret, align 4, !dbg !11801
  %conv56 = sext i32 %40 to i64, !dbg !11801
  store i64 %conv56, i64* %retval, align 8, !dbg !11802
  br label %return, !dbg !11802

return:                                           ; preds = %if.end55, %if.then25, %if.then17, %if.then1
  %41 = load i64, i64* %retval, align 8, !dbg !11803
  ret i64 %41, !dbg !11803
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bitmap_zero(i64* %dst, i32 %nbits) #0 !dbg !11804 {
entry:
  %dst.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  %len = alloca i32, align 4
  store i64* %dst, i64** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.addr, metadata !11808, metadata !DIExpression()), !dbg !11809
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !11810, metadata !DIExpression()), !dbg !11811
  call void @llvm.dbg.declare(metadata i32* %len, metadata !11812, metadata !DIExpression()), !dbg !11813
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !11814
  %conv = zext i32 %0 to i64, !dbg !11814
  %add = add i64 %conv, 64, !dbg !11814
  %sub = sub i64 %add, 1, !dbg !11814
  %div = udiv i64 %sub, 64, !dbg !11814
  %mul = mul i64 %div, 8, !dbg !11815
  %conv1 = trunc i64 %mul to i32, !dbg !11814
  store i32 %conv1, i32* %len, align 4, !dbg !11813
  %1 = load i64*, i64** %dst.addr, align 8, !dbg !11816
  %2 = bitcast i64* %1 to i8*, !dbg !11817
  %3 = load i32, i32* %len, align 4, !dbg !11818
  %conv2 = zext i32 %3 to i64, !dbg !11818
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 %conv2, i1 false), !dbg !11817
  ret void, !dbg !11819
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @linereq_set_config_unlocked(%struct.linereq* %lr, %struct.gpio_v2_line_config* %lc) #0 !dbg !11820 {
entry:
  %retval = alloca i64, align 8
  %lr.addr = alloca %struct.linereq*, align 8
  %lc.addr = alloca %struct.gpio_v2_line_config*, align 8
  %desc = alloca %struct.gpio_desc*, align 8
  %i = alloca i32, align 4
  %flags = alloca i64, align 8
  %polarity_change = alloca i8, align 1
  %ret = alloca i32, align 4
  %val = alloca i32, align 4
  store %struct.linereq* %lr, %struct.linereq** %lr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.linereq** %lr.addr, metadata !11823, metadata !DIExpression()), !dbg !11824
  store %struct.gpio_v2_line_config* %lc, %struct.gpio_v2_line_config** %lc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_config** %lc.addr, metadata !11825, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc, metadata !11827, metadata !DIExpression()), !dbg !11828
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11829, metadata !DIExpression()), !dbg !11830
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11831, metadata !DIExpression()), !dbg !11832
  call void @llvm.dbg.declare(metadata i8* %polarity_change, metadata !11833, metadata !DIExpression()), !dbg !11834
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11835, metadata !DIExpression()), !dbg !11836
  store i32 0, i32* %i, align 4, !dbg !11837
  br label %for.cond, !dbg !11839

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11840
  %1 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !11842
  %num_lines = getelementptr inbounds %struct.linereq, %struct.linereq* %1, i32 0, i32 2, !dbg !11843
  %2 = load i32, i32* %num_lines, align 8, !dbg !11843
  %cmp = icmp ult i32 %0, %2, !dbg !11844
  br i1 %cmp, label %for.body, label %for.end, !dbg !11845

for.body:                                         ; preds = %for.cond
  %3 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !11846
  %lines = getelementptr inbounds %struct.linereq, %struct.linereq* %3, i32 0, i32 8, !dbg !11848
  %4 = load i32, i32* %i, align 4, !dbg !11849
  %idxprom = zext i32 %4 to i64, !dbg !11846
  %arrayidx = getelementptr [0 x %struct.line], [0 x %struct.line]* %lines, i64 0, i64 %idxprom, !dbg !11846
  %desc1 = getelementptr inbounds %struct.line, %struct.line* %arrayidx, i32 0, i32 0, !dbg !11850
  %5 = load %struct.gpio_desc*, %struct.gpio_desc** %desc1, align 8, !dbg !11850
  store %struct.gpio_desc* %5, %struct.gpio_desc** %desc, align 8, !dbg !11851
  %6 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !11852
  %7 = load i32, i32* %i, align 4, !dbg !11853
  %call = call i64 @gpio_v2_line_config_flags(%struct.gpio_v2_line_config* %6, i32 %7) #9, !dbg !11854
  store i64 %call, i64* %flags, align 8, !dbg !11855
  %8 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11856
  %flags2 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %8, i32 0, i32 1, !dbg !11857
  %call3 = call zeroext i1 @test_bit(i64 6, i64* %flags2) #9, !dbg !11858
  %lnot = xor i1 %call3, true, !dbg !11859
  %lnot4 = xor i1 %lnot, true, !dbg !11860
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !11860
  %9 = load i64, i64* %flags, align 8, !dbg !11861
  %and = and i64 %9, 2, !dbg !11862
  %cmp5 = icmp ne i64 %and, 0, !dbg !11863
  %conv = zext i1 %cmp5 to i32, !dbg !11863
  %cmp6 = icmp ne i32 %lnot.ext, %conv, !dbg !11864
  %frombool = zext i1 %cmp6 to i8, !dbg !11865
  store i8 %frombool, i8* %polarity_change, align 1, !dbg !11865
  %10 = load i64, i64* %flags, align 8, !dbg !11866
  %11 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11867
  %flags8 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %11, i32 0, i32 1, !dbg !11868
  call void @gpio_v2_line_config_flags_to_desc_flags(i64 %10, i64* %flags8) #9, !dbg !11869
  %12 = load i64, i64* %flags, align 8, !dbg !11870
  %and9 = and i64 %12, 8, !dbg !11872
  %tobool = icmp ne i64 %and9, 0, !dbg !11872
  br i1 %tobool, label %if.then, label %if.else, !dbg !11873

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %val, metadata !11874, metadata !DIExpression()), !dbg !11876
  %13 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !11877
  %14 = load i32, i32* %i, align 4, !dbg !11878
  %call10 = call i32 @gpio_v2_line_config_output_value(%struct.gpio_v2_line_config* %13, i32 %14) #9, !dbg !11879
  store i32 %call10, i32* %val, align 4, !dbg !11876
  %15 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !11880
  %lines11 = getelementptr inbounds %struct.linereq, %struct.linereq* %15, i32 0, i32 8, !dbg !11881
  %16 = load i32, i32* %i, align 4, !dbg !11882
  %idxprom12 = zext i32 %16 to i64, !dbg !11880
  %arrayidx13 = getelementptr [0 x %struct.line], [0 x %struct.line]* %lines11, i64 0, i64 %idxprom12, !dbg !11880
  call void @edge_detector_stop(%struct.line* %arrayidx13) #9, !dbg !11883
  %17 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11884
  %18 = load i32, i32* %val, align 4, !dbg !11885
  %call14 = call i32 @gpiod_direction_output(%struct.gpio_desc* %17, i32 %18) #9, !dbg !11886
  store i32 %call14, i32* %ret, align 4, !dbg !11887
  %19 = load i32, i32* %ret, align 4, !dbg !11888
  %tobool15 = icmp ne i32 %19, 0, !dbg !11888
  br i1 %tobool15, label %if.then16, label %if.end, !dbg !11890

if.then16:                                        ; preds = %if.then
  %20 = load i32, i32* %ret, align 4, !dbg !11891
  %conv17 = sext i32 %20 to i64, !dbg !11891
  store i64 %conv17, i64* %retval, align 8, !dbg !11892
  br label %return, !dbg !11892

if.end:                                           ; preds = %if.then
  br label %if.end37, !dbg !11893

if.else:                                          ; preds = %for.body
  %21 = load i64, i64* %flags, align 8, !dbg !11894
  %and18 = and i64 %21, 4, !dbg !11896
  %tobool19 = icmp ne i64 %and18, 0, !dbg !11896
  br i1 %tobool19, label %if.then20, label %if.end36, !dbg !11897

if.then20:                                        ; preds = %if.else
  %22 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11898
  %call21 = call i32 @gpiod_direction_input(%struct.gpio_desc* %22) #9, !dbg !11900
  store i32 %call21, i32* %ret, align 4, !dbg !11901
  %23 = load i32, i32* %ret, align 4, !dbg !11902
  %tobool22 = icmp ne i32 %23, 0, !dbg !11902
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !11904

if.then23:                                        ; preds = %if.then20
  %24 = load i32, i32* %ret, align 4, !dbg !11905
  %conv24 = sext i32 %24 to i64, !dbg !11905
  store i64 %conv24, i64* %retval, align 8, !dbg !11906
  br label %return, !dbg !11906

if.end25:                                         ; preds = %if.then20
  %25 = load %struct.linereq*, %struct.linereq** %lr.addr, align 8, !dbg !11907
  %lines26 = getelementptr inbounds %struct.linereq, %struct.linereq* %25, i32 0, i32 8, !dbg !11908
  %26 = load i32, i32* %i, align 4, !dbg !11909
  %idxprom27 = zext i32 %26 to i64, !dbg !11907
  %arrayidx28 = getelementptr [0 x %struct.line], [0 x %struct.line]* %lines26, i64 0, i64 %idxprom27, !dbg !11907
  %27 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !11910
  %28 = load i32, i32* %i, align 4, !dbg !11911
  %29 = load i64, i64* %flags, align 8, !dbg !11912
  %and29 = and i64 %29, 48, !dbg !11913
  %30 = load i8, i8* %polarity_change, align 1, !dbg !11914
  %tobool30 = trunc i8 %30 to i1, !dbg !11914
  %call31 = call i32 @edge_detector_update(%struct.line* %arrayidx28, %struct.gpio_v2_line_config* %27, i32 %28, i64 %and29, i1 zeroext %tobool30) #9, !dbg !11915
  store i32 %call31, i32* %ret, align 4, !dbg !11916
  %31 = load i32, i32* %ret, align 4, !dbg !11917
  %tobool32 = icmp ne i32 %31, 0, !dbg !11917
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !11919

if.then33:                                        ; preds = %if.end25
  %32 = load i32, i32* %ret, align 4, !dbg !11920
  %conv34 = sext i32 %32 to i64, !dbg !11920
  store i64 %conv34, i64* %retval, align 8, !dbg !11921
  br label %return, !dbg !11921

if.end35:                                         ; preds = %if.end25
  br label %if.end36, !dbg !11922

if.end36:                                         ; preds = %if.end35, %if.else
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end
  %33 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11923
  %gdev = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %33, i32 0, i32 0, !dbg !11924
  %34 = load %struct.gpio_device*, %struct.gpio_device** %gdev, align 8, !dbg !11924
  %notifier = getelementptr inbounds %struct.gpio_device, %struct.gpio_device* %34, i32 0, i32 12, !dbg !11925
  %35 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11926
  %36 = bitcast %struct.gpio_desc* %35 to i8*, !dbg !11926
  %call38 = call i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head* %notifier, i64 3, i8* %36) #9, !dbg !11927
  br label %for.inc, !dbg !11928

for.inc:                                          ; preds = %if.end37
  %37 = load i32, i32* %i, align 4, !dbg !11929
  %inc = add i32 %37, 1, !dbg !11929
  store i32 %inc, i32* %i, align 4, !dbg !11929
  br label %for.cond, !dbg !11930, !llvm.loop !11931

for.end:                                          ; preds = %for.cond
  store i64 0, i64* %retval, align 8, !dbg !11933
  br label %return, !dbg !11933

return:                                           ; preds = %for.end, %if.then33, %if.then23, %if.then16
  %38 = load i64, i64* %retval, align 8, !dbg !11934
  ret i64 %38, !dbg !11934
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edge_detector_stop(%struct.line* %line) #0 !dbg !11935 {
entry:
  %line.addr = alloca %struct.line*, align 8
  store %struct.line* %line, %struct.line** %line.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.line** %line.addr, metadata !11938, metadata !DIExpression()), !dbg !11939
  %0 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !11940
  %irq = getelementptr inbounds %struct.line, %struct.line* %0, i32 0, i32 2, !dbg !11942
  %1 = load i32, i32* %irq, align 8, !dbg !11942
  %tobool = icmp ne i32 %1, 0, !dbg !11940
  br i1 %tobool, label %if.then, label %if.end, !dbg !11943

if.then:                                          ; preds = %entry
  %2 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !11944
  %irq1 = getelementptr inbounds %struct.line, %struct.line* %2, i32 0, i32 2, !dbg !11946
  %3 = load i32, i32* %irq1, align 8, !dbg !11946
  %4 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !11947
  %5 = bitcast %struct.line* %4 to i8*, !dbg !11947
  %call = call i8* @free_irq(i32 %3, i8* %5) #9, !dbg !11948
  %6 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !11949
  %irq2 = getelementptr inbounds %struct.line, %struct.line* %6, i32 0, i32 2, !dbg !11950
  store i32 0, i32* %irq2, align 8, !dbg !11951
  br label %if.end, !dbg !11952

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !11953
  %work = getelementptr inbounds %struct.line, %struct.line* %7, i32 0, i32 7, !dbg !11954
  %call3 = call zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work* %work) #9, !dbg !11955
  br label %do.body, !dbg !11956

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !11957

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !11959

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !11957

do.body5:                                         ; preds = %do.end
  %8 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !11961
  %sw_debounced = getelementptr inbounds %struct.line, %struct.line* %8, i32 0, i32 8, !dbg !11961
  store volatile i32 0, i32* %sw_debounced, align 8, !dbg !11961
  br label %do.end6, !dbg !11961

do.end6:                                          ; preds = %do.body5
  br label %do.end7, !dbg !11957

do.end7:                                          ; preds = %do.end6
  %9 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !11963
  %eflags = getelementptr inbounds %struct.line, %struct.line* %9, i32 0, i32 3, !dbg !11964
  store i64 0, i64* %eflags, align 8, !dbg !11965
  ret void, !dbg !11966
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edge_detector_update(%struct.line* %line, %struct.gpio_v2_line_config* %lc, i32 %line_idx, i64 %eflags, i1 zeroext %polarity_change) #0 !dbg !11967 {
entry:
  %retval = alloca i32, align 4
  %line.addr = alloca %struct.line*, align 8
  %lc.addr = alloca %struct.gpio_v2_line_config*, align 8
  %line_idx.addr = alloca i32, align 4
  %eflags.addr = alloca i64, align 8
  %polarity_change.addr = alloca i8, align 1
  %debounce_period_us = alloca i32, align 4
  %tmp = alloca i32, align 4
  %tmp9 = alloca i32, align 4
  %tmp26 = alloca i32, align 4
  %tmp33 = alloca i32, align 4
  store %struct.line* %line, %struct.line** %line.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.line** %line.addr, metadata !11970, metadata !DIExpression()), !dbg !11971
  store %struct.gpio_v2_line_config* %lc, %struct.gpio_v2_line_config** %lc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_config** %lc.addr, metadata !11972, metadata !DIExpression()), !dbg !11973
  store i32 %line_idx, i32* %line_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %line_idx.addr, metadata !11974, metadata !DIExpression()), !dbg !11975
  store i64 %eflags, i64* %eflags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %eflags.addr, metadata !11976, metadata !DIExpression()), !dbg !11977
  %frombool = zext i1 %polarity_change to i8
  store i8 %frombool, i8* %polarity_change.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %polarity_change.addr, metadata !11978, metadata !DIExpression()), !dbg !11979
  call void @llvm.dbg.declare(metadata i32* %debounce_period_us, metadata !11980, metadata !DIExpression()), !dbg !11981
  %0 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !11982
  %1 = load i32, i32* %line_idx.addr, align 4, !dbg !11983
  %call = call i32 @gpio_v2_line_config_debounce_period(%struct.gpio_v2_line_config* %0, i32 %1) #9, !dbg !11984
  store i32 %call, i32* %debounce_period_us, align 4, !dbg !11981
  %2 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !11985
  %eflags1 = getelementptr inbounds %struct.line, %struct.line* %2, i32 0, i32 3, !dbg !11987
  %3 = load i64, i64* %eflags1, align 8, !dbg !11987
  %4 = load i64, i64* %eflags.addr, align 8, !dbg !11988
  %cmp = icmp eq i64 %3, %4, !dbg !11989
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11990

land.lhs.true:                                    ; preds = %entry
  %5 = load i8, i8* %polarity_change.addr, align 1, !dbg !11991
  %tobool = trunc i8 %5 to i1, !dbg !11991
  br i1 %tobool, label %if.end, label %land.lhs.true2, !dbg !11992

land.lhs.true2:                                   ; preds = %land.lhs.true
  br label %do.body, !dbg !11993

do.body:                                          ; preds = %land.lhs.true2
  br label %do.end, !dbg !11995

do.end:                                           ; preds = %do.body
  %6 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !11993
  %desc = getelementptr inbounds %struct.line, %struct.line* %6, i32 0, i32 0, !dbg !11993
  %7 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !11993
  %debounce_period_us3 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %7, i32 0, i32 4, !dbg !11993
  %8 = load volatile i32, i32* %debounce_period_us3, align 8, !dbg !11993
  store i32 %8, i32* %tmp, align 4, !dbg !11995
  %9 = load i32, i32* %tmp, align 4, !dbg !11993
  %10 = load i32, i32* %debounce_period_us, align 4, !dbg !11997
  %cmp4 = icmp eq i32 %9, %10, !dbg !11998
  br i1 %cmp4, label %if.then, label %if.end, !dbg !11999

if.then:                                          ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !12000
  br label %return, !dbg !12000

if.end:                                           ; preds = %do.end, %land.lhs.true, %entry
  %11 = load i32, i32* %debounce_period_us, align 4, !dbg !12001
  %tobool5 = icmp ne i32 %11, 0, !dbg !12001
  br i1 %tobool5, label %land.lhs.true6, label %if.end21, !dbg !12003

land.lhs.true6:                                   ; preds = %if.end
  br label %do.body7, !dbg !12004

do.body7:                                         ; preds = %land.lhs.true6
  br label %do.end8, !dbg !12006

do.end8:                                          ; preds = %do.body7
  %12 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !12004
  %sw_debounced = getelementptr inbounds %struct.line, %struct.line* %12, i32 0, i32 8, !dbg !12004
  %13 = load volatile i32, i32* %sw_debounced, align 8, !dbg !12004
  store i32 %13, i32* %tmp9, align 4, !dbg !12006
  %14 = load i32, i32* %tmp9, align 4, !dbg !12004
  %tobool10 = icmp ne i32 %14, 0, !dbg !12008
  br i1 %tobool10, label %if.then11, label %if.end21, !dbg !12009

if.then11:                                        ; preds = %do.end8
  %15 = load i64, i64* %eflags.addr, align 8, !dbg !12010
  %16 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !12012
  %eflags12 = getelementptr inbounds %struct.line, %struct.line* %16, i32 0, i32 3, !dbg !12013
  store i64 %15, i64* %eflags12, align 8, !dbg !12014
  br label %do.body13, !dbg !12015

do.body13:                                        ; preds = %if.then11
  br label %do.body14, !dbg !12016

do.body14:                                        ; preds = %do.body13
  br label %do.end15, !dbg !12018

do.end15:                                         ; preds = %do.body14
  br label %do.body16, !dbg !12016

do.body16:                                        ; preds = %do.end15
  %17 = load i32, i32* %debounce_period_us, align 4, !dbg !12020
  %18 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !12020
  %desc17 = getelementptr inbounds %struct.line, %struct.line* %18, i32 0, i32 0, !dbg !12020
  %19 = load %struct.gpio_desc*, %struct.gpio_desc** %desc17, align 8, !dbg !12020
  %debounce_period_us18 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %19, i32 0, i32 4, !dbg !12020
  store volatile i32 %17, i32* %debounce_period_us18, align 8, !dbg !12020
  br label %do.end19, !dbg !12020

do.end19:                                         ; preds = %do.body16
  br label %do.end20, !dbg !12016

do.end20:                                         ; preds = %do.end19
  store i32 0, i32* %retval, align 4, !dbg !12022
  br label %return, !dbg !12022

if.end21:                                         ; preds = %do.end8, %if.end
  %20 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !12023
  %irq = getelementptr inbounds %struct.line, %struct.line* %20, i32 0, i32 2, !dbg !12025
  %21 = load i32, i32* %irq, align 8, !dbg !12025
  %tobool22 = icmp ne i32 %21, 0, !dbg !12023
  br i1 %tobool22, label %land.lhs.true23, label %lor.lhs.false, !dbg !12026

land.lhs.true23:                                  ; preds = %if.end21
  br label %do.body24, !dbg !12027

do.body24:                                        ; preds = %land.lhs.true23
  br label %do.end25, !dbg !12029

do.end25:                                         ; preds = %do.body24
  %22 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !12027
  %sw_debounced27 = getelementptr inbounds %struct.line, %struct.line* %22, i32 0, i32 8, !dbg !12027
  %23 = load volatile i32, i32* %sw_debounced27, align 8, !dbg !12027
  store i32 %23, i32* %tmp26, align 4, !dbg !12029
  %24 = load i32, i32* %tmp26, align 4, !dbg !12027
  %tobool28 = icmp ne i32 %24, 0, !dbg !12031
  br i1 %tobool28, label %lor.lhs.false, label %if.then36, !dbg !12032

lor.lhs.false:                                    ; preds = %do.end25, %if.end21
  %25 = load i32, i32* %debounce_period_us, align 4, !dbg !12033
  %tobool29 = icmp ne i32 %25, 0, !dbg !12033
  br i1 %tobool29, label %if.end37, label %land.lhs.true30, !dbg !12034

land.lhs.true30:                                  ; preds = %lor.lhs.false
  br label %do.body31, !dbg !12035

do.body31:                                        ; preds = %land.lhs.true30
  br label %do.end32, !dbg !12037

do.end32:                                         ; preds = %do.body31
  %26 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !12035
  %sw_debounced34 = getelementptr inbounds %struct.line, %struct.line* %26, i32 0, i32 8, !dbg !12035
  %27 = load volatile i32, i32* %sw_debounced34, align 8, !dbg !12035
  store i32 %27, i32* %tmp33, align 4, !dbg !12037
  %28 = load i32, i32* %tmp33, align 4, !dbg !12035
  %tobool35 = icmp ne i32 %28, 0, !dbg !12039
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !12040

if.then36:                                        ; preds = %do.end32, %do.end25
  %29 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !12041
  call void @edge_detector_stop(%struct.line* %29) #9, !dbg !12042
  br label %if.end37, !dbg !12042

if.end37:                                         ; preds = %if.then36, %do.end32, %lor.lhs.false
  %30 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !12043
  %31 = load %struct.gpio_v2_line_config*, %struct.gpio_v2_line_config** %lc.addr, align 8, !dbg !12044
  %32 = load i32, i32* %line_idx.addr, align 4, !dbg !12045
  %33 = load i64, i64* %eflags.addr, align 8, !dbg !12046
  %call38 = call i32 @edge_detector_setup(%struct.line* %30, %struct.gpio_v2_line_config* %31, i32 %32, i64 %33) #9, !dbg !12047
  store i32 %call38, i32* %retval, align 4, !dbg !12048
  br label %return, !dbg !12048

return:                                           ; preds = %if.end37, %do.end20, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !12049
  ret i32 %34, !dbg !12049
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work*) #2

; Function Attrs: noredzone
declare dso_local void @__kfifo_free(%struct.__kfifo*) #2

; Function Attrs: noredzone
declare dso_local i64* @bitmap_zalloc(i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @lineinfo_changed_notify(%struct.notifier_block* %nb, i64 %action, i8* %data) #0 !dbg !12050 {
entry:
  %lock.addr.i35 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i35, metadata !5979, metadata !DIExpression()), !dbg !12051
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5985, metadata !DIExpression()), !dbg !12054
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5987, metadata !DIExpression()), !dbg !12055
  %retval = alloca i32, align 4
  %nb.addr = alloca %struct.notifier_block*, align 8
  %action.addr = alloca i64, align 8
  %data.addr = alloca i8*, align 8
  %cdev = alloca %struct.gpio_chardev_data*, align 8
  %chg = alloca %struct.gpio_v2_line_info_changed, align 8
  %desc = alloca %struct.gpio_desc*, align 8
  %ret = alloca i32, align 4
  %__flags = alloca i64, align 8
  %__ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy10 = alloca i64, align 8
  %__dummy211 = alloca i64, align 8
  %tmp14 = alloca i32, align 4
  %__tmp = alloca %struct.anon.68*, align 8
  %__buf = alloca %struct.gpio_v2_line_info_changed*, align 8
  %__n = alloca i64, align 8
  %__recsize = alloca i64, align 8
  %__kfifo = alloca %struct.__kfifo*, align 8
  %tmp25 = alloca i32, align 4
  %tmp30 = alloca i32, align 4
  %tmp33 = alloca i32, align 4
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !12062, metadata !DIExpression()), !dbg !12063
  store i64 %action, i64* %action.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %action.addr, metadata !12064, metadata !DIExpression()), !dbg !12065
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !12066, metadata !DIExpression()), !dbg !12067
  call void @llvm.dbg.declare(metadata %struct.gpio_chardev_data** %cdev, metadata !12068, metadata !DIExpression()), !dbg !12069
  %0 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !12070
  %call = call %struct.gpio_chardev_data* @to_gpio_chardev_data(%struct.notifier_block* %0) #9, !dbg !12071
  store %struct.gpio_chardev_data* %call, %struct.gpio_chardev_data** %cdev, align 8, !dbg !12069
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_info_changed* %chg, metadata !12072, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %desc, metadata !12074, metadata !DIExpression()), !dbg !12075
  %1 = load i8*, i8** %data.addr, align 8, !dbg !12076
  %2 = bitcast i8* %1 to %struct.gpio_desc*, !dbg !12076
  store %struct.gpio_desc* %2, %struct.gpio_desc** %desc, align 8, !dbg !12075
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12077, metadata !DIExpression()), !dbg !12078
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12079
  %call1 = call i32 @gpio_chip_hwgpio(%struct.gpio_desc* %3) #9, !dbg !12081
  %conv = sext i32 %call1 to i64, !dbg !12081
  %4 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !12082
  %watched_lines = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %4, i32 0, i32 4, !dbg !12083
  %5 = load i64*, i64** %watched_lines, align 8, !dbg !12083
  %call2 = call zeroext i1 @test_bit(i64 %conv, i64* %5) #9, !dbg !12084
  br i1 %call2, label %if.end, label %if.then, !dbg !12085

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12086
  br label %return, !dbg !12086

if.end:                                           ; preds = %entry
  %6 = bitcast %struct.gpio_v2_line_info_changed* %chg to i8*, !dbg !12087
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 288, i1 false), !dbg !12087
  %7 = load i64, i64* %action.addr, align 8, !dbg !12088
  %conv3 = trunc i64 %7 to i32, !dbg !12088
  %event_type = getelementptr inbounds %struct.gpio_v2_line_info_changed, %struct.gpio_v2_line_info_changed* %chg, i32 0, i32 2, !dbg !12089
  store i32 %conv3, i32* %event_type, align 8, !dbg !12090
  %call4 = call i64 @ktime_get_ns() #9, !dbg !12091
  %timestamp_ns = getelementptr inbounds %struct.gpio_v2_line_info_changed, %struct.gpio_v2_line_info_changed* %chg, i32 0, i32 1, !dbg !12092
  store i64 %call4, i64* %timestamp_ns, align 8, !dbg !12093
  %8 = load %struct.gpio_desc*, %struct.gpio_desc** %desc, align 8, !dbg !12094
  %info = getelementptr inbounds %struct.gpio_v2_line_info_changed, %struct.gpio_v2_line_info_changed* %chg, i32 0, i32 0, !dbg !12095
  call void @gpio_desc_to_lineinfo(%struct.gpio_desc* %8, %struct.gpio_v2_line_info* %info) #9, !dbg !12096
  call void @llvm.dbg.declare(metadata i64* %__flags, metadata !12097, metadata !DIExpression()), !dbg !12098
  call void @llvm.dbg.declare(metadata i32* %__ret, metadata !12099, metadata !DIExpression()), !dbg !12098
  br label %do.body, !dbg !12098

do.body:                                          ; preds = %if.end
  br label %do.body5, !dbg !12100

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12101, metadata !DIExpression()), !dbg !12103
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12104, metadata !DIExpression()), !dbg !12103
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12103
  %conv6 = zext i1 %cmp to i32, !dbg !12103
  store i32 1, i32* %tmp, align 4, !dbg !12103
  %9 = load i32, i32* %tmp, align 4, !dbg !12103
  br label %do.body7, !dbg !12105

do.body7:                                         ; preds = %do.body5
  br label %do.body8, !dbg !12106

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !12107

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy10, metadata !12109, metadata !DIExpression()), !dbg !12112
  call void @llvm.dbg.declare(metadata i64* %__dummy211, metadata !12113, metadata !DIExpression()), !dbg !12112
  %cmp12 = icmp eq i64* %__dummy10, %__dummy211, !dbg !12112
  %conv13 = zext i1 %cmp12 to i32, !dbg !12112
  store i32 1, i32* %tmp14, align 4, !dbg !12112
  %10 = load i32, i32* %tmp14, align 4, !dbg !12112
  %call15 = call i64 @arch_local_irq_save() #9, !dbg !12114
  store i64 %call15, i64* %__flags, align 8, !dbg !12114
  br label %do.end, !dbg !12114

do.end:                                           ; preds = %do.body9
  br label %do.end16, !dbg !12107

do.end16:                                         ; preds = %do.end
  br label %do.body17, !dbg !12106

do.body17:                                        ; preds = %do.end16
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12115, !srcloc !12116
  br label %do.body18, !dbg !12115

do.body18:                                        ; preds = %do.body17
  %11 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !12117
  %wait = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %11, i32 0, i32 1, !dbg !12117
  %lock = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait, i32 0, i32 0, !dbg !12117
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12118
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !12119
  %rlock.i = bitcast %union.anon.1* %13 to %struct.raw_spinlock*, !dbg !12119
  br label %do.end20, !dbg !12117

do.end20:                                         ; preds = %do.body18
  br label %do.end21, !dbg !12115

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !12106

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !12105

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !12100

do.end24:                                         ; preds = %do.end23
  call void @llvm.dbg.declare(metadata %struct.anon.68** %__tmp, metadata !12120, metadata !DIExpression()), !dbg !12122
  %14 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !12122
  %events = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %14, i32 0, i32 2, !dbg !12122
  store %struct.anon.68* %events, %struct.anon.68** %__tmp, align 8, !dbg !12122
  call void @llvm.dbg.declare(metadata %struct.gpio_v2_line_info_changed** %__buf, metadata !12123, metadata !DIExpression()), !dbg !12122
  store %struct.gpio_v2_line_info_changed* %chg, %struct.gpio_v2_line_info_changed** %__buf, align 8, !dbg !12122
  call void @llvm.dbg.declare(metadata i64* %__n, metadata !12124, metadata !DIExpression()), !dbg !12122
  store i64 1, i64* %__n, align 8, !dbg !12122
  call void @llvm.dbg.declare(metadata i64* %__recsize, metadata !12125, metadata !DIExpression()), !dbg !12122
  store i64 0, i64* %__recsize, align 8, !dbg !12122
  call void @llvm.dbg.declare(metadata %struct.__kfifo** %__kfifo, metadata !12126, metadata !DIExpression()), !dbg !12122
  %15 = load %struct.anon.68*, %struct.anon.68** %__tmp, align 8, !dbg !12122
  %16 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %15, i32 0, i32 0, !dbg !12122
  %kfifo = bitcast %union.anon.69* %16 to %struct.__kfifo*, !dbg !12122
  store %struct.__kfifo* %kfifo, %struct.__kfifo** %__kfifo, align 8, !dbg !12122
  %17 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo, align 8, !dbg !12122
  %18 = load %struct.gpio_v2_line_info_changed*, %struct.gpio_v2_line_info_changed** %__buf, align 8, !dbg !12122
  %19 = bitcast %struct.gpio_v2_line_info_changed* %18 to i8*, !dbg !12122
  %20 = load i64, i64* %__n, align 8, !dbg !12122
  %conv26 = trunc i64 %20 to i32, !dbg !12122
  %call27 = call i32 @__kfifo_in(%struct.__kfifo* %17, i8* %19, i32 %conv26) #9, !dbg !12122
  store i32 %call27, i32* %tmp25, align 4, !dbg !12122
  %21 = load i32, i32* %tmp25, align 4, !dbg !12122
  store i32 %21, i32* %__ret, align 4, !dbg !12098
  %22 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !12098
  %wait28 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %22, i32 0, i32 1, !dbg !12098
  %lock29 = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %wait28, i32 0, i32 0, !dbg !12098
  %23 = load i64, i64* %__flags, align 8, !dbg !12098
  store %struct.spinlock* %lock29, %struct.spinlock** %lock.addr.i35, align 8
  store i64 %23, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !281, metadata !6200, metadata !DIExpression()) #6, !dbg !12127
  call void @llvm.dbg.declare(metadata !281, metadata !6204, metadata !DIExpression()) #6, !dbg !12127
  store i32 1, i32* %tmp.i, align 4, !dbg !12127
  %24 = load i32, i32* %tmp.i, align 4, !dbg !12127
  call void @llvm.dbg.declare(metadata !281, metadata !6205, metadata !DIExpression()) #6, !dbg !12128
  call void @llvm.dbg.declare(metadata !281, metadata !6211, metadata !DIExpression()) #6, !dbg !12128
  store i32 1, i32* %tmp8.i, align 4, !dbg !12128
  %25 = load i32, i32* %tmp8.i, align 4, !dbg !12128
  %26 = load i64, i64* %flags.addr.i, align 8, !dbg !12129
  call void @arch_local_irq_restore(i64 %26) #11, !dbg !12129
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12130, !srcloc !6215
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i35, align 8, !dbg !12131
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !12131
  %rlock.i36 = bitcast %union.anon.1* %28 to %struct.raw_spinlock*, !dbg !12131
  %29 = load i32, i32* %__ret, align 4, !dbg !12098
  store i32 %29, i32* %tmp30, align 4, !dbg !12098
  %30 = load i32, i32* %tmp30, align 4, !dbg !12098
  store i32 %30, i32* %ret, align 4, !dbg !12132
  %31 = load i32, i32* %ret, align 4, !dbg !12133
  %tobool = icmp ne i32 %31, 0, !dbg !12133
  br i1 %tobool, label %if.then31, label %if.else, !dbg !12135

if.then31:                                        ; preds = %do.end24
  %32 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %cdev, align 8, !dbg !12136
  %wait32 = getelementptr inbounds %struct.gpio_chardev_data, %struct.gpio_chardev_data* %32, i32 0, i32 1, !dbg !12136
  call void @__wake_up(%struct.wait_queue_head* %wait32, i32 3, i32 1, i8* inttoptr (i64 1 to i8*)) #9, !dbg !12136
  br label %if.end34, !dbg !12136

if.else:                                          ; preds = %do.end24
  store i32 0, i32* %tmp33, align 4, !dbg !12137
  %33 = load i32, i32* %tmp33, align 4, !dbg !12140
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then31
  store i32 1, i32* %retval, align 4, !dbg !12141
  br label %return, !dbg !12141

return:                                           ; preds = %if.end34, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !12142
  ret i32 %34, !dbg !12142
}

; Function Attrs: noredzone
declare dso_local i32 @blocking_notifier_chain_register(%struct.blocking_notifier_head*, %struct.notifier_block*) #2

; Function Attrs: noredzone
declare dso_local i32 @nonseekable_open(%struct.inode*, %struct.file*) #2

; Function Attrs: noredzone
declare dso_local i32 @blocking_notifier_chain_unregister(%struct.blocking_notifier_head*, %struct.notifier_block*) #2

; Function Attrs: noredzone
declare dso_local void @bitmap_free(i64*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.gpio_chardev_data* @to_gpio_chardev_data(%struct.notifier_block* %nb) #0 !dbg !12143 {
entry:
  %nb.addr = alloca %struct.notifier_block*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.gpio_chardev_data*, align 8
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !12146, metadata !DIExpression()), !dbg !12147
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12148, metadata !DIExpression()), !dbg !12150
  %0 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !12150
  %1 = bitcast %struct.notifier_block* %0 to i8*, !dbg !12150
  store i8* %1, i8** %__mptr, align 8, !dbg !12150
  br label %do.body, !dbg !12150

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12151

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12150
  %add.ptr = getelementptr i8, i8* %2, i64 -9264, !dbg !12150
  %3 = bitcast i8* %add.ptr to %struct.gpio_chardev_data*, !dbg !12150
  store %struct.gpio_chardev_data* %3, %struct.gpio_chardev_data** %tmp, align 8, !dbg !12151
  %4 = load %struct.gpio_chardev_data*, %struct.gpio_chardev_data** %tmp, align 8, !dbg !12150
  ret %struct.gpio_chardev_data* %4, !dbg !12153
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone willreturn }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind readonly }
attributes #6 = { nounwind }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noredzone }
attributes #10 = { nounwind readnone }
attributes #11 = { noredzone nounwind }
attributes #12 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4557}
!llvm.module.flags = !{!4558, !4559, !4560, !4561}
!llvm.ident = !{!4562}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "gpio_fileops", scope: !2, file: !3, line: 2321, type: !886, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !201, globals: !4537, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/gpio/gpiolib-cdev.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !72, !79, !87, !93, !107, !114, !122, !128, !133, !147, !152, !157, !164, !197}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !94, line: 76, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106}
!96 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!100 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!101 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!102 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!103 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!104 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!105 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!106 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqchip_irq_state", file: !108, line: 478, baseType: !7, size: 32, elements: !109)
!108 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!109 = !{!110, !111, !112, !113}
!110 = !DIEnumerator(name: "IRQCHIP_STATE_PENDING", value: 0, isUnsigned: true)
!111 = !DIEnumerator(name: "IRQCHIP_STATE_ACTIVE", value: 1, isUnsigned: true)
!112 = !DIEnumerator(name: "IRQCHIP_STATE_MASKED", value: 2, isUnsigned: true)
!113 = !DIEnumerator(name: "IRQCHIP_STATE_LINE_LEVEL", value: 3, isUnsigned: true)
!114 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_gc_flags", file: !115, line: 1084, baseType: !7, size: 32, elements: !116)
!115 = !DIFile(filename: "./include/linux/irq.h", directory: "/home/lizy2001/genbc/linux")
!116 = !{!117, !118, !119, !120, !121}
!117 = !DIEnumerator(name: "IRQ_GC_INIT_MASK_CACHE", value: 1, isUnsigned: true)
!118 = !DIEnumerator(name: "IRQ_GC_INIT_NESTED_LOCK", value: 2, isUnsigned: true)
!119 = !DIEnumerator(name: "IRQ_GC_MASK_CACHE_PER_TYPE", value: 4, isUnsigned: true)
!120 = !DIEnumerator(name: "IRQ_GC_NO_MASK", value: 8, isUnsigned: true)
!121 = !DIEnumerator(name: "IRQ_GC_BE_IO", value: 16, isUnsigned: true)
!122 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !123, line: 11, baseType: !7, size: 32, elements: !124)
!123 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!124 = !{!125, !126, !127}
!125 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!127 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!128 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !129, line: 10, baseType: !7, size: 32, elements: !130)
!129 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!130 = !{!131, !132}
!131 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!133 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_v2_line_flag", file: !134, line: 69, baseType: !7, size: 32, elements: !135)
!134 = !DIFile(filename: "./include/uapi/linux/gpio.h", directory: "/home/lizy2001/genbc/linux")
!135 = !{!136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146}
!136 = !DIEnumerator(name: "GPIO_V2_LINE_FLAG_USED", value: 1, isUnsigned: true)
!137 = !DIEnumerator(name: "GPIO_V2_LINE_FLAG_ACTIVE_LOW", value: 2, isUnsigned: true)
!138 = !DIEnumerator(name: "GPIO_V2_LINE_FLAG_INPUT", value: 4, isUnsigned: true)
!139 = !DIEnumerator(name: "GPIO_V2_LINE_FLAG_OUTPUT", value: 8, isUnsigned: true)
!140 = !DIEnumerator(name: "GPIO_V2_LINE_FLAG_EDGE_RISING", value: 16, isUnsigned: true)
!141 = !DIEnumerator(name: "GPIO_V2_LINE_FLAG_EDGE_FALLING", value: 32, isUnsigned: true)
!142 = !DIEnumerator(name: "GPIO_V2_LINE_FLAG_OPEN_DRAIN", value: 64, isUnsigned: true)
!143 = !DIEnumerator(name: "GPIO_V2_LINE_FLAG_OPEN_SOURCE", value: 128, isUnsigned: true)
!144 = !DIEnumerator(name: "GPIO_V2_LINE_FLAG_BIAS_PULL_UP", value: 256, isUnsigned: true)
!145 = !DIEnumerator(name: "GPIO_V2_LINE_FLAG_BIAS_PULL_DOWN", value: 512, isUnsigned: true)
!146 = !DIEnumerator(name: "GPIO_V2_LINE_FLAG_BIAS_DISABLED", value: 1024, isUnsigned: true)
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_v2_line_attr_id", file: !134, line: 103, baseType: !7, size: 32, elements: !148)
!148 = !{!149, !150, !151}
!149 = !DIEnumerator(name: "GPIO_V2_LINE_ATTR_ID_FLAGS", value: 1, isUnsigned: true)
!150 = !DIEnumerator(name: "GPIO_V2_LINE_ATTR_ID_OUTPUT_VALUES", value: 2, isUnsigned: true)
!151 = !DIEnumerator(name: "GPIO_V2_LINE_ATTR_ID_DEBOUNCE", value: 3, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_v2_line_changed_type", file: !134, line: 237, baseType: !7, size: 32, elements: !153)
!153 = !{!154, !155, !156}
!154 = !DIEnumerator(name: "GPIO_V2_LINE_CHANGED_REQUESTED", value: 1, isUnsigned: true)
!155 = !DIEnumerator(name: "GPIO_V2_LINE_CHANGED_RELEASED", value: 2, isUnsigned: true)
!156 = !DIEnumerator(name: "GPIO_V2_LINE_CHANGED_CONFIG", value: 3, isUnsigned: true)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !158, line: 305, baseType: !7, size: 32, elements: !159)
!158 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!159 = !{!160, !161, !162, !163}
!160 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!161 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!162 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!163 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!164 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !165, line: 30, baseType: !166, size: 64, elements: !167)
!165 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!166 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!167 = !{!168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196}
!168 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!169 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!170 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!171 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!172 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!173 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!174 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!175 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!176 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!177 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!178 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!179 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!180 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!181 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!182 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!183 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!184 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!185 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!186 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!187 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!188 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!189 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!190 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!191 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!192 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!193 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!194 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!195 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!196 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!197 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_v2_line_event_id", file: !134, line: 265, baseType: !7, size: 32, elements: !198)
!198 = !{!199, !200}
!199 = !DIEnumerator(name: "GPIO_V2_LINE_EVENT_RISING_EDGE", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "GPIO_V2_LINE_EVENT_FALLING_EDGE", value: 2, isUnsigned: true)
!201 = !{!202, !7, !205, !224, !206, !215, !3451, !3453, !236, !996, !166, !3456, !3459, !487, !3460, !3462, !3463, !3464, !3466, !815, !3467, !4479, !3476, !4480}
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64)
!203 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !204, line: 76, flags: DIFlagFwdDecl)
!204 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 64)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64)
!207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !208, line: 640, size: 48640, elements: !209)
!208 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!209 = !{!210, !221, !223, !225, !237, !238, !239, !240, !241, !242, !243, !244, !248, !282, !294, !404, !405, !406, !417, !418, !420, !421, !2754, !2755, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2837, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2852, !2853, !2854, !2856, !2857, !2858, !2859, !2860, !2861, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2885, !2890, !2891, !2892, !2893, !2894, !2896, !2899, !2902, !2905, !2908, !2911, !3012, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3058, !3059, !3060, !3061, !3062, !3067, !3068, !3069, !3072, !3073, !3076, !3079, !3082, !3083, !3115, !3118, !3119, !3198, !3199, !3202, !3203, !3206, !3207, !3208, !3212, !3213, !3214, !3227, !3228, !3229, !3239, !3244, !3245, !3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280}
!210 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !207, file: !208, line: 646, baseType: !211, size: 128)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !212, line: 56, size: 128, elements: !213)
!212 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!213 = !{!214, !216}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !211, file: !212, line: 57, baseType: !215, size: 64)
!215 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !211, file: !212, line: 58, baseType: !217, size: 32, offset: 64)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !218, line: 21, baseType: !219)
!218 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!219 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !220, line: 27, baseType: !7)
!220 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!221 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !207, file: !208, line: 649, baseType: !222, size: 64, offset: 128)
!222 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !166)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !207, file: !208, line: 657, baseType: !224, size: 64, offset: 192)
!224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !207, file: !208, line: 658, baseType: !226, size: 32, offset: 256)
!226 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !227, line: 113, baseType: !228)
!227 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !227, line: 111, size: 32, elements: !229)
!229 = !{!230}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !228, file: !227, line: 112, baseType: !231, size: 32)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !232, line: 168, baseType: !233)
!232 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!233 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !232, line: 166, size: 32, elements: !234)
!234 = !{!235}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !233, file: !232, line: 167, baseType: !236, size: 32)
!236 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !207, file: !208, line: 660, baseType: !7, size: 32, offset: 288)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !207, file: !208, line: 661, baseType: !7, size: 32, offset: 320)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !207, file: !208, line: 684, baseType: !236, size: 32, offset: 352)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !207, file: !208, line: 686, baseType: !236, size: 32, offset: 384)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !207, file: !208, line: 687, baseType: !236, size: 32, offset: 416)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !207, file: !208, line: 688, baseType: !236, size: 32, offset: 448)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !207, file: !208, line: 689, baseType: !7, size: 32, offset: 480)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !207, file: !208, line: 691, baseType: !245, size: 64, offset: 512)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64)
!246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !247)
!247 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !208, line: 691, flags: DIFlagFwdDecl)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !207, file: !208, line: 692, baseType: !249, size: 832, offset: 576)
!249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !208, line: 451, size: 832, elements: !250)
!250 = !{!251, !256, !264, !270, !271, !275, !276, !277, !278, !279}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !249, file: !208, line: 453, baseType: !252, size: 128)
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !208, line: 325, size: 128, elements: !253)
!253 = !{!254, !255}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !252, file: !208, line: 326, baseType: !215, size: 64)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !252, file: !208, line: 327, baseType: !217, size: 32, offset: 64)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !249, file: !208, line: 454, baseType: !257, size: 192, align: 64, offset: 128)
!257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !258, line: 24, size: 192, align: 64, elements: !259)
!258 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!259 = !{!260, !261, !263}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !257, file: !258, line: 25, baseType: !215, size: 64)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !257, file: !258, line: 26, baseType: !262, size: 64, offset: 64)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !257, file: !258, line: 27, baseType: !262, size: 64, offset: 128)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !249, file: !208, line: 455, baseType: !265, size: 128, offset: 320)
!265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !232, line: 178, size: 128, elements: !266)
!266 = !{!267, !269}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !265, file: !232, line: 179, baseType: !268, size: 64)
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !265, file: !232, line: 179, baseType: !268, size: 64, offset: 64)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !249, file: !208, line: 456, baseType: !7, size: 32, offset: 448)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !249, file: !208, line: 458, baseType: !272, size: 64, offset: 512)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !218, line: 23, baseType: !273)
!273 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !220, line: 31, baseType: !274)
!274 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !249, file: !208, line: 459, baseType: !272, size: 64, offset: 576)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !249, file: !208, line: 460, baseType: !272, size: 64, offset: 640)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !249, file: !208, line: 461, baseType: !272, size: 64, offset: 704)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !249, file: !208, line: 463, baseType: !272, size: 64, offset: 768)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !249, file: !208, line: 465, baseType: !280, offset: 832)
!280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !208, line: 415, elements: !281)
!281 = !{}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !207, file: !208, line: 693, baseType: !283, size: 384, offset: 1408)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !208, line: 489, size: 384, elements: !284)
!284 = !{!285, !286, !287, !288, !289, !291, !292}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !283, file: !208, line: 490, baseType: !265, size: 128)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !283, file: !208, line: 491, baseType: !215, size: 64, offset: 128)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !283, file: !208, line: 492, baseType: !215, size: 64, offset: 192)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !283, file: !208, line: 493, baseType: !7, size: 32, offset: 256)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !283, file: !208, line: 494, baseType: !290, size: 16, offset: 288)
!290 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !283, file: !208, line: 495, baseType: !290, size: 16, offset: 304)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !283, file: !208, line: 497, baseType: !293, size: 64, offset: 320)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !207, file: !208, line: 697, baseType: !295, size: 1792, offset: 1792)
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !208, line: 507, size: 1792, elements: !296)
!296 = !{!297, !298, !299, !300, !301, !302, !303, !307, !308, !309, !310, !311, !312, !313, !401, !402}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !295, file: !208, line: 508, baseType: !257, size: 192, align: 64)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !295, file: !208, line: 515, baseType: !272, size: 64, offset: 192)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !295, file: !208, line: 516, baseType: !272, size: 64, offset: 256)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !295, file: !208, line: 517, baseType: !272, size: 64, offset: 320)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !295, file: !208, line: 518, baseType: !272, size: 64, offset: 384)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !295, file: !208, line: 519, baseType: !272, size: 64, offset: 448)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !295, file: !208, line: 526, baseType: !304, size: 64, offset: 512)
!304 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !218, line: 22, baseType: !305)
!305 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !220, line: 30, baseType: !306)
!306 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !295, file: !208, line: 527, baseType: !272, size: 64, offset: 576)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !295, file: !208, line: 528, baseType: !7, size: 32, offset: 640)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !295, file: !208, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !295, file: !208, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !295, file: !208, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !295, file: !208, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !295, file: !208, line: 563, baseType: !314, size: 512, offset: 704)
!314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !315)
!315 = !{!316, !324, !325, !330, !394, !398, !399, !400}
!316 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !314, file: !20, line: 119, baseType: !317, size: 256)
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !318, line: 9, size: 256, elements: !319)
!318 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!319 = !{!320, !321}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !317, file: !318, line: 10, baseType: !257, size: 192, align: 64)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !317, file: !318, line: 11, baseType: !322, size: 64, offset: 192)
!322 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !323, line: 29, baseType: !304)
!323 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!324 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !314, file: !20, line: 120, baseType: !322, size: 64, offset: 256)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !314, file: !20, line: 121, baseType: !326, size: 64, offset: 320)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!327 = !DISubroutineType(types: !328)
!328 = !{!19, !329}
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !314, file: !20, line: 122, baseType: !331, size: 64, offset: 384)
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !333)
!333 = !{!334, !362, !363, !367, !377, !378, !389, !393}
!334 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !332, file: !20, line: 160, baseType: !335, size: 64)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !337)
!337 = !{!338, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !336, file: !20, line: 215, baseType: !339)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !340, line: 29, baseType: !341)
!340 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !340, line: 20, elements: !342)
!342 = !{!343}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !341, file: !340, line: 21, baseType: !344)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !345, line: 25, baseType: !346)
!345 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 25, elements: !281)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !336, file: !20, line: 216, baseType: !7, size: 32)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !336, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !336, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !336, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !336, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !336, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !336, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !336, file: !20, line: 233, baseType: !322, size: 64, offset: 128)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !336, file: !20, line: 234, baseType: !329, size: 64, offset: 192)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !336, file: !20, line: 235, baseType: !322, size: 64, offset: 256)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !336, file: !20, line: 236, baseType: !329, size: 64, offset: 320)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !336, file: !20, line: 237, baseType: !359, size: 4096, offset: 512)
!359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 4096, elements: !360)
!360 = !{!361}
!361 = !DISubrange(count: 8)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !332, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !332, file: !20, line: 162, baseType: !364, size: 32, offset: 96)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !232, line: 27, baseType: !365)
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !366, line: 96, baseType: !236)
!366 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!367 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !332, file: !20, line: 163, baseType: !368, size: 32, offset: 128)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !369, line: 276, baseType: !370)
!369 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !369, line: 276, size: 32, elements: !371)
!371 = !{!372}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !370, file: !369, line: 276, baseType: !373, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !369, line: 70, baseType: !374)
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !369, line: 65, size: 32, elements: !375)
!375 = !{!376}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !374, file: !369, line: 66, baseType: !7, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !332, file: !20, line: 164, baseType: !329, size: 64, offset: 192)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !332, file: !20, line: 165, baseType: !379, size: 128, offset: 256)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !318, line: 14, size: 128, elements: !380)
!380 = !{!381}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !379, file: !318, line: 15, baseType: !382, size: 128)
!382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !258, line: 125, size: 128, elements: !383)
!383 = !{!384, !388}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !382, file: !258, line: 126, baseType: !385, size: 64)
!385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !258, line: 31, size: 64, elements: !386)
!386 = !{!387}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !385, file: !258, line: 32, baseType: !262, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !382, file: !258, line: 127, baseType: !262, size: 64, offset: 64)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !332, file: !20, line: 166, baseType: !390, size: 64, offset: 384)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64)
!391 = !DISubroutineType(types: !392)
!392 = !{!322}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !332, file: !20, line: 167, baseType: !322, size: 64, offset: 448)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !314, file: !20, line: 123, baseType: !395, size: 8, offset: 448)
!395 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !218, line: 17, baseType: !396)
!396 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !220, line: 21, baseType: !397)
!397 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !314, file: !20, line: 124, baseType: !395, size: 8, offset: 456)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !314, file: !20, line: 125, baseType: !395, size: 8, offset: 464)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !314, file: !20, line: 126, baseType: !395, size: 8, offset: 472)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !295, file: !208, line: 572, baseType: !314, size: 512, offset: 1216)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !295, file: !208, line: 580, baseType: !403, size: 64, offset: 1728)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 64)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !207, file: !208, line: 721, baseType: !7, size: 32, offset: 3584)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !207, file: !208, line: 722, baseType: !236, size: 32, offset: 3616)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !207, file: !208, line: 723, baseType: !407, size: 64, offset: 3648)
!407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !409)
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !410, line: 17, baseType: !411)
!410 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !410, line: 17, size: 64, elements: !412)
!412 = !{!413}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !411, file: !410, line: 17, baseType: !414, size: 64)
!414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 64, elements: !415)
!415 = !{!416}
!416 = !DISubrange(count: 1)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !207, file: !208, line: 724, baseType: !409, size: 64, offset: 3712)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !207, file: !208, line: 749, baseType: !419, offset: 3776)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !208, line: 290, elements: !281)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !207, file: !208, line: 751, baseType: !265, size: 128, offset: 3776)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !207, file: !208, line: 757, baseType: !422, size: 64, offset: 3904)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !424, line: 388, size: 7296, elements: !425)
!424 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!425 = !{!426, !2750}
!426 = !DIDerivedType(tag: DW_TAG_member, scope: !423, file: !424, line: 389, baseType: !427, size: 7296)
!427 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !423, file: !424, line: 389, size: 7296, elements: !428)
!428 = !{!429, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2673, !2679, !2682, !2721, !2722, !2734, !2735, !2738, !2739, !2740, !2743, !2744, !2745, !2748, !2749}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !427, file: !424, line: 390, baseType: !430, size: 64)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !424, line: 305, size: 1472, elements: !432)
!432 = !{!433, !434, !435, !436, !437, !438, !439, !440, !448, !449, !454, !455, !458, !2619, !2620, !2621, !2622, !2623}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !431, file: !424, line: 308, baseType: !215, size: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !431, file: !424, line: 309, baseType: !215, size: 64, offset: 64)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !431, file: !424, line: 313, baseType: !430, size: 64, offset: 128)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !431, file: !424, line: 313, baseType: !430, size: 64, offset: 192)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !431, file: !424, line: 315, baseType: !257, size: 192, align: 64, offset: 256)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !431, file: !424, line: 323, baseType: !215, size: 64, offset: 448)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !431, file: !424, line: 327, baseType: !422, size: 64, offset: 512)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !431, file: !424, line: 333, baseType: !441, size: 64, offset: 576)
!441 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !442, line: 284, baseType: !443)
!442 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !442, line: 284, size: 64, elements: !444)
!444 = !{!445}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !443, file: !442, line: 284, baseType: !446, size: 64)
!446 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !447, line: 19, baseType: !215)
!447 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!448 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !431, file: !424, line: 334, baseType: !215, size: 64, offset: 640)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !431, file: !424, line: 343, baseType: !450, size: 256, offset: 704)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !431, file: !424, line: 340, size: 256, elements: !451)
!451 = !{!452, !453}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !450, file: !424, line: 341, baseType: !257, size: 192, align: 64)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !450, file: !424, line: 342, baseType: !215, size: 64, offset: 192)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !431, file: !424, line: 351, baseType: !265, size: 128, offset: 960)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !431, file: !424, line: 353, baseType: !456, size: 64, offset: 1088)
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!457 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !424, line: 353, flags: DIFlagFwdDecl)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !431, file: !424, line: 356, baseType: !459, size: 64, offset: 1152)
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!460 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !461)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !462)
!462 = !{!463, !467, !468, !472, !476, !2593, !2597, !2601, !2605, !2606, !2607, !2611, !2615}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !461, file: !14, line: 558, baseType: !464, size: 64)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!465 = !DISubroutineType(types: !466)
!466 = !{null, !430}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !461, file: !14, line: 559, baseType: !464, size: 64, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !461, file: !14, line: 560, baseType: !469, size: 64, offset: 128)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64)
!470 = !DISubroutineType(types: !471)
!471 = !{!236, !430, !215}
!472 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !461, file: !14, line: 561, baseType: !473, size: 64, offset: 192)
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64)
!474 = !DISubroutineType(types: !475)
!475 = !{!236, !430}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !461, file: !14, line: 562, baseType: !477, size: 64, offset: 256)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64)
!478 = !DISubroutineType(types: !479)
!479 = !{!480, !481}
!480 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !424, line: 682, baseType: !7)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !483)
!483 = !{!484, !485, !486, !488, !489, !490, !497, !504, !510, !2587, !2588, !2590, !2592}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !482, file: !14, line: 509, baseType: !430, size: 64)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !482, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !482, file: !14, line: 511, baseType: !487, size: 32, offset: 96)
!487 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !232, line: 148, baseType: !7)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !482, file: !14, line: 512, baseType: !215, size: 64, offset: 128)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !482, file: !14, line: 513, baseType: !215, size: 64, offset: 192)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !482, file: !14, line: 514, baseType: !491, size: 64, offset: 256)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!492 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !442, line: 385, baseType: !493)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !442, line: 385, size: 64, elements: !494)
!494 = !{!495}
!495 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !493, file: !442, line: 385, baseType: !496, size: 64)
!496 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !447, line: 15, baseType: !215)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !482, file: !14, line: 516, baseType: !498, size: 64, offset: 320)
!498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 64)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !442, line: 359, baseType: !500)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !442, line: 359, size: 64, elements: !501)
!501 = !{!502}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !500, file: !442, line: 359, baseType: !503, size: 64)
!503 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !447, line: 16, baseType: !215)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !482, file: !14, line: 519, baseType: !505, size: 64, offset: 384)
!505 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !447, line: 21, baseType: !506)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !447, line: 21, size: 64, elements: !507)
!507 = !{!508}
!508 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !506, file: !447, line: 21, baseType: !509, size: 64)
!509 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !447, line: 14, baseType: !215)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !482, file: !14, line: 521, baseType: !511, size: 64, offset: 448)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !424, line: 68, size: 512, align: 128, elements: !513)
!513 = !{!514, !515, !2579, !2586}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !512, file: !424, line: 69, baseType: !215, size: 64)
!515 = !DIDerivedType(tag: DW_TAG_member, scope: !512, file: !424, line: 77, baseType: !516, size: 320, offset: 64)
!516 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !512, file: !424, line: 77, size: 320, elements: !517)
!517 = !{!518, !2440, !2445, !2473, !2481, !2487, !2500, !2578}
!518 = !DIDerivedType(tag: DW_TAG_member, scope: !516, file: !424, line: 78, baseType: !519, size: 320)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !516, file: !424, line: 78, size: 320, elements: !520)
!520 = !{!521, !522, !2438, !2439}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !519, file: !424, line: 84, baseType: !265, size: 128)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !519, file: !424, line: 86, baseType: !523, size: 64, offset: 128)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !525)
!525 = !{!526, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2433, !2434, !2435, !2436, !2437}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !524, file: !44, line: 452, baseType: !527, size: 64)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64)
!528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !529)
!529 = !{!530, !532, !533, !541, !548, !549, !1961, !1962, !1963, !1964, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2005, !2013, !2014, !2015, !2327, !2328, !2329, !2330}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !528, file: !44, line: 611, baseType: !531, size: 16)
!531 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !232, line: 19, baseType: !290)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !528, file: !44, line: 612, baseType: !290, size: 16, offset: 16)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !528, file: !44, line: 613, baseType: !534, size: 32, offset: 32)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !535, line: 23, baseType: !536)
!535 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 21, size: 32, elements: !537)
!537 = !{!538}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !536, file: !535, line: 22, baseType: !539, size: 32)
!539 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !232, line: 32, baseType: !540)
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !366, line: 49, baseType: !7)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !528, file: !44, line: 614, baseType: !542, size: 32, offset: 64)
!542 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !535, line: 28, baseType: !543)
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 26, size: 32, elements: !544)
!544 = !{!545}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !543, file: !535, line: 27, baseType: !546, size: 32)
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !232, line: 33, baseType: !547)
!547 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !366, line: 50, baseType: !7)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !528, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !528, file: !44, line: 622, baseType: !550, size: 64, offset: 128)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 64)
!551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !552)
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !553)
!553 = !{!554, !1835, !1848, !1852, !1858, !1862, !1866, !1870, !1874, !1878, !1882, !1883, !1887, !1891, !1911, !1937, !1941, !1947, !1952, !1956, !1957}
!554 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !552, file: !44, line: 1865, baseType: !555, size: 64)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!556 = !DISubroutineType(types: !557)
!557 = !{!558, !527, !558, !7}
!558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 64)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !560, line: 89, size: 1536, elements: !561)
!560 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!561 = !{!562, !563, !568, !576, !577, !592, !593, !597, !616, !690, !1820, !1821, !1822, !1827, !1828, !1829}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !559, file: !560, line: 91, baseType: !7, size: 32)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !559, file: !560, line: 92, baseType: !564, size: 32, offset: 32)
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !369, line: 277, baseType: !565)
!565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !369, line: 277, size: 32, elements: !566)
!566 = !{!567}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !565, file: !369, line: 277, baseType: !373, size: 32)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !559, file: !560, line: 93, baseType: !569, size: 128, offset: 64)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !570, line: 38, size: 128, elements: !571)
!570 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!571 = !{!572, !574}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !569, file: !570, line: 39, baseType: !573, size: 64)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 64)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !569, file: !570, line: 39, baseType: !575, size: 64, offset: 64)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !559, file: !560, line: 94, baseType: !558, size: 64, offset: 192)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !559, file: !560, line: 95, baseType: !578, size: 128, offset: 256)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !560, line: 47, size: 128, elements: !579)
!579 = !{!580, !589}
!580 = !DIDerivedType(tag: DW_TAG_member, scope: !578, file: !560, line: 48, baseType: !581, size: 64)
!581 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !578, file: !560, line: 48, size: 64, elements: !582)
!582 = !{!583, !588}
!583 = !DIDerivedType(tag: DW_TAG_member, scope: !581, file: !560, line: 49, baseType: !584, size: 64)
!584 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !581, file: !560, line: 49, size: 64, elements: !585)
!585 = !{!586, !587}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !584, file: !560, line: 50, baseType: !217, size: 32)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !584, file: !560, line: 50, baseType: !217, size: 32, offset: 32)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !581, file: !560, line: 52, baseType: !272, size: 64)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !578, file: !560, line: 54, baseType: !590, size: 64, offset: 64)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !397)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !559, file: !560, line: 96, baseType: !527, size: 64, offset: 384)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !559, file: !560, line: 98, baseType: !594, size: 256, offset: 448)
!594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 256, elements: !595)
!595 = !{!596}
!596 = !DISubrange(count: 32)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !559, file: !560, line: 101, baseType: !598, size: 32, offset: 704)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !599, line: 25, size: 32, elements: !600)
!599 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!600 = !{!601}
!601 = !DIDerivedType(tag: DW_TAG_member, scope: !598, file: !599, line: 26, baseType: !602, size: 32)
!602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !598, file: !599, line: 26, size: 32, elements: !603)
!603 = !{!604}
!604 = !DIDerivedType(tag: DW_TAG_member, scope: !602, file: !599, line: 30, baseType: !605, size: 32)
!605 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !602, file: !599, line: 30, size: 32, elements: !606)
!606 = !{!607, !615}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !605, file: !599, line: 31, baseType: !608)
!608 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !340, line: 83, baseType: !609)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !340, line: 71, elements: !610)
!610 = !{!611}
!611 = !DIDerivedType(tag: DW_TAG_member, scope: !609, file: !340, line: 72, baseType: !612)
!612 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !609, file: !340, line: 72, elements: !613)
!613 = !{!614}
!614 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !612, file: !340, line: 73, baseType: !341)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !605, file: !599, line: 32, baseType: !236, size: 32)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !559, file: !560, line: 102, baseType: !617, size: 64, offset: 768)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !619)
!619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !560, line: 135, size: 1024, align: 512, elements: !620)
!620 = !{!621, !625, !626, !633, !642, !646, !650, !654, !655, !659, !664, !676, !684}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !619, file: !560, line: 136, baseType: !622, size: 64)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 64)
!623 = !DISubroutineType(types: !624)
!624 = !{!236, !558, !7}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !619, file: !560, line: 137, baseType: !622, size: 64, offset: 64)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !619, file: !560, line: 138, baseType: !627, size: 64, offset: 128)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64)
!628 = !DISubroutineType(types: !629)
!629 = !{!236, !630, !632}
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !559)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !619, file: !560, line: 139, baseType: !634, size: 64, offset: 192)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!635 = !DISubroutineType(types: !636)
!636 = !{!236, !630, !7, !637, !640}
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!638 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !639)
!639 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !578)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !619, file: !560, line: 141, baseType: !643, size: 64, offset: 256)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = !DISubroutineType(types: !645)
!645 = !{!236, !630}
!646 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !619, file: !560, line: 142, baseType: !647, size: 64, offset: 320)
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!648 = !DISubroutineType(types: !649)
!649 = !{!236, !558}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !619, file: !560, line: 143, baseType: !651, size: 64, offset: 384)
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 64)
!652 = !DISubroutineType(types: !653)
!653 = !{null, !558}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !619, file: !560, line: 144, baseType: !651, size: 64, offset: 448)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !619, file: !560, line: 145, baseType: !656, size: 64, offset: 512)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!657 = !DISubroutineType(types: !658)
!658 = !{null, !558, !527}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !619, file: !560, line: 146, baseType: !660, size: 64, offset: 576)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = !DISubroutineType(types: !662)
!662 = !{!663, !558, !663, !236}
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !619, file: !560, line: 147, baseType: !665, size: 64, offset: 640)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = !DISubroutineType(types: !667)
!667 = !{!668, !670}
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!669 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !560, line: 18, flags: DIFlagFwdDecl)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !672, line: 8, size: 128, elements: !673)
!672 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!673 = !{!674, !675}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !671, file: !672, line: 9, baseType: !668, size: 64)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !671, file: !672, line: 10, baseType: !558, size: 64, offset: 64)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !619, file: !560, line: 148, baseType: !677, size: 64, offset: 704)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!678 = !DISubroutineType(types: !679)
!679 = !{!236, !680, !682}
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 64)
!681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !671)
!682 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !232, line: 30, baseType: !683)
!683 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !619, file: !560, line: 149, baseType: !685, size: 64, offset: 768)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = !DISubroutineType(types: !687)
!687 = !{!558, !558, !688}
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !528)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !559, file: !560, line: 103, baseType: !691, size: 64, offset: 832)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !693)
!693 = !{!694, !695, !698, !699, !700, !703, !752, !1472, !1554, !1637, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1653, !1657, !1658, !1661, !1664, !1667, !1668, !1669, !1710, !1737, !1738, !1739, !1740, !1741, !1742, !1745, !1747, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1777, !1778, !1779, !1780, !1781, !1784, !1785, !1786, !1801, !1802, !1803, !1814, !1815, !1816, !1817, !1818, !1819}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !692, file: !44, line: 1417, baseType: !265, size: 128)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !692, file: !44, line: 1418, baseType: !696, size: 32, offset: 128)
!696 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !232, line: 16, baseType: !697)
!697 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !232, line: 13, baseType: !217)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !692, file: !44, line: 1419, baseType: !397, size: 8, offset: 160)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !692, file: !44, line: 1420, baseType: !215, size: 64, offset: 192)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !692, file: !44, line: 1421, baseType: !701, size: 64, offset: 256)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !232, line: 46, baseType: !702)
!702 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !366, line: 88, baseType: !306)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !692, file: !44, line: 1422, baseType: !704, size: 64, offset: 320)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !706)
!706 = !{!707, !708, !709, !716, !720, !724, !728, !729, !730, !740, !743, !744, !745, !749, !750, !751}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !705, file: !44, line: 2229, baseType: !637, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !705, file: !44, line: 2230, baseType: !236, size: 32, offset: 64)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !705, file: !44, line: 2238, baseType: !710, size: 64, offset: 128)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DISubroutineType(types: !712)
!712 = !{!236, !713}
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !715, line: 28, flags: DIFlagFwdDecl)
!715 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!716 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !705, file: !44, line: 2239, baseType: !717, size: 64, offset: 192)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !719)
!719 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !705, file: !44, line: 2240, baseType: !721, size: 64, offset: 256)
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = !DISubroutineType(types: !723)
!723 = !{!558, !704, !236, !637, !224}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !705, file: !44, line: 2242, baseType: !725, size: 64, offset: 320)
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 64)
!726 = !DISubroutineType(types: !727)
!727 = !{null, !691}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !705, file: !44, line: 2243, baseType: !202, size: 64, offset: 384)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !705, file: !44, line: 2244, baseType: !704, size: 64, offset: 448)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !705, file: !44, line: 2245, baseType: !731, size: 64, offset: 512)
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !232, line: 182, size: 64, elements: !732)
!732 = !{!733}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !731, file: !232, line: 183, baseType: !734, size: 64)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !232, line: 186, size: 128, elements: !736)
!736 = !{!737, !738}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !735, file: !232, line: 187, baseType: !734, size: 64)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !735, file: !232, line: 187, baseType: !739, size: 64, offset: 64)
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !705, file: !44, line: 2247, baseType: !741, offset: 576)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !742, line: 187, elements: !281)
!742 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!743 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !705, file: !44, line: 2248, baseType: !741, offset: 576)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !705, file: !44, line: 2249, baseType: !741, offset: 576)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !705, file: !44, line: 2250, baseType: !746, offset: 576)
!746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !741, elements: !747)
!747 = !{!748}
!748 = !DISubrange(count: 3)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !705, file: !44, line: 2252, baseType: !741, offset: 576)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !705, file: !44, line: 2253, baseType: !741, offset: 576)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !705, file: !44, line: 2254, baseType: !741, offset: 576)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !692, file: !44, line: 1423, baseType: !753, size: 64, offset: 384)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !755)
!755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !756)
!756 = !{!757, !761, !765, !766, !770, !776, !780, !781, !782, !786, !790, !791, !792, !793, !799, !804, !805, !1449, !1450, !1451, !1452, !1456, !1471}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !755, file: !44, line: 1936, baseType: !758, size: 64)
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!759 = !DISubroutineType(types: !760)
!760 = !{!527, !691}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !755, file: !44, line: 1937, baseType: !762, size: 64, offset: 64)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 64)
!763 = !DISubroutineType(types: !764)
!764 = !{null, !527}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !755, file: !44, line: 1938, baseType: !762, size: 64, offset: 128)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !755, file: !44, line: 1940, baseType: !767, size: 64, offset: 192)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!768 = !DISubroutineType(types: !769)
!769 = !{null, !527, !236}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !755, file: !44, line: 1941, baseType: !771, size: 64, offset: 256)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = !DISubroutineType(types: !773)
!773 = !{!236, !527, !774}
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!775 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !44, line: 289, flags: DIFlagFwdDecl)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !755, file: !44, line: 1942, baseType: !777, size: 64, offset: 320)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DISubroutineType(types: !779)
!779 = !{!236, !527}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !755, file: !44, line: 1943, baseType: !762, size: 64, offset: 384)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !755, file: !44, line: 1944, baseType: !725, size: 64, offset: 448)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !755, file: !44, line: 1945, baseType: !783, size: 64, offset: 512)
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 64)
!784 = !DISubroutineType(types: !785)
!785 = !{!236, !691, !236}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !755, file: !44, line: 1946, baseType: !787, size: 64, offset: 576)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!788 = !DISubroutineType(types: !789)
!789 = !{!236, !691}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !755, file: !44, line: 1947, baseType: !787, size: 64, offset: 640)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !755, file: !44, line: 1948, baseType: !787, size: 64, offset: 704)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !755, file: !44, line: 1949, baseType: !787, size: 64, offset: 768)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !755, file: !44, line: 1950, baseType: !794, size: 64, offset: 832)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!795 = !DISubroutineType(types: !796)
!796 = !{!236, !558, !797}
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !755, file: !44, line: 1951, baseType: !800, size: 64, offset: 896)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DISubroutineType(types: !802)
!802 = !{!236, !691, !803, !663}
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !755, file: !44, line: 1952, baseType: !725, size: 64, offset: 960)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !755, file: !44, line: 1954, baseType: !806, size: 64, offset: 1024)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DISubroutineType(types: !808)
!808 = !{!236, !809, !558}
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !811, line: 16, size: 896, elements: !812)
!811 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!812 = !{!813, !814, !818, !819, !820, !821, !822, !823, !836, !858, !859, !1448}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !810, file: !811, line: 17, baseType: !663, size: 64)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !810, file: !811, line: 18, baseType: !815, size: 64, offset: 64)
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !232, line: 55, baseType: !816)
!816 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !366, line: 72, baseType: !817)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !366, line: 16, baseType: !215)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !810, file: !811, line: 19, baseType: !815, size: 64, offset: 128)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !810, file: !811, line: 20, baseType: !815, size: 64, offset: 192)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !810, file: !811, line: 21, baseType: !815, size: 64, offset: 256)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !810, file: !811, line: 22, baseType: !701, size: 64, offset: 320)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !810, file: !811, line: 23, baseType: !701, size: 64, offset: 384)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !810, file: !811, line: 24, baseType: !824, size: 192, offset: 448)
!824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !825, line: 53, size: 192, elements: !826)
!825 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!826 = !{!827, !834, !835}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !824, file: !825, line: 54, baseType: !828, size: 64)
!828 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !829, line: 13, baseType: !830)
!829 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!830 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !232, line: 175, baseType: !831)
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !232, line: 173, size: 64, elements: !832)
!832 = !{!833}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !831, file: !232, line: 174, baseType: !304, size: 64)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !824, file: !825, line: 55, baseType: !608, offset: 64)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !824, file: !825, line: 59, baseType: !265, size: 128, offset: 64)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !810, file: !811, line: 25, baseType: !837, size: 64, offset: 640)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !839)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !811, line: 31, size: 256, elements: !840)
!840 = !{!841, !846, !850, !854}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !839, file: !811, line: 32, baseType: !842, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = !DISubroutineType(types: !844)
!844 = !{!224, !809, !845}
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !839, file: !811, line: 33, baseType: !847, size: 64, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = !DISubroutineType(types: !849)
!849 = !{null, !809, !224}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !839, file: !811, line: 34, baseType: !851, size: 64, offset: 128)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 64)
!852 = !DISubroutineType(types: !853)
!853 = !{!224, !809, !224, !845}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !839, file: !811, line: 35, baseType: !855, size: 64, offset: 192)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!856 = !DISubroutineType(types: !857)
!857 = !{!236, !809, !224}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !810, file: !811, line: 26, baseType: !236, size: 32, offset: 704)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !810, file: !811, line: 27, baseType: !860, size: 64, offset: 768)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !862)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !863)
!863 = !{!864, !882, !883, !884, !1195, !1196, !1197, !1198, !1199, !1201, !1202, !1203, !1233, !1430, !1439, !1440, !1441, !1442, !1443, !1444, !1447}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !862, file: !44, line: 920, baseType: !865, size: 128)
!865 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !862, file: !44, line: 917, size: 128, elements: !866)
!866 = !{!867, !873}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !865, file: !44, line: 918, baseType: !868, size: 64)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !869, line: 58, size: 64, elements: !870)
!869 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!870 = !{!871}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !868, file: !869, line: 59, baseType: !872, size: 64)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !865, file: !44, line: 919, baseType: !874, size: 128, align: 64)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !232, line: 216, size: 128, align: 64, elements: !875)
!875 = !{!876, !878}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !874, file: !232, line: 217, baseType: !877, size: 64)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !874, file: !232, line: 218, baseType: !879, size: 64, offset: 64)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DISubroutineType(types: !881)
!881 = !{null, !877}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !862, file: !44, line: 921, baseType: !671, size: 128, offset: 128)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !862, file: !44, line: 922, baseType: !527, size: 64, offset: 256)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !862, file: !44, line: 923, baseType: !885, size: 64, offset: 320)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !887)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !888)
!888 = !{!889, !890, !895, !902, !906, !973, !974, !978, !991, !992, !1015, !1019, !1020, !1024, !1025, !1029, !1034, !1035, !1039, !1043, !1152, !1156, !1160, !1164, !1165, !1169, !1173, !1178, !1182, !1186, !1190, !1194}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !887, file: !44, line: 1823, baseType: !202, size: 64)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !887, file: !44, line: 1824, baseType: !891, size: 64, offset: 64)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = !DISubroutineType(types: !893)
!893 = !{!701, !894, !701, !236}
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !887, file: !44, line: 1825, baseType: !896, size: 64, offset: 128)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = !DISubroutineType(types: !898)
!898 = !{!899, !894, !663, !815, !845}
!899 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !232, line: 60, baseType: !900)
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !366, line: 73, baseType: !901)
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !366, line: 15, baseType: !166)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !887, file: !44, line: 1826, baseType: !903, size: 64, offset: 192)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = !DISubroutineType(types: !905)
!905 = !{!899, !894, !637, !815, !845}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !887, file: !44, line: 1827, baseType: !907, size: 64, offset: 256)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DISubroutineType(types: !909)
!909 = !{!899, !910, !932}
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !912)
!912 = !{!913, !914, !915, !919, !920, !921, !924, !925}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !911, file: !44, line: 321, baseType: !894, size: 64)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !911, file: !44, line: 326, baseType: !701, size: 64, offset: 64)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !911, file: !44, line: 327, baseType: !916, size: 64, offset: 128)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DISubroutineType(types: !918)
!918 = !{null, !910, !166, !166}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !911, file: !44, line: 328, baseType: !224, size: 64, offset: 192)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !911, file: !44, line: 329, baseType: !236, size: 32, offset: 256)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !911, file: !44, line: 330, baseType: !922, size: 16, offset: 288)
!922 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !218, line: 19, baseType: !923)
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !220, line: 24, baseType: !290)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !911, file: !44, line: 331, baseType: !922, size: 16, offset: 304)
!925 = !DIDerivedType(tag: DW_TAG_member, scope: !911, file: !44, line: 332, baseType: !926, size: 64, offset: 320)
!926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !911, file: !44, line: 332, size: 64, elements: !927)
!927 = !{!928, !929}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !926, file: !44, line: 333, baseType: !7, size: 32)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !926, file: !44, line: 334, baseType: !930, size: 64)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!931 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !934, line: 29, size: 320, elements: !935)
!934 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!935 = !{!936, !937, !938, !939, !964}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !933, file: !934, line: 35, baseType: !7, size: 32)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !933, file: !934, line: 36, baseType: !815, size: 64, offset: 64)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !933, file: !934, line: 37, baseType: !815, size: 64, offset: 128)
!939 = !DIDerivedType(tag: DW_TAG_member, scope: !933, file: !934, line: 38, baseType: !940, size: 64, offset: 192)
!940 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !933, file: !934, line: 38, size: 64, elements: !941)
!941 = !{!942, !950, !957, !961}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !940, file: !934, line: 39, baseType: !943, size: 64)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !945)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !946, line: 17, size: 128, elements: !947)
!946 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!947 = !{!948, !949}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !945, file: !946, line: 19, baseType: !224, size: 64)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !945, file: !946, line: 20, baseType: !816, size: 64, offset: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !940, file: !934, line: 40, baseType: !951, size: 64)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !953)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !934, line: 15, size: 128, elements: !954)
!954 = !{!955, !956}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !953, file: !934, line: 16, baseType: !224, size: 64)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !953, file: !934, line: 17, baseType: !815, size: 64, offset: 64)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !940, file: !934, line: 41, baseType: !958, size: 64)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !960)
!960 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !934, line: 41, flags: DIFlagFwdDecl)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !940, file: !934, line: 42, baseType: !962, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !208, line: 53, flags: DIFlagFwdDecl)
!964 = !DIDerivedType(tag: DW_TAG_member, scope: !933, file: !934, line: 44, baseType: !965, size: 64, offset: 256)
!965 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !933, file: !934, line: 44, size: 64, elements: !966)
!966 = !{!967, !968}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !965, file: !934, line: 45, baseType: !215, size: 64)
!968 = !DIDerivedType(tag: DW_TAG_member, scope: !965, file: !934, line: 46, baseType: !969, size: 64)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !965, file: !934, line: 46, size: 64, elements: !970)
!970 = !{!971, !972}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !969, file: !934, line: 47, baseType: !7, size: 32)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !969, file: !934, line: 48, baseType: !7, size: 32, offset: 32)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !887, file: !44, line: 1828, baseType: !907, size: 64, offset: 320)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !887, file: !44, line: 1829, baseType: !975, size: 64, offset: 384)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!236, !910, !682}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !887, file: !44, line: 1830, baseType: !979, size: 64, offset: 448)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DISubroutineType(types: !981)
!981 = !{!236, !894, !982}
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !984)
!984 = !{!985, !990}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !983, file: !44, line: 1777, baseType: !986, size: 64)
!986 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !987)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = !DISubroutineType(types: !989)
!989 = !{!236, !982, !637, !236, !701, !272, !7}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !983, file: !44, line: 1778, baseType: !701, size: 64, offset: 64)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !887, file: !44, line: 1831, baseType: !979, size: 64, offset: 512)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !887, file: !44, line: 1832, baseType: !993, size: 64, offset: 576)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = !DISubroutineType(types: !995)
!995 = !{!996, !894, !998}
!996 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !997, line: 52, baseType: !7)
!997 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1000, line: 43, size: 128, elements: !1001)
!1000 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!1001 = !{!1002, !1014}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !999, file: !1000, line: 44, baseType: !1003, size: 64)
!1003 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !1000, line: 37, baseType: !1004)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = !DISubroutineType(types: !1006)
!1006 = !{null, !894, !1007, !998}
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1009, line: 40, baseType: !1010)
!1009 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1009, line: 36, size: 128, elements: !1011)
!1011 = !{!1012, !1013}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1010, file: !1009, line: 37, baseType: !608)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1010, file: !1009, line: 38, baseType: !265, size: 128)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !999, file: !1000, line: 45, baseType: !996, size: 32, offset: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !887, file: !44, line: 1833, baseType: !1016, size: 64, offset: 640)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!166, !894, !7, !215}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !887, file: !44, line: 1834, baseType: !1016, size: 64, offset: 704)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !887, file: !44, line: 1835, baseType: !1021, size: 64, offset: 768)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1022 = !DISubroutineType(types: !1023)
!1023 = !{!236, !894, !430}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !887, file: !44, line: 1836, baseType: !215, size: 64, offset: 832)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !887, file: !44, line: 1837, baseType: !1026, size: 64, offset: 896)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!236, !527, !894}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !887, file: !44, line: 1838, baseType: !1030, size: 64, offset: 960)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = !DISubroutineType(types: !1032)
!1032 = !{!236, !894, !1033}
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !224)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !887, file: !44, line: 1839, baseType: !1026, size: 64, offset: 1024)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !887, file: !44, line: 1840, baseType: !1036, size: 64, offset: 1088)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{!236, !894, !701, !701, !236}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !887, file: !44, line: 1841, baseType: !1040, size: 64, offset: 1152)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!236, !236, !894, !236}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !887, file: !44, line: 1842, baseType: !1044, size: 64, offset: 1216)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!236, !894, !236, !1047}
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !1049)
!1049 = !{!1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1081, !1082, !1083, !1096, !1128}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !1048, file: !44, line: 1063, baseType: !1047, size: 64)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !1048, file: !44, line: 1064, baseType: !265, size: 128, offset: 64)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !1048, file: !44, line: 1065, baseType: !735, size: 128, offset: 192)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !1048, file: !44, line: 1066, baseType: !265, size: 128, offset: 320)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !1048, file: !44, line: 1069, baseType: !265, size: 128, offset: 448)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !1048, file: !44, line: 1072, baseType: !1033, size: 64, offset: 576)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !1048, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !1048, file: !44, line: 1074, baseType: !397, size: 8, offset: 672)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !1048, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !1048, file: !44, line: 1076, baseType: !236, size: 32, offset: 736)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !1048, file: !44, line: 1077, baseType: !1008, size: 128, offset: 768)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !1048, file: !44, line: 1078, baseType: !894, size: 64, offset: 896)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !1048, file: !44, line: 1079, baseType: !701, size: 64, offset: 960)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !1048, file: !44, line: 1080, baseType: !701, size: 64, offset: 1024)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !1048, file: !44, line: 1082, baseType: !1065, size: 64, offset: 1088)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !1067)
!1067 = !{!1068, !1076, !1077, !1078, !1079, !1080}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1066, file: !44, line: 1315, baseType: !1069)
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1070, line: 20, baseType: !1071)
!1070 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1070, line: 11, elements: !1072)
!1072 = !{!1073}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1071, file: !1070, line: 12, baseType: !1074)
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !345, line: 33, baseType: !1075)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 31, elements: !281)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1066, file: !44, line: 1316, baseType: !236, size: 32)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1066, file: !44, line: 1317, baseType: !236, size: 32, offset: 32)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1066, file: !44, line: 1318, baseType: !1065, size: 64, offset: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1066, file: !44, line: 1319, baseType: !894, size: 64, offset: 128)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1066, file: !44, line: 1320, baseType: !874, size: 128, align: 64, offset: 192)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !1048, file: !44, line: 1084, baseType: !215, size: 64, offset: 1152)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !1048, file: !44, line: 1085, baseType: !215, size: 64, offset: 1216)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !1048, file: !44, line: 1087, baseType: !1084, size: 64, offset: 1280)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64)
!1085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1086)
!1086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !1087)
!1087 = !{!1088, !1092}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !1086, file: !44, line: 1012, baseType: !1089, size: 64)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{null, !1047, !1047}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !1086, file: !44, line: 1013, baseType: !1093, size: 64, offset: 64)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!1094 = !DISubroutineType(types: !1095)
!1095 = !{null, !1047}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !1048, file: !44, line: 1088, baseType: !1097, size: 64, offset: 1344)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1099)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !1100)
!1100 = !{!1101, !1105, !1109, !1110, !1114, !1118, !1122, !1127}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !1099, file: !44, line: 1017, baseType: !1102, size: 64)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{!1033, !1033}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !1099, file: !44, line: 1018, baseType: !1106, size: 64, offset: 64)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{null, !1033}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !1099, file: !44, line: 1019, baseType: !1093, size: 64, offset: 128)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !1099, file: !44, line: 1020, baseType: !1111, size: 64, offset: 192)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{!236, !1047, !236}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !1099, file: !44, line: 1021, baseType: !1115, size: 64, offset: 256)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{!682, !1047}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !1099, file: !44, line: 1022, baseType: !1119, size: 64, offset: 320)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{!236, !1047, !236, !268}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !1099, file: !44, line: 1023, baseType: !1123, size: 64, offset: 384)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!1124 = !DISubroutineType(types: !1125)
!1125 = !{null, !1047, !1126}
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !1099, file: !44, line: 1024, baseType: !1115, size: 64, offset: 448)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !1048, file: !44, line: 1097, baseType: !1129, size: 256, offset: 1408)
!1129 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1048, file: !44, line: 1089, size: 256, elements: !1130)
!1130 = !{!1131, !1140, !1146}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !1129, file: !44, line: 1090, baseType: !1132, size: 256)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !1133, line: 10, size: 256, elements: !1134)
!1133 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1134 = !{!1135, !1136, !1139}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1132, file: !1133, line: 11, baseType: !217, size: 32)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1132, file: !1133, line: 12, baseType: !1137, size: 64, offset: 64)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !1133, line: 5, flags: DIFlagFwdDecl)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1132, file: !1133, line: 13, baseType: !265, size: 128, offset: 128)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !1129, file: !44, line: 1091, baseType: !1141, size: 64)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !1133, line: 17, size: 64, elements: !1142)
!1142 = !{!1143}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1141, file: !1133, line: 18, baseType: !1144, size: 64)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1145 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !1133, line: 16, flags: DIFlagFwdDecl)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !1129, file: !44, line: 1096, baseType: !1147, size: 192)
!1147 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1129, file: !44, line: 1092, size: 192, elements: !1148)
!1148 = !{!1149, !1150, !1151}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1147, file: !44, line: 1093, baseType: !265, size: 128)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1147, file: !44, line: 1094, baseType: !236, size: 32, offset: 128)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !1147, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !887, file: !44, line: 1843, baseType: !1153, size: 64, offset: 1280)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{!899, !894, !511, !236, !815, !845, !236}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !887, file: !44, line: 1844, baseType: !1157, size: 64, offset: 1344)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64)
!1158 = !DISubroutineType(types: !1159)
!1159 = !{!215, !894, !215, !215, !215, !215}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !887, file: !44, line: 1845, baseType: !1161, size: 64, offset: 1408)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{!236, !236}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !887, file: !44, line: 1846, baseType: !1044, size: 64, offset: 1472)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !887, file: !44, line: 1847, baseType: !1166, size: 64, offset: 1536)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{!899, !962, !894, !845, !815, !7}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !887, file: !44, line: 1848, baseType: !1170, size: 64, offset: 1600)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!899, !894, !845, !962, !815, !7}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !887, file: !44, line: 1849, baseType: !1174, size: 64, offset: 1664)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{!236, !894, !166, !1177, !1126}
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !887, file: !44, line: 1850, baseType: !1179, size: 64, offset: 1728)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64)
!1180 = !DISubroutineType(types: !1181)
!1181 = !{!166, !894, !236, !701, !701}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !887, file: !44, line: 1852, baseType: !1183, size: 64, offset: 1792)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64)
!1184 = !DISubroutineType(types: !1185)
!1185 = !{null, !809, !894}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !887, file: !44, line: 1856, baseType: !1187, size: 64, offset: 1856)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{!899, !894, !701, !894, !701, !815, !7}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !887, file: !44, line: 1858, baseType: !1191, size: 64, offset: 1920)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 64)
!1192 = !DISubroutineType(types: !1193)
!1193 = !{!701, !894, !701, !894, !701, !701, !7}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !887, file: !44, line: 1861, baseType: !1036, size: 64, offset: 1984)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !862, file: !44, line: 929, baseType: !608, offset: 384)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !862, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !862, file: !44, line: 931, baseType: !828, size: 64, offset: 448)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !862, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !862, file: !44, line: 933, baseType: !1200, size: 32, offset: 544)
!1200 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !232, line: 150, baseType: !7)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !862, file: !44, line: 934, baseType: !824, size: 192, offset: 576)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !862, file: !44, line: 935, baseType: !701, size: 64, offset: 768)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !862, file: !44, line: 936, baseType: !1204, size: 192, offset: 832)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !1205)
!1205 = !{!1206, !1207, !1229, !1230, !1231, !1232}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1204, file: !44, line: 886, baseType: !1069)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1204, file: !44, line: 887, baseType: !1208, size: 64)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1210)
!1210 = !{!1211, !1212, !1213, !1214, !1218, !1219, !1220, !1221}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1209, file: !53, line: 61, baseType: !226, size: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1209, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1209, file: !53, line: 63, baseType: !608, offset: 64)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1209, file: !53, line: 65, baseType: !1215, size: 256, offset: 64)
!1215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !731, size: 256, elements: !1216)
!1216 = !{!1217}
!1217 = !DISubrange(count: 4)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1209, file: !53, line: 66, baseType: !731, size: 64, offset: 320)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1209, file: !53, line: 68, baseType: !1008, size: 128, offset: 384)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1209, file: !53, line: 69, baseType: !874, size: 128, align: 64, offset: 512)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1209, file: !53, line: 70, baseType: !1222, size: 128, offset: 640)
!1222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1223, size: 128, elements: !415)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1224)
!1224 = !{!1225, !1226}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1223, file: !53, line: 55, baseType: !236, size: 32)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1223, file: !53, line: 56, baseType: !1227, size: 64, offset: 64)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !53, line: 56, flags: DIFlagFwdDecl)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !1204, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1204, file: !44, line: 889, baseType: !534, size: 32, offset: 96)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1204, file: !44, line: 889, baseType: !534, size: 32, offset: 128)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !1204, file: !44, line: 890, baseType: !236, size: 32, offset: 160)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !862, file: !44, line: 937, baseType: !1234, size: 64, offset: 1024)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64)
!1235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1236)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1237, line: 111, size: 1280, elements: !1238)
!1237 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1238 = !{!1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1258, !1259, !1260, !1261, !1262, !1263, !1383, !1384, !1385, !1386, !1412, !1415, !1425}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1236, file: !1237, line: 112, baseType: !231, size: 32)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1236, file: !1237, line: 120, baseType: !534, size: 32, offset: 32)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1236, file: !1237, line: 121, baseType: !542, size: 32, offset: 64)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1236, file: !1237, line: 122, baseType: !534, size: 32, offset: 96)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1236, file: !1237, line: 123, baseType: !542, size: 32, offset: 128)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1236, file: !1237, line: 124, baseType: !534, size: 32, offset: 160)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1236, file: !1237, line: 125, baseType: !542, size: 32, offset: 192)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1236, file: !1237, line: 126, baseType: !534, size: 32, offset: 224)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1236, file: !1237, line: 127, baseType: !542, size: 32, offset: 256)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1236, file: !1237, line: 128, baseType: !7, size: 32, offset: 288)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1236, file: !1237, line: 129, baseType: !1250, size: 64, offset: 320)
!1250 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1251, line: 26, baseType: !1252)
!1251 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1251, line: 24, size: 64, elements: !1253)
!1253 = !{!1254}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1252, file: !1251, line: 25, baseType: !1255, size: 64)
!1255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !219, size: 64, elements: !1256)
!1256 = !{!1257}
!1257 = !DISubrange(count: 2)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1236, file: !1237, line: 130, baseType: !1250, size: 64, offset: 384)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1236, file: !1237, line: 131, baseType: !1250, size: 64, offset: 448)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1236, file: !1237, line: 132, baseType: !1250, size: 64, offset: 512)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1236, file: !1237, line: 133, baseType: !1250, size: 64, offset: 576)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1236, file: !1237, line: 135, baseType: !397, size: 8, offset: 640)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1236, file: !1237, line: 137, baseType: !1264, size: 64, offset: 704)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1266, line: 189, size: 1664, elements: !1267)
!1266 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1267 = !{!1268, !1269, !1274, !1279, !1287, !1290, !1291, !1298, !1299, !1300, !1301, !1304, !1305, !1306, !1308, !1309, !1347, !1368}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1265, file: !1266, line: 190, baseType: !226, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1265, file: !1266, line: 191, baseType: !1270, size: 32, offset: 32)
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1266, line: 28, baseType: !1271)
!1271 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !232, line: 98, baseType: !1272)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !218, line: 20, baseType: !1273)
!1273 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !220, line: 26, baseType: !236)
!1274 = !DIDerivedType(tag: DW_TAG_member, scope: !1265, file: !1266, line: 192, baseType: !1275, size: 192, offset: 64)
!1275 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1265, file: !1266, line: 192, size: 192, elements: !1276)
!1276 = !{!1277, !1278}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1275, file: !1266, line: 193, baseType: !265, size: 128)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1275, file: !1266, line: 194, baseType: !257, size: 192, align: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1265, file: !1266, line: 199, baseType: !1280, size: 256, offset: 256)
!1280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1281, line: 35, size: 256, elements: !1282)
!1281 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1282 = !{!1283, !1284, !1285, !1286}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1280, file: !1281, line: 36, baseType: !828, size: 64)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1280, file: !1281, line: 42, baseType: !828, size: 64, offset: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1280, file: !1281, line: 46, baseType: !339, offset: 128)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1280, file: !1281, line: 47, baseType: !265, size: 128, offset: 128)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1265, file: !1266, line: 200, baseType: !1288, size: 64, offset: 512)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64)
!1289 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1266, line: 200, flags: DIFlagFwdDecl)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1265, file: !1266, line: 201, baseType: !224, size: 64, offset: 576)
!1291 = !DIDerivedType(tag: DW_TAG_member, scope: !1265, file: !1266, line: 202, baseType: !1292, size: 64, offset: 640)
!1292 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1265, file: !1266, line: 202, size: 64, elements: !1293)
!1293 = !{!1294, !1297}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1292, file: !1266, line: 203, baseType: !1295, size: 64)
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1296, line: 8, baseType: !305)
!1296 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1292, file: !1266, line: 204, baseType: !1295, size: 64)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1265, file: !1266, line: 206, baseType: !1295, size: 64, offset: 704)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1265, file: !1266, line: 207, baseType: !534, size: 32, offset: 768)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1265, file: !1266, line: 208, baseType: !542, size: 32, offset: 800)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1265, file: !1266, line: 209, baseType: !1302, size: 32, offset: 832)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1266, line: 31, baseType: !1303)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !232, line: 104, baseType: !217)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1265, file: !1266, line: 210, baseType: !290, size: 16, offset: 864)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1265, file: !1266, line: 211, baseType: !290, size: 16, offset: 880)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1265, file: !1266, line: 215, baseType: !1307, size: 16, offset: 896)
!1307 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1265, file: !1266, line: 222, baseType: !215, size: 64, offset: 960)
!1309 = !DIDerivedType(tag: DW_TAG_member, scope: !1265, file: !1266, line: 239, baseType: !1310, size: 320, offset: 1024)
!1310 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1265, file: !1266, line: 239, size: 320, elements: !1311)
!1311 = !{!1312, !1339}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1310, file: !1266, line: 240, baseType: !1313, size: 320)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1266, line: 108, size: 320, elements: !1314)
!1314 = !{!1315, !1316, !1328, !1331, !1338}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1313, file: !1266, line: 110, baseType: !215, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, scope: !1313, file: !1266, line: 111, baseType: !1317, size: 64, offset: 64)
!1317 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1313, file: !1266, line: 111, size: 64, elements: !1318)
!1318 = !{!1319, !1327}
!1319 = !DIDerivedType(tag: DW_TAG_member, scope: !1317, file: !1266, line: 112, baseType: !1320, size: 64)
!1320 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1317, file: !1266, line: 112, size: 64, elements: !1321)
!1321 = !{!1322, !1323}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1320, file: !1266, line: 114, baseType: !922, size: 16)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1320, file: !1266, line: 115, baseType: !1324, size: 48, offset: 16)
!1324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !639, size: 48, elements: !1325)
!1325 = !{!1326}
!1326 = !DISubrange(count: 6)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1317, file: !1266, line: 121, baseType: !215, size: 64)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1313, file: !1266, line: 123, baseType: !1329, size: 64, offset: 128)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!1330 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1266, line: 96, flags: DIFlagFwdDecl)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1313, file: !1266, line: 124, baseType: !1332, size: 64, offset: 192)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1266, line: 102, size: 192, elements: !1334)
!1334 = !{!1335, !1336, !1337}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1333, file: !1266, line: 103, baseType: !874, size: 128, align: 64)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1333, file: !1266, line: 104, baseType: !226, size: 32, offset: 128)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1333, file: !1266, line: 105, baseType: !682, size: 8, offset: 160)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1313, file: !1266, line: 125, baseType: !637, size: 64, offset: 256)
!1339 = !DIDerivedType(tag: DW_TAG_member, scope: !1310, file: !1266, line: 241, baseType: !1340, size: 320)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1310, file: !1266, line: 241, size: 320, elements: !1341)
!1341 = !{!1342, !1343, !1344, !1345, !1346}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1340, file: !1266, line: 242, baseType: !215, size: 64)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1340, file: !1266, line: 243, baseType: !215, size: 64, offset: 64)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1340, file: !1266, line: 244, baseType: !1329, size: 64, offset: 128)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1340, file: !1266, line: 245, baseType: !1332, size: 64, offset: 192)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1340, file: !1266, line: 246, baseType: !663, size: 64, offset: 256)
!1347 = !DIDerivedType(tag: DW_TAG_member, scope: !1265, file: !1266, line: 254, baseType: !1348, size: 256, offset: 1344)
!1348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1265, file: !1266, line: 254, size: 256, elements: !1349)
!1349 = !{!1350, !1356}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1348, file: !1266, line: 255, baseType: !1351, size: 256)
!1351 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1266, line: 128, size: 256, elements: !1352)
!1352 = !{!1353, !1354}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1351, file: !1266, line: 129, baseType: !224, size: 64)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1351, file: !1266, line: 130, baseType: !1355, size: 256)
!1355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 256, elements: !1216)
!1356 = !DIDerivedType(tag: DW_TAG_member, scope: !1348, file: !1266, line: 256, baseType: !1357, size: 256)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1348, file: !1266, line: 256, size: 256, elements: !1358)
!1358 = !{!1359, !1360}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1357, file: !1266, line: 258, baseType: !265, size: 128)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1357, file: !1266, line: 259, baseType: !1361, size: 128, offset: 128)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1362, line: 22, size: 128, elements: !1363)
!1362 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1363 = !{!1364, !1367}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1361, file: !1362, line: 23, baseType: !1365, size: 64)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!1366 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1362, line: 23, flags: DIFlagFwdDecl)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1361, file: !1362, line: 24, baseType: !215, size: 64, offset: 64)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1265, file: !1266, line: 274, baseType: !1369, size: 64, offset: 1600)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1266, line: 170, size: 192, elements: !1371)
!1371 = !{!1372, !1381, !1382}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1370, file: !1266, line: 171, baseType: !1373, size: 64)
!1373 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1266, line: 165, baseType: !1374)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64)
!1375 = !DISubroutineType(types: !1376)
!1376 = !{!236, !1264, !1377, !1379, !1264}
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1378 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1330)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 64)
!1380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1351)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1370, file: !1266, line: 172, baseType: !1264, size: 64, offset: 64)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1370, file: !1266, line: 173, baseType: !1329, size: 64, offset: 128)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1236, file: !1237, line: 138, baseType: !1264, size: 64, offset: 768)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1236, file: !1237, line: 139, baseType: !1264, size: 64, offset: 832)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1236, file: !1237, line: 140, baseType: !1264, size: 64, offset: 896)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1236, file: !1237, line: 145, baseType: !1387, size: 64, offset: 960)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 64)
!1388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1389, line: 13, size: 896, elements: !1390)
!1389 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1390 = !{!1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1388, file: !1389, line: 14, baseType: !226, size: 32)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1388, file: !1389, line: 15, baseType: !231, size: 32, offset: 32)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1388, file: !1389, line: 16, baseType: !231, size: 32, offset: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1388, file: !1389, line: 21, baseType: !828, size: 64, offset: 128)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1388, file: !1389, line: 27, baseType: !215, size: 64, offset: 192)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1388, file: !1389, line: 28, baseType: !215, size: 64, offset: 256)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1388, file: !1389, line: 29, baseType: !828, size: 64, offset: 320)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1388, file: !1389, line: 32, baseType: !735, size: 128, offset: 384)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1388, file: !1389, line: 33, baseType: !534, size: 32, offset: 512)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1388, file: !1389, line: 37, baseType: !828, size: 64, offset: 576)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1388, file: !1389, line: 44, baseType: !1402, size: 256, offset: 640)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1403, line: 15, size: 256, elements: !1404)
!1403 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1404 = !{!1405, !1406, !1407, !1408, !1409, !1410, !1411}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1402, file: !1403, line: 16, baseType: !339)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1402, file: !1403, line: 18, baseType: !236, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1402, file: !1403, line: 19, baseType: !236, size: 32, offset: 32)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1402, file: !1403, line: 20, baseType: !236, size: 32, offset: 64)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1402, file: !1403, line: 21, baseType: !236, size: 32, offset: 96)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1402, file: !1403, line: 22, baseType: !215, size: 64, offset: 128)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1402, file: !1403, line: 23, baseType: !215, size: 64, offset: 192)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1236, file: !1237, line: 146, baseType: !1413, size: 64, offset: 1024)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64)
!1414 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !424, line: 516, flags: DIFlagFwdDecl)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1236, file: !1237, line: 147, baseType: !1416, size: 64, offset: 1088)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 64)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1237, line: 25, size: 64, elements: !1418)
!1418 = !{!1419, !1420, !1421}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1417, file: !1237, line: 26, baseType: !231, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1417, file: !1237, line: 27, baseType: !236, size: 32, offset: 32)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1417, file: !1237, line: 28, baseType: !1422, offset: 64)
!1422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !542, elements: !1423)
!1423 = !{!1424}
!1424 = !DISubrange(count: 0)
!1425 = !DIDerivedType(tag: DW_TAG_member, scope: !1236, file: !1237, line: 149, baseType: !1426, size: 128, offset: 1152)
!1426 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1236, file: !1237, line: 149, size: 128, elements: !1427)
!1427 = !{!1428, !1429}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1426, file: !1237, line: 150, baseType: !236, size: 32)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1426, file: !1237, line: 151, baseType: !874, size: 128, align: 64)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !862, file: !44, line: 938, baseType: !1431, size: 256, offset: 1088)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !1432)
!1432 = !{!1433, !1434, !1435, !1436, !1437, !1438}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1431, file: !44, line: 897, baseType: !215, size: 64)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1431, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !1431, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !1431, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !1431, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !1431, file: !44, line: 904, baseType: !701, size: 64, offset: 192)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !862, file: !44, line: 940, baseType: !272, size: 64, offset: 1344)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !862, file: !44, line: 945, baseType: !224, size: 64, offset: 1408)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !862, file: !44, line: 949, baseType: !265, size: 128, offset: 1472)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !862, file: !44, line: 950, baseType: !265, size: 128, offset: 1600)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !862, file: !44, line: 952, baseType: !523, size: 64, offset: 1728)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !862, file: !44, line: 953, baseType: !1445, size: 32, offset: 1792)
!1445 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1446, line: 8, baseType: !217)
!1446 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !862, file: !44, line: 954, baseType: !1445, size: 32, offset: 1824)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !810, file: !811, line: 28, baseType: !224, size: 64, offset: 832)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !755, file: !44, line: 1955, baseType: !806, size: 64, offset: 1088)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !755, file: !44, line: 1956, baseType: !806, size: 64, offset: 1152)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !755, file: !44, line: 1957, baseType: !806, size: 64, offset: 1216)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !755, file: !44, line: 1963, baseType: !1453, size: 64, offset: 1280)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = !DISubroutineType(types: !1455)
!1455 = !{!236, !691, !511, !487}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !755, file: !44, line: 1964, baseType: !1457, size: 64, offset: 1344)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64)
!1458 = !DISubroutineType(types: !1459)
!1459 = !{!166, !691, !1460}
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !1462, line: 12, size: 256, elements: !1463)
!1462 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!1463 = !{!1464, !1465, !1466, !1467, !1468}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1461, file: !1462, line: 13, baseType: !487, size: 32)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !1461, file: !1462, line: 16, baseType: !236, size: 32, offset: 32)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !1461, file: !1462, line: 23, baseType: !215, size: 64, offset: 64)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !1461, file: !1462, line: 30, baseType: !215, size: 64, offset: 128)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !1461, file: !1462, line: 33, baseType: !1469, size: 64, offset: 192)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 64)
!1470 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !424, line: 27, flags: DIFlagFwdDecl)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !755, file: !44, line: 1966, baseType: !1457, size: 64, offset: 1408)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !692, file: !44, line: 1424, baseType: !1473, size: 64, offset: 448)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 64)
!1474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1475)
!1475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !1476)
!1476 = !{!1477, !1523, !1527, !1531, !1532, !1533, !1534, !1535, !1540, !1545, !1549}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !1475, file: !38, line: 323, baseType: !1478, size: 64)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!236, !1481}
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 64)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !1483)
!1483 = !{!1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1508, !1509, !1510}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !1482, file: !38, line: 295, baseType: !735, size: 128)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !1482, file: !38, line: 296, baseType: !265, size: 128, offset: 128)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !1482, file: !38, line: 297, baseType: !265, size: 128, offset: 256)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !1482, file: !38, line: 298, baseType: !265, size: 128, offset: 384)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !1482, file: !38, line: 299, baseType: !824, size: 192, offset: 512)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !1482, file: !38, line: 300, baseType: !608, offset: 704)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !1482, file: !38, line: 301, baseType: !231, size: 32, offset: 704)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !1482, file: !38, line: 302, baseType: !691, size: 64, offset: 768)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !1482, file: !38, line: 303, baseType: !1493, size: 64, offset: 832)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !1494)
!1494 = !{!1495, !1507}
!1495 = !DIDerivedType(tag: DW_TAG_member, scope: !1493, file: !38, line: 69, baseType: !1496, size: 32)
!1496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1493, file: !38, line: 69, size: 32, elements: !1497)
!1497 = !{!1498, !1499, !1500}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1496, file: !38, line: 70, baseType: !534, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1496, file: !38, line: 71, baseType: !542, size: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !1496, file: !38, line: 72, baseType: !1501, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !1502, line: 24, baseType: !1503)
!1502 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1502, line: 22, size: 32, elements: !1504)
!1504 = !{!1505}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1503, file: !1502, line: 23, baseType: !1506, size: 32)
!1506 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !1502, line: 20, baseType: !540)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1493, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !1482, file: !38, line: 304, baseType: !701, size: 64, offset: 896)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !1482, file: !38, line: 305, baseType: !215, size: 64, offset: 960)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !1482, file: !38, line: 306, baseType: !1511, size: 576, offset: 1024)
!1511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !1512)
!1512 = !{!1513, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !1511, file: !38, line: 206, baseType: !1514, size: 64)
!1514 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !306)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !1511, file: !38, line: 207, baseType: !1514, size: 64, offset: 64)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !1511, file: !38, line: 208, baseType: !1514, size: 64, offset: 128)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !1511, file: !38, line: 209, baseType: !1514, size: 64, offset: 192)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !1511, file: !38, line: 210, baseType: !1514, size: 64, offset: 256)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !1511, file: !38, line: 211, baseType: !1514, size: 64, offset: 320)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !1511, file: !38, line: 212, baseType: !1514, size: 64, offset: 384)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !1511, file: !38, line: 213, baseType: !1295, size: 64, offset: 448)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !1511, file: !38, line: 214, baseType: !1295, size: 64, offset: 512)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !1475, file: !38, line: 324, baseType: !1524, size: 64, offset: 64)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64)
!1525 = !DISubroutineType(types: !1526)
!1526 = !{!1481, !691, !236}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !1475, file: !38, line: 325, baseType: !1528, size: 64, offset: 128)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64)
!1529 = !DISubroutineType(types: !1530)
!1530 = !{null, !1481}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !1475, file: !38, line: 326, baseType: !1478, size: 64, offset: 192)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !1475, file: !38, line: 327, baseType: !1478, size: 64, offset: 256)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !1475, file: !38, line: 328, baseType: !1478, size: 64, offset: 320)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !1475, file: !38, line: 329, baseType: !783, size: 64, offset: 384)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !1475, file: !38, line: 332, baseType: !1536, size: 64, offset: 448)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!1539, !527}
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !1475, file: !38, line: 333, baseType: !1541, size: 64, offset: 512)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!236, !527, !1544}
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 64)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !1475, file: !38, line: 335, baseType: !1546, size: 64, offset: 576)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{!236, !527, !1539}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !1475, file: !38, line: 337, baseType: !1550, size: 64, offset: 640)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64)
!1551 = !DISubroutineType(types: !1552)
!1552 = !{!236, !691, !1553}
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !692, file: !44, line: 1425, baseType: !1555, size: 64, offset: 512)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 64)
!1556 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1557)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !1558)
!1558 = !{!1559, !1563, !1564, !1568, !1569, !1570, !1585, !1608, !1612, !1613, !1636}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !1557, file: !38, line: 429, baseType: !1560, size: 64)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!236, !691, !236, !236, !680}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !1557, file: !38, line: 430, baseType: !783, size: 64, offset: 64)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !1557, file: !38, line: 431, baseType: !1565, size: 64, offset: 128)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 64)
!1566 = !DISubroutineType(types: !1567)
!1567 = !{!236, !691, !7}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !1557, file: !38, line: 432, baseType: !1565, size: 64, offset: 192)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !1557, file: !38, line: 433, baseType: !783, size: 64, offset: 256)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !1557, file: !38, line: 434, baseType: !1571, size: 64, offset: 320)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!236, !691, !236, !1574}
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !1576)
!1576 = !{!1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !1575, file: !38, line: 416, baseType: !236, size: 32)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1575, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !1575, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !1575, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !1575, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !1575, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !1575, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !1575, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !1557, file: !38, line: 435, baseType: !1586, size: 64, offset: 384)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 64)
!1587 = !DISubroutineType(types: !1588)
!1588 = !{!236, !691, !1493, !1589}
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 64)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !1591)
!1591 = !{!1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !1590, file: !38, line: 344, baseType: !236, size: 32)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !1590, file: !38, line: 345, baseType: !272, size: 64, offset: 64)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !1590, file: !38, line: 346, baseType: !272, size: 64, offset: 128)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !1590, file: !38, line: 347, baseType: !272, size: 64, offset: 192)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !1590, file: !38, line: 348, baseType: !272, size: 64, offset: 256)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !1590, file: !38, line: 349, baseType: !272, size: 64, offset: 320)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !1590, file: !38, line: 350, baseType: !272, size: 64, offset: 384)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !1590, file: !38, line: 351, baseType: !304, size: 64, offset: 448)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !1590, file: !38, line: 353, baseType: !304, size: 64, offset: 512)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !1590, file: !38, line: 354, baseType: !236, size: 32, offset: 576)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !1590, file: !38, line: 355, baseType: !236, size: 32, offset: 608)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !1590, file: !38, line: 356, baseType: !272, size: 64, offset: 640)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !1590, file: !38, line: 357, baseType: !272, size: 64, offset: 704)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !1590, file: !38, line: 358, baseType: !272, size: 64, offset: 768)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !1590, file: !38, line: 359, baseType: !304, size: 64, offset: 832)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !1590, file: !38, line: 360, baseType: !236, size: 32, offset: 896)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !1557, file: !38, line: 436, baseType: !1609, size: 64, offset: 448)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 64)
!1610 = !DISubroutineType(types: !1611)
!1611 = !{!236, !691, !1553, !1589}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !1557, file: !38, line: 438, baseType: !1586, size: 64, offset: 512)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !1557, file: !38, line: 439, baseType: !1614, size: 64, offset: 576)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 64)
!1615 = !DISubroutineType(types: !1616)
!1616 = !{!236, !691, !1617}
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 64)
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !1619)
!1619 = !{!1620, !1621}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !1618, file: !38, line: 410, baseType: !7, size: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !1618, file: !38, line: 411, baseType: !1622, size: 1344, offset: 64)
!1622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1623, size: 1344, elements: !747)
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !1624)
!1624 = !{!1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1635}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1623, file: !38, line: 396, baseType: !7, size: 32)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !1623, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !1623, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !1623, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !1623, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !1623, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !1623, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1623, file: !38, line: 404, baseType: !274, size: 64, offset: 256)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1623, file: !38, line: 405, baseType: !1634, size: 64, offset: 320)
!1634 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !232, line: 126, baseType: !272)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !1623, file: !38, line: 406, baseType: !1634, size: 64, offset: 384)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !1557, file: !38, line: 440, baseType: !1565, size: 64, offset: 640)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !692, file: !44, line: 1426, baseType: !1638, size: 64, offset: 576)
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 64)
!1639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1640)
!1640 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !692, file: !44, line: 1427, baseType: !215, size: 64, offset: 640)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !692, file: !44, line: 1428, baseType: !215, size: 64, offset: 704)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !692, file: !44, line: 1429, baseType: !215, size: 64, offset: 768)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !692, file: !44, line: 1430, baseType: !558, size: 64, offset: 832)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !692, file: !44, line: 1431, baseType: !1280, size: 256, offset: 896)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !692, file: !44, line: 1432, baseType: !236, size: 32, offset: 1152)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !692, file: !44, line: 1433, baseType: !231, size: 32, offset: 1184)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !692, file: !44, line: 1437, baseType: !1649, size: 64, offset: 1216)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 64)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64)
!1651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1652)
!1652 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !692, file: !44, line: 1449, baseType: !1654, size: 64, offset: 1280)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !570, line: 34, size: 64, elements: !1655)
!1655 = !{!1656}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1654, file: !570, line: 35, baseType: !573, size: 64)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !692, file: !44, line: 1450, baseType: !265, size: 128, offset: 1344)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !692, file: !44, line: 1451, baseType: !1659, size: 64, offset: 1472)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 64)
!1660 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !692, file: !44, line: 1452, baseType: !1662, size: 64, offset: 1536)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !208, line: 40, flags: DIFlagFwdDecl)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !692, file: !44, line: 1453, baseType: !1665, size: 64, offset: 1600)
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 64)
!1666 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !692, file: !44, line: 1454, baseType: !735, size: 128, offset: 1664)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !692, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !692, file: !44, line: 1456, baseType: !1670, size: 2432, offset: 1856)
!1670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !1671)
!1671 = !{!1672, !1673, !1674, !1676, !1708}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1670, file: !38, line: 519, baseType: !7, size: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !1670, file: !38, line: 520, baseType: !1280, size: 256, offset: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1670, file: !38, line: 521, baseType: !1675, size: 192, offset: 320)
!1675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !527, size: 192, elements: !747)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1670, file: !38, line: 522, baseType: !1677, size: 1728, offset: 512)
!1677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1678, size: 1728, elements: !747)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !1679)
!1679 = !{!1680, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !1678, file: !38, line: 223, baseType: !1681, size: 64)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 64)
!1682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !1683)
!1683 = !{!1684, !1685, !1698, !1699}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !1682, file: !38, line: 444, baseType: !236, size: 32)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !1682, file: !38, line: 445, baseType: !1686, size: 64, offset: 64)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1688)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !1689)
!1689 = !{!1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !1688, file: !38, line: 311, baseType: !783, size: 64)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !1688, file: !38, line: 312, baseType: !783, size: 64, offset: 64)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !1688, file: !38, line: 313, baseType: !783, size: 64, offset: 128)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !1688, file: !38, line: 314, baseType: !783, size: 64, offset: 192)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !1688, file: !38, line: 315, baseType: !1478, size: 64, offset: 256)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !1688, file: !38, line: 316, baseType: !1478, size: 64, offset: 320)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !1688, file: !38, line: 317, baseType: !1478, size: 64, offset: 384)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !1688, file: !38, line: 318, baseType: !1550, size: 64, offset: 448)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !1682, file: !38, line: 446, baseType: !202, size: 64, offset: 128)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !1682, file: !38, line: 447, baseType: !1681, size: 64, offset: 192)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !1678, file: !38, line: 224, baseType: !236, size: 32, offset: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !1678, file: !38, line: 226, baseType: !265, size: 128, offset: 128)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !1678, file: !38, line: 227, baseType: !215, size: 64, offset: 256)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !1678, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !1678, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !1678, file: !38, line: 230, baseType: !1514, size: 64, offset: 384)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !1678, file: !38, line: 231, baseType: !1514, size: 64, offset: 448)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !1678, file: !38, line: 232, baseType: !224, size: 64, offset: 512)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1670, file: !38, line: 523, baseType: !1709, size: 192, offset: 2240)
!1709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1686, size: 192, elements: !747)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !692, file: !44, line: 1458, baseType: !1711, size: 2112, offset: 4288)
!1711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !1712)
!1712 = !{!1713, !1714, !1715}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1711, file: !44, line: 1411, baseType: !236, size: 32)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !1711, file: !44, line: 1412, baseType: !1008, size: 128, offset: 64)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !1711, file: !44, line: 1413, baseType: !1716, size: 1920, offset: 192)
!1716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1717, size: 1920, elements: !747)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !1718, line: 12, size: 640, elements: !1719)
!1718 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1719 = !{!1720, !1728, !1730, !1735, !1736}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !1717, file: !1718, line: 13, baseType: !1721, size: 320)
!1721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !1722, line: 17, size: 320, elements: !1723)
!1722 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!1723 = !{!1724, !1725, !1726, !1727}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !1721, file: !1722, line: 18, baseType: !236, size: 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !1721, file: !1722, line: 19, baseType: !236, size: 32, offset: 32)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !1721, file: !1722, line: 20, baseType: !1008, size: 128, offset: 64)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !1721, file: !1722, line: 22, baseType: !874, size: 128, align: 64, offset: 192)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !1717, file: !1718, line: 14, baseType: !1729, size: 64, offset: 320)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !1717, file: !1718, line: 15, baseType: !1731, size: 64, offset: 384)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !1732, line: 16, size: 64, elements: !1733)
!1732 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!1733 = !{!1734}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1731, file: !1732, line: 17, baseType: !206, size: 64)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !1717, file: !1718, line: 16, baseType: !1008, size: 128, offset: 448)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1717, file: !1718, line: 17, baseType: !231, size: 32, offset: 576)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !692, file: !44, line: 1465, baseType: !224, size: 64, offset: 6400)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !692, file: !44, line: 1468, baseType: !217, size: 32, offset: 6464)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !692, file: !44, line: 1470, baseType: !1295, size: 64, offset: 6528)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !692, file: !44, line: 1471, baseType: !1295, size: 64, offset: 6592)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !692, file: !44, line: 1473, baseType: !219, size: 32, offset: 6656)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !692, file: !44, line: 1474, baseType: !1743, size: 64, offset: 6720)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64)
!1744 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !692, file: !44, line: 1477, baseType: !1746, size: 256, offset: 6784)
!1746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !639, size: 256, elements: !595)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !692, file: !44, line: 1478, baseType: !1748, size: 128, offset: 7040)
!1748 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !1749, line: 18, baseType: !1750)
!1749 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1749, line: 16, size: 128, elements: !1751)
!1751 = !{!1752}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1750, file: !1749, line: 17, baseType: !1753, size: 128)
!1753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 128, elements: !1754)
!1754 = !{!1755}
!1755 = !DISubrange(count: 16)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !692, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !692, file: !44, line: 1481, baseType: !1200, size: 32, offset: 7200)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !692, file: !44, line: 1487, baseType: !824, size: 192, offset: 7232)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !692, file: !44, line: 1493, baseType: !637, size: 64, offset: 7424)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !692, file: !44, line: 1495, baseType: !617, size: 64, offset: 7488)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !692, file: !44, line: 1500, baseType: !236, size: 32, offset: 7552)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !692, file: !44, line: 1502, baseType: !1763, size: 448, offset: 7616)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !1462, line: 60, size: 448, elements: !1764)
!1764 = !{!1765, !1770, !1771, !1772, !1773, !1774, !1775}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !1763, file: !1462, line: 61, baseType: !1766, size: 64)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 64)
!1767 = !DISubroutineType(types: !1768)
!1768 = !{!215, !1769, !1460}
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !1763, file: !1462, line: 63, baseType: !1766, size: 64, offset: 64)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !1763, file: !1462, line: 66, baseType: !166, size: 64, offset: 128)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !1763, file: !1462, line: 67, baseType: !236, size: 32, offset: 192)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1763, file: !1462, line: 68, baseType: !7, size: 32, offset: 224)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1763, file: !1462, line: 71, baseType: !265, size: 128, offset: 256)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !1763, file: !1462, line: 77, baseType: !1776, size: 64, offset: 384)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !692, file: !44, line: 1505, baseType: !828, size: 64, offset: 8064)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !692, file: !44, line: 1508, baseType: !828, size: 64, offset: 8128)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !692, file: !44, line: 1511, baseType: !236, size: 32, offset: 8192)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !692, file: !44, line: 1514, baseType: !1445, size: 32, offset: 8224)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !692, file: !44, line: 1517, baseType: !1782, size: 64, offset: 8256)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 64)
!1783 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !165, line: 18, flags: DIFlagFwdDecl)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !692, file: !44, line: 1518, baseType: !731, size: 64, offset: 8320)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !692, file: !44, line: 1525, baseType: !1413, size: 64, offset: 8384)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !692, file: !44, line: 1532, baseType: !1787, size: 64, offset: 8448)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !1788, line: 52, size: 64, elements: !1789)
!1788 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!1789 = !{!1790}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1787, file: !1788, line: 53, baseType: !1791, size: 64)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 64)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !1788, line: 40, size: 256, elements: !1793)
!1793 = !{!1794, !1795, !1800}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1792, file: !1788, line: 42, baseType: !608)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1792, file: !1788, line: 44, baseType: !1796, size: 192)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !1788, line: 28, size: 192, elements: !1797)
!1797 = !{!1798, !1799}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1796, file: !1788, line: 29, baseType: !265, size: 128)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !1796, file: !1788, line: 31, baseType: !166, size: 64, offset: 128)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !1792, file: !1788, line: 49, baseType: !166, size: 64, offset: 192)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !692, file: !44, line: 1533, baseType: !1787, size: 64, offset: 8512)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !692, file: !44, line: 1534, baseType: !874, size: 128, align: 64, offset: 8576)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !692, file: !44, line: 1535, baseType: !1804, size: 256, offset: 8704)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !165, line: 102, size: 256, elements: !1805)
!1805 = !{!1806, !1807, !1808}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1804, file: !165, line: 103, baseType: !828, size: 64)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1804, file: !165, line: 104, baseType: !265, size: 128, offset: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1804, file: !165, line: 105, baseType: !1809, size: 64, offset: 192)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !165, line: 21, baseType: !1810)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!1811 = !DISubroutineType(types: !1812)
!1812 = !{null, !1813}
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 64)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !692, file: !44, line: 1537, baseType: !824, size: 192, offset: 8960)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !692, file: !44, line: 1542, baseType: !236, size: 32, offset: 9152)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !692, file: !44, line: 1545, baseType: !608, offset: 9184)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !692, file: !44, line: 1546, baseType: !265, size: 128, offset: 9216)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !692, file: !44, line: 1548, baseType: !608, offset: 9344)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !692, file: !44, line: 1549, baseType: !265, size: 128, offset: 9344)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !559, file: !560, line: 104, baseType: !215, size: 64, offset: 896)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !559, file: !560, line: 105, baseType: !224, size: 64, offset: 960)
!1822 = !DIDerivedType(tag: DW_TAG_member, scope: !559, file: !560, line: 107, baseType: !1823, size: 128, offset: 1024)
!1823 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !559, file: !560, line: 107, size: 128, elements: !1824)
!1824 = !{!1825, !1826}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !1823, file: !560, line: 108, baseType: !265, size: 128)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !1823, file: !560, line: 109, baseType: !1007, size: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !559, file: !560, line: 111, baseType: !265, size: 128, offset: 1152)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !559, file: !560, line: 112, baseType: !265, size: 128, offset: 1280)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !559, file: !560, line: 120, baseType: !1830, size: 128, offset: 1408)
!1830 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !559, file: !560, line: 116, size: 128, elements: !1831)
!1831 = !{!1832, !1833, !1834}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !1830, file: !560, line: 117, baseType: !735, size: 128)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !1830, file: !560, line: 118, baseType: !569, size: 128)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !1830, file: !560, line: 119, baseType: !874, size: 128, align: 64)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !552, file: !44, line: 1866, baseType: !1836, size: 64, offset: 64)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64)
!1837 = !DISubroutineType(types: !1838)
!1838 = !{!637, !558, !527, !1839}
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 64)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1841, line: 10, size: 128, elements: !1842)
!1841 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1842 = !{!1843, !1847}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1840, file: !1841, line: 11, baseType: !1844, size: 64)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 64)
!1845 = !DISubroutineType(types: !1846)
!1846 = !{null, !224}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1840, file: !1841, line: 12, baseType: !224, size: 64, offset: 64)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !552, file: !44, line: 1867, baseType: !1849, size: 64, offset: 128)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 64)
!1850 = !DISubroutineType(types: !1851)
!1851 = !{!236, !527, !236}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !552, file: !44, line: 1868, baseType: !1853, size: 64, offset: 192)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 64)
!1854 = !DISubroutineType(types: !1855)
!1855 = !{!1856, !527, !236}
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 64)
!1857 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !552, file: !44, line: 1870, baseType: !1859, size: 64, offset: 256)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = !DISubroutineType(types: !1861)
!1861 = !{!236, !558, !663, !236}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !552, file: !44, line: 1872, baseType: !1863, size: 64, offset: 320)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 64)
!1864 = !DISubroutineType(types: !1865)
!1865 = !{!236, !527, !558, !531, !682}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !552, file: !44, line: 1873, baseType: !1867, size: 64, offset: 384)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = !DISubroutineType(types: !1869)
!1869 = !{!236, !558, !527, !558}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !552, file: !44, line: 1874, baseType: !1871, size: 64, offset: 448)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 64)
!1872 = !DISubroutineType(types: !1873)
!1873 = !{!236, !527, !558}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !552, file: !44, line: 1875, baseType: !1875, size: 64, offset: 512)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 64)
!1876 = !DISubroutineType(types: !1877)
!1877 = !{!236, !527, !558, !637}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !552, file: !44, line: 1876, baseType: !1879, size: 64, offset: 576)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 64)
!1880 = !DISubroutineType(types: !1881)
!1881 = !{!236, !527, !558, !531}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !552, file: !44, line: 1877, baseType: !1871, size: 64, offset: 640)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !552, file: !44, line: 1878, baseType: !1884, size: 64, offset: 704)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64)
!1885 = !DISubroutineType(types: !1886)
!1886 = !{!236, !527, !558, !531, !696}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !552, file: !44, line: 1879, baseType: !1888, size: 64, offset: 768)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!1889 = !DISubroutineType(types: !1890)
!1890 = !{!236, !527, !558, !527, !558, !7}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !552, file: !44, line: 1881, baseType: !1892, size: 64, offset: 832)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64)
!1893 = !DISubroutineType(types: !1894)
!1894 = !{!236, !558, !1895}
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 64)
!1896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !1897)
!1897 = !{!1898, !1899, !1900, !1901, !1902, !1903, !1908, !1909, !1910}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1896, file: !44, line: 220, baseType: !7, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1896, file: !44, line: 221, baseType: !531, size: 16, offset: 32)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1896, file: !44, line: 222, baseType: !534, size: 32, offset: 64)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1896, file: !44, line: 223, baseType: !542, size: 32, offset: 96)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1896, file: !44, line: 224, baseType: !701, size: 64, offset: 128)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1896, file: !44, line: 225, baseType: !1904, size: 128, offset: 192)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1296, line: 13, size: 128, elements: !1905)
!1905 = !{!1906, !1907}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1904, file: !1296, line: 14, baseType: !1295, size: 64)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1904, file: !1296, line: 15, baseType: !166, size: 64, offset: 64)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1896, file: !44, line: 226, baseType: !1904, size: 128, offset: 320)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1896, file: !44, line: 227, baseType: !1904, size: 128, offset: 448)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1896, file: !44, line: 234, baseType: !894, size: 64, offset: 576)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !552, file: !44, line: 1882, baseType: !1912, size: 64, offset: 896)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 64)
!1913 = !DISubroutineType(types: !1914)
!1914 = !{!236, !680, !1915, !217, !7}
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 64)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !1917, line: 22, size: 1152, elements: !1918)
!1917 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!1918 = !{!1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !1916, file: !1917, line: 23, baseType: !217, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1916, file: !1917, line: 24, baseType: !531, size: 16, offset: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !1916, file: !1917, line: 25, baseType: !7, size: 32, offset: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !1916, file: !1917, line: 26, baseType: !1303, size: 32, offset: 96)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1916, file: !1917, line: 27, baseType: !272, size: 64, offset: 128)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !1916, file: !1917, line: 28, baseType: !272, size: 64, offset: 192)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1916, file: !1917, line: 37, baseType: !272, size: 64, offset: 256)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1916, file: !1917, line: 38, baseType: !696, size: 32, offset: 320)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !1916, file: !1917, line: 39, baseType: !696, size: 32, offset: 352)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1916, file: !1917, line: 40, baseType: !534, size: 32, offset: 384)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1916, file: !1917, line: 41, baseType: !542, size: 32, offset: 416)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1916, file: !1917, line: 42, baseType: !701, size: 64, offset: 448)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !1916, file: !1917, line: 43, baseType: !1904, size: 128, offset: 512)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !1916, file: !1917, line: 44, baseType: !1904, size: 128, offset: 640)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1916, file: !1917, line: 45, baseType: !1904, size: 128, offset: 768)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !1916, file: !1917, line: 46, baseType: !1904, size: 128, offset: 896)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1916, file: !1917, line: 47, baseType: !272, size: 64, offset: 1024)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !1916, file: !1917, line: 48, baseType: !272, size: 64, offset: 1088)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !552, file: !44, line: 1883, baseType: !1938, size: 64, offset: 960)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = !DISubroutineType(types: !1940)
!1940 = !{!899, !558, !663, !815}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !552, file: !44, line: 1884, baseType: !1942, size: 64, offset: 1024)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!1943 = !DISubroutineType(types: !1944)
!1944 = !{!236, !527, !1945, !272, !272}
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64)
!1946 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !552, file: !44, line: 1886, baseType: !1948, size: 64, offset: 1088)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 64)
!1949 = !DISubroutineType(types: !1950)
!1950 = !{!236, !527, !1951, !236}
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 64)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !552, file: !44, line: 1887, baseType: !1953, size: 64, offset: 1152)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = !DISubroutineType(types: !1955)
!1955 = !{!236, !527, !558, !894, !7, !531}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !552, file: !44, line: 1890, baseType: !1879, size: 64, offset: 1216)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !552, file: !44, line: 1891, baseType: !1958, size: 64, offset: 1280)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 64)
!1959 = !DISubroutineType(types: !1960)
!1960 = !{!236, !527, !1856, !236}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !528, file: !44, line: 623, baseType: !691, size: 64, offset: 192)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !528, file: !44, line: 624, baseType: !523, size: 64, offset: 256)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !528, file: !44, line: 631, baseType: !215, size: 64, offset: 320)
!1964 = !DIDerivedType(tag: DW_TAG_member, scope: !528, file: !44, line: 639, baseType: !1965, size: 32, offset: 384)
!1965 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !528, file: !44, line: 639, size: 32, elements: !1966)
!1966 = !{!1967, !1969}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !1965, file: !44, line: 640, baseType: !1968, size: 32)
!1968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !1965, file: !44, line: 641, baseType: !7, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !528, file: !44, line: 643, baseType: !696, size: 32, offset: 416)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !528, file: !44, line: 644, baseType: !701, size: 64, offset: 448)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !528, file: !44, line: 645, baseType: !1904, size: 128, offset: 512)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !528, file: !44, line: 646, baseType: !1904, size: 128, offset: 640)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !528, file: !44, line: 647, baseType: !1904, size: 128, offset: 768)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !528, file: !44, line: 648, baseType: !608, offset: 896)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !528, file: !44, line: 649, baseType: !290, size: 16, offset: 896)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !528, file: !44, line: 650, baseType: !395, size: 8, offset: 912)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !528, file: !44, line: 651, baseType: !395, size: 8, offset: 920)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !528, file: !44, line: 652, baseType: !1634, size: 64, offset: 960)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !528, file: !44, line: 659, baseType: !215, size: 64, offset: 1024)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !528, file: !44, line: 660, baseType: !1280, size: 256, offset: 1088)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !528, file: !44, line: 662, baseType: !215, size: 64, offset: 1344)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !528, file: !44, line: 663, baseType: !215, size: 64, offset: 1408)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !528, file: !44, line: 665, baseType: !735, size: 128, offset: 1472)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !528, file: !44, line: 666, baseType: !265, size: 128, offset: 1600)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !528, file: !44, line: 675, baseType: !265, size: 128, offset: 1728)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !528, file: !44, line: 676, baseType: !265, size: 128, offset: 1856)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !528, file: !44, line: 677, baseType: !265, size: 128, offset: 1984)
!1989 = !DIDerivedType(tag: DW_TAG_member, scope: !528, file: !44, line: 678, baseType: !1990, size: 128, offset: 2112)
!1990 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !528, file: !44, line: 678, size: 128, elements: !1991)
!1991 = !{!1992, !1993}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !1990, file: !44, line: 679, baseType: !731, size: 64)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !1990, file: !44, line: 680, baseType: !874, size: 128, align: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !528, file: !44, line: 682, baseType: !830, size: 64, offset: 2240)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !528, file: !44, line: 683, baseType: !830, size: 64, offset: 2304)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !528, file: !44, line: 684, baseType: !231, size: 32, offset: 2368)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !528, file: !44, line: 685, baseType: !231, size: 32, offset: 2400)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !528, file: !44, line: 686, baseType: !231, size: 32, offset: 2432)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !528, file: !44, line: 688, baseType: !231, size: 32, offset: 2464)
!2000 = !DIDerivedType(tag: DW_TAG_member, scope: !528, file: !44, line: 690, baseType: !2001, size: 64, offset: 2496)
!2001 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !528, file: !44, line: 690, size: 64, elements: !2002)
!2002 = !{!2003, !2004}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2001, file: !44, line: 691, baseType: !885, size: 64)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2001, file: !44, line: 692, baseType: !762, size: 64)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !528, file: !44, line: 694, baseType: !2006, size: 64, offset: 2560)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 64)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !2008)
!2008 = !{!2009, !2010, !2011, !2012}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !2007, file: !44, line: 1101, baseType: !608)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !2007, file: !44, line: 1102, baseType: !265, size: 128)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !2007, file: !44, line: 1103, baseType: !265, size: 128, offset: 128)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !2007, file: !44, line: 1104, baseType: !265, size: 128, offset: 256)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !528, file: !44, line: 695, baseType: !524, size: 1216, align: 64, offset: 2624)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !528, file: !44, line: 696, baseType: !265, size: 128, offset: 3840)
!2015 = !DIDerivedType(tag: DW_TAG_member, scope: !528, file: !44, line: 697, baseType: !2016, size: 64, offset: 3968)
!2016 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !528, file: !44, line: 697, size: 64, elements: !2017)
!2017 = !{!2018, !2019, !2020, !2325, !2326}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !2016, file: !44, line: 698, baseType: !962, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !2016, file: !44, line: 699, baseType: !1659, size: 64)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !2016, file: !44, line: 700, baseType: !2021, size: 64)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !2023, line: 14, size: 832, elements: !2024)
!2023 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!2024 = !{!2025, !2320, !2321, !2322, !2323, !2324}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2022, file: !2023, line: 15, baseType: !2026, size: 512)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !2027, line: 64, size: 512, elements: !2028)
!2027 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!2028 = !{!2029, !2030, !2031, !2033, !2075, !2177, !2310, !2315, !2316, !2317, !2318, !2319}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2026, file: !2027, line: 65, baseType: !637, size: 64)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2026, file: !2027, line: 66, baseType: !265, size: 128, offset: 64)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2026, file: !2027, line: 67, baseType: !2032, size: 64, offset: 192)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !2026, file: !2027, line: 68, baseType: !2034, size: 64, offset: 256)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 64)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !2027, line: 192, size: 704, elements: !2036)
!2036 = !{!2037, !2038, !2039, !2040}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2035, file: !2027, line: 193, baseType: !265, size: 128)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !2035, file: !2027, line: 194, baseType: !608, offset: 128)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2035, file: !2027, line: 195, baseType: !2026, size: 512, offset: 128)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !2035, file: !2027, line: 196, baseType: !2041, size: 64, offset: 640)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64)
!2042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2043)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !2027, line: 156, size: 192, elements: !2044)
!2044 = !{!2045, !2050, !2055}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2043, file: !2027, line: 157, baseType: !2046, size: 64)
!2046 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2047)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 64)
!2048 = !DISubroutineType(types: !2049)
!2049 = !{!236, !2034, !2032}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2043, file: !2027, line: 158, baseType: !2051, size: 64, offset: 64)
!2051 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2052)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64)
!2053 = !DISubroutineType(types: !2054)
!2054 = !{!637, !2034, !2032}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !2043, file: !2027, line: 159, baseType: !2056, size: 64, offset: 128)
!2056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2057)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 64)
!2058 = !DISubroutineType(types: !2059)
!2059 = !{!236, !2034, !2032, !2060}
!2060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 64)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !2027, line: 148, size: 20736, elements: !2062)
!2062 = !{!2063, !2065, !2069, !2070, !2074}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !2061, file: !2027, line: 149, baseType: !2064, size: 192)
!2064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !663, size: 192, elements: !747)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !2061, file: !2027, line: 150, baseType: !2066, size: 4096, offset: 192)
!2066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !663, size: 4096, elements: !2067)
!2067 = !{!2068}
!2068 = !DISubrange(count: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !2061, file: !2027, line: 151, baseType: !236, size: 32, offset: 4288)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2061, file: !2027, line: 152, baseType: !2071, size: 16384, offset: 4320)
!2071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !639, size: 16384, elements: !2072)
!2072 = !{!2073}
!2073 = !DISubrange(count: 2048)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !2061, file: !2027, line: 153, baseType: !236, size: 32, offset: 20704)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !2026, file: !2027, line: 69, baseType: !2076, size: 64, offset: 320)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 64)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !2027, line: 138, size: 448, elements: !2078)
!2078 = !{!2079, !2083, !2102, !2104, !2137, !2167, !2171}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2077, file: !2027, line: 139, baseType: !2080, size: 64)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64)
!2081 = !DISubroutineType(types: !2082)
!2082 = !{null, !2032}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !2077, file: !2027, line: 140, baseType: !2084, size: 64, offset: 64)
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 64)
!2085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2086)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !2087, line: 230, size: 128, elements: !2088)
!2087 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!2088 = !{!2089, !2098}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !2086, file: !2087, line: 231, baseType: !2090, size: 64)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 64)
!2091 = !DISubroutineType(types: !2092)
!2092 = !{!899, !2032, !2093, !663}
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !2087, line: 30, size: 128, elements: !2095)
!2095 = !{!2096, !2097}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2094, file: !2087, line: 31, baseType: !637, size: 64)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2094, file: !2087, line: 32, baseType: !531, size: 16, offset: 64)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !2086, file: !2087, line: 232, baseType: !2099, size: 64, offset: 64)
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 64)
!2100 = !DISubroutineType(types: !2101)
!2101 = !{!899, !2032, !2093, !637, !815}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !2077, file: !2027, line: 141, baseType: !2103, size: 64, offset: 128)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 64)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !2077, file: !2027, line: 142, baseType: !2105, size: 64, offset: 192)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 64)
!2107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2108)
!2108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !2087, line: 84, size: 320, elements: !2109)
!2109 = !{!2110, !2111, !2115, !2134, !2135}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2108, file: !2087, line: 85, baseType: !637, size: 64)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !2108, file: !2087, line: 86, baseType: !2112, size: 64, offset: 64)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2113 = !DISubroutineType(types: !2114)
!2114 = !{!531, !2032, !2093, !236}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !2108, file: !2087, line: 88, baseType: !2116, size: 64, offset: 128)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = !DISubroutineType(types: !2118)
!2118 = !{!531, !2032, !2119, !236}
!2119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 64)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !2087, line: 168, size: 448, elements: !2121)
!2121 = !{!2122, !2123, !2124, !2125, !2129, !2130}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2120, file: !2087, line: 169, baseType: !2094, size: 128)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2120, file: !2087, line: 170, baseType: !815, size: 64, offset: 128)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !2120, file: !2087, line: 171, baseType: !224, size: 64, offset: 192)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2120, file: !2087, line: 172, baseType: !2126, size: 64, offset: 256)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = !DISubroutineType(types: !2128)
!2128 = !{!899, !894, !2032, !2119, !663, !701, !815}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2120, file: !2087, line: 174, baseType: !2126, size: 64, offset: 320)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2120, file: !2087, line: 176, baseType: !2131, size: 64, offset: 384)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64)
!2132 = !DISubroutineType(types: !2133)
!2133 = !{!236, !894, !2032, !2119, !430}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !2108, file: !2087, line: 90, baseType: !2103, size: 64, offset: 192)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !2108, file: !2087, line: 91, baseType: !2136, size: 64, offset: 256)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 64)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !2077, file: !2027, line: 143, baseType: !2138, size: 64, offset: 256)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64)
!2139 = !DISubroutineType(types: !2140)
!2140 = !{!2141, !2032}
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 64)
!2142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2143)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !2144)
!2144 = !{!2145, !2146, !2150, !2154, !2162, !2166}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2143, file: !61, line: 40, baseType: !60, size: 32)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !2143, file: !61, line: 41, baseType: !2147, size: 64, offset: 64)
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 64)
!2148 = !DISubroutineType(types: !2149)
!2149 = !{!682}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !2143, file: !61, line: 42, baseType: !2151, size: 64, offset: 128)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64)
!2152 = !DISubroutineType(types: !2153)
!2153 = !{!224}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !2143, file: !61, line: 43, baseType: !2155, size: 64, offset: 192)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64)
!2156 = !DISubroutineType(types: !2157)
!2157 = !{!2158, !2160}
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64)
!2159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 64)
!2161 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !2143, file: !61, line: 44, baseType: !2163, size: 64, offset: 256)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64)
!2164 = !DISubroutineType(types: !2165)
!2165 = !{!2158}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !2143, file: !61, line: 45, baseType: !1844, size: 64, offset: 320)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !2077, file: !2027, line: 144, baseType: !2168, size: 64, offset: 320)
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 64)
!2169 = !DISubroutineType(types: !2170)
!2170 = !{!2158, !2032}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !2077, file: !2027, line: 145, baseType: !2172, size: 64, offset: 384)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 64)
!2173 = !DISubroutineType(types: !2174)
!2174 = !{null, !2032, !2175, !2176}
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !2026, file: !2027, line: 70, baseType: !2178, size: 64, offset: 384)
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 64)
!2179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !715, line: 123, size: 1024, elements: !2180)
!2180 = !{!2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2303, !2304, !2305, !2306, !2307}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2179, file: !715, line: 124, baseType: !231, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2179, file: !715, line: 125, baseType: !231, size: 32, offset: 32)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2179, file: !715, line: 135, baseType: !2178, size: 64, offset: 64)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2179, file: !715, line: 136, baseType: !637, size: 64, offset: 128)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2179, file: !715, line: 138, baseType: !257, size: 192, align: 64, offset: 192)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2179, file: !715, line: 140, baseType: !2158, size: 64, offset: 384)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2179, file: !715, line: 141, baseType: !7, size: 32, offset: 448)
!2188 = !DIDerivedType(tag: DW_TAG_member, scope: !2179, file: !715, line: 142, baseType: !2189, size: 256, offset: 512)
!2189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2179, file: !715, line: 142, size: 256, elements: !2190)
!2190 = !{!2191, !2243, !2247}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2189, file: !715, line: 143, baseType: !2192, size: 192)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !715, line: 91, size: 192, elements: !2193)
!2193 = !{!2194, !2195, !2196}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !2192, file: !715, line: 92, baseType: !215, size: 64)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2192, file: !715, line: 94, baseType: !385, size: 64, offset: 64)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2192, file: !715, line: 100, baseType: !2197, size: 64, offset: 128)
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 64)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !715, line: 180, size: 704, elements: !2199)
!2199 = !{!2200, !2201, !2202, !2215, !2216, !2217, !2241, !2242}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !2198, file: !715, line: 182, baseType: !2178, size: 64)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2198, file: !715, line: 183, baseType: !7, size: 32, offset: 64)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !2198, file: !715, line: 186, baseType: !2203, size: 192, offset: 128)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !2204, line: 19, size: 192, elements: !2205)
!2204 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!2205 = !{!2206, !2213, !2214}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !2203, file: !2204, line: 20, baseType: !2207, size: 128)
!2207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !2208, line: 292, size: 128, elements: !2209)
!2208 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!2209 = !{!2210, !2211, !2212}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !2207, file: !2208, line: 293, baseType: !608)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !2207, file: !2208, line: 295, baseType: !487, size: 32)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !2207, file: !2208, line: 296, baseType: !224, size: 64, offset: 64)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !2203, file: !2204, line: 21, baseType: !7, size: 32, offset: 128)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !2203, file: !2204, line: 22, baseType: !7, size: 32, offset: 160)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !2198, file: !715, line: 187, baseType: !217, size: 32, offset: 320)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !2198, file: !715, line: 188, baseType: !217, size: 32, offset: 352)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !2198, file: !715, line: 189, baseType: !2218, size: 64, offset: 384)
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !715, line: 168, size: 320, elements: !2220)
!2220 = !{!2221, !2225, !2229, !2233, !2237}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !2219, file: !715, line: 169, baseType: !2222, size: 64)
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 64)
!2223 = !DISubroutineType(types: !2224)
!2224 = !{!236, !809, !2197}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !2219, file: !715, line: 171, baseType: !2226, size: 64, offset: 64)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64)
!2227 = !DISubroutineType(types: !2228)
!2228 = !{!236, !2178, !637, !531}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !2219, file: !715, line: 173, baseType: !2230, size: 64, offset: 128)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 64)
!2231 = !DISubroutineType(types: !2232)
!2232 = !{!236, !2178}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !2219, file: !715, line: 174, baseType: !2234, size: 64, offset: 192)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 64)
!2235 = !DISubroutineType(types: !2236)
!2236 = !{!236, !2178, !2178, !637}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !2219, file: !715, line: 176, baseType: !2238, size: 64, offset: 256)
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 64)
!2239 = !DISubroutineType(types: !2240)
!2240 = !{!236, !809, !2178, !2197}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !2198, file: !715, line: 192, baseType: !265, size: 128, offset: 448)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !2198, file: !715, line: 194, baseType: !1008, size: 128, offset: 576)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !2189, file: !715, line: 144, baseType: !2244, size: 64)
!2244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !715, line: 103, size: 64, elements: !2245)
!2245 = !{!2246}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !2244, file: !715, line: 104, baseType: !2178, size: 64)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2189, file: !715, line: 145, baseType: !2248, size: 256)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !715, line: 107, size: 256, elements: !2249)
!2249 = !{!2250, !2298, !2301, !2302}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2248, file: !715, line: 108, baseType: !2251, size: 64)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 64)
!2252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2253)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !715, line: 217, size: 768, elements: !2254)
!2254 = !{!2255, !2275, !2279, !2280, !2281, !2282, !2283, !2287, !2288, !2289, !2290, !2294}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2253, file: !715, line: 222, baseType: !2256, size: 64)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 64)
!2257 = !DISubroutineType(types: !2258)
!2258 = !{!236, !2259}
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 64)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !715, line: 197, size: 1088, elements: !2261)
!2261 = !{!2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !2260, file: !715, line: 199, baseType: !2178, size: 64)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !2260, file: !715, line: 200, baseType: !894, size: 64, offset: 64)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !2260, file: !715, line: 201, baseType: !809, size: 64, offset: 128)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2260, file: !715, line: 202, baseType: !224, size: 64, offset: 192)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2260, file: !715, line: 205, baseType: !824, size: 192, offset: 256)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !2260, file: !715, line: 206, baseType: !824, size: 192, offset: 448)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2260, file: !715, line: 207, baseType: !236, size: 32, offset: 640)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2260, file: !715, line: 208, baseType: !265, size: 128, offset: 704)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !2260, file: !715, line: 209, baseType: !663, size: 64, offset: 832)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !2260, file: !715, line: 211, baseType: !815, size: 64, offset: 896)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !2260, file: !715, line: 212, baseType: !682, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !2260, file: !715, line: 213, baseType: !682, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2260, file: !715, line: 214, baseType: !459, size: 64, offset: 1024)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2253, file: !715, line: 223, baseType: !2276, size: 64, offset: 64)
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2277, size: 64)
!2277 = !DISubroutineType(types: !2278)
!2278 = !{null, !2259}
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !2253, file: !715, line: 236, baseType: !855, size: 64, offset: 128)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !2253, file: !715, line: 238, baseType: !842, size: 64, offset: 192)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !2253, file: !715, line: 239, baseType: !851, size: 64, offset: 256)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !2253, file: !715, line: 240, baseType: !847, size: 64, offset: 320)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2253, file: !715, line: 242, baseType: !2284, size: 64, offset: 384)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 64)
!2285 = !DISubroutineType(types: !2286)
!2286 = !{!899, !2259, !663, !815, !701}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !2253, file: !715, line: 252, baseType: !815, size: 64, offset: 448)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !2253, file: !715, line: 259, baseType: !682, size: 8, offset: 512)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2253, file: !715, line: 260, baseType: !2284, size: 64, offset: 576)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2253, file: !715, line: 263, baseType: !2291, size: 64, offset: 640)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 64)
!2292 = !DISubroutineType(types: !2293)
!2293 = !{!996, !2259, !998}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2253, file: !715, line: 266, baseType: !2295, size: 64, offset: 704)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 64)
!2296 = !DISubroutineType(types: !2297)
!2297 = !{!236, !2259, !430}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2248, file: !715, line: 109, baseType: !2299, size: 64, offset: 64)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 64)
!2300 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !715, line: 31, flags: DIFlagFwdDecl)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2248, file: !715, line: 110, baseType: !701, size: 64, offset: 128)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !2248, file: !715, line: 111, baseType: !2178, size: 64, offset: 192)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2179, file: !715, line: 148, baseType: !224, size: 64, offset: 768)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2179, file: !715, line: 154, baseType: !272, size: 64, offset: 832)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2179, file: !715, line: 156, baseType: !290, size: 16, offset: 896)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2179, file: !715, line: 157, baseType: !531, size: 16, offset: 912)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !2179, file: !715, line: 158, baseType: !2308, size: 64, offset: 960)
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 64)
!2309 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !715, line: 32, flags: DIFlagFwdDecl)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !2026, file: !2027, line: 71, baseType: !2311, size: 32, offset: 448)
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !2312, line: 19, size: 32, elements: !2313)
!2312 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!2313 = !{!2314}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2311, file: !2312, line: 20, baseType: !226, size: 32)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !2026, file: !2027, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !2026, file: !2027, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !2026, file: !2027, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !2026, file: !2027, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !2026, file: !2027, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2022, file: !2023, line: 16, baseType: !202, size: 64, offset: 512)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2022, file: !2023, line: 17, baseType: !885, size: 64, offset: 576)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2022, file: !2023, line: 18, baseType: !265, size: 128, offset: 640)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2022, file: !2023, line: 19, baseType: !696, size: 32, offset: 768)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2022, file: !2023, line: 20, baseType: !7, size: 32, offset: 800)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !2016, file: !44, line: 701, baseType: !663, size: 64)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !2016, file: !44, line: 702, baseType: !7, size: 32)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !528, file: !44, line: 705, baseType: !219, size: 32, offset: 4032)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !528, file: !44, line: 708, baseType: !219, size: 32, offset: 4064)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !528, file: !44, line: 709, baseType: !1743, size: 64, offset: 4096)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !528, file: !44, line: 720, baseType: !224, size: 64, offset: 4160)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !524, file: !44, line: 453, baseType: !2207, size: 128, offset: 64)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !524, file: !44, line: 454, baseType: !487, size: 32, offset: 192)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !524, file: !44, line: 455, baseType: !231, size: 32, offset: 224)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !524, file: !44, line: 460, baseType: !382, size: 128, offset: 256)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !524, file: !44, line: 461, baseType: !1280, size: 256, offset: 384)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !524, file: !44, line: 462, baseType: !215, size: 64, offset: 640)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !524, file: !44, line: 463, baseType: !215, size: 64, offset: 704)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !524, file: !44, line: 464, baseType: !215, size: 64, offset: 768)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !524, file: !44, line: 465, baseType: !2340, size: 64, offset: 832)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 64)
!2341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2342)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !2343)
!2343 = !{!2344, !2348, !2352, !2356, !2360, !2364, !2370, !2375, !2379, !2384, !2388, !2392, !2396, !2397, !2401, !2407, !2408, !2409, !2413, !2418, !2422, !2429}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !2342, file: !44, line: 368, baseType: !2345, size: 64)
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 64)
!2346 = !DISubroutineType(types: !2347)
!2347 = !{!236, !511, !774}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !2342, file: !44, line: 369, baseType: !2349, size: 64, offset: 64)
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 64)
!2350 = !DISubroutineType(types: !2351)
!2351 = !{!236, !894, !511}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !2342, file: !44, line: 372, baseType: !2353, size: 64, offset: 128)
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2354, size: 64)
!2354 = !DISubroutineType(types: !2355)
!2355 = !{!236, !523, !774}
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !2342, file: !44, line: 375, baseType: !2357, size: 64, offset: 192)
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2358, size: 64)
!2358 = !DISubroutineType(types: !2359)
!2359 = !{!236, !511}
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !2342, file: !44, line: 381, baseType: !2361, size: 64, offset: 256)
!2361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 64)
!2362 = !DISubroutineType(types: !2363)
!2363 = !{!236, !894, !523, !268, !7}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !2342, file: !44, line: 383, baseType: !2365, size: 64, offset: 320)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64)
!2366 = !DISubroutineType(types: !2367)
!2367 = !{null, !2368}
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 64)
!2369 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !2342, file: !44, line: 385, baseType: !2371, size: 64, offset: 384)
!2371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 64)
!2372 = !DISubroutineType(types: !2373)
!2373 = !{!236, !894, !523, !701, !7, !7, !2374, !1126}
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !2342, file: !44, line: 388, baseType: !2376, size: 64, offset: 448)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 64)
!2377 = !DISubroutineType(types: !2378)
!2378 = !{!236, !894, !523, !701, !7, !7, !511, !224}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !2342, file: !44, line: 393, baseType: !2380, size: 64, offset: 512)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64)
!2381 = !DISubroutineType(types: !2382)
!2382 = !{!2383, !523, !2383}
!2383 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !232, line: 125, baseType: !272)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !2342, file: !44, line: 394, baseType: !2385, size: 64, offset: 576)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 64)
!2386 = !DISubroutineType(types: !2387)
!2387 = !{null, !511, !7, !7}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !2342, file: !44, line: 395, baseType: !2389, size: 64, offset: 640)
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 64)
!2390 = !DISubroutineType(types: !2391)
!2391 = !{!236, !511, !487}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !2342, file: !44, line: 396, baseType: !2393, size: 64, offset: 704)
!2393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 64)
!2394 = !DISubroutineType(types: !2395)
!2395 = !{null, !511}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !2342, file: !44, line: 397, baseType: !907, size: 64, offset: 768)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !2342, file: !44, line: 402, baseType: !2398, size: 64, offset: 832)
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 64)
!2399 = !DISubroutineType(types: !2400)
!2400 = !{!236, !523, !511, !511, !5}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !2342, file: !44, line: 404, baseType: !2402, size: 64, offset: 896)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 64)
!2403 = !DISubroutineType(types: !2404)
!2404 = !{!682, !511, !2405}
!2405 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !2406, line: 305, baseType: !7)
!2406 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !2342, file: !44, line: 405, baseType: !2393, size: 64, offset: 960)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !2342, file: !44, line: 406, baseType: !2357, size: 64, offset: 1024)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !2342, file: !44, line: 407, baseType: !2410, size: 64, offset: 1088)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 64)
!2411 = !DISubroutineType(types: !2412)
!2412 = !{!236, !511, !215, !215}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !2342, file: !44, line: 409, baseType: !2414, size: 64, offset: 1152)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 64)
!2415 = !DISubroutineType(types: !2416)
!2416 = !{null, !511, !2417, !2417}
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !2342, file: !44, line: 410, baseType: !2419, size: 64, offset: 1216)
!2419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 64)
!2420 = !DISubroutineType(types: !2421)
!2421 = !{!236, !523, !511}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !2342, file: !44, line: 413, baseType: !2423, size: 64, offset: 1280)
!2423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 64)
!2424 = !DISubroutineType(types: !2425)
!2425 = !{!236, !2426, !894, !2428}
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64)
!2427 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 64)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !2342, file: !44, line: 415, baseType: !2430, size: 64, offset: 1344)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64)
!2431 = !DISubroutineType(types: !2432)
!2432 = !{null, !894}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !524, file: !44, line: 466, baseType: !215, size: 64, offset: 896)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !524, file: !44, line: 467, baseType: !1445, size: 32, offset: 960)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !524, file: !44, line: 468, baseType: !608, offset: 992)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !524, file: !44, line: 469, baseType: !265, size: 128, offset: 1024)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !524, file: !44, line: 470, baseType: !224, size: 64, offset: 1152)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !519, file: !424, line: 87, baseType: !215, size: 64, offset: 192)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !519, file: !424, line: 94, baseType: !215, size: 64, offset: 256)
!2440 = !DIDerivedType(tag: DW_TAG_member, scope: !516, file: !424, line: 96, baseType: !2441, size: 64)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !516, file: !424, line: 96, size: 64, elements: !2442)
!2442 = !{!2443}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !2441, file: !424, line: 101, baseType: !2444, size: 64)
!2444 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !232, line: 143, baseType: !272)
!2445 = !DIDerivedType(tag: DW_TAG_member, scope: !516, file: !424, line: 103, baseType: !2446, size: 320)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !516, file: !424, line: 103, size: 320, elements: !2447)
!2447 = !{!2448, !2458, !2461, !2462}
!2448 = !DIDerivedType(tag: DW_TAG_member, scope: !2446, file: !424, line: 104, baseType: !2449, size: 128)
!2449 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2446, file: !424, line: 104, size: 128, elements: !2450)
!2450 = !{!2451, !2452}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !2449, file: !424, line: 105, baseType: !265, size: 128)
!2452 = !DIDerivedType(tag: DW_TAG_member, scope: !2449, file: !424, line: 106, baseType: !2453, size: 128)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2449, file: !424, line: 106, size: 128, elements: !2454)
!2454 = !{!2455, !2456, !2457}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2453, file: !424, line: 107, baseType: !511, size: 64)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2453, file: !424, line: 109, baseType: !236, size: 32, offset: 64)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !2453, file: !424, line: 110, baseType: !236, size: 32, offset: 96)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !2446, file: !424, line: 117, baseType: !2459, size: 64, offset: 128)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 64)
!2460 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !424, line: 117, flags: DIFlagFwdDecl)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !2446, file: !424, line: 119, baseType: !224, size: 64, offset: 192)
!2462 = !DIDerivedType(tag: DW_TAG_member, scope: !2446, file: !424, line: 120, baseType: !2463, size: 64, offset: 256)
!2463 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2446, file: !424, line: 120, size: 64, elements: !2464)
!2464 = !{!2465, !2466, !2467}
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !2463, file: !424, line: 121, baseType: !224, size: 64)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !2463, file: !424, line: 122, baseType: !215, size: 64)
!2467 = !DIDerivedType(tag: DW_TAG_member, scope: !2463, file: !424, line: 123, baseType: !2468, size: 32)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2463, file: !424, line: 123, size: 32, elements: !2469)
!2469 = !{!2470, !2471, !2472}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !2468, file: !424, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2468, file: !424, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2468, file: !424, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2473 = !DIDerivedType(tag: DW_TAG_member, scope: !516, file: !424, line: 130, baseType: !2474, size: 192)
!2474 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !516, file: !424, line: 130, size: 192, elements: !2475)
!2475 = !{!2476, !2477, !2478, !2479, !2480}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !2474, file: !424, line: 131, baseType: !215, size: 64)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !2474, file: !424, line: 134, baseType: !397, size: 8, offset: 64)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !2474, file: !424, line: 135, baseType: !397, size: 8, offset: 72)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !2474, file: !424, line: 136, baseType: !231, size: 32, offset: 96)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !2474, file: !424, line: 137, baseType: !7, size: 32, offset: 128)
!2481 = !DIDerivedType(tag: DW_TAG_member, scope: !516, file: !424, line: 139, baseType: !2482, size: 256)
!2482 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !516, file: !424, line: 139, size: 256, elements: !2483)
!2483 = !{!2484, !2485, !2486}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !2482, file: !424, line: 140, baseType: !215, size: 64)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !2482, file: !424, line: 141, baseType: !231, size: 32, offset: 64)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !2482, file: !424, line: 143, baseType: !265, size: 128, offset: 128)
!2487 = !DIDerivedType(tag: DW_TAG_member, scope: !516, file: !424, line: 145, baseType: !2488, size: 256)
!2488 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !516, file: !424, line: 145, size: 256, elements: !2489)
!2489 = !{!2490, !2491, !2493, !2494, !2499}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !2488, file: !424, line: 146, baseType: !215, size: 64)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !2488, file: !424, line: 147, baseType: !2492, size: 64, offset: 64)
!2492 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !442, line: 509, baseType: !511)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !2488, file: !424, line: 148, baseType: !215, size: 64, offset: 128)
!2494 = !DIDerivedType(tag: DW_TAG_member, scope: !2488, file: !424, line: 149, baseType: !2495, size: 64, offset: 192)
!2495 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2488, file: !424, line: 149, size: 64, elements: !2496)
!2496 = !{!2497, !2498}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !2495, file: !424, line: 150, baseType: !422, size: 64)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !2495, file: !424, line: 151, baseType: !231, size: 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2488, file: !424, line: 156, baseType: !608, offset: 256)
!2500 = !DIDerivedType(tag: DW_TAG_member, scope: !516, file: !424, line: 159, baseType: !2501, size: 128)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !516, file: !424, line: 159, size: 128, elements: !2502)
!2502 = !{!2503, !2577}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2501, file: !424, line: 161, baseType: !2504, size: 64)
!2504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 64)
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !2506)
!2506 = !{!2507, !2517, !2538, !2539, !2550, !2551, !2552, !2564, !2565, !2566}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2505, file: !31, line: 111, baseType: !2508, size: 384)
!2508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !2509)
!2509 = !{!2510, !2512, !2513, !2514, !2515, !2516}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2508, file: !31, line: 20, baseType: !2511, size: 64)
!2511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !215)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2508, file: !31, line: 21, baseType: !2511, size: 64, offset: 64)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2508, file: !31, line: 22, baseType: !2511, size: 64, offset: 128)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2508, file: !31, line: 23, baseType: !215, size: 64, offset: 192)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2508, file: !31, line: 24, baseType: !215, size: 64, offset: 256)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2508, file: !31, line: 25, baseType: !215, size: 64, offset: 320)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2505, file: !31, line: 112, baseType: !2518, size: 64, offset: 384)
!2518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 64)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2520, line: 105, size: 128, elements: !2521)
!2520 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2521 = !{!2522, !2523}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2519, file: !2520, line: 110, baseType: !215, size: 64)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2519, file: !2520, line: 118, baseType: !2524, size: 64, offset: 64)
!2524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2525, size: 64)
!2525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2520, line: 95, size: 448, elements: !2526)
!2526 = !{!2527, !2528, !2533, !2534, !2535, !2536, !2537}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2525, file: !2520, line: 96, baseType: !828, size: 64)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2525, file: !2520, line: 97, baseType: !2529, size: 64, offset: 64)
!2529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2530, size: 64)
!2530 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2520, line: 60, baseType: !2531)
!2531 = !DISubroutineType(types: !2532)
!2532 = !{null, !2518}
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2525, file: !2520, line: 98, baseType: !2529, size: 64, offset: 128)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2525, file: !2520, line: 99, baseType: !682, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2525, file: !2520, line: 100, baseType: !682, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2525, file: !2520, line: 101, baseType: !874, size: 128, align: 64, offset: 256)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2525, file: !2520, line: 102, baseType: !2518, size: 64, offset: 384)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2505, file: !31, line: 113, baseType: !2519, size: 128, offset: 448)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2505, file: !31, line: 114, baseType: !2540, size: 192, offset: 576)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2541, line: 26, size: 192, elements: !2542)
!2541 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2542 = !{!2543, !2544}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2540, file: !2541, line: 27, baseType: !7, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2540, file: !2541, line: 28, baseType: !2545, size: 128, offset: 64)
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2546, line: 43, size: 128, elements: !2547)
!2546 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2547 = !{!2548, !2549}
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2545, file: !2546, line: 44, baseType: !339)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2545, file: !2546, line: 45, baseType: !265, size: 128)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2505, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2505, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2505, file: !31, line: 117, baseType: !2553, size: 64, offset: 832)
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 64)
!2554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2555)
!2555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !2556)
!2556 = !{!2557, !2558, !2562, !2563}
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2555, file: !31, line: 73, baseType: !2393, size: 64)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2555, file: !31, line: 78, baseType: !2559, size: 64, offset: 64)
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2560, size: 64)
!2560 = !DISubroutineType(types: !2561)
!2561 = !{null, !2504}
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2555, file: !31, line: 83, baseType: !2559, size: 64, offset: 128)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2555, file: !31, line: 89, baseType: !477, size: 64, offset: 192)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2505, file: !31, line: 118, baseType: !224, size: 64, offset: 896)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2505, file: !31, line: 119, baseType: !236, size: 32, offset: 960)
!2566 = !DIDerivedType(tag: DW_TAG_member, scope: !2505, file: !31, line: 120, baseType: !2567, size: 128, offset: 1024)
!2567 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2505, file: !31, line: 120, size: 128, elements: !2568)
!2568 = !{!2569, !2575}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2567, file: !31, line: 121, baseType: !2570, size: 128)
!2570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2571, line: 6, size: 128, elements: !2572)
!2571 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2572 = !{!2573, !2574}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2570, file: !2571, line: 7, baseType: !272, size: 64)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2570, file: !2571, line: 8, baseType: !272, size: 64, offset: 64)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2567, file: !31, line: 122, baseType: !2576)
!2576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2570, elements: !1423)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2501, file: !424, line: 162, baseType: !224, size: 64, offset: 64)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !516, file: !424, line: 176, baseType: !874, size: 128, align: 64)
!2579 = !DIDerivedType(tag: DW_TAG_member, scope: !512, file: !424, line: 179, baseType: !2580, size: 32, offset: 384)
!2580 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !512, file: !424, line: 179, size: 32, elements: !2581)
!2581 = !{!2582, !2583, !2584, !2585}
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2580, file: !424, line: 184, baseType: !231, size: 32)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2580, file: !424, line: 192, baseType: !7, size: 32)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2580, file: !424, line: 194, baseType: !7, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2580, file: !424, line: 195, baseType: !236, size: 32)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !512, file: !424, line: 199, baseType: !231, size: 32, offset: 416)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !482, file: !14, line: 522, baseType: !511, size: 64, offset: 512)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !482, file: !14, line: 528, baseType: !2589, size: 64, offset: 576)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !482, file: !14, line: 532, baseType: !2591, size: 64, offset: 640)
!2591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 64)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !482, file: !14, line: 536, baseType: !2492, size: 64, offset: 704)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !461, file: !14, line: 563, baseType: !2594, size: 64, offset: 320)
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 64)
!2595 = !DISubroutineType(types: !2596)
!2596 = !{!480, !481, !13}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !461, file: !14, line: 565, baseType: !2598, size: 64, offset: 384)
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 64)
!2599 = !DISubroutineType(types: !2600)
!2600 = !{null, !481, !215, !215}
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !461, file: !14, line: 567, baseType: !2602, size: 64, offset: 448)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 64)
!2603 = !DISubroutineType(types: !2604)
!2604 = !{!215, !430}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !461, file: !14, line: 571, baseType: !477, size: 64, offset: 512)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !461, file: !14, line: 574, baseType: !477, size: 64, offset: 576)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !461, file: !14, line: 579, baseType: !2608, size: 64, offset: 640)
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 64)
!2609 = !DISubroutineType(types: !2610)
!2610 = !{!236, !430, !215, !224, !236, !236}
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !461, file: !14, line: 585, baseType: !2612, size: 64, offset: 704)
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 64)
!2613 = !DISubroutineType(types: !2614)
!2614 = !{!637, !430}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !461, file: !14, line: 615, baseType: !2616, size: 64, offset: 768)
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 64)
!2617 = !DISubroutineType(types: !2618)
!2618 = !{!511, !430, !215}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !431, file: !424, line: 359, baseType: !215, size: 64, offset: 1216)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !431, file: !424, line: 361, baseType: !894, size: 64, offset: 1280)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !431, file: !424, line: 362, baseType: !224, size: 64, offset: 1344)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !431, file: !424, line: 365, baseType: !828, size: 64, offset: 1408)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !431, file: !424, line: 373, baseType: !2624, offset: 1472)
!2624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !424, line: 296, elements: !281)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !427, file: !424, line: 391, baseType: !385, size: 64, offset: 64)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !427, file: !424, line: 392, baseType: !272, size: 64, offset: 128)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !427, file: !424, line: 394, baseType: !1157, size: 64, offset: 192)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !427, file: !424, line: 398, baseType: !215, size: 64, offset: 256)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !427, file: !424, line: 399, baseType: !215, size: 64, offset: 320)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !427, file: !424, line: 405, baseType: !215, size: 64, offset: 384)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !427, file: !424, line: 406, baseType: !215, size: 64, offset: 448)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !427, file: !424, line: 407, baseType: !2633, size: 64, offset: 512)
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 64)
!2634 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !442, line: 286, baseType: !2635)
!2635 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !442, line: 286, size: 64, elements: !2636)
!2636 = !{!2637}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2635, file: !442, line: 286, baseType: !2638, size: 64)
!2638 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !447, line: 18, baseType: !215)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !427, file: !424, line: 416, baseType: !231, size: 32, offset: 576)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !427, file: !424, line: 428, baseType: !231, size: 32, offset: 608)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !427, file: !424, line: 437, baseType: !231, size: 32, offset: 640)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !427, file: !424, line: 447, baseType: !231, size: 32, offset: 672)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !427, file: !424, line: 450, baseType: !828, size: 64, offset: 704)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !427, file: !424, line: 452, baseType: !236, size: 32, offset: 768)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !427, file: !424, line: 454, baseType: !608, offset: 800)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !427, file: !424, line: 457, baseType: !1280, size: 256, offset: 832)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !427, file: !424, line: 459, baseType: !265, size: 128, offset: 1088)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !427, file: !424, line: 466, baseType: !215, size: 64, offset: 1216)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !427, file: !424, line: 467, baseType: !215, size: 64, offset: 1280)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !427, file: !424, line: 469, baseType: !215, size: 64, offset: 1344)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !427, file: !424, line: 470, baseType: !215, size: 64, offset: 1408)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !427, file: !424, line: 471, baseType: !830, size: 64, offset: 1472)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !427, file: !424, line: 472, baseType: !215, size: 64, offset: 1536)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !427, file: !424, line: 473, baseType: !215, size: 64, offset: 1600)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !427, file: !424, line: 474, baseType: !215, size: 64, offset: 1664)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !427, file: !424, line: 475, baseType: !215, size: 64, offset: 1728)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !427, file: !424, line: 477, baseType: !608, offset: 1792)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !427, file: !424, line: 478, baseType: !215, size: 64, offset: 1792)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !427, file: !424, line: 478, baseType: !215, size: 64, offset: 1856)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !427, file: !424, line: 478, baseType: !215, size: 64, offset: 1920)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !427, file: !424, line: 478, baseType: !215, size: 64, offset: 1984)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !427, file: !424, line: 479, baseType: !215, size: 64, offset: 2048)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !427, file: !424, line: 479, baseType: !215, size: 64, offset: 2112)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !427, file: !424, line: 479, baseType: !215, size: 64, offset: 2176)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !427, file: !424, line: 480, baseType: !215, size: 64, offset: 2240)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !427, file: !424, line: 480, baseType: !215, size: 64, offset: 2304)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !427, file: !424, line: 480, baseType: !215, size: 64, offset: 2368)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !427, file: !424, line: 480, baseType: !215, size: 64, offset: 2432)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !427, file: !424, line: 482, baseType: !2670, size: 2816, offset: 2496)
!2670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 2816, elements: !2671)
!2671 = !{!2672}
!2672 = !DISubrange(count: 44)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !427, file: !424, line: 488, baseType: !2674, size: 256, offset: 5312)
!2674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2675, line: 60, size: 256, elements: !2676)
!2675 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2676 = !{!2677}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2674, file: !2675, line: 61, baseType: !2678, size: 256)
!2678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !828, size: 256, elements: !1216)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !427, file: !424, line: 490, baseType: !2680, size: 64, offset: 5568)
!2680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2681, size: 64)
!2681 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !424, line: 490, flags: DIFlagFwdDecl)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !427, file: !424, line: 493, baseType: !2683, size: 896, offset: 5632)
!2683 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2684, line: 53, baseType: !2685)
!2684 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2684, line: 13, size: 896, elements: !2686)
!2686 = !{!2687, !2688, !2689, !2690, !2693, !2694, !2695, !2696, !2716, !2717, !2718}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2685, file: !2684, line: 18, baseType: !272, size: 64)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2685, file: !2684, line: 28, baseType: !830, size: 64, offset: 64)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2685, file: !2684, line: 31, baseType: !1280, size: 256, offset: 128)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2685, file: !2684, line: 32, baseType: !2691, size: 64, offset: 384)
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2692, size: 64)
!2692 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2684, line: 32, flags: DIFlagFwdDecl)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2685, file: !2684, line: 37, baseType: !290, size: 16, offset: 448)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2685, file: !2684, line: 40, baseType: !824, size: 192, offset: 512)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2685, file: !2684, line: 41, baseType: !224, size: 64, offset: 704)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2685, file: !2684, line: 42, baseType: !2697, size: 64, offset: 768)
!2697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2698, size: 64)
!2698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2699)
!2699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2700, line: 13, size: 896, elements: !2701)
!2700 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2701 = !{!2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715}
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2699, file: !2700, line: 14, baseType: !224, size: 64)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2699, file: !2700, line: 15, baseType: !215, size: 64, offset: 64)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2699, file: !2700, line: 17, baseType: !215, size: 64, offset: 128)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2699, file: !2700, line: 17, baseType: !215, size: 64, offset: 192)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2699, file: !2700, line: 19, baseType: !166, size: 64, offset: 256)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2699, file: !2700, line: 21, baseType: !166, size: 64, offset: 320)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2699, file: !2700, line: 22, baseType: !166, size: 64, offset: 384)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2699, file: !2700, line: 23, baseType: !166, size: 64, offset: 448)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2699, file: !2700, line: 24, baseType: !166, size: 64, offset: 512)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2699, file: !2700, line: 25, baseType: !166, size: 64, offset: 576)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2699, file: !2700, line: 26, baseType: !166, size: 64, offset: 640)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2699, file: !2700, line: 27, baseType: !166, size: 64, offset: 704)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2699, file: !2700, line: 28, baseType: !166, size: 64, offset: 768)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2699, file: !2700, line: 29, baseType: !166, size: 64, offset: 832)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2685, file: !2684, line: 44, baseType: !231, size: 32, offset: 832)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2685, file: !2684, line: 50, baseType: !922, size: 16, offset: 864)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2685, file: !2684, line: 51, baseType: !2719, size: 16, offset: 880)
!2719 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !218, line: 18, baseType: !2720)
!2720 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !220, line: 23, baseType: !1307)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !427, file: !424, line: 495, baseType: !215, size: 64, offset: 6528)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !427, file: !424, line: 497, baseType: !2723, size: 64, offset: 6592)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !424, line: 381, size: 384, elements: !2725)
!2725 = !{!2726, !2727, !2733}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2724, file: !424, line: 382, baseType: !231, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2724, file: !424, line: 383, baseType: !2728, size: 128, offset: 64)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !424, line: 376, size: 128, elements: !2729)
!2729 = !{!2730, !2731}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2728, file: !424, line: 377, baseType: !206, size: 64)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2728, file: !424, line: 378, baseType: !2732, size: 64, offset: 64)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 64)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2724, file: !424, line: 384, baseType: !2540, size: 192, offset: 192)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !427, file: !424, line: 500, baseType: !608, offset: 6656)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !427, file: !424, line: 501, baseType: !2736, size: 64, offset: 6656)
!2736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2737, size: 64)
!2737 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !424, line: 387, flags: DIFlagFwdDecl)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !427, file: !424, line: 516, baseType: !1413, size: 64, offset: 6720)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !427, file: !424, line: 519, baseType: !894, size: 64, offset: 6784)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !427, file: !424, line: 521, baseType: !2741, size: 64, offset: 6848)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 64)
!2742 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !424, line: 521, flags: DIFlagFwdDecl)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !427, file: !424, line: 545, baseType: !231, size: 32, offset: 6912)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !427, file: !424, line: 548, baseType: !682, size: 8, offset: 6944)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !427, file: !424, line: 550, baseType: !2746, offset: 6952)
!2746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2747, line: 142, elements: !281)
!2747 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !427, file: !424, line: 554, baseType: !1804, size: 256, offset: 6976)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !427, file: !424, line: 557, baseType: !217, size: 32, offset: 7232)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !423, file: !424, line: 565, baseType: !2751, offset: 7296)
!2751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, elements: !2752)
!2752 = !{!2753}
!2753 = !DISubrange(count: -1)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !207, file: !208, line: 758, baseType: !422, size: 64, offset: 3968)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !207, file: !208, line: 761, baseType: !2756, size: 320, offset: 4032)
!2756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2675, line: 34, size: 320, elements: !2757)
!2757 = !{!2758, !2759}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2756, file: !2675, line: 35, baseType: !272, size: 64)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2756, file: !2675, line: 36, baseType: !2760, size: 256, offset: 64)
!2760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !430, size: 256, elements: !1216)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !207, file: !208, line: 766, baseType: !236, size: 32, offset: 4352)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !207, file: !208, line: 767, baseType: !236, size: 32, offset: 4384)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !207, file: !208, line: 768, baseType: !236, size: 32, offset: 4416)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !207, file: !208, line: 770, baseType: !236, size: 32, offset: 4448)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !207, file: !208, line: 772, baseType: !215, size: 64, offset: 4480)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !207, file: !208, line: 775, baseType: !7, size: 32, offset: 4544)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !207, file: !208, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !207, file: !208, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !207, file: !208, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !207, file: !208, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !207, file: !208, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !207, file: !208, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !207, file: !208, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !207, file: !208, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !207, file: !208, line: 831, baseType: !215, size: 64, offset: 4672)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !207, file: !208, line: 833, baseType: !2777, size: 384, offset: 4736)
!2777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !2778)
!2778 = !{!2779, !2784}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2777, file: !25, line: 26, baseType: !2780, size: 64)
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2781, size: 64)
!2781 = !DISubroutineType(types: !2782)
!2782 = !{!166, !2783}
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2784 = !DIDerivedType(tag: DW_TAG_member, scope: !2777, file: !25, line: 27, baseType: !2785, size: 320, offset: 64)
!2785 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2777, file: !25, line: 27, size: 320, elements: !2786)
!2786 = !{!2787, !2797, !2822}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2785, file: !25, line: 36, baseType: !2788, size: 320)
!2788 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2785, file: !25, line: 29, size: 320, elements: !2789)
!2789 = !{!2790, !2792, !2793, !2794, !2795, !2796}
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2788, file: !25, line: 30, baseType: !2791, size: 64)
!2791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 64)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2788, file: !25, line: 31, baseType: !217, size: 32, offset: 64)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2788, file: !25, line: 32, baseType: !217, size: 32, offset: 96)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2788, file: !25, line: 33, baseType: !217, size: 32, offset: 128)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2788, file: !25, line: 34, baseType: !272, size: 64, offset: 192)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2788, file: !25, line: 35, baseType: !2791, size: 64, offset: 256)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2785, file: !25, line: 46, baseType: !2798, size: 192)
!2798 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2785, file: !25, line: 38, size: 192, elements: !2799)
!2799 = !{!2800, !2801, !2802, !2821}
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2798, file: !25, line: 39, baseType: !364, size: 32)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2798, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!2802 = !DIDerivedType(tag: DW_TAG_member, scope: !2798, file: !25, line: 41, baseType: !2803, size: 64, offset: 64)
!2803 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2798, file: !25, line: 41, size: 64, elements: !2804)
!2804 = !{!2805, !2813}
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2803, file: !25, line: 42, baseType: !2806, size: 64)
!2806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2807, size: 64)
!2807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2808, line: 7, size: 128, elements: !2809)
!2808 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2809 = !{!2810, !2812}
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2807, file: !2808, line: 8, baseType: !2811, size: 64)
!2811 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !366, line: 93, baseType: !306)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2807, file: !2808, line: 9, baseType: !306, size: 64, offset: 64)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2803, file: !25, line: 43, baseType: !2814, size: 64)
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2815, size: 64)
!2815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2816, line: 7, size: 64, elements: !2817)
!2816 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2817 = !{!2818, !2820}
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2815, file: !2816, line: 8, baseType: !2819, size: 32)
!2819 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2816, line: 5, baseType: !1272)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2815, file: !2816, line: 9, baseType: !1272, size: 32, offset: 32)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2798, file: !25, line: 45, baseType: !272, size: 64, offset: 128)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2785, file: !25, line: 54, baseType: !2823, size: 256)
!2823 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2785, file: !25, line: 48, size: 256, elements: !2824)
!2824 = !{!2825, !2833, !2834, !2835, !2836}
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2823, file: !25, line: 49, baseType: !2826, size: 64)
!2826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2827, size: 64)
!2827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !2828, line: 36, size: 64, elements: !2829)
!2828 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!2829 = !{!2830, !2831, !2832}
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !2827, file: !2828, line: 37, baseType: !236, size: 32)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2827, file: !2828, line: 38, baseType: !1307, size: 16, offset: 32)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !2827, file: !2828, line: 39, baseType: !1307, size: 16, offset: 48)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2823, file: !25, line: 50, baseType: !236, size: 32, offset: 64)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2823, file: !25, line: 51, baseType: !236, size: 32, offset: 96)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2823, file: !25, line: 52, baseType: !215, size: 64, offset: 128)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2823, file: !25, line: 53, baseType: !215, size: 64, offset: 192)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !207, file: !208, line: 835, baseType: !2838, size: 32, offset: 5120)
!2838 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !232, line: 22, baseType: !2839)
!2839 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !366, line: 28, baseType: !236)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !207, file: !208, line: 836, baseType: !2838, size: 32, offset: 5152)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !207, file: !208, line: 840, baseType: !215, size: 64, offset: 5184)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !207, file: !208, line: 849, baseType: !206, size: 64, offset: 5248)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !207, file: !208, line: 852, baseType: !206, size: 64, offset: 5312)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !207, file: !208, line: 857, baseType: !265, size: 128, offset: 5376)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !207, file: !208, line: 858, baseType: !265, size: 128, offset: 5504)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !207, file: !208, line: 859, baseType: !206, size: 64, offset: 5632)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !207, file: !208, line: 867, baseType: !265, size: 128, offset: 5696)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !207, file: !208, line: 868, baseType: !265, size: 128, offset: 5824)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !207, file: !208, line: 871, baseType: !1208, size: 64, offset: 5952)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !207, file: !208, line: 872, baseType: !2851, size: 512, offset: 6016)
!2851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !735, size: 512, elements: !1216)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !207, file: !208, line: 873, baseType: !265, size: 128, offset: 6528)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !207, file: !208, line: 874, baseType: !265, size: 128, offset: 6656)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !207, file: !208, line: 876, baseType: !2855, size: 64, offset: 6784)
!2855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 64)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !207, file: !208, line: 879, baseType: !803, size: 64, offset: 6848)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !207, file: !208, line: 882, baseType: !803, size: 64, offset: 6912)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !207, file: !208, line: 884, baseType: !272, size: 64, offset: 6976)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !207, file: !208, line: 885, baseType: !272, size: 64, offset: 7040)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !207, file: !208, line: 890, baseType: !272, size: 64, offset: 7104)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !207, file: !208, line: 891, baseType: !2862, size: 128, offset: 7168)
!2862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !208, line: 242, size: 128, elements: !2863)
!2863 = !{!2864, !2865, !2866}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2862, file: !208, line: 244, baseType: !272, size: 64)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2862, file: !208, line: 245, baseType: !272, size: 64, offset: 64)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2862, file: !208, line: 246, baseType: !339, offset: 128)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !207, file: !208, line: 900, baseType: !215, size: 64, offset: 7296)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !207, file: !208, line: 901, baseType: !215, size: 64, offset: 7360)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !207, file: !208, line: 904, baseType: !272, size: 64, offset: 7424)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !207, file: !208, line: 907, baseType: !272, size: 64, offset: 7488)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !207, file: !208, line: 910, baseType: !215, size: 64, offset: 7552)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !207, file: !208, line: 911, baseType: !215, size: 64, offset: 7616)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !207, file: !208, line: 914, baseType: !2874, size: 640, offset: 7680)
!2874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2875, line: 123, size: 640, elements: !2876)
!2875 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2876 = !{!2877, !2883, !2884}
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2874, file: !2875, line: 124, baseType: !2878, size: 576)
!2878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2879, size: 576, elements: !747)
!2879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2875, line: 108, size: 192, elements: !2880)
!2880 = !{!2881, !2882}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2879, file: !2875, line: 109, baseType: !272, size: 64)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2879, file: !2875, line: 110, baseType: !379, size: 128, offset: 64)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2874, file: !2875, line: 125, baseType: !7, size: 32, offset: 576)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2874, file: !2875, line: 126, baseType: !7, size: 32, offset: 608)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !207, file: !208, line: 917, baseType: !2886, size: 192, offset: 8320)
!2886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2875, line: 134, size: 192, elements: !2887)
!2887 = !{!2888, !2889}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2886, file: !2875, line: 135, baseType: !874, size: 128, align: 64)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2886, file: !2875, line: 136, baseType: !7, size: 32, offset: 128)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !207, file: !208, line: 923, baseType: !1234, size: 64, offset: 8512)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !207, file: !208, line: 926, baseType: !1234, size: 64, offset: 8576)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !207, file: !208, line: 929, baseType: !1234, size: 64, offset: 8640)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !207, file: !208, line: 933, baseType: !1264, size: 64, offset: 8704)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !207, file: !208, line: 943, baseType: !2895, size: 128, offset: 8768)
!2895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !639, size: 128, elements: !1754)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !207, file: !208, line: 945, baseType: !2897, size: 64, offset: 8896)
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2898, size: 64)
!2898 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !208, line: 49, flags: DIFlagFwdDecl)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !207, file: !208, line: 956, baseType: !2900, size: 64, offset: 8960)
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 64)
!2901 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !208, line: 45, flags: DIFlagFwdDecl)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !207, file: !208, line: 959, baseType: !2903, size: 64, offset: 9024)
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2904, size: 64)
!2904 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !208, line: 959, flags: DIFlagFwdDecl)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !207, file: !208, line: 962, baseType: !2906, size: 64, offset: 9088)
!2906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2907, size: 64)
!2907 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !208, line: 66, flags: DIFlagFwdDecl)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !207, file: !208, line: 966, baseType: !2909, size: 64, offset: 9152)
!2909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2910, size: 64)
!2910 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !208, line: 50, flags: DIFlagFwdDecl)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !207, file: !208, line: 969, baseType: !2912, size: 64, offset: 9216)
!2912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2913, size: 64)
!2913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !2914, line: 82, size: 7296, elements: !2915)
!2914 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!2915 = !{!2916, !2917, !2918, !2919, !2920, !2921, !2922, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2951, !2960, !2961, !2963, !2964, !2965, !2968, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2998, !2999, !3006, !3007, !3008, !3009, !3010, !3011}
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !2913, file: !2914, line: 83, baseType: !226, size: 32)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2913, file: !2914, line: 84, baseType: !231, size: 32, offset: 32)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2913, file: !2914, line: 85, baseType: !236, size: 32, offset: 64)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !2913, file: !2914, line: 86, baseType: !265, size: 128, offset: 128)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !2913, file: !2914, line: 88, baseType: !1008, size: 128, offset: 256)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !2913, file: !2914, line: 91, baseType: !206, size: 64, offset: 384)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !2913, file: !2914, line: 94, baseType: !2923, size: 192, offset: 448)
!2923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !2924, line: 30, size: 192, elements: !2925)
!2924 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!2925 = !{!2926, !2927}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2923, file: !2924, line: 31, baseType: !265, size: 128)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2923, file: !2924, line: 32, baseType: !2928, size: 64, offset: 128)
!2928 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !2929, line: 25, baseType: !2930)
!2929 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!2930 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2929, line: 23, size: 64, elements: !2931)
!2931 = !{!2932}
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2930, file: !2929, line: 24, baseType: !414, size: 64)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !2913, file: !2914, line: 97, baseType: !731, size: 64, offset: 640)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !2913, file: !2914, line: 100, baseType: !236, size: 32, offset: 704)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !2913, file: !2914, line: 106, baseType: !236, size: 32, offset: 736)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !2913, file: !2914, line: 107, baseType: !206, size: 64, offset: 768)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !2913, file: !2914, line: 110, baseType: !236, size: 32, offset: 832)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2913, file: !2914, line: 111, baseType: !7, size: 32, offset: 864)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !2913, file: !2914, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !2913, file: !2914, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !2913, file: !2914, line: 128, baseType: !236, size: 32, offset: 928)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !2913, file: !2914, line: 129, baseType: !265, size: 128, offset: 960)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !2913, file: !2914, line: 132, baseType: !314, size: 512, offset: 1088)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !2913, file: !2914, line: 133, baseType: !322, size: 64, offset: 1600)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !2913, file: !2914, line: 140, baseType: !2946, size: 256, offset: 1664)
!2946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2947, size: 256, elements: !1256)
!2947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !2914, line: 38, size: 128, elements: !2948)
!2948 = !{!2949, !2950}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2947, file: !2914, line: 39, baseType: !272, size: 64)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2947, file: !2914, line: 40, baseType: !272, size: 64, offset: 64)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !2913, file: !2914, line: 146, baseType: !2952, size: 192, offset: 1920)
!2952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !2914, line: 66, size: 192, elements: !2953)
!2953 = !{!2954}
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !2952, file: !2914, line: 67, baseType: !2955, size: 192)
!2955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !2914, line: 47, size: 192, elements: !2956)
!2956 = !{!2957, !2958, !2959}
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2955, file: !2914, line: 48, baseType: !830, size: 64)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2955, file: !2914, line: 49, baseType: !830, size: 64, offset: 64)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2955, file: !2914, line: 50, baseType: !830, size: 64, offset: 128)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2913, file: !2914, line: 150, baseType: !2874, size: 640, offset: 2112)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !2913, file: !2914, line: 153, baseType: !2962, size: 256, offset: 2752)
!2962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1208, size: 256, elements: !1216)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !2913, file: !2914, line: 159, baseType: !1208, size: 64, offset: 3008)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !2913, file: !2914, line: 162, baseType: !236, size: 32, offset: 3072)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2913, file: !2914, line: 164, baseType: !2966, size: 64, offset: 3136)
!2966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 64)
!2967 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !2914, line: 164, flags: DIFlagFwdDecl)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !2913, file: !2914, line: 175, baseType: !2969, size: 32, offset: 3200)
!2969 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !369, line: 805, baseType: !2970)
!2970 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 798, size: 32, elements: !2971)
!2971 = !{!2972, !2973}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2970, file: !369, line: 803, baseType: !564, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2970, file: !369, line: 804, baseType: !608, offset: 32)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2913, file: !2914, line: 176, baseType: !272, size: 64, offset: 3264)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2913, file: !2914, line: 176, baseType: !272, size: 64, offset: 3328)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !2913, file: !2914, line: 176, baseType: !272, size: 64, offset: 3392)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !2913, file: !2914, line: 176, baseType: !272, size: 64, offset: 3456)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2913, file: !2914, line: 177, baseType: !272, size: 64, offset: 3520)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !2913, file: !2914, line: 178, baseType: !272, size: 64, offset: 3584)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2913, file: !2914, line: 179, baseType: !2862, size: 128, offset: 3648)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2913, file: !2914, line: 180, baseType: !215, size: 64, offset: 3776)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2913, file: !2914, line: 180, baseType: !215, size: 64, offset: 3840)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !2913, file: !2914, line: 180, baseType: !215, size: 64, offset: 3904)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !2913, file: !2914, line: 180, baseType: !215, size: 64, offset: 3968)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2913, file: !2914, line: 181, baseType: !215, size: 64, offset: 4032)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2913, file: !2914, line: 181, baseType: !215, size: 64, offset: 4096)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !2913, file: !2914, line: 181, baseType: !215, size: 64, offset: 4160)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !2913, file: !2914, line: 181, baseType: !215, size: 64, offset: 4224)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !2913, file: !2914, line: 182, baseType: !215, size: 64, offset: 4288)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !2913, file: !2914, line: 182, baseType: !215, size: 64, offset: 4352)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !2913, file: !2914, line: 182, baseType: !215, size: 64, offset: 4416)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !2913, file: !2914, line: 182, baseType: !215, size: 64, offset: 4480)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !2913, file: !2914, line: 183, baseType: !215, size: 64, offset: 4544)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !2913, file: !2914, line: 183, baseType: !215, size: 64, offset: 4608)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2913, file: !2914, line: 184, baseType: !2996, offset: 4672)
!2996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2997, line: 12, elements: !281)
!2997 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !2913, file: !2914, line: 192, baseType: !274, size: 64, offset: 4672)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !2913, file: !2914, line: 203, baseType: !3000, size: 2048, offset: 4736)
!3000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3001, size: 2048, elements: !1754)
!3001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3002, line: 43, size: 128, elements: !3003)
!3002 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3003 = !{!3004, !3005}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3001, file: !3002, line: 44, baseType: !817, size: 64)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3001, file: !3002, line: 45, baseType: !817, size: 64, offset: 64)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !2913, file: !2914, line: 220, baseType: !682, size: 8, offset: 6784)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !2913, file: !2914, line: 221, baseType: !1307, size: 16, offset: 6800)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !2913, file: !2914, line: 222, baseType: !1307, size: 16, offset: 6816)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !2913, file: !2914, line: 224, baseType: !422, size: 64, offset: 6848)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !2913, file: !2914, line: 227, baseType: !824, size: 192, offset: 6912)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !2913, file: !2914, line: 233, baseType: !824, size: 192, offset: 7104)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !207, file: !208, line: 970, baseType: !3013, size: 64, offset: 9280)
!3013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3014, size: 64)
!3014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !2914, line: 20, size: 16576, elements: !3015)
!3015 = !{!3016, !3017, !3018, !3019}
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3014, file: !2914, line: 21, baseType: !608)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3014, file: !2914, line: 22, baseType: !226, size: 32)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3014, file: !2914, line: 23, baseType: !1008, size: 128, offset: 64)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3014, file: !2914, line: 24, baseType: !3020, size: 16384, offset: 192)
!3020 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3021, size: 16384, elements: !2067)
!3021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !2924, line: 49, size: 256, elements: !3022)
!3022 = !{!3023}
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3021, file: !2924, line: 50, baseType: !3024, size: 256)
!3024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !2924, line: 35, size: 256, elements: !3025)
!3025 = !{!3026, !3033, !3034, !3040}
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3024, file: !2924, line: 37, baseType: !3027, size: 64)
!3027 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3028, line: 19, baseType: !3029)
!3028 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3030, size: 64)
!3030 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3028, line: 18, baseType: !3031)
!3031 = !DISubroutineType(types: !3032)
!3032 = !{null, !236}
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3024, file: !2924, line: 38, baseType: !215, size: 64, offset: 64)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3024, file: !2924, line: 44, baseType: !3035, size: 64, offset: 128)
!3035 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3028, line: 22, baseType: !3036)
!3036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3037, size: 64)
!3037 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3028, line: 21, baseType: !3038)
!3038 = !DISubroutineType(types: !3039)
!3039 = !{null}
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3024, file: !2924, line: 46, baseType: !2928, size: 64, offset: 192)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !207, file: !208, line: 971, baseType: !2928, size: 64, offset: 9344)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !207, file: !208, line: 972, baseType: !2928, size: 64, offset: 9408)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !207, file: !208, line: 974, baseType: !2928, size: 64, offset: 9472)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !207, file: !208, line: 975, baseType: !2923, size: 192, offset: 9536)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !207, file: !208, line: 976, baseType: !215, size: 64, offset: 9728)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !207, file: !208, line: 977, baseType: !815, size: 64, offset: 9792)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !207, file: !208, line: 978, baseType: !7, size: 32, offset: 9856)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !207, file: !208, line: 980, baseType: !877, size: 64, offset: 9920)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !207, file: !208, line: 989, baseType: !3050, size: 128, offset: 9984)
!3050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3051, line: 35, size: 128, elements: !3052)
!3051 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3052 = !{!3053, !3054, !3055}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3050, file: !3051, line: 36, baseType: !236, size: 32)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3050, file: !3051, line: 37, baseType: !231, size: 32, offset: 32)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3050, file: !3051, line: 38, baseType: !3056, size: 64, offset: 64)
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 64)
!3057 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3051, line: 23, flags: DIFlagFwdDecl)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !207, file: !208, line: 992, baseType: !272, size: 64, offset: 10112)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !207, file: !208, line: 993, baseType: !272, size: 64, offset: 10176)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !207, file: !208, line: 996, baseType: !608, offset: 10240)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !207, file: !208, line: 999, baseType: !339, offset: 10240)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !207, file: !208, line: 1001, baseType: !3063, size: 64, offset: 10240)
!3063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !208, line: 636, size: 64, elements: !3064)
!3064 = !{!3065}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3063, file: !208, line: 637, baseType: !3066, size: 64)
!3066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3063, size: 64)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !207, file: !208, line: 1005, baseType: !382, size: 128, offset: 10304)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !207, file: !208, line: 1007, baseType: !206, size: 64, offset: 10432)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !207, file: !208, line: 1009, baseType: !3070, size: 64, offset: 10496)
!3070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3071, size: 64)
!3071 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !208, line: 1009, flags: DIFlagFwdDecl)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !207, file: !208, line: 1043, baseType: !224, size: 64, offset: 10560)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !207, file: !208, line: 1046, baseType: !3074, size: 64, offset: 10624)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !208, line: 41, flags: DIFlagFwdDecl)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !207, file: !208, line: 1050, baseType: !3077, size: 64, offset: 10688)
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 64)
!3078 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !208, line: 42, flags: DIFlagFwdDecl)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !207, file: !208, line: 1054, baseType: !3080, size: 64, offset: 10752)
!3080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3081, size: 64)
!3081 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !208, line: 55, flags: DIFlagFwdDecl)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !207, file: !208, line: 1056, baseType: !1662, size: 64, offset: 10816)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !207, file: !208, line: 1058, baseType: !3084, size: 64, offset: 10880)
!3084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3085, size: 64)
!3085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !3086, line: 99, size: 704, elements: !3087)
!3086 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!3087 = !{!3088, !3089, !3090, !3091, !3092, !3093, !3094, !3113, !3114}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3085, file: !3086, line: 100, baseType: !828, size: 64)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !3085, file: !3086, line: 101, baseType: !231, size: 32, offset: 64)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !3085, file: !3086, line: 102, baseType: !231, size: 32, offset: 96)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3085, file: !3086, line: 105, baseType: !608, offset: 128)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3085, file: !3086, line: 107, baseType: !290, size: 16, offset: 128)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !3085, file: !3086, line: 109, baseType: !2207, size: 128, offset: 192)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !3085, file: !3086, line: 110, baseType: !3095, size: 64, offset: 320)
!3095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3096, size: 64)
!3096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !3086, line: 73, size: 448, elements: !3097)
!3097 = !{!3098, !3101, !3102, !3107, !3112}
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3096, file: !3086, line: 74, baseType: !3099, size: 64)
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3100, size: 64)
!3100 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !3086, line: 74, flags: DIFlagFwdDecl)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !3096, file: !3086, line: 75, baseType: !3084, size: 64, offset: 64)
!3102 = !DIDerivedType(tag: DW_TAG_member, scope: !3096, file: !3086, line: 83, baseType: !3103, size: 128, offset: 128)
!3103 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3096, file: !3086, line: 83, size: 128, elements: !3104)
!3104 = !{!3105, !3106}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !3103, file: !3086, line: 84, baseType: !265, size: 128)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !3103, file: !3086, line: 85, baseType: !2459, size: 64)
!3107 = !DIDerivedType(tag: DW_TAG_member, scope: !3096, file: !3086, line: 87, baseType: !3108, size: 128, offset: 256)
!3108 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3096, file: !3086, line: 87, size: 128, elements: !3109)
!3109 = !{!3110, !3111}
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !3108, file: !3086, line: 88, baseType: !735, size: 128)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !3108, file: !3086, line: 89, baseType: !874, size: 128, align: 64)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3096, file: !3086, line: 92, baseType: !7, size: 32, offset: 384)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3085, file: !3086, line: 111, baseType: !731, size: 64, offset: 384)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !3085, file: !3086, line: 113, baseType: !1804, size: 256, offset: 448)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !207, file: !208, line: 1061, baseType: !3116, size: 64, offset: 10944)
!3116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3117, size: 64)
!3117 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !208, line: 43, flags: DIFlagFwdDecl)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !207, file: !208, line: 1064, baseType: !215, size: 64, offset: 11008)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !207, file: !208, line: 1065, baseType: !3120, size: 64, offset: 11072)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 64)
!3121 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !2924, line: 14, baseType: !3122)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !2924, line: 12, size: 384, elements: !3123)
!3123 = !{!3124}
!3124 = !DIDerivedType(tag: DW_TAG_member, scope: !3122, file: !2924, line: 13, baseType: !3125, size: 384)
!3125 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3122, file: !2924, line: 13, size: 384, elements: !3126)
!3126 = !{!3127, !3128, !3129, !3130}
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3125, file: !2924, line: 13, baseType: !236, size: 32)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3125, file: !2924, line: 13, baseType: !236, size: 32, offset: 32)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3125, file: !2924, line: 13, baseType: !236, size: 32, offset: 64)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3125, file: !2924, line: 13, baseType: !3131, size: 256, offset: 128)
!3131 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3132, line: 32, size: 256, elements: !3133)
!3132 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3133 = !{!3134, !3139, !3152, !3158, !3167, !3187, !3192}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3131, file: !3132, line: 37, baseType: !3135, size: 64)
!3135 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3131, file: !3132, line: 34, size: 64, elements: !3136)
!3136 = !{!3137, !3138}
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3135, file: !3132, line: 35, baseType: !2839, size: 32)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3135, file: !3132, line: 36, baseType: !540, size: 32, offset: 32)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3131, file: !3132, line: 45, baseType: !3140, size: 192)
!3140 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3131, file: !3132, line: 40, size: 192, elements: !3141)
!3141 = !{!3142, !3144, !3145, !3151}
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3140, file: !3132, line: 41, baseType: !3143, size: 32)
!3143 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !366, line: 95, baseType: !236)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3140, file: !3132, line: 42, baseType: !236, size: 32, offset: 32)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3140, file: !3132, line: 43, baseType: !3146, size: 64, offset: 64)
!3146 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3132, line: 11, baseType: !3147)
!3147 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3132, line: 8, size: 64, elements: !3148)
!3148 = !{!3149, !3150}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3147, file: !3132, line: 9, baseType: !236, size: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3147, file: !3132, line: 10, baseType: !224, size: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3140, file: !3132, line: 44, baseType: !236, size: 32, offset: 128)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3131, file: !3132, line: 52, baseType: !3153, size: 128)
!3153 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3131, file: !3132, line: 48, size: 128, elements: !3154)
!3154 = !{!3155, !3156, !3157}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3153, file: !3132, line: 49, baseType: !2839, size: 32)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3153, file: !3132, line: 50, baseType: !540, size: 32, offset: 32)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3153, file: !3132, line: 51, baseType: !3146, size: 64, offset: 64)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3131, file: !3132, line: 61, baseType: !3159, size: 256)
!3159 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3131, file: !3132, line: 55, size: 256, elements: !3160)
!3160 = !{!3161, !3162, !3163, !3164, !3166}
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3159, file: !3132, line: 56, baseType: !2839, size: 32)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3159, file: !3132, line: 57, baseType: !540, size: 32, offset: 32)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3159, file: !3132, line: 58, baseType: !236, size: 32, offset: 64)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3159, file: !3132, line: 59, baseType: !3165, size: 64, offset: 128)
!3165 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !366, line: 94, baseType: !901)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3159, file: !3132, line: 60, baseType: !3165, size: 64, offset: 192)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3131, file: !3132, line: 95, baseType: !3168, size: 256)
!3168 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3131, file: !3132, line: 64, size: 256, elements: !3169)
!3169 = !{!3170, !3171}
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3168, file: !3132, line: 65, baseType: !224, size: 64)
!3171 = !DIDerivedType(tag: DW_TAG_member, scope: !3168, file: !3132, line: 77, baseType: !3172, size: 192, offset: 64)
!3172 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3168, file: !3132, line: 77, size: 192, elements: !3173)
!3173 = !{!3174, !3175, !3182}
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3172, file: !3132, line: 82, baseType: !1307, size: 16)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3172, file: !3132, line: 88, baseType: !3176, size: 192)
!3176 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3172, file: !3132, line: 84, size: 192, elements: !3177)
!3177 = !{!3178, !3180, !3181}
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3176, file: !3132, line: 85, baseType: !3179, size: 64)
!3179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !639, size: 64, elements: !360)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3176, file: !3132, line: 86, baseType: !224, size: 64, offset: 64)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3176, file: !3132, line: 87, baseType: !224, size: 64, offset: 128)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3172, file: !3132, line: 93, baseType: !3183, size: 96)
!3183 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3172, file: !3132, line: 90, size: 96, elements: !3184)
!3184 = !{!3185, !3186}
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3183, file: !3132, line: 91, baseType: !3179, size: 64)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3183, file: !3132, line: 92, baseType: !219, size: 32, offset: 64)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3131, file: !3132, line: 101, baseType: !3188, size: 128)
!3188 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3131, file: !3132, line: 98, size: 128, elements: !3189)
!3189 = !{!3190, !3191}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3188, file: !3132, line: 99, baseType: !166, size: 64)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3188, file: !3132, line: 100, baseType: !236, size: 32, offset: 64)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3131, file: !3132, line: 108, baseType: !3193, size: 128)
!3193 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3131, file: !3132, line: 104, size: 128, elements: !3194)
!3194 = !{!3195, !3196, !3197}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3193, file: !3132, line: 105, baseType: !224, size: 64)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3193, file: !3132, line: 106, baseType: !236, size: 32, offset: 64)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3193, file: !3132, line: 107, baseType: !7, size: 32, offset: 96)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !207, file: !208, line: 1067, baseType: !2996, offset: 11136)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !207, file: !208, line: 1099, baseType: !3200, size: 64, offset: 11136)
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3201, size: 64)
!3201 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !208, line: 56, flags: DIFlagFwdDecl)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !207, file: !208, line: 1103, baseType: !265, size: 128, offset: 11200)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !207, file: !208, line: 1104, baseType: !3204, size: 64, offset: 11328)
!3204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3205, size: 64)
!3205 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !208, line: 46, flags: DIFlagFwdDecl)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !207, file: !208, line: 1105, baseType: !824, size: 192, offset: 11392)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !207, file: !208, line: 1106, baseType: !7, size: 32, offset: 11584)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !207, file: !208, line: 1109, baseType: !3209, size: 128, offset: 11648)
!3209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3210, size: 128, elements: !1256)
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3211, size: 64)
!3211 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !208, line: 51, flags: DIFlagFwdDecl)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !207, file: !208, line: 1110, baseType: !824, size: 192, offset: 11776)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !207, file: !208, line: 1111, baseType: !265, size: 128, offset: 11968)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !207, file: !208, line: 1173, baseType: !3215, size: 64, offset: 12096)
!3215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3216, size: 64)
!3216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3217, line: 62, size: 256, align: 256, elements: !3218)
!3217 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3218 = !{!3219, !3220, !3221, !3226}
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3216, file: !3217, line: 75, baseType: !219, size: 32)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3216, file: !3217, line: 90, baseType: !219, size: 32, offset: 32)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3216, file: !3217, line: 124, baseType: !3222, size: 64, offset: 64)
!3222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3216, file: !3217, line: 109, size: 64, elements: !3223)
!3223 = !{!3224, !3225}
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3222, file: !3217, line: 110, baseType: !273, size: 64)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3222, file: !3217, line: 112, baseType: !273, size: 64)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3216, file: !3217, line: 144, baseType: !219, size: 32, offset: 128)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !207, file: !208, line: 1174, baseType: !217, size: 32, offset: 12160)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !207, file: !208, line: 1179, baseType: !215, size: 64, offset: 12224)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !207, file: !208, line: 1182, baseType: !3230, size: 128, offset: 12288)
!3230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2675, line: 76, size: 128, elements: !3231)
!3231 = !{!3232, !3237, !3238}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3230, file: !2675, line: 85, baseType: !3233, size: 64)
!3233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !3234, line: 7, size: 64, elements: !3235)
!3234 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!3235 = !{!3236}
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3233, file: !3234, line: 12, baseType: !411, size: 64)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !3230, file: !2675, line: 88, baseType: !682, size: 8, offset: 64)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !3230, file: !2675, line: 95, baseType: !682, size: 8, offset: 72)
!3239 = !DIDerivedType(tag: DW_TAG_member, scope: !207, file: !208, line: 1184, baseType: !3240, size: 128, offset: 12416)
!3240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !207, file: !208, line: 1184, size: 128, elements: !3241)
!3241 = !{!3242, !3243}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !3240, file: !208, line: 1185, baseType: !226, size: 32)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3240, file: !208, line: 1186, baseType: !874, size: 128, align: 64)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !207, file: !208, line: 1190, baseType: !962, size: 64, offset: 12544)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !207, file: !208, line: 1192, baseType: !3246, size: 128, offset: 12608)
!3246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2675, line: 64, size: 128, elements: !3247)
!3247 = !{!3248, !3249, !3250}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !3246, file: !2675, line: 65, baseType: !511, size: 64)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3246, file: !2675, line: 67, baseType: !219, size: 32, offset: 64)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3246, file: !2675, line: 68, baseType: !219, size: 32, offset: 96)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !207, file: !208, line: 1206, baseType: !236, size: 32, offset: 12736)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !207, file: !208, line: 1207, baseType: !236, size: 32, offset: 12768)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !207, file: !208, line: 1209, baseType: !215, size: 64, offset: 12800)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !207, file: !208, line: 1219, baseType: !272, size: 64, offset: 12864)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !207, file: !208, line: 1220, baseType: !272, size: 64, offset: 12928)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !207, file: !208, line: 1317, baseType: !236, size: 32, offset: 12992)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !207, file: !208, line: 1319, baseType: !206, size: 64, offset: 13056)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !207, file: !208, line: 1322, baseType: !3259, size: 64, offset: 13120)
!3259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3260, size: 64)
!3260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !3261, line: 56, size: 512, elements: !3262)
!3261 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!3262 = !{!3263, !3264, !3265, !3266, !3267, !3268, !3269, !3271}
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3260, file: !3261, line: 57, baseType: !3259, size: 64)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3260, file: !3261, line: 58, baseType: !224, size: 64, offset: 64)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3260, file: !3261, line: 59, baseType: !215, size: 64, offset: 128)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3260, file: !3261, line: 60, baseType: !215, size: 64, offset: 192)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3260, file: !3261, line: 61, baseType: !2374, size: 64, offset: 256)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !3260, file: !3261, line: 62, baseType: !7, size: 32, offset: 320)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !3260, file: !3261, line: 63, baseType: !3270, size: 64, offset: 384)
!3270 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !232, line: 153, baseType: !272)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !3260, file: !3261, line: 64, baseType: !2158, size: 64, offset: 448)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !207, file: !208, line: 1326, baseType: !226, size: 32, offset: 13184)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !207, file: !208, line: 1342, baseType: !224, size: 64, offset: 13248)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !207, file: !208, line: 1343, baseType: !273, size: 64, offset: 13312)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !207, file: !208, line: 1344, baseType: !272, size: 64, offset: 13376)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !207, file: !208, line: 1345, baseType: !273, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !207, file: !208, line: 1346, baseType: !273, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !207, file: !208, line: 1347, baseType: !273, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !207, file: !208, line: 1348, baseType: !874, size: 128, align: 64, offset: 13504)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !207, file: !208, line: 1358, baseType: !3281, size: 34816, offset: 13824)
!3281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !3282, line: 485, size: 34816, elements: !3283)
!3282 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!3283 = !{!3284, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3313, !3314, !3315, !3316, !3317, !3318, !3321, !3322, !3323}
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !3281, file: !3282, line: 487, baseType: !3285, size: 192)
!3285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3286, size: 192, elements: !747)
!3286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !3287, line: 16, size: 64, elements: !3288)
!3287 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!3288 = !{!3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301}
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !3286, file: !3287, line: 17, baseType: !922, size: 16)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !3286, file: !3287, line: 18, baseType: !922, size: 16, offset: 16)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !3286, file: !3287, line: 19, baseType: !922, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3286, file: !3287, line: 19, baseType: !922, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !3286, file: !3287, line: 19, baseType: !922, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !3286, file: !3287, line: 19, baseType: !922, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3286, file: !3287, line: 19, baseType: !922, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !3286, file: !3287, line: 20, baseType: !922, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !3286, file: !3287, line: 20, baseType: !922, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !3286, file: !3287, line: 20, baseType: !922, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3286, file: !3287, line: 20, baseType: !922, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3286, file: !3287, line: 20, baseType: !922, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !3286, file: !3287, line: 20, baseType: !922, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3281, file: !3282, line: 491, baseType: !215, size: 64, offset: 192)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !3281, file: !3282, line: 495, baseType: !290, size: 16, offset: 256)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !3281, file: !3282, line: 496, baseType: !290, size: 16, offset: 272)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !3281, file: !3282, line: 497, baseType: !290, size: 16, offset: 288)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !3281, file: !3282, line: 498, baseType: !290, size: 16, offset: 304)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !3281, file: !3282, line: 502, baseType: !215, size: 64, offset: 320)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3281, file: !3282, line: 503, baseType: !215, size: 64, offset: 384)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !3281, file: !3282, line: 514, baseType: !3310, size: 256, offset: 448)
!3310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3311, size: 256, elements: !1216)
!3311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3312, size: 64)
!3312 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !3282, line: 483, flags: DIFlagFwdDecl)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !3281, file: !3282, line: 516, baseType: !215, size: 64, offset: 704)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !3281, file: !3282, line: 518, baseType: !215, size: 64, offset: 768)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !3281, file: !3282, line: 520, baseType: !215, size: 64, offset: 832)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !3281, file: !3282, line: 521, baseType: !215, size: 64, offset: 896)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !3281, file: !3282, line: 522, baseType: !215, size: 64, offset: 960)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !3281, file: !3282, line: 528, baseType: !3319, size: 64, offset: 1024)
!3319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3320, size: 64)
!3320 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !3282, line: 10, flags: DIFlagFwdDecl)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !3281, file: !3282, line: 535, baseType: !215, size: 64, offset: 1088)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !3281, file: !3282, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !3281, file: !3282, line: 540, baseType: !3324, size: 33280, offset: 1536)
!3324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !3325, line: 317, size: 33280, elements: !3326)
!3325 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!3326 = !{!3327, !3328, !3329}
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !3324, file: !3325, line: 330, baseType: !7, size: 32)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !3324, file: !3325, line: 337, baseType: !215, size: 64, offset: 64)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3324, file: !3325, line: 348, baseType: !3330, size: 32768, offset: 512)
!3330 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !3325, line: 304, size: 32768, elements: !3331)
!3331 = !{!3332, !3347, !3384, !3434, !3447}
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !3330, file: !3325, line: 305, baseType: !3333, size: 896)
!3333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !3325, line: 12, size: 896, elements: !3334)
!3334 = !{!3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3346}
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3333, file: !3325, line: 13, baseType: !217, size: 32)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3333, file: !3325, line: 14, baseType: !217, size: 32, offset: 32)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3333, file: !3325, line: 15, baseType: !217, size: 32, offset: 64)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3333, file: !3325, line: 16, baseType: !217, size: 32, offset: 96)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3333, file: !3325, line: 17, baseType: !217, size: 32, offset: 128)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3333, file: !3325, line: 18, baseType: !217, size: 32, offset: 160)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3333, file: !3325, line: 19, baseType: !217, size: 32, offset: 192)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3333, file: !3325, line: 22, baseType: !3343, size: 640, offset: 224)
!3343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, size: 640, elements: !3344)
!3344 = !{!3345}
!3345 = !DISubrange(count: 20)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3333, file: !3325, line: 25, baseType: !217, size: 32, offset: 864)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !3330, file: !3325, line: 306, baseType: !3348, size: 4096, align: 128)
!3348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !3325, line: 34, size: 4096, align: 128, elements: !3349)
!3349 = !{!3350, !3351, !3352, !3353, !3354, !3369, !3370, !3371, !3373, !3375, !3379}
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3348, file: !3325, line: 35, baseType: !922, size: 16)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3348, file: !3325, line: 36, baseType: !922, size: 16, offset: 16)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3348, file: !3325, line: 37, baseType: !922, size: 16, offset: 32)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !3348, file: !3325, line: 38, baseType: !922, size: 16, offset: 48)
!3354 = !DIDerivedType(tag: DW_TAG_member, scope: !3348, file: !3325, line: 39, baseType: !3355, size: 128, offset: 64)
!3355 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3348, file: !3325, line: 39, size: 128, elements: !3356)
!3356 = !{!3357, !3362}
!3357 = !DIDerivedType(tag: DW_TAG_member, scope: !3355, file: !3325, line: 40, baseType: !3358, size: 128)
!3358 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3355, file: !3325, line: 40, size: 128, elements: !3359)
!3359 = !{!3360, !3361}
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !3358, file: !3325, line: 41, baseType: !272, size: 64)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !3358, file: !3325, line: 42, baseType: !272, size: 64, offset: 64)
!3362 = !DIDerivedType(tag: DW_TAG_member, scope: !3355, file: !3325, line: 44, baseType: !3363, size: 128)
!3363 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3355, file: !3325, line: 44, size: 128, elements: !3364)
!3364 = !{!3365, !3366, !3367, !3368}
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3363, file: !3325, line: 45, baseType: !217, size: 32)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3363, file: !3325, line: 46, baseType: !217, size: 32, offset: 32)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3363, file: !3325, line: 47, baseType: !217, size: 32, offset: 64)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3363, file: !3325, line: 48, baseType: !217, size: 32, offset: 96)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !3348, file: !3325, line: 51, baseType: !217, size: 32, offset: 192)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !3348, file: !3325, line: 52, baseType: !217, size: 32, offset: 224)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3348, file: !3325, line: 55, baseType: !3372, size: 1024, offset: 256)
!3372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, size: 1024, elements: !595)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !3348, file: !3325, line: 58, baseType: !3374, size: 2048, offset: 1280)
!3374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, size: 2048, elements: !2067)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3348, file: !3325, line: 60, baseType: !3376, size: 384, offset: 3328)
!3376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, size: 384, elements: !3377)
!3377 = !{!3378}
!3378 = !DISubrange(count: 12)
!3379 = !DIDerivedType(tag: DW_TAG_member, scope: !3348, file: !3325, line: 62, baseType: !3380, size: 384, offset: 3712)
!3380 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3348, file: !3325, line: 62, size: 384, elements: !3381)
!3381 = !{!3382, !3383}
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !3380, file: !3325, line: 63, baseType: !3376, size: 384)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !3380, file: !3325, line: 64, baseType: !3376, size: 384)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !3330, file: !3325, line: 307, baseType: !3385, size: 1088)
!3385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !3325, line: 79, size: 1088, elements: !3386)
!3386 = !{!3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3433}
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3385, file: !3325, line: 80, baseType: !217, size: 32)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3385, file: !3325, line: 81, baseType: !217, size: 32, offset: 32)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3385, file: !3325, line: 82, baseType: !217, size: 32, offset: 64)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3385, file: !3325, line: 83, baseType: !217, size: 32, offset: 96)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3385, file: !3325, line: 84, baseType: !217, size: 32, offset: 128)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3385, file: !3325, line: 85, baseType: !217, size: 32, offset: 160)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3385, file: !3325, line: 86, baseType: !217, size: 32, offset: 192)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3385, file: !3325, line: 88, baseType: !3343, size: 640, offset: 224)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !3385, file: !3325, line: 89, baseType: !395, size: 8, offset: 864)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !3385, file: !3325, line: 90, baseType: !395, size: 8, offset: 872)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !3385, file: !3325, line: 91, baseType: !395, size: 8, offset: 880)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !3385, file: !3325, line: 92, baseType: !395, size: 8, offset: 888)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !3385, file: !3325, line: 93, baseType: !395, size: 8, offset: 896)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !3385, file: !3325, line: 94, baseType: !395, size: 8, offset: 904)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3385, file: !3325, line: 95, baseType: !3402, size: 64, offset: 960)
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3403, size: 64)
!3403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !3404, line: 11, size: 128, elements: !3405)
!3404 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!3405 = !{!3406, !3407}
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !3403, file: !3404, line: 12, baseType: !166, size: 64)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !3403, file: !3404, line: 13, baseType: !3408, size: 64, offset: 64)
!3408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3409, size: 64)
!3409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !3410, line: 56, size: 1344, elements: !3411)
!3410 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!3411 = !{!3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432}
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3409, file: !3410, line: 61, baseType: !215, size: 64)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3409, file: !3410, line: 62, baseType: !215, size: 64, offset: 64)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !3409, file: !3410, line: 63, baseType: !215, size: 64, offset: 128)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3409, file: !3410, line: 64, baseType: !215, size: 64, offset: 192)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !3409, file: !3410, line: 65, baseType: !215, size: 64, offset: 256)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !3409, file: !3410, line: 66, baseType: !215, size: 64, offset: 320)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !3409, file: !3410, line: 68, baseType: !215, size: 64, offset: 384)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !3409, file: !3410, line: 69, baseType: !215, size: 64, offset: 448)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !3409, file: !3410, line: 70, baseType: !215, size: 64, offset: 512)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !3409, file: !3410, line: 71, baseType: !215, size: 64, offset: 576)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !3409, file: !3410, line: 72, baseType: !215, size: 64, offset: 640)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !3409, file: !3410, line: 73, baseType: !215, size: 64, offset: 704)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !3409, file: !3410, line: 74, baseType: !215, size: 64, offset: 768)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !3409, file: !3410, line: 75, baseType: !215, size: 64, offset: 832)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !3409, file: !3410, line: 76, baseType: !215, size: 64, offset: 896)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !3409, file: !3410, line: 81, baseType: !215, size: 64, offset: 960)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3409, file: !3410, line: 83, baseType: !215, size: 64, offset: 1024)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !3409, file: !3410, line: 84, baseType: !215, size: 64, offset: 1088)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3409, file: !3410, line: 85, baseType: !215, size: 64, offset: 1152)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3409, file: !3410, line: 86, baseType: !215, size: 64, offset: 1216)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !3409, file: !3410, line: 87, baseType: !215, size: 64, offset: 1280)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !3385, file: !3325, line: 96, baseType: !217, size: 32, offset: 1024)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !3330, file: !3325, line: 308, baseType: !3435, size: 4608, align: 512)
!3435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !3325, line: 289, size: 4608, align: 512, elements: !3436)
!3436 = !{!3437, !3438, !3445}
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !3435, file: !3325, line: 290, baseType: !3348, size: 4096, align: 128)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3435, file: !3325, line: 291, baseType: !3439, size: 512, offset: 4096)
!3439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !3325, line: 268, size: 512, elements: !3440)
!3440 = !{!3441, !3442, !3443}
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !3439, file: !3325, line: 269, baseType: !272, size: 64)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !3439, file: !3325, line: 270, baseType: !272, size: 64, offset: 64)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !3439, file: !3325, line: 271, baseType: !3444, size: 384, offset: 128)
!3444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 384, elements: !1325)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !3435, file: !3325, line: 292, baseType: !3446, offset: 4608)
!3446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !395, elements: !1423)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !3330, file: !3325, line: 309, baseType: !3448, size: 32768)
!3448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !395, size: 32768, elements: !3449)
!3449 = !{!3450}
!3450 = !DISubrange(count: 4096)
!3451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3452, size: 64)
!3452 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !268)
!3453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3454, size: 64)
!3454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3455)
!3455 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !236)
!3456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3457, size: 64)
!3457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3458)
!3458 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!3459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64)
!3460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3461 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !639)
!3462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!3463 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !232, line: 37, baseType: !215)
!3464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3465, size: 64)
!3465 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !217)
!3466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3458, size: 64)
!3467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3468, size: 64)
!3468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "line", file: !3, line: 424, size: 1152, elements: !3469)
!3469 = !{!3470, !4416, !4465, !4466, !4467, !4468, !4469, !4470, !4477, !4478}
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3468, file: !3, line: 425, baseType: !3471, size: 64)
!3471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3472, size: 64)
!3472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_desc", file: !3473, line: 99, size: 320, elements: !3474)
!3473 = !DIFile(filename: "drivers/gpio/gpiolib.h", directory: "/home/lizy2001/genbc/linux")
!3474 = !{!3475, !4412, !4413, !4414, !4415}
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "gdev", scope: !3472, file: !3473, line: 100, baseType: !3476, size: 64)
!3476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3477, size: 64)
!3477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_device", file: !3473, line: 46, size: 7360, elements: !3478)
!3478 = !{!3479, !3480, !4251, !4252, !4253, !4254, !4390, !4391, !4392, !4393, !4394, !4395, !4396}
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3477, file: !3473, line: 47, baseType: !236, size: 32)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3477, file: !3473, line: 48, baseType: !3481, size: 5568, offset: 64)
!3481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !3482)
!3482 = !{!3483, !3484, !3486, !3489, !3490, !3541, !3632, !3633, !3634, !3635, !3636, !3645, !3750, !3763, !4178, !4179, !4183, !4185, !4186, !4187, !4191, !4197, !4198, !4201, !4202, !4203, !4204, !4205, !4206, !4207, !4239, !4240, !4241, !4244, !4247, !4248, !4249, !4250}
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3481, file: !73, line: 462, baseType: !2026, size: 512)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3481, file: !73, line: 463, baseType: !3485, size: 64, offset: 512)
!3485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3481, size: 64)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3481, file: !73, line: 465, baseType: !3487, size: 64, offset: 576)
!3487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3488, size: 64)
!3488 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !3481, file: !73, line: 467, baseType: !637, size: 64, offset: 640)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3481, file: !73, line: 468, baseType: !3491, size: 64, offset: 704)
!3491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3492, size: 64)
!3492 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3493)
!3493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3494)
!3494 = !{!3495, !3496, !3497, !3501, !3506, !3510}
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3493, file: !73, line: 88, baseType: !637, size: 64)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3493, file: !73, line: 89, baseType: !2105, size: 64, offset: 64)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3493, file: !73, line: 90, baseType: !3498, size: 64, offset: 128)
!3498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3499, size: 64)
!3499 = !DISubroutineType(types: !3500)
!3500 = !{!236, !3485, !2060}
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3493, file: !73, line: 91, baseType: !3502, size: 64, offset: 192)
!3502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3503, size: 64)
!3503 = !DISubroutineType(types: !3504)
!3504 = !{!663, !3485, !3505, !2175, !2176}
!3505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3493, file: !73, line: 93, baseType: !3507, size: 64, offset: 256)
!3507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3508, size: 64)
!3508 = !DISubroutineType(types: !3509)
!3509 = !{null, !3485}
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3493, file: !73, line: 95, baseType: !3511, size: 64, offset: 320)
!3511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3512, size: 64)
!3512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3513)
!3513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3514)
!3514 = !{!3515, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540}
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3513, file: !80, line: 279, baseType: !3516, size: 64)
!3516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3517, size: 64)
!3517 = !DISubroutineType(types: !3518)
!3518 = !{!236, !3485}
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3513, file: !80, line: 280, baseType: !3507, size: 64, offset: 64)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3513, file: !80, line: 281, baseType: !3516, size: 64, offset: 128)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3513, file: !80, line: 282, baseType: !3516, size: 64, offset: 192)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3513, file: !80, line: 283, baseType: !3516, size: 64, offset: 256)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3513, file: !80, line: 284, baseType: !3516, size: 64, offset: 320)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3513, file: !80, line: 285, baseType: !3516, size: 64, offset: 384)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3513, file: !80, line: 286, baseType: !3516, size: 64, offset: 448)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3513, file: !80, line: 287, baseType: !3516, size: 64, offset: 512)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3513, file: !80, line: 288, baseType: !3516, size: 64, offset: 576)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3513, file: !80, line: 289, baseType: !3516, size: 64, offset: 640)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3513, file: !80, line: 290, baseType: !3516, size: 64, offset: 704)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3513, file: !80, line: 291, baseType: !3516, size: 64, offset: 768)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3513, file: !80, line: 292, baseType: !3516, size: 64, offset: 832)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3513, file: !80, line: 293, baseType: !3516, size: 64, offset: 896)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3513, file: !80, line: 294, baseType: !3516, size: 64, offset: 960)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3513, file: !80, line: 295, baseType: !3516, size: 64, offset: 1024)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3513, file: !80, line: 296, baseType: !3516, size: 64, offset: 1088)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3513, file: !80, line: 297, baseType: !3516, size: 64, offset: 1152)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3513, file: !80, line: 298, baseType: !3516, size: 64, offset: 1216)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3513, file: !80, line: 299, baseType: !3516, size: 64, offset: 1280)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3513, file: !80, line: 300, baseType: !3516, size: 64, offset: 1344)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3513, file: !80, line: 301, baseType: !3516, size: 64, offset: 1408)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3481, file: !73, line: 470, baseType: !3542, size: 64, offset: 768)
!3542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3543, size: 64)
!3543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3544, line: 82, size: 1408, elements: !3545)
!3544 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3545 = !{!3546, !3547, !3548, !3549, !3550, !3551, !3552, !3611, !3612, !3613, !3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621, !3622, !3623, !3627, !3630, !3631}
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3543, file: !3544, line: 83, baseType: !637, size: 64)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3543, file: !3544, line: 84, baseType: !637, size: 64, offset: 64)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3543, file: !3544, line: 85, baseType: !3485, size: 64, offset: 128)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3543, file: !3544, line: 86, baseType: !2105, size: 64, offset: 192)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3543, file: !3544, line: 87, baseType: !2105, size: 64, offset: 256)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3543, file: !3544, line: 88, baseType: !2105, size: 64, offset: 320)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3543, file: !3544, line: 90, baseType: !3553, size: 64, offset: 384)
!3553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3554, size: 64)
!3554 = !DISubroutineType(types: !3555)
!3555 = !{!236, !3485, !3556}
!3556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3557, size: 64)
!3557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !3558)
!3558 = !{!3559, !3560, !3561, !3562, !3563, !3564, !3565, !3578, !3591, !3592, !3593, !3594, !3595, !3603, !3604, !3605, !3606, !3607, !3608}
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3557, file: !67, line: 96, baseType: !637, size: 64)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3557, file: !67, line: 97, baseType: !3542, size: 64, offset: 64)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3557, file: !67, line: 99, baseType: !202, size: 64, offset: 128)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3557, file: !67, line: 100, baseType: !637, size: 64, offset: 192)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3557, file: !67, line: 102, baseType: !682, size: 8, offset: 256)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3557, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3557, file: !67, line: 105, baseType: !3566, size: 64, offset: 320)
!3566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3567, size: 64)
!3567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3568)
!3568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3569, line: 262, size: 1600, elements: !3570)
!3569 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3570 = !{!3571, !3572, !3573, !3577}
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3568, file: !3569, line: 263, baseType: !1746, size: 256)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3568, file: !3569, line: 264, baseType: !1746, size: 256, offset: 256)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3568, file: !3569, line: 265, baseType: !3574, size: 1024, offset: 512)
!3574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !639, size: 1024, elements: !3575)
!3575 = !{!3576}
!3576 = !DISubrange(count: 128)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3568, file: !3569, line: 266, baseType: !2158, size: 64, offset: 1536)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3557, file: !67, line: 106, baseType: !3579, size: 64, offset: 384)
!3579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3580, size: 64)
!3580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3581)
!3581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3569, line: 210, size: 256, elements: !3582)
!3582 = !{!3583, !3587, !3589, !3590}
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3581, file: !3569, line: 211, baseType: !3584, size: 72)
!3584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 72, elements: !3585)
!3585 = !{!3586}
!3586 = !DISubrange(count: 9)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3581, file: !3569, line: 212, baseType: !3588, size: 64, offset: 128)
!3588 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3569, line: 14, baseType: !215)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3581, file: !3569, line: 213, baseType: !219, size: 32, offset: 192)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3581, file: !3569, line: 214, baseType: !219, size: 32, offset: 224)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3557, file: !67, line: 108, baseType: !3516, size: 64, offset: 448)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3557, file: !67, line: 109, baseType: !3507, size: 64, offset: 512)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3557, file: !67, line: 110, baseType: !3516, size: 64, offset: 576)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3557, file: !67, line: 111, baseType: !3507, size: 64, offset: 640)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3557, file: !67, line: 112, baseType: !3596, size: 64, offset: 704)
!3596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3597, size: 64)
!3597 = !DISubroutineType(types: !3598)
!3598 = !{!236, !3485, !3599}
!3599 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3600)
!3600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3601)
!3601 = !{!3602}
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3600, file: !80, line: 51, baseType: !236, size: 32)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3557, file: !67, line: 113, baseType: !3516, size: 64, offset: 768)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3557, file: !67, line: 114, baseType: !2105, size: 64, offset: 832)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3557, file: !67, line: 115, baseType: !2105, size: 64, offset: 896)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3557, file: !67, line: 117, baseType: !3511, size: 64, offset: 960)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3557, file: !67, line: 118, baseType: !3507, size: 64, offset: 1024)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3557, file: !67, line: 120, baseType: !3609, size: 64, offset: 1088)
!3609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3610, size: 64)
!3610 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3543, file: !3544, line: 91, baseType: !3498, size: 64, offset: 448)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3543, file: !3544, line: 92, baseType: !3516, size: 64, offset: 512)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3543, file: !3544, line: 93, baseType: !3507, size: 64, offset: 576)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3543, file: !3544, line: 94, baseType: !3516, size: 64, offset: 640)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3543, file: !3544, line: 95, baseType: !3507, size: 64, offset: 704)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3543, file: !3544, line: 97, baseType: !3516, size: 64, offset: 768)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3543, file: !3544, line: 98, baseType: !3516, size: 64, offset: 832)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3543, file: !3544, line: 100, baseType: !3596, size: 64, offset: 896)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3543, file: !3544, line: 101, baseType: !3516, size: 64, offset: 960)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3543, file: !3544, line: 103, baseType: !3516, size: 64, offset: 1024)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3543, file: !3544, line: 105, baseType: !3516, size: 64, offset: 1088)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3543, file: !3544, line: 107, baseType: !3511, size: 64, offset: 1152)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3543, file: !3544, line: 109, baseType: !3624, size: 64, offset: 1216)
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 64)
!3625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3626)
!3626 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3544, line: 109, flags: DIFlagFwdDecl)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3543, file: !3544, line: 111, baseType: !3628, size: 64, offset: 1280)
!3628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3629, size: 64)
!3629 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3544, line: 111, flags: DIFlagFwdDecl)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3543, file: !3544, line: 112, baseType: !741, offset: 1344)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3543, file: !3544, line: 114, baseType: !682, size: 8, offset: 1344)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3481, file: !73, line: 471, baseType: !3556, size: 64, offset: 832)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !3481, file: !73, line: 473, baseType: !224, size: 64, offset: 896)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3481, file: !73, line: 475, baseType: !224, size: 64, offset: 960)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3481, file: !73, line: 480, baseType: !824, size: 192, offset: 1024)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3481, file: !73, line: 484, baseType: !3637, size: 576, offset: 1216)
!3637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3638)
!3638 = !{!3639, !3640, !3641, !3642, !3643, !3644}
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3637, file: !73, line: 362, baseType: !265, size: 128)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3637, file: !73, line: 363, baseType: !265, size: 128, offset: 128)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3637, file: !73, line: 364, baseType: !265, size: 128, offset: 256)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3637, file: !73, line: 365, baseType: !265, size: 128, offset: 384)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3637, file: !73, line: 366, baseType: !682, size: 8, offset: 512)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3637, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !3481, file: !73, line: 485, baseType: !3646, size: 2304, offset: 1792)
!3646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !3647)
!3647 = !{!3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662, !3663, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3743, !3747}
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3646, file: !80, line: 566, baseType: !3599, size: 32)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3646, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3646, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3646, file: !80, line: 569, baseType: !682, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3646, file: !80, line: 570, baseType: !682, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3646, file: !80, line: 571, baseType: !682, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3646, file: !80, line: 572, baseType: !682, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3646, file: !80, line: 573, baseType: !682, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3646, file: !80, line: 574, baseType: !682, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3646, file: !80, line: 575, baseType: !682, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3646, file: !80, line: 576, baseType: !682, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3646, file: !80, line: 577, baseType: !217, size: 32, offset: 64)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3646, file: !80, line: 578, baseType: !608, offset: 96)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3646, file: !80, line: 580, baseType: !265, size: 128, offset: 128)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3646, file: !80, line: 581, baseType: !2540, size: 192, offset: 256)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3646, file: !80, line: 582, baseType: !3664, size: 64, offset: 448)
!3664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3665, size: 64)
!3665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3666, line: 43, size: 1472, elements: !3667)
!3666 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3667 = !{!3668, !3669, !3670, !3671, !3672, !3675, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700}
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3665, file: !3666, line: 44, baseType: !637, size: 64)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3665, file: !3666, line: 45, baseType: !236, size: 32, offset: 64)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3665, file: !3666, line: 46, baseType: !265, size: 128, offset: 128)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3665, file: !3666, line: 47, baseType: !608, offset: 256)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3665, file: !3666, line: 48, baseType: !3673, size: 64, offset: 256)
!3673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3674, size: 64)
!3674 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3665, file: !3666, line: 49, baseType: !3676, size: 320, offset: 320)
!3676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3677, line: 11, size: 320, elements: !3678)
!3677 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3678 = !{!3679, !3680, !3681, !3686}
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3676, file: !3677, line: 16, baseType: !735, size: 128)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3676, file: !3677, line: 17, baseType: !215, size: 64, offset: 128)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3676, file: !3677, line: 18, baseType: !3682, size: 64, offset: 192)
!3682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3683, size: 64)
!3683 = !DISubroutineType(types: !3684)
!3684 = !{null, !3685}
!3685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3676, size: 64)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3676, file: !3677, line: 19, baseType: !217, size: 32, offset: 256)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3665, file: !3666, line: 50, baseType: !215, size: 64, offset: 640)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3665, file: !3666, line: 51, baseType: !322, size: 64, offset: 704)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3665, file: !3666, line: 52, baseType: !322, size: 64, offset: 768)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3665, file: !3666, line: 53, baseType: !322, size: 64, offset: 832)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3665, file: !3666, line: 54, baseType: !322, size: 64, offset: 896)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3665, file: !3666, line: 55, baseType: !322, size: 64, offset: 960)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3665, file: !3666, line: 56, baseType: !215, size: 64, offset: 1024)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3665, file: !3666, line: 57, baseType: !215, size: 64, offset: 1088)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3665, file: !3666, line: 58, baseType: !215, size: 64, offset: 1152)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3665, file: !3666, line: 59, baseType: !215, size: 64, offset: 1216)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3665, file: !3666, line: 60, baseType: !215, size: 64, offset: 1280)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3665, file: !3666, line: 61, baseType: !3485, size: 64, offset: 1344)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3665, file: !3666, line: 62, baseType: !682, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3665, file: !3666, line: 63, baseType: !682, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3646, file: !80, line: 583, baseType: !682, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3646, file: !80, line: 584, baseType: !682, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3646, file: !80, line: 585, baseType: !682, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3646, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3646, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3646, file: !80, line: 592, baseType: !314, size: 512, offset: 576)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3646, file: !80, line: 593, baseType: !272, size: 64, offset: 1088)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3646, file: !80, line: 594, baseType: !1804, size: 256, offset: 1152)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3646, file: !80, line: 595, baseType: !1008, size: 128, offset: 1408)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3646, file: !80, line: 596, baseType: !3673, size: 64, offset: 1536)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3646, file: !80, line: 597, baseType: !231, size: 32, offset: 1600)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3646, file: !80, line: 598, baseType: !231, size: 32, offset: 1632)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3646, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3646, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3646, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3646, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3646, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3646, file: !80, line: 604, baseType: !682, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3646, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3646, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3646, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3646, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3646, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3646, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3646, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3646, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3646, file: !80, line: 613, baseType: !236, size: 32, offset: 1792)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3646, file: !80, line: 614, baseType: !236, size: 32, offset: 1824)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3646, file: !80, line: 615, baseType: !272, size: 64, offset: 1856)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3646, file: !80, line: 616, baseType: !272, size: 64, offset: 1920)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3646, file: !80, line: 617, baseType: !272, size: 64, offset: 1984)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3646, file: !80, line: 618, baseType: !272, size: 64, offset: 2048)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3646, file: !80, line: 620, baseType: !3734, size: 64, offset: 2112)
!3734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3735, size: 64)
!3735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !3736)
!3736 = !{!3737, !3738, !3739, !3740}
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3735, file: !80, line: 537, baseType: !608)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3735, file: !80, line: 538, baseType: !7, size: 32)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3735, file: !80, line: 540, baseType: !265, size: 128, offset: 64)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3735, file: !80, line: 543, baseType: !3741, size: 64, offset: 192)
!3741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3742, size: 64)
!3742 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !80, line: 534, flags: DIFlagFwdDecl)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3646, file: !80, line: 621, baseType: !3744, size: 64, offset: 2176)
!3744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3745, size: 64)
!3745 = !DISubroutineType(types: !3746)
!3746 = !{null, !3485, !1272}
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3646, file: !80, line: 622, baseType: !3748, size: 64, offset: 2240)
!3748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3749, size: 64)
!3749 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !3481, file: !73, line: 486, baseType: !3751, size: 64, offset: 4096)
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3752, size: 64)
!3752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !3753)
!3753 = !{!3754, !3755, !3756, !3760, !3761, !3762}
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3752, file: !80, line: 643, baseType: !3513, size: 1472)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3752, file: !80, line: 644, baseType: !3516, size: 64, offset: 1472)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3752, file: !80, line: 645, baseType: !3757, size: 64, offset: 1536)
!3757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3758, size: 64)
!3758 = !DISubroutineType(types: !3759)
!3759 = !{null, !3485, !682}
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3752, file: !80, line: 646, baseType: !3516, size: 64, offset: 1600)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3752, file: !80, line: 647, baseType: !3507, size: 64, offset: 1664)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3752, file: !80, line: 648, baseType: !3507, size: 64, offset: 1728)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !3481, file: !73, line: 493, baseType: !3764, size: 64, offset: 4160)
!3764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3765, size: 64)
!3765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !94, line: 162, size: 1088, elements: !3766)
!3766 = !{!3767, !3768, !3769, !4039, !4040, !4041, !4042, !4043, !4044, !4170, !4171, !4172, !4173, !4174, !4175, !4176}
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3765, file: !94, line: 163, baseType: !265, size: 128)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3765, file: !94, line: 164, baseType: !637, size: 64, offset: 128)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3765, file: !94, line: 165, baseType: !3770, size: 64, offset: 192)
!3770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3771, size: 64)
!3771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3772)
!3772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !94, line: 105, size: 640, elements: !3773)
!3773 = !{!3774, !3892, !3903, !3908, !3912, !3918, !3922, !3926, !4031, !4035}
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3772, file: !94, line: 106, baseType: !3775, size: 64)
!3775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3776, size: 64)
!3776 = !DISubroutineType(types: !3777)
!3777 = !{!236, !3764, !3778, !93}
!3778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3779, size: 64)
!3779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3780, line: 51, size: 1344, elements: !3781)
!3780 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3781 = !{!3782, !3783, !3785, !3786, !3876, !3885, !3886, !3887, !3888, !3889, !3890, !3891}
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3779, file: !3780, line: 52, baseType: !637, size: 64)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3779, file: !3780, line: 53, baseType: !3784, size: 32, offset: 64)
!3784 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3780, line: 28, baseType: !217)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3779, file: !3780, line: 54, baseType: !637, size: 64, offset: 128)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3779, file: !3780, line: 55, baseType: !3787, size: 192, offset: 192)
!3787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3788, line: 17, size: 192, elements: !3789)
!3788 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3789 = !{!3790, !3792, !3875}
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3787, file: !3788, line: 18, baseType: !3791, size: 64)
!3791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3787, size: 64)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3787, file: !3788, line: 19, baseType: !3793, size: 64, offset: 64)
!3793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3794, size: 64)
!3794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3795)
!3795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3788, line: 110, size: 1152, elements: !3796)
!3796 = !{!3797, !3801, !3805, !3811, !3817, !3821, !3825, !3830, !3834, !3835, !3839, !3843, !3847, !3858, !3859, !3860, !3861, !3871}
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3795, file: !3788, line: 111, baseType: !3798, size: 64)
!3798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3799, size: 64)
!3799 = !DISubroutineType(types: !3800)
!3800 = !{!3791, !3791}
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3795, file: !3788, line: 112, baseType: !3802, size: 64, offset: 64)
!3802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3803, size: 64)
!3803 = !DISubroutineType(types: !3804)
!3804 = !{null, !3791}
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3795, file: !3788, line: 113, baseType: !3806, size: 64, offset: 128)
!3806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3807, size: 64)
!3807 = !DISubroutineType(types: !3808)
!3808 = !{!682, !3809}
!3809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3810, size: 64)
!3810 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3787)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3795, file: !3788, line: 114, baseType: !3812, size: 64, offset: 192)
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 64)
!3813 = !DISubroutineType(types: !3814)
!3814 = !{!2158, !3809, !3815}
!3815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3816, size: 64)
!3816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3481)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3795, file: !3788, line: 116, baseType: !3818, size: 64, offset: 256)
!3818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3819, size: 64)
!3819 = !DISubroutineType(types: !3820)
!3820 = !{!682, !3809, !637}
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3795, file: !3788, line: 118, baseType: !3822, size: 64, offset: 320)
!3822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3823, size: 64)
!3823 = !DISubroutineType(types: !3824)
!3824 = !{!236, !3809, !637, !7, !224, !815}
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3795, file: !3788, line: 123, baseType: !3826, size: 64, offset: 384)
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3827, size: 64)
!3827 = !DISubroutineType(types: !3828)
!3828 = !{!236, !3809, !637, !3829, !815}
!3829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3795, file: !3788, line: 126, baseType: !3831, size: 64, offset: 448)
!3831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3832, size: 64)
!3832 = !DISubroutineType(types: !3833)
!3833 = !{!637, !3809}
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3795, file: !3788, line: 127, baseType: !3831, size: 64, offset: 512)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3795, file: !3788, line: 128, baseType: !3836, size: 64, offset: 576)
!3836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3837, size: 64)
!3837 = !DISubroutineType(types: !3838)
!3838 = !{!3791, !3809}
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3795, file: !3788, line: 130, baseType: !3840, size: 64, offset: 640)
!3840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3841, size: 64)
!3841 = !DISubroutineType(types: !3842)
!3842 = !{!3791, !3809, !3791}
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3795, file: !3788, line: 133, baseType: !3844, size: 64, offset: 704)
!3844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3845, size: 64)
!3845 = !DISubroutineType(types: !3846)
!3846 = !{!3791, !3809, !637}
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3795, file: !3788, line: 135, baseType: !3848, size: 64, offset: 768)
!3848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3849, size: 64)
!3849 = !DISubroutineType(types: !3850)
!3850 = !{!236, !3809, !637, !637, !7, !7, !3851}
!3851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3852, size: 64)
!3852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3788, line: 43, size: 640, elements: !3853)
!3853 = !{!3854, !3855, !3856}
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3852, file: !3788, line: 44, baseType: !3791, size: 64)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3852, file: !3788, line: 45, baseType: !7, size: 32, offset: 64)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3852, file: !3788, line: 46, baseType: !3857, size: 512, offset: 128)
!3857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 512, elements: !360)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3795, file: !3788, line: 140, baseType: !3840, size: 64, offset: 832)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3795, file: !3788, line: 143, baseType: !3836, size: 64, offset: 896)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3795, file: !3788, line: 145, baseType: !3798, size: 64, offset: 960)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3795, file: !3788, line: 146, baseType: !3862, size: 64, offset: 1024)
!3862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3863, size: 64)
!3863 = !DISubroutineType(types: !3864)
!3864 = !{!236, !3809, !3865}
!3865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3866, size: 64)
!3866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3788, line: 29, size: 128, elements: !3867)
!3867 = !{!3868, !3869, !3870}
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3866, file: !3788, line: 30, baseType: !7, size: 32)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3866, file: !3788, line: 31, baseType: !7, size: 32, offset: 32)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3866, file: !3788, line: 32, baseType: !3809, size: 64, offset: 64)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3795, file: !3788, line: 148, baseType: !3872, size: 64, offset: 1088)
!3872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3873, size: 64)
!3873 = !DISubroutineType(types: !3874)
!3874 = !{!236, !3809, !3485}
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3787, file: !3788, line: 20, baseType: !3485, size: 64, offset: 128)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3779, file: !3780, line: 57, baseType: !3877, size: 64, offset: 384)
!3877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3878, size: 64)
!3878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3780, line: 31, size: 704, elements: !3879)
!3879 = !{!3880, !3881, !3882, !3883, !3884}
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3878, file: !3780, line: 32, baseType: !663, size: 64)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3878, file: !3780, line: 33, baseType: !236, size: 32, offset: 64)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3878, file: !3780, line: 34, baseType: !224, size: 64, offset: 128)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3878, file: !3780, line: 35, baseType: !3877, size: 64, offset: 192)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3878, file: !3780, line: 43, baseType: !2120, size: 448, offset: 256)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3779, file: !3780, line: 58, baseType: !3877, size: 64, offset: 448)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3779, file: !3780, line: 59, baseType: !3778, size: 64, offset: 512)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3779, file: !3780, line: 60, baseType: !3778, size: 64, offset: 576)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3779, file: !3780, line: 61, baseType: !3778, size: 64, offset: 640)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3779, file: !3780, line: 63, baseType: !2026, size: 512, offset: 704)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3779, file: !3780, line: 65, baseType: !215, size: 64, offset: 1216)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3779, file: !3780, line: 66, baseType: !224, size: 64, offset: 1280)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !3772, file: !94, line: 108, baseType: !3893, size: 64, offset: 64)
!3893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3894, size: 64)
!3894 = !DISubroutineType(types: !3895)
!3895 = !{!236, !3764, !3896, !93}
!3896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3897, size: 64)
!3897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !94, line: 63, size: 640, elements: !3898)
!3898 = !{!3899, !3900, !3901}
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3897, file: !94, line: 64, baseType: !3791, size: 64)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !3897, file: !94, line: 65, baseType: !236, size: 32, offset: 64)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !3897, file: !94, line: 66, baseType: !3902, size: 512, offset: 96)
!3902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, size: 512, elements: !1754)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3772, file: !94, line: 110, baseType: !3904, size: 64, offset: 128)
!3904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3905, size: 64)
!3905 = !DISubroutineType(types: !3906)
!3906 = !{!236, !3764, !7, !3907}
!3907 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !232, line: 164, baseType: !215)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !3772, file: !94, line: 111, baseType: !3909, size: 64, offset: 192)
!3909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3910, size: 64)
!3910 = !DISubroutineType(types: !3911)
!3911 = !{null, !3764, !7}
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !3772, file: !94, line: 112, baseType: !3913, size: 64, offset: 256)
!3913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3914, size: 64)
!3914 = !DISubroutineType(types: !3915)
!3915 = !{!236, !3764, !3778, !3916, !7, !3459, !1729}
!3916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3917, size: 64)
!3917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !217)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3772, file: !94, line: 117, baseType: !3919, size: 64, offset: 320)
!3919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3920, size: 64)
!3920 = !DISubroutineType(types: !3921)
!3921 = !{!236, !3764, !7, !7, !224}
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3772, file: !94, line: 119, baseType: !3923, size: 64, offset: 384)
!3923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3924, size: 64)
!3924 = !DISubroutineType(types: !3925)
!3925 = !{null, !3764, !7, !7}
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3772, file: !94, line: 121, baseType: !3927, size: 64, offset: 448)
!3927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3928, size: 64)
!3928 = !DISubroutineType(types: !3929)
!3929 = !{!236, !3764, !3930, !682}
!3930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3931, size: 64)
!3931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !115, line: 175, size: 448, elements: !3932)
!3932 = !{!3933, !3934, !3935, !3936, !3948, !4028, !4029, !4030}
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3931, file: !115, line: 176, baseType: !217, size: 32)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !3931, file: !115, line: 177, baseType: !7, size: 32, offset: 32)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq", scope: !3931, file: !115, line: 178, baseType: !215, size: 64, offset: 64)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3931, file: !115, line: 179, baseType: !3937, size: 64, offset: 128)
!3937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3938, size: 64)
!3938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_common_data", file: !115, line: 145, size: 256, elements: !3939)
!3939 = !{!3940, !3941, !3942, !3945}
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "state_use_accessors", scope: !3938, file: !115, line: 146, baseType: !7, size: 32)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !3938, file: !115, line: 150, baseType: !224, size: 64, offset: 64)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "msi_desc", scope: !3938, file: !115, line: 151, baseType: !3943, size: 64, offset: 128)
!3943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3944, size: 64)
!3944 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_desc", file: !115, line: 127, flags: DIFlagFwdDecl)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "affinity", scope: !3938, file: !115, line: 152, baseType: !3946, size: 64, offset: 192)
!3946 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !410, line: 756, baseType: !3947)
!3947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, size: 64, elements: !415)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !3931, file: !115, line: 180, baseType: !3949, size: 64, offset: 192)
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3950, size: 64)
!3950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip", file: !115, line: 503, size: 2304, elements: !3951)
!3951 = !{!3952, !3953, !3954, !3958, !3962, !3963, !3964, !3965, !3966, !3967, !3968, !3969, !3975, !3979, !3983, !3984, !3985, !3986, !3987, !3988, !3989, !3990, !3991, !3992, !3996, !3997, !3998, !4004, !4005, !4009, !4013, !4017, !4021, !4025, !4026, !4027}
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "parent_device", scope: !3950, file: !115, line: 504, baseType: !3485, size: 64)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3950, file: !115, line: 505, baseType: !637, size: 64, offset: 64)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "irq_startup", scope: !3950, file: !115, line: 506, baseType: !3955, size: 64, offset: 128)
!3955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3956, size: 64)
!3956 = !DISubroutineType(types: !3957)
!3957 = !{!7, !3930}
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "irq_shutdown", scope: !3950, file: !115, line: 507, baseType: !3959, size: 64, offset: 192)
!3959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3960, size: 64)
!3960 = !DISubroutineType(types: !3961)
!3961 = !{null, !3930}
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "irq_enable", scope: !3950, file: !115, line: 508, baseType: !3959, size: 64, offset: 256)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "irq_disable", scope: !3950, file: !115, line: 509, baseType: !3959, size: 64, offset: 320)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "irq_ack", scope: !3950, file: !115, line: 511, baseType: !3959, size: 64, offset: 384)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask", scope: !3950, file: !115, line: 512, baseType: !3959, size: 64, offset: 448)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask_ack", scope: !3950, file: !115, line: 513, baseType: !3959, size: 64, offset: 512)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "irq_unmask", scope: !3950, file: !115, line: 514, baseType: !3959, size: 64, offset: 576)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "irq_eoi", scope: !3950, file: !115, line: 515, baseType: !3959, size: 64, offset: 640)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_affinity", scope: !3950, file: !115, line: 517, baseType: !3970, size: 64, offset: 704)
!3970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3971, size: 64)
!3971 = !DISubroutineType(types: !3972)
!3972 = !{!236, !3930, !3973, !682}
!3973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3974, size: 64)
!3974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !411)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "irq_retrigger", scope: !3950, file: !115, line: 518, baseType: !3976, size: 64, offset: 768)
!3976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3977, size: 64)
!3977 = !DISubroutineType(types: !3978)
!3978 = !{!236, !3930}
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_type", scope: !3950, file: !115, line: 519, baseType: !3980, size: 64, offset: 832)
!3980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3981, size: 64)
!3981 = !DISubroutineType(types: !3982)
!3982 = !{!236, !3930, !7}
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_wake", scope: !3950, file: !115, line: 520, baseType: !3980, size: 64, offset: 896)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_lock", scope: !3950, file: !115, line: 522, baseType: !3959, size: 64, offset: 960)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_sync_unlock", scope: !3950, file: !115, line: 523, baseType: !3959, size: 64, offset: 1024)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_online", scope: !3950, file: !115, line: 525, baseType: !3959, size: 64, offset: 1088)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_offline", scope: !3950, file: !115, line: 526, baseType: !3959, size: 64, offset: 1152)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "irq_suspend", scope: !3950, file: !115, line: 528, baseType: !3959, size: 64, offset: 1216)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "irq_resume", scope: !3950, file: !115, line: 529, baseType: !3959, size: 64, offset: 1280)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pm_shutdown", scope: !3950, file: !115, line: 530, baseType: !3959, size: 64, offset: 1344)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "irq_calc_mask", scope: !3950, file: !115, line: 532, baseType: !3959, size: 64, offset: 1408)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "irq_print_chip", scope: !3950, file: !115, line: 534, baseType: !3993, size: 64, offset: 1472)
!3993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3994, size: 64)
!3994 = !DISubroutineType(types: !3995)
!3995 = !{null, !3930, !809}
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "irq_request_resources", scope: !3950, file: !115, line: 535, baseType: !3976, size: 64, offset: 1536)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "irq_release_resources", scope: !3950, file: !115, line: 536, baseType: !3959, size: 64, offset: 1600)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "irq_compose_msi_msg", scope: !3950, file: !115, line: 538, baseType: !3999, size: 64, offset: 1664)
!3999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4000, size: 64)
!4000 = !DISubroutineType(types: !4001)
!4001 = !{null, !3930, !4002}
!4002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4003, size: 64)
!4003 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_msg", file: !115, line: 29, flags: DIFlagFwdDecl)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "irq_write_msi_msg", scope: !3950, file: !115, line: 539, baseType: !3999, size: 64, offset: 1728)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "irq_get_irqchip_state", scope: !3950, file: !115, line: 541, baseType: !4006, size: 64, offset: 1792)
!4006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4007, size: 64)
!4007 = !DISubroutineType(types: !4008)
!4008 = !{!236, !3930, !107, !2417}
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_irqchip_state", scope: !3950, file: !115, line: 542, baseType: !4010, size: 64, offset: 1856)
!4010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4011, size: 64)
!4011 = !DISubroutineType(types: !4012)
!4012 = !{!236, !3930, !107, !682}
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_vcpu_affinity", scope: !3950, file: !115, line: 544, baseType: !4014, size: 64, offset: 1920)
!4014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4015, size: 64)
!4015 = !DISubroutineType(types: !4016)
!4016 = !{!236, !3930, !224}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_single", scope: !3950, file: !115, line: 546, baseType: !4018, size: 64, offset: 1984)
!4018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4019, size: 64)
!4019 = !DISubroutineType(types: !4020)
!4020 = !{null, !3930, !7}
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_mask", scope: !3950, file: !115, line: 547, baseType: !4022, size: 64, offset: 2048)
!4022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4023, size: 64)
!4023 = !DISubroutineType(types: !4024)
!4024 = !{null, !3930, !3973}
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_setup", scope: !3950, file: !115, line: 549, baseType: !3976, size: 64, offset: 2112)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_teardown", scope: !3950, file: !115, line: 550, baseType: !3959, size: 64, offset: 2176)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3950, file: !115, line: 552, baseType: !215, size: 64, offset: 2240)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !3931, file: !115, line: 181, baseType: !3764, size: 64, offset: 256)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "parent_data", scope: !3931, file: !115, line: 183, baseType: !3930, size: 64, offset: 320)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "chip_data", scope: !3931, file: !115, line: 185, baseType: !224, size: 64, offset: 384)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !3772, file: !94, line: 122, baseType: !4032, size: 64, offset: 512)
!4032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4033, size: 64)
!4033 = !DISubroutineType(types: !4034)
!4034 = !{null, !3764, !3930}
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !3772, file: !94, line: 123, baseType: !4036, size: 64, offset: 576)
!4036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4037, size: 64)
!4037 = !DISubroutineType(types: !4038)
!4038 = !{!236, !3764, !3896, !3459, !1729}
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !3765, file: !94, line: 166, baseType: !224, size: 64, offset: 256)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3765, file: !94, line: 167, baseType: !7, size: 32, offset: 320)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !3765, file: !94, line: 168, baseType: !7, size: 32, offset: 352)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3765, file: !94, line: 171, baseType: !3791, size: 64, offset: 384)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !3765, file: !94, line: 172, baseType: !93, size: 32, offset: 448)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3765, file: !94, line: 173, baseType: !4045, size: 64, offset: 512)
!4045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4046, size: 64)
!4046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !115, line: 1101, size: 192, elements: !4047)
!4047 = !{!4048, !4049, !4050, !4051, !4052, !4053}
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "irqs_per_chip", scope: !4046, file: !115, line: 1102, baseType: !7, size: 32)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "num_chips", scope: !4046, file: !115, line: 1103, baseType: !7, size: 32, offset: 32)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags_to_clear", scope: !4046, file: !115, line: 1104, baseType: !7, size: 32, offset: 64)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags_to_set", scope: !4046, file: !115, line: 1105, baseType: !7, size: 32, offset: 96)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "gc_flags", scope: !4046, file: !115, line: 1106, baseType: !114, size: 32, offset: 128)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !4046, file: !115, line: 1107, baseType: !4054, offset: 192)
!4054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4055, elements: !2752)
!4055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4056, size: 64)
!4056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_generic", file: !115, line: 1051, size: 960, elements: !4057)
!4057 = !{!4058, !4059, !4060, !4064, !4068, !4072, !4073, !4074, !4075, !4076, !4077, !4078, !4079, !4080, !4081, !4082, !4083, !4084, !4085, !4086}
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4056, file: !115, line: 1052, baseType: !339)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "reg_base", scope: !4056, file: !115, line: 1053, baseType: !224, size: 64)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "reg_readl", scope: !4056, file: !115, line: 1054, baseType: !4061, size: 64, offset: 64)
!4061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4062, size: 64)
!4062 = !DISubroutineType(types: !4063)
!4063 = !{!217, !224}
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "reg_writel", scope: !4056, file: !115, line: 1055, baseType: !4065, size: 64, offset: 128)
!4065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4066, size: 64)
!4066 = !DISubroutineType(types: !4067)
!4067 = !{null, !217, !224}
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4056, file: !115, line: 1056, baseType: !4069, size: 64, offset: 192)
!4069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4070, size: 64)
!4070 = !DISubroutineType(types: !4071)
!4071 = !{null, !4055}
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4056, file: !115, line: 1057, baseType: !4069, size: 64, offset: 256)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "irq_base", scope: !4056, file: !115, line: 1058, baseType: !7, size: 32, offset: 320)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cnt", scope: !4056, file: !115, line: 1059, baseType: !7, size: 32, offset: 352)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache", scope: !4056, file: !115, line: 1060, baseType: !217, size: 32, offset: 384)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "type_cache", scope: !4056, file: !115, line: 1061, baseType: !217, size: 32, offset: 416)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "polarity_cache", scope: !4056, file: !115, line: 1062, baseType: !217, size: 32, offset: 448)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "wake_enabled", scope: !4056, file: !115, line: 1063, baseType: !217, size: 32, offset: 480)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "wake_active", scope: !4056, file: !115, line: 1064, baseType: !217, size: 32, offset: 512)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "num_ct", scope: !4056, file: !115, line: 1065, baseType: !7, size: 32, offset: 544)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !4056, file: !115, line: 1066, baseType: !224, size: 64, offset: 576)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "installed", scope: !4056, file: !115, line: 1067, baseType: !215, size: 64, offset: 640)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !4056, file: !115, line: 1068, baseType: !215, size: 64, offset: 704)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !4056, file: !115, line: 1069, baseType: !3764, size: 64, offset: 768)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4056, file: !115, line: 1070, baseType: !265, size: 128, offset: 832)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "chip_types", scope: !4056, file: !115, line: 1071, baseType: !4087, offset: 960)
!4087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4088, elements: !2752)
!4088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_type", file: !115, line: 1009, size: 2944, elements: !4089)
!4089 = !{!4090, !4091, !4101, !4167, !4168, !4169}
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !4088, file: !115, line: 1010, baseType: !3950, size: 2304)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4088, file: !115, line: 1011, baseType: !4092, size: 448, offset: 2304)
!4092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_regs", file: !115, line: 986, size: 448, elements: !4093)
!4093 = !{!4094, !4095, !4096, !4097, !4098, !4099, !4100}
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !4092, file: !115, line: 987, baseType: !215, size: 64)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !4092, file: !115, line: 988, baseType: !215, size: 64, offset: 64)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4092, file: !115, line: 989, baseType: !215, size: 64, offset: 128)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "ack", scope: !4092, file: !115, line: 990, baseType: !215, size: 64, offset: 192)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "eoi", scope: !4092, file: !115, line: 991, baseType: !215, size: 64, offset: 256)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4092, file: !115, line: 992, baseType: !215, size: 64, offset: 320)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !4092, file: !115, line: 993, baseType: !215, size: 64, offset: 384)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4088, file: !115, line: 1012, baseType: !4102, size: 64, offset: 2752)
!4102 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_flow_handler_t", file: !4103, line: 12, baseType: !4104)
!4103 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!4104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4105, size: 64)
!4105 = !DISubroutineType(types: !4106)
!4106 = !{null, !4107}
!4107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4108, size: 64)
!4108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_desc", file: !4109, line: 55, size: 2880, elements: !4110)
!4109 = !DIFile(filename: "./include/linux/irqdesc.h", directory: "/home/lizy2001/genbc/linux")
!4110 = !{!4111, !4112, !4113, !4114, !4115, !4139, !4140, !4141, !4142, !4143, !4144, !4145, !4146, !4147, !4148, !4149, !4150, !4152, !4153, !4154, !4155, !4156, !4157, !4158, !4159, !4160, !4161, !4162, !4163, !4164, !4165, !4166}
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "irq_common_data", scope: !4108, file: !4109, line: 56, baseType: !3938, size: 256)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "irq_data", scope: !4108, file: !4109, line: 57, baseType: !3931, size: 448, offset: 256)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "kstat_irqs", scope: !4108, file: !4109, line: 58, baseType: !1729, size: 64, offset: 704)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "handle_irq", scope: !4108, file: !4109, line: 59, baseType: !4102, size: 64, offset: 768)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !4108, file: !4109, line: 60, baseType: !4116, size: 64, offset: 832)
!4116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4117, size: 64)
!4117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irqaction", file: !108, line: 110, size: 768, elements: !4118)
!4118 = !{!4119, !4125, !4126, !4127, !4128, !4129, !4130, !4131, !4132, !4133, !4134, !4135, !4136}
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4117, file: !108, line: 111, baseType: !4120, size: 64)
!4120 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !108, line: 92, baseType: !4121)
!4121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4122, size: 64)
!4122 = !DISubroutineType(types: !4123)
!4123 = !{!4124, !236, !224}
!4124 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !123, line: 17, baseType: !122)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !4117, file: !108, line: 112, baseType: !224, size: 64, offset: 64)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_dev_id", scope: !4117, file: !108, line: 113, baseType: !224, size: 64, offset: 128)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4117, file: !108, line: 114, baseType: !4116, size: 64, offset: 192)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "thread_fn", scope: !4117, file: !108, line: 115, baseType: !4120, size: 64, offset: 256)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !4117, file: !108, line: 116, baseType: !206, size: 64, offset: 320)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4117, file: !108, line: 117, baseType: !4116, size: 64, offset: 384)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4117, file: !108, line: 118, baseType: !7, size: 32, offset: 448)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4117, file: !108, line: 119, baseType: !7, size: 32, offset: 480)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "thread_flags", scope: !4117, file: !108, line: 120, baseType: !215, size: 64, offset: 512)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "thread_mask", scope: !4117, file: !108, line: 121, baseType: !215, size: 64, offset: 576)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4117, file: !108, line: 122, baseType: !637, size: 64, offset: 640)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4117, file: !108, line: 123, baseType: !4137, size: 64, offset: 704)
!4137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4138, size: 64)
!4138 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !4109, line: 14, flags: DIFlagFwdDecl)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "status_use_accessors", scope: !4108, file: !4109, line: 61, baseType: !7, size: 32, offset: 896)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "core_internal_state__do_not_mess_with_it", scope: !4108, file: !4109, line: 62, baseType: !7, size: 32, offset: 928)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !4108, file: !4109, line: 63, baseType: !7, size: 32, offset: 960)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "wake_depth", scope: !4108, file: !4109, line: 64, baseType: !7, size: 32, offset: 992)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "tot_count", scope: !4108, file: !4109, line: 65, baseType: !7, size: 32, offset: 1024)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "irq_count", scope: !4108, file: !4109, line: 66, baseType: !7, size: 32, offset: 1056)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "last_unhandled", scope: !4108, file: !4109, line: 67, baseType: !215, size: 64, offset: 1088)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "irqs_unhandled", scope: !4108, file: !4109, line: 68, baseType: !7, size: 32, offset: 1152)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "threads_handled", scope: !4108, file: !4109, line: 69, baseType: !231, size: 32, offset: 1184)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "threads_handled_last", scope: !4108, file: !4109, line: 70, baseType: !236, size: 32, offset: 1216)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4108, file: !4109, line: 71, baseType: !339, offset: 1248)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_enabled", scope: !4108, file: !4109, line: 72, baseType: !4151, size: 64, offset: 1280)
!4151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 64)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_affinity", scope: !4108, file: !4109, line: 73, baseType: !3973, size: 64, offset: 1344)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "threads_oneshot", scope: !4108, file: !4109, line: 81, baseType: !215, size: 64, offset: 1408)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "threads_active", scope: !4108, file: !4109, line: 82, baseType: !231, size: 32, offset: 1472)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "wait_for_threads", scope: !4108, file: !4109, line: 83, baseType: !1008, size: 128, offset: 1536)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "nr_actions", scope: !4108, file: !4109, line: 85, baseType: !7, size: 32, offset: 1664)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "no_suspend_depth", scope: !4108, file: !4109, line: 86, baseType: !7, size: 32, offset: 1696)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "cond_suspend_depth", scope: !4108, file: !4109, line: 87, baseType: !7, size: 32, offset: 1728)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "force_resume_depth", scope: !4108, file: !4109, line: 88, baseType: !7, size: 32, offset: 1760)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4108, file: !4109, line: 91, baseType: !4137, size: 64, offset: 1792)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4108, file: !4109, line: 98, baseType: !874, size: 128, align: 64, offset: 1856)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4108, file: !4109, line: 99, baseType: !2026, size: 512, offset: 1984)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "request_mutex", scope: !4108, file: !4109, line: 101, baseType: !824, size: 192, offset: 2496)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "parent_irq", scope: !4108, file: !4109, line: 102, baseType: !236, size: 32, offset: 2688)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4108, file: !4109, line: 103, baseType: !202, size: 64, offset: 2752)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4108, file: !4109, line: 104, baseType: !637, size: 64, offset: 2816)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4088, file: !115, line: 1013, baseType: !217, size: 32, offset: 2816)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache_priv", scope: !4088, file: !115, line: 1014, baseType: !217, size: 32, offset: 2848)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache", scope: !4088, file: !115, line: 1015, baseType: !2791, size: 64, offset: 2880)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3765, file: !94, line: 175, baseType: !3764, size: 64, offset: 576)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !3765, file: !94, line: 182, baseType: !3907, size: 64, offset: 640)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !3765, file: !94, line: 183, baseType: !7, size: 32, offset: 704)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !3765, file: !94, line: 184, baseType: !7, size: 32, offset: 736)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !3765, file: !94, line: 185, baseType: !2207, size: 128, offset: 768)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !3765, file: !94, line: 186, baseType: !824, size: 192, offset: 896)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !3765, file: !94, line: 187, baseType: !4177, offset: 1088)
!4177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2752)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !3481, file: !73, line: 499, baseType: !265, size: 128, offset: 4224)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !3481, file: !73, line: 502, baseType: !4180, size: 64, offset: 4352)
!4180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4181, size: 64)
!4181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4182)
!4182 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !73, line: 502, flags: DIFlagFwdDecl)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !3481, file: !73, line: 504, baseType: !4184, size: 64, offset: 4416)
!4184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !3481, file: !73, line: 505, baseType: !272, size: 64, offset: 4480)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !3481, file: !73, line: 510, baseType: !272, size: 64, offset: 4544)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !3481, file: !73, line: 511, baseType: !4188, size: 64, offset: 4608)
!4188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4189, size: 64)
!4189 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4190)
!4190 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !3481, file: !73, line: 513, baseType: !4192, size: 64, offset: 4672)
!4192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4193, size: 64)
!4193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !4194)
!4194 = !{!4195, !4196}
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4193, file: !73, line: 293, baseType: !7, size: 32)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4193, file: !73, line: 294, baseType: !215, size: 64, offset: 64)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !3481, file: !73, line: 515, baseType: !265, size: 128, offset: 4736)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !3481, file: !73, line: 526, baseType: !4199, offset: 4864)
!4199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4200, line: 5, elements: !281)
!4200 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !3481, file: !73, line: 528, baseType: !3778, size: 64, offset: 4864)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3481, file: !73, line: 529, baseType: !3791, size: 64, offset: 4928)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !3481, file: !73, line: 534, baseType: !696, size: 32, offset: 4992)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3481, file: !73, line: 535, baseType: !217, size: 32, offset: 5024)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !3481, file: !73, line: 537, baseType: !608, offset: 5056)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !3481, file: !73, line: 538, baseType: !265, size: 128, offset: 5056)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3481, file: !73, line: 540, baseType: !4208, size: 64, offset: 5184)
!4208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4209, size: 64)
!4209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4210, line: 54, size: 960, elements: !4211)
!4210 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4211 = !{!4212, !4213, !4214, !4215, !4216, !4217, !4218, !4222, !4226, !4227, !4228, !4229, !4233, !4237, !4238}
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4209, file: !4210, line: 55, baseType: !637, size: 64)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4209, file: !4210, line: 56, baseType: !202, size: 64, offset: 64)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4209, file: !4210, line: 58, baseType: !2105, size: 64, offset: 128)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4209, file: !4210, line: 59, baseType: !2105, size: 64, offset: 192)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4209, file: !4210, line: 60, baseType: !2032, size: 64, offset: 256)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4209, file: !4210, line: 62, baseType: !3498, size: 64, offset: 320)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4209, file: !4210, line: 63, baseType: !4219, size: 64, offset: 384)
!4219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4220, size: 64)
!4220 = !DISubroutineType(types: !4221)
!4221 = !{!663, !3485, !3505}
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4209, file: !4210, line: 65, baseType: !4223, size: 64, offset: 448)
!4223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4224, size: 64)
!4224 = !DISubroutineType(types: !4225)
!4225 = !{null, !4208}
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4209, file: !4210, line: 66, baseType: !3507, size: 64, offset: 512)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4209, file: !4210, line: 68, baseType: !3516, size: 64, offset: 576)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4209, file: !4210, line: 70, baseType: !2141, size: 64, offset: 640)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4209, file: !4210, line: 71, baseType: !4230, size: 64, offset: 704)
!4230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4231, size: 64)
!4231 = !DISubroutineType(types: !4232)
!4232 = !{!2158, !3485}
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4209, file: !4210, line: 73, baseType: !4234, size: 64, offset: 768)
!4234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4235, size: 64)
!4235 = !DISubroutineType(types: !4236)
!4236 = !{null, !3485, !2175, !2176}
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4209, file: !4210, line: 75, baseType: !3511, size: 64, offset: 832)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4209, file: !4210, line: 77, baseType: !3628, size: 64, offset: 896)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3481, file: !73, line: 541, baseType: !2105, size: 64, offset: 5248)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3481, file: !73, line: 543, baseType: !3507, size: 64, offset: 5312)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !3481, file: !73, line: 544, baseType: !4242, size: 64, offset: 5376)
!4242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4243, size: 64)
!4243 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !3481, file: !73, line: 545, baseType: !4245, size: 64, offset: 5440)
!4245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4246, size: 64)
!4246 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !3481, file: !73, line: 547, baseType: !682, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3481, file: !73, line: 548, baseType: !682, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !3481, file: !73, line: 549, baseType: !682, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !3481, file: !73, line: 550, baseType: !682, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "chrdev", scope: !3477, file: !3473, line: 49, baseType: !2022, size: 832, offset: 5632)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "mockdev", scope: !3477, file: !3473, line: 50, baseType: !3485, size: 64, offset: 6464)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3477, file: !3473, line: 51, baseType: !202, size: 64, offset: 6528)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !3477, file: !3473, line: 52, baseType: !4255, size: 64, offset: 6592)
!4255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4256, size: 64)
!4256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_chip", file: !4257, line: 358, size: 4608, elements: !4258)
!4257 = !DIFile(filename: "./include/linux/gpio/driver.h", directory: "/home/lizy2001/genbc/linux")
!4258 = !{!4259, !4260, !4261, !4262, !4263, !4267, !4271, !4272, !4273, !4277, !4278, !4282, !4286, !4290, !4294, !4295, !4299, !4303, !4307, !4308, !4309, !4312, !4313, !4317, !4321, !4322, !4323, !4324, !4325, !4326, !4327, !4328, !4329, !4330, !4331, !4332, !4375, !4376, !4377, !4378}
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !4256, file: !4257, line: 359, baseType: !637, size: 64)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "gpiodev", scope: !4256, file: !4257, line: 360, baseType: !3476, size: 64, offset: 64)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4256, file: !4257, line: 361, baseType: !3485, size: 64, offset: 128)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4256, file: !4257, line: 362, baseType: !202, size: 64, offset: 192)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4256, file: !4257, line: 364, baseType: !4264, size: 64, offset: 256)
!4264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4265, size: 64)
!4265 = !DISubroutineType(types: !4266)
!4266 = !{!236, !4255, !7}
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4256, file: !4257, line: 366, baseType: !4268, size: 64, offset: 320)
!4268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4269, size: 64)
!4269 = !DISubroutineType(types: !4270)
!4270 = !{null, !4255, !7}
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "get_direction", scope: !4256, file: !4257, line: 368, baseType: !4264, size: 64, offset: 384)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "direction_input", scope: !4256, file: !4257, line: 370, baseType: !4264, size: 64, offset: 448)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "direction_output", scope: !4256, file: !4257, line: 372, baseType: !4274, size: 64, offset: 512)
!4274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4275, size: 64)
!4275 = !DISubroutineType(types: !4276)
!4276 = !{!236, !4255, !7, !236}
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4256, file: !4257, line: 374, baseType: !4264, size: 64, offset: 576)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "get_multiple", scope: !4256, file: !4257, line: 376, baseType: !4279, size: 64, offset: 640)
!4279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4280, size: 64)
!4280 = !DISubroutineType(types: !4281)
!4281 = !{!236, !4255, !3459, !3459}
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !4256, file: !4257, line: 379, baseType: !4283, size: 64, offset: 704)
!4283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4284, size: 64)
!4284 = !DISubroutineType(types: !4285)
!4285 = !{null, !4255, !7, !236}
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "set_multiple", scope: !4256, file: !4257, line: 381, baseType: !4287, size: 64, offset: 768)
!4287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4288, size: 64)
!4288 = !DISubroutineType(types: !4289)
!4289 = !{null, !4255, !3459, !3459}
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "set_config", scope: !4256, file: !4257, line: 384, baseType: !4291, size: 64, offset: 832)
!4291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4292, size: 64)
!4292 = !DISubroutineType(types: !4293)
!4293 = !{!236, !4255, !7, !215}
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "to_irq", scope: !4256, file: !4257, line: 387, baseType: !4264, size: 64, offset: 896)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "dbg_show", scope: !4256, file: !4257, line: 390, baseType: !4296, size: 64, offset: 960)
!4296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4297, size: 64)
!4297 = !DISubroutineType(types: !4298)
!4298 = !{null, !809, !4255}
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "init_valid_mask", scope: !4256, file: !4257, line: 393, baseType: !4300, size: 64, offset: 1024)
!4300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4301, size: 64)
!4301 = !DISubroutineType(types: !4302)
!4302 = !{!236, !4255, !3459, !7}
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "add_pin_ranges", scope: !4256, file: !4257, line: 397, baseType: !4304, size: 64, offset: 1088)
!4304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4305, size: 64)
!4305 = !DISubroutineType(types: !4306)
!4306 = !{!236, !4255}
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4256, file: !4257, line: 399, baseType: !236, size: 32, offset: 1152)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "ngpio", scope: !4256, file: !4257, line: 400, baseType: !922, size: 16, offset: 1184)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "names", scope: !4256, file: !4257, line: 401, baseType: !4310, size: 64, offset: 1216)
!4310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4311, size: 64)
!4311 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !637)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "can_sleep", scope: !4256, file: !4257, line: 402, baseType: !682, size: 8, offset: 1280)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "read_reg", scope: !4256, file: !4257, line: 405, baseType: !4314, size: 64, offset: 1344)
!4314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4315, size: 64)
!4315 = !DISubroutineType(types: !4316)
!4316 = !{!215, !224}
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "write_reg", scope: !4256, file: !4257, line: 406, baseType: !4318, size: 64, offset: 1408)
!4318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4319, size: 64)
!4319 = !DISubroutineType(types: !4320)
!4320 = !{null, !224, !215}
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "be_bits", scope: !4256, file: !4257, line: 407, baseType: !682, size: 8, offset: 1472)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "reg_dat", scope: !4256, file: !4257, line: 408, baseType: !224, size: 64, offset: 1536)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "reg_set", scope: !4256, file: !4257, line: 409, baseType: !224, size: 64, offset: 1600)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "reg_clr", scope: !4256, file: !4257, line: 410, baseType: !224, size: 64, offset: 1664)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "reg_dir_out", scope: !4256, file: !4257, line: 411, baseType: !224, size: 64, offset: 1728)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "reg_dir_in", scope: !4256, file: !4257, line: 412, baseType: !224, size: 64, offset: 1792)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "bgpio_dir_unreadable", scope: !4256, file: !4257, line: 413, baseType: !682, size: 8, offset: 1856)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "bgpio_bits", scope: !4256, file: !4257, line: 414, baseType: !236, size: 32, offset: 1888)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "bgpio_lock", scope: !4256, file: !4257, line: 415, baseType: !608, offset: 1920)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "bgpio_data", scope: !4256, file: !4257, line: 416, baseType: !215, size: 64, offset: 1920)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "bgpio_dir", scope: !4256, file: !4257, line: 417, baseType: !215, size: 64, offset: 1984)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4256, file: !4257, line: 432, baseType: !4333, size: 2304, offset: 2048)
!4333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_irq_chip", file: !4257, line: 31, size: 2304, elements: !4334)
!4334 = !{!4335, !4336, !4337, !4338, !4339, !4340, !4344, !4348, !4352, !4353, !4354, !4355, !4357, !4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4369, !4370, !4371, !4372, !4373, !4374}
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !4333, file: !4257, line: 37, baseType: !3949, size: 64)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !4333, file: !4257, line: 45, baseType: !3764, size: 64, offset: 64)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "domain_ops", scope: !4333, file: !4257, line: 52, baseType: !3770, size: 64, offset: 128)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4333, file: !4257, line: 61, baseType: !3791, size: 64, offset: 192)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "parent_domain", scope: !4333, file: !4257, line: 71, baseType: !3764, size: 64, offset: 256)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "child_to_parent_hwirq", scope: !4333, file: !4257, line: 90, baseType: !4341, size: 64, offset: 320)
!4341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4342, size: 64)
!4342 = !DISubroutineType(types: !4343)
!4343 = !{!236, !4255, !7, !7, !1729, !1729}
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "populate_parent_alloc_arg", scope: !4333, file: !4257, line: 105, baseType: !4345, size: 64, offset: 384)
!4345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4346, size: 64)
!4346 = !DISubroutineType(types: !4347)
!4347 = !{!224, !4255, !7, !7}
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "child_offset_to_irq", scope: !4333, file: !4257, line: 117, baseType: !4349, size: 64, offset: 448)
!4349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4350, size: 64)
!4350 = !DISubroutineType(types: !4351)
!4351 = !{!7, !4255, !7}
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "child_irq_domain_ops", scope: !4333, file: !4257, line: 128, baseType: !3772, size: 640, offset: 512)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4333, file: !4257, line: 137, baseType: !4102, size: 64, offset: 1152)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "default_type", scope: !4333, file: !4257, line: 145, baseType: !7, size: 32, offset: 1216)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4333, file: !4257, line: 152, baseType: !4356, size: 64, offset: 1280)
!4356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "request_key", scope: !4333, file: !4257, line: 159, baseType: !4356, size: 64, offset: 1344)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "parent_handler", scope: !4333, file: !4257, line: 167, baseType: !4102, size: 64, offset: 1408)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "parent_handler_data", scope: !4333, file: !4257, line: 175, baseType: !224, size: 64, offset: 1472)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "num_parents", scope: !4333, file: !4257, line: 182, baseType: !7, size: 32, offset: 1536)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "parents", scope: !4333, file: !4257, line: 190, baseType: !1729, size: 64, offset: 1600)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !4333, file: !4257, line: 197, baseType: !1729, size: 64, offset: 1664)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "threaded", scope: !4333, file: !4257, line: 204, baseType: !682, size: 8, offset: 1728)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "init_hw", scope: !4333, file: !4257, line: 212, baseType: !4304, size: 64, offset: 1792)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "init_valid_mask", scope: !4333, file: !4257, line: 223, baseType: !4366, size: 64, offset: 1856)
!4366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4367, size: 64)
!4367 = !DISubroutineType(types: !4368)
!4368 = !{null, !4255, !3459, !7}
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "valid_mask", scope: !4333, file: !4257, line: 233, baseType: !3459, size: 64, offset: 1920)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4333, file: !4257, line: 241, baseType: !7, size: 32, offset: 1984)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "irq_enable", scope: !4333, file: !4257, line: 248, baseType: !3959, size: 64, offset: 2048)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "irq_disable", scope: !4333, file: !4257, line: 255, baseType: !3959, size: 64, offset: 2112)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "irq_unmask", scope: !4333, file: !4257, line: 261, baseType: !3959, size: 64, offset: 2176)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask", scope: !4333, file: !4257, line: 268, baseType: !3959, size: 64, offset: 2240)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "valid_mask", scope: !4256, file: !4257, line: 441, baseType: !3459, size: 64, offset: 4352)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !4256, file: !4257, line: 454, baseType: !3778, size: 64, offset: 4416)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "of_gpio_n_cells", scope: !4256, file: !4257, line: 461, baseType: !7, size: 32, offset: 4480)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "of_xlate", scope: !4256, file: !4257, line: 469, baseType: !4379, size: 64, offset: 4544)
!4379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4380, size: 64)
!4380 = !DISubroutineType(types: !4381)
!4381 = !{!236, !4255, !4382, !2791}
!4382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4383, size: 64)
!4383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4384)
!4384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_phandle_args", file: !3780, line: 74, size: 640, elements: !4385)
!4385 = !{!4386, !4387, !4388}
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "np", scope: !4384, file: !3780, line: 75, baseType: !3778, size: 64)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "args_count", scope: !4384, file: !3780, line: 76, baseType: !236, size: 32, offset: 64)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4384, file: !3780, line: 77, baseType: !4389, size: 512, offset: 96)
!4389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1303, size: 512, elements: !1754)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "descs", scope: !3477, file: !3473, line: 53, baseType: !3471, size: 64, offset: 6656)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3477, file: !3473, line: 54, baseType: !236, size: 32, offset: 6720)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "ngpio", scope: !3477, file: !3473, line: 55, baseType: !922, size: 16, offset: 6752)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !3477, file: !3473, line: 56, baseType: !637, size: 64, offset: 6784)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3477, file: !3473, line: 57, baseType: !224, size: 64, offset: 6848)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3477, file: !3473, line: 58, baseType: !265, size: 128, offset: 6912)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "notifier", scope: !3477, file: !3473, line: 59, baseType: !4397, size: 320, offset: 7040)
!4397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !4398, line: 65, size: 320, elements: !4399)
!4398 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!4399 = !{!4400, !4401}
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !4397, file: !4398, line: 66, baseType: !1280, size: 256)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4397, file: !4398, line: 67, baseType: !4402, size: 64, offset: 256)
!4402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4403, size: 64)
!4403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !4398, line: 54, size: 192, elements: !4404)
!4404 = !{!4405, !4410, !4411}
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !4403, file: !4398, line: 55, baseType: !4406, size: 64)
!4406 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !4398, line: 51, baseType: !4407)
!4407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4408, size: 64)
!4408 = !DISubroutineType(types: !4409)
!4409 = !{!236, !4402, !215, !224}
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4403, file: !4398, line: 56, baseType: !4402, size: 64, offset: 64)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !4403, file: !4398, line: 57, baseType: !236, size: 32, offset: 128)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3472, file: !3473, line: 101, baseType: !215, size: 64, offset: 64)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !3472, file: !3473, line: 121, baseType: !637, size: 64, offset: 128)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3472, file: !3473, line: 123, baseType: !637, size: 64, offset: 192)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "debounce_period_us", scope: !3472, file: !3473, line: 129, baseType: !7, size: 32, offset: 256)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !3468, file: !3, line: 429, baseType: !4417, size: 64, offset: 64)
!4417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4418, size: 64)
!4418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linereq", file: !3, line: 478, size: 832, elements: !4419)
!4419 = !{!4420, !4421, !4422, !4423, !4424, !4425, !4461, !4462, !4463}
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "gdev", scope: !4418, file: !3, line: 479, baseType: !3476, size: 64)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !4418, file: !3, line: 480, baseType: !637, size: 64, offset: 64)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "num_lines", scope: !4418, file: !3, line: 481, baseType: !217, size: 32, offset: 128)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !4418, file: !3, line: 482, baseType: !1008, size: 128, offset: 192)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "event_buffer_size", scope: !4418, file: !3, line: 483, baseType: !217, size: 32, offset: 320)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !4418, file: !3, line: 484, baseType: !4426, size: 192, offset: 384)
!4426 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4418, file: !3, line: 484, size: 192, elements: !4427)
!4427 = !{!4428, !4459}
!4428 = !DIDerivedType(tag: DW_TAG_member, scope: !4426, file: !3, line: 484, baseType: !4429, size: 192)
!4429 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4426, file: !3, line: 484, size: 192, elements: !4430)
!4430 = !{!4431, !4440, !4451, !4454, !4457, !4458}
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "kfifo", scope: !4429, file: !3, line: 484, baseType: !4432, size: 192)
!4432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kfifo", file: !4433, line: 44, size: 192, elements: !4434)
!4433 = !DIFile(filename: "./include/linux/kfifo.h", directory: "/home/lizy2001/genbc/linux")
!4434 = !{!4435, !4436, !4437, !4438, !4439}
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !4432, file: !4433, line: 45, baseType: !7, size: 32)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !4432, file: !4433, line: 46, baseType: !7, size: 32, offset: 32)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4432, file: !4433, line: 47, baseType: !7, size: 32, offset: 64)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "esize", scope: !4432, file: !4433, line: 48, baseType: !7, size: 32, offset: 96)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4432, file: !4433, line: 49, baseType: !224, size: 64, offset: 128)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4429, file: !3, line: 484, baseType: !4441, size: 64)
!4441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4442, size: 64)
!4442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_v2_line_event", file: !134, line: 284, size: 384, elements: !4443)
!4443 = !{!4444, !4445, !4446, !4447, !4448, !4449}
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp_ns", scope: !4442, file: !134, line: 285, baseType: !273, size: 64, align: 64)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4442, file: !134, line: 286, baseType: !219, size: 32, offset: 64)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4442, file: !134, line: 287, baseType: !219, size: 32, offset: 96)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "seqno", scope: !4442, file: !134, line: 288, baseType: !219, size: 32, offset: 128)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "line_seqno", scope: !4442, file: !134, line: 289, baseType: !219, size: 32, offset: 160)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4442, file: !134, line: 291, baseType: !4450, size: 192, offset: 192)
!4450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !219, size: 192, elements: !1325)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "const_type", scope: !4429, file: !3, line: 484, baseType: !4452, size: 64)
!4452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4453, size: 64)
!4453 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4442)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "rectype", scope: !4429, file: !3, line: 484, baseType: !4455, size: 64)
!4455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4456, size: 64)
!4456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !639, elements: !1423)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4429, file: !3, line: 484, baseType: !4441, size: 64)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_const", scope: !4429, file: !3, line: 484, baseType: !4452, size: 64)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4426, file: !3, line: 484, baseType: !4460, offset: 192)
!4460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4442, elements: !1423)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "seqno", scope: !4418, file: !3, line: 485, baseType: !231, size: 32, offset: 576)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "config_mutex", scope: !4418, file: !3, line: 486, baseType: !824, size: 192, offset: 640)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !4418, file: !3, line: 487, baseType: !4464, offset: 832)
!4464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3468, elements: !2752)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !3468, file: !3, line: 430, baseType: !7, size: 32, offset: 128)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "eflags", scope: !3468, file: !3, line: 431, baseType: !272, size: 64, offset: 192)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp_ns", scope: !3468, file: !3, line: 437, baseType: !272, size: 64, offset: 256)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "req_seqno", scope: !3468, file: !3, line: 438, baseType: !217, size: 32, offset: 320)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "line_seqno", scope: !3468, file: !3, line: 444, baseType: !217, size: 32, offset: 352)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3468, file: !3, line: 448, baseType: !4471, size: 704, offset: 384)
!4471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !165, line: 115, size: 704, elements: !4472)
!4472 = !{!4473, !4474, !4475, !4476}
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4471, file: !165, line: 116, baseType: !1804, size: 256)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4471, file: !165, line: 117, baseType: !3676, size: 320, offset: 256)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !4471, file: !165, line: 120, baseType: !1782, size: 64, offset: 576)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !4471, file: !165, line: 121, baseType: !236, size: 32, offset: 640)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "sw_debounced", scope: !3468, file: !3, line: 454, baseType: !7, size: 32, offset: 1088)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !3468, file: !3, line: 460, baseType: !7, size: 32, offset: 1120)
!4479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3455, size: 64)
!4480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4481, size: 64)
!4481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_chardev_data", file: !3, line: 1952, size: 74432, elements: !4482)
!4482 = !{!4483, !4484, !4485, !4534, !4535, !4536}
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "gdev", scope: !4481, file: !3, line: 1953, baseType: !3476, size: 64)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !4481, file: !3, line: 1954, baseType: !1008, size: 128, offset: 64)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !4481, file: !3, line: 1955, baseType: !4486, size: 73920, offset: 192)
!4486 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4481, file: !3, line: 1955, size: 73920, elements: !4487)
!4487 = !{!4488, !4532}
!4488 = !DIDerivedType(tag: DW_TAG_member, scope: !4486, file: !3, line: 1955, baseType: !4489, size: 192)
!4489 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4486, file: !3, line: 1955, size: 192, elements: !4490)
!4490 = !{!4491, !4492, !4526, !4529, !4530, !4531}
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "kfifo", scope: !4489, file: !3, line: 1955, baseType: !4432, size: 192)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4489, file: !3, line: 1955, baseType: !4493, size: 64)
!4493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4494, size: 64)
!4494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_v2_line_info_changed", file: !134, line: 252, size: 2304, elements: !4495)
!4495 = !{!4496, !4520, !4521, !4522}
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4494, file: !134, line: 253, baseType: !4497, size: 2048)
!4497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_v2_line_info", file: !134, line: 219, size: 2048, elements: !4498)
!4498 = !{!4499, !4500, !4501, !4502, !4503, !4504, !4518}
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4497, file: !134, line: 220, baseType: !1746, size: 256)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "consumer", scope: !4497, file: !134, line: 221, baseType: !1746, size: 256, offset: 256)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4497, file: !134, line: 222, baseType: !219, size: 32, offset: 512)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "num_attrs", scope: !4497, file: !134, line: 223, baseType: !219, size: 32, offset: 544)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4497, file: !134, line: 224, baseType: !273, size: 64, align: 64, offset: 576)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !4497, file: !134, line: 225, baseType: !4505, size: 1280, offset: 640)
!4505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4506, size: 1280, elements: !4516)
!4506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_v2_line_attribute", file: !134, line: 125, size: 128, elements: !4507)
!4507 = !{!4508, !4509, !4510}
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4506, file: !134, line: 126, baseType: !219, size: 32)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4506, file: !134, line: 127, baseType: !219, size: 32, offset: 32)
!4510 = !DIDerivedType(tag: DW_TAG_member, scope: !4506, file: !134, line: 128, baseType: !4511, size: 64, offset: 64)
!4511 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4506, file: !134, line: 128, size: 64, elements: !4512)
!4512 = !{!4513, !4514, !4515}
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4511, file: !134, line: 129, baseType: !273, size: 64, align: 64)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !4511, file: !134, line: 130, baseType: !273, size: 64, align: 64)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "debounce_period_us", scope: !4511, file: !134, line: 131, baseType: !219, size: 32)
!4516 = !{!4517}
!4517 = !DISubrange(count: 10)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4497, file: !134, line: 227, baseType: !4519, size: 128, offset: 1920)
!4519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !219, size: 128, elements: !1216)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp_ns", scope: !4494, file: !134, line: 254, baseType: !273, size: 64, align: 64, offset: 2048)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !4494, file: !134, line: 255, baseType: !219, size: 32, offset: 2112)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4494, file: !134, line: 257, baseType: !4523, size: 160, offset: 2144)
!4523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !219, size: 160, elements: !4524)
!4524 = !{!4525}
!4525 = !DISubrange(count: 5)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "const_type", scope: !4489, file: !3, line: 1955, baseType: !4527, size: 64)
!4527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4528, size: 64)
!4528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4494)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "rectype", scope: !4489, file: !3, line: 1955, baseType: !4455, size: 64)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4489, file: !3, line: 1955, baseType: !4493, size: 64)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_const", scope: !4489, file: !3, line: 1955, baseType: !4527, size: 64)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4486, file: !3, line: 1955, baseType: !4533, size: 73728, offset: 192)
!4533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4494, size: 73728, elements: !595)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "lineinfo_changed_nb", scope: !4481, file: !3, line: 1956, baseType: !4403, size: 192, offset: 74112)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "watched_lines", scope: !4481, file: !3, line: 1957, baseType: !3459, size: 64, offset: 74304)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "watch_abi_version", scope: !4481, file: !3, line: 1959, baseType: !231, size: 32, offset: 74368)
!4537 = !{!0, !4538, !4540, !4545, !4547, !4550, !4552, !4554}
!4538 = !DIGlobalVariableExpression(var: !4539, expr: !DIExpression())
!4539 = distinct !DIGlobalVariable(name: "linehandle_fileops", scope: !2, file: !3, line: 275, type: !886, isLocal: true, isDefinition: true)
!4540 = !DIGlobalVariableExpression(var: !4541, expr: !DIExpression())
!4541 = distinct !DIGlobalVariable(name: "__key", scope: !4542, file: !3, line: 1781, type: !741, isLocal: true, isDefinition: true)
!4542 = distinct !DISubprogram(name: "lineevent_create", scope: !3, file: !3, line: 1690, type: !4543, scopeLine: 1691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!4543 = !DISubroutineType(types: !4544)
!4544 = !{!236, !3476, !224}
!4545 = !DIGlobalVariableExpression(var: !4546, expr: !DIExpression())
!4546 = distinct !DIGlobalVariable(name: "lineevent_fileops", scope: !2, file: !3, line: 1617, type: !886, isLocal: true, isDefinition: true)
!4547 = !DIGlobalVariableExpression(var: !4548, expr: !DIExpression())
!4548 = distinct !DIGlobalVariable(name: "__key", scope: !4549, file: !3, line: 1335, type: !741, isLocal: true, isDefinition: true)
!4549 = distinct !DISubprogram(name: "linereq_create", scope: !3, file: !3, line: 1288, type: !4543, scopeLine: 1289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!4550 = !DIGlobalVariableExpression(var: !4551, expr: !DIExpression())
!4551 = distinct !DIGlobalVariable(name: "__key", scope: !4549, file: !3, line: 1336, type: !741, isLocal: true, isDefinition: true)
!4552 = !DIGlobalVariableExpression(var: !4553, expr: !DIExpression())
!4553 = distinct !DIGlobalVariable(name: "line_fileops", scope: !2, file: !3, line: 1276, type: !886, isLocal: true, isDefinition: true)
!4554 = !DIGlobalVariableExpression(var: !4555, expr: !DIExpression())
!4555 = distinct !DIGlobalVariable(name: "__key", scope: !4556, file: !3, line: 2272, type: !741, isLocal: true, isDefinition: true)
!4556 = distinct !DISubprogram(name: "gpio_chrdev_open", scope: !3, file: !3, line: 2253, type: !1027, scopeLine: 2254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!4557 = !{!"rsp"}
!4558 = !{i32 7, !"Dwarf Version", i32 4}
!4559 = !{i32 2, !"Debug Info Version", i32 3}
!4560 = !{i32 1, !"wchar_size", i32 2}
!4561 = !{i32 1, !"Code Model", i32 2}
!4562 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4563 = distinct !DISubprogram(name: "gpiolib_cdev_register", scope: !3, file: !3, line: 2334, type: !4564, scopeLine: 2335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !281)
!4564 = !DISubroutineType(types: !4565)
!4565 = !{!236, !3476, !696}
!4566 = !DILocalVariable(name: "gdev", arg: 1, scope: !4563, file: !3, line: 2334, type: !3476)
!4567 = !DILocation(line: 2334, column: 47, scope: !4563)
!4568 = !DILocalVariable(name: "devt", arg: 2, scope: !4563, file: !3, line: 2334, type: !696)
!4569 = !DILocation(line: 2334, column: 59, scope: !4563)
!4570 = !DILocalVariable(name: "ret", scope: !4563, file: !3, line: 2336, type: !236)
!4571 = !DILocation(line: 2336, column: 6, scope: !4563)
!4572 = !DILocation(line: 2338, column: 13, scope: !4563)
!4573 = !DILocation(line: 2338, column: 19, scope: !4563)
!4574 = !DILocation(line: 2338, column: 2, scope: !4563)
!4575 = !DILocation(line: 2339, column: 2, scope: !4563)
!4576 = !DILocation(line: 2339, column: 8, scope: !4563)
!4577 = !DILocation(line: 2339, column: 15, scope: !4563)
!4578 = !DILocation(line: 2339, column: 21, scope: !4563)
!4579 = !DILocation(line: 2340, column: 19, scope: !4563)
!4580 = !DILocation(line: 2340, column: 2, scope: !4563)
!4581 = !DILocation(line: 2340, column: 8, scope: !4563)
!4582 = !DILocation(line: 2340, column: 12, scope: !4563)
!4583 = !DILocation(line: 2340, column: 17, scope: !4563)
!4584 = !DILocation(line: 2342, column: 25, scope: !4563)
!4585 = !DILocation(line: 2342, column: 31, scope: !4563)
!4586 = !DILocation(line: 2342, column: 40, scope: !4563)
!4587 = !DILocation(line: 2342, column: 46, scope: !4563)
!4588 = !DILocation(line: 2342, column: 8, scope: !4563)
!4589 = !DILocation(line: 2342, column: 6, scope: !4563)
!4590 = !DILocation(line: 2343, column: 6, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4563, file: !3, line: 2343, column: 6)
!4592 = !DILocation(line: 2343, column: 6, scope: !4563)
!4593 = !DILocation(line: 2344, column: 10, scope: !4591)
!4594 = !DILocation(line: 2344, column: 3, scope: !4591)
!4595 = !DILocation(line: 2349, column: 2, scope: !4563)
!4596 = !DILocation(line: 2350, column: 1, scope: !4563)
!4597 = distinct !DISubprogram(name: "gpiolib_cdev_unregister", scope: !3, file: !3, line: 2352, type: !4598, scopeLine: 2353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !281)
!4598 = !DISubroutineType(types: !4599)
!4599 = !{null, !3476}
!4600 = !DILocalVariable(name: "gdev", arg: 1, scope: !4597, file: !3, line: 2352, type: !3476)
!4601 = !DILocation(line: 2352, column: 50, scope: !4597)
!4602 = !DILocation(line: 2354, column: 19, scope: !4597)
!4603 = !DILocation(line: 2354, column: 25, scope: !4597)
!4604 = !DILocation(line: 2354, column: 34, scope: !4597)
!4605 = !DILocation(line: 2354, column: 40, scope: !4597)
!4606 = !DILocation(line: 2354, column: 2, scope: !4597)
!4607 = !DILocation(line: 2355, column: 1, scope: !4597)
!4608 = distinct !DISubprogram(name: "lineinfo_watch_read", scope: !3, file: !3, line: 2171, type: !897, scopeLine: 2173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!4609 = !DILocalVariable(name: "addr", arg: 1, scope: !4610, file: !4611, line: 138, type: !2158)
!4610 = distinct !DISubprogram(name: "check_copy_size", scope: !4611, file: !4611, line: 138, type: !4612, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!4611 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!4612 = !DISubroutineType(types: !4613)
!4613 = !{!682, !2158, !815, !682}
!4614 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !4615)
!4615 = distinct !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !4621)
!4616 = distinct !DILexicalBlock(scope: !4618, file: !4617, line: 199, column: 6)
!4617 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!4618 = distinct !DISubprogram(name: "copy_to_user", scope: !4617, file: !4617, line: 197, type: !4619, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!4619 = !DISubroutineType(types: !4620)
!4620 = !{!215, !224, !2158, !215}
!4621 = distinct !DILocation(line: 2233, column: 8, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 2233, column: 8)
!4623 = distinct !DILexicalBlock(scope: !4624, file: !3, line: 2229, column: 10)
!4624 = distinct !DILexicalBlock(scope: !4625, file: !3, line: 2226, column: 7)
!4625 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 2186, column: 5)
!4626 = !DILocalVariable(name: "bytes", arg: 2, scope: !4610, file: !4611, line: 138, type: !815)
!4627 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !4615)
!4628 = !DILocalVariable(name: "is_source", arg: 3, scope: !4610, file: !4611, line: 138, type: !682)
!4629 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !4615)
!4630 = !DILocalVariable(name: "sz", scope: !4610, file: !4611, line: 140, type: !236)
!4631 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !4615)
!4632 = !DILocalVariable(name: "__ret_warn_on", scope: !4633, file: !4611, line: 150, type: !236)
!4633 = distinct !DILexicalBlock(scope: !4634, file: !4611, line: 150, column: 6)
!4634 = distinct !DILexicalBlock(scope: !4610, file: !4611, line: 150, column: 6)
!4635 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !4615)
!4636 = !DILocalVariable(name: "to", arg: 1, scope: !4618, file: !4617, line: 197, type: !224)
!4637 = !DILocation(line: 197, column: 27, scope: !4618, inlinedAt: !4621)
!4638 = !DILocalVariable(name: "from", arg: 2, scope: !4618, file: !4617, line: 197, type: !2158)
!4639 = !DILocation(line: 197, column: 43, scope: !4618, inlinedAt: !4621)
!4640 = !DILocalVariable(name: "n", arg: 3, scope: !4618, file: !4617, line: 197, type: !215)
!4641 = !DILocation(line: 197, column: 63, scope: !4618, inlinedAt: !4621)
!4642 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !4643)
!4643 = distinct !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !4644)
!4644 = distinct !DILocation(line: 2227, column: 8, scope: !4645)
!4645 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 2227, column: 8)
!4646 = distinct !DILexicalBlock(scope: !4624, file: !3, line: 2226, column: 63)
!4647 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !4643)
!4648 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !4643)
!4649 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !4643)
!4650 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !4643)
!4651 = !DILocation(line: 197, column: 27, scope: !4618, inlinedAt: !4644)
!4652 = !DILocation(line: 197, column: 43, scope: !4618, inlinedAt: !4644)
!4653 = !DILocation(line: 197, column: 63, scope: !4618, inlinedAt: !4644)
!4654 = !DILocalVariable(name: "lock", arg: 1, scope: !4655, file: !4656, line: 392, type: !2591)
!4655 = distinct !DISubprogram(name: "spin_unlock", scope: !4656, file: !4656, line: 392, type: !4657, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!4656 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!4657 = !DISubroutineType(types: !4658)
!4658 = !{null, !2591}
!4659 = !DILocation(line: 392, column: 53, scope: !4655, inlinedAt: !4660)
!4660 = distinct !DILocation(line: 2218, column: 3, scope: !4625)
!4661 = !DILocation(line: 392, column: 53, scope: !4655, inlinedAt: !4662)
!4662 = distinct !DILocation(line: 2213, column: 4, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 2212, column: 27)
!4664 = distinct !DILexicalBlock(scope: !4625, file: !3, line: 2212, column: 7)
!4665 = !DILocalVariable(name: "v", arg: 1, scope: !4666, file: !4667, line: 23, type: !4670)
!4666 = distinct !DISubprogram(name: "arch_atomic_read", scope: !4667, file: !4667, line: 23, type: !4668, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!4667 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!4668 = !DISubroutineType(types: !4669)
!4669 = !{!236, !4670}
!4670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4671, size: 64)
!4671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !231)
!4672 = !DILocation(line: 23, column: 61, scope: !4666, inlinedAt: !4673)
!4673 = distinct !DILocation(line: 28, column: 9, scope: !4674, inlinedAt: !4676)
!4674 = distinct !DISubprogram(name: "atomic_read", scope: !4675, file: !4675, line: 25, type: !4668, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!4675 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!4676 = distinct !DILocation(line: 2208, column: 7, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4625, file: !3, line: 2208, column: 7)
!4678 = !DILocalVariable(name: "v", arg: 1, scope: !4679, file: !4680, line: 69, type: !4683)
!4679 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !4680, file: !4680, line: 69, type: !4681, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!4680 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!4681 = !DISubroutineType(types: !4682)
!4682 = !{null, !4683, !815}
!4683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4684, size: 64)
!4684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4685)
!4685 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!4686 = !DILocation(line: 69, column: 73, scope: !4679, inlinedAt: !4687)
!4687 = distinct !DILocation(line: 27, column: 2, scope: !4674, inlinedAt: !4676)
!4688 = !DILocalVariable(name: "size", arg: 2, scope: !4679, file: !4680, line: 69, type: !815)
!4689 = !DILocation(line: 69, column: 83, scope: !4679, inlinedAt: !4687)
!4690 = !DILocalVariable(name: "v", arg: 1, scope: !4674, file: !4675, line: 25, type: !4670)
!4691 = !DILocation(line: 25, column: 29, scope: !4674, inlinedAt: !4676)
!4692 = !DILocation(line: 392, column: 53, scope: !4655, inlinedAt: !4693)
!4693 = distinct !DILocation(line: 2202, column: 5, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 2201, column: 13)
!4695 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 2201, column: 8)
!4696 = distinct !DILexicalBlock(scope: !4697, file: !3, line: 2188, column: 38)
!4697 = distinct !DILexicalBlock(scope: !4625, file: !3, line: 2188, column: 7)
!4698 = !DILocalVariable(name: "pscr_ret__", scope: !4699, file: !4700, line: 15, type: !206)
!4699 = distinct !DILexicalBlock(scope: !4701, file: !4700, line: 15, column: 9)
!4700 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!4701 = distinct !DISubprogram(name: "get_current", scope: !4700, file: !4700, line: 13, type: !4702, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!4702 = !DISubroutineType(types: !4703)
!4703 = !{!206}
!4704 = !DILocation(line: 15, column: 9, scope: !4699, inlinedAt: !4705)
!4705 = distinct !DILocation(line: 2199, column: 10, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 2199, column: 10)
!4707 = !DILocalVariable(name: "__vpp_verify", scope: !4708, file: !4700, line: 15, type: !2158)
!4708 = distinct !DILexicalBlock(scope: !4699, file: !4700, line: 15, column: 9)
!4709 = !DILocation(line: 15, column: 9, scope: !4708, inlinedAt: !4705)
!4710 = !DILocalVariable(name: "pfo_val__", scope: !4711, file: !4700, line: 15, type: !272)
!4711 = distinct !DILexicalBlock(scope: !4699, file: !4700, line: 15, column: 9)
!4712 = !DILocation(line: 15, column: 9, scope: !4711, inlinedAt: !4705)
!4713 = !DILocation(line: 15, column: 9, scope: !4699, inlinedAt: !4714)
!4714 = distinct !DILocation(line: 2199, column: 10, scope: !4706)
!4715 = !DILocation(line: 15, column: 9, scope: !4708, inlinedAt: !4714)
!4716 = !DILocation(line: 15, column: 9, scope: !4711, inlinedAt: !4714)
!4717 = !DILocation(line: 392, column: 53, scope: !4655, inlinedAt: !4718)
!4718 = distinct !DILocation(line: 2195, column: 5, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4720, file: !3, line: 2194, column: 36)
!4720 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 2194, column: 8)
!4721 = !DILocation(line: 392, column: 53, scope: !4655, inlinedAt: !4722)
!4722 = distinct !DILocation(line: 2190, column: 5, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4724, file: !3, line: 2189, column: 20)
!4724 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 2189, column: 8)
!4725 = !DILocalVariable(name: "lock", arg: 1, scope: !4726, file: !4656, line: 352, type: !2591)
!4726 = distinct !DISubprogram(name: "spin_lock", scope: !4656, file: !4656, line: 352, type: !4657, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!4727 = !DILocation(line: 352, column: 51, scope: !4726, inlinedAt: !4728)
!4728 = distinct !DILocation(line: 2187, column: 3, scope: !4625)
!4729 = !DILocalVariable(name: "file", arg: 1, scope: !4608, file: !3, line: 2171, type: !894)
!4730 = !DILocation(line: 2171, column: 49, scope: !4608)
!4731 = !DILocalVariable(name: "buf", arg: 2, scope: !4608, file: !3, line: 2171, type: !663)
!4732 = !DILocation(line: 2171, column: 68, scope: !4608)
!4733 = !DILocalVariable(name: "count", arg: 3, scope: !4608, file: !3, line: 2172, type: !815)
!4734 = !DILocation(line: 2172, column: 15, scope: !4608)
!4735 = !DILocalVariable(name: "off", arg: 4, scope: !4608, file: !3, line: 2172, type: !845)
!4736 = !DILocation(line: 2172, column: 30, scope: !4608)
!4737 = !DILocalVariable(name: "cdev", scope: !4608, file: !3, line: 2174, type: !4480)
!4738 = !DILocation(line: 2174, column: 28, scope: !4608)
!4739 = !DILocation(line: 2174, column: 35, scope: !4608)
!4740 = !DILocation(line: 2174, column: 41, scope: !4608)
!4741 = !DILocalVariable(name: "event", scope: !4608, file: !3, line: 2175, type: !4494)
!4742 = !DILocation(line: 2175, column: 35, scope: !4608)
!4743 = !DILocalVariable(name: "bytes_read", scope: !4608, file: !3, line: 2176, type: !899)
!4744 = !DILocation(line: 2176, column: 10, scope: !4608)
!4745 = !DILocalVariable(name: "ret", scope: !4608, file: !3, line: 2177, type: !236)
!4746 = !DILocation(line: 2177, column: 6, scope: !4608)
!4747 = !DILocalVariable(name: "event_size", scope: !4608, file: !3, line: 2178, type: !815)
!4748 = !DILocation(line: 2178, column: 9, scope: !4608)
!4749 = !DILocation(line: 2186, column: 2, scope: !4608)
!4750 = !DILocation(line: 2187, column: 14, scope: !4625)
!4751 = !DILocation(line: 2187, column: 20, scope: !4625)
!4752 = !DILocation(line: 2187, column: 25, scope: !4625)
!4753 = !DILocation(line: 354, column: 2, scope: !4754, inlinedAt: !4728)
!4754 = distinct !DILexicalBlock(scope: !4726, file: !4656, line: 354, column: 2)
!4755 = !{i32 -2145425103}
!4756 = !DILocation(line: 354, column: 2, scope: !4757, inlinedAt: !4728)
!4757 = distinct !DILexicalBlock(scope: !4754, file: !4656, line: 354, column: 2)
!4758 = !DILocalVariable(name: "__tmpq", scope: !4759, file: !3, line: 2188, type: !4760)
!4759 = distinct !DILexicalBlock(scope: !4697, file: !3, line: 2188, column: 7)
!4760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4486, size: 64)
!4761 = !DILocation(line: 2188, column: 7, scope: !4759)
!4762 = !DILocation(line: 2188, column: 7, scope: !4697)
!4763 = !DILocation(line: 2188, column: 7, scope: !4625)
!4764 = !DILocation(line: 2189, column: 8, scope: !4724)
!4765 = !DILocation(line: 2189, column: 8, scope: !4696)
!4766 = !DILocation(line: 2190, column: 18, scope: !4723)
!4767 = !DILocation(line: 2190, column: 24, scope: !4723)
!4768 = !DILocation(line: 2190, column: 29, scope: !4723)
!4769 = !DILocation(line: 394, column: 2, scope: !4770, inlinedAt: !4722)
!4770 = distinct !DILexicalBlock(scope: !4655, file: !4656, line: 394, column: 2)
!4771 = !{i32 -2145422742}
!4772 = !DILocation(line: 394, column: 2, scope: !4773, inlinedAt: !4722)
!4773 = distinct !DILexicalBlock(scope: !4770, file: !4656, line: 394, column: 2)
!4774 = !DILocation(line: 2191, column: 12, scope: !4723)
!4775 = !DILocation(line: 2191, column: 5, scope: !4723)
!4776 = !DILocation(line: 2194, column: 8, scope: !4720)
!4777 = !DILocation(line: 2194, column: 14, scope: !4720)
!4778 = !DILocation(line: 2194, column: 22, scope: !4720)
!4779 = !DILocation(line: 2194, column: 8, scope: !4696)
!4780 = !DILocation(line: 2195, column: 18, scope: !4719)
!4781 = !DILocation(line: 2195, column: 24, scope: !4719)
!4782 = !DILocation(line: 2195, column: 29, scope: !4719)
!4783 = !DILocation(line: 394, column: 2, scope: !4770, inlinedAt: !4718)
!4784 = !DILocation(line: 394, column: 2, scope: !4773, inlinedAt: !4718)
!4785 = !DILocation(line: 2196, column: 5, scope: !4719)
!4786 = !DILocalVariable(name: "__tmpq", scope: !4787, file: !3, line: 2199, type: !4760)
!4787 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 2199, column: 10)
!4788 = !DILocation(line: 2199, column: 10, scope: !4787)
!4789 = !DILocation(line: 2199, column: 10, scope: !4696)
!4790 = !DILocalVariable(name: "__ret", scope: !4706, file: !3, line: 2199, type: !236)
!4791 = !DILocation(line: 2199, column: 10, scope: !4706)
!4792 = !DILocalVariable(name: "__wait", scope: !4706, file: !3, line: 2199, type: !4793)
!4793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1009, line: 29, size: 320, elements: !4794)
!4794 = !{!4795, !4796, !4797, !4803}
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4793, file: !1009, line: 30, baseType: !7, size: 32)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !4793, file: !1009, line: 31, baseType: !224, size: 64, offset: 64)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4793, file: !1009, line: 32, baseType: !4798, size: 64, offset: 128)
!4798 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1009, line: 16, baseType: !4799)
!4799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4800, size: 64)
!4800 = !DISubroutineType(types: !4801)
!4801 = !{!236, !4802, !7, !236, !224}
!4802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4793, size: 64)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4793, file: !1009, line: 33, baseType: !265, size: 128, offset: 192)
!4804 = !{i32 -2146366146}
!4805 = !DILocation(line: 2199, column: 10, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 2199, column: 10)
!4807 = !DILocation(line: 2199, column: 10, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 2199, column: 10)
!4809 = !DILocalVariable(name: "__tmpq", scope: !4810, file: !3, line: 2199, type: !4760)
!4810 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 2199, column: 10)
!4811 = !DILocation(line: 2199, column: 10, scope: !4810)
!4812 = distinct !{!4812, !4791, !4791}
!4813 = !DILocation(line: 2199, column: 8, scope: !4696)
!4814 = !DILocation(line: 2201, column: 8, scope: !4695)
!4815 = !DILocation(line: 2201, column: 8, scope: !4696)
!4816 = !DILocation(line: 2202, column: 18, scope: !4694)
!4817 = !DILocation(line: 2202, column: 24, scope: !4694)
!4818 = !DILocation(line: 2202, column: 29, scope: !4694)
!4819 = !DILocation(line: 394, column: 2, scope: !4770, inlinedAt: !4693)
!4820 = !DILocation(line: 394, column: 2, scope: !4773, inlinedAt: !4693)
!4821 = !DILocation(line: 2203, column: 12, scope: !4694)
!4822 = !DILocation(line: 2203, column: 5, scope: !4694)
!4823 = !DILocation(line: 2205, column: 3, scope: !4696)
!4824 = !DILocation(line: 2208, column: 20, scope: !4677)
!4825 = !DILocation(line: 2208, column: 26, scope: !4677)
!4826 = !DILocation(line: 27, column: 25, scope: !4674, inlinedAt: !4676)
!4827 = !DILocation(line: 71, column: 19, scope: !4679, inlinedAt: !4687)
!4828 = !DILocation(line: 71, column: 22, scope: !4679, inlinedAt: !4687)
!4829 = !DILocation(line: 71, column: 2, scope: !4679, inlinedAt: !4687)
!4830 = !DILocation(line: 72, column: 2, scope: !4679, inlinedAt: !4687)
!4831 = !DILocation(line: 28, column: 26, scope: !4674, inlinedAt: !4676)
!4832 = !DILocation(line: 29, column: 9, scope: !4666, inlinedAt: !4673)
!4833 = !DILocation(line: 2208, column: 45, scope: !4677)
!4834 = !DILocation(line: 2208, column: 7, scope: !4625)
!4835 = !DILocation(line: 2209, column: 15, scope: !4677)
!4836 = !DILocation(line: 2209, column: 4, scope: !4677)
!4837 = !DILocation(line: 2211, column: 15, scope: !4677)
!4838 = !DILocation(line: 2212, column: 7, scope: !4664)
!4839 = !DILocation(line: 2212, column: 15, scope: !4664)
!4840 = !DILocation(line: 2212, column: 13, scope: !4664)
!4841 = !DILocation(line: 2212, column: 7, scope: !4625)
!4842 = !DILocation(line: 2213, column: 17, scope: !4663)
!4843 = !DILocation(line: 2213, column: 23, scope: !4663)
!4844 = !DILocation(line: 2213, column: 28, scope: !4663)
!4845 = !DILocation(line: 394, column: 2, scope: !4770, inlinedAt: !4662)
!4846 = !DILocation(line: 394, column: 2, scope: !4773, inlinedAt: !4662)
!4847 = !DILocation(line: 2214, column: 4, scope: !4663)
!4848 = !DILocalVariable(name: "__tmp", scope: !4849, file: !3, line: 2217, type: !4760)
!4849 = distinct !DILexicalBlock(scope: !4625, file: !3, line: 2217, column: 9)
!4850 = !DILocation(line: 2217, column: 9, scope: !4849)
!4851 = !DILocalVariable(name: "__buf", scope: !4849, file: !3, line: 2217, type: !4493)
!4852 = !DILocalVariable(name: "__n", scope: !4849, file: !3, line: 2217, type: !215)
!4853 = !DILocalVariable(name: "__recsize", scope: !4849, file: !3, line: 2217, type: !4854)
!4854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !815)
!4855 = !DILocalVariable(name: "__kfifo", scope: !4849, file: !3, line: 2217, type: !4856)
!4856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4432, size: 64)
!4857 = !DILocation(line: 2217, column: 9, scope: !4625)
!4858 = !DILocation(line: 2217, column: 7, scope: !4625)
!4859 = !DILocation(line: 2218, column: 16, scope: !4625)
!4860 = !DILocation(line: 2218, column: 22, scope: !4625)
!4861 = !DILocation(line: 2218, column: 27, scope: !4625)
!4862 = !DILocation(line: 394, column: 2, scope: !4770, inlinedAt: !4660)
!4863 = !DILocation(line: 394, column: 2, scope: !4773, inlinedAt: !4660)
!4864 = !DILocation(line: 2219, column: 7, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4625, file: !3, line: 2219, column: 7)
!4866 = !DILocation(line: 2219, column: 11, scope: !4865)
!4867 = !DILocation(line: 2219, column: 7, scope: !4625)
!4868 = !DILocation(line: 2220, column: 8, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4865, file: !3, line: 2219, column: 17)
!4870 = !DILocation(line: 2221, column: 4, scope: !4869)
!4871 = !DILocation(line: 2226, column: 7, scope: !4624)
!4872 = !DILocation(line: 2226, column: 18, scope: !4624)
!4873 = !DILocation(line: 2226, column: 7, scope: !4625)
!4874 = !DILocation(line: 2227, column: 21, scope: !4645)
!4875 = !DILocation(line: 2227, column: 27, scope: !4645)
!4876 = !DILocation(line: 2227, column: 25, scope: !4645)
!4877 = !DILocation(line: 2227, column: 39, scope: !4645)
!4878 = !DILocation(line: 2227, column: 47, scope: !4645)
!4879 = !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !4644)
!4880 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !4643)
!4881 = distinct !DILexicalBlock(scope: !4610, file: !4611, line: 141, column: 6)
!4882 = !DILocation(line: 0, scope: !4881, inlinedAt: !4643)
!4883 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !4643)
!4884 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !4643)
!4885 = distinct !DILexicalBlock(scope: !4886, file: !4611, line: 142, column: 7)
!4886 = distinct !DILexicalBlock(scope: !4881, file: !4611, line: 141, column: 39)
!4887 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !4643)
!4888 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !4643)
!4889 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !4643)
!4890 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !4643)
!4891 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !4643)
!4892 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !4643)
!4893 = distinct !DILexicalBlock(scope: !4885, file: !4611, line: 144, column: 12)
!4894 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !4643)
!4895 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !4643)
!4896 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !4643)
!4897 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !4643)
!4898 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !4643)
!4899 = distinct !DILexicalBlock(scope: !4633, file: !4611, line: 150, column: 6)
!4900 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !4643)
!4901 = distinct !DILexicalBlock(scope: !4902, file: !4611, line: 150, column: 6)
!4902 = distinct !DILexicalBlock(scope: !4899, file: !4611, line: 150, column: 6)
!4903 = !{i32 -2145525345, i32 -2145525316, i32 -2145525270, i32 -2145525212, i32 -2145525158, i32 -2145525104, i32 -2145525049, i32 -2145525018}
!4904 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !4643)
!4905 = distinct !DILexicalBlock(scope: !4902, file: !4611, line: 150, column: 6)
!4906 = !{i32 -2145524598, i32 -2145524591, i32 -2145524539, i32 -2145524508, i32 -2145524478}
!4907 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !4643)
!4908 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !4643)
!4909 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !4643)
!4910 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !4643)
!4911 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !4643)
!4912 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !4643)
!4913 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !4643)
!4914 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !4643)
!4915 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !4643)
!4916 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !4643)
!4917 = !DILocation(line: 199, column: 6, scope: !4618, inlinedAt: !4644)
!4918 = !DILocation(line: 200, column: 21, scope: !4616, inlinedAt: !4644)
!4919 = !DILocation(line: 200, column: 25, scope: !4616, inlinedAt: !4644)
!4920 = !DILocation(line: 200, column: 31, scope: !4616, inlinedAt: !4644)
!4921 = !DILocation(line: 200, column: 7, scope: !4616, inlinedAt: !4644)
!4922 = !DILocation(line: 200, column: 5, scope: !4616, inlinedAt: !4644)
!4923 = !DILocation(line: 200, column: 3, scope: !4616, inlinedAt: !4644)
!4924 = !DILocation(line: 201, column: 9, scope: !4618, inlinedAt: !4644)
!4925 = !DILocation(line: 2227, column: 8, scope: !4645)
!4926 = !DILocation(line: 2227, column: 8, scope: !4646)
!4927 = !DILocation(line: 2228, column: 5, scope: !4645)
!4928 = !DILocation(line: 2229, column: 3, scope: !4646)
!4929 = !DILocalVariable(name: "event_v1", scope: !4623, file: !3, line: 2230, type: !4930)
!4930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpioline_info_changed", file: !134, line: 361, size: 832, elements: !4931)
!4931 = !{!4932, !4939, !4940, !4941}
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4930, file: !134, line: 362, baseType: !4933, size: 576)
!4933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpioline_info", file: !134, line: 326, size: 576, elements: !4934)
!4934 = !{!4935, !4936, !4937, !4938}
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "line_offset", scope: !4933, file: !134, line: 327, baseType: !219, size: 32)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4933, file: !134, line: 328, baseType: !219, size: 32, offset: 32)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4933, file: !134, line: 329, baseType: !1746, size: 256, offset: 64)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "consumer", scope: !4933, file: !134, line: 330, baseType: !1746, size: 256, offset: 320)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !4930, file: !134, line: 363, baseType: !273, size: 64, offset: 576)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !4930, file: !134, line: 364, baseType: !219, size: 32, offset: 640)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4930, file: !134, line: 365, baseType: !4523, size: 160, offset: 672)
!4942 = !DILocation(line: 2230, column: 33, scope: !4623)
!4943 = !DILocation(line: 2232, column: 4, scope: !4623)
!4944 = !DILocation(line: 2233, column: 21, scope: !4622)
!4945 = !DILocation(line: 2233, column: 27, scope: !4622)
!4946 = !DILocation(line: 2233, column: 25, scope: !4622)
!4947 = !DILocation(line: 2233, column: 39, scope: !4622)
!4948 = !DILocation(line: 2234, column: 7, scope: !4622)
!4949 = !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !4621)
!4950 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !4615)
!4951 = !DILocation(line: 0, scope: !4881, inlinedAt: !4615)
!4952 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !4615)
!4953 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !4615)
!4954 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !4615)
!4955 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !4615)
!4956 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !4615)
!4957 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !4615)
!4958 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !4615)
!4959 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !4615)
!4960 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !4615)
!4961 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !4615)
!4962 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !4615)
!4963 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !4615)
!4964 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !4615)
!4965 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !4615)
!4966 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !4615)
!4967 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !4615)
!4968 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !4615)
!4969 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !4615)
!4970 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !4615)
!4971 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !4615)
!4972 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !4615)
!4973 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !4615)
!4974 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !4615)
!4975 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !4615)
!4976 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !4615)
!4977 = !DILocation(line: 199, column: 6, scope: !4618, inlinedAt: !4621)
!4978 = !DILocation(line: 200, column: 21, scope: !4616, inlinedAt: !4621)
!4979 = !DILocation(line: 200, column: 25, scope: !4616, inlinedAt: !4621)
!4980 = !DILocation(line: 200, column: 31, scope: !4616, inlinedAt: !4621)
!4981 = !DILocation(line: 200, column: 7, scope: !4616, inlinedAt: !4621)
!4982 = !DILocation(line: 200, column: 5, scope: !4616, inlinedAt: !4621)
!4983 = !DILocation(line: 200, column: 3, scope: !4616, inlinedAt: !4621)
!4984 = !DILocation(line: 201, column: 9, scope: !4618, inlinedAt: !4621)
!4985 = !DILocation(line: 2233, column: 8, scope: !4622)
!4986 = !DILocation(line: 2233, column: 8, scope: !4623)
!4987 = !DILocation(line: 2235, column: 5, scope: !4622)
!4988 = !DILocation(line: 2241, column: 17, scope: !4625)
!4989 = !DILocation(line: 2241, column: 14, scope: !4625)
!4990 = !DILocation(line: 2242, column: 2, scope: !4625)
!4991 = !DILocation(line: 2242, column: 11, scope: !4608)
!4992 = !DILocation(line: 2242, column: 20, scope: !4608)
!4993 = !DILocation(line: 2242, column: 31, scope: !4608)
!4994 = !DILocation(line: 2242, column: 17, scope: !4608)
!4995 = distinct !{!4995, !4749, !4996}
!4996 = !DILocation(line: 2242, column: 46, scope: !4608)
!4997 = !DILocation(line: 2244, column: 9, scope: !4608)
!4998 = !DILocation(line: 2244, column: 2, scope: !4608)
!4999 = !DILocation(line: 2245, column: 1, scope: !4608)
!5000 = distinct !DISubprogram(name: "lineinfo_watch_poll", scope: !3, file: !3, line: 2156, type: !994, scopeLine: 2158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!5001 = !DILocation(line: 392, column: 53, scope: !4655, inlinedAt: !5002)
!5002 = distinct !DILocation(line: 2164, column: 7, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 2164, column: 7)
!5004 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 2164, column: 6)
!5005 = !DILocation(line: 352, column: 51, scope: !4726, inlinedAt: !5006)
!5006 = distinct !DILocation(line: 2164, column: 7, scope: !5003)
!5007 = !DILocalVariable(name: "file", arg: 1, scope: !5000, file: !3, line: 2156, type: !894)
!5008 = !DILocation(line: 2156, column: 50, scope: !5000)
!5009 = !DILocalVariable(name: "pollt", arg: 2, scope: !5000, file: !3, line: 2157, type: !998)
!5010 = !DILocation(line: 2157, column: 35, scope: !5000)
!5011 = !DILocalVariable(name: "cdev", scope: !5000, file: !3, line: 2159, type: !4480)
!5012 = !DILocation(line: 2159, column: 28, scope: !5000)
!5013 = !DILocation(line: 2159, column: 35, scope: !5000)
!5014 = !DILocation(line: 2159, column: 41, scope: !5000)
!5015 = !DILocalVariable(name: "events", scope: !5000, file: !3, line: 2160, type: !996)
!5016 = !DILocation(line: 2160, column: 11, scope: !5000)
!5017 = !DILocation(line: 2162, column: 12, scope: !5000)
!5018 = !DILocation(line: 2162, column: 19, scope: !5000)
!5019 = !DILocation(line: 2162, column: 25, scope: !5000)
!5020 = !DILocation(line: 2162, column: 31, scope: !5000)
!5021 = !DILocation(line: 2162, column: 2, scope: !5000)
!5022 = !DILocalVariable(name: "__ret", scope: !5003, file: !3, line: 2164, type: !682)
!5023 = !DILocation(line: 2164, column: 7, scope: !5003)
!5024 = !DILocation(line: 354, column: 2, scope: !4754, inlinedAt: !5006)
!5025 = !DILocation(line: 354, column: 2, scope: !4757, inlinedAt: !5006)
!5026 = !DILocalVariable(name: "__tmpq", scope: !5027, file: !3, line: 2164, type: !4760)
!5027 = distinct !DILexicalBlock(scope: !5003, file: !3, line: 2164, column: 7)
!5028 = !DILocation(line: 2164, column: 7, scope: !5027)
!5029 = !DILocation(line: 394, column: 2, scope: !4770, inlinedAt: !5002)
!5030 = !DILocation(line: 394, column: 2, scope: !4773, inlinedAt: !5002)
!5031 = !DILocation(line: 2164, column: 6, scope: !5000)
!5032 = !DILocation(line: 2166, column: 10, scope: !5004)
!5033 = !DILocation(line: 2166, column: 3, scope: !5004)
!5034 = !DILocation(line: 2168, column: 9, scope: !5000)
!5035 = !DILocation(line: 2168, column: 2, scope: !5000)
!5036 = distinct !DISubprogram(name: "gpio_ioctl", scope: !3, file: !3, line: 2017, type: !1017, scopeLine: 2018, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!5037 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !5038)
!5038 = distinct !DILocation(line: 191, column: 6, scope: !5039, inlinedAt: !5041)
!5039 = distinct !DILexicalBlock(scope: !5040, file: !4617, line: 191, column: 6)
!5040 = distinct !DISubprogram(name: "copy_from_user", scope: !4617, file: !4617, line: 189, type: !4619, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!5041 = distinct !DILocation(line: 2103, column: 7, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5043, file: !3, line: 2103, column: 7)
!5043 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 2102, column: 53)
!5044 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 2102, column: 13)
!5045 = distinct !DILexicalBlock(scope: !5046, file: !3, line: 2100, column: 13)
!5046 = distinct !DILexicalBlock(scope: !5047, file: !3, line: 2096, column: 13)
!5047 = distinct !DILexicalBlock(scope: !5048, file: !3, line: 2067, column: 13)
!5048 = distinct !DILexicalBlock(scope: !5049, file: !3, line: 2065, column: 13)
!5049 = distinct !DILexicalBlock(scope: !5050, file: !3, line: 2063, column: 13)
!5050 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 2044, column: 13)
!5051 = distinct !DILexicalBlock(scope: !5036, file: !3, line: 2030, column: 6)
!5052 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !5038)
!5053 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !5038)
!5054 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !5038)
!5055 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !5038)
!5056 = !DILocalVariable(name: "to", arg: 1, scope: !5040, file: !4617, line: 189, type: !224)
!5057 = !DILocation(line: 189, column: 22, scope: !5040, inlinedAt: !5041)
!5058 = !DILocalVariable(name: "from", arg: 2, scope: !5040, file: !4617, line: 189, type: !2158)
!5059 = !DILocation(line: 189, column: 45, scope: !5040, inlinedAt: !5041)
!5060 = !DILocalVariable(name: "n", arg: 3, scope: !5040, file: !4617, line: 189, type: !215)
!5061 = !DILocation(line: 189, column: 65, scope: !5040, inlinedAt: !5041)
!5062 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !5063)
!5063 = distinct !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !5064)
!5064 = distinct !DILocation(line: 2089, column: 7, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !5066, file: !3, line: 2089, column: 7)
!5066 = distinct !DILexicalBlock(scope: !5047, file: !3, line: 2067, column: 51)
!5067 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !5063)
!5068 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !5063)
!5069 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !5063)
!5070 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !5063)
!5071 = !DILocation(line: 197, column: 27, scope: !4618, inlinedAt: !5064)
!5072 = !DILocation(line: 197, column: 43, scope: !4618, inlinedAt: !5064)
!5073 = !DILocation(line: 197, column: 63, scope: !4618, inlinedAt: !5064)
!5074 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !5075)
!5075 = distinct !DILocation(line: 191, column: 6, scope: !5039, inlinedAt: !5076)
!5076 = distinct !DILocation(line: 2072, column: 7, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5066, file: !3, line: 2072, column: 7)
!5078 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !5075)
!5079 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !5075)
!5080 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !5075)
!5081 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !5075)
!5082 = !DILocation(line: 189, column: 22, scope: !5040, inlinedAt: !5076)
!5083 = !DILocation(line: 189, column: 45, scope: !5040, inlinedAt: !5076)
!5084 = !DILocation(line: 189, column: 65, scope: !5040, inlinedAt: !5076)
!5085 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !5086)
!5086 = distinct !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !5087)
!5087 = distinct !DILocation(line: 2060, column: 7, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 2060, column: 7)
!5089 = distinct !DILexicalBlock(scope: !5050, file: !3, line: 2044, column: 45)
!5090 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !5086)
!5091 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !5086)
!5092 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !5086)
!5093 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !5086)
!5094 = !DILocation(line: 197, column: 27, scope: !4618, inlinedAt: !5087)
!5095 = !DILocation(line: 197, column: 43, scope: !4618, inlinedAt: !5087)
!5096 = !DILocation(line: 197, column: 63, scope: !4618, inlinedAt: !5087)
!5097 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !5098)
!5098 = distinct !DILocation(line: 191, column: 6, scope: !5039, inlinedAt: !5099)
!5099 = distinct !DILocation(line: 2049, column: 7, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 2049, column: 7)
!5101 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !5098)
!5102 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !5098)
!5103 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !5098)
!5104 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !5098)
!5105 = !DILocation(line: 189, column: 22, scope: !5040, inlinedAt: !5099)
!5106 = !DILocation(line: 189, column: 45, scope: !5040, inlinedAt: !5099)
!5107 = !DILocation(line: 189, column: 65, scope: !5040, inlinedAt: !5099)
!5108 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !5109)
!5109 = distinct !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !5110)
!5110 = distinct !DILocation(line: 2040, column: 7, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5112, file: !3, line: 2040, column: 7)
!5112 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 2030, column: 38)
!5113 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !5109)
!5114 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !5109)
!5115 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !5109)
!5116 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !5109)
!5117 = !DILocation(line: 197, column: 27, scope: !4618, inlinedAt: !5110)
!5118 = !DILocation(line: 197, column: 43, scope: !4618, inlinedAt: !5110)
!5119 = !DILocation(line: 197, column: 63, scope: !4618, inlinedAt: !5110)
!5120 = !DILocalVariable(name: "file", arg: 1, scope: !5036, file: !3, line: 2017, type: !894)
!5121 = !DILocation(line: 2017, column: 37, scope: !5036)
!5122 = !DILocalVariable(name: "cmd", arg: 2, scope: !5036, file: !3, line: 2017, type: !7)
!5123 = !DILocation(line: 2017, column: 56, scope: !5036)
!5124 = !DILocalVariable(name: "arg", arg: 3, scope: !5036, file: !3, line: 2017, type: !215)
!5125 = !DILocation(line: 2017, column: 75, scope: !5036)
!5126 = !DILocalVariable(name: "cdev", scope: !5036, file: !3, line: 2019, type: !4480)
!5127 = !DILocation(line: 2019, column: 28, scope: !5036)
!5128 = !DILocation(line: 2019, column: 35, scope: !5036)
!5129 = !DILocation(line: 2019, column: 41, scope: !5036)
!5130 = !DILocalVariable(name: "gdev", scope: !5036, file: !3, line: 2020, type: !3476)
!5131 = !DILocation(line: 2020, column: 22, scope: !5036)
!5132 = !DILocation(line: 2020, column: 29, scope: !5036)
!5133 = !DILocation(line: 2020, column: 35, scope: !5036)
!5134 = !DILocalVariable(name: "gc", scope: !5036, file: !3, line: 2021, type: !4255)
!5135 = !DILocation(line: 2021, column: 20, scope: !5036)
!5136 = !DILocation(line: 2021, column: 25, scope: !5036)
!5137 = !DILocation(line: 2021, column: 31, scope: !5036)
!5138 = !DILocalVariable(name: "ip", scope: !5036, file: !3, line: 2022, type: !224)
!5139 = !DILocation(line: 2022, column: 15, scope: !5036)
!5140 = !DILocation(line: 2022, column: 35, scope: !5036)
!5141 = !DILocation(line: 2022, column: 20, scope: !5036)
!5142 = !DILocalVariable(name: "offset", scope: !5036, file: !3, line: 2023, type: !219)
!5143 = !DILocation(line: 2023, column: 8, scope: !5036)
!5144 = !DILocation(line: 2026, column: 7, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5036, file: !3, line: 2026, column: 6)
!5146 = !DILocation(line: 2026, column: 6, scope: !5036)
!5147 = !DILocation(line: 2027, column: 3, scope: !5145)
!5148 = !DILocation(line: 2030, column: 6, scope: !5051)
!5149 = !DILocation(line: 2030, column: 10, scope: !5051)
!5150 = !DILocation(line: 2030, column: 6, scope: !5036)
!5151 = !DILocalVariable(name: "chipinfo", scope: !5112, file: !3, line: 2031, type: !5152)
!5152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpiochip_info", file: !134, line: 32, size: 544, elements: !5153)
!5153 = !{!5154, !5155, !5156}
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5152, file: !134, line: 33, baseType: !1746, size: 256)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !5152, file: !134, line: 34, baseType: !1746, size: 256, offset: 256)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !5152, file: !134, line: 35, baseType: !219, size: 32, offset: 512)
!5157 = !DILocation(line: 2031, column: 24, scope: !5112)
!5158 = !DILocation(line: 2033, column: 3, scope: !5112)
!5159 = !DILocation(line: 2035, column: 20, scope: !5112)
!5160 = !DILocation(line: 2035, column: 11, scope: !5112)
!5161 = !DILocation(line: 2035, column: 36, scope: !5112)
!5162 = !DILocation(line: 2035, column: 42, scope: !5112)
!5163 = !DILocation(line: 2035, column: 26, scope: !5112)
!5164 = !DILocation(line: 2035, column: 3, scope: !5112)
!5165 = !DILocation(line: 2037, column: 20, scope: !5112)
!5166 = !DILocation(line: 2037, column: 11, scope: !5112)
!5167 = !DILocation(line: 2037, column: 27, scope: !5112)
!5168 = !DILocation(line: 2037, column: 33, scope: !5112)
!5169 = !DILocation(line: 2037, column: 3, scope: !5112)
!5170 = !DILocation(line: 2039, column: 20, scope: !5112)
!5171 = !DILocation(line: 2039, column: 26, scope: !5112)
!5172 = !DILocation(line: 2039, column: 12, scope: !5112)
!5173 = !DILocation(line: 2039, column: 18, scope: !5112)
!5174 = !DILocation(line: 2040, column: 20, scope: !5111)
!5175 = !DILocation(line: 2040, column: 24, scope: !5111)
!5176 = !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !5110)
!5177 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !5109)
!5178 = !DILocation(line: 0, scope: !4881, inlinedAt: !5109)
!5179 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !5109)
!5180 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !5109)
!5181 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !5109)
!5182 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !5109)
!5183 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !5109)
!5184 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !5109)
!5185 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !5109)
!5186 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !5109)
!5187 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !5109)
!5188 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !5109)
!5189 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !5109)
!5190 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !5109)
!5191 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !5109)
!5192 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !5109)
!5193 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !5109)
!5194 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !5109)
!5195 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !5109)
!5196 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !5109)
!5197 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !5109)
!5198 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !5109)
!5199 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !5109)
!5200 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !5109)
!5201 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !5109)
!5202 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !5109)
!5203 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !5109)
!5204 = !DILocation(line: 199, column: 6, scope: !4618, inlinedAt: !5110)
!5205 = !DILocation(line: 200, column: 21, scope: !4616, inlinedAt: !5110)
!5206 = !DILocation(line: 200, column: 25, scope: !4616, inlinedAt: !5110)
!5207 = !DILocation(line: 200, column: 31, scope: !4616, inlinedAt: !5110)
!5208 = !DILocation(line: 200, column: 7, scope: !4616, inlinedAt: !5110)
!5209 = !DILocation(line: 200, column: 5, scope: !4616, inlinedAt: !5110)
!5210 = !DILocation(line: 200, column: 3, scope: !4616, inlinedAt: !5110)
!5211 = !DILocation(line: 201, column: 9, scope: !4618, inlinedAt: !5110)
!5212 = !DILocation(line: 2040, column: 7, scope: !5111)
!5213 = !DILocation(line: 2040, column: 7, scope: !5112)
!5214 = !DILocation(line: 2041, column: 4, scope: !5111)
!5215 = !DILocation(line: 2042, column: 3, scope: !5112)
!5216 = !DILocation(line: 2044, column: 13, scope: !5050)
!5217 = !DILocation(line: 2044, column: 17, scope: !5050)
!5218 = !DILocation(line: 2044, column: 13, scope: !5051)
!5219 = !DILocalVariable(name: "desc", scope: !5089, file: !3, line: 2045, type: !3471)
!5220 = !DILocation(line: 2045, column: 21, scope: !5089)
!5221 = !DILocalVariable(name: "lineinfo", scope: !5089, file: !3, line: 2046, type: !4933)
!5222 = !DILocation(line: 2046, column: 24, scope: !5089)
!5223 = !DILocalVariable(name: "lineinfo_v2", scope: !5089, file: !3, line: 2047, type: !4497)
!5224 = !DILocation(line: 2047, column: 28, scope: !5089)
!5225 = !DILocation(line: 2049, column: 22, scope: !5100)
!5226 = !DILocation(line: 2049, column: 33, scope: !5100)
!5227 = !DILocation(line: 191, column: 6, scope: !5039, inlinedAt: !5099)
!5228 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !5098)
!5229 = !DILocation(line: 0, scope: !4881, inlinedAt: !5098)
!5230 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !5098)
!5231 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !5098)
!5232 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !5098)
!5233 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !5098)
!5234 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !5098)
!5235 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !5098)
!5236 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !5098)
!5237 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !5098)
!5238 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !5098)
!5239 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !5098)
!5240 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !5098)
!5241 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !5098)
!5242 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !5098)
!5243 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !5098)
!5244 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !5098)
!5245 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !5098)
!5246 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !5098)
!5247 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !5098)
!5248 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !5098)
!5249 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !5098)
!5250 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !5098)
!5251 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !5098)
!5252 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !5098)
!5253 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !5098)
!5254 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !5098)
!5255 = !DILocation(line: 191, column: 6, scope: !5040, inlinedAt: !5099)
!5256 = !DILocation(line: 192, column: 23, scope: !5039, inlinedAt: !5099)
!5257 = !DILocation(line: 192, column: 27, scope: !5039, inlinedAt: !5099)
!5258 = !DILocation(line: 192, column: 33, scope: !5039, inlinedAt: !5099)
!5259 = !DILocation(line: 192, column: 7, scope: !5039, inlinedAt: !5099)
!5260 = !DILocation(line: 192, column: 5, scope: !5039, inlinedAt: !5099)
!5261 = !DILocation(line: 192, column: 3, scope: !5039, inlinedAt: !5099)
!5262 = !DILocation(line: 193, column: 9, scope: !5040, inlinedAt: !5099)
!5263 = !DILocation(line: 2049, column: 7, scope: !5100)
!5264 = !DILocation(line: 2049, column: 7, scope: !5089)
!5265 = !DILocation(line: 2050, column: 4, scope: !5100)
!5266 = !DILocation(line: 2053, column: 28, scope: !5089)
!5267 = !DILocation(line: 2053, column: 41, scope: !5089)
!5268 = !DILocation(line: 2053, column: 10, scope: !5089)
!5269 = !DILocation(line: 2053, column: 8, scope: !5089)
!5270 = !DILocation(line: 2054, column: 14, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 2054, column: 7)
!5272 = !DILocation(line: 2054, column: 7, scope: !5271)
!5273 = !DILocation(line: 2054, column: 7, scope: !5089)
!5274 = !DILocation(line: 2055, column: 19, scope: !5271)
!5275 = !DILocation(line: 2055, column: 11, scope: !5271)
!5276 = !DILocation(line: 2055, column: 4, scope: !5271)
!5277 = !DILocation(line: 2057, column: 25, scope: !5089)
!5278 = !DILocation(line: 2057, column: 3, scope: !5089)
!5279 = !DILocation(line: 2058, column: 3, scope: !5089)
!5280 = !DILocation(line: 2060, column: 20, scope: !5088)
!5281 = !DILocation(line: 2060, column: 24, scope: !5088)
!5282 = !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !5087)
!5283 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !5086)
!5284 = !DILocation(line: 0, scope: !4881, inlinedAt: !5086)
!5285 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !5086)
!5286 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !5086)
!5287 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !5086)
!5288 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !5086)
!5289 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !5086)
!5290 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !5086)
!5291 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !5086)
!5292 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !5086)
!5293 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !5086)
!5294 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !5086)
!5295 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !5086)
!5296 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !5086)
!5297 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !5086)
!5298 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !5086)
!5299 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !5086)
!5300 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !5086)
!5301 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !5086)
!5302 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !5086)
!5303 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !5086)
!5304 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !5086)
!5305 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !5086)
!5306 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !5086)
!5307 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !5086)
!5308 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !5086)
!5309 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !5086)
!5310 = !DILocation(line: 199, column: 6, scope: !4618, inlinedAt: !5087)
!5311 = !DILocation(line: 200, column: 21, scope: !4616, inlinedAt: !5087)
!5312 = !DILocation(line: 200, column: 25, scope: !4616, inlinedAt: !5087)
!5313 = !DILocation(line: 200, column: 31, scope: !4616, inlinedAt: !5087)
!5314 = !DILocation(line: 200, column: 7, scope: !4616, inlinedAt: !5087)
!5315 = !DILocation(line: 200, column: 5, scope: !4616, inlinedAt: !5087)
!5316 = !DILocation(line: 200, column: 3, scope: !4616, inlinedAt: !5087)
!5317 = !DILocation(line: 201, column: 9, scope: !4618, inlinedAt: !5087)
!5318 = !DILocation(line: 2060, column: 7, scope: !5088)
!5319 = !DILocation(line: 2060, column: 7, scope: !5089)
!5320 = !DILocation(line: 2061, column: 4, scope: !5088)
!5321 = !DILocation(line: 2062, column: 3, scope: !5089)
!5322 = !DILocation(line: 2063, column: 13, scope: !5049)
!5323 = !DILocation(line: 2063, column: 17, scope: !5049)
!5324 = !DILocation(line: 2063, column: 13, scope: !5050)
!5325 = !DILocation(line: 2064, column: 28, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5049, file: !3, line: 2063, column: 47)
!5327 = !DILocation(line: 2064, column: 34, scope: !5326)
!5328 = !DILocation(line: 2064, column: 10, scope: !5326)
!5329 = !DILocation(line: 2064, column: 3, scope: !5326)
!5330 = !DILocation(line: 2065, column: 13, scope: !5048)
!5331 = !DILocation(line: 2065, column: 17, scope: !5048)
!5332 = !DILocation(line: 2065, column: 13, scope: !5049)
!5333 = !DILocation(line: 2066, column: 27, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5048, file: !3, line: 2065, column: 46)
!5335 = !DILocation(line: 2066, column: 33, scope: !5334)
!5336 = !DILocation(line: 2066, column: 10, scope: !5334)
!5337 = !DILocation(line: 2066, column: 3, scope: !5334)
!5338 = !DILocation(line: 2067, column: 13, scope: !5047)
!5339 = !DILocation(line: 2067, column: 17, scope: !5047)
!5340 = !DILocation(line: 2067, column: 13, scope: !5048)
!5341 = !DILocalVariable(name: "desc", scope: !5066, file: !3, line: 2068, type: !3471)
!5342 = !DILocation(line: 2068, column: 21, scope: !5066)
!5343 = !DILocalVariable(name: "lineinfo", scope: !5066, file: !3, line: 2069, type: !4933)
!5344 = !DILocation(line: 2069, column: 24, scope: !5066)
!5345 = !DILocalVariable(name: "lineinfo_v2", scope: !5066, file: !3, line: 2070, type: !4497)
!5346 = !DILocation(line: 2070, column: 28, scope: !5066)
!5347 = !DILocation(line: 2072, column: 22, scope: !5077)
!5348 = !DILocation(line: 2072, column: 33, scope: !5077)
!5349 = !DILocation(line: 191, column: 6, scope: !5039, inlinedAt: !5076)
!5350 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !5075)
!5351 = !DILocation(line: 0, scope: !4881, inlinedAt: !5075)
!5352 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !5075)
!5353 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !5075)
!5354 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !5075)
!5355 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !5075)
!5356 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !5075)
!5357 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !5075)
!5358 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !5075)
!5359 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !5075)
!5360 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !5075)
!5361 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !5075)
!5362 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !5075)
!5363 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !5075)
!5364 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !5075)
!5365 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !5075)
!5366 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !5075)
!5367 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !5075)
!5368 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !5075)
!5369 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !5075)
!5370 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !5075)
!5371 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !5075)
!5372 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !5075)
!5373 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !5075)
!5374 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !5075)
!5375 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !5075)
!5376 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !5075)
!5377 = !DILocation(line: 191, column: 6, scope: !5040, inlinedAt: !5076)
!5378 = !DILocation(line: 192, column: 23, scope: !5039, inlinedAt: !5076)
!5379 = !DILocation(line: 192, column: 27, scope: !5039, inlinedAt: !5076)
!5380 = !DILocation(line: 192, column: 33, scope: !5039, inlinedAt: !5076)
!5381 = !DILocation(line: 192, column: 7, scope: !5039, inlinedAt: !5076)
!5382 = !DILocation(line: 192, column: 5, scope: !5039, inlinedAt: !5076)
!5383 = !DILocation(line: 192, column: 3, scope: !5039, inlinedAt: !5076)
!5384 = !DILocation(line: 193, column: 9, scope: !5040, inlinedAt: !5076)
!5385 = !DILocation(line: 2072, column: 7, scope: !5077)
!5386 = !DILocation(line: 2072, column: 7, scope: !5066)
!5387 = !DILocation(line: 2073, column: 4, scope: !5077)
!5388 = !DILocation(line: 2076, column: 28, scope: !5066)
!5389 = !DILocation(line: 2076, column: 41, scope: !5066)
!5390 = !DILocation(line: 2076, column: 10, scope: !5066)
!5391 = !DILocation(line: 2076, column: 8, scope: !5066)
!5392 = !DILocation(line: 2077, column: 14, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5066, file: !3, line: 2077, column: 7)
!5394 = !DILocation(line: 2077, column: 7, scope: !5393)
!5395 = !DILocation(line: 2077, column: 7, scope: !5066)
!5396 = !DILocation(line: 2078, column: 19, scope: !5393)
!5397 = !DILocation(line: 2078, column: 11, scope: !5393)
!5398 = !DILocation(line: 2078, column: 4, scope: !5393)
!5399 = !DILocation(line: 2080, column: 35, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5066, file: !3, line: 2080, column: 7)
!5401 = !DILocation(line: 2080, column: 7, scope: !5400)
!5402 = !DILocation(line: 2080, column: 7, scope: !5066)
!5403 = !DILocation(line: 2081, column: 4, scope: !5400)
!5404 = !DILocation(line: 2083, column: 33, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5066, file: !3, line: 2083, column: 7)
!5406 = !DILocation(line: 2083, column: 24, scope: !5405)
!5407 = !DILocation(line: 2083, column: 46, scope: !5405)
!5408 = !DILocation(line: 2083, column: 52, scope: !5405)
!5409 = !DILocation(line: 2083, column: 7, scope: !5405)
!5410 = !DILocation(line: 2083, column: 7, scope: !5066)
!5411 = !DILocation(line: 2084, column: 4, scope: !5405)
!5412 = !DILocation(line: 2086, column: 25, scope: !5066)
!5413 = !DILocation(line: 2086, column: 3, scope: !5066)
!5414 = !DILocation(line: 2087, column: 3, scope: !5066)
!5415 = !DILocation(line: 2089, column: 20, scope: !5065)
!5416 = !DILocation(line: 2089, column: 24, scope: !5065)
!5417 = !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !5064)
!5418 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !5063)
!5419 = !DILocation(line: 0, scope: !4881, inlinedAt: !5063)
!5420 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !5063)
!5421 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !5063)
!5422 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !5063)
!5423 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !5063)
!5424 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !5063)
!5425 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !5063)
!5426 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !5063)
!5427 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !5063)
!5428 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !5063)
!5429 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !5063)
!5430 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !5063)
!5431 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !5063)
!5432 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !5063)
!5433 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !5063)
!5434 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !5063)
!5435 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !5063)
!5436 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !5063)
!5437 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !5063)
!5438 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !5063)
!5439 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !5063)
!5440 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !5063)
!5441 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !5063)
!5442 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !5063)
!5443 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !5063)
!5444 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !5063)
!5445 = !DILocation(line: 199, column: 6, scope: !4618, inlinedAt: !5064)
!5446 = !DILocation(line: 200, column: 21, scope: !4616, inlinedAt: !5064)
!5447 = !DILocation(line: 200, column: 25, scope: !4616, inlinedAt: !5064)
!5448 = !DILocation(line: 200, column: 31, scope: !4616, inlinedAt: !5064)
!5449 = !DILocation(line: 200, column: 7, scope: !4616, inlinedAt: !5064)
!5450 = !DILocation(line: 200, column: 5, scope: !4616, inlinedAt: !5064)
!5451 = !DILocation(line: 200, column: 3, scope: !4616, inlinedAt: !5064)
!5452 = !DILocation(line: 201, column: 9, scope: !4618, inlinedAt: !5064)
!5453 = !DILocation(line: 2089, column: 7, scope: !5065)
!5454 = !DILocation(line: 2089, column: 7, scope: !5066)
!5455 = !DILocation(line: 2090, column: 23, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5065, file: !3, line: 2089, column: 54)
!5457 = !DILocation(line: 2090, column: 14, scope: !5456)
!5458 = !DILocation(line: 2090, column: 36, scope: !5456)
!5459 = !DILocation(line: 2090, column: 42, scope: !5456)
!5460 = !DILocation(line: 2090, column: 4, scope: !5456)
!5461 = !DILocation(line: 2091, column: 4, scope: !5456)
!5462 = !DILocation(line: 2094, column: 3, scope: !5066)
!5463 = !DILocation(line: 2096, column: 13, scope: !5046)
!5464 = !DILocation(line: 2096, column: 17, scope: !5046)
!5465 = !DILocation(line: 2096, column: 47, scope: !5046)
!5466 = !DILocation(line: 2097, column: 6, scope: !5046)
!5467 = !DILocation(line: 2097, column: 10, scope: !5046)
!5468 = !DILocation(line: 2096, column: 13, scope: !5047)
!5469 = !DILocation(line: 2098, column: 23, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5046, file: !3, line: 2097, column: 47)
!5471 = !DILocation(line: 2098, column: 29, scope: !5470)
!5472 = !DILocation(line: 2099, column: 9, scope: !5470)
!5473 = !DILocation(line: 2099, column: 13, scope: !5470)
!5474 = !DILocation(line: 2098, column: 10, scope: !5470)
!5475 = !DILocation(line: 2098, column: 3, scope: !5470)
!5476 = !DILocation(line: 2100, column: 13, scope: !5045)
!5477 = !DILocation(line: 2100, column: 17, scope: !5045)
!5478 = !DILocation(line: 2100, column: 13, scope: !5046)
!5479 = !DILocation(line: 2101, column: 25, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 2100, column: 44)
!5481 = !DILocation(line: 2101, column: 31, scope: !5480)
!5482 = !DILocation(line: 2101, column: 10, scope: !5480)
!5483 = !DILocation(line: 2101, column: 3, scope: !5480)
!5484 = !DILocation(line: 2102, column: 13, scope: !5044)
!5485 = !DILocation(line: 2102, column: 17, scope: !5044)
!5486 = !DILocation(line: 2102, column: 13, scope: !5045)
!5487 = !DILocation(line: 2103, column: 22, scope: !5042)
!5488 = !DILocation(line: 2103, column: 31, scope: !5042)
!5489 = !DILocation(line: 191, column: 6, scope: !5039, inlinedAt: !5041)
!5490 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !5038)
!5491 = !DILocation(line: 0, scope: !4881, inlinedAt: !5038)
!5492 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !5038)
!5493 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !5038)
!5494 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !5038)
!5495 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !5038)
!5496 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !5038)
!5497 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !5038)
!5498 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !5038)
!5499 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !5038)
!5500 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !5038)
!5501 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !5038)
!5502 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !5038)
!5503 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !5038)
!5504 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !5038)
!5505 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !5038)
!5506 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !5038)
!5507 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !5038)
!5508 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !5038)
!5509 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !5038)
!5510 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !5038)
!5511 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !5038)
!5512 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !5038)
!5513 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !5038)
!5514 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !5038)
!5515 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !5038)
!5516 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !5038)
!5517 = !DILocation(line: 191, column: 6, scope: !5040, inlinedAt: !5041)
!5518 = !DILocation(line: 192, column: 23, scope: !5039, inlinedAt: !5041)
!5519 = !DILocation(line: 192, column: 27, scope: !5039, inlinedAt: !5041)
!5520 = !DILocation(line: 192, column: 33, scope: !5039, inlinedAt: !5041)
!5521 = !DILocation(line: 192, column: 7, scope: !5039, inlinedAt: !5041)
!5522 = !DILocation(line: 192, column: 5, scope: !5039, inlinedAt: !5041)
!5523 = !DILocation(line: 192, column: 3, scope: !5039, inlinedAt: !5041)
!5524 = !DILocation(line: 193, column: 9, scope: !5040, inlinedAt: !5041)
!5525 = !DILocation(line: 2103, column: 7, scope: !5042)
!5526 = !DILocation(line: 2103, column: 7, scope: !5043)
!5527 = !DILocation(line: 2104, column: 4, scope: !5042)
!5528 = !DILocation(line: 2106, column: 7, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5043, file: !3, line: 2106, column: 7)
!5530 = !DILocation(line: 2106, column: 17, scope: !5529)
!5531 = !DILocation(line: 2106, column: 23, scope: !5529)
!5532 = !DILocation(line: 2106, column: 29, scope: !5529)
!5533 = !DILocation(line: 2106, column: 14, scope: !5529)
!5534 = !DILocation(line: 2106, column: 7, scope: !5043)
!5535 = !DILocation(line: 2107, column: 4, scope: !5529)
!5536 = !DILocation(line: 2109, column: 27, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5043, file: !3, line: 2109, column: 7)
!5538 = !DILocation(line: 2109, column: 35, scope: !5537)
!5539 = !DILocation(line: 2109, column: 41, scope: !5537)
!5540 = !DILocation(line: 2109, column: 8, scope: !5537)
!5541 = !DILocation(line: 2109, column: 7, scope: !5043)
!5542 = !DILocation(line: 2110, column: 4, scope: !5537)
!5543 = !DILocation(line: 2112, column: 3, scope: !5043)
!5544 = !DILocation(line: 2114, column: 2, scope: !5036)
!5545 = !DILocation(line: 2115, column: 1, scope: !5036)
!5546 = !DILocalVariable(name: "inode", arg: 1, scope: !4556, file: !3, line: 2253, type: !527)
!5547 = !DILocation(line: 2253, column: 43, scope: !4556)
!5548 = !DILocalVariable(name: "file", arg: 2, scope: !4556, file: !3, line: 2253, type: !894)
!5549 = !DILocation(line: 2253, column: 63, scope: !4556)
!5550 = !DILocalVariable(name: "gdev", scope: !4556, file: !3, line: 2255, type: !3476)
!5551 = !DILocation(line: 2255, column: 22, scope: !4556)
!5552 = !DILocalVariable(name: "__mptr", scope: !5553, file: !3, line: 2255, type: !224)
!5553 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 2255, column: 29)
!5554 = !DILocation(line: 2255, column: 29, scope: !5553)
!5555 = !DILocation(line: 2255, column: 29, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5553, file: !3, line: 2255, column: 29)
!5557 = !DILocalVariable(name: "cdev", scope: !4556, file: !3, line: 2257, type: !4480)
!5558 = !DILocation(line: 2257, column: 28, scope: !4556)
!5559 = !DILocalVariable(name: "ret", scope: !4556, file: !3, line: 2258, type: !236)
!5560 = !DILocation(line: 2258, column: 6, scope: !4556)
!5561 = !DILocation(line: 2261, column: 7, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 2261, column: 6)
!5563 = !DILocation(line: 2261, column: 13, scope: !5562)
!5564 = !DILocation(line: 2261, column: 6, scope: !4556)
!5565 = !DILocation(line: 2262, column: 3, scope: !5562)
!5566 = !DILocation(line: 2264, column: 9, scope: !4556)
!5567 = !DILocation(line: 2264, column: 7, scope: !4556)
!5568 = !DILocation(line: 2265, column: 7, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 2265, column: 6)
!5570 = !DILocation(line: 2265, column: 6, scope: !4556)
!5571 = !DILocation(line: 2266, column: 3, scope: !5569)
!5572 = !DILocation(line: 2268, column: 38, scope: !4556)
!5573 = !DILocation(line: 2268, column: 44, scope: !4556)
!5574 = !DILocation(line: 2268, column: 50, scope: !4556)
!5575 = !DILocation(line: 2268, column: 24, scope: !4556)
!5576 = !DILocation(line: 2268, column: 2, scope: !4556)
!5577 = !DILocation(line: 2268, column: 8, scope: !4556)
!5578 = !DILocation(line: 2268, column: 22, scope: !4556)
!5579 = !DILocation(line: 2269, column: 7, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 2269, column: 6)
!5581 = !DILocation(line: 2269, column: 13, scope: !5580)
!5582 = !DILocation(line: 2269, column: 6, scope: !4556)
!5583 = !DILocation(line: 2270, column: 3, scope: !5580)
!5584 = !DILocation(line: 2272, column: 2, scope: !4556)
!5585 = !DILocation(line: 2272, column: 2, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 2272, column: 2)
!5587 = !DILocalVariable(name: "__tmp", scope: !5588, file: !3, line: 2273, type: !4760)
!5588 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 2273, column: 2)
!5589 = !DILocation(line: 2273, column: 2, scope: !5588)
!5590 = !DILocalVariable(name: "__kfifo", scope: !5588, file: !3, line: 2273, type: !4856)
!5591 = !DILocation(line: 2274, column: 15, scope: !4556)
!5592 = !DILocation(line: 2274, column: 2, scope: !4556)
!5593 = !DILocation(line: 2274, column: 8, scope: !4556)
!5594 = !DILocation(line: 2274, column: 13, scope: !4556)
!5595 = !DILocation(line: 2276, column: 2, scope: !4556)
!5596 = !DILocation(line: 2276, column: 8, scope: !4556)
!5597 = !DILocation(line: 2276, column: 28, scope: !4556)
!5598 = !DILocation(line: 2276, column: 42, scope: !4556)
!5599 = !DILocation(line: 2277, column: 42, scope: !4556)
!5600 = !DILocation(line: 2277, column: 48, scope: !4556)
!5601 = !DILocation(line: 2278, column: 14, scope: !4556)
!5602 = !DILocation(line: 2278, column: 20, scope: !4556)
!5603 = !DILocation(line: 2277, column: 8, scope: !4556)
!5604 = !DILocation(line: 2277, column: 6, scope: !4556)
!5605 = !DILocation(line: 2279, column: 6, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 2279, column: 6)
!5607 = !DILocation(line: 2279, column: 6, scope: !4556)
!5608 = !DILocation(line: 2280, column: 3, scope: !5606)
!5609 = !DILocation(line: 2282, column: 14, scope: !4556)
!5610 = !DILocation(line: 2282, column: 20, scope: !4556)
!5611 = !DILocation(line: 2282, column: 2, scope: !4556)
!5612 = !DILocation(line: 2283, column: 23, scope: !4556)
!5613 = !DILocation(line: 2283, column: 2, scope: !4556)
!5614 = !DILocation(line: 2283, column: 8, scope: !4556)
!5615 = !DILocation(line: 2283, column: 21, scope: !4556)
!5616 = !DILocation(line: 2285, column: 25, scope: !4556)
!5617 = !DILocation(line: 2285, column: 32, scope: !4556)
!5618 = !DILocation(line: 2285, column: 8, scope: !4556)
!5619 = !DILocation(line: 2285, column: 6, scope: !4556)
!5620 = !DILocation(line: 2286, column: 6, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 2286, column: 6)
!5622 = !DILocation(line: 2286, column: 6, scope: !4556)
!5623 = !DILocation(line: 2287, column: 3, scope: !5621)
!5624 = !DILocation(line: 2289, column: 9, scope: !4556)
!5625 = !DILocation(line: 2289, column: 2, scope: !4556)
!5626 = !DILabel(scope: !4556, name: "out_unregister_notifier", file: !3, line: 2291)
!5627 = !DILocation(line: 2291, column: 1, scope: !4556)
!5628 = !DILocation(line: 2292, column: 38, scope: !4556)
!5629 = !DILocation(line: 2292, column: 44, scope: !4556)
!5630 = !DILocation(line: 2293, column: 10, scope: !4556)
!5631 = !DILocation(line: 2293, column: 16, scope: !4556)
!5632 = !DILocation(line: 2292, column: 2, scope: !4556)
!5633 = !DILabel(scope: !4556, name: "out_free_bitmap", file: !3, line: 2294)
!5634 = !DILocation(line: 2294, column: 1, scope: !4556)
!5635 = !DILocation(line: 2295, column: 14, scope: !4556)
!5636 = !DILocation(line: 2295, column: 20, scope: !4556)
!5637 = !DILocation(line: 2295, column: 2, scope: !4556)
!5638 = !DILabel(scope: !4556, name: "out_free_cdev", file: !3, line: 2296)
!5639 = !DILocation(line: 2296, column: 1, scope: !4556)
!5640 = !DILocation(line: 2297, column: 8, scope: !4556)
!5641 = !DILocation(line: 2297, column: 2, scope: !4556)
!5642 = !DILocation(line: 2298, column: 9, scope: !4556)
!5643 = !DILocation(line: 2298, column: 2, scope: !4556)
!5644 = !DILocation(line: 2299, column: 1, scope: !4556)
!5645 = distinct !DISubprogram(name: "gpio_chrdev_release", scope: !3, file: !3, line: 2307, type: !1027, scopeLine: 2308, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!5646 = !DILocalVariable(name: "inode", arg: 1, scope: !5645, file: !3, line: 2307, type: !527)
!5647 = !DILocation(line: 2307, column: 46, scope: !5645)
!5648 = !DILocalVariable(name: "file", arg: 2, scope: !5645, file: !3, line: 2307, type: !894)
!5649 = !DILocation(line: 2307, column: 66, scope: !5645)
!5650 = !DILocalVariable(name: "cdev", scope: !5645, file: !3, line: 2309, type: !4480)
!5651 = !DILocation(line: 2309, column: 28, scope: !5645)
!5652 = !DILocation(line: 2309, column: 35, scope: !5645)
!5653 = !DILocation(line: 2309, column: 41, scope: !5645)
!5654 = !DILocalVariable(name: "gdev", scope: !5645, file: !3, line: 2310, type: !3476)
!5655 = !DILocation(line: 2310, column: 22, scope: !5645)
!5656 = !DILocation(line: 2310, column: 29, scope: !5645)
!5657 = !DILocation(line: 2310, column: 35, scope: !5645)
!5658 = !DILocation(line: 2312, column: 14, scope: !5645)
!5659 = !DILocation(line: 2312, column: 20, scope: !5645)
!5660 = !DILocation(line: 2312, column: 2, scope: !5645)
!5661 = !DILocation(line: 2313, column: 38, scope: !5645)
!5662 = !DILocation(line: 2313, column: 44, scope: !5645)
!5663 = !DILocation(line: 2314, column: 10, scope: !5645)
!5664 = !DILocation(line: 2314, column: 16, scope: !5645)
!5665 = !DILocation(line: 2313, column: 2, scope: !5645)
!5666 = !DILocation(line: 2315, column: 14, scope: !5645)
!5667 = !DILocation(line: 2315, column: 20, scope: !5645)
!5668 = !DILocation(line: 2315, column: 2, scope: !5645)
!5669 = !DILocation(line: 2316, column: 8, scope: !5645)
!5670 = !DILocation(line: 2316, column: 2, scope: !5645)
!5671 = !DILocation(line: 2318, column: 2, scope: !5645)
!5672 = distinct !DISubprogram(name: "__remove_wait_queue", scope: !1009, file: !1009, line: 197, type: !5673, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!5673 = !DISubroutineType(types: !5674)
!5674 = !{null, !5675, !4802}
!5675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!5676 = !DILocalVariable(name: "wq_head", arg: 1, scope: !5672, file: !1009, line: 197, type: !5675)
!5677 = !DILocation(line: 197, column: 45, scope: !5672)
!5678 = !DILocalVariable(name: "wq_entry", arg: 2, scope: !5672, file: !1009, line: 197, type: !4802)
!5679 = !DILocation(line: 197, column: 79, scope: !5672)
!5680 = !DILocation(line: 199, column: 12, scope: !5672)
!5681 = !DILocation(line: 199, column: 22, scope: !5672)
!5682 = !DILocation(line: 199, column: 2, scope: !5672)
!5683 = !DILocation(line: 200, column: 1, scope: !5672)
!5684 = distinct !DISubprogram(name: "__kfifo_uint_must_check_helper", scope: !4433, file: !4433, line: 163, type: !5685, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!5685 = !DISubroutineType(types: !5686)
!5686 = !{!7, !7}
!5687 = !DILocalVariable(name: "val", arg: 1, scope: !5684, file: !4433, line: 163, type: !7)
!5688 = !DILocation(line: 163, column: 45, scope: !5684)
!5689 = !DILocation(line: 165, column: 9, scope: !5684)
!5690 = !DILocation(line: 165, column: 2, scope: !5684)
!5691 = distinct !DISubprogram(name: "gpio_v2_line_info_changed_to_v1", scope: !3, file: !3, line: 1862, type: !5692, scopeLine: 1865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!5692 = !DISubroutineType(types: !5693)
!5693 = !{null, !4493, !5694}
!5694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4930, size: 64)
!5695 = !DILocalVariable(name: "lic_v2", arg: 1, scope: !5691, file: !3, line: 1863, type: !4493)
!5696 = !DILocation(line: 1863, column: 37, scope: !5691)
!5697 = !DILocalVariable(name: "lic_v1", arg: 2, scope: !5691, file: !3, line: 1864, type: !5694)
!5698 = !DILocation(line: 1864, column: 33, scope: !5691)
!5699 = !DILocation(line: 1866, column: 27, scope: !5691)
!5700 = !DILocation(line: 1866, column: 35, scope: !5691)
!5701 = !DILocation(line: 1866, column: 42, scope: !5691)
!5702 = !DILocation(line: 1866, column: 50, scope: !5691)
!5703 = !DILocation(line: 1866, column: 2, scope: !5691)
!5704 = !DILocation(line: 1867, column: 22, scope: !5691)
!5705 = !DILocation(line: 1867, column: 30, scope: !5691)
!5706 = !DILocation(line: 1867, column: 2, scope: !5691)
!5707 = !DILocation(line: 1867, column: 10, scope: !5691)
!5708 = !DILocation(line: 1867, column: 20, scope: !5691)
!5709 = !DILocation(line: 1868, column: 23, scope: !5691)
!5710 = !DILocation(line: 1868, column: 31, scope: !5691)
!5711 = !DILocation(line: 1868, column: 2, scope: !5691)
!5712 = !DILocation(line: 1868, column: 10, scope: !5691)
!5713 = !DILocation(line: 1868, column: 21, scope: !5691)
!5714 = !DILocation(line: 1869, column: 1, scope: !5691)
!5715 = distinct !DISubprogram(name: "list_del", scope: !5716, file: !5716, line: 144, type: !5717, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!5716 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!5717 = !DISubroutineType(types: !5718)
!5718 = !{null, !268}
!5719 = !DILocalVariable(name: "entry", arg: 1, scope: !5715, file: !5716, line: 144, type: !268)
!5720 = !DILocation(line: 144, column: 47, scope: !5715)
!5721 = !DILocation(line: 146, column: 19, scope: !5715)
!5722 = !DILocation(line: 146, column: 2, scope: !5715)
!5723 = !DILocation(line: 147, column: 2, scope: !5715)
!5724 = !DILocation(line: 147, column: 9, scope: !5715)
!5725 = !DILocation(line: 147, column: 14, scope: !5715)
!5726 = !DILocation(line: 148, column: 2, scope: !5715)
!5727 = !DILocation(line: 148, column: 9, scope: !5715)
!5728 = !DILocation(line: 148, column: 14, scope: !5715)
!5729 = !DILocation(line: 149, column: 1, scope: !5715)
!5730 = distinct !DISubprogram(name: "__list_del_entry", scope: !5716, file: !5716, line: 130, type: !5717, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!5731 = !DILocalVariable(name: "entry", arg: 1, scope: !5730, file: !5716, line: 130, type: !268)
!5732 = !DILocation(line: 130, column: 55, scope: !5730)
!5733 = !DILocation(line: 132, column: 30, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5730, file: !5716, line: 132, column: 6)
!5735 = !DILocation(line: 132, column: 7, scope: !5734)
!5736 = !DILocation(line: 132, column: 6, scope: !5730)
!5737 = !DILocation(line: 133, column: 3, scope: !5734)
!5738 = !DILocation(line: 135, column: 13, scope: !5730)
!5739 = !DILocation(line: 135, column: 20, scope: !5730)
!5740 = !DILocation(line: 135, column: 26, scope: !5730)
!5741 = !DILocation(line: 135, column: 33, scope: !5730)
!5742 = !DILocation(line: 135, column: 2, scope: !5730)
!5743 = !DILocation(line: 136, column: 1, scope: !5730)
!5744 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !5716, file: !5716, line: 51, type: !5745, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!5745 = !DISubroutineType(types: !5746)
!5746 = !{!682, !268}
!5747 = !DILocalVariable(name: "entry", arg: 1, scope: !5744, file: !5716, line: 51, type: !268)
!5748 = !DILocation(line: 51, column: 61, scope: !5744)
!5749 = !DILocation(line: 53, column: 2, scope: !5744)
!5750 = distinct !DISubprogram(name: "__list_del", scope: !5716, file: !5716, line: 110, type: !5751, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!5751 = !DISubroutineType(types: !5752)
!5752 = !{null, !268, !268}
!5753 = !DILocalVariable(name: "prev", arg: 1, scope: !5750, file: !5716, line: 110, type: !268)
!5754 = !DILocation(line: 110, column: 50, scope: !5750)
!5755 = !DILocalVariable(name: "next", arg: 2, scope: !5750, file: !5716, line: 110, type: !268)
!5756 = !DILocation(line: 110, column: 75, scope: !5750)
!5757 = !DILocation(line: 112, column: 15, scope: !5750)
!5758 = !DILocation(line: 112, column: 2, scope: !5750)
!5759 = !DILocation(line: 112, column: 8, scope: !5750)
!5760 = !DILocation(line: 112, column: 13, scope: !5750)
!5761 = !DILocation(line: 113, column: 2, scope: !5750)
!5762 = !DILocation(line: 113, column: 2, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5750, file: !5716, line: 113, column: 2)
!5764 = !DILocation(line: 113, column: 2, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5763, file: !5716, line: 113, column: 2)
!5766 = !DILocation(line: 113, column: 2, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5763, file: !5716, line: 113, column: 2)
!5768 = !DILocation(line: 114, column: 1, scope: !5750)
!5769 = distinct !DISubprogram(name: "kasan_check_read", scope: !5770, file: !5770, line: 34, type: !5771, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!5770 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!5771 = !DISubroutineType(types: !5772)
!5772 = !{!682, !4683, !7}
!5773 = !DILocalVariable(name: "p", arg: 1, scope: !5769, file: !5770, line: 34, type: !4683)
!5774 = !DILocation(line: 34, column: 58, scope: !5769)
!5775 = !DILocalVariable(name: "size", arg: 2, scope: !5769, file: !5770, line: 34, type: !7)
!5776 = !DILocation(line: 34, column: 74, scope: !5769)
!5777 = !DILocation(line: 36, column: 2, scope: !5769)
!5778 = distinct !DISubprogram(name: "kcsan_check_access", scope: !5779, file: !5779, line: 178, type: !5780, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!5779 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!5780 = !DISubroutineType(types: !5781)
!5781 = !{null, !4683, !815, !236}
!5782 = !DILocalVariable(name: "ptr", arg: 1, scope: !5778, file: !5779, line: 178, type: !4683)
!5783 = !DILocation(line: 178, column: 60, scope: !5778)
!5784 = !DILocalVariable(name: "size", arg: 2, scope: !5778, file: !5779, line: 178, type: !815)
!5785 = !DILocation(line: 178, column: 72, scope: !5778)
!5786 = !DILocalVariable(name: "type", arg: 3, scope: !5778, file: !5779, line: 179, type: !236)
!5787 = !DILocation(line: 179, column: 15, scope: !5778)
!5788 = !DILocation(line: 179, column: 23, scope: !5778)
!5789 = distinct !DISubprogram(name: "copy_overflow", scope: !4611, file: !4611, line: 132, type: !5790, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!5790 = !DISubroutineType(types: !5791)
!5791 = !{null, !236, !215}
!5792 = !DILocalVariable(name: "size", arg: 1, scope: !5789, file: !4611, line: 132, type: !236)
!5793 = !DILocation(line: 132, column: 38, scope: !5789)
!5794 = !DILocalVariable(name: "count", arg: 2, scope: !5789, file: !4611, line: 132, type: !215)
!5795 = !DILocation(line: 132, column: 58, scope: !5789)
!5796 = !DILocalVariable(name: "__ret_warn_on", scope: !5797, file: !4611, line: 134, type: !236)
!5797 = distinct !DILexicalBlock(scope: !5789, file: !4611, line: 134, column: 2)
!5798 = !DILocation(line: 134, column: 2, scope: !5797)
!5799 = !DILocation(line: 134, column: 2, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5797, file: !4611, line: 134, column: 2)
!5801 = !DILocation(line: 134, column: 2, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5800, file: !4611, line: 134, column: 2)
!5803 = !DILocation(line: 134, column: 2, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5802, file: !4611, line: 134, column: 2)
!5805 = !DILocation(line: 134, column: 2, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5802, file: !4611, line: 134, column: 2)
!5807 = !DILocation(line: 134, column: 2, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5806, file: !4611, line: 134, column: 2)
!5809 = !DILocation(line: 134, column: 2, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5806, file: !4611, line: 134, column: 2)
!5811 = !{i32 -2145527169, i32 -2145527140, i32 -2145527094, i32 -2145527036, i32 -2145526982, i32 -2145526928, i32 -2145526873, i32 -2145526842}
!5812 = !DILocation(line: 134, column: 2, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5806, file: !4611, line: 134, column: 2)
!5814 = !{i32 -2145526422, i32 -2145526415, i32 -2145526363, i32 -2145526332, i32 -2145526302}
!5815 = !DILocation(line: 134, column: 2, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5806, file: !4611, line: 134, column: 2)
!5817 = !DILocation(line: 134, column: 2, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5802, file: !4611, line: 134, column: 2)
!5819 = !DILocation(line: 135, column: 1, scope: !5789)
!5820 = distinct !DISubprogram(name: "check_object_size", scope: !4611, file: !4611, line: 122, type: !5821, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!5821 = !DISubroutineType(types: !5822)
!5822 = !{null, !2158, !215, !682}
!5823 = !DILocalVariable(name: "ptr", arg: 1, scope: !5820, file: !4611, line: 122, type: !2158)
!5824 = !DILocation(line: 122, column: 50, scope: !5820)
!5825 = !DILocalVariable(name: "n", arg: 2, scope: !5820, file: !4611, line: 122, type: !215)
!5826 = !DILocation(line: 122, column: 69, scope: !5820)
!5827 = !DILocalVariable(name: "to_user", arg: 3, scope: !5820, file: !4611, line: 123, type: !682)
!5828 = !DILocation(line: 123, column: 15, scope: !5820)
!5829 = !DILocation(line: 124, column: 3, scope: !5820)
!5830 = distinct !DISubprogram(name: "gpio_v2_line_info_to_v1", scope: !3, file: !3, line: 1830, type: !5831, scopeLine: 1832, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!5831 = !DISubroutineType(types: !5832)
!5832 = !{null, !5833, !5834}
!5833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4497, size: 64)
!5834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4933, size: 64)
!5835 = !DILocalVariable(name: "info_v2", arg: 1, scope: !5830, file: !3, line: 1830, type: !5833)
!5836 = !DILocation(line: 1830, column: 63, scope: !5830)
!5837 = !DILocalVariable(name: "info_v1", arg: 2, scope: !5830, file: !3, line: 1831, type: !5834)
!5838 = !DILocation(line: 1831, column: 31, scope: !5830)
!5839 = !DILocalVariable(name: "flagsv2", scope: !5830, file: !3, line: 1833, type: !272)
!5840 = !DILocation(line: 1833, column: 6, scope: !5830)
!5841 = !DILocation(line: 1833, column: 16, scope: !5830)
!5842 = !DILocation(line: 1833, column: 25, scope: !5830)
!5843 = !DILocation(line: 1835, column: 9, scope: !5830)
!5844 = !DILocation(line: 1835, column: 18, scope: !5830)
!5845 = !DILocation(line: 1835, column: 2, scope: !5830)
!5846 = !DILocation(line: 1835, column: 24, scope: !5830)
!5847 = !DILocation(line: 1835, column: 33, scope: !5830)
!5848 = !DILocation(line: 1836, column: 9, scope: !5830)
!5849 = !DILocation(line: 1836, column: 18, scope: !5830)
!5850 = !DILocation(line: 1836, column: 2, scope: !5830)
!5851 = !DILocation(line: 1836, column: 28, scope: !5830)
!5852 = !DILocation(line: 1836, column: 37, scope: !5830)
!5853 = !DILocation(line: 1837, column: 25, scope: !5830)
!5854 = !DILocation(line: 1837, column: 34, scope: !5830)
!5855 = !DILocation(line: 1837, column: 2, scope: !5830)
!5856 = !DILocation(line: 1837, column: 11, scope: !5830)
!5857 = !DILocation(line: 1837, column: 23, scope: !5830)
!5858 = !DILocation(line: 1838, column: 2, scope: !5830)
!5859 = !DILocation(line: 1838, column: 11, scope: !5830)
!5860 = !DILocation(line: 1838, column: 17, scope: !5830)
!5861 = !DILocation(line: 1840, column: 6, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 1840, column: 6)
!5863 = !DILocation(line: 1840, column: 14, scope: !5862)
!5864 = !DILocation(line: 1840, column: 6, scope: !5830)
!5865 = !DILocation(line: 1841, column: 3, scope: !5862)
!5866 = !DILocation(line: 1841, column: 12, scope: !5862)
!5867 = !DILocation(line: 1841, column: 18, scope: !5862)
!5868 = !DILocation(line: 1843, column: 6, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 1843, column: 6)
!5870 = !DILocation(line: 1843, column: 14, scope: !5869)
!5871 = !DILocation(line: 1843, column: 6, scope: !5830)
!5872 = !DILocation(line: 1844, column: 3, scope: !5869)
!5873 = !DILocation(line: 1844, column: 12, scope: !5869)
!5874 = !DILocation(line: 1844, column: 18, scope: !5869)
!5875 = !DILocation(line: 1846, column: 6, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 1846, column: 6)
!5877 = !DILocation(line: 1846, column: 14, scope: !5876)
!5878 = !DILocation(line: 1846, column: 6, scope: !5830)
!5879 = !DILocation(line: 1847, column: 3, scope: !5876)
!5880 = !DILocation(line: 1847, column: 12, scope: !5876)
!5881 = !DILocation(line: 1847, column: 18, scope: !5876)
!5882 = !DILocation(line: 1849, column: 6, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 1849, column: 6)
!5884 = !DILocation(line: 1849, column: 14, scope: !5883)
!5885 = !DILocation(line: 1849, column: 6, scope: !5830)
!5886 = !DILocation(line: 1850, column: 3, scope: !5883)
!5887 = !DILocation(line: 1850, column: 12, scope: !5883)
!5888 = !DILocation(line: 1850, column: 18, scope: !5883)
!5889 = !DILocation(line: 1851, column: 6, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 1851, column: 6)
!5891 = !DILocation(line: 1851, column: 14, scope: !5890)
!5892 = !DILocation(line: 1851, column: 6, scope: !5830)
!5893 = !DILocation(line: 1852, column: 3, scope: !5890)
!5894 = !DILocation(line: 1852, column: 12, scope: !5890)
!5895 = !DILocation(line: 1852, column: 18, scope: !5890)
!5896 = !DILocation(line: 1854, column: 6, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 1854, column: 6)
!5898 = !DILocation(line: 1854, column: 14, scope: !5897)
!5899 = !DILocation(line: 1854, column: 6, scope: !5830)
!5900 = !DILocation(line: 1855, column: 3, scope: !5897)
!5901 = !DILocation(line: 1855, column: 12, scope: !5897)
!5902 = !DILocation(line: 1855, column: 18, scope: !5897)
!5903 = !DILocation(line: 1856, column: 6, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 1856, column: 6)
!5905 = !DILocation(line: 1856, column: 14, scope: !5904)
!5906 = !DILocation(line: 1856, column: 6, scope: !5830)
!5907 = !DILocation(line: 1857, column: 3, scope: !5904)
!5908 = !DILocation(line: 1857, column: 12, scope: !5904)
!5909 = !DILocation(line: 1857, column: 18, scope: !5904)
!5910 = !DILocation(line: 1858, column: 6, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 1858, column: 6)
!5912 = !DILocation(line: 1858, column: 14, scope: !5911)
!5913 = !DILocation(line: 1858, column: 6, scope: !5830)
!5914 = !DILocation(line: 1859, column: 3, scope: !5911)
!5915 = !DILocation(line: 1859, column: 12, scope: !5911)
!5916 = !DILocation(line: 1859, column: 18, scope: !5911)
!5917 = !DILocation(line: 1860, column: 1, scope: !5830)
!5918 = distinct !DISubprogram(name: "poll_wait", scope: !1000, file: !1000, line: 48, type: !5919, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!5919 = !DISubroutineType(types: !5920)
!5920 = !{null, !894, !1007, !5921}
!5921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5922, size: 64)
!5922 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_table", file: !1000, line: 46, baseType: !999)
!5923 = !DILocalVariable(name: "filp", arg: 1, scope: !5918, file: !1000, line: 48, type: !894)
!5924 = !DILocation(line: 48, column: 44, scope: !5918)
!5925 = !DILocalVariable(name: "wait_address", arg: 2, scope: !5918, file: !1000, line: 48, type: !1007)
!5926 = !DILocation(line: 48, column: 70, scope: !5918)
!5927 = !DILocalVariable(name: "p", arg: 3, scope: !5918, file: !1000, line: 48, type: !5921)
!5928 = !DILocation(line: 48, column: 96, scope: !5918)
!5929 = !DILocation(line: 50, column: 6, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5918, file: !1000, line: 50, column: 6)
!5931 = !DILocation(line: 50, column: 8, scope: !5930)
!5932 = !DILocation(line: 50, column: 11, scope: !5930)
!5933 = !DILocation(line: 50, column: 14, scope: !5930)
!5934 = !DILocation(line: 50, column: 21, scope: !5930)
!5935 = !DILocation(line: 50, column: 24, scope: !5930)
!5936 = !DILocation(line: 50, column: 6, scope: !5918)
!5937 = !DILocation(line: 51, column: 3, scope: !5930)
!5938 = !DILocation(line: 51, column: 6, scope: !5930)
!5939 = !DILocation(line: 51, column: 13, scope: !5930)
!5940 = !DILocation(line: 51, column: 19, scope: !5930)
!5941 = !DILocation(line: 51, column: 33, scope: !5930)
!5942 = !DILocation(line: 52, column: 1, scope: !5918)
!5943 = distinct !DISubprogram(name: "dev_name", scope: !73, file: !73, line: 609, type: !5944, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!5944 = !DISubroutineType(types: !5945)
!5945 = !{!637, !3815}
!5946 = !DILocalVariable(name: "dev", arg: 1, scope: !5943, file: !73, line: 609, type: !3815)
!5947 = !DILocation(line: 609, column: 57, scope: !5943)
!5948 = !DILocation(line: 612, column: 6, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5943, file: !73, line: 612, column: 6)
!5950 = !DILocation(line: 612, column: 11, scope: !5949)
!5951 = !DILocation(line: 612, column: 6, scope: !5943)
!5952 = !DILocation(line: 613, column: 10, scope: !5949)
!5953 = !DILocation(line: 613, column: 15, scope: !5949)
!5954 = !DILocation(line: 613, column: 3, scope: !5949)
!5955 = !DILocation(line: 615, column: 23, scope: !5943)
!5956 = !DILocation(line: 615, column: 28, scope: !5943)
!5957 = !DILocation(line: 615, column: 9, scope: !5943)
!5958 = !DILocation(line: 615, column: 2, scope: !5943)
!5959 = !DILocation(line: 616, column: 1, scope: !5943)
!5960 = distinct !DISubprogram(name: "IS_ERR", scope: !5961, file: !5961, line: 34, type: !5962, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!5961 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!5962 = !DISubroutineType(types: !5963)
!5963 = !{!682, !2158}
!5964 = !DILocalVariable(name: "ptr", arg: 1, scope: !5960, file: !5961, line: 34, type: !2158)
!5965 = !DILocation(line: 34, column: 60, scope: !5960)
!5966 = !DILocation(line: 36, column: 9, scope: !5960)
!5967 = !DILocation(line: 36, column: 2, scope: !5960)
!5968 = distinct !DISubprogram(name: "PTR_ERR", scope: !5961, file: !5961, line: 29, type: !5969, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!5969 = !DISubroutineType(types: !5970)
!5970 = !{!166, !2158}
!5971 = !DILocalVariable(name: "ptr", arg: 1, scope: !5968, file: !5961, line: 29, type: !2158)
!5972 = !DILocation(line: 29, column: 61, scope: !5968)
!5973 = !DILocation(line: 31, column: 16, scope: !5968)
!5974 = !DILocation(line: 31, column: 9, scope: !5968)
!5975 = !DILocation(line: 31, column: 2, scope: !5968)
!5976 = distinct !DISubprogram(name: "gpio_desc_to_lineinfo", scope: !3, file: !3, line: 1873, type: !5977, scopeLine: 1875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!5977 = !DISubroutineType(types: !5978)
!5978 = !{null, !3471, !5833}
!5979 = !DILocalVariable(name: "lock", arg: 1, scope: !5980, file: !4656, line: 407, type: !2591)
!5980 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !4656, file: !4656, line: 407, type: !5981, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!5981 = !DISubroutineType(types: !5982)
!5982 = !{null, !2591, !215}
!5983 = !DILocation(line: 407, column: 64, scope: !5980, inlinedAt: !5984)
!5984 = distinct !DILocation(line: 1949, column: 2, scope: !5976)
!5985 = !DILocalVariable(name: "flags", arg: 2, scope: !5980, file: !4656, line: 407, type: !215)
!5986 = !DILocation(line: 407, column: 84, scope: !5980, inlinedAt: !5984)
!5987 = !DILocalVariable(name: "lock", arg: 1, scope: !5988, file: !4656, line: 327, type: !2591)
!5988 = distinct !DISubprogram(name: "spinlock_check", scope: !4656, file: !4656, line: 327, type: !5989, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!5989 = !DISubroutineType(types: !5990)
!5990 = !{!5991, !2591}
!5991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!5992 = !DILocation(line: 327, column: 67, scope: !5988, inlinedAt: !5993)
!5993 = distinct !DILocation(line: 1895, column: 2, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5995, file: !3, line: 1895, column: 2)
!5995 = distinct !DILexicalBlock(scope: !5996, file: !3, line: 1895, column: 2)
!5996 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 1895, column: 2)
!5997 = distinct !DILexicalBlock(scope: !5998, file: !3, line: 1895, column: 2)
!5998 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 1895, column: 2)
!5999 = !DILocalVariable(name: "desc", arg: 1, scope: !5976, file: !3, line: 1873, type: !3471)
!6000 = !DILocation(line: 1873, column: 53, scope: !5976)
!6001 = !DILocalVariable(name: "info", arg: 2, scope: !5976, file: !3, line: 1874, type: !5833)
!6002 = !DILocation(line: 1874, column: 33, scope: !5976)
!6003 = !DILocalVariable(name: "gc", scope: !5976, file: !3, line: 1876, type: !4255)
!6004 = !DILocation(line: 1876, column: 20, scope: !5976)
!6005 = !DILocation(line: 1876, column: 25, scope: !5976)
!6006 = !DILocation(line: 1876, column: 31, scope: !5976)
!6007 = !DILocation(line: 1876, column: 37, scope: !5976)
!6008 = !DILocalVariable(name: "ok_for_pinctrl", scope: !5976, file: !3, line: 1877, type: !682)
!6009 = !DILocation(line: 1877, column: 7, scope: !5976)
!6010 = !DILocalVariable(name: "flags", scope: !5976, file: !3, line: 1878, type: !215)
!6011 = !DILocation(line: 1878, column: 16, scope: !5976)
!6012 = !DILocalVariable(name: "debounce_period_us", scope: !5976, file: !3, line: 1879, type: !217)
!6013 = !DILocation(line: 1879, column: 6, scope: !5976)
!6014 = !DILocalVariable(name: "num_attrs", scope: !5976, file: !3, line: 1880, type: !7)
!6015 = !DILocation(line: 1880, column: 15, scope: !5976)
!6016 = !DILocation(line: 1882, column: 9, scope: !5976)
!6017 = !DILocation(line: 1882, column: 2, scope: !5976)
!6018 = !DILocation(line: 1883, column: 34, scope: !5976)
!6019 = !DILocation(line: 1883, column: 17, scope: !5976)
!6020 = !DILocation(line: 1883, column: 2, scope: !5976)
!6021 = !DILocation(line: 1883, column: 8, scope: !5976)
!6022 = !DILocation(line: 1883, column: 15, scope: !5976)
!6023 = !DILocation(line: 1893, column: 29, scope: !5976)
!6024 = !DILocation(line: 1893, column: 33, scope: !5976)
!6025 = !DILocation(line: 1893, column: 40, scope: !5976)
!6026 = !DILocation(line: 1893, column: 46, scope: !5976)
!6027 = !DILocation(line: 1893, column: 38, scope: !5976)
!6028 = !DILocation(line: 1893, column: 3, scope: !5976)
!6029 = !DILocation(line: 1892, column: 17, scope: !5976)
!6030 = !DILocation(line: 1895, column: 2, scope: !5976)
!6031 = !DILocation(line: 1895, column: 2, scope: !5998)
!6032 = !DILocalVariable(name: "__dummy", scope: !6033, file: !3, line: 1895, type: !215)
!6033 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 1895, column: 2)
!6034 = !DILocation(line: 1895, column: 2, scope: !6033)
!6035 = !DILocalVariable(name: "__dummy2", scope: !6033, file: !3, line: 1895, type: !215)
!6036 = !DILocation(line: 1895, column: 2, scope: !5997)
!6037 = !DILocation(line: 1895, column: 2, scope: !5996)
!6038 = !DILocation(line: 1895, column: 2, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !5996, file: !3, line: 1895, column: 2)
!6040 = !DILocalVariable(name: "__dummy", scope: !6041, file: !3, line: 1895, type: !215)
!6041 = distinct !DILexicalBlock(scope: !6042, file: !3, line: 1895, column: 2)
!6042 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 1895, column: 2)
!6043 = !DILocation(line: 1895, column: 2, scope: !6041)
!6044 = !DILocalVariable(name: "__dummy2", scope: !6041, file: !3, line: 1895, type: !215)
!6045 = !DILocation(line: 1895, column: 2, scope: !6042)
!6046 = !DILocation(line: 1895, column: 2, scope: !5995)
!6047 = !{i32 -2141444401}
!6048 = !DILocation(line: 329, column: 10, scope: !5988, inlinedAt: !5993)
!6049 = !DILocation(line: 329, column: 16, scope: !5988, inlinedAt: !5993)
!6050 = !DILocation(line: 1895, column: 2, scope: !5994)
!6051 = !DILocation(line: 1897, column: 6, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 1897, column: 6)
!6053 = !DILocation(line: 1897, column: 12, scope: !6052)
!6054 = !DILocation(line: 1897, column: 6, scope: !5976)
!6055 = !DILocation(line: 1898, column: 11, scope: !6052)
!6056 = !DILocation(line: 1898, column: 17, scope: !6052)
!6057 = !DILocation(line: 1898, column: 23, scope: !6052)
!6058 = !DILocation(line: 1898, column: 29, scope: !6052)
!6059 = !DILocation(line: 1898, column: 3, scope: !6052)
!6060 = !DILocation(line: 1900, column: 6, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 1900, column: 6)
!6062 = !DILocation(line: 1900, column: 12, scope: !6061)
!6063 = !DILocation(line: 1900, column: 6, scope: !5976)
!6064 = !DILocation(line: 1901, column: 11, scope: !6061)
!6065 = !DILocation(line: 1901, column: 17, scope: !6061)
!6066 = !DILocation(line: 1901, column: 27, scope: !6061)
!6067 = !DILocation(line: 1901, column: 33, scope: !6061)
!6068 = !DILocation(line: 1901, column: 3, scope: !6061)
!6069 = !DILocation(line: 1907, column: 2, scope: !5976)
!6070 = !DILocation(line: 1907, column: 8, scope: !5976)
!6071 = !DILocation(line: 1907, column: 14, scope: !5976)
!6072 = !DILocation(line: 1908, column: 32, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 1908, column: 6)
!6074 = !DILocation(line: 1908, column: 38, scope: !6073)
!6075 = !DILocation(line: 1908, column: 6, scope: !6073)
!6076 = !DILocation(line: 1908, column: 45, scope: !6073)
!6077 = !DILocation(line: 1909, column: 32, scope: !6073)
!6078 = !DILocation(line: 1909, column: 38, scope: !6073)
!6079 = !DILocation(line: 1909, column: 6, scope: !6073)
!6080 = !DILocation(line: 1909, column: 45, scope: !6073)
!6081 = !DILocation(line: 1910, column: 34, scope: !6073)
!6082 = !DILocation(line: 1910, column: 40, scope: !6073)
!6083 = !DILocation(line: 1910, column: 6, scope: !6073)
!6084 = !DILocation(line: 1910, column: 47, scope: !6073)
!6085 = !DILocation(line: 1911, column: 29, scope: !6073)
!6086 = !DILocation(line: 1911, column: 35, scope: !6073)
!6087 = !DILocation(line: 1911, column: 6, scope: !6073)
!6088 = !DILocation(line: 1911, column: 42, scope: !6073)
!6089 = !DILocation(line: 1912, column: 28, scope: !6073)
!6090 = !DILocation(line: 1912, column: 34, scope: !6073)
!6091 = !DILocation(line: 1912, column: 6, scope: !6073)
!6092 = !DILocation(line: 1912, column: 41, scope: !6073)
!6093 = !DILocation(line: 1913, column: 7, scope: !6073)
!6094 = !DILocation(line: 1908, column: 6, scope: !5976)
!6095 = !DILocation(line: 1914, column: 3, scope: !6073)
!6096 = !DILocation(line: 1914, column: 9, scope: !6073)
!6097 = !DILocation(line: 1914, column: 15, scope: !6073)
!6098 = !DILocation(line: 1916, column: 29, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 1916, column: 6)
!6100 = !DILocation(line: 1916, column: 35, scope: !6099)
!6101 = !DILocation(line: 1916, column: 6, scope: !6099)
!6102 = !DILocation(line: 1916, column: 6, scope: !5976)
!6103 = !DILocation(line: 1917, column: 3, scope: !6099)
!6104 = !DILocation(line: 1917, column: 9, scope: !6099)
!6105 = !DILocation(line: 1917, column: 15, scope: !6099)
!6106 = !DILocation(line: 1919, column: 3, scope: !6099)
!6107 = !DILocation(line: 1919, column: 9, scope: !6099)
!6108 = !DILocation(line: 1919, column: 15, scope: !6099)
!6109 = !DILocation(line: 1921, column: 33, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 1921, column: 6)
!6111 = !DILocation(line: 1921, column: 39, scope: !6110)
!6112 = !DILocation(line: 1921, column: 6, scope: !6110)
!6113 = !DILocation(line: 1921, column: 6, scope: !5976)
!6114 = !DILocation(line: 1922, column: 3, scope: !6110)
!6115 = !DILocation(line: 1922, column: 9, scope: !6110)
!6116 = !DILocation(line: 1922, column: 15, scope: !6110)
!6117 = !DILocation(line: 1924, column: 33, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 1924, column: 6)
!6119 = !DILocation(line: 1924, column: 39, scope: !6118)
!6120 = !DILocation(line: 1924, column: 6, scope: !6118)
!6121 = !DILocation(line: 1924, column: 6, scope: !5976)
!6122 = !DILocation(line: 1925, column: 3, scope: !6118)
!6123 = !DILocation(line: 1925, column: 9, scope: !6118)
!6124 = !DILocation(line: 1925, column: 15, scope: !6118)
!6125 = !DILocation(line: 1926, column: 34, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 1926, column: 6)
!6127 = !DILocation(line: 1926, column: 40, scope: !6126)
!6128 = !DILocation(line: 1926, column: 6, scope: !6126)
!6129 = !DILocation(line: 1926, column: 6, scope: !5976)
!6130 = !DILocation(line: 1927, column: 3, scope: !6126)
!6131 = !DILocation(line: 1927, column: 9, scope: !6126)
!6132 = !DILocation(line: 1927, column: 15, scope: !6126)
!6133 = !DILocation(line: 1929, column: 35, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 1929, column: 6)
!6135 = !DILocation(line: 1929, column: 41, scope: !6134)
!6136 = !DILocation(line: 1929, column: 6, scope: !6134)
!6137 = !DILocation(line: 1929, column: 6, scope: !5976)
!6138 = !DILocation(line: 1930, column: 3, scope: !6134)
!6139 = !DILocation(line: 1930, column: 9, scope: !6134)
!6140 = !DILocation(line: 1930, column: 15, scope: !6134)
!6141 = !DILocation(line: 1931, column: 32, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 1931, column: 6)
!6143 = !DILocation(line: 1931, column: 38, scope: !6142)
!6144 = !DILocation(line: 1931, column: 6, scope: !6142)
!6145 = !DILocation(line: 1931, column: 6, scope: !5976)
!6146 = !DILocation(line: 1932, column: 3, scope: !6142)
!6147 = !DILocation(line: 1932, column: 9, scope: !6142)
!6148 = !DILocation(line: 1932, column: 15, scope: !6142)
!6149 = !DILocation(line: 1933, column: 30, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 1933, column: 6)
!6151 = !DILocation(line: 1933, column: 36, scope: !6150)
!6152 = !DILocation(line: 1933, column: 6, scope: !6150)
!6153 = !DILocation(line: 1933, column: 6, scope: !5976)
!6154 = !DILocation(line: 1934, column: 3, scope: !6150)
!6155 = !DILocation(line: 1934, column: 9, scope: !6150)
!6156 = !DILocation(line: 1934, column: 15, scope: !6150)
!6157 = !DILocation(line: 1936, column: 34, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 1936, column: 6)
!6159 = !DILocation(line: 1936, column: 40, scope: !6158)
!6160 = !DILocation(line: 1936, column: 6, scope: !6158)
!6161 = !DILocation(line: 1936, column: 6, scope: !5976)
!6162 = !DILocation(line: 1937, column: 3, scope: !6158)
!6163 = !DILocation(line: 1937, column: 9, scope: !6158)
!6164 = !DILocation(line: 1937, column: 15, scope: !6158)
!6165 = !DILocation(line: 1938, column: 35, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 1938, column: 6)
!6167 = !DILocation(line: 1938, column: 41, scope: !6166)
!6168 = !DILocation(line: 1938, column: 6, scope: !6166)
!6169 = !DILocation(line: 1938, column: 6, scope: !5976)
!6170 = !DILocation(line: 1939, column: 3, scope: !6166)
!6171 = !DILocation(line: 1939, column: 9, scope: !6166)
!6172 = !DILocation(line: 1939, column: 15, scope: !6166)
!6173 = !DILocation(line: 1941, column: 23, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 1941, column: 23)
!6175 = !DILocation(line: 1941, column: 23, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6174, file: !3, line: 1941, column: 23)
!6177 = !DILocation(line: 1941, column: 21, scope: !5976)
!6178 = !DILocation(line: 1942, column: 6, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 1942, column: 6)
!6180 = !DILocation(line: 1942, column: 6, scope: !5976)
!6181 = !DILocation(line: 1943, column: 3, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6179, file: !3, line: 1942, column: 26)
!6183 = !DILocation(line: 1943, column: 9, scope: !6182)
!6184 = !DILocation(line: 1943, column: 15, scope: !6182)
!6185 = !DILocation(line: 1943, column: 26, scope: !6182)
!6186 = !DILocation(line: 1943, column: 29, scope: !6182)
!6187 = !DILocation(line: 1944, column: 47, scope: !6182)
!6188 = !DILocation(line: 1944, column: 3, scope: !6182)
!6189 = !DILocation(line: 1944, column: 9, scope: !6182)
!6190 = !DILocation(line: 1944, column: 15, scope: !6182)
!6191 = !DILocation(line: 1944, column: 26, scope: !6182)
!6192 = !DILocation(line: 1944, column: 45, scope: !6182)
!6193 = !DILocation(line: 1945, column: 12, scope: !6182)
!6194 = !DILocation(line: 1946, column: 2, scope: !6182)
!6195 = !DILocation(line: 1947, column: 20, scope: !5976)
!6196 = !DILocation(line: 1947, column: 2, scope: !5976)
!6197 = !DILocation(line: 1947, column: 8, scope: !5976)
!6198 = !DILocation(line: 1947, column: 18, scope: !5976)
!6199 = !DILocation(line: 1949, column: 37, scope: !5976)
!6200 = !DILocalVariable(name: "__dummy", scope: !6201, file: !4656, line: 409, type: !215)
!6201 = distinct !DILexicalBlock(scope: !6202, file: !4656, line: 409, column: 2)
!6202 = distinct !DILexicalBlock(scope: !5980, file: !4656, line: 409, column: 2)
!6203 = !DILocation(line: 409, column: 2, scope: !6201, inlinedAt: !5984)
!6204 = !DILocalVariable(name: "__dummy2", scope: !6201, file: !4656, line: 409, type: !215)
!6205 = !DILocalVariable(name: "__dummy", scope: !6206, file: !4656, line: 409, type: !215)
!6206 = distinct !DILexicalBlock(scope: !6207, file: !4656, line: 409, column: 2)
!6207 = distinct !DILexicalBlock(scope: !6208, file: !4656, line: 409, column: 2)
!6208 = distinct !DILexicalBlock(scope: !6209, file: !4656, line: 409, column: 2)
!6209 = distinct !DILexicalBlock(scope: !6202, file: !4656, line: 409, column: 2)
!6210 = !DILocation(line: 409, column: 2, scope: !6206, inlinedAt: !5984)
!6211 = !DILocalVariable(name: "__dummy2", scope: !6206, file: !4656, line: 409, type: !215)
!6212 = !DILocation(line: 409, column: 2, scope: !6207, inlinedAt: !5984)
!6213 = !DILocation(line: 409, column: 2, scope: !6214, inlinedAt: !5984)
!6214 = distinct !DILexicalBlock(scope: !6209, file: !4656, line: 409, column: 2)
!6215 = !{i32 -2145420416}
!6216 = !DILocation(line: 409, column: 2, scope: !6217, inlinedAt: !5984)
!6217 = distinct !DILexicalBlock(scope: !6214, file: !4656, line: 409, column: 2)
!6218 = !DILocation(line: 1950, column: 1, scope: !5976)
!6219 = distinct !DISubprogram(name: "linehandle_create", scope: !3, file: !3, line: 285, type: !4543, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!6220 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !6221)
!6221 = distinct !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !6222)
!6222 = distinct !DILocation(line: 382, column: 6, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 382, column: 6)
!6224 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !6221)
!6225 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !6221)
!6226 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !6221)
!6227 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !6221)
!6228 = !DILocation(line: 197, column: 27, scope: !4618, inlinedAt: !6222)
!6229 = !DILocation(line: 197, column: 43, scope: !4618, inlinedAt: !6222)
!6230 = !DILocation(line: 197, column: 63, scope: !4618, inlinedAt: !6222)
!6231 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !6232)
!6232 = distinct !DILocation(line: 191, column: 6, scope: !5039, inlinedAt: !6233)
!6233 = distinct !DILocation(line: 293, column: 6, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 293, column: 6)
!6235 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !6232)
!6236 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !6232)
!6237 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !6232)
!6238 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !6232)
!6239 = !DILocation(line: 189, column: 22, scope: !5040, inlinedAt: !6233)
!6240 = !DILocation(line: 189, column: 45, scope: !5040, inlinedAt: !6233)
!6241 = !DILocation(line: 189, column: 65, scope: !5040, inlinedAt: !6233)
!6242 = !DILocalVariable(name: "gdev", arg: 1, scope: !6219, file: !3, line: 285, type: !3476)
!6243 = !DILocation(line: 285, column: 50, scope: !6219)
!6244 = !DILocalVariable(name: "ip", arg: 2, scope: !6219, file: !3, line: 285, type: !224)
!6245 = !DILocation(line: 285, column: 69, scope: !6219)
!6246 = !DILocalVariable(name: "handlereq", scope: !6219, file: !3, line: 287, type: !6247)
!6247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpiohandle_request", file: !134, line: 403, size: 2912, elements: !6248)
!6248 = !{!6249, !6251, !6252, !6254, !6255, !6256}
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "lineoffsets", scope: !6247, file: !134, line: 404, baseType: !6250, size: 2048)
!6250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !219, size: 2048, elements: !2067)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6247, file: !134, line: 405, baseType: !219, size: 32, offset: 2048)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "default_values", scope: !6247, file: !134, line: 406, baseType: !6253, size: 512, offset: 2080)
!6253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 512, elements: !2067)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "consumer_label", scope: !6247, file: !134, line: 407, baseType: !1746, size: 256, offset: 2592)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !6247, file: !134, line: 408, baseType: !219, size: 32, offset: 2848)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !6247, file: !134, line: 409, baseType: !236, size: 32, offset: 2880)
!6257 = !DILocation(line: 287, column: 28, scope: !6219)
!6258 = !DILocalVariable(name: "lh", scope: !6219, file: !3, line: 288, type: !6259)
!6259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6260, size: 64)
!6260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linehandle_state", file: !3, line: 69, size: 4288, elements: !6261)
!6261 = !{!6262, !6263, !6264, !6266}
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "gdev", scope: !6260, file: !3, line: 70, baseType: !3476, size: 64)
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !6260, file: !3, line: 71, baseType: !637, size: 64, offset: 64)
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "descs", scope: !6260, file: !3, line: 72, baseType: !6265, size: 4096, offset: 128)
!6265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3471, size: 4096, elements: !2067)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "num_descs", scope: !6260, file: !3, line: 73, baseType: !217, size: 32, offset: 4224)
!6267 = !DILocation(line: 288, column: 27, scope: !6219)
!6268 = !DILocalVariable(name: "file", scope: !6219, file: !3, line: 289, type: !894)
!6269 = !DILocation(line: 289, column: 15, scope: !6219)
!6270 = !DILocalVariable(name: "fd", scope: !6219, file: !3, line: 290, type: !236)
!6271 = !DILocation(line: 290, column: 6, scope: !6219)
!6272 = !DILocalVariable(name: "i", scope: !6219, file: !3, line: 290, type: !236)
!6273 = !DILocation(line: 290, column: 10, scope: !6219)
!6274 = !DILocalVariable(name: "ret", scope: !6219, file: !3, line: 290, type: !236)
!6275 = !DILocation(line: 290, column: 13, scope: !6219)
!6276 = !DILocalVariable(name: "lflags", scope: !6219, file: !3, line: 291, type: !217)
!6277 = !DILocation(line: 291, column: 6, scope: !6219)
!6278 = !DILocation(line: 293, column: 21, scope: !6234)
!6279 = !DILocation(line: 293, column: 33, scope: !6234)
!6280 = !DILocation(line: 191, column: 6, scope: !5039, inlinedAt: !6233)
!6281 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !6232)
!6282 = !DILocation(line: 0, scope: !4881, inlinedAt: !6232)
!6283 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !6232)
!6284 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !6232)
!6285 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !6232)
!6286 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !6232)
!6287 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !6232)
!6288 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !6232)
!6289 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !6232)
!6290 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !6232)
!6291 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !6232)
!6292 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !6232)
!6293 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !6232)
!6294 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !6232)
!6295 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !6232)
!6296 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !6232)
!6297 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !6232)
!6298 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !6232)
!6299 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !6232)
!6300 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !6232)
!6301 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !6232)
!6302 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !6232)
!6303 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !6232)
!6304 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !6232)
!6305 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !6232)
!6306 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !6232)
!6307 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !6232)
!6308 = !DILocation(line: 191, column: 6, scope: !5040, inlinedAt: !6233)
!6309 = !DILocation(line: 192, column: 23, scope: !5039, inlinedAt: !6233)
!6310 = !DILocation(line: 192, column: 27, scope: !5039, inlinedAt: !6233)
!6311 = !DILocation(line: 192, column: 33, scope: !5039, inlinedAt: !6233)
!6312 = !DILocation(line: 192, column: 7, scope: !5039, inlinedAt: !6233)
!6313 = !DILocation(line: 192, column: 5, scope: !5039, inlinedAt: !6233)
!6314 = !DILocation(line: 192, column: 3, scope: !5039, inlinedAt: !6233)
!6315 = !DILocation(line: 193, column: 9, scope: !5040, inlinedAt: !6233)
!6316 = !DILocation(line: 293, column: 6, scope: !6234)
!6317 = !DILocation(line: 293, column: 6, scope: !6219)
!6318 = !DILocation(line: 294, column: 3, scope: !6234)
!6319 = !DILocation(line: 295, column: 17, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 295, column: 6)
!6321 = !DILocation(line: 295, column: 23, scope: !6320)
!6322 = !DILocation(line: 295, column: 29, scope: !6320)
!6323 = !DILocation(line: 295, column: 43, scope: !6320)
!6324 = !DILocation(line: 295, column: 49, scope: !6320)
!6325 = !DILocation(line: 295, column: 6, scope: !6219)
!6326 = !DILocation(line: 296, column: 3, scope: !6320)
!6327 = !DILocation(line: 298, column: 21, scope: !6219)
!6328 = !DILocation(line: 298, column: 9, scope: !6219)
!6329 = !DILocation(line: 300, column: 34, scope: !6219)
!6330 = !DILocation(line: 300, column: 8, scope: !6219)
!6331 = !DILocation(line: 300, column: 6, scope: !6219)
!6332 = !DILocation(line: 301, column: 6, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 301, column: 6)
!6334 = !DILocation(line: 301, column: 6, scope: !6219)
!6335 = !DILocation(line: 302, column: 10, scope: !6333)
!6336 = !DILocation(line: 302, column: 3, scope: !6333)
!6337 = !DILocation(line: 304, column: 7, scope: !6219)
!6338 = !DILocation(line: 304, column: 5, scope: !6219)
!6339 = !DILocation(line: 305, column: 7, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 305, column: 6)
!6341 = !DILocation(line: 305, column: 6, scope: !6219)
!6342 = !DILocation(line: 306, column: 3, scope: !6340)
!6343 = !DILocation(line: 307, column: 13, scope: !6219)
!6344 = !DILocation(line: 307, column: 2, scope: !6219)
!6345 = !DILocation(line: 307, column: 6, scope: !6219)
!6346 = !DILocation(line: 307, column: 11, scope: !6219)
!6347 = !DILocation(line: 308, column: 14, scope: !6219)
!6348 = !DILocation(line: 308, column: 20, scope: !6219)
!6349 = !DILocation(line: 308, column: 2, scope: !6219)
!6350 = !DILocation(line: 310, column: 16, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 310, column: 6)
!6352 = !DILocation(line: 310, column: 6, scope: !6351)
!6353 = !DILocation(line: 310, column: 34, scope: !6351)
!6354 = !DILocation(line: 310, column: 6, scope: !6219)
!6355 = !DILocation(line: 312, column: 34, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 310, column: 43)
!6357 = !DILocation(line: 312, column: 24, scope: !6356)
!6358 = !DILocation(line: 312, column: 15, scope: !6356)
!6359 = !DILocation(line: 312, column: 3, scope: !6356)
!6360 = !DILocation(line: 312, column: 7, scope: !6356)
!6361 = !DILocation(line: 312, column: 13, scope: !6356)
!6362 = !DILocation(line: 315, column: 8, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 315, column: 7)
!6364 = !DILocation(line: 315, column: 12, scope: !6363)
!6365 = !DILocation(line: 315, column: 7, scope: !6356)
!6366 = !DILocation(line: 316, column: 8, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6363, file: !3, line: 315, column: 19)
!6368 = !DILocation(line: 317, column: 4, scope: !6367)
!6369 = !DILocation(line: 319, column: 2, scope: !6356)
!6370 = !DILocation(line: 321, column: 28, scope: !6219)
!6371 = !DILocation(line: 321, column: 2, scope: !6219)
!6372 = !DILocation(line: 321, column: 6, scope: !6219)
!6373 = !DILocation(line: 321, column: 16, scope: !6219)
!6374 = !DILocation(line: 324, column: 9, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 324, column: 2)
!6376 = !DILocation(line: 324, column: 7, scope: !6375)
!6377 = !DILocation(line: 324, column: 14, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 324, column: 2)
!6379 = !DILocation(line: 324, column: 28, scope: !6378)
!6380 = !DILocation(line: 324, column: 16, scope: !6378)
!6381 = !DILocation(line: 324, column: 2, scope: !6375)
!6382 = !DILocalVariable(name: "offset", scope: !6383, file: !3, line: 325, type: !217)
!6383 = distinct !DILexicalBlock(scope: !6378, file: !3, line: 324, column: 40)
!6384 = !DILocation(line: 325, column: 7, scope: !6383)
!6385 = !DILocation(line: 325, column: 26, scope: !6383)
!6386 = !DILocation(line: 325, column: 38, scope: !6383)
!6387 = !DILocation(line: 325, column: 16, scope: !6383)
!6388 = !DILocalVariable(name: "desc", scope: !6383, file: !3, line: 326, type: !3471)
!6389 = !DILocation(line: 326, column: 21, scope: !6383)
!6390 = !DILocation(line: 326, column: 46, scope: !6383)
!6391 = !DILocation(line: 326, column: 52, scope: !6383)
!6392 = !DILocation(line: 326, column: 58, scope: !6383)
!6393 = !DILocation(line: 326, column: 28, scope: !6383)
!6394 = !DILocation(line: 328, column: 14, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 328, column: 7)
!6396 = !DILocation(line: 328, column: 7, scope: !6395)
!6397 = !DILocation(line: 328, column: 7, scope: !6383)
!6398 = !DILocation(line: 329, column: 18, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 328, column: 21)
!6400 = !DILocation(line: 329, column: 10, scope: !6399)
!6401 = !DILocation(line: 329, column: 8, scope: !6399)
!6402 = !DILocation(line: 330, column: 4, scope: !6399)
!6403 = !DILocation(line: 333, column: 23, scope: !6383)
!6404 = !DILocation(line: 333, column: 29, scope: !6383)
!6405 = !DILocation(line: 333, column: 33, scope: !6383)
!6406 = !DILocation(line: 333, column: 9, scope: !6383)
!6407 = !DILocation(line: 333, column: 7, scope: !6383)
!6408 = !DILocation(line: 334, column: 7, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 334, column: 7)
!6410 = !DILocation(line: 334, column: 7, scope: !6383)
!6411 = !DILocation(line: 335, column: 4, scope: !6409)
!6412 = !DILocation(line: 336, column: 18, scope: !6383)
!6413 = !DILocation(line: 336, column: 3, scope: !6383)
!6414 = !DILocation(line: 336, column: 7, scope: !6383)
!6415 = !DILocation(line: 336, column: 13, scope: !6383)
!6416 = !DILocation(line: 336, column: 16, scope: !6383)
!6417 = !DILocation(line: 337, column: 44, scope: !6383)
!6418 = !DILocation(line: 337, column: 52, scope: !6383)
!6419 = !DILocation(line: 337, column: 58, scope: !6383)
!6420 = !DILocation(line: 337, column: 3, scope: !6383)
!6421 = !DILocation(line: 339, column: 30, scope: !6383)
!6422 = !DILocation(line: 339, column: 9, scope: !6383)
!6423 = !DILocation(line: 339, column: 7, scope: !6383)
!6424 = !DILocation(line: 340, column: 7, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 340, column: 7)
!6426 = !DILocation(line: 340, column: 11, scope: !6425)
!6427 = !DILocation(line: 340, column: 7, scope: !6383)
!6428 = !DILocation(line: 341, column: 4, scope: !6425)
!6429 = !DILocation(line: 347, column: 7, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 347, column: 7)
!6431 = !DILocation(line: 347, column: 14, scope: !6430)
!6432 = !DILocation(line: 347, column: 7, scope: !6383)
!6433 = !DILocalVariable(name: "val", scope: !6434, file: !3, line: 348, type: !236)
!6434 = distinct !DILexicalBlock(scope: !6430, file: !3, line: 347, column: 43)
!6435 = !DILocation(line: 348, column: 8, scope: !6434)
!6436 = !DILocation(line: 348, column: 26, scope: !6434)
!6437 = !DILocation(line: 348, column: 41, scope: !6434)
!6438 = !DILocation(line: 348, column: 16, scope: !6434)
!6439 = !DILocation(line: 348, column: 15, scope: !6434)
!6440 = !DILocation(line: 348, column: 14, scope: !6434)
!6441 = !DILocation(line: 350, column: 33, scope: !6434)
!6442 = !DILocation(line: 350, column: 39, scope: !6434)
!6443 = !DILocation(line: 350, column: 10, scope: !6434)
!6444 = !DILocation(line: 350, column: 8, scope: !6434)
!6445 = !DILocation(line: 351, column: 8, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6434, file: !3, line: 351, column: 8)
!6447 = !DILocation(line: 351, column: 8, scope: !6434)
!6448 = !DILocation(line: 352, column: 5, scope: !6446)
!6449 = !DILocation(line: 353, column: 3, scope: !6434)
!6450 = !DILocation(line: 353, column: 14, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6430, file: !3, line: 353, column: 14)
!6452 = !DILocation(line: 353, column: 21, scope: !6451)
!6453 = !DILocation(line: 353, column: 14, scope: !6430)
!6454 = !DILocation(line: 354, column: 32, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 353, column: 49)
!6456 = !DILocation(line: 354, column: 10, scope: !6455)
!6457 = !DILocation(line: 354, column: 8, scope: !6455)
!6458 = !DILocation(line: 355, column: 8, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 355, column: 8)
!6460 = !DILocation(line: 355, column: 8, scope: !6455)
!6461 = !DILocation(line: 356, column: 5, scope: !6459)
!6462 = !DILocation(line: 357, column: 3, scope: !6455)
!6463 = !DILocation(line: 359, column: 33, scope: !6383)
!6464 = !DILocation(line: 359, column: 39, scope: !6383)
!6465 = !DILocation(line: 359, column: 45, scope: !6383)
!6466 = !DILocation(line: 360, column: 43, scope: !6383)
!6467 = !DILocation(line: 359, column: 3, scope: !6383)
!6468 = !DILocation(line: 364, column: 2, scope: !6383)
!6469 = !DILocation(line: 324, column: 36, scope: !6378)
!6470 = !DILocation(line: 324, column: 2, scope: !6378)
!6471 = distinct !{!6471, !6381, !6472}
!6472 = !DILocation(line: 364, column: 2, scope: !6375)
!6473 = !DILocation(line: 366, column: 7, scope: !6219)
!6474 = !DILocation(line: 366, column: 5, scope: !6219)
!6475 = !DILocation(line: 367, column: 6, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 367, column: 6)
!6477 = !DILocation(line: 367, column: 9, scope: !6476)
!6478 = !DILocation(line: 367, column: 6, scope: !6219)
!6479 = !DILocation(line: 368, column: 9, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 367, column: 14)
!6481 = !DILocation(line: 368, column: 7, scope: !6480)
!6482 = !DILocation(line: 369, column: 3, scope: !6480)
!6483 = !DILocation(line: 374, column: 7, scope: !6219)
!6484 = !DILocation(line: 372, column: 9, scope: !6219)
!6485 = !DILocation(line: 372, column: 7, scope: !6219)
!6486 = !DILocation(line: 376, column: 13, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 376, column: 6)
!6488 = !DILocation(line: 376, column: 6, scope: !6487)
!6489 = !DILocation(line: 376, column: 6, scope: !6219)
!6490 = !DILocation(line: 377, column: 17, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6487, file: !3, line: 376, column: 20)
!6492 = !DILocation(line: 377, column: 9, scope: !6491)
!6493 = !DILocation(line: 377, column: 7, scope: !6491)
!6494 = !DILocation(line: 378, column: 3, scope: !6491)
!6495 = !DILocation(line: 381, column: 17, scope: !6219)
!6496 = !DILocation(line: 381, column: 12, scope: !6219)
!6497 = !DILocation(line: 381, column: 15, scope: !6219)
!6498 = !DILocation(line: 382, column: 19, scope: !6223)
!6499 = !DILocation(line: 382, column: 23, scope: !6223)
!6500 = !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !6222)
!6501 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !6221)
!6502 = !DILocation(line: 0, scope: !4881, inlinedAt: !6221)
!6503 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !6221)
!6504 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !6221)
!6505 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !6221)
!6506 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !6221)
!6507 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !6221)
!6508 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !6221)
!6509 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !6221)
!6510 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !6221)
!6511 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !6221)
!6512 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !6221)
!6513 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !6221)
!6514 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !6221)
!6515 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !6221)
!6516 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !6221)
!6517 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !6221)
!6518 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !6221)
!6519 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !6221)
!6520 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !6221)
!6521 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !6221)
!6522 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !6221)
!6523 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !6221)
!6524 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !6221)
!6525 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !6221)
!6526 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !6221)
!6527 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !6221)
!6528 = !DILocation(line: 199, column: 6, scope: !4618, inlinedAt: !6222)
!6529 = !DILocation(line: 200, column: 21, scope: !4616, inlinedAt: !6222)
!6530 = !DILocation(line: 200, column: 25, scope: !4616, inlinedAt: !6222)
!6531 = !DILocation(line: 200, column: 31, scope: !4616, inlinedAt: !6222)
!6532 = !DILocation(line: 200, column: 7, scope: !4616, inlinedAt: !6222)
!6533 = !DILocation(line: 200, column: 5, scope: !4616, inlinedAt: !6222)
!6534 = !DILocation(line: 200, column: 3, scope: !4616, inlinedAt: !6222)
!6535 = !DILocation(line: 201, column: 9, scope: !4618, inlinedAt: !6222)
!6536 = !DILocation(line: 382, column: 6, scope: !6223)
!6537 = !DILocation(line: 382, column: 6, scope: !6219)
!6538 = !DILocation(line: 387, column: 8, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6223, file: !3, line: 382, column: 55)
!6540 = !DILocation(line: 387, column: 3, scope: !6539)
!6541 = !DILocation(line: 388, column: 17, scope: !6539)
!6542 = !DILocation(line: 388, column: 3, scope: !6539)
!6543 = !DILocation(line: 389, column: 3, scope: !6539)
!6544 = !DILocation(line: 392, column: 13, scope: !6219)
!6545 = !DILocation(line: 392, column: 17, scope: !6219)
!6546 = !DILocation(line: 392, column: 2, scope: !6219)
!6547 = !DILocation(line: 397, column: 2, scope: !6219)
!6548 = !DILabel(scope: !6219, name: "out_put_unused_fd", file: !3, line: 399)
!6549 = !DILocation(line: 399, column: 1, scope: !6219)
!6550 = !DILocation(line: 400, column: 16, scope: !6219)
!6551 = !DILocation(line: 400, column: 2, scope: !6219)
!6552 = !DILabel(scope: !6219, name: "out_free_lh", file: !3, line: 401)
!6553 = !DILocation(line: 401, column: 1, scope: !6219)
!6554 = !DILocation(line: 402, column: 18, scope: !6219)
!6555 = !DILocation(line: 402, column: 2, scope: !6219)
!6556 = !DILocation(line: 403, column: 9, scope: !6219)
!6557 = !DILocation(line: 403, column: 2, scope: !6219)
!6558 = !DILocation(line: 404, column: 1, scope: !6219)
!6559 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !6560)
!6560 = distinct !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !6561)
!6561 = distinct !DILocation(line: 1809, column: 6, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1809, column: 6)
!6563 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !6560)
!6564 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !6560)
!6565 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !6560)
!6566 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !6560)
!6567 = !DILocation(line: 197, column: 27, scope: !4618, inlinedAt: !6561)
!6568 = !DILocation(line: 197, column: 43, scope: !4618, inlinedAt: !6561)
!6569 = !DILocation(line: 197, column: 63, scope: !4618, inlinedAt: !6561)
!6570 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !6571)
!6571 = distinct !DILocation(line: 191, column: 6, scope: !5039, inlinedAt: !6572)
!6572 = distinct !DILocation(line: 1703, column: 6, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1703, column: 6)
!6574 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !6571)
!6575 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !6571)
!6576 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !6571)
!6577 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !6571)
!6578 = !DILocation(line: 189, column: 22, scope: !5040, inlinedAt: !6572)
!6579 = !DILocation(line: 189, column: 45, scope: !5040, inlinedAt: !6572)
!6580 = !DILocation(line: 189, column: 65, scope: !5040, inlinedAt: !6572)
!6581 = !DILocalVariable(name: "gdev", arg: 1, scope: !4542, file: !3, line: 1690, type: !3476)
!6582 = !DILocation(line: 1690, column: 49, scope: !4542)
!6583 = !DILocalVariable(name: "ip", arg: 2, scope: !4542, file: !3, line: 1690, type: !224)
!6584 = !DILocation(line: 1690, column: 68, scope: !4542)
!6585 = !DILocalVariable(name: "eventreq", scope: !4542, file: !3, line: 1692, type: !6586)
!6586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpioevent_request", file: !134, line: 466, size: 384, elements: !6587)
!6587 = !{!6588, !6589, !6590, !6591, !6592}
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "lineoffset", scope: !6586, file: !134, line: 467, baseType: !219, size: 32)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "handleflags", scope: !6586, file: !134, line: 468, baseType: !219, size: 32, offset: 32)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "eventflags", scope: !6586, file: !134, line: 469, baseType: !219, size: 32, offset: 64)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "consumer_label", scope: !6586, file: !134, line: 470, baseType: !1746, size: 256, offset: 96)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !6586, file: !134, line: 471, baseType: !236, size: 32, offset: 352)
!6593 = !DILocation(line: 1692, column: 27, scope: !4542)
!6594 = !DILocalVariable(name: "le", scope: !4542, file: !3, line: 1693, type: !6595)
!6595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6596, size: 64)
!6596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lineevent_state", file: !3, line: 1453, size: 2688, elements: !6597)
!6597 = !{!6598, !6599, !6600, !6601, !6602, !6603, !6604, !6625}
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "gdev", scope: !6596, file: !3, line: 1454, baseType: !3476, size: 64)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !6596, file: !3, line: 1455, baseType: !637, size: 64, offset: 64)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !6596, file: !3, line: 1456, baseType: !3471, size: 64, offset: 128)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "eflags", scope: !6596, file: !3, line: 1457, baseType: !217, size: 32, offset: 192)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !6596, file: !3, line: 1458, baseType: !236, size: 32, offset: 224)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !6596, file: !3, line: 1459, baseType: !1008, size: 128, offset: 256)
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !6596, file: !3, line: 1460, baseType: !6605, size: 2240, offset: 384)
!6605 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6596, file: !3, line: 1460, size: 2240, elements: !6606)
!6606 = !{!6607, !6623}
!6607 = !DIDerivedType(tag: DW_TAG_member, scope: !6605, file: !3, line: 1460, baseType: !6608, size: 192)
!6608 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6605, file: !3, line: 1460, size: 192, elements: !6609)
!6609 = !{!6610, !6611, !6617, !6620, !6621, !6622}
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "kfifo", scope: !6608, file: !3, line: 1460, baseType: !4432, size: 192)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6608, file: !3, line: 1460, baseType: !6612, size: 64)
!6612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6613, size: 64)
!6613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpioevent_data", file: !134, line: 488, size: 128, elements: !6614)
!6614 = !{!6615, !6616}
!6615 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !6613, file: !134, line: 489, baseType: !273, size: 64)
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6613, file: !134, line: 490, baseType: !219, size: 32, offset: 64)
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "const_type", scope: !6608, file: !3, line: 1460, baseType: !6618, size: 64)
!6618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6619, size: 64)
!6619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6613)
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "rectype", scope: !6608, file: !3, line: 1460, baseType: !4455, size: 64)
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6608, file: !3, line: 1460, baseType: !6612, size: 64)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_const", scope: !6608, file: !3, line: 1460, baseType: !6618, size: 64)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !6605, file: !3, line: 1460, baseType: !6624, size: 2048, offset: 192)
!6624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6613, size: 2048, elements: !1754)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !6596, file: !3, line: 1461, baseType: !272, size: 64, offset: 2624)
!6626 = !DILocation(line: 1693, column: 26, scope: !4542)
!6627 = !DILocalVariable(name: "desc", scope: !4542, file: !3, line: 1694, type: !3471)
!6628 = !DILocation(line: 1694, column: 20, scope: !4542)
!6629 = !DILocalVariable(name: "file", scope: !4542, file: !3, line: 1695, type: !894)
!6630 = !DILocation(line: 1695, column: 15, scope: !4542)
!6631 = !DILocalVariable(name: "offset", scope: !4542, file: !3, line: 1696, type: !217)
!6632 = !DILocation(line: 1696, column: 6, scope: !4542)
!6633 = !DILocalVariable(name: "lflags", scope: !4542, file: !3, line: 1697, type: !217)
!6634 = !DILocation(line: 1697, column: 6, scope: !4542)
!6635 = !DILocalVariable(name: "eflags", scope: !4542, file: !3, line: 1698, type: !217)
!6636 = !DILocation(line: 1698, column: 6, scope: !4542)
!6637 = !DILocalVariable(name: "fd", scope: !4542, file: !3, line: 1699, type: !236)
!6638 = !DILocation(line: 1699, column: 6, scope: !4542)
!6639 = !DILocalVariable(name: "ret", scope: !4542, file: !3, line: 1700, type: !236)
!6640 = !DILocation(line: 1700, column: 6, scope: !4542)
!6641 = !DILocalVariable(name: "irq", scope: !4542, file: !3, line: 1701, type: !236)
!6642 = !DILocation(line: 1701, column: 6, scope: !4542)
!6643 = !DILocalVariable(name: "irqflags", scope: !4542, file: !3, line: 1701, type: !236)
!6644 = !DILocation(line: 1701, column: 11, scope: !4542)
!6645 = !DILocation(line: 1703, column: 21, scope: !6573)
!6646 = !DILocation(line: 1703, column: 32, scope: !6573)
!6647 = !DILocation(line: 191, column: 6, scope: !5039, inlinedAt: !6572)
!6648 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !6571)
!6649 = !DILocation(line: 0, scope: !4881, inlinedAt: !6571)
!6650 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !6571)
!6651 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !6571)
!6652 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !6571)
!6653 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !6571)
!6654 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !6571)
!6655 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !6571)
!6656 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !6571)
!6657 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !6571)
!6658 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !6571)
!6659 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !6571)
!6660 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !6571)
!6661 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !6571)
!6662 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !6571)
!6663 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !6571)
!6664 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !6571)
!6665 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !6571)
!6666 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !6571)
!6667 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !6571)
!6668 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !6571)
!6669 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !6571)
!6670 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !6571)
!6671 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !6571)
!6672 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !6571)
!6673 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !6571)
!6674 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !6571)
!6675 = !DILocation(line: 191, column: 6, scope: !5040, inlinedAt: !6572)
!6676 = !DILocation(line: 192, column: 23, scope: !5039, inlinedAt: !6572)
!6677 = !DILocation(line: 192, column: 27, scope: !5039, inlinedAt: !6572)
!6678 = !DILocation(line: 192, column: 33, scope: !5039, inlinedAt: !6572)
!6679 = !DILocation(line: 192, column: 7, scope: !5039, inlinedAt: !6572)
!6680 = !DILocation(line: 192, column: 5, scope: !5039, inlinedAt: !6572)
!6681 = !DILocation(line: 192, column: 3, scope: !5039, inlinedAt: !6572)
!6682 = !DILocation(line: 193, column: 9, scope: !5040, inlinedAt: !6572)
!6683 = !DILocation(line: 1703, column: 6, scope: !6573)
!6684 = !DILocation(line: 1703, column: 6, scope: !4542)
!6685 = !DILocation(line: 1704, column: 3, scope: !6573)
!6686 = !DILocation(line: 1706, column: 20, scope: !4542)
!6687 = !DILocation(line: 1706, column: 9, scope: !4542)
!6688 = !DILocation(line: 1707, column: 20, scope: !4542)
!6689 = !DILocation(line: 1707, column: 9, scope: !4542)
!6690 = !DILocation(line: 1708, column: 20, scope: !4542)
!6691 = !DILocation(line: 1708, column: 9, scope: !4542)
!6692 = !DILocation(line: 1710, column: 27, scope: !4542)
!6693 = !DILocation(line: 1710, column: 33, scope: !4542)
!6694 = !DILocation(line: 1710, column: 39, scope: !4542)
!6695 = !DILocation(line: 1710, column: 9, scope: !4542)
!6696 = !DILocation(line: 1710, column: 7, scope: !4542)
!6697 = !DILocation(line: 1711, column: 13, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1711, column: 6)
!6699 = !DILocation(line: 1711, column: 6, scope: !6698)
!6700 = !DILocation(line: 1711, column: 6, scope: !4542)
!6701 = !DILocation(line: 1712, column: 18, scope: !6698)
!6702 = !DILocation(line: 1712, column: 10, scope: !6698)
!6703 = !DILocation(line: 1712, column: 3, scope: !6698)
!6704 = !DILocation(line: 1715, column: 7, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1715, column: 6)
!6706 = !DILocation(line: 1715, column: 14, scope: !6705)
!6707 = !DILocation(line: 1715, column: 49, scope: !6705)
!6708 = !DILocation(line: 1716, column: 7, scope: !6705)
!6709 = !DILocation(line: 1716, column: 14, scope: !6705)
!6710 = !DILocation(line: 1715, column: 6, scope: !4542)
!6711 = !DILocation(line: 1717, column: 3, scope: !6705)
!6712 = !DILocation(line: 1720, column: 7, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1720, column: 6)
!6714 = !DILocation(line: 1720, column: 14, scope: !6713)
!6715 = !DILocation(line: 1720, column: 43, scope: !6713)
!6716 = !DILocation(line: 1721, column: 7, scope: !6713)
!6717 = !DILocation(line: 1721, column: 14, scope: !6713)
!6718 = !DILocation(line: 1721, column: 47, scope: !6713)
!6719 = !DILocation(line: 1722, column: 7, scope: !6713)
!6720 = !DILocation(line: 1722, column: 14, scope: !6713)
!6721 = !DILocation(line: 1720, column: 6, scope: !4542)
!6722 = !DILocation(line: 1723, column: 3, scope: !6713)
!6723 = !DILocation(line: 1726, column: 8, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1726, column: 6)
!6725 = !DILocation(line: 1726, column: 15, scope: !6724)
!6726 = !DILocation(line: 1726, column: 50, scope: !6724)
!6727 = !DILocation(line: 1727, column: 8, scope: !6724)
!6728 = !DILocation(line: 1727, column: 15, scope: !6724)
!6729 = !DILocation(line: 1728, column: 39, scope: !6724)
!6730 = !DILocation(line: 1729, column: 8, scope: !6724)
!6731 = !DILocation(line: 1729, column: 15, scope: !6724)
!6732 = !DILocation(line: 1729, column: 52, scope: !6724)
!6733 = !DILocation(line: 1730, column: 8, scope: !6724)
!6734 = !DILocation(line: 1730, column: 15, scope: !6724)
!6735 = !DILocation(line: 1726, column: 6, scope: !4542)
!6736 = !DILocation(line: 1731, column: 3, scope: !6724)
!6737 = !DILocation(line: 1733, column: 7, scope: !4542)
!6738 = !DILocation(line: 1733, column: 5, scope: !4542)
!6739 = !DILocation(line: 1734, column: 7, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1734, column: 6)
!6741 = !DILocation(line: 1734, column: 6, scope: !4542)
!6742 = !DILocation(line: 1735, column: 3, scope: !6740)
!6743 = !DILocation(line: 1736, column: 13, scope: !4542)
!6744 = !DILocation(line: 1736, column: 2, scope: !4542)
!6745 = !DILocation(line: 1736, column: 6, scope: !4542)
!6746 = !DILocation(line: 1736, column: 11, scope: !4542)
!6747 = !DILocation(line: 1737, column: 14, scope: !4542)
!6748 = !DILocation(line: 1737, column: 20, scope: !4542)
!6749 = !DILocation(line: 1737, column: 2, scope: !4542)
!6750 = !DILocation(line: 1739, column: 15, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1739, column: 6)
!6752 = !DILocation(line: 1739, column: 6, scope: !6751)
!6753 = !DILocation(line: 1739, column: 33, scope: !6751)
!6754 = !DILocation(line: 1739, column: 6, scope: !4542)
!6755 = !DILocation(line: 1741, column: 33, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6751, file: !3, line: 1739, column: 42)
!6757 = !DILocation(line: 1741, column: 24, scope: !6756)
!6758 = !DILocation(line: 1741, column: 15, scope: !6756)
!6759 = !DILocation(line: 1741, column: 3, scope: !6756)
!6760 = !DILocation(line: 1741, column: 7, scope: !6756)
!6761 = !DILocation(line: 1741, column: 13, scope: !6756)
!6762 = !DILocation(line: 1744, column: 8, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6756, file: !3, line: 1744, column: 7)
!6764 = !DILocation(line: 1744, column: 12, scope: !6763)
!6765 = !DILocation(line: 1744, column: 7, scope: !6756)
!6766 = !DILocation(line: 1745, column: 8, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6763, file: !3, line: 1744, column: 19)
!6768 = !DILocation(line: 1746, column: 4, scope: !6767)
!6769 = !DILocation(line: 1748, column: 2, scope: !6756)
!6770 = !DILocation(line: 1750, column: 22, scope: !4542)
!6771 = !DILocation(line: 1750, column: 28, scope: !4542)
!6772 = !DILocation(line: 1750, column: 32, scope: !4542)
!6773 = !DILocation(line: 1750, column: 8, scope: !4542)
!6774 = !DILocation(line: 1750, column: 6, scope: !4542)
!6775 = !DILocation(line: 1751, column: 6, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1751, column: 6)
!6777 = !DILocation(line: 1751, column: 6, scope: !4542)
!6778 = !DILocation(line: 1752, column: 3, scope: !6776)
!6779 = !DILocation(line: 1753, column: 13, scope: !4542)
!6780 = !DILocation(line: 1753, column: 2, scope: !4542)
!6781 = !DILocation(line: 1753, column: 6, scope: !4542)
!6782 = !DILocation(line: 1753, column: 11, scope: !4542)
!6783 = !DILocation(line: 1754, column: 15, scope: !4542)
!6784 = !DILocation(line: 1754, column: 2, scope: !4542)
!6785 = !DILocation(line: 1754, column: 6, scope: !4542)
!6786 = !DILocation(line: 1754, column: 13, scope: !4542)
!6787 = !DILocation(line: 1756, column: 33, scope: !4542)
!6788 = !DILocation(line: 1756, column: 42, scope: !4542)
!6789 = !DILocation(line: 1756, column: 48, scope: !4542)
!6790 = !DILocation(line: 1756, column: 2, scope: !4542)
!6791 = !DILocation(line: 1758, column: 30, scope: !4542)
!6792 = !DILocation(line: 1758, column: 8, scope: !4542)
!6793 = !DILocation(line: 1758, column: 6, scope: !4542)
!6794 = !DILocation(line: 1759, column: 6, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1759, column: 6)
!6796 = !DILocation(line: 1759, column: 6, scope: !4542)
!6797 = !DILocation(line: 1760, column: 3, scope: !6795)
!6798 = !DILocation(line: 1762, column: 32, scope: !4542)
!6799 = !DILocation(line: 1762, column: 38, scope: !4542)
!6800 = !DILocation(line: 1762, column: 44, scope: !4542)
!6801 = !DILocation(line: 1763, column: 42, scope: !4542)
!6802 = !DILocation(line: 1762, column: 2, scope: !4542)
!6803 = !DILocation(line: 1765, column: 21, scope: !4542)
!6804 = !DILocation(line: 1765, column: 8, scope: !4542)
!6805 = !DILocation(line: 1765, column: 6, scope: !4542)
!6806 = !DILocation(line: 1766, column: 6, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1766, column: 6)
!6808 = !DILocation(line: 1766, column: 10, scope: !6807)
!6809 = !DILocation(line: 1766, column: 6, scope: !4542)
!6810 = !DILocation(line: 1767, column: 7, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6807, file: !3, line: 1766, column: 16)
!6812 = !DILocation(line: 1768, column: 3, scope: !6811)
!6813 = !DILocation(line: 1770, column: 12, scope: !4542)
!6814 = !DILocation(line: 1770, column: 2, scope: !4542)
!6815 = !DILocation(line: 1770, column: 6, scope: !4542)
!6816 = !DILocation(line: 1770, column: 10, scope: !4542)
!6817 = !DILocation(line: 1772, column: 6, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1772, column: 6)
!6819 = !DILocation(line: 1772, column: 13, scope: !6818)
!6820 = !DILocation(line: 1772, column: 6, scope: !4542)
!6821 = !DILocation(line: 1773, column: 42, scope: !6818)
!6822 = !DILocation(line: 1773, column: 48, scope: !6818)
!6823 = !DILocation(line: 1773, column: 15, scope: !6818)
!6824 = !DILocation(line: 1773, column: 12, scope: !6818)
!6825 = !DILocation(line: 1773, column: 3, scope: !6818)
!6826 = !DILocation(line: 1775, column: 6, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1775, column: 6)
!6828 = !DILocation(line: 1775, column: 13, scope: !6827)
!6829 = !DILocation(line: 1775, column: 6, scope: !4542)
!6830 = !DILocation(line: 1776, column: 42, scope: !6827)
!6831 = !DILocation(line: 1776, column: 48, scope: !6827)
!6832 = !DILocation(line: 1776, column: 15, scope: !6827)
!6833 = !DILocation(line: 1776, column: 12, scope: !6827)
!6834 = !DILocation(line: 1776, column: 3, scope: !6827)
!6835 = !DILocation(line: 1778, column: 11, scope: !4542)
!6836 = !DILocalVariable(name: "__tmp", scope: !6837, file: !3, line: 1780, type: !6838)
!6837 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1780, column: 2)
!6838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6605, size: 64)
!6839 = !DILocation(line: 1780, column: 2, scope: !6837)
!6840 = !DILocalVariable(name: "__kfifo", scope: !6837, file: !3, line: 1780, type: !4856)
!6841 = !DILocation(line: 1781, column: 2, scope: !4542)
!6842 = !DILocation(line: 1781, column: 2, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1781, column: 2)
!6844 = !DILocation(line: 1784, column: 29, scope: !4542)
!6845 = !DILocation(line: 1784, column: 33, scope: !4542)
!6846 = !DILocation(line: 1787, column: 8, scope: !4542)
!6847 = !DILocation(line: 1788, column: 8, scope: !4542)
!6848 = !DILocation(line: 1788, column: 12, scope: !4542)
!6849 = !DILocation(line: 1789, column: 8, scope: !4542)
!6850 = !DILocation(line: 1784, column: 8, scope: !4542)
!6851 = !DILocation(line: 1784, column: 6, scope: !4542)
!6852 = !DILocation(line: 1790, column: 6, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1790, column: 6)
!6854 = !DILocation(line: 1790, column: 6, scope: !4542)
!6855 = !DILocation(line: 1791, column: 3, scope: !6853)
!6856 = !DILocation(line: 1793, column: 7, scope: !4542)
!6857 = !DILocation(line: 1793, column: 5, scope: !4542)
!6858 = !DILocation(line: 1794, column: 6, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1794, column: 6)
!6860 = !DILocation(line: 1794, column: 9, scope: !6859)
!6861 = !DILocation(line: 1794, column: 6, scope: !4542)
!6862 = !DILocation(line: 1795, column: 9, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6859, file: !3, line: 1794, column: 14)
!6864 = !DILocation(line: 1795, column: 7, scope: !6863)
!6865 = !DILocation(line: 1796, column: 3, scope: !6863)
!6866 = !DILocation(line: 1801, column: 7, scope: !4542)
!6867 = !DILocation(line: 1799, column: 9, scope: !4542)
!6868 = !DILocation(line: 1799, column: 7, scope: !4542)
!6869 = !DILocation(line: 1803, column: 13, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1803, column: 6)
!6871 = !DILocation(line: 1803, column: 6, scope: !6870)
!6872 = !DILocation(line: 1803, column: 6, scope: !4542)
!6873 = !DILocation(line: 1804, column: 17, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 1803, column: 20)
!6875 = !DILocation(line: 1804, column: 9, scope: !6874)
!6876 = !DILocation(line: 1804, column: 7, scope: !6874)
!6877 = !DILocation(line: 1805, column: 3, scope: !6874)
!6878 = !DILocation(line: 1808, column: 16, scope: !4542)
!6879 = !DILocation(line: 1808, column: 11, scope: !4542)
!6880 = !DILocation(line: 1808, column: 14, scope: !4542)
!6881 = !DILocation(line: 1809, column: 19, scope: !6562)
!6882 = !DILocation(line: 1809, column: 23, scope: !6562)
!6883 = !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !6561)
!6884 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !6560)
!6885 = !DILocation(line: 0, scope: !4881, inlinedAt: !6560)
!6886 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !6560)
!6887 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !6560)
!6888 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !6560)
!6889 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !6560)
!6890 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !6560)
!6891 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !6560)
!6892 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !6560)
!6893 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !6560)
!6894 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !6560)
!6895 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !6560)
!6896 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !6560)
!6897 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !6560)
!6898 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !6560)
!6899 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !6560)
!6900 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !6560)
!6901 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !6560)
!6902 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !6560)
!6903 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !6560)
!6904 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !6560)
!6905 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !6560)
!6906 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !6560)
!6907 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !6560)
!6908 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !6560)
!6909 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !6560)
!6910 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !6560)
!6911 = !DILocation(line: 199, column: 6, scope: !4618, inlinedAt: !6561)
!6912 = !DILocation(line: 200, column: 21, scope: !4616, inlinedAt: !6561)
!6913 = !DILocation(line: 200, column: 25, scope: !4616, inlinedAt: !6561)
!6914 = !DILocation(line: 200, column: 31, scope: !4616, inlinedAt: !6561)
!6915 = !DILocation(line: 200, column: 7, scope: !4616, inlinedAt: !6561)
!6916 = !DILocation(line: 200, column: 5, scope: !4616, inlinedAt: !6561)
!6917 = !DILocation(line: 200, column: 3, scope: !4616, inlinedAt: !6561)
!6918 = !DILocation(line: 201, column: 9, scope: !4618, inlinedAt: !6561)
!6919 = !DILocation(line: 1809, column: 6, scope: !6562)
!6920 = !DILocation(line: 1809, column: 6, scope: !4542)
!6921 = !DILocation(line: 1814, column: 8, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6562, file: !3, line: 1809, column: 53)
!6923 = !DILocation(line: 1814, column: 3, scope: !6922)
!6924 = !DILocation(line: 1815, column: 17, scope: !6922)
!6925 = !DILocation(line: 1815, column: 3, scope: !6922)
!6926 = !DILocation(line: 1816, column: 3, scope: !6922)
!6927 = !DILocation(line: 1819, column: 13, scope: !4542)
!6928 = !DILocation(line: 1819, column: 17, scope: !4542)
!6929 = !DILocation(line: 1819, column: 2, scope: !4542)
!6930 = !DILocation(line: 1821, column: 2, scope: !4542)
!6931 = !DILabel(scope: !4542, name: "out_put_unused_fd", file: !3, line: 1823)
!6932 = !DILocation(line: 1823, column: 1, scope: !4542)
!6933 = !DILocation(line: 1824, column: 16, scope: !4542)
!6934 = !DILocation(line: 1824, column: 2, scope: !4542)
!6935 = !DILabel(scope: !4542, name: "out_free_le", file: !3, line: 1825)
!6936 = !DILocation(line: 1825, column: 1, scope: !4542)
!6937 = !DILocation(line: 1826, column: 17, scope: !4542)
!6938 = !DILocation(line: 1826, column: 2, scope: !4542)
!6939 = !DILocation(line: 1827, column: 9, scope: !4542)
!6940 = !DILocation(line: 1827, column: 2, scope: !4542)
!6941 = !DILocation(line: 1828, column: 1, scope: !4542)
!6942 = distinct !DISubprogram(name: "lineinfo_ensure_abi_version", scope: !3, file: !3, line: 1967, type: !6943, scopeLine: 1969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!6943 = !DISubroutineType(types: !6944)
!6944 = !{!236, !4480, !7}
!6945 = !DILocalVariable(name: "v", arg: 1, scope: !6946, file: !4667, line: 194, type: !6949)
!6946 = distinct !DISubprogram(name: "arch_atomic_cmpxchg", scope: !4667, file: !4667, line: 194, type: !6947, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!6947 = !DISubroutineType(types: !6948)
!6948 = !{!236, !6949, !236, !236}
!6949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 64)
!6950 = !DILocation(line: 194, column: 58, scope: !6946, inlinedAt: !6951)
!6951 = distinct !DILocation(line: 655, column: 9, scope: !6952, inlinedAt: !6953)
!6952 = distinct !DISubprogram(name: "atomic_cmpxchg", scope: !4675, file: !4675, line: 652, type: !6947, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!6953 = distinct !DILocation(line: 1970, column: 13, scope: !6942)
!6954 = !DILocalVariable(name: "old", arg: 2, scope: !6946, file: !4667, line: 194, type: !236)
!6955 = !DILocation(line: 194, column: 65, scope: !6946, inlinedAt: !6951)
!6956 = !DILocalVariable(name: "new", arg: 3, scope: !6946, file: !4667, line: 194, type: !236)
!6957 = !DILocation(line: 194, column: 74, scope: !6946, inlinedAt: !6951)
!6958 = !DILocalVariable(name: "__ret", scope: !6959, file: !4667, line: 196, type: !236)
!6959 = distinct !DILexicalBlock(scope: !6946, file: !4667, line: 196, column: 9)
!6960 = !DILocation(line: 196, column: 9, scope: !6959, inlinedAt: !6951)
!6961 = !DILocalVariable(name: "__old", scope: !6959, file: !4667, line: 196, type: !236)
!6962 = !DILocalVariable(name: "__new", scope: !6959, file: !4667, line: 196, type: !236)
!6963 = !DILocalVariable(name: "__ptr", scope: !6959, file: !4667, line: 196, type: !3464)
!6964 = !DILocalVariable(name: "v", arg: 1, scope: !6965, file: !4680, line: 99, type: !4683)
!6965 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !4680, file: !4680, line: 99, type: !4681, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!6966 = !DILocation(line: 99, column: 79, scope: !6965, inlinedAt: !6967)
!6967 = distinct !DILocation(line: 654, column: 2, scope: !6952, inlinedAt: !6953)
!6968 = !DILocalVariable(name: "size", arg: 2, scope: !6965, file: !4680, line: 99, type: !815)
!6969 = !DILocation(line: 99, column: 89, scope: !6965, inlinedAt: !6967)
!6970 = !DILocalVariable(name: "v", arg: 1, scope: !6952, file: !4675, line: 652, type: !6949)
!6971 = !DILocation(line: 652, column: 26, scope: !6952, inlinedAt: !6953)
!6972 = !DILocalVariable(name: "old", arg: 2, scope: !6952, file: !4675, line: 652, type: !236)
!6973 = !DILocation(line: 652, column: 33, scope: !6952, inlinedAt: !6953)
!6974 = !DILocalVariable(name: "new", arg: 3, scope: !6952, file: !4675, line: 652, type: !236)
!6975 = !DILocation(line: 652, column: 42, scope: !6952, inlinedAt: !6953)
!6976 = !DILocalVariable(name: "cdata", arg: 1, scope: !6942, file: !3, line: 1967, type: !4480)
!6977 = !DILocation(line: 1967, column: 66, scope: !6942)
!6978 = !DILocalVariable(name: "version", arg: 2, scope: !6942, file: !3, line: 1968, type: !7)
!6979 = !DILocation(line: 1968, column: 25, scope: !6942)
!6980 = !DILocalVariable(name: "abiv", scope: !6942, file: !3, line: 1970, type: !236)
!6981 = !DILocation(line: 1970, column: 6, scope: !6942)
!6982 = !DILocation(line: 1970, column: 29, scope: !6942)
!6983 = !DILocation(line: 1970, column: 36, scope: !6942)
!6984 = !DILocation(line: 1970, column: 58, scope: !6942)
!6985 = !DILocation(line: 654, column: 31, scope: !6952, inlinedAt: !6953)
!6986 = !DILocation(line: 101, column: 20, scope: !6965, inlinedAt: !6967)
!6987 = !DILocation(line: 101, column: 23, scope: !6965, inlinedAt: !6967)
!6988 = !DILocation(line: 101, column: 2, scope: !6965, inlinedAt: !6967)
!6989 = !DILocation(line: 102, column: 2, scope: !6965, inlinedAt: !6967)
!6990 = !DILocation(line: 655, column: 29, scope: !6952, inlinedAt: !6953)
!6991 = !DILocation(line: 655, column: 32, scope: !6952, inlinedAt: !6953)
!6992 = !DILocation(line: 655, column: 37, scope: !6952, inlinedAt: !6953)
!6993 = !{i32 -2147166259}
!6994 = !DILocation(line: 1972, column: 6, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 1972, column: 6)
!6996 = !DILocation(line: 1972, column: 14, scope: !6995)
!6997 = !DILocation(line: 1972, column: 11, scope: !6995)
!6998 = !DILocation(line: 1972, column: 6, scope: !6942)
!6999 = !DILocation(line: 1973, column: 3, scope: !6995)
!7000 = !DILocation(line: 1975, column: 9, scope: !6942)
!7001 = !DILocation(line: 1975, column: 2, scope: !6942)
!7002 = !DILocation(line: 1976, column: 1, scope: !6942)
!7003 = distinct !DISubprogram(name: "test_and_set_bit", scope: !7004, file: !7004, line: 68, type: !7005, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7004 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!7005 = !DISubroutineType(types: !7006)
!7006 = !{!682, !166, !7007}
!7007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7008, size: 64)
!7008 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !215)
!7009 = !DILocalVariable(name: "nr", arg: 1, scope: !7010, file: !7011, line: 136, type: !166)
!7010 = distinct !DISubprogram(name: "arch_test_and_set_bit", scope: !7011, file: !7011, line: 136, type: !7005, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7011 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!7012 = !DILocation(line: 136, column: 28, scope: !7010, inlinedAt: !7013)
!7013 = distinct !DILocation(line: 71, column: 9, scope: !7003)
!7014 = !DILocalVariable(name: "addr", arg: 2, scope: !7010, file: !7011, line: 136, type: !7007)
!7015 = !DILocation(line: 136, column: 56, scope: !7010, inlinedAt: !7013)
!7016 = !DILocalVariable(name: "c", scope: !7017, file: !7011, line: 138, type: !682)
!7017 = distinct !DILexicalBlock(scope: !7010, file: !7011, line: 138, column: 9)
!7018 = !DILocation(line: 138, column: 9, scope: !7017, inlinedAt: !7013)
!7019 = !DILocation(line: 99, column: 79, scope: !6965, inlinedAt: !7020)
!7020 = distinct !DILocation(line: 70, column: 2, scope: !7003)
!7021 = !DILocation(line: 99, column: 89, scope: !6965, inlinedAt: !7020)
!7022 = !DILocalVariable(name: "nr", arg: 1, scope: !7003, file: !7004, line: 68, type: !166)
!7023 = !DILocation(line: 68, column: 42, scope: !7003)
!7024 = !DILocalVariable(name: "addr", arg: 2, scope: !7003, file: !7004, line: 68, type: !7007)
!7025 = !DILocation(line: 68, column: 70, scope: !7003)
!7026 = !DILocation(line: 70, column: 31, scope: !7003)
!7027 = !DILocation(line: 70, column: 38, scope: !7003)
!7028 = !DILocation(line: 70, column: 36, scope: !7003)
!7029 = !DILocation(line: 101, column: 20, scope: !6965, inlinedAt: !7020)
!7030 = !DILocation(line: 101, column: 23, scope: !6965, inlinedAt: !7020)
!7031 = !DILocation(line: 101, column: 2, scope: !6965, inlinedAt: !7020)
!7032 = !DILocation(line: 102, column: 2, scope: !6965, inlinedAt: !7020)
!7033 = !DILocation(line: 71, column: 31, scope: !7003)
!7034 = !DILocation(line: 71, column: 35, scope: !7003)
!7035 = !{i32 -2146864506, i32 -2146864410}
!7036 = !DILocation(line: 71, column: 2, scope: !7003)
!7037 = distinct !DISubprogram(name: "clear_bit", scope: !7004, file: !7004, line: 39, type: !7038, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7038 = !DISubroutineType(types: !7039)
!7039 = !{null, !166, !7007}
!7040 = !DILocalVariable(name: "nr", arg: 1, scope: !7041, file: !7011, line: 72, type: !166)
!7041 = distinct !DISubprogram(name: "arch_clear_bit", scope: !7011, file: !7011, line: 72, type: !7038, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7042 = !DILocation(line: 72, column: 21, scope: !7041, inlinedAt: !7043)
!7043 = distinct !DILocation(line: 42, column: 2, scope: !7037)
!7044 = !DILocalVariable(name: "addr", arg: 2, scope: !7041, file: !7011, line: 72, type: !7007)
!7045 = !DILocation(line: 72, column: 49, scope: !7041, inlinedAt: !7043)
!7046 = !DILocalVariable(name: "v", arg: 1, scope: !7047, file: !4680, line: 84, type: !4683)
!7047 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !4680, file: !4680, line: 84, type: !4681, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7048 = !DILocation(line: 84, column: 74, scope: !7047, inlinedAt: !7049)
!7049 = distinct !DILocation(line: 41, column: 2, scope: !7037)
!7050 = !DILocalVariable(name: "size", arg: 2, scope: !7047, file: !4680, line: 84, type: !815)
!7051 = !DILocation(line: 84, column: 84, scope: !7047, inlinedAt: !7049)
!7052 = !DILocalVariable(name: "nr", arg: 1, scope: !7037, file: !7004, line: 39, type: !166)
!7053 = !DILocation(line: 39, column: 35, scope: !7037)
!7054 = !DILocalVariable(name: "addr", arg: 2, scope: !7037, file: !7004, line: 39, type: !7007)
!7055 = !DILocation(line: 39, column: 63, scope: !7037)
!7056 = !DILocation(line: 41, column: 26, scope: !7037)
!7057 = !DILocation(line: 41, column: 33, scope: !7037)
!7058 = !DILocation(line: 41, column: 31, scope: !7037)
!7059 = !DILocation(line: 86, column: 20, scope: !7047, inlinedAt: !7049)
!7060 = !DILocation(line: 86, column: 23, scope: !7047, inlinedAt: !7049)
!7061 = !DILocation(line: 86, column: 2, scope: !7047, inlinedAt: !7049)
!7062 = !DILocation(line: 87, column: 2, scope: !7047, inlinedAt: !7049)
!7063 = !DILocation(line: 42, column: 17, scope: !7037)
!7064 = !DILocation(line: 42, column: 21, scope: !7037)
!7065 = !DILocation(line: 74, column: 27, scope: !7066, inlinedAt: !7043)
!7066 = distinct !DILexicalBlock(scope: !7041, file: !7011, line: 74, column: 6)
!7067 = !DILocation(line: 74, column: 6, scope: !7066, inlinedAt: !7043)
!7068 = !DILocation(line: 74, column: 6, scope: !7041, inlinedAt: !7043)
!7069 = !DILocation(line: 76, column: 6, scope: !7070, inlinedAt: !7043)
!7070 = distinct !DILexicalBlock(scope: !7066, file: !7011, line: 74, column: 32)
!7071 = !DILocation(line: 77, column: 13, scope: !7070, inlinedAt: !7043)
!7072 = !DILocation(line: 77, column: 12, scope: !7070, inlinedAt: !7043)
!7073 = !DILocation(line: 75, column: 3, scope: !7070, inlinedAt: !7043)
!7074 = !{i32 -2146868066}
!7075 = !DILocation(line: 78, column: 2, scope: !7070, inlinedAt: !7043)
!7076 = !DILocation(line: 80, column: 8, scope: !7077, inlinedAt: !7043)
!7077 = distinct !DILexicalBlock(scope: !7066, file: !7011, line: 78, column: 9)
!7078 = !DILocation(line: 80, column: 32, scope: !7077, inlinedAt: !7043)
!7079 = !DILocation(line: 79, column: 3, scope: !7077, inlinedAt: !7043)
!7080 = !{i32 -2146867934}
!7081 = !DILocation(line: 43, column: 1, scope: !7037)
!7082 = distinct !DISubprogram(name: "lineinfo_get", scope: !3, file: !3, line: 1979, type: !7083, scopeLine: 1981, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7083 = !DISubroutineType(types: !7084)
!7084 = !{!236, !4480, !224, !682}
!7085 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !7086)
!7086 = distinct !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !7087)
!7087 = distinct !DILocation(line: 2005, column: 6, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 2005, column: 6)
!7089 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !7086)
!7090 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !7086)
!7091 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !7086)
!7092 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !7086)
!7093 = !DILocation(line: 197, column: 27, scope: !4618, inlinedAt: !7087)
!7094 = !DILocation(line: 197, column: 43, scope: !4618, inlinedAt: !7087)
!7095 = !DILocation(line: 197, column: 63, scope: !4618, inlinedAt: !7087)
!7096 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !7097)
!7097 = distinct !DILocation(line: 191, column: 6, scope: !5039, inlinedAt: !7098)
!7098 = distinct !DILocation(line: 1985, column: 6, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 1985, column: 6)
!7100 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !7097)
!7101 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !7097)
!7102 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !7097)
!7103 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !7097)
!7104 = !DILocation(line: 189, column: 22, scope: !5040, inlinedAt: !7098)
!7105 = !DILocation(line: 189, column: 45, scope: !5040, inlinedAt: !7098)
!7106 = !DILocation(line: 189, column: 65, scope: !5040, inlinedAt: !7098)
!7107 = !DILocalVariable(name: "cdev", arg: 1, scope: !7082, file: !3, line: 1979, type: !4480)
!7108 = !DILocation(line: 1979, column: 51, scope: !7082)
!7109 = !DILocalVariable(name: "ip", arg: 2, scope: !7082, file: !3, line: 1979, type: !224)
!7110 = !DILocation(line: 1979, column: 70, scope: !7082)
!7111 = !DILocalVariable(name: "watch", arg: 3, scope: !7082, file: !3, line: 1980, type: !682)
!7112 = !DILocation(line: 1980, column: 9, scope: !7082)
!7113 = !DILocalVariable(name: "desc", scope: !7082, file: !3, line: 1982, type: !3471)
!7114 = !DILocation(line: 1982, column: 20, scope: !7082)
!7115 = !DILocalVariable(name: "lineinfo", scope: !7082, file: !3, line: 1983, type: !4497)
!7116 = !DILocation(line: 1983, column: 27, scope: !7082)
!7117 = !DILocation(line: 1985, column: 21, scope: !7099)
!7118 = !DILocation(line: 1985, column: 32, scope: !7099)
!7119 = !DILocation(line: 191, column: 6, scope: !5039, inlinedAt: !7098)
!7120 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !7097)
!7121 = !DILocation(line: 0, scope: !4881, inlinedAt: !7097)
!7122 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !7097)
!7123 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !7097)
!7124 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !7097)
!7125 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !7097)
!7126 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !7097)
!7127 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !7097)
!7128 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !7097)
!7129 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !7097)
!7130 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !7097)
!7131 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !7097)
!7132 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !7097)
!7133 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !7097)
!7134 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !7097)
!7135 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !7097)
!7136 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !7097)
!7137 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !7097)
!7138 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !7097)
!7139 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !7097)
!7140 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !7097)
!7141 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !7097)
!7142 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !7097)
!7143 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !7097)
!7144 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !7097)
!7145 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !7097)
!7146 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !7097)
!7147 = !DILocation(line: 191, column: 6, scope: !5040, inlinedAt: !7098)
!7148 = !DILocation(line: 192, column: 23, scope: !5039, inlinedAt: !7098)
!7149 = !DILocation(line: 192, column: 27, scope: !5039, inlinedAt: !7098)
!7150 = !DILocation(line: 192, column: 33, scope: !5039, inlinedAt: !7098)
!7151 = !DILocation(line: 192, column: 7, scope: !5039, inlinedAt: !7098)
!7152 = !DILocation(line: 192, column: 5, scope: !5039, inlinedAt: !7098)
!7153 = !DILocation(line: 192, column: 3, scope: !5039, inlinedAt: !7098)
!7154 = !DILocation(line: 193, column: 9, scope: !5040, inlinedAt: !7098)
!7155 = !DILocation(line: 1985, column: 6, scope: !7099)
!7156 = !DILocation(line: 1985, column: 6, scope: !7082)
!7157 = !DILocation(line: 1986, column: 3, scope: !7099)
!7158 = !DILocation(line: 1988, column: 26, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 1988, column: 6)
!7160 = !DILocation(line: 1988, column: 17, scope: !7159)
!7161 = !DILocation(line: 1988, column: 6, scope: !7159)
!7162 = !DILocation(line: 1988, column: 6, scope: !7082)
!7163 = !DILocation(line: 1989, column: 3, scope: !7159)
!7164 = !DILocation(line: 1991, column: 27, scope: !7082)
!7165 = !DILocation(line: 1991, column: 33, scope: !7082)
!7166 = !DILocation(line: 1991, column: 39, scope: !7082)
!7167 = !DILocation(line: 1991, column: 54, scope: !7082)
!7168 = !DILocation(line: 1991, column: 9, scope: !7082)
!7169 = !DILocation(line: 1991, column: 7, scope: !7082)
!7170 = !DILocation(line: 1992, column: 13, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 1992, column: 6)
!7172 = !DILocation(line: 1992, column: 6, scope: !7171)
!7173 = !DILocation(line: 1992, column: 6, scope: !7082)
!7174 = !DILocation(line: 1993, column: 18, scope: !7171)
!7175 = !DILocation(line: 1993, column: 10, scope: !7171)
!7176 = !DILocation(line: 1993, column: 3, scope: !7171)
!7177 = !DILocation(line: 1995, column: 6, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 1995, column: 6)
!7179 = !DILocation(line: 1995, column: 6, scope: !7082)
!7180 = !DILocation(line: 1997, column: 35, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7182, file: !3, line: 1997, column: 7)
!7182 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 1995, column: 13)
!7183 = !DILocation(line: 1997, column: 7, scope: !7181)
!7184 = !DILocation(line: 1997, column: 7, scope: !7182)
!7185 = !DILocation(line: 1998, column: 4, scope: !7181)
!7186 = !DILocation(line: 2000, column: 33, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7182, file: !3, line: 2000, column: 7)
!7188 = !DILocation(line: 2000, column: 24, scope: !7187)
!7189 = !DILocation(line: 2000, column: 41, scope: !7187)
!7190 = !DILocation(line: 2000, column: 47, scope: !7187)
!7191 = !DILocation(line: 2000, column: 7, scope: !7187)
!7192 = !DILocation(line: 2000, column: 7, scope: !7182)
!7193 = !DILocation(line: 2001, column: 4, scope: !7187)
!7194 = !DILocation(line: 2002, column: 2, scope: !7182)
!7195 = !DILocation(line: 2003, column: 24, scope: !7082)
!7196 = !DILocation(line: 2003, column: 2, scope: !7082)
!7197 = !DILocation(line: 2005, column: 19, scope: !7088)
!7198 = !DILocation(line: 2005, column: 23, scope: !7088)
!7199 = !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !7087)
!7200 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !7086)
!7201 = !DILocation(line: 0, scope: !4881, inlinedAt: !7086)
!7202 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !7086)
!7203 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !7086)
!7204 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !7086)
!7205 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !7086)
!7206 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !7086)
!7207 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !7086)
!7208 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !7086)
!7209 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !7086)
!7210 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !7086)
!7211 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !7086)
!7212 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !7086)
!7213 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !7086)
!7214 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !7086)
!7215 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !7086)
!7216 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !7086)
!7217 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !7086)
!7218 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !7086)
!7219 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !7086)
!7220 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !7086)
!7221 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !7086)
!7222 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !7086)
!7223 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !7086)
!7224 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !7086)
!7225 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !7086)
!7226 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !7086)
!7227 = !DILocation(line: 199, column: 6, scope: !4618, inlinedAt: !7087)
!7228 = !DILocation(line: 200, column: 21, scope: !4616, inlinedAt: !7087)
!7229 = !DILocation(line: 200, column: 25, scope: !4616, inlinedAt: !7087)
!7230 = !DILocation(line: 200, column: 31, scope: !4616, inlinedAt: !7087)
!7231 = !DILocation(line: 200, column: 7, scope: !4616, inlinedAt: !7087)
!7232 = !DILocation(line: 200, column: 5, scope: !4616, inlinedAt: !7087)
!7233 = !DILocation(line: 200, column: 3, scope: !4616, inlinedAt: !7087)
!7234 = !DILocation(line: 201, column: 9, scope: !4618, inlinedAt: !7087)
!7235 = !DILocation(line: 2005, column: 6, scope: !7088)
!7236 = !DILocation(line: 2005, column: 6, scope: !7082)
!7237 = !DILocation(line: 2006, column: 7, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7239, file: !3, line: 2006, column: 7)
!7239 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 2005, column: 53)
!7240 = !DILocation(line: 2006, column: 7, scope: !7239)
!7241 = !DILocation(line: 2007, column: 23, scope: !7238)
!7242 = !DILocation(line: 2007, column: 14, scope: !7238)
!7243 = !DILocation(line: 2007, column: 31, scope: !7238)
!7244 = !DILocation(line: 2007, column: 37, scope: !7238)
!7245 = !DILocation(line: 2007, column: 4, scope: !7238)
!7246 = !DILocation(line: 2008, column: 3, scope: !7239)
!7247 = !DILocation(line: 2011, column: 2, scope: !7082)
!7248 = !DILocation(line: 2012, column: 1, scope: !7082)
!7249 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !7250)
!7250 = distinct !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !7251)
!7251 = distinct !DILocation(line: 1410, column: 6, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 1410, column: 6)
!7253 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !7250)
!7254 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !7250)
!7255 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !7250)
!7256 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !7250)
!7257 = !DILocation(line: 197, column: 27, scope: !4618, inlinedAt: !7251)
!7258 = !DILocation(line: 197, column: 43, scope: !4618, inlinedAt: !7251)
!7259 = !DILocation(line: 197, column: 63, scope: !4618, inlinedAt: !7251)
!7260 = !DILocalVariable(name: "v", arg: 1, scope: !7261, file: !4667, line: 39, type: !6949)
!7261 = distinct !DISubprogram(name: "arch_atomic_set", scope: !4667, file: !4667, line: 39, type: !7262, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7262 = !DISubroutineType(types: !7263)
!7263 = !{null, !6949, !236}
!7264 = !DILocation(line: 39, column: 55, scope: !7261, inlinedAt: !7265)
!7265 = distinct !DILocation(line: 46, column: 2, scope: !7266, inlinedAt: !7267)
!7266 = distinct !DISubprogram(name: "atomic_set", scope: !4675, file: !4675, line: 43, type: !7262, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7267 = distinct !DILocation(line: 1343, column: 2, scope: !4549)
!7268 = !DILocalVariable(name: "i", arg: 2, scope: !7261, file: !4667, line: 39, type: !236)
!7269 = !DILocation(line: 39, column: 62, scope: !7261, inlinedAt: !7265)
!7270 = !DILocation(line: 84, column: 74, scope: !7047, inlinedAt: !7271)
!7271 = distinct !DILocation(line: 45, column: 2, scope: !7266, inlinedAt: !7267)
!7272 = !DILocation(line: 84, column: 84, scope: !7047, inlinedAt: !7271)
!7273 = !DILocalVariable(name: "v", arg: 1, scope: !7266, file: !4675, line: 43, type: !6949)
!7274 = !DILocation(line: 43, column: 22, scope: !7266, inlinedAt: !7267)
!7275 = !DILocalVariable(name: "i", arg: 2, scope: !7266, file: !4675, line: 43, type: !236)
!7276 = !DILocation(line: 43, column: 29, scope: !7266, inlinedAt: !7267)
!7277 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !7278)
!7278 = distinct !DILocation(line: 191, column: 6, scope: !5039, inlinedAt: !7279)
!7279 = distinct !DILocation(line: 1298, column: 6, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 1298, column: 6)
!7281 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !7278)
!7282 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !7278)
!7283 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !7278)
!7284 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !7278)
!7285 = !DILocation(line: 189, column: 22, scope: !5040, inlinedAt: !7279)
!7286 = !DILocation(line: 189, column: 45, scope: !5040, inlinedAt: !7279)
!7287 = !DILocation(line: 189, column: 65, scope: !5040, inlinedAt: !7279)
!7288 = !DILocalVariable(name: "gdev", arg: 1, scope: !4549, file: !3, line: 1288, type: !3476)
!7289 = !DILocation(line: 1288, column: 47, scope: !4549)
!7290 = !DILocalVariable(name: "ip", arg: 2, scope: !4549, file: !3, line: 1288, type: !224)
!7291 = !DILocation(line: 1288, column: 66, scope: !4549)
!7292 = !DILocalVariable(name: "ulr", scope: !4549, file: !3, line: 1290, type: !7293)
!7293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_v2_line_request", file: !134, line: 191, size: 4736, elements: !7294)
!7294 = !{!7295, !7296, !7297, !7309, !7310, !7311, !7312}
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "offsets", scope: !7293, file: !134, line: 192, baseType: !6250, size: 2048)
!7296 = !DIDerivedType(tag: DW_TAG_member, name: "consumer", scope: !7293, file: !134, line: 193, baseType: !1746, size: 256, offset: 2048)
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !7293, file: !134, line: 194, baseType: !7298, size: 2176, offset: 2304)
!7298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_v2_line_config", file: !134, line: 162, size: 2176, elements: !7299)
!7299 = !{!7300, !7301, !7302, !7303}
!7300 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7298, file: !134, line: 163, baseType: !273, size: 64, align: 64)
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "num_attrs", scope: !7298, file: !134, line: 164, baseType: !219, size: 32, offset: 64)
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !7298, file: !134, line: 166, baseType: !4523, size: 160, offset: 96)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !7298, file: !134, line: 167, baseType: !7304, size: 1920, offset: 256)
!7304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7305, size: 1920, elements: !4516)
!7305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_v2_line_config_attribute", file: !134, line: 143, size: 192, elements: !7306)
!7306 = !{!7307, !7308}
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7305, file: !134, line: 144, baseType: !4506, size: 128)
!7308 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !7305, file: !134, line: 145, baseType: !273, size: 64, align: 64, offset: 128)
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "num_lines", scope: !7293, file: !134, line: 195, baseType: !219, size: 32, offset: 4480)
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "event_buffer_size", scope: !7293, file: !134, line: 196, baseType: !219, size: 32, offset: 4512)
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !7293, file: !134, line: 198, baseType: !4523, size: 160, offset: 4544)
!7312 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !7293, file: !134, line: 199, baseType: !1273, size: 32, offset: 4704)
!7313 = !DILocation(line: 1290, column: 30, scope: !4549)
!7314 = !DILocalVariable(name: "lc", scope: !4549, file: !3, line: 1291, type: !7315)
!7315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7298, size: 64)
!7316 = !DILocation(line: 1291, column: 30, scope: !4549)
!7317 = !DILocalVariable(name: "lr", scope: !4549, file: !3, line: 1292, type: !4417)
!7318 = !DILocation(line: 1292, column: 18, scope: !4549)
!7319 = !DILocalVariable(name: "file", scope: !4549, file: !3, line: 1293, type: !894)
!7320 = !DILocation(line: 1293, column: 15, scope: !4549)
!7321 = !DILocalVariable(name: "flags", scope: !4549, file: !3, line: 1294, type: !272)
!7322 = !DILocation(line: 1294, column: 6, scope: !4549)
!7323 = !DILocalVariable(name: "i", scope: !4549, file: !3, line: 1295, type: !7)
!7324 = !DILocation(line: 1295, column: 15, scope: !4549)
!7325 = !DILocalVariable(name: "fd", scope: !4549, file: !3, line: 1296, type: !236)
!7326 = !DILocation(line: 1296, column: 6, scope: !4549)
!7327 = !DILocalVariable(name: "ret", scope: !4549, file: !3, line: 1296, type: !236)
!7328 = !DILocation(line: 1296, column: 10, scope: !4549)
!7329 = !DILocation(line: 1298, column: 21, scope: !7280)
!7330 = !DILocation(line: 1298, column: 27, scope: !7280)
!7331 = !DILocation(line: 191, column: 6, scope: !5039, inlinedAt: !7279)
!7332 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !7278)
!7333 = !DILocation(line: 0, scope: !4881, inlinedAt: !7278)
!7334 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !7278)
!7335 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !7278)
!7336 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !7278)
!7337 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !7278)
!7338 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !7278)
!7339 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !7278)
!7340 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !7278)
!7341 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !7278)
!7342 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !7278)
!7343 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !7278)
!7344 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !7278)
!7345 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !7278)
!7346 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !7278)
!7347 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !7278)
!7348 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !7278)
!7349 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !7278)
!7350 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !7278)
!7351 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !7278)
!7352 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !7278)
!7353 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !7278)
!7354 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !7278)
!7355 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !7278)
!7356 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !7278)
!7357 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !7278)
!7358 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !7278)
!7359 = !DILocation(line: 191, column: 6, scope: !5040, inlinedAt: !7279)
!7360 = !DILocation(line: 192, column: 23, scope: !5039, inlinedAt: !7279)
!7361 = !DILocation(line: 192, column: 27, scope: !5039, inlinedAt: !7279)
!7362 = !DILocation(line: 192, column: 33, scope: !5039, inlinedAt: !7279)
!7363 = !DILocation(line: 192, column: 7, scope: !5039, inlinedAt: !7279)
!7364 = !DILocation(line: 192, column: 5, scope: !5039, inlinedAt: !7279)
!7365 = !DILocation(line: 192, column: 3, scope: !5039, inlinedAt: !7279)
!7366 = !DILocation(line: 193, column: 9, scope: !5040, inlinedAt: !7279)
!7367 = !DILocation(line: 1298, column: 6, scope: !7280)
!7368 = !DILocation(line: 1298, column: 6, scope: !4549)
!7369 = !DILocation(line: 1299, column: 3, scope: !7280)
!7370 = !DILocation(line: 1301, column: 11, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 1301, column: 6)
!7372 = !DILocation(line: 1301, column: 21, scope: !7371)
!7373 = !DILocation(line: 1301, column: 27, scope: !7371)
!7374 = !DILocation(line: 1301, column: 35, scope: !7371)
!7375 = !DILocation(line: 1301, column: 45, scope: !7371)
!7376 = !DILocation(line: 1301, column: 6, scope: !4549)
!7377 = !DILocation(line: 1302, column: 3, scope: !7371)
!7378 = !DILocation(line: 1304, column: 21, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 1304, column: 6)
!7380 = !DILocation(line: 1304, column: 17, scope: !7379)
!7381 = !DILocation(line: 1304, column: 6, scope: !7379)
!7382 = !DILocation(line: 1304, column: 6, scope: !4549)
!7383 = !DILocation(line: 1305, column: 3, scope: !7379)
!7384 = !DILocation(line: 1307, column: 12, scope: !4549)
!7385 = !DILocation(line: 1307, column: 5, scope: !4549)
!7386 = !DILocation(line: 1308, column: 37, scope: !4549)
!7387 = !DILocation(line: 1308, column: 45, scope: !4549)
!7388 = !DILocation(line: 1308, column: 8, scope: !4549)
!7389 = !DILocation(line: 1308, column: 6, scope: !4549)
!7390 = !DILocation(line: 1309, column: 6, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 1309, column: 6)
!7392 = !DILocation(line: 1309, column: 6, scope: !4549)
!7393 = !DILocation(line: 1310, column: 10, scope: !7391)
!7394 = !DILocation(line: 1310, column: 3, scope: !7391)
!7395 = !DILocation(line: 1312, column: 15, scope: !4549)
!7396 = !DILocation(line: 1312, column: 7, scope: !4549)
!7397 = !DILocation(line: 1312, column: 5, scope: !4549)
!7398 = !DILocation(line: 1313, column: 7, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 1313, column: 6)
!7400 = !DILocation(line: 1313, column: 6, scope: !4549)
!7401 = !DILocation(line: 1314, column: 3, scope: !7399)
!7402 = !DILocation(line: 1316, column: 13, scope: !4549)
!7403 = !DILocation(line: 1316, column: 2, scope: !4549)
!7404 = !DILocation(line: 1316, column: 6, scope: !4549)
!7405 = !DILocation(line: 1316, column: 11, scope: !4549)
!7406 = !DILocation(line: 1317, column: 14, scope: !4549)
!7407 = !DILocation(line: 1317, column: 20, scope: !4549)
!7408 = !DILocation(line: 1317, column: 2, scope: !4549)
!7409 = !DILocation(line: 1319, column: 9, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 1319, column: 2)
!7411 = !DILocation(line: 1319, column: 7, scope: !7410)
!7412 = !DILocation(line: 1319, column: 14, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 1319, column: 2)
!7414 = !DILocation(line: 1319, column: 22, scope: !7413)
!7415 = !DILocation(line: 1319, column: 16, scope: !7413)
!7416 = !DILocation(line: 1319, column: 2, scope: !7410)
!7417 = !DILocation(line: 1320, column: 22, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7413, file: !3, line: 1319, column: 38)
!7419 = !DILocation(line: 1320, column: 3, scope: !7418)
!7420 = !DILocation(line: 1320, column: 7, scope: !7418)
!7421 = !DILocation(line: 1320, column: 13, scope: !7418)
!7422 = !DILocation(line: 1320, column: 16, scope: !7418)
!7423 = !DILocation(line: 1320, column: 20, scope: !7418)
!7424 = !DILocation(line: 1321, column: 3, scope: !7418)
!7425 = !DILocation(line: 1321, column: 3, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7418, file: !3, line: 1321, column: 3)
!7427 = !DILocation(line: 1321, column: 3, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7426, file: !3, line: 1321, column: 3)
!7429 = !DILocation(line: 1321, column: 3, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7426, file: !3, line: 1321, column: 3)
!7431 = !DILocation(line: 1322, column: 3, scope: !7418)
!7432 = !DILocation(line: 1322, column: 3, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7418, file: !3, line: 1322, column: 3)
!7434 = !DILocation(line: 1322, column: 3, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7433, file: !3, line: 1322, column: 3)
!7436 = !DILocation(line: 1323, column: 2, scope: !7418)
!7437 = !DILocation(line: 1319, column: 34, scope: !7413)
!7438 = !DILocation(line: 1319, column: 2, scope: !7413)
!7439 = distinct !{!7439, !7416, !7440}
!7440 = !DILocation(line: 1323, column: 2, scope: !7410)
!7441 = !DILocation(line: 1325, column: 10, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 1325, column: 6)
!7443 = !DILocation(line: 1325, column: 6, scope: !7442)
!7444 = !DILocation(line: 1325, column: 22, scope: !7442)
!7445 = !DILocation(line: 1325, column: 6, scope: !4549)
!7446 = !DILocation(line: 1327, column: 28, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !7442, file: !3, line: 1325, column: 31)
!7448 = !DILocation(line: 1327, column: 24, scope: !7447)
!7449 = !DILocation(line: 1327, column: 15, scope: !7447)
!7450 = !DILocation(line: 1327, column: 3, scope: !7447)
!7451 = !DILocation(line: 1327, column: 7, scope: !7447)
!7452 = !DILocation(line: 1327, column: 13, scope: !7447)
!7453 = !DILocation(line: 1329, column: 8, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !7447, file: !3, line: 1329, column: 7)
!7455 = !DILocation(line: 1329, column: 12, scope: !7454)
!7456 = !DILocation(line: 1329, column: 7, scope: !7447)
!7457 = !DILocation(line: 1330, column: 8, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7454, file: !3, line: 1329, column: 19)
!7459 = !DILocation(line: 1331, column: 4, scope: !7458)
!7460 = !DILocation(line: 1333, column: 2, scope: !7447)
!7461 = !DILocation(line: 1335, column: 2, scope: !4549)
!7462 = !DILocation(line: 1335, column: 2, scope: !7463)
!7463 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 1335, column: 2)
!7464 = !DILocation(line: 1336, column: 2, scope: !4549)
!7465 = !DILocation(line: 1336, column: 2, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 1336, column: 2)
!7467 = !DILocation(line: 1337, column: 30, scope: !4549)
!7468 = !DILocation(line: 1337, column: 2, scope: !4549)
!7469 = !DILocation(line: 1337, column: 6, scope: !4549)
!7470 = !DILocation(line: 1337, column: 24, scope: !4549)
!7471 = !DILocation(line: 1338, column: 6, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 1338, column: 6)
!7473 = !DILocation(line: 1338, column: 10, scope: !7472)
!7474 = !DILocation(line: 1338, column: 28, scope: !7472)
!7475 = !DILocation(line: 1338, column: 6, scope: !4549)
!7476 = !DILocation(line: 1339, column: 31, scope: !7472)
!7477 = !DILocation(line: 1339, column: 41, scope: !7472)
!7478 = !DILocation(line: 1339, column: 3, scope: !7472)
!7479 = !DILocation(line: 1339, column: 7, scope: !7472)
!7480 = !DILocation(line: 1339, column: 25, scope: !7472)
!7481 = !DILocation(line: 1340, column: 11, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7472, file: !3, line: 1340, column: 11)
!7483 = !DILocation(line: 1340, column: 15, scope: !7482)
!7484 = !DILocation(line: 1340, column: 33, scope: !7482)
!7485 = !DILocation(line: 1340, column: 11, scope: !7472)
!7486 = !DILocation(line: 1341, column: 3, scope: !7482)
!7487 = !DILocation(line: 1341, column: 7, scope: !7482)
!7488 = !DILocation(line: 1341, column: 25, scope: !7482)
!7489 = !DILocation(line: 1343, column: 14, scope: !4549)
!7490 = !DILocation(line: 1343, column: 18, scope: !4549)
!7491 = !DILocation(line: 45, column: 26, scope: !7266, inlinedAt: !7267)
!7492 = !DILocation(line: 86, column: 20, scope: !7047, inlinedAt: !7271)
!7493 = !DILocation(line: 86, column: 23, scope: !7047, inlinedAt: !7271)
!7494 = !DILocation(line: 86, column: 2, scope: !7047, inlinedAt: !7271)
!7495 = !DILocation(line: 87, column: 2, scope: !7047, inlinedAt: !7271)
!7496 = !DILocation(line: 46, column: 18, scope: !7266, inlinedAt: !7267)
!7497 = !DILocation(line: 46, column: 21, scope: !7266, inlinedAt: !7267)
!7498 = !DILocation(line: 41, column: 2, scope: !7499, inlinedAt: !7265)
!7499 = distinct !DILexicalBlock(scope: !7261, file: !4667, line: 41, column: 2)
!7500 = !DILocation(line: 1344, column: 22, scope: !4549)
!7501 = !DILocation(line: 1344, column: 2, scope: !4549)
!7502 = !DILocation(line: 1344, column: 6, scope: !4549)
!7503 = !DILocation(line: 1344, column: 16, scope: !4549)
!7504 = !DILocation(line: 1347, column: 9, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 1347, column: 2)
!7506 = !DILocation(line: 1347, column: 7, scope: !7505)
!7507 = !DILocation(line: 1347, column: 14, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7505, file: !3, line: 1347, column: 2)
!7509 = !DILocation(line: 1347, column: 22, scope: !7508)
!7510 = !DILocation(line: 1347, column: 16, scope: !7508)
!7511 = !DILocation(line: 1347, column: 2, scope: !7505)
!7512 = !DILocalVariable(name: "offset", scope: !7513, file: !3, line: 1348, type: !217)
!7513 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 1347, column: 38)
!7514 = !DILocation(line: 1348, column: 7, scope: !7513)
!7515 = !DILocation(line: 1348, column: 20, scope: !7513)
!7516 = !DILocation(line: 1348, column: 28, scope: !7513)
!7517 = !DILocation(line: 1348, column: 16, scope: !7513)
!7518 = !DILocalVariable(name: "desc", scope: !7513, file: !3, line: 1349, type: !3471)
!7519 = !DILocation(line: 1349, column: 21, scope: !7513)
!7520 = !DILocation(line: 1349, column: 46, scope: !7513)
!7521 = !DILocation(line: 1349, column: 52, scope: !7513)
!7522 = !DILocation(line: 1349, column: 58, scope: !7513)
!7523 = !DILocation(line: 1349, column: 28, scope: !7513)
!7524 = !DILocation(line: 1351, column: 14, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7513, file: !3, line: 1351, column: 7)
!7526 = !DILocation(line: 1351, column: 7, scope: !7525)
!7527 = !DILocation(line: 1351, column: 7, scope: !7513)
!7528 = !DILocation(line: 1352, column: 18, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7525, file: !3, line: 1351, column: 21)
!7530 = !DILocation(line: 1352, column: 10, scope: !7529)
!7531 = !DILocation(line: 1352, column: 8, scope: !7529)
!7532 = !DILocation(line: 1353, column: 4, scope: !7529)
!7533 = !DILocation(line: 1356, column: 23, scope: !7513)
!7534 = !DILocation(line: 1356, column: 29, scope: !7513)
!7535 = !DILocation(line: 1356, column: 33, scope: !7513)
!7536 = !DILocation(line: 1356, column: 9, scope: !7513)
!7537 = !DILocation(line: 1356, column: 7, scope: !7513)
!7538 = !DILocation(line: 1357, column: 7, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7513, file: !3, line: 1357, column: 7)
!7540 = !DILocation(line: 1357, column: 7, scope: !7513)
!7541 = !DILocation(line: 1358, column: 4, scope: !7539)
!7542 = !DILocation(line: 1360, column: 23, scope: !7513)
!7543 = !DILocation(line: 1360, column: 3, scope: !7513)
!7544 = !DILocation(line: 1360, column: 7, scope: !7513)
!7545 = !DILocation(line: 1360, column: 13, scope: !7513)
!7546 = !DILocation(line: 1360, column: 16, scope: !7513)
!7547 = !DILocation(line: 1360, column: 21, scope: !7513)
!7548 = !DILocation(line: 1361, column: 37, scope: !7513)
!7549 = !DILocation(line: 1361, column: 41, scope: !7513)
!7550 = !DILocation(line: 1361, column: 11, scope: !7513)
!7551 = !DILocation(line: 1361, column: 9, scope: !7513)
!7552 = !DILocation(line: 1362, column: 43, scope: !7513)
!7553 = !DILocation(line: 1362, column: 51, scope: !7513)
!7554 = !DILocation(line: 1362, column: 57, scope: !7513)
!7555 = !DILocation(line: 1362, column: 3, scope: !7513)
!7556 = !DILocation(line: 1364, column: 30, scope: !7513)
!7557 = !DILocation(line: 1364, column: 9, scope: !7513)
!7558 = !DILocation(line: 1364, column: 7, scope: !7513)
!7559 = !DILocation(line: 1365, column: 7, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7513, file: !3, line: 1365, column: 7)
!7561 = !DILocation(line: 1365, column: 11, scope: !7560)
!7562 = !DILocation(line: 1365, column: 7, scope: !7513)
!7563 = !DILocation(line: 1366, column: 4, scope: !7560)
!7564 = !DILocation(line: 1372, column: 7, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7513, file: !3, line: 1372, column: 7)
!7566 = !DILocation(line: 1372, column: 13, scope: !7565)
!7567 = !DILocation(line: 1372, column: 7, scope: !7513)
!7568 = !DILocalVariable(name: "val", scope: !7569, file: !3, line: 1373, type: !236)
!7569 = distinct !DILexicalBlock(scope: !7565, file: !3, line: 1372, column: 41)
!7570 = !DILocation(line: 1373, column: 8, scope: !7569)
!7571 = !DILocation(line: 1373, column: 47, scope: !7569)
!7572 = !DILocation(line: 1373, column: 51, scope: !7569)
!7573 = !DILocation(line: 1373, column: 14, scope: !7569)
!7574 = !DILocation(line: 1375, column: 33, scope: !7569)
!7575 = !DILocation(line: 1375, column: 39, scope: !7569)
!7576 = !DILocation(line: 1375, column: 10, scope: !7569)
!7577 = !DILocation(line: 1375, column: 8, scope: !7569)
!7578 = !DILocation(line: 1376, column: 8, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7569, file: !3, line: 1376, column: 8)
!7580 = !DILocation(line: 1376, column: 8, scope: !7569)
!7581 = !DILocation(line: 1377, column: 5, scope: !7579)
!7582 = !DILocation(line: 1378, column: 3, scope: !7569)
!7583 = !DILocation(line: 1378, column: 14, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7565, file: !3, line: 1378, column: 14)
!7585 = !DILocation(line: 1378, column: 20, scope: !7584)
!7586 = !DILocation(line: 1378, column: 14, scope: !7565)
!7587 = !DILocation(line: 1379, column: 32, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7584, file: !3, line: 1378, column: 47)
!7589 = !DILocation(line: 1379, column: 10, scope: !7588)
!7590 = !DILocation(line: 1379, column: 8, scope: !7588)
!7591 = !DILocation(line: 1380, column: 8, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7588, file: !3, line: 1380, column: 8)
!7593 = !DILocation(line: 1380, column: 8, scope: !7588)
!7594 = !DILocation(line: 1381, column: 5, scope: !7592)
!7595 = !DILocation(line: 1383, column: 31, scope: !7588)
!7596 = !DILocation(line: 1383, column: 35, scope: !7588)
!7597 = !DILocation(line: 1383, column: 41, scope: !7588)
!7598 = !DILocation(line: 1383, column: 45, scope: !7588)
!7599 = !DILocation(line: 1383, column: 49, scope: !7588)
!7600 = !DILocation(line: 1384, column: 6, scope: !7588)
!7601 = !DILocation(line: 1384, column: 12, scope: !7588)
!7602 = !DILocation(line: 1383, column: 10, scope: !7588)
!7603 = !DILocation(line: 1383, column: 8, scope: !7588)
!7604 = !DILocation(line: 1385, column: 8, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7588, file: !3, line: 1385, column: 8)
!7606 = !DILocation(line: 1385, column: 8, scope: !7588)
!7607 = !DILocation(line: 1386, column: 5, scope: !7605)
!7608 = !DILocation(line: 1387, column: 3, scope: !7588)
!7609 = !DILocation(line: 1389, column: 33, scope: !7513)
!7610 = !DILocation(line: 1389, column: 39, scope: !7513)
!7611 = !DILocation(line: 1389, column: 45, scope: !7513)
!7612 = !DILocation(line: 1390, column: 43, scope: !7513)
!7613 = !DILocation(line: 1389, column: 3, scope: !7513)
!7614 = !DILocation(line: 1394, column: 2, scope: !7513)
!7615 = !DILocation(line: 1347, column: 34, scope: !7508)
!7616 = !DILocation(line: 1347, column: 2, scope: !7508)
!7617 = distinct !{!7617, !7511, !7618}
!7618 = !DILocation(line: 1394, column: 2, scope: !7505)
!7619 = !DILocation(line: 1396, column: 7, scope: !4549)
!7620 = !DILocation(line: 1396, column: 5, scope: !4549)
!7621 = !DILocation(line: 1397, column: 6, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 1397, column: 6)
!7623 = !DILocation(line: 1397, column: 9, scope: !7622)
!7624 = !DILocation(line: 1397, column: 6, scope: !4549)
!7625 = !DILocation(line: 1398, column: 9, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7622, file: !3, line: 1397, column: 14)
!7627 = !DILocation(line: 1398, column: 7, scope: !7626)
!7628 = !DILocation(line: 1399, column: 3, scope: !7626)
!7629 = !DILocation(line: 1402, column: 56, scope: !4549)
!7630 = !DILocation(line: 1402, column: 9, scope: !4549)
!7631 = !DILocation(line: 1402, column: 7, scope: !4549)
!7632 = !DILocation(line: 1404, column: 13, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 1404, column: 6)
!7634 = !DILocation(line: 1404, column: 6, scope: !7633)
!7635 = !DILocation(line: 1404, column: 6, scope: !4549)
!7636 = !DILocation(line: 1405, column: 17, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7633, file: !3, line: 1404, column: 20)
!7638 = !DILocation(line: 1405, column: 9, scope: !7637)
!7639 = !DILocation(line: 1405, column: 7, scope: !7637)
!7640 = !DILocation(line: 1406, column: 3, scope: !7637)
!7641 = !DILocation(line: 1409, column: 11, scope: !4549)
!7642 = !DILocation(line: 1409, column: 6, scope: !4549)
!7643 = !DILocation(line: 1409, column: 9, scope: !4549)
!7644 = !DILocation(line: 1410, column: 19, scope: !7252)
!7645 = !DILocation(line: 1410, column: 23, scope: !7252)
!7646 = !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !7251)
!7647 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !7250)
!7648 = !DILocation(line: 0, scope: !4881, inlinedAt: !7250)
!7649 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !7250)
!7650 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !7250)
!7651 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !7250)
!7652 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !7250)
!7653 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !7250)
!7654 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !7250)
!7655 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !7250)
!7656 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !7250)
!7657 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !7250)
!7658 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !7250)
!7659 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !7250)
!7660 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !7250)
!7661 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !7250)
!7662 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !7250)
!7663 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !7250)
!7664 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !7250)
!7665 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !7250)
!7666 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !7250)
!7667 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !7250)
!7668 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !7250)
!7669 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !7250)
!7670 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !7250)
!7671 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !7250)
!7672 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !7250)
!7673 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !7250)
!7674 = !DILocation(line: 199, column: 6, scope: !4618, inlinedAt: !7251)
!7675 = !DILocation(line: 200, column: 21, scope: !4616, inlinedAt: !7251)
!7676 = !DILocation(line: 200, column: 25, scope: !4616, inlinedAt: !7251)
!7677 = !DILocation(line: 200, column: 31, scope: !4616, inlinedAt: !7251)
!7678 = !DILocation(line: 200, column: 7, scope: !4616, inlinedAt: !7251)
!7679 = !DILocation(line: 200, column: 5, scope: !4616, inlinedAt: !7251)
!7680 = !DILocation(line: 200, column: 3, scope: !4616, inlinedAt: !7251)
!7681 = !DILocation(line: 201, column: 9, scope: !4618, inlinedAt: !7251)
!7682 = !DILocation(line: 1410, column: 6, scope: !7252)
!7683 = !DILocation(line: 1410, column: 6, scope: !4549)
!7684 = !DILocation(line: 1415, column: 8, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7252, file: !3, line: 1410, column: 43)
!7686 = !DILocation(line: 1415, column: 3, scope: !7685)
!7687 = !DILocation(line: 1416, column: 17, scope: !7685)
!7688 = !DILocation(line: 1416, column: 3, scope: !7685)
!7689 = !DILocation(line: 1417, column: 3, scope: !7685)
!7690 = !DILocation(line: 1420, column: 13, scope: !4549)
!7691 = !DILocation(line: 1420, column: 17, scope: !4549)
!7692 = !DILocation(line: 1420, column: 2, scope: !4549)
!7693 = !DILocation(line: 1425, column: 2, scope: !4549)
!7694 = !DILabel(scope: !4549, name: "out_put_unused_fd", file: !3, line: 1427)
!7695 = !DILocation(line: 1427, column: 1, scope: !4549)
!7696 = !DILocation(line: 1428, column: 16, scope: !4549)
!7697 = !DILocation(line: 1428, column: 2, scope: !4549)
!7698 = !DILabel(scope: !4549, name: "out_free_linereq", file: !3, line: 1429)
!7699 = !DILocation(line: 1429, column: 1, scope: !4549)
!7700 = !DILocation(line: 1430, column: 15, scope: !4549)
!7701 = !DILocation(line: 1430, column: 2, scope: !4549)
!7702 = !DILocation(line: 1431, column: 9, scope: !4549)
!7703 = !DILocation(line: 1431, column: 2, scope: !4549)
!7704 = !DILocation(line: 1432, column: 1, scope: !4549)
!7705 = distinct !DISubprogram(name: "test_and_clear_bit", scope: !7004, file: !7004, line: 81, type: !7005, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7706 = !DILocalVariable(name: "nr", arg: 1, scope: !7707, file: !7011, line: 160, type: !166)
!7707 = distinct !DISubprogram(name: "arch_test_and_clear_bit", scope: !7011, file: !7011, line: 160, type: !7005, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7708 = !DILocation(line: 160, column: 30, scope: !7707, inlinedAt: !7709)
!7709 = distinct !DILocation(line: 84, column: 9, scope: !7705)
!7710 = !DILocalVariable(name: "addr", arg: 2, scope: !7707, file: !7011, line: 160, type: !7007)
!7711 = !DILocation(line: 160, column: 58, scope: !7707, inlinedAt: !7709)
!7712 = !DILocalVariable(name: "c", scope: !7713, file: !7011, line: 162, type: !682)
!7713 = distinct !DILexicalBlock(scope: !7707, file: !7011, line: 162, column: 9)
!7714 = !DILocation(line: 162, column: 9, scope: !7713, inlinedAt: !7709)
!7715 = !DILocation(line: 99, column: 79, scope: !6965, inlinedAt: !7716)
!7716 = distinct !DILocation(line: 83, column: 2, scope: !7705)
!7717 = !DILocation(line: 99, column: 89, scope: !6965, inlinedAt: !7716)
!7718 = !DILocalVariable(name: "nr", arg: 1, scope: !7705, file: !7004, line: 81, type: !166)
!7719 = !DILocation(line: 81, column: 44, scope: !7705)
!7720 = !DILocalVariable(name: "addr", arg: 2, scope: !7705, file: !7004, line: 81, type: !7007)
!7721 = !DILocation(line: 81, column: 72, scope: !7705)
!7722 = !DILocation(line: 83, column: 31, scope: !7705)
!7723 = !DILocation(line: 83, column: 38, scope: !7705)
!7724 = !DILocation(line: 83, column: 36, scope: !7705)
!7725 = !DILocation(line: 101, column: 20, scope: !6965, inlinedAt: !7716)
!7726 = !DILocation(line: 101, column: 23, scope: !6965, inlinedAt: !7716)
!7727 = !DILocation(line: 101, column: 2, scope: !6965, inlinedAt: !7716)
!7728 = !DILocation(line: 102, column: 2, scope: !6965, inlinedAt: !7716)
!7729 = !DILocation(line: 84, column: 33, scope: !7705)
!7730 = !DILocation(line: 84, column: 37, scope: !7705)
!7731 = !{i32 -2146862582, i32 -2146862486}
!7732 = !DILocation(line: 84, column: 2, scope: !7705)
!7733 = distinct !DISubprogram(name: "kobject_name", scope: !2027, file: !2027, line: 88, type: !7734, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7734 = !DISubroutineType(types: !7735)
!7735 = !{!637, !7736}
!7736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7737, size: 64)
!7737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2026)
!7738 = !DILocalVariable(name: "kobj", arg: 1, scope: !7733, file: !2027, line: 88, type: !7736)
!7739 = !DILocation(line: 88, column: 62, scope: !7733)
!7740 = !DILocation(line: 90, column: 9, scope: !7733)
!7741 = !DILocation(line: 90, column: 15, scope: !7733)
!7742 = !DILocation(line: 90, column: 2, scope: !7733)
!7743 = distinct !DISubprogram(name: "gpio_chip_hwgpio", scope: !3473, file: !3473, line: 143, type: !7744, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7744 = !DISubroutineType(types: !7745)
!7745 = !{!236, !7746}
!7746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7747, size: 64)
!7747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3472)
!7748 = !DILocalVariable(name: "desc", arg: 1, scope: !7743, file: !3473, line: 143, type: !7746)
!7749 = !DILocation(line: 143, column: 60, scope: !7743)
!7750 = !DILocation(line: 145, column: 9, scope: !7743)
!7751 = !DILocation(line: 145, column: 17, scope: !7743)
!7752 = !DILocation(line: 145, column: 23, scope: !7743)
!7753 = !DILocation(line: 145, column: 29, scope: !7743)
!7754 = !DILocation(line: 145, column: 14, scope: !7743)
!7755 = !DILocation(line: 145, column: 2, scope: !7743)
!7756 = distinct !DISubprogram(name: "pinctrl_gpio_can_use_line", scope: !7757, file: !7757, line: 66, type: !7758, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7757 = !DIFile(filename: "./include/linux/pinctrl/consumer.h", directory: "/home/lizy2001/genbc/linux")
!7758 = !DISubroutineType(types: !7759)
!7759 = !{!682, !7}
!7760 = !DILocalVariable(name: "gpio", arg: 1, scope: !7756, file: !7757, line: 66, type: !7)
!7761 = !DILocation(line: 66, column: 55, scope: !7756)
!7762 = !DILocation(line: 68, column: 2, scope: !7756)
!7763 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !7764, file: !7764, line: 666, type: !7765, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7764 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!7765 = !DISubroutineType(types: !7766)
!7766 = !{!215}
!7767 = !DILocalVariable(name: "f", scope: !7763, file: !7764, line: 668, type: !215)
!7768 = !DILocation(line: 668, column: 16, scope: !7763)
!7769 = !DILocation(line: 670, column: 6, scope: !7763)
!7770 = !DILocation(line: 670, column: 4, scope: !7763)
!7771 = !DILocation(line: 671, column: 2, scope: !7763)
!7772 = !DILocation(line: 672, column: 9, scope: !7763)
!7773 = !DILocation(line: 672, column: 2, scope: !7763)
!7774 = distinct !DISubprogram(name: "test_bit", scope: !7775, file: !7775, line: 132, type: !7776, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7775 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!7776 = !DISubroutineType(types: !7777)
!7777 = !{!682, !166, !7778}
!7778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7779, size: 64)
!7779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7008)
!7780 = !DILocalVariable(name: "nr", arg: 1, scope: !7781, file: !7011, line: 210, type: !166)
!7781 = distinct !DISubprogram(name: "variable_test_bit", scope: !7011, file: !7011, line: 210, type: !7776, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7782 = !DILocation(line: 210, column: 52, scope: !7781, inlinedAt: !7783)
!7783 = distinct !DILocation(line: 135, column: 9, scope: !7774)
!7784 = !DILocalVariable(name: "addr", arg: 2, scope: !7781, file: !7011, line: 210, type: !7778)
!7785 = !DILocation(line: 210, column: 86, scope: !7781, inlinedAt: !7783)
!7786 = !DILocalVariable(name: "oldbit", scope: !7781, file: !7011, line: 212, type: !682)
!7787 = !DILocation(line: 212, column: 7, scope: !7781, inlinedAt: !7783)
!7788 = !DILocalVariable(name: "nr", arg: 1, scope: !7789, file: !7011, line: 204, type: !166)
!7789 = distinct !DISubprogram(name: "constant_test_bit", scope: !7011, file: !7011, line: 204, type: !7776, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7790 = !DILocation(line: 204, column: 52, scope: !7789, inlinedAt: !7791)
!7791 = distinct !DILocation(line: 135, column: 9, scope: !7774)
!7792 = !DILocalVariable(name: "addr", arg: 2, scope: !7789, file: !7011, line: 204, type: !7778)
!7793 = !DILocation(line: 204, column: 86, scope: !7789, inlinedAt: !7791)
!7794 = !DILocation(line: 69, column: 73, scope: !4679, inlinedAt: !7795)
!7795 = distinct !DILocation(line: 134, column: 2, scope: !7774)
!7796 = !DILocation(line: 69, column: 83, scope: !4679, inlinedAt: !7795)
!7797 = !DILocalVariable(name: "nr", arg: 1, scope: !7774, file: !7775, line: 132, type: !166)
!7798 = !DILocation(line: 132, column: 34, scope: !7774)
!7799 = !DILocalVariable(name: "addr", arg: 2, scope: !7774, file: !7775, line: 132, type: !7778)
!7800 = !DILocation(line: 132, column: 68, scope: !7774)
!7801 = !DILocation(line: 134, column: 25, scope: !7774)
!7802 = !DILocation(line: 134, column: 32, scope: !7774)
!7803 = !DILocation(line: 134, column: 30, scope: !7774)
!7804 = !DILocation(line: 71, column: 19, scope: !4679, inlinedAt: !7795)
!7805 = !DILocation(line: 71, column: 22, scope: !4679, inlinedAt: !7795)
!7806 = !DILocation(line: 71, column: 2, scope: !4679, inlinedAt: !7795)
!7807 = !DILocation(line: 72, column: 2, scope: !4679, inlinedAt: !7795)
!7808 = !DILocation(line: 135, column: 9, scope: !7774)
!7809 = !DILocation(line: 206, column: 19, scope: !7789, inlinedAt: !7791)
!7810 = !DILocation(line: 206, column: 22, scope: !7789, inlinedAt: !7791)
!7811 = !DILocation(line: 206, column: 15, scope: !7789, inlinedAt: !7791)
!7812 = !DILocation(line: 207, column: 4, scope: !7789, inlinedAt: !7791)
!7813 = !DILocation(line: 207, column: 9, scope: !7789, inlinedAt: !7791)
!7814 = !DILocation(line: 207, column: 12, scope: !7789, inlinedAt: !7791)
!7815 = !DILocation(line: 206, column: 44, scope: !7789, inlinedAt: !7791)
!7816 = !DILocation(line: 207, column: 37, scope: !7789, inlinedAt: !7791)
!7817 = !DILocation(line: 217, column: 33, scope: !7781, inlinedAt: !7783)
!7818 = !DILocation(line: 217, column: 46, scope: !7781, inlinedAt: !7783)
!7819 = !DILocation(line: 214, column: 2, scope: !7781, inlinedAt: !7783)
!7820 = !{i32 -2146859712, i32 -2146859652}
!7821 = !DILocation(line: 219, column: 9, scope: !7781, inlinedAt: !7783)
!7822 = !DILocation(line: 135, column: 2, scope: !7774)
!7823 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !7764, file: !7764, line: 646, type: !7765, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7824 = !DILocalVariable(name: "__ret", scope: !7825, file: !7764, line: 648, type: !215)
!7825 = distinct !DILexicalBlock(scope: !7823, file: !7764, line: 648, column: 9)
!7826 = !DILocation(line: 648, column: 9, scope: !7825)
!7827 = !DILocalVariable(name: "__edi", scope: !7825, file: !7764, line: 648, type: !215)
!7828 = !DILocalVariable(name: "__esi", scope: !7825, file: !7764, line: 648, type: !215)
!7829 = !DILocalVariable(name: "__edx", scope: !7825, file: !7764, line: 648, type: !215)
!7830 = !DILocalVariable(name: "__ecx", scope: !7825, file: !7764, line: 648, type: !215)
!7831 = !DILocalVariable(name: "__eax", scope: !7825, file: !7764, line: 648, type: !215)
!7832 = !DILocation(line: 648, column: 9, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7834, file: !7764, line: 648, column: 9)
!7834 = distinct !DILexicalBlock(scope: !7825, file: !7764, line: 648, column: 9)
!7835 = !{i32 -2145707060, i32 -2145704745, i32 -2145704511, i32 -2145704460, i32 -2145704432, i32 -2145704407, i32 -2145704723, i32 -2145704710, i32 -2145704272, i32 -2145704153, i32 -2145704618, i32 -2145704591, i32 -2145704563, i32 -2145704533}
!7836 = !DILocalVariable(name: "__mask", scope: !7837, file: !7764, line: 648, type: !215)
!7837 = distinct !DILexicalBlock(scope: !7833, file: !7764, line: 648, column: 9)
!7838 = !DILocation(line: 648, column: 9, scope: !7837)
!7839 = !DILocation(line: 648, column: 9, scope: !7834)
!7840 = !DILocation(line: 648, column: 2, scope: !7823)
!7841 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !7764, file: !7764, line: 656, type: !3038, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7842 = !DILocalVariable(name: "__edi", scope: !7843, file: !7764, line: 658, type: !215)
!7843 = distinct !DILexicalBlock(scope: !7841, file: !7764, line: 658, column: 2)
!7844 = !DILocation(line: 658, column: 2, scope: !7843)
!7845 = !DILocalVariable(name: "__esi", scope: !7843, file: !7764, line: 658, type: !215)
!7846 = !DILocalVariable(name: "__edx", scope: !7843, file: !7764, line: 658, type: !215)
!7847 = !DILocalVariable(name: "__ecx", scope: !7843, file: !7764, line: 658, type: !215)
!7848 = !DILocalVariable(name: "__eax", scope: !7843, file: !7764, line: 658, type: !215)
!7849 = !{i32 -2145699966, i32 -2145699234, i32 -2145699000, i32 -2145698949, i32 -2145698921, i32 -2145698896, i32 -2145699212, i32 -2145699199, i32 -2145698761, i32 -2145698642, i32 -2145699107, i32 -2145699080, i32 -2145699052, i32 -2145699022}
!7850 = !DILocation(line: 659, column: 1, scope: !7841)
!7851 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !7764, file: !7764, line: 651, type: !7852, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7852 = !DISubroutineType(types: !7853)
!7853 = !{null, !215}
!7854 = !DILocalVariable(name: "f", arg: 1, scope: !7851, file: !7764, line: 651, type: !215)
!7855 = !DILocation(line: 651, column: 65, scope: !7851)
!7856 = !DILocalVariable(name: "__edi", scope: !7857, file: !7764, line: 653, type: !215)
!7857 = distinct !DILexicalBlock(scope: !7851, file: !7764, line: 653, column: 2)
!7858 = !DILocation(line: 653, column: 2, scope: !7857)
!7859 = !DILocalVariable(name: "__esi", scope: !7857, file: !7764, line: 653, type: !215)
!7860 = !DILocalVariable(name: "__edx", scope: !7857, file: !7764, line: 653, type: !215)
!7861 = !DILocalVariable(name: "__ecx", scope: !7857, file: !7764, line: 653, type: !215)
!7862 = !DILocalVariable(name: "__eax", scope: !7857, file: !7764, line: 653, type: !215)
!7863 = !{i32 -2145702593, i32 -2145701843, i32 -2145701609, i32 -2145701558, i32 -2145701530, i32 -2145701505, i32 -2145701821, i32 -2145701808, i32 -2145701370, i32 -2145701251, i32 -2145701716, i32 -2145701689, i32 -2145701661, i32 -2145701631}
!7864 = !DILocation(line: 654, column: 1, scope: !7851)
!7865 = distinct !DISubprogram(name: "linehandle_validate_flags", scope: !3, file: !3, line: 86, type: !7866, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7866 = !DISubroutineType(types: !7867)
!7867 = !{!236, !217}
!7868 = !DILocalVariable(name: "flags", arg: 1, scope: !7865, file: !3, line: 86, type: !217)
!7869 = !DILocation(line: 86, column: 42, scope: !7865)
!7870 = !DILocation(line: 89, column: 6, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7865, file: !3, line: 89, column: 6)
!7872 = !DILocation(line: 89, column: 12, scope: !7871)
!7873 = !DILocation(line: 89, column: 6, scope: !7865)
!7874 = !DILocation(line: 90, column: 3, scope: !7871)
!7875 = !DILocation(line: 96, column: 7, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7865, file: !3, line: 96, column: 6)
!7877 = !DILocation(line: 96, column: 13, scope: !7876)
!7878 = !DILocation(line: 96, column: 41, scope: !7876)
!7879 = !DILocation(line: 97, column: 7, scope: !7876)
!7880 = !DILocation(line: 97, column: 13, scope: !7876)
!7881 = !DILocation(line: 96, column: 6, scope: !7865)
!7882 = !DILocation(line: 98, column: 3, scope: !7876)
!7883 = !DILocation(line: 105, column: 7, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7865, file: !3, line: 105, column: 6)
!7885 = !DILocation(line: 105, column: 13, scope: !7884)
!7886 = !DILocation(line: 105, column: 46, scope: !7884)
!7887 = !DILocation(line: 106, column: 7, scope: !7884)
!7888 = !DILocation(line: 106, column: 13, scope: !7884)
!7889 = !DILocation(line: 105, column: 6, scope: !7865)
!7890 = !DILocation(line: 107, column: 3, scope: !7884)
!7891 = !DILocation(line: 110, column: 8, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7865, file: !3, line: 110, column: 6)
!7893 = !DILocation(line: 110, column: 14, scope: !7892)
!7894 = !DILocation(line: 110, column: 43, scope: !7892)
!7895 = !DILocation(line: 111, column: 8, scope: !7892)
!7896 = !DILocation(line: 111, column: 14, scope: !7892)
!7897 = !DILocation(line: 111, column: 47, scope: !7892)
!7898 = !DILocation(line: 112, column: 8, scope: !7892)
!7899 = !DILocation(line: 112, column: 14, scope: !7892)
!7900 = !DILocation(line: 110, column: 6, scope: !7865)
!7901 = !DILocation(line: 113, column: 3, scope: !7892)
!7902 = !DILocation(line: 116, column: 9, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7865, file: !3, line: 116, column: 6)
!7904 = !DILocation(line: 116, column: 15, scope: !7903)
!7905 = !DILocation(line: 116, column: 43, scope: !7903)
!7906 = !DILocation(line: 117, column: 9, scope: !7903)
!7907 = !DILocation(line: 117, column: 15, scope: !7903)
!7908 = !DILocation(line: 117, column: 45, scope: !7903)
!7909 = !DILocation(line: 118, column: 8, scope: !7903)
!7910 = !DILocation(line: 118, column: 14, scope: !7903)
!7911 = !DILocation(line: 118, column: 49, scope: !7903)
!7912 = !DILocation(line: 119, column: 8, scope: !7903)
!7913 = !DILocation(line: 119, column: 14, scope: !7903)
!7914 = !DILocation(line: 119, column: 49, scope: !7903)
!7915 = !DILocation(line: 120, column: 8, scope: !7903)
!7916 = !DILocation(line: 120, column: 14, scope: !7903)
!7917 = !DILocation(line: 116, column: 6, scope: !7865)
!7918 = !DILocation(line: 121, column: 3, scope: !7903)
!7919 = !DILocation(line: 124, column: 8, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7865, file: !3, line: 124, column: 6)
!7921 = !DILocation(line: 124, column: 14, scope: !7920)
!7922 = !DILocation(line: 124, column: 49, scope: !7920)
!7923 = !DILocation(line: 125, column: 8, scope: !7920)
!7924 = !DILocation(line: 125, column: 14, scope: !7920)
!7925 = !DILocation(line: 126, column: 45, scope: !7920)
!7926 = !DILocation(line: 127, column: 8, scope: !7920)
!7927 = !DILocation(line: 127, column: 14, scope: !7920)
!7928 = !DILocation(line: 127, column: 51, scope: !7920)
!7929 = !DILocation(line: 128, column: 8, scope: !7920)
!7930 = !DILocation(line: 128, column: 14, scope: !7920)
!7931 = !DILocation(line: 124, column: 6, scope: !7865)
!7932 = !DILocation(line: 129, column: 3, scope: !7920)
!7933 = !DILocation(line: 131, column: 2, scope: !7865)
!7934 = !DILocation(line: 132, column: 1, scope: !7865)
!7935 = distinct !DISubprogram(name: "kzalloc", scope: !158, file: !158, line: 662, type: !7936, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7936 = !DISubroutineType(types: !7937)
!7937 = !{!224, !815, !487}
!7938 = !DILocalVariable(name: "s", arg: 1, scope: !7939, file: !158, line: 445, type: !2459)
!7939 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !158, file: !158, line: 445, type: !7940, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7940 = !DISubroutineType(types: !7941)
!7941 = !{!224, !2459, !487, !815}
!7942 = !DILocation(line: 445, column: 72, scope: !7939, inlinedAt: !7943)
!7943 = distinct !DILocation(line: 552, column: 10, scope: !7944, inlinedAt: !7947)
!7944 = distinct !DILexicalBlock(scope: !7945, file: !158, line: 540, column: 34)
!7945 = distinct !DILexicalBlock(scope: !7946, file: !158, line: 540, column: 6)
!7946 = distinct !DISubprogram(name: "kmalloc", scope: !158, file: !158, line: 538, type: !7936, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7947 = distinct !DILocation(line: 664, column: 9, scope: !7935)
!7948 = !DILocalVariable(name: "flags", arg: 2, scope: !7939, file: !158, line: 446, type: !487)
!7949 = !DILocation(line: 446, column: 9, scope: !7939, inlinedAt: !7943)
!7950 = !DILocalVariable(name: "size", arg: 3, scope: !7939, file: !158, line: 446, type: !815)
!7951 = !DILocation(line: 446, column: 23, scope: !7939, inlinedAt: !7943)
!7952 = !DILocalVariable(name: "ret", scope: !7939, file: !158, line: 448, type: !224)
!7953 = !DILocation(line: 448, column: 8, scope: !7939, inlinedAt: !7943)
!7954 = !DILocalVariable(name: "flags", arg: 1, scope: !7955, file: !158, line: 318, type: !487)
!7955 = distinct !DISubprogram(name: "kmalloc_type", scope: !158, file: !158, line: 318, type: !7956, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7956 = !DISubroutineType(types: !7957)
!7957 = !{!157, !487}
!7958 = !DILocation(line: 318, column: 67, scope: !7955, inlinedAt: !7959)
!7959 = distinct !DILocation(line: 553, column: 20, scope: !7944, inlinedAt: !7947)
!7960 = !DILocalVariable(name: "size", arg: 1, scope: !7961, file: !158, line: 346, type: !815)
!7961 = distinct !DISubprogram(name: "kmalloc_index", scope: !158, file: !158, line: 346, type: !7962, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7962 = !DISubroutineType(types: !7963)
!7963 = !{!7, !815}
!7964 = !DILocation(line: 346, column: 58, scope: !7961, inlinedAt: !7965)
!7965 = distinct !DILocation(line: 547, column: 11, scope: !7944, inlinedAt: !7947)
!7966 = !DILocalVariable(name: "size", arg: 1, scope: !7967, file: !158, line: 472, type: !815)
!7967 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !158, file: !158, line: 472, type: !7968, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7968 = !DISubroutineType(types: !7969)
!7969 = !{!224, !815, !487, !7}
!7970 = !DILocation(line: 472, column: 28, scope: !7967, inlinedAt: !7971)
!7971 = distinct !DILocation(line: 481, column: 9, scope: !7972, inlinedAt: !7973)
!7972 = distinct !DISubprogram(name: "kmalloc_large", scope: !158, file: !158, line: 478, type: !7936, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!7973 = distinct !DILocation(line: 545, column: 11, scope: !7974, inlinedAt: !7947)
!7974 = distinct !DILexicalBlock(scope: !7944, file: !158, line: 544, column: 7)
!7975 = !DILocalVariable(name: "flags", arg: 2, scope: !7967, file: !158, line: 472, type: !487)
!7976 = !DILocation(line: 472, column: 40, scope: !7967, inlinedAt: !7971)
!7977 = !DILocalVariable(name: "order", arg: 3, scope: !7967, file: !158, line: 472, type: !7)
!7978 = !DILocation(line: 472, column: 60, scope: !7967, inlinedAt: !7971)
!7979 = !DILocalVariable(name: "size", arg: 1, scope: !7972, file: !158, line: 478, type: !815)
!7980 = !DILocation(line: 478, column: 51, scope: !7972, inlinedAt: !7973)
!7981 = !DILocalVariable(name: "flags", arg: 2, scope: !7972, file: !158, line: 478, type: !487)
!7982 = !DILocation(line: 478, column: 63, scope: !7972, inlinedAt: !7973)
!7983 = !DILocalVariable(name: "order", scope: !7972, file: !158, line: 480, type: !7)
!7984 = !DILocation(line: 480, column: 15, scope: !7972, inlinedAt: !7973)
!7985 = !DILocalVariable(name: "size", arg: 1, scope: !7946, file: !158, line: 538, type: !815)
!7986 = !DILocation(line: 538, column: 45, scope: !7946, inlinedAt: !7947)
!7987 = !DILocalVariable(name: "flags", arg: 2, scope: !7946, file: !158, line: 538, type: !487)
!7988 = !DILocation(line: 538, column: 57, scope: !7946, inlinedAt: !7947)
!7989 = !DILocalVariable(name: "index", scope: !7944, file: !158, line: 542, type: !7)
!7990 = !DILocation(line: 542, column: 16, scope: !7944, inlinedAt: !7947)
!7991 = !DILocalVariable(name: "size", arg: 1, scope: !7935, file: !158, line: 662, type: !815)
!7992 = !DILocation(line: 662, column: 36, scope: !7935)
!7993 = !DILocalVariable(name: "flags", arg: 2, scope: !7935, file: !158, line: 662, type: !487)
!7994 = !DILocation(line: 662, column: 48, scope: !7935)
!7995 = !DILocation(line: 664, column: 17, scope: !7935)
!7996 = !DILocation(line: 664, column: 23, scope: !7935)
!7997 = !DILocation(line: 664, column: 29, scope: !7935)
!7998 = !DILocation(line: 540, column: 27, scope: !7945, inlinedAt: !7947)
!7999 = !DILocation(line: 540, column: 6, scope: !7945, inlinedAt: !7947)
!8000 = !DILocation(line: 540, column: 6, scope: !7946, inlinedAt: !7947)
!8001 = !DILocation(line: 544, column: 7, scope: !7974, inlinedAt: !7947)
!8002 = !DILocation(line: 544, column: 12, scope: !7974, inlinedAt: !7947)
!8003 = !DILocation(line: 544, column: 7, scope: !7944, inlinedAt: !7947)
!8004 = !DILocation(line: 545, column: 25, scope: !7974, inlinedAt: !7947)
!8005 = !DILocation(line: 545, column: 31, scope: !7974, inlinedAt: !7947)
!8006 = !DILocation(line: 480, column: 33, scope: !7972, inlinedAt: !7973)
!8007 = !DILocation(line: 480, column: 23, scope: !7972, inlinedAt: !7973)
!8008 = !DILocation(line: 481, column: 29, scope: !7972, inlinedAt: !7973)
!8009 = !DILocation(line: 481, column: 35, scope: !7972, inlinedAt: !7973)
!8010 = !DILocation(line: 481, column: 42, scope: !7972, inlinedAt: !7973)
!8011 = !DILocation(line: 474, column: 23, scope: !7967, inlinedAt: !7971)
!8012 = !DILocation(line: 474, column: 29, scope: !7967, inlinedAt: !7971)
!8013 = !DILocation(line: 474, column: 36, scope: !7967, inlinedAt: !7971)
!8014 = !DILocation(line: 474, column: 9, scope: !7967, inlinedAt: !7971)
!8015 = !DILocation(line: 545, column: 4, scope: !7974, inlinedAt: !7947)
!8016 = !DILocation(line: 547, column: 25, scope: !7944, inlinedAt: !7947)
!8017 = !DILocation(line: 348, column: 7, scope: !8018, inlinedAt: !7965)
!8018 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 348, column: 6)
!8019 = !DILocation(line: 348, column: 6, scope: !7961, inlinedAt: !7965)
!8020 = !DILocation(line: 349, column: 3, scope: !8018, inlinedAt: !7965)
!8021 = !DILocation(line: 351, column: 6, scope: !8022, inlinedAt: !7965)
!8022 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 351, column: 6)
!8023 = !DILocation(line: 351, column: 11, scope: !8022, inlinedAt: !7965)
!8024 = !DILocation(line: 351, column: 6, scope: !7961, inlinedAt: !7965)
!8025 = !DILocation(line: 352, column: 3, scope: !8022, inlinedAt: !7965)
!8026 = !DILocation(line: 354, column: 32, scope: !8027, inlinedAt: !7965)
!8027 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 354, column: 6)
!8028 = !DILocation(line: 354, column: 37, scope: !8027, inlinedAt: !7965)
!8029 = !DILocation(line: 354, column: 42, scope: !8027, inlinedAt: !7965)
!8030 = !DILocation(line: 354, column: 45, scope: !8027, inlinedAt: !7965)
!8031 = !DILocation(line: 354, column: 50, scope: !8027, inlinedAt: !7965)
!8032 = !DILocation(line: 354, column: 6, scope: !7961, inlinedAt: !7965)
!8033 = !DILocation(line: 355, column: 3, scope: !8027, inlinedAt: !7965)
!8034 = !DILocation(line: 356, column: 32, scope: !8035, inlinedAt: !7965)
!8035 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 356, column: 6)
!8036 = !DILocation(line: 356, column: 37, scope: !8035, inlinedAt: !7965)
!8037 = !DILocation(line: 356, column: 43, scope: !8035, inlinedAt: !7965)
!8038 = !DILocation(line: 356, column: 46, scope: !8035, inlinedAt: !7965)
!8039 = !DILocation(line: 356, column: 51, scope: !8035, inlinedAt: !7965)
!8040 = !DILocation(line: 356, column: 6, scope: !7961, inlinedAt: !7965)
!8041 = !DILocation(line: 357, column: 3, scope: !8035, inlinedAt: !7965)
!8042 = !DILocation(line: 358, column: 6, scope: !8043, inlinedAt: !7965)
!8043 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 358, column: 6)
!8044 = !DILocation(line: 358, column: 11, scope: !8043, inlinedAt: !7965)
!8045 = !DILocation(line: 358, column: 6, scope: !7961, inlinedAt: !7965)
!8046 = !DILocation(line: 358, column: 26, scope: !8043, inlinedAt: !7965)
!8047 = !DILocation(line: 359, column: 6, scope: !8048, inlinedAt: !7965)
!8048 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 359, column: 6)
!8049 = !DILocation(line: 359, column: 11, scope: !8048, inlinedAt: !7965)
!8050 = !DILocation(line: 359, column: 6, scope: !7961, inlinedAt: !7965)
!8051 = !DILocation(line: 359, column: 26, scope: !8048, inlinedAt: !7965)
!8052 = !DILocation(line: 360, column: 6, scope: !8053, inlinedAt: !7965)
!8053 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 360, column: 6)
!8054 = !DILocation(line: 360, column: 11, scope: !8053, inlinedAt: !7965)
!8055 = !DILocation(line: 360, column: 6, scope: !7961, inlinedAt: !7965)
!8056 = !DILocation(line: 360, column: 26, scope: !8053, inlinedAt: !7965)
!8057 = !DILocation(line: 361, column: 6, scope: !8058, inlinedAt: !7965)
!8058 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 361, column: 6)
!8059 = !DILocation(line: 361, column: 11, scope: !8058, inlinedAt: !7965)
!8060 = !DILocation(line: 361, column: 6, scope: !7961, inlinedAt: !7965)
!8061 = !DILocation(line: 361, column: 26, scope: !8058, inlinedAt: !7965)
!8062 = !DILocation(line: 362, column: 6, scope: !8063, inlinedAt: !7965)
!8063 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 362, column: 6)
!8064 = !DILocation(line: 362, column: 11, scope: !8063, inlinedAt: !7965)
!8065 = !DILocation(line: 362, column: 6, scope: !7961, inlinedAt: !7965)
!8066 = !DILocation(line: 362, column: 26, scope: !8063, inlinedAt: !7965)
!8067 = !DILocation(line: 363, column: 6, scope: !8068, inlinedAt: !7965)
!8068 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 363, column: 6)
!8069 = !DILocation(line: 363, column: 11, scope: !8068, inlinedAt: !7965)
!8070 = !DILocation(line: 363, column: 6, scope: !7961, inlinedAt: !7965)
!8071 = !DILocation(line: 363, column: 26, scope: !8068, inlinedAt: !7965)
!8072 = !DILocation(line: 364, column: 6, scope: !8073, inlinedAt: !7965)
!8073 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 364, column: 6)
!8074 = !DILocation(line: 364, column: 11, scope: !8073, inlinedAt: !7965)
!8075 = !DILocation(line: 364, column: 6, scope: !7961, inlinedAt: !7965)
!8076 = !DILocation(line: 364, column: 26, scope: !8073, inlinedAt: !7965)
!8077 = !DILocation(line: 365, column: 6, scope: !8078, inlinedAt: !7965)
!8078 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 365, column: 6)
!8079 = !DILocation(line: 365, column: 11, scope: !8078, inlinedAt: !7965)
!8080 = !DILocation(line: 365, column: 6, scope: !7961, inlinedAt: !7965)
!8081 = !DILocation(line: 365, column: 26, scope: !8078, inlinedAt: !7965)
!8082 = !DILocation(line: 366, column: 6, scope: !8083, inlinedAt: !7965)
!8083 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 366, column: 6)
!8084 = !DILocation(line: 366, column: 11, scope: !8083, inlinedAt: !7965)
!8085 = !DILocation(line: 366, column: 6, scope: !7961, inlinedAt: !7965)
!8086 = !DILocation(line: 366, column: 26, scope: !8083, inlinedAt: !7965)
!8087 = !DILocation(line: 367, column: 6, scope: !8088, inlinedAt: !7965)
!8088 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 367, column: 6)
!8089 = !DILocation(line: 367, column: 11, scope: !8088, inlinedAt: !7965)
!8090 = !DILocation(line: 367, column: 6, scope: !7961, inlinedAt: !7965)
!8091 = !DILocation(line: 367, column: 26, scope: !8088, inlinedAt: !7965)
!8092 = !DILocation(line: 368, column: 6, scope: !8093, inlinedAt: !7965)
!8093 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 368, column: 6)
!8094 = !DILocation(line: 368, column: 11, scope: !8093, inlinedAt: !7965)
!8095 = !DILocation(line: 368, column: 6, scope: !7961, inlinedAt: !7965)
!8096 = !DILocation(line: 368, column: 26, scope: !8093, inlinedAt: !7965)
!8097 = !DILocation(line: 369, column: 6, scope: !8098, inlinedAt: !7965)
!8098 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 369, column: 6)
!8099 = !DILocation(line: 369, column: 11, scope: !8098, inlinedAt: !7965)
!8100 = !DILocation(line: 369, column: 6, scope: !7961, inlinedAt: !7965)
!8101 = !DILocation(line: 369, column: 26, scope: !8098, inlinedAt: !7965)
!8102 = !DILocation(line: 370, column: 6, scope: !8103, inlinedAt: !7965)
!8103 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 370, column: 6)
!8104 = !DILocation(line: 370, column: 11, scope: !8103, inlinedAt: !7965)
!8105 = !DILocation(line: 370, column: 6, scope: !7961, inlinedAt: !7965)
!8106 = !DILocation(line: 370, column: 26, scope: !8103, inlinedAt: !7965)
!8107 = !DILocation(line: 371, column: 6, scope: !8108, inlinedAt: !7965)
!8108 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 371, column: 6)
!8109 = !DILocation(line: 371, column: 11, scope: !8108, inlinedAt: !7965)
!8110 = !DILocation(line: 371, column: 6, scope: !7961, inlinedAt: !7965)
!8111 = !DILocation(line: 371, column: 26, scope: !8108, inlinedAt: !7965)
!8112 = !DILocation(line: 372, column: 6, scope: !8113, inlinedAt: !7965)
!8113 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 372, column: 6)
!8114 = !DILocation(line: 372, column: 11, scope: !8113, inlinedAt: !7965)
!8115 = !DILocation(line: 372, column: 6, scope: !7961, inlinedAt: !7965)
!8116 = !DILocation(line: 372, column: 26, scope: !8113, inlinedAt: !7965)
!8117 = !DILocation(line: 373, column: 6, scope: !8118, inlinedAt: !7965)
!8118 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 373, column: 6)
!8119 = !DILocation(line: 373, column: 11, scope: !8118, inlinedAt: !7965)
!8120 = !DILocation(line: 373, column: 6, scope: !7961, inlinedAt: !7965)
!8121 = !DILocation(line: 373, column: 26, scope: !8118, inlinedAt: !7965)
!8122 = !DILocation(line: 374, column: 6, scope: !8123, inlinedAt: !7965)
!8123 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 374, column: 6)
!8124 = !DILocation(line: 374, column: 11, scope: !8123, inlinedAt: !7965)
!8125 = !DILocation(line: 374, column: 6, scope: !7961, inlinedAt: !7965)
!8126 = !DILocation(line: 374, column: 26, scope: !8123, inlinedAt: !7965)
!8127 = !DILocation(line: 375, column: 6, scope: !8128, inlinedAt: !7965)
!8128 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 375, column: 6)
!8129 = !DILocation(line: 375, column: 11, scope: !8128, inlinedAt: !7965)
!8130 = !DILocation(line: 375, column: 6, scope: !7961, inlinedAt: !7965)
!8131 = !DILocation(line: 375, column: 27, scope: !8128, inlinedAt: !7965)
!8132 = !DILocation(line: 376, column: 6, scope: !8133, inlinedAt: !7965)
!8133 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 376, column: 6)
!8134 = !DILocation(line: 376, column: 11, scope: !8133, inlinedAt: !7965)
!8135 = !DILocation(line: 376, column: 6, scope: !7961, inlinedAt: !7965)
!8136 = !DILocation(line: 376, column: 32, scope: !8133, inlinedAt: !7965)
!8137 = !DILocation(line: 377, column: 6, scope: !8138, inlinedAt: !7965)
!8138 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 377, column: 6)
!8139 = !DILocation(line: 377, column: 11, scope: !8138, inlinedAt: !7965)
!8140 = !DILocation(line: 377, column: 6, scope: !7961, inlinedAt: !7965)
!8141 = !DILocation(line: 377, column: 32, scope: !8138, inlinedAt: !7965)
!8142 = !DILocation(line: 378, column: 6, scope: !8143, inlinedAt: !7965)
!8143 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 378, column: 6)
!8144 = !DILocation(line: 378, column: 11, scope: !8143, inlinedAt: !7965)
!8145 = !DILocation(line: 378, column: 6, scope: !7961, inlinedAt: !7965)
!8146 = !DILocation(line: 378, column: 32, scope: !8143, inlinedAt: !7965)
!8147 = !DILocation(line: 379, column: 6, scope: !8148, inlinedAt: !7965)
!8148 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 379, column: 6)
!8149 = !DILocation(line: 379, column: 11, scope: !8148, inlinedAt: !7965)
!8150 = !DILocation(line: 379, column: 6, scope: !7961, inlinedAt: !7965)
!8151 = !DILocation(line: 379, column: 33, scope: !8148, inlinedAt: !7965)
!8152 = !DILocation(line: 380, column: 6, scope: !8153, inlinedAt: !7965)
!8153 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 380, column: 6)
!8154 = !DILocation(line: 380, column: 11, scope: !8153, inlinedAt: !7965)
!8155 = !DILocation(line: 380, column: 6, scope: !7961, inlinedAt: !7965)
!8156 = !DILocation(line: 380, column: 33, scope: !8153, inlinedAt: !7965)
!8157 = !DILocation(line: 381, column: 6, scope: !8158, inlinedAt: !7965)
!8158 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 381, column: 6)
!8159 = !DILocation(line: 381, column: 11, scope: !8158, inlinedAt: !7965)
!8160 = !DILocation(line: 381, column: 6, scope: !7961, inlinedAt: !7965)
!8161 = !DILocation(line: 381, column: 33, scope: !8158, inlinedAt: !7965)
!8162 = !DILocation(line: 382, column: 2, scope: !8163, inlinedAt: !7965)
!8163 = distinct !DILexicalBlock(scope: !8164, file: !158, line: 382, column: 2)
!8164 = distinct !DILexicalBlock(scope: !7961, file: !158, line: 382, column: 2)
!8165 = !{i32 -2142692480, i32 -2142692451, i32 -2142692405, i32 -2142692347, i32 -2142692293, i32 -2142692239, i32 -2142692184, i32 -2142692153}
!8166 = !DILocation(line: 382, column: 2, scope: !8167, inlinedAt: !7965)
!8167 = distinct !DILexicalBlock(scope: !8168, file: !158, line: 382, column: 2)
!8168 = distinct !DILexicalBlock(scope: !8164, file: !158, line: 382, column: 2)
!8169 = !{i32 -2142691710, i32 -2142691703, i32 -2142691649, i32 -2142691618, i32 -2142691588}
!8170 = !DILocation(line: 382, column: 2, scope: !8168, inlinedAt: !7965)
!8171 = !DILocation(line: 386, column: 1, scope: !7961, inlinedAt: !7965)
!8172 = !DILocation(line: 547, column: 9, scope: !7944, inlinedAt: !7947)
!8173 = !DILocation(line: 549, column: 8, scope: !8174, inlinedAt: !7947)
!8174 = distinct !DILexicalBlock(scope: !7944, file: !158, line: 549, column: 7)
!8175 = !DILocation(line: 549, column: 7, scope: !7944, inlinedAt: !7947)
!8176 = !DILocation(line: 550, column: 4, scope: !8174, inlinedAt: !7947)
!8177 = !DILocation(line: 553, column: 33, scope: !7944, inlinedAt: !7947)
!8178 = !DILocation(line: 325, column: 6, scope: !8179, inlinedAt: !7959)
!8179 = distinct !DILexicalBlock(scope: !7955, file: !158, line: 325, column: 6)
!8180 = !DILocation(line: 325, column: 6, scope: !7955, inlinedAt: !7959)
!8181 = !DILocation(line: 326, column: 3, scope: !8179, inlinedAt: !7959)
!8182 = !DILocation(line: 332, column: 9, scope: !7955, inlinedAt: !7959)
!8183 = !DILocation(line: 332, column: 15, scope: !7955, inlinedAt: !7959)
!8184 = !DILocation(line: 332, column: 2, scope: !7955, inlinedAt: !7959)
!8185 = !DILocation(line: 336, column: 1, scope: !7955, inlinedAt: !7959)
!8186 = !DILocation(line: 553, column: 5, scope: !7944, inlinedAt: !7947)
!8187 = !DILocation(line: 553, column: 41, scope: !7944, inlinedAt: !7947)
!8188 = !DILocation(line: 554, column: 5, scope: !7944, inlinedAt: !7947)
!8189 = !DILocation(line: 554, column: 12, scope: !7944, inlinedAt: !7947)
!8190 = !DILocation(line: 448, column: 31, scope: !7939, inlinedAt: !7943)
!8191 = !DILocation(line: 448, column: 34, scope: !7939, inlinedAt: !7943)
!8192 = !DILocation(line: 448, column: 14, scope: !7939, inlinedAt: !7943)
!8193 = !DILocation(line: 450, column: 22, scope: !7939, inlinedAt: !7943)
!8194 = !DILocation(line: 450, column: 25, scope: !7939, inlinedAt: !7943)
!8195 = !DILocation(line: 450, column: 30, scope: !7939, inlinedAt: !7943)
!8196 = !DILocation(line: 450, column: 36, scope: !7939, inlinedAt: !7943)
!8197 = !DILocation(line: 450, column: 8, scope: !7939, inlinedAt: !7943)
!8198 = !DILocation(line: 450, column: 6, scope: !7939, inlinedAt: !7943)
!8199 = !DILocation(line: 451, column: 9, scope: !7939, inlinedAt: !7943)
!8200 = !DILocation(line: 552, column: 3, scope: !7944, inlinedAt: !7947)
!8201 = !DILocation(line: 557, column: 19, scope: !7946, inlinedAt: !7947)
!8202 = !DILocation(line: 557, column: 25, scope: !7946, inlinedAt: !7947)
!8203 = !DILocation(line: 557, column: 9, scope: !7946, inlinedAt: !7947)
!8204 = !DILocation(line: 557, column: 2, scope: !7946, inlinedAt: !7947)
!8205 = !DILocation(line: 558, column: 1, scope: !7946, inlinedAt: !7947)
!8206 = !DILocation(line: 664, column: 2, scope: !7935)
!8207 = distinct !DISubprogram(name: "linehandle_flags_to_desc_flags", scope: !3, file: !3, line: 134, type: !8208, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!8208 = !DISubroutineType(types: !8209)
!8209 = !{null, !217, !3459}
!8210 = !DILocalVariable(name: "nr", arg: 1, scope: !8211, file: !8212, line: 235, type: !166)
!8211 = distinct !DISubprogram(name: "assign_bit", scope: !8212, file: !8212, line: 235, type: !8213, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!8212 = !DIFile(filename: "./include/linux/bitops.h", directory: "/home/lizy2001/genbc/linux")
!8213 = !DISubroutineType(types: !8214)
!8214 = !{null, !166, !7007, !682}
!8215 = !DILocation(line: 235, column: 45, scope: !8211, inlinedAt: !8216)
!8216 = distinct !DILocation(line: 146, column: 2, scope: !8207)
!8217 = !DILocalVariable(name: "addr", arg: 2, scope: !8211, file: !8212, line: 235, type: !7007)
!8218 = !DILocation(line: 235, column: 73, scope: !8211, inlinedAt: !8216)
!8219 = !DILocalVariable(name: "value", arg: 3, scope: !8211, file: !8212, line: 236, type: !682)
!8220 = !DILocation(line: 236, column: 17, scope: !8211, inlinedAt: !8216)
!8221 = !DILocation(line: 235, column: 45, scope: !8211, inlinedAt: !8222)
!8222 = distinct !DILocation(line: 144, column: 2, scope: !8207)
!8223 = !DILocation(line: 235, column: 73, scope: !8211, inlinedAt: !8222)
!8224 = !DILocation(line: 236, column: 17, scope: !8211, inlinedAt: !8222)
!8225 = !DILocation(line: 235, column: 45, scope: !8211, inlinedAt: !8226)
!8226 = distinct !DILocation(line: 142, column: 2, scope: !8207)
!8227 = !DILocation(line: 235, column: 73, scope: !8211, inlinedAt: !8226)
!8228 = !DILocation(line: 236, column: 17, scope: !8211, inlinedAt: !8226)
!8229 = !DILocation(line: 235, column: 45, scope: !8211, inlinedAt: !8230)
!8230 = distinct !DILocation(line: 140, column: 2, scope: !8207)
!8231 = !DILocation(line: 235, column: 73, scope: !8211, inlinedAt: !8230)
!8232 = !DILocation(line: 236, column: 17, scope: !8211, inlinedAt: !8230)
!8233 = !DILocation(line: 235, column: 45, scope: !8211, inlinedAt: !8234)
!8234 = distinct !DILocation(line: 138, column: 2, scope: !8207)
!8235 = !DILocation(line: 235, column: 73, scope: !8211, inlinedAt: !8234)
!8236 = !DILocation(line: 236, column: 17, scope: !8211, inlinedAt: !8234)
!8237 = !DILocation(line: 235, column: 45, scope: !8211, inlinedAt: !8238)
!8238 = distinct !DILocation(line: 136, column: 2, scope: !8207)
!8239 = !DILocation(line: 235, column: 73, scope: !8211, inlinedAt: !8238)
!8240 = !DILocation(line: 236, column: 17, scope: !8211, inlinedAt: !8238)
!8241 = !DILocalVariable(name: "lflags", arg: 1, scope: !8207, file: !3, line: 134, type: !217)
!8242 = !DILocation(line: 134, column: 48, scope: !8207)
!8243 = !DILocalVariable(name: "flagsp", arg: 2, scope: !8207, file: !3, line: 134, type: !3459)
!8244 = !DILocation(line: 134, column: 71, scope: !8207)
!8245 = !DILocation(line: 136, column: 30, scope: !8207)
!8246 = !DILocation(line: 137, column: 6, scope: !8207)
!8247 = !DILocation(line: 137, column: 13, scope: !8207)
!8248 = !DILocation(line: 238, column: 6, scope: !8249, inlinedAt: !8238)
!8249 = distinct !DILexicalBlock(scope: !8211, file: !8212, line: 238, column: 6)
!8250 = !DILocation(line: 238, column: 6, scope: !8211, inlinedAt: !8238)
!8251 = !DILocation(line: 239, column: 11, scope: !8249, inlinedAt: !8238)
!8252 = !DILocation(line: 239, column: 15, scope: !8249, inlinedAt: !8238)
!8253 = !DILocation(line: 239, column: 3, scope: !8249, inlinedAt: !8238)
!8254 = !DILocation(line: 241, column: 13, scope: !8249, inlinedAt: !8238)
!8255 = !DILocation(line: 241, column: 17, scope: !8249, inlinedAt: !8238)
!8256 = !DILocation(line: 241, column: 3, scope: !8249, inlinedAt: !8238)
!8257 = !DILocation(line: 138, column: 30, scope: !8207)
!8258 = !DILocation(line: 139, column: 6, scope: !8207)
!8259 = !DILocation(line: 139, column: 13, scope: !8207)
!8260 = !DILocation(line: 238, column: 6, scope: !8249, inlinedAt: !8234)
!8261 = !DILocation(line: 238, column: 6, scope: !8211, inlinedAt: !8234)
!8262 = !DILocation(line: 239, column: 11, scope: !8249, inlinedAt: !8234)
!8263 = !DILocation(line: 239, column: 15, scope: !8249, inlinedAt: !8234)
!8264 = !DILocation(line: 239, column: 3, scope: !8249, inlinedAt: !8234)
!8265 = !DILocation(line: 241, column: 13, scope: !8249, inlinedAt: !8234)
!8266 = !DILocation(line: 241, column: 17, scope: !8249, inlinedAt: !8234)
!8267 = !DILocation(line: 241, column: 3, scope: !8249, inlinedAt: !8234)
!8268 = !DILocation(line: 140, column: 31, scope: !8207)
!8269 = !DILocation(line: 141, column: 6, scope: !8207)
!8270 = !DILocation(line: 141, column: 13, scope: !8207)
!8271 = !DILocation(line: 238, column: 6, scope: !8249, inlinedAt: !8230)
!8272 = !DILocation(line: 238, column: 6, scope: !8211, inlinedAt: !8230)
!8273 = !DILocation(line: 239, column: 11, scope: !8249, inlinedAt: !8230)
!8274 = !DILocation(line: 239, column: 15, scope: !8249, inlinedAt: !8230)
!8275 = !DILocation(line: 239, column: 3, scope: !8249, inlinedAt: !8230)
!8276 = !DILocation(line: 241, column: 13, scope: !8249, inlinedAt: !8230)
!8277 = !DILocation(line: 241, column: 17, scope: !8249, inlinedAt: !8230)
!8278 = !DILocation(line: 241, column: 3, scope: !8249, inlinedAt: !8230)
!8279 = !DILocation(line: 142, column: 27, scope: !8207)
!8280 = !DILocation(line: 143, column: 6, scope: !8207)
!8281 = !DILocation(line: 143, column: 13, scope: !8207)
!8282 = !DILocation(line: 238, column: 6, scope: !8249, inlinedAt: !8226)
!8283 = !DILocation(line: 238, column: 6, scope: !8211, inlinedAt: !8226)
!8284 = !DILocation(line: 239, column: 11, scope: !8249, inlinedAt: !8226)
!8285 = !DILocation(line: 239, column: 15, scope: !8249, inlinedAt: !8226)
!8286 = !DILocation(line: 239, column: 3, scope: !8249, inlinedAt: !8226)
!8287 = !DILocation(line: 241, column: 13, scope: !8249, inlinedAt: !8226)
!8288 = !DILocation(line: 241, column: 17, scope: !8249, inlinedAt: !8226)
!8289 = !DILocation(line: 241, column: 3, scope: !8249, inlinedAt: !8226)
!8290 = !DILocation(line: 144, column: 29, scope: !8207)
!8291 = !DILocation(line: 145, column: 6, scope: !8207)
!8292 = !DILocation(line: 145, column: 13, scope: !8207)
!8293 = !DILocation(line: 238, column: 6, scope: !8249, inlinedAt: !8222)
!8294 = !DILocation(line: 238, column: 6, scope: !8211, inlinedAt: !8222)
!8295 = !DILocation(line: 239, column: 11, scope: !8249, inlinedAt: !8222)
!8296 = !DILocation(line: 239, column: 15, scope: !8249, inlinedAt: !8222)
!8297 = !DILocation(line: 239, column: 3, scope: !8249, inlinedAt: !8222)
!8298 = !DILocation(line: 241, column: 13, scope: !8249, inlinedAt: !8222)
!8299 = !DILocation(line: 241, column: 17, scope: !8249, inlinedAt: !8222)
!8300 = !DILocation(line: 241, column: 3, scope: !8249, inlinedAt: !8222)
!8301 = !DILocation(line: 146, column: 32, scope: !8207)
!8302 = !DILocation(line: 147, column: 6, scope: !8207)
!8303 = !DILocation(line: 147, column: 13, scope: !8207)
!8304 = !DILocation(line: 238, column: 6, scope: !8249, inlinedAt: !8216)
!8305 = !DILocation(line: 238, column: 6, scope: !8211, inlinedAt: !8216)
!8306 = !DILocation(line: 239, column: 11, scope: !8249, inlinedAt: !8216)
!8307 = !DILocation(line: 239, column: 15, scope: !8249, inlinedAt: !8216)
!8308 = !DILocation(line: 239, column: 3, scope: !8249, inlinedAt: !8216)
!8309 = !DILocation(line: 241, column: 13, scope: !8249, inlinedAt: !8216)
!8310 = !DILocation(line: 241, column: 17, scope: !8249, inlinedAt: !8216)
!8311 = !DILocation(line: 241, column: 3, scope: !8249, inlinedAt: !8216)
!8312 = !DILocation(line: 148, column: 1, scope: !8207)
!8313 = distinct !DISubprogram(name: "linehandle_free", scope: !3, file: !3, line: 257, type: !8314, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!8314 = !DISubroutineType(types: !8315)
!8315 = !{null, !6259}
!8316 = !DILocalVariable(name: "lh", arg: 1, scope: !8313, file: !3, line: 257, type: !6259)
!8317 = !DILocation(line: 257, column: 54, scope: !8313)
!8318 = !DILocalVariable(name: "i", scope: !8313, file: !3, line: 259, type: !236)
!8319 = !DILocation(line: 259, column: 6, scope: !8313)
!8320 = !DILocation(line: 261, column: 9, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8313, file: !3, line: 261, column: 2)
!8322 = !DILocation(line: 261, column: 7, scope: !8321)
!8323 = !DILocation(line: 261, column: 14, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8321, file: !3, line: 261, column: 2)
!8325 = !DILocation(line: 261, column: 18, scope: !8324)
!8326 = !DILocation(line: 261, column: 22, scope: !8324)
!8327 = !DILocation(line: 261, column: 16, scope: !8324)
!8328 = !DILocation(line: 261, column: 2, scope: !8321)
!8329 = !DILocation(line: 262, column: 7, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8324, file: !3, line: 262, column: 7)
!8331 = !DILocation(line: 262, column: 11, scope: !8330)
!8332 = !DILocation(line: 262, column: 17, scope: !8330)
!8333 = !DILocation(line: 262, column: 7, scope: !8324)
!8334 = !DILocation(line: 263, column: 15, scope: !8330)
!8335 = !DILocation(line: 263, column: 19, scope: !8330)
!8336 = !DILocation(line: 263, column: 25, scope: !8330)
!8337 = !DILocation(line: 263, column: 4, scope: !8330)
!8338 = !DILocation(line: 262, column: 18, scope: !8330)
!8339 = !DILocation(line: 261, column: 34, scope: !8324)
!8340 = !DILocation(line: 261, column: 2, scope: !8324)
!8341 = distinct !{!8341, !8328, !8342}
!8342 = !DILocation(line: 263, column: 27, scope: !8321)
!8343 = !DILocation(line: 264, column: 8, scope: !8313)
!8344 = !DILocation(line: 264, column: 12, scope: !8313)
!8345 = !DILocation(line: 264, column: 2, scope: !8313)
!8346 = !DILocation(line: 265, column: 14, scope: !8313)
!8347 = !DILocation(line: 265, column: 18, scope: !8313)
!8348 = !DILocation(line: 265, column: 24, scope: !8313)
!8349 = !DILocation(line: 265, column: 2, scope: !8313)
!8350 = !DILocation(line: 266, column: 8, scope: !8313)
!8351 = !DILocation(line: 266, column: 2, scope: !8313)
!8352 = !DILocation(line: 267, column: 1, scope: !8313)
!8353 = distinct !DISubprogram(name: "get_order", scope: !8354, file: !8354, line: 29, type: !8355, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!8354 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!8355 = !DISubroutineType(types: !8356)
!8356 = !{!236, !215}
!8357 = !DILocalVariable(name: "x", arg: 1, scope: !8358, file: !7011, line: 366, type: !273)
!8358 = distinct !DISubprogram(name: "fls64", scope: !7011, file: !7011, line: 366, type: !8359, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!8359 = !DISubroutineType(types: !8360)
!8360 = !{!236, !273}
!8361 = !DILocation(line: 366, column: 40, scope: !8358, inlinedAt: !8362)
!8362 = distinct !DILocation(line: 46, column: 9, scope: !8353)
!8363 = !DILocalVariable(name: "bitpos", scope: !8358, file: !7011, line: 368, type: !236)
!8364 = !DILocation(line: 368, column: 6, scope: !8358, inlinedAt: !8362)
!8365 = !DILocalVariable(name: "size", arg: 1, scope: !8353, file: !8354, line: 29, type: !215)
!8366 = !DILocation(line: 29, column: 63, scope: !8353)
!8367 = !DILocation(line: 31, column: 27, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8353, file: !8354, line: 31, column: 6)
!8369 = !DILocation(line: 31, column: 6, scope: !8368)
!8370 = !DILocation(line: 31, column: 6, scope: !8353)
!8371 = !DILocation(line: 32, column: 8, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8373, file: !8354, line: 32, column: 7)
!8373 = distinct !DILexicalBlock(scope: !8368, file: !8354, line: 31, column: 34)
!8374 = !DILocation(line: 32, column: 7, scope: !8373)
!8375 = !DILocation(line: 33, column: 4, scope: !8372)
!8376 = !DILocation(line: 35, column: 7, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8373, file: !8354, line: 35, column: 7)
!8378 = !DILocation(line: 35, column: 12, scope: !8377)
!8379 = !DILocation(line: 35, column: 7, scope: !8373)
!8380 = !DILocation(line: 36, column: 4, scope: !8377)
!8381 = !DILocation(line: 38, column: 10, scope: !8373)
!8382 = !DILocation(line: 38, column: 28, scope: !8373)
!8383 = !DILocation(line: 38, column: 41, scope: !8373)
!8384 = !DILocation(line: 38, column: 3, scope: !8373)
!8385 = !DILocation(line: 41, column: 6, scope: !8353)
!8386 = !DILocation(line: 42, column: 7, scope: !8353)
!8387 = !DILocation(line: 46, column: 15, scope: !8353)
!8388 = !DILocation(line: 374, column: 2, scope: !8358, inlinedAt: !8362)
!8389 = !DILocation(line: 376, column: 14, scope: !8358, inlinedAt: !8362)
!8390 = !{i32 613818}
!8391 = !DILocation(line: 377, column: 9, scope: !8358, inlinedAt: !8362)
!8392 = !DILocation(line: 377, column: 16, scope: !8358, inlinedAt: !8362)
!8393 = !DILocation(line: 46, column: 2, scope: !8353)
!8394 = !DILocation(line: 48, column: 1, scope: !8353)
!8395 = distinct !DISubprogram(name: "__ilog2_u64", scope: !8396, file: !8396, line: 30, type: !8397, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!8396 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!8397 = !DISubroutineType(types: !8398)
!8398 = !{!236, !272}
!8399 = !DILocation(line: 366, column: 40, scope: !8358, inlinedAt: !8400)
!8400 = distinct !DILocation(line: 32, column: 9, scope: !8395)
!8401 = !DILocation(line: 368, column: 6, scope: !8358, inlinedAt: !8400)
!8402 = !DILocalVariable(name: "n", arg: 1, scope: !8395, file: !8396, line: 30, type: !272)
!8403 = !DILocation(line: 30, column: 21, scope: !8395)
!8404 = !DILocation(line: 32, column: 15, scope: !8395)
!8405 = !DILocation(line: 374, column: 2, scope: !8358, inlinedAt: !8400)
!8406 = !DILocation(line: 376, column: 14, scope: !8358, inlinedAt: !8400)
!8407 = !DILocation(line: 377, column: 9, scope: !8358, inlinedAt: !8400)
!8408 = !DILocation(line: 377, column: 16, scope: !8358, inlinedAt: !8400)
!8409 = !DILocation(line: 32, column: 18, scope: !8395)
!8410 = !DILocation(line: 32, column: 2, scope: !8395)
!8411 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !8412, file: !8412, line: 137, type: !8413, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!8412 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!8413 = !DISubroutineType(types: !8414)
!8414 = !{!224, !2459, !2158, !815, !487}
!8415 = !DILocalVariable(name: "s", arg: 1, scope: !8411, file: !8412, line: 137, type: !2459)
!8416 = !DILocation(line: 137, column: 54, scope: !8411)
!8417 = !DILocalVariable(name: "object", arg: 2, scope: !8411, file: !8412, line: 137, type: !2158)
!8418 = !DILocation(line: 137, column: 69, scope: !8411)
!8419 = !DILocalVariable(name: "size", arg: 3, scope: !8411, file: !8412, line: 138, type: !815)
!8420 = !DILocation(line: 138, column: 12, scope: !8411)
!8421 = !DILocalVariable(name: "flags", arg: 4, scope: !8411, file: !8412, line: 138, type: !487)
!8422 = !DILocation(line: 138, column: 24, scope: !8411)
!8423 = !DILocation(line: 140, column: 17, scope: !8411)
!8424 = !DILocation(line: 140, column: 2, scope: !8411)
!8425 = distinct !DISubprogram(name: "set_bit", scope: !7004, file: !7004, line: 26, type: !7038, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!8426 = !DILocalVariable(name: "nr", arg: 1, scope: !8427, file: !7011, line: 52, type: !166)
!8427 = distinct !DISubprogram(name: "arch_set_bit", scope: !7011, file: !7011, line: 52, type: !7038, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!8428 = !DILocation(line: 52, column: 19, scope: !8427, inlinedAt: !8429)
!8429 = distinct !DILocation(line: 29, column: 2, scope: !8425)
!8430 = !DILocalVariable(name: "addr", arg: 2, scope: !8427, file: !7011, line: 52, type: !7007)
!8431 = !DILocation(line: 52, column: 47, scope: !8427, inlinedAt: !8429)
!8432 = !DILocation(line: 84, column: 74, scope: !7047, inlinedAt: !8433)
!8433 = distinct !DILocation(line: 28, column: 2, scope: !8425)
!8434 = !DILocation(line: 84, column: 84, scope: !7047, inlinedAt: !8433)
!8435 = !DILocalVariable(name: "nr", arg: 1, scope: !8425, file: !7004, line: 26, type: !166)
!8436 = !DILocation(line: 26, column: 33, scope: !8425)
!8437 = !DILocalVariable(name: "addr", arg: 2, scope: !8425, file: !7004, line: 26, type: !7007)
!8438 = !DILocation(line: 26, column: 61, scope: !8425)
!8439 = !DILocation(line: 28, column: 26, scope: !8425)
!8440 = !DILocation(line: 28, column: 33, scope: !8425)
!8441 = !DILocation(line: 28, column: 31, scope: !8425)
!8442 = !DILocation(line: 86, column: 20, scope: !7047, inlinedAt: !8433)
!8443 = !DILocation(line: 86, column: 23, scope: !7047, inlinedAt: !8433)
!8444 = !DILocation(line: 86, column: 2, scope: !7047, inlinedAt: !8433)
!8445 = !DILocation(line: 87, column: 2, scope: !7047, inlinedAt: !8433)
!8446 = !DILocation(line: 29, column: 15, scope: !8425)
!8447 = !DILocation(line: 29, column: 19, scope: !8425)
!8448 = !DILocation(line: 54, column: 27, scope: !8449, inlinedAt: !8429)
!8449 = distinct !DILexicalBlock(scope: !8427, file: !7011, line: 54, column: 6)
!8450 = !DILocation(line: 54, column: 6, scope: !8449, inlinedAt: !8429)
!8451 = !DILocation(line: 54, column: 6, scope: !8427, inlinedAt: !8429)
!8452 = !DILocation(line: 56, column: 6, scope: !8453, inlinedAt: !8429)
!8453 = distinct !DILexicalBlock(scope: !8449, file: !7011, line: 54, column: 32)
!8454 = !DILocation(line: 57, column: 12, scope: !8453, inlinedAt: !8429)
!8455 = !DILocation(line: 55, column: 3, scope: !8453, inlinedAt: !8429)
!8456 = !{i32 -2146869028}
!8457 = !DILocation(line: 59, column: 2, scope: !8453, inlinedAt: !8429)
!8458 = !DILocation(line: 61, column: 8, scope: !8459, inlinedAt: !8429)
!8459 = distinct !DILexicalBlock(scope: !8449, file: !7011, line: 59, column: 9)
!8460 = !DILocation(line: 61, column: 32, scope: !8459, inlinedAt: !8429)
!8461 = !DILocation(line: 60, column: 3, scope: !8459, inlinedAt: !8429)
!8462 = !{i32 -2146868896}
!8463 = !DILocation(line: 30, column: 1, scope: !8425)
!8464 = distinct !DISubprogram(name: "kasan_check_write", scope: !5770, file: !5770, line: 38, type: !5771, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!8465 = !DILocalVariable(name: "p", arg: 1, scope: !8464, file: !5770, line: 38, type: !4683)
!8466 = !DILocation(line: 38, column: 59, scope: !8464)
!8467 = !DILocalVariable(name: "size", arg: 2, scope: !8464, file: !5770, line: 38, type: !7)
!8468 = !DILocation(line: 38, column: 75, scope: !8464)
!8469 = !DILocation(line: 40, column: 2, scope: !8464)
!8470 = distinct !DISubprogram(name: "linehandle_ioctl", scope: !3, file: !3, line: 193, type: !1017, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!8471 = !DILocalVariable(name: "nr", arg: 1, scope: !8472, file: !8212, line: 244, type: !166)
!8472 = distinct !DISubprogram(name: "__assign_bit", scope: !8212, file: !8212, line: 244, type: !8213, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!8473 = !DILocation(line: 244, column: 47, scope: !8472, inlinedAt: !8474)
!8474 = distinct !DILocation(line: 234, column: 4, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8476, file: !3, line: 233, column: 3)
!8476 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 233, column: 3)
!8477 = distinct !DILexicalBlock(scope: !8478, file: !3, line: 221, column: 54)
!8478 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 221, column: 13)
!8479 = distinct !DILexicalBlock(scope: !8470, file: !3, line: 202, column: 6)
!8480 = !DILocalVariable(name: "addr", arg: 2, scope: !8472, file: !8212, line: 244, type: !7007)
!8481 = !DILocation(line: 244, column: 75, scope: !8472, inlinedAt: !8474)
!8482 = !DILocalVariable(name: "value", arg: 3, scope: !8472, file: !8212, line: 245, type: !682)
!8483 = !DILocation(line: 245, column: 12, scope: !8472, inlinedAt: !8474)
!8484 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !8485)
!8485 = distinct !DILocation(line: 191, column: 6, scope: !5039, inlinedAt: !8486)
!8486 = distinct !DILocation(line: 229, column: 7, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 229, column: 7)
!8488 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !8485)
!8489 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !8485)
!8490 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !8485)
!8491 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !8485)
!8492 = !DILocation(line: 189, column: 22, scope: !5040, inlinedAt: !8486)
!8493 = !DILocation(line: 189, column: 45, scope: !5040, inlinedAt: !8486)
!8494 = !DILocation(line: 189, column: 65, scope: !5040, inlinedAt: !8486)
!8495 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !8496)
!8496 = distinct !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !8497)
!8497 = distinct !DILocation(line: 217, column: 7, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8499, file: !3, line: 217, column: 7)
!8499 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 202, column: 47)
!8500 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !8496)
!8501 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !8496)
!8502 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !8496)
!8503 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !8496)
!8504 = !DILocation(line: 197, column: 27, scope: !4618, inlinedAt: !8497)
!8505 = !DILocation(line: 197, column: 43, scope: !4618, inlinedAt: !8497)
!8506 = !DILocation(line: 197, column: 63, scope: !4618, inlinedAt: !8497)
!8507 = !DILocalVariable(name: "file", arg: 1, scope: !8470, file: !3, line: 193, type: !894)
!8508 = !DILocation(line: 193, column: 43, scope: !8470)
!8509 = !DILocalVariable(name: "cmd", arg: 2, scope: !8470, file: !3, line: 193, type: !7)
!8510 = !DILocation(line: 193, column: 62, scope: !8470)
!8511 = !DILocalVariable(name: "arg", arg: 3, scope: !8470, file: !3, line: 194, type: !215)
!8512 = !DILocation(line: 194, column: 23, scope: !8470)
!8513 = !DILocalVariable(name: "lh", scope: !8470, file: !3, line: 196, type: !6259)
!8514 = !DILocation(line: 196, column: 27, scope: !8470)
!8515 = !DILocation(line: 196, column: 32, scope: !8470)
!8516 = !DILocation(line: 196, column: 38, scope: !8470)
!8517 = !DILocalVariable(name: "ip", scope: !8470, file: !3, line: 197, type: !224)
!8518 = !DILocation(line: 197, column: 15, scope: !8470)
!8519 = !DILocation(line: 197, column: 35, scope: !8470)
!8520 = !DILocation(line: 197, column: 20, scope: !8470)
!8521 = !DILocalVariable(name: "ghd", scope: !8470, file: !3, line: 198, type: !8522)
!8522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpiohandle_data", file: !134, line: 440, size: 512, elements: !8523)
!8523 = !{!8524}
!8524 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !8522, file: !134, line: 441, baseType: !6253, size: 512)
!8525 = !DILocation(line: 198, column: 25, scope: !8470)
!8526 = !DILocalVariable(name: "vals", scope: !8470, file: !3, line: 199, type: !414)
!8527 = !DILocation(line: 199, column: 2, scope: !8470)
!8528 = !DILocalVariable(name: "i", scope: !8470, file: !3, line: 200, type: !236)
!8529 = !DILocation(line: 200, column: 6, scope: !8470)
!8530 = !DILocation(line: 202, column: 6, scope: !8479)
!8531 = !DILocation(line: 202, column: 10, scope: !8479)
!8532 = !DILocation(line: 202, column: 6, scope: !8470)
!8533 = !DILocalVariable(name: "ret", scope: !8499, file: !3, line: 204, type: !236)
!8534 = !DILocation(line: 204, column: 7, scope: !8499)
!8535 = !DILocation(line: 206, column: 8, scope: !8499)
!8536 = !DILocation(line: 206, column: 12, scope: !8499)
!8537 = !DILocation(line: 207, column: 8, scope: !8499)
!8538 = !DILocation(line: 207, column: 12, scope: !8499)
!8539 = !DILocation(line: 209, column: 8, scope: !8499)
!8540 = !DILocation(line: 204, column: 13, scope: !8499)
!8541 = !DILocation(line: 210, column: 7, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8499, file: !3, line: 210, column: 7)
!8543 = !DILocation(line: 210, column: 7, scope: !8499)
!8544 = !DILocation(line: 211, column: 11, scope: !8542)
!8545 = !DILocation(line: 211, column: 4, scope: !8542)
!8546 = !DILocation(line: 213, column: 3, scope: !8499)
!8547 = !DILocation(line: 214, column: 10, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8499, file: !3, line: 214, column: 3)
!8549 = !DILocation(line: 214, column: 8, scope: !8548)
!8550 = !DILocation(line: 214, column: 15, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8548, file: !3, line: 214, column: 3)
!8552 = !DILocation(line: 214, column: 19, scope: !8551)
!8553 = !DILocation(line: 214, column: 23, scope: !8551)
!8554 = !DILocation(line: 214, column: 17, scope: !8551)
!8555 = !DILocation(line: 214, column: 3, scope: !8548)
!8556 = !DILocation(line: 215, column: 29, scope: !8551)
!8557 = !DILocation(line: 215, column: 32, scope: !8551)
!8558 = !DILocation(line: 215, column: 20, scope: !8551)
!8559 = !DILocation(line: 215, column: 8, scope: !8551)
!8560 = !DILocation(line: 215, column: 15, scope: !8551)
!8561 = !DILocation(line: 215, column: 4, scope: !8551)
!8562 = !DILocation(line: 215, column: 18, scope: !8551)
!8563 = !DILocation(line: 214, column: 35, scope: !8551)
!8564 = !DILocation(line: 214, column: 3, scope: !8551)
!8565 = distinct !{!8565, !8555, !8566}
!8566 = !DILocation(line: 215, column: 36, scope: !8548)
!8567 = !DILocation(line: 217, column: 20, scope: !8498)
!8568 = !DILocation(line: 217, column: 24, scope: !8498)
!8569 = !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !8497)
!8570 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !8496)
!8571 = !DILocation(line: 0, scope: !4881, inlinedAt: !8496)
!8572 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !8496)
!8573 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !8496)
!8574 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !8496)
!8575 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !8496)
!8576 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !8496)
!8577 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !8496)
!8578 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !8496)
!8579 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !8496)
!8580 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !8496)
!8581 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !8496)
!8582 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !8496)
!8583 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !8496)
!8584 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !8496)
!8585 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !8496)
!8586 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !8496)
!8587 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !8496)
!8588 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !8496)
!8589 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !8496)
!8590 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !8496)
!8591 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !8496)
!8592 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !8496)
!8593 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !8496)
!8594 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !8496)
!8595 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !8496)
!8596 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !8496)
!8597 = !DILocation(line: 199, column: 6, scope: !4618, inlinedAt: !8497)
!8598 = !DILocation(line: 200, column: 21, scope: !4616, inlinedAt: !8497)
!8599 = !DILocation(line: 200, column: 25, scope: !4616, inlinedAt: !8497)
!8600 = !DILocation(line: 200, column: 31, scope: !4616, inlinedAt: !8497)
!8601 = !DILocation(line: 200, column: 7, scope: !4616, inlinedAt: !8497)
!8602 = !DILocation(line: 200, column: 5, scope: !4616, inlinedAt: !8497)
!8603 = !DILocation(line: 200, column: 3, scope: !4616, inlinedAt: !8497)
!8604 = !DILocation(line: 201, column: 9, scope: !4618, inlinedAt: !8497)
!8605 = !DILocation(line: 217, column: 7, scope: !8498)
!8606 = !DILocation(line: 217, column: 7, scope: !8499)
!8607 = !DILocation(line: 218, column: 4, scope: !8498)
!8608 = !DILocation(line: 220, column: 3, scope: !8499)
!8609 = !DILocation(line: 221, column: 13, scope: !8478)
!8610 = !DILocation(line: 221, column: 17, scope: !8478)
!8611 = !DILocation(line: 221, column: 13, scope: !8479)
!8612 = !DILocation(line: 226, column: 31, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 226, column: 7)
!8614 = !DILocation(line: 226, column: 35, scope: !8613)
!8615 = !DILocation(line: 226, column: 45, scope: !8613)
!8616 = !DILocation(line: 226, column: 8, scope: !8613)
!8617 = !DILocation(line: 226, column: 7, scope: !8477)
!8618 = !DILocation(line: 227, column: 4, scope: !8613)
!8619 = !DILocation(line: 229, column: 22, scope: !8487)
!8620 = !DILocation(line: 229, column: 28, scope: !8487)
!8621 = !DILocation(line: 191, column: 6, scope: !5039, inlinedAt: !8486)
!8622 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !8485)
!8623 = !DILocation(line: 0, scope: !4881, inlinedAt: !8485)
!8624 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !8485)
!8625 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !8485)
!8626 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !8485)
!8627 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !8485)
!8628 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !8485)
!8629 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !8485)
!8630 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !8485)
!8631 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !8485)
!8632 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !8485)
!8633 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !8485)
!8634 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !8485)
!8635 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !8485)
!8636 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !8485)
!8637 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !8485)
!8638 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !8485)
!8639 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !8485)
!8640 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !8485)
!8641 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !8485)
!8642 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !8485)
!8643 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !8485)
!8644 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !8485)
!8645 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !8485)
!8646 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !8485)
!8647 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !8485)
!8648 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !8485)
!8649 = !DILocation(line: 191, column: 6, scope: !5040, inlinedAt: !8486)
!8650 = !DILocation(line: 192, column: 23, scope: !5039, inlinedAt: !8486)
!8651 = !DILocation(line: 192, column: 27, scope: !5039, inlinedAt: !8486)
!8652 = !DILocation(line: 192, column: 33, scope: !5039, inlinedAt: !8486)
!8653 = !DILocation(line: 192, column: 7, scope: !5039, inlinedAt: !8486)
!8654 = !DILocation(line: 192, column: 5, scope: !5039, inlinedAt: !8486)
!8655 = !DILocation(line: 192, column: 3, scope: !5039, inlinedAt: !8486)
!8656 = !DILocation(line: 193, column: 9, scope: !5040, inlinedAt: !8486)
!8657 = !DILocation(line: 229, column: 7, scope: !8487)
!8658 = !DILocation(line: 229, column: 7, scope: !8477)
!8659 = !DILocation(line: 230, column: 4, scope: !8487)
!8660 = !DILocation(line: 233, column: 10, scope: !8476)
!8661 = !DILocation(line: 233, column: 8, scope: !8476)
!8662 = !DILocation(line: 233, column: 15, scope: !8475)
!8663 = !DILocation(line: 233, column: 19, scope: !8475)
!8664 = !DILocation(line: 233, column: 23, scope: !8475)
!8665 = !DILocation(line: 233, column: 17, scope: !8475)
!8666 = !DILocation(line: 233, column: 3, scope: !8476)
!8667 = !DILocation(line: 234, column: 17, scope: !8475)
!8668 = !DILocation(line: 234, column: 20, scope: !8475)
!8669 = !DILocation(line: 234, column: 30, scope: !8475)
!8670 = !DILocation(line: 234, column: 37, scope: !8475)
!8671 = !DILocation(line: 234, column: 26, scope: !8475)
!8672 = !DILocation(line: 247, column: 6, scope: !8673, inlinedAt: !8474)
!8673 = distinct !DILexicalBlock(scope: !8472, file: !8212, line: 247, column: 6)
!8674 = !DILocation(line: 247, column: 6, scope: !8472, inlinedAt: !8474)
!8675 = !DILocation(line: 248, column: 13, scope: !8673, inlinedAt: !8474)
!8676 = !DILocation(line: 248, column: 17, scope: !8673, inlinedAt: !8474)
!8677 = !DILocation(line: 248, column: 3, scope: !8673, inlinedAt: !8474)
!8678 = !DILocation(line: 250, column: 15, scope: !8673, inlinedAt: !8474)
!8679 = !DILocation(line: 250, column: 19, scope: !8673, inlinedAt: !8474)
!8680 = !DILocation(line: 250, column: 3, scope: !8673, inlinedAt: !8474)
!8681 = !DILocation(line: 234, column: 4, scope: !8475)
!8682 = !DILocation(line: 233, column: 35, scope: !8475)
!8683 = !DILocation(line: 233, column: 3, scope: !8475)
!8684 = distinct !{!8684, !8666, !8685}
!8685 = !DILocation(line: 234, column: 39, scope: !8476)
!8686 = !DILocation(line: 239, column: 12, scope: !8477)
!8687 = !DILocation(line: 239, column: 16, scope: !8477)
!8688 = !DILocation(line: 240, column: 12, scope: !8477)
!8689 = !DILocation(line: 240, column: 16, scope: !8477)
!8690 = !DILocation(line: 242, column: 12, scope: !8477)
!8691 = !DILocation(line: 237, column: 10, scope: !8477)
!8692 = !DILocation(line: 237, column: 3, scope: !8477)
!8693 = !DILocation(line: 243, column: 13, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8478, file: !3, line: 243, column: 13)
!8695 = !DILocation(line: 243, column: 17, scope: !8694)
!8696 = !DILocation(line: 243, column: 13, scope: !8478)
!8697 = !DILocation(line: 244, column: 32, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8694, file: !3, line: 243, column: 49)
!8699 = !DILocation(line: 244, column: 36, scope: !8698)
!8700 = !DILocation(line: 244, column: 10, scope: !8698)
!8701 = !DILocation(line: 244, column: 3, scope: !8698)
!8702 = !DILocation(line: 246, column: 2, scope: !8470)
!8703 = !DILocation(line: 247, column: 1, scope: !8470)
!8704 = distinct !DISubprogram(name: "linehandle_release", scope: !3, file: !3, line: 269, type: !1027, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!8705 = !DILocalVariable(name: "inode", arg: 1, scope: !8704, file: !3, line: 269, type: !527)
!8706 = !DILocation(line: 269, column: 45, scope: !8704)
!8707 = !DILocalVariable(name: "file", arg: 2, scope: !8704, file: !3, line: 269, type: !894)
!8708 = !DILocation(line: 269, column: 65, scope: !8704)
!8709 = !DILocation(line: 271, column: 18, scope: !8704)
!8710 = !DILocation(line: 271, column: 24, scope: !8704)
!8711 = !DILocation(line: 271, column: 2, scope: !8704)
!8712 = !DILocation(line: 272, column: 2, scope: !8704)
!8713 = distinct !DISubprogram(name: "linehandle_set_config", scope: !3, file: !3, line: 150, type: !8714, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!8714 = !DISubroutineType(types: !8715)
!8715 = !{!166, !6259, !224}
!8716 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !8717)
!8717 = distinct !DILocation(line: 191, column: 6, scope: !5039, inlinedAt: !8718)
!8718 = distinct !DILocation(line: 158, column: 6, scope: !8719)
!8719 = distinct !DILexicalBlock(scope: !8713, file: !3, line: 158, column: 6)
!8720 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !8717)
!8721 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !8717)
!8722 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !8717)
!8723 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !8717)
!8724 = !DILocation(line: 189, column: 22, scope: !5040, inlinedAt: !8718)
!8725 = !DILocation(line: 189, column: 45, scope: !5040, inlinedAt: !8718)
!8726 = !DILocation(line: 189, column: 65, scope: !5040, inlinedAt: !8718)
!8727 = !DILocalVariable(name: "lh", arg: 1, scope: !8713, file: !3, line: 150, type: !6259)
!8728 = !DILocation(line: 150, column: 60, scope: !8713)
!8729 = !DILocalVariable(name: "ip", arg: 2, scope: !8713, file: !3, line: 151, type: !224)
!8730 = !DILocation(line: 151, column: 20, scope: !8713)
!8731 = !DILocalVariable(name: "gcnf", scope: !8713, file: !3, line: 153, type: !8732)
!8732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpiohandle_config", file: !134, line: 425, size: 672, elements: !8733)
!8733 = !{!8734, !8735, !8736}
!8734 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8732, file: !134, line: 426, baseType: !219, size: 32)
!8735 = !DIDerivedType(tag: DW_TAG_member, name: "default_values", scope: !8732, file: !134, line: 427, baseType: !6253, size: 512, offset: 32)
!8736 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !8732, file: !134, line: 428, baseType: !4519, size: 128, offset: 544)
!8737 = !DILocation(line: 153, column: 27, scope: !8713)
!8738 = !DILocalVariable(name: "desc", scope: !8713, file: !3, line: 154, type: !3471)
!8739 = !DILocation(line: 154, column: 20, scope: !8713)
!8740 = !DILocalVariable(name: "i", scope: !8713, file: !3, line: 155, type: !236)
!8741 = !DILocation(line: 155, column: 6, scope: !8713)
!8742 = !DILocalVariable(name: "ret", scope: !8713, file: !3, line: 155, type: !236)
!8743 = !DILocation(line: 155, column: 9, scope: !8713)
!8744 = !DILocalVariable(name: "lflags", scope: !8713, file: !3, line: 156, type: !217)
!8745 = !DILocation(line: 156, column: 6, scope: !8713)
!8746 = !DILocation(line: 158, column: 21, scope: !8719)
!8747 = !DILocation(line: 158, column: 28, scope: !8719)
!8748 = !DILocation(line: 191, column: 6, scope: !5039, inlinedAt: !8718)
!8749 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !8717)
!8750 = !DILocation(line: 0, scope: !4881, inlinedAt: !8717)
!8751 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !8717)
!8752 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !8717)
!8753 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !8717)
!8754 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !8717)
!8755 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !8717)
!8756 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !8717)
!8757 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !8717)
!8758 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !8717)
!8759 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !8717)
!8760 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !8717)
!8761 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !8717)
!8762 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !8717)
!8763 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !8717)
!8764 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !8717)
!8765 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !8717)
!8766 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !8717)
!8767 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !8717)
!8768 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !8717)
!8769 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !8717)
!8770 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !8717)
!8771 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !8717)
!8772 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !8717)
!8773 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !8717)
!8774 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !8717)
!8775 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !8717)
!8776 = !DILocation(line: 191, column: 6, scope: !5040, inlinedAt: !8718)
!8777 = !DILocation(line: 192, column: 23, scope: !5039, inlinedAt: !8718)
!8778 = !DILocation(line: 192, column: 27, scope: !5039, inlinedAt: !8718)
!8779 = !DILocation(line: 192, column: 33, scope: !5039, inlinedAt: !8718)
!8780 = !DILocation(line: 192, column: 7, scope: !5039, inlinedAt: !8718)
!8781 = !DILocation(line: 192, column: 5, scope: !5039, inlinedAt: !8718)
!8782 = !DILocation(line: 192, column: 3, scope: !5039, inlinedAt: !8718)
!8783 = !DILocation(line: 193, column: 9, scope: !5040, inlinedAt: !8718)
!8784 = !DILocation(line: 158, column: 6, scope: !8719)
!8785 = !DILocation(line: 158, column: 6, scope: !8713)
!8786 = !DILocation(line: 159, column: 3, scope: !8719)
!8787 = !DILocation(line: 161, column: 16, scope: !8713)
!8788 = !DILocation(line: 161, column: 9, scope: !8713)
!8789 = !DILocation(line: 162, column: 34, scope: !8713)
!8790 = !DILocation(line: 162, column: 8, scope: !8713)
!8791 = !DILocation(line: 162, column: 6, scope: !8713)
!8792 = !DILocation(line: 163, column: 6, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8713, file: !3, line: 163, column: 6)
!8794 = !DILocation(line: 163, column: 6, scope: !8713)
!8795 = !DILocation(line: 164, column: 10, scope: !8793)
!8796 = !DILocation(line: 164, column: 3, scope: !8793)
!8797 = !DILocation(line: 166, column: 9, scope: !8798)
!8798 = distinct !DILexicalBlock(scope: !8713, file: !3, line: 166, column: 2)
!8799 = !DILocation(line: 166, column: 7, scope: !8798)
!8800 = !DILocation(line: 166, column: 14, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8798, file: !3, line: 166, column: 2)
!8802 = !DILocation(line: 166, column: 18, scope: !8801)
!8803 = !DILocation(line: 166, column: 22, scope: !8801)
!8804 = !DILocation(line: 166, column: 16, scope: !8801)
!8805 = !DILocation(line: 166, column: 2, scope: !8798)
!8806 = !DILocation(line: 167, column: 10, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8801, file: !3, line: 166, column: 38)
!8808 = !DILocation(line: 167, column: 14, scope: !8807)
!8809 = !DILocation(line: 167, column: 20, scope: !8807)
!8810 = !DILocation(line: 167, column: 8, scope: !8807)
!8811 = !DILocation(line: 168, column: 39, scope: !8807)
!8812 = !DILocation(line: 168, column: 47, scope: !8807)
!8813 = !DILocation(line: 168, column: 53, scope: !8807)
!8814 = !DILocation(line: 168, column: 3, scope: !8807)
!8815 = !DILocation(line: 174, column: 7, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8807, file: !3, line: 174, column: 7)
!8817 = !DILocation(line: 174, column: 14, scope: !8816)
!8818 = !DILocation(line: 174, column: 7, scope: !8807)
!8819 = !DILocalVariable(name: "val", scope: !8820, file: !3, line: 175, type: !236)
!8820 = distinct !DILexicalBlock(scope: !8816, file: !3, line: 174, column: 43)
!8821 = !DILocation(line: 175, column: 8, scope: !8820)
!8822 = !DILocation(line: 175, column: 21, scope: !8820)
!8823 = !DILocation(line: 175, column: 36, scope: !8820)
!8824 = !DILocation(line: 175, column: 16, scope: !8820)
!8825 = !DILocation(line: 175, column: 15, scope: !8820)
!8826 = !DILocation(line: 175, column: 14, scope: !8820)
!8827 = !DILocation(line: 177, column: 33, scope: !8820)
!8828 = !DILocation(line: 177, column: 39, scope: !8820)
!8829 = !DILocation(line: 177, column: 10, scope: !8820)
!8830 = !DILocation(line: 177, column: 8, scope: !8820)
!8831 = !DILocation(line: 178, column: 8, scope: !8832)
!8832 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 178, column: 8)
!8833 = !DILocation(line: 178, column: 8, scope: !8820)
!8834 = !DILocation(line: 179, column: 12, scope: !8832)
!8835 = !DILocation(line: 179, column: 5, scope: !8832)
!8836 = !DILocation(line: 180, column: 3, scope: !8820)
!8837 = !DILocation(line: 180, column: 14, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8816, file: !3, line: 180, column: 14)
!8839 = !DILocation(line: 180, column: 21, scope: !8838)
!8840 = !DILocation(line: 180, column: 14, scope: !8816)
!8841 = !DILocation(line: 181, column: 32, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8838, file: !3, line: 180, column: 49)
!8843 = !DILocation(line: 181, column: 10, scope: !8842)
!8844 = !DILocation(line: 181, column: 8, scope: !8842)
!8845 = !DILocation(line: 182, column: 8, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8842, file: !3, line: 182, column: 8)
!8847 = !DILocation(line: 182, column: 8, scope: !8842)
!8848 = !DILocation(line: 183, column: 12, scope: !8846)
!8849 = !DILocation(line: 183, column: 5, scope: !8846)
!8850 = !DILocation(line: 184, column: 3, scope: !8842)
!8851 = !DILocation(line: 186, column: 33, scope: !8807)
!8852 = !DILocation(line: 186, column: 39, scope: !8807)
!8853 = !DILocation(line: 186, column: 45, scope: !8807)
!8854 = !DILocation(line: 188, column: 11, scope: !8807)
!8855 = !DILocation(line: 186, column: 3, scope: !8807)
!8856 = !DILocation(line: 189, column: 2, scope: !8807)
!8857 = !DILocation(line: 166, column: 34, scope: !8801)
!8858 = !DILocation(line: 166, column: 2, scope: !8801)
!8859 = distinct !{!8859, !8805, !8860}
!8860 = !DILocation(line: 189, column: 2, scope: !8798)
!8861 = !DILocation(line: 190, column: 2, scope: !8713)
!8862 = !DILocation(line: 191, column: 1, scope: !8713)
!8863 = distinct !DISubprogram(name: "__set_bit", scope: !7775, file: !7775, line: 25, type: !7038, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!8864 = !DILocalVariable(name: "nr", arg: 1, scope: !8865, file: !7011, line: 66, type: !166)
!8865 = distinct !DISubprogram(name: "arch___set_bit", scope: !7011, file: !7011, line: 66, type: !7038, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!8866 = !DILocation(line: 66, column: 21, scope: !8865, inlinedAt: !8867)
!8867 = distinct !DILocation(line: 28, column: 2, scope: !8863)
!8868 = !DILocalVariable(name: "addr", arg: 2, scope: !8865, file: !7011, line: 66, type: !7007)
!8869 = !DILocation(line: 66, column: 49, scope: !8865, inlinedAt: !8867)
!8870 = !DILocalVariable(name: "v", arg: 1, scope: !8871, file: !4680, line: 39, type: !4683)
!8871 = distinct !DISubprogram(name: "instrument_write", scope: !4680, file: !4680, line: 39, type: !4681, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!8872 = !DILocation(line: 39, column: 67, scope: !8871, inlinedAt: !8873)
!8873 = distinct !DILocation(line: 27, column: 2, scope: !8863)
!8874 = !DILocalVariable(name: "size", arg: 2, scope: !8871, file: !4680, line: 39, type: !815)
!8875 = !DILocation(line: 39, column: 77, scope: !8871, inlinedAt: !8873)
!8876 = !DILocalVariable(name: "nr", arg: 1, scope: !8863, file: !7775, line: 25, type: !166)
!8877 = !DILocation(line: 25, column: 35, scope: !8863)
!8878 = !DILocalVariable(name: "addr", arg: 2, scope: !8863, file: !7775, line: 25, type: !7007)
!8879 = !DILocation(line: 25, column: 63, scope: !8863)
!8880 = !DILocation(line: 27, column: 19, scope: !8863)
!8881 = !DILocation(line: 27, column: 26, scope: !8863)
!8882 = !DILocation(line: 27, column: 24, scope: !8863)
!8883 = !DILocation(line: 41, column: 20, scope: !8871, inlinedAt: !8873)
!8884 = !DILocation(line: 41, column: 23, scope: !8871, inlinedAt: !8873)
!8885 = !DILocation(line: 41, column: 2, scope: !8871, inlinedAt: !8873)
!8886 = !DILocation(line: 42, column: 2, scope: !8871, inlinedAt: !8873)
!8887 = !DILocation(line: 28, column: 17, scope: !8863)
!8888 = !DILocation(line: 28, column: 21, scope: !8863)
!8889 = !DILocation(line: 68, column: 44, scope: !8865, inlinedAt: !8867)
!8890 = !DILocation(line: 68, column: 56, scope: !8865, inlinedAt: !8867)
!8891 = !DILocation(line: 68, column: 2, scope: !8865, inlinedAt: !8867)
!8892 = !{i32 -2146868388}
!8893 = !DILocation(line: 29, column: 1, scope: !8863)
!8894 = distinct !DISubprogram(name: "__clear_bit", scope: !7775, file: !7775, line: 40, type: !7038, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!8895 = !DILocalVariable(name: "nr", arg: 1, scope: !8896, file: !7011, line: 92, type: !166)
!8896 = distinct !DISubprogram(name: "arch___clear_bit", scope: !7011, file: !7011, line: 92, type: !7038, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!8897 = !DILocation(line: 92, column: 23, scope: !8896, inlinedAt: !8898)
!8898 = distinct !DILocation(line: 43, column: 2, scope: !8894)
!8899 = !DILocalVariable(name: "addr", arg: 2, scope: !8896, file: !7011, line: 92, type: !7007)
!8900 = !DILocation(line: 92, column: 51, scope: !8896, inlinedAt: !8898)
!8901 = !DILocation(line: 39, column: 67, scope: !8871, inlinedAt: !8902)
!8902 = distinct !DILocation(line: 42, column: 2, scope: !8894)
!8903 = !DILocation(line: 39, column: 77, scope: !8871, inlinedAt: !8902)
!8904 = !DILocalVariable(name: "nr", arg: 1, scope: !8894, file: !7775, line: 40, type: !166)
!8905 = !DILocation(line: 40, column: 37, scope: !8894)
!8906 = !DILocalVariable(name: "addr", arg: 2, scope: !8894, file: !7775, line: 40, type: !7007)
!8907 = !DILocation(line: 40, column: 65, scope: !8894)
!8908 = !DILocation(line: 42, column: 19, scope: !8894)
!8909 = !DILocation(line: 42, column: 26, scope: !8894)
!8910 = !DILocation(line: 42, column: 24, scope: !8894)
!8911 = !DILocation(line: 41, column: 20, scope: !8871, inlinedAt: !8902)
!8912 = !DILocation(line: 41, column: 23, scope: !8871, inlinedAt: !8902)
!8913 = !DILocation(line: 41, column: 2, scope: !8871, inlinedAt: !8902)
!8914 = !DILocation(line: 42, column: 2, scope: !8871, inlinedAt: !8902)
!8915 = !DILocation(line: 43, column: 19, scope: !8894)
!8916 = !DILocation(line: 43, column: 23, scope: !8894)
!8917 = !DILocation(line: 94, column: 44, scope: !8896, inlinedAt: !8898)
!8918 = !DILocation(line: 94, column: 56, scope: !8896, inlinedAt: !8898)
!8919 = !DILocation(line: 94, column: 2, scope: !8896, inlinedAt: !8898)
!8920 = !{i32 -2146867177}
!8921 = !DILocation(line: 44, column: 1, scope: !8894)
!8922 = distinct !DISubprogram(name: "lineevent_irq_handler", scope: !3, file: !3, line: 1677, type: !4122, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!8923 = !DILocalVariable(name: "irq", arg: 1, scope: !8922, file: !3, line: 1677, type: !236)
!8924 = !DILocation(line: 1677, column: 46, scope: !8922)
!8925 = !DILocalVariable(name: "p", arg: 2, scope: !8922, file: !3, line: 1677, type: !224)
!8926 = !DILocation(line: 1677, column: 57, scope: !8922)
!8927 = !DILocalVariable(name: "le", scope: !8922, file: !3, line: 1679, type: !6595)
!8928 = !DILocation(line: 1679, column: 26, scope: !8922)
!8929 = !DILocation(line: 1679, column: 31, scope: !8922)
!8930 = !DILocation(line: 1685, column: 18, scope: !8922)
!8931 = !DILocation(line: 1685, column: 2, scope: !8922)
!8932 = !DILocation(line: 1685, column: 6, scope: !8922)
!8933 = !DILocation(line: 1685, column: 16, scope: !8922)
!8934 = !DILocation(line: 1687, column: 2, scope: !8922)
!8935 = distinct !DISubprogram(name: "lineevent_irq_thread", scope: !3, file: !3, line: 1629, type: !4122, scopeLine: 1630, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!8936 = !DILocation(line: 392, column: 53, scope: !4655, inlinedAt: !8937)
!8937 = distinct !DILocation(line: 1667, column: 8, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8935, file: !3, line: 1667, column: 8)
!8939 = !DILocation(line: 352, column: 51, scope: !4726, inlinedAt: !8940)
!8940 = distinct !DILocation(line: 1667, column: 8, scope: !8938)
!8941 = !DILocalVariable(name: "irq", arg: 1, scope: !8935, file: !3, line: 1629, type: !236)
!8942 = !DILocation(line: 1629, column: 45, scope: !8935)
!8943 = !DILocalVariable(name: "p", arg: 2, scope: !8935, file: !3, line: 1629, type: !224)
!8944 = !DILocation(line: 1629, column: 56, scope: !8935)
!8945 = !DILocalVariable(name: "le", scope: !8935, file: !3, line: 1631, type: !6595)
!8946 = !DILocation(line: 1631, column: 26, scope: !8935)
!8947 = !DILocation(line: 1631, column: 31, scope: !8935)
!8948 = !DILocalVariable(name: "ge", scope: !8935, file: !3, line: 1632, type: !6613)
!8949 = !DILocation(line: 1632, column: 24, scope: !8935)
!8950 = !DILocalVariable(name: "ret", scope: !8935, file: !3, line: 1633, type: !236)
!8951 = !DILocation(line: 1633, column: 6, scope: !8935)
!8952 = !DILocation(line: 1636, column: 2, scope: !8935)
!8953 = !DILocation(line: 1642, column: 7, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8935, file: !3, line: 1642, column: 6)
!8955 = !DILocation(line: 1642, column: 11, scope: !8954)
!8956 = !DILocation(line: 1642, column: 6, scope: !8935)
!8957 = !DILocation(line: 1643, column: 18, scope: !8954)
!8958 = !DILocation(line: 1643, column: 6, scope: !8954)
!8959 = !DILocation(line: 1643, column: 16, scope: !8954)
!8960 = !DILocation(line: 1643, column: 3, scope: !8954)
!8961 = !DILocation(line: 1645, column: 18, scope: !8954)
!8962 = !DILocation(line: 1645, column: 22, scope: !8954)
!8963 = !DILocation(line: 1645, column: 6, scope: !8954)
!8964 = !DILocation(line: 1645, column: 16, scope: !8954)
!8965 = !DILocation(line: 1647, column: 6, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8935, file: !3, line: 1647, column: 6)
!8967 = !DILocation(line: 1647, column: 10, scope: !8966)
!8968 = !DILocation(line: 1647, column: 17, scope: !8966)
!8969 = !DILocation(line: 1648, column: 6, scope: !8966)
!8970 = !DILocation(line: 1648, column: 9, scope: !8966)
!8971 = !DILocation(line: 1648, column: 13, scope: !8966)
!8972 = !DILocation(line: 1648, column: 20, scope: !8966)
!8973 = !DILocation(line: 1647, column: 6, scope: !8935)
!8974 = !DILocalVariable(name: "level", scope: !8975, file: !3, line: 1649, type: !236)
!8975 = distinct !DILexicalBlock(scope: !8966, file: !3, line: 1648, column: 54)
!8976 = !DILocation(line: 1649, column: 7, scope: !8975)
!8977 = !DILocation(line: 1649, column: 40, scope: !8975)
!8978 = !DILocation(line: 1649, column: 44, scope: !8975)
!8979 = !DILocation(line: 1649, column: 15, scope: !8975)
!8980 = !DILocation(line: 1651, column: 7, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8975, file: !3, line: 1651, column: 7)
!8982 = !DILocation(line: 1651, column: 7, scope: !8975)
!8983 = !DILocation(line: 1653, column: 7, scope: !8981)
!8984 = !DILocation(line: 1653, column: 10, scope: !8981)
!8985 = !DILocation(line: 1653, column: 4, scope: !8981)
!8986 = !DILocation(line: 1656, column: 7, scope: !8981)
!8987 = !DILocation(line: 1656, column: 10, scope: !8981)
!8988 = !DILocation(line: 1657, column: 2, scope: !8975)
!8989 = !DILocation(line: 1657, column: 13, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8966, file: !3, line: 1657, column: 13)
!8991 = !DILocation(line: 1657, column: 17, scope: !8990)
!8992 = !DILocation(line: 1657, column: 24, scope: !8990)
!8993 = !DILocation(line: 1657, column: 13, scope: !8966)
!8994 = !DILocation(line: 1659, column: 6, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8990, file: !3, line: 1657, column: 57)
!8996 = !DILocation(line: 1659, column: 9, scope: !8995)
!8997 = !DILocation(line: 1660, column: 2, scope: !8995)
!8998 = !DILocation(line: 1660, column: 13, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !8990, file: !3, line: 1660, column: 13)
!9000 = !DILocation(line: 1660, column: 17, scope: !8999)
!9001 = !DILocation(line: 1660, column: 24, scope: !8999)
!9002 = !DILocation(line: 1660, column: 13, scope: !8990)
!9003 = !DILocation(line: 1662, column: 6, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8999, file: !3, line: 1660, column: 58)
!9005 = !DILocation(line: 1662, column: 9, scope: !9004)
!9006 = !DILocation(line: 1663, column: 2, scope: !9004)
!9007 = !DILocation(line: 1664, column: 3, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !8999, file: !3, line: 1663, column: 9)
!9009 = !DILocalVariable(name: "__ret", scope: !8938, file: !3, line: 1667, type: !7)
!9010 = !DILocation(line: 1667, column: 8, scope: !8938)
!9011 = !DILocation(line: 354, column: 2, scope: !4754, inlinedAt: !8940)
!9012 = !DILocation(line: 354, column: 2, scope: !4757, inlinedAt: !8940)
!9013 = !DILocalVariable(name: "__tmp", scope: !9014, file: !3, line: 1667, type: !6838)
!9014 = distinct !DILexicalBlock(scope: !8938, file: !3, line: 1667, column: 8)
!9015 = !DILocation(line: 1667, column: 8, scope: !9014)
!9016 = !DILocalVariable(name: "__buf", scope: !9014, file: !3, line: 1667, type: !6618)
!9017 = !DILocalVariable(name: "__n", scope: !9014, file: !3, line: 1667, type: !215)
!9018 = !DILocalVariable(name: "__recsize", scope: !9014, file: !3, line: 1667, type: !4854)
!9019 = !DILocalVariable(name: "__kfifo", scope: !9014, file: !3, line: 1667, type: !4856)
!9020 = !DILocation(line: 394, column: 2, scope: !4770, inlinedAt: !8937)
!9021 = !DILocation(line: 394, column: 2, scope: !4773, inlinedAt: !8937)
!9022 = !DILocation(line: 1667, column: 6, scope: !8935)
!9023 = !DILocation(line: 1669, column: 6, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !8935, file: !3, line: 1669, column: 6)
!9025 = !DILocation(line: 1669, column: 6, scope: !8935)
!9026 = !DILocation(line: 1670, column: 3, scope: !9024)
!9027 = !DILocation(line: 1672, column: 3, scope: !9028)
!9028 = distinct !DILexicalBlock(scope: !9029, file: !3, line: 1672, column: 3)
!9029 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 1672, column: 3)
!9030 = !DILocation(line: 1672, column: 3, scope: !9029)
!9031 = !DILocation(line: 1674, column: 2, scope: !8935)
!9032 = !DILocation(line: 1675, column: 1, scope: !8935)
!9033 = distinct !DISubprogram(name: "lineevent_free", scope: !3, file: !3, line: 1563, type: !9034, scopeLine: 1564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!9034 = !DISubroutineType(types: !9035)
!9035 = !{null, !6595}
!9036 = !DILocalVariable(name: "le", arg: 1, scope: !9033, file: !3, line: 1563, type: !6595)
!9037 = !DILocation(line: 1563, column: 52, scope: !9033)
!9038 = !DILocation(line: 1565, column: 6, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !9033, file: !3, line: 1565, column: 6)
!9040 = !DILocation(line: 1565, column: 10, scope: !9039)
!9041 = !DILocation(line: 1565, column: 6, scope: !9033)
!9042 = !DILocation(line: 1566, column: 12, scope: !9039)
!9043 = !DILocation(line: 1566, column: 16, scope: !9039)
!9044 = !DILocation(line: 1566, column: 21, scope: !9039)
!9045 = !DILocation(line: 1566, column: 3, scope: !9039)
!9046 = !DILocation(line: 1567, column: 6, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !9033, file: !3, line: 1567, column: 6)
!9048 = !DILocation(line: 1567, column: 10, scope: !9047)
!9049 = !DILocation(line: 1567, column: 6, scope: !9033)
!9050 = !DILocation(line: 1568, column: 14, scope: !9047)
!9051 = !DILocation(line: 1568, column: 18, scope: !9047)
!9052 = !DILocation(line: 1568, column: 3, scope: !9047)
!9053 = !DILocation(line: 1569, column: 8, scope: !9033)
!9054 = !DILocation(line: 1569, column: 12, scope: !9033)
!9055 = !DILocation(line: 1569, column: 2, scope: !9033)
!9056 = !DILocation(line: 1570, column: 14, scope: !9033)
!9057 = !DILocation(line: 1570, column: 18, scope: !9033)
!9058 = !DILocation(line: 1570, column: 24, scope: !9033)
!9059 = !DILocation(line: 1570, column: 2, scope: !9033)
!9060 = !DILocation(line: 1571, column: 8, scope: !9033)
!9061 = !DILocation(line: 1571, column: 2, scope: !9033)
!9062 = !DILocation(line: 1572, column: 1, scope: !9033)
!9063 = distinct !DISubprogram(name: "ktime_get_ns", scope: !9064, file: !9064, line: 152, type: !9065, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!9064 = !DIFile(filename: "./include/linux/timekeeping.h", directory: "/home/lizy2001/genbc/linux")
!9065 = !DISubroutineType(types: !9066)
!9066 = !{!272}
!9067 = !DILocation(line: 154, column: 21, scope: !9063)
!9068 = !DILocation(line: 154, column: 9, scope: !9063)
!9069 = !DILocation(line: 154, column: 2, scope: !9063)
!9070 = distinct !DISubprogram(name: "ktime_to_ns", scope: !323, file: !323, line: 80, type: !9071, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!9071 = !DISubroutineType(types: !9072)
!9072 = !{!304, !9073}
!9073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !322)
!9074 = !DILocalVariable(name: "kt", arg: 1, scope: !9070, file: !323, line: 80, type: !9073)
!9075 = !DILocation(line: 80, column: 45, scope: !9070)
!9076 = !DILocation(line: 82, column: 9, scope: !9070)
!9077 = !DILocation(line: 82, column: 2, scope: !9070)
!9078 = distinct !DISubprogram(name: "lineevent_read", scope: !3, file: !3, line: 1498, type: !897, scopeLine: 1502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!9079 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !9080)
!9080 = distinct !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !9081)
!9081 = distinct !DILocation(line: 1555, column: 7, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9083, file: !3, line: 1555, column: 7)
!9083 = distinct !DILexicalBlock(scope: !9078, file: !3, line: 1522, column: 5)
!9084 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !9080)
!9085 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !9080)
!9086 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !9080)
!9087 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !9080)
!9088 = !DILocation(line: 197, column: 27, scope: !4618, inlinedAt: !9081)
!9089 = !DILocation(line: 197, column: 43, scope: !4618, inlinedAt: !9081)
!9090 = !DILocation(line: 197, column: 63, scope: !4618, inlinedAt: !9081)
!9091 = !DILocation(line: 392, column: 53, scope: !4655, inlinedAt: !9092)
!9092 = distinct !DILocation(line: 1544, column: 3, scope: !9083)
!9093 = !DILocation(line: 392, column: 53, scope: !4655, inlinedAt: !9094)
!9094 = distinct !DILocation(line: 1538, column: 5, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9096, file: !3, line: 1537, column: 13)
!9096 = distinct !DILexicalBlock(scope: !9097, file: !3, line: 1537, column: 8)
!9097 = distinct !DILexicalBlock(scope: !9098, file: !3, line: 1524, column: 36)
!9098 = distinct !DILexicalBlock(scope: !9083, file: !3, line: 1524, column: 7)
!9099 = !DILocation(line: 15, column: 9, scope: !4699, inlinedAt: !9100)
!9100 = distinct !DILocation(line: 1535, column: 10, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9097, file: !3, line: 1535, column: 10)
!9102 = !DILocation(line: 15, column: 9, scope: !4708, inlinedAt: !9100)
!9103 = !DILocation(line: 15, column: 9, scope: !4711, inlinedAt: !9100)
!9104 = !DILocation(line: 15, column: 9, scope: !4699, inlinedAt: !9105)
!9105 = distinct !DILocation(line: 1535, column: 10, scope: !9101)
!9106 = !DILocation(line: 15, column: 9, scope: !4708, inlinedAt: !9105)
!9107 = !DILocation(line: 15, column: 9, scope: !4711, inlinedAt: !9105)
!9108 = !DILocation(line: 392, column: 53, scope: !4655, inlinedAt: !9109)
!9109 = distinct !DILocation(line: 1531, column: 5, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9111, file: !3, line: 1530, column: 36)
!9111 = distinct !DILexicalBlock(scope: !9097, file: !3, line: 1530, column: 8)
!9112 = !DILocation(line: 392, column: 53, scope: !4655, inlinedAt: !9113)
!9113 = distinct !DILocation(line: 1526, column: 5, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9115, file: !3, line: 1525, column: 20)
!9115 = distinct !DILexicalBlock(scope: !9097, file: !3, line: 1525, column: 8)
!9116 = !DILocation(line: 352, column: 51, scope: !4726, inlinedAt: !9117)
!9117 = distinct !DILocation(line: 1523, column: 3, scope: !9083)
!9118 = !DILocalVariable(name: "file", arg: 1, scope: !9078, file: !3, line: 1498, type: !894)
!9119 = !DILocation(line: 1498, column: 44, scope: !9078)
!9120 = !DILocalVariable(name: "buf", arg: 2, scope: !9078, file: !3, line: 1499, type: !663)
!9121 = !DILocation(line: 1499, column: 23, scope: !9078)
!9122 = !DILocalVariable(name: "count", arg: 3, scope: !9078, file: !3, line: 1500, type: !815)
!9123 = !DILocation(line: 1500, column: 17, scope: !9078)
!9124 = !DILocalVariable(name: "f_ps", arg: 4, scope: !9078, file: !3, line: 1501, type: !845)
!9125 = !DILocation(line: 1501, column: 18, scope: !9078)
!9126 = !DILocalVariable(name: "le", scope: !9078, file: !3, line: 1503, type: !6595)
!9127 = !DILocation(line: 1503, column: 26, scope: !9078)
!9128 = !DILocation(line: 1503, column: 31, scope: !9078)
!9129 = !DILocation(line: 1503, column: 37, scope: !9078)
!9130 = !DILocalVariable(name: "ge", scope: !9078, file: !3, line: 1504, type: !6613)
!9131 = !DILocation(line: 1504, column: 24, scope: !9078)
!9132 = !DILocalVariable(name: "bytes_read", scope: !9078, file: !3, line: 1505, type: !899)
!9133 = !DILocation(line: 1505, column: 10, scope: !9078)
!9134 = !DILocalVariable(name: "ge_size", scope: !9078, file: !3, line: 1506, type: !899)
!9135 = !DILocation(line: 1506, column: 10, scope: !9078)
!9136 = !DILocalVariable(name: "ret", scope: !9078, file: !3, line: 1507, type: !236)
!9137 = !DILocation(line: 1507, column: 6, scope: !9078)
!9138 = !DILocation(line: 1518, column: 12, scope: !9078)
!9139 = !DILocation(line: 1518, column: 10, scope: !9078)
!9140 = !DILocation(line: 1519, column: 6, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9078, file: !3, line: 1519, column: 6)
!9142 = !DILocation(line: 1519, column: 14, scope: !9141)
!9143 = !DILocation(line: 1519, column: 12, scope: !9141)
!9144 = !DILocation(line: 1519, column: 6, scope: !9078)
!9145 = !DILocation(line: 1520, column: 3, scope: !9141)
!9146 = !DILocation(line: 1522, column: 2, scope: !9078)
!9147 = !DILocation(line: 1523, column: 14, scope: !9083)
!9148 = !DILocation(line: 1523, column: 18, scope: !9083)
!9149 = !DILocation(line: 1523, column: 23, scope: !9083)
!9150 = !DILocation(line: 354, column: 2, scope: !4754, inlinedAt: !9117)
!9151 = !DILocation(line: 354, column: 2, scope: !4757, inlinedAt: !9117)
!9152 = !DILocalVariable(name: "__tmpq", scope: !9153, file: !3, line: 1524, type: !6838)
!9153 = distinct !DILexicalBlock(scope: !9098, file: !3, line: 1524, column: 7)
!9154 = !DILocation(line: 1524, column: 7, scope: !9153)
!9155 = !DILocation(line: 1524, column: 7, scope: !9098)
!9156 = !DILocation(line: 1524, column: 7, scope: !9083)
!9157 = !DILocation(line: 1525, column: 8, scope: !9115)
!9158 = !DILocation(line: 1525, column: 8, scope: !9097)
!9159 = !DILocation(line: 1526, column: 18, scope: !9114)
!9160 = !DILocation(line: 1526, column: 22, scope: !9114)
!9161 = !DILocation(line: 1526, column: 27, scope: !9114)
!9162 = !DILocation(line: 394, column: 2, scope: !4770, inlinedAt: !9113)
!9163 = !DILocation(line: 394, column: 2, scope: !4773, inlinedAt: !9113)
!9164 = !DILocation(line: 1527, column: 12, scope: !9114)
!9165 = !DILocation(line: 1527, column: 5, scope: !9114)
!9166 = !DILocation(line: 1530, column: 8, scope: !9111)
!9167 = !DILocation(line: 1530, column: 14, scope: !9111)
!9168 = !DILocation(line: 1530, column: 22, scope: !9111)
!9169 = !DILocation(line: 1530, column: 8, scope: !9097)
!9170 = !DILocation(line: 1531, column: 18, scope: !9110)
!9171 = !DILocation(line: 1531, column: 22, scope: !9110)
!9172 = !DILocation(line: 1531, column: 27, scope: !9110)
!9173 = !DILocation(line: 394, column: 2, scope: !4770, inlinedAt: !9109)
!9174 = !DILocation(line: 394, column: 2, scope: !4773, inlinedAt: !9109)
!9175 = !DILocation(line: 1532, column: 5, scope: !9110)
!9176 = !DILocalVariable(name: "__tmpq", scope: !9177, file: !3, line: 1535, type: !6838)
!9177 = distinct !DILexicalBlock(scope: !9097, file: !3, line: 1535, column: 10)
!9178 = !DILocation(line: 1535, column: 10, scope: !9177)
!9179 = !DILocation(line: 1535, column: 10, scope: !9097)
!9180 = !DILocalVariable(name: "__ret", scope: !9101, file: !3, line: 1535, type: !236)
!9181 = !DILocation(line: 1535, column: 10, scope: !9101)
!9182 = !DILocalVariable(name: "__wait", scope: !9101, file: !3, line: 1535, type: !4793)
!9183 = !DILocation(line: 1535, column: 10, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9101, file: !3, line: 1535, column: 10)
!9185 = !DILocation(line: 1535, column: 10, scope: !9186)
!9186 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 1535, column: 10)
!9187 = !DILocalVariable(name: "__tmpq", scope: !9188, file: !3, line: 1535, type: !6838)
!9188 = distinct !DILexicalBlock(scope: !9101, file: !3, line: 1535, column: 10)
!9189 = !DILocation(line: 1535, column: 10, scope: !9188)
!9190 = distinct !{!9190, !9181, !9181}
!9191 = !DILocation(line: 1535, column: 8, scope: !9097)
!9192 = !DILocation(line: 1537, column: 8, scope: !9096)
!9193 = !DILocation(line: 1537, column: 8, scope: !9097)
!9194 = !DILocation(line: 1538, column: 18, scope: !9095)
!9195 = !DILocation(line: 1538, column: 22, scope: !9095)
!9196 = !DILocation(line: 1538, column: 27, scope: !9095)
!9197 = !DILocation(line: 394, column: 2, scope: !4770, inlinedAt: !9094)
!9198 = !DILocation(line: 394, column: 2, scope: !4773, inlinedAt: !9094)
!9199 = !DILocation(line: 1539, column: 12, scope: !9095)
!9200 = !DILocation(line: 1539, column: 5, scope: !9095)
!9201 = !DILocation(line: 1541, column: 3, scope: !9097)
!9202 = !DILocalVariable(name: "__tmp", scope: !9203, file: !3, line: 1543, type: !6838)
!9203 = distinct !DILexicalBlock(scope: !9083, file: !3, line: 1543, column: 9)
!9204 = !DILocation(line: 1543, column: 9, scope: !9203)
!9205 = !DILocalVariable(name: "__buf", scope: !9203, file: !3, line: 1543, type: !6612)
!9206 = !DILocalVariable(name: "__n", scope: !9203, file: !3, line: 1543, type: !215)
!9207 = !DILocalVariable(name: "__recsize", scope: !9203, file: !3, line: 1543, type: !4854)
!9208 = !DILocalVariable(name: "__kfifo", scope: !9203, file: !3, line: 1543, type: !4856)
!9209 = !DILocation(line: 1543, column: 9, scope: !9083)
!9210 = !DILocation(line: 1543, column: 7, scope: !9083)
!9211 = !DILocation(line: 1544, column: 16, scope: !9083)
!9212 = !DILocation(line: 1544, column: 20, scope: !9083)
!9213 = !DILocation(line: 1544, column: 25, scope: !9083)
!9214 = !DILocation(line: 394, column: 2, scope: !4770, inlinedAt: !9092)
!9215 = !DILocation(line: 394, column: 2, scope: !4773, inlinedAt: !9092)
!9216 = !DILocation(line: 1545, column: 7, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9083, file: !3, line: 1545, column: 7)
!9218 = !DILocation(line: 1545, column: 11, scope: !9217)
!9219 = !DILocation(line: 1545, column: 7, scope: !9083)
!9220 = !DILocation(line: 1551, column: 8, scope: !9221)
!9221 = distinct !DILexicalBlock(scope: !9217, file: !3, line: 1545, column: 17)
!9222 = !DILocation(line: 1552, column: 4, scope: !9221)
!9223 = !DILocation(line: 1555, column: 20, scope: !9082)
!9224 = !DILocation(line: 1555, column: 26, scope: !9082)
!9225 = !DILocation(line: 1555, column: 24, scope: !9082)
!9226 = !DILocation(line: 1555, column: 38, scope: !9082)
!9227 = !DILocation(line: 1555, column: 43, scope: !9082)
!9228 = !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !9081)
!9229 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !9080)
!9230 = !DILocation(line: 0, scope: !4881, inlinedAt: !9080)
!9231 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !9080)
!9232 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !9080)
!9233 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !9080)
!9234 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !9080)
!9235 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !9080)
!9236 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !9080)
!9237 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !9080)
!9238 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !9080)
!9239 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !9080)
!9240 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !9080)
!9241 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !9080)
!9242 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !9080)
!9243 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !9080)
!9244 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !9080)
!9245 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !9080)
!9246 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !9080)
!9247 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !9080)
!9248 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !9080)
!9249 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !9080)
!9250 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !9080)
!9251 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !9080)
!9252 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !9080)
!9253 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !9080)
!9254 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !9080)
!9255 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !9080)
!9256 = !DILocation(line: 199, column: 6, scope: !4618, inlinedAt: !9081)
!9257 = !DILocation(line: 200, column: 21, scope: !4616, inlinedAt: !9081)
!9258 = !DILocation(line: 200, column: 25, scope: !4616, inlinedAt: !9081)
!9259 = !DILocation(line: 200, column: 31, scope: !4616, inlinedAt: !9081)
!9260 = !DILocation(line: 200, column: 7, scope: !4616, inlinedAt: !9081)
!9261 = !DILocation(line: 200, column: 5, scope: !4616, inlinedAt: !9081)
!9262 = !DILocation(line: 200, column: 3, scope: !4616, inlinedAt: !9081)
!9263 = !DILocation(line: 201, column: 9, scope: !4618, inlinedAt: !9081)
!9264 = !DILocation(line: 1555, column: 7, scope: !9082)
!9265 = !DILocation(line: 1555, column: 7, scope: !9083)
!9266 = !DILocation(line: 1556, column: 4, scope: !9082)
!9267 = !DILocation(line: 1557, column: 17, scope: !9083)
!9268 = !DILocation(line: 1557, column: 14, scope: !9083)
!9269 = !DILocation(line: 1558, column: 2, scope: !9083)
!9270 = !DILocation(line: 1558, column: 11, scope: !9078)
!9271 = !DILocation(line: 1558, column: 20, scope: !9078)
!9272 = !DILocation(line: 1558, column: 33, scope: !9078)
!9273 = !DILocation(line: 1558, column: 31, scope: !9078)
!9274 = !DILocation(line: 1558, column: 17, scope: !9078)
!9275 = distinct !{!9275, !9146, !9276}
!9276 = !DILocation(line: 1558, column: 40, scope: !9078)
!9277 = !DILocation(line: 1560, column: 9, scope: !9078)
!9278 = !DILocation(line: 1560, column: 2, scope: !9078)
!9279 = !DILocation(line: 1561, column: 1, scope: !9078)
!9280 = distinct !DISubprogram(name: "lineevent_poll", scope: !3, file: !3, line: 1468, type: !994, scopeLine: 1470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!9281 = !DILocation(line: 392, column: 53, scope: !4655, inlinedAt: !9282)
!9282 = distinct !DILocation(line: 1476, column: 7, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !9284, file: !3, line: 1476, column: 7)
!9284 = distinct !DILexicalBlock(scope: !9280, file: !3, line: 1476, column: 6)
!9285 = !DILocation(line: 352, column: 51, scope: !4726, inlinedAt: !9286)
!9286 = distinct !DILocation(line: 1476, column: 7, scope: !9283)
!9287 = !DILocalVariable(name: "file", arg: 1, scope: !9280, file: !3, line: 1468, type: !894)
!9288 = !DILocation(line: 1468, column: 45, scope: !9280)
!9289 = !DILocalVariable(name: "wait", arg: 2, scope: !9280, file: !3, line: 1469, type: !998)
!9290 = !DILocation(line: 1469, column: 37, scope: !9280)
!9291 = !DILocalVariable(name: "le", scope: !9280, file: !3, line: 1471, type: !6595)
!9292 = !DILocation(line: 1471, column: 26, scope: !9280)
!9293 = !DILocation(line: 1471, column: 31, scope: !9280)
!9294 = !DILocation(line: 1471, column: 37, scope: !9280)
!9295 = !DILocalVariable(name: "events", scope: !9280, file: !3, line: 1472, type: !996)
!9296 = !DILocation(line: 1472, column: 11, scope: !9280)
!9297 = !DILocation(line: 1474, column: 12, scope: !9280)
!9298 = !DILocation(line: 1474, column: 19, scope: !9280)
!9299 = !DILocation(line: 1474, column: 23, scope: !9280)
!9300 = !DILocation(line: 1474, column: 29, scope: !9280)
!9301 = !DILocation(line: 1474, column: 2, scope: !9280)
!9302 = !DILocalVariable(name: "__ret", scope: !9283, file: !3, line: 1476, type: !682)
!9303 = !DILocation(line: 1476, column: 7, scope: !9283)
!9304 = !DILocation(line: 354, column: 2, scope: !4754, inlinedAt: !9286)
!9305 = !DILocation(line: 354, column: 2, scope: !4757, inlinedAt: !9286)
!9306 = !DILocalVariable(name: "__tmpq", scope: !9307, file: !3, line: 1476, type: !6838)
!9307 = distinct !DILexicalBlock(scope: !9283, file: !3, line: 1476, column: 7)
!9308 = !DILocation(line: 1476, column: 7, scope: !9307)
!9309 = !DILocation(line: 394, column: 2, scope: !4770, inlinedAt: !9282)
!9310 = !DILocation(line: 394, column: 2, scope: !4773, inlinedAt: !9282)
!9311 = !DILocation(line: 1476, column: 6, scope: !9280)
!9312 = !DILocation(line: 1477, column: 10, scope: !9284)
!9313 = !DILocation(line: 1477, column: 3, scope: !9284)
!9314 = !DILocation(line: 1479, column: 9, scope: !9280)
!9315 = !DILocation(line: 1479, column: 2, scope: !9280)
!9316 = distinct !DISubprogram(name: "lineevent_ioctl", scope: !3, file: !3, line: 1580, type: !1017, scopeLine: 1582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!9317 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !9318)
!9318 = distinct !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !9319)
!9319 = distinct !DILocation(line: 1601, column: 7, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9321, file: !3, line: 1601, column: 7)
!9321 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 1591, column: 47)
!9322 = distinct !DILexicalBlock(scope: !9316, file: !3, line: 1591, column: 6)
!9323 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !9318)
!9324 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !9318)
!9325 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !9318)
!9326 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !9318)
!9327 = !DILocation(line: 197, column: 27, scope: !4618, inlinedAt: !9319)
!9328 = !DILocation(line: 197, column: 43, scope: !4618, inlinedAt: !9319)
!9329 = !DILocation(line: 197, column: 63, scope: !4618, inlinedAt: !9319)
!9330 = !DILocalVariable(name: "file", arg: 1, scope: !9316, file: !3, line: 1580, type: !894)
!9331 = !DILocation(line: 1580, column: 42, scope: !9316)
!9332 = !DILocalVariable(name: "cmd", arg: 2, scope: !9316, file: !3, line: 1580, type: !7)
!9333 = !DILocation(line: 1580, column: 61, scope: !9316)
!9334 = !DILocalVariable(name: "arg", arg: 3, scope: !9316, file: !3, line: 1581, type: !215)
!9335 = !DILocation(line: 1581, column: 22, scope: !9316)
!9336 = !DILocalVariable(name: "le", scope: !9316, file: !3, line: 1583, type: !6595)
!9337 = !DILocation(line: 1583, column: 26, scope: !9316)
!9338 = !DILocation(line: 1583, column: 31, scope: !9316)
!9339 = !DILocation(line: 1583, column: 37, scope: !9316)
!9340 = !DILocalVariable(name: "ip", scope: !9316, file: !3, line: 1584, type: !224)
!9341 = !DILocation(line: 1584, column: 15, scope: !9316)
!9342 = !DILocation(line: 1584, column: 35, scope: !9316)
!9343 = !DILocation(line: 1584, column: 20, scope: !9316)
!9344 = !DILocalVariable(name: "ghd", scope: !9316, file: !3, line: 1585, type: !8522)
!9345 = !DILocation(line: 1585, column: 25, scope: !9316)
!9346 = !DILocation(line: 1591, column: 6, scope: !9322)
!9347 = !DILocation(line: 1591, column: 10, scope: !9322)
!9348 = !DILocation(line: 1591, column: 6, scope: !9316)
!9349 = !DILocalVariable(name: "val", scope: !9321, file: !3, line: 1592, type: !236)
!9350 = !DILocation(line: 1592, column: 7, scope: !9321)
!9351 = !DILocation(line: 1594, column: 3, scope: !9321)
!9352 = !DILocation(line: 1596, column: 34, scope: !9321)
!9353 = !DILocation(line: 1596, column: 38, scope: !9321)
!9354 = !DILocation(line: 1596, column: 9, scope: !9321)
!9355 = !DILocation(line: 1596, column: 7, scope: !9321)
!9356 = !DILocation(line: 1597, column: 7, scope: !9357)
!9357 = distinct !DILexicalBlock(scope: !9321, file: !3, line: 1597, column: 7)
!9358 = !DILocation(line: 1597, column: 11, scope: !9357)
!9359 = !DILocation(line: 1597, column: 7, scope: !9321)
!9360 = !DILocation(line: 1598, column: 11, scope: !9357)
!9361 = !DILocation(line: 1598, column: 4, scope: !9357)
!9362 = !DILocation(line: 1599, column: 19, scope: !9321)
!9363 = !DILocation(line: 1599, column: 7, scope: !9321)
!9364 = !DILocation(line: 1599, column: 3, scope: !9321)
!9365 = !DILocation(line: 1599, column: 17, scope: !9321)
!9366 = !DILocation(line: 1601, column: 20, scope: !9320)
!9367 = !DILocation(line: 1601, column: 24, scope: !9320)
!9368 = !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !9319)
!9369 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !9318)
!9370 = !DILocation(line: 0, scope: !4881, inlinedAt: !9318)
!9371 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !9318)
!9372 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !9318)
!9373 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !9318)
!9374 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !9318)
!9375 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !9318)
!9376 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !9318)
!9377 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !9318)
!9378 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !9318)
!9379 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !9318)
!9380 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !9318)
!9381 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !9318)
!9382 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !9318)
!9383 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !9318)
!9384 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !9318)
!9385 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !9318)
!9386 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !9318)
!9387 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !9318)
!9388 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !9318)
!9389 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !9318)
!9390 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !9318)
!9391 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !9318)
!9392 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !9318)
!9393 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !9318)
!9394 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !9318)
!9395 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !9318)
!9396 = !DILocation(line: 199, column: 6, scope: !4618, inlinedAt: !9319)
!9397 = !DILocation(line: 200, column: 21, scope: !4616, inlinedAt: !9319)
!9398 = !DILocation(line: 200, column: 25, scope: !4616, inlinedAt: !9319)
!9399 = !DILocation(line: 200, column: 31, scope: !4616, inlinedAt: !9319)
!9400 = !DILocation(line: 200, column: 7, scope: !4616, inlinedAt: !9319)
!9401 = !DILocation(line: 200, column: 5, scope: !4616, inlinedAt: !9319)
!9402 = !DILocation(line: 200, column: 3, scope: !4616, inlinedAt: !9319)
!9403 = !DILocation(line: 201, column: 9, scope: !4618, inlinedAt: !9319)
!9404 = !DILocation(line: 1601, column: 7, scope: !9320)
!9405 = !DILocation(line: 1601, column: 7, scope: !9321)
!9406 = !DILocation(line: 1602, column: 4, scope: !9320)
!9407 = !DILocation(line: 1604, column: 3, scope: !9321)
!9408 = !DILocation(line: 1606, column: 2, scope: !9316)
!9409 = !DILocation(line: 1607, column: 1, scope: !9316)
!9410 = distinct !DISubprogram(name: "lineevent_release", scope: !3, file: !3, line: 1574, type: !1027, scopeLine: 1575, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!9411 = !DILocalVariable(name: "inode", arg: 1, scope: !9410, file: !3, line: 1574, type: !527)
!9412 = !DILocation(line: 1574, column: 44, scope: !9410)
!9413 = !DILocalVariable(name: "file", arg: 2, scope: !9410, file: !3, line: 1574, type: !894)
!9414 = !DILocation(line: 1574, column: 64, scope: !9410)
!9415 = !DILocation(line: 1576, column: 17, scope: !9410)
!9416 = !DILocation(line: 1576, column: 23, scope: !9410)
!9417 = !DILocation(line: 1576, column: 2, scope: !9410)
!9418 = !DILocation(line: 1577, column: 2, scope: !9410)
!9419 = distinct !DISubprogram(name: "lineevent_get_size", scope: !3, file: !3, line: 1482, type: !9420, scopeLine: 1483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!9420 = !DISubroutineType(types: !9421)
!9421 = !{!899}
!9422 = !DILocation(line: 1495, column: 2, scope: !9419)
!9423 = distinct !DISubprogram(name: "gpio_v2_line_config_validate", scope: !3, file: !3, line: 916, type: !9424, scopeLine: 918, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!9424 = !DISubroutineType(types: !9425)
!9425 = !{!236, !7315, !7}
!9426 = !DILocalVariable(name: "lc", arg: 1, scope: !9423, file: !3, line: 916, type: !7315)
!9427 = !DILocation(line: 916, column: 69, scope: !9423)
!9428 = !DILocalVariable(name: "num_lines", arg: 2, scope: !9423, file: !3, line: 917, type: !7)
!9429 = !DILocation(line: 917, column: 19, scope: !9423)
!9430 = !DILocalVariable(name: "i", scope: !9423, file: !3, line: 919, type: !7)
!9431 = !DILocation(line: 919, column: 15, scope: !9423)
!9432 = !DILocalVariable(name: "flags", scope: !9423, file: !3, line: 920, type: !272)
!9433 = !DILocation(line: 920, column: 6, scope: !9423)
!9434 = !DILocalVariable(name: "ret", scope: !9423, file: !3, line: 921, type: !236)
!9435 = !DILocation(line: 921, column: 6, scope: !9423)
!9436 = !DILocation(line: 923, column: 6, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9423, file: !3, line: 923, column: 6)
!9438 = !DILocation(line: 923, column: 10, scope: !9437)
!9439 = !DILocation(line: 923, column: 20, scope: !9437)
!9440 = !DILocation(line: 923, column: 6, scope: !9423)
!9441 = !DILocation(line: 924, column: 3, scope: !9437)
!9442 = !DILocation(line: 926, column: 17, scope: !9443)
!9443 = distinct !DILexicalBlock(scope: !9423, file: !3, line: 926, column: 6)
!9444 = !DILocation(line: 926, column: 21, scope: !9443)
!9445 = !DILocation(line: 926, column: 6, scope: !9443)
!9446 = !DILocation(line: 926, column: 6, scope: !9423)
!9447 = !DILocation(line: 927, column: 3, scope: !9443)
!9448 = !DILocation(line: 929, column: 9, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9423, file: !3, line: 929, column: 2)
!9450 = !DILocation(line: 929, column: 7, scope: !9449)
!9451 = !DILocation(line: 929, column: 14, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9449, file: !3, line: 929, column: 2)
!9453 = !DILocation(line: 929, column: 18, scope: !9452)
!9454 = !DILocation(line: 929, column: 16, scope: !9452)
!9455 = !DILocation(line: 929, column: 2, scope: !9449)
!9456 = !DILocation(line: 930, column: 37, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9452, file: !3, line: 929, column: 34)
!9458 = !DILocation(line: 930, column: 41, scope: !9457)
!9459 = !DILocation(line: 930, column: 11, scope: !9457)
!9460 = !DILocation(line: 930, column: 9, scope: !9457)
!9461 = !DILocation(line: 931, column: 37, scope: !9457)
!9462 = !DILocation(line: 931, column: 9, scope: !9457)
!9463 = !DILocation(line: 931, column: 7, scope: !9457)
!9464 = !DILocation(line: 932, column: 7, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9457, file: !3, line: 932, column: 7)
!9466 = !DILocation(line: 932, column: 7, scope: !9457)
!9467 = !DILocation(line: 933, column: 11, scope: !9465)
!9468 = !DILocation(line: 933, column: 4, scope: !9465)
!9469 = !DILocation(line: 936, column: 37, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9457, file: !3, line: 936, column: 7)
!9471 = !DILocation(line: 936, column: 41, scope: !9470)
!9472 = !DILocation(line: 936, column: 7, scope: !9470)
!9473 = !DILocation(line: 936, column: 44, scope: !9470)
!9474 = !DILocation(line: 937, column: 9, scope: !9470)
!9475 = !DILocation(line: 937, column: 15, scope: !9470)
!9476 = !DILocation(line: 936, column: 7, scope: !9457)
!9477 = !DILocation(line: 938, column: 4, scope: !9470)
!9478 = !DILocation(line: 939, column: 2, scope: !9457)
!9479 = !DILocation(line: 929, column: 30, scope: !9452)
!9480 = !DILocation(line: 929, column: 2, scope: !9452)
!9481 = distinct !{!9481, !9455, !9482}
!9482 = !DILocation(line: 939, column: 2, scope: !9449)
!9483 = !DILocation(line: 940, column: 2, scope: !9423)
!9484 = !DILocation(line: 941, column: 1, scope: !9423)
!9485 = distinct !DISubprogram(name: "__ab_c_size", scope: !9486, file: !9486, line: 301, type: !9487, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!9486 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!9487 = !DISubroutineType(types: !9488)
!9488 = !{!815, !815, !815, !815}
!9489 = !DILocalVariable(name: "a", arg: 1, scope: !9485, file: !9486, line: 301, type: !815)
!9490 = !DILocation(line: 301, column: 54, scope: !9485)
!9491 = !DILocalVariable(name: "b", arg: 2, scope: !9485, file: !9486, line: 301, type: !815)
!9492 = !DILocation(line: 301, column: 64, scope: !9485)
!9493 = !DILocalVariable(name: "c", arg: 3, scope: !9485, file: !9486, line: 301, type: !815)
!9494 = !DILocation(line: 301, column: 74, scope: !9485)
!9495 = !DILocalVariable(name: "bytes", scope: !9485, file: !9486, line: 303, type: !815)
!9496 = !DILocation(line: 303, column: 9, scope: !9485)
!9497 = !DILocalVariable(name: "__a", scope: !9498, file: !9486, line: 305, type: !815)
!9498 = distinct !DILexicalBlock(scope: !9499, file: !9486, line: 305, column: 6)
!9499 = distinct !DILexicalBlock(scope: !9485, file: !9486, line: 305, column: 6)
!9500 = !DILocation(line: 305, column: 6, scope: !9498)
!9501 = !DILocalVariable(name: "__b", scope: !9498, file: !9486, line: 305, type: !815)
!9502 = !DILocalVariable(name: "__d", scope: !9498, file: !9486, line: 305, type: !9503)
!9503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!9504 = !DILocation(line: 305, column: 6, scope: !9499)
!9505 = !DILocation(line: 305, column: 6, scope: !9485)
!9506 = !DILocation(line: 306, column: 3, scope: !9499)
!9507 = !DILocalVariable(name: "__a", scope: !9508, file: !9486, line: 307, type: !815)
!9508 = distinct !DILexicalBlock(scope: !9509, file: !9486, line: 307, column: 6)
!9509 = distinct !DILexicalBlock(scope: !9485, file: !9486, line: 307, column: 6)
!9510 = !DILocation(line: 307, column: 6, scope: !9508)
!9511 = !DILocalVariable(name: "__b", scope: !9508, file: !9486, line: 307, type: !815)
!9512 = !DILocalVariable(name: "__d", scope: !9508, file: !9486, line: 307, type: !9503)
!9513 = !DILocation(line: 307, column: 6, scope: !9509)
!9514 = !DILocation(line: 307, column: 6, scope: !9485)
!9515 = !DILocation(line: 308, column: 3, scope: !9509)
!9516 = !DILocation(line: 310, column: 9, scope: !9485)
!9517 = !DILocation(line: 310, column: 2, scope: !9485)
!9518 = !DILocation(line: 311, column: 1, scope: !9485)
!9519 = distinct !DISubprogram(name: "__init_work", scope: !165, file: !165, line: 215, type: !9520, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!9520 = !DISubroutineType(types: !9521)
!9521 = !{null, !1813, !236}
!9522 = !DILocalVariable(name: "work", arg: 1, scope: !9519, file: !165, line: 215, type: !1813)
!9523 = !DILocation(line: 215, column: 52, scope: !9519)
!9524 = !DILocalVariable(name: "onstack", arg: 2, scope: !9519, file: !165, line: 215, type: !236)
!9525 = !DILocation(line: 215, column: 62, scope: !9519)
!9526 = !DILocation(line: 215, column: 73, scope: !9519)
!9527 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !5716, file: !5716, line: 33, type: !5717, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!9528 = !DILocalVariable(name: "list", arg: 1, scope: !9527, file: !5716, line: 33, type: !268)
!9529 = !DILocation(line: 33, column: 53, scope: !9527)
!9530 = !DILocation(line: 35, column: 2, scope: !9527)
!9531 = !DILocation(line: 35, column: 2, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9527, file: !5716, line: 35, column: 2)
!9533 = !DILocation(line: 35, column: 2, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9532, file: !5716, line: 35, column: 2)
!9535 = !DILocation(line: 35, column: 2, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9532, file: !5716, line: 35, column: 2)
!9537 = !DILocation(line: 36, column: 15, scope: !9527)
!9538 = !DILocation(line: 36, column: 2, scope: !9527)
!9539 = !DILocation(line: 36, column: 8, scope: !9527)
!9540 = !DILocation(line: 36, column: 13, scope: !9527)
!9541 = !DILocation(line: 37, column: 1, scope: !9527)
!9542 = distinct !DISubprogram(name: "debounce_work_func", scope: !3, file: !3, line: 631, type: !1811, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!9543 = !DILocalVariable(name: "i", arg: 1, scope: !9544, file: !4667, line: 163, type: !236)
!9544 = distinct !DISubprogram(name: "arch_atomic_add_return", scope: !4667, file: !4667, line: 163, type: !9545, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!9545 = !DISubroutineType(types: !9546)
!9546 = !{!236, !236, !6949}
!9547 = !DILocation(line: 163, column: 55, scope: !9544, inlinedAt: !9548)
!9548 = distinct !DILocation(line: 286, column: 9, scope: !9549, inlinedAt: !9553)
!9549 = distinct !DISubprogram(name: "arch_atomic_inc_return", scope: !9550, file: !9550, line: 284, type: !9551, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!9550 = !DIFile(filename: "./include/linux/atomic-arch-fallback.h", directory: "/home/lizy2001/genbc/linux")
!9551 = !DISubroutineType(types: !9552)
!9552 = !{!236, !6949}
!9553 = distinct !DILocation(line: 251, column: 9, scope: !9554, inlinedAt: !9555)
!9554 = distinct !DISubprogram(name: "atomic_inc_return", scope: !4675, file: !4675, line: 248, type: !9551, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!9555 = distinct !DILocation(line: 671, column: 19, scope: !9542)
!9556 = !DILocalVariable(name: "v", arg: 2, scope: !9544, file: !4667, line: 163, type: !6949)
!9557 = !DILocation(line: 163, column: 68, scope: !9544, inlinedAt: !9548)
!9558 = !DILocalVariable(name: "__ret", scope: !9559, file: !4667, line: 165, type: !236)
!9559 = distinct !DILexicalBlock(scope: !9544, file: !4667, line: 165, column: 13)
!9560 = !DILocation(line: 165, column: 13, scope: !9559, inlinedAt: !9548)
!9561 = !DILocalVariable(name: "v", arg: 1, scope: !9549, file: !9550, line: 284, type: !6949)
!9562 = !DILocation(line: 284, column: 34, scope: !9549, inlinedAt: !9553)
!9563 = !DILocation(line: 99, column: 79, scope: !6965, inlinedAt: !9564)
!9564 = distinct !DILocation(line: 250, column: 2, scope: !9554, inlinedAt: !9555)
!9565 = !DILocation(line: 99, column: 89, scope: !6965, inlinedAt: !9564)
!9566 = !DILocalVariable(name: "v", arg: 1, scope: !9554, file: !4675, line: 248, type: !6949)
!9567 = !DILocation(line: 248, column: 29, scope: !9554, inlinedAt: !9555)
!9568 = !DILocalVariable(name: "work", arg: 1, scope: !9542, file: !3, line: 631, type: !1813)
!9569 = !DILocation(line: 631, column: 52, scope: !9542)
!9570 = !DILocalVariable(name: "le", scope: !9542, file: !3, line: 633, type: !4442)
!9571 = !DILocation(line: 633, column: 28, scope: !9542)
!9572 = !DILocalVariable(name: "line", scope: !9542, file: !3, line: 634, type: !3467)
!9573 = !DILocation(line: 634, column: 15, scope: !9542)
!9574 = !DILocalVariable(name: "__mptr", scope: !9575, file: !3, line: 634, type: !224)
!9575 = distinct !DILexicalBlock(scope: !9542, file: !3, line: 634, column: 22)
!9576 = !DILocation(line: 634, column: 22, scope: !9575)
!9577 = !DILocation(line: 634, column: 22, scope: !9578)
!9578 = distinct !DILexicalBlock(scope: !9575, file: !3, line: 634, column: 22)
!9579 = !DILocalVariable(name: "lr", scope: !9542, file: !3, line: 635, type: !4417)
!9580 = !DILocation(line: 635, column: 18, scope: !9542)
!9581 = !DILocalVariable(name: "level", scope: !9542, file: !3, line: 636, type: !236)
!9582 = !DILocation(line: 636, column: 6, scope: !9542)
!9583 = !DILocation(line: 638, column: 39, scope: !9542)
!9584 = !DILocation(line: 638, column: 45, scope: !9542)
!9585 = !DILocation(line: 638, column: 10, scope: !9542)
!9586 = !DILocation(line: 638, column: 8, scope: !9542)
!9587 = !DILocation(line: 639, column: 6, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9542, file: !3, line: 639, column: 6)
!9589 = !DILocation(line: 639, column: 12, scope: !9588)
!9590 = !DILocation(line: 639, column: 6, scope: !9542)
!9591 = !DILocation(line: 640, column: 3, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9593, file: !3, line: 640, column: 3)
!9593 = distinct !DILexicalBlock(scope: !9594, file: !3, line: 640, column: 3)
!9594 = distinct !DILexicalBlock(scope: !9588, file: !3, line: 639, column: 17)
!9595 = !DILocation(line: 640, column: 3, scope: !9593)
!9596 = !DILocation(line: 641, column: 3, scope: !9594)
!9597 = !DILocation(line: 644, column: 6, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9599, file: !3, line: 644, column: 6)
!9599 = distinct !DILexicalBlock(scope: !9542, file: !3, line: 644, column: 6)
!9600 = !DILocation(line: 644, column: 6, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9598, file: !3, line: 644, column: 6)
!9602 = !DILocation(line: 644, column: 32, scope: !9599)
!9603 = !DILocation(line: 644, column: 29, scope: !9599)
!9604 = !DILocation(line: 644, column: 6, scope: !9542)
!9605 = !DILocation(line: 645, column: 3, scope: !9599)
!9606 = !DILocation(line: 647, column: 2, scope: !9542)
!9607 = !DILocation(line: 647, column: 2, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9542, file: !3, line: 647, column: 2)
!9609 = !DILocation(line: 647, column: 2, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9608, file: !3, line: 647, column: 2)
!9611 = !DILocation(line: 647, column: 2, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9608, file: !3, line: 647, column: 2)
!9613 = !DILocation(line: 650, column: 7, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9542, file: !3, line: 650, column: 6)
!9615 = !DILocation(line: 650, column: 13, scope: !9614)
!9616 = !DILocation(line: 650, column: 6, scope: !9542)
!9617 = !DILocation(line: 651, column: 3, scope: !9614)
!9618 = !DILocation(line: 654, column: 33, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9542, file: !3, line: 654, column: 6)
!9620 = !DILocation(line: 654, column: 39, scope: !9619)
!9621 = !DILocation(line: 654, column: 45, scope: !9619)
!9622 = !DILocation(line: 654, column: 6, scope: !9619)
!9623 = !DILocation(line: 654, column: 6, scope: !9542)
!9624 = !DILocation(line: 655, column: 12, scope: !9619)
!9625 = !DILocation(line: 655, column: 11, scope: !9619)
!9626 = !DILocation(line: 655, column: 9, scope: !9619)
!9627 = !DILocation(line: 655, column: 3, scope: !9619)
!9628 = !DILocation(line: 658, column: 8, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9542, file: !3, line: 658, column: 6)
!9630 = !DILocation(line: 658, column: 14, scope: !9629)
!9631 = !DILocation(line: 658, column: 21, scope: !9629)
!9632 = !DILocation(line: 658, column: 55, scope: !9629)
!9633 = !DILocation(line: 658, column: 59, scope: !9629)
!9634 = !DILocation(line: 658, column: 66, scope: !9629)
!9635 = !DILocation(line: 659, column: 8, scope: !9629)
!9636 = !DILocation(line: 659, column: 14, scope: !9629)
!9637 = !DILocation(line: 659, column: 21, scope: !9629)
!9638 = !DILocation(line: 659, column: 56, scope: !9629)
!9639 = !DILocation(line: 659, column: 59, scope: !9629)
!9640 = !DILocation(line: 658, column: 6, scope: !9542)
!9641 = !DILocation(line: 660, column: 3, scope: !9629)
!9642 = !DILocation(line: 663, column: 2, scope: !9542)
!9643 = !DILocation(line: 665, column: 7, scope: !9542)
!9644 = !DILocation(line: 665, column: 13, scope: !9542)
!9645 = !DILocation(line: 665, column: 5, scope: !9542)
!9646 = !DILocation(line: 666, column: 20, scope: !9542)
!9647 = !DILocation(line: 666, column: 5, scope: !9542)
!9648 = !DILocation(line: 666, column: 18, scope: !9542)
!9649 = !DILocation(line: 667, column: 31, scope: !9542)
!9650 = !DILocation(line: 667, column: 37, scope: !9542)
!9651 = !DILocation(line: 667, column: 14, scope: !9542)
!9652 = !DILocation(line: 667, column: 5, scope: !9542)
!9653 = !DILocation(line: 667, column: 12, scope: !9542)
!9654 = !DILocation(line: 668, column: 2, scope: !9542)
!9655 = !DILocation(line: 668, column: 8, scope: !9542)
!9656 = !DILocation(line: 668, column: 18, scope: !9542)
!9657 = !DILocation(line: 669, column: 18, scope: !9542)
!9658 = !DILocation(line: 669, column: 24, scope: !9542)
!9659 = !DILocation(line: 669, column: 5, scope: !9542)
!9660 = !DILocation(line: 669, column: 16, scope: !9542)
!9661 = !DILocation(line: 670, column: 14, scope: !9542)
!9662 = !DILocation(line: 670, column: 18, scope: !9542)
!9663 = !DILocation(line: 670, column: 28, scope: !9542)
!9664 = !DILocation(line: 670, column: 13, scope: !9542)
!9665 = !DILocation(line: 671, column: 6, scope: !9542)
!9666 = !DILocation(line: 671, column: 38, scope: !9542)
!9667 = !DILocation(line: 671, column: 42, scope: !9542)
!9668 = !DILocation(line: 250, column: 31, scope: !9554, inlinedAt: !9555)
!9669 = !DILocation(line: 101, column: 20, scope: !6965, inlinedAt: !9564)
!9670 = !DILocation(line: 101, column: 23, scope: !6965, inlinedAt: !9564)
!9671 = !DILocation(line: 101, column: 2, scope: !6965, inlinedAt: !9564)
!9672 = !DILocation(line: 102, column: 2, scope: !6965, inlinedAt: !9564)
!9673 = !DILocation(line: 251, column: 32, scope: !9554, inlinedAt: !9555)
!9674 = !DILocation(line: 286, column: 35, scope: !9549, inlinedAt: !9553)
!9675 = !DILocation(line: 165, column: 9, scope: !9544, inlinedAt: !9548)
!9676 = !{i32 -2147171121}
!9677 = !DILocation(line: 165, column: 11, scope: !9544, inlinedAt: !9548)
!9678 = !DILocation(line: 670, column: 5, scope: !9542)
!9679 = !DILocation(line: 670, column: 11, scope: !9542)
!9680 = !DILocation(line: 673, column: 6, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !9542, file: !3, line: 673, column: 6)
!9682 = !DILocation(line: 673, column: 6, scope: !9542)
!9683 = !DILocation(line: 675, column: 6, scope: !9681)
!9684 = !DILocation(line: 675, column: 9, scope: !9681)
!9685 = !DILocation(line: 675, column: 3, scope: !9681)
!9686 = !DILocation(line: 678, column: 6, scope: !9681)
!9687 = !DILocation(line: 678, column: 9, scope: !9681)
!9688 = !DILocation(line: 680, column: 20, scope: !9542)
!9689 = !DILocation(line: 680, column: 2, scope: !9542)
!9690 = !DILocation(line: 681, column: 1, scope: !9542)
!9691 = distinct !DISubprogram(name: "gpio_v2_line_config_flags", scope: !3, file: !3, line: 839, type: !9692, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!9692 = !DISubroutineType(types: !9693)
!9693 = !{!272, !7315, !7}
!9694 = !DILocalVariable(name: "lc", arg: 1, scope: !9691, file: !3, line: 839, type: !7315)
!9695 = !DILocation(line: 839, column: 66, scope: !9691)
!9696 = !DILocalVariable(name: "line_idx", arg: 2, scope: !9691, file: !3, line: 840, type: !7)
!9697 = !DILocation(line: 840, column: 23, scope: !9691)
!9698 = !DILocalVariable(name: "i", scope: !9691, file: !3, line: 842, type: !7)
!9699 = !DILocation(line: 842, column: 15, scope: !9691)
!9700 = !DILocalVariable(name: "mask", scope: !9691, file: !3, line: 843, type: !272)
!9701 = !DILocation(line: 843, column: 6, scope: !9691)
!9702 = !DILocation(line: 843, column: 13, scope: !9691)
!9703 = !DILocation(line: 845, column: 9, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9691, file: !3, line: 845, column: 2)
!9705 = !DILocation(line: 845, column: 7, scope: !9704)
!9706 = !DILocation(line: 845, column: 14, scope: !9707)
!9707 = distinct !DILexicalBlock(scope: !9704, file: !3, line: 845, column: 2)
!9708 = !DILocation(line: 845, column: 18, scope: !9707)
!9709 = !DILocation(line: 845, column: 22, scope: !9707)
!9710 = !DILocation(line: 845, column: 16, scope: !9707)
!9711 = !DILocation(line: 845, column: 2, scope: !9704)
!9712 = !DILocation(line: 846, column: 8, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9714, file: !3, line: 846, column: 7)
!9714 = distinct !DILexicalBlock(scope: !9707, file: !3, line: 845, column: 38)
!9715 = !DILocation(line: 846, column: 12, scope: !9713)
!9716 = !DILocation(line: 846, column: 18, scope: !9713)
!9717 = !DILocation(line: 846, column: 21, scope: !9713)
!9718 = !DILocation(line: 846, column: 26, scope: !9713)
!9719 = !DILocation(line: 846, column: 29, scope: !9713)
!9720 = !DILocation(line: 846, column: 60, scope: !9713)
!9721 = !DILocation(line: 847, column: 8, scope: !9713)
!9722 = !DILocation(line: 847, column: 12, scope: !9713)
!9723 = !DILocation(line: 847, column: 18, scope: !9713)
!9724 = !DILocation(line: 847, column: 21, scope: !9713)
!9725 = !DILocation(line: 847, column: 28, scope: !9713)
!9726 = !DILocation(line: 847, column: 26, scope: !9713)
!9727 = !DILocation(line: 846, column: 7, scope: !9714)
!9728 = !DILocation(line: 848, column: 11, scope: !9713)
!9729 = !DILocation(line: 848, column: 15, scope: !9713)
!9730 = !DILocation(line: 848, column: 21, scope: !9713)
!9731 = !DILocation(line: 848, column: 24, scope: !9713)
!9732 = !DILocation(line: 848, column: 29, scope: !9713)
!9733 = !DILocation(line: 848, column: 4, scope: !9713)
!9734 = !DILocation(line: 849, column: 2, scope: !9714)
!9735 = !DILocation(line: 845, column: 34, scope: !9707)
!9736 = !DILocation(line: 845, column: 2, scope: !9707)
!9737 = distinct !{!9737, !9711, !9738}
!9738 = !DILocation(line: 849, column: 2, scope: !9704)
!9739 = !DILocation(line: 850, column: 9, scope: !9691)
!9740 = !DILocation(line: 850, column: 13, scope: !9691)
!9741 = !DILocation(line: 850, column: 2, scope: !9691)
!9742 = !DILocation(line: 851, column: 1, scope: !9691)
!9743 = distinct !DISubprogram(name: "gpio_v2_line_config_flags_to_desc_flags", scope: !3, file: !3, line: 943, type: !9744, scopeLine: 945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!9744 = !DISubroutineType(types: !9745)
!9745 = !{null, !272, !3459}
!9746 = !DILocation(line: 235, column: 45, scope: !8211, inlinedAt: !9747)
!9747 = distinct !DILocation(line: 968, column: 2, scope: !9743)
!9748 = !DILocation(line: 235, column: 73, scope: !8211, inlinedAt: !9747)
!9749 = !DILocation(line: 236, column: 17, scope: !8211, inlinedAt: !9747)
!9750 = !DILocation(line: 235, column: 45, scope: !8211, inlinedAt: !9751)
!9751 = distinct !DILocation(line: 966, column: 2, scope: !9743)
!9752 = !DILocation(line: 235, column: 73, scope: !8211, inlinedAt: !9751)
!9753 = !DILocation(line: 236, column: 17, scope: !8211, inlinedAt: !9751)
!9754 = !DILocation(line: 235, column: 45, scope: !8211, inlinedAt: !9755)
!9755 = distinct !DILocation(line: 964, column: 2, scope: !9743)
!9756 = !DILocation(line: 235, column: 73, scope: !8211, inlinedAt: !9755)
!9757 = !DILocation(line: 236, column: 17, scope: !8211, inlinedAt: !9755)
!9758 = !DILocation(line: 235, column: 45, scope: !8211, inlinedAt: !9759)
!9759 = distinct !DILocation(line: 961, column: 2, scope: !9743)
!9760 = !DILocation(line: 235, column: 73, scope: !8211, inlinedAt: !9759)
!9761 = !DILocation(line: 236, column: 17, scope: !8211, inlinedAt: !9759)
!9762 = !DILocation(line: 235, column: 45, scope: !8211, inlinedAt: !9763)
!9763 = distinct !DILocation(line: 959, column: 2, scope: !9743)
!9764 = !DILocation(line: 235, column: 73, scope: !8211, inlinedAt: !9763)
!9765 = !DILocation(line: 236, column: 17, scope: !8211, inlinedAt: !9763)
!9766 = !DILocation(line: 235, column: 45, scope: !8211, inlinedAt: !9767)
!9767 = distinct !DILocation(line: 956, column: 2, scope: !9743)
!9768 = !DILocation(line: 235, column: 73, scope: !8211, inlinedAt: !9767)
!9769 = !DILocation(line: 236, column: 17, scope: !8211, inlinedAt: !9767)
!9770 = !DILocation(line: 235, column: 45, scope: !8211, inlinedAt: !9771)
!9771 = distinct !DILocation(line: 954, column: 2, scope: !9743)
!9772 = !DILocation(line: 235, column: 73, scope: !8211, inlinedAt: !9771)
!9773 = !DILocation(line: 236, column: 17, scope: !8211, inlinedAt: !9771)
!9774 = !DILocation(line: 235, column: 45, scope: !8211, inlinedAt: !9775)
!9775 = distinct !DILocation(line: 946, column: 2, scope: !9743)
!9776 = !DILocation(line: 235, column: 73, scope: !8211, inlinedAt: !9775)
!9777 = !DILocation(line: 236, column: 17, scope: !8211, inlinedAt: !9775)
!9778 = !DILocalVariable(name: "flags", arg: 1, scope: !9743, file: !3, line: 943, type: !272)
!9779 = !DILocation(line: 943, column: 57, scope: !9743)
!9780 = !DILocalVariable(name: "flagsp", arg: 2, scope: !9743, file: !3, line: 944, type: !3459)
!9781 = !DILocation(line: 944, column: 26, scope: !9743)
!9782 = !DILocation(line: 946, column: 30, scope: !9743)
!9783 = !DILocation(line: 947, column: 6, scope: !9743)
!9784 = !DILocation(line: 947, column: 12, scope: !9743)
!9785 = !DILocation(line: 238, column: 6, scope: !8249, inlinedAt: !9775)
!9786 = !DILocation(line: 238, column: 6, scope: !8211, inlinedAt: !9775)
!9787 = !DILocation(line: 239, column: 11, scope: !8249, inlinedAt: !9775)
!9788 = !DILocation(line: 239, column: 15, scope: !8249, inlinedAt: !9775)
!9789 = !DILocation(line: 239, column: 3, scope: !8249, inlinedAt: !9775)
!9790 = !DILocation(line: 241, column: 13, scope: !8249, inlinedAt: !9775)
!9791 = !DILocation(line: 241, column: 17, scope: !8249, inlinedAt: !9775)
!9792 = !DILocation(line: 241, column: 3, scope: !8249, inlinedAt: !9775)
!9793 = !DILocation(line: 949, column: 6, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !9743, file: !3, line: 949, column: 6)
!9795 = !DILocation(line: 949, column: 12, scope: !9794)
!9796 = !DILocation(line: 949, column: 6, scope: !9743)
!9797 = !DILocation(line: 950, column: 24, scope: !9794)
!9798 = !DILocation(line: 950, column: 3, scope: !9794)
!9799 = !DILocation(line: 951, column: 11, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9794, file: !3, line: 951, column: 11)
!9801 = !DILocation(line: 951, column: 17, scope: !9800)
!9802 = !DILocation(line: 951, column: 11, scope: !9794)
!9803 = !DILocation(line: 952, column: 26, scope: !9800)
!9804 = !DILocation(line: 952, column: 3, scope: !9800)
!9805 = !DILocation(line: 954, column: 31, scope: !9743)
!9806 = !DILocation(line: 955, column: 6, scope: !9743)
!9807 = !DILocation(line: 955, column: 12, scope: !9743)
!9808 = !DILocation(line: 238, column: 6, scope: !8249, inlinedAt: !9771)
!9809 = !DILocation(line: 238, column: 6, scope: !8211, inlinedAt: !9771)
!9810 = !DILocation(line: 239, column: 11, scope: !8249, inlinedAt: !9771)
!9811 = !DILocation(line: 239, column: 15, scope: !8249, inlinedAt: !9771)
!9812 = !DILocation(line: 239, column: 3, scope: !8249, inlinedAt: !9771)
!9813 = !DILocation(line: 241, column: 13, scope: !8249, inlinedAt: !9771)
!9814 = !DILocation(line: 241, column: 17, scope: !8249, inlinedAt: !9771)
!9815 = !DILocation(line: 241, column: 3, scope: !8249, inlinedAt: !9771)
!9816 = !DILocation(line: 956, column: 32, scope: !9743)
!9817 = !DILocation(line: 957, column: 6, scope: !9743)
!9818 = !DILocation(line: 957, column: 12, scope: !9743)
!9819 = !DILocation(line: 238, column: 6, scope: !8249, inlinedAt: !9767)
!9820 = !DILocation(line: 238, column: 6, scope: !8211, inlinedAt: !9767)
!9821 = !DILocation(line: 239, column: 11, scope: !8249, inlinedAt: !9767)
!9822 = !DILocation(line: 239, column: 15, scope: !8249, inlinedAt: !9767)
!9823 = !DILocation(line: 239, column: 3, scope: !8249, inlinedAt: !9767)
!9824 = !DILocation(line: 241, column: 13, scope: !8249, inlinedAt: !9767)
!9825 = !DILocation(line: 241, column: 17, scope: !8249, inlinedAt: !9767)
!9826 = !DILocation(line: 241, column: 3, scope: !8249, inlinedAt: !9767)
!9827 = !DILocation(line: 959, column: 30, scope: !9743)
!9828 = !DILocation(line: 960, column: 6, scope: !9743)
!9829 = !DILocation(line: 960, column: 12, scope: !9743)
!9830 = !DILocation(line: 238, column: 6, scope: !8249, inlinedAt: !9763)
!9831 = !DILocation(line: 238, column: 6, scope: !8211, inlinedAt: !9763)
!9832 = !DILocation(line: 239, column: 11, scope: !8249, inlinedAt: !9763)
!9833 = !DILocation(line: 239, column: 15, scope: !8249, inlinedAt: !9763)
!9834 = !DILocation(line: 239, column: 3, scope: !8249, inlinedAt: !9763)
!9835 = !DILocation(line: 241, column: 13, scope: !8249, inlinedAt: !9763)
!9836 = !DILocation(line: 241, column: 17, scope: !8249, inlinedAt: !9763)
!9837 = !DILocation(line: 241, column: 3, scope: !8249, inlinedAt: !9763)
!9838 = !DILocation(line: 961, column: 31, scope: !9743)
!9839 = !DILocation(line: 962, column: 6, scope: !9743)
!9840 = !DILocation(line: 962, column: 12, scope: !9743)
!9841 = !DILocation(line: 238, column: 6, scope: !8249, inlinedAt: !9759)
!9842 = !DILocation(line: 238, column: 6, scope: !8211, inlinedAt: !9759)
!9843 = !DILocation(line: 239, column: 11, scope: !8249, inlinedAt: !9759)
!9844 = !DILocation(line: 239, column: 15, scope: !8249, inlinedAt: !9759)
!9845 = !DILocation(line: 239, column: 3, scope: !8249, inlinedAt: !9759)
!9846 = !DILocation(line: 241, column: 13, scope: !8249, inlinedAt: !9759)
!9847 = !DILocation(line: 241, column: 17, scope: !8249, inlinedAt: !9759)
!9848 = !DILocation(line: 241, column: 3, scope: !8249, inlinedAt: !9759)
!9849 = !DILocation(line: 964, column: 27, scope: !9743)
!9850 = !DILocation(line: 965, column: 6, scope: !9743)
!9851 = !DILocation(line: 965, column: 12, scope: !9743)
!9852 = !DILocation(line: 238, column: 6, scope: !8249, inlinedAt: !9755)
!9853 = !DILocation(line: 238, column: 6, scope: !8211, inlinedAt: !9755)
!9854 = !DILocation(line: 239, column: 11, scope: !8249, inlinedAt: !9755)
!9855 = !DILocation(line: 239, column: 15, scope: !8249, inlinedAt: !9755)
!9856 = !DILocation(line: 239, column: 3, scope: !8249, inlinedAt: !9755)
!9857 = !DILocation(line: 241, column: 13, scope: !8249, inlinedAt: !9755)
!9858 = !DILocation(line: 241, column: 17, scope: !8249, inlinedAt: !9755)
!9859 = !DILocation(line: 241, column: 3, scope: !8249, inlinedAt: !9755)
!9860 = !DILocation(line: 966, column: 29, scope: !9743)
!9861 = !DILocation(line: 967, column: 6, scope: !9743)
!9862 = !DILocation(line: 967, column: 12, scope: !9743)
!9863 = !DILocation(line: 238, column: 6, scope: !8249, inlinedAt: !9751)
!9864 = !DILocation(line: 238, column: 6, scope: !8211, inlinedAt: !9751)
!9865 = !DILocation(line: 239, column: 11, scope: !8249, inlinedAt: !9751)
!9866 = !DILocation(line: 239, column: 15, scope: !8249, inlinedAt: !9751)
!9867 = !DILocation(line: 239, column: 3, scope: !8249, inlinedAt: !9751)
!9868 = !DILocation(line: 241, column: 13, scope: !8249, inlinedAt: !9751)
!9869 = !DILocation(line: 241, column: 17, scope: !8249, inlinedAt: !9751)
!9870 = !DILocation(line: 241, column: 3, scope: !8249, inlinedAt: !9751)
!9871 = !DILocation(line: 968, column: 32, scope: !9743)
!9872 = !DILocation(line: 969, column: 6, scope: !9743)
!9873 = !DILocation(line: 969, column: 12, scope: !9743)
!9874 = !DILocation(line: 238, column: 6, scope: !8249, inlinedAt: !9747)
!9875 = !DILocation(line: 238, column: 6, scope: !8211, inlinedAt: !9747)
!9876 = !DILocation(line: 239, column: 11, scope: !8249, inlinedAt: !9747)
!9877 = !DILocation(line: 239, column: 15, scope: !8249, inlinedAt: !9747)
!9878 = !DILocation(line: 239, column: 3, scope: !8249, inlinedAt: !9747)
!9879 = !DILocation(line: 241, column: 13, scope: !8249, inlinedAt: !9747)
!9880 = !DILocation(line: 241, column: 17, scope: !8249, inlinedAt: !9747)
!9881 = !DILocation(line: 241, column: 3, scope: !8249, inlinedAt: !9747)
!9882 = !DILocation(line: 970, column: 1, scope: !9743)
!9883 = distinct !DISubprogram(name: "gpio_v2_line_config_output_value", scope: !3, file: !3, line: 853, type: !9424, scopeLine: 855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!9884 = !DILocalVariable(name: "lc", arg: 1, scope: !9883, file: !3, line: 853, type: !7315)
!9885 = !DILocation(line: 853, column: 73, scope: !9883)
!9886 = !DILocalVariable(name: "line_idx", arg: 2, scope: !9883, file: !3, line: 854, type: !7)
!9887 = !DILocation(line: 854, column: 23, scope: !9883)
!9888 = !DILocalVariable(name: "i", scope: !9883, file: !3, line: 856, type: !7)
!9889 = !DILocation(line: 856, column: 15, scope: !9883)
!9890 = !DILocalVariable(name: "mask", scope: !9883, file: !3, line: 857, type: !272)
!9891 = !DILocation(line: 857, column: 6, scope: !9883)
!9892 = !DILocation(line: 857, column: 13, scope: !9883)
!9893 = !DILocation(line: 859, column: 9, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9883, file: !3, line: 859, column: 2)
!9895 = !DILocation(line: 859, column: 7, scope: !9894)
!9896 = !DILocation(line: 859, column: 14, scope: !9897)
!9897 = distinct !DILexicalBlock(scope: !9894, file: !3, line: 859, column: 2)
!9898 = !DILocation(line: 859, column: 18, scope: !9897)
!9899 = !DILocation(line: 859, column: 22, scope: !9897)
!9900 = !DILocation(line: 859, column: 16, scope: !9897)
!9901 = !DILocation(line: 859, column: 2, scope: !9894)
!9902 = !DILocation(line: 860, column: 8, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9904, file: !3, line: 860, column: 7)
!9904 = distinct !DILexicalBlock(scope: !9897, file: !3, line: 859, column: 38)
!9905 = !DILocation(line: 860, column: 12, scope: !9903)
!9906 = !DILocation(line: 860, column: 18, scope: !9903)
!9907 = !DILocation(line: 860, column: 21, scope: !9903)
!9908 = !DILocation(line: 860, column: 26, scope: !9903)
!9909 = !DILocation(line: 860, column: 29, scope: !9903)
!9910 = !DILocation(line: 860, column: 68, scope: !9903)
!9911 = !DILocation(line: 861, column: 8, scope: !9903)
!9912 = !DILocation(line: 861, column: 12, scope: !9903)
!9913 = !DILocation(line: 861, column: 18, scope: !9903)
!9914 = !DILocation(line: 861, column: 21, scope: !9903)
!9915 = !DILocation(line: 861, column: 28, scope: !9903)
!9916 = !DILocation(line: 861, column: 26, scope: !9903)
!9917 = !DILocation(line: 860, column: 7, scope: !9904)
!9918 = !DILocation(line: 862, column: 14, scope: !9903)
!9919 = !DILocation(line: 862, column: 18, scope: !9903)
!9920 = !DILocation(line: 862, column: 24, scope: !9903)
!9921 = !DILocation(line: 862, column: 27, scope: !9903)
!9922 = !DILocation(line: 862, column: 32, scope: !9903)
!9923 = !DILocation(line: 862, column: 41, scope: !9903)
!9924 = !DILocation(line: 862, column: 39, scope: !9903)
!9925 = !DILocation(line: 862, column: 12, scope: !9903)
!9926 = !DILocation(line: 862, column: 11, scope: !9903)
!9927 = !DILocation(line: 862, column: 4, scope: !9903)
!9928 = !DILocation(line: 863, column: 2, scope: !9904)
!9929 = !DILocation(line: 859, column: 34, scope: !9897)
!9930 = !DILocation(line: 859, column: 2, scope: !9897)
!9931 = distinct !{!9931, !9901, !9932}
!9932 = !DILocation(line: 863, column: 2, scope: !9894)
!9933 = !DILocation(line: 864, column: 2, scope: !9883)
!9934 = !DILocation(line: 865, column: 1, scope: !9883)
!9935 = distinct !DISubprogram(name: "edge_detector_setup", scope: !3, file: !3, line: 762, type: !9936, scopeLine: 766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!9936 = !DISubroutineType(types: !9937)
!9937 = !{!236, !3467, !7315, !7, !272}
!9938 = !DILocalVariable(name: "line", arg: 1, scope: !9935, file: !3, line: 762, type: !3467)
!9939 = !DILocation(line: 762, column: 45, scope: !9935)
!9940 = !DILocalVariable(name: "lc", arg: 2, scope: !9935, file: !3, line: 763, type: !7315)
!9941 = !DILocation(line: 763, column: 39, scope: !9935)
!9942 = !DILocalVariable(name: "line_idx", arg: 3, scope: !9935, file: !3, line: 764, type: !7)
!9943 = !DILocation(line: 764, column: 24, scope: !9935)
!9944 = !DILocalVariable(name: "eflags", arg: 4, scope: !9935, file: !3, line: 765, type: !272)
!9945 = !DILocation(line: 765, column: 15, scope: !9935)
!9946 = !DILocalVariable(name: "debounce_period_us", scope: !9935, file: !3, line: 767, type: !217)
!9947 = !DILocation(line: 767, column: 6, scope: !9935)
!9948 = !DILocalVariable(name: "irqflags", scope: !9935, file: !3, line: 768, type: !215)
!9949 = !DILocation(line: 768, column: 16, scope: !9935)
!9950 = !DILocalVariable(name: "irq", scope: !9935, file: !3, line: 769, type: !236)
!9951 = !DILocation(line: 769, column: 6, scope: !9935)
!9952 = !DILocalVariable(name: "ret", scope: !9935, file: !3, line: 769, type: !236)
!9953 = !DILocation(line: 769, column: 11, scope: !9935)
!9954 = !DILocation(line: 771, column: 6, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9935, file: !3, line: 771, column: 6)
!9956 = !DILocation(line: 771, column: 13, scope: !9955)
!9957 = !DILocation(line: 771, column: 17, scope: !9955)
!9958 = !DILocation(line: 771, column: 6, scope: !9935)
!9959 = !DILocalVariable(name: "__tmp", scope: !9960, file: !3, line: 772, type: !9962)
!9960 = distinct !DILexicalBlock(scope: !9961, file: !3, line: 772, column: 9)
!9961 = distinct !DILexicalBlock(scope: !9955, file: !3, line: 771, column: 56)
!9962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4426, size: 64)
!9963 = !DILocation(line: 772, column: 9, scope: !9960)
!9964 = !DILocalVariable(name: "__kfifo", scope: !9960, file: !3, line: 772, type: !4856)
!9965 = !DILocation(line: 772, column: 9, scope: !9961)
!9966 = !DILocation(line: 772, column: 7, scope: !9961)
!9967 = !DILocation(line: 774, column: 7, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9961, file: !3, line: 774, column: 7)
!9969 = !DILocation(line: 774, column: 7, scope: !9961)
!9970 = !DILocation(line: 775, column: 11, scope: !9968)
!9971 = !DILocation(line: 775, column: 4, scope: !9968)
!9972 = !DILocation(line: 776, column: 2, scope: !9961)
!9973 = !DILocation(line: 777, column: 17, scope: !9935)
!9974 = !DILocation(line: 777, column: 2, scope: !9935)
!9975 = !DILocation(line: 777, column: 8, scope: !9935)
!9976 = !DILocation(line: 777, column: 15, scope: !9935)
!9977 = !DILocation(line: 778, column: 36, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9935, file: !3, line: 778, column: 6)
!9979 = !DILocation(line: 778, column: 40, scope: !9978)
!9980 = !DILocation(line: 778, column: 6, scope: !9978)
!9981 = !DILocation(line: 778, column: 6, scope: !9935)
!9982 = !DILocation(line: 779, column: 60, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9978, file: !3, line: 778, column: 51)
!9984 = !DILocation(line: 779, column: 64, scope: !9983)
!9985 = !DILocation(line: 779, column: 24, scope: !9983)
!9986 = !DILocation(line: 779, column: 22, scope: !9983)
!9987 = !DILocation(line: 780, column: 24, scope: !9983)
!9988 = !DILocation(line: 780, column: 30, scope: !9983)
!9989 = !DILocation(line: 780, column: 9, scope: !9983)
!9990 = !DILocation(line: 780, column: 7, scope: !9983)
!9991 = !DILocation(line: 781, column: 7, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9983, file: !3, line: 781, column: 7)
!9993 = !DILocation(line: 781, column: 7, scope: !9983)
!9994 = !DILocation(line: 782, column: 11, scope: !9992)
!9995 = !DILocation(line: 782, column: 4, scope: !9992)
!9996 = !DILocation(line: 783, column: 3, scope: !9983)
!9997 = !DILocation(line: 783, column: 3, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9983, file: !3, line: 783, column: 3)
!9999 = !DILocation(line: 783, column: 3, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 783, column: 3)
!10001 = !DILocation(line: 783, column: 3, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 783, column: 3)
!10003 = !DILocation(line: 784, column: 2, scope: !9983)
!10004 = !DILocation(line: 787, column: 7, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !9935, file: !3, line: 787, column: 6)
!10006 = !DILocation(line: 787, column: 14, scope: !10005)
!10007 = !DILocation(line: 787, column: 17, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 787, column: 17)
!10009 = !DILocation(line: 787, column: 17, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10008, file: !3, line: 787, column: 17)
!10011 = !DILocation(line: 787, column: 17, scope: !10005)
!10012 = !DILocation(line: 787, column: 6, scope: !9935)
!10013 = !DILocation(line: 788, column: 3, scope: !10005)
!10014 = !DILocation(line: 790, column: 21, scope: !9935)
!10015 = !DILocation(line: 790, column: 27, scope: !9935)
!10016 = !DILocation(line: 790, column: 8, scope: !9935)
!10017 = !DILocation(line: 790, column: 6, scope: !9935)
!10018 = !DILocation(line: 791, column: 6, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !9935, file: !3, line: 791, column: 6)
!10020 = !DILocation(line: 791, column: 10, scope: !10019)
!10021 = !DILocation(line: 791, column: 6, scope: !9935)
!10022 = !DILocation(line: 792, column: 3, scope: !10019)
!10023 = !DILocation(line: 794, column: 6, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !9935, file: !3, line: 794, column: 6)
!10025 = !DILocation(line: 794, column: 13, scope: !10024)
!10026 = !DILocation(line: 794, column: 6, scope: !9935)
!10027 = !DILocation(line: 795, column: 42, scope: !10024)
!10028 = !DILocation(line: 795, column: 48, scope: !10024)
!10029 = !DILocation(line: 795, column: 54, scope: !10024)
!10030 = !DILocation(line: 795, column: 15, scope: !10024)
!10031 = !DILocation(line: 795, column: 12, scope: !10024)
!10032 = !DILocation(line: 795, column: 3, scope: !10024)
!10033 = !DILocation(line: 797, column: 6, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !9935, file: !3, line: 797, column: 6)
!10035 = !DILocation(line: 797, column: 13, scope: !10034)
!10036 = !DILocation(line: 797, column: 6, scope: !9935)
!10037 = !DILocation(line: 798, column: 42, scope: !10034)
!10038 = !DILocation(line: 798, column: 48, scope: !10034)
!10039 = !DILocation(line: 798, column: 54, scope: !10034)
!10040 = !DILocation(line: 798, column: 15, scope: !10034)
!10041 = !DILocation(line: 798, column: 12, scope: !10034)
!10042 = !DILocation(line: 798, column: 3, scope: !10034)
!10043 = !DILocation(line: 800, column: 11, scope: !9935)
!10044 = !DILocation(line: 803, column: 29, scope: !9935)
!10045 = !DILocation(line: 804, column: 8, scope: !9935)
!10046 = !DILocation(line: 804, column: 18, scope: !9935)
!10047 = !DILocation(line: 804, column: 24, scope: !9935)
!10048 = !DILocation(line: 804, column: 29, scope: !9935)
!10049 = !DILocation(line: 804, column: 36, scope: !9935)
!10050 = !DILocation(line: 803, column: 8, scope: !9935)
!10051 = !DILocation(line: 803, column: 6, scope: !9935)
!10052 = !DILocation(line: 805, column: 6, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !9935, file: !3, line: 805, column: 6)
!10054 = !DILocation(line: 805, column: 6, scope: !9935)
!10055 = !DILocation(line: 806, column: 10, scope: !10053)
!10056 = !DILocation(line: 806, column: 3, scope: !10053)
!10057 = !DILocation(line: 808, column: 14, scope: !9935)
!10058 = !DILocation(line: 808, column: 2, scope: !9935)
!10059 = !DILocation(line: 808, column: 8, scope: !9935)
!10060 = !DILocation(line: 808, column: 12, scope: !9935)
!10061 = !DILocation(line: 809, column: 2, scope: !9935)
!10062 = !DILocation(line: 810, column: 1, scope: !9935)
!10063 = distinct !DISubprogram(name: "linereq_free", scope: !3, file: !3, line: 1253, type: !10064, scopeLine: 1254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!10064 = !DISubroutineType(types: !10065)
!10065 = !{null, !4417}
!10066 = !DILocalVariable(name: "lr", arg: 1, scope: !10063, file: !3, line: 1253, type: !4417)
!10067 = !DILocation(line: 1253, column: 42, scope: !10063)
!10068 = !DILocalVariable(name: "i", scope: !10063, file: !3, line: 1255, type: !7)
!10069 = !DILocation(line: 1255, column: 15, scope: !10063)
!10070 = !DILocation(line: 1257, column: 9, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10063, file: !3, line: 1257, column: 2)
!10072 = !DILocation(line: 1257, column: 7, scope: !10071)
!10073 = !DILocation(line: 1257, column: 14, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !10071, file: !3, line: 1257, column: 2)
!10075 = !DILocation(line: 1257, column: 18, scope: !10074)
!10076 = !DILocation(line: 1257, column: 22, scope: !10074)
!10077 = !DILocation(line: 1257, column: 16, scope: !10074)
!10078 = !DILocation(line: 1257, column: 2, scope: !10071)
!10079 = !DILocation(line: 1258, column: 23, scope: !10080)
!10080 = distinct !DILexicalBlock(scope: !10074, file: !3, line: 1257, column: 38)
!10081 = !DILocation(line: 1258, column: 27, scope: !10080)
!10082 = !DILocation(line: 1258, column: 33, scope: !10080)
!10083 = !DILocation(line: 1258, column: 3, scope: !10080)
!10084 = !DILocation(line: 1259, column: 7, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10080, file: !3, line: 1259, column: 7)
!10086 = !DILocation(line: 1259, column: 11, scope: !10085)
!10087 = !DILocation(line: 1259, column: 17, scope: !10085)
!10088 = !DILocation(line: 1259, column: 20, scope: !10085)
!10089 = !DILocation(line: 1259, column: 7, scope: !10080)
!10090 = !DILocation(line: 1260, column: 15, scope: !10085)
!10091 = !DILocation(line: 1260, column: 19, scope: !10085)
!10092 = !DILocation(line: 1260, column: 25, scope: !10085)
!10093 = !DILocation(line: 1260, column: 28, scope: !10085)
!10094 = !DILocation(line: 1260, column: 4, scope: !10085)
!10095 = !DILocation(line: 1261, column: 2, scope: !10080)
!10096 = !DILocation(line: 1257, column: 34, scope: !10074)
!10097 = !DILocation(line: 1257, column: 2, scope: !10074)
!10098 = distinct !{!10098, !10078, !10099}
!10099 = !DILocation(line: 1261, column: 2, scope: !10071)
!10100 = !DILocalVariable(name: "__tmp", scope: !10101, file: !3, line: 1262, type: !9962)
!10101 = distinct !DILexicalBlock(scope: !10063, file: !3, line: 1262, column: 2)
!10102 = !DILocation(line: 1262, column: 2, scope: !10101)
!10103 = !DILocalVariable(name: "__kfifo", scope: !10101, file: !3, line: 1262, type: !4856)
!10104 = !DILocation(line: 1262, column: 2, scope: !10105)
!10105 = distinct !DILexicalBlock(scope: !10101, file: !3, line: 1262, column: 2)
!10106 = !DILocation(line: 1263, column: 8, scope: !10063)
!10107 = !DILocation(line: 1263, column: 12, scope: !10063)
!10108 = !DILocation(line: 1263, column: 2, scope: !10063)
!10109 = !DILocation(line: 1264, column: 14, scope: !10063)
!10110 = !DILocation(line: 1264, column: 18, scope: !10063)
!10111 = !DILocation(line: 1264, column: 24, scope: !10063)
!10112 = !DILocation(line: 1264, column: 2, scope: !10063)
!10113 = !DILocation(line: 1265, column: 8, scope: !10063)
!10114 = !DILocation(line: 1265, column: 2, scope: !10063)
!10115 = !DILocation(line: 1266, column: 1, scope: !10063)
!10116 = distinct !DISubprogram(name: "gpio_v2_line_flags_validate", scope: !3, file: !3, line: 867, type: !8397, scopeLine: 868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!10117 = !DILocalVariable(name: "flags", arg: 1, scope: !10116, file: !3, line: 867, type: !272)
!10118 = !DILocation(line: 867, column: 44, scope: !10116)
!10119 = !DILocation(line: 870, column: 6, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10116, file: !3, line: 870, column: 6)
!10121 = !DILocation(line: 870, column: 12, scope: !10120)
!10122 = !DILocation(line: 870, column: 6, scope: !10116)
!10123 = !DILocation(line: 871, column: 3, scope: !10120)
!10124 = !DILocation(line: 877, column: 7, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !10116, file: !3, line: 877, column: 6)
!10126 = !DILocation(line: 877, column: 13, scope: !10125)
!10127 = !DILocation(line: 877, column: 40, scope: !10125)
!10128 = !DILocation(line: 878, column: 7, scope: !10125)
!10129 = !DILocation(line: 878, column: 13, scope: !10125)
!10130 = !DILocation(line: 877, column: 6, scope: !10116)
!10131 = !DILocation(line: 879, column: 3, scope: !10125)
!10132 = !DILocation(line: 882, column: 7, scope: !10133)
!10133 = distinct !DILexicalBlock(scope: !10116, file: !3, line: 882, column: 6)
!10134 = !DILocation(line: 882, column: 13, scope: !10133)
!10135 = !DILocation(line: 882, column: 40, scope: !10133)
!10136 = !DILocation(line: 883, column: 8, scope: !10133)
!10137 = !DILocation(line: 883, column: 14, scope: !10133)
!10138 = !DILocation(line: 882, column: 6, scope: !10116)
!10139 = !DILocation(line: 884, column: 3, scope: !10133)
!10140 = !DILocation(line: 891, column: 7, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10116, file: !3, line: 891, column: 6)
!10142 = !DILocation(line: 891, column: 13, scope: !10141)
!10143 = !DILocation(line: 891, column: 45, scope: !10141)
!10144 = !DILocation(line: 892, column: 7, scope: !10141)
!10145 = !DILocation(line: 892, column: 13, scope: !10141)
!10146 = !DILocation(line: 891, column: 6, scope: !10116)
!10147 = !DILocation(line: 893, column: 3, scope: !10141)
!10148 = !DILocation(line: 896, column: 7, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10116, file: !3, line: 896, column: 6)
!10150 = !DILocation(line: 896, column: 13, scope: !10149)
!10151 = !DILocation(line: 896, column: 41, scope: !10149)
!10152 = !DILocation(line: 897, column: 8, scope: !10149)
!10153 = !DILocation(line: 897, column: 14, scope: !10149)
!10154 = !DILocation(line: 896, column: 6, scope: !10116)
!10155 = !DILocation(line: 898, column: 3, scope: !10149)
!10156 = !DILocation(line: 901, column: 7, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10116, file: !3, line: 901, column: 6)
!10158 = !DILocation(line: 901, column: 13, scope: !10157)
!10159 = !DILocation(line: 901, column: 40, scope: !10157)
!10160 = !DILocation(line: 902, column: 8, scope: !10157)
!10161 = !DILocation(line: 902, column: 14, scope: !10157)
!10162 = !DILocation(line: 901, column: 6, scope: !10116)
!10163 = !DILocation(line: 903, column: 3, scope: !10157)
!10164 = !DILocation(line: 906, column: 8, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10116, file: !3, line: 906, column: 6)
!10166 = !DILocation(line: 906, column: 14, scope: !10165)
!10167 = !DILocation(line: 906, column: 49, scope: !10165)
!10168 = !DILocation(line: 907, column: 8, scope: !10165)
!10169 = !DILocation(line: 907, column: 14, scope: !10165)
!10170 = !DILocation(line: 908, column: 44, scope: !10165)
!10171 = !DILocation(line: 909, column: 8, scope: !10165)
!10172 = !DILocation(line: 909, column: 14, scope: !10165)
!10173 = !DILocation(line: 909, column: 50, scope: !10165)
!10174 = !DILocation(line: 910, column: 8, scope: !10165)
!10175 = !DILocation(line: 910, column: 14, scope: !10165)
!10176 = !DILocation(line: 906, column: 6, scope: !10116)
!10177 = !DILocation(line: 911, column: 3, scope: !10165)
!10178 = !DILocation(line: 913, column: 2, scope: !10116)
!10179 = !DILocation(line: 914, column: 1, scope: !10116)
!10180 = distinct !DISubprogram(name: "gpio_v2_line_config_debounced", scope: !3, file: !3, line: 721, type: !10181, scopeLine: 723, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!10181 = !DISubroutineType(types: !10182)
!10182 = !{!682, !7315, !7}
!10183 = !DILocalVariable(name: "lc", arg: 1, scope: !10180, file: !3, line: 721, type: !7315)
!10184 = !DILocation(line: 721, column: 71, scope: !10180)
!10185 = !DILocalVariable(name: "line_idx", arg: 2, scope: !10180, file: !3, line: 722, type: !7)
!10186 = !DILocation(line: 722, column: 21, scope: !10180)
!10187 = !DILocalVariable(name: "i", scope: !10180, file: !3, line: 724, type: !7)
!10188 = !DILocation(line: 724, column: 15, scope: !10180)
!10189 = !DILocalVariable(name: "mask", scope: !10180, file: !3, line: 725, type: !272)
!10190 = !DILocation(line: 725, column: 6, scope: !10180)
!10191 = !DILocation(line: 725, column: 13, scope: !10180)
!10192 = !DILocation(line: 727, column: 9, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10180, file: !3, line: 727, column: 2)
!10194 = !DILocation(line: 727, column: 7, scope: !10193)
!10195 = !DILocation(line: 727, column: 14, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !10193, file: !3, line: 727, column: 2)
!10197 = !DILocation(line: 727, column: 18, scope: !10196)
!10198 = !DILocation(line: 727, column: 22, scope: !10196)
!10199 = !DILocation(line: 727, column: 16, scope: !10196)
!10200 = !DILocation(line: 727, column: 2, scope: !10193)
!10201 = !DILocation(line: 728, column: 8, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10203, file: !3, line: 728, column: 7)
!10203 = distinct !DILexicalBlock(scope: !10196, file: !3, line: 727, column: 38)
!10204 = !DILocation(line: 728, column: 12, scope: !10202)
!10205 = !DILocation(line: 728, column: 18, scope: !10202)
!10206 = !DILocation(line: 728, column: 21, scope: !10202)
!10207 = !DILocation(line: 728, column: 26, scope: !10202)
!10208 = !DILocation(line: 728, column: 29, scope: !10202)
!10209 = !DILocation(line: 728, column: 63, scope: !10202)
!10210 = !DILocation(line: 729, column: 8, scope: !10202)
!10211 = !DILocation(line: 729, column: 12, scope: !10202)
!10212 = !DILocation(line: 729, column: 18, scope: !10202)
!10213 = !DILocation(line: 729, column: 21, scope: !10202)
!10214 = !DILocation(line: 729, column: 28, scope: !10202)
!10215 = !DILocation(line: 729, column: 26, scope: !10202)
!10216 = !DILocation(line: 728, column: 7, scope: !10203)
!10217 = !DILocation(line: 730, column: 4, scope: !10202)
!10218 = !DILocation(line: 731, column: 2, scope: !10203)
!10219 = !DILocation(line: 727, column: 34, scope: !10196)
!10220 = !DILocation(line: 727, column: 2, scope: !10196)
!10221 = distinct !{!10221, !10200, !10222}
!10222 = !DILocation(line: 731, column: 2, scope: !10193)
!10223 = !DILocation(line: 732, column: 2, scope: !10180)
!10224 = !DILocation(line: 733, column: 1, scope: !10180)
!10225 = distinct !DISubprogram(name: "__must_check_overflow", scope: !9486, file: !9486, line: 52, type: !10226, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!10226 = !DISubroutineType(types: !10227)
!10227 = !{!682, !682}
!10228 = !DILocalVariable(name: "overflow", arg: 1, scope: !10225, file: !9486, line: 52, type: !682)
!10229 = !DILocation(line: 52, column: 60, scope: !10225)
!10230 = !DILocation(line: 54, column: 9, scope: !10225)
!10231 = !DILocation(line: 54, column: 2, scope: !10225)
!10232 = distinct !DISubprogram(name: "linereq_put_event", scope: !3, file: !3, line: 514, type: !10233, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!10233 = !DISubroutineType(types: !10234)
!10234 = !{null, !4417, !4441}
!10235 = !DILocation(line: 392, column: 53, scope: !4655, inlinedAt: !10236)
!10236 = distinct !DILocation(line: 525, column: 2, scope: !10232)
!10237 = !DILocation(line: 352, column: 51, scope: !4726, inlinedAt: !10238)
!10238 = distinct !DILocation(line: 519, column: 2, scope: !10232)
!10239 = !DILocalVariable(name: "lr", arg: 1, scope: !10232, file: !3, line: 514, type: !4417)
!10240 = !DILocation(line: 514, column: 47, scope: !10232)
!10241 = !DILocalVariable(name: "le", arg: 2, scope: !10232, file: !3, line: 515, type: !4441)
!10242 = !DILocation(line: 515, column: 37, scope: !10232)
!10243 = !DILocalVariable(name: "overflow", scope: !10232, file: !3, line: 517, type: !682)
!10244 = !DILocation(line: 517, column: 7, scope: !10232)
!10245 = !DILocation(line: 519, column: 13, scope: !10232)
!10246 = !DILocation(line: 519, column: 17, scope: !10232)
!10247 = !DILocation(line: 519, column: 22, scope: !10232)
!10248 = !DILocation(line: 354, column: 2, scope: !4754, inlinedAt: !10238)
!10249 = !DILocation(line: 354, column: 2, scope: !4757, inlinedAt: !10238)
!10250 = !DILocalVariable(name: "__tmpq", scope: !10251, file: !3, line: 520, type: !9962)
!10251 = distinct !DILexicalBlock(scope: !10252, file: !3, line: 520, column: 6)
!10252 = distinct !DILexicalBlock(scope: !10232, file: !3, line: 520, column: 6)
!10253 = !DILocation(line: 520, column: 6, scope: !10251)
!10254 = !DILocalVariable(name: "__tmpl", scope: !10255, file: !3, line: 520, type: !9962)
!10255 = distinct !DILexicalBlock(scope: !10251, file: !3, line: 520, column: 6)
!10256 = !DILocation(line: 520, column: 6, scope: !10255)
!10257 = !DILocation(line: 520, column: 6, scope: !10252)
!10258 = !DILocation(line: 520, column: 6, scope: !10232)
!10259 = !DILocation(line: 521, column: 12, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10252, file: !3, line: 520, column: 34)
!10261 = !DILocalVariable(name: "__tmp", scope: !10262, file: !3, line: 522, type: !9962)
!10262 = distinct !DILexicalBlock(scope: !10260, file: !3, line: 522, column: 3)
!10263 = !DILocation(line: 522, column: 3, scope: !10262)
!10264 = !DILocalVariable(name: "__recsize", scope: !10262, file: !3, line: 522, type: !4854)
!10265 = !DILocalVariable(name: "__kfifo", scope: !10262, file: !3, line: 522, type: !4856)
!10266 = !DILocation(line: 522, column: 3, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10262, file: !3, line: 522, column: 3)
!10268 = !DILocation(line: 523, column: 2, scope: !10260)
!10269 = !DILocalVariable(name: "__tmp", scope: !10270, file: !3, line: 524, type: !9962)
!10270 = distinct !DILexicalBlock(scope: !10232, file: !3, line: 524, column: 2)
!10271 = !DILocation(line: 524, column: 2, scope: !10270)
!10272 = !DILocalVariable(name: "__buf", scope: !10270, file: !3, line: 524, type: !4452)
!10273 = !DILocalVariable(name: "__n", scope: !10270, file: !3, line: 524, type: !215)
!10274 = !DILocalVariable(name: "__recsize", scope: !10270, file: !3, line: 524, type: !4854)
!10275 = !DILocalVariable(name: "__kfifo", scope: !10270, file: !3, line: 524, type: !4856)
!10276 = !DILocation(line: 525, column: 15, scope: !10232)
!10277 = !DILocation(line: 525, column: 19, scope: !10232)
!10278 = !DILocation(line: 525, column: 24, scope: !10232)
!10279 = !DILocation(line: 394, column: 2, scope: !4770, inlinedAt: !10236)
!10280 = !DILocation(line: 394, column: 2, scope: !4773, inlinedAt: !10236)
!10281 = !DILocation(line: 526, column: 7, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10232, file: !3, line: 526, column: 6)
!10283 = !DILocation(line: 526, column: 6, scope: !10232)
!10284 = !DILocation(line: 527, column: 3, scope: !10282)
!10285 = !DILocation(line: 529, column: 3, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !10287, file: !3, line: 529, column: 3)
!10287 = distinct !DILexicalBlock(scope: !10282, file: !3, line: 529, column: 3)
!10288 = !DILocation(line: 529, column: 3, scope: !10287)
!10289 = !DILocation(line: 530, column: 1, scope: !10232)
!10290 = distinct !DISubprogram(name: "__kfifo_int_must_check_helper", scope: !4433, file: !4433, line: 169, type: !1162, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!10291 = !DILocalVariable(name: "val", arg: 1, scope: !10290, file: !4433, line: 169, type: !236)
!10292 = !DILocation(line: 169, column: 35, scope: !10290)
!10293 = !DILocation(line: 171, column: 9, scope: !10290)
!10294 = !DILocation(line: 171, column: 2, scope: !10290)
!10295 = distinct !DISubprogram(name: "gpio_v2_line_config_debounce_period", scope: !3, file: !3, line: 735, type: !10296, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!10296 = !DISubroutineType(types: !10297)
!10297 = !{!217, !7315, !7}
!10298 = !DILocalVariable(name: "lc", arg: 1, scope: !10295, file: !3, line: 735, type: !7315)
!10299 = !DILocation(line: 735, column: 76, scope: !10295)
!10300 = !DILocalVariable(name: "line_idx", arg: 2, scope: !10295, file: !3, line: 736, type: !7)
!10301 = !DILocation(line: 736, column: 26, scope: !10295)
!10302 = !DILocalVariable(name: "i", scope: !10295, file: !3, line: 738, type: !7)
!10303 = !DILocation(line: 738, column: 15, scope: !10295)
!10304 = !DILocalVariable(name: "mask", scope: !10295, file: !3, line: 739, type: !272)
!10305 = !DILocation(line: 739, column: 6, scope: !10295)
!10306 = !DILocation(line: 739, column: 13, scope: !10295)
!10307 = !DILocation(line: 741, column: 9, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10295, file: !3, line: 741, column: 2)
!10309 = !DILocation(line: 741, column: 7, scope: !10308)
!10310 = !DILocation(line: 741, column: 14, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !10308, file: !3, line: 741, column: 2)
!10312 = !DILocation(line: 741, column: 18, scope: !10311)
!10313 = !DILocation(line: 741, column: 22, scope: !10311)
!10314 = !DILocation(line: 741, column: 16, scope: !10311)
!10315 = !DILocation(line: 741, column: 2, scope: !10308)
!10316 = !DILocation(line: 742, column: 8, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 742, column: 7)
!10318 = distinct !DILexicalBlock(scope: !10311, file: !3, line: 741, column: 38)
!10319 = !DILocation(line: 742, column: 12, scope: !10317)
!10320 = !DILocation(line: 742, column: 18, scope: !10317)
!10321 = !DILocation(line: 742, column: 21, scope: !10317)
!10322 = !DILocation(line: 742, column: 26, scope: !10317)
!10323 = !DILocation(line: 742, column: 29, scope: !10317)
!10324 = !DILocation(line: 742, column: 63, scope: !10317)
!10325 = !DILocation(line: 743, column: 8, scope: !10317)
!10326 = !DILocation(line: 743, column: 12, scope: !10317)
!10327 = !DILocation(line: 743, column: 18, scope: !10317)
!10328 = !DILocation(line: 743, column: 21, scope: !10317)
!10329 = !DILocation(line: 743, column: 28, scope: !10317)
!10330 = !DILocation(line: 743, column: 26, scope: !10317)
!10331 = !DILocation(line: 742, column: 7, scope: !10318)
!10332 = !DILocation(line: 744, column: 11, scope: !10317)
!10333 = !DILocation(line: 744, column: 15, scope: !10317)
!10334 = !DILocation(line: 744, column: 21, scope: !10317)
!10335 = !DILocation(line: 744, column: 24, scope: !10317)
!10336 = !DILocation(line: 744, column: 29, scope: !10317)
!10337 = !DILocation(line: 744, column: 4, scope: !10317)
!10338 = !DILocation(line: 745, column: 2, scope: !10318)
!10339 = !DILocation(line: 741, column: 34, scope: !10311)
!10340 = !DILocation(line: 741, column: 2, scope: !10311)
!10341 = distinct !{!10341, !10315, !10342}
!10342 = !DILocation(line: 745, column: 2, scope: !10308)
!10343 = !DILocation(line: 746, column: 2, scope: !10295)
!10344 = !DILocation(line: 747, column: 1, scope: !10295)
!10345 = distinct !DISubprogram(name: "debounce_setup", scope: !3, file: !3, line: 683, type: !10346, scopeLine: 685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!10346 = !DISubroutineType(types: !10347)
!10347 = !{!236, !3467, !7}
!10348 = !DILocalVariable(name: "line", arg: 1, scope: !10345, file: !3, line: 683, type: !3467)
!10349 = !DILocation(line: 683, column: 40, scope: !10345)
!10350 = !DILocalVariable(name: "debounce_period_us", arg: 2, scope: !10345, file: !3, line: 684, type: !7)
!10351 = !DILocation(line: 684, column: 19, scope: !10345)
!10352 = !DILocalVariable(name: "irqflags", scope: !10345, file: !3, line: 686, type: !215)
!10353 = !DILocation(line: 686, column: 16, scope: !10345)
!10354 = !DILocalVariable(name: "ret", scope: !10345, file: !3, line: 687, type: !236)
!10355 = !DILocation(line: 687, column: 6, scope: !10345)
!10356 = !DILocalVariable(name: "level", scope: !10345, file: !3, line: 687, type: !236)
!10357 = !DILocation(line: 687, column: 11, scope: !10345)
!10358 = !DILocalVariable(name: "irq", scope: !10345, file: !3, line: 687, type: !236)
!10359 = !DILocation(line: 687, column: 18, scope: !10345)
!10360 = !DILocation(line: 690, column: 27, scope: !10345)
!10361 = !DILocation(line: 690, column: 33, scope: !10345)
!10362 = !DILocation(line: 690, column: 39, scope: !10345)
!10363 = !DILocation(line: 690, column: 8, scope: !10345)
!10364 = !DILocation(line: 690, column: 6, scope: !10345)
!10365 = !DILocation(line: 691, column: 7, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10345, file: !3, line: 691, column: 6)
!10367 = !DILocation(line: 691, column: 6, scope: !10345)
!10368 = !DILocation(line: 692, column: 3, scope: !10369)
!10369 = distinct !DILexicalBlock(scope: !10366, file: !3, line: 691, column: 12)
!10370 = !DILocation(line: 692, column: 3, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !10369, file: !3, line: 692, column: 3)
!10372 = !DILocation(line: 692, column: 3, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 692, column: 3)
!10374 = !DILocation(line: 692, column: 3, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 692, column: 3)
!10376 = !DILocation(line: 693, column: 10, scope: !10369)
!10377 = !DILocation(line: 693, column: 3, scope: !10369)
!10378 = !DILocation(line: 695, column: 6, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10345, file: !3, line: 695, column: 6)
!10380 = !DILocation(line: 695, column: 10, scope: !10379)
!10381 = !DILocation(line: 695, column: 6, scope: !10345)
!10382 = !DILocation(line: 696, column: 10, scope: !10379)
!10383 = !DILocation(line: 696, column: 3, scope: !10379)
!10384 = !DILocation(line: 698, column: 6, scope: !10385)
!10385 = distinct !DILexicalBlock(scope: !10345, file: !3, line: 698, column: 6)
!10386 = !DILocation(line: 698, column: 6, scope: !10345)
!10387 = !DILocation(line: 700, column: 40, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10385, file: !3, line: 698, column: 26)
!10389 = !DILocation(line: 700, column: 46, scope: !10388)
!10390 = !DILocation(line: 700, column: 11, scope: !10388)
!10391 = !DILocation(line: 700, column: 9, scope: !10388)
!10392 = !DILocation(line: 701, column: 7, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10388, file: !3, line: 701, column: 7)
!10394 = !DILocation(line: 701, column: 13, scope: !10393)
!10395 = !DILocation(line: 701, column: 7, scope: !10388)
!10396 = !DILocation(line: 702, column: 11, scope: !10393)
!10397 = !DILocation(line: 702, column: 4, scope: !10393)
!10398 = !DILocation(line: 704, column: 22, scope: !10388)
!10399 = !DILocation(line: 704, column: 28, scope: !10388)
!10400 = !DILocation(line: 704, column: 9, scope: !10388)
!10401 = !DILocation(line: 704, column: 7, scope: !10388)
!10402 = !DILocation(line: 705, column: 7, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10388, file: !3, line: 705, column: 7)
!10404 = !DILocation(line: 705, column: 11, scope: !10403)
!10405 = !DILocation(line: 705, column: 7, scope: !10388)
!10406 = !DILocation(line: 706, column: 4, scope: !10403)
!10407 = !DILocation(line: 708, column: 3, scope: !10388)
!10408 = !DILocation(line: 708, column: 3, scope: !10409)
!10409 = distinct !DILexicalBlock(scope: !10388, file: !3, line: 708, column: 3)
!10410 = !DILocation(line: 708, column: 3, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10409, file: !3, line: 708, column: 3)
!10412 = !DILocation(line: 708, column: 3, scope: !10413)
!10413 = distinct !DILexicalBlock(scope: !10409, file: !3, line: 708, column: 3)
!10414 = !DILocation(line: 709, column: 12, scope: !10388)
!10415 = !DILocation(line: 710, column: 21, scope: !10388)
!10416 = !DILocation(line: 710, column: 48, scope: !10388)
!10417 = !DILocation(line: 711, column: 7, scope: !10388)
!10418 = !DILocation(line: 711, column: 13, scope: !10388)
!10419 = !DILocation(line: 711, column: 18, scope: !10388)
!10420 = !DILocation(line: 711, column: 25, scope: !10388)
!10421 = !DILocation(line: 710, column: 9, scope: !10388)
!10422 = !DILocation(line: 710, column: 7, scope: !10388)
!10423 = !DILocation(line: 712, column: 7, scope: !10424)
!10424 = distinct !DILexicalBlock(scope: !10388, file: !3, line: 712, column: 7)
!10425 = !DILocation(line: 712, column: 7, scope: !10388)
!10426 = !DILocation(line: 713, column: 11, scope: !10424)
!10427 = !DILocation(line: 713, column: 4, scope: !10424)
!10428 = !DILocation(line: 715, column: 3, scope: !10388)
!10429 = !DILocation(line: 715, column: 3, scope: !10430)
!10430 = distinct !DILexicalBlock(scope: !10388, file: !3, line: 715, column: 3)
!10431 = !DILocation(line: 715, column: 3, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10430, file: !3, line: 715, column: 3)
!10433 = !DILocation(line: 715, column: 3, scope: !10434)
!10434 = distinct !DILexicalBlock(scope: !10430, file: !3, line: 715, column: 3)
!10435 = !DILocation(line: 716, column: 15, scope: !10388)
!10436 = !DILocation(line: 716, column: 3, scope: !10388)
!10437 = !DILocation(line: 716, column: 9, scope: !10388)
!10438 = !DILocation(line: 716, column: 13, scope: !10388)
!10439 = !DILocation(line: 717, column: 2, scope: !10388)
!10440 = !DILocation(line: 718, column: 2, scope: !10345)
!10441 = !DILocation(line: 719, column: 1, scope: !10345)
!10442 = distinct !DISubprogram(name: "edge_irq_handler", scope: !3, file: !3, line: 584, type: !4122, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!10443 = !DILocation(line: 163, column: 55, scope: !9544, inlinedAt: !10444)
!10444 = distinct !DILocation(line: 286, column: 9, scope: !9549, inlinedAt: !10445)
!10445 = distinct !DILocation(line: 251, column: 9, scope: !9554, inlinedAt: !10446)
!10446 = distinct !DILocation(line: 596, column: 21, scope: !10447)
!10447 = distinct !DILexicalBlock(scope: !10442, file: !3, line: 595, column: 6)
!10448 = !DILocation(line: 163, column: 68, scope: !9544, inlinedAt: !10444)
!10449 = !DILocation(line: 165, column: 13, scope: !9559, inlinedAt: !10444)
!10450 = !DILocation(line: 284, column: 34, scope: !9549, inlinedAt: !10445)
!10451 = !DILocation(line: 99, column: 79, scope: !6965, inlinedAt: !10452)
!10452 = distinct !DILocation(line: 250, column: 2, scope: !9554, inlinedAt: !10446)
!10453 = !DILocation(line: 99, column: 89, scope: !6965, inlinedAt: !10452)
!10454 = !DILocation(line: 248, column: 29, scope: !9554, inlinedAt: !10446)
!10455 = !DILocalVariable(name: "irq", arg: 1, scope: !10442, file: !3, line: 584, type: !236)
!10456 = !DILocation(line: 584, column: 41, scope: !10442)
!10457 = !DILocalVariable(name: "p", arg: 2, scope: !10442, file: !3, line: 584, type: !224)
!10458 = !DILocation(line: 584, column: 52, scope: !10442)
!10459 = !DILocalVariable(name: "line", scope: !10442, file: !3, line: 586, type: !3467)
!10460 = !DILocation(line: 586, column: 15, scope: !10442)
!10461 = !DILocation(line: 586, column: 22, scope: !10442)
!10462 = !DILocalVariable(name: "lr", scope: !10442, file: !3, line: 587, type: !4417)
!10463 = !DILocation(line: 587, column: 18, scope: !10442)
!10464 = !DILocation(line: 587, column: 23, scope: !10442)
!10465 = !DILocation(line: 587, column: 29, scope: !10442)
!10466 = !DILocation(line: 593, column: 23, scope: !10442)
!10467 = !DILocation(line: 593, column: 2, scope: !10442)
!10468 = !DILocation(line: 593, column: 8, scope: !10442)
!10469 = !DILocation(line: 593, column: 21, scope: !10442)
!10470 = !DILocation(line: 595, column: 6, scope: !10447)
!10471 = !DILocation(line: 595, column: 10, scope: !10447)
!10472 = !DILocation(line: 595, column: 20, scope: !10447)
!10473 = !DILocation(line: 595, column: 6, scope: !10442)
!10474 = !DILocation(line: 596, column: 40, scope: !10447)
!10475 = !DILocation(line: 596, column: 44, scope: !10447)
!10476 = !DILocation(line: 250, column: 31, scope: !9554, inlinedAt: !10446)
!10477 = !DILocation(line: 101, column: 20, scope: !6965, inlinedAt: !10452)
!10478 = !DILocation(line: 101, column: 23, scope: !6965, inlinedAt: !10452)
!10479 = !DILocation(line: 101, column: 2, scope: !6965, inlinedAt: !10452)
!10480 = !DILocation(line: 102, column: 2, scope: !6965, inlinedAt: !10452)
!10481 = !DILocation(line: 251, column: 32, scope: !9554, inlinedAt: !10446)
!10482 = !DILocation(line: 286, column: 35, scope: !9549, inlinedAt: !10445)
!10483 = !DILocation(line: 165, column: 9, scope: !9544, inlinedAt: !10444)
!10484 = !DILocation(line: 165, column: 11, scope: !9544, inlinedAt: !10444)
!10485 = !DILocation(line: 596, column: 3, scope: !10447)
!10486 = !DILocation(line: 596, column: 9, scope: !10447)
!10487 = !DILocation(line: 596, column: 19, scope: !10447)
!10488 = !DILocation(line: 598, column: 2, scope: !10442)
!10489 = distinct !DISubprogram(name: "edge_irq_thread", scope: !3, file: !3, line: 532, type: !4122, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!10490 = !DILocation(line: 163, column: 55, scope: !9544, inlinedAt: !10491)
!10491 = distinct !DILocation(line: 286, column: 9, scope: !9549, inlinedAt: !10492)
!10492 = distinct !DILocation(line: 251, column: 9, scope: !9554, inlinedAt: !10493)
!10493 = distinct !DILocation(line: 551, column: 22, scope: !10494)
!10494 = distinct !DILexicalBlock(scope: !10495, file: !3, line: 550, column: 7)
!10495 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 543, column: 9)
!10496 = distinct !DILexicalBlock(scope: !10489, file: !3, line: 541, column: 6)
!10497 = !DILocation(line: 163, column: 68, scope: !9544, inlinedAt: !10491)
!10498 = !DILocation(line: 165, column: 13, scope: !9559, inlinedAt: !10491)
!10499 = !DILocation(line: 284, column: 34, scope: !9549, inlinedAt: !10492)
!10500 = !DILocation(line: 99, column: 79, scope: !6965, inlinedAt: !10501)
!10501 = distinct !DILocation(line: 250, column: 2, scope: !9554, inlinedAt: !10493)
!10502 = !DILocation(line: 99, column: 89, scope: !6965, inlinedAt: !10501)
!10503 = !DILocation(line: 248, column: 29, scope: !9554, inlinedAt: !10493)
!10504 = !DILocalVariable(name: "irq", arg: 1, scope: !10489, file: !3, line: 532, type: !236)
!10505 = !DILocation(line: 532, column: 40, scope: !10489)
!10506 = !DILocalVariable(name: "p", arg: 2, scope: !10489, file: !3, line: 532, type: !224)
!10507 = !DILocation(line: 532, column: 51, scope: !10489)
!10508 = !DILocalVariable(name: "line", scope: !10489, file: !3, line: 534, type: !3467)
!10509 = !DILocation(line: 534, column: 15, scope: !10489)
!10510 = !DILocation(line: 534, column: 22, scope: !10489)
!10511 = !DILocalVariable(name: "lr", scope: !10489, file: !3, line: 535, type: !4417)
!10512 = !DILocation(line: 535, column: 18, scope: !10489)
!10513 = !DILocation(line: 535, column: 23, scope: !10489)
!10514 = !DILocation(line: 535, column: 29, scope: !10489)
!10515 = !DILocalVariable(name: "le", scope: !10489, file: !3, line: 536, type: !4442)
!10516 = !DILocation(line: 536, column: 28, scope: !10489)
!10517 = !DILocation(line: 539, column: 2, scope: !10489)
!10518 = !DILocation(line: 541, column: 6, scope: !10496)
!10519 = !DILocation(line: 541, column: 12, scope: !10496)
!10520 = !DILocation(line: 541, column: 6, scope: !10489)
!10521 = !DILocation(line: 542, column: 21, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 541, column: 26)
!10523 = !DILocation(line: 542, column: 27, scope: !10522)
!10524 = !DILocation(line: 542, column: 6, scope: !10522)
!10525 = !DILocation(line: 542, column: 19, scope: !10522)
!10526 = !DILocation(line: 543, column: 2, scope: !10522)
!10527 = !DILocation(line: 549, column: 21, scope: !10495)
!10528 = !DILocation(line: 549, column: 6, scope: !10495)
!10529 = !DILocation(line: 549, column: 19, scope: !10495)
!10530 = !DILocation(line: 550, column: 7, scope: !10494)
!10531 = !DILocation(line: 550, column: 11, scope: !10494)
!10532 = !DILocation(line: 550, column: 21, scope: !10494)
!10533 = !DILocation(line: 550, column: 7, scope: !10495)
!10534 = !DILocation(line: 551, column: 41, scope: !10494)
!10535 = !DILocation(line: 551, column: 45, scope: !10494)
!10536 = !DILocation(line: 250, column: 31, scope: !9554, inlinedAt: !10493)
!10537 = !DILocation(line: 101, column: 20, scope: !6965, inlinedAt: !10501)
!10538 = !DILocation(line: 101, column: 23, scope: !6965, inlinedAt: !10501)
!10539 = !DILocation(line: 101, column: 2, scope: !6965, inlinedAt: !10501)
!10540 = !DILocation(line: 102, column: 2, scope: !6965, inlinedAt: !10501)
!10541 = !DILocation(line: 251, column: 32, scope: !9554, inlinedAt: !10493)
!10542 = !DILocation(line: 286, column: 35, scope: !9549, inlinedAt: !10492)
!10543 = !DILocation(line: 165, column: 9, scope: !9544, inlinedAt: !10491)
!10544 = !DILocation(line: 165, column: 11, scope: !9544, inlinedAt: !10491)
!10545 = !DILocation(line: 551, column: 4, scope: !10494)
!10546 = !DILocation(line: 551, column: 10, scope: !10494)
!10547 = !DILocation(line: 551, column: 20, scope: !10494)
!10548 = !DILocation(line: 553, column: 2, scope: !10489)
!10549 = !DILocation(line: 553, column: 8, scope: !10489)
!10550 = !DILocation(line: 553, column: 21, scope: !10489)
!10551 = !DILocation(line: 555, column: 6, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10489, file: !3, line: 555, column: 6)
!10553 = !DILocation(line: 555, column: 12, scope: !10552)
!10554 = !DILocation(line: 555, column: 19, scope: !10552)
!10555 = !DILocation(line: 555, column: 6, scope: !10489)
!10556 = !DILocalVariable(name: "level", scope: !10557, file: !3, line: 557, type: !236)
!10557 = distinct !DILexicalBlock(scope: !10552, file: !3, line: 556, column: 42)
!10558 = !DILocation(line: 557, column: 7, scope: !10557)
!10559 = !DILocation(line: 557, column: 40, scope: !10557)
!10560 = !DILocation(line: 557, column: 46, scope: !10557)
!10561 = !DILocation(line: 557, column: 15, scope: !10557)
!10562 = !DILocation(line: 559, column: 7, scope: !10563)
!10563 = distinct !DILexicalBlock(scope: !10557, file: !3, line: 559, column: 7)
!10564 = !DILocation(line: 559, column: 7, scope: !10557)
!10565 = !DILocation(line: 561, column: 7, scope: !10563)
!10566 = !DILocation(line: 561, column: 10, scope: !10563)
!10567 = !DILocation(line: 561, column: 4, scope: !10563)
!10568 = !DILocation(line: 564, column: 7, scope: !10563)
!10569 = !DILocation(line: 564, column: 10, scope: !10563)
!10570 = !DILocation(line: 565, column: 2, scope: !10557)
!10571 = !DILocation(line: 565, column: 13, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10552, file: !3, line: 565, column: 13)
!10573 = !DILocation(line: 565, column: 19, scope: !10572)
!10574 = !DILocation(line: 565, column: 26, scope: !10572)
!10575 = !DILocation(line: 565, column: 13, scope: !10552)
!10576 = !DILocation(line: 567, column: 6, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 565, column: 60)
!10578 = !DILocation(line: 567, column: 9, scope: !10577)
!10579 = !DILocation(line: 568, column: 2, scope: !10577)
!10580 = !DILocation(line: 568, column: 13, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 568, column: 13)
!10582 = !DILocation(line: 568, column: 19, scope: !10581)
!10583 = !DILocation(line: 568, column: 26, scope: !10581)
!10584 = !DILocation(line: 568, column: 13, scope: !10572)
!10585 = !DILocation(line: 570, column: 6, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10581, file: !3, line: 568, column: 61)
!10587 = !DILocation(line: 570, column: 9, scope: !10586)
!10588 = !DILocation(line: 571, column: 2, scope: !10586)
!10589 = !DILocation(line: 572, column: 3, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10581, file: !3, line: 571, column: 9)
!10591 = !DILocation(line: 574, column: 2, scope: !10489)
!10592 = !DILocation(line: 574, column: 8, scope: !10489)
!10593 = !DILocation(line: 574, column: 18, scope: !10489)
!10594 = !DILocation(line: 575, column: 18, scope: !10489)
!10595 = !DILocation(line: 575, column: 24, scope: !10489)
!10596 = !DILocation(line: 575, column: 5, scope: !10489)
!10597 = !DILocation(line: 575, column: 16, scope: !10489)
!10598 = !DILocation(line: 576, column: 14, scope: !10489)
!10599 = !DILocation(line: 576, column: 18, scope: !10489)
!10600 = !DILocation(line: 576, column: 28, scope: !10489)
!10601 = !DILocation(line: 576, column: 13, scope: !10489)
!10602 = !DILocation(line: 576, column: 39, scope: !10489)
!10603 = !DILocation(line: 576, column: 52, scope: !10489)
!10604 = !DILocation(line: 576, column: 58, scope: !10489)
!10605 = !DILocation(line: 576, column: 5, scope: !10489)
!10606 = !DILocation(line: 576, column: 11, scope: !10489)
!10607 = !DILocation(line: 577, column: 31, scope: !10489)
!10608 = !DILocation(line: 577, column: 37, scope: !10489)
!10609 = !DILocation(line: 577, column: 14, scope: !10489)
!10610 = !DILocation(line: 577, column: 5, scope: !10489)
!10611 = !DILocation(line: 577, column: 12, scope: !10489)
!10612 = !DILocation(line: 579, column: 20, scope: !10489)
!10613 = !DILocation(line: 579, column: 2, scope: !10489)
!10614 = !DILocation(line: 581, column: 2, scope: !10489)
!10615 = !DILocation(line: 582, column: 1, scope: !10489)
!10616 = distinct !DISubprogram(name: "request_irq", scope: !108, file: !108, line: 157, type: !10617, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!10617 = !DISubroutineType(types: !10618)
!10618 = !{!236, !7, !4120, !215, !637, !224}
!10619 = !DILocalVariable(name: "irq", arg: 1, scope: !10616, file: !108, line: 157, type: !7)
!10620 = !DILocation(line: 157, column: 26, scope: !10616)
!10621 = !DILocalVariable(name: "handler", arg: 2, scope: !10616, file: !108, line: 157, type: !4120)
!10622 = !DILocation(line: 157, column: 45, scope: !10616)
!10623 = !DILocalVariable(name: "flags", arg: 3, scope: !10616, file: !108, line: 157, type: !215)
!10624 = !DILocation(line: 157, column: 68, scope: !10616)
!10625 = !DILocalVariable(name: "name", arg: 4, scope: !10616, file: !108, line: 158, type: !637)
!10626 = !DILocation(line: 158, column: 18, scope: !10616)
!10627 = !DILocalVariable(name: "dev", arg: 5, scope: !10616, file: !108, line: 158, type: !224)
!10628 = !DILocation(line: 158, column: 30, scope: !10616)
!10629 = !DILocation(line: 160, column: 30, scope: !10616)
!10630 = !DILocation(line: 160, column: 35, scope: !10616)
!10631 = !DILocation(line: 160, column: 50, scope: !10616)
!10632 = !DILocation(line: 160, column: 57, scope: !10616)
!10633 = !DILocation(line: 160, column: 63, scope: !10616)
!10634 = !DILocation(line: 160, column: 9, scope: !10616)
!10635 = !DILocation(line: 160, column: 2, scope: !10616)
!10636 = distinct !DISubprogram(name: "debounce_irq_handler", scope: !3, file: !3, line: 621, type: !4122, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!10637 = !DILocalVariable(name: "u", arg: 1, scope: !10638, file: !10639, line: 410, type: !1968)
!10638 = distinct !DISubprogram(name: "usecs_to_jiffies", scope: !10639, file: !10639, line: 410, type: !10640, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!10639 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!10640 = !DISubroutineType(types: !10641)
!10641 = !{!215, !1968}
!10642 = !DILocation(line: 410, column: 74, scope: !10638, inlinedAt: !10643)
!10643 = distinct !DILocation(line: 626, column: 3, scope: !10636)
!10644 = !DILocalVariable(name: "irq", arg: 1, scope: !10636, file: !3, line: 621, type: !236)
!10645 = !DILocation(line: 621, column: 45, scope: !10636)
!10646 = !DILocalVariable(name: "p", arg: 2, scope: !10636, file: !3, line: 621, type: !224)
!10647 = !DILocation(line: 621, column: 56, scope: !10636)
!10648 = !DILocalVariable(name: "line", scope: !10636, file: !3, line: 623, type: !3467)
!10649 = !DILocation(line: 623, column: 15, scope: !10636)
!10650 = !DILocation(line: 623, column: 22, scope: !10636)
!10651 = !DILocation(line: 625, column: 19, scope: !10636)
!10652 = !DILocation(line: 625, column: 31, scope: !10636)
!10653 = !DILocation(line: 625, column: 37, scope: !10636)
!10654 = !DILocation(line: 626, column: 20, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10636, file: !3, line: 626, column: 20)
!10656 = !DILocation(line: 626, column: 20, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10655, file: !3, line: 626, column: 20)
!10658 = !DILocation(line: 412, column: 27, scope: !10659, inlinedAt: !10643)
!10659 = distinct !DILexicalBlock(scope: !10638, file: !10639, line: 412, column: 6)
!10660 = !DILocation(line: 412, column: 6, scope: !10659, inlinedAt: !10643)
!10661 = !DILocation(line: 412, column: 6, scope: !10638, inlinedAt: !10643)
!10662 = !DILocation(line: 413, column: 7, scope: !10663, inlinedAt: !10643)
!10663 = distinct !DILexicalBlock(scope: !10664, file: !10639, line: 413, column: 7)
!10664 = distinct !DILexicalBlock(scope: !10659, file: !10639, line: 412, column: 31)
!10665 = !DILocation(line: 413, column: 11, scope: !10663, inlinedAt: !10643)
!10666 = !DILocation(line: 413, column: 9, scope: !10663, inlinedAt: !10643)
!10667 = !DILocation(line: 413, column: 7, scope: !10664, inlinedAt: !10643)
!10668 = !DILocation(line: 414, column: 4, scope: !10663, inlinedAt: !10643)
!10669 = !DILocation(line: 415, column: 28, scope: !10664, inlinedAt: !10643)
!10670 = !DILocation(line: 415, column: 10, scope: !10664, inlinedAt: !10643)
!10671 = !DILocation(line: 415, column: 3, scope: !10664, inlinedAt: !10643)
!10672 = !DILocation(line: 417, column: 29, scope: !10673, inlinedAt: !10643)
!10673 = distinct !DILexicalBlock(scope: !10659, file: !10639, line: 416, column: 9)
!10674 = !DILocation(line: 417, column: 10, scope: !10673, inlinedAt: !10643)
!10675 = !DILocation(line: 417, column: 3, scope: !10673, inlinedAt: !10643)
!10676 = !DILocation(line: 419, column: 1, scope: !10638, inlinedAt: !10643)
!10677 = !DILocation(line: 625, column: 2, scope: !10636)
!10678 = !DILocation(line: 628, column: 2, scope: !10636)
!10679 = distinct !DISubprogram(name: "mod_delayed_work", scope: !165, file: !165, line: 533, type: !10680, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!10680 = !DISubroutineType(types: !10681)
!10681 = !{!682, !1782, !10682, !215}
!10682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4471, size: 64)
!10683 = !DILocalVariable(name: "wq", arg: 1, scope: !10679, file: !165, line: 533, type: !1782)
!10684 = !DILocation(line: 533, column: 62, scope: !10679)
!10685 = !DILocalVariable(name: "dwork", arg: 2, scope: !10679, file: !165, line: 534, type: !10682)
!10686 = !DILocation(line: 534, column: 30, scope: !10679)
!10687 = !DILocalVariable(name: "delay", arg: 3, scope: !10679, file: !165, line: 535, type: !215)
!10688 = !DILocation(line: 535, column: 23, scope: !10679)
!10689 = !DILocation(line: 537, column: 47, scope: !10679)
!10690 = !DILocation(line: 537, column: 51, scope: !10679)
!10691 = !DILocation(line: 537, column: 58, scope: !10679)
!10692 = !DILocation(line: 537, column: 9, scope: !10679)
!10693 = !DILocation(line: 537, column: 2, scope: !10679)
!10694 = distinct !DISubprogram(name: "_usecs_to_jiffies", scope: !10639, file: !10639, line: 376, type: !10640, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!10695 = !DILocalVariable(name: "u", arg: 1, scope: !10694, file: !10639, line: 376, type: !1968)
!10696 = !DILocation(line: 376, column: 66, scope: !10694)
!10697 = !DILocation(line: 378, column: 10, scope: !10694)
!10698 = !DILocation(line: 378, column: 12, scope: !10694)
!10699 = !DILocation(line: 378, column: 34, scope: !10694)
!10700 = !DILocation(line: 378, column: 39, scope: !10694)
!10701 = !DILocation(line: 378, column: 2, scope: !10694)
!10702 = distinct !DISubprogram(name: "linereq_read", scope: !3, file: !3, line: 1199, type: !897, scopeLine: 1203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!10703 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !10704)
!10704 = distinct !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !10705)
!10705 = distinct !DILocation(line: 1245, column: 7, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10707, file: !3, line: 1245, column: 7)
!10707 = distinct !DILexicalBlock(scope: !10702, file: !3, line: 1212, column: 5)
!10708 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !10704)
!10709 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !10704)
!10710 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !10704)
!10711 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !10704)
!10712 = !DILocation(line: 197, column: 27, scope: !4618, inlinedAt: !10705)
!10713 = !DILocation(line: 197, column: 43, scope: !4618, inlinedAt: !10705)
!10714 = !DILocation(line: 197, column: 63, scope: !4618, inlinedAt: !10705)
!10715 = !DILocation(line: 392, column: 53, scope: !4655, inlinedAt: !10716)
!10716 = distinct !DILocation(line: 1234, column: 3, scope: !10707)
!10717 = !DILocation(line: 392, column: 53, scope: !4655, inlinedAt: !10718)
!10718 = distinct !DILocation(line: 1228, column: 5, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10720, file: !3, line: 1227, column: 13)
!10720 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 1227, column: 8)
!10721 = distinct !DILexicalBlock(scope: !10722, file: !3, line: 1214, column: 36)
!10722 = distinct !DILexicalBlock(scope: !10707, file: !3, line: 1214, column: 7)
!10723 = !DILocation(line: 15, column: 9, scope: !4699, inlinedAt: !10724)
!10724 = distinct !DILocation(line: 1225, column: 10, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 1225, column: 10)
!10726 = !DILocation(line: 15, column: 9, scope: !4708, inlinedAt: !10724)
!10727 = !DILocation(line: 15, column: 9, scope: !4711, inlinedAt: !10724)
!10728 = !DILocation(line: 15, column: 9, scope: !4699, inlinedAt: !10729)
!10729 = distinct !DILocation(line: 1225, column: 10, scope: !10725)
!10730 = !DILocation(line: 15, column: 9, scope: !4708, inlinedAt: !10729)
!10731 = !DILocation(line: 15, column: 9, scope: !4711, inlinedAt: !10729)
!10732 = !DILocation(line: 392, column: 53, scope: !4655, inlinedAt: !10733)
!10733 = distinct !DILocation(line: 1221, column: 5, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10735, file: !3, line: 1220, column: 36)
!10735 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 1220, column: 8)
!10736 = !DILocation(line: 392, column: 53, scope: !4655, inlinedAt: !10737)
!10737 = distinct !DILocation(line: 1216, column: 5, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !10739, file: !3, line: 1215, column: 20)
!10739 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 1215, column: 8)
!10740 = !DILocation(line: 352, column: 51, scope: !4726, inlinedAt: !10741)
!10741 = distinct !DILocation(line: 1213, column: 3, scope: !10707)
!10742 = !DILocalVariable(name: "file", arg: 1, scope: !10702, file: !3, line: 1199, type: !894)
!10743 = !DILocation(line: 1199, column: 42, scope: !10702)
!10744 = !DILocalVariable(name: "buf", arg: 2, scope: !10702, file: !3, line: 1200, type: !663)
!10745 = !DILocation(line: 1200, column: 21, scope: !10702)
!10746 = !DILocalVariable(name: "count", arg: 3, scope: !10702, file: !3, line: 1201, type: !815)
!10747 = !DILocation(line: 1201, column: 15, scope: !10702)
!10748 = !DILocalVariable(name: "f_ps", arg: 4, scope: !10702, file: !3, line: 1202, type: !845)
!10749 = !DILocation(line: 1202, column: 16, scope: !10702)
!10750 = !DILocalVariable(name: "lr", scope: !10702, file: !3, line: 1204, type: !4417)
!10751 = !DILocation(line: 1204, column: 18, scope: !10702)
!10752 = !DILocation(line: 1204, column: 23, scope: !10702)
!10753 = !DILocation(line: 1204, column: 29, scope: !10702)
!10754 = !DILocalVariable(name: "le", scope: !10702, file: !3, line: 1205, type: !4442)
!10755 = !DILocation(line: 1205, column: 28, scope: !10702)
!10756 = !DILocalVariable(name: "bytes_read", scope: !10702, file: !3, line: 1206, type: !899)
!10757 = !DILocation(line: 1206, column: 10, scope: !10702)
!10758 = !DILocalVariable(name: "ret", scope: !10702, file: !3, line: 1207, type: !236)
!10759 = !DILocation(line: 1207, column: 6, scope: !10702)
!10760 = !DILocation(line: 1209, column: 6, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10702, file: !3, line: 1209, column: 6)
!10762 = !DILocation(line: 1209, column: 12, scope: !10761)
!10763 = !DILocation(line: 1209, column: 6, scope: !10702)
!10764 = !DILocation(line: 1210, column: 3, scope: !10761)
!10765 = !DILocation(line: 1212, column: 2, scope: !10702)
!10766 = !DILocation(line: 1213, column: 14, scope: !10707)
!10767 = !DILocation(line: 1213, column: 18, scope: !10707)
!10768 = !DILocation(line: 1213, column: 23, scope: !10707)
!10769 = !DILocation(line: 354, column: 2, scope: !4754, inlinedAt: !10741)
!10770 = !DILocation(line: 354, column: 2, scope: !4757, inlinedAt: !10741)
!10771 = !DILocalVariable(name: "__tmpq", scope: !10772, file: !3, line: 1214, type: !9962)
!10772 = distinct !DILexicalBlock(scope: !10722, file: !3, line: 1214, column: 7)
!10773 = !DILocation(line: 1214, column: 7, scope: !10772)
!10774 = !DILocation(line: 1214, column: 7, scope: !10722)
!10775 = !DILocation(line: 1214, column: 7, scope: !10707)
!10776 = !DILocation(line: 1215, column: 8, scope: !10739)
!10777 = !DILocation(line: 1215, column: 8, scope: !10721)
!10778 = !DILocation(line: 1216, column: 18, scope: !10738)
!10779 = !DILocation(line: 1216, column: 22, scope: !10738)
!10780 = !DILocation(line: 1216, column: 27, scope: !10738)
!10781 = !DILocation(line: 394, column: 2, scope: !4770, inlinedAt: !10737)
!10782 = !DILocation(line: 394, column: 2, scope: !4773, inlinedAt: !10737)
!10783 = !DILocation(line: 1217, column: 12, scope: !10738)
!10784 = !DILocation(line: 1217, column: 5, scope: !10738)
!10785 = !DILocation(line: 1220, column: 8, scope: !10735)
!10786 = !DILocation(line: 1220, column: 14, scope: !10735)
!10787 = !DILocation(line: 1220, column: 22, scope: !10735)
!10788 = !DILocation(line: 1220, column: 8, scope: !10721)
!10789 = !DILocation(line: 1221, column: 18, scope: !10734)
!10790 = !DILocation(line: 1221, column: 22, scope: !10734)
!10791 = !DILocation(line: 1221, column: 27, scope: !10734)
!10792 = !DILocation(line: 394, column: 2, scope: !4770, inlinedAt: !10733)
!10793 = !DILocation(line: 394, column: 2, scope: !4773, inlinedAt: !10733)
!10794 = !DILocation(line: 1222, column: 5, scope: !10734)
!10795 = !DILocalVariable(name: "__tmpq", scope: !10796, file: !3, line: 1225, type: !9962)
!10796 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 1225, column: 10)
!10797 = !DILocation(line: 1225, column: 10, scope: !10796)
!10798 = !DILocation(line: 1225, column: 10, scope: !10721)
!10799 = !DILocalVariable(name: "__ret", scope: !10725, file: !3, line: 1225, type: !236)
!10800 = !DILocation(line: 1225, column: 10, scope: !10725)
!10801 = !DILocalVariable(name: "__wait", scope: !10725, file: !3, line: 1225, type: !4793)
!10802 = !DILocation(line: 1225, column: 10, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10725, file: !3, line: 1225, column: 10)
!10804 = !DILocation(line: 1225, column: 10, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10803, file: !3, line: 1225, column: 10)
!10806 = !DILocalVariable(name: "__tmpq", scope: !10807, file: !3, line: 1225, type: !9962)
!10807 = distinct !DILexicalBlock(scope: !10725, file: !3, line: 1225, column: 10)
!10808 = !DILocation(line: 1225, column: 10, scope: !10807)
!10809 = distinct !{!10809, !10800, !10800}
!10810 = !DILocation(line: 1225, column: 8, scope: !10721)
!10811 = !DILocation(line: 1227, column: 8, scope: !10720)
!10812 = !DILocation(line: 1227, column: 8, scope: !10721)
!10813 = !DILocation(line: 1228, column: 18, scope: !10719)
!10814 = !DILocation(line: 1228, column: 22, scope: !10719)
!10815 = !DILocation(line: 1228, column: 27, scope: !10719)
!10816 = !DILocation(line: 394, column: 2, scope: !4770, inlinedAt: !10718)
!10817 = !DILocation(line: 394, column: 2, scope: !4773, inlinedAt: !10718)
!10818 = !DILocation(line: 1229, column: 12, scope: !10719)
!10819 = !DILocation(line: 1229, column: 5, scope: !10719)
!10820 = !DILocation(line: 1231, column: 3, scope: !10721)
!10821 = !DILocalVariable(name: "__tmp", scope: !10822, file: !3, line: 1233, type: !9962)
!10822 = distinct !DILexicalBlock(scope: !10707, file: !3, line: 1233, column: 9)
!10823 = !DILocation(line: 1233, column: 9, scope: !10822)
!10824 = !DILocalVariable(name: "__buf", scope: !10822, file: !3, line: 1233, type: !4441)
!10825 = !DILocalVariable(name: "__n", scope: !10822, file: !3, line: 1233, type: !215)
!10826 = !DILocalVariable(name: "__recsize", scope: !10822, file: !3, line: 1233, type: !4854)
!10827 = !DILocalVariable(name: "__kfifo", scope: !10822, file: !3, line: 1233, type: !4856)
!10828 = !DILocation(line: 1233, column: 9, scope: !10707)
!10829 = !DILocation(line: 1233, column: 7, scope: !10707)
!10830 = !DILocation(line: 1234, column: 16, scope: !10707)
!10831 = !DILocation(line: 1234, column: 20, scope: !10707)
!10832 = !DILocation(line: 1234, column: 25, scope: !10707)
!10833 = !DILocation(line: 394, column: 2, scope: !4770, inlinedAt: !10716)
!10834 = !DILocation(line: 394, column: 2, scope: !4773, inlinedAt: !10716)
!10835 = !DILocation(line: 1235, column: 7, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10707, file: !3, line: 1235, column: 7)
!10837 = !DILocation(line: 1235, column: 11, scope: !10836)
!10838 = !DILocation(line: 1235, column: 7, scope: !10707)
!10839 = !DILocation(line: 1241, column: 8, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10836, file: !3, line: 1235, column: 17)
!10841 = !DILocation(line: 1242, column: 4, scope: !10840)
!10842 = !DILocation(line: 1245, column: 20, scope: !10706)
!10843 = !DILocation(line: 1245, column: 26, scope: !10706)
!10844 = !DILocation(line: 1245, column: 24, scope: !10706)
!10845 = !DILocation(line: 1245, column: 38, scope: !10706)
!10846 = !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !10705)
!10847 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !10704)
!10848 = !DILocation(line: 0, scope: !4881, inlinedAt: !10704)
!10849 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !10704)
!10850 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !10704)
!10851 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !10704)
!10852 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !10704)
!10853 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !10704)
!10854 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !10704)
!10855 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !10704)
!10856 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !10704)
!10857 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !10704)
!10858 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !10704)
!10859 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !10704)
!10860 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !10704)
!10861 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !10704)
!10862 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !10704)
!10863 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !10704)
!10864 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !10704)
!10865 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !10704)
!10866 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !10704)
!10867 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !10704)
!10868 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !10704)
!10869 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !10704)
!10870 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !10704)
!10871 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !10704)
!10872 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !10704)
!10873 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !10704)
!10874 = !DILocation(line: 199, column: 6, scope: !4618, inlinedAt: !10705)
!10875 = !DILocation(line: 200, column: 21, scope: !4616, inlinedAt: !10705)
!10876 = !DILocation(line: 200, column: 25, scope: !4616, inlinedAt: !10705)
!10877 = !DILocation(line: 200, column: 31, scope: !4616, inlinedAt: !10705)
!10878 = !DILocation(line: 200, column: 7, scope: !4616, inlinedAt: !10705)
!10879 = !DILocation(line: 200, column: 5, scope: !4616, inlinedAt: !10705)
!10880 = !DILocation(line: 200, column: 3, scope: !4616, inlinedAt: !10705)
!10881 = !DILocation(line: 201, column: 9, scope: !4618, inlinedAt: !10705)
!10882 = !DILocation(line: 1245, column: 7, scope: !10706)
!10883 = !DILocation(line: 1245, column: 7, scope: !10707)
!10884 = !DILocation(line: 1246, column: 4, scope: !10706)
!10885 = !DILocation(line: 1247, column: 14, scope: !10707)
!10886 = !DILocation(line: 1248, column: 2, scope: !10707)
!10887 = !DILocation(line: 1248, column: 11, scope: !10702)
!10888 = !DILocation(line: 1248, column: 20, scope: !10702)
!10889 = !DILocation(line: 1248, column: 31, scope: !10702)
!10890 = !DILocation(line: 1248, column: 17, scope: !10702)
!10891 = distinct !{!10891, !10765, !10892}
!10892 = !DILocation(line: 1248, column: 43, scope: !10702)
!10893 = !DILocation(line: 1250, column: 9, scope: !10702)
!10894 = !DILocation(line: 1250, column: 2, scope: !10702)
!10895 = !DILocation(line: 1251, column: 1, scope: !10702)
!10896 = distinct !DISubprogram(name: "linereq_poll", scope: !3, file: !3, line: 1184, type: !994, scopeLine: 1186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!10897 = !DILocation(line: 392, column: 53, scope: !4655, inlinedAt: !10898)
!10898 = distinct !DILocation(line: 1192, column: 7, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !10900, file: !3, line: 1192, column: 7)
!10900 = distinct !DILexicalBlock(scope: !10896, file: !3, line: 1192, column: 6)
!10901 = !DILocation(line: 352, column: 51, scope: !4726, inlinedAt: !10902)
!10902 = distinct !DILocation(line: 1192, column: 7, scope: !10899)
!10903 = !DILocalVariable(name: "file", arg: 1, scope: !10896, file: !3, line: 1184, type: !894)
!10904 = !DILocation(line: 1184, column: 43, scope: !10896)
!10905 = !DILocalVariable(name: "wait", arg: 2, scope: !10896, file: !3, line: 1185, type: !998)
!10906 = !DILocation(line: 1185, column: 34, scope: !10896)
!10907 = !DILocalVariable(name: "lr", scope: !10896, file: !3, line: 1187, type: !4417)
!10908 = !DILocation(line: 1187, column: 18, scope: !10896)
!10909 = !DILocation(line: 1187, column: 23, scope: !10896)
!10910 = !DILocation(line: 1187, column: 29, scope: !10896)
!10911 = !DILocalVariable(name: "events", scope: !10896, file: !3, line: 1188, type: !996)
!10912 = !DILocation(line: 1188, column: 11, scope: !10896)
!10913 = !DILocation(line: 1190, column: 12, scope: !10896)
!10914 = !DILocation(line: 1190, column: 19, scope: !10896)
!10915 = !DILocation(line: 1190, column: 23, scope: !10896)
!10916 = !DILocation(line: 1190, column: 29, scope: !10896)
!10917 = !DILocation(line: 1190, column: 2, scope: !10896)
!10918 = !DILocalVariable(name: "__ret", scope: !10899, file: !3, line: 1192, type: !682)
!10919 = !DILocation(line: 1192, column: 7, scope: !10899)
!10920 = !DILocation(line: 354, column: 2, scope: !4754, inlinedAt: !10902)
!10921 = !DILocation(line: 354, column: 2, scope: !4757, inlinedAt: !10902)
!10922 = !DILocalVariable(name: "__tmpq", scope: !10923, file: !3, line: 1192, type: !9962)
!10923 = distinct !DILexicalBlock(scope: !10899, file: !3, line: 1192, column: 7)
!10924 = !DILocation(line: 1192, column: 7, scope: !10923)
!10925 = !DILocation(line: 394, column: 2, scope: !4770, inlinedAt: !10898)
!10926 = !DILocation(line: 394, column: 2, scope: !4773, inlinedAt: !10898)
!10927 = !DILocation(line: 1192, column: 6, scope: !10896)
!10928 = !DILocation(line: 1194, column: 10, scope: !10900)
!10929 = !DILocation(line: 1194, column: 3, scope: !10900)
!10930 = !DILocation(line: 1196, column: 9, scope: !10896)
!10931 = !DILocation(line: 1196, column: 2, scope: !10896)
!10932 = distinct !DISubprogram(name: "linereq_ioctl", scope: !3, file: !3, line: 1160, type: !1017, scopeLine: 1162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!10933 = !DILocalVariable(name: "file", arg: 1, scope: !10932, file: !3, line: 1160, type: !894)
!10934 = !DILocation(line: 1160, column: 40, scope: !10932)
!10935 = !DILocalVariable(name: "cmd", arg: 2, scope: !10932, file: !3, line: 1160, type: !7)
!10936 = !DILocation(line: 1160, column: 59, scope: !10932)
!10937 = !DILocalVariable(name: "arg", arg: 3, scope: !10932, file: !3, line: 1161, type: !215)
!10938 = !DILocation(line: 1161, column: 20, scope: !10932)
!10939 = !DILocalVariable(name: "lr", scope: !10932, file: !3, line: 1163, type: !4417)
!10940 = !DILocation(line: 1163, column: 18, scope: !10932)
!10941 = !DILocation(line: 1163, column: 23, scope: !10932)
!10942 = !DILocation(line: 1163, column: 29, scope: !10932)
!10943 = !DILocalVariable(name: "ip", scope: !10932, file: !3, line: 1164, type: !224)
!10944 = !DILocation(line: 1164, column: 15, scope: !10932)
!10945 = !DILocation(line: 1164, column: 35, scope: !10932)
!10946 = !DILocation(line: 1164, column: 20, scope: !10932)
!10947 = !DILocation(line: 1166, column: 6, scope: !10948)
!10948 = distinct !DILexicalBlock(scope: !10932, file: !3, line: 1166, column: 6)
!10949 = !DILocation(line: 1166, column: 10, scope: !10948)
!10950 = !DILocation(line: 1166, column: 6, scope: !10932)
!10951 = !DILocation(line: 1167, column: 29, scope: !10948)
!10952 = !DILocation(line: 1167, column: 33, scope: !10948)
!10953 = !DILocation(line: 1167, column: 10, scope: !10948)
!10954 = !DILocation(line: 1167, column: 3, scope: !10948)
!10955 = !DILocation(line: 1168, column: 11, scope: !10956)
!10956 = distinct !DILexicalBlock(scope: !10948, file: !3, line: 1168, column: 11)
!10957 = !DILocation(line: 1168, column: 15, scope: !10956)
!10958 = !DILocation(line: 1168, column: 11, scope: !10948)
!10959 = !DILocation(line: 1169, column: 29, scope: !10956)
!10960 = !DILocation(line: 1169, column: 33, scope: !10956)
!10961 = !DILocation(line: 1169, column: 10, scope: !10956)
!10962 = !DILocation(line: 1169, column: 3, scope: !10956)
!10963 = !DILocation(line: 1170, column: 11, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10956, file: !3, line: 1170, column: 11)
!10965 = !DILocation(line: 1170, column: 15, scope: !10964)
!10966 = !DILocation(line: 1170, column: 11, scope: !10956)
!10967 = !DILocation(line: 1171, column: 29, scope: !10964)
!10968 = !DILocation(line: 1171, column: 33, scope: !10964)
!10969 = !DILocation(line: 1171, column: 10, scope: !10964)
!10970 = !DILocation(line: 1171, column: 3, scope: !10964)
!10971 = !DILocation(line: 1173, column: 2, scope: !10932)
!10972 = !DILocation(line: 1174, column: 1, scope: !10932)
!10973 = distinct !DISubprogram(name: "linereq_release", scope: !3, file: !3, line: 1268, type: !1027, scopeLine: 1269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!10974 = !DILocalVariable(name: "inode", arg: 1, scope: !10973, file: !3, line: 1268, type: !527)
!10975 = !DILocation(line: 1268, column: 42, scope: !10973)
!10976 = !DILocalVariable(name: "file", arg: 2, scope: !10973, file: !3, line: 1268, type: !894)
!10977 = !DILocation(line: 1268, column: 62, scope: !10973)
!10978 = !DILocalVariable(name: "lr", scope: !10973, file: !3, line: 1270, type: !4417)
!10979 = !DILocation(line: 1270, column: 18, scope: !10973)
!10980 = !DILocation(line: 1270, column: 23, scope: !10973)
!10981 = !DILocation(line: 1270, column: 29, scope: !10973)
!10982 = !DILocation(line: 1272, column: 15, scope: !10973)
!10983 = !DILocation(line: 1272, column: 2, scope: !10973)
!10984 = !DILocation(line: 1273, column: 2, scope: !10973)
!10985 = distinct !DISubprogram(name: "linereq_get_values", scope: !3, file: !3, line: 972, type: !10986, scopeLine: 973, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!10986 = !DISubroutineType(types: !10987)
!10987 = !{!166, !4417, !224}
!10988 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !10989)
!10989 = distinct !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !10990)
!10990 = distinct !DILocation(line: 1027, column: 6, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10985, file: !3, line: 1027, column: 6)
!10992 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !10989)
!10993 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !10989)
!10994 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !10989)
!10995 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !10989)
!10996 = !DILocation(line: 197, column: 27, scope: !4618, inlinedAt: !10990)
!10997 = !DILocation(line: 197, column: 43, scope: !4618, inlinedAt: !10990)
!10998 = !DILocation(line: 197, column: 63, scope: !4618, inlinedAt: !10990)
!10999 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !11000)
!11000 = distinct !DILocation(line: 191, column: 6, scope: !5039, inlinedAt: !11001)
!11001 = distinct !DILocation(line: 982, column: 6, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10985, file: !3, line: 982, column: 6)
!11003 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !11000)
!11004 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !11000)
!11005 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !11000)
!11006 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !11000)
!11007 = !DILocation(line: 189, column: 22, scope: !5040, inlinedAt: !11001)
!11008 = !DILocation(line: 189, column: 45, scope: !5040, inlinedAt: !11001)
!11009 = !DILocation(line: 189, column: 65, scope: !5040, inlinedAt: !11001)
!11010 = !DILocalVariable(name: "lr", arg: 1, scope: !10985, file: !3, line: 972, type: !4417)
!11011 = !DILocation(line: 972, column: 48, scope: !10985)
!11012 = !DILocalVariable(name: "ip", arg: 2, scope: !10985, file: !3, line: 972, type: !224)
!11013 = !DILocation(line: 972, column: 65, scope: !10985)
!11014 = !DILocalVariable(name: "lv", scope: !10985, file: !3, line: 974, type: !11015)
!11015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_v2_line_values", file: !134, line: 91, size: 128, elements: !11016)
!11016 = !{!11017, !11018}
!11017 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !11015, file: !134, line: 92, baseType: !273, size: 64, align: 64)
!11018 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !11015, file: !134, line: 93, baseType: !273, size: 64, align: 64, offset: 64)
!11019 = !DILocation(line: 974, column: 29, scope: !10985)
!11020 = !DILocalVariable(name: "vals", scope: !10985, file: !3, line: 975, type: !414)
!11021 = !DILocation(line: 975, column: 2, scope: !10985)
!11022 = !DILocalVariable(name: "descs", scope: !10985, file: !3, line: 976, type: !11023)
!11023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3471, size: 64)
!11024 = !DILocation(line: 976, column: 21, scope: !10985)
!11025 = !DILocalVariable(name: "i", scope: !10985, file: !3, line: 977, type: !7)
!11026 = !DILocation(line: 977, column: 15, scope: !10985)
!11027 = !DILocalVariable(name: "didx", scope: !10985, file: !3, line: 977, type: !7)
!11028 = !DILocation(line: 977, column: 18, scope: !10985)
!11029 = !DILocalVariable(name: "num_get", scope: !10985, file: !3, line: 977, type: !7)
!11030 = !DILocation(line: 977, column: 24, scope: !10985)
!11031 = !DILocalVariable(name: "val", scope: !10985, file: !3, line: 978, type: !682)
!11032 = !DILocation(line: 978, column: 7, scope: !10985)
!11033 = !DILocalVariable(name: "ret", scope: !10985, file: !3, line: 979, type: !236)
!11034 = !DILocation(line: 979, column: 6, scope: !10985)
!11035 = !DILocation(line: 982, column: 21, scope: !11002)
!11036 = !DILocation(line: 982, column: 26, scope: !11002)
!11037 = !DILocation(line: 191, column: 6, scope: !5039, inlinedAt: !11001)
!11038 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !11000)
!11039 = !DILocation(line: 0, scope: !4881, inlinedAt: !11000)
!11040 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !11000)
!11041 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !11000)
!11042 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !11000)
!11043 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !11000)
!11044 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !11000)
!11045 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !11000)
!11046 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !11000)
!11047 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !11000)
!11048 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !11000)
!11049 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !11000)
!11050 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !11000)
!11051 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !11000)
!11052 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !11000)
!11053 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !11000)
!11054 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !11000)
!11055 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !11000)
!11056 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !11000)
!11057 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !11000)
!11058 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !11000)
!11059 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !11000)
!11060 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !11000)
!11061 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !11000)
!11062 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !11000)
!11063 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !11000)
!11064 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !11000)
!11065 = !DILocation(line: 191, column: 6, scope: !5040, inlinedAt: !11001)
!11066 = !DILocation(line: 192, column: 23, scope: !5039, inlinedAt: !11001)
!11067 = !DILocation(line: 192, column: 27, scope: !5039, inlinedAt: !11001)
!11068 = !DILocation(line: 192, column: 33, scope: !5039, inlinedAt: !11001)
!11069 = !DILocation(line: 192, column: 7, scope: !5039, inlinedAt: !11001)
!11070 = !DILocation(line: 192, column: 5, scope: !5039, inlinedAt: !11001)
!11071 = !DILocation(line: 192, column: 3, scope: !5039, inlinedAt: !11001)
!11072 = !DILocation(line: 193, column: 9, scope: !5040, inlinedAt: !11001)
!11073 = !DILocation(line: 982, column: 6, scope: !11002)
!11074 = !DILocation(line: 982, column: 6, scope: !10985)
!11075 = !DILocation(line: 983, column: 3, scope: !11002)
!11076 = !DILocation(line: 985, column: 15, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !10985, file: !3, line: 985, column: 2)
!11078 = !DILocation(line: 985, column: 22, scope: !11077)
!11079 = !DILocation(line: 985, column: 7, scope: !11077)
!11080 = !DILocation(line: 985, column: 27, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11077, file: !3, line: 985, column: 2)
!11082 = !DILocation(line: 985, column: 31, scope: !11081)
!11083 = !DILocation(line: 985, column: 35, scope: !11081)
!11084 = !DILocation(line: 985, column: 29, scope: !11081)
!11085 = !DILocation(line: 985, column: 2, scope: !11077)
!11086 = !DILocation(line: 986, column: 10, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11088, file: !3, line: 986, column: 7)
!11088 = distinct !DILexicalBlock(scope: !11081, file: !3, line: 985, column: 51)
!11089 = !DILocation(line: 986, column: 17, scope: !11087)
!11090 = !DILocation(line: 986, column: 15, scope: !11087)
!11091 = !DILocation(line: 986, column: 7, scope: !11088)
!11092 = !DILocation(line: 987, column: 11, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11087, file: !3, line: 986, column: 29)
!11094 = !DILocation(line: 988, column: 13, scope: !11093)
!11095 = !DILocation(line: 988, column: 17, scope: !11093)
!11096 = !DILocation(line: 988, column: 23, scope: !11093)
!11097 = !DILocation(line: 988, column: 26, scope: !11093)
!11098 = !DILocation(line: 988, column: 10, scope: !11093)
!11099 = !DILocation(line: 989, column: 3, scope: !11093)
!11100 = !DILocation(line: 990, column: 2, scope: !11088)
!11101 = !DILocation(line: 985, column: 47, scope: !11081)
!11102 = !DILocation(line: 985, column: 2, scope: !11081)
!11103 = distinct !{!11103, !11085, !11104}
!11104 = !DILocation(line: 990, column: 2, scope: !11077)
!11105 = !DILocation(line: 992, column: 6, scope: !11106)
!11106 = distinct !DILexicalBlock(scope: !10985, file: !3, line: 992, column: 6)
!11107 = !DILocation(line: 992, column: 14, scope: !11106)
!11108 = !DILocation(line: 992, column: 6, scope: !10985)
!11109 = !DILocation(line: 993, column: 3, scope: !11106)
!11110 = !DILocation(line: 995, column: 6, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !10985, file: !3, line: 995, column: 6)
!11112 = !DILocation(line: 995, column: 14, scope: !11111)
!11113 = !DILocation(line: 995, column: 6, scope: !10985)
!11114 = !DILocation(line: 996, column: 25, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11111, file: !3, line: 995, column: 20)
!11116 = !DILocation(line: 996, column: 11, scope: !11115)
!11117 = !DILocation(line: 996, column: 9, scope: !11115)
!11118 = !DILocation(line: 997, column: 8, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11115, file: !3, line: 997, column: 7)
!11120 = !DILocation(line: 997, column: 7, scope: !11115)
!11121 = !DILocation(line: 998, column: 4, scope: !11119)
!11122 = !DILocation(line: 999, column: 13, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !11115, file: !3, line: 999, column: 3)
!11124 = !DILocation(line: 999, column: 20, scope: !11123)
!11125 = !DILocation(line: 999, column: 8, scope: !11123)
!11126 = !DILocation(line: 999, column: 25, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !11123, file: !3, line: 999, column: 3)
!11128 = !DILocation(line: 999, column: 29, scope: !11127)
!11129 = !DILocation(line: 999, column: 33, scope: !11127)
!11130 = !DILocation(line: 999, column: 27, scope: !11127)
!11131 = !DILocation(line: 999, column: 3, scope: !11123)
!11132 = !DILocation(line: 1000, column: 11, scope: !11133)
!11133 = distinct !DILexicalBlock(scope: !11134, file: !3, line: 1000, column: 8)
!11134 = distinct !DILexicalBlock(scope: !11127, file: !3, line: 999, column: 49)
!11135 = !DILocation(line: 1000, column: 18, scope: !11133)
!11136 = !DILocation(line: 1000, column: 16, scope: !11133)
!11137 = !DILocation(line: 1000, column: 8, scope: !11134)
!11138 = !DILocation(line: 1001, column: 19, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11133, file: !3, line: 1000, column: 30)
!11140 = !DILocation(line: 1001, column: 23, scope: !11139)
!11141 = !DILocation(line: 1001, column: 29, scope: !11139)
!11142 = !DILocation(line: 1001, column: 32, scope: !11139)
!11143 = !DILocation(line: 1001, column: 5, scope: !11139)
!11144 = !DILocation(line: 1001, column: 11, scope: !11139)
!11145 = !DILocation(line: 1001, column: 17, scope: !11139)
!11146 = !DILocation(line: 1002, column: 9, scope: !11139)
!11147 = !DILocation(line: 1003, column: 4, scope: !11139)
!11148 = !DILocation(line: 1004, column: 3, scope: !11134)
!11149 = !DILocation(line: 999, column: 45, scope: !11127)
!11150 = !DILocation(line: 999, column: 3, scope: !11127)
!11151 = distinct !{!11151, !11131, !11152}
!11152 = !DILocation(line: 1004, column: 3, scope: !11123)
!11153 = !DILocation(line: 1005, column: 2, scope: !11115)
!11154 = !DILocation(line: 1006, column: 51, scope: !10985)
!11155 = !DILocation(line: 1007, column: 10, scope: !10985)
!11156 = !DILocation(line: 1007, column: 23, scope: !10985)
!11157 = !DILocation(line: 1006, column: 8, scope: !10985)
!11158 = !DILocation(line: 1006, column: 6, scope: !10985)
!11159 = !DILocation(line: 1009, column: 6, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !10985, file: !3, line: 1009, column: 6)
!11161 = !DILocation(line: 1009, column: 14, scope: !11160)
!11162 = !DILocation(line: 1009, column: 6, scope: !10985)
!11163 = !DILocation(line: 1010, column: 9, scope: !11160)
!11164 = !DILocation(line: 1010, column: 3, scope: !11160)
!11165 = !DILocation(line: 1011, column: 6, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !10985, file: !3, line: 1011, column: 6)
!11167 = !DILocation(line: 1011, column: 6, scope: !10985)
!11168 = !DILocation(line: 1012, column: 10, scope: !11166)
!11169 = !DILocation(line: 1012, column: 3, scope: !11166)
!11170 = !DILocation(line: 1014, column: 5, scope: !10985)
!11171 = !DILocation(line: 1014, column: 10, scope: !10985)
!11172 = !DILocation(line: 1015, column: 12, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !10985, file: !3, line: 1015, column: 2)
!11174 = !DILocation(line: 1015, column: 19, scope: !11173)
!11175 = !DILocation(line: 1015, column: 7, scope: !11173)
!11176 = !DILocation(line: 1015, column: 24, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11173, file: !3, line: 1015, column: 2)
!11178 = !DILocation(line: 1015, column: 28, scope: !11177)
!11179 = !DILocation(line: 1015, column: 32, scope: !11177)
!11180 = !DILocation(line: 1015, column: 26, scope: !11177)
!11181 = !DILocation(line: 1015, column: 2, scope: !11173)
!11182 = !DILocation(line: 1016, column: 10, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11184, file: !3, line: 1016, column: 7)
!11184 = distinct !DILexicalBlock(scope: !11177, file: !3, line: 1015, column: 48)
!11185 = !DILocation(line: 1016, column: 17, scope: !11183)
!11186 = !DILocation(line: 1016, column: 15, scope: !11183)
!11187 = !DILocation(line: 1016, column: 7, scope: !11184)
!11188 = !DILocation(line: 1017, column: 8, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11190, file: !3, line: 1017, column: 8)
!11190 = distinct !DILexicalBlock(scope: !11183, file: !3, line: 1016, column: 29)
!11191 = !DILocation(line: 1017, column: 12, scope: !11189)
!11192 = !DILocation(line: 1017, column: 18, scope: !11189)
!11193 = !DILocation(line: 1017, column: 21, scope: !11189)
!11194 = !DILocation(line: 1017, column: 8, scope: !11190)
!11195 = !DILocation(line: 1018, column: 28, scope: !11189)
!11196 = !DILocation(line: 1018, column: 32, scope: !11189)
!11197 = !DILocation(line: 1018, column: 38, scope: !11189)
!11198 = !DILocation(line: 1018, column: 11, scope: !11189)
!11199 = !DILocation(line: 1018, column: 9, scope: !11189)
!11200 = !DILocation(line: 1018, column: 5, scope: !11189)
!11201 = !DILocation(line: 1020, column: 20, scope: !11189)
!11202 = !DILocation(line: 1020, column: 26, scope: !11189)
!11203 = !DILocation(line: 1020, column: 11, scope: !11189)
!11204 = !DILocation(line: 1020, column: 9, scope: !11189)
!11205 = !DILocation(line: 1021, column: 8, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11190, file: !3, line: 1021, column: 8)
!11207 = !DILocation(line: 1021, column: 8, scope: !11190)
!11208 = !DILocation(line: 1022, column: 16, scope: !11206)
!11209 = !DILocation(line: 1022, column: 8, scope: !11206)
!11210 = !DILocation(line: 1022, column: 13, scope: !11206)
!11211 = !DILocation(line: 1022, column: 5, scope: !11206)
!11212 = !DILocation(line: 1023, column: 8, scope: !11190)
!11213 = !DILocation(line: 1024, column: 3, scope: !11190)
!11214 = !DILocation(line: 1025, column: 2, scope: !11184)
!11215 = !DILocation(line: 1015, column: 44, scope: !11177)
!11216 = !DILocation(line: 1015, column: 2, scope: !11177)
!11217 = distinct !{!11217, !11181, !11218}
!11218 = !DILocation(line: 1025, column: 2, scope: !11173)
!11219 = !DILocation(line: 1027, column: 19, scope: !10991)
!11220 = !DILocation(line: 1027, column: 23, scope: !10991)
!11221 = !DILocation(line: 199, column: 6, scope: !4616, inlinedAt: !10990)
!11222 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !10989)
!11223 = !DILocation(line: 0, scope: !4881, inlinedAt: !10989)
!11224 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !10989)
!11225 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !10989)
!11226 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !10989)
!11227 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !10989)
!11228 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !10989)
!11229 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !10989)
!11230 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !10989)
!11231 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !10989)
!11232 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !10989)
!11233 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !10989)
!11234 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !10989)
!11235 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !10989)
!11236 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !10989)
!11237 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !10989)
!11238 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !10989)
!11239 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !10989)
!11240 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !10989)
!11241 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !10989)
!11242 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !10989)
!11243 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !10989)
!11244 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !10989)
!11245 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !10989)
!11246 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !10989)
!11247 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !10989)
!11248 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !10989)
!11249 = !DILocation(line: 199, column: 6, scope: !4618, inlinedAt: !10990)
!11250 = !DILocation(line: 200, column: 21, scope: !4616, inlinedAt: !10990)
!11251 = !DILocation(line: 200, column: 25, scope: !4616, inlinedAt: !10990)
!11252 = !DILocation(line: 200, column: 31, scope: !4616, inlinedAt: !10990)
!11253 = !DILocation(line: 200, column: 7, scope: !4616, inlinedAt: !10990)
!11254 = !DILocation(line: 200, column: 5, scope: !4616, inlinedAt: !10990)
!11255 = !DILocation(line: 200, column: 3, scope: !4616, inlinedAt: !10990)
!11256 = !DILocation(line: 201, column: 9, scope: !4618, inlinedAt: !10990)
!11257 = !DILocation(line: 1027, column: 6, scope: !10991)
!11258 = !DILocation(line: 1027, column: 6, scope: !10985)
!11259 = !DILocation(line: 1028, column: 3, scope: !10991)
!11260 = !DILocation(line: 1030, column: 2, scope: !10985)
!11261 = !DILocation(line: 1031, column: 1, scope: !10985)
!11262 = distinct !DISubprogram(name: "linereq_set_values", scope: !3, file: !3, line: 1075, type: !10986, scopeLine: 1076, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!11263 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !11264)
!11264 = distinct !DILocation(line: 191, column: 6, scope: !5039, inlinedAt: !11265)
!11265 = distinct !DILocation(line: 1080, column: 6, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1080, column: 6)
!11267 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !11264)
!11268 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !11264)
!11269 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !11264)
!11270 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !11264)
!11271 = !DILocation(line: 189, column: 22, scope: !5040, inlinedAt: !11265)
!11272 = !DILocation(line: 189, column: 45, scope: !5040, inlinedAt: !11265)
!11273 = !DILocation(line: 189, column: 65, scope: !5040, inlinedAt: !11265)
!11274 = !DILocalVariable(name: "lr", arg: 1, scope: !11262, file: !3, line: 1075, type: !4417)
!11275 = !DILocation(line: 1075, column: 48, scope: !11262)
!11276 = !DILocalVariable(name: "ip", arg: 2, scope: !11262, file: !3, line: 1075, type: !224)
!11277 = !DILocation(line: 1075, column: 65, scope: !11262)
!11278 = !DILocalVariable(name: "lv", scope: !11262, file: !3, line: 1077, type: !11015)
!11279 = !DILocation(line: 1077, column: 29, scope: !11262)
!11280 = !DILocalVariable(name: "ret", scope: !11262, file: !3, line: 1078, type: !236)
!11281 = !DILocation(line: 1078, column: 6, scope: !11262)
!11282 = !DILocation(line: 1080, column: 21, scope: !11266)
!11283 = !DILocation(line: 1080, column: 26, scope: !11266)
!11284 = !DILocation(line: 191, column: 6, scope: !5039, inlinedAt: !11265)
!11285 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !11264)
!11286 = !DILocation(line: 0, scope: !4881, inlinedAt: !11264)
!11287 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !11264)
!11288 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !11264)
!11289 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !11264)
!11290 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !11264)
!11291 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !11264)
!11292 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !11264)
!11293 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !11264)
!11294 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !11264)
!11295 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !11264)
!11296 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !11264)
!11297 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !11264)
!11298 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !11264)
!11299 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !11264)
!11300 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !11264)
!11301 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !11264)
!11302 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !11264)
!11303 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !11264)
!11304 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !11264)
!11305 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !11264)
!11306 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !11264)
!11307 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !11264)
!11308 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !11264)
!11309 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !11264)
!11310 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !11264)
!11311 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !11264)
!11312 = !DILocation(line: 191, column: 6, scope: !5040, inlinedAt: !11265)
!11313 = !DILocation(line: 192, column: 23, scope: !5039, inlinedAt: !11265)
!11314 = !DILocation(line: 192, column: 27, scope: !5039, inlinedAt: !11265)
!11315 = !DILocation(line: 192, column: 33, scope: !5039, inlinedAt: !11265)
!11316 = !DILocation(line: 192, column: 7, scope: !5039, inlinedAt: !11265)
!11317 = !DILocation(line: 192, column: 5, scope: !5039, inlinedAt: !11265)
!11318 = !DILocation(line: 192, column: 3, scope: !5039, inlinedAt: !11265)
!11319 = !DILocation(line: 193, column: 9, scope: !5040, inlinedAt: !11265)
!11320 = !DILocation(line: 1080, column: 6, scope: !11266)
!11321 = !DILocation(line: 1080, column: 6, scope: !11262)
!11322 = !DILocation(line: 1081, column: 3, scope: !11266)
!11323 = !DILocation(line: 1083, column: 14, scope: !11262)
!11324 = !DILocation(line: 1083, column: 18, scope: !11262)
!11325 = !DILocation(line: 1083, column: 2, scope: !11262)
!11326 = !DILocation(line: 1085, column: 36, scope: !11262)
!11327 = !DILocation(line: 1085, column: 8, scope: !11262)
!11328 = !DILocation(line: 1085, column: 6, scope: !11262)
!11329 = !DILocation(line: 1087, column: 16, scope: !11262)
!11330 = !DILocation(line: 1087, column: 20, scope: !11262)
!11331 = !DILocation(line: 1087, column: 2, scope: !11262)
!11332 = !DILocation(line: 1089, column: 9, scope: !11262)
!11333 = !DILocation(line: 1089, column: 2, scope: !11262)
!11334 = !DILocation(line: 1090, column: 1, scope: !11262)
!11335 = distinct !DISubprogram(name: "linereq_set_config", scope: !3, file: !3, line: 1139, type: !10986, scopeLine: 1140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!11336 = !DILocation(line: 138, column: 29, scope: !4610, inlinedAt: !11337)
!11337 = distinct !DILocation(line: 191, column: 6, scope: !5039, inlinedAt: !11338)
!11338 = distinct !DILocation(line: 1144, column: 6, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11335, file: !3, line: 1144, column: 6)
!11340 = !DILocation(line: 138, column: 42, scope: !4610, inlinedAt: !11337)
!11341 = !DILocation(line: 138, column: 54, scope: !4610, inlinedAt: !11337)
!11342 = !DILocation(line: 140, column: 6, scope: !4610, inlinedAt: !11337)
!11343 = !DILocation(line: 150, column: 6, scope: !4633, inlinedAt: !11337)
!11344 = !DILocation(line: 189, column: 22, scope: !5040, inlinedAt: !11338)
!11345 = !DILocation(line: 189, column: 45, scope: !5040, inlinedAt: !11338)
!11346 = !DILocation(line: 189, column: 65, scope: !5040, inlinedAt: !11338)
!11347 = !DILocalVariable(name: "lr", arg: 1, scope: !11335, file: !3, line: 1139, type: !4417)
!11348 = !DILocation(line: 1139, column: 48, scope: !11335)
!11349 = !DILocalVariable(name: "ip", arg: 2, scope: !11335, file: !3, line: 1139, type: !224)
!11350 = !DILocation(line: 1139, column: 65, scope: !11335)
!11351 = !DILocalVariable(name: "lc", scope: !11335, file: !3, line: 1141, type: !7298)
!11352 = !DILocation(line: 1141, column: 29, scope: !11335)
!11353 = !DILocalVariable(name: "ret", scope: !11335, file: !3, line: 1142, type: !236)
!11354 = !DILocation(line: 1142, column: 6, scope: !11335)
!11355 = !DILocation(line: 1144, column: 21, scope: !11339)
!11356 = !DILocation(line: 1144, column: 26, scope: !11339)
!11357 = !DILocation(line: 191, column: 6, scope: !5039, inlinedAt: !11338)
!11358 = !DILocation(line: 141, column: 6, scope: !4881, inlinedAt: !11337)
!11359 = !DILocation(line: 0, scope: !4881, inlinedAt: !11337)
!11360 = !DILocation(line: 141, column: 6, scope: !4610, inlinedAt: !11337)
!11361 = !DILocation(line: 142, column: 29, scope: !4885, inlinedAt: !11337)
!11362 = !DILocation(line: 142, column: 8, scope: !4885, inlinedAt: !11337)
!11363 = !DILocation(line: 142, column: 7, scope: !4886, inlinedAt: !11337)
!11364 = !DILocation(line: 143, column: 18, scope: !4885, inlinedAt: !11337)
!11365 = !DILocation(line: 143, column: 22, scope: !4885, inlinedAt: !11337)
!11366 = !DILocation(line: 143, column: 4, scope: !4885, inlinedAt: !11337)
!11367 = !DILocation(line: 144, column: 12, scope: !4893, inlinedAt: !11337)
!11368 = !DILocation(line: 144, column: 12, scope: !4885, inlinedAt: !11337)
!11369 = !DILocation(line: 145, column: 4, scope: !4893, inlinedAt: !11337)
!11370 = !DILocation(line: 147, column: 4, scope: !4893, inlinedAt: !11337)
!11371 = !DILocation(line: 148, column: 3, scope: !4886, inlinedAt: !11337)
!11372 = !DILocation(line: 150, column: 6, scope: !4899, inlinedAt: !11337)
!11373 = !DILocation(line: 150, column: 6, scope: !4901, inlinedAt: !11337)
!11374 = !DILocation(line: 150, column: 6, scope: !4905, inlinedAt: !11337)
!11375 = !DILocation(line: 150, column: 6, scope: !4902, inlinedAt: !11337)
!11376 = !DILocation(line: 150, column: 6, scope: !4634, inlinedAt: !11337)
!11377 = !DILocation(line: 150, column: 6, scope: !4610, inlinedAt: !11337)
!11378 = !DILocation(line: 151, column: 3, scope: !4634, inlinedAt: !11337)
!11379 = !DILocation(line: 152, column: 20, scope: !4610, inlinedAt: !11337)
!11380 = !DILocation(line: 152, column: 26, scope: !4610, inlinedAt: !11337)
!11381 = !DILocation(line: 152, column: 33, scope: !4610, inlinedAt: !11337)
!11382 = !DILocation(line: 152, column: 2, scope: !4610, inlinedAt: !11337)
!11383 = !DILocation(line: 153, column: 2, scope: !4610, inlinedAt: !11337)
!11384 = !DILocation(line: 154, column: 1, scope: !4610, inlinedAt: !11337)
!11385 = !DILocation(line: 191, column: 6, scope: !5040, inlinedAt: !11338)
!11386 = !DILocation(line: 192, column: 23, scope: !5039, inlinedAt: !11338)
!11387 = !DILocation(line: 192, column: 27, scope: !5039, inlinedAt: !11338)
!11388 = !DILocation(line: 192, column: 33, scope: !5039, inlinedAt: !11338)
!11389 = !DILocation(line: 192, column: 7, scope: !5039, inlinedAt: !11338)
!11390 = !DILocation(line: 192, column: 5, scope: !5039, inlinedAt: !11338)
!11391 = !DILocation(line: 192, column: 3, scope: !5039, inlinedAt: !11338)
!11392 = !DILocation(line: 193, column: 9, scope: !5040, inlinedAt: !11338)
!11393 = !DILocation(line: 1144, column: 6, scope: !11339)
!11394 = !DILocation(line: 1144, column: 6, scope: !11335)
!11395 = !DILocation(line: 1145, column: 3, scope: !11339)
!11396 = !DILocation(line: 1147, column: 42, scope: !11335)
!11397 = !DILocation(line: 1147, column: 46, scope: !11335)
!11398 = !DILocation(line: 1147, column: 8, scope: !11335)
!11399 = !DILocation(line: 1147, column: 6, scope: !11335)
!11400 = !DILocation(line: 1148, column: 6, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11335, file: !3, line: 1148, column: 6)
!11402 = !DILocation(line: 1148, column: 6, scope: !11335)
!11403 = !DILocation(line: 1149, column: 10, scope: !11401)
!11404 = !DILocation(line: 1149, column: 3, scope: !11401)
!11405 = !DILocation(line: 1151, column: 14, scope: !11335)
!11406 = !DILocation(line: 1151, column: 18, scope: !11335)
!11407 = !DILocation(line: 1151, column: 2, scope: !11335)
!11408 = !DILocation(line: 1153, column: 36, scope: !11335)
!11409 = !DILocation(line: 1153, column: 8, scope: !11335)
!11410 = !DILocation(line: 1153, column: 6, scope: !11335)
!11411 = !DILocation(line: 1155, column: 16, scope: !11335)
!11412 = !DILocation(line: 1155, column: 20, scope: !11335)
!11413 = !DILocation(line: 1155, column: 2, scope: !11335)
!11414 = !DILocation(line: 1157, column: 9, scope: !11335)
!11415 = !DILocation(line: 1157, column: 2, scope: !11335)
!11416 = !DILocation(line: 1158, column: 1, scope: !11335)
!11417 = distinct !DISubprogram(name: "kmalloc_array", scope: !158, file: !158, line: 584, type: !11418, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!11418 = !DISubroutineType(types: !11419)
!11419 = !{!224, !815, !815, !487}
!11420 = !DILocation(line: 445, column: 72, scope: !7939, inlinedAt: !11421)
!11421 = distinct !DILocation(line: 552, column: 10, scope: !7944, inlinedAt: !11422)
!11422 = distinct !DILocation(line: 591, column: 10, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11417, file: !158, line: 590, column: 6)
!11424 = !DILocation(line: 446, column: 9, scope: !7939, inlinedAt: !11421)
!11425 = !DILocation(line: 446, column: 23, scope: !7939, inlinedAt: !11421)
!11426 = !DILocation(line: 448, column: 8, scope: !7939, inlinedAt: !11421)
!11427 = !DILocation(line: 318, column: 67, scope: !7955, inlinedAt: !11428)
!11428 = distinct !DILocation(line: 553, column: 20, scope: !7944, inlinedAt: !11422)
!11429 = !DILocation(line: 346, column: 58, scope: !7961, inlinedAt: !11430)
!11430 = distinct !DILocation(line: 547, column: 11, scope: !7944, inlinedAt: !11422)
!11431 = !DILocation(line: 472, column: 28, scope: !7967, inlinedAt: !11432)
!11432 = distinct !DILocation(line: 481, column: 9, scope: !7972, inlinedAt: !11433)
!11433 = distinct !DILocation(line: 545, column: 11, scope: !7974, inlinedAt: !11422)
!11434 = !DILocation(line: 472, column: 40, scope: !7967, inlinedAt: !11432)
!11435 = !DILocation(line: 472, column: 60, scope: !7967, inlinedAt: !11432)
!11436 = !DILocation(line: 478, column: 51, scope: !7972, inlinedAt: !11433)
!11437 = !DILocation(line: 478, column: 63, scope: !7972, inlinedAt: !11433)
!11438 = !DILocation(line: 480, column: 15, scope: !7972, inlinedAt: !11433)
!11439 = !DILocation(line: 538, column: 45, scope: !7946, inlinedAt: !11422)
!11440 = !DILocation(line: 538, column: 57, scope: !7946, inlinedAt: !11422)
!11441 = !DILocation(line: 542, column: 16, scope: !7944, inlinedAt: !11422)
!11442 = !DILocalVariable(name: "n", arg: 1, scope: !11417, file: !158, line: 584, type: !815)
!11443 = !DILocation(line: 584, column: 42, scope: !11417)
!11444 = !DILocalVariable(name: "size", arg: 2, scope: !11417, file: !158, line: 584, type: !815)
!11445 = !DILocation(line: 584, column: 52, scope: !11417)
!11446 = !DILocalVariable(name: "flags", arg: 3, scope: !11417, file: !158, line: 584, type: !487)
!11447 = !DILocation(line: 584, column: 64, scope: !11417)
!11448 = !DILocalVariable(name: "bytes", scope: !11417, file: !158, line: 586, type: !815)
!11449 = !DILocation(line: 586, column: 9, scope: !11417)
!11450 = !DILocalVariable(name: "__a", scope: !11451, file: !158, line: 588, type: !815)
!11451 = distinct !DILexicalBlock(scope: !11452, file: !158, line: 588, column: 6)
!11452 = distinct !DILexicalBlock(scope: !11417, file: !158, line: 588, column: 6)
!11453 = !DILocation(line: 588, column: 6, scope: !11451)
!11454 = !DILocalVariable(name: "__b", scope: !11451, file: !158, line: 588, type: !815)
!11455 = !DILocalVariable(name: "__d", scope: !11451, file: !158, line: 588, type: !9503)
!11456 = !DILocation(line: 588, column: 6, scope: !11452)
!11457 = !DILocation(line: 588, column: 6, scope: !11417)
!11458 = !DILocation(line: 589, column: 3, scope: !11452)
!11459 = !DILocation(line: 590, column: 27, scope: !11423)
!11460 = !DILocation(line: 590, column: 6, scope: !11423)
!11461 = !DILocation(line: 590, column: 30, scope: !11423)
!11462 = !DILocation(line: 590, column: 54, scope: !11423)
!11463 = !DILocation(line: 590, column: 33, scope: !11423)
!11464 = !DILocation(line: 590, column: 6, scope: !11417)
!11465 = !DILocation(line: 591, column: 18, scope: !11423)
!11466 = !DILocation(line: 591, column: 25, scope: !11423)
!11467 = !DILocation(line: 540, column: 27, scope: !7945, inlinedAt: !11422)
!11468 = !DILocation(line: 540, column: 6, scope: !7945, inlinedAt: !11422)
!11469 = !DILocation(line: 540, column: 6, scope: !7946, inlinedAt: !11422)
!11470 = !DILocation(line: 544, column: 7, scope: !7974, inlinedAt: !11422)
!11471 = !DILocation(line: 544, column: 12, scope: !7974, inlinedAt: !11422)
!11472 = !DILocation(line: 544, column: 7, scope: !7944, inlinedAt: !11422)
!11473 = !DILocation(line: 545, column: 25, scope: !7974, inlinedAt: !11422)
!11474 = !DILocation(line: 545, column: 31, scope: !7974, inlinedAt: !11422)
!11475 = !DILocation(line: 480, column: 33, scope: !7972, inlinedAt: !11433)
!11476 = !DILocation(line: 480, column: 23, scope: !7972, inlinedAt: !11433)
!11477 = !DILocation(line: 481, column: 29, scope: !7972, inlinedAt: !11433)
!11478 = !DILocation(line: 481, column: 35, scope: !7972, inlinedAt: !11433)
!11479 = !DILocation(line: 481, column: 42, scope: !7972, inlinedAt: !11433)
!11480 = !DILocation(line: 474, column: 23, scope: !7967, inlinedAt: !11432)
!11481 = !DILocation(line: 474, column: 29, scope: !7967, inlinedAt: !11432)
!11482 = !DILocation(line: 474, column: 36, scope: !7967, inlinedAt: !11432)
!11483 = !DILocation(line: 474, column: 9, scope: !7967, inlinedAt: !11432)
!11484 = !DILocation(line: 545, column: 4, scope: !7974, inlinedAt: !11422)
!11485 = !DILocation(line: 547, column: 25, scope: !7944, inlinedAt: !11422)
!11486 = !DILocation(line: 348, column: 7, scope: !8018, inlinedAt: !11430)
!11487 = !DILocation(line: 348, column: 6, scope: !7961, inlinedAt: !11430)
!11488 = !DILocation(line: 349, column: 3, scope: !8018, inlinedAt: !11430)
!11489 = !DILocation(line: 351, column: 6, scope: !8022, inlinedAt: !11430)
!11490 = !DILocation(line: 351, column: 11, scope: !8022, inlinedAt: !11430)
!11491 = !DILocation(line: 351, column: 6, scope: !7961, inlinedAt: !11430)
!11492 = !DILocation(line: 352, column: 3, scope: !8022, inlinedAt: !11430)
!11493 = !DILocation(line: 354, column: 32, scope: !8027, inlinedAt: !11430)
!11494 = !DILocation(line: 354, column: 37, scope: !8027, inlinedAt: !11430)
!11495 = !DILocation(line: 354, column: 42, scope: !8027, inlinedAt: !11430)
!11496 = !DILocation(line: 354, column: 45, scope: !8027, inlinedAt: !11430)
!11497 = !DILocation(line: 354, column: 50, scope: !8027, inlinedAt: !11430)
!11498 = !DILocation(line: 354, column: 6, scope: !7961, inlinedAt: !11430)
!11499 = !DILocation(line: 355, column: 3, scope: !8027, inlinedAt: !11430)
!11500 = !DILocation(line: 356, column: 32, scope: !8035, inlinedAt: !11430)
!11501 = !DILocation(line: 356, column: 37, scope: !8035, inlinedAt: !11430)
!11502 = !DILocation(line: 356, column: 43, scope: !8035, inlinedAt: !11430)
!11503 = !DILocation(line: 356, column: 46, scope: !8035, inlinedAt: !11430)
!11504 = !DILocation(line: 356, column: 51, scope: !8035, inlinedAt: !11430)
!11505 = !DILocation(line: 356, column: 6, scope: !7961, inlinedAt: !11430)
!11506 = !DILocation(line: 357, column: 3, scope: !8035, inlinedAt: !11430)
!11507 = !DILocation(line: 358, column: 6, scope: !8043, inlinedAt: !11430)
!11508 = !DILocation(line: 358, column: 11, scope: !8043, inlinedAt: !11430)
!11509 = !DILocation(line: 358, column: 6, scope: !7961, inlinedAt: !11430)
!11510 = !DILocation(line: 358, column: 26, scope: !8043, inlinedAt: !11430)
!11511 = !DILocation(line: 359, column: 6, scope: !8048, inlinedAt: !11430)
!11512 = !DILocation(line: 359, column: 11, scope: !8048, inlinedAt: !11430)
!11513 = !DILocation(line: 359, column: 6, scope: !7961, inlinedAt: !11430)
!11514 = !DILocation(line: 359, column: 26, scope: !8048, inlinedAt: !11430)
!11515 = !DILocation(line: 360, column: 6, scope: !8053, inlinedAt: !11430)
!11516 = !DILocation(line: 360, column: 11, scope: !8053, inlinedAt: !11430)
!11517 = !DILocation(line: 360, column: 6, scope: !7961, inlinedAt: !11430)
!11518 = !DILocation(line: 360, column: 26, scope: !8053, inlinedAt: !11430)
!11519 = !DILocation(line: 361, column: 6, scope: !8058, inlinedAt: !11430)
!11520 = !DILocation(line: 361, column: 11, scope: !8058, inlinedAt: !11430)
!11521 = !DILocation(line: 361, column: 6, scope: !7961, inlinedAt: !11430)
!11522 = !DILocation(line: 361, column: 26, scope: !8058, inlinedAt: !11430)
!11523 = !DILocation(line: 362, column: 6, scope: !8063, inlinedAt: !11430)
!11524 = !DILocation(line: 362, column: 11, scope: !8063, inlinedAt: !11430)
!11525 = !DILocation(line: 362, column: 6, scope: !7961, inlinedAt: !11430)
!11526 = !DILocation(line: 362, column: 26, scope: !8063, inlinedAt: !11430)
!11527 = !DILocation(line: 363, column: 6, scope: !8068, inlinedAt: !11430)
!11528 = !DILocation(line: 363, column: 11, scope: !8068, inlinedAt: !11430)
!11529 = !DILocation(line: 363, column: 6, scope: !7961, inlinedAt: !11430)
!11530 = !DILocation(line: 363, column: 26, scope: !8068, inlinedAt: !11430)
!11531 = !DILocation(line: 364, column: 6, scope: !8073, inlinedAt: !11430)
!11532 = !DILocation(line: 364, column: 11, scope: !8073, inlinedAt: !11430)
!11533 = !DILocation(line: 364, column: 6, scope: !7961, inlinedAt: !11430)
!11534 = !DILocation(line: 364, column: 26, scope: !8073, inlinedAt: !11430)
!11535 = !DILocation(line: 365, column: 6, scope: !8078, inlinedAt: !11430)
!11536 = !DILocation(line: 365, column: 11, scope: !8078, inlinedAt: !11430)
!11537 = !DILocation(line: 365, column: 6, scope: !7961, inlinedAt: !11430)
!11538 = !DILocation(line: 365, column: 26, scope: !8078, inlinedAt: !11430)
!11539 = !DILocation(line: 366, column: 6, scope: !8083, inlinedAt: !11430)
!11540 = !DILocation(line: 366, column: 11, scope: !8083, inlinedAt: !11430)
!11541 = !DILocation(line: 366, column: 6, scope: !7961, inlinedAt: !11430)
!11542 = !DILocation(line: 366, column: 26, scope: !8083, inlinedAt: !11430)
!11543 = !DILocation(line: 367, column: 6, scope: !8088, inlinedAt: !11430)
!11544 = !DILocation(line: 367, column: 11, scope: !8088, inlinedAt: !11430)
!11545 = !DILocation(line: 367, column: 6, scope: !7961, inlinedAt: !11430)
!11546 = !DILocation(line: 367, column: 26, scope: !8088, inlinedAt: !11430)
!11547 = !DILocation(line: 368, column: 6, scope: !8093, inlinedAt: !11430)
!11548 = !DILocation(line: 368, column: 11, scope: !8093, inlinedAt: !11430)
!11549 = !DILocation(line: 368, column: 6, scope: !7961, inlinedAt: !11430)
!11550 = !DILocation(line: 368, column: 26, scope: !8093, inlinedAt: !11430)
!11551 = !DILocation(line: 369, column: 6, scope: !8098, inlinedAt: !11430)
!11552 = !DILocation(line: 369, column: 11, scope: !8098, inlinedAt: !11430)
!11553 = !DILocation(line: 369, column: 6, scope: !7961, inlinedAt: !11430)
!11554 = !DILocation(line: 369, column: 26, scope: !8098, inlinedAt: !11430)
!11555 = !DILocation(line: 370, column: 6, scope: !8103, inlinedAt: !11430)
!11556 = !DILocation(line: 370, column: 11, scope: !8103, inlinedAt: !11430)
!11557 = !DILocation(line: 370, column: 6, scope: !7961, inlinedAt: !11430)
!11558 = !DILocation(line: 370, column: 26, scope: !8103, inlinedAt: !11430)
!11559 = !DILocation(line: 371, column: 6, scope: !8108, inlinedAt: !11430)
!11560 = !DILocation(line: 371, column: 11, scope: !8108, inlinedAt: !11430)
!11561 = !DILocation(line: 371, column: 6, scope: !7961, inlinedAt: !11430)
!11562 = !DILocation(line: 371, column: 26, scope: !8108, inlinedAt: !11430)
!11563 = !DILocation(line: 372, column: 6, scope: !8113, inlinedAt: !11430)
!11564 = !DILocation(line: 372, column: 11, scope: !8113, inlinedAt: !11430)
!11565 = !DILocation(line: 372, column: 6, scope: !7961, inlinedAt: !11430)
!11566 = !DILocation(line: 372, column: 26, scope: !8113, inlinedAt: !11430)
!11567 = !DILocation(line: 373, column: 6, scope: !8118, inlinedAt: !11430)
!11568 = !DILocation(line: 373, column: 11, scope: !8118, inlinedAt: !11430)
!11569 = !DILocation(line: 373, column: 6, scope: !7961, inlinedAt: !11430)
!11570 = !DILocation(line: 373, column: 26, scope: !8118, inlinedAt: !11430)
!11571 = !DILocation(line: 374, column: 6, scope: !8123, inlinedAt: !11430)
!11572 = !DILocation(line: 374, column: 11, scope: !8123, inlinedAt: !11430)
!11573 = !DILocation(line: 374, column: 6, scope: !7961, inlinedAt: !11430)
!11574 = !DILocation(line: 374, column: 26, scope: !8123, inlinedAt: !11430)
!11575 = !DILocation(line: 375, column: 6, scope: !8128, inlinedAt: !11430)
!11576 = !DILocation(line: 375, column: 11, scope: !8128, inlinedAt: !11430)
!11577 = !DILocation(line: 375, column: 6, scope: !7961, inlinedAt: !11430)
!11578 = !DILocation(line: 375, column: 27, scope: !8128, inlinedAt: !11430)
!11579 = !DILocation(line: 376, column: 6, scope: !8133, inlinedAt: !11430)
!11580 = !DILocation(line: 376, column: 11, scope: !8133, inlinedAt: !11430)
!11581 = !DILocation(line: 376, column: 6, scope: !7961, inlinedAt: !11430)
!11582 = !DILocation(line: 376, column: 32, scope: !8133, inlinedAt: !11430)
!11583 = !DILocation(line: 377, column: 6, scope: !8138, inlinedAt: !11430)
!11584 = !DILocation(line: 377, column: 11, scope: !8138, inlinedAt: !11430)
!11585 = !DILocation(line: 377, column: 6, scope: !7961, inlinedAt: !11430)
!11586 = !DILocation(line: 377, column: 32, scope: !8138, inlinedAt: !11430)
!11587 = !DILocation(line: 378, column: 6, scope: !8143, inlinedAt: !11430)
!11588 = !DILocation(line: 378, column: 11, scope: !8143, inlinedAt: !11430)
!11589 = !DILocation(line: 378, column: 6, scope: !7961, inlinedAt: !11430)
!11590 = !DILocation(line: 378, column: 32, scope: !8143, inlinedAt: !11430)
!11591 = !DILocation(line: 379, column: 6, scope: !8148, inlinedAt: !11430)
!11592 = !DILocation(line: 379, column: 11, scope: !8148, inlinedAt: !11430)
!11593 = !DILocation(line: 379, column: 6, scope: !7961, inlinedAt: !11430)
!11594 = !DILocation(line: 379, column: 33, scope: !8148, inlinedAt: !11430)
!11595 = !DILocation(line: 380, column: 6, scope: !8153, inlinedAt: !11430)
!11596 = !DILocation(line: 380, column: 11, scope: !8153, inlinedAt: !11430)
!11597 = !DILocation(line: 380, column: 6, scope: !7961, inlinedAt: !11430)
!11598 = !DILocation(line: 380, column: 33, scope: !8153, inlinedAt: !11430)
!11599 = !DILocation(line: 381, column: 6, scope: !8158, inlinedAt: !11430)
!11600 = !DILocation(line: 381, column: 11, scope: !8158, inlinedAt: !11430)
!11601 = !DILocation(line: 381, column: 6, scope: !7961, inlinedAt: !11430)
!11602 = !DILocation(line: 381, column: 33, scope: !8158, inlinedAt: !11430)
!11603 = !DILocation(line: 382, column: 2, scope: !8163, inlinedAt: !11430)
!11604 = !DILocation(line: 382, column: 2, scope: !8167, inlinedAt: !11430)
!11605 = !DILocation(line: 382, column: 2, scope: !8168, inlinedAt: !11430)
!11606 = !DILocation(line: 386, column: 1, scope: !7961, inlinedAt: !11430)
!11607 = !DILocation(line: 547, column: 9, scope: !7944, inlinedAt: !11422)
!11608 = !DILocation(line: 549, column: 8, scope: !8174, inlinedAt: !11422)
!11609 = !DILocation(line: 549, column: 7, scope: !7944, inlinedAt: !11422)
!11610 = !DILocation(line: 550, column: 4, scope: !8174, inlinedAt: !11422)
!11611 = !DILocation(line: 553, column: 33, scope: !7944, inlinedAt: !11422)
!11612 = !DILocation(line: 325, column: 6, scope: !8179, inlinedAt: !11428)
!11613 = !DILocation(line: 325, column: 6, scope: !7955, inlinedAt: !11428)
!11614 = !DILocation(line: 326, column: 3, scope: !8179, inlinedAt: !11428)
!11615 = !DILocation(line: 332, column: 9, scope: !7955, inlinedAt: !11428)
!11616 = !DILocation(line: 332, column: 15, scope: !7955, inlinedAt: !11428)
!11617 = !DILocation(line: 332, column: 2, scope: !7955, inlinedAt: !11428)
!11618 = !DILocation(line: 336, column: 1, scope: !7955, inlinedAt: !11428)
!11619 = !DILocation(line: 553, column: 5, scope: !7944, inlinedAt: !11422)
!11620 = !DILocation(line: 553, column: 41, scope: !7944, inlinedAt: !11422)
!11621 = !DILocation(line: 554, column: 5, scope: !7944, inlinedAt: !11422)
!11622 = !DILocation(line: 554, column: 12, scope: !7944, inlinedAt: !11422)
!11623 = !DILocation(line: 448, column: 31, scope: !7939, inlinedAt: !11421)
!11624 = !DILocation(line: 448, column: 34, scope: !7939, inlinedAt: !11421)
!11625 = !DILocation(line: 448, column: 14, scope: !7939, inlinedAt: !11421)
!11626 = !DILocation(line: 450, column: 22, scope: !7939, inlinedAt: !11421)
!11627 = !DILocation(line: 450, column: 25, scope: !7939, inlinedAt: !11421)
!11628 = !DILocation(line: 450, column: 30, scope: !7939, inlinedAt: !11421)
!11629 = !DILocation(line: 450, column: 36, scope: !7939, inlinedAt: !11421)
!11630 = !DILocation(line: 450, column: 8, scope: !7939, inlinedAt: !11421)
!11631 = !DILocation(line: 450, column: 6, scope: !7939, inlinedAt: !11421)
!11632 = !DILocation(line: 451, column: 9, scope: !7939, inlinedAt: !11421)
!11633 = !DILocation(line: 552, column: 3, scope: !7944, inlinedAt: !11422)
!11634 = !DILocation(line: 557, column: 19, scope: !7946, inlinedAt: !11422)
!11635 = !DILocation(line: 557, column: 25, scope: !7946, inlinedAt: !11422)
!11636 = !DILocation(line: 557, column: 9, scope: !7946, inlinedAt: !11422)
!11637 = !DILocation(line: 557, column: 2, scope: !7946, inlinedAt: !11422)
!11638 = !DILocation(line: 558, column: 1, scope: !7946, inlinedAt: !11422)
!11639 = !DILocation(line: 591, column: 3, scope: !11423)
!11640 = !DILocation(line: 592, column: 19, scope: !11417)
!11641 = !DILocation(line: 592, column: 26, scope: !11417)
!11642 = !DILocation(line: 592, column: 9, scope: !11417)
!11643 = !DILocation(line: 592, column: 2, scope: !11417)
!11644 = !DILocation(line: 593, column: 1, scope: !11417)
!11645 = distinct !DISubprogram(name: "debounced_value", scope: !3, file: !3, line: 604, type: !11646, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!11646 = !DISubroutineType(types: !11647)
!11647 = !{!682, !3467}
!11648 = !DILocalVariable(name: "line", arg: 1, scope: !11645, file: !3, line: 604, type: !3467)
!11649 = !DILocation(line: 604, column: 42, scope: !11645)
!11650 = !DILocalVariable(name: "value", scope: !11645, file: !3, line: 606, type: !682)
!11651 = !DILocation(line: 606, column: 7, scope: !11645)
!11652 = !DILocation(line: 613, column: 10, scope: !11653)
!11653 = distinct !DILexicalBlock(scope: !11645, file: !3, line: 613, column: 10)
!11654 = !DILocation(line: 613, column: 10, scope: !11655)
!11655 = distinct !DILexicalBlock(scope: !11653, file: !3, line: 613, column: 10)
!11656 = !DILocation(line: 613, column: 10, scope: !11645)
!11657 = !DILocation(line: 613, column: 8, scope: !11645)
!11658 = !DILocation(line: 615, column: 33, scope: !11659)
!11659 = distinct !DILexicalBlock(scope: !11645, file: !3, line: 615, column: 6)
!11660 = !DILocation(line: 615, column: 39, scope: !11659)
!11661 = !DILocation(line: 615, column: 45, scope: !11659)
!11662 = !DILocation(line: 615, column: 6, scope: !11659)
!11663 = !DILocation(line: 615, column: 6, scope: !11645)
!11664 = !DILocation(line: 616, column: 12, scope: !11659)
!11665 = !DILocation(line: 616, column: 11, scope: !11659)
!11666 = !DILocation(line: 616, column: 9, scope: !11659)
!11667 = !DILocation(line: 616, column: 3, scope: !11659)
!11668 = !DILocation(line: 618, column: 9, scope: !11645)
!11669 = !DILocation(line: 618, column: 2, scope: !11645)
!11670 = distinct !DISubprogram(name: "linereq_set_values_unlocked", scope: !3, file: !3, line: 1033, type: !11671, scopeLine: 1035, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!11671 = !DISubroutineType(types: !11672)
!11672 = !{!166, !4417, !11673}
!11673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11015, size: 64)
!11674 = !DILocalVariable(name: "lr", arg: 1, scope: !11670, file: !3, line: 1033, type: !4417)
!11675 = !DILocation(line: 1033, column: 57, scope: !11670)
!11676 = !DILocalVariable(name: "lv", arg: 2, scope: !11670, file: !3, line: 1034, type: !11673)
!11677 = !DILocation(line: 1034, column: 34, scope: !11670)
!11678 = !DILocalVariable(name: "vals", scope: !11670, file: !3, line: 1036, type: !414)
!11679 = !DILocation(line: 1036, column: 2, scope: !11670)
!11680 = !DILocalVariable(name: "descs", scope: !11670, file: !3, line: 1037, type: !11023)
!11681 = !DILocation(line: 1037, column: 21, scope: !11670)
!11682 = !DILocalVariable(name: "i", scope: !11670, file: !3, line: 1038, type: !7)
!11683 = !DILocation(line: 1038, column: 15, scope: !11670)
!11684 = !DILocalVariable(name: "didx", scope: !11670, file: !3, line: 1038, type: !7)
!11685 = !DILocation(line: 1038, column: 18, scope: !11670)
!11686 = !DILocalVariable(name: "num_set", scope: !11670, file: !3, line: 1038, type: !7)
!11687 = !DILocation(line: 1038, column: 24, scope: !11670)
!11688 = !DILocalVariable(name: "ret", scope: !11670, file: !3, line: 1039, type: !236)
!11689 = !DILocation(line: 1039, column: 6, scope: !11670)
!11690 = !DILocation(line: 1041, column: 14, scope: !11670)
!11691 = !DILocation(line: 1041, column: 2, scope: !11670)
!11692 = !DILocation(line: 1042, column: 15, scope: !11693)
!11693 = distinct !DILexicalBlock(scope: !11670, file: !3, line: 1042, column: 2)
!11694 = !DILocation(line: 1042, column: 22, scope: !11693)
!11695 = !DILocation(line: 1042, column: 7, scope: !11693)
!11696 = !DILocation(line: 1042, column: 27, scope: !11697)
!11697 = distinct !DILexicalBlock(scope: !11693, file: !3, line: 1042, column: 2)
!11698 = !DILocation(line: 1042, column: 31, scope: !11697)
!11699 = !DILocation(line: 1042, column: 35, scope: !11697)
!11700 = !DILocation(line: 1042, column: 29, scope: !11697)
!11701 = !DILocation(line: 1042, column: 2, scope: !11693)
!11702 = !DILocation(line: 1043, column: 7, scope: !11703)
!11703 = distinct !DILexicalBlock(scope: !11704, file: !3, line: 1043, column: 7)
!11704 = distinct !DILexicalBlock(scope: !11697, file: !3, line: 1042, column: 51)
!11705 = !DILocation(line: 1043, column: 11, scope: !11703)
!11706 = !DILocation(line: 1043, column: 18, scope: !11703)
!11707 = !DILocation(line: 1043, column: 16, scope: !11703)
!11708 = !DILocation(line: 1043, column: 7, scope: !11704)
!11709 = !DILocation(line: 1044, column: 32, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11711, file: !3, line: 1044, column: 8)
!11711 = distinct !DILexicalBlock(scope: !11703, file: !3, line: 1043, column: 30)
!11712 = !DILocation(line: 1044, column: 36, scope: !11710)
!11713 = !DILocation(line: 1044, column: 42, scope: !11710)
!11714 = !DILocation(line: 1044, column: 45, scope: !11710)
!11715 = !DILocation(line: 1044, column: 51, scope: !11710)
!11716 = !DILocation(line: 1044, column: 9, scope: !11710)
!11717 = !DILocation(line: 1044, column: 8, scope: !11711)
!11718 = !DILocation(line: 1045, column: 5, scope: !11710)
!11719 = !DILocation(line: 1046, column: 8, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11711, file: !3, line: 1046, column: 8)
!11721 = !DILocation(line: 1046, column: 12, scope: !11720)
!11722 = !DILocation(line: 1046, column: 19, scope: !11720)
!11723 = !DILocation(line: 1046, column: 17, scope: !11720)
!11724 = !DILocation(line: 1046, column: 8, scope: !11711)
!11725 = !DILocation(line: 1047, column: 15, scope: !11720)
!11726 = !DILocation(line: 1047, column: 24, scope: !11720)
!11727 = !DILocation(line: 1047, column: 5, scope: !11720)
!11728 = !DILocation(line: 1048, column: 11, scope: !11711)
!11729 = !DILocation(line: 1049, column: 13, scope: !11711)
!11730 = !DILocation(line: 1049, column: 17, scope: !11711)
!11731 = !DILocation(line: 1049, column: 23, scope: !11711)
!11732 = !DILocation(line: 1049, column: 26, scope: !11711)
!11733 = !DILocation(line: 1049, column: 10, scope: !11711)
!11734 = !DILocation(line: 1050, column: 3, scope: !11711)
!11735 = !DILocation(line: 1051, column: 2, scope: !11704)
!11736 = !DILocation(line: 1042, column: 47, scope: !11697)
!11737 = !DILocation(line: 1042, column: 2, scope: !11697)
!11738 = distinct !{!11738, !11701, !11739}
!11739 = !DILocation(line: 1051, column: 2, scope: !11693)
!11740 = !DILocation(line: 1052, column: 6, scope: !11741)
!11741 = distinct !DILexicalBlock(scope: !11670, file: !3, line: 1052, column: 6)
!11742 = !DILocation(line: 1052, column: 14, scope: !11741)
!11743 = !DILocation(line: 1052, column: 6, scope: !11670)
!11744 = !DILocation(line: 1053, column: 3, scope: !11741)
!11745 = !DILocation(line: 1055, column: 6, scope: !11746)
!11746 = distinct !DILexicalBlock(scope: !11670, file: !3, line: 1055, column: 6)
!11747 = !DILocation(line: 1055, column: 14, scope: !11746)
!11748 = !DILocation(line: 1055, column: 6, scope: !11670)
!11749 = !DILocation(line: 1057, column: 25, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11746, file: !3, line: 1055, column: 20)
!11751 = !DILocation(line: 1057, column: 11, scope: !11750)
!11752 = !DILocation(line: 1057, column: 9, scope: !11750)
!11753 = !DILocation(line: 1058, column: 8, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !11750, file: !3, line: 1058, column: 7)
!11755 = !DILocation(line: 1058, column: 7, scope: !11750)
!11756 = !DILocation(line: 1059, column: 4, scope: !11754)
!11757 = !DILocation(line: 1060, column: 13, scope: !11758)
!11758 = distinct !DILexicalBlock(scope: !11750, file: !3, line: 1060, column: 3)
!11759 = !DILocation(line: 1060, column: 20, scope: !11758)
!11760 = !DILocation(line: 1060, column: 8, scope: !11758)
!11761 = !DILocation(line: 1060, column: 25, scope: !11762)
!11762 = distinct !DILexicalBlock(scope: !11758, file: !3, line: 1060, column: 3)
!11763 = !DILocation(line: 1060, column: 29, scope: !11762)
!11764 = !DILocation(line: 1060, column: 33, scope: !11762)
!11765 = !DILocation(line: 1060, column: 27, scope: !11762)
!11766 = !DILocation(line: 1060, column: 3, scope: !11758)
!11767 = !DILocation(line: 1061, column: 8, scope: !11768)
!11768 = distinct !DILexicalBlock(scope: !11769, file: !3, line: 1061, column: 8)
!11769 = distinct !DILexicalBlock(scope: !11762, file: !3, line: 1060, column: 49)
!11770 = !DILocation(line: 1061, column: 12, scope: !11768)
!11771 = !DILocation(line: 1061, column: 19, scope: !11768)
!11772 = !DILocation(line: 1061, column: 17, scope: !11768)
!11773 = !DILocation(line: 1061, column: 8, scope: !11769)
!11774 = !DILocation(line: 1062, column: 19, scope: !11775)
!11775 = distinct !DILexicalBlock(scope: !11768, file: !3, line: 1061, column: 31)
!11776 = !DILocation(line: 1062, column: 23, scope: !11775)
!11777 = !DILocation(line: 1062, column: 29, scope: !11775)
!11778 = !DILocation(line: 1062, column: 32, scope: !11775)
!11779 = !DILocation(line: 1062, column: 5, scope: !11775)
!11780 = !DILocation(line: 1062, column: 11, scope: !11775)
!11781 = !DILocation(line: 1062, column: 17, scope: !11775)
!11782 = !DILocation(line: 1063, column: 9, scope: !11775)
!11783 = !DILocation(line: 1064, column: 4, scope: !11775)
!11784 = !DILocation(line: 1065, column: 3, scope: !11769)
!11785 = !DILocation(line: 1060, column: 45, scope: !11762)
!11786 = !DILocation(line: 1060, column: 3, scope: !11762)
!11787 = distinct !{!11787, !11766, !11788}
!11788 = !DILocation(line: 1065, column: 3, scope: !11758)
!11789 = !DILocation(line: 1066, column: 2, scope: !11750)
!11790 = !DILocation(line: 1067, column: 51, scope: !11670)
!11791 = !DILocation(line: 1068, column: 10, scope: !11670)
!11792 = !DILocation(line: 1068, column: 23, scope: !11670)
!11793 = !DILocation(line: 1067, column: 8, scope: !11670)
!11794 = !DILocation(line: 1067, column: 6, scope: !11670)
!11795 = !DILocation(line: 1070, column: 6, scope: !11796)
!11796 = distinct !DILexicalBlock(scope: !11670, file: !3, line: 1070, column: 6)
!11797 = !DILocation(line: 1070, column: 14, scope: !11796)
!11798 = !DILocation(line: 1070, column: 6, scope: !11670)
!11799 = !DILocation(line: 1071, column: 9, scope: !11796)
!11800 = !DILocation(line: 1071, column: 3, scope: !11796)
!11801 = !DILocation(line: 1072, column: 9, scope: !11670)
!11802 = !DILocation(line: 1072, column: 2, scope: !11670)
!11803 = !DILocation(line: 1073, column: 1, scope: !11670)
!11804 = distinct !DISubprogram(name: "bitmap_zero", scope: !11805, file: !11805, line: 235, type: !11806, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!11805 = !DIFile(filename: "./include/linux/bitmap.h", directory: "/home/lizy2001/genbc/linux")
!11806 = !DISubroutineType(types: !11807)
!11807 = !{null, !3459, !7}
!11808 = !DILocalVariable(name: "dst", arg: 1, scope: !11804, file: !11805, line: 235, type: !3459)
!11809 = !DILocation(line: 235, column: 47, scope: !11804)
!11810 = !DILocalVariable(name: "nbits", arg: 2, scope: !11804, file: !11805, line: 235, type: !7)
!11811 = !DILocation(line: 235, column: 65, scope: !11804)
!11812 = !DILocalVariable(name: "len", scope: !11804, file: !11805, line: 237, type: !7)
!11813 = !DILocation(line: 237, column: 15, scope: !11804)
!11814 = !DILocation(line: 237, column: 21, scope: !11804)
!11815 = !DILocation(line: 237, column: 42, scope: !11804)
!11816 = !DILocation(line: 238, column: 9, scope: !11804)
!11817 = !DILocation(line: 238, column: 2, scope: !11804)
!11818 = !DILocation(line: 238, column: 17, scope: !11804)
!11819 = !DILocation(line: 239, column: 1, scope: !11804)
!11820 = distinct !DISubprogram(name: "linereq_set_config_unlocked", scope: !3, file: !3, line: 1092, type: !11821, scopeLine: 1094, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!11821 = !DISubroutineType(types: !11822)
!11822 = !{!166, !4417, !7315}
!11823 = !DILocalVariable(name: "lr", arg: 1, scope: !11820, file: !3, line: 1092, type: !4417)
!11824 = !DILocation(line: 1092, column: 57, scope: !11820)
!11825 = !DILocalVariable(name: "lc", arg: 2, scope: !11820, file: !3, line: 1093, type: !7315)
!11826 = !DILocation(line: 1093, column: 34, scope: !11820)
!11827 = !DILocalVariable(name: "desc", scope: !11820, file: !3, line: 1095, type: !3471)
!11828 = !DILocation(line: 1095, column: 20, scope: !11820)
!11829 = !DILocalVariable(name: "i", scope: !11820, file: !3, line: 1096, type: !7)
!11830 = !DILocation(line: 1096, column: 15, scope: !11820)
!11831 = !DILocalVariable(name: "flags", scope: !11820, file: !3, line: 1097, type: !272)
!11832 = !DILocation(line: 1097, column: 6, scope: !11820)
!11833 = !DILocalVariable(name: "polarity_change", scope: !11820, file: !3, line: 1098, type: !682)
!11834 = !DILocation(line: 1098, column: 7, scope: !11820)
!11835 = !DILocalVariable(name: "ret", scope: !11820, file: !3, line: 1099, type: !236)
!11836 = !DILocation(line: 1099, column: 6, scope: !11820)
!11837 = !DILocation(line: 1101, column: 9, scope: !11838)
!11838 = distinct !DILexicalBlock(scope: !11820, file: !3, line: 1101, column: 2)
!11839 = !DILocation(line: 1101, column: 7, scope: !11838)
!11840 = !DILocation(line: 1101, column: 14, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !11838, file: !3, line: 1101, column: 2)
!11842 = !DILocation(line: 1101, column: 18, scope: !11841)
!11843 = !DILocation(line: 1101, column: 22, scope: !11841)
!11844 = !DILocation(line: 1101, column: 16, scope: !11841)
!11845 = !DILocation(line: 1101, column: 2, scope: !11838)
!11846 = !DILocation(line: 1102, column: 10, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11841, file: !3, line: 1101, column: 38)
!11848 = !DILocation(line: 1102, column: 14, scope: !11847)
!11849 = !DILocation(line: 1102, column: 20, scope: !11847)
!11850 = !DILocation(line: 1102, column: 23, scope: !11847)
!11851 = !DILocation(line: 1102, column: 8, scope: !11847)
!11852 = !DILocation(line: 1103, column: 37, scope: !11847)
!11853 = !DILocation(line: 1103, column: 41, scope: !11847)
!11854 = !DILocation(line: 1103, column: 11, scope: !11847)
!11855 = !DILocation(line: 1103, column: 9, scope: !11847)
!11856 = !DILocation(line: 1105, column: 34, scope: !11847)
!11857 = !DILocation(line: 1105, column: 40, scope: !11847)
!11858 = !DILocation(line: 1105, column: 7, scope: !11847)
!11859 = !DILocation(line: 1105, column: 6, scope: !11847)
!11860 = !DILocation(line: 1105, column: 5, scope: !11847)
!11861 = !DILocation(line: 1106, column: 7, scope: !11847)
!11862 = !DILocation(line: 1106, column: 13, scope: !11847)
!11863 = !DILocation(line: 1106, column: 45, scope: !11847)
!11864 = !DILocation(line: 1105, column: 47, scope: !11847)
!11865 = !DILocation(line: 1104, column: 19, scope: !11847)
!11866 = !DILocation(line: 1108, column: 43, scope: !11847)
!11867 = !DILocation(line: 1108, column: 51, scope: !11847)
!11868 = !DILocation(line: 1108, column: 57, scope: !11847)
!11869 = !DILocation(line: 1108, column: 3, scope: !11847)
!11870 = !DILocation(line: 1113, column: 7, scope: !11871)
!11871 = distinct !DILexicalBlock(scope: !11847, file: !3, line: 1113, column: 7)
!11872 = !DILocation(line: 1113, column: 13, scope: !11871)
!11873 = !DILocation(line: 1113, column: 7, scope: !11847)
!11874 = !DILocalVariable(name: "val", scope: !11875, file: !3, line: 1114, type: !236)
!11875 = distinct !DILexicalBlock(scope: !11871, file: !3, line: 1113, column: 41)
!11876 = !DILocation(line: 1114, column: 8, scope: !11875)
!11877 = !DILocation(line: 1114, column: 47, scope: !11875)
!11878 = !DILocation(line: 1114, column: 51, scope: !11875)
!11879 = !DILocation(line: 1114, column: 14, scope: !11875)
!11880 = !DILocation(line: 1116, column: 24, scope: !11875)
!11881 = !DILocation(line: 1116, column: 28, scope: !11875)
!11882 = !DILocation(line: 1116, column: 34, scope: !11875)
!11883 = !DILocation(line: 1116, column: 4, scope: !11875)
!11884 = !DILocation(line: 1117, column: 33, scope: !11875)
!11885 = !DILocation(line: 1117, column: 39, scope: !11875)
!11886 = !DILocation(line: 1117, column: 10, scope: !11875)
!11887 = !DILocation(line: 1117, column: 8, scope: !11875)
!11888 = !DILocation(line: 1118, column: 8, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11875, file: !3, line: 1118, column: 8)
!11890 = !DILocation(line: 1118, column: 8, scope: !11875)
!11891 = !DILocation(line: 1119, column: 12, scope: !11889)
!11892 = !DILocation(line: 1119, column: 5, scope: !11889)
!11893 = !DILocation(line: 1120, column: 3, scope: !11875)
!11894 = !DILocation(line: 1120, column: 14, scope: !11895)
!11895 = distinct !DILexicalBlock(scope: !11871, file: !3, line: 1120, column: 14)
!11896 = !DILocation(line: 1120, column: 20, scope: !11895)
!11897 = !DILocation(line: 1120, column: 14, scope: !11871)
!11898 = !DILocation(line: 1121, column: 32, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11895, file: !3, line: 1120, column: 47)
!11900 = !DILocation(line: 1121, column: 10, scope: !11899)
!11901 = !DILocation(line: 1121, column: 8, scope: !11899)
!11902 = !DILocation(line: 1122, column: 8, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11899, file: !3, line: 1122, column: 8)
!11904 = !DILocation(line: 1122, column: 8, scope: !11899)
!11905 = !DILocation(line: 1123, column: 12, scope: !11903)
!11906 = !DILocation(line: 1123, column: 5, scope: !11903)
!11907 = !DILocation(line: 1125, column: 32, scope: !11899)
!11908 = !DILocation(line: 1125, column: 36, scope: !11899)
!11909 = !DILocation(line: 1125, column: 42, scope: !11899)
!11910 = !DILocation(line: 1125, column: 46, scope: !11899)
!11911 = !DILocation(line: 1125, column: 50, scope: !11899)
!11912 = !DILocation(line: 1126, column: 6, scope: !11899)
!11913 = !DILocation(line: 1126, column: 12, scope: !11899)
!11914 = !DILocation(line: 1127, column: 6, scope: !11899)
!11915 = !DILocation(line: 1125, column: 10, scope: !11899)
!11916 = !DILocation(line: 1125, column: 8, scope: !11899)
!11917 = !DILocation(line: 1128, column: 8, scope: !11918)
!11918 = distinct !DILexicalBlock(scope: !11899, file: !3, line: 1128, column: 8)
!11919 = !DILocation(line: 1128, column: 8, scope: !11899)
!11920 = !DILocation(line: 1129, column: 12, scope: !11918)
!11921 = !DILocation(line: 1129, column: 5, scope: !11918)
!11922 = !DILocation(line: 1130, column: 3, scope: !11899)
!11923 = !DILocation(line: 1132, column: 33, scope: !11847)
!11924 = !DILocation(line: 1132, column: 39, scope: !11847)
!11925 = !DILocation(line: 1132, column: 45, scope: !11847)
!11926 = !DILocation(line: 1134, column: 11, scope: !11847)
!11927 = !DILocation(line: 1132, column: 3, scope: !11847)
!11928 = !DILocation(line: 1135, column: 2, scope: !11847)
!11929 = !DILocation(line: 1101, column: 34, scope: !11841)
!11930 = !DILocation(line: 1101, column: 2, scope: !11841)
!11931 = distinct !{!11931, !11845, !11932}
!11932 = !DILocation(line: 1135, column: 2, scope: !11838)
!11933 = !DILocation(line: 1136, column: 2, scope: !11820)
!11934 = !DILocation(line: 1137, column: 1, scope: !11820)
!11935 = distinct !DISubprogram(name: "edge_detector_stop", scope: !3, file: !3, line: 749, type: !11936, scopeLine: 750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!11936 = !DISubroutineType(types: !11937)
!11937 = !{null, !3467}
!11938 = !DILocalVariable(name: "line", arg: 1, scope: !11935, file: !3, line: 749, type: !3467)
!11939 = !DILocation(line: 749, column: 45, scope: !11935)
!11940 = !DILocation(line: 751, column: 6, scope: !11941)
!11941 = distinct !DILexicalBlock(scope: !11935, file: !3, line: 751, column: 6)
!11942 = !DILocation(line: 751, column: 12, scope: !11941)
!11943 = !DILocation(line: 751, column: 6, scope: !11935)
!11944 = !DILocation(line: 752, column: 12, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11941, file: !3, line: 751, column: 17)
!11946 = !DILocation(line: 752, column: 18, scope: !11945)
!11947 = !DILocation(line: 752, column: 23, scope: !11945)
!11948 = !DILocation(line: 752, column: 3, scope: !11945)
!11949 = !DILocation(line: 753, column: 3, scope: !11945)
!11950 = !DILocation(line: 753, column: 9, scope: !11945)
!11951 = !DILocation(line: 753, column: 13, scope: !11945)
!11952 = !DILocation(line: 754, column: 2, scope: !11945)
!11953 = !DILocation(line: 756, column: 28, scope: !11935)
!11954 = !DILocation(line: 756, column: 34, scope: !11935)
!11955 = !DILocation(line: 756, column: 2, scope: !11935)
!11956 = !DILocation(line: 757, column: 2, scope: !11935)
!11957 = !DILocation(line: 757, column: 2, scope: !11958)
!11958 = distinct !DILexicalBlock(scope: !11935, file: !3, line: 757, column: 2)
!11959 = !DILocation(line: 757, column: 2, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11958, file: !3, line: 757, column: 2)
!11961 = !DILocation(line: 757, column: 2, scope: !11962)
!11962 = distinct !DILexicalBlock(scope: !11958, file: !3, line: 757, column: 2)
!11963 = !DILocation(line: 758, column: 2, scope: !11935)
!11964 = !DILocation(line: 758, column: 8, scope: !11935)
!11965 = !DILocation(line: 758, column: 15, scope: !11935)
!11966 = !DILocation(line: 760, column: 1, scope: !11935)
!11967 = distinct !DISubprogram(name: "edge_detector_update", scope: !3, file: !3, line: 812, type: !11968, scopeLine: 816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!11968 = !DISubroutineType(types: !11969)
!11969 = !{!236, !3467, !7315, !7, !272, !682}
!11970 = !DILocalVariable(name: "line", arg: 1, scope: !11967, file: !3, line: 812, type: !3467)
!11971 = !DILocation(line: 812, column: 46, scope: !11967)
!11972 = !DILocalVariable(name: "lc", arg: 2, scope: !11967, file: !3, line: 813, type: !7315)
!11973 = !DILocation(line: 813, column: 33, scope: !11967)
!11974 = !DILocalVariable(name: "line_idx", arg: 3, scope: !11967, file: !3, line: 814, type: !7)
!11975 = !DILocation(line: 814, column: 18, scope: !11967)
!11976 = !DILocalVariable(name: "eflags", arg: 4, scope: !11967, file: !3, line: 815, type: !272)
!11977 = !DILocation(line: 815, column: 9, scope: !11967)
!11978 = !DILocalVariable(name: "polarity_change", arg: 5, scope: !11967, file: !3, line: 815, type: !682)
!11979 = !DILocation(line: 815, column: 22, scope: !11967)
!11980 = !DILocalVariable(name: "debounce_period_us", scope: !11967, file: !3, line: 817, type: !7)
!11981 = !DILocation(line: 817, column: 15, scope: !11967)
!11982 = !DILocation(line: 818, column: 39, scope: !11967)
!11983 = !DILocation(line: 818, column: 43, scope: !11967)
!11984 = !DILocation(line: 818, column: 3, scope: !11967)
!11985 = !DILocation(line: 820, column: 7, scope: !11986)
!11986 = distinct !DILexicalBlock(scope: !11967, file: !3, line: 820, column: 6)
!11987 = !DILocation(line: 820, column: 13, scope: !11986)
!11988 = !DILocation(line: 820, column: 23, scope: !11986)
!11989 = !DILocation(line: 820, column: 20, scope: !11986)
!11990 = !DILocation(line: 820, column: 31, scope: !11986)
!11991 = !DILocation(line: 820, column: 35, scope: !11986)
!11992 = !DILocation(line: 820, column: 51, scope: !11986)
!11993 = !DILocation(line: 821, column: 7, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11986, file: !3, line: 821, column: 7)
!11995 = !DILocation(line: 821, column: 7, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 821, column: 7)
!11997 = !DILocation(line: 821, column: 52, scope: !11986)
!11998 = !DILocation(line: 821, column: 49, scope: !11986)
!11999 = !DILocation(line: 820, column: 6, scope: !11967)
!12000 = !DILocation(line: 822, column: 3, scope: !11986)
!12001 = !DILocation(line: 825, column: 6, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !11967, file: !3, line: 825, column: 6)
!12003 = !DILocation(line: 825, column: 25, scope: !12002)
!12004 = !DILocation(line: 825, column: 28, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !12002, file: !3, line: 825, column: 28)
!12006 = !DILocation(line: 825, column: 28, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !12005, file: !3, line: 825, column: 28)
!12008 = !DILocation(line: 825, column: 28, scope: !12002)
!12009 = !DILocation(line: 825, column: 6, scope: !11967)
!12010 = !DILocation(line: 826, column: 18, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !12002, file: !3, line: 825, column: 59)
!12012 = !DILocation(line: 826, column: 3, scope: !12011)
!12013 = !DILocation(line: 826, column: 9, scope: !12011)
!12014 = !DILocation(line: 826, column: 16, scope: !12011)
!12015 = !DILocation(line: 827, column: 3, scope: !12011)
!12016 = !DILocation(line: 827, column: 3, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !12011, file: !3, line: 827, column: 3)
!12018 = !DILocation(line: 827, column: 3, scope: !12019)
!12019 = distinct !DILexicalBlock(scope: !12017, file: !3, line: 827, column: 3)
!12020 = !DILocation(line: 827, column: 3, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12017, file: !3, line: 827, column: 3)
!12022 = !DILocation(line: 828, column: 3, scope: !12011)
!12023 = !DILocation(line: 832, column: 7, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !11967, file: !3, line: 832, column: 6)
!12025 = !DILocation(line: 832, column: 13, scope: !12024)
!12026 = !DILocation(line: 832, column: 17, scope: !12024)
!12027 = !DILocation(line: 832, column: 21, scope: !12028)
!12028 = distinct !DILexicalBlock(scope: !12024, file: !3, line: 832, column: 21)
!12029 = !DILocation(line: 832, column: 21, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !12028, file: !3, line: 832, column: 21)
!12031 = !DILocation(line: 832, column: 21, scope: !12024)
!12032 = !DILocation(line: 832, column: 52, scope: !12024)
!12033 = !DILocation(line: 833, column: 8, scope: !12024)
!12034 = !DILocation(line: 833, column: 27, scope: !12024)
!12035 = !DILocation(line: 833, column: 30, scope: !12036)
!12036 = distinct !DILexicalBlock(scope: !12024, file: !3, line: 833, column: 30)
!12037 = !DILocation(line: 833, column: 30, scope: !12038)
!12038 = distinct !DILexicalBlock(scope: !12036, file: !3, line: 833, column: 30)
!12039 = !DILocation(line: 833, column: 30, scope: !12024)
!12040 = !DILocation(line: 832, column: 6, scope: !11967)
!12041 = !DILocation(line: 834, column: 22, scope: !12024)
!12042 = !DILocation(line: 834, column: 3, scope: !12024)
!12043 = !DILocation(line: 836, column: 29, scope: !11967)
!12044 = !DILocation(line: 836, column: 35, scope: !11967)
!12045 = !DILocation(line: 836, column: 39, scope: !11967)
!12046 = !DILocation(line: 836, column: 49, scope: !11967)
!12047 = !DILocation(line: 836, column: 9, scope: !11967)
!12048 = !DILocation(line: 836, column: 2, scope: !11967)
!12049 = !DILocation(line: 837, column: 1, scope: !11967)
!12050 = distinct !DISubprogram(name: "lineinfo_changed_notify", scope: !3, file: !3, line: 2131, type: !4408, scopeLine: 2133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!12051 = !DILocation(line: 407, column: 64, scope: !5980, inlinedAt: !12052)
!12052 = distinct !DILocation(line: 2147, column: 8, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !12050, file: !3, line: 2147, column: 8)
!12054 = !DILocation(line: 407, column: 84, scope: !5980, inlinedAt: !12052)
!12055 = !DILocation(line: 327, column: 67, scope: !5988, inlinedAt: !12056)
!12056 = distinct !DILocation(line: 2147, column: 8, scope: !12057)
!12057 = distinct !DILexicalBlock(scope: !12058, file: !3, line: 2147, column: 8)
!12058 = distinct !DILexicalBlock(scope: !12059, file: !3, line: 2147, column: 8)
!12059 = distinct !DILexicalBlock(scope: !12060, file: !3, line: 2147, column: 8)
!12060 = distinct !DILexicalBlock(scope: !12061, file: !3, line: 2147, column: 8)
!12061 = distinct !DILexicalBlock(scope: !12053, file: !3, line: 2147, column: 8)
!12062 = !DILocalVariable(name: "nb", arg: 1, scope: !12050, file: !3, line: 2131, type: !4402)
!12063 = !DILocation(line: 2131, column: 59, scope: !12050)
!12064 = !DILocalVariable(name: "action", arg: 2, scope: !12050, file: !3, line: 2132, type: !215)
!12065 = !DILocation(line: 2132, column: 22, scope: !12050)
!12066 = !DILocalVariable(name: "data", arg: 3, scope: !12050, file: !3, line: 2132, type: !224)
!12067 = !DILocation(line: 2132, column: 36, scope: !12050)
!12068 = !DILocalVariable(name: "cdev", scope: !12050, file: !3, line: 2134, type: !4480)
!12069 = !DILocation(line: 2134, column: 28, scope: !12050)
!12070 = !DILocation(line: 2134, column: 56, scope: !12050)
!12071 = !DILocation(line: 2134, column: 35, scope: !12050)
!12072 = !DILocalVariable(name: "chg", scope: !12050, file: !3, line: 2135, type: !4494)
!12073 = !DILocation(line: 2135, column: 35, scope: !12050)
!12074 = !DILocalVariable(name: "desc", scope: !12050, file: !3, line: 2136, type: !3471)
!12075 = !DILocation(line: 2136, column: 20, scope: !12050)
!12076 = !DILocation(line: 2136, column: 27, scope: !12050)
!12077 = !DILocalVariable(name: "ret", scope: !12050, file: !3, line: 2137, type: !236)
!12078 = !DILocation(line: 2137, column: 6, scope: !12050)
!12079 = !DILocation(line: 2139, column: 33, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !12050, file: !3, line: 2139, column: 6)
!12081 = !DILocation(line: 2139, column: 16, scope: !12080)
!12082 = !DILocation(line: 2139, column: 40, scope: !12080)
!12083 = !DILocation(line: 2139, column: 46, scope: !12080)
!12084 = !DILocation(line: 2139, column: 7, scope: !12080)
!12085 = !DILocation(line: 2139, column: 6, scope: !12050)
!12086 = !DILocation(line: 2140, column: 3, scope: !12080)
!12087 = !DILocation(line: 2142, column: 2, scope: !12050)
!12088 = !DILocation(line: 2143, column: 19, scope: !12050)
!12089 = !DILocation(line: 2143, column: 6, scope: !12050)
!12090 = !DILocation(line: 2143, column: 17, scope: !12050)
!12091 = !DILocation(line: 2144, column: 21, scope: !12050)
!12092 = !DILocation(line: 2144, column: 6, scope: !12050)
!12093 = !DILocation(line: 2144, column: 19, scope: !12050)
!12094 = !DILocation(line: 2145, column: 24, scope: !12050)
!12095 = !DILocation(line: 2145, column: 35, scope: !12050)
!12096 = !DILocation(line: 2145, column: 2, scope: !12050)
!12097 = !DILocalVariable(name: "__flags", scope: !12053, file: !3, line: 2147, type: !215)
!12098 = !DILocation(line: 2147, column: 8, scope: !12053)
!12099 = !DILocalVariable(name: "__ret", scope: !12053, file: !3, line: 2147, type: !7)
!12100 = !DILocation(line: 2147, column: 8, scope: !12061)
!12101 = !DILocalVariable(name: "__dummy", scope: !12102, file: !3, line: 2147, type: !215)
!12102 = distinct !DILexicalBlock(scope: !12060, file: !3, line: 2147, column: 8)
!12103 = !DILocation(line: 2147, column: 8, scope: !12102)
!12104 = !DILocalVariable(name: "__dummy2", scope: !12102, file: !3, line: 2147, type: !215)
!12105 = !DILocation(line: 2147, column: 8, scope: !12060)
!12106 = !DILocation(line: 2147, column: 8, scope: !12059)
!12107 = !DILocation(line: 2147, column: 8, scope: !12108)
!12108 = distinct !DILexicalBlock(scope: !12059, file: !3, line: 2147, column: 8)
!12109 = !DILocalVariable(name: "__dummy", scope: !12110, file: !3, line: 2147, type: !215)
!12110 = distinct !DILexicalBlock(scope: !12111, file: !3, line: 2147, column: 8)
!12111 = distinct !DILexicalBlock(scope: !12108, file: !3, line: 2147, column: 8)
!12112 = !DILocation(line: 2147, column: 8, scope: !12110)
!12113 = !DILocalVariable(name: "__dummy2", scope: !12110, file: !3, line: 2147, type: !215)
!12114 = !DILocation(line: 2147, column: 8, scope: !12111)
!12115 = !DILocation(line: 2147, column: 8, scope: !12058)
!12116 = !{i32 -2141429352}
!12117 = !DILocation(line: 2147, column: 8, scope: !12057)
!12118 = !DILocation(line: 329, column: 10, scope: !5988, inlinedAt: !12056)
!12119 = !DILocation(line: 329, column: 16, scope: !5988, inlinedAt: !12056)
!12120 = !DILocalVariable(name: "__tmp", scope: !12121, file: !3, line: 2147, type: !4760)
!12121 = distinct !DILexicalBlock(scope: !12053, file: !3, line: 2147, column: 8)
!12122 = !DILocation(line: 2147, column: 8, scope: !12121)
!12123 = !DILocalVariable(name: "__buf", scope: !12121, file: !3, line: 2147, type: !4527)
!12124 = !DILocalVariable(name: "__n", scope: !12121, file: !3, line: 2147, type: !215)
!12125 = !DILocalVariable(name: "__recsize", scope: !12121, file: !3, line: 2147, type: !4854)
!12126 = !DILocalVariable(name: "__kfifo", scope: !12121, file: !3, line: 2147, type: !4856)
!12127 = !DILocation(line: 409, column: 2, scope: !6201, inlinedAt: !12052)
!12128 = !DILocation(line: 409, column: 2, scope: !6206, inlinedAt: !12052)
!12129 = !DILocation(line: 409, column: 2, scope: !6207, inlinedAt: !12052)
!12130 = !DILocation(line: 409, column: 2, scope: !6214, inlinedAt: !12052)
!12131 = !DILocation(line: 409, column: 2, scope: !6217, inlinedAt: !12052)
!12132 = !DILocation(line: 2147, column: 6, scope: !12050)
!12133 = !DILocation(line: 2148, column: 6, scope: !12134)
!12134 = distinct !DILexicalBlock(scope: !12050, file: !3, line: 2148, column: 6)
!12135 = !DILocation(line: 2148, column: 6, scope: !12050)
!12136 = !DILocation(line: 2149, column: 3, scope: !12134)
!12137 = !DILocation(line: 2151, column: 3, scope: !12138)
!12138 = distinct !DILexicalBlock(scope: !12139, file: !3, line: 2151, column: 3)
!12139 = distinct !DILexicalBlock(scope: !12134, file: !3, line: 2151, column: 3)
!12140 = !DILocation(line: 2151, column: 3, scope: !12139)
!12141 = !DILocation(line: 2153, column: 2, scope: !12050)
!12142 = !DILocation(line: 2154, column: 1, scope: !12050)
!12143 = distinct !DISubprogram(name: "to_gpio_chardev_data", scope: !3, file: !3, line: 2126, type: !12144, scopeLine: 2127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !281)
!12144 = !DISubroutineType(types: !12145)
!12145 = !{!4480, !4402}
!12146 = !DILocalVariable(name: "nb", arg: 1, scope: !12143, file: !3, line: 2126, type: !4402)
!12147 = !DILocation(line: 2126, column: 45, scope: !12143)
!12148 = !DILocalVariable(name: "__mptr", scope: !12149, file: !3, line: 2128, type: !224)
!12149 = distinct !DILexicalBlock(scope: !12143, file: !3, line: 2128, column: 9)
!12150 = !DILocation(line: 2128, column: 9, scope: !12149)
!12151 = !DILocation(line: 2128, column: 9, scope: !12152)
!12152 = distinct !DILexicalBlock(scope: !12149, file: !3, line: 2128, column: 9)
!12153 = !DILocation(line: 2128, column: 2, scope: !12143)
